items:
- uid: System.Data.SqlTypes.SqlDateTime
  commentId: T:System.Data.SqlTypes.SqlDateTime
  id: SqlDateTime
  parent: System.Data.SqlTypes
  children:
  - System.Data.SqlTypes.SqlDateTime.#ctor(System.DateTime)
  - System.Data.SqlTypes.SqlDateTime.#ctor(System.Int32,System.Int32)
  - System.Data.SqlTypes.SqlDateTime.#ctor(System.Int32,System.Int32,System.Int32)
  - System.Data.SqlTypes.SqlDateTime.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  - System.Data.SqlTypes.SqlDateTime.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Double)
  - System.Data.SqlTypes.SqlDateTime.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  - System.Data.SqlTypes.SqlDateTime.Add(System.Data.SqlTypes.SqlDateTime,System.TimeSpan)
  - System.Data.SqlTypes.SqlDateTime.CompareTo(System.Data.SqlTypes.SqlDateTime)
  - System.Data.SqlTypes.SqlDateTime.CompareTo(System.Object)
  - System.Data.SqlTypes.SqlDateTime.DayTicks
  - System.Data.SqlTypes.SqlDateTime.Equals(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)
  - System.Data.SqlTypes.SqlDateTime.Equals(System.Object)
  - System.Data.SqlTypes.SqlDateTime.GetHashCode
  - System.Data.SqlTypes.SqlDateTime.GreaterThan(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)
  - System.Data.SqlTypes.SqlDateTime.GreaterThanOrEqual(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)
  - System.Data.SqlTypes.SqlDateTime.IsNull
  - System.Data.SqlTypes.SqlDateTime.LessThan(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)
  - System.Data.SqlTypes.SqlDateTime.LessThanOrEqual(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)
  - System.Data.SqlTypes.SqlDateTime.MaxValue
  - System.Data.SqlTypes.SqlDateTime.MinValue
  - System.Data.SqlTypes.SqlDateTime.NotEquals(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)
  - System.Data.SqlTypes.SqlDateTime.Null
  - System.Data.SqlTypes.SqlDateTime.op_Addition(System.Data.SqlTypes.SqlDateTime,System.TimeSpan)
  - System.Data.SqlTypes.SqlDateTime.op_Equality(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)
  - System.Data.SqlTypes.SqlDateTime.op_Explicit(System.Data.SqlTypes.SqlDateTime)~System.DateTime
  - System.Data.SqlTypes.SqlDateTime.op_Explicit(System.Data.SqlTypes.SqlString)~System.Data.SqlTypes.SqlDateTime
  - System.Data.SqlTypes.SqlDateTime.op_GreaterThan(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)
  - System.Data.SqlTypes.SqlDateTime.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)
  - System.Data.SqlTypes.SqlDateTime.op_Implicit(System.DateTime)~System.Data.SqlTypes.SqlDateTime
  - System.Data.SqlTypes.SqlDateTime.op_Inequality(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)
  - System.Data.SqlTypes.SqlDateTime.op_LessThan(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)
  - System.Data.SqlTypes.SqlDateTime.op_LessThanOrEqual(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)
  - System.Data.SqlTypes.SqlDateTime.op_Subtraction(System.Data.SqlTypes.SqlDateTime,System.TimeSpan)
  - System.Data.SqlTypes.SqlDateTime.Parse(System.String)
  - System.Data.SqlTypes.SqlDateTime.SQLTicksPerHour
  - System.Data.SqlTypes.SqlDateTime.SQLTicksPerMinute
  - System.Data.SqlTypes.SqlDateTime.SQLTicksPerSecond
  - System.Data.SqlTypes.SqlDateTime.Subtract(System.Data.SqlTypes.SqlDateTime,System.TimeSpan)
  - System.Data.SqlTypes.SqlDateTime.TimeTicks
  - System.Data.SqlTypes.SqlDateTime.ToSqlString
  - System.Data.SqlTypes.SqlDateTime.ToString
  - System.Data.SqlTypes.SqlDateTime.Value
  langs:
  - csharp
  - vb
  name: SqlDateTime
  fullName: System.Data.SqlTypes.SqlDateTime
  type: Struct
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDateTime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: SqlDateTime
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDateTime.cs
    startLine: 27
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: "\n<p>Represents the date and time data ranging in value from January 1, 1753 to December 31, 9999 to an accuracy of 3.33 milliseconds to be stored in or retrieved from a database. The <xref href=\"System.Data.SqlTypes.SqlDateTime\" data-throw-if-not-resolved=\"false\"></xref> structure has a different underlying data structure from its corresponding .NET Framework type, <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref>, which can represent any time between 12:00:00 AM 1/1/0001 and 11:59:59 PM 12/31/9999, to the accuracy of 100 nanoseconds. <xref href=\"System.Data.SqlTypes.SqlDateTime\" data-throw-if-not-resolved=\"false\"></xref> actually stores the relative difference to 00:00:00 AM 1/1/1900. Therefore, a conversion from \"00:00:00 AM 1/1/1900\" to an integer will return 0.</p>\n"
  syntax:
    content: >-
      [StructLayout(LayoutKind.Sequential)]

      public struct SqlDateTime : INullable, IComparable
    content.vb: >-
      <StructLayout(LayoutKind.Sequential)>

      Public Structure SqlDateTime
          Implements INullable, IComparable
  implements:
  - System.Data.SqlTypes.INullable
  - System.IComparable
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetType
  attributes:
  - type: System.Runtime.InteropServices.StructLayoutAttribute
    ctor: System.Runtime.InteropServices.StructLayoutAttribute.#ctor(System.Runtime.InteropServices.LayoutKind)
    arguments:
    - type: System.Runtime.InteropServices.LayoutKind
      value: 0
  modifiers.csharp:
  - public
  - struct
  modifiers.vb:
  - Public
  - Structure
- uid: System.Data.SqlTypes.SqlDateTime.MaxValue
  commentId: F:System.Data.SqlTypes.SqlDateTime.MaxValue
  id: MaxValue
  parent: System.Data.SqlTypes.SqlDateTime
  langs:
  - csharp
  - vb
  name: MaxValue
  fullName: System.Data.SqlTypes.SqlDateTime.MaxValue
  type: Field
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDateTime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: MaxValue
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDateTime.cs
    startLine: 647
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: "\n<p>Represents the maximum valid date value for a <xref href=\"System.Data.SqlTypes.SqlDateTime\" data-throw-if-not-resolved=\"false\"></xref> structure.</p>\n"
  remarks: "\n<p>The maximum valid date for a <xref href=\"System.Data.SqlTypes.SqlDateTime\" data-throw-if-not-resolved=\"false\"></xref> structure is December 31, 9999.</p>\n"
  syntax:
    content: public static readonly SqlDateTime MaxValue
    content.vb: Public Shared ReadOnly MaxValue As SqlDateTime
    return:
      type: System.Data.SqlTypes.SqlDateTime
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: System.Data.SqlTypes.SqlDateTime.MinValue
  commentId: F:System.Data.SqlTypes.SqlDateTime.MinValue
  id: MinValue
  parent: System.Data.SqlTypes.SqlDateTime
  langs:
  - csharp
  - vb
  name: MinValue
  fullName: System.Data.SqlTypes.SqlDateTime.MinValue
  type: Field
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDateTime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: MinValue
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDateTime.cs
    startLine: 646
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: "\n<p>Represents the minimum valid date value for a <xref href=\"System.Data.SqlTypes.SqlDateTime\" data-throw-if-not-resolved=\"false\"></xref> structure.</p>\n"
  remarks: "\n<p>The minimum valid date for a <xref href=\"System.Data.SqlTypes.SqlDateTime\" data-throw-if-not-resolved=\"false\"></xref> structure is January 1, 1753.</p>\n"
  syntax:
    content: public static readonly SqlDateTime MinValue
    content.vb: Public Shared ReadOnly MinValue As SqlDateTime
    return:
      type: System.Data.SqlTypes.SqlDateTime
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: System.Data.SqlTypes.SqlDateTime.Null
  commentId: F:System.Data.SqlTypes.SqlDateTime.Null
  parent: System.Data.SqlTypes.SqlDateTime
  langs:
  - csharp
  - vb
  fullName: System.Data.SqlTypes.SqlDateTime.Null
  type: Field
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDateTime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDateTime.cs
    startLine: 649
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: "\n<p>Represents a <xref href=\"System.DBNull\" data-throw-if-not-resolved=\"false\"></xref> that can be assigned to this instance of the <xref href=\"System.Data.SqlTypes.SqlDateTime\" data-throw-if-not-resolved=\"false\"></xref> structure.</p>\n"
  remarks: "\n<p>Null functions as a constant for the <xref href=\"System.Data.SqlTypes.SqlDateTime\" data-throw-if-not-resolved=\"false\"></xref> structure. For more information, see Handling Null Values.</p>\n"
  syntax:
    content: public static readonly SqlDateTime Null
    content.vb: Public Shared ReadOnly Null As SqlDateTime
    return:
      type: System.Data.SqlTypes.SqlDateTime
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: System.Data.SqlTypes.SqlDateTime.SQLTicksPerHour
  commentId: F:System.Data.SqlTypes.SqlDateTime.SQLTicksPerHour
  id: SQLTicksPerHour
  parent: System.Data.SqlTypes.SqlDateTime
  langs:
  - csharp
  - vb
  name: SQLTicksPerHour
  fullName: System.Data.SqlTypes.SqlDateTime.SQLTicksPerHour
  type: Field
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDateTime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: SQLTicksPerHour
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDateTime.cs
    startLine: 40
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: "\n<p>A constant whose value is the number of ticks equivalent to one hour.</p>\n"
  syntax:
    content: public static readonly int SQLTicksPerHour
    content.vb: Public Shared ReadOnly SQLTicksPerHour As Integer
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: System.Data.SqlTypes.SqlDateTime.SQLTicksPerMinute
  commentId: F:System.Data.SqlTypes.SqlDateTime.SQLTicksPerMinute
  id: SQLTicksPerMinute
  parent: System.Data.SqlTypes.SqlDateTime
  langs:
  - csharp
  - vb
  name: SQLTicksPerMinute
  fullName: System.Data.SqlTypes.SqlDateTime.SQLTicksPerMinute
  type: Field
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDateTime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: SQLTicksPerMinute
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDateTime.cs
    startLine: 39
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: "\n<p>A constant whose value is the number of ticks equivalent to one minute.</p>\n"
  syntax:
    content: public static readonly int SQLTicksPerMinute
    content.vb: Public Shared ReadOnly SQLTicksPerMinute As Integer
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: System.Data.SqlTypes.SqlDateTime.SQLTicksPerSecond
  commentId: F:System.Data.SqlTypes.SqlDateTime.SQLTicksPerSecond
  id: SQLTicksPerSecond
  parent: System.Data.SqlTypes.SqlDateTime
  langs:
  - csharp
  - vb
  name: SQLTicksPerSecond
  fullName: System.Data.SqlTypes.SqlDateTime.SQLTicksPerSecond
  type: Field
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDateTime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: SQLTicksPerSecond
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDateTime.cs
    startLine: 38
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: "\n<p>A constant whose value is the number of ticks equivalent to one second.</p>\n"
  syntax:
    content: public static readonly int SQLTicksPerSecond
    content.vb: Public Shared ReadOnly SQLTicksPerSecond As Integer
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: System.Data.SqlTypes.SqlDateTime.#ctor(System.DateTime)
  commentId: M:System.Data.SqlTypes.SqlDateTime.#ctor(System.DateTime)
  id: '#ctor(System.DateTime)'
  parent: System.Data.SqlTypes.SqlDateTime
  langs:
  - csharp
  - vb
  name: SqlDateTime(DateTime)
  fullName: System.Data.SqlTypes.SqlDateTime.SqlDateTime(System.DateTime)
  type: Constructor
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDateTime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDateTime.cs
    startLine: 93
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Data.SqlTypes.SqlDateTime\" data-throw-if-not-resolved=\"false\"></xref> structure using the specified <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> value.</p>\n"
  syntax:
    content: public SqlDateTime(DateTime value)
    content.vb: Public Sub New(value As Date)
    parameters:
    - id: value
      type: System.DateTime
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Data.SqlTypes.SqlDateTime.#ctor(System.Int32,System.Int32)
  commentId: M:System.Data.SqlTypes.SqlDateTime.#ctor(System.Int32,System.Int32)
  id: '#ctor(System.Int32,System.Int32)'
  parent: System.Data.SqlTypes.SqlDateTime
  langs:
  - csharp
  - vb
  name: SqlDateTime(Int32, Int32)
  fullName: System.Data.SqlTypes.SqlDateTime.SqlDateTime(System.Int32, System.Int32)
  type: Constructor
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDateTime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDateTime.cs
    startLine: 156
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Data.SqlTypes.SqlDateTime\" data-throw-if-not-resolved=\"false\"></xref> structure using the supplied parameters.</p>\n"
  syntax:
    content: public SqlDateTime(int dayTicks, int timeTicks)
    content.vb: Public Sub New(dayTicks As Integer, timeTicks As Integer)
    parameters:
    - id: dayTicks
      type: System.Int32
    - id: timeTicks
      type: System.Int32
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Data.SqlTypes.SqlDateTime.#ctor(System.Int32,System.Int32,System.Int32)
  commentId: M:System.Data.SqlTypes.SqlDateTime.#ctor(System.Int32,System.Int32,System.Int32)
  id: '#ctor(System.Int32,System.Int32,System.Int32)'
  parent: System.Data.SqlTypes.SqlDateTime
  langs:
  - csharp
  - vb
  name: SqlDateTime(Int32, Int32, Int32)
  fullName: System.Data.SqlTypes.SqlDateTime.SqlDateTime(System.Int32, System.Int32, System.Int32)
  type: Constructor
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDateTime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDateTime.cs
    startLine: 98
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Data.SqlTypes.SqlDateTime\" data-throw-if-not-resolved=\"false\"></xref> structure using the supplied parameters to initialize the year, month, day.</p>\n"
  syntax:
    content: public SqlDateTime(int year, int month, int day)
    content.vb: Public Sub New(year As Integer, month As Integer, day As Integer)
    parameters:
    - id: year
      type: System.Int32
    - id: month
      type: System.Int32
    - id: day
      type: System.Int32
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Data.SqlTypes.SqlDateTime.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  commentId: M:System.Data.SqlTypes.SqlDateTime.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  id: '#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)'
  parent: System.Data.SqlTypes.SqlDateTime
  langs:
  - csharp
  - vb
  name: SqlDateTime(Int32, Int32, Int32, Int32, Int32, Int32)
  fullName: System.Data.SqlTypes.SqlDateTime.SqlDateTime(System.Int32, System.Int32, System.Int32, System.Int32, System.Int32, System.Int32)
  type: Constructor
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDateTime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDateTime.cs
    startLine: 103
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Data.SqlTypes.SqlDateTime\" data-throw-if-not-resolved=\"false\"></xref> structure using the supplied parameters to initialize the year, month, day, hour, minute, and second of the new structure.</p>\n"
  syntax:
    content: public SqlDateTime(int year, int month, int day, int hour, int minute, int second)
    content.vb: Public Sub New(year As Integer, month As Integer, day As Integer, hour As Integer, minute As Integer, second As Integer)
    parameters:
    - id: year
      type: System.Int32
    - id: month
      type: System.Int32
    - id: day
      type: System.Int32
    - id: hour
      type: System.Int32
    - id: minute
      type: System.Int32
    - id: second
      type: System.Int32
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Data.SqlTypes.SqlDateTime.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Double)
  commentId: M:System.Data.SqlTypes.SqlDateTime.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Double)
  id: '#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Double)'
  parent: System.Data.SqlTypes.SqlDateTime
  langs:
  - csharp
  - vb
  name: SqlDateTime(Int32, Int32, Int32, Int32, Int32, Int32, Double)
  fullName: System.Data.SqlTypes.SqlDateTime.SqlDateTime(System.Int32, System.Int32, System.Int32, System.Int32, System.Int32, System.Int32, System.Double)
  type: Constructor
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDateTime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDateTime.cs
    startLine: 108
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Data.SqlTypes.SqlDateTime\" data-throw-if-not-resolved=\"false\"></xref> structure using the supplied parameters to initialize the year, month, day, hour, minute, second, and millisecond of the new structure.</p>\n"
  syntax:
    content: public SqlDateTime(int year, int month, int day, int hour, int minute, int second, double millisecond)
    content.vb: Public Sub New(year As Integer, month As Integer, day As Integer, hour As Integer, minute As Integer, second As Integer, millisecond As Double)
    parameters:
    - id: year
      type: System.Int32
    - id: month
      type: System.Int32
    - id: day
      type: System.Int32
    - id: hour
      type: System.Int32
    - id: minute
      type: System.Int32
    - id: second
      type: System.Int32
    - id: millisecond
      type: System.Double
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Data.SqlTypes.SqlDateTime.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  commentId: M:System.Data.SqlTypes.SqlDateTime.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  id: '#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)'
  parent: System.Data.SqlTypes.SqlDateTime
  langs:
  - csharp
  - vb
  name: SqlDateTime(Int32, Int32, Int32, Int32, Int32, Int32, Int32)
  fullName: System.Data.SqlTypes.SqlDateTime.SqlDateTime(System.Int32, System.Int32, System.Int32, System.Int32, System.Int32, System.Int32, System.Int32)
  type: Constructor
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDateTime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDateTime.cs
    startLine: 150
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Data.SqlTypes.SqlDateTime\" data-throw-if-not-resolved=\"false\"></xref> structure using the supplied parameters to initialize the year, month, day, hour, minute, second, and billisecond of the new structure.</p>\n"
  syntax:
    content: public SqlDateTime(int year, int month, int day, int hour, int minute, int second, int bilisecond)
    content.vb: Public Sub New(year As Integer, month As Integer, day As Integer, hour As Integer, minute As Integer, second As Integer, bilisecond As Integer)
    parameters:
    - id: year
      type: System.Int32
    - id: month
      type: System.Int32
    - id: day
      type: System.Int32
    - id: hour
      type: System.Int32
    - id: minute
      type: System.Int32
    - id: second
      type: System.Int32
    - id: bilisecond
      type: System.Int32
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Data.SqlTypes.SqlDateTime.DayTicks
  commentId: P:System.Data.SqlTypes.SqlDateTime.DayTicks
  id: DayTicks
  parent: System.Data.SqlTypes.SqlDateTime
  langs:
  - csharp
  - vb
  name: DayTicks
  fullName: System.Data.SqlTypes.SqlDateTime.DayTicks
  type: Property
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDateTime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: DayTicks
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDateTime.cs
    startLine: 302
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: "\n<p>Gets the number of ticks representing the date of this <xref href=\"System.Data.SqlTypes.SqlDateTime\" data-throw-if-not-resolved=\"false\"></xref> structure.</p>\n"
  syntax:
    content: public int DayTicks { get; }
    content.vb: Public ReadOnly Property DayTicks As Integer
    parameters: []
    return:
      type: System.Int32
  exceptions:
  - type: System.Data.SqlTypes.SqlNullValueException
    commentId: T:System.Data.SqlTypes.SqlNullValueException
    description: "\n<p>The exception that is thrown when the <strong>Value</strong> property of a <xref href=\"System.Data.SqlTypes\" data-throw-if-not-resolved=\"false\"></xref> structure is set to null.</p>\n"
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Data.SqlTypes.SqlDateTime.IsNull
  commentId: P:System.Data.SqlTypes.SqlDateTime.IsNull
  id: IsNull
  parent: System.Data.SqlTypes.SqlDateTime
  langs:
  - csharp
  - vb
  name: IsNull
  fullName: System.Data.SqlTypes.SqlDateTime.IsNull
  type: Property
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDateTime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IsNull
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDateTime.cs
    startLine: 195
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: "\n<p>Indicates whether this <xref href=\"System.Data.SqlTypes.SqlDateTime\" data-throw-if-not-resolved=\"false\"></xref> structure is null.</p>\n"
  remarks: "\n<p>For more information, see Handling Null Values.</p>\n"
  syntax:
    content: public bool IsNull { get; }
    content.vb: Public ReadOnly Property IsNull As Boolean
    parameters: []
    return:
      type: System.Boolean
  implements:
  - System.Data.SqlTypes.INullable.IsNull
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Data.SqlTypes.SqlDateTime.TimeTicks
  commentId: P:System.Data.SqlTypes.SqlDateTime.TimeTicks
  id: TimeTicks
  parent: System.Data.SqlTypes.SqlDateTime
  langs:
  - csharp
  - vb
  name: TimeTicks
  fullName: System.Data.SqlTypes.SqlDateTime.TimeTicks
  type: Property
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDateTime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: TimeTicks
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDateTime.cs
    startLine: 314
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: "\n<p>Gets the number of ticks representing the time of this <xref href=\"System.Data.SqlTypes.SqlDateTime\" data-throw-if-not-resolved=\"false\"></xref> structure.</p>\n"
  syntax:
    content: public int TimeTicks { get; }
    content.vb: Public ReadOnly Property TimeTicks As Integer
    parameters: []
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Data.SqlTypes.SqlDateTime.Value
  commentId: P:System.Data.SqlTypes.SqlDateTime.Value
  id: Value
  parent: System.Data.SqlTypes.SqlDateTime
  langs:
  - csharp
  - vb
  name: Value
  fullName: System.Data.SqlTypes.SqlDateTime.Value
  type: Property
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDateTime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Value
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDateTime.cs
    startLine: 290
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: "\n<p>Gets the value of the <xref href=\"System.Data.SqlTypes.SqlDateTime\" data-throw-if-not-resolved=\"false\"></xref> structure. This property is read-only.</p>\n"
  syntax:
    content: public DateTime Value { get; }
    content.vb: Public ReadOnly Property Value As Date
    parameters: []
    return:
      type: System.DateTime
  exceptions:
  - type: System.Data.SqlTypes.SqlNullValueException
    commentId: T:System.Data.SqlTypes.SqlNullValueException
    description: "\n<p>The exception that is thrown when the <strong>Value</strong> property of a <xref href=\"System.Data.SqlTypes\" data-throw-if-not-resolved=\"false\"></xref> structure is set to null.</p>\n"
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Data.SqlTypes.SqlDateTime.Add(System.Data.SqlTypes.SqlDateTime,System.TimeSpan)
  commentId: M:System.Data.SqlTypes.SqlDateTime.Add(System.Data.SqlTypes.SqlDateTime,System.TimeSpan)
  id: Add(System.Data.SqlTypes.SqlDateTime,System.TimeSpan)
  parent: System.Data.SqlTypes.SqlDateTime
  langs:
  - csharp
  - vb
  name: Add(SqlDateTime, TimeSpan)
  fullName: System.Data.SqlTypes.SqlDateTime.Add(System.Data.SqlTypes.SqlDateTime, System.TimeSpan)
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDateTime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Add
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDateTime.cs
    startLine: 388
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: "\n<p>Adds a <xref href=\"System.Data.SqlTypes.SqlDateTime\" data-throw-if-not-resolved=\"false\"></xref> to the specified <strong>TimeSpan</strong>.</p>\n"
  syntax:
    content: public static SqlDateTime Add(SqlDateTime x, TimeSpan t)
    content.vb: Public Shared Function Add(x As SqlDateTime, t As TimeSpan) As SqlDateTime
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlDateTime
    - id: t
      type: System.TimeSpan
    return:
      type: System.Data.SqlTypes.SqlDateTime
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Data.SqlTypes.SqlDateTime.CompareTo(System.Data.SqlTypes.SqlDateTime)
  commentId: M:System.Data.SqlTypes.SqlDateTime.CompareTo(System.Data.SqlTypes.SqlDateTime)
  id: CompareTo(System.Data.SqlTypes.SqlDateTime)
  parent: System.Data.SqlTypes.SqlDateTime
  langs:
  - csharp
  - vb
  name: CompareTo(SqlDateTime)
  fullName: System.Data.SqlTypes.SqlDateTime.CompareTo(System.Data.SqlTypes.SqlDateTime)
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDateTime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CompareTo
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDateTime.cs
    startLine: 609
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: "\n<p>Compares this <xref href=\"System.Data.SqlTypes.SqlDateTime\" data-throw-if-not-resolved=\"false\"></xref> structure to the supplied <xref href=\"System.Data.SqlTypes.SqlDateTime\" data-throw-if-not-resolved=\"false\"></xref> structure and returns an indication of their relative values.</p>\n"
  syntax:
    content: public int CompareTo(SqlDateTime value)
    content.vb: Public Function CompareTo(value As SqlDateTime) As Integer
    parameters:
    - id: value
      type: System.Data.SqlTypes.SqlDateTime
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Data.SqlTypes.SqlDateTime.CompareTo(System.Object)
  commentId: M:System.Data.SqlTypes.SqlDateTime.CompareTo(System.Object)
  id: CompareTo(System.Object)
  parent: System.Data.SqlTypes.SqlDateTime
  langs:
  - csharp
  - vb
  name: CompareTo(Object)
  fullName: System.Data.SqlTypes.SqlDateTime.CompareTo(System.Object)
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDateTime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CompareTo
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDateTime.cs
    startLine: 598
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: "\n<p>Compares this <xref href=\"System.Data.SqlTypes.SqlDateTime\" data-throw-if-not-resolved=\"false\"></xref> structure to the supplied <xref href=\"System.Object\" data-throw-if-not-resolved=\"false\"></xref> and returns an indication of their relative values.</p>\n"
  syntax:
    content: public int CompareTo(object value)
    content.vb: Public Function CompareTo(value As Object) As Integer
    parameters:
    - id: value
      type: System.Object
    return:
      type: System.Int32
  implements:
  - System.IComparable.CompareTo(System.Object)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Data.SqlTypes.SqlDateTime.Equals(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)
  commentId: M:System.Data.SqlTypes.SqlDateTime.Equals(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)
  id: Equals(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)
  parent: System.Data.SqlTypes.SqlDateTime
  langs:
  - csharp
  - vb
  name: Equals(SqlDateTime, SqlDateTime)
  fullName: System.Data.SqlTypes.SqlDateTime.Equals(System.Data.SqlTypes.SqlDateTime, System.Data.SqlTypes.SqlDateTime)
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDateTime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Equals
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDateTime.cs
    startLine: 549
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: "\n<p>Performs a logical comparison of two <xref href=\"System.Data.SqlTypes.SqlDateTime\" data-throw-if-not-resolved=\"false\"></xref> structures to determine whether they are equal.</p>\n"
  syntax:
    content: public static SqlBoolean Equals(SqlDateTime x, SqlDateTime y)
    content.vb: Public Shared Function Equals(x As SqlDateTime, y As SqlDateTime) As SqlBoolean
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlDateTime
    - id: y
      type: System.Data.SqlTypes.SqlDateTime
    return:
      type: System.Data.SqlTypes.SqlBoolean
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Data.SqlTypes.SqlDateTime.Equals(System.Object)
  commentId: M:System.Data.SqlTypes.SqlDateTime.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Data.SqlTypes.SqlDateTime
  langs:
  - csharp
  - vb
  name: Equals(Object)
  fullName: System.Data.SqlTypes.SqlDateTime.Equals(System.Object)
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDateTime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Equals
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDateTime.cs
    startLine: 624
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: "\n<p>Compares the supplied object parameter to the <xref href=\"System.Data.SqlTypes.SqlDateTime.Value\" data-throw-if-not-resolved=\"false\"></xref> property of the <xref href=\"System.Data.SqlTypes.SqlDateTime\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  syntax:
    content: public override bool Equals(object value)
    content.vb: Public Overrides Function Equals(value As Object) As Boolean
    parameters:
    - id: value
      type: System.Object
    return:
      type: System.Boolean
  overridden: System.ValueType.Equals(System.Object)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Data.SqlTypes.SqlDateTime.GetHashCode
  commentId: M:System.Data.SqlTypes.SqlDateTime.GetHashCode
  id: GetHashCode
  parent: System.Data.SqlTypes.SqlDateTime
  langs:
  - csharp
  - vb
  name: GetHashCode()
  fullName: System.Data.SqlTypes.SqlDateTime.GetHashCode()
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDateTime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetHashCode
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDateTime.cs
    startLine: 640
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: "\n<p>Gets the hash code for this instance.</p>\n"
  syntax:
    content: public override int GetHashCode()
    content.vb: Public Overrides Function GetHashCode As Integer
    return:
      type: System.Int32
  overridden: System.ValueType.GetHashCode
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Data.SqlTypes.SqlDateTime.GreaterThan(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)
  commentId: M:System.Data.SqlTypes.SqlDateTime.GreaterThan(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)
  id: GreaterThan(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)
  parent: System.Data.SqlTypes.SqlDateTime
  langs:
  - csharp
  - vb
  name: GreaterThan(SqlDateTime, SqlDateTime)
  fullName: System.Data.SqlTypes.SqlDateTime.GreaterThan(System.Data.SqlTypes.SqlDateTime, System.Data.SqlTypes.SqlDateTime)
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDateTime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GreaterThan
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDateTime.cs
    startLine: 567
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: "\n<p>Compares two instances of <xref href=\"System.Data.SqlTypes.SqlDateTime\" data-throw-if-not-resolved=\"false\"></xref> to determine whether the first is greater than the second.</p>\n"
  syntax:
    content: public static SqlBoolean GreaterThan(SqlDateTime x, SqlDateTime y)
    content.vb: Public Shared Function GreaterThan(x As SqlDateTime, y As SqlDateTime) As SqlBoolean
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlDateTime
    - id: y
      type: System.Data.SqlTypes.SqlDateTime
    return:
      type: System.Data.SqlTypes.SqlBoolean
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Data.SqlTypes.SqlDateTime.GreaterThanOrEqual(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)
  commentId: M:System.Data.SqlTypes.SqlDateTime.GreaterThanOrEqual(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)
  id: GreaterThanOrEqual(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)
  parent: System.Data.SqlTypes.SqlDateTime
  langs:
  - csharp
  - vb
  name: GreaterThanOrEqual(SqlDateTime, SqlDateTime)
  fullName: System.Data.SqlTypes.SqlDateTime.GreaterThanOrEqual(System.Data.SqlTypes.SqlDateTime, System.Data.SqlTypes.SqlDateTime)
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDateTime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GreaterThanOrEqual
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDateTime.cs
    startLine: 579
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: "\n<p>Compares two instances of <xref href=\"System.Data.SqlTypes.SqlDateTime\" data-throw-if-not-resolved=\"false\"></xref> to determine whether the first is greater than or equal to the second.</p>\n"
  syntax:
    content: public static SqlBoolean GreaterThanOrEqual(SqlDateTime x, SqlDateTime y)
    content.vb: Public Shared Function GreaterThanOrEqual(x As SqlDateTime, y As SqlDateTime) As SqlBoolean
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlDateTime
    - id: y
      type: System.Data.SqlTypes.SqlDateTime
    return:
      type: System.Data.SqlTypes.SqlBoolean
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Data.SqlTypes.SqlDateTime.LessThan(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)
  commentId: M:System.Data.SqlTypes.SqlDateTime.LessThan(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)
  id: LessThan(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)
  parent: System.Data.SqlTypes.SqlDateTime
  langs:
  - csharp
  - vb
  name: LessThan(SqlDateTime, SqlDateTime)
  fullName: System.Data.SqlTypes.SqlDateTime.LessThan(System.Data.SqlTypes.SqlDateTime, System.Data.SqlTypes.SqlDateTime)
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDateTime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: LessThan
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDateTime.cs
    startLine: 561
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: "\n<p>Compares two instances of <xref href=\"System.Data.SqlTypes.SqlDateTime\" data-throw-if-not-resolved=\"false\"></xref> to determine whether the first is less than the second.</p>\n"
  syntax:
    content: public static SqlBoolean LessThan(SqlDateTime x, SqlDateTime y)
    content.vb: Public Shared Function LessThan(x As SqlDateTime, y As SqlDateTime) As SqlBoolean
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlDateTime
    - id: y
      type: System.Data.SqlTypes.SqlDateTime
    return:
      type: System.Data.SqlTypes.SqlBoolean
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Data.SqlTypes.SqlDateTime.LessThanOrEqual(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)
  commentId: M:System.Data.SqlTypes.SqlDateTime.LessThanOrEqual(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)
  id: LessThanOrEqual(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)
  parent: System.Data.SqlTypes.SqlDateTime
  langs:
  - csharp
  - vb
  name: LessThanOrEqual(SqlDateTime, SqlDateTime)
  fullName: System.Data.SqlTypes.SqlDateTime.LessThanOrEqual(System.Data.SqlTypes.SqlDateTime, System.Data.SqlTypes.SqlDateTime)
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDateTime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: LessThanOrEqual
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDateTime.cs
    startLine: 573
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: "\n<p>Compares two instances of <xref href=\"System.Data.SqlTypes.SqlDateTime\" data-throw-if-not-resolved=\"false\"></xref> to determine whether the first is less than or equal to the second.</p>\n"
  syntax:
    content: public static SqlBoolean LessThanOrEqual(SqlDateTime x, SqlDateTime y)
    content.vb: Public Shared Function LessThanOrEqual(x As SqlDateTime, y As SqlDateTime) As SqlBoolean
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlDateTime
    - id: y
      type: System.Data.SqlTypes.SqlDateTime
    return:
      type: System.Data.SqlTypes.SqlBoolean
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Data.SqlTypes.SqlDateTime.NotEquals(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)
  commentId: M:System.Data.SqlTypes.SqlDateTime.NotEquals(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)
  id: NotEquals(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)
  parent: System.Data.SqlTypes.SqlDateTime
  langs:
  - csharp
  - vb
  name: NotEquals(SqlDateTime, SqlDateTime)
  fullName: System.Data.SqlTypes.SqlDateTime.NotEquals(System.Data.SqlTypes.SqlDateTime, System.Data.SqlTypes.SqlDateTime)
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDateTime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: NotEquals
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDateTime.cs
    startLine: 555
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: "\n<p>Performs a logical comparison of two instances of <xref href=\"System.Data.SqlTypes.SqlDateTime\" data-throw-if-not-resolved=\"false\"></xref> to determine whether they are not equal.</p>\n"
  syntax:
    content: public static SqlBoolean NotEquals(SqlDateTime x, SqlDateTime y)
    content.vb: Public Shared Function NotEquals(x As SqlDateTime, y As SqlDateTime) As SqlBoolean
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlDateTime
    - id: y
      type: System.Data.SqlTypes.SqlDateTime
    return:
      type: System.Data.SqlTypes.SqlBoolean
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Data.SqlTypes.SqlDateTime.op_Addition(System.Data.SqlTypes.SqlDateTime,System.TimeSpan)
  commentId: M:System.Data.SqlTypes.SqlDateTime.op_Addition(System.Data.SqlTypes.SqlDateTime,System.TimeSpan)
  id: op_Addition(System.Data.SqlTypes.SqlDateTime,System.TimeSpan)
  parent: System.Data.SqlTypes.SqlDateTime
  langs:
  - csharp
  - vb
  name: Addition(SqlDateTime, TimeSpan)
  fullName: System.Data.SqlTypes.SqlDateTime.Addition(System.Data.SqlTypes.SqlDateTime, System.TimeSpan)
  type: Operator
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDateTime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_Addition
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDateTime.cs
    startLine: 372
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: "\n<p>Adds the period of time indicated by the supplied <xref href=\"System.TimeSpan\" data-throw-if-not-resolved=\"false\"></xref> parameter, <em>t</em>, to the supplied <xref href=\"System.Data.SqlTypes.SqlDateTime\" data-throw-if-not-resolved=\"false\"></xref> structure.</p>\n"
  syntax:
    content: public static SqlDateTime operator +(SqlDateTime x, TimeSpan t)
    content.vb: Public Shared Operator +(x As SqlDateTime, t As TimeSpan) As SqlDateTime
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlDateTime
    - id: t
      type: System.TimeSpan
    return:
      type: System.Data.SqlTypes.SqlDateTime
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Data.SqlTypes.SqlDateTime.op_Equality(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)
  commentId: M:System.Data.SqlTypes.SqlDateTime.op_Equality(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)
  id: op_Equality(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)
  parent: System.Data.SqlTypes.SqlDateTime
  langs:
  - csharp
  - vb
  name: Equality(SqlDateTime, SqlDateTime)
  fullName: System.Data.SqlTypes.SqlDateTime.Equality(System.Data.SqlTypes.SqlDateTime, System.Data.SqlTypes.SqlDateTime)
  type: Operator
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDateTime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_Equality
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDateTime.cs
    startLine: 510
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: "\n<p>Performs a logical comparison of two <xref href=\"System.Data.SqlTypes.SqlDateTime\" data-throw-if-not-resolved=\"false\"></xref> structures to determine whether they are equal.</p>\n"
  syntax:
    content: public static SqlBoolean operator ==(SqlDateTime x, SqlDateTime y)
    content.vb: Public Shared Operator =(x As SqlDateTime, y As SqlDateTime) As SqlBoolean
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlDateTime
    - id: y
      type: System.Data.SqlTypes.SqlDateTime
    return:
      type: System.Data.SqlTypes.SqlBoolean
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Data.SqlTypes.SqlDateTime.op_Explicit(System.Data.SqlTypes.SqlDateTime)~System.DateTime
  commentId: M:System.Data.SqlTypes.SqlDateTime.op_Explicit(System.Data.SqlTypes.SqlDateTime)~System.DateTime
  id: op_Explicit(System.Data.SqlTypes.SqlDateTime)~System.DateTime
  parent: System.Data.SqlTypes.SqlDateTime
  langs:
  - csharp
  - vb
  name: Explicit(SqlDateTime to DateTime)
  fullName: System.Data.SqlTypes.SqlDateTime.Explicit(System.Data.SqlTypes.SqlDateTime to System.DateTime)
  type: Operator
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDateTime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_Explicit
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDateTime.cs
    startLine: 332
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: "\n<p>Converts the <xref href=\"System.Data.SqlTypes.SqlDateTime\" data-throw-if-not-resolved=\"false\"></xref> structure to a <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> structure.</p>\n"
  syntax:
    content: public static explicit operator DateTime(SqlDateTime x)
    content.vb: Public Shared Narrowing Operator CType(x As SqlDateTime) As Date
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlDateTime
    return:
      type: System.DateTime
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Data.SqlTypes.SqlDateTime.Narrowing(System.Data.SqlTypes.SqlDateTime to System.DateTime)
  name.vb: Narrowing(SqlDateTime to DateTime)
- uid: System.Data.SqlTypes.SqlDateTime.op_Explicit(System.Data.SqlTypes.SqlString)~System.Data.SqlTypes.SqlDateTime
  commentId: M:System.Data.SqlTypes.SqlDateTime.op_Explicit(System.Data.SqlTypes.SqlString)~System.Data.SqlTypes.SqlDateTime
  id: op_Explicit(System.Data.SqlTypes.SqlString)~System.Data.SqlTypes.SqlDateTime
  parent: System.Data.SqlTypes.SqlDateTime
  langs:
  - csharp
  - vb
  name: Explicit(SqlString to SqlDateTime)
  fullName: System.Data.SqlTypes.SqlDateTime.Explicit(System.Data.SqlTypes.SqlString to System.Data.SqlTypes.SqlDateTime)
  type: Operator
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDateTime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_Explicit
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDateTime.cs
    startLine: 477
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: "\n<p>Converts the <xref href=\"System.Data.SqlTypes.SqlString\" data-throw-if-not-resolved=\"false\"></xref> parameter to a <xref href=\"System.Data.SqlTypes.SqlDateTime\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: public static explicit operator SqlDateTime(SqlString x)
    content.vb: Public Shared Narrowing Operator CType(x As SqlString) As SqlDateTime
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlString
    return:
      type: System.Data.SqlTypes.SqlDateTime
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Data.SqlTypes.SqlDateTime.Narrowing(System.Data.SqlTypes.SqlString to System.Data.SqlTypes.SqlDateTime)
  name.vb: Narrowing(SqlString to SqlDateTime)
- uid: System.Data.SqlTypes.SqlDateTime.op_GreaterThan(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)
  commentId: M:System.Data.SqlTypes.SqlDateTime.op_GreaterThan(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)
  id: op_GreaterThan(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)
  parent: System.Data.SqlTypes.SqlDateTime
  langs:
  - csharp
  - vb
  name: GreaterThan(SqlDateTime, SqlDateTime)
  fullName: System.Data.SqlTypes.SqlDateTime.GreaterThan(System.Data.SqlTypes.SqlDateTime, System.Data.SqlTypes.SqlDateTime)
  type: Operator
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDateTime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_GreaterThan
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDateTime.cs
    startLine: 526
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: "\n<p>Compares two instances of <xref href=\"System.Data.SqlTypes.SqlDateTime\" data-throw-if-not-resolved=\"false\"></xref> to determine whether the first is greater than the second.</p>\n"
  syntax:
    content: public static SqlBoolean operator>(SqlDateTime x, SqlDateTime y)
    content.vb: Public Shared Operator>(x As SqlDateTime, y As SqlDateTime) As SqlBoolean
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlDateTime
    - id: y
      type: System.Data.SqlTypes.SqlDateTime
    return:
      type: System.Data.SqlTypes.SqlBoolean
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Data.SqlTypes.SqlDateTime.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)
  commentId: M:System.Data.SqlTypes.SqlDateTime.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)
  id: op_GreaterThanOrEqual(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)
  parent: System.Data.SqlTypes.SqlDateTime
  langs:
  - csharp
  - vb
  name: GreaterThanOrEqual(SqlDateTime, SqlDateTime)
  fullName: System.Data.SqlTypes.SqlDateTime.GreaterThanOrEqual(System.Data.SqlTypes.SqlDateTime, System.Data.SqlTypes.SqlDateTime)
  type: Operator
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDateTime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_GreaterThanOrEqual
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDateTime.cs
    startLine: 538
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: "\n<p>Compares two instances of <xref href=\"System.Data.SqlTypes.SqlDateTime\" data-throw-if-not-resolved=\"false\"></xref> to determine whether the first is greater than or equal to the second.</p>\n"
  syntax:
    content: public static SqlBoolean operator >=(SqlDateTime x, SqlDateTime y)
    content.vb: Public Shared Operator >=(x As SqlDateTime, y As SqlDateTime) As SqlBoolean
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlDateTime
    - id: y
      type: System.Data.SqlTypes.SqlDateTime
    return:
      type: System.Data.SqlTypes.SqlBoolean
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Data.SqlTypes.SqlDateTime.op_Implicit(System.DateTime)~System.Data.SqlTypes.SqlDateTime
  commentId: M:System.Data.SqlTypes.SqlDateTime.op_Implicit(System.DateTime)~System.Data.SqlTypes.SqlDateTime
  id: op_Implicit(System.DateTime)~System.Data.SqlTypes.SqlDateTime
  parent: System.Data.SqlTypes.SqlDateTime
  langs:
  - csharp
  - vb
  name: Implicit(DateTime to SqlDateTime)
  fullName: System.Data.SqlTypes.SqlDateTime.Implicit(System.DateTime to System.Data.SqlTypes.SqlDateTime)
  type: Operator
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDateTime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_Implicit
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDateTime.cs
    startLine: 326
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: "\n<p>Converts a <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> structure to a <xref href=\"System.Data.SqlTypes.SqlDateTime\" data-throw-if-not-resolved=\"false\"></xref> structure.</p>\n"
  syntax:
    content: public static implicit operator SqlDateTime(DateTime value)
    content.vb: Public Shared Widening Operator CType(value As Date) As SqlDateTime
    parameters:
    - id: value
      type: System.DateTime
    return:
      type: System.Data.SqlTypes.SqlDateTime
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Data.SqlTypes.SqlDateTime.Widening(System.DateTime to System.Data.SqlTypes.SqlDateTime)
  name.vb: Widening(DateTime to SqlDateTime)
- uid: System.Data.SqlTypes.SqlDateTime.op_Inequality(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)
  commentId: M:System.Data.SqlTypes.SqlDateTime.op_Inequality(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)
  id: op_Inequality(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)
  parent: System.Data.SqlTypes.SqlDateTime
  langs:
  - csharp
  - vb
  name: Inequality(SqlDateTime, SqlDateTime)
  fullName: System.Data.SqlTypes.SqlDateTime.Inequality(System.Data.SqlTypes.SqlDateTime, System.Data.SqlTypes.SqlDateTime)
  type: Operator
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDateTime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_Inequality
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDateTime.cs
    startLine: 515
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: "\n<p>Performs a logical comparison of two instances of <xref href=\"System.Data.SqlTypes.SqlDateTime\" data-throw-if-not-resolved=\"false\"></xref> to determine whether they are not equal.</p>\n"
  syntax:
    content: public static SqlBoolean operator !=(SqlDateTime x, SqlDateTime y)
    content.vb: Public Shared Operator <>(x As SqlDateTime, y As SqlDateTime) As SqlBoolean
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlDateTime
    - id: y
      type: System.Data.SqlTypes.SqlDateTime
    return:
      type: System.Data.SqlTypes.SqlBoolean
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Data.SqlTypes.SqlDateTime.op_LessThan(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)
  commentId: M:System.Data.SqlTypes.SqlDateTime.op_LessThan(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)
  id: op_LessThan(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)
  parent: System.Data.SqlTypes.SqlDateTime
  langs:
  - csharp
  - vb
  name: LessThan(SqlDateTime, SqlDateTime)
  fullName: System.Data.SqlTypes.SqlDateTime.LessThan(System.Data.SqlTypes.SqlDateTime, System.Data.SqlTypes.SqlDateTime)
  type: Operator
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDateTime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_LessThan
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDateTime.cs
    startLine: 520
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: "\n<p>Compares two instances of <xref href=\"System.Data.SqlTypes.SqlDateTime\" data-throw-if-not-resolved=\"false\"></xref> to determine whether the first is less than the second.</p>\n"
  syntax:
    content: public static SqlBoolean operator <(SqlDateTime x, SqlDateTime y)
    content.vb: Public Shared Operator <(x As SqlDateTime, y As SqlDateTime) As SqlBoolean
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlDateTime
    - id: y
      type: System.Data.SqlTypes.SqlDateTime
    return:
      type: System.Data.SqlTypes.SqlBoolean
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Data.SqlTypes.SqlDateTime.op_LessThanOrEqual(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)
  commentId: M:System.Data.SqlTypes.SqlDateTime.op_LessThanOrEqual(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)
  id: op_LessThanOrEqual(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)
  parent: System.Data.SqlTypes.SqlDateTime
  langs:
  - csharp
  - vb
  name: LessThanOrEqual(SqlDateTime, SqlDateTime)
  fullName: System.Data.SqlTypes.SqlDateTime.LessThanOrEqual(System.Data.SqlTypes.SqlDateTime, System.Data.SqlTypes.SqlDateTime)
  type: Operator
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDateTime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_LessThanOrEqual
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDateTime.cs
    startLine: 532
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: "\n<p>Compares two instances of <xref href=\"System.Data.SqlTypes.SqlDateTime\" data-throw-if-not-resolved=\"false\"></xref> to determine whether the first is less than or equal to the second.</p>\n"
  syntax:
    content: public static SqlBoolean operator <=(SqlDateTime x, SqlDateTime y)
    content.vb: Public Shared Operator <=(x As SqlDateTime, y As SqlDateTime) As SqlBoolean
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlDateTime
    - id: y
      type: System.Data.SqlTypes.SqlDateTime
    return:
      type: System.Data.SqlTypes.SqlBoolean
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Data.SqlTypes.SqlDateTime.op_Subtraction(System.Data.SqlTypes.SqlDateTime,System.TimeSpan)
  commentId: M:System.Data.SqlTypes.SqlDateTime.op_Subtraction(System.Data.SqlTypes.SqlDateTime,System.TimeSpan)
  id: op_Subtraction(System.Data.SqlTypes.SqlDateTime,System.TimeSpan)
  parent: System.Data.SqlTypes.SqlDateTime
  langs:
  - csharp
  - vb
  name: Subtraction(SqlDateTime, TimeSpan)
  fullName: System.Data.SqlTypes.SqlDateTime.Subtraction(System.Data.SqlTypes.SqlDateTime, System.TimeSpan)
  type: Operator
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDateTime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_Subtraction
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDateTime.cs
    startLine: 378
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: "\n<p>Subtracts the supplied <xref href=\"System.TimeSpan\" data-throw-if-not-resolved=\"false\"></xref> structure, <em>t</em>, from the supplied <xref href=\"System.Data.SqlTypes.SqlDateTime\" data-throw-if-not-resolved=\"false\"></xref> structure.</p>\n"
  syntax:
    content: public static SqlDateTime operator -(SqlDateTime x, TimeSpan t)
    content.vb: Public Shared Operator -(x As SqlDateTime, t As TimeSpan) As SqlDateTime
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlDateTime
    - id: t
      type: System.TimeSpan
    return:
      type: System.Data.SqlTypes.SqlDateTime
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Data.SqlTypes.SqlDateTime.Parse(System.String)
  commentId: M:System.Data.SqlTypes.SqlDateTime.Parse(System.String)
  id: Parse(System.String)
  parent: System.Data.SqlTypes.SqlDateTime
  langs:
  - csharp
  - vb
  name: Parse(String)
  fullName: System.Data.SqlTypes.SqlDateTime.Parse(System.String)
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDateTime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Parse
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDateTime.cs
    startLine: 346
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: "\n<p>Converts the specified <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref> representation of a date and time to its <xref href=\"System.Data.SqlTypes.SqlDateTime\" data-throw-if-not-resolved=\"false\"></xref> equivalent.</p>\n"
  syntax:
    content: public static SqlDateTime Parse(string s)
    content.vb: Public Shared Function Parse(s As String) As SqlDateTime
    parameters:
    - id: s
      type: System.String
    return:
      type: System.Data.SqlTypes.SqlDateTime
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Data.SqlTypes.SqlDateTime.Subtract(System.Data.SqlTypes.SqlDateTime,System.TimeSpan)
  commentId: M:System.Data.SqlTypes.SqlDateTime.Subtract(System.Data.SqlTypes.SqlDateTime,System.TimeSpan)
  id: Subtract(System.Data.SqlTypes.SqlDateTime,System.TimeSpan)
  parent: System.Data.SqlTypes.SqlDateTime
  langs:
  - csharp
  - vb
  name: Subtract(SqlDateTime, TimeSpan)
  fullName: System.Data.SqlTypes.SqlDateTime.Subtract(System.Data.SqlTypes.SqlDateTime, System.TimeSpan)
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDateTime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Subtract
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDateTime.cs
    startLine: 394
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: "\n<p>Subtracts the specified <strong>Timespan</strong> from this <xref href=\"System.Data.SqlTypes.SqlDateTime\" data-throw-if-not-resolved=\"false\"></xref> instance.</p>\n"
  syntax:
    content: public static SqlDateTime Subtract(SqlDateTime x, TimeSpan t)
    content.vb: Public Shared Function Subtract(x As SqlDateTime, t As TimeSpan) As SqlDateTime
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlDateTime
    - id: t
      type: System.TimeSpan
    return:
      type: System.Data.SqlTypes.SqlDateTime
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Data.SqlTypes.SqlDateTime.ToSqlString
  commentId: M:System.Data.SqlTypes.SqlDateTime.ToSqlString
  id: ToSqlString
  parent: System.Data.SqlTypes.SqlDateTime
  langs:
  - csharp
  - vb
  name: ToSqlString()
  fullName: System.Data.SqlTypes.SqlDateTime.ToSqlString()
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDateTime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ToSqlString
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDateTime.cs
    startLine: 585
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: "\n<p>Converts this <xref href=\"System.Data.SqlTypes.SqlDateTime\" data-throw-if-not-resolved=\"false\"></xref> structure to <xref href=\"System.Data.SqlTypes.SqlString\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: public SqlString ToSqlString()
    content.vb: Public Function ToSqlString As SqlString
    return:
      type: System.Data.SqlTypes.SqlString
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Data.SqlTypes.SqlDateTime.ToString
  commentId: M:System.Data.SqlTypes.SqlDateTime.ToString
  id: ToString
  parent: System.Data.SqlTypes.SqlDateTime
  langs:
  - csharp
  - vb
  name: ToString()
  fullName: System.Data.SqlTypes.SqlDateTime.ToString()
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDateTime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ToString
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLDateTime.cs
    startLine: 338
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: "\n<p>Converts this <xref href=\"System.Data.SqlTypes.SqlDateTime\" data-throw-if-not-resolved=\"false\"></xref> structure to a <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: public override string ToString()
    content.vb: Public Overrides Function ToString As String
    return:
      type: System.String
  overridden: System.ValueType.ToString
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: System.Data.SqlTypes
  isExternal: false
  name: System.Data.SqlTypes
  fullName: System.Data.SqlTypes
- uid: System.Data.SqlTypes.INullable
  parent: System.Data.SqlTypes
  isExternal: false
  name: INullable
  fullName: System.Data.SqlTypes.INullable
- uid: System.IComparable
  parent: System
  isExternal: false
  name: IComparable
  fullName: System.IComparable
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System.Data.SqlTypes.SqlDateTime
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlDateTime
  fullName: System.Data.SqlTypes.SqlDateTime
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  fullName: System.Int32
- uid: System.DateTime
  parent: System
  isExternal: false
  name: DateTime
  fullName: System.DateTime
- uid: System.Double
  parent: System
  isExternal: false
  name: Double
  fullName: System.Double
- uid: System.Data.SqlTypes.INullable.IsNull
  parent: System.Data.SqlTypes.INullable
  isExternal: false
  name: IsNull
  fullName: System.Data.SqlTypes.INullable.IsNull
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  fullName: System.Boolean
- uid: System.TimeSpan
  parent: System
  isExternal: false
  name: TimeSpan
  fullName: System.TimeSpan
- uid: System.IComparable.CompareTo(System.Object)
  parent: System.IComparable
  isExternal: true
  name: CompareTo(Object)
  fullName: System.IComparable.CompareTo(System.Object)
  spec.csharp:
  - uid: System.IComparable.CompareTo(System.Object)
    name: CompareTo
    fullName: System.IComparable.CompareTo
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IComparable.CompareTo(System.Object)
    name: CompareTo
    fullName: System.IComparable.CompareTo
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Data.SqlTypes.SqlBoolean
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlBoolean
  fullName: System.Data.SqlTypes.SqlBoolean
- uid: System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  name: Equals(Object)
  fullName: System.ValueType.Equals(System.Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    fullName: System.ValueType.Equals
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    fullName: System.ValueType.Equals
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.ValueType
  parent: System
  isExternal: false
  name: ValueType
  fullName: System.ValueType
- uid: System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: false
  name: GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    fullName: System.ValueType.GetHashCode
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    fullName: System.ValueType.GetHashCode
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Data.SqlTypes.SqlString
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlString
  fullName: System.Data.SqlTypes.SqlString
- uid: System.String
  parent: System
  isExternal: false
  name: String
  fullName: System.String
- uid: System.ValueType.ToString
  parent: System.ValueType
  isExternal: false
  name: ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    fullName: System.ValueType.ToString
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    fullName: System.ValueType.ToString
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Data.SqlTypes.SqlNullValueException
  isExternal: false
  name: SqlNullValueException
  fullName: System.Data.SqlTypes.SqlNullValueException
