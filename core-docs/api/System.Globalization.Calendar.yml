items:
- uid: System.Globalization.Calendar
  commentId: T:System.Globalization.Calendar
  id: Calendar
  parent: System.Globalization
  children:
  - System.Globalization.Calendar.#ctor
  - System.Globalization.Calendar.AddDays(System.DateTime,System.Int32)
  - System.Globalization.Calendar.AddHours(System.DateTime,System.Int32)
  - System.Globalization.Calendar.AddMilliseconds(System.DateTime,System.Double)
  - System.Globalization.Calendar.AddMinutes(System.DateTime,System.Int32)
  - System.Globalization.Calendar.AddMonths(System.DateTime,System.Int32)
  - System.Globalization.Calendar.AddSeconds(System.DateTime,System.Int32)
  - System.Globalization.Calendar.AddWeeks(System.DateTime,System.Int32)
  - System.Globalization.Calendar.AddYears(System.DateTime,System.Int32)
  - System.Globalization.Calendar.CurrentEra
  - System.Globalization.Calendar.Eras
  - System.Globalization.Calendar.GetDayOfMonth(System.DateTime)
  - System.Globalization.Calendar.GetDayOfWeek(System.DateTime)
  - System.Globalization.Calendar.GetDayOfYear(System.DateTime)
  - System.Globalization.Calendar.GetDaysInMonth(System.Int32,System.Int32)
  - System.Globalization.Calendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)
  - System.Globalization.Calendar.GetDaysInYear(System.Int32)
  - System.Globalization.Calendar.GetDaysInYear(System.Int32,System.Int32)
  - System.Globalization.Calendar.GetEra(System.DateTime)
  - System.Globalization.Calendar.GetHour(System.DateTime)
  - System.Globalization.Calendar.GetLeapMonth(System.Int32,System.Int32)
  - System.Globalization.Calendar.GetMilliseconds(System.DateTime)
  - System.Globalization.Calendar.GetMinute(System.DateTime)
  - System.Globalization.Calendar.GetMonth(System.DateTime)
  - System.Globalization.Calendar.GetMonthsInYear(System.Int32)
  - System.Globalization.Calendar.GetMonthsInYear(System.Int32,System.Int32)
  - System.Globalization.Calendar.GetSecond(System.DateTime)
  - System.Globalization.Calendar.GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)
  - System.Globalization.Calendar.GetYear(System.DateTime)
  - System.Globalization.Calendar.IsLeapDay(System.Int32,System.Int32,System.Int32)
  - System.Globalization.Calendar.IsLeapDay(System.Int32,System.Int32,System.Int32,System.Int32)
  - System.Globalization.Calendar.IsLeapMonth(System.Int32,System.Int32)
  - System.Globalization.Calendar.IsLeapMonth(System.Int32,System.Int32,System.Int32)
  - System.Globalization.Calendar.IsLeapYear(System.Int32)
  - System.Globalization.Calendar.IsLeapYear(System.Int32,System.Int32)
  - System.Globalization.Calendar.IsReadOnly
  - System.Globalization.Calendar.MaxSupportedDateTime
  - System.Globalization.Calendar.MinSupportedDateTime
  - System.Globalization.Calendar.ToDateTime(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  - System.Globalization.Calendar.ToDateTime(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  - System.Globalization.Calendar.ToFourDigitYear(System.Int32)
  - System.Globalization.Calendar.TwoDigitYearMax
  langs:
  - csharp
  - vb
  name: Calendar
  fullName: System.Globalization.Calendar
  type: Class
  source:
    remote:
      path: src/System.Globalization/ref/System.Globalization.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Calendar
    path: src/System.Globalization/ref/System.Globalization.cs
    startLine: 10
  assemblies:
  - System.Globalization
  namespace: System.Globalization
  summary: "\n<p>Represents time in divisions, such as weeks, months, and years.</p>\n"
  remarks: "\n<p>A calendar divides time into units, such as weeks, months, and years. The number, length, and start of the divisions vary in each calendar.</p>\n<p>For information about using the calendar classes in the .NET Framework, see Working with Calendars.</p>\n<p>Any moment in time can be represented as a set of numeric values using a particular calendar. For example, a vernal equinox occurred at (1999, 3, 20, 8, 46, 0, 0.0) in the Gregorian calendar, that is, March 20, 1999 C.E. at 8:46:00:0.0. An implementation of <xref href=\"System.Globalization.Calendar\" data-throw-if-not-resolved=\"false\"></xref> can map any date in the range of a specific calendar to a similar set of numeric values, and <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> can map such sets of numeric values to a textual representation using information from <xref href=\"System.Globalization.Calendar\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"System.Globalization.DateTimeFormatInfo\" data-throw-if-not-resolved=\"false\"></xref>. The textual representation can be culture-sensitive, for example, \"8:46 AM March 20th 1999 AD\" for the en-US culture, or culture-insensitive, for example, \"1999-03-20T08:46:00\" in ISO 8601 format.</p>\n<p>A <xref href=\"System.Globalization.Calendar\" data-throw-if-not-resolved=\"false\"></xref> implementation can define one or more eras. The <xref href=\"System.Globalization.Calendar\" data-throw-if-not-resolved=\"false\"></xref> class identifies the eras as enumerated integers, where the current era (<xref href=\"System.Globalization.Calendar.CurrentEra\" data-throw-if-not-resolved=\"false\"></xref>) has the value 0.</p>\n<p>To make up for the difference between the calendar year and the actual time that the earth rotates around the sun or the actual time that the moon rotates around the earth, a leap year has a different number of days from a standard calendar year. Each <xref href=\"System.Globalization.Calendar\" data-throw-if-not-resolved=\"false\"></xref> implementation defines leap years differently.</p>\n<p>For consistency, the first unit in each interval (the first month, for example) is assigned the value 1.</p>\n<p>The <xref href=\"System.Globalization\" data-throw-if-not-resolved=\"false\"></xref> namespace includes the following <xref href=\"System.Globalization.Calendar\" data-throw-if-not-resolved=\"false\"></xref> implementations:</p>\n<ul><li>\n<p>\n<xref href=\"System.Globalization.ChineseLunisolarCalendar\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</li><li>\n<p>\n<xref href=\"System.Globalization.EastAsianLunisolarCalendar\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</li><li>\n<p>\n<xref href=\"System.Globalization.GregorianCalendar\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</li><li>\n<p>\n<xref href=\"System.Globalization.HebrewCalendar\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</li><li>\n<p>\n<xref href=\"System.Globalization.HijriCalendar\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</li><li>\n<p>\n<xref href=\"System.Globalization.JapaneseCalendar\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</li><li>\n<p>\n<xref href=\"System.Globalization.JapaneseLunisolarCalendar\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</li><li>\n<p>\n<xref href=\"System.Globalization.JulianCalendar\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</li><li>\n<p>\n<xref href=\"System.Globalization.KoreanCalendar\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</li><li>\n<p>\n<xref href=\"System.Globalization.KoreanLunisolarCalendar\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</li><li>\n<p>\n<xref href=\"System.Globalization.PersianCalendar\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</li><li>\n<p>\n<xref href=\"System.Globalization.TaiwanCalendar\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</li><li>\n<p>\n<xref href=\"System.Globalization.TaiwanLunisolarCalendar\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</li><li>\n<p>\n<xref href=\"System.Globalization.ThaiBuddhistCalendar\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</li><li>\n<p>\n<xref href=\"System.Globalization.UmAlQuraCalendar\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</li></ul>\n"
  example:
  - "\n<p>The following code example demonstrates the members of the <xref href=\"System.Globalization.Calendar\" data-throw-if-not-resolved=\"false\"></xref> class.</p>System.Globalization.Calendar#1"
  syntax:
    content: 'public abstract class Calendar : object'
    content.vb: >-
      Public MustInherit Class Calendar
          Inherits Object
  seealso:
  - type: System.DateTime
    commentId: T:System.DateTime
  - type: System.Globalization.DateTimeFormatInfo
    commentId: T:System.Globalization.DateTimeFormatInfo
  - type: System.Globalization.ChineseLunisolarCalendar
    commentId: T:System.Globalization.ChineseLunisolarCalendar
  - type: System.Globalization.EastAsianLunisolarCalendar
    commentId: T:System.Globalization.EastAsianLunisolarCalendar
  - type: System.Globalization.GregorianCalendar
    commentId: T:System.Globalization.GregorianCalendar
  - type: System.Globalization.HebrewCalendar
    commentId: T:System.Globalization.HebrewCalendar
  - type: System.Globalization.HijriCalendar
    commentId: T:System.Globalization.HijriCalendar
  - type: System.Globalization.JapaneseCalendar
    commentId: T:System.Globalization.JapaneseCalendar
  - type: System.Globalization.JapaneseLunisolarCalendar
    commentId: T:System.Globalization.JapaneseLunisolarCalendar
  - type: System.Globalization.JulianCalendar
    commentId: T:System.Globalization.JulianCalendar
  - type: System.Globalization.KoreanCalendar
    commentId: T:System.Globalization.KoreanCalendar
  - type: System.Globalization.KoreanLunisolarCalendar
    commentId: T:System.Globalization.KoreanLunisolarCalendar
  - type: System.Globalization.PersianCalendar
    commentId: T:System.Globalization.PersianCalendar
  - type: System.Globalization.TaiwanCalendar
    commentId: T:System.Globalization.TaiwanCalendar
  - type: System.Globalization.TaiwanLunisolarCalendar
    commentId: T:System.Globalization.TaiwanLunisolarCalendar
  - type: System.Globalization.ThaiBuddhistCalendar
    commentId: T:System.Globalization.ThaiBuddhistCalendar
  - type: System.Globalization.UmAlQuraCalendar
    commentId: T:System.Globalization.UmAlQuraCalendar
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: System.Globalization.Calendar.CurrentEra
  commentId: F:System.Globalization.Calendar.CurrentEra
  id: CurrentEra
  parent: System.Globalization.Calendar
  langs:
  - csharp
  - vb
  name: CurrentEra
  fullName: System.Globalization.Calendar.CurrentEra
  type: Field
  source:
    remote:
      path: src/System.Globalization/ref/System.Globalization.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CurrentEra
    path: src/System.Globalization/ref/System.Globalization.cs
    startLine: 12
  assemblies:
  - System.Globalization
  namespace: System.Globalization
  summary: "\n<p>Represents the current era of the current calendar. </p>\n"
  remarks: "\n<p>The <xref href=\"System.Globalization.Calendar.CurrentEra\" data-throw-if-not-resolved=\"false\"></xref> field represents the index of the current era in the <xref href=\"System.Globalization.Calendar.Eras\" data-throw-if-not-resolved=\"false\"></xref> array. Because eras are arranged in reverse chronological order (from the current era to earlier eras), this field is a constant that has a value of 0.</p>\n"
  syntax:
    content: public const int CurrentEra = null
    content.vb: Public Const CurrentEra As Integer = Nothing
    return:
      type: System.Int32
  seealso:
  - type: System.Globalization.Calendar.Eras
    commentId: P:System.Globalization.Calendar.Eras
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Globalization.Calendar.#ctor
  commentId: M:System.Globalization.Calendar.#ctor
  id: '#ctor'
  parent: System.Globalization.Calendar
  langs:
  - csharp
  - vb
  name: Calendar()
  fullName: System.Globalization.Calendar.Calendar()
  type: Constructor
  source:
    remote:
      path: src/System.Globalization/ref/System.Globalization.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Globalization/ref/System.Globalization.cs
    startLine: 13
  assemblies:
  - System.Globalization
  namespace: System.Globalization
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Globalization.Calendar\" data-throw-if-not-resolved=\"false\"></xref> class.</p>\n"
  example:
  - "\n<p>The following example demonstrates the members of the <xref href=\"System.Globalization.Calendar\" data-throw-if-not-resolved=\"false\"></xref> class.</p>System.Globalization.Calendar#1"
  syntax:
    content: protected Calendar()
    content.vb: Protected Sub New
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: System.Globalization.Calendar.Eras
  commentId: P:System.Globalization.Calendar.Eras
  id: Eras
  parent: System.Globalization.Calendar
  langs:
  - csharp
  - vb
  name: Eras
  fullName: System.Globalization.Calendar.Eras
  type: Property
  source:
    remote:
      path: src/System.Globalization/ref/System.Globalization.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Eras
    path: src/System.Globalization/ref/System.Globalization.cs
    startLine: 14
  assemblies:
  - System.Globalization
  namespace: System.Globalization
  summary: "\n<p>When overridden in a derived class, gets the list of eras in the current calendar.</p>\n"
  remarks: "\n<p>The eras are in reverse chronological order, with the current era as the first element of the array, and the oldest era as the last element of the array. For example, the value of the current era in <xref href=\"System.Globalization.JapaneseCalendar\" data-throw-if-not-resolved=\"false\"></xref> is 4, which is the first element of the array.</p>\n"
  example:
  - "\n<p>The following code example displays the values contained in <xref href=\"System.Globalization.JapaneseCalendar.Eras\" data-throw-if-not-resolved=\"false\"></xref>.</p>System.Globalization.JapaneseCalendar.Eras#1"
  syntax:
    content: public abstract int[] Eras { get; }
    content.vb: Public MustOverride ReadOnly Property Eras As Integer()
    parameters: []
    return:
      type: System.Int32[]
      description: "\n<p>An array of integers that represents the eras in the current calendar.</p>\n"
  seealso:
  - type: System.Globalization.Calendar.CurrentEra
    commentId: F:System.Globalization.Calendar.CurrentEra
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
- uid: System.Globalization.Calendar.IsReadOnly
  commentId: P:System.Globalization.Calendar.IsReadOnly
  id: IsReadOnly
  parent: System.Globalization.Calendar
  langs:
  - csharp
  - vb
  name: IsReadOnly
  fullName: System.Globalization.Calendar.IsReadOnly
  type: Property
  source:
    remote:
      path: src/System.Globalization/ref/System.Globalization.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IsReadOnly
    path: src/System.Globalization/ref/System.Globalization.cs
    startLine: 15
  assemblies:
  - System.Globalization
  namespace: System.Globalization
  summary: "\n<p>Gets a value indicating whether this <xref href=\"System.Globalization.Calendar\" data-throw-if-not-resolved=\"false\"></xref> object is read-only.</p>\n"
  example:
  - 
  syntax:
    content: public bool IsReadOnly { get; }
    content.vb: Public ReadOnly Property IsReadOnly As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if this <xref href=\"System.Globalization.Calendar\" data-throw-if-not-resolved=\"false\"></xref> object is read-only; otherwise, <strong>false</strong>.</p>\n"
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Globalization.Calendar.MaxSupportedDateTime
  commentId: P:System.Globalization.Calendar.MaxSupportedDateTime
  id: MaxSupportedDateTime
  parent: System.Globalization.Calendar
  langs:
  - csharp
  - vb
  name: MaxSupportedDateTime
  fullName: System.Globalization.Calendar.MaxSupportedDateTime
  type: Property
  source:
    remote:
      path: src/System.Globalization/ref/System.Globalization.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: MaxSupportedDateTime
    path: src/System.Globalization/ref/System.Globalization.cs
    startLine: 16
  assemblies:
  - System.Globalization
  namespace: System.Globalization
  summary: "\n<p>Gets the latest date and time supported by this <xref href=\"System.Globalization.Calendar\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  example:
  - 
  syntax:
    content: public virtual DateTime MaxSupportedDateTime { get; }
    content.vb: Public Overridable ReadOnly Property MaxSupportedDateTime As DateTime
    parameters: []
    return:
      type: System.DateTime
      description: "\n<p>The latest date and time supported by this calendar. The default is <xref href=\"System.DateTime.MaxValue\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  seealso:
  - type: System.Globalization.Calendar.MinSupportedDateTime
    commentId: P:System.Globalization.Calendar.MinSupportedDateTime
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: System.Globalization.Calendar.MinSupportedDateTime
  commentId: P:System.Globalization.Calendar.MinSupportedDateTime
  id: MinSupportedDateTime
  parent: System.Globalization.Calendar
  langs:
  - csharp
  - vb
  name: MinSupportedDateTime
  fullName: System.Globalization.Calendar.MinSupportedDateTime
  type: Property
  source:
    remote:
      path: src/System.Globalization/ref/System.Globalization.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: MinSupportedDateTime
    path: src/System.Globalization/ref/System.Globalization.cs
    startLine: 17
  assemblies:
  - System.Globalization
  namespace: System.Globalization
  summary: "\n<p>Gets the earliest date and time supported by this <xref href=\"System.Globalization.Calendar\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  example:
  - 
  syntax:
    content: public virtual DateTime MinSupportedDateTime { get; }
    content.vb: Public Overridable ReadOnly Property MinSupportedDateTime As DateTime
    parameters: []
    return:
      type: System.DateTime
      description: "\n<p>The earliest date and time supported by this calendar. The default is <xref href=\"System.DateTime.MinValue\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  seealso:
  - type: System.Globalization.Calendar.MaxSupportedDateTime
    commentId: P:System.Globalization.Calendar.MaxSupportedDateTime
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: System.Globalization.Calendar.TwoDigitYearMax
  commentId: P:System.Globalization.Calendar.TwoDigitYearMax
  id: TwoDigitYearMax
  parent: System.Globalization.Calendar
  langs:
  - csharp
  - vb
  name: TwoDigitYearMax
  fullName: System.Globalization.Calendar.TwoDigitYearMax
  type: Property
  source:
    remote:
      path: src/System.Globalization/ref/System.Globalization.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: TwoDigitYearMax
    path: src/System.Globalization/ref/System.Globalization.cs
    startLine: 18
  assemblies:
  - System.Globalization
  namespace: System.Globalization
  summary: "\n<p>Gets or sets the last year of a 100-year range that can be represented by a 2-digit year.</p>\n"
  remarks: "\n<p>This property allows a 2-digit year to be properly translated to a 4-digit year. For example, if this property is set to 2029, the 100-year range is from 1930 to 2029. Therefore, a 2-digit value of 30 is interpreted as 1930, while a 2-digit value of 29 is interpreted as 2029.</p>\n<p>The initial value of this property is derived from the settings in the regional and language options portion of Control Panel. However, that information can change during the life of the <xref href=\"System.AppDomain\" data-throw-if-not-resolved=\"false\"></xref>. The <xref href=\"System.Globalization.Calendar\" data-throw-if-not-resolved=\"false\"></xref> class does not detect changes in the system settings automatically. If the calendar is not supported in the regional and language options, the initial value of this property is the default value defined by the <xref href=\"System.Globalization.Calendar\" data-throw-if-not-resolved=\"false\"></xref> class.</p>\n<p>Your application should set this value to 99 to indicate that 2-digit years are to be taken literally. For example, if this property is set to 99, the 100-year range is from 0 (not a valid value for most calendars) to 99. Therefore, a 2-digit value of 30 is interpreted as 30.</p>\n"
  syntax:
    content: public virtual int TwoDigitYearMax { get; set; }
    content.vb: Public Overridable Property TwoDigitYearMax As Integer
    parameters: []
    return:
      type: System.Int32
      description: "\n<p>The last year of a 100-year range that can be represented by a 2-digit year.</p>\n"
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "\n<p>The current <xref href=\"System.Globalization.Calendar\" data-throw-if-not-resolved=\"false\"></xref> object is read-only.</p>\n"
  seealso:
  - type: System.Globalization.Calendar.ToFourDigitYear(System.Int32)
    commentId: M:System.Globalization.Calendar.ToFourDigitYear(System.Int32)
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Globalization.Calendar.AddDays(System.DateTime,System.Int32)
  commentId: M:System.Globalization.Calendar.AddDays(System.DateTime,System.Int32)
  id: AddDays(System.DateTime,System.Int32)
  parent: System.Globalization.Calendar
  langs:
  - csharp
  - vb
  name: AddDays(DateTime, Int32)
  fullName: System.Globalization.Calendar.AddDays(System.DateTime, System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Globalization/ref/System.Globalization.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: AddDays
    path: src/System.Globalization/ref/System.Globalization.cs
    startLine: 19
  assemblies:
  - System.Globalization
  namespace: System.Globalization
  summary: "\n<p>Returns a <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> that is the specified number of days away from the specified <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  remarks: "\n<p>The <em>days</em> value is added to the specified <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref>. If <em>days</em> is negative, the resulting <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> is earlier than the specified <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>The month part of the resulting <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> is affected if the resulting day is outside the month of the specified <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref>. The year part of the resulting <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> is affected if the resulting month is outside the year of the specified <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref>. The era part of the resulting <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> is affected if the resulting year is outside the era of the specified <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref>. The time-of-day part of the resulting <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> remains the same as the specified <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>The<xref href=\"System.DateTime.Kind\" data-throw-if-not-resolved=\"false\"></xref> property of the returned <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> value always equals <xref href=\"System.DateTimeKind.Unspecified\" data-throw-if-not-resolved=\"false\"></xref>. You can preserve the <xref href=\"System.DateTime.Kind\" data-throw-if-not-resolved=\"false\"></xref> property of the <em>time</em> parameter by calling the <xref href=\"System.DateTime.SpecifyKind(System.DateTime,System.DateTimeKind)\" data-throw-if-not-resolved=\"false\"></xref> method, as the following example shows.</p>System.Globalization.Calendar.AddMethods#1"
  example:
  - "\n<p>The following code example demonstrates the members of the <xref href=\"System.Globalization.Calendar\" data-throw-if-not-resolved=\"false\"></xref> class.</p>System.Globalization.Calendar#1"
  syntax:
    content: public virtual DateTime AddDays(DateTime time, int days)
    content.vb: Public Overridable Function AddDays(time As DateTime, days As Integer) As DateTime
    parameters:
    - id: time
      type: System.DateTime
      description: "\n<p>The <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> to which to add days. </p>\n"
    - id: days
      type: System.Int32
      description: "\n<p>The number of days to add. </p>\n"
    return:
      type: System.DateTime
      description: "\n<p>The <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> that results from adding the specified number of days to the specified <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<p>The resulting <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> is outside the supported range of this calendar. </p>\n"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>\n<em>days</em> is outside the supported range of the <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> return value. </p>\n"
  seealso:
  - type: System.DateTime
    commentId: T:System.DateTime
  - type: System.Globalization.Calendar.AddYears(System.DateTime,System.Int32)
    commentId: M:System.Globalization.Calendar.AddYears(System.DateTime,System.Int32)
  - type: System.Globalization.Calendar.AddMonths(System.DateTime,System.Int32)
    commentId: M:System.Globalization.Calendar.AddMonths(System.DateTime,System.Int32)
  - type: System.Globalization.Calendar.AddWeeks(System.DateTime,System.Int32)
    commentId: M:System.Globalization.Calendar.AddWeeks(System.DateTime,System.Int32)
  - type: System.Globalization.Calendar.AddHours(System.DateTime,System.Int32)
    commentId: M:System.Globalization.Calendar.AddHours(System.DateTime,System.Int32)
  - type: System.Globalization.Calendar.AddMinutes(System.DateTime,System.Int32)
    commentId: M:System.Globalization.Calendar.AddMinutes(System.DateTime,System.Int32)
  - type: System.Globalization.Calendar.AddSeconds(System.DateTime,System.Int32)
    commentId: M:System.Globalization.Calendar.AddSeconds(System.DateTime,System.Int32)
  - type: System.Globalization.Calendar.AddMilliseconds(System.DateTime,System.Double)
    commentId: M:System.Globalization.Calendar.AddMilliseconds(System.DateTime,System.Double)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Globalization.Calendar.AddHours(System.DateTime,System.Int32)
  commentId: M:System.Globalization.Calendar.AddHours(System.DateTime,System.Int32)
  id: AddHours(System.DateTime,System.Int32)
  parent: System.Globalization.Calendar
  langs:
  - csharp
  - vb
  name: AddHours(DateTime, Int32)
  fullName: System.Globalization.Calendar.AddHours(System.DateTime, System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Globalization/ref/System.Globalization.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: AddHours
    path: src/System.Globalization/ref/System.Globalization.cs
    startLine: 20
  assemblies:
  - System.Globalization
  namespace: System.Globalization
  summary: "\n<p>Returns a <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> that is the specified number of hours away from the specified <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  remarks: "\n<p>The <em>hours</em> value is added to the specified <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref>. If <em>hours</em> is negative, the resulting <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> is earlier than the specified <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>The day part of the resulting <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> is affected if the resulting time is outside the day of the specified <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref>. The month part of the resulting <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> is affected if the resulting day is outside the month of the specified <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref>. The year part of the resulting <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> is affected if the resulting month is outside the year of the specified <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref>. The era part of the resulting <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> is affected if the resulting year is outside the era of the specified <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>The<xref href=\"System.DateTime.Kind\" data-throw-if-not-resolved=\"false\"></xref> property of the returned <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> value always equals <xref href=\"System.DateTimeKind.Unspecified\" data-throw-if-not-resolved=\"false\"></xref>. You can preserve the <xref href=\"System.DateTime.Kind\" data-throw-if-not-resolved=\"false\"></xref> property of the <em>time</em> parameter by calling the <xref href=\"System.DateTime.SpecifyKind(System.DateTime,System.DateTimeKind)\" data-throw-if-not-resolved=\"false\"></xref> method, as the following example shows.</p>System.Globalization.Calendar.AddMethods#2"
  example:
  - "\n<p>The following code example demonstrates the members of the <xref href=\"System.Globalization.Calendar\" data-throw-if-not-resolved=\"false\"></xref> class.</p>System.Globalization.Calendar#1"
  syntax:
    content: public virtual DateTime AddHours(DateTime time, int hours)
    content.vb: Public Overridable Function AddHours(time As DateTime, hours As Integer) As DateTime
    parameters:
    - id: time
      type: System.DateTime
      description: "\n<p>The <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> to which to add hours. </p>\n"
    - id: hours
      type: System.Int32
      description: "\n<p>The number of hours to add. </p>\n"
    return:
      type: System.DateTime
      description: "\n<p>The <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> that results from adding the specified number of hours to the specified <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<p>The resulting <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> is outside the supported range of this calendar. </p>\n"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>\n<em>hours</em> is outside the supported range of the <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> return value. </p>\n"
  seealso:
  - type: System.DateTime
    commentId: T:System.DateTime
  - type: System.Globalization.Calendar.AddYears(System.DateTime,System.Int32)
    commentId: M:System.Globalization.Calendar.AddYears(System.DateTime,System.Int32)
  - type: System.Globalization.Calendar.AddMonths(System.DateTime,System.Int32)
    commentId: M:System.Globalization.Calendar.AddMonths(System.DateTime,System.Int32)
  - type: System.Globalization.Calendar.AddWeeks(System.DateTime,System.Int32)
    commentId: M:System.Globalization.Calendar.AddWeeks(System.DateTime,System.Int32)
  - type: System.Globalization.Calendar.AddDays(System.DateTime,System.Int32)
    commentId: M:System.Globalization.Calendar.AddDays(System.DateTime,System.Int32)
  - type: System.Globalization.Calendar.AddMinutes(System.DateTime,System.Int32)
    commentId: M:System.Globalization.Calendar.AddMinutes(System.DateTime,System.Int32)
  - type: System.Globalization.Calendar.AddSeconds(System.DateTime,System.Int32)
    commentId: M:System.Globalization.Calendar.AddSeconds(System.DateTime,System.Int32)
  - type: System.Globalization.Calendar.AddMilliseconds(System.DateTime,System.Double)
    commentId: M:System.Globalization.Calendar.AddMilliseconds(System.DateTime,System.Double)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Globalization.Calendar.AddMilliseconds(System.DateTime,System.Double)
  commentId: M:System.Globalization.Calendar.AddMilliseconds(System.DateTime,System.Double)
  id: AddMilliseconds(System.DateTime,System.Double)
  parent: System.Globalization.Calendar
  langs:
  - csharp
  - vb
  name: AddMilliseconds(DateTime, Double)
  fullName: System.Globalization.Calendar.AddMilliseconds(System.DateTime, System.Double)
  type: Method
  source:
    remote:
      path: src/System.Globalization/ref/System.Globalization.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: AddMilliseconds
    path: src/System.Globalization/ref/System.Globalization.cs
    startLine: 21
  assemblies:
  - System.Globalization
  namespace: System.Globalization
  summary: "\n<p>Returns a <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> that is the specified number of milliseconds away from the specified <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  remarks: "\n<p>The <em>milliseconds</em> value is rounded to the nearest integer before it is added to the specified <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref>. If <em>milliseconds</em> is negative, the resulting <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> is earlier than the specified <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>The day part of the resulting <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> is affected if the resulting time is outside the day of the specified <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref>. The month part of the resulting <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> is affected if the resulting day is outside the month of the specified <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref>. The year part of the resulting <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> is affected if the resulting month is outside the year of the specified <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref>. The era part of the resulting <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> is affected if the resulting year is outside the era of the specified <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>The<xref href=\"System.DateTime.Kind\" data-throw-if-not-resolved=\"false\"></xref> property of the returned <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> value always equals <xref href=\"System.DateTimeKind.Unspecified\" data-throw-if-not-resolved=\"false\"></xref>. You can preserve the <xref href=\"System.DateTime.Kind\" data-throw-if-not-resolved=\"false\"></xref> property of the <em>time</em> parameter by calling the <xref href=\"System.DateTime.SpecifyKind(System.DateTime,System.DateTimeKind)\" data-throw-if-not-resolved=\"false\"></xref> method, as the following example shows.</p>System.Globalization.Calendar.AddMethods#3"
  example:
  - "\n<p>The following code example demonstrates the members of the <xref href=\"System.Globalization.Calendar\" data-throw-if-not-resolved=\"false\"></xref> class.</p>System.Globalization.Calendar#1"
  syntax:
    content: public virtual DateTime AddMilliseconds(DateTime time, double milliseconds)
    content.vb: Public Overridable Function AddMilliseconds(time As DateTime, milliseconds As Double) As DateTime
    parameters:
    - id: time
      type: System.DateTime
      description: "\n<p>The <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> to add milliseconds to. </p>\n"
    - id: milliseconds
      type: System.Double
      description: "\n<p>The number of milliseconds to add.</p>\n"
    return:
      type: System.DateTime
      description: "\n<p>The <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> that results from adding the specified number of milliseconds to the specified <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<p>The resulting <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> is outside the supported range of this calendar. </p>\n"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>\n<em>milliseconds</em> is outside the supported range of the <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> return value. </p>\n"
  seealso:
  - type: System.DateTime
    commentId: T:System.DateTime
  - type: System.Globalization.Calendar.AddYears(System.DateTime,System.Int32)
    commentId: M:System.Globalization.Calendar.AddYears(System.DateTime,System.Int32)
  - type: System.Globalization.Calendar.AddMonths(System.DateTime,System.Int32)
    commentId: M:System.Globalization.Calendar.AddMonths(System.DateTime,System.Int32)
  - type: System.Globalization.Calendar.AddWeeks(System.DateTime,System.Int32)
    commentId: M:System.Globalization.Calendar.AddWeeks(System.DateTime,System.Int32)
  - type: System.Globalization.Calendar.AddDays(System.DateTime,System.Int32)
    commentId: M:System.Globalization.Calendar.AddDays(System.DateTime,System.Int32)
  - type: System.Globalization.Calendar.AddHours(System.DateTime,System.Int32)
    commentId: M:System.Globalization.Calendar.AddHours(System.DateTime,System.Int32)
  - type: System.Globalization.Calendar.AddMinutes(System.DateTime,System.Int32)
    commentId: M:System.Globalization.Calendar.AddMinutes(System.DateTime,System.Int32)
  - type: System.Globalization.Calendar.AddSeconds(System.DateTime,System.Int32)
    commentId: M:System.Globalization.Calendar.AddSeconds(System.DateTime,System.Int32)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Globalization.Calendar.AddMinutes(System.DateTime,System.Int32)
  commentId: M:System.Globalization.Calendar.AddMinutes(System.DateTime,System.Int32)
  id: AddMinutes(System.DateTime,System.Int32)
  parent: System.Globalization.Calendar
  langs:
  - csharp
  - vb
  name: AddMinutes(DateTime, Int32)
  fullName: System.Globalization.Calendar.AddMinutes(System.DateTime, System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Globalization/ref/System.Globalization.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: AddMinutes
    path: src/System.Globalization/ref/System.Globalization.cs
    startLine: 22
  assemblies:
  - System.Globalization
  namespace: System.Globalization
  summary: "\n<p>Returns a <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> that is the specified number of minutes away from the specified <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  remarks: "\n<p>The <em>minutes</em> value is added to the specified <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref>. If <em>minutes</em> is negative, the resulting <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> is earlier than the specified <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>The day part of the resulting <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> is affected if the resulting time is outside the day of the specified <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref>. The month part of the resulting <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> is affected if the resulting day is outside the month of the specified <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref>. The year part of the resulting <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> is affected if the resulting month is outside the year of the specified <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref>. The era part of the resulting <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> is affected if the resulting year is outside the era of the specified <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>The<xref href=\"System.DateTime.Kind\" data-throw-if-not-resolved=\"false\"></xref> property of the returned <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> value always equals <xref href=\"System.DateTimeKind.Unspecified\" data-throw-if-not-resolved=\"false\"></xref>. You can preserve the <xref href=\"System.DateTime.Kind\" data-throw-if-not-resolved=\"false\"></xref> property of the <em>time</em> parameter by calling the <xref href=\"System.DateTime.SpecifyKind(System.DateTime,System.DateTimeKind)\" data-throw-if-not-resolved=\"false\"></xref> method, as the following example shows.</p>System.Globalization.Calendar.AddMethods#4"
  example:
  - "\n<p>The following code example demonstrates the members of the <xref href=\"System.Globalization.Calendar\" data-throw-if-not-resolved=\"false\"></xref> class.</p>System.Globalization.Calendar#1"
  syntax:
    content: public virtual DateTime AddMinutes(DateTime time, int minutes)
    content.vb: Public Overridable Function AddMinutes(time As DateTime, minutes As Integer) As DateTime
    parameters:
    - id: time
      type: System.DateTime
      description: "\n<p>The <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> to which to add minutes. </p>\n"
    - id: minutes
      type: System.Int32
      description: "\n<p>The number of minutes to add. </p>\n"
    return:
      type: System.DateTime
      description: "\n<p>The <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> that results from adding the specified number of minutes to the specified <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<p>The resulting <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> is outside the supported range of this calendar. </p>\n"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>\n<em>minutes</em> is outside the supported range of the <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> return value. </p>\n"
  seealso:
  - type: System.DateTime
    commentId: T:System.DateTime
  - type: System.Globalization.Calendar.AddYears(System.DateTime,System.Int32)
    commentId: M:System.Globalization.Calendar.AddYears(System.DateTime,System.Int32)
  - type: System.Globalization.Calendar.AddMonths(System.DateTime,System.Int32)
    commentId: M:System.Globalization.Calendar.AddMonths(System.DateTime,System.Int32)
  - type: System.Globalization.Calendar.AddWeeks(System.DateTime,System.Int32)
    commentId: M:System.Globalization.Calendar.AddWeeks(System.DateTime,System.Int32)
  - type: System.Globalization.Calendar.AddDays(System.DateTime,System.Int32)
    commentId: M:System.Globalization.Calendar.AddDays(System.DateTime,System.Int32)
  - type: System.Globalization.Calendar.AddHours(System.DateTime,System.Int32)
    commentId: M:System.Globalization.Calendar.AddHours(System.DateTime,System.Int32)
  - type: System.Globalization.Calendar.AddSeconds(System.DateTime,System.Int32)
    commentId: M:System.Globalization.Calendar.AddSeconds(System.DateTime,System.Int32)
  - type: System.Globalization.Calendar.AddMilliseconds(System.DateTime,System.Double)
    commentId: M:System.Globalization.Calendar.AddMilliseconds(System.DateTime,System.Double)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Globalization.Calendar.AddMonths(System.DateTime,System.Int32)
  commentId: M:System.Globalization.Calendar.AddMonths(System.DateTime,System.Int32)
  id: AddMonths(System.DateTime,System.Int32)
  parent: System.Globalization.Calendar
  langs:
  - csharp
  - vb
  name: AddMonths(DateTime, Int32)
  fullName: System.Globalization.Calendar.AddMonths(System.DateTime, System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Globalization/ref/System.Globalization.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: AddMonths
    path: src/System.Globalization/ref/System.Globalization.cs
    startLine: 23
  assemblies:
  - System.Globalization
  namespace: System.Globalization
  summary: "\n<p>When overridden in a derived class, returns a <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> that is the specified number of months away from the specified <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  remarks: "\n<p>The <em>months</em> value is added to the specified <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref>. If <em>months</em> is negative, the resulting <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> is earlier than the specified <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>The day part of the resulting <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> is affected if the resulting day is not a valid day in the resulting month of the resulting year. It is changed to the last valid day in the resulting month of the resulting year. The year part of the resulting <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> is affected if the resulting month is outside the year of the specified <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref>. The era part of the resulting <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> is affected if the resulting year is outside the era of the specified <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref>. The time-of-day part of the resulting <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> remains the same as the specified <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>For example, suppose that the current calendar has 12 months, where the fourth month has 30 days and the tenth month has 31 days. If the specified month is the tenth month, the specified day is the 31st day of that month, and the value of the <em>months</em> parameter is 6, the resulting year is one more than the specified year, the resulting month is the fourth month, and the resulting day is the 30th day, which is the last day of the resulting month.</p>\n<p>If the value of the <em>months</em> parameter is negative, the resulting <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> is earlier than the specified <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>The<xref href=\"System.DateTime.Kind\" data-throw-if-not-resolved=\"false\"></xref> property of the returned <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> value always equals <xref href=\"System.DateTimeKind.Unspecified\" data-throw-if-not-resolved=\"false\"></xref>. You can preserve the <xref href=\"System.DateTime.Kind\" data-throw-if-not-resolved=\"false\"></xref> property of the <em>time</em> parameter by calling the <xref href=\"System.DateTime.SpecifyKind(System.DateTime,System.DateTimeKind)\" data-throw-if-not-resolved=\"false\"></xref> method, as the following example shows.</p>System.Globalization.Calendar.AddMethods#5"
  example:
  - "\n<p>The following code example demonstrates the members of the <xref href=\"System.Globalization.Calendar\" data-throw-if-not-resolved=\"false\"></xref> class.</p>System.Globalization.Calendar#1"
  syntax:
    content: public abstract DateTime AddMonths(DateTime time, int months)
    content.vb: Public MustOverride Function AddMonths(time As DateTime, months As Integer) As DateTime
    parameters:
    - id: time
      type: System.DateTime
      description: "\n<p>The <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> to which to add months. </p>\n"
    - id: months
      type: System.Int32
      description: "\n<p>The number of months to add. </p>\n"
    return:
      type: System.DateTime
      description: "\n<p>The <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> that results from adding the specified number of months to the specified <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<p>The resulting <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> is outside the supported range of this calendar. </p>\n"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>\n<em>months</em> is outside the supported range of the <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> return value. </p>\n"
  seealso:
  - type: System.DateTime
    commentId: T:System.DateTime
  - type: System.Globalization.Calendar.AddYears(System.DateTime,System.Int32)
    commentId: M:System.Globalization.Calendar.AddYears(System.DateTime,System.Int32)
  - type: System.Globalization.Calendar.AddWeeks(System.DateTime,System.Int32)
    commentId: M:System.Globalization.Calendar.AddWeeks(System.DateTime,System.Int32)
  - type: System.Globalization.Calendar.AddDays(System.DateTime,System.Int32)
    commentId: M:System.Globalization.Calendar.AddDays(System.DateTime,System.Int32)
  - type: System.Globalization.Calendar.AddHours(System.DateTime,System.Int32)
    commentId: M:System.Globalization.Calendar.AddHours(System.DateTime,System.Int32)
  - type: System.Globalization.Calendar.AddMinutes(System.DateTime,System.Int32)
    commentId: M:System.Globalization.Calendar.AddMinutes(System.DateTime,System.Int32)
  - type: System.Globalization.Calendar.AddSeconds(System.DateTime,System.Int32)
    commentId: M:System.Globalization.Calendar.AddSeconds(System.DateTime,System.Int32)
  - type: System.Globalization.Calendar.AddMilliseconds(System.DateTime,System.Double)
    commentId: M:System.Globalization.Calendar.AddMilliseconds(System.DateTime,System.Double)
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: System.Globalization.Calendar.AddSeconds(System.DateTime,System.Int32)
  commentId: M:System.Globalization.Calendar.AddSeconds(System.DateTime,System.Int32)
  id: AddSeconds(System.DateTime,System.Int32)
  parent: System.Globalization.Calendar
  langs:
  - csharp
  - vb
  name: AddSeconds(DateTime, Int32)
  fullName: System.Globalization.Calendar.AddSeconds(System.DateTime, System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Globalization/ref/System.Globalization.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: AddSeconds
    path: src/System.Globalization/ref/System.Globalization.cs
    startLine: 24
  assemblies:
  - System.Globalization
  namespace: System.Globalization
  summary: "\n<p>Returns a <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> that is the specified number of seconds away from the specified <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  remarks: "\n<p>The <em>seconds</em> value is added to the specified <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref>. If <em>seconds</em> is negative, the resulting <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> is earlier than the specified <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>The day part of the resulting <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> is affected if the resulting time is outside the day of the specified <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref>. The month part of the resulting <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> is affected if the resulting day is outside the month of the specified <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref>. The year part of the resulting <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> is affected if the resulting month is outside the year of the specified <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref>. The era part of the resulting <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> is affected if the resulting year is outside the era of the specified <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>The<xref href=\"System.DateTime.Kind\" data-throw-if-not-resolved=\"false\"></xref> property of the returned <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> value always equals <xref href=\"System.DateTimeKind.Unspecified\" data-throw-if-not-resolved=\"false\"></xref>. You can preserve the <xref href=\"System.DateTime.Kind\" data-throw-if-not-resolved=\"false\"></xref> property of the <em>time</em> parameter by calling the <xref href=\"System.DateTime.SpecifyKind(System.DateTime,System.DateTimeKind)\" data-throw-if-not-resolved=\"false\"></xref> method, as the following example shows.</p>System.Globalization.Calendar.AddMethods#6"
  example:
  - "\n<p>The following code example demonstrates the members of the <xref href=\"System.Globalization.Calendar\" data-throw-if-not-resolved=\"false\"></xref> class.</p>System.Globalization.Calendar#1"
  syntax:
    content: public virtual DateTime AddSeconds(DateTime time, int seconds)
    content.vb: Public Overridable Function AddSeconds(time As DateTime, seconds As Integer) As DateTime
    parameters:
    - id: time
      type: System.DateTime
      description: "\n<p>The <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> to which to add seconds. </p>\n"
    - id: seconds
      type: System.Int32
      description: "\n<p>The number of seconds to add. </p>\n"
    return:
      type: System.DateTime
      description: "\n<p>The <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> that results from adding the specified number of seconds to the specified <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<p>The resulting <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> is outside the supported range of this calendar. </p>\n"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>\n<em>seconds</em> is outside the supported range of the <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> return value. </p>\n"
  seealso:
  - type: System.DateTime
    commentId: T:System.DateTime
  - type: System.Globalization.Calendar.AddYears(System.DateTime,System.Int32)
    commentId: M:System.Globalization.Calendar.AddYears(System.DateTime,System.Int32)
  - type: System.Globalization.Calendar.AddMonths(System.DateTime,System.Int32)
    commentId: M:System.Globalization.Calendar.AddMonths(System.DateTime,System.Int32)
  - type: System.Globalization.Calendar.AddWeeks(System.DateTime,System.Int32)
    commentId: M:System.Globalization.Calendar.AddWeeks(System.DateTime,System.Int32)
  - type: System.Globalization.Calendar.AddDays(System.DateTime,System.Int32)
    commentId: M:System.Globalization.Calendar.AddDays(System.DateTime,System.Int32)
  - type: System.Globalization.Calendar.AddHours(System.DateTime,System.Int32)
    commentId: M:System.Globalization.Calendar.AddHours(System.DateTime,System.Int32)
  - type: System.Globalization.Calendar.AddMinutes(System.DateTime,System.Int32)
    commentId: M:System.Globalization.Calendar.AddMinutes(System.DateTime,System.Int32)
  - type: System.Globalization.Calendar.AddMilliseconds(System.DateTime,System.Double)
    commentId: M:System.Globalization.Calendar.AddMilliseconds(System.DateTime,System.Double)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Globalization.Calendar.AddWeeks(System.DateTime,System.Int32)
  commentId: M:System.Globalization.Calendar.AddWeeks(System.DateTime,System.Int32)
  id: AddWeeks(System.DateTime,System.Int32)
  parent: System.Globalization.Calendar
  langs:
  - csharp
  - vb
  name: AddWeeks(DateTime, Int32)
  fullName: System.Globalization.Calendar.AddWeeks(System.DateTime, System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Globalization/ref/System.Globalization.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: AddWeeks
    path: src/System.Globalization/ref/System.Globalization.cs
    startLine: 25
  assemblies:
  - System.Globalization
  namespace: System.Globalization
  summary: "\n<p>Returns a <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> that is the specified number of weeks away from the specified <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  remarks: "\n<p>The <em>weeks</em> value is added to the specified <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref>. If <em>weeks</em> is negative, the resulting <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> is earlier than the specified <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>The month part of the resulting <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> is affected if the resulting day is outside the month of the specified <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref>. The year part of the resulting <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> is affected if the resulting month is outside the year of the specified <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref>. The era part of the resulting <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> is affected if the resulting year is outside the era of the specified <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref>. The time-of-day part of the resulting <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> remains the same as the specified <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>In all .NET Framework classes derived from the <xref href=\"System.Globalization.Calendar\" data-throw-if-not-resolved=\"false\"></xref> class, a week is defined as seven days.</p>\n<p>The<xref href=\"System.DateTime.Kind\" data-throw-if-not-resolved=\"false\"></xref> property of the returned <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> value always equals <xref href=\"System.DateTimeKind.Unspecified\" data-throw-if-not-resolved=\"false\"></xref>. You can preserve the <xref href=\"System.DateTime.Kind\" data-throw-if-not-resolved=\"false\"></xref> property of the <em>time</em> parameter by calling the <xref href=\"System.DateTime.SpecifyKind(System.DateTime,System.DateTimeKind)\" data-throw-if-not-resolved=\"false\"></xref> method, as the following example shows.</p>System.Globalization.Calendar.AddMethods#7"
  example:
  - "\n<p>The following code example demonstrates the members of the <xref href=\"System.Globalization.Calendar\" data-throw-if-not-resolved=\"false\"></xref> class.</p>System.Globalization.Calendar#1"
  syntax:
    content: public virtual DateTime AddWeeks(DateTime time, int weeks)
    content.vb: Public Overridable Function AddWeeks(time As DateTime, weeks As Integer) As DateTime
    parameters:
    - id: time
      type: System.DateTime
      description: "\n<p>The <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> to which to add weeks. </p>\n"
    - id: weeks
      type: System.Int32
      description: "\n<p>The number of weeks to add. </p>\n"
    return:
      type: System.DateTime
      description: "\n<p>The <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> that results from adding the specified number of weeks to the specified <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<p>The resulting <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> is outside the supported range of this calendar. </p>\n"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>\n<em>weeks</em> is outside the supported range of the <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> return value. </p>\n"
  seealso:
  - type: System.DateTime
    commentId: T:System.DateTime
  - type: System.Globalization.Calendar.AddYears(System.DateTime,System.Int32)
    commentId: M:System.Globalization.Calendar.AddYears(System.DateTime,System.Int32)
  - type: System.Globalization.Calendar.AddMonths(System.DateTime,System.Int32)
    commentId: M:System.Globalization.Calendar.AddMonths(System.DateTime,System.Int32)
  - type: System.Globalization.Calendar.AddDays(System.DateTime,System.Int32)
    commentId: M:System.Globalization.Calendar.AddDays(System.DateTime,System.Int32)
  - type: System.Globalization.Calendar.AddHours(System.DateTime,System.Int32)
    commentId: M:System.Globalization.Calendar.AddHours(System.DateTime,System.Int32)
  - type: System.Globalization.Calendar.AddMinutes(System.DateTime,System.Int32)
    commentId: M:System.Globalization.Calendar.AddMinutes(System.DateTime,System.Int32)
  - type: System.Globalization.Calendar.AddSeconds(System.DateTime,System.Int32)
    commentId: M:System.Globalization.Calendar.AddSeconds(System.DateTime,System.Int32)
  - type: System.Globalization.Calendar.AddMilliseconds(System.DateTime,System.Double)
    commentId: M:System.Globalization.Calendar.AddMilliseconds(System.DateTime,System.Double)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Globalization.Calendar.AddYears(System.DateTime,System.Int32)
  commentId: M:System.Globalization.Calendar.AddYears(System.DateTime,System.Int32)
  id: AddYears(System.DateTime,System.Int32)
  parent: System.Globalization.Calendar
  langs:
  - csharp
  - vb
  name: AddYears(DateTime, Int32)
  fullName: System.Globalization.Calendar.AddYears(System.DateTime, System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Globalization/ref/System.Globalization.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: AddYears
    path: src/System.Globalization/ref/System.Globalization.cs
    startLine: 26
  assemblies:
  - System.Globalization
  namespace: System.Globalization
  summary: "\n<p>When overridden in a derived class, returns a <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> that is the specified number of years away from the specified <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  remarks: "\n<p>The <em>years</em> value is added to the specified <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref>. If <em>years</em> is negative, the resulting <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> is earlier than the specified <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>The day part of the resulting <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> is affected if the resulting day is not a valid day in the resulting month of the resulting year. It is changed to the last valid day in the resulting month of the resulting year. The month part of the resulting <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> is affected if the resulting month is not a valid month in the resulting year. It is changed to the last valid month in the resulting year. The era part of the resulting <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> is affected if the resulting year is outside the era of the specified <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref>. The time-of-day part of the resulting <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> remains the same as the specified <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>For example, in the Gregorian calendar, February has 28 days, except during a leap year when it has 29 days. If the specified date is the 29th day of February in a leap year and the value of <em>years</em> is 1, the resulting date is the 28th day of February in the following year.</p>\n<p>If <em>years</em> is negative, the resulting <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> is earlier than the specified <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>The<xref href=\"System.DateTime.Kind\" data-throw-if-not-resolved=\"false\"></xref> property of the returned <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> value always equals <xref href=\"System.DateTimeKind.Unspecified\" data-throw-if-not-resolved=\"false\"></xref>. You can preserve the <xref href=\"System.DateTime.Kind\" data-throw-if-not-resolved=\"false\"></xref> property of the <em>time</em> parameter by calling the <xref href=\"System.DateTime.SpecifyKind(System.DateTime,System.DateTimeKind)\" data-throw-if-not-resolved=\"false\"></xref> method, as the following example shows.</p>System.Globalization.Calendar.AddMethods#8"
  example:
  - "\n<p>The following code example demonstrates the members of the <xref href=\"System.Globalization.Calendar\" data-throw-if-not-resolved=\"false\"></xref> class.</p>System.Globalization.Calendar#1"
  syntax:
    content: public abstract DateTime AddYears(DateTime time, int years)
    content.vb: Public MustOverride Function AddYears(time As DateTime, years As Integer) As DateTime
    parameters:
    - id: time
      type: System.DateTime
      description: "\n<p>The <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> to which to add years. </p>\n"
    - id: years
      type: System.Int32
      description: "\n<p>The number of years to add. </p>\n"
    return:
      type: System.DateTime
      description: "\n<p>The <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> that results from adding the specified number of years to the specified <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<p>The resulting <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> is outside the supported range of this calendar. </p>\n"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>\n<em>years</em> is outside the supported range of the <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> return value. </p>\n"
  seealso:
  - type: System.DateTime
    commentId: T:System.DateTime
  - type: System.Globalization.Calendar.AddMonths(System.DateTime,System.Int32)
    commentId: M:System.Globalization.Calendar.AddMonths(System.DateTime,System.Int32)
  - type: System.Globalization.Calendar.AddWeeks(System.DateTime,System.Int32)
    commentId: M:System.Globalization.Calendar.AddWeeks(System.DateTime,System.Int32)
  - type: System.Globalization.Calendar.AddDays(System.DateTime,System.Int32)
    commentId: M:System.Globalization.Calendar.AddDays(System.DateTime,System.Int32)
  - type: System.Globalization.Calendar.AddHours(System.DateTime,System.Int32)
    commentId: M:System.Globalization.Calendar.AddHours(System.DateTime,System.Int32)
  - type: System.Globalization.Calendar.AddMinutes(System.DateTime,System.Int32)
    commentId: M:System.Globalization.Calendar.AddMinutes(System.DateTime,System.Int32)
  - type: System.Globalization.Calendar.AddSeconds(System.DateTime,System.Int32)
    commentId: M:System.Globalization.Calendar.AddSeconds(System.DateTime,System.Int32)
  - type: System.Globalization.Calendar.AddMilliseconds(System.DateTime,System.Double)
    commentId: M:System.Globalization.Calendar.AddMilliseconds(System.DateTime,System.Double)
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: System.Globalization.Calendar.GetDayOfMonth(System.DateTime)
  commentId: M:System.Globalization.Calendar.GetDayOfMonth(System.DateTime)
  id: GetDayOfMonth(System.DateTime)
  parent: System.Globalization.Calendar
  langs:
  - csharp
  - vb
  name: GetDayOfMonth(DateTime)
  fullName: System.Globalization.Calendar.GetDayOfMonth(System.DateTime)
  type: Method
  source:
    remote:
      path: src/System.Globalization/ref/System.Globalization.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetDayOfMonth
    path: src/System.Globalization/ref/System.Globalization.cs
    startLine: 27
  assemblies:
  - System.Globalization
  namespace: System.Globalization
  summary: "\n<p>When overridden in a derived class, returns the day of the month in the specified <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  example:
  - "\n<p>The following code example demonstrates the members of the <xref href=\"System.Globalization.Calendar\" data-throw-if-not-resolved=\"false\"></xref> class.</p>System.Globalization.Calendar#1"
  syntax:
    content: public abstract int GetDayOfMonth(DateTime time)
    content.vb: Public MustOverride Function GetDayOfMonth(time As DateTime) As Integer
    parameters:
    - id: time
      type: System.DateTime
      description: "\n<p>The <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> to read. </p>\n"
    return:
      type: System.Int32
      description: "\n<p>A positive integer that represents the day of the month in the <em>time</em> parameter.</p>\n"
  seealso:
  - type: System.DateTime.Day
    commentId: P:System.DateTime.Day
  - type: System.Globalization.Calendar.GetEra(System.DateTime)
    commentId: M:System.Globalization.Calendar.GetEra(System.DateTime)
  - type: System.Globalization.Calendar.GetYear(System.DateTime)
    commentId: M:System.Globalization.Calendar.GetYear(System.DateTime)
  - type: System.Globalization.Calendar.GetMonth(System.DateTime)
    commentId: M:System.Globalization.Calendar.GetMonth(System.DateTime)
  - type: System.Globalization.Calendar.GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)
    commentId: M:System.Globalization.Calendar.GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)
  - type: System.Globalization.Calendar.GetDayOfYear(System.DateTime)
    commentId: M:System.Globalization.Calendar.GetDayOfYear(System.DateTime)
  - type: System.Globalization.Calendar.GetDayOfWeek(System.DateTime)
    commentId: M:System.Globalization.Calendar.GetDayOfWeek(System.DateTime)
  - type: System.Globalization.Calendar.GetHour(System.DateTime)
    commentId: M:System.Globalization.Calendar.GetHour(System.DateTime)
  - type: System.Globalization.Calendar.GetMinute(System.DateTime)
    commentId: M:System.Globalization.Calendar.GetMinute(System.DateTime)
  - type: System.Globalization.Calendar.GetSecond(System.DateTime)
    commentId: M:System.Globalization.Calendar.GetSecond(System.DateTime)
  - type: System.Globalization.Calendar.GetMilliseconds(System.DateTime)
    commentId: M:System.Globalization.Calendar.GetMilliseconds(System.DateTime)
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: System.Globalization.Calendar.GetDayOfWeek(System.DateTime)
  commentId: M:System.Globalization.Calendar.GetDayOfWeek(System.DateTime)
  id: GetDayOfWeek(System.DateTime)
  parent: System.Globalization.Calendar
  langs:
  - csharp
  - vb
  name: GetDayOfWeek(DateTime)
  fullName: System.Globalization.Calendar.GetDayOfWeek(System.DateTime)
  type: Method
  source:
    remote:
      path: src/System.Globalization/ref/System.Globalization.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetDayOfWeek
    path: src/System.Globalization/ref/System.Globalization.cs
    startLine: 28
  assemblies:
  - System.Globalization
  namespace: System.Globalization
  summary: "\n<p>When overridden in a derived class, returns the day of the week in the specified <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  remarks: "\n<p>The <xref href=\"System.DayOfWeek\" data-throw-if-not-resolved=\"false\"></xref> values are Sunday, Monday, Tuesday, Wednesday, Thursday, Friday, and Saturday.</p>\n"
  example:
  - "\n<p>The following code example demonstrates the members of the <xref href=\"System.Globalization.Calendar\" data-throw-if-not-resolved=\"false\"></xref> class.</p>System.Globalization.Calendar#1"
  syntax:
    content: public abstract DayOfWeek GetDayOfWeek(DateTime time)
    content.vb: Public MustOverride Function GetDayOfWeek(time As DateTime) As DayOfWeek
    parameters:
    - id: time
      type: System.DateTime
      description: "\n<p>The <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> to read. </p>\n"
    return:
      type: System.DayOfWeek
      description: "\n<p>A <xref href=\"System.DayOfWeek\" data-throw-if-not-resolved=\"false\"></xref> value that represents the day of the week in the <em>time</em> parameter.</p>\n"
  seealso:
  - type: System.DateTime.DayOfWeek
    commentId: P:System.DateTime.DayOfWeek
  - type: System.DayOfWeek
    commentId: T:System.DayOfWeek
  - type: System.Globalization.Calendar.GetEra(System.DateTime)
    commentId: M:System.Globalization.Calendar.GetEra(System.DateTime)
  - type: System.Globalization.Calendar.GetYear(System.DateTime)
    commentId: M:System.Globalization.Calendar.GetYear(System.DateTime)
  - type: System.Globalization.Calendar.GetMonth(System.DateTime)
    commentId: M:System.Globalization.Calendar.GetMonth(System.DateTime)
  - type: System.Globalization.Calendar.GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)
    commentId: M:System.Globalization.Calendar.GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)
  - type: System.Globalization.Calendar.GetDayOfYear(System.DateTime)
    commentId: M:System.Globalization.Calendar.GetDayOfYear(System.DateTime)
  - type: System.Globalization.Calendar.GetDayOfMonth(System.DateTime)
    commentId: M:System.Globalization.Calendar.GetDayOfMonth(System.DateTime)
  - type: System.Globalization.Calendar.GetHour(System.DateTime)
    commentId: M:System.Globalization.Calendar.GetHour(System.DateTime)
  - type: System.Globalization.Calendar.GetMinute(System.DateTime)
    commentId: M:System.Globalization.Calendar.GetMinute(System.DateTime)
  - type: System.Globalization.Calendar.GetSecond(System.DateTime)
    commentId: M:System.Globalization.Calendar.GetSecond(System.DateTime)
  - type: System.Globalization.Calendar.GetMilliseconds(System.DateTime)
    commentId: M:System.Globalization.Calendar.GetMilliseconds(System.DateTime)
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: System.Globalization.Calendar.GetDayOfYear(System.DateTime)
  commentId: M:System.Globalization.Calendar.GetDayOfYear(System.DateTime)
  id: GetDayOfYear(System.DateTime)
  parent: System.Globalization.Calendar
  langs:
  - csharp
  - vb
  name: GetDayOfYear(DateTime)
  fullName: System.Globalization.Calendar.GetDayOfYear(System.DateTime)
  type: Method
  source:
    remote:
      path: src/System.Globalization/ref/System.Globalization.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetDayOfYear
    path: src/System.Globalization/ref/System.Globalization.cs
    startLine: 29
  assemblies:
  - System.Globalization
  namespace: System.Globalization
  summary: "\n<p>When overridden in a derived class, returns the day of the year in the specified <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  remarks: "\n<p>The day of the year is defined as the number of days from the first day of the year. For example, in <xref href=\"System.Globalization.GregorianCalendar\" data-throw-if-not-resolved=\"false\"></xref>, <xref href=\"System.Globalization.Calendar.GetDayOfYear(System.DateTime)\" data-throw-if-not-resolved=\"false\"></xref> for January 1 returns 1, and <xref href=\"System.Globalization.Calendar.GetDayOfYear(System.DateTime)\" data-throw-if-not-resolved=\"false\"></xref> for December 31 returns 365 in a common year or 366 in a leap year.</p>\n"
  example:
  - "\n<p>The following code example demonstrates the members of the <xref href=\"System.Globalization.Calendar\" data-throw-if-not-resolved=\"false\"></xref> class.</p>System.Globalization.Calendar#1"
  syntax:
    content: public abstract int GetDayOfYear(DateTime time)
    content.vb: Public MustOverride Function GetDayOfYear(time As DateTime) As Integer
    parameters:
    - id: time
      type: System.DateTime
      description: "\n<p>The <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> to read. </p>\n"
    return:
      type: System.Int32
      description: "\n<p>A positive integer that represents the day of the year in the <em>time</em> parameter.</p>\n"
  seealso:
  - type: System.DateTime.DayOfYear
    commentId: P:System.DateTime.DayOfYear
  - type: System.Globalization.Calendar.GetEra(System.DateTime)
    commentId: M:System.Globalization.Calendar.GetEra(System.DateTime)
  - type: System.Globalization.Calendar.GetYear(System.DateTime)
    commentId: M:System.Globalization.Calendar.GetYear(System.DateTime)
  - type: System.Globalization.Calendar.GetMonth(System.DateTime)
    commentId: M:System.Globalization.Calendar.GetMonth(System.DateTime)
  - type: System.Globalization.Calendar.GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)
    commentId: M:System.Globalization.Calendar.GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)
  - type: System.Globalization.Calendar.GetDayOfMonth(System.DateTime)
    commentId: M:System.Globalization.Calendar.GetDayOfMonth(System.DateTime)
  - type: System.Globalization.Calendar.GetDayOfWeek(System.DateTime)
    commentId: M:System.Globalization.Calendar.GetDayOfWeek(System.DateTime)
  - type: System.Globalization.Calendar.GetHour(System.DateTime)
    commentId: M:System.Globalization.Calendar.GetHour(System.DateTime)
  - type: System.Globalization.Calendar.GetMinute(System.DateTime)
    commentId: M:System.Globalization.Calendar.GetMinute(System.DateTime)
  - type: System.Globalization.Calendar.GetSecond(System.DateTime)
    commentId: M:System.Globalization.Calendar.GetSecond(System.DateTime)
  - type: System.Globalization.Calendar.GetMilliseconds(System.DateTime)
    commentId: M:System.Globalization.Calendar.GetMilliseconds(System.DateTime)
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: System.Globalization.Calendar.GetDaysInMonth(System.Int32,System.Int32)
  commentId: M:System.Globalization.Calendar.GetDaysInMonth(System.Int32,System.Int32)
  id: GetDaysInMonth(System.Int32,System.Int32)
  parent: System.Globalization.Calendar
  langs:
  - csharp
  - vb
  name: GetDaysInMonth(Int32, Int32)
  fullName: System.Globalization.Calendar.GetDaysInMonth(System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Globalization/ref/System.Globalization.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetDaysInMonth
    path: src/System.Globalization/ref/System.Globalization.cs
    startLine: 30
  assemblies:
  - System.Globalization
  namespace: System.Globalization
  summary: "\n<p>Returns the number of days in the specified month and year of the current era.</p>\n"
  remarks: "\n<p>For example, in <xref href=\"System.Globalization.GregorianCalendar\" data-throw-if-not-resolved=\"false\"></xref>, <xref href=\"System.Globalization.Calendar.GetDaysInMonth(System.Int32,System.Int32)\" data-throw-if-not-resolved=\"false\"></xref> for February returns 28 in a common year or 29 in a leap year.</p>\n"
  example:
  - "\n<p>The following code example compares different implementations of the <xref href=\"System.Globalization.Calendar\" data-throw-if-not-resolved=\"false\"></xref> class.</p>System.Globalization.Calendar_Compare#1"
  syntax:
    content: public virtual int GetDaysInMonth(int year, int month)
    content.vb: Public Overridable Function GetDaysInMonth(year As Integer, month As Integer) As Integer
    parameters:
    - id: year
      type: System.Int32
      description: "\n<p>An integer that represents the year. </p>\n"
    - id: month
      type: System.Int32
      description: "\n<p>A positive integer that represents the month. </p>\n"
    return:
      type: System.Int32
      description: "\n<p>The number of days in the specified month in the specified year in the current era.</p>\n"
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>\n<em>year</em> is outside the range supported by the calendar.</p>\n<p>-or- </p>\n<p>\n<em>month</em> is outside the range supported by the calendar. </p>\n"
  seealso:
  - type: System.Globalization.GregorianCalendar
    commentId: T:System.Globalization.GregorianCalendar
  - type: System.Globalization.Calendar.GetMonthsInYear(System.Int32)
    commentId: M:System.Globalization.Calendar.GetMonthsInYear(System.Int32)
  - type: System.Globalization.Calendar.GetDaysInYear(System.Int32)
    commentId: M:System.Globalization.Calendar.GetDaysInYear(System.Int32)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Globalization.Calendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)
  commentId: M:System.Globalization.Calendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)
  id: GetDaysInMonth(System.Int32,System.Int32,System.Int32)
  parent: System.Globalization.Calendar
  langs:
  - csharp
  - vb
  name: GetDaysInMonth(Int32, Int32, Int32)
  fullName: System.Globalization.Calendar.GetDaysInMonth(System.Int32, System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Globalization/ref/System.Globalization.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetDaysInMonth
    path: src/System.Globalization/ref/System.Globalization.cs
    startLine: 31
  assemblies:
  - System.Globalization
  namespace: System.Globalization
  summary: "\n<p>When overridden in a derived class, returns the number of days in the specified month, year, and era.</p>\n"
  remarks: "\n<p>For example, in <xref href=\"System.Globalization.GregorianCalendar\" data-throw-if-not-resolved=\"false\"></xref>, <xref href=\"System.Globalization.Calendar.GetDaysInMonth(System.Int32,System.Int32)\" data-throw-if-not-resolved=\"false\"></xref> for February returns 28 in a common year or 29 in a leap year.</p>\n"
  syntax:
    content: public abstract int GetDaysInMonth(int year, int month, int era)
    content.vb: Public MustOverride Function GetDaysInMonth(year As Integer, month As Integer, era As Integer) As Integer
    parameters:
    - id: year
      type: System.Int32
      description: "\n<p>An integer that represents the year. </p>\n"
    - id: month
      type: System.Int32
      description: "\n<p>A positive integer that represents the month. </p>\n"
    - id: era
      type: System.Int32
      description: "\n<p>An integer that represents the era. </p>\n"
    return:
      type: System.Int32
      description: "\n<p>The number of days in the specified month in the specified year in the specified era.</p>\n"
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>\n<em>year</em> is outside the range supported by the calendar.</p>\n<p>-or- </p>\n<p>\n<em>month</em> is outside the range supported by the calendar.</p>\n<p>-or- </p>\n<p>\n<em>era</em> is outside the range supported by the calendar. </p>\n"
  seealso:
  - type: System.Globalization.GregorianCalendar
    commentId: T:System.Globalization.GregorianCalendar
  - type: System.Globalization.Calendar.CurrentEra
    commentId: F:System.Globalization.Calendar.CurrentEra
  - type: System.Globalization.Calendar.Eras
    commentId: P:System.Globalization.Calendar.Eras
  - type: System.Globalization.Calendar.GetMonthsInYear(System.Int32)
    commentId: M:System.Globalization.Calendar.GetMonthsInYear(System.Int32)
  - type: System.Globalization.Calendar.GetDaysInYear(System.Int32)
    commentId: M:System.Globalization.Calendar.GetDaysInYear(System.Int32)
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: System.Globalization.Calendar.GetDaysInYear(System.Int32)
  commentId: M:System.Globalization.Calendar.GetDaysInYear(System.Int32)
  id: GetDaysInYear(System.Int32)
  parent: System.Globalization.Calendar
  langs:
  - csharp
  - vb
  name: GetDaysInYear(Int32)
  fullName: System.Globalization.Calendar.GetDaysInYear(System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Globalization/ref/System.Globalization.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetDaysInYear
    path: src/System.Globalization/ref/System.Globalization.cs
    startLine: 32
  assemblies:
  - System.Globalization
  namespace: System.Globalization
  summary: "\n<p>Returns the number of days in the specified year of the current era.</p>\n"
  remarks: "\n<p>For example, in <xref href=\"System.Globalization.GregorianCalendar\" data-throw-if-not-resolved=\"false\"></xref>, <xref href=\"System.Globalization.Calendar.GetDaysInYear(System.Int32)\" data-throw-if-not-resolved=\"false\"></xref> returns 365 for a common year or 366 for a leap year.</p>\n"
  example:
  - "\n<p>The following code example compares different implementations of the <xref href=\"System.Globalization.Calendar\" data-throw-if-not-resolved=\"false\"></xref> class.</p>System.Globalization.Calendar_Compare#1"
  syntax:
    content: public virtual int GetDaysInYear(int year)
    content.vb: Public Overridable Function GetDaysInYear(year As Integer) As Integer
    parameters:
    - id: year
      type: System.Int32
      description: "\n<p>An integer that represents the year. </p>\n"
    return:
      type: System.Int32
      description: "\n<p>The number of days in the specified year in the current era.</p>\n"
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>\n<em>year</em> is outside the range supported by the calendar. </p>\n"
  seealso:
  - type: System.Globalization.GregorianCalendar
    commentId: T:System.Globalization.GregorianCalendar
  - type: System.Globalization.Calendar.GetMonthsInYear(System.Int32)
    commentId: M:System.Globalization.Calendar.GetMonthsInYear(System.Int32)
  - type: System.Globalization.Calendar.GetDaysInMonth(System.Int32,System.Int32)
    commentId: M:System.Globalization.Calendar.GetDaysInMonth(System.Int32,System.Int32)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Globalization.Calendar.GetDaysInYear(System.Int32,System.Int32)
  commentId: M:System.Globalization.Calendar.GetDaysInYear(System.Int32,System.Int32)
  id: GetDaysInYear(System.Int32,System.Int32)
  parent: System.Globalization.Calendar
  langs:
  - csharp
  - vb
  name: GetDaysInYear(Int32, Int32)
  fullName: System.Globalization.Calendar.GetDaysInYear(System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Globalization/ref/System.Globalization.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetDaysInYear
    path: src/System.Globalization/ref/System.Globalization.cs
    startLine: 33
  assemblies:
  - System.Globalization
  namespace: System.Globalization
  summary: "\n<p>When overridden in a derived class, returns the number of days in the specified year and era.</p>\n"
  remarks: "\n<p>For example, in <xref href=\"System.Globalization.GregorianCalendar\" data-throw-if-not-resolved=\"false\"></xref>, <xref href=\"System.Globalization.Calendar.GetDaysInYear(System.Int32)\" data-throw-if-not-resolved=\"false\"></xref> returns 365 for a common year or 366 for a leap year.</p>\n"
  syntax:
    content: public abstract int GetDaysInYear(int year, int era)
    content.vb: Public MustOverride Function GetDaysInYear(year As Integer, era As Integer) As Integer
    parameters:
    - id: year
      type: System.Int32
      description: "\n<p>An integer that represents the year. </p>\n"
    - id: era
      type: System.Int32
      description: "\n<p>An integer that represents the era. </p>\n"
    return:
      type: System.Int32
      description: "\n<p>The number of days in the specified year in the specified era.</p>\n"
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>\n<em>year</em> is outside the range supported by the calendar.</p>\n<p>-or- </p>\n<p>\n<em>era</em> is outside the range supported by the calendar. </p>\n"
  seealso:
  - type: System.Globalization.GregorianCalendar
    commentId: T:System.Globalization.GregorianCalendar
  - type: System.Globalization.Calendar.CurrentEra
    commentId: F:System.Globalization.Calendar.CurrentEra
  - type: System.Globalization.Calendar.Eras
    commentId: P:System.Globalization.Calendar.Eras
  - type: System.Globalization.Calendar.GetMonthsInYear(System.Int32)
    commentId: M:System.Globalization.Calendar.GetMonthsInYear(System.Int32)
  - type: System.Globalization.Calendar.GetDaysInMonth(System.Int32,System.Int32)
    commentId: M:System.Globalization.Calendar.GetDaysInMonth(System.Int32,System.Int32)
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: System.Globalization.Calendar.GetEra(System.DateTime)
  commentId: M:System.Globalization.Calendar.GetEra(System.DateTime)
  id: GetEra(System.DateTime)
  parent: System.Globalization.Calendar
  langs:
  - csharp
  - vb
  name: GetEra(DateTime)
  fullName: System.Globalization.Calendar.GetEra(System.DateTime)
  type: Method
  source:
    remote:
      path: src/System.Globalization/ref/System.Globalization.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetEra
    path: src/System.Globalization/ref/System.Globalization.cs
    startLine: 34
  assemblies:
  - System.Globalization
  namespace: System.Globalization
  summary: "\n<p>When overridden in a derived class, returns the era in the specified <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  example:
  - "\n<p>The following code example demonstrates the members of the <xref href=\"System.Globalization.Calendar\" data-throw-if-not-resolved=\"false\"></xref> class.</p>System.Globalization.Calendar#1"
  syntax:
    content: public abstract int GetEra(DateTime time)
    content.vb: Public MustOverride Function GetEra(time As DateTime) As Integer
    parameters:
    - id: time
      type: System.DateTime
      description: "\n<p>The <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> to read. </p>\n"
    return:
      type: System.Int32
      description: "\n<p>An integer that represents the era in <em>time</em>.</p>\n"
  seealso:
  - type: System.DateTime
    commentId: T:System.DateTime
  - type: System.Globalization.Calendar.CurrentEra
    commentId: F:System.Globalization.Calendar.CurrentEra
  - type: System.Globalization.Calendar.Eras
    commentId: P:System.Globalization.Calendar.Eras
  - type: System.Globalization.Calendar.GetYear(System.DateTime)
    commentId: M:System.Globalization.Calendar.GetYear(System.DateTime)
  - type: System.Globalization.Calendar.GetMonth(System.DateTime)
    commentId: M:System.Globalization.Calendar.GetMonth(System.DateTime)
  - type: System.Globalization.Calendar.GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)
    commentId: M:System.Globalization.Calendar.GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)
  - type: System.Globalization.Calendar.GetDayOfYear(System.DateTime)
    commentId: M:System.Globalization.Calendar.GetDayOfYear(System.DateTime)
  - type: System.Globalization.Calendar.GetDayOfMonth(System.DateTime)
    commentId: M:System.Globalization.Calendar.GetDayOfMonth(System.DateTime)
  - type: System.Globalization.Calendar.GetDayOfWeek(System.DateTime)
    commentId: M:System.Globalization.Calendar.GetDayOfWeek(System.DateTime)
  - type: System.Globalization.Calendar.GetHour(System.DateTime)
    commentId: M:System.Globalization.Calendar.GetHour(System.DateTime)
  - type: System.Globalization.Calendar.GetMinute(System.DateTime)
    commentId: M:System.Globalization.Calendar.GetMinute(System.DateTime)
  - type: System.Globalization.Calendar.GetSecond(System.DateTime)
    commentId: M:System.Globalization.Calendar.GetSecond(System.DateTime)
  - type: System.Globalization.Calendar.GetMilliseconds(System.DateTime)
    commentId: M:System.Globalization.Calendar.GetMilliseconds(System.DateTime)
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: System.Globalization.Calendar.GetHour(System.DateTime)
  commentId: M:System.Globalization.Calendar.GetHour(System.DateTime)
  id: GetHour(System.DateTime)
  parent: System.Globalization.Calendar
  langs:
  - csharp
  - vb
  name: GetHour(DateTime)
  fullName: System.Globalization.Calendar.GetHour(System.DateTime)
  type: Method
  source:
    remote:
      path: src/System.Globalization/ref/System.Globalization.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetHour
    path: src/System.Globalization/ref/System.Globalization.cs
    startLine: 35
  assemblies:
  - System.Globalization
  namespace: System.Globalization
  summary: "\n<p>Returns the hours value in the specified <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  example:
  - "\n<p>The following code example demonstrates the members of the <xref href=\"System.Globalization.Calendar\" data-throw-if-not-resolved=\"false\"></xref> class.</p>System.Globalization.Calendar#1"
  syntax:
    content: public virtual int GetHour(DateTime time)
    content.vb: Public Overridable Function GetHour(time As DateTime) As Integer
    parameters:
    - id: time
      type: System.DateTime
      description: "\n<p>The <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> to read. </p>\n"
    return:
      type: System.Int32
      description: "\n<p>An integer from 0 to 23 that represents the hour in <em>time</em>.</p>\n"
  seealso:
  - type: System.DateTime.Hour
    commentId: P:System.DateTime.Hour
  - type: System.Globalization.Calendar.GetEra(System.DateTime)
    commentId: M:System.Globalization.Calendar.GetEra(System.DateTime)
  - type: System.Globalization.Calendar.GetYear(System.DateTime)
    commentId: M:System.Globalization.Calendar.GetYear(System.DateTime)
  - type: System.Globalization.Calendar.GetMonth(System.DateTime)
    commentId: M:System.Globalization.Calendar.GetMonth(System.DateTime)
  - type: System.Globalization.Calendar.GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)
    commentId: M:System.Globalization.Calendar.GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)
  - type: System.Globalization.Calendar.GetDayOfYear(System.DateTime)
    commentId: M:System.Globalization.Calendar.GetDayOfYear(System.DateTime)
  - type: System.Globalization.Calendar.GetDayOfMonth(System.DateTime)
    commentId: M:System.Globalization.Calendar.GetDayOfMonth(System.DateTime)
  - type: System.Globalization.Calendar.GetDayOfWeek(System.DateTime)
    commentId: M:System.Globalization.Calendar.GetDayOfWeek(System.DateTime)
  - type: System.Globalization.Calendar.GetMinute(System.DateTime)
    commentId: M:System.Globalization.Calendar.GetMinute(System.DateTime)
  - type: System.Globalization.Calendar.GetSecond(System.DateTime)
    commentId: M:System.Globalization.Calendar.GetSecond(System.DateTime)
  - type: System.Globalization.Calendar.GetMilliseconds(System.DateTime)
    commentId: M:System.Globalization.Calendar.GetMilliseconds(System.DateTime)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Globalization.Calendar.GetLeapMonth(System.Int32,System.Int32)
  commentId: M:System.Globalization.Calendar.GetLeapMonth(System.Int32,System.Int32)
  id: GetLeapMonth(System.Int32,System.Int32)
  parent: System.Globalization.Calendar
  langs:
  - csharp
  - vb
  name: GetLeapMonth(Int32, Int32)
  fullName: System.Globalization.Calendar.GetLeapMonth(System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Globalization/ref/System.Globalization.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetLeapMonth
    path: src/System.Globalization/ref/System.Globalization.cs
    startLine: 36
  assemblies:
  - System.Globalization
  namespace: System.Globalization
  summary: "\n<p>Calculates the leap month for a specified year and era.</p>\n"
  remarks: "\n<p>In a calendar that supports the notion of a leap month, the leap month can occur either after a particular month or after any month in a year. For example, the <xref href=\"System.Globalization.EastAsianLunisolarCalendar.GetMonth(System.DateTime)\" data-throw-if-not-resolved=\"false\"></xref> method returns a number between 1 and 13 that indicates the month associated with a specified date. If there is a leap month between the eighth and ninth months of the year, the <xref href=\"System.Globalization.EastAsianLunisolarCalendar.GetMonth(System.DateTime)\" data-throw-if-not-resolved=\"false\"></xref> method returns 8 for the eighth month, 9 for the leap eighth month, and 10 for the ninth month.</p>\n"
  example:
  - 
  syntax:
    content: public virtual int GetLeapMonth(int year, int era)
    content.vb: Public Overridable Function GetLeapMonth(year As Integer, era As Integer) As Integer
    parameters:
    - id: year
      type: System.Int32
      description: "\n<p>A year.</p>\n"
    - id: era
      type: System.Int32
      description: "\n<p>An era.</p>\n"
    return:
      type: System.Int32
      description: "\n<p>A positive integer that indicates the leap month in the specified year and era.</p>\n<p>-or-</p>\n<p>Zero if this calendar does not support a leap month or if the <em>year</em> and <em>era</em> parameters do not specify a leap year.</p>\n"
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Globalization.Calendar.GetMilliseconds(System.DateTime)
  commentId: M:System.Globalization.Calendar.GetMilliseconds(System.DateTime)
  id: GetMilliseconds(System.DateTime)
  parent: System.Globalization.Calendar
  langs:
  - csharp
  - vb
  name: GetMilliseconds(DateTime)
  fullName: System.Globalization.Calendar.GetMilliseconds(System.DateTime)
  type: Method
  source:
    remote:
      path: src/System.Globalization/ref/System.Globalization.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetMilliseconds
    path: src/System.Globalization/ref/System.Globalization.cs
    startLine: 37
  assemblies:
  - System.Globalization
  namespace: System.Globalization
  summary: "\n<p>Returns the milliseconds value in the specified <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  example:
  - "\n<p>The following code example demonstrates the members of the <xref href=\"System.Globalization.Calendar\" data-throw-if-not-resolved=\"false\"></xref> class.</p>System.Globalization.Calendar#1"
  syntax:
    content: public virtual double GetMilliseconds(DateTime time)
    content.vb: Public Overridable Function GetMilliseconds(time As DateTime) As Double
    parameters:
    - id: time
      type: System.DateTime
      description: "\n<p>The <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> to read. </p>\n"
    return:
      type: System.Double
      description: "\n<p>A double-precision floating-point number from 0 to 999 that represents the milliseconds in the <em>time</em> parameter.</p>\n"
  seealso:
  - type: System.DateTime.Millisecond
    commentId: P:System.DateTime.Millisecond
  - type: System.Globalization.Calendar.GetEra(System.DateTime)
    commentId: M:System.Globalization.Calendar.GetEra(System.DateTime)
  - type: System.Globalization.Calendar.GetYear(System.DateTime)
    commentId: M:System.Globalization.Calendar.GetYear(System.DateTime)
  - type: System.Globalization.Calendar.GetMonth(System.DateTime)
    commentId: M:System.Globalization.Calendar.GetMonth(System.DateTime)
  - type: System.Globalization.Calendar.GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)
    commentId: M:System.Globalization.Calendar.GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)
  - type: System.Globalization.Calendar.GetDayOfYear(System.DateTime)
    commentId: M:System.Globalization.Calendar.GetDayOfYear(System.DateTime)
  - type: System.Globalization.Calendar.GetDayOfMonth(System.DateTime)
    commentId: M:System.Globalization.Calendar.GetDayOfMonth(System.DateTime)
  - type: System.Globalization.Calendar.GetDayOfWeek(System.DateTime)
    commentId: M:System.Globalization.Calendar.GetDayOfWeek(System.DateTime)
  - type: System.Globalization.Calendar.GetHour(System.DateTime)
    commentId: M:System.Globalization.Calendar.GetHour(System.DateTime)
  - type: System.Globalization.Calendar.GetMinute(System.DateTime)
    commentId: M:System.Globalization.Calendar.GetMinute(System.DateTime)
  - type: System.Globalization.Calendar.GetSecond(System.DateTime)
    commentId: M:System.Globalization.Calendar.GetSecond(System.DateTime)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Globalization.Calendar.GetMinute(System.DateTime)
  commentId: M:System.Globalization.Calendar.GetMinute(System.DateTime)
  id: GetMinute(System.DateTime)
  parent: System.Globalization.Calendar
  langs:
  - csharp
  - vb
  name: GetMinute(DateTime)
  fullName: System.Globalization.Calendar.GetMinute(System.DateTime)
  type: Method
  source:
    remote:
      path: src/System.Globalization/ref/System.Globalization.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetMinute
    path: src/System.Globalization/ref/System.Globalization.cs
    startLine: 38
  assemblies:
  - System.Globalization
  namespace: System.Globalization
  summary: "\n<p>Returns the minutes value in the specified <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  example:
  - "\n<p>The following code example demonstrates the members of the <xref href=\"System.Globalization.Calendar\" data-throw-if-not-resolved=\"false\"></xref> class.</p>System.Globalization.Calendar#1"
  syntax:
    content: public virtual int GetMinute(DateTime time)
    content.vb: Public Overridable Function GetMinute(time As DateTime) As Integer
    parameters:
    - id: time
      type: System.DateTime
      description: "\n<p>The <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> to read. </p>\n"
    return:
      type: System.Int32
      description: "\n<p>An integer from 0 to 59 that represents the minutes in <em>time</em>.</p>\n"
  seealso:
  - type: System.DateTime.Minute
    commentId: P:System.DateTime.Minute
  - type: System.Globalization.Calendar.GetEra(System.DateTime)
    commentId: M:System.Globalization.Calendar.GetEra(System.DateTime)
  - type: System.Globalization.Calendar.GetYear(System.DateTime)
    commentId: M:System.Globalization.Calendar.GetYear(System.DateTime)
  - type: System.Globalization.Calendar.GetMonth(System.DateTime)
    commentId: M:System.Globalization.Calendar.GetMonth(System.DateTime)
  - type: System.Globalization.Calendar.GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)
    commentId: M:System.Globalization.Calendar.GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)
  - type: System.Globalization.Calendar.GetDayOfYear(System.DateTime)
    commentId: M:System.Globalization.Calendar.GetDayOfYear(System.DateTime)
  - type: System.Globalization.Calendar.GetDayOfMonth(System.DateTime)
    commentId: M:System.Globalization.Calendar.GetDayOfMonth(System.DateTime)
  - type: System.Globalization.Calendar.GetDayOfWeek(System.DateTime)
    commentId: M:System.Globalization.Calendar.GetDayOfWeek(System.DateTime)
  - type: System.Globalization.Calendar.GetHour(System.DateTime)
    commentId: M:System.Globalization.Calendar.GetHour(System.DateTime)
  - type: System.Globalization.Calendar.GetSecond(System.DateTime)
    commentId: M:System.Globalization.Calendar.GetSecond(System.DateTime)
  - type: System.Globalization.Calendar.GetMilliseconds(System.DateTime)
    commentId: M:System.Globalization.Calendar.GetMilliseconds(System.DateTime)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Globalization.Calendar.GetMonth(System.DateTime)
  commentId: M:System.Globalization.Calendar.GetMonth(System.DateTime)
  id: GetMonth(System.DateTime)
  parent: System.Globalization.Calendar
  langs:
  - csharp
  - vb
  name: GetMonth(DateTime)
  fullName: System.Globalization.Calendar.GetMonth(System.DateTime)
  type: Method
  source:
    remote:
      path: src/System.Globalization/ref/System.Globalization.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetMonth
    path: src/System.Globalization/ref/System.Globalization.cs
    startLine: 39
  assemblies:
  - System.Globalization
  namespace: System.Globalization
  summary: "\n<p>When overridden in a derived class, returns the month in the specified <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  remarks: "\n<p>For example, in <xref href=\"System.Globalization.HebrewCalendar\" data-throw-if-not-resolved=\"false\"></xref>, <xref href=\"System.Globalization.Calendar.GetMonth(System.DateTime)\" data-throw-if-not-resolved=\"false\"></xref> for Tishrei returns 1, and <xref href=\"System.Globalization.Calendar.GetMonth(System.DateTime)\" data-throw-if-not-resolved=\"false\"></xref> for Elul returns 12 in a common year or 13 in a leap year.</p>\n"
  example:
  - "\n<p>The following code example demonstrates the members of the <xref href=\"System.Globalization.Calendar\" data-throw-if-not-resolved=\"false\"></xref> class.</p>System.Globalization.Calendar#1"
  syntax:
    content: public abstract int GetMonth(DateTime time)
    content.vb: Public MustOverride Function GetMonth(time As DateTime) As Integer
    parameters:
    - id: time
      type: System.DateTime
      description: "\n<p>The <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> to read. </p>\n"
    return:
      type: System.Int32
      description: "\n<p>A positive integer that represents the month in <em>time</em>.</p>\n"
  seealso:
  - type: System.DateTime.Month
    commentId: P:System.DateTime.Month
  - type: System.Globalization.Calendar.GetEra(System.DateTime)
    commentId: M:System.Globalization.Calendar.GetEra(System.DateTime)
  - type: System.Globalization.Calendar.GetYear(System.DateTime)
    commentId: M:System.Globalization.Calendar.GetYear(System.DateTime)
  - type: System.Globalization.Calendar.GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)
    commentId: M:System.Globalization.Calendar.GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)
  - type: System.Globalization.Calendar.GetDayOfYear(System.DateTime)
    commentId: M:System.Globalization.Calendar.GetDayOfYear(System.DateTime)
  - type: System.Globalization.Calendar.GetDayOfMonth(System.DateTime)
    commentId: M:System.Globalization.Calendar.GetDayOfMonth(System.DateTime)
  - type: System.Globalization.Calendar.GetDayOfWeek(System.DateTime)
    commentId: M:System.Globalization.Calendar.GetDayOfWeek(System.DateTime)
  - type: System.Globalization.Calendar.GetHour(System.DateTime)
    commentId: M:System.Globalization.Calendar.GetHour(System.DateTime)
  - type: System.Globalization.Calendar.GetMinute(System.DateTime)
    commentId: M:System.Globalization.Calendar.GetMinute(System.DateTime)
  - type: System.Globalization.Calendar.GetSecond(System.DateTime)
    commentId: M:System.Globalization.Calendar.GetSecond(System.DateTime)
  - type: System.Globalization.Calendar.GetMilliseconds(System.DateTime)
    commentId: M:System.Globalization.Calendar.GetMilliseconds(System.DateTime)
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: System.Globalization.Calendar.GetMonthsInYear(System.Int32)
  commentId: M:System.Globalization.Calendar.GetMonthsInYear(System.Int32)
  id: GetMonthsInYear(System.Int32)
  parent: System.Globalization.Calendar
  langs:
  - csharp
  - vb
  name: GetMonthsInYear(Int32)
  fullName: System.Globalization.Calendar.GetMonthsInYear(System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Globalization/ref/System.Globalization.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetMonthsInYear
    path: src/System.Globalization/ref/System.Globalization.cs
    startLine: 40
  assemblies:
  - System.Globalization
  namespace: System.Globalization
  summary: "\n<p>Returns the number of months in the specified year in the current era.</p>\n"
  remarks: "\n<p>For example, in <xref href=\"System.Globalization.HebrewCalendar\" data-throw-if-not-resolved=\"false\"></xref>, <xref href=\"System.Globalization.Calendar.GetMonthsInYear(System.Int32)\" data-throw-if-not-resolved=\"false\"></xref> returns 12 for a common year or 13 for a leap year.</p>\n"
  example:
  - "\n<p>The following code example compares different implementations of the <xref href=\"System.Globalization.Calendar\" data-throw-if-not-resolved=\"false\"></xref> class.</p>System.Globalization.Calendar_Compare#1"
  syntax:
    content: public virtual int GetMonthsInYear(int year)
    content.vb: Public Overridable Function GetMonthsInYear(year As Integer) As Integer
    parameters:
    - id: year
      type: System.Int32
      description: "\n<p>An integer that represents the year. </p>\n"
    return:
      type: System.Int32
      description: "\n<p>The number of months in the specified year in the current era.</p>\n"
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>\n<em>year</em> is outside the range supported by the calendar. </p>\n"
  seealso:
  - type: System.Globalization.Calendar.GetDaysInYear(System.Int32)
    commentId: M:System.Globalization.Calendar.GetDaysInYear(System.Int32)
  - type: System.Globalization.Calendar.GetDaysInMonth(System.Int32,System.Int32)
    commentId: M:System.Globalization.Calendar.GetDaysInMonth(System.Int32,System.Int32)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Globalization.Calendar.GetMonthsInYear(System.Int32,System.Int32)
  commentId: M:System.Globalization.Calendar.GetMonthsInYear(System.Int32,System.Int32)
  id: GetMonthsInYear(System.Int32,System.Int32)
  parent: System.Globalization.Calendar
  langs:
  - csharp
  - vb
  name: GetMonthsInYear(Int32, Int32)
  fullName: System.Globalization.Calendar.GetMonthsInYear(System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Globalization/ref/System.Globalization.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetMonthsInYear
    path: src/System.Globalization/ref/System.Globalization.cs
    startLine: 41
  assemblies:
  - System.Globalization
  namespace: System.Globalization
  summary: "\n<p>When overridden in a derived class, returns the number of months in the specified year in the specified era.</p>\n"
  remarks: "\n<p>For example, in <xref href=\"System.Globalization.HebrewCalendar\" data-throw-if-not-resolved=\"false\"></xref>, <xref href=\"System.Globalization.Calendar.GetMonthsInYear(System.Int32)\" data-throw-if-not-resolved=\"false\"></xref> returns 12 for a common year or 13 for a leap year.</p>\n"
  syntax:
    content: public abstract int GetMonthsInYear(int year, int era)
    content.vb: Public MustOverride Function GetMonthsInYear(year As Integer, era As Integer) As Integer
    parameters:
    - id: year
      type: System.Int32
      description: "\n<p>An integer that represents the year. </p>\n"
    - id: era
      type: System.Int32
      description: "\n<p>An integer that represents the era. </p>\n"
    return:
      type: System.Int32
      description: "\n<p>The number of months in the specified year in the specified era.</p>\n"
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>\n<em>year</em> is outside the range supported by the calendar.</p>\n<p>-or- </p>\n<p>\n<em>era</em> is outside the range supported by the calendar. </p>\n"
  seealso:
  - type: System.Globalization.Calendar.CurrentEra
    commentId: F:System.Globalization.Calendar.CurrentEra
  - type: System.Globalization.Calendar.Eras
    commentId: P:System.Globalization.Calendar.Eras
  - type: System.Globalization.Calendar.GetDaysInYear(System.Int32)
    commentId: M:System.Globalization.Calendar.GetDaysInYear(System.Int32)
  - type: System.Globalization.Calendar.GetDaysInMonth(System.Int32,System.Int32)
    commentId: M:System.Globalization.Calendar.GetDaysInMonth(System.Int32,System.Int32)
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: System.Globalization.Calendar.GetSecond(System.DateTime)
  commentId: M:System.Globalization.Calendar.GetSecond(System.DateTime)
  id: GetSecond(System.DateTime)
  parent: System.Globalization.Calendar
  langs:
  - csharp
  - vb
  name: GetSecond(DateTime)
  fullName: System.Globalization.Calendar.GetSecond(System.DateTime)
  type: Method
  source:
    remote:
      path: src/System.Globalization/ref/System.Globalization.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetSecond
    path: src/System.Globalization/ref/System.Globalization.cs
    startLine: 42
  assemblies:
  - System.Globalization
  namespace: System.Globalization
  summary: "\n<p>Returns the seconds value in the specified <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  example:
  - "\n<p>The following code example demonstrates the members of the <xref href=\"System.Globalization.Calendar\" data-throw-if-not-resolved=\"false\"></xref> class.</p>System.Globalization.Calendar#1"
  syntax:
    content: public virtual int GetSecond(DateTime time)
    content.vb: Public Overridable Function GetSecond(time As DateTime) As Integer
    parameters:
    - id: time
      type: System.DateTime
      description: "\n<p>The <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> to read. </p>\n"
    return:
      type: System.Int32
      description: "\n<p>An integer from 0 to 59 that represents the seconds in <em>time</em>.</p>\n"
  seealso:
  - type: System.DateTime.Second
    commentId: P:System.DateTime.Second
  - type: System.Globalization.Calendar.GetEra(System.DateTime)
    commentId: M:System.Globalization.Calendar.GetEra(System.DateTime)
  - type: System.Globalization.Calendar.GetYear(System.DateTime)
    commentId: M:System.Globalization.Calendar.GetYear(System.DateTime)
  - type: System.Globalization.Calendar.GetMonth(System.DateTime)
    commentId: M:System.Globalization.Calendar.GetMonth(System.DateTime)
  - type: System.Globalization.Calendar.GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)
    commentId: M:System.Globalization.Calendar.GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)
  - type: System.Globalization.Calendar.GetDayOfYear(System.DateTime)
    commentId: M:System.Globalization.Calendar.GetDayOfYear(System.DateTime)
  - type: System.Globalization.Calendar.GetDayOfMonth(System.DateTime)
    commentId: M:System.Globalization.Calendar.GetDayOfMonth(System.DateTime)
  - type: System.Globalization.Calendar.GetDayOfWeek(System.DateTime)
    commentId: M:System.Globalization.Calendar.GetDayOfWeek(System.DateTime)
  - type: System.Globalization.Calendar.GetHour(System.DateTime)
    commentId: M:System.Globalization.Calendar.GetHour(System.DateTime)
  - type: System.Globalization.Calendar.GetMinute(System.DateTime)
    commentId: M:System.Globalization.Calendar.GetMinute(System.DateTime)
  - type: System.Globalization.Calendar.GetMilliseconds(System.DateTime)
    commentId: M:System.Globalization.Calendar.GetMilliseconds(System.DateTime)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Globalization.Calendar.GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)
  commentId: M:System.Globalization.Calendar.GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)
  id: GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)
  parent: System.Globalization.Calendar
  langs:
  - csharp
  - vb
  name: GetWeekOfYear(DateTime, CalendarWeekRule, DayOfWeek)
  fullName: System.Globalization.Calendar.GetWeekOfYear(System.DateTime, System.Globalization.CalendarWeekRule, System.DayOfWeek)
  type: Method
  source:
    remote:
      path: src/System.Globalization/ref/System.Globalization.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetWeekOfYear
    path: src/System.Globalization/ref/System.Globalization.cs
    startLine: 43
  assemblies:
  - System.Globalization
  namespace: System.Globalization
  summary: "\n<p>Returns the week of the year that includes the date in the specified <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> value.</p>\n"
  remarks: "\n<p>This method can be used to determine the number of weeks in the year by setting <em>time</em> to the last day of the year.</p>\n<p>The <xref href=\"System.Globalization.DateTimeFormatInfo\" data-throw-if-not-resolved=\"false\"></xref> object for a particular culture that uses the calendar indicated by the <xref href=\"System.Globalization.DateTimeFormatInfo.Calendar\" data-throw-if-not-resolved=\"false\"></xref> property includes the following culture-specific values that can be used for the <em>rule</em> and <em>firstDayOfWeek</em> parameters:</p>\n<ul><li>\n<p>The <xref href=\"System.Globalization.DateTimeFormatInfo.FirstDayOfWeek\" data-throw-if-not-resolved=\"false\"></xref> property contains the default first day of the week that can be used for the <em>firstDayOfWeek</em> parameter. </p>\n</li><li>\n<p>The <xref href=\"System.Globalization.DateTimeFormatInfo.CalendarWeekRule\" data-throw-if-not-resolved=\"false\"></xref> property contains the default calendar week rule that can be used for the <em>rule</em> parameter.</p>\n</li></ul>\n<p>The following example uses the current culture's <xref href=\"System.Globalization.DateTimeFormatInfo\" data-throw-if-not-resolved=\"false\"></xref> object to determine that January 1, 2011 is in the first week of the year in the Gregorian calendar.</p>System.Globalization.Calendar.GetWeekOfYear#2<p>For some calendars, a call to the <xref href=\"System.Globalization.Calendar.GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)\" data-throw-if-not-resolved=\"false\"></xref> method throws an <xref href=\"System.ArgumentOutOfRangeException\" data-throw-if-not-resolved=\"false\"></xref> for particular combinations of <em>rule</em> and <em>firstDayOfWeek</em> values even if <em>time</em> is greater than the date returned by that calendar's <xref href=\"System.Globalization.Calendar.MinSupportedDateTime\" data-throw-if-not-resolved=\"false\"></xref> property. The following table lists the affected calendars, the specific <em>rule</em> values, and the range of the earliest supported <em>time</em> values. The specific minimum <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> value depends on the value of the <em>firstDayOfWeek</em> parameter.</p><p>Calendar</p><p>CalendarWeekRule value</p><p>Gregorian date (M/dd/yyyy)</p><p>Date in calendar (M/dd/yyyy)</p>"
  example:
  - "\n<p>The following code example shows how the result of <xref href=\"System.Globalization.Calendar.GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)\" data-throw-if-not-resolved=\"false\"></xref> varies depending on the <xref href=\"System.Globalization.DateTimeFormatInfo.FirstDayOfWeek\" data-throw-if-not-resolved=\"false\"></xref> and the <xref href=\"System.Globalization.CalendarWeekRule\" data-throw-if-not-resolved=\"false\"></xref> used. If the specified date is the last day of the year, <xref href=\"System.Globalization.Calendar.GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)\" data-throw-if-not-resolved=\"false\"></xref> returns the total number of weeks in that year. </p>System.Globalization.Calendar.GetWeekOfYear#1"
  syntax:
    content: public virtual int GetWeekOfYear(DateTime time, CalendarWeekRule rule, DayOfWeek firstDayOfWeek)
    content.vb: Public Overridable Function GetWeekOfYear(time As DateTime, rule As CalendarWeekRule, firstDayOfWeek As DayOfWeek) As Integer
    parameters:
    - id: time
      type: System.DateTime
      description: "\n<p>A date and time value. </p>\n"
    - id: rule
      type: System.Globalization.CalendarWeekRule
      description: "\n<p>An enumeration value that defines a calendar week. </p>\n"
    - id: firstDayOfWeek
      type: System.DayOfWeek
      description: "\n<p>An enumeration value that represents the first day of the week. </p>\n"
    return:
      type: System.Int32
      description: "\n<p>A positive integer that represents the week of the year that includes the date in the <em>time</em> parameter.</p>\n"
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>\n<em>time</em> is earlier than <xref href=\"System.Globalization.Calendar.MinSupportedDateTime\" data-throw-if-not-resolved=\"false\"></xref> or later than <xref href=\"System.Globalization.Calendar.MaxSupportedDateTime\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>-or-</p>\n<p>\n<em>firstDayOfWeek</em> is not a valid <xref href=\"System.DayOfWeek\" data-throw-if-not-resolved=\"false\"></xref> value.</p>\n<p>-or- </p>\n<p>\n<em>rule</em> is not a valid <xref href=\"System.Globalization.CalendarWeekRule\" data-throw-if-not-resolved=\"false\"></xref> value. </p>\n"
  seealso:
  - type: System.DateTime
    commentId: T:System.DateTime
  - type: System.Globalization.CalendarWeekRule
    commentId: T:System.Globalization.CalendarWeekRule
  - type: System.DayOfWeek
    commentId: T:System.DayOfWeek
  - type: System.Globalization.Calendar.GetEra(System.DateTime)
    commentId: M:System.Globalization.Calendar.GetEra(System.DateTime)
  - type: System.Globalization.Calendar.GetYear(System.DateTime)
    commentId: M:System.Globalization.Calendar.GetYear(System.DateTime)
  - type: System.Globalization.Calendar.GetMonth(System.DateTime)
    commentId: M:System.Globalization.Calendar.GetMonth(System.DateTime)
  - type: System.Globalization.Calendar.GetDayOfYear(System.DateTime)
    commentId: M:System.Globalization.Calendar.GetDayOfYear(System.DateTime)
  - type: System.Globalization.Calendar.GetDayOfMonth(System.DateTime)
    commentId: M:System.Globalization.Calendar.GetDayOfMonth(System.DateTime)
  - type: System.Globalization.Calendar.GetDayOfWeek(System.DateTime)
    commentId: M:System.Globalization.Calendar.GetDayOfWeek(System.DateTime)
  - type: System.Globalization.Calendar.GetHour(System.DateTime)
    commentId: M:System.Globalization.Calendar.GetHour(System.DateTime)
  - type: System.Globalization.Calendar.GetMinute(System.DateTime)
    commentId: M:System.Globalization.Calendar.GetMinute(System.DateTime)
  - type: System.Globalization.Calendar.GetSecond(System.DateTime)
    commentId: M:System.Globalization.Calendar.GetSecond(System.DateTime)
  - type: System.Globalization.Calendar.GetMilliseconds(System.DateTime)
    commentId: M:System.Globalization.Calendar.GetMilliseconds(System.DateTime)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Globalization.Calendar.GetYear(System.DateTime)
  commentId: M:System.Globalization.Calendar.GetYear(System.DateTime)
  id: GetYear(System.DateTime)
  parent: System.Globalization.Calendar
  langs:
  - csharp
  - vb
  name: GetYear(DateTime)
  fullName: System.Globalization.Calendar.GetYear(System.DateTime)
  type: Method
  source:
    remote:
      path: src/System.Globalization/ref/System.Globalization.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetYear
    path: src/System.Globalization/ref/System.Globalization.cs
    startLine: 44
  assemblies:
  - System.Globalization
  namespace: System.Globalization
  summary: "\n<p>When overridden in a derived class, returns the year in the specified <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  example:
  - "\n<p>The following code example demonstrates the members of the <xref href=\"System.Globalization.Calendar\" data-throw-if-not-resolved=\"false\"></xref> class.</p>System.Globalization.Calendar#1"
  syntax:
    content: public abstract int GetYear(DateTime time)
    content.vb: Public MustOverride Function GetYear(time As DateTime) As Integer
    parameters:
    - id: time
      type: System.DateTime
      description: "\n<p>The <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> to read. </p>\n"
    return:
      type: System.Int32
      description: "\n<p>An integer that represents the year in <em>time</em>.</p>\n"
  seealso:
  - type: System.DateTime.Year
    commentId: P:System.DateTime.Year
  - type: System.Globalization.Calendar.GetEra(System.DateTime)
    commentId: M:System.Globalization.Calendar.GetEra(System.DateTime)
  - type: System.Globalization.Calendar.GetMonth(System.DateTime)
    commentId: M:System.Globalization.Calendar.GetMonth(System.DateTime)
  - type: System.Globalization.Calendar.GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)
    commentId: M:System.Globalization.Calendar.GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)
  - type: System.Globalization.Calendar.GetDayOfYear(System.DateTime)
    commentId: M:System.Globalization.Calendar.GetDayOfYear(System.DateTime)
  - type: System.Globalization.Calendar.GetDayOfMonth(System.DateTime)
    commentId: M:System.Globalization.Calendar.GetDayOfMonth(System.DateTime)
  - type: System.Globalization.Calendar.GetDayOfWeek(System.DateTime)
    commentId: M:System.Globalization.Calendar.GetDayOfWeek(System.DateTime)
  - type: System.Globalization.Calendar.GetHour(System.DateTime)
    commentId: M:System.Globalization.Calendar.GetHour(System.DateTime)
  - type: System.Globalization.Calendar.GetMinute(System.DateTime)
    commentId: M:System.Globalization.Calendar.GetMinute(System.DateTime)
  - type: System.Globalization.Calendar.GetSecond(System.DateTime)
    commentId: M:System.Globalization.Calendar.GetSecond(System.DateTime)
  - type: System.Globalization.Calendar.GetMilliseconds(System.DateTime)
    commentId: M:System.Globalization.Calendar.GetMilliseconds(System.DateTime)
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: System.Globalization.Calendar.IsLeapDay(System.Int32,System.Int32,System.Int32)
  commentId: M:System.Globalization.Calendar.IsLeapDay(System.Int32,System.Int32,System.Int32)
  id: IsLeapDay(System.Int32,System.Int32,System.Int32)
  parent: System.Globalization.Calendar
  langs:
  - csharp
  - vb
  name: IsLeapDay(Int32, Int32, Int32)
  fullName: System.Globalization.Calendar.IsLeapDay(System.Int32, System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Globalization/ref/System.Globalization.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IsLeapDay
    path: src/System.Globalization/ref/System.Globalization.cs
    startLine: 45
  assemblies:
  - System.Globalization
  namespace: System.Globalization
  summary: "\n<p>Determines whether the specified date in the current era is a leap day.</p>\n"
  remarks: "\n<p>To make up for the difference between the calendar year and the actual time that the earth rotates around the sun or the actual time that the moon rotates around the earth, a leap year has a different number of days from a standard calendar year. Each <xref href=\"System.Globalization.Calendar\" data-throw-if-not-resolved=\"false\"></xref> implementation defines leap years differently.</p>\n<p>A leap day is a day that occurs only in a leap year. For example, in the Gregorian calendar, the 29th day of February is the only leap day.</p>\n"
  example:
  - "\n<p>The following code example compares different implementations of the <xref href=\"System.Globalization.Calendar\" data-throw-if-not-resolved=\"false\"></xref> class.</p>System.Globalization.Calendar_Compare#1"
  syntax:
    content: public virtual bool IsLeapDay(int year, int month, int day)
    content.vb: Public Overridable Function IsLeapDay(year As Integer, month As Integer, day As Integer) As Boolean
    parameters:
    - id: year
      type: System.Int32
      description: "\n<p>An integer that represents the year. </p>\n"
    - id: month
      type: System.Int32
      description: "\n<p>A positive integer that represents the month. </p>\n"
    - id: day
      type: System.Int32
      description: "\n<p>A positive integer that represents the day. </p>\n"
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if the specified day is a leap day; otherwise, <strong>false</strong>.</p>\n"
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>\n<em>year</em> is outside the range supported by the calendar.</p>\n<p>-or- </p>\n<p>\n<em>month</em> is outside the range supported by the calendar.</p>\n<p>-or- </p>\n<p>\n<em>day</em> is outside the range supported by the calendar. </p>\n"
  seealso:
  - type: System.Globalization.Calendar.GetMonthsInYear(System.Int32)
    commentId: M:System.Globalization.Calendar.GetMonthsInYear(System.Int32)
  - type: System.Globalization.Calendar.GetDaysInMonth(System.Int32,System.Int32)
    commentId: M:System.Globalization.Calendar.GetDaysInMonth(System.Int32,System.Int32)
  - type: System.Globalization.Calendar.IsLeapYear(System.Int32)
    commentId: M:System.Globalization.Calendar.IsLeapYear(System.Int32)
  - type: System.Globalization.Calendar.IsLeapMonth(System.Int32,System.Int32)
    commentId: M:System.Globalization.Calendar.IsLeapMonth(System.Int32,System.Int32)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Globalization.Calendar.IsLeapDay(System.Int32,System.Int32,System.Int32,System.Int32)
  commentId: M:System.Globalization.Calendar.IsLeapDay(System.Int32,System.Int32,System.Int32,System.Int32)
  id: IsLeapDay(System.Int32,System.Int32,System.Int32,System.Int32)
  parent: System.Globalization.Calendar
  langs:
  - csharp
  - vb
  name: IsLeapDay(Int32, Int32, Int32, Int32)
  fullName: System.Globalization.Calendar.IsLeapDay(System.Int32, System.Int32, System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Globalization/ref/System.Globalization.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IsLeapDay
    path: src/System.Globalization/ref/System.Globalization.cs
    startLine: 46
  assemblies:
  - System.Globalization
  namespace: System.Globalization
  summary: "\n<p>When overridden in a derived class, determines whether the specified date in the specified era is a leap day.</p>\n"
  remarks: "\n<p>To make up for the difference between the calendar year and the actual time that the earth rotates around the sun or the actual time that the moon rotates around the earth, a leap year has a different number of days from a standard calendar year. Each <xref href=\"System.Globalization.Calendar\" data-throw-if-not-resolved=\"false\"></xref> implementation defines leap years differently.</p>\n<p>A leap day is a day that occurs only in a leap year. For example, in the Gregorian calendar, the 29th day of February is the only leap day.</p>\n"
  syntax:
    content: public abstract bool IsLeapDay(int year, int month, int day, int era)
    content.vb: Public MustOverride Function IsLeapDay(year As Integer, month As Integer, day As Integer, era As Integer) As Boolean
    parameters:
    - id: year
      type: System.Int32
      description: "\n<p>An integer that represents the year. </p>\n"
    - id: month
      type: System.Int32
      description: "\n<p>A positive integer that represents the month. </p>\n"
    - id: day
      type: System.Int32
      description: "\n<p>A positive integer that represents the day. </p>\n"
    - id: era
      type: System.Int32
      description: "\n<p>An integer that represents the era. </p>\n"
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if the specified day is a leap day; otherwise, <strong>false</strong>.</p>\n"
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>\n<em>year</em> is outside the range supported by the calendar.</p>\n<p>-or- </p>\n<p>\n<em>month</em> is outside the range supported by the calendar.</p>\n<p>-or- </p>\n<p>\n<em>day</em> is outside the range supported by the calendar.</p>\n<p>-or- </p>\n<p>\n<em>era</em> is outside the range supported by the calendar. </p>\n"
  seealso:
  - type: System.Globalization.Calendar.CurrentEra
    commentId: F:System.Globalization.Calendar.CurrentEra
  - type: System.Globalization.Calendar.Eras
    commentId: P:System.Globalization.Calendar.Eras
  - type: System.Globalization.Calendar.GetMonthsInYear(System.Int32)
    commentId: M:System.Globalization.Calendar.GetMonthsInYear(System.Int32)
  - type: System.Globalization.Calendar.GetDaysInMonth(System.Int32,System.Int32)
    commentId: M:System.Globalization.Calendar.GetDaysInMonth(System.Int32,System.Int32)
  - type: System.Globalization.Calendar.IsLeapYear(System.Int32)
    commentId: M:System.Globalization.Calendar.IsLeapYear(System.Int32)
  - type: System.Globalization.Calendar.IsLeapMonth(System.Int32,System.Int32)
    commentId: M:System.Globalization.Calendar.IsLeapMonth(System.Int32,System.Int32)
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: System.Globalization.Calendar.IsLeapMonth(System.Int32,System.Int32)
  commentId: M:System.Globalization.Calendar.IsLeapMonth(System.Int32,System.Int32)
  id: IsLeapMonth(System.Int32,System.Int32)
  parent: System.Globalization.Calendar
  langs:
  - csharp
  - vb
  name: IsLeapMonth(Int32, Int32)
  fullName: System.Globalization.Calendar.IsLeapMonth(System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Globalization/ref/System.Globalization.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IsLeapMonth
    path: src/System.Globalization/ref/System.Globalization.cs
    startLine: 47
  assemblies:
  - System.Globalization
  namespace: System.Globalization
  summary: "\n<p>Determines whether the specified month in the specified year in the current era is a leap month.</p>\n"
  remarks: "\n<p>To make up for the difference between the calendar year and the actual time that the earth rotates around the sun or the actual time that the moon rotates around the earth, a leap year has a different number of days from a standard calendar year. Each <xref href=\"System.Globalization.Calendar\" data-throw-if-not-resolved=\"false\"></xref> implementation defines leap years differently.</p>\n<p>A leap month is an entire month that occurs only in a leap year. For example, in the Hebrew calendar, Adar Beit is the only leap month.</p>\n"
  example:
  - "\n<p>The following code example compares different implementations of the <xref href=\"System.Globalization.Calendar\" data-throw-if-not-resolved=\"false\"></xref> class.</p>System.Globalization.Calendar_Compare#1"
  syntax:
    content: public virtual bool IsLeapMonth(int year, int month)
    content.vb: Public Overridable Function IsLeapMonth(year As Integer, month As Integer) As Boolean
    parameters:
    - id: year
      type: System.Int32
      description: "\n<p>An integer that represents the year. </p>\n"
    - id: month
      type: System.Int32
      description: "\n<p>A positive integer that represents the month. </p>\n"
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if the specified month is a leap month; otherwise, <strong>false</strong>.</p>\n"
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>\n<em>year</em> is outside the range supported by the calendar.</p>\n<p>-or- </p>\n<p>\n<em>month</em> is outside the range supported by the calendar. </p>\n"
  seealso:
  - type: System.Globalization.Calendar.GetMonthsInYear(System.Int32)
    commentId: M:System.Globalization.Calendar.GetMonthsInYear(System.Int32)
  - type: System.Globalization.Calendar.IsLeapYear(System.Int32)
    commentId: M:System.Globalization.Calendar.IsLeapYear(System.Int32)
  - type: System.Globalization.Calendar.IsLeapDay(System.Int32,System.Int32,System.Int32)
    commentId: M:System.Globalization.Calendar.IsLeapDay(System.Int32,System.Int32,System.Int32)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Globalization.Calendar.IsLeapMonth(System.Int32,System.Int32,System.Int32)
  commentId: M:System.Globalization.Calendar.IsLeapMonth(System.Int32,System.Int32,System.Int32)
  id: IsLeapMonth(System.Int32,System.Int32,System.Int32)
  parent: System.Globalization.Calendar
  langs:
  - csharp
  - vb
  name: IsLeapMonth(Int32, Int32, Int32)
  fullName: System.Globalization.Calendar.IsLeapMonth(System.Int32, System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Globalization/ref/System.Globalization.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IsLeapMonth
    path: src/System.Globalization/ref/System.Globalization.cs
    startLine: 48
  assemblies:
  - System.Globalization
  namespace: System.Globalization
  summary: "\n<p>When overridden in a derived class, determines whether the specified month in the specified year in the specified era is a leap month.</p>\n"
  remarks: "\n<p>To make up for the difference between the calendar year and the actual time that the earth rotates around the sun or the actual time that the moon rotates around the earth, a leap year has a different number of days from a standard calendar year. Each <xref href=\"System.Globalization.Calendar\" data-throw-if-not-resolved=\"false\"></xref> implementation defines leap years differently.</p>\n<p>A leap month is an entire month that occurs only in a leap year. For example, in the Hebrew calendar, Adar Beit is the only leap month.</p>\n"
  syntax:
    content: public abstract bool IsLeapMonth(int year, int month, int era)
    content.vb: Public MustOverride Function IsLeapMonth(year As Integer, month As Integer, era As Integer) As Boolean
    parameters:
    - id: year
      type: System.Int32
      description: "\n<p>An integer that represents the year. </p>\n"
    - id: month
      type: System.Int32
      description: "\n<p>A positive integer that represents the month. </p>\n"
    - id: era
      type: System.Int32
      description: "\n<p>An integer that represents the era. </p>\n"
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if the specified month is a leap month; otherwise, <strong>false</strong>.</p>\n"
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>\n<em>year</em> is outside the range supported by the calendar.</p>\n<p>-or- </p>\n<p>\n<em>month</em> is outside the range supported by the calendar.</p>\n<p>-or- </p>\n<p>\n<em>era</em> is outside the range supported by the calendar. </p>\n"
  seealso:
  - type: System.Globalization.Calendar.CurrentEra
    commentId: F:System.Globalization.Calendar.CurrentEra
  - type: System.Globalization.Calendar.Eras
    commentId: P:System.Globalization.Calendar.Eras
  - type: System.Globalization.Calendar.GetMonthsInYear(System.Int32)
    commentId: M:System.Globalization.Calendar.GetMonthsInYear(System.Int32)
  - type: System.Globalization.Calendar.IsLeapYear(System.Int32)
    commentId: M:System.Globalization.Calendar.IsLeapYear(System.Int32)
  - type: System.Globalization.Calendar.IsLeapDay(System.Int32,System.Int32,System.Int32)
    commentId: M:System.Globalization.Calendar.IsLeapDay(System.Int32,System.Int32,System.Int32)
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: System.Globalization.Calendar.IsLeapYear(System.Int32)
  commentId: M:System.Globalization.Calendar.IsLeapYear(System.Int32)
  id: IsLeapYear(System.Int32)
  parent: System.Globalization.Calendar
  langs:
  - csharp
  - vb
  name: IsLeapYear(Int32)
  fullName: System.Globalization.Calendar.IsLeapYear(System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Globalization/ref/System.Globalization.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IsLeapYear
    path: src/System.Globalization/ref/System.Globalization.cs
    startLine: 49
  assemblies:
  - System.Globalization
  namespace: System.Globalization
  summary: "\n<p>Determines whether the specified year in the current era is a leap year.</p>\n"
  remarks: "\n<p>To make up for the difference between the calendar year and the actual time that the earth rotates around the sun or the actual time that the moon rotates around the earth, a leap year has a different number of days from a standard calendar year. Each <xref href=\"System.Globalization.Calendar\" data-throw-if-not-resolved=\"false\"></xref> implementation defines leap years differently.</p>\n"
  example:
  - "\n<p>The following code example compares different implementations of the <xref href=\"System.Globalization.Calendar\" data-throw-if-not-resolved=\"false\"></xref> class.</p>System.Globalization.Calendar_Compare#1"
  syntax:
    content: public virtual bool IsLeapYear(int year)
    content.vb: Public Overridable Function IsLeapYear(year As Integer) As Boolean
    parameters:
    - id: year
      type: System.Int32
      description: "\n<p>An integer that represents the year. </p>\n"
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if the specified year is a leap year; otherwise, <strong>false</strong>.</p>\n"
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>\n<em>year</em> is outside the range supported by the calendar. </p>\n"
  seealso:
  - type: System.Globalization.Calendar.IsLeapMonth(System.Int32,System.Int32)
    commentId: M:System.Globalization.Calendar.IsLeapMonth(System.Int32,System.Int32)
  - type: System.Globalization.Calendar.IsLeapDay(System.Int32,System.Int32,System.Int32)
    commentId: M:System.Globalization.Calendar.IsLeapDay(System.Int32,System.Int32,System.Int32)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Globalization.Calendar.IsLeapYear(System.Int32,System.Int32)
  commentId: M:System.Globalization.Calendar.IsLeapYear(System.Int32,System.Int32)
  id: IsLeapYear(System.Int32,System.Int32)
  parent: System.Globalization.Calendar
  langs:
  - csharp
  - vb
  name: IsLeapYear(Int32, Int32)
  fullName: System.Globalization.Calendar.IsLeapYear(System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Globalization/ref/System.Globalization.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IsLeapYear
    path: src/System.Globalization/ref/System.Globalization.cs
    startLine: 50
  assemblies:
  - System.Globalization
  namespace: System.Globalization
  summary: "\n<p>When overridden in a derived class, determines whether the specified year in the specified era is a leap year.</p>\n"
  remarks: "\n<p>To make up for the difference between the calendar year and the actual time that the earth rotates around the sun or the actual time that the moon rotates around the earth, a leap year has a different number of days from a standard calendar year. Each <xref href=\"System.Globalization.Calendar\" data-throw-if-not-resolved=\"false\"></xref> implementation defines leap years differently.</p>\n"
  syntax:
    content: public abstract bool IsLeapYear(int year, int era)
    content.vb: Public MustOverride Function IsLeapYear(year As Integer, era As Integer) As Boolean
    parameters:
    - id: year
      type: System.Int32
      description: "\n<p>An integer that represents the year. </p>\n"
    - id: era
      type: System.Int32
      description: "\n<p>An integer that represents the era. </p>\n"
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if the specified year is a leap year; otherwise, <strong>false</strong>.</p>\n"
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>\n<em>year</em> is outside the range supported by the calendar.</p>\n<p>-or- </p>\n<p>\n<em>era</em> is outside the range supported by the calendar. </p>\n"
  seealso:
  - type: System.Globalization.Calendar.CurrentEra
    commentId: F:System.Globalization.Calendar.CurrentEra
  - type: System.Globalization.Calendar.Eras
    commentId: P:System.Globalization.Calendar.Eras
  - type: System.Globalization.Calendar.IsLeapMonth(System.Int32,System.Int32)
    commentId: M:System.Globalization.Calendar.IsLeapMonth(System.Int32,System.Int32)
  - type: System.Globalization.Calendar.IsLeapDay(System.Int32,System.Int32,System.Int32)
    commentId: M:System.Globalization.Calendar.IsLeapDay(System.Int32,System.Int32,System.Int32)
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: System.Globalization.Calendar.ToDateTime(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  commentId: M:System.Globalization.Calendar.ToDateTime(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  id: ToDateTime(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  parent: System.Globalization.Calendar
  langs:
  - csharp
  - vb
  name: ToDateTime(Int32, Int32, Int32, Int32, Int32, Int32, Int32)
  fullName: System.Globalization.Calendar.ToDateTime(System.Int32, System.Int32, System.Int32, System.Int32, System.Int32, System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Globalization/ref/System.Globalization.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ToDateTime
    path: src/System.Globalization/ref/System.Globalization.cs
    startLine: 51
  assemblies:
  - System.Globalization
  namespace: System.Globalization
  summary: "\n<p>Returns a <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> that is set to the specified date and time in the current era.</p>\n"
  syntax:
    content: public virtual DateTime ToDateTime(int year, int month, int day, int hour, int minute, int second, int millisecond)
    content.vb: Public Overridable Function ToDateTime(year As Integer, month As Integer, day As Integer, hour As Integer, minute As Integer, second As Integer, millisecond As Integer) As DateTime
    parameters:
    - id: year
      type: System.Int32
      description: "\n<p>An integer that represents the year. </p>\n"
    - id: month
      type: System.Int32
      description: "\n<p>A positive integer that represents the month. </p>\n"
    - id: day
      type: System.Int32
      description: "\n<p>A positive integer that represents the day. </p>\n"
    - id: hour
      type: System.Int32
      description: "\n<p>An integer from 0 to 23 that represents the hour. </p>\n"
    - id: minute
      type: System.Int32
      description: "\n<p>An integer from 0 to 59 that represents the minute. </p>\n"
    - id: second
      type: System.Int32
      description: "\n<p>An integer from 0 to 59 that represents the second. </p>\n"
    - id: millisecond
      type: System.Int32
      description: "\n<p>An integer from 0 to 999 that represents the millisecond. </p>\n"
    return:
      type: System.DateTime
      description: "\n<p>The <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> that is set to the specified date and time in the current era.</p>\n"
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>\n<em>year</em> is outside the range supported by the calendar.</p>\n<p>-or- </p>\n<p>\n<em>month</em> is outside the range supported by the calendar.</p>\n<p>-or- </p>\n<p>\n<em>day</em> is outside the range supported by the calendar.</p>\n<p>-or- </p>\n<p>\n<em>hour</em> is less than zero or greater than 23.</p>\n<p>-or- </p>\n<p>\n<em>minute</em> is less than zero or greater than 59.</p>\n<p>-or- </p>\n<p>\n<em>second</em> is less than zero or greater than 59.</p>\n<p>-or- </p>\n<p>\n<em>millisecond</em> is less than zero or greater than 999. </p>\n"
  seealso:
  - type: System.DateTime
    commentId: T:System.DateTime
  - type: System.Globalization.Calendar.GetMonthsInYear(System.Int32)
    commentId: M:System.Globalization.Calendar.GetMonthsInYear(System.Int32)
  - type: System.Globalization.Calendar.GetDaysInMonth(System.Int32,System.Int32)
    commentId: M:System.Globalization.Calendar.GetDaysInMonth(System.Int32,System.Int32)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Globalization.Calendar.ToDateTime(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  commentId: M:System.Globalization.Calendar.ToDateTime(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  id: ToDateTime(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  parent: System.Globalization.Calendar
  langs:
  - csharp
  - vb
  name: ToDateTime(Int32, Int32, Int32, Int32, Int32, Int32, Int32, Int32)
  fullName: System.Globalization.Calendar.ToDateTime(System.Int32, System.Int32, System.Int32, System.Int32, System.Int32, System.Int32, System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Globalization/ref/System.Globalization.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ToDateTime
    path: src/System.Globalization/ref/System.Globalization.cs
    startLine: 52
  assemblies:
  - System.Globalization
  namespace: System.Globalization
  summary: "\n<p>When overridden in a derived class, returns a <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> that is set to the specified date and time in the specified era.</p>\n"
  remarks: "\n<p>The <xref href=\"System.Globalization.Calendar.ToDateTime(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)\" data-throw-if-not-resolved=\"false\"></xref> method is useful because it can convert any date in the current calendar to a Gregorian calendar date. The Gregorian date can subsequently be used, for example, to compare dates in different calendars or create an equivalent date in a particular calendar.</p>\n"
  syntax:
    content: public abstract DateTime ToDateTime(int year, int month, int day, int hour, int minute, int second, int millisecond, int era)
    content.vb: Public MustOverride Function ToDateTime(year As Integer, month As Integer, day As Integer, hour As Integer, minute As Integer, second As Integer, millisecond As Integer, era As Integer) As DateTime
    parameters:
    - id: year
      type: System.Int32
      description: "\n<p>An integer that represents the year. </p>\n"
    - id: month
      type: System.Int32
      description: "\n<p>A positive integer that represents the month. </p>\n"
    - id: day
      type: System.Int32
      description: "\n<p>A positive integer that represents the day. </p>\n"
    - id: hour
      type: System.Int32
      description: "\n<p>An integer from 0 to 23 that represents the hour. </p>\n"
    - id: minute
      type: System.Int32
      description: "\n<p>An integer from 0 to 59 that represents the minute. </p>\n"
    - id: second
      type: System.Int32
      description: "\n<p>An integer from 0 to 59 that represents the second. </p>\n"
    - id: millisecond
      type: System.Int32
      description: "\n<p>An integer from 0 to 999 that represents the millisecond. </p>\n"
    - id: era
      type: System.Int32
      description: "\n<p>An integer that represents the era. </p>\n"
    return:
      type: System.DateTime
      description: "\n<p>The <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> that is set to the specified date and time in the current era.</p>\n"
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>\n<em>year</em> is outside the range supported by the calendar.</p>\n<p>-or- </p>\n<p>\n<em>month</em> is outside the range supported by the calendar.</p>\n<p>-or- </p>\n<p>\n<em>day</em> is outside the range supported by the calendar.</p>\n<p>-or- </p>\n<p>\n<em>hour</em> is less than zero or greater than 23.</p>\n<p>-or- </p>\n<p>\n<em>minute</em> is less than zero or greater than 59.</p>\n<p>-or- </p>\n<p>\n<em>second</em> is less than zero or greater than 59.</p>\n<p>-or- </p>\n<p>\n<em>millisecond</em> is less than zero or greater than 999.</p>\n<p>-or- </p>\n<p>\n<em>era</em> is outside the range supported by the calendar. </p>\n"
  seealso:
  - type: System.DateTime
    commentId: T:System.DateTime
  - type: System.Globalization.Calendar.CurrentEra
    commentId: F:System.Globalization.Calendar.CurrentEra
  - type: System.Globalization.Calendar.Eras
    commentId: P:System.Globalization.Calendar.Eras
  - type: System.Globalization.Calendar.GetMonthsInYear(System.Int32)
    commentId: M:System.Globalization.Calendar.GetMonthsInYear(System.Int32)
  - type: System.Globalization.Calendar.GetDaysInMonth(System.Int32,System.Int32)
    commentId: M:System.Globalization.Calendar.GetDaysInMonth(System.Int32,System.Int32)
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: System.Globalization.Calendar.ToFourDigitYear(System.Int32)
  commentId: M:System.Globalization.Calendar.ToFourDigitYear(System.Int32)
  id: ToFourDigitYear(System.Int32)
  parent: System.Globalization.Calendar
  langs:
  - csharp
  - vb
  name: ToFourDigitYear(Int32)
  fullName: System.Globalization.Calendar.ToFourDigitYear(System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Globalization/ref/System.Globalization.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ToFourDigitYear
    path: src/System.Globalization/ref/System.Globalization.cs
    startLine: 53
  assemblies:
  - System.Globalization
  namespace: System.Globalization
  summary: "\n<p>Converts the specified year to a four-digit year by using the <xref href=\"System.Globalization.Calendar.TwoDigitYearMax\" data-throw-if-not-resolved=\"false\"></xref> property to determine the appropriate century.</p>\n"
  remarks: "\n<p>\n<xref href=\"System.Globalization.Calendar.TwoDigitYearMax\" data-throw-if-not-resolved=\"false\"></xref> is the last year in the 100-year range that can be represented by a two-digit year. The century is determined by finding the sole occurrence of the two-digit <em>year</em> within that 100-year range. For example, if <xref href=\"System.Globalization.Calendar.TwoDigitYearMax\" data-throw-if-not-resolved=\"false\"></xref> is set to 2029, the 100-year range is from 1930 to 2029. Therefore, a 2-digit value of 30 is interpreted as 1930, while a 2-digit value of 29 is interpreted as 2029.</p>\n<p>If <em>year</em> is greater than or equal to 100, the value of <em>year</em> is returned unchanged.</p>\n<p>\n<xref href=\"System.Globalization.Calendar.ToFourDigitYear(System.Int32)\" data-throw-if-not-resolved=\"false\"></xref> supports either a two-digit year or a four-digit year. Passing a two-digit year value (less than 100) causes the method to convert the value to a four-digit value according to the <xref href=\"System.Globalization.Calendar.TwoDigitYearMax\" data-throw-if-not-resolved=\"false\"></xref> value representing the appropriate century. If the application supplies a four-digit year value that is within the supported calendar range to <xref href=\"System.Globalization.Calendar.ToFourDigitYear(System.Int32)\" data-throw-if-not-resolved=\"false\"></xref>, the method returns the actual input value. If the application supplies a four-digit value that is outside the supported calendar range, or if it supplies a negative value, the method throws an exception.</p>\n"
  syntax:
    content: public virtual int ToFourDigitYear(int year)
    content.vb: Public Overridable Function ToFourDigitYear(year As Integer) As Integer
    parameters:
    - id: year
      type: System.Int32
      description: "\n<p>A two-digit or four-digit integer that represents the year to convert. </p>\n"
    return:
      type: System.Int32
      description: "\n<p>An integer that contains the four-digit representation of <em>year</em>.</p>\n"
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>\n<em>year</em> is outside the range supported by the calendar. </p>\n"
  seealso:
  - type: System.Globalization.Calendar.TwoDigitYearMax
    commentId: P:System.Globalization.Calendar.TwoDigitYearMax
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
references:
- uid: System.Globalization
  isExternal: false
  name: System.Globalization
  fullName: System.Globalization
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  fullName: System.Int32
- uid: System.Int32[]
  isExternal: false
  name: Int32[]
  fullName: System.Int32[]
  fullname.vb: System.Int32()
  name.vb: Int32()
  spec.csharp:
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
  - name: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
  - name: ()
    fullName: ()
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  fullName: System.Boolean
- uid: System.DateTime
  parent: System
  isExternal: false
  name: DateTime
  fullName: System.DateTime
- uid: System.Double
  parent: System
  isExternal: false
  name: Double
  fullName: System.Double
- uid: System.DayOfWeek
  parent: System
  isExternal: false
  name: DayOfWeek
  fullName: System.DayOfWeek
- uid: System.Globalization.CalendarWeekRule
  parent: System.Globalization
  isExternal: false
  name: CalendarWeekRule
  fullName: System.Globalization.CalendarWeekRule
- uid: System.InvalidOperationException
  parent: System
  isExternal: false
  name: InvalidOperationException
  fullName: System.InvalidOperationException
- uid: System.ArgumentException
  parent: System
  isExternal: false
  name: ArgumentException
  fullName: System.ArgumentException
- uid: System.ArgumentOutOfRangeException
  isExternal: false
  name: ArgumentOutOfRangeException
  fullName: System.ArgumentOutOfRangeException
