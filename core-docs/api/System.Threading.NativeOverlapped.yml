items:
- uid: System.Threading.NativeOverlapped
  commentId: T:System.Threading.NativeOverlapped
  id: NativeOverlapped
  parent: System.Threading
  children:
  - System.Threading.NativeOverlapped.EventHandle
  - System.Threading.NativeOverlapped.InternalHigh
  - System.Threading.NativeOverlapped.InternalLow
  - System.Threading.NativeOverlapped.OffsetHigh
  - System.Threading.NativeOverlapped.OffsetLow
  langs:
  - csharp
  - vb
  name: NativeOverlapped
  fullName: System.Threading.NativeOverlapped
  type: Struct
  source:
    remote:
      path: src/mscorlib/src/System/Threading/Overlapped.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: NativeOverlapped
    path: src/mscorlib/src/System/Threading/Overlapped.cs
    startLine: 44
  assemblies:
  - System.Threading.Overlapped
  namespace: System.Threading
  summary: "\n<p>Provides an explicit layout that is visible from unmanaged code and that will have the same layout as the Win32 OVERLAPPED structure with additional reserved fields at the end.</p>\n"
  remarks: "\n<p>The <xref href=\"System.Threading.NativeOverlapped\" data-throw-if-not-resolved=\"false\"></xref>.NET Framework value type represents an unmanaged version of the Win32 OVERLAPPED structure. The layout of this structure must be identical to OVERLAPPED. Four additional DWORDs are reserved at the end.</p>\n"
  syntax:
    content: >-
      [StructLayout(LayoutKind.Sequential)]

      [ComVisible(true)]

      public struct NativeOverlapped
    content.vb: >-
      <StructLayout(LayoutKind.Sequential)>

      <ComVisible(True)>

      Public Structure NativeOverlapped
  inheritedMembers:
  - System.ValueType.Equals(System.Object)
  - System.ValueType.GetHashCode
  - System.ValueType.ToString
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetType
  attributes:
  - type: System.Runtime.InteropServices.StructLayoutAttribute
    ctor: System.Runtime.InteropServices.StructLayoutAttribute.#ctor(System.Runtime.InteropServices.LayoutKind)
    arguments:
    - type: System.Runtime.InteropServices.LayoutKind
      value: 0
  modifiers.csharp:
  - public
  - struct
  modifiers.vb:
  - Public
  - Structure
- uid: System.Threading.NativeOverlapped.EventHandle
  commentId: F:System.Threading.NativeOverlapped.EventHandle
  id: EventHandle
  parent: System.Threading.NativeOverlapped
  langs:
  - csharp
  - vb
  name: EventHandle
  fullName: System.Threading.NativeOverlapped.EventHandle
  type: Field
  source:
    remote:
      path: src/mscorlib/src/System/Threading/Overlapped.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: EventHandle
    path: src/mscorlib/src/System/Threading/Overlapped.cs
    startLine: 52
  assemblies:
  - System.Threading.Overlapped
  namespace: System.Threading
  summary: "\n<p>Specifies the handle to an event set to the signaled state when the operation is complete. The calling process must set this member either to zero or to a valid event handle before calling any overlapped functions.</p>\n"
  syntax:
    content: public IntPtr EventHandle
    content.vb: Public EventHandle As IntPtr
    return:
      type: System.IntPtr
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Threading.NativeOverlapped.InternalHigh
  commentId: F:System.Threading.NativeOverlapped.InternalHigh
  id: InternalHigh
  parent: System.Threading.NativeOverlapped
  langs:
  - csharp
  - vb
  name: InternalHigh
  fullName: System.Threading.NativeOverlapped.InternalHigh
  type: Field
  source:
    remote:
      path: src/mscorlib/src/System/Threading/Overlapped.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: InternalHigh
    path: src/mscorlib/src/System/Threading/Overlapped.cs
    startLine: 49
  assemblies:
  - System.Threading.Overlapped
  namespace: System.Threading
  summary: "\n<p>Specifies the length of the data transferred. Reserved for operating system use.</p>\n"
  syntax:
    content: public IntPtr InternalHigh
    content.vb: Public InternalHigh As IntPtr
    return:
      type: System.IntPtr
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Threading.NativeOverlapped.InternalLow
  commentId: F:System.Threading.NativeOverlapped.InternalLow
  id: InternalLow
  parent: System.Threading.NativeOverlapped
  langs:
  - csharp
  - vb
  name: InternalLow
  fullName: System.Threading.NativeOverlapped.InternalLow
  type: Field
  source:
    remote:
      path: src/mscorlib/src/System/Threading/Overlapped.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: InternalLow
    path: src/mscorlib/src/System/Threading/Overlapped.cs
    startLine: 48
  assemblies:
  - System.Threading.Overlapped
  namespace: System.Threading
  summary: "\n<p>Specifies a system-dependent status. Reserved for operating system use.</p>\n"
  syntax:
    content: public IntPtr InternalLow
    content.vb: Public InternalLow As IntPtr
    return:
      type: System.IntPtr
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Threading.NativeOverlapped.OffsetHigh
  commentId: F:System.Threading.NativeOverlapped.OffsetHigh
  id: OffsetHigh
  parent: System.Threading.NativeOverlapped
  langs:
  - csharp
  - vb
  name: OffsetHigh
  fullName: System.Threading.NativeOverlapped.OffsetHigh
  type: Field
  source:
    remote:
      path: src/mscorlib/src/System/Threading/Overlapped.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: OffsetHigh
    path: src/mscorlib/src/System/Threading/Overlapped.cs
    startLine: 51
  assemblies:
  - System.Threading.Overlapped
  namespace: System.Threading
  summary: "\n<p>Specifies the high word of the byte offset at which to start the transfer.</p>\n"
  remarks: "\n<p>This member is ignored when reading from or writing to named pipes and communications devices and in those cases its value should be zero.</p>\n"
  syntax:
    content: public int OffsetHigh
    content.vb: Public OffsetHigh As Integer
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Threading.NativeOverlapped.OffsetLow
  commentId: F:System.Threading.NativeOverlapped.OffsetLow
  id: OffsetLow
  parent: System.Threading.NativeOverlapped
  langs:
  - csharp
  - vb
  name: OffsetLow
  fullName: System.Threading.NativeOverlapped.OffsetLow
  type: Field
  source:
    remote:
      path: src/mscorlib/src/System/Threading/Overlapped.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: OffsetLow
    path: src/mscorlib/src/System/Threading/Overlapped.cs
    startLine: 50
  assemblies:
  - System.Threading.Overlapped
  namespace: System.Threading
  summary: "\n<p>Specifies a file position at which to start the transfer.</p>\n"
  remarks: "\n<p>The file position is a byte offset from the start of the file. The calling process sets this member before calling the OR function. This member is ignored when reading from or writing to named pipes and communications devices, and in those cases its value should be zero.</p>\n"
  syntax:
    content: public int OffsetLow
    content.vb: Public OffsetLow As Integer
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: System.Threading
  isExternal: false
  name: System.Threading
  fullName: System.Threading
- uid: System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  name: Equals(Object)
  fullName: System.ValueType.Equals(System.Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    fullName: System.ValueType.Equals
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    fullName: System.ValueType.Equals
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: false
  name: GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    fullName: System.ValueType.GetHashCode
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    fullName: System.ValueType.GetHashCode
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.ValueType.ToString
  parent: System.ValueType
  isExternal: false
  name: ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    fullName: System.ValueType.ToString
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    fullName: System.ValueType.ToString
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.ValueType
  parent: System
  isExternal: false
  name: ValueType
  fullName: System.ValueType
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.IntPtr
  parent: System
  isExternal: false
  name: IntPtr
  fullName: System.IntPtr
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  fullName: System.Int32
