items:
- uid: System.Diagnostics.StackFrame
  commentId: T:System.Diagnostics.StackFrame
  id: StackFrame
  parent: System.Diagnostics
  children:
  - System.Diagnostics.StackFrame.GetFileColumnNumber
  - System.Diagnostics.StackFrame.GetFileLineNumber
  - System.Diagnostics.StackFrame.GetFileName
  - System.Diagnostics.StackFrame.GetILOffset
  - System.Diagnostics.StackFrame.GetMethod
  - System.Diagnostics.StackFrame.OFFSET_UNKNOWN
  - System.Diagnostics.StackFrame.ToString
  langs:
  - csharp
  - vb
  name: StackFrame
  fullName: System.Diagnostics.StackFrame
  type: Class
  source:
    remote:
      path: src/mscorlib/src/System/Diagnostics/Stackframe.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: StackFrame
    path: src/mscorlib/src/System/Diagnostics/Stackframe.cs
    startLine: 20
  assemblies:
  - System.Diagnostics.StackTrace
  namespace: System.Diagnostics
  summary: "\n<p>Provides information about a <xref href=\"System.Diagnostics.StackFrame\" data-throw-if-not-resolved=\"false\"></xref>, which represents a function call on the call stack for the current thread.</p>\n"
  remarks: "\n<p>A <xref href=\"System.Diagnostics.StackFrame\" data-throw-if-not-resolved=\"false\"></xref> is created and pushed on the call stack for every function call made during the execution of a thread. The stack frame always includes <xref href=\"System.Reflection.MethodBase\" data-throw-if-not-resolved=\"false\"></xref> information, and optionally includes file name, line number, and column number information.</p>\n<p>\n<xref href=\"System.Diagnostics.StackFrame\" data-throw-if-not-resolved=\"false\"></xref> information will be most informative with Debug build configurations. By default, Debug builds include debug symbols, while Release builds do not. The debug symbols contain most of the file, method name, line number, and column information used in constructing <xref href=\"System.Diagnostics.StackFrame\" data-throw-if-not-resolved=\"false\"></xref> objects.</p>\n"
  example:
  - "\n<p>The following example demonstrates the use of the <xref href=\"System.Diagnostics.StackFrame\" data-throw-if-not-resolved=\"false\"></xref> class to provide the stack frame information for a stack trace.</p>StackFrameSample2#1<p>The following example demonstrates the use of  the members of the <xref href=\"System.Diagnostics.StackFrame\" data-throw-if-not-resolved=\"false\"></xref> class.</p>StackFrameSample1#1"
  syntax:
    content: >-
      [Serializable]

      [ComVisible(true)]

      public class StackFrame
    content.vb: >-
      <Serializable>

      <ComVisible(True)>

      Public Class StackFrame
  seealso:
  - type: System.Diagnostics.StackTrace
    commentId: T:System.Diagnostics.StackTrace
  see:
  - type: System.Security.Permissions.SecurityAction.InheritanceDemand
    commentId: F:System.Security.Permissions.SecurityAction.InheritanceDemand
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: System.Diagnostics.StackFrame.OFFSET_UNKNOWN
  commentId: F:System.Diagnostics.StackFrame.OFFSET_UNKNOWN
  id: OFFSET_UNKNOWN
  parent: System.Diagnostics.StackFrame
  langs:
  - csharp
  - vb
  name: OFFSET_UNKNOWN
  fullName: System.Diagnostics.StackFrame.OFFSET_UNKNOWN
  type: Field
  source:
    remote:
      path: src/mscorlib/src/System/Diagnostics/Stackframe.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: OFFSET_UNKNOWN
    path: src/mscorlib/src/System/Diagnostics/Stackframe.cs
    startLine: 126
  assemblies:
  - System.Diagnostics.StackTrace
  namespace: System.Diagnostics
  summary: "\n<p>Defines the value that is returned from the <xref href=\"System.Diagnostics.StackFrame.GetNativeOffset\" data-throw-if-not-resolved=\"false\"></xref> or <xref href=\"System.Diagnostics.StackFrame.GetILOffset\" data-throw-if-not-resolved=\"false\"></xref> method when the native or Microsoft intermediate language (MSIL) offset is unknown. This field is constant.</p>\n"
  remarks: "\n<p>The value of this constant is -1.</p>\n"
  syntax:
    content: public const int OFFSET_UNKNOWN = -1
    content.vb: Public Const OFFSET_UNKNOWN As Integer = -1
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Diagnostics.StackFrame.GetFileColumnNumber
  commentId: M:System.Diagnostics.StackFrame.GetFileColumnNumber
  id: GetFileColumnNumber
  parent: System.Diagnostics.StackFrame
  langs:
  - csharp
  - vb
  name: GetFileColumnNumber()
  fullName: System.Diagnostics.StackFrame.GetFileColumnNumber()
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Diagnostics/Stackframe.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: GetFileColumnNumber
    path: src/mscorlib/src/System/Diagnostics/Stackframe.cs
    startLine: 236
  assemblies:
  - System.Diagnostics.StackTrace
  namespace: System.Diagnostics
  summary: "\n<p>Gets the column number in the file that contains the code that is executing. This information is typically extracted from the debugging symbols for the executable.</p>\n"
  example:
  - "\n<p>The following example demonstrates the use of the <xref href=\"System.Diagnostics.StackFrame.GetFileColumnNumber\" data-throw-if-not-resolved=\"false\"></xref> method. This code example is part of a larger example provided for the <xref href=\"System.Diagnostics.StackFrame\" data-throw-if-not-resolved=\"false\"></xref> class.</p>StackFrameSample1#7"
  syntax:
    content: public virtual int GetFileColumnNumber()
    content.vb: Public Overridable Function GetFileColumnNumber As Integer
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Diagnostics.StackFrame.GetFileLineNumber
  commentId: M:System.Diagnostics.StackFrame.GetFileLineNumber
  id: GetFileLineNumber
  parent: System.Diagnostics.StackFrame
  langs:
  - csharp
  - vb
  name: GetFileLineNumber()
  fullName: System.Diagnostics.StackFrame.GetFileLineNumber()
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Diagnostics/Stackframe.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: GetFileLineNumber
    path: src/mscorlib/src/System/Diagnostics/Stackframe.cs
    startLine: 227
  assemblies:
  - System.Diagnostics.StackTrace
  namespace: System.Diagnostics
  summary: "\n<p>Gets the line number in the file that contains the code that is executing. This information is typically extracted from the debugging symbols for the executable.</p>\n"
  example:
  - "\n<p>The following example demonstrates the use of the <xref href=\"System.Diagnostics.StackFrame.GetFileLineNumber\" data-throw-if-not-resolved=\"false\"></xref> method. This code example is part of a larger example provided for the <xref href=\"System.Diagnostics.StackFrame\" data-throw-if-not-resolved=\"false\"></xref> class.</p>StackFrameSample1#7"
  syntax:
    content: public virtual int GetFileLineNumber()
    content.vb: Public Overridable Function GetFileLineNumber As Integer
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Diagnostics.StackFrame.GetFileName
  commentId: M:System.Diagnostics.StackFrame.GetFileName
  id: GetFileName
  parent: System.Diagnostics.StackFrame
  langs:
  - csharp
  - vb
  name: GetFileName()
  fullName: System.Diagnostics.StackFrame.GetFileName()
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Diagnostics/Stackframe.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: GetFileName
    path: src/mscorlib/src/System/Diagnostics/Stackframe.cs
    startLine: 203
  assemblies:
  - System.Diagnostics.StackTrace
  namespace: System.Diagnostics
  summary: "\n<p>Gets the file name that contains the code that is executing. This information is typically extracted from the debugging symbols for the executable.</p>\n"
  example:
  - "\n<p>The following example demonstrates the use of the <xref href=\"System.Diagnostics.StackFrame.GetFileName\" data-throw-if-not-resolved=\"false\"></xref> method. This code example is part of a larger example provided for the <xref href=\"System.Diagnostics.StackFrame\" data-throw-if-not-resolved=\"false\"></xref> class.</p>StackFrameSample1#7"
  syntax:
    content: >-
      [SecurityCritical]

      public virtual string GetFileName()
    content.vb: >-
      <SecurityCritical>

      Public Overridable Function GetFileName As String
    return:
      type: System.String
  see:
  - type: System.Security.Permissions.FileIOPermission
    commentId: T:System.Security.Permissions.FileIOPermission
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Diagnostics.StackFrame.GetILOffset
  commentId: M:System.Diagnostics.StackFrame.GetILOffset
  id: GetILOffset
  parent: System.Diagnostics.StackFrame
  langs:
  - csharp
  - vb
  name: GetILOffset()
  fullName: System.Diagnostics.StackFrame.GetILOffset()
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Diagnostics/Stackframe.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: GetILOffset
    path: src/mscorlib/src/System/Diagnostics/Stackframe.cs
    startLine: 193
  assemblies:
  - System.Diagnostics.StackTrace
  namespace: System.Diagnostics
  summary: "\n<p>Gets the offset from the start of the Microsoft intermediate language (MSIL) code for the method that is executing. This offset might be an approximation depending on whether or not the just-in-time (JIT) compiler is generating debugging code. The generation of this debugging information is controlled by the <xref href=\"System.Diagnostics.DebuggableAttribute\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  example:
  - "\n<p>The following example demonstrates the use of the <xref href=\"System.Diagnostics.StackFrame.GetILOffset\" data-throw-if-not-resolved=\"false\"></xref> method. This code example is part of a larger example provided for the <xref href=\"System.Diagnostics.StackFrame\" data-throw-if-not-resolved=\"false\"></xref> class.</p>StackFrameSample1#7"
  syntax:
    content: public virtual int GetILOffset()
    content.vb: Public Overridable Function GetILOffset As Integer
    return:
      type: System.Int32
  seealso:
  - type: System.Diagnostics.DebuggableAttribute
    commentId: T:System.Diagnostics.DebuggableAttribute
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Diagnostics.StackFrame.GetMethod
  commentId: M:System.Diagnostics.StackFrame.GetMethod
  id: GetMethod
  parent: System.Diagnostics.StackFrame
  langs:
  - csharp
  - vb
  name: GetMethod()
  fullName: System.Diagnostics.StackFrame.GetMethod()
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Diagnostics/Stackframe.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: GetMethod
    path: src/mscorlib/src/System/Diagnostics/Stackframe.cs
    startLine: 173
  assemblies:
  - System.Diagnostics.StackTrace
  namespace: System.Diagnostics
  summary: "\n<p>Gets the method in which the frame is executing.</p>\n"
  remarks: "\n<p>The method that is currently executing may be inherited from a base class, although it is called in a derived class. In this case, the <xref href=\"System.Reflection.MemberInfo.ReflectedType\" data-throw-if-not-resolved=\"false\"></xref> property of the <xref href=\"System.Reflection.MethodBase\" data-throw-if-not-resolved=\"false\"></xref> object that is returned by <xref href=\"System.Diagnostics.StackFrame.GetMethod\" data-throw-if-not-resolved=\"false\"></xref> identifies the base class, not the derived class.  </p>\n"
  example:
  - "\n<p>The following example demonstrates the use of the <xref href=\"System.Diagnostics.StackFrame.GetMethod\" data-throw-if-not-resolved=\"false\"></xref> method. This code example is part of a larger example provided for the <xref href=\"System.Diagnostics.StackFrame\" data-throw-if-not-resolved=\"false\"></xref> class.</p>StackTraceSample3#6"
  syntax:
    content: public virtual MethodBase GetMethod()
    content.vb: Public Overridable Function GetMethod As MethodBase
    return:
      type: System.Reflection.MethodBase
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Diagnostics.StackFrame.ToString
  commentId: M:System.Diagnostics.StackFrame.ToString
  id: ToString
  parent: System.Diagnostics.StackFrame
  langs:
  - csharp
  - vb
  name: ToString()
  fullName: System.Diagnostics.StackFrame.ToString()
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Diagnostics/Stackframe.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToString
    path: src/mscorlib/src/System/Diagnostics/Stackframe.cs
    startLine: 244
  assemblies:
  - System.Diagnostics.StackTrace
  namespace: System.Diagnostics
  summary: "\n<p>Builds a readable representation of the stack trace.</p>\n"
  example:
  - "\n<p>The following example demonstrates the use of the <xref href=\"System.Diagnostics.StackFrame.ToString\" data-throw-if-not-resolved=\"false\"></xref> method. This code example is part of a larger example provided for the <xref href=\"System.Diagnostics.StackFrame\" data-throw-if-not-resolved=\"false\"></xref> class.</p>StackFrameSample1#3"
  syntax:
    content: >-
      [SecuritySafeCritical]

      public override string ToString()
    content.vb: >-
      <SecuritySafeCritical>

      Public Overrides Function ToString As String
    return:
      type: System.String
  overridden: System.Object.ToString
  see:
  - type: System.Security.Permissions.FileIOPermission
    commentId: T:System.Security.Permissions.FileIOPermission
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: System.Diagnostics
  isExternal: false
  name: System.Diagnostics
  fullName: System.Diagnostics
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  fullName: System.Int32
- uid: System.String
  parent: System
  isExternal: false
  name: String
  fullName: System.String
- uid: System.Reflection.MethodBase
  parent: System.Reflection
  isExternal: false
  name: MethodBase
  fullName: System.Reflection.MethodBase
- uid: System.Reflection
  isExternal: false
  name: System.Reflection
  fullName: System.Reflection
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
