items:
- uid: System.ArgumentNullException
  commentId: T:System.ArgumentNullException
  id: ArgumentNullException
  parent: System
  children:
  - System.ArgumentNullException.#ctor
  - System.ArgumentNullException.#ctor(System.String)
  - System.ArgumentNullException.#ctor(System.String,System.Exception)
  - System.ArgumentNullException.#ctor(System.String,System.String)
  langs:
  - csharp
  - vb
  name: ArgumentNullException
  fullName: System.ArgumentNullException
  type: Class
  source:
    remote:
      path: src/mscorlib/src/System/ArgumentNullException.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ArgumentNullException
    path: src/mscorlib/src/System/ArgumentNullException.cs
    startLine: 23
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>The exception that is thrown when a null reference (<strong>Nothing</strong> in Visual Basic) is passed to a method that does not accept it as a valid argument. </p>\n"
  remarks: "\n<p>An <xref href=\"System.ArgumentNullException\" data-throw-if-not-resolved=\"false\"></xref> exception is thrown when a method is invoked and at least one of the passed arguments is <strong>null</strong> but should never be <strong>null</strong>.</p>\n<p></p>\n<p>An <xref href=\"System.ArgumentNullException\" data-throw-if-not-resolved=\"false\"></xref> exception is thrown at run time in the following two major circumstances, both of which reflect developer error: </p>\n<ul><li>\n<p>An uninstantiated object is passed to a method. To prevent the error, instantiate the object. </p>\n</li><li>\n<p>An object returned from a method call is then passed as an argument to a second method, but the value of the original returned object is <strong>null</strong>. To prevent the error, check for a return value that is <strong>null</strong> and call the second method only if the return value is not <strong>null</strong>. </p>\n</li></ul>\n<p>\n<xref href=\"System.ArgumentNullException\" data-throw-if-not-resolved=\"false\"></xref> behaves identically to <xref href=\"System.ArgumentException\" data-throw-if-not-resolved=\"false\"></xref>. It is provided so that application code can differentiate between exceptions caused by <strong>null</strong> arguments and exceptions caused by arguments that are not null. For errors caused by arguments that are not null, see <xref href=\"System.ArgumentOutOfRangeException\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>\n<xref href=\"System.ArgumentNullException\" data-throw-if-not-resolved=\"false\"></xref> uses the HRESULT E_POINTER, which has the value 0x80004003.</p>\n<p>For a list of initial property values for an instance of <xref href=\"System.ArgumentNullException\" data-throw-if-not-resolved=\"false\"></xref>, see the <xref href=\"System.ArgumentNullException\" data-throw-if-not-resolved=\"false\"></xref> constructors.</p>\n"
  syntax:
    content: >-
      [ComVisible(true)]

      [Serializable]

      public class ArgumentNullException : ArgumentException, _Exception, ISerializable
    content.vb: >-
      <ComVisible(True)>

      <Serializable>

      Public Class ArgumentNullException
          Inherits ArgumentException
          Implements _Exception, ISerializable
  seealso:
  - type: System.Exception
    commentId: T:System.Exception
  inheritance:
  - System.Object
  - System.Exception
  - System.ArgumentException
  inheritedMembers:
  - System.ArgumentException.Message
  - System.ArgumentException.ParamName
  - System.Exception.Data
  - System.Exception.HelpLink
  - System.Exception.HResult
  - System.Exception.InnerException
  - System.Exception.Source
  - System.Exception.StackTrace
  - System.Exception.GetBaseException
  - System.Exception.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: System.ArgumentNullException.#ctor
  commentId: M:System.ArgumentNullException.#ctor
  id: '#ctor'
  parent: System.ArgumentNullException
  langs:
  - csharp
  - vb
  name: ArgumentNullException()
  fullName: System.ArgumentNullException.ArgumentNullException()
  type: Constructor
  source:
    remote:
      path: src/mscorlib/src/System/ArgumentNullException.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: .ctor
    path: src/mscorlib/src/System/ArgumentNullException.cs
    startLine: 28
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.ArgumentNullException\" data-throw-if-not-resolved=\"false\"></xref> class.</p>\n"
  remarks: "\n<p>This constructor initializes the <xref href=\"System.ArgumentException.Message\" data-throw-if-not-resolved=\"false\"></xref> property of the new instance to a system-supplied message that describes the error, such as \"Value cannot be null.\" This message takes into account the current system culture.</p>\n<p>The following table shows the initial property values for an instance of <xref href=\"System.ArgumentNullException\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>Property </p>\n<p>Value </p>\n<table><tbody><tr><td>\n<p>\n<xref href=\"System.Exception.InnerException\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td><td>\n<p>A null reference (<strong>Nothing</strong> in Visual Basic). </p>\n</td></tr><tr><td>\n<p>\n<xref href=\"System.ArgumentException.Message\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td><td>\n<p>A localized error message string, such as \"Value cannot be null.\" for the English language. </p>\n</td></tr></tbody></table>\n"
  syntax:
    content: public ArgumentNullException()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.ArgumentNullException.#ctor(System.String)
  commentId: M:System.ArgumentNullException.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.ArgumentNullException
  langs:
  - csharp
  - vb
  name: ArgumentNullException(String)
  fullName: System.ArgumentNullException.ArgumentNullException(System.String)
  type: Constructor
  source:
    remote:
      path: src/mscorlib/src/System/ArgumentNullException.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: .ctor
    path: src/mscorlib/src/System/ArgumentNullException.cs
    startLine: 34
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.ArgumentNullException\" data-throw-if-not-resolved=\"false\"></xref> class with the name of the parameter that causes this exception.</p>\n"
  remarks: "\n<p>This constructor initializes the <xref href=\"System.ArgumentException.Message\" data-throw-if-not-resolved=\"false\"></xref> property of the new instance to a system-supplied message that describes the error and includes the parameter name. This message takes into account the current system culture.</p>\n<p>This constructor initializes the <xref href=\"System.ArgumentException.ParamName\" data-throw-if-not-resolved=\"false\"></xref> property of the new instance using the <em>paramName</em> parameter. The content of <em>paramName</em> is intended to be understood by humans.</p>\n<p>The following table shows the initial property values for an instance of <xref href=\"System.ArgumentNullException\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>Property </p>\n<p>Value </p>\n<table><tbody><tr><td>\n<p>\n<xref href=\"System.Exception.InnerException\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td><td>\n<p>A null reference (<strong>Nothing</strong> in Visual Basic). </p>\n</td></tr><tr><td>\n<p>\n<xref href=\"System.ArgumentException.Message\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td><td>\n<p>A localized error message string that identifies the null argument. For example, if the <em>paramName</em> argument is \"arg1\", the English language message string is: </p>\nValue cannot be null.Parameter name: arg01\n</td></tr><tr><td>\n<p>\n<xref href=\"System.ArgumentException.ParamName\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td><td>\n<p>The parameter name string. </p>\n</td></tr></tbody></table>\n"
  syntax:
    content: public ArgumentNullException(string paramName)
    content.vb: Public Sub New(paramName As String)
    parameters:
    - id: paramName
      type: System.String
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.ArgumentNullException.#ctor(System.String,System.Exception)
  commentId: M:System.ArgumentNullException.#ctor(System.String,System.Exception)
  id: '#ctor(System.String,System.Exception)'
  parent: System.ArgumentNullException
  langs:
  - csharp
  - vb
  name: ArgumentNullException(String, Exception)
  fullName: System.ArgumentNullException.ArgumentNullException(System.String, System.Exception)
  type: Constructor
  source:
    remote:
      path: src/mscorlib/src/System/ArgumentNullException.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: .ctor
    path: src/mscorlib/src/System/ArgumentNullException.cs
    startLine: 39
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.ArgumentNullException\" data-throw-if-not-resolved=\"false\"></xref> class with a specified error message and the exception that is the cause of this exception.</p>\n"
  example:
  - 
  syntax:
    content: public ArgumentNullException(string message, Exception innerException)
    content.vb: Public Sub New(message As String, innerException As Exception)
    parameters:
    - id: message
      type: System.String
    - id: innerException
      type: System.Exception
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.ArgumentNullException.#ctor(System.String,System.String)
  commentId: M:System.ArgumentNullException.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: System.ArgumentNullException
  langs:
  - csharp
  - vb
  name: ArgumentNullException(String, String)
  fullName: System.ArgumentNullException.ArgumentNullException(System.String, System.String)
  type: Constructor
  source:
    remote:
      path: src/mscorlib/src/System/ArgumentNullException.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: .ctor
    path: src/mscorlib/src/System/ArgumentNullException.cs
    startLine: 44
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Initializes an instance of the <xref href=\"System.ArgumentNullException\" data-throw-if-not-resolved=\"false\"></xref> class with a specified error message and the name of the parameter that causes this exception.</p>\n"
  remarks: "\n<p>This constructor initializes the <xref href=\"System.ArgumentException.Message\" data-throw-if-not-resolved=\"false\"></xref> property of the new instance using the value of the <em>message</em> parameter. The content of the <em>message</em> parameter is intended to be understood by humans. The caller of this constructor is required to ensure that this string has been localized for the current system culture.</p>\n<p>This constructor initializes the <xref href=\"System.ArgumentException.ParamName\" data-throw-if-not-resolved=\"false\"></xref> property of the new instance using the <em>paramName</em> parameter. The content of <em>paramName</em> is intended to be understood by humans.</p>\n<p>The following table shows the initial property values for an instance of <xref href=\"System.ArgumentNullException\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>Property </p>\n<p>Value </p>\n<table><tbody><tr><td>\n<p>\n<xref href=\"System.Exception.InnerException\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td><td>\n<p>A null reference (<strong>Nothing</strong> in Visual Basic). </p>\n</td></tr><tr><td>\n<p>\n<xref href=\"System.ArgumentException.Message\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td><td>\n<p>The error message string. </p>\n</td></tr><tr><td>\n<p>\n<xref href=\"System.ArgumentException.ParamName\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td><td>\n<p>The parameter name string. </p>\n</td></tr></tbody></table>\n"
  syntax:
    content: public ArgumentNullException(string paramName, string message)
    content.vb: Public Sub New(paramName As String, message As String)
    parameters:
    - id: paramName
      type: System.String
    - id: message
      type: System.String
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System.Exception
  parent: System
  isExternal: false
  name: Exception
  fullName: System.Exception
- uid: System.ArgumentException
  parent: System
  isExternal: false
  name: ArgumentException
  fullName: System.ArgumentException
- uid: System.ArgumentException.Message
  parent: System.ArgumentException
  isExternal: false
  name: Message
  fullName: System.ArgumentException.Message
- uid: System.ArgumentException.ParamName
  parent: System.ArgumentException
  isExternal: false
  name: ParamName
  fullName: System.ArgumentException.ParamName
- uid: System.Exception.Data
  parent: System.Exception
  isExternal: false
  name: Data
  fullName: System.Exception.Data
- uid: System.Exception.HelpLink
  parent: System.Exception
  isExternal: false
  name: HelpLink
  fullName: System.Exception.HelpLink
- uid: System.Exception.HResult
  parent: System.Exception
  isExternal: false
  name: HResult
  fullName: System.Exception.HResult
- uid: System.Exception.InnerException
  parent: System.Exception
  isExternal: false
  name: InnerException
  fullName: System.Exception.InnerException
- uid: System.Exception.Source
  parent: System.Exception
  isExternal: false
  name: Source
  fullName: System.Exception.Source
- uid: System.Exception.StackTrace
  parent: System.Exception
  isExternal: false
  name: StackTrace
  fullName: System.Exception.StackTrace
- uid: System.Exception.GetBaseException
  parent: System.Exception
  isExternal: false
  name: GetBaseException()
  fullName: System.Exception.GetBaseException()
  spec.csharp:
  - uid: System.Exception.GetBaseException
    name: GetBaseException
    fullName: System.Exception.GetBaseException
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Exception.GetBaseException
    name: GetBaseException
    fullName: System.Exception.GetBaseException
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Exception.ToString
  parent: System.Exception
  isExternal: false
  name: ToString()
  fullName: System.Exception.ToString()
  spec.csharp:
  - uid: System.Exception.ToString
    name: ToString
    fullName: System.Exception.ToString
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Exception.ToString
    name: ToString
    fullName: System.Exception.ToString
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.String
  parent: System
  isExternal: false
  name: String
  fullName: System.String
