items:
- uid: System.Xml.XmlDictionaryReaderQuotas
  commentId: T:System.Xml.XmlDictionaryReaderQuotas
  id: XmlDictionaryReaderQuotas
  parent: System.Xml
  children:
  - System.Xml.XmlDictionaryReaderQuotas.#ctor
  - System.Xml.XmlDictionaryReaderQuotas.CopyTo(System.Xml.XmlDictionaryReaderQuotas)
  - System.Xml.XmlDictionaryReaderQuotas.Max
  - System.Xml.XmlDictionaryReaderQuotas.MaxArrayLength
  - System.Xml.XmlDictionaryReaderQuotas.MaxBytesPerRead
  - System.Xml.XmlDictionaryReaderQuotas.MaxDepth
  - System.Xml.XmlDictionaryReaderQuotas.MaxNameTableCharCount
  - System.Xml.XmlDictionaryReaderQuotas.MaxStringContentLength
  - System.Xml.XmlDictionaryReaderQuotas.ModifiedQuotas
  langs:
  - csharp
  - vb
  name: XmlDictionaryReaderQuotas
  fullName: System.Xml.XmlDictionaryReaderQuotas
  type: Class
  source:
    remote:
      path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: XmlDictionaryReaderQuotas
    path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
    startLine: 245
  assemblies:
  - System.Runtime.Serialization.Xml
  namespace: System.Xml
  summary: "\n<p>Contains configurable quota values for XmlDictionaryReaders.</p>\n"
  remarks: "\n<p>\n<xref href=\"System.Xml.XmlDictionary\" data-throw-if-not-resolved=\"false\"></xref> instances are used by WCF when serializing and deserializing SOAP messages. The <xref href=\"System.Xml.XmlDictionary\" data-throw-if-not-resolved=\"false\"></xref> contains string/value pairs which are used to decrease the size of the SOAP message. When serializing a message the value is written in place of the string. When deserializing the message the value is read but the string is written to the message object.  <xref href=\"System.Xml.XmlDictionaryReaderQuotas\" data-throw-if-not-resolved=\"false\"></xref> is a class that contains a number of quotas used by the <xref href=\"System.Xml.XmlDictionaryReader\" data-throw-if-not-resolved=\"false\"></xref> class. The most important security feature of the dictionary readers is quotas. A quotas instance must be given to the dictionary reader factory methods. The default constructor creates \"secure\" defaults (same as encoded defaults), and the class has a static <strong>Max</strong> property for creating a reader without quotas.</p>\n"
  example:
  - 
  syntax:
    content: public sealed class XmlDictionaryReaderQuotas
    content.vb: Public NotInheritable Class XmlDictionaryReaderQuotas
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: System.Xml.XmlDictionaryReaderQuotas.#ctor
  commentId: M:System.Xml.XmlDictionaryReaderQuotas.#ctor
  id: '#ctor'
  parent: System.Xml.XmlDictionaryReaderQuotas
  langs:
  - csharp
  - vb
  name: XmlDictionaryReaderQuotas()
  fullName: System.Xml.XmlDictionaryReaderQuotas.XmlDictionaryReaderQuotas()
  type: Constructor
  source:
    remote:
      path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
    startLine: 247
  assemblies:
  - System.Runtime.Serialization.Xml
  namespace: System.Xml
  summary: "\n<p>Creates a new instance of this class. </p>\n"
  remarks: "\n<p>This constructor initializes the properties to \"secure\" defaults:</p>\n<p>MaxDepth = 32;</p>\n<p>MaxStringContentLength = 8192;</p>\n<p>MaxArrayLength = 16384;</p>\n<p>MaxBytesPerRead = 4096;</p>\n<p>MaxNameTableCharCount = 16384.</p>\n"
  example:
  - 
  syntax:
    content: public XmlDictionaryReaderQuotas()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Xml.XmlDictionaryReaderQuotas.Max
  commentId: P:System.Xml.XmlDictionaryReaderQuotas.Max
  id: Max
  parent: System.Xml.XmlDictionaryReaderQuotas
  langs:
  - csharp
  - vb
  name: Max
  fullName: System.Xml.XmlDictionaryReaderQuotas.Max
  type: Property
  source:
    remote:
      path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Max
    path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
    startLine: 248
  assemblies:
  - System.Runtime.Serialization.Xml
  namespace: System.Xml
  summary: "\n<p>Gets an instance of this class with all properties set to maximum values.</p>\n"
  remarks: "\n<p>The instance returned is read-only. Use the property to create a reader without quotas.</p>\n"
  example:
  - 
  syntax:
    content: public static XmlDictionaryReaderQuotas Max { get; }
    content.vb: Public Shared ReadOnly Property Max As XmlDictionaryReaderQuotas
    parameters: []
    return:
      type: System.Xml.XmlDictionaryReaderQuotas
      description: "\n<p>An instance of <xref href=\"System.Xml.XmlDictionaryReaderQuotas\" data-throw-if-not-resolved=\"false\"></xref> with properties set to <xref href=\"System.Int32.MaxValue\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: System.Xml.XmlDictionaryReaderQuotas.MaxArrayLength
  commentId: P:System.Xml.XmlDictionaryReaderQuotas.MaxArrayLength
  id: MaxArrayLength
  parent: System.Xml.XmlDictionaryReaderQuotas
  langs:
  - csharp
  - vb
  name: MaxArrayLength
  fullName: System.Xml.XmlDictionaryReaderQuotas.MaxArrayLength
  type: Property
  source:
    remote:
      path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: MaxArrayLength
    path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
    startLine: 249
  assemblies:
  - System.Runtime.Serialization.Xml
  namespace: System.Xml
  summary: "\n<p>Gets and sets the maximum allowed array length.</p>\n"
  remarks: "\n<p>This quota governs the maximum array length that is created and returned by various API calls. It affects special array APIs as well as byte arrays returned from ReadContentAsBase64(). This limit does not affect the ReadContentAsBase64() override that takes an array to be populated with data.</p>\n<p>Note that this property value applies to every step of message processing. This includes some steps that can expand the size of a message or message part. In particular, encryption can dramatically increase the size of a message. When setting this value, you must take this into account. </p>\n<p>Instances created with the public constructor have properties that can be <strong>set</strong>.</p>\n"
  example:
  - 
  syntax:
    content: public int MaxArrayLength { get; set; }
    content.vb: Public Property MaxArrayLength As Integer
    parameters: []
    return:
      type: System.Int32
      description: "\n<p>The maximum allowed array length. The default is 16384.</p>\n"
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "\n<p>Trying to <strong>set</strong> the value, but quota values are read-only for this instance.</p>\n"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<p>Trying to <strong>set</strong> the value to less than zero.</p>\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Xml.XmlDictionaryReaderQuotas.MaxBytesPerRead
  commentId: P:System.Xml.XmlDictionaryReaderQuotas.MaxBytesPerRead
  id: MaxBytesPerRead
  parent: System.Xml.XmlDictionaryReaderQuotas
  langs:
  - csharp
  - vb
  name: MaxBytesPerRead
  fullName: System.Xml.XmlDictionaryReaderQuotas.MaxBytesPerRead
  type: Property
  source:
    remote:
      path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: MaxBytesPerRead
    path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
    startLine: 251
  assemblies:
  - System.Runtime.Serialization.Xml
  namespace: System.Xml
  summary: "\n<p>Gets and sets the maximum allowed bytes returned for each read.</p>\n"
  remarks: "\n<p>This quota limits the number of bytes that can be consumed by the reader during a single call to <strong>Read</strong>().</p>\n<p>This quota is an approximation, because transformations in the encoding layer happen before this quota is applied. This quota is closely tied to the number of bytes received on the wire at the transport level, but its purpose is to control the quantity of data we receive for each read. In practice, it is used to limit the size of start tags. Because the entire start tag must be buffered to be processed (attributes uniqueness must be verified), the size must be limited to mitigate DOS attacks.</p>\n<p>Instances created with the public constructor have properties that can be <strong>set</strong>.</p>\n"
  example:
  - 
  syntax:
    content: public int MaxBytesPerRead { get; set; }
    content.vb: Public Property MaxBytesPerRead As Integer
    parameters: []
    return:
      type: System.Int32
      description: "\n<p>The maximum allowed bytes returned for each read. The default is 4096.</p>\n"
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "\n<p>Trying to <strong>set</strong> the value, but quota values are read-only for this instance.</p>\n"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<p>Trying to <strong>set</strong> the value to less than zero.</p>\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Xml.XmlDictionaryReaderQuotas.MaxDepth
  commentId: P:System.Xml.XmlDictionaryReaderQuotas.MaxDepth
  id: MaxDepth
  parent: System.Xml.XmlDictionaryReaderQuotas
  langs:
  - csharp
  - vb
  name: MaxDepth
  fullName: System.Xml.XmlDictionaryReaderQuotas.MaxDepth
  type: Property
  source:
    remote:
      path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: MaxDepth
    path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
    startLine: 253
  assemblies:
  - System.Runtime.Serialization.Xml
  namespace: System.Xml
  summary: "\n<p>Gets and sets the maximum nested node depth.</p>\n"
  remarks: "\n<p>This quota sets a limit on the nested node depth for the XML.</p>\n"
  example:
  - 
  syntax:
    content: public int MaxDepth { get; set; }
    content.vb: Public Property MaxDepth As Integer
    parameters: []
    return:
      type: System.Int32
      description: "\n<p>The maximum nested node depth. The default is 32;</p>\n"
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "\n<p>Trying to <strong>set</strong> the value and quota values are read-only for this instance.</p>\n"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<p>Trying to <strong>set</strong> the value is less than zero.</p>\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Xml.XmlDictionaryReaderQuotas.MaxNameTableCharCount
  commentId: P:System.Xml.XmlDictionaryReaderQuotas.MaxNameTableCharCount
  id: MaxNameTableCharCount
  parent: System.Xml.XmlDictionaryReaderQuotas
  langs:
  - csharp
  - vb
  name: MaxNameTableCharCount
  fullName: System.Xml.XmlDictionaryReaderQuotas.MaxNameTableCharCount
  type: Property
  source:
    remote:
      path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: MaxNameTableCharCount
    path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
    startLine: 255
  assemblies:
  - System.Runtime.Serialization.Xml
  namespace: System.Xml
  summary: "\n<p>Gets and sets the maximum characters allowed in a table name.</p>\n"
  remarks: "\n<p>This quota limits the total number of characters in strings that are atomized in the NameTable for the reader. When strings are atomized they are inserted into a NameTable and never removed. This can cause the buildup of large amounts of character data in a NameTable. This quota places a limit on how much data can be buffered in the reader's NameTable.</p>\n"
  example:
  - 
  syntax:
    content: public int MaxNameTableCharCount { get; set; }
    content.vb: Public Property MaxNameTableCharCount As Integer
    parameters: []
    return:
      type: System.Int32
      description: "\n<p>The maximum characters allowed in a table name. The default is 16384.</p>\n"
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "\n<p>Trying to <strong>set</strong> the value, but quota values are read-only for this instance.</p>\n"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<p>Trying to <strong>set</strong> the value to less than zero.</p>\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Xml.XmlDictionaryReaderQuotas.MaxStringContentLength
  commentId: P:System.Xml.XmlDictionaryReaderQuotas.MaxStringContentLength
  id: MaxStringContentLength
  parent: System.Xml.XmlDictionaryReaderQuotas
  langs:
  - csharp
  - vb
  name: MaxStringContentLength
  fullName: System.Xml.XmlDictionaryReaderQuotas.MaxStringContentLength
  type: Property
  source:
    remote:
      path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: MaxStringContentLength
    path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
    startLine: 257
  assemblies:
  - System.Runtime.Serialization.Xml
  namespace: System.Xml
  summary: "\n<p>Gets and sets the maximum string length returned by the reader.</p>\n"
  remarks: "\n<p>This quota limits the length of strings that are created and returned by various APIs. When calling <strong>Read</strong>() and checking the <strong>Value</strong> property, the reader chunks string values into manageable pieces (when in streaming mode). However, calling <strong>ReadContentAsString</strong>() concatenates all these pieces and return one large string. In the binary format, if the value of an element node is a sequence of dictionary string IDs then the values of those strings are concatenated. This can be an extremely large expansion and is mitigated by this limit. </p>\n"
  example:
  - 
  syntax:
    content: public int MaxStringContentLength { get; set; }
    content.vb: Public Property MaxStringContentLength As Integer
    parameters: []
    return:
      type: System.Int32
      description: "\n<p>The maximum string length returned by the reader. The default is 8192.</p>\n"
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "\n<p>Trying to <strong>set</strong> the value, but quota values are read-only for this instance.</p>\n"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<p>Trying to <strong>set</strong> the value to less than zero.</p>\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Xml.XmlDictionaryReaderQuotas.ModifiedQuotas
  commentId: P:System.Xml.XmlDictionaryReaderQuotas.ModifiedQuotas
  id: ModifiedQuotas
  parent: System.Xml.XmlDictionaryReaderQuotas
  langs:
  - csharp
  - vb
  name: ModifiedQuotas
  fullName: System.Xml.XmlDictionaryReaderQuotas.ModifiedQuotas
  type: Property
  source:
    remote:
      path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ModifiedQuotas
    path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
    startLine: 259
  assemblies:
  - System.Runtime.Serialization.Xml
  namespace: System.Xml
  summary: "\n<p>Gets the modified quotas for the <xref href=\"System.Xml.XmlDictionaryReaderQuotas\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: public XmlDictionaryReaderQuotaTypes ModifiedQuotas { get; }
    content.vb: Public ReadOnly Property ModifiedQuotas As XmlDictionaryReaderQuotaTypes
    parameters: []
    return:
      type: System.Xml.XmlDictionaryReaderQuotaTypes
      description: "\n<p>The modified quotas for the <xref href=\"System.Xml.XmlDictionaryReaderQuotas\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Xml.XmlDictionaryReaderQuotas.CopyTo(System.Xml.XmlDictionaryReaderQuotas)
  commentId: M:System.Xml.XmlDictionaryReaderQuotas.CopyTo(System.Xml.XmlDictionaryReaderQuotas)
  id: CopyTo(System.Xml.XmlDictionaryReaderQuotas)
  parent: System.Xml.XmlDictionaryReaderQuotas
  langs:
  - csharp
  - vb
  name: CopyTo(XmlDictionaryReaderQuotas)
  fullName: System.Xml.XmlDictionaryReaderQuotas.CopyTo(System.Xml.XmlDictionaryReaderQuotas)
  type: Method
  source:
    remote:
      path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CopyTo
    path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
    startLine: 260
  assemblies:
  - System.Runtime.Serialization.Xml
  namespace: System.Xml
  summary: "\n<p>Sets the properties on a passed-in quotas instance, based on the values in this instance.</p>\n"
  example:
  - 
  syntax:
    content: public void CopyTo(XmlDictionaryReaderQuotas quotas)
    content.vb: Public Sub CopyTo(quotas As XmlDictionaryReaderQuotas)
    parameters:
    - id: quotas
      type: System.Xml.XmlDictionaryReaderQuotas
      description: "\n<p>The <xref href=\"System.Xml.XmlDictionaryReaderQuotas\" data-throw-if-not-resolved=\"false\"></xref> instance to which to copy values.</p>\n"
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "\n<p>Trying to <strong>set</strong> the value, but quota values are read-only for the passed in instance.</p>\n"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>Passed in target<em> quotas</em> is <strong>null</strong>.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: System.Xml
  isExternal: false
  name: System.Xml
  fullName: System.Xml
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Xml.XmlDictionaryReaderQuotas
  parent: System.Xml
  isExternal: false
  name: XmlDictionaryReaderQuotas
  fullName: System.Xml.XmlDictionaryReaderQuotas
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  fullName: System.Int32
- uid: System.Xml.XmlDictionaryReaderQuotaTypes
  parent: System.Xml
  isExternal: false
  name: XmlDictionaryReaderQuotaTypes
  fullName: System.Xml.XmlDictionaryReaderQuotaTypes
- uid: System.InvalidOperationException
  parent: System
  isExternal: false
  name: InvalidOperationException
  fullName: System.InvalidOperationException
- uid: System.ArgumentException
  parent: System
  isExternal: false
  name: ArgumentException
  fullName: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: false
  name: ArgumentNullException
  fullName: System.ArgumentNullException
