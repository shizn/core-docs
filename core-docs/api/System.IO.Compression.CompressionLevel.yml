items:
- uid: System.IO.Compression.CompressionLevel
  commentId: T:System.IO.Compression.CompressionLevel
  id: CompressionLevel
  parent: System.IO.Compression
  children:
  - System.IO.Compression.CompressionLevel.Fastest
  - System.IO.Compression.CompressionLevel.NoCompression
  - System.IO.Compression.CompressionLevel.Optimal
  langs:
  - csharp
  - vb
  name: CompressionLevel
  fullName: System.IO.Compression.CompressionLevel
  type: Enum
  source:
    remote:
      path: src/System.IO.Compression/ref/System.IO.Compression.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CompressionLevel
    path: src/System.IO.Compression/ref/System.IO.Compression.cs
    startLine: 10
  assemblies:
  - System.IO.Compression
  namespace: System.IO.Compression
  summary: "\n<p>Specifies values that indicate whether a compression operation emphasizes speed or compression size.</p>\n"
  remarks: "\n<p>Compression operations usually involve a tradeoff between the speed and the effectiveness of compression. You use the <xref href=\"System.IO.Compression.CompressionLevel\" data-throw-if-not-resolved=\"false\"></xref> enumeration to indicate which factor is more important in your development scenario: the time to complete the compression operation or the size of the compressed file. These values do not correspond to specific compression levels; the object that implements compression determines how to handle them.</p>\n<p>The following methods of the <xref href=\"System.IO.Compression.DeflateStream\" data-throw-if-not-resolved=\"false\"></xref>, <xref href=\"System.IO.Compression.GZipStream\" data-throw-if-not-resolved=\"false\"></xref>, <xref href=\"System.IO.Compression.ZipArchive\" data-throw-if-not-resolved=\"false\"></xref>, <xref href=\"System.IO.Compression.ZipFile\" data-throw-if-not-resolved=\"false\"></xref>, and <xref href=\"System.IO.Compression.ZipFileExtensions\" data-throw-if-not-resolved=\"false\"></xref> classes include a parameter named <code>compressionLevel</code> that lets you specify the compression level:</p>\n<ul><li>\n<p>\n<xref href=\"System.IO.Compression.DeflateStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionLevel)\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</li><li>\n<p>\n<xref href=\"System.IO.Compression.DeflateStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionLevel,System.Boolean)\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</li><li>\n<p>\n<xref href=\"System.IO.Compression.GZipStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionLevel)\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</li><li>\n<p>\n<xref href=\"System.IO.Compression.GZipStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionLevel,System.Boolean)\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</li><li>\n<p>\n<xref href=\"System.IO.Compression.ZipArchive.CreateEntry(System.String,System.IO.Compression.CompressionLevel)\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</li><li>\n<p>\n<xref href=\"System.IO.Compression.ZipFile.CreateFromDirectory(System.String,System.String,System.IO.Compression.CompressionLevel,System.Boolean)\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</li><li>\n<p>\n<xref href=\"System.IO.Compression.ZipFileExtensions.CreateEntryFromFile(System.IO.Compression.ZipArchive,System.String,System.String,System.IO.Compression.CompressionLevel)\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</li></ul>\n"
  example:
  - "\n<p>The following example shows how to set the compression level when creating a zip archive by using the <xref href=\"System.IO.Compression.ZipFile\" data-throw-if-not-resolved=\"false\"></xref> class. </p>System.IO.Compression.ZipFile#3"
  syntax:
    content: public enum CompressionLevel
    content.vb: Public Enum CompressionLevel
  modifiers.csharp:
  - public
  - enum
  modifiers.vb:
  - Public
  - Enum
- uid: System.IO.Compression.CompressionLevel.Fastest
  commentId: F:System.IO.Compression.CompressionLevel.Fastest
  id: Fastest
  parent: System.IO.Compression.CompressionLevel
  langs:
  - csharp
  - vb
  name: Fastest
  fullName: System.IO.Compression.CompressionLevel.Fastest
  type: Field
  source:
    remote:
      path: src/System.IO.Compression/ref/System.IO.Compression.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Fastest
    path: src/System.IO.Compression/ref/System.IO.Compression.cs
    startLine: 12
  assemblies:
  - System.IO.Compression
  namespace: System.IO.Compression
  summary: "\n<p>The compression operation should complete as quickly as possible, even if the resulting file is not optimally compressed.</p>\n"
  syntax:
    content: Fastest = 1
    return:
      type: System.IO.Compression.CompressionLevel
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.IO.Compression.CompressionLevel.NoCompression
  commentId: F:System.IO.Compression.CompressionLevel.NoCompression
  id: NoCompression
  parent: System.IO.Compression.CompressionLevel
  langs:
  - csharp
  - vb
  name: NoCompression
  fullName: System.IO.Compression.CompressionLevel.NoCompression
  type: Field
  source:
    remote:
      path: src/System.IO.Compression/ref/System.IO.Compression.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: NoCompression
    path: src/System.IO.Compression/ref/System.IO.Compression.cs
    startLine: 13
  assemblies:
  - System.IO.Compression
  namespace: System.IO.Compression
  summary: "\n<p>No compression should be performed on the file.</p>\n"
  syntax:
    content: NoCompression = 2
    return:
      type: System.IO.Compression.CompressionLevel
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.IO.Compression.CompressionLevel.Optimal
  commentId: F:System.IO.Compression.CompressionLevel.Optimal
  id: Optimal
  parent: System.IO.Compression.CompressionLevel
  langs:
  - csharp
  - vb
  name: Optimal
  fullName: System.IO.Compression.CompressionLevel.Optimal
  type: Field
  source:
    remote:
      path: src/System.IO.Compression/ref/System.IO.Compression.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Optimal
    path: src/System.IO.Compression/ref/System.IO.Compression.cs
    startLine: 14
  assemblies:
  - System.IO.Compression
  namespace: System.IO.Compression
  summary: "\n<p>The compression operation should be optimally compressed, even if the operation takes a longer time to complete.</p>\n"
  syntax:
    content: Optimal = 0
    return:
      type: System.IO.Compression.CompressionLevel
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
references:
- uid: System.IO.Compression
  isExternal: false
  name: System.IO.Compression
  fullName: System.IO.Compression
- uid: System.IO.Compression.CompressionLevel
  parent: System.IO.Compression
  isExternal: false
  name: CompressionLevel
  fullName: System.IO.Compression.CompressionLevel
