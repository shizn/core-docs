items:
- uid: System.Threading.Barrier
  commentId: T:System.Threading.Barrier
  id: Barrier
  parent: System.Threading
  children:
  - System.Threading.Barrier.#ctor(System.Int32)
  - System.Threading.Barrier.#ctor(System.Int32,System.Action{System.Threading.Barrier})
  - System.Threading.Barrier.AddParticipant
  - System.Threading.Barrier.AddParticipants(System.Int32)
  - System.Threading.Barrier.CurrentPhaseNumber
  - System.Threading.Barrier.Dispose
  - System.Threading.Barrier.Dispose(System.Boolean)
  - System.Threading.Barrier.ParticipantCount
  - System.Threading.Barrier.ParticipantsRemaining
  - System.Threading.Barrier.RemoveParticipant
  - System.Threading.Barrier.RemoveParticipants(System.Int32)
  - System.Threading.Barrier.SignalAndWait
  - System.Threading.Barrier.SignalAndWait(System.Int32)
  - System.Threading.Barrier.SignalAndWait(System.Int32,System.Threading.CancellationToken)
  - System.Threading.Barrier.SignalAndWait(System.Threading.CancellationToken)
  - System.Threading.Barrier.SignalAndWait(System.TimeSpan)
  - System.Threading.Barrier.SignalAndWait(System.TimeSpan,System.Threading.CancellationToken)
  langs:
  - csharp
  - vb
  name: Barrier
  fullName: System.Threading.Barrier
  type: Class
  source:
    remote:
      path: src/System.Threading/src/System/Threading/Barrier.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Barrier
    path: src/System.Threading/src/System/Threading/Barrier.cs
    startLine: 77
  assemblies:
  - System.Threading
  namespace: System.Threading
  syntax:
    content: 'public class Barrier : IDisposable'
    content.vb: >-
      Public Class Barrier
          Inherits IDisposable
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: System.Threading.Barrier.#ctor(System.Int32)
  commentId: M:System.Threading.Barrier.#ctor(System.Int32)
  id: '#ctor(System.Int32)'
  parent: System.Threading.Barrier
  langs:
  - csharp
  - vb
  name: Barrier(Int32)
  fullName: System.Threading.Barrier.Barrier(System.Int32)
  type: Constructor
  source:
    remote:
      path: src/System.Threading/src/System/Threading/Barrier.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Threading/src/System/Threading/Barrier.cs
    startLine: 184
  assemblies:
  - System.Threading
  namespace: System.Threading
  syntax:
    content: public Barrier(int participantCount)
    content.vb: Public Sub New(participantCount As Integer)
    parameters:
    - id: participantCount
      type: System.Int32
      description: The number of participating threads.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Threading.Barrier.#ctor(System.Int32,System.Action{System.Threading.Barrier})
  commentId: M:System.Threading.Barrier.#ctor(System.Int32,System.Action{System.Threading.Barrier})
  id: '#ctor(System.Int32,System.Action{System.Threading.Barrier})'
  parent: System.Threading.Barrier
  langs:
  - csharp
  - vb
  name: Barrier(Int32, Action<Barrier>)
  fullName: System.Threading.Barrier.Barrier(System.Int32, System.Action<System.Threading.Barrier>)
  type: Constructor
  source:
    remote:
      path: src/System.Threading/ref/System.Threading.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Threading/ref/System.Threading.cs
    startLine: 42
  assemblies:
  - System.Threading
  namespace: System.Threading
  syntax:
    content: public Barrier(int participantCount, Action<Barrier> postPhaseAction)
    content.vb: Public Sub New(participantCount As Integer, postPhaseAction As Action(Of Barrier))
    parameters:
    - id: participantCount
      type: System.Int32
    - id: postPhaseAction
      type: System.Action{System.Threading.Barrier}
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Threading.Barrier.Barrier(System.Int32, System.Action(Of System.Threading.Barrier))
  name.vb: Barrier(Int32, Action(Of Barrier))
- uid: System.Threading.Barrier.CurrentPhaseNumber
  commentId: P:System.Threading.Barrier.CurrentPhaseNumber
  id: CurrentPhaseNumber
  parent: System.Threading.Barrier
  langs:
  - csharp
  - vb
  name: CurrentPhaseNumber
  fullName: System.Threading.Barrier.CurrentPhaseNumber
  type: Property
  source:
    remote:
      path: src/System.Threading/src/System/Threading/Barrier.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CurrentPhaseNumber
    path: src/System.Threading/src/System/Threading/Barrier.cs
    startLine: 168
  assemblies:
  - System.Threading
  namespace: System.Threading
  syntax:
    content: public long CurrentPhaseNumber { get; }
    content.vb: Public ReadOnly Property CurrentPhaseNumber As Long
    parameters: []
    return:
      type: System.Int64
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Threading.Barrier.ParticipantCount
  commentId: P:System.Threading.Barrier.ParticipantCount
  id: ParticipantCount
  parent: System.Threading.Barrier
  langs:
  - csharp
  - vb
  name: ParticipantCount
  fullName: System.Threading.Barrier.ParticipantCount
  type: Property
  source:
    remote:
      path: src/System.Threading/src/System/Threading/Barrier.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ParticipantCount
    path: src/System.Threading/src/System/Threading/Barrier.cs
    startLine: 160
  assemblies:
  - System.Threading
  namespace: System.Threading
  syntax:
    content: public int ParticipantCount { get; }
    content.vb: Public ReadOnly Property ParticipantCount As Integer
    parameters: []
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Threading.Barrier.ParticipantsRemaining
  commentId: P:System.Threading.Barrier.ParticipantsRemaining
  id: ParticipantsRemaining
  parent: System.Threading.Barrier
  langs:
  - csharp
  - vb
  name: ParticipantsRemaining
  fullName: System.Threading.Barrier.ParticipantsRemaining
  type: Property
  source:
    remote:
      path: src/System.Threading/src/System/Threading/Barrier.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ParticipantsRemaining
    path: src/System.Threading/src/System/Threading/Barrier.cs
    startLine: 146
  assemblies:
  - System.Threading
  namespace: System.Threading
  syntax:
    content: public int ParticipantsRemaining { get; }
    content.vb: Public ReadOnly Property ParticipantsRemaining As Integer
    parameters: []
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Threading.Barrier.AddParticipant
  commentId: M:System.Threading.Barrier.AddParticipant
  id: AddParticipant
  parent: System.Threading.Barrier
  langs:
  - csharp
  - vb
  name: AddParticipant()
  fullName: System.Threading.Barrier.AddParticipant()
  type: Method
  source:
    remote:
      path: src/System.Threading/src/System/Threading/Barrier.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: AddParticipant
    path: src/System.Threading/src/System/Threading/Barrier.cs
    startLine: 276
  assemblies:
  - System.Threading
  namespace: System.Threading
  syntax:
    content: public long AddParticipant()
    content.vb: Public Function AddParticipant As Long
    return:
      type: System.Int64
      description: >-
        The phase number of the barrier in which the new participants will first

        participate.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Threading.Barrier.AddParticipants(System.Int32)
  commentId: M:System.Threading.Barrier.AddParticipants(System.Int32)
  id: AddParticipants(System.Int32)
  parent: System.Threading.Barrier
  langs:
  - csharp
  - vb
  name: AddParticipants(Int32)
  fullName: System.Threading.Barrier.AddParticipants(System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Threading/src/System/Threading/Barrier.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: AddParticipants
    path: src/System.Threading/src/System/Threading/Barrier.cs
    startLine: 304
  assemblies:
  - System.Threading
  namespace: System.Threading
  syntax:
    content: public long AddParticipants(int participantCount)
    content.vb: Public Function AddParticipants(participantCount As Integer) As Long
    parameters:
    - id: participantCount
      type: System.Int32
      description: >-
        The number of additional participants to add to the

        barrier.
    return:
      type: System.Int64
      description: >-
        The phase number of the barrier in which the new participants will first

        participate.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Threading.Barrier.Dispose
  commentId: M:System.Threading.Barrier.Dispose
  id: Dispose
  parent: System.Threading.Barrier
  langs:
  - csharp
  - vb
  name: Dispose()
  fullName: System.Threading.Barrier.Dispose()
  type: Method
  source:
    remote:
      path: src/System.Threading/src/System/Threading/Barrier.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Dispose
    path: src/System.Threading/src/System/Threading/Barrier.cs
    startLine: 893
  assemblies:
  - System.Threading
  namespace: System.Threading
  syntax:
    content: public void Dispose()
    content.vb: Public Sub Dispose
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Threading.Barrier.Dispose(System.Boolean)
  commentId: M:System.Threading.Barrier.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Threading.Barrier
  langs:
  - csharp
  - vb
  name: Dispose(Boolean)
  fullName: System.Threading.Barrier.Dispose(System.Boolean)
  type: Method
  source:
    remote:
      path: src/System.Threading/src/System/Threading/Barrier.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Dispose
    path: src/System.Threading/src/System/Threading/Barrier.cs
    startLine: 914
  assemblies:
  - System.Threading
  namespace: System.Threading
  syntax:
    content: protected virtual void Dispose(bool disposing)
    content.vb: Protected Overridable Sub Dispose(disposing As Boolean)
    parameters:
    - id: disposing
      type: System.Boolean
      description: >-
        true to release both managed and unmanaged resources; false to release

        only unmanaged resources.
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: System.Threading.Barrier.RemoveParticipant
  commentId: M:System.Threading.Barrier.RemoveParticipant
  id: RemoveParticipant
  parent: System.Threading.Barrier
  langs:
  - csharp
  - vb
  name: RemoveParticipant()
  fullName: System.Threading.Barrier.RemoveParticipant()
  type: Method
  source:
    remote:
      path: src/System.Threading/src/System/Threading/Barrier.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: RemoveParticipant
    path: src/System.Threading/src/System/Threading/Barrier.cs
    startLine: 392
  assemblies:
  - System.Threading
  namespace: System.Threading
  syntax:
    content: public void RemoveParticipant()
    content.vb: Public Sub RemoveParticipant
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Threading.Barrier.RemoveParticipants(System.Int32)
  commentId: M:System.Threading.Barrier.RemoveParticipants(System.Int32)
  id: RemoveParticipants(System.Int32)
  parent: System.Threading.Barrier
  langs:
  - csharp
  - vb
  name: RemoveParticipants(Int32)
  fullName: System.Threading.Barrier.RemoveParticipants(System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Threading/src/System/Threading/Barrier.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: RemoveParticipants
    path: src/System.Threading/src/System/Threading/Barrier.cs
    startLine: 409
  assemblies:
  - System.Threading
  namespace: System.Threading
  syntax:
    content: public void RemoveParticipants(int participantCount)
    content.vb: Public Sub RemoveParticipants(participantCount As Integer)
    parameters:
    - id: participantCount
      type: System.Int32
      description: The number of additional participants to remove from the barrier.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Threading.Barrier.SignalAndWait
  commentId: M:System.Threading.Barrier.SignalAndWait
  id: SignalAndWait
  parent: System.Threading.Barrier
  langs:
  - csharp
  - vb
  name: SignalAndWait()
  fullName: System.Threading.Barrier.SignalAndWait()
  type: Method
  source:
    remote:
      path: src/System.Threading/src/System/Threading/Barrier.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: SignalAndWait
    path: src/System.Threading/src/System/Threading/Barrier.cs
    startLine: 476
  assemblies:
  - System.Threading
  namespace: System.Threading
  syntax:
    content: public void SignalAndWait()
    content.vb: Public Sub SignalAndWait
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Threading.Barrier.SignalAndWait(System.Int32)
  commentId: M:System.Threading.Barrier.SignalAndWait(System.Int32)
  id: SignalAndWait(System.Int32)
  parent: System.Threading.Barrier
  langs:
  - csharp
  - vb
  name: SignalAndWait(Int32)
  fullName: System.Threading.Barrier.SignalAndWait(System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Threading/src/System/Threading/Barrier.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: SignalAndWait
    path: src/System.Threading/src/System/Threading/Barrier.cs
    startLine: 579
  assemblies:
  - System.Threading
  namespace: System.Threading
  syntax:
    content: public bool SignalAndWait(int millisecondsTimeout)
    content.vb: Public Function SignalAndWait(millisecondsTimeout As Integer) As Boolean
    parameters:
    - id: millisecondsTimeout
      type: System.Int32
      description: The number of milliseconds to wait, or <see cref="!:Timeout.Infinite"></see>(-1) to wait indefinitely.
    return:
      type: System.Boolean
      description: true if all other participants reached the barrier; otherwise, false.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Threading.Barrier.SignalAndWait(System.Int32,System.Threading.CancellationToken)
  commentId: M:System.Threading.Barrier.SignalAndWait(System.Int32,System.Threading.CancellationToken)
  id: SignalAndWait(System.Int32,System.Threading.CancellationToken)
  parent: System.Threading.Barrier
  langs:
  - csharp
  - vb
  name: SignalAndWait(Int32, CancellationToken)
  fullName: System.Threading.Barrier.SignalAndWait(System.Int32, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/System.Threading/ref/System.Threading.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: SignalAndWait
    path: src/System.Threading/ref/System.Threading.cs
    startLine: 54
  assemblies:
  - System.Threading
  namespace: System.Threading
  syntax:
    content: public bool SignalAndWait(int millisecondsTimeout, CancellationToken cancellationToken)
    content.vb: Public Function SignalAndWait(millisecondsTimeout As Integer, cancellationToken As CancellationToken) As Boolean
    parameters:
    - id: millisecondsTimeout
      type: System.Int32
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Threading.Barrier.SignalAndWait(System.Threading.CancellationToken)
  commentId: M:System.Threading.Barrier.SignalAndWait(System.Threading.CancellationToken)
  id: SignalAndWait(System.Threading.CancellationToken)
  parent: System.Threading.Barrier
  langs:
  - csharp
  - vb
  name: SignalAndWait(CancellationToken)
  fullName: System.Threading.Barrier.SignalAndWait(System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/System.Threading/ref/System.Threading.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: SignalAndWait
    path: src/System.Threading/ref/System.Threading.cs
    startLine: 55
  assemblies:
  - System.Threading
  namespace: System.Threading
  syntax:
    content: public void SignalAndWait(CancellationToken cancellationToken)
    content.vb: Public Sub SignalAndWait(cancellationToken As CancellationToken)
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Threading.Barrier.SignalAndWait(System.TimeSpan)
  commentId: M:System.Threading.Barrier.SignalAndWait(System.TimeSpan)
  id: SignalAndWait(System.TimeSpan)
  parent: System.Threading.Barrier
  langs:
  - csharp
  - vb
  name: SignalAndWait(TimeSpan)
  fullName: System.Threading.Barrier.SignalAndWait(System.TimeSpan)
  type: Method
  source:
    remote:
      path: src/System.Threading/ref/System.Threading.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: SignalAndWait
    path: src/System.Threading/ref/System.Threading.cs
    startLine: 56
  assemblies:
  - System.Threading
  namespace: System.Threading
  syntax:
    content: public bool SignalAndWait(TimeSpan timeout)
    content.vb: Public Function SignalAndWait(timeout As TimeSpan) As Boolean
    parameters:
    - id: timeout
      type: System.TimeSpan
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Threading.Barrier.SignalAndWait(System.TimeSpan,System.Threading.CancellationToken)
  commentId: M:System.Threading.Barrier.SignalAndWait(System.TimeSpan,System.Threading.CancellationToken)
  id: SignalAndWait(System.TimeSpan,System.Threading.CancellationToken)
  parent: System.Threading.Barrier
  langs:
  - csharp
  - vb
  name: SignalAndWait(TimeSpan, CancellationToken)
  fullName: System.Threading.Barrier.SignalAndWait(System.TimeSpan, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/System.Threading/ref/System.Threading.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: SignalAndWait
    path: src/System.Threading/ref/System.Threading.cs
    startLine: 57
  assemblies:
  - System.Threading
  namespace: System.Threading
  syntax:
    content: public bool SignalAndWait(TimeSpan timeout, CancellationToken cancellationToken)
    content.vb: Public Function SignalAndWait(timeout As TimeSpan, cancellationToken As CancellationToken) As Boolean
    parameters:
    - id: timeout
      type: System.TimeSpan
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: System.Threading
  isExternal: false
  name: System.Threading
  fullName: System.Threading
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  fullName: System.Int32
- uid: System.Action{System.Threading.Barrier}
  definition: System.Action`1
  name: Action<Barrier>
  fullName: System.Action<System.Threading.Barrier>
  fullname.vb: System.Action(Of System.Threading.Barrier)
  name.vb: Action(Of Barrier)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    fullName: System.Action
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Threading.Barrier
    name: Barrier
    fullName: System.Threading.Barrier
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Threading.Barrier
    name: Barrier
    fullName: System.Threading.Barrier
  - name: )
    fullName: )
- uid: System.Action`1
  isExternal: false
  name: Action<>
  fullName: System.Action<>
  fullname.vb: System.Action(Of )
  name.vb: Action(Of )
  spec.csharp:
  - uid: System.Action`1
    name: Action
    fullName: System.Action
  - name: <
    fullName: <
  - {}
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    fullName: System.Action
  - name: '(Of '
    fullName: '(Of '
  - {}
  - name: )
    fullName: )
- uid: System.Int64
  parent: System
  isExternal: false
  name: Int64
  fullName: System.Int64
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  fullName: System.Boolean
- uid: System.Threading.CancellationToken
  parent: System.Threading
  isExternal: false
  name: Threading.CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.TimeSpan
  parent: System
  isExternal: false
  name: TimeSpan
  fullName: System.TimeSpan
