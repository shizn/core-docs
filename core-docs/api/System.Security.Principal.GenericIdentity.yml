items:
- uid: System.Security.Principal.GenericIdentity
  commentId: T:System.Security.Principal.GenericIdentity
  id: GenericIdentity
  parent: System.Security.Principal
  children:
  - System.Security.Principal.GenericIdentity.#ctor(System.Security.Principal.GenericIdentity)
  - System.Security.Principal.GenericIdentity.#ctor(System.String)
  - System.Security.Principal.GenericIdentity.#ctor(System.String,System.String)
  - System.Security.Principal.GenericIdentity.AuthenticationType
  - System.Security.Principal.GenericIdentity.Claims
  - System.Security.Principal.GenericIdentity.Clone
  - System.Security.Principal.GenericIdentity.IsAuthenticated
  - System.Security.Principal.GenericIdentity.Name
  langs:
  - csharp
  - vb
  name: GenericIdentity
  fullName: System.Security.Principal.GenericIdentity
  type: Class
  source:
    remote:
      path: src/System.Security.Claims/src/System/Security/Claims/GenericIdentity.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GenericIdentity
    path: src/System.Security.Claims/src/System/Security/Claims/GenericIdentity.cs
    startLine: 11
  assemblies:
  - System.Security.Claims
  namespace: System.Security.Principal
  summary: "\n<p>Represents a generic user.</p>\n"
  remarks: "\n<p>An identity object represents the user on whose behalf the code is running.</p>\n"
  example:
  - "\n<p>The following example shows the use of members of the <xref href=\"System.Security.Principal.GenericIdentity\" data-throw-if-not-resolved=\"false\"></xref> class.</p>System.Security.Principal.GenericIdentity2#1"
  syntax:
    content: 'public class GenericIdentity : ClaimsIdentity'
    content.vb: >-
      Public Class GenericIdentity
          Inherits ClaimsIdentity
  inheritance:
  - System.Object
  - System.Security.Claims.ClaimsIdentity
  inheritedMembers:
  - System.Security.Claims.ClaimsIdentity.DefaultIssuer
  - System.Security.Claims.ClaimsIdentity.DefaultNameClaimType
  - System.Security.Claims.ClaimsIdentity.DefaultRoleClaimType
  - System.Security.Claims.ClaimsIdentity.Actor
  - System.Security.Claims.ClaimsIdentity.BootstrapContext
  - System.Security.Claims.ClaimsIdentity.CustomSerializationData
  - System.Security.Claims.ClaimsIdentity.Label
  - System.Security.Claims.ClaimsIdentity.NameClaimType
  - System.Security.Claims.ClaimsIdentity.RoleClaimType
  - System.Security.Claims.ClaimsIdentity.AddClaim(System.Security.Claims.Claim)
  - System.Security.Claims.ClaimsIdentity.AddClaims(System.Collections.Generic.IEnumerable{System.Security.Claims.Claim})
  - System.Security.Claims.ClaimsIdentity.CreateClaim(System.IO.BinaryReader)
  - System.Security.Claims.ClaimsIdentity.FindAll(System.Predicate{System.Security.Claims.Claim})
  - System.Security.Claims.ClaimsIdentity.FindAll(System.String)
  - System.Security.Claims.ClaimsIdentity.FindFirst(System.Predicate{System.Security.Claims.Claim})
  - System.Security.Claims.ClaimsIdentity.FindFirst(System.String)
  - System.Security.Claims.ClaimsIdentity.HasClaim(System.Predicate{System.Security.Claims.Claim})
  - System.Security.Claims.ClaimsIdentity.HasClaim(System.String,System.String)
  - System.Security.Claims.ClaimsIdentity.RemoveClaim(System.Security.Claims.Claim)
  - System.Security.Claims.ClaimsIdentity.TryRemoveClaim(System.Security.Claims.Claim)
  - System.Security.Claims.ClaimsIdentity.WriteTo(System.IO.BinaryWriter)
  - System.Security.Claims.ClaimsIdentity.WriteTo(System.IO.BinaryWriter,System.Byte[])
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: System.Security.Principal.GenericIdentity.#ctor(System.Security.Principal.GenericIdentity)
  commentId: M:System.Security.Principal.GenericIdentity.#ctor(System.Security.Principal.GenericIdentity)
  id: '#ctor(System.Security.Principal.GenericIdentity)'
  parent: System.Security.Principal.GenericIdentity
  langs:
  - csharp
  - vb
  name: GenericIdentity(GenericIdentity)
  fullName: System.Security.Principal.GenericIdentity.GenericIdentity(System.Security.Principal.GenericIdentity)
  type: Constructor
  source:
    remote:
      path: src/System.Security.Claims/src/System/Security/Claims/GenericIdentity.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Security.Claims/src/System/Security/Claims/GenericIdentity.cs
    startLine: 49
  assemblies:
  - System.Security.Claims
  namespace: System.Security.Principal
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Security.Principal.GenericIdentity\" data-throw-if-not-resolved=\"false\"></xref> class by using the specified <xref href=\"System.Security.Principal.GenericIdentity\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  syntax:
    content: protected GenericIdentity(GenericIdentity identity)
    content.vb: Protected Sub New(identity As GenericIdentity)
    parameters:
    - id: identity
      type: System.Security.Principal.GenericIdentity
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: System.Security.Principal.GenericIdentity.#ctor(System.String)
  commentId: M:System.Security.Principal.GenericIdentity.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Security.Principal.GenericIdentity
  langs:
  - csharp
  - vb
  name: GenericIdentity(String)
  fullName: System.Security.Principal.GenericIdentity.GenericIdentity(System.String)
  type: Constructor
  source:
    remote:
      path: src/System.Security.Claims/src/System/Security/Claims/GenericIdentity.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Security.Claims/src/System/Security/Claims/GenericIdentity.cs
    startLine: 18
  assemblies:
  - System.Security.Claims
  namespace: System.Security.Principal
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Security.Principal.GenericIdentity\" data-throw-if-not-resolved=\"false\"></xref> class representing the user with the specified name.</p>\n"
  example:
  - "\n<p>The following code shows the use of the <xref href=\"System.Security.Principal.GenericIdentity.#ctor(System.String)\" data-throw-if-not-resolved=\"false\"></xref> constructor. This code example is part of a larger example provided for the <xref href=\"System.Security.Principal.GenericIdentity\" data-throw-if-not-resolved=\"false\"></xref> class.</p>System.Security.Principal.GenericIdentity2#2"
  syntax:
    content: public GenericIdentity(string name)
    content.vb: Public Sub New(name As String)
    parameters:
    - id: name
      type: System.String
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>The <em>name</em> parameter is <strong>null</strong>. </p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Security.Principal.GenericIdentity.#ctor(System.String,System.String)
  commentId: M:System.Security.Principal.GenericIdentity.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: System.Security.Principal.GenericIdentity
  langs:
  - csharp
  - vb
  name: GenericIdentity(String, String)
  fullName: System.Security.Principal.GenericIdentity.GenericIdentity(System.String, System.String)
  type: Constructor
  source:
    remote:
      path: src/System.Security.Claims/src/System/Security/Claims/GenericIdentity.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Security.Claims/src/System/Security/Claims/GenericIdentity.cs
    startLine: 30
  assemblies:
  - System.Security.Claims
  namespace: System.Security.Principal
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Security.Principal.GenericIdentity\" data-throw-if-not-resolved=\"false\"></xref> class representing the user with the specified name and authentication type.</p>\n"
  example:
  - "\n<p>The following code shows the use of the <xref href=\"System.Security.Principal.GenericIdentity.#ctor(System.String)\" data-throw-if-not-resolved=\"false\"></xref> constructor. This code example is part of a larger example provided for the <xref href=\"System.Security.Principal.GenericIdentity\" data-throw-if-not-resolved=\"false\"></xref> class.</p>System.Security.Principal.GenericIdentity2#3"
  syntax:
    content: public GenericIdentity(string name, string type)
    content.vb: Public Sub New(name As String, type As String)
    parameters:
    - id: name
      type: System.String
    - id: type
      type: System.String
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>The <em>name</em> parameter is <strong>null</strong>.</p>\n<p>-or- </p>\n<p>The <em>type</em> parameter is <strong>null</strong>. </p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Security.Principal.GenericIdentity.AuthenticationType
  commentId: P:System.Security.Principal.GenericIdentity.AuthenticationType
  id: AuthenticationType
  parent: System.Security.Principal.GenericIdentity
  langs:
  - csharp
  - vb
  name: AuthenticationType
  fullName: System.Security.Principal.GenericIdentity.AuthenticationType
  type: Property
  source:
    remote:
      path: src/System.Security.Claims/src/System/Security/Claims/GenericIdentity.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: AuthenticationType
    path: src/System.Security.Claims/src/System/Security/Claims/GenericIdentity.cs
    startLine: 81
  assemblies:
  - System.Security.Claims
  namespace: System.Security.Principal
  summary: "\n<p>Gets the type of authentication used to identify the user.</p>\n"
  example:
  - "\n<p>The following code shows the use of the <xref href=\"System.Security.Principal.GenericIdentity.AuthenticationType\" data-throw-if-not-resolved=\"false\"></xref> property. This code example is part of a larger example provided for the <xref href=\"System.Security.Principal.GenericIdentity\" data-throw-if-not-resolved=\"false\"></xref> class.</p>System.Security.Principal.GenericIdentity2#5"
  syntax:
    content: public override string AuthenticationType { get; }
    content.vb: Public Overrides ReadOnly Property AuthenticationType As String
    parameters: []
    return:
      type: System.String
  overridden: System.Security.Claims.ClaimsIdentity.AuthenticationType
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: System.Security.Principal.GenericIdentity.Claims
  commentId: P:System.Security.Principal.GenericIdentity.Claims
  id: Claims
  parent: System.Security.Principal.GenericIdentity
  langs:
  - csharp
  - vb
  name: Claims
  fullName: System.Security.Principal.GenericIdentity.Claims
  type: Property
  source:
    remote:
      path: src/System.Security.Claims/src/System/Security/Claims/GenericIdentity.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Claims
    path: src/System.Security.Claims/src/System/Security/Claims/GenericIdentity.cs
    startLine: 64
  assemblies:
  - System.Security.Claims
  namespace: System.Security.Principal
  summary: "\n<p>Gets all claims for the user represented by this generic identity.</p>\n"
  syntax:
    content: public override IEnumerable<Claim> Claims { get; }
    content.vb: Public Overrides ReadOnly Property Claims As IEnumerable(Of Claim)
    parameters: []
    return:
      type: IEnumerable{System.Security.Claims.Claim}
  overridden: System.Security.Claims.ClaimsIdentity.Claims
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: System.Security.Principal.GenericIdentity.IsAuthenticated
  commentId: P:System.Security.Principal.GenericIdentity.IsAuthenticated
  id: IsAuthenticated
  parent: System.Security.Principal.GenericIdentity
  langs:
  - csharp
  - vb
  name: IsAuthenticated
  fullName: System.Security.Principal.GenericIdentity.IsAuthenticated
  type: Property
  source:
    remote:
      path: src/System.Security.Claims/src/System/Security/Claims/GenericIdentity.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IsAuthenticated
    path: src/System.Security.Claims/src/System/Security/Claims/GenericIdentity.cs
    startLine: 89
  assemblies:
  - System.Security.Claims
  namespace: System.Security.Principal
  summary: "\n<p>Gets a value indicating whether the user has been authenticated.</p>\n"
  syntax:
    content: public override bool IsAuthenticated { get; }
    content.vb: Public Overrides ReadOnly Property IsAuthenticated As Boolean
    parameters: []
    return:
      type: System.Boolean
  overridden: System.Security.Claims.ClaimsIdentity.IsAuthenticated
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: System.Security.Principal.GenericIdentity.Name
  commentId: P:System.Security.Principal.GenericIdentity.Name
  id: Name
  parent: System.Security.Principal.GenericIdentity
  langs:
  - csharp
  - vb
  name: Name
  fullName: System.Security.Principal.GenericIdentity.Name
  type: Property
  source:
    remote:
      path: src/System.Security.Claims/src/System/Security/Claims/GenericIdentity.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Name
    path: src/System.Security.Claims/src/System/Security/Claims/GenericIdentity.cs
    startLine: 73
  assemblies:
  - System.Security.Claims
  namespace: System.Security.Principal
  summary: "\n<p>Gets the user's name.</p>\n"
  example:
  - "\n<p>The following code shows the use of the <xref href=\"System.Security.Principal.GenericIdentity.Name\" data-throw-if-not-resolved=\"false\"></xref> property. This code example is part of a larger example provided for the <xref href=\"System.Security.Principal.GenericIdentity\" data-throw-if-not-resolved=\"false\"></xref> class.</p>System.Security.Principal.GenericIdentity2#4"
  syntax:
    content: public override string Name { get; }
    content.vb: Public Overrides ReadOnly Property Name As String
    parameters: []
    return:
      type: System.String
  overridden: System.Security.Claims.ClaimsIdentity.Name
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: System.Security.Principal.GenericIdentity.Clone
  commentId: M:System.Security.Principal.GenericIdentity.Clone
  id: Clone
  parent: System.Security.Principal.GenericIdentity
  langs:
  - csharp
  - vb
  name: Clone()
  fullName: System.Security.Principal.GenericIdentity.Clone()
  type: Method
  source:
    remote:
      path: src/System.Security.Claims/src/System/Security/Claims/GenericIdentity.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Clone
    path: src/System.Security.Claims/src/System/Security/Claims/GenericIdentity.cs
    startLine: 59
  assemblies:
  - System.Security.Claims
  namespace: System.Security.Principal
  summary: "\n<p>Creates a new object that is a copy of the current instance.</p>\n"
  syntax:
    content: public override ClaimsIdentity Clone()
    content.vb: Public Overrides Function Clone As ClaimsIdentity
    return:
      type: System.Security.Claims.ClaimsIdentity
  overridden: System.Security.Claims.ClaimsIdentity.Clone
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: System.Security.Principal
  isExternal: false
  name: System.Security.Principal
  fullName: System.Security.Principal
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System.Security.Claims.ClaimsIdentity
  parent: System.Security.Claims
  isExternal: false
  name: ClaimsIdentity
  fullName: System.Security.Claims.ClaimsIdentity
- uid: System.Security.Claims.ClaimsIdentity.DefaultIssuer
  parent: System.Security.Claims.ClaimsIdentity
  isExternal: false
  name: DefaultIssuer
  fullName: System.Security.Claims.ClaimsIdentity.DefaultIssuer
- uid: System.Security.Claims.ClaimsIdentity.DefaultNameClaimType
  parent: System.Security.Claims.ClaimsIdentity
  isExternal: false
  name: DefaultNameClaimType
  fullName: System.Security.Claims.ClaimsIdentity.DefaultNameClaimType
- uid: System.Security.Claims.ClaimsIdentity.DefaultRoleClaimType
  parent: System.Security.Claims.ClaimsIdentity
  isExternal: false
  name: DefaultRoleClaimType
  fullName: System.Security.Claims.ClaimsIdentity.DefaultRoleClaimType
- uid: System.Security.Claims.ClaimsIdentity.Actor
  parent: System.Security.Claims.ClaimsIdentity
  isExternal: false
  name: Actor
  fullName: System.Security.Claims.ClaimsIdentity.Actor
- uid: System.Security.Claims.ClaimsIdentity.BootstrapContext
  parent: System.Security.Claims.ClaimsIdentity
  isExternal: false
  name: BootstrapContext
  fullName: System.Security.Claims.ClaimsIdentity.BootstrapContext
- uid: System.Security.Claims.ClaimsIdentity.CustomSerializationData
  parent: System.Security.Claims.ClaimsIdentity
  isExternal: false
  name: CustomSerializationData
  fullName: System.Security.Claims.ClaimsIdentity.CustomSerializationData
- uid: System.Security.Claims.ClaimsIdentity.Label
  parent: System.Security.Claims.ClaimsIdentity
  isExternal: false
  name: Label
  fullName: System.Security.Claims.ClaimsIdentity.Label
- uid: System.Security.Claims.ClaimsIdentity.NameClaimType
  parent: System.Security.Claims.ClaimsIdentity
  isExternal: false
  name: NameClaimType
  fullName: System.Security.Claims.ClaimsIdentity.NameClaimType
- uid: System.Security.Claims.ClaimsIdentity.RoleClaimType
  parent: System.Security.Claims.ClaimsIdentity
  isExternal: false
  name: RoleClaimType
  fullName: System.Security.Claims.ClaimsIdentity.RoleClaimType
- uid: System.Security.Claims.ClaimsIdentity.AddClaim(System.Security.Claims.Claim)
  parent: System.Security.Claims.ClaimsIdentity
  isExternal: false
  name: AddClaim(Claim)
  fullName: System.Security.Claims.ClaimsIdentity.AddClaim(System.Security.Claims.Claim)
  spec.csharp:
  - uid: System.Security.Claims.ClaimsIdentity.AddClaim(System.Security.Claims.Claim)
    name: AddClaim
    fullName: System.Security.Claims.ClaimsIdentity.AddClaim
  - name: (
    fullName: (
  - uid: System.Security.Claims.Claim
    name: Claim
    fullName: System.Security.Claims.Claim
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Security.Claims.ClaimsIdentity.AddClaim(System.Security.Claims.Claim)
    name: AddClaim
    fullName: System.Security.Claims.ClaimsIdentity.AddClaim
  - name: (
    fullName: (
  - uid: System.Security.Claims.Claim
    name: Claim
    fullName: System.Security.Claims.Claim
  - name: )
    fullName: )
- uid: System.Security.Claims.ClaimsIdentity.AddClaims(System.Collections.Generic.IEnumerable{System.Security.Claims.Claim})
  parent: System.Security.Claims.ClaimsIdentity
  isExternal: true
  name: AddClaims(Collections.Generic.IEnumerable<Claim>)
  fullName: System.Security.Claims.ClaimsIdentity.AddClaims(System.Collections.Generic.IEnumerable<System.Security.Claims.Claim>)
  fullname.vb: System.Security.Claims.ClaimsIdentity.AddClaims(System.Collections.Generic.IEnumerable(Of System.Security.Claims.Claim))
  name.vb: AddClaims(Collections.Generic.IEnumerable(Of Claim))
  spec.csharp:
  - uid: System.Security.Claims.ClaimsIdentity.AddClaims(System.Collections.Generic.IEnumerable{System.Security.Claims.Claim})
    name: AddClaims
    fullName: System.Security.Claims.ClaimsIdentity.AddClaims
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: Collections.Generic.IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Security.Claims.Claim
    name: Claim
    fullName: System.Security.Claims.Claim
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Security.Claims.ClaimsIdentity.AddClaims(System.Collections.Generic.IEnumerable{System.Security.Claims.Claim})
    name: AddClaims
    fullName: System.Security.Claims.ClaimsIdentity.AddClaims
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: Collections.Generic.IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Security.Claims.Claim
    name: Claim
    fullName: System.Security.Claims.Claim
  - name: )
    fullName: )
  - name: )
    fullName: )
- uid: System.Security.Claims.ClaimsIdentity.CreateClaim(System.IO.BinaryReader)
  parent: System.Security.Claims.ClaimsIdentity
  isExternal: true
  name: CreateClaim(IO.BinaryReader)
  fullName: System.Security.Claims.ClaimsIdentity.CreateClaim(System.IO.BinaryReader)
  spec.csharp:
  - uid: System.Security.Claims.ClaimsIdentity.CreateClaim(System.IO.BinaryReader)
    name: CreateClaim
    fullName: System.Security.Claims.ClaimsIdentity.CreateClaim
  - name: (
    fullName: (
  - uid: System.IO.BinaryReader
    name: IO.BinaryReader
    fullName: System.IO.BinaryReader
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Security.Claims.ClaimsIdentity.CreateClaim(System.IO.BinaryReader)
    name: CreateClaim
    fullName: System.Security.Claims.ClaimsIdentity.CreateClaim
  - name: (
    fullName: (
  - uid: System.IO.BinaryReader
    name: IO.BinaryReader
    fullName: System.IO.BinaryReader
    isExternal: true
  - name: )
    fullName: )
- uid: System.Security.Claims.ClaimsIdentity.FindAll(System.Predicate{System.Security.Claims.Claim})
  parent: System.Security.Claims.ClaimsIdentity
  isExternal: true
  name: FindAll(Predicate<Claim>)
  fullName: System.Security.Claims.ClaimsIdentity.FindAll(System.Predicate<System.Security.Claims.Claim>)
  fullname.vb: System.Security.Claims.ClaimsIdentity.FindAll(System.Predicate(Of System.Security.Claims.Claim))
  name.vb: FindAll(Predicate(Of Claim))
  spec.csharp:
  - uid: System.Security.Claims.ClaimsIdentity.FindAll(System.Predicate{System.Security.Claims.Claim})
    name: FindAll
    fullName: System.Security.Claims.ClaimsIdentity.FindAll
  - name: (
    fullName: (
  - uid: System.Predicate`1
    name: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Security.Claims.Claim
    name: Claim
    fullName: System.Security.Claims.Claim
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Security.Claims.ClaimsIdentity.FindAll(System.Predicate{System.Security.Claims.Claim})
    name: FindAll
    fullName: System.Security.Claims.ClaimsIdentity.FindAll
  - name: (
    fullName: (
  - uid: System.Predicate`1
    name: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Security.Claims.Claim
    name: Claim
    fullName: System.Security.Claims.Claim
  - name: )
    fullName: )
  - name: )
    fullName: )
- uid: System.Security.Claims.ClaimsIdentity.FindAll(System.String)
  parent: System.Security.Claims.ClaimsIdentity
  isExternal: true
  name: FindAll(String)
  fullName: System.Security.Claims.ClaimsIdentity.FindAll(System.String)
  spec.csharp:
  - uid: System.Security.Claims.ClaimsIdentity.FindAll(System.String)
    name: FindAll
    fullName: System.Security.Claims.ClaimsIdentity.FindAll
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Security.Claims.ClaimsIdentity.FindAll(System.String)
    name: FindAll
    fullName: System.Security.Claims.ClaimsIdentity.FindAll
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: System.Security.Claims.ClaimsIdentity.FindFirst(System.Predicate{System.Security.Claims.Claim})
  parent: System.Security.Claims.ClaimsIdentity
  isExternal: true
  name: FindFirst(Predicate<Claim>)
  fullName: System.Security.Claims.ClaimsIdentity.FindFirst(System.Predicate<System.Security.Claims.Claim>)
  fullname.vb: System.Security.Claims.ClaimsIdentity.FindFirst(System.Predicate(Of System.Security.Claims.Claim))
  name.vb: FindFirst(Predicate(Of Claim))
  spec.csharp:
  - uid: System.Security.Claims.ClaimsIdentity.FindFirst(System.Predicate{System.Security.Claims.Claim})
    name: FindFirst
    fullName: System.Security.Claims.ClaimsIdentity.FindFirst
  - name: (
    fullName: (
  - uid: System.Predicate`1
    name: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Security.Claims.Claim
    name: Claim
    fullName: System.Security.Claims.Claim
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Security.Claims.ClaimsIdentity.FindFirst(System.Predicate{System.Security.Claims.Claim})
    name: FindFirst
    fullName: System.Security.Claims.ClaimsIdentity.FindFirst
  - name: (
    fullName: (
  - uid: System.Predicate`1
    name: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Security.Claims.Claim
    name: Claim
    fullName: System.Security.Claims.Claim
  - name: )
    fullName: )
  - name: )
    fullName: )
- uid: System.Security.Claims.ClaimsIdentity.FindFirst(System.String)
  parent: System.Security.Claims.ClaimsIdentity
  isExternal: true
  name: FindFirst(String)
  fullName: System.Security.Claims.ClaimsIdentity.FindFirst(System.String)
  spec.csharp:
  - uid: System.Security.Claims.ClaimsIdentity.FindFirst(System.String)
    name: FindFirst
    fullName: System.Security.Claims.ClaimsIdentity.FindFirst
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Security.Claims.ClaimsIdentity.FindFirst(System.String)
    name: FindFirst
    fullName: System.Security.Claims.ClaimsIdentity.FindFirst
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: System.Security.Claims.ClaimsIdentity.HasClaim(System.Predicate{System.Security.Claims.Claim})
  parent: System.Security.Claims.ClaimsIdentity
  isExternal: true
  name: HasClaim(Predicate<Claim>)
  fullName: System.Security.Claims.ClaimsIdentity.HasClaim(System.Predicate<System.Security.Claims.Claim>)
  fullname.vb: System.Security.Claims.ClaimsIdentity.HasClaim(System.Predicate(Of System.Security.Claims.Claim))
  name.vb: HasClaim(Predicate(Of Claim))
  spec.csharp:
  - uid: System.Security.Claims.ClaimsIdentity.HasClaim(System.Predicate{System.Security.Claims.Claim})
    name: HasClaim
    fullName: System.Security.Claims.ClaimsIdentity.HasClaim
  - name: (
    fullName: (
  - uid: System.Predicate`1
    name: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Security.Claims.Claim
    name: Claim
    fullName: System.Security.Claims.Claim
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Security.Claims.ClaimsIdentity.HasClaim(System.Predicate{System.Security.Claims.Claim})
    name: HasClaim
    fullName: System.Security.Claims.ClaimsIdentity.HasClaim
  - name: (
    fullName: (
  - uid: System.Predicate`1
    name: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Security.Claims.Claim
    name: Claim
    fullName: System.Security.Claims.Claim
  - name: )
    fullName: )
  - name: )
    fullName: )
- uid: System.Security.Claims.ClaimsIdentity.HasClaim(System.String,System.String)
  parent: System.Security.Claims.ClaimsIdentity
  isExternal: true
  name: HasClaim(String, String)
  fullName: System.Security.Claims.ClaimsIdentity.HasClaim(System.String, System.String)
  spec.csharp:
  - uid: System.Security.Claims.ClaimsIdentity.HasClaim(System.String,System.String)
    name: HasClaim
    fullName: System.Security.Claims.ClaimsIdentity.HasClaim
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Security.Claims.ClaimsIdentity.HasClaim(System.String,System.String)
    name: HasClaim
    fullName: System.Security.Claims.ClaimsIdentity.HasClaim
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: System.Security.Claims.ClaimsIdentity.RemoveClaim(System.Security.Claims.Claim)
  parent: System.Security.Claims.ClaimsIdentity
  isExternal: false
  name: RemoveClaim(Claim)
  fullName: System.Security.Claims.ClaimsIdentity.RemoveClaim(System.Security.Claims.Claim)
  spec.csharp:
  - uid: System.Security.Claims.ClaimsIdentity.RemoveClaim(System.Security.Claims.Claim)
    name: RemoveClaim
    fullName: System.Security.Claims.ClaimsIdentity.RemoveClaim
  - name: (
    fullName: (
  - uid: System.Security.Claims.Claim
    name: Claim
    fullName: System.Security.Claims.Claim
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Security.Claims.ClaimsIdentity.RemoveClaim(System.Security.Claims.Claim)
    name: RemoveClaim
    fullName: System.Security.Claims.ClaimsIdentity.RemoveClaim
  - name: (
    fullName: (
  - uid: System.Security.Claims.Claim
    name: Claim
    fullName: System.Security.Claims.Claim
  - name: )
    fullName: )
- uid: System.Security.Claims.ClaimsIdentity.TryRemoveClaim(System.Security.Claims.Claim)
  parent: System.Security.Claims.ClaimsIdentity
  isExternal: false
  name: TryRemoveClaim(Claim)
  fullName: System.Security.Claims.ClaimsIdentity.TryRemoveClaim(System.Security.Claims.Claim)
  spec.csharp:
  - uid: System.Security.Claims.ClaimsIdentity.TryRemoveClaim(System.Security.Claims.Claim)
    name: TryRemoveClaim
    fullName: System.Security.Claims.ClaimsIdentity.TryRemoveClaim
  - name: (
    fullName: (
  - uid: System.Security.Claims.Claim
    name: Claim
    fullName: System.Security.Claims.Claim
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Security.Claims.ClaimsIdentity.TryRemoveClaim(System.Security.Claims.Claim)
    name: TryRemoveClaim
    fullName: System.Security.Claims.ClaimsIdentity.TryRemoveClaim
  - name: (
    fullName: (
  - uid: System.Security.Claims.Claim
    name: Claim
    fullName: System.Security.Claims.Claim
  - name: )
    fullName: )
- uid: System.Security.Claims.ClaimsIdentity.WriteTo(System.IO.BinaryWriter)
  parent: System.Security.Claims.ClaimsIdentity
  isExternal: true
  name: WriteTo(IO.BinaryWriter)
  fullName: System.Security.Claims.ClaimsIdentity.WriteTo(System.IO.BinaryWriter)
  spec.csharp:
  - uid: System.Security.Claims.ClaimsIdentity.WriteTo(System.IO.BinaryWriter)
    name: WriteTo
    fullName: System.Security.Claims.ClaimsIdentity.WriteTo
  - name: (
    fullName: (
  - uid: System.IO.BinaryWriter
    name: IO.BinaryWriter
    fullName: System.IO.BinaryWriter
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Security.Claims.ClaimsIdentity.WriteTo(System.IO.BinaryWriter)
    name: WriteTo
    fullName: System.Security.Claims.ClaimsIdentity.WriteTo
  - name: (
    fullName: (
  - uid: System.IO.BinaryWriter
    name: IO.BinaryWriter
    fullName: System.IO.BinaryWriter
    isExternal: true
  - name: )
    fullName: )
- uid: System.Security.Claims.ClaimsIdentity.WriteTo(System.IO.BinaryWriter,System.Byte[])
  parent: System.Security.Claims.ClaimsIdentity
  isExternal: true
  name: WriteTo(IO.BinaryWriter, Byte[])
  fullName: System.Security.Claims.ClaimsIdentity.WriteTo(System.IO.BinaryWriter, System.Byte[])
  fullname.vb: System.Security.Claims.ClaimsIdentity.WriteTo(System.IO.BinaryWriter, System.Byte())
  name.vb: WriteTo(IO.BinaryWriter, Byte())
  spec.csharp:
  - uid: System.Security.Claims.ClaimsIdentity.WriteTo(System.IO.BinaryWriter,System.Byte[])
    name: WriteTo
    fullName: System.Security.Claims.ClaimsIdentity.WriteTo
  - name: (
    fullName: (
  - uid: System.IO.BinaryWriter
    name: IO.BinaryWriter
    fullName: System.IO.BinaryWriter
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    fullName: '[]'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Security.Claims.ClaimsIdentity.WriteTo(System.IO.BinaryWriter,System.Byte[])
    name: WriteTo
    fullName: System.Security.Claims.ClaimsIdentity.WriteTo
  - name: (
    fullName: (
  - uid: System.IO.BinaryWriter
    name: IO.BinaryWriter
    fullName: System.IO.BinaryWriter
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    fullName: ()
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Security.Claims
  isExternal: false
  name: System.Security.Claims
  fullName: System.Security.Claims
- uid: System.Security.Principal.GenericIdentity
  parent: System.Security.Principal
  isExternal: false
  name: GenericIdentity
  fullName: System.Security.Principal.GenericIdentity
- uid: System.String
  parent: System
  isExternal: false
  name: String
  fullName: System.String
- uid: System.Security.Claims.ClaimsIdentity.AuthenticationType
  parent: System.Security.Claims.ClaimsIdentity
  isExternal: false
  name: AuthenticationType
  fullName: System.Security.Claims.ClaimsIdentity.AuthenticationType
- uid: System.Security.Claims.ClaimsIdentity.Claims
  parent: System.Security.Claims.ClaimsIdentity
  isExternal: false
  name: Claims
  fullName: System.Security.Claims.ClaimsIdentity.Claims
- uid: System.Collections.Generic.IEnumerable{System.Security.Claims.Claim}
  definition: System.Collections.Generic.IEnumerable`1
  name: Collections.Generic.IEnumerable<Claim>
  fullName: System.Collections.Generic.IEnumerable<System.Security.Claims.Claim>
  fullname.vb: System.Collections.Generic.IEnumerable(Of System.Security.Claims.Claim)
  name.vb: Collections.Generic.IEnumerable(Of Claim)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: Collections.Generic.IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Security.Claims.Claim
    name: Claim
    fullName: System.Security.Claims.Claim
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: Collections.Generic.IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Security.Claims.Claim
    name: Claim
    fullName: System.Security.Claims.Claim
  - name: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  parent: System.Collections.Generic
  isExternal: false
  name: Collections.Generic.IEnumerable<>
  fullName: System.Collections.Generic.IEnumerable<>
  fullname.vb: System.Collections.Generic.IEnumerable(Of )
  name.vb: Collections.Generic.IEnumerable(Of )
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: Collections.Generic.IEnumerable
    fullName: System.Collections.Generic.IEnumerable
  - name: <
    fullName: <
  - {}
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: Collections.Generic.IEnumerable
    fullName: System.Collections.Generic.IEnumerable
  - name: '(Of '
    fullName: '(Of '
  - {}
  - name: )
    fullName: )
- uid: System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Security.Claims.ClaimsIdentity.IsAuthenticated
  parent: System.Security.Claims.ClaimsIdentity
  isExternal: false
  name: IsAuthenticated
  fullName: System.Security.Claims.ClaimsIdentity.IsAuthenticated
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  fullName: System.Boolean
- uid: System.Security.Claims.ClaimsIdentity.Name
  parent: System.Security.Claims.ClaimsIdentity
  isExternal: false
  name: Name
  fullName: System.Security.Claims.ClaimsIdentity.Name
- uid: System.Security.Claims.ClaimsIdentity.Clone
  parent: System.Security.Claims.ClaimsIdentity
  isExternal: false
  name: Clone()
  fullName: System.Security.Claims.ClaimsIdentity.Clone()
  spec.csharp:
  - uid: System.Security.Claims.ClaimsIdentity.Clone
    name: Clone
    fullName: System.Security.Claims.ClaimsIdentity.Clone
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Security.Claims.ClaimsIdentity.Clone
    name: Clone
    fullName: System.Security.Claims.ClaimsIdentity.Clone
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.ArgumentNullException
  isExternal: false
  name: ArgumentNullException
  fullName: System.ArgumentNullException
