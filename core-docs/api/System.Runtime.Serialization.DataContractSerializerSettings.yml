items:
- uid: System.Runtime.Serialization.DataContractSerializerSettings
  commentId: T:System.Runtime.Serialization.DataContractSerializerSettings
  id: DataContractSerializerSettings
  parent: System.Runtime.Serialization
  children:
  - System.Runtime.Serialization.DataContractSerializerSettings.#ctor
  - System.Runtime.Serialization.DataContractSerializerSettings.DataContractResolver
  - System.Runtime.Serialization.DataContractSerializerSettings.KnownTypes
  - System.Runtime.Serialization.DataContractSerializerSettings.MaxItemsInObjectGraph
  - System.Runtime.Serialization.DataContractSerializerSettings.PreserveObjectReferences
  - System.Runtime.Serialization.DataContractSerializerSettings.RootName
  - System.Runtime.Serialization.DataContractSerializerSettings.RootNamespace
  - System.Runtime.Serialization.DataContractSerializerSettings.SerializeReadOnlyTypes
  langs:
  - csharp
  - vb
  name: DataContractSerializerSettings
  fullName: System.Runtime.Serialization.DataContractSerializerSettings
  type: Class
  source:
    remote:
      path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: DataContractSerializerSettings
    path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
    startLine: 48
  assemblies:
  - System.Runtime.Serialization.Xml
  namespace: System.Runtime.Serialization
  summary: "\n<p>Specifies data contract serializer settings.</p>\n"
  remarks: "\n<p></p>\n"
  syntax:
    content: public class DataContractSerializerSettings
    content.vb: Public Class DataContractSerializerSettings
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: System.Runtime.Serialization.DataContractSerializerSettings.#ctor
  commentId: M:System.Runtime.Serialization.DataContractSerializerSettings.#ctor
  id: '#ctor'
  parent: System.Runtime.Serialization.DataContractSerializerSettings
  langs:
  - csharp
  - vb
  name: DataContractSerializerSettings()
  fullName: System.Runtime.Serialization.DataContractSerializerSettings.DataContractSerializerSettings()
  type: Constructor
  source:
    remote:
      path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
    startLine: 50
  assemblies:
  - System.Runtime.Serialization.Xml
  namespace: System.Runtime.Serialization
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Runtime.Serialization.DataContractSerializerSettings\" data-throw-if-not-resolved=\"false\"></xref> class.</p>\n"
  remarks: "\n<p></p>\n"
  syntax:
    content: public DataContractSerializerSettings()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Runtime.Serialization.DataContractSerializerSettings.DataContractResolver
  commentId: P:System.Runtime.Serialization.DataContractSerializerSettings.DataContractResolver
  id: DataContractResolver
  parent: System.Runtime.Serialization.DataContractSerializerSettings
  langs:
  - csharp
  - vb
  name: DataContractResolver
  fullName: System.Runtime.Serialization.DataContractSerializerSettings.DataContractResolver
  type: Property
  source:
    remote:
      path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: DataContractResolver
    path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
    startLine: 51
  assemblies:
  - System.Runtime.Serialization.Xml
  namespace: System.Runtime.Serialization
  summary: "\n<p>Gets or sets the component used to dynamically map xsi:type declarations to known contract types.</p>\n"
  remarks: "\n<p></p>\n"
  syntax:
    content: public DataContractResolver DataContractResolver { get; set; }
    content.vb: Public Property DataContractResolver As DataContractResolver
    parameters: []
    return:
      type: System.Runtime.Serialization.DataContractResolver
      description: "\n<p>The component used to dynamically map xsi:type declarations to known contract types.</p>\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Runtime.Serialization.DataContractSerializerSettings.KnownTypes
  commentId: P:System.Runtime.Serialization.DataContractSerializerSettings.KnownTypes
  id: KnownTypes
  parent: System.Runtime.Serialization.DataContractSerializerSettings
  langs:
  - csharp
  - vb
  name: KnownTypes
  fullName: System.Runtime.Serialization.DataContractSerializerSettings.KnownTypes
  type: Property
  source:
    remote:
      path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: KnownTypes
    path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
    startLine: 52
  assemblies:
  - System.Runtime.Serialization.Xml
  namespace: System.Runtime.Serialization
  summary: "\n<p>Gets or sets a collection of types that may be present in the object graph serialized using this instance of the DataContractSerializerSettings.</p>\n"
  remarks: "\n<p></p>\n"
  syntax:
    content: public IEnumerable<Type> KnownTypes { get; set; }
    content.vb: Public Property KnownTypes As IEnumerable(Of Type)
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{System.Type}
      description: "\n<p>A collection of types that may be present in the object graph serialized using this instance of the DataContractSerializerSettings.</p>\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Runtime.Serialization.DataContractSerializerSettings.MaxItemsInObjectGraph
  commentId: P:System.Runtime.Serialization.DataContractSerializerSettings.MaxItemsInObjectGraph
  id: MaxItemsInObjectGraph
  parent: System.Runtime.Serialization.DataContractSerializerSettings
  langs:
  - csharp
  - vb
  name: MaxItemsInObjectGraph
  fullName: System.Runtime.Serialization.DataContractSerializerSettings.MaxItemsInObjectGraph
  type: Property
  source:
    remote:
      path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: MaxItemsInObjectGraph
    path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
    startLine: 53
  assemblies:
  - System.Runtime.Serialization.Xml
  namespace: System.Runtime.Serialization
  summary: "\n<p>Gets or sets the maximum number of items in an object graph to serialize or deserialize.</p>\n"
  remarks: "\n<p></p>\n"
  syntax:
    content: public int MaxItemsInObjectGraph { get; set; }
    content.vb: Public Property MaxItemsInObjectGraph As Integer
    parameters: []
    return:
      type: System.Int32
      description: "\n<p>The maximum number of items in an object graph to serialize or deserialize.</p>\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Runtime.Serialization.DataContractSerializerSettings.PreserveObjectReferences
  commentId: P:System.Runtime.Serialization.DataContractSerializerSettings.PreserveObjectReferences
  id: PreserveObjectReferences
  parent: System.Runtime.Serialization.DataContractSerializerSettings
  langs:
  - csharp
  - vb
  name: PreserveObjectReferences
  fullName: System.Runtime.Serialization.DataContractSerializerSettings.PreserveObjectReferences
  type: Property
  source:
    remote:
      path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: PreserveObjectReferences
    path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
    startLine: 54
  assemblies:
  - System.Runtime.Serialization.Xml
  namespace: System.Runtime.Serialization
  summary: "\n<p>Gets or sets a value that specifies whether to use non-standard XML constructs to preserve object reference data.</p>\n"
  remarks: "\n<p></p>\n"
  syntax:
    content: public bool PreserveObjectReferences { get; set; }
    content.vb: Public Property PreserveObjectReferences As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>True</strong> to use non-standard XML constructs to preserve object reference data; otherwise, <strong>false</strong>.</p>\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Runtime.Serialization.DataContractSerializerSettings.RootName
  commentId: P:System.Runtime.Serialization.DataContractSerializerSettings.RootName
  id: RootName
  parent: System.Runtime.Serialization.DataContractSerializerSettings
  langs:
  - csharp
  - vb
  name: RootName
  fullName: System.Runtime.Serialization.DataContractSerializerSettings.RootName
  type: Property
  source:
    remote:
      path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: RootName
    path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
    startLine: 55
  assemblies:
  - System.Runtime.Serialization.Xml
  namespace: System.Runtime.Serialization
  summary: "\n<p>Gets or sets the root name of the selected object.</p>\n"
  remarks: "\n<p></p>\n"
  syntax:
    content: public XmlDictionaryString RootName { get; set; }
    content.vb: Public Property RootName As XmlDictionaryString
    parameters: []
    return:
      type: System.Xml.XmlDictionaryString
      description: "\n<p>The root name of the selected object.</p>\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Runtime.Serialization.DataContractSerializerSettings.RootNamespace
  commentId: P:System.Runtime.Serialization.DataContractSerializerSettings.RootNamespace
  id: RootNamespace
  parent: System.Runtime.Serialization.DataContractSerializerSettings
  langs:
  - csharp
  - vb
  name: RootNamespace
  fullName: System.Runtime.Serialization.DataContractSerializerSettings.RootNamespace
  type: Property
  source:
    remote:
      path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: RootNamespace
    path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
    startLine: 56
  assemblies:
  - System.Runtime.Serialization.Xml
  namespace: System.Runtime.Serialization
  summary: "\n<p>Gets or sets the root namespace for the specified object.</p>\n"
  remarks: "\n<p></p>\n"
  syntax:
    content: public XmlDictionaryString RootNamespace { get; set; }
    content.vb: Public Property RootNamespace As XmlDictionaryString
    parameters: []
    return:
      type: System.Xml.XmlDictionaryString
      description: "\n<p>The root namespace for the specified object.</p>\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Runtime.Serialization.DataContractSerializerSettings.SerializeReadOnlyTypes
  commentId: P:System.Runtime.Serialization.DataContractSerializerSettings.SerializeReadOnlyTypes
  id: SerializeReadOnlyTypes
  parent: System.Runtime.Serialization.DataContractSerializerSettings
  langs:
  - csharp
  - vb
  name: SerializeReadOnlyTypes
  fullName: System.Runtime.Serialization.DataContractSerializerSettings.SerializeReadOnlyTypes
  type: Property
  source:
    remote:
      path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: SerializeReadOnlyTypes
    path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
    startLine: 57
  assemblies:
  - System.Runtime.Serialization.Xml
  namespace: System.Runtime.Serialization
  summary: "\n<p>Gets or sets a value that specifies whether to serialize read only types.</p>\n"
  remarks: "\n<p></p>\n"
  syntax:
    content: public bool SerializeReadOnlyTypes { get; set; }
    content.vb: Public Property SerializeReadOnlyTypes As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>True</strong> to serialize read only types; otherwise, <strong>false</strong>.</p>\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: System.Runtime.Serialization
  isExternal: false
  name: System.Runtime.Serialization
  fullName: System.Runtime.Serialization
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Runtime.Serialization.DataContractResolver
  parent: System.Runtime.Serialization
  isExternal: false
  name: DataContractResolver
  fullName: System.Runtime.Serialization.DataContractResolver
- uid: System.Collections.Generic.IEnumerable{System.Type}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<Type>
  fullName: System.Collections.Generic.IEnumerable<System.Type>
  fullname.vb: System.Collections.Generic.IEnumerable(Of System.Type)
  name.vb: IEnumerable(Of Type)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  parent: System.Collections.Generic
  isExternal: false
  name: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  fullname.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  fullName: System.Int32
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  fullName: System.Boolean
- uid: System.Xml.XmlDictionaryString
  parent: System.Xml
  isExternal: false
  name: XmlDictionaryString
  fullName: System.Xml.XmlDictionaryString
- uid: System.Xml
  isExternal: false
  name: System.Xml
  fullName: System.Xml
