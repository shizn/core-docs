items:
- uid: System.Xml.ConformanceLevel
  commentId: T:System.Xml.ConformanceLevel
  id: ConformanceLevel
  parent: System.Xml
  children:
  - System.Xml.ConformanceLevel.Auto
  - System.Xml.ConformanceLevel.Document
  - System.Xml.ConformanceLevel.Fragment
  langs:
  - csharp
  - vb
  name: ConformanceLevel
  fullName: System.Xml.ConformanceLevel
  type: Enum
  source:
    remote:
      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ConformanceLevel
    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
    startLine: 10
  assemblies:
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: "\n<p>Specifies the amount of input or output checking that <xref href=\"System.Xml.XmlReader\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"System.Xml.XmlWriter\" data-throw-if-not-resolved=\"false\"></xref> objects perform.</p>\n"
  remarks: "\n<p>When you create an XML reader or writer instance, you can use the <xref href=\"System.Xml.XmlReaderSettings\" data-throw-if-not-resolved=\"false\"></xref> or <xref href=\"System.Xml.XmlWriterSettings\" data-throw-if-not-resolved=\"false\"></xref> class to specify the features that you want the new instance to support. One of the features that you can configure is the level of conformance you want to enforce on the XML data.</p>\n<p>Creating a compliant reader or writer guarantees that the XML data being processed complies with the specified conformance level. If the stream being read or written doesn't comply with the conformance level, an exception is thrown.</p>\n"
  example:
  - 
  syntax:
    content: public enum ConformanceLevel
    content.vb: Public Enum ConformanceLevel
  seealso:
  - type: System.Xml.XmlReaderSettings
    commentId: T:System.Xml.XmlReaderSettings
  - type: System.Xml.XmlWriterSettings
    commentId: T:System.Xml.XmlWriterSettings
  modifiers.csharp:
  - public
  - enum
  modifiers.vb:
  - Public
  - Enum
- uid: System.Xml.ConformanceLevel.Auto
  commentId: F:System.Xml.ConformanceLevel.Auto
  id: Auto
  parent: System.Xml.ConformanceLevel
  langs:
  - csharp
  - vb
  name: Auto
  fullName: System.Xml.ConformanceLevel.Auto
  type: Field
  source:
    remote:
      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Auto
    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
    startLine: 12
  assemblies:
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: "\n<p>The <xref href=\"System.Xml.XmlReader\" data-throw-if-not-resolved=\"false\"></xref> or <xref href=\"System.Xml.XmlWriter\" data-throw-if-not-resolved=\"false\"></xref> object automatically detects whether document-level or fragment-level checking should be performed, and does the appropriate checking. If you're wrapping another <xref href=\"System.Xml.XmlReader\" data-throw-if-not-resolved=\"false\"></xref> or <xref href=\"System.Xml.XmlWriter\" data-throw-if-not-resolved=\"false\"></xref> object, the outer object doesn't do any additional conformance checking. Conformance checking is left up to the underlying object.</p>\n<p>See the <xref href=\"System.Xml.XmlReaderSettings.ConformanceLevel\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"System.Xml.XmlWriterSettings.ConformanceLevel\" data-throw-if-not-resolved=\"false\"></xref> properties for details on how the compliance level is determined.</p>\n"
  syntax:
    content: Auto = 0
    return:
      type: System.Xml.ConformanceLevel
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Xml.ConformanceLevel.Document
  commentId: F:System.Xml.ConformanceLevel.Document
  id: Document
  parent: System.Xml.ConformanceLevel
  langs:
  - csharp
  - vb
  name: Document
  fullName: System.Xml.ConformanceLevel.Document
  type: Field
  source:
    remote:
      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Document
    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
    startLine: 13
  assemblies:
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: "\n<p>The XML data complies with the rules for a well-formed <see href=\"http://www.w3.org/TR/2006/REC-xml-20060816/#sec-well-formed\">XML 1.0 document</see>, as defined by the W3C.</p>\n"
  remarks: "\n<p>This level of checking ensures that the stream being read or written can be consumed by any processor as an <see href=\"http://www.w3.org/TR/2006/REC-xml-20060816/#sec-well-formed\">XML 1.0 document</see>.</p>\n<p>Document-level checks enforce fragment-level checks and also ensure the following:</p>\n<ul><li>\n<p>The top-level item doesn't have any nodes other than the XML declaration, DTD, element, comment, white space, or processing instruction.</p>\n</li><li>\n<p>The XML data has one and only one top-level element node.</p>\n</li></ul>\n"
  example:
  - 
  syntax:
    content: Document = 2
    return:
      type: System.Xml.ConformanceLevel
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Xml.ConformanceLevel.Fragment
  commentId: F:System.Xml.ConformanceLevel.Fragment
  id: Fragment
  parent: System.Xml.ConformanceLevel
  langs:
  - csharp
  - vb
  name: Fragment
  fullName: System.Xml.ConformanceLevel.Fragment
  type: Field
  source:
    remote:
      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Fragment
    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
    startLine: 14
  assemblies:
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: "\n<p>The XML data is a <see href=\"http://www.w3.org/TR/2006/REC-xml-20060816/#wf-entities\">well-formed XML fragment</see>, as defined by the W3C.</p>\n"
  remarks: "\n<p>This conformance level represents an XML document that might not have a root element but is otherwise well-formed. This level of checking ensures that the stream being read or written can be consumed by any processor as an <see href=\"http://www.w3.org/TR/2006/REC-xml-20060816/#wf-entities\">XML 1.0 external parsed entity</see>.</p>\n"
  example:
  - 
  syntax:
    content: Fragment = 1
    return:
      type: System.Xml.ConformanceLevel
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
references:
- uid: System.Xml
  isExternal: false
  name: System.Xml
  fullName: System.Xml
- uid: System.Xml.ConformanceLevel
  parent: System.Xml
  isExternal: false
  name: ConformanceLevel
  fullName: System.Xml.ConformanceLevel
