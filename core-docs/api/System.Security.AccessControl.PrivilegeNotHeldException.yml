items:
- uid: System.Security.AccessControl.PrivilegeNotHeldException
  commentId: T:System.Security.AccessControl.PrivilegeNotHeldException
  id: PrivilegeNotHeldException
  parent: System.Security.AccessControl
  children:
  - System.Security.AccessControl.PrivilegeNotHeldException.#ctor
  - System.Security.AccessControl.PrivilegeNotHeldException.#ctor(System.String)
  - System.Security.AccessControl.PrivilegeNotHeldException.#ctor(System.String,System.Exception)
  - System.Security.AccessControl.PrivilegeNotHeldException.PrivilegeName
  langs:
  - csharp
  - vb
  name: PrivilegeNotHeldException
  fullName: System.Security.AccessControl.PrivilegeNotHeldException
  type: Class
  source:
    remote:
      path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: PrivilegeNotHeldException
    path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs
    startLine: 441
  assemblies:
  - System.Security.AccessControl
  namespace: System.Security.AccessControl
  summary: The exception that is thrown when a method in the <xref href="System.Security.AccessControl" data-throw-if-not-resolved="false"></xref> namespace attempts to enable a privilege that it does not have.
  syntax:
    content: 'public sealed class PrivilegeNotHeldException : UnauthorizedAccessException'
    content.vb: >-
      Public NotInheritable Class PrivilegeNotHeldException
          Inherits UnauthorizedAccessException
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: System.Security.AccessControl.PrivilegeNotHeldException.#ctor
  commentId: M:System.Security.AccessControl.PrivilegeNotHeldException.#ctor
  id: '#ctor'
  parent: System.Security.AccessControl.PrivilegeNotHeldException
  langs:
  - csharp
  - vb
  name: PrivilegeNotHeldException()
  fullName: System.Security.AccessControl.PrivilegeNotHeldException.PrivilegeNotHeldException()
  type: Constructor
  source:
    remote:
      path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs
    startLine: 443
  assemblies:
  - System.Security.AccessControl
  namespace: System.Security.AccessControl
  summary: Initializes a new instance of the <xref href="System.Security.AccessControl.PrivilegeNotHeldException" data-throw-if-not-resolved="false"></xref> class.
  syntax:
    content: public PrivilegeNotHeldException()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Security.AccessControl.PrivilegeNotHeldException.#ctor(System.String)
  commentId: M:System.Security.AccessControl.PrivilegeNotHeldException.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Security.AccessControl.PrivilegeNotHeldException
  langs:
  - csharp
  - vb
  name: PrivilegeNotHeldException(String)
  fullName: System.Security.AccessControl.PrivilegeNotHeldException.PrivilegeNotHeldException(System.String)
  type: Constructor
  source:
    remote:
      path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs
    startLine: 444
  assemblies:
  - System.Security.AccessControl
  namespace: System.Security.AccessControl
  summary: Initializes a new instance of the <xref href="System.Security.AccessControl.PrivilegeNotHeldException" data-throw-if-not-resolved="false"></xref> class by using the specified privilege.
  syntax:
    content: public PrivilegeNotHeldException(string privilege)
    content.vb: Public Sub New(privilege As String)
    parameters:
    - id: privilege
      type: System.String
      description: The privilege that is not enabled.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Security.AccessControl.PrivilegeNotHeldException.#ctor(System.String,System.Exception)
  commentId: M:System.Security.AccessControl.PrivilegeNotHeldException.#ctor(System.String,System.Exception)
  id: '#ctor(System.String,System.Exception)'
  parent: System.Security.AccessControl.PrivilegeNotHeldException
  langs:
  - csharp
  - vb
  name: PrivilegeNotHeldException(String, Exception)
  fullName: System.Security.AccessControl.PrivilegeNotHeldException.PrivilegeNotHeldException(System.String, System.Exception)
  type: Constructor
  source:
    remote:
      path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs
    startLine: 445
  assemblies:
  - System.Security.AccessControl
  namespace: System.Security.AccessControl
  summary: Initializes a new instance of the <xref href="System.Security.AccessControl.PrivilegeNotHeldException" data-throw-if-not-resolved="false"></xref> class by using the specified exception.
  syntax:
    content: public PrivilegeNotHeldException(string privilege, Exception inner)
    content.vb: Public Sub New(privilege As String, inner As Exception)
    parameters:
    - id: privilege
      type: System.String
      description: The privilege that is not enabled.
    - id: inner
      type: System.Exception
      description: The exception that is the cause of the current exception. If the <em>innerException</em> parameter is not a null reference (Nothing in Visual Basic), the current exception is raised in a catch block that handles the inner exception.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Security.AccessControl.PrivilegeNotHeldException.PrivilegeName
  commentId: P:System.Security.AccessControl.PrivilegeNotHeldException.PrivilegeName
  id: PrivilegeName
  parent: System.Security.AccessControl.PrivilegeNotHeldException
  langs:
  - csharp
  - vb
  name: PrivilegeName
  fullName: System.Security.AccessControl.PrivilegeNotHeldException.PrivilegeName
  type: Property
  source:
    remote:
      path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: PrivilegeName
    path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs
    startLine: 446
  assemblies:
  - System.Security.AccessControl
  namespace: System.Security.AccessControl
  summary: Gets the name of the privilege that is not enabled.
  syntax:
    content: public string PrivilegeName { get; }
    content.vb: Public ReadOnly Property PrivilegeName As String
    parameters: []
    return:
      type: System.String
      description: The name of the privilege that the method failed to enable.
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: System.Security.AccessControl
  isExternal: false
  name: System.Security.AccessControl
  fullName: System.Security.AccessControl
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.String
  parent: System
  isExternal: false
  name: String
  fullName: System.String
- uid: System.Exception
  parent: System
  isExternal: false
  name: Exception
  fullName: System.Exception
