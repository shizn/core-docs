items:
- uid: System.Diagnostics.Contracts.ContractClassAttribute
  commentId: T:System.Diagnostics.Contracts.ContractClassAttribute
  id: ContractClassAttribute
  parent: System.Diagnostics.Contracts
  children:
  - System.Diagnostics.Contracts.ContractClassAttribute.#ctor(System.Type)
  - System.Diagnostics.Contracts.ContractClassAttribute.TypeContainingContracts
  langs:
  - csharp
  - vb
  name: ContractClassAttribute
  fullName: System.Diagnostics.Contracts.ContractClassAttribute
  type: Class
  source:
    remote:
      path: src/mscorlib/src/System/Diagnostics/Contracts/Contracts.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ContractClassAttribute
    path: src/mscorlib/src/System/Diagnostics/Contracts/Contracts.cs
    startLine: 61
  assemblies:
  - System.Diagnostics.Contracts
  namespace: System.Diagnostics.Contracts
  summary: Specifies that a separate type contains the code contracts for this type.
  syntax:
    content: 'public sealed class ContractClassAttribute : Attribute'
    content.vb: >-
      Public NotInheritable Class ContractClassAttribute
          Inherits Attribute
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: System.Diagnostics.Contracts.ContractClassAttribute.#ctor(System.Type)
  commentId: M:System.Diagnostics.Contracts.ContractClassAttribute.#ctor(System.Type)
  id: '#ctor(System.Type)'
  parent: System.Diagnostics.Contracts.ContractClassAttribute
  langs:
  - csharp
  - vb
  name: ContractClassAttribute(Type)
  fullName: System.Diagnostics.Contracts.ContractClassAttribute.ContractClassAttribute(System.Type)
  type: Constructor
  source:
    remote:
      path: src/mscorlib/src/System/Diagnostics/Contracts/Contracts.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: .ctor
    path: src/mscorlib/src/System/Diagnostics/Contracts/Contracts.cs
    startLine: 68
  assemblies:
  - System.Diagnostics.Contracts
  namespace: System.Diagnostics.Contracts
  summary: 'Initializes a new instance of the <xref href="System.Diagnostics.Contracts.ContractClassAttribute" data-throw-if-not-resolved="false"></xref> class. '
  syntax:
    content: public ContractClassAttribute(Type typeContainingContracts)
    content.vb: Public Sub New(typeContainingContracts As Type)
    parameters:
    - id: typeContainingContracts
      type: System.Type
      description: The type that contains the code contracts for this type.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Diagnostics.Contracts.ContractClassAttribute.TypeContainingContracts
  commentId: P:System.Diagnostics.Contracts.ContractClassAttribute.TypeContainingContracts
  id: TypeContainingContracts
  parent: System.Diagnostics.Contracts.ContractClassAttribute
  langs:
  - csharp
  - vb
  name: TypeContainingContracts
  fullName: System.Diagnostics.Contracts.ContractClassAttribute.TypeContainingContracts
  type: Property
  source:
    remote:
      path: src/mscorlib/src/System/Diagnostics/Contracts/Contracts.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: TypeContainingContracts
    path: src/mscorlib/src/System/Diagnostics/Contracts/Contracts.cs
    startLine: 73
  assemblies:
  - System.Diagnostics.Contracts
  namespace: System.Diagnostics.Contracts
  summary: Gets the type that contains the code contracts for this type.
  syntax:
    content: public Type TypeContainingContracts { get; }
    content.vb: Public ReadOnly Property TypeContainingContracts As Type
    parameters: []
    return:
      type: System.Type
      description: 'The type that contains the code contracts for this type. '
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: System.Diagnostics.Contracts
  isExternal: false
  name: System.Diagnostics.Contracts
  fullName: System.Diagnostics.Contracts
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  fullName: System.Type
