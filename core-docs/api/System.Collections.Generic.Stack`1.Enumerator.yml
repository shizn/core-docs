items:
- uid: System.Collections.Generic.Stack`1.Enumerator
  commentId: T:System.Collections.Generic.Stack`1.Enumerator
  id: Stack`1.Enumerator
  parent: System.Collections.Generic
  children:
  - System.Collections.Generic.Stack`1.Enumerator.Current
  - System.Collections.Generic.Stack`1.Enumerator.Dispose
  - System.Collections.Generic.Stack`1.Enumerator.MoveNext
  langs:
  - csharp
  - vb
  name: Stack<T>.Enumerator
  fullName: System.Collections.Generic.Stack<T>.Enumerator
  type: Struct
  source:
    remote:
      path: src/System.Collections/src/System/Collections/Generic/Stack.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Enumerator
    path: src/System.Collections/src/System/Collections/Generic/Stack.cs
    startLine: 256
  assemblies:
  - System.Collections
  namespace: System.Collections.Generic
  syntax:
    content: 'public struct Enumerator : IEnumerator<T>, IEnumerator'
    content.vb: >-
      Public Structure Enumerator
          Implements IEnumerator(Of T), IEnumerator
  implements:
  - System.Collections.Generic.IEnumerator{{T}}
  - System.Collections.IEnumerator
  - System.IDisposable
  modifiers.csharp:
  - public
  - struct
  modifiers.vb:
  - Public
  - Structure
  fullName.vb: System.Collections.Generic.Stack(Of T).Enumerator
  name.vb: Stack(Of T).Enumerator
- uid: System.Collections.Generic.Stack`1.Enumerator.Current
  commentId: P:System.Collections.Generic.Stack`1.Enumerator.Current
  id: Current
  parent: System.Collections.Generic.Stack`1.Enumerator
  langs:
  - csharp
  - vb
  name: Current
  fullName: System.Collections.Generic.Stack<T>.Enumerator.Current
  type: Property
  source:
    remote:
      path: src/System.Collections/src/System/Collections/Generic/Stack.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Current
    path: src/System.Collections/src/System/Collections/Generic/Stack.cs
    startLine: 306
  assemblies:
  - System.Collections
  namespace: System.Collections.Generic
  syntax:
    content: public T Current { get; }
    content.vb: Public ReadOnly Property Current As T
    parameters: []
    return:
      type: '{T}'
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: System.Collections.Generic.Stack(Of T).Enumerator.Current
- uid: System.Collections.Generic.Stack`1.Enumerator.Dispose
  commentId: M:System.Collections.Generic.Stack`1.Enumerator.Dispose
  id: Dispose
  parent: System.Collections.Generic.Stack`1.Enumerator
  langs:
  - csharp
  - vb
  name: Dispose()
  fullName: System.Collections.Generic.Stack<T>.Enumerator.Dispose()
  type: Method
  source:
    remote:
      path: src/System.Collections/src/System/Collections/Generic/Stack.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Dispose
    path: src/System.Collections/src/System/Collections/Generic/Stack.cs
    startLine: 274
  assemblies:
  - System.Collections
  namespace: System.Collections.Generic
  syntax:
    content: public void Dispose()
    content.vb: Public Sub Dispose
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Collections.Generic.Stack(Of T).Enumerator.Dispose()
- uid: System.Collections.Generic.Stack`1.Enumerator.MoveNext
  commentId: M:System.Collections.Generic.Stack`1.Enumerator.MoveNext
  id: MoveNext
  parent: System.Collections.Generic.Stack`1.Enumerator
  langs:
  - csharp
  - vb
  name: MoveNext()
  fullName: System.Collections.Generic.Stack<T>.Enumerator.MoveNext()
  type: Method
  source:
    remote:
      path: src/System.Collections/src/System/Collections/Generic/Stack.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: MoveNext
    path: src/System.Collections/src/System/Collections/Generic/Stack.cs
    startLine: 280
  assemblies:
  - System.Collections
  namespace: System.Collections.Generic
  syntax:
    content: public bool MoveNext()
    content.vb: Public Function MoveNext As Boolean
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Collections.Generic.Stack(Of T).Enumerator.MoveNext()
references:
- uid: System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Collections.Generic.IEnumerator{{T}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerator`1
  name: IEnumerator<T>
  fullName: System.Collections.Generic.IEnumerator<T>
  fullname.vb: System.Collections.Generic.IEnumerator(Of T)
  name.vb: IEnumerator(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: false
  name: Collections.IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.IDisposable
  parent: System
  isExternal: false
  name: IDisposable
  fullName: System.IDisposable
- uid: System.Collections.Generic.IEnumerator`1
  parent: System.Collections.Generic
  isExternal: false
  name: Collections.Generic.IEnumerator<>
  fullName: System.Collections.Generic.IEnumerator<>
  fullname.vb: System.Collections.Generic.IEnumerator(Of )
  name.vb: Collections.Generic.IEnumerator(Of )
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: Collections.Generic.IEnumerator
    fullName: System.Collections.Generic.IEnumerator
  - name: <
    fullName: <
  - {}
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: Collections.Generic.IEnumerator
    fullName: System.Collections.Generic.IEnumerator
  - name: '(Of '
    fullName: '(Of '
  - {}
  - name: )
    fullName: )
- uid: System.Collections
  isExternal: false
  name: System.Collections
  fullName: System.Collections
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: '{T}'
  isExternal: false
  name: T
  fullName: T
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  fullName: System.Boolean
