items:
- uid: System.IO.WindowsRuntimeStorageExtensions
  commentId: T:System.IO.WindowsRuntimeStorageExtensions
  id: WindowsRuntimeStorageExtensions
  parent: System.IO
  children:
  - System.IO.WindowsRuntimeStorageExtensions.OpenStreamForReadAsync(Windows.Storage.IStorageFile)
  - System.IO.WindowsRuntimeStorageExtensions.OpenStreamForReadAsync(Windows.Storage.IStorageFolder,System.String)
  - System.IO.WindowsRuntimeStorageExtensions.OpenStreamForWriteAsync(Windows.Storage.IStorageFile)
  - System.IO.WindowsRuntimeStorageExtensions.OpenStreamForWriteAsync(Windows.Storage.IStorageFolder,System.String,Windows.Storage.CreationCollisionOption)
  langs:
  - csharp
  - vb
  name: WindowsRuntimeStorageExtensions
  fullName: System.IO.WindowsRuntimeStorageExtensions
  type: Class
  source:
    remote:
      path: src/System.Runtime.WindowsRuntime/ref/System.Runtime.WindowsRuntime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: WindowsRuntimeStorageExtensions
    path: src/System.Runtime.WindowsRuntime/ref/System.Runtime.WindowsRuntime.cs
    startLine: 40
  assemblies:
  - System.Runtime.WindowsRuntime
  namespace: System.IO
  syntax:
    content: >-
      [SecurityCritical]

      public class WindowsRuntimeStorageExtensions
    content.vb: >-
      <SecurityCritical>

      Public Class WindowsRuntimeStorageExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  attributes:
  - type: System.Security.SecurityCriticalAttribute
    ctor: System.Security.SecurityCriticalAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: System.IO.WindowsRuntimeStorageExtensions.OpenStreamForReadAsync(Windows.Storage.IStorageFile)
  commentId: M:System.IO.WindowsRuntimeStorageExtensions.OpenStreamForReadAsync(Windows.Storage.IStorageFile)
  id: OpenStreamForReadAsync(Windows.Storage.IStorageFile)
  isExtensionMethod: true
  parent: System.IO.WindowsRuntimeStorageExtensions
  langs:
  - csharp
  - vb
  name: OpenStreamForReadAsync(Storage.IStorageFile)
  fullName: System.IO.WindowsRuntimeStorageExtensions.OpenStreamForReadAsync(Windows.Storage.IStorageFile)
  type: Method
  source:
    remote:
      path: src/System.Runtime.WindowsRuntime/ref/System.Runtime.WindowsRuntime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: OpenStreamForReadAsync
    path: src/System.Runtime.WindowsRuntime/ref/System.Runtime.WindowsRuntime.cs
    startLine: 43
  assemblies:
  - System.Runtime.WindowsRuntime
  namespace: System.IO
  syntax:
    content: >-
      [CLSCompliant(false)]

      public static Task<Stream> OpenStreamForReadAsync(this Storage.IStorageFile windowsRuntimeFile)
    content.vb: >-
      <CLSCompliant(False)>

      <ExtensionAttribute>

      Public Shared Function OpenStreamForReadAsync(windowsRuntimeFile As Storage.IStorageFile) As Task(Of Stream)
    parameters:
    - id: windowsRuntimeFile
      type: Windows.Storage.IStorageFile
    return:
      type: System.Threading.Tasks.Task{System.IO.Stream}
  attributes:
  - type: System.CLSCompliantAttribute
    ctor: System.CLSCompliantAttribute.#ctor(System.Boolean)
    arguments:
    - type: System.Boolean
      value: false
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.IO.WindowsRuntimeStorageExtensions.OpenStreamForReadAsync(Windows.Storage.IStorageFolder,System.String)
  commentId: M:System.IO.WindowsRuntimeStorageExtensions.OpenStreamForReadAsync(Windows.Storage.IStorageFolder,System.String)
  id: OpenStreamForReadAsync(Windows.Storage.IStorageFolder,System.String)
  isExtensionMethod: true
  parent: System.IO.WindowsRuntimeStorageExtensions
  langs:
  - csharp
  - vb
  name: OpenStreamForReadAsync(Storage.IStorageFolder, String)
  fullName: System.IO.WindowsRuntimeStorageExtensions.OpenStreamForReadAsync(Windows.Storage.IStorageFolder, System.String)
  type: Method
  source:
    remote:
      path: src/System.Runtime.WindowsRuntime/ref/System.Runtime.WindowsRuntime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: OpenStreamForReadAsync
    path: src/System.Runtime.WindowsRuntime/ref/System.Runtime.WindowsRuntime.cs
    startLine: 45
  assemblies:
  - System.Runtime.WindowsRuntime
  namespace: System.IO
  syntax:
    content: >-
      [CLSCompliant(false)]

      public static Task<Stream> OpenStreamForReadAsync(this Storage.IStorageFolder rootDirectory, string relativePath)
    content.vb: >-
      <CLSCompliant(False)>

      <ExtensionAttribute>

      Public Shared Function OpenStreamForReadAsync(rootDirectory As Storage.IStorageFolder, relativePath As String) As Task(Of Stream)
    parameters:
    - id: rootDirectory
      type: Windows.Storage.IStorageFolder
    - id: relativePath
      type: System.String
    return:
      type: System.Threading.Tasks.Task{System.IO.Stream}
  attributes:
  - type: System.CLSCompliantAttribute
    ctor: System.CLSCompliantAttribute.#ctor(System.Boolean)
    arguments:
    - type: System.Boolean
      value: false
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.IO.WindowsRuntimeStorageExtensions.OpenStreamForWriteAsync(Windows.Storage.IStorageFile)
  commentId: M:System.IO.WindowsRuntimeStorageExtensions.OpenStreamForWriteAsync(Windows.Storage.IStorageFile)
  id: OpenStreamForWriteAsync(Windows.Storage.IStorageFile)
  isExtensionMethod: true
  parent: System.IO.WindowsRuntimeStorageExtensions
  langs:
  - csharp
  - vb
  name: OpenStreamForWriteAsync(Storage.IStorageFile)
  fullName: System.IO.WindowsRuntimeStorageExtensions.OpenStreamForWriteAsync(Windows.Storage.IStorageFile)
  type: Method
  source:
    remote:
      path: src/System.Runtime.WindowsRuntime/ref/System.Runtime.WindowsRuntime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: OpenStreamForWriteAsync
    path: src/System.Runtime.WindowsRuntime/ref/System.Runtime.WindowsRuntime.cs
    startLine: 47
  assemblies:
  - System.Runtime.WindowsRuntime
  namespace: System.IO
  syntax:
    content: >-
      [CLSCompliant(false)]

      public static Task<Stream> OpenStreamForWriteAsync(this Storage.IStorageFile windowsRuntimeFile)
    content.vb: >-
      <CLSCompliant(False)>

      <ExtensionAttribute>

      Public Shared Function OpenStreamForWriteAsync(windowsRuntimeFile As Storage.IStorageFile) As Task(Of Stream)
    parameters:
    - id: windowsRuntimeFile
      type: Windows.Storage.IStorageFile
    return:
      type: System.Threading.Tasks.Task{System.IO.Stream}
  attributes:
  - type: System.CLSCompliantAttribute
    ctor: System.CLSCompliantAttribute.#ctor(System.Boolean)
    arguments:
    - type: System.Boolean
      value: false
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.IO.WindowsRuntimeStorageExtensions.OpenStreamForWriteAsync(Windows.Storage.IStorageFolder,System.String,Windows.Storage.CreationCollisionOption)
  commentId: M:System.IO.WindowsRuntimeStorageExtensions.OpenStreamForWriteAsync(Windows.Storage.IStorageFolder,System.String,Windows.Storage.CreationCollisionOption)
  id: OpenStreamForWriteAsync(Windows.Storage.IStorageFolder,System.String,Windows.Storage.CreationCollisionOption)
  isExtensionMethod: true
  parent: System.IO.WindowsRuntimeStorageExtensions
  langs:
  - csharp
  - vb
  name: OpenStreamForWriteAsync(Storage.IStorageFolder, String, Storage.CreationCollisionOption)
  fullName: System.IO.WindowsRuntimeStorageExtensions.OpenStreamForWriteAsync(Windows.Storage.IStorageFolder, System.String, Windows.Storage.CreationCollisionOption)
  type: Method
  source:
    remote:
      path: src/System.Runtime.WindowsRuntime/ref/System.Runtime.WindowsRuntime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: OpenStreamForWriteAsync
    path: src/System.Runtime.WindowsRuntime/ref/System.Runtime.WindowsRuntime.cs
    startLine: 49
  assemblies:
  - System.Runtime.WindowsRuntime
  namespace: System.IO
  syntax:
    content: >-
      [CLSCompliant(false)]

      public static Task<Stream> OpenStreamForWriteAsync(this Storage.IStorageFolder rootDirectory, string relativePath, Storage.CreationCollisionOption creationCollisionOption)
    content.vb: >-
      <CLSCompliant(False)>

      <ExtensionAttribute>

      Public Shared Function OpenStreamForWriteAsync(rootDirectory As Storage.IStorageFolder, relativePath As String, creationCollisionOption As Storage.CreationCollisionOption) As Task(Of Stream)
    parameters:
    - id: rootDirectory
      type: Windows.Storage.IStorageFolder
    - id: relativePath
      type: System.String
    - id: creationCollisionOption
      type: Windows.Storage.CreationCollisionOption
    return:
      type: System.Threading.Tasks.Task{System.IO.Stream}
  attributes:
  - type: System.CLSCompliantAttribute
    ctor: System.CLSCompliantAttribute.#ctor(System.Boolean)
    arguments:
    - type: System.Boolean
      value: false
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: System.IO
  isExternal: false
  name: System.IO
  fullName: System.IO
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: Windows.Storage.IStorageFile
  isExternal: true
  name: Storage.IStorageFile
  fullName: Windows.Storage.IStorageFile
- uid: System.Threading.Tasks.Task{System.IO.Stream}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<Stream>
  fullName: System.Threading.Tasks.Task<System.IO.Stream>
  fullname.vb: System.Threading.Tasks.Task(Of System.IO.Stream)
  name.vb: Task(Of Stream)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    fullName: <
  - uid: System.IO.Stream
    name: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.IO.Stream
    name: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: )
    fullName: )
- uid: System.Threading.Tasks.Task`1
  parent: System.Threading.Tasks
  isExternal: false
  name: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  fullname.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
  - name: <
    fullName: <
  - name: TResult
    fullName: TResult
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
  - name: '(Of '
    fullName: '(Of '
  - name: TResult
    fullName: TResult
  - name: )
    fullName: )
- uid: System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: Windows.Storage.IStorageFolder
  isExternal: true
  name: Storage.IStorageFolder
  fullName: Windows.Storage.IStorageFolder
- uid: System.String
  parent: System
  isExternal: false
  name: String
  fullName: System.String
- uid: Windows.Storage.CreationCollisionOption
  isExternal: true
  name: Storage.CreationCollisionOption
  fullName: Windows.Storage.CreationCollisionOption
