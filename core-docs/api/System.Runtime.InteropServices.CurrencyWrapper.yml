items:
- uid: System.Runtime.InteropServices.CurrencyWrapper
  commentId: T:System.Runtime.InteropServices.CurrencyWrapper
  id: CurrencyWrapper
  parent: System.Runtime.InteropServices
  children:
  - System.Runtime.InteropServices.CurrencyWrapper.#ctor(System.Decimal)
  - System.Runtime.InteropServices.CurrencyWrapper.#ctor(System.Object)
  - System.Runtime.InteropServices.CurrencyWrapper.WrappedObject
  langs:
  - csharp
  - vb
  name: CurrencyWrapper
  fullName: System.Runtime.InteropServices.CurrencyWrapper
  type: Class
  source:
    remote:
      path: src/mscorlib/src/System/Runtime/InteropServices/CurrencyWrapper.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: CurrencyWrapper
    path: src/mscorlib/src/System/Runtime/InteropServices/CurrencyWrapper.cs
    startLine: 17
  assemblies:
  - System.Runtime.InteropServices
  namespace: System.Runtime.InteropServices
  summary: "\n<p>Wraps objects the marshaler should marshal as a <strong>VT_CY</strong>.</p>\n"
  remarks: "\n<p>Controls how the wrapped object is marshaled when passed as a Variant. Wrap a <strong>Decimal</strong> in a <strong>CurrencyWrapper</strong> to have it marshaled as a <strong>VT_CY</strong>.</p>\n"
  syntax:
    content: >-
      [Serializable]

      [ComVisible(true)]

      public sealed class CurrencyWrapper
    content.vb: >-
      <Serializable>

      <ComVisible(True)>

      Public NotInheritable Class CurrencyWrapper
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: CurrencyWrapper and support for marshalling to the VARIANT type may be unavailable in future releases.
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: System.Runtime.InteropServices.CurrencyWrapper.#ctor(System.Decimal)
  commentId: M:System.Runtime.InteropServices.CurrencyWrapper.#ctor(System.Decimal)
  id: '#ctor(System.Decimal)'
  parent: System.Runtime.InteropServices.CurrencyWrapper
  langs:
  - csharp
  - vb
  name: CurrencyWrapper(Decimal)
  fullName: System.Runtime.InteropServices.CurrencyWrapper.CurrencyWrapper(System.Decimal)
  type: Constructor
  source:
    remote:
      path: src/mscorlib/src/System/Runtime/InteropServices/CurrencyWrapper.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: .ctor
    path: src/mscorlib/src/System/Runtime/InteropServices/CurrencyWrapper.cs
    startLine: 21
  assemblies:
  - System.Runtime.InteropServices
  namespace: System.Runtime.InteropServices
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Runtime.InteropServices.CurrencyWrapper\" data-throw-if-not-resolved=\"false\"></xref> class with the <strong>Decimal</strong> to be wrapped and marshaled as type <strong>VT_CY</strong>.</p>\n"
  syntax:
    content: public CurrencyWrapper(decimal obj)
    content.vb: Public Sub New(obj As Decimal)
    parameters:
    - id: obj
      type: System.Decimal
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Runtime.InteropServices.CurrencyWrapper.#ctor(System.Object)
  commentId: M:System.Runtime.InteropServices.CurrencyWrapper.#ctor(System.Object)
  id: '#ctor(System.Object)'
  parent: System.Runtime.InteropServices.CurrencyWrapper
  langs:
  - csharp
  - vb
  name: CurrencyWrapper(Object)
  fullName: System.Runtime.InteropServices.CurrencyWrapper.CurrencyWrapper(System.Object)
  type: Constructor
  source:
    remote:
      path: src/mscorlib/src/System/Runtime/InteropServices/CurrencyWrapper.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: .ctor
    path: src/mscorlib/src/System/Runtime/InteropServices/CurrencyWrapper.cs
    startLine: 26
  assemblies:
  - System.Runtime.InteropServices
  namespace: System.Runtime.InteropServices
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Runtime.InteropServices.CurrencyWrapper\" data-throw-if-not-resolved=\"false\"></xref> class with the object containing the <strong>Decimal</strong> to be wrapped and marshaled as type <strong>VT_CY</strong>.</p>\n"
  syntax:
    content: public CurrencyWrapper(object obj)
    content.vb: Public Sub New(obj As Object)
    parameters:
    - id: obj
      type: System.Object
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<p>The <em>obj</em> parameter is not a <xref href=\"System.Decimal\" data-throw-if-not-resolved=\"false\"></xref> type.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Runtime.InteropServices.CurrencyWrapper.WrappedObject
  commentId: P:System.Runtime.InteropServices.CurrencyWrapper.WrappedObject
  id: WrappedObject
  parent: System.Runtime.InteropServices.CurrencyWrapper
  langs:
  - csharp
  - vb
  name: WrappedObject
  fullName: System.Runtime.InteropServices.CurrencyWrapper.WrappedObject
  type: Property
  source:
    remote:
      path: src/mscorlib/src/System/Runtime/InteropServices/CurrencyWrapper.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: WrappedObject
    path: src/mscorlib/src/System/Runtime/InteropServices/CurrencyWrapper.cs
    startLine: 33
  assemblies:
  - System.Runtime.InteropServices
  namespace: System.Runtime.InteropServices
  summary: "\n<p>Gets the wrapped object to be marshaled as type <strong>VT_CY</strong>.</p>\n"
  syntax:
    content: public decimal WrappedObject { get; }
    content.vb: Public ReadOnly Property WrappedObject As Decimal
    parameters: []
    return:
      type: System.Decimal
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: System.Runtime.InteropServices
  isExternal: false
  name: System.Runtime.InteropServices
  fullName: System.Runtime.InteropServices
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Decimal
  parent: System
  isExternal: false
  name: Decimal
  fullName: System.Decimal
- uid: System.ArgumentException
  parent: System
  isExternal: false
  name: ArgumentException
  fullName: System.ArgumentException
