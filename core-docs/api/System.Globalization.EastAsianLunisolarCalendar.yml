items:
- uid: System.Globalization.EastAsianLunisolarCalendar
  commentId: T:System.Globalization.EastAsianLunisolarCalendar
  id: EastAsianLunisolarCalendar
  parent: System.Globalization
  children:
  - System.Globalization.EastAsianLunisolarCalendar.AddMonths(System.DateTime,System.Int32)
  - System.Globalization.EastAsianLunisolarCalendar.AddYears(System.DateTime,System.Int32)
  - System.Globalization.EastAsianLunisolarCalendar.GetCelestialStem(System.Int32)
  - System.Globalization.EastAsianLunisolarCalendar.GetDayOfMonth(System.DateTime)
  - System.Globalization.EastAsianLunisolarCalendar.GetDayOfWeek(System.DateTime)
  - System.Globalization.EastAsianLunisolarCalendar.GetDayOfYear(System.DateTime)
  - System.Globalization.EastAsianLunisolarCalendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)
  - System.Globalization.EastAsianLunisolarCalendar.GetDaysInYear(System.Int32,System.Int32)
  - System.Globalization.EastAsianLunisolarCalendar.GetLeapMonth(System.Int32,System.Int32)
  - System.Globalization.EastAsianLunisolarCalendar.GetMonth(System.DateTime)
  - System.Globalization.EastAsianLunisolarCalendar.GetMonthsInYear(System.Int32,System.Int32)
  - System.Globalization.EastAsianLunisolarCalendar.GetSexagenaryYear(System.DateTime)
  - System.Globalization.EastAsianLunisolarCalendar.GetTerrestrialBranch(System.Int32)
  - System.Globalization.EastAsianLunisolarCalendar.GetYear(System.DateTime)
  - System.Globalization.EastAsianLunisolarCalendar.IsLeapDay(System.Int32,System.Int32,System.Int32,System.Int32)
  - System.Globalization.EastAsianLunisolarCalendar.IsLeapMonth(System.Int32,System.Int32,System.Int32)
  - System.Globalization.EastAsianLunisolarCalendar.IsLeapYear(System.Int32,System.Int32)
  - System.Globalization.EastAsianLunisolarCalendar.ToDateTime(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  - System.Globalization.EastAsianLunisolarCalendar.ToFourDigitYear(System.Int32)
  - System.Globalization.EastAsianLunisolarCalendar.TwoDigitYearMax
  langs:
  - csharp
  - vb
  name: EastAsianLunisolarCalendar
  fullName: System.Globalization.EastAsianLunisolarCalendar
  type: Class
  source:
    remote:
      path: src/mscorlib/src/System/Globalization/EastAsianLunisolarCalendar.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: EastAsianLunisolarCalendar
    path: src/mscorlib/src/System/Globalization/EastAsianLunisolarCalendar.cs
    startLine: 15
  assemblies:
  - System.Globalization.Calendars
  namespace: System.Globalization
  summary: "\n<p>Represents a calendar that divides time into months, days, years, and eras, and has dates that are based on cycles of the sun and the moon.</p>\n"
  remarks: "\n<p>The <xref href=\"System.Globalization.EastAsianLunisolarCalendar\" data-throw-if-not-resolved=\"false\"></xref> class supports the sexagenary cycle of years (which repeats every 60 years) in addition to solar years and lunar months. Each solar year in the calendar is associated with a Sexagenary Year (see <xref href=\"System.Globalization.EastAsianLunisolarCalendar.GetSexagenaryYear(System.DateTime)\" data-throw-if-not-resolved=\"false\"></xref>), a Celestial Stem (see <xref href=\"System.Globalization.EastAsianLunisolarCalendar.GetCelestialStem(System.Int32)\" data-throw-if-not-resolved=\"false\"></xref>), and a Terrestrial Branch (see <xref href=\"System.Globalization.EastAsianLunisolarCalendar.GetTerrestrialBranch(System.Int32)\" data-throw-if-not-resolved=\"false\"></xref>). </p>\n<p>For information about using the <xref href=\"System.Globalization.HebrewCalendar\" data-throw-if-not-resolved=\"false\"></xref> class and the other calendar classes in the .NET Framework, see Working with Calendars.</p>\n<p>A year can have a leap month after any month of the year, and a month can have a leap day. For example, the <xref href=\"System.Globalization.EastAsianLunisolarCalendar.GetMonth(System.DateTime)\" data-throw-if-not-resolved=\"false\"></xref> method returns a positive integer that indicates the month associated with a specified date. If there is a leap month between the eighth and ninth months of the year, the <xref href=\"System.Globalization.EastAsianLunisolarCalendar.GetMonth(System.DateTime)\" data-throw-if-not-resolved=\"false\"></xref> method returns 8 for the eighth month, 9 for the leap eighth month, and 10 for the ninth month.</p>\n<p>Each <xref href=\"System.Globalization.CultureInfo\" data-throw-if-not-resolved=\"false\"></xref> supports a set of calendars. Currently, none of the lunisolar calendar classes that derive from <xref href=\"System.Globalization.EastAsianLunisolarCalendar\" data-throw-if-not-resolved=\"false\"></xref> is used by any of the cultures supported by the <xref href=\"System.Globalization.CultureInfo\" data-throw-if-not-resolved=\"false\"></xref> class. Therefore, this class and those that derive from it can be used only to calculate dates in the East Asian lunisolar calendars. This class supports several \"get\" methods to describe a <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> in the terms used by lunisolar calendars, and the <see cref=\"Overload:System.Globalization.EastAsianLunisolarCalendar.ToDateTime\"></see> method to convert from lunisolar calendar data to a <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  example:
  - 
  syntax:
    content: >-
      [Serializable]

      [ComVisible(true)]

      public abstract class EastAsianLunisolarCalendar : Calendar, ICloneable
    content.vb: >-
      <Serializable>

      <ComVisible(True)>

      Public MustInherit Class EastAsianLunisolarCalendar
          Inherits Calendar
          Implements ICloneable
  inheritance:
  - System.Object
  - System.Globalization.Calendar
  implements:
  - System.ICloneable
  inheritedMembers:
  - System.Globalization.Calendar.CurrentEra
  - System.Globalization.Calendar.Clone
  - System.Globalization.Calendar.ReadOnly(System.Globalization.Calendar)
  - System.Globalization.Calendar.AddMilliseconds(System.DateTime,System.Double)
  - System.Globalization.Calendar.AddDays(System.DateTime,System.Int32)
  - System.Globalization.Calendar.AddHours(System.DateTime,System.Int32)
  - System.Globalization.Calendar.AddMinutes(System.DateTime,System.Int32)
  - System.Globalization.Calendar.AddSeconds(System.DateTime,System.Int32)
  - System.Globalization.Calendar.AddWeeks(System.DateTime,System.Int32)
  - System.Globalization.Calendar.GetDaysInMonth(System.Int32,System.Int32)
  - System.Globalization.Calendar.GetDaysInYear(System.Int32)
  - System.Globalization.Calendar.GetEra(System.DateTime)
  - System.Globalization.Calendar.GetHour(System.DateTime)
  - System.Globalization.Calendar.GetMilliseconds(System.DateTime)
  - System.Globalization.Calendar.GetMinute(System.DateTime)
  - System.Globalization.Calendar.GetMonthsInYear(System.Int32)
  - System.Globalization.Calendar.GetSecond(System.DateTime)
  - System.Globalization.Calendar.GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)
  - System.Globalization.Calendar.IsLeapDay(System.Int32,System.Int32,System.Int32)
  - System.Globalization.Calendar.IsLeapMonth(System.Int32,System.Int32)
  - System.Globalization.Calendar.GetLeapMonth(System.Int32)
  - System.Globalization.Calendar.IsLeapYear(System.Int32)
  - System.Globalization.Calendar.ToDateTime(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  - System.Globalization.Calendar.MinSupportedDateTime
  - System.Globalization.Calendar.MaxSupportedDateTime
  - System.Globalization.Calendar.AlgorithmType
  - System.Globalization.Calendar.IsReadOnly
  - System.Globalization.Calendar.Eras
  - System.Globalization.Calendar.DaysInYearBeforeMinSupportedYear
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: System.Globalization.EastAsianLunisolarCalendar.TwoDigitYearMax
  commentId: P:System.Globalization.EastAsianLunisolarCalendar.TwoDigitYearMax
  id: TwoDigitYearMax
  parent: System.Globalization.EastAsianLunisolarCalendar
  langs:
  - csharp
  - vb
  name: TwoDigitYearMax
  fullName: System.Globalization.EastAsianLunisolarCalendar.TwoDigitYearMax
  type: Property
  source:
    remote:
      path: src/mscorlib/src/System/Globalization/EastAsianLunisolarCalendar.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: TwoDigitYearMax
    path: src/mscorlib/src/System/Globalization/EastAsianLunisolarCalendar.cs
    startLine: 609
  assemblies:
  - System.Globalization.Calendars
  namespace: System.Globalization
  summary: "\n<p>Gets or sets the last year of a 100-year range that can be represented by a 2-digit year.</p>\n"
  remarks: "\n<p>This property allows a 2-digit year to be properly translated to a 4-digit year. For example, in the Gregorian calendar, if this property is set to 2029, the 100-year range is from 1930 to 2029. Therefore, a 2-digit value of 30 is interpreted as 1930, while a 2-digit value of 29 is interpreted as 2029.</p>\n<p>The initial value of this property is derived from the settings in the regional and language options portion of Control Panel. However, that information can change during the life of the <xref href=\"System.AppDomain\" data-throw-if-not-resolved=\"false\"></xref>. The <xref href=\"System.Globalization.EastAsianLunisolarCalendar\" data-throw-if-not-resolved=\"false\"></xref> class does not detect changes in the system settings automatically.</p>\n"
  example:
  - 
  syntax:
    content: public override int TwoDigitYearMax { get; set; }
    content.vb: Public Overrides Property TwoDigitYearMax As Integer
    parameters: []
    return:
      type: System.Int32
  overridden: System.Globalization.Calendar.TwoDigitYearMax
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "\n<p>The current <xref href=\"System.Globalization.EastAsianLunisolarCalendar\" data-throw-if-not-resolved=\"false\"></xref>  is read-only.</p>\n"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>The value in a set operation is less than 99 or greater than the maximum supported year in the current calendar.</p>\n"
  modifiers.csharp:
  - public
  - override
  - get
  - set
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Globalization.EastAsianLunisolarCalendar.AddMonths(System.DateTime,System.Int32)
  commentId: M:System.Globalization.EastAsianLunisolarCalendar.AddMonths(System.DateTime,System.Int32)
  id: AddMonths(System.DateTime,System.Int32)
  parent: System.Globalization.EastAsianLunisolarCalendar
  langs:
  - csharp
  - vb
  name: AddMonths(DateTime, Int32)
  fullName: System.Globalization.EastAsianLunisolarCalendar.AddMonths(System.DateTime, System.Int32)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Globalization/EastAsianLunisolarCalendar.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: AddMonths
    path: src/mscorlib/src/System/Globalization/EastAsianLunisolarCalendar.cs
    startLine: 398
  assemblies:
  - System.Globalization.Calendars
  namespace: System.Globalization
  summary: "\n<p>Calculates the date that is the specified number of months away from the specified date.</p>\n"
  remarks: "\n<p>The day part of the resulting <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> is affected if the resulting day is not a valid day in the resulting month of the resulting year. In this case, the day part is changed to the last valid day in the resulting month of the resulting year. The year part of the resulting <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> is affected if the resulting month is outside the year of the specified <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref>. This implementation supports only the current era. Therefore, <xref href=\"System.ArgumentException\" data-throw-if-not-resolved=\"false\"></xref> is thrown if the resulting year is outside the era of the specified <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref>. The time-of-day part of the resulting <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> remains the same as the specified <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>For example, if the specified month is October, which has 31 days, the specified day is the thirty-first day of that month, and the value of the <em>months</em> parameter is 6, the resulting year is one more than the specified year, the resulting month is April, and the resulting day is the thirtieth day, which is the last day in April.</p>\n<p>If the value of the <em>months</em> parameter is negative, the resulting <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> is earlier than the specified <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>The<xref href=\"System.DateTime.Kind\" data-throw-if-not-resolved=\"false\"></xref> property of the returned <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> value always equals <xref href=\"System.DateTimeKind.Unspecified\" data-throw-if-not-resolved=\"false\"></xref>. You can preserve the <xref href=\"System.DateTime.Kind\" data-throw-if-not-resolved=\"false\"></xref> property of the <em>time</em> parameter by calling the <xref href=\"System.DateTime.SpecifyKind(System.DateTime,System.DateTimeKind)\" data-throw-if-not-resolved=\"false\"></xref> method, as the following example shows.</p>System.Globalization.Calendar.AddMethods#5"
  example:
  - 
  syntax:
    content: public override DateTime AddMonths(DateTime time, int months)
    content.vb: Public Overrides Function AddMonths(time As Date, months As Integer) As Date
    parameters:
    - id: time
      type: System.DateTime
    - id: months
      type: System.Int32
    return:
      type: System.DateTime
  overridden: System.Globalization.Calendar.AddMonths(System.DateTime,System.Int32)
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<p>The result is outside the supported range of a <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref>. </p>\n"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>\n<em>months</em> is less than -120000 or greater than 120000. </p>\n<p>-or-</p>\n<p>\n<em>time</em> is less than <xref href=\"System.Globalization.Calendar.MinSupportedDateTime\" data-throw-if-not-resolved=\"false\"></xref> or greater than <xref href=\"System.Globalization.Calendar.MaxSupportedDateTime\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Globalization.EastAsianLunisolarCalendar.AddYears(System.DateTime,System.Int32)
  commentId: M:System.Globalization.EastAsianLunisolarCalendar.AddYears(System.DateTime,System.Int32)
  id: AddYears(System.DateTime,System.Int32)
  parent: System.Globalization.EastAsianLunisolarCalendar
  langs:
  - csharp
  - vb
  name: AddYears(DateTime, Int32)
  fullName: System.Globalization.EastAsianLunisolarCalendar.AddYears(System.DateTime, System.Int32)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Globalization/EastAsianLunisolarCalendar.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: AddYears
    path: src/mscorlib/src/System/Globalization/EastAsianLunisolarCalendar.cs
    startLine: 442
  assemblies:
  - System.Globalization.Calendars
  namespace: System.Globalization
  summary: "\n<p>Calculates the date that is the specified number of years away from the specified date.</p>\n"
  remarks: "\n<p>The day part of the resulting <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> is affected if the resulting day is not a valid day in the resulting month of the resulting year. In this case, the day part is changed to the last valid day in the resulting month of the resulting year. The month part of the resulting <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> remains the same as the specified <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref>. This implementation supports only the current era. Therefore, <xref href=\"System.ArgumentException\" data-throw-if-not-resolved=\"false\"></xref> is thrown if the resulting year is outside the era of the specified <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref>. The time-of-day part of the resulting <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> remains the same as the specified <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>For example, February has 28 days, except during leap years when it has 29 days. If the specified date is the twenty-ninth day of February in a leap year and the value of the <em>years</em> parameter is 1, the resulting date will be the twenty-eighth day of February in the following year.</p>\n<p>If <em>years</em> is negative, the resulting <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> is earlier than the specified <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>The<xref href=\"System.DateTime.Kind\" data-throw-if-not-resolved=\"false\"></xref> property of the returned <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> value always equals <xref href=\"System.DateTimeKind.Unspecified\" data-throw-if-not-resolved=\"false\"></xref>. You can preserve the <xref href=\"System.DateTime.Kind\" data-throw-if-not-resolved=\"false\"></xref> property of the <em>time</em> parameter by calling the <xref href=\"System.DateTime.SpecifyKind(System.DateTime,System.DateTimeKind)\" data-throw-if-not-resolved=\"false\"></xref> method, as the following example shows.</p>System.Globalization.Calendar.AddMethods#8"
  example:
  - 
  syntax:
    content: public override DateTime AddYears(DateTime time, int years)
    content.vb: Public Overrides Function AddYears(time As Date, years As Integer) As Date
    parameters:
    - id: time
      type: System.DateTime
    - id: years
      type: System.Int32
    return:
      type: System.DateTime
  overridden: System.Globalization.Calendar.AddYears(System.DateTime,System.Int32)
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<p>The result is outside the supported range of a <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref>. </p>\n"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>\n<em>time</em> is less than <xref href=\"System.Globalization.Calendar.MinSupportedDateTime\" data-throw-if-not-resolved=\"false\"></xref> or greater than <xref href=\"System.Globalization.Calendar.MaxSupportedDateTime\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Globalization.EastAsianLunisolarCalendar.GetCelestialStem(System.Int32)
  commentId: M:System.Globalization.EastAsianLunisolarCalendar.GetCelestialStem(System.Int32)
  id: GetCelestialStem(System.Int32)
  parent: System.Globalization.EastAsianLunisolarCalendar
  langs:
  - csharp
  - vb
  name: GetCelestialStem(Int32)
  fullName: System.Globalization.EastAsianLunisolarCalendar.GetCelestialStem(System.Int32)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Globalization/EastAsianLunisolarCalendar.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: GetCelestialStem
    path: src/mscorlib/src/System/Globalization/EastAsianLunisolarCalendar.cs
    startLine: 64
  assemblies:
  - System.Globalization.Calendars
  namespace: System.Globalization
  summary: "\n<p>Calculates the celestial stem of the specified year in the sexagenary (60-year) cycle.</p>\n"
  example:
  - 
  syntax:
    content: public int GetCelestialStem(int sexagenaryYear)
    content.vb: Public Function GetCelestialStem(sexagenaryYear As Integer) As Integer
    parameters:
    - id: sexagenaryYear
      type: System.Int32
    return:
      type: System.Int32
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>\n<em>sexagenaryYear</em> is less than 1 or greater than 60.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Globalization.EastAsianLunisolarCalendar.GetDayOfMonth(System.DateTime)
  commentId: M:System.Globalization.EastAsianLunisolarCalendar.GetDayOfMonth(System.DateTime)
  id: GetDayOfMonth(System.DateTime)
  parent: System.Globalization.EastAsianLunisolarCalendar
  langs:
  - csharp
  - vb
  name: GetDayOfMonth(DateTime)
  fullName: System.Globalization.EastAsianLunisolarCalendar.GetDayOfMonth(System.DateTime)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Globalization/EastAsianLunisolarCalendar.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: GetDayOfMonth
    path: src/mscorlib/src/System/Globalization/EastAsianLunisolarCalendar.cs
    startLine: 485
  assemblies:
  - System.Globalization.Calendars
  namespace: System.Globalization
  summary: "\n<p>Calculates the day of the month in the specified date.</p>\n"
  example:
  - 
  syntax:
    content: public override int GetDayOfMonth(DateTime time)
    content.vb: Public Overrides Function GetDayOfMonth(time As Date) As Integer
    parameters:
    - id: time
      type: System.DateTime
    return:
      type: System.Int32
  overridden: System.Globalization.Calendar.GetDayOfMonth(System.DateTime)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Globalization.EastAsianLunisolarCalendar.GetDayOfWeek(System.DateTime)
  commentId: M:System.Globalization.EastAsianLunisolarCalendar.GetDayOfWeek(System.DateTime)
  id: GetDayOfWeek(System.DateTime)
  parent: System.Globalization.EastAsianLunisolarCalendar
  langs:
  - csharp
  - vb
  name: GetDayOfWeek(DateTime)
  fullName: System.Globalization.EastAsianLunisolarCalendar.GetDayOfWeek(System.DateTime)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Globalization/EastAsianLunisolarCalendar.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: GetDayOfWeek
    path: src/mscorlib/src/System/Globalization/EastAsianLunisolarCalendar.cs
    startLine: 541
  assemblies:
  - System.Globalization.Calendars
  namespace: System.Globalization
  summary: "\n<p>Calculates the day of the week in the specified date.</p>\n"
  example:
  - 
  syntax:
    content: public override DayOfWeek GetDayOfWeek(DateTime time)
    content.vb: Public Overrides Function GetDayOfWeek(time As Date) As DayOfWeek
    parameters:
    - id: time
      type: System.DateTime
    return:
      type: System.DayOfWeek
  overridden: System.Globalization.Calendar.GetDayOfWeek(System.DateTime)
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>\n<em>time</em> is less than <xref href=\"System.Globalization.Calendar.MinSupportedDateTime\" data-throw-if-not-resolved=\"false\"></xref> or greater than <xref href=\"System.Globalization.Calendar.MaxSupportedDateTime\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Globalization.EastAsianLunisolarCalendar.GetDayOfYear(System.DateTime)
  commentId: M:System.Globalization.EastAsianLunisolarCalendar.GetDayOfYear(System.DateTime)
  id: GetDayOfYear(System.DateTime)
  parent: System.Globalization.EastAsianLunisolarCalendar
  langs:
  - csharp
  - vb
  name: GetDayOfYear(DateTime)
  fullName: System.Globalization.EastAsianLunisolarCalendar.GetDayOfYear(System.DateTime)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Globalization/EastAsianLunisolarCalendar.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: GetDayOfYear
    path: src/mscorlib/src/System/Globalization/EastAsianLunisolarCalendar.cs
    startLine: 468
  assemblies:
  - System.Globalization.Calendars
  namespace: System.Globalization
  summary: "\n<p>Calculates the day of the year in the specified date.</p>\n"
  remarks: "\n<p>The day of the year is defined as the number of days from the first day of the year. For example, <xref href=\"System.Globalization.EastAsianLunisolarCalendar.GetDayOfYear(System.DateTime)\" data-throw-if-not-resolved=\"false\"></xref> for the first day of the first month returns 1, and <xref href=\"System.Globalization.EastAsianLunisolarCalendar.GetDayOfYear(System.DateTime)\" data-throw-if-not-resolved=\"false\"></xref> for the last day of the last month returns the total number of days in that year, which is the same value returned by <xref href=\"System.Globalization.EastAsianLunisolarCalendar.GetDaysInYear(System.Int32,System.Int32)\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  example:
  - 
  syntax:
    content: public override int GetDayOfYear(DateTime time)
    content.vb: Public Overrides Function GetDayOfYear(time As Date) As Integer
    parameters:
    - id: time
      type: System.DateTime
    return:
      type: System.Int32
  overridden: System.Globalization.Calendar.GetDayOfYear(System.DateTime)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Globalization.EastAsianLunisolarCalendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)
  commentId: M:System.Globalization.EastAsianLunisolarCalendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)
  id: GetDaysInMonth(System.Int32,System.Int32,System.Int32)
  parent: System.Globalization.EastAsianLunisolarCalendar
  langs:
  - csharp
  - vb
  name: GetDaysInMonth(Int32, Int32, Int32)
  fullName: System.Globalization.EastAsianLunisolarCalendar.GetDaysInMonth(System.Int32, System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Globalization/EastAsianLunisolarCalendar.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: GetDaysInMonth
    path: src/mscorlib/src/System/Globalization/EastAsianLunisolarCalendar.cs
    startLine: 220
  assemblies:
  - System.Globalization.Calendars
  namespace: System.Globalization
  summary: "\n<p>Calculates the number of days in the specified month of the specified year and era.</p>\n"
  remarks: "\n<p>Ifthe <em>month</em> parameter is the second month, the <xref href=\"System.Globalization.EastAsianLunisolarCalendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)\" data-throw-if-not-resolved=\"false\"></xref> method returns 28 or 29, depending on whether the <em>year</em> parameter is a leap year.</p>\n"
  example:
  - 
  syntax:
    content: public override int GetDaysInMonth(int year, int month, int era)
    content.vb: Public Overrides Function GetDaysInMonth(year As Integer, month As Integer, era As Integer) As Integer
    parameters:
    - id: year
      type: System.Int32
    - id: month
      type: System.Int32
    - id: era
      type: System.Int32
    return:
      type: System.Int32
  overridden: System.Globalization.Calendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>\n<em>year</em>, <em>month</em>, or <em>era</em> is outside the range supported by this calendar. </p>\n"
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Globalization.EastAsianLunisolarCalendar.GetDaysInYear(System.Int32,System.Int32)
  commentId: M:System.Globalization.EastAsianLunisolarCalendar.GetDaysInYear(System.Int32,System.Int32)
  id: GetDaysInYear(System.Int32,System.Int32)
  parent: System.Globalization.EastAsianLunisolarCalendar
  langs:
  - csharp
  - vb
  name: GetDaysInYear(Int32, Int32)
  fullName: System.Globalization.EastAsianLunisolarCalendar.GetDaysInYear(System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Globalization/EastAsianLunisolarCalendar.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: GetDaysInYear
    path: src/mscorlib/src/System/Globalization/EastAsianLunisolarCalendar.cs
    startLine: 497
  assemblies:
  - System.Globalization.Calendars
  namespace: System.Globalization
  summary: "\n<p>Calculates the number of days in the specified year and era.</p>\n"
  remarks: "\n<p>The <xref href=\"System.Globalization.EastAsianLunisolarCalendar.GetDaysInYear(System.Int32,System.Int32)\" data-throw-if-not-resolved=\"false\"></xref> method returns 365 or 366, depending on whether the <em>year</em> parameter is a leap year.</p>\n"
  example:
  - 
  syntax:
    content: public override int GetDaysInYear(int year, int era)
    content.vb: Public Overrides Function GetDaysInYear(year As Integer, era As Integer) As Integer
    parameters:
    - id: year
      type: System.Int32
    - id: era
      type: System.Int32
    return:
      type: System.Int32
  overridden: System.Globalization.Calendar.GetDaysInYear(System.Int32,System.Int32)
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>\n<em>year</em> or <em>era</em> is outside the range supported by this calendar. </p>\n"
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Globalization.EastAsianLunisolarCalendar.GetLeapMonth(System.Int32,System.Int32)
  commentId: M:System.Globalization.EastAsianLunisolarCalendar.GetLeapMonth(System.Int32,System.Int32)
  id: GetLeapMonth(System.Int32,System.Int32)
  parent: System.Globalization.EastAsianLunisolarCalendar
  langs:
  - csharp
  - vb
  name: GetLeapMonth(Int32, Int32)
  fullName: System.Globalization.EastAsianLunisolarCalendar.GetLeapMonth(System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Globalization/EastAsianLunisolarCalendar.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: GetLeapMonth
    path: src/mscorlib/src/System/Globalization/EastAsianLunisolarCalendar.cs
    startLine: 584
  assemblies:
  - System.Globalization.Calendars
  namespace: System.Globalization
  summary: "\n<p>Calculates the leap month for the specified year and era.</p>\n"
  remarks: "\n<p>In a calendar that supports a leap month, the leap month can occur either after a particular month or after any month in a year. For example, the <xref href=\"System.Globalization.EastAsianLunisolarCalendar.GetMonth(System.DateTime)\" data-throw-if-not-resolved=\"false\"></xref> method returns a number from 1 through 13 that indicates the month associated with a specified date. If there is a leap month between the eighth and ninth months of the year, the <xref href=\"System.Globalization.EastAsianLunisolarCalendar.GetMonth(System.DateTime)\" data-throw-if-not-resolved=\"false\"></xref> method returns 8 for the eighth month, 9 for the leap eighth month, and 10 for the ninth month.</p>\n"
  example:
  - 
  syntax:
    content: public override int GetLeapMonth(int year, int era)
    content.vb: Public Overrides Function GetLeapMonth(year As Integer, era As Integer) As Integer
    parameters:
    - id: year
      type: System.Int32
    - id: era
      type: System.Int32
    return:
      type: System.Int32
  overridden: System.Globalization.Calendar.GetLeapMonth(System.Int32,System.Int32)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Globalization.EastAsianLunisolarCalendar.GetMonth(System.DateTime)
  commentId: M:System.Globalization.EastAsianLunisolarCalendar.GetMonth(System.DateTime)
  id: GetMonth(System.DateTime)
  parent: System.Globalization.EastAsianLunisolarCalendar
  langs:
  - csharp
  - vb
  name: GetMonth(DateTime)
  fullName: System.Globalization.EastAsianLunisolarCalendar.GetMonth(System.DateTime)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Globalization/EastAsianLunisolarCalendar.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: GetMonth
    path: src/mscorlib/src/System/Globalization/EastAsianLunisolarCalendar.cs
    startLine: 513
  assemblies:
  - System.Globalization.Calendars
  namespace: System.Globalization
  summary: "\n<p>Returns the month in the specified date.</p>\n"
  example:
  - 
  syntax:
    content: public override int GetMonth(DateTime time)
    content.vb: Public Overrides Function GetMonth(time As Date) As Integer
    parameters:
    - id: time
      type: System.DateTime
    return:
      type: System.Int32
  overridden: System.Globalization.Calendar.GetMonth(System.DateTime)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Globalization.EastAsianLunisolarCalendar.GetMonthsInYear(System.Int32,System.Int32)
  commentId: M:System.Globalization.EastAsianLunisolarCalendar.GetMonthsInYear(System.Int32,System.Int32)
  id: GetMonthsInYear(System.Int32,System.Int32)
  parent: System.Globalization.EastAsianLunisolarCalendar
  langs:
  - csharp
  - vb
  name: GetMonthsInYear(Int32, Int32)
  fullName: System.Globalization.EastAsianLunisolarCalendar.GetMonthsInYear(System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Globalization/EastAsianLunisolarCalendar.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: GetMonthsInYear
    path: src/mscorlib/src/System/Globalization/EastAsianLunisolarCalendar.cs
    startLine: 548
  assemblies:
  - System.Globalization.Calendars
  namespace: System.Globalization
  summary: "\n<p>Calculates the number of months in the specified year and era.</p>\n"
  example:
  - 
  syntax:
    content: public override int GetMonthsInYear(int year, int era)
    content.vb: Public Overrides Function GetMonthsInYear(year As Integer, era As Integer) As Integer
    parameters:
    - id: year
      type: System.Int32
    - id: era
      type: System.Int32
    return:
      type: System.Int32
  overridden: System.Globalization.Calendar.GetMonthsInYear(System.Int32,System.Int32)
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>\n<em>year</em> or <em>era</em> is outside the range supported by this calendar. </p>\n"
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Globalization.EastAsianLunisolarCalendar.GetSexagenaryYear(System.DateTime)
  commentId: M:System.Globalization.EastAsianLunisolarCalendar.GetSexagenaryYear(System.DateTime)
  id: GetSexagenaryYear(System.DateTime)
  parent: System.Globalization.EastAsianLunisolarCalendar
  langs:
  - csharp
  - vb
  name: GetSexagenaryYear(DateTime)
  fullName: System.Globalization.EastAsianLunisolarCalendar.GetSexagenaryYear(System.DateTime)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Globalization/EastAsianLunisolarCalendar.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: GetSexagenaryYear
    path: src/mscorlib/src/System/Globalization/EastAsianLunisolarCalendar.cs
    startLine: 51
  assemblies:
  - System.Globalization.Calendars
  namespace: System.Globalization
  summary: "\n<p>Calculates the year in the sexagenary (60-year) cycle that corresponds to the specified date.</p>\n"
  example:
  - 
  syntax:
    content: public virtual int GetSexagenaryYear(DateTime time)
    content.vb: Public Overridable Function GetSexagenaryYear(time As Date) As Integer
    parameters:
    - id: time
      type: System.DateTime
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Globalization.EastAsianLunisolarCalendar.GetTerrestrialBranch(System.Int32)
  commentId: M:System.Globalization.EastAsianLunisolarCalendar.GetTerrestrialBranch(System.Int32)
  id: GetTerrestrialBranch(System.Int32)
  parent: System.Globalization.EastAsianLunisolarCalendar
  langs:
  - csharp
  - vb
  name: GetTerrestrialBranch(Int32)
  fullName: System.Globalization.EastAsianLunisolarCalendar.GetTerrestrialBranch(System.Int32)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Globalization/EastAsianLunisolarCalendar.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: GetTerrestrialBranch
    path: src/mscorlib/src/System/Globalization/EastAsianLunisolarCalendar.cs
    startLine: 79
  assemblies:
  - System.Globalization.Calendars
  namespace: System.Globalization
  summary: "\n<p>Calculates the terrestrial branch of the specified year in the sexagenary (60-year) cycle.</p>\n"
  example:
  - 
  syntax:
    content: public int GetTerrestrialBranch(int sexagenaryYear)
    content.vb: Public Function GetTerrestrialBranch(sexagenaryYear As Integer) As Integer
    parameters:
    - id: sexagenaryYear
      type: System.Int32
    return:
      type: System.Int32
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>\n<em>sexagenaryYear</em> is less than 1 or greater than 60.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Globalization.EastAsianLunisolarCalendar.GetYear(System.DateTime)
  commentId: M:System.Globalization.EastAsianLunisolarCalendar.GetYear(System.DateTime)
  id: GetYear(System.DateTime)
  parent: System.Globalization.EastAsianLunisolarCalendar
  langs:
  - csharp
  - vb
  name: GetYear(DateTime)
  fullName: System.Globalization.EastAsianLunisolarCalendar.GetYear(System.DateTime)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Globalization/EastAsianLunisolarCalendar.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: GetYear
    path: src/mscorlib/src/System/Globalization/EastAsianLunisolarCalendar.cs
    startLine: 526
  assemblies:
  - System.Globalization.Calendars
  namespace: System.Globalization
  summary: "\n<p>Returns the year in the specified date.</p>\n"
  example:
  - 
  syntax:
    content: public override int GetYear(DateTime time)
    content.vb: Public Overrides Function GetYear(time As Date) As Integer
    parameters:
    - id: time
      type: System.DateTime
    return:
      type: System.Int32
  overridden: System.Globalization.Calendar.GetYear(System.DateTime)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Globalization.EastAsianLunisolarCalendar.IsLeapDay(System.Int32,System.Int32,System.Int32,System.Int32)
  commentId: M:System.Globalization.EastAsianLunisolarCalendar.IsLeapDay(System.Int32,System.Int32,System.Int32,System.Int32)
  id: IsLeapDay(System.Int32,System.Int32,System.Int32,System.Int32)
  parent: System.Globalization.EastAsianLunisolarCalendar
  langs:
  - csharp
  - vb
  name: IsLeapDay(Int32, Int32, Int32, Int32)
  fullName: System.Globalization.EastAsianLunisolarCalendar.IsLeapDay(System.Int32, System.Int32, System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Globalization/EastAsianLunisolarCalendar.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: IsLeapDay
    path: src/mscorlib/src/System/Globalization/EastAsianLunisolarCalendar.cs
    startLine: 557
  assemblies:
  - System.Globalization.Calendars
  namespace: System.Globalization
  summary: "\n<p>Determines whether the specified date in the specified era is a leap day.</p>\n"
  example:
  - 
  syntax:
    content: public override bool IsLeapDay(int year, int month, int day, int era)
    content.vb: Public Overrides Function IsLeapDay(year As Integer, month As Integer, day As Integer, era As Integer) As Boolean
    parameters:
    - id: year
      type: System.Int32
    - id: month
      type: System.Int32
    - id: day
      type: System.Int32
    - id: era
      type: System.Int32
    return:
      type: System.Boolean
  overridden: System.Globalization.Calendar.IsLeapDay(System.Int32,System.Int32,System.Int32,System.Int32)
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>\n<em>year</em>, <em>month</em>, <em>day</em>, or <em>era</em> is outside the range supported by this calendar. </p>\n"
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Globalization.EastAsianLunisolarCalendar.IsLeapMonth(System.Int32,System.Int32,System.Int32)
  commentId: M:System.Globalization.EastAsianLunisolarCalendar.IsLeapMonth(System.Int32,System.Int32,System.Int32)
  id: IsLeapMonth(System.Int32,System.Int32,System.Int32)
  parent: System.Globalization.EastAsianLunisolarCalendar
  langs:
  - csharp
  - vb
  name: IsLeapMonth(Int32, Int32, Int32)
  fullName: System.Globalization.EastAsianLunisolarCalendar.IsLeapMonth(System.Int32, System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Globalization/EastAsianLunisolarCalendar.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: IsLeapMonth
    path: src/mscorlib/src/System/Globalization/EastAsianLunisolarCalendar.cs
    startLine: 574
  assemblies:
  - System.Globalization.Calendars
  namespace: System.Globalization
  summary: "\n<p>Determines whether the specified month in the specified year and era is a leap month.</p>\n"
  example:
  - 
  syntax:
    content: public override bool IsLeapMonth(int year, int month, int era)
    content.vb: Public Overrides Function IsLeapMonth(year As Integer, month As Integer, era As Integer) As Boolean
    parameters:
    - id: year
      type: System.Int32
    - id: month
      type: System.Int32
    - id: era
      type: System.Int32
    return:
      type: System.Boolean
  overridden: System.Globalization.Calendar.IsLeapMonth(System.Int32,System.Int32,System.Int32)
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>\n<em>year</em>, <em>month</em>, or <em>era</em> is outside the range supported by this calendar. </p>\n"
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Globalization.EastAsianLunisolarCalendar.IsLeapYear(System.Int32,System.Int32)
  commentId: M:System.Globalization.EastAsianLunisolarCalendar.IsLeapYear(System.Int32,System.Int32)
  id: IsLeapYear(System.Int32,System.Int32)
  parent: System.Globalization.EastAsianLunisolarCalendar
  langs:
  - csharp
  - vb
  name: IsLeapYear(Int32, Int32)
  fullName: System.Globalization.EastAsianLunisolarCalendar.IsLeapYear(System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Globalization/EastAsianLunisolarCalendar.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: IsLeapYear
    path: src/mscorlib/src/System/Globalization/EastAsianLunisolarCalendar.cs
    startLine: 601
  assemblies:
  - System.Globalization.Calendars
  namespace: System.Globalization
  summary: "\n<p>Determines whether the specified year in the specified era is a leap year.</p>\n"
  example:
  - 
  syntax:
    content: public override bool IsLeapYear(int year, int era)
    content.vb: Public Overrides Function IsLeapYear(year As Integer, era As Integer) As Boolean
    parameters:
    - id: year
      type: System.Int32
    - id: era
      type: System.Int32
    return:
      type: System.Boolean
  overridden: System.Globalization.Calendar.IsLeapYear(System.Int32,System.Int32)
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>\n<em>year</em> or <em>era</em> is outside the range supported by this calendar. </p>\n"
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Globalization.EastAsianLunisolarCalendar.ToDateTime(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  commentId: M:System.Globalization.EastAsianLunisolarCalendar.ToDateTime(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  id: ToDateTime(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  parent: System.Globalization.EastAsianLunisolarCalendar
  langs:
  - csharp
  - vb
  name: ToDateTime(Int32, Int32, Int32, Int32, Int32, Int32, Int32, Int32)
  fullName: System.Globalization.EastAsianLunisolarCalendar.ToDateTime(System.Int32, System.Int32, System.Int32, System.Int32, System.Int32, System.Int32, System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Globalization/EastAsianLunisolarCalendar.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToDateTime
    path: src/mscorlib/src/System/Globalization/EastAsianLunisolarCalendar.cs
    startLine: 232
  assemblies:
  - System.Globalization.Calendars
  namespace: System.Globalization
  summary: "\n<p>Returns a <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> that is set to the specified date, time, and era.</p>\n"
  remarks: "\n<p>The <xref href=\"System.Globalization.EastAsianLunisolarCalendar.ToDateTime(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)\" data-throw-if-not-resolved=\"false\"></xref> method can convert any date in the current calendar to a Gregorian calendar date. The Gregorian date can subsequently be used, for example, to compare dates in different calendars or create an equivalent date in a particular calendar.</p>\n"
  example:
  - 
  syntax:
    content: public override DateTime ToDateTime(int year, int month, int day, int hour, int minute, int second, int millisecond, int era)
    content.vb: Public Overrides Function ToDateTime(year As Integer, month As Integer, day As Integer, hour As Integer, minute As Integer, second As Integer, millisecond As Integer, era As Integer) As Date
    parameters:
    - id: year
      type: System.Int32
    - id: month
      type: System.Int32
    - id: day
      type: System.Int32
    - id: hour
      type: System.Int32
    - id: minute
      type: System.Int32
    - id: second
      type: System.Int32
    - id: millisecond
      type: System.Int32
    - id: era
      type: System.Int32
    return:
      type: System.DateTime
  overridden: System.Globalization.Calendar.ToDateTime(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>\n<em>year</em>, <em>month</em>, <em>day</em>, <em>hour</em>, <em>minute</em>, <em>second</em>, <em>millisecond</em>, or <em>era</em> is outside the range supported by this calendar. </p>\n"
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Globalization.EastAsianLunisolarCalendar.ToFourDigitYear(System.Int32)
  commentId: M:System.Globalization.EastAsianLunisolarCalendar.ToFourDigitYear(System.Int32)
  id: ToFourDigitYear(System.Int32)
  parent: System.Globalization.EastAsianLunisolarCalendar
  langs:
  - csharp
  - vb
  name: ToFourDigitYear(Int32)
  fullName: System.Globalization.EastAsianLunisolarCalendar.ToFourDigitYear(System.Int32)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Globalization/EastAsianLunisolarCalendar.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToFourDigitYear
    path: src/mscorlib/src/System/Globalization/EastAsianLunisolarCalendar.cs
    startLine: 630
  assemblies:
  - System.Globalization.Calendars
  namespace: System.Globalization
  summary: "\n<p>Converts the specified year to a four-digit year.</p>\n"
  remarks: "\n<p>The <xref href=\"System.Globalization.EastAsianLunisolarCalendar.ToFourDigitYear(System.Int32)\" data-throw-if-not-resolved=\"false\"></xref> method uses the <xref href=\"System.Globalization.EastAsianLunisolarCalendar.TwoDigitYearMax\" data-throw-if-not-resolved=\"false\"></xref> property to determine the appropriate century.</p>\n<p>\n<xref href=\"System.Globalization.EastAsianLunisolarCalendar.ToFourDigitYear(System.Int32)\" data-throw-if-not-resolved=\"false\"></xref> supports either a two-digit year or a four-digit year. Passing a two-digit year value (less than 100) causes the method to convert the value to a four-digit value according to the <xref href=\"System.Globalization.EastAsianLunisolarCalendar.TwoDigitYearMax\" data-throw-if-not-resolved=\"false\"></xref> value representing the appropriate century. If the application supplies a four-digit year value that is within the supported calendar range to <xref href=\"System.Globalization.EastAsianLunisolarCalendar.ToFourDigitYear(System.Int32)\" data-throw-if-not-resolved=\"false\"></xref>, the method returns the actual input value. If the application supplies a four-digit value that is outside the supported calendar range, or if it supplies a negative value, the method throws an exception.</p>\n"
  example:
  - 
  syntax:
    content: public override int ToFourDigitYear(int year)
    content.vb: Public Overrides Function ToFourDigitYear(year As Integer) As Integer
    parameters:
    - id: year
      type: System.Int32
    return:
      type: System.Int32
  overridden: System.Globalization.Calendar.ToFourDigitYear(System.Int32)
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>\n<em>year</em> is outside the range supported by this calendar. </p>\n"
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: System.Globalization
  isExternal: false
  name: System.Globalization
  fullName: System.Globalization
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System.Globalization.Calendar
  parent: System.Globalization
  isExternal: false
  name: Calendar
  fullName: System.Globalization.Calendar
- uid: System.ICloneable
  parent: System
  isExternal: true
  name: ICloneable
  fullName: System.ICloneable
- uid: System.Globalization.Calendar.CurrentEra
  parent: System.Globalization.Calendar
  isExternal: true
  name: CurrentEra
  fullName: System.Globalization.Calendar.CurrentEra
- uid: System.Globalization.Calendar.Clone
  parent: System.Globalization.Calendar
  isExternal: true
  name: Clone()
  fullName: System.Globalization.Calendar.Clone()
  spec.csharp:
  - uid: System.Globalization.Calendar.Clone
    name: Clone
    fullName: System.Globalization.Calendar.Clone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Globalization.Calendar.Clone
    name: Clone
    fullName: System.Globalization.Calendar.Clone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Globalization.Calendar.ReadOnly(System.Globalization.Calendar)
  parent: System.Globalization.Calendar
  isExternal: true
  name: ReadOnly(Calendar)
  fullName: System.Globalization.Calendar.ReadOnly(System.Globalization.Calendar)
  spec.csharp:
  - uid: System.Globalization.Calendar.ReadOnly(System.Globalization.Calendar)
    name: ReadOnly
    fullName: System.Globalization.Calendar.ReadOnly
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Globalization.Calendar
    name: Calendar
    fullName: System.Globalization.Calendar
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Globalization.Calendar.ReadOnly(System.Globalization.Calendar)
    name: ReadOnly
    fullName: System.Globalization.Calendar.ReadOnly
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Globalization.Calendar
    name: Calendar
    fullName: System.Globalization.Calendar
    isExternal: true
  - name: )
    fullName: )
- uid: System.Globalization.Calendar.AddMilliseconds(System.DateTime,System.Double)
  parent: System.Globalization.Calendar
  isExternal: true
  name: AddMilliseconds(DateTime, Double)
  fullName: System.Globalization.Calendar.AddMilliseconds(System.DateTime, System.Double)
  spec.csharp:
  - uid: System.Globalization.Calendar.AddMilliseconds(System.DateTime,System.Double)
    name: AddMilliseconds
    fullName: System.Globalization.Calendar.AddMilliseconds
    isExternal: true
  - name: (
    fullName: (
  - uid: System.DateTime
    name: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    fullName: System.Double
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Globalization.Calendar.AddMilliseconds(System.DateTime,System.Double)
    name: AddMilliseconds
    fullName: System.Globalization.Calendar.AddMilliseconds
    isExternal: true
  - name: (
    fullName: (
  - uid: System.DateTime
    name: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    fullName: System.Double
    isExternal: true
  - name: )
    fullName: )
- uid: System.Globalization.Calendar.AddDays(System.DateTime,System.Int32)
  parent: System.Globalization.Calendar
  isExternal: true
  name: AddDays(DateTime, Int32)
  fullName: System.Globalization.Calendar.AddDays(System.DateTime, System.Int32)
  spec.csharp:
  - uid: System.Globalization.Calendar.AddDays(System.DateTime,System.Int32)
    name: AddDays
    fullName: System.Globalization.Calendar.AddDays
    isExternal: true
  - name: (
    fullName: (
  - uid: System.DateTime
    name: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Globalization.Calendar.AddDays(System.DateTime,System.Int32)
    name: AddDays
    fullName: System.Globalization.Calendar.AddDays
    isExternal: true
  - name: (
    fullName: (
  - uid: System.DateTime
    name: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
- uid: System.Globalization.Calendar.AddHours(System.DateTime,System.Int32)
  parent: System.Globalization.Calendar
  isExternal: true
  name: AddHours(DateTime, Int32)
  fullName: System.Globalization.Calendar.AddHours(System.DateTime, System.Int32)
  spec.csharp:
  - uid: System.Globalization.Calendar.AddHours(System.DateTime,System.Int32)
    name: AddHours
    fullName: System.Globalization.Calendar.AddHours
    isExternal: true
  - name: (
    fullName: (
  - uid: System.DateTime
    name: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Globalization.Calendar.AddHours(System.DateTime,System.Int32)
    name: AddHours
    fullName: System.Globalization.Calendar.AddHours
    isExternal: true
  - name: (
    fullName: (
  - uid: System.DateTime
    name: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
- uid: System.Globalization.Calendar.AddMinutes(System.DateTime,System.Int32)
  parent: System.Globalization.Calendar
  isExternal: true
  name: AddMinutes(DateTime, Int32)
  fullName: System.Globalization.Calendar.AddMinutes(System.DateTime, System.Int32)
  spec.csharp:
  - uid: System.Globalization.Calendar.AddMinutes(System.DateTime,System.Int32)
    name: AddMinutes
    fullName: System.Globalization.Calendar.AddMinutes
    isExternal: true
  - name: (
    fullName: (
  - uid: System.DateTime
    name: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Globalization.Calendar.AddMinutes(System.DateTime,System.Int32)
    name: AddMinutes
    fullName: System.Globalization.Calendar.AddMinutes
    isExternal: true
  - name: (
    fullName: (
  - uid: System.DateTime
    name: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
- uid: System.Globalization.Calendar.AddSeconds(System.DateTime,System.Int32)
  parent: System.Globalization.Calendar
  isExternal: true
  name: AddSeconds(DateTime, Int32)
  fullName: System.Globalization.Calendar.AddSeconds(System.DateTime, System.Int32)
  spec.csharp:
  - uid: System.Globalization.Calendar.AddSeconds(System.DateTime,System.Int32)
    name: AddSeconds
    fullName: System.Globalization.Calendar.AddSeconds
    isExternal: true
  - name: (
    fullName: (
  - uid: System.DateTime
    name: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Globalization.Calendar.AddSeconds(System.DateTime,System.Int32)
    name: AddSeconds
    fullName: System.Globalization.Calendar.AddSeconds
    isExternal: true
  - name: (
    fullName: (
  - uid: System.DateTime
    name: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
- uid: System.Globalization.Calendar.AddWeeks(System.DateTime,System.Int32)
  parent: System.Globalization.Calendar
  isExternal: true
  name: AddWeeks(DateTime, Int32)
  fullName: System.Globalization.Calendar.AddWeeks(System.DateTime, System.Int32)
  spec.csharp:
  - uid: System.Globalization.Calendar.AddWeeks(System.DateTime,System.Int32)
    name: AddWeeks
    fullName: System.Globalization.Calendar.AddWeeks
    isExternal: true
  - name: (
    fullName: (
  - uid: System.DateTime
    name: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Globalization.Calendar.AddWeeks(System.DateTime,System.Int32)
    name: AddWeeks
    fullName: System.Globalization.Calendar.AddWeeks
    isExternal: true
  - name: (
    fullName: (
  - uid: System.DateTime
    name: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
- uid: System.Globalization.Calendar.GetDaysInMonth(System.Int32,System.Int32)
  parent: System.Globalization.Calendar
  isExternal: true
  name: GetDaysInMonth(Int32, Int32)
  fullName: System.Globalization.Calendar.GetDaysInMonth(System.Int32, System.Int32)
  spec.csharp:
  - uid: System.Globalization.Calendar.GetDaysInMonth(System.Int32,System.Int32)
    name: GetDaysInMonth
    fullName: System.Globalization.Calendar.GetDaysInMonth
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Globalization.Calendar.GetDaysInMonth(System.Int32,System.Int32)
    name: GetDaysInMonth
    fullName: System.Globalization.Calendar.GetDaysInMonth
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
- uid: System.Globalization.Calendar.GetDaysInYear(System.Int32)
  parent: System.Globalization.Calendar
  isExternal: true
  name: GetDaysInYear(Int32)
  fullName: System.Globalization.Calendar.GetDaysInYear(System.Int32)
  spec.csharp:
  - uid: System.Globalization.Calendar.GetDaysInYear(System.Int32)
    name: GetDaysInYear
    fullName: System.Globalization.Calendar.GetDaysInYear
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Globalization.Calendar.GetDaysInYear(System.Int32)
    name: GetDaysInYear
    fullName: System.Globalization.Calendar.GetDaysInYear
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
- uid: System.Globalization.Calendar.GetEra(System.DateTime)
  parent: System.Globalization.Calendar
  isExternal: true
  name: GetEra(DateTime)
  fullName: System.Globalization.Calendar.GetEra(System.DateTime)
  spec.csharp:
  - uid: System.Globalization.Calendar.GetEra(System.DateTime)
    name: GetEra
    fullName: System.Globalization.Calendar.GetEra
    isExternal: true
  - name: (
    fullName: (
  - uid: System.DateTime
    name: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Globalization.Calendar.GetEra(System.DateTime)
    name: GetEra
    fullName: System.Globalization.Calendar.GetEra
    isExternal: true
  - name: (
    fullName: (
  - uid: System.DateTime
    name: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: )
    fullName: )
- uid: System.Globalization.Calendar.GetHour(System.DateTime)
  parent: System.Globalization.Calendar
  isExternal: true
  name: GetHour(DateTime)
  fullName: System.Globalization.Calendar.GetHour(System.DateTime)
  spec.csharp:
  - uid: System.Globalization.Calendar.GetHour(System.DateTime)
    name: GetHour
    fullName: System.Globalization.Calendar.GetHour
    isExternal: true
  - name: (
    fullName: (
  - uid: System.DateTime
    name: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Globalization.Calendar.GetHour(System.DateTime)
    name: GetHour
    fullName: System.Globalization.Calendar.GetHour
    isExternal: true
  - name: (
    fullName: (
  - uid: System.DateTime
    name: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: )
    fullName: )
- uid: System.Globalization.Calendar.GetMilliseconds(System.DateTime)
  parent: System.Globalization.Calendar
  isExternal: true
  name: GetMilliseconds(DateTime)
  fullName: System.Globalization.Calendar.GetMilliseconds(System.DateTime)
  spec.csharp:
  - uid: System.Globalization.Calendar.GetMilliseconds(System.DateTime)
    name: GetMilliseconds
    fullName: System.Globalization.Calendar.GetMilliseconds
    isExternal: true
  - name: (
    fullName: (
  - uid: System.DateTime
    name: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Globalization.Calendar.GetMilliseconds(System.DateTime)
    name: GetMilliseconds
    fullName: System.Globalization.Calendar.GetMilliseconds
    isExternal: true
  - name: (
    fullName: (
  - uid: System.DateTime
    name: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: )
    fullName: )
- uid: System.Globalization.Calendar.GetMinute(System.DateTime)
  parent: System.Globalization.Calendar
  isExternal: true
  name: GetMinute(DateTime)
  fullName: System.Globalization.Calendar.GetMinute(System.DateTime)
  spec.csharp:
  - uid: System.Globalization.Calendar.GetMinute(System.DateTime)
    name: GetMinute
    fullName: System.Globalization.Calendar.GetMinute
    isExternal: true
  - name: (
    fullName: (
  - uid: System.DateTime
    name: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Globalization.Calendar.GetMinute(System.DateTime)
    name: GetMinute
    fullName: System.Globalization.Calendar.GetMinute
    isExternal: true
  - name: (
    fullName: (
  - uid: System.DateTime
    name: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: )
    fullName: )
- uid: System.Globalization.Calendar.GetMonthsInYear(System.Int32)
  parent: System.Globalization.Calendar
  isExternal: true
  name: GetMonthsInYear(Int32)
  fullName: System.Globalization.Calendar.GetMonthsInYear(System.Int32)
  spec.csharp:
  - uid: System.Globalization.Calendar.GetMonthsInYear(System.Int32)
    name: GetMonthsInYear
    fullName: System.Globalization.Calendar.GetMonthsInYear
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Globalization.Calendar.GetMonthsInYear(System.Int32)
    name: GetMonthsInYear
    fullName: System.Globalization.Calendar.GetMonthsInYear
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
- uid: System.Globalization.Calendar.GetSecond(System.DateTime)
  parent: System.Globalization.Calendar
  isExternal: true
  name: GetSecond(DateTime)
  fullName: System.Globalization.Calendar.GetSecond(System.DateTime)
  spec.csharp:
  - uid: System.Globalization.Calendar.GetSecond(System.DateTime)
    name: GetSecond
    fullName: System.Globalization.Calendar.GetSecond
    isExternal: true
  - name: (
    fullName: (
  - uid: System.DateTime
    name: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Globalization.Calendar.GetSecond(System.DateTime)
    name: GetSecond
    fullName: System.Globalization.Calendar.GetSecond
    isExternal: true
  - name: (
    fullName: (
  - uid: System.DateTime
    name: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: )
    fullName: )
- uid: System.Globalization.Calendar.GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)
  parent: System.Globalization.Calendar
  isExternal: true
  name: GetWeekOfYear(DateTime, CalendarWeekRule, DayOfWeek)
  fullName: System.Globalization.Calendar.GetWeekOfYear(System.DateTime, System.Globalization.CalendarWeekRule, System.DayOfWeek)
  spec.csharp:
  - uid: System.Globalization.Calendar.GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)
    name: GetWeekOfYear
    fullName: System.Globalization.Calendar.GetWeekOfYear
    isExternal: true
  - name: (
    fullName: (
  - uid: System.DateTime
    name: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Globalization.CalendarWeekRule
    name: CalendarWeekRule
    fullName: System.Globalization.CalendarWeekRule
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.DayOfWeek
    name: DayOfWeek
    fullName: System.DayOfWeek
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Globalization.Calendar.GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)
    name: GetWeekOfYear
    fullName: System.Globalization.Calendar.GetWeekOfYear
    isExternal: true
  - name: (
    fullName: (
  - uid: System.DateTime
    name: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Globalization.CalendarWeekRule
    name: CalendarWeekRule
    fullName: System.Globalization.CalendarWeekRule
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.DayOfWeek
    name: DayOfWeek
    fullName: System.DayOfWeek
    isExternal: true
  - name: )
    fullName: )
- uid: System.Globalization.Calendar.IsLeapDay(System.Int32,System.Int32,System.Int32)
  parent: System.Globalization.Calendar
  isExternal: true
  name: IsLeapDay(Int32, Int32, Int32)
  fullName: System.Globalization.Calendar.IsLeapDay(System.Int32, System.Int32, System.Int32)
  spec.csharp:
  - uid: System.Globalization.Calendar.IsLeapDay(System.Int32,System.Int32,System.Int32)
    name: IsLeapDay
    fullName: System.Globalization.Calendar.IsLeapDay
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Globalization.Calendar.IsLeapDay(System.Int32,System.Int32,System.Int32)
    name: IsLeapDay
    fullName: System.Globalization.Calendar.IsLeapDay
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
- uid: System.Globalization.Calendar.IsLeapMonth(System.Int32,System.Int32)
  parent: System.Globalization.Calendar
  isExternal: true
  name: IsLeapMonth(Int32, Int32)
  fullName: System.Globalization.Calendar.IsLeapMonth(System.Int32, System.Int32)
  spec.csharp:
  - uid: System.Globalization.Calendar.IsLeapMonth(System.Int32,System.Int32)
    name: IsLeapMonth
    fullName: System.Globalization.Calendar.IsLeapMonth
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Globalization.Calendar.IsLeapMonth(System.Int32,System.Int32)
    name: IsLeapMonth
    fullName: System.Globalization.Calendar.IsLeapMonth
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
- uid: System.Globalization.Calendar.GetLeapMonth(System.Int32)
  parent: System.Globalization.Calendar
  isExternal: true
  name: GetLeapMonth(Int32)
  fullName: System.Globalization.Calendar.GetLeapMonth(System.Int32)
  spec.csharp:
  - uid: System.Globalization.Calendar.GetLeapMonth(System.Int32)
    name: GetLeapMonth
    fullName: System.Globalization.Calendar.GetLeapMonth
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Globalization.Calendar.GetLeapMonth(System.Int32)
    name: GetLeapMonth
    fullName: System.Globalization.Calendar.GetLeapMonth
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
- uid: System.Globalization.Calendar.IsLeapYear(System.Int32)
  parent: System.Globalization.Calendar
  isExternal: true
  name: IsLeapYear(Int32)
  fullName: System.Globalization.Calendar.IsLeapYear(System.Int32)
  spec.csharp:
  - uid: System.Globalization.Calendar.IsLeapYear(System.Int32)
    name: IsLeapYear
    fullName: System.Globalization.Calendar.IsLeapYear
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Globalization.Calendar.IsLeapYear(System.Int32)
    name: IsLeapYear
    fullName: System.Globalization.Calendar.IsLeapYear
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
- uid: System.Globalization.Calendar.ToDateTime(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  parent: System.Globalization.Calendar
  isExternal: true
  name: ToDateTime(Int32, Int32, Int32, Int32, Int32, Int32, Int32)
  fullName: System.Globalization.Calendar.ToDateTime(System.Int32, System.Int32, System.Int32, System.Int32, System.Int32, System.Int32, System.Int32)
  spec.csharp:
  - uid: System.Globalization.Calendar.ToDateTime(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
    name: ToDateTime
    fullName: System.Globalization.Calendar.ToDateTime
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Globalization.Calendar.ToDateTime(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
    name: ToDateTime
    fullName: System.Globalization.Calendar.ToDateTime
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
- uid: System.Globalization.Calendar.MinSupportedDateTime
  parent: System.Globalization.Calendar
  isExternal: true
  name: MinSupportedDateTime
  fullName: System.Globalization.Calendar.MinSupportedDateTime
- uid: System.Globalization.Calendar.MaxSupportedDateTime
  parent: System.Globalization.Calendar
  isExternal: true
  name: MaxSupportedDateTime
  fullName: System.Globalization.Calendar.MaxSupportedDateTime
- uid: System.Globalization.Calendar.AlgorithmType
  parent: System.Globalization.Calendar
  isExternal: true
  name: AlgorithmType
  fullName: System.Globalization.Calendar.AlgorithmType
- uid: System.Globalization.Calendar.IsReadOnly
  parent: System.Globalization.Calendar
  isExternal: true
  name: IsReadOnly
  fullName: System.Globalization.Calendar.IsReadOnly
- uid: System.Globalization.Calendar.Eras
  parent: System.Globalization.Calendar
  isExternal: true
  name: Eras
  fullName: System.Globalization.Calendar.Eras
- uid: System.Globalization.Calendar.DaysInYearBeforeMinSupportedYear
  parent: System.Globalization.Calendar
  isExternal: true
  name: DaysInYearBeforeMinSupportedYear
  fullName: System.Globalization.Calendar.DaysInYearBeforeMinSupportedYear
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Globalization.Calendar.TwoDigitYearMax
  parent: System.Globalization.Calendar
  isExternal: true
  name: TwoDigitYearMax
  fullName: System.Globalization.Calendar.TwoDigitYearMax
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  fullName: System.Int32
- uid: System.Globalization.Calendar.AddMonths(System.DateTime,System.Int32)
  parent: System.Globalization.Calendar
  isExternal: true
  name: AddMonths(DateTime, Int32)
  fullName: System.Globalization.Calendar.AddMonths(System.DateTime, System.Int32)
  spec.csharp:
  - uid: System.Globalization.Calendar.AddMonths(System.DateTime,System.Int32)
    name: AddMonths
    fullName: System.Globalization.Calendar.AddMonths
    isExternal: true
  - name: (
    fullName: (
  - uid: System.DateTime
    name: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Globalization.Calendar.AddMonths(System.DateTime,System.Int32)
    name: AddMonths
    fullName: System.Globalization.Calendar.AddMonths
    isExternal: true
  - name: (
    fullName: (
  - uid: System.DateTime
    name: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
- uid: System.DateTime
  parent: System
  isExternal: false
  name: DateTime
  fullName: System.DateTime
- uid: System.Globalization.Calendar.AddYears(System.DateTime,System.Int32)
  parent: System.Globalization.Calendar
  isExternal: true
  name: AddYears(DateTime, Int32)
  fullName: System.Globalization.Calendar.AddYears(System.DateTime, System.Int32)
  spec.csharp:
  - uid: System.Globalization.Calendar.AddYears(System.DateTime,System.Int32)
    name: AddYears
    fullName: System.Globalization.Calendar.AddYears
    isExternal: true
  - name: (
    fullName: (
  - uid: System.DateTime
    name: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Globalization.Calendar.AddYears(System.DateTime,System.Int32)
    name: AddYears
    fullName: System.Globalization.Calendar.AddYears
    isExternal: true
  - name: (
    fullName: (
  - uid: System.DateTime
    name: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
- uid: System.Globalization.Calendar.GetDayOfMonth(System.DateTime)
  parent: System.Globalization.Calendar
  isExternal: true
  name: GetDayOfMonth(DateTime)
  fullName: System.Globalization.Calendar.GetDayOfMonth(System.DateTime)
  spec.csharp:
  - uid: System.Globalization.Calendar.GetDayOfMonth(System.DateTime)
    name: GetDayOfMonth
    fullName: System.Globalization.Calendar.GetDayOfMonth
    isExternal: true
  - name: (
    fullName: (
  - uid: System.DateTime
    name: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Globalization.Calendar.GetDayOfMonth(System.DateTime)
    name: GetDayOfMonth
    fullName: System.Globalization.Calendar.GetDayOfMonth
    isExternal: true
  - name: (
    fullName: (
  - uid: System.DateTime
    name: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: )
    fullName: )
- uid: System.Globalization.Calendar.GetDayOfWeek(System.DateTime)
  parent: System.Globalization.Calendar
  isExternal: true
  name: GetDayOfWeek(DateTime)
  fullName: System.Globalization.Calendar.GetDayOfWeek(System.DateTime)
  spec.csharp:
  - uid: System.Globalization.Calendar.GetDayOfWeek(System.DateTime)
    name: GetDayOfWeek
    fullName: System.Globalization.Calendar.GetDayOfWeek
    isExternal: true
  - name: (
    fullName: (
  - uid: System.DateTime
    name: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Globalization.Calendar.GetDayOfWeek(System.DateTime)
    name: GetDayOfWeek
    fullName: System.Globalization.Calendar.GetDayOfWeek
    isExternal: true
  - name: (
    fullName: (
  - uid: System.DateTime
    name: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: )
    fullName: )
- uid: System.DayOfWeek
  parent: System
  isExternal: false
  name: DayOfWeek
  fullName: System.DayOfWeek
- uid: System.Globalization.Calendar.GetDayOfYear(System.DateTime)
  parent: System.Globalization.Calendar
  isExternal: true
  name: GetDayOfYear(DateTime)
  fullName: System.Globalization.Calendar.GetDayOfYear(System.DateTime)
  spec.csharp:
  - uid: System.Globalization.Calendar.GetDayOfYear(System.DateTime)
    name: GetDayOfYear
    fullName: System.Globalization.Calendar.GetDayOfYear
    isExternal: true
  - name: (
    fullName: (
  - uid: System.DateTime
    name: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Globalization.Calendar.GetDayOfYear(System.DateTime)
    name: GetDayOfYear
    fullName: System.Globalization.Calendar.GetDayOfYear
    isExternal: true
  - name: (
    fullName: (
  - uid: System.DateTime
    name: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: )
    fullName: )
- uid: System.Globalization.Calendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)
  parent: System.Globalization.Calendar
  isExternal: true
  name: GetDaysInMonth(Int32, Int32, Int32)
  fullName: System.Globalization.Calendar.GetDaysInMonth(System.Int32, System.Int32, System.Int32)
  spec.csharp:
  - uid: System.Globalization.Calendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)
    name: GetDaysInMonth
    fullName: System.Globalization.Calendar.GetDaysInMonth
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Globalization.Calendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)
    name: GetDaysInMonth
    fullName: System.Globalization.Calendar.GetDaysInMonth
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
- uid: System.Globalization.Calendar.GetDaysInYear(System.Int32,System.Int32)
  parent: System.Globalization.Calendar
  isExternal: true
  name: GetDaysInYear(Int32, Int32)
  fullName: System.Globalization.Calendar.GetDaysInYear(System.Int32, System.Int32)
  spec.csharp:
  - uid: System.Globalization.Calendar.GetDaysInYear(System.Int32,System.Int32)
    name: GetDaysInYear
    fullName: System.Globalization.Calendar.GetDaysInYear
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Globalization.Calendar.GetDaysInYear(System.Int32,System.Int32)
    name: GetDaysInYear
    fullName: System.Globalization.Calendar.GetDaysInYear
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
- uid: System.Globalization.Calendar.GetLeapMonth(System.Int32,System.Int32)
  parent: System.Globalization.Calendar
  isExternal: true
  name: GetLeapMonth(Int32, Int32)
  fullName: System.Globalization.Calendar.GetLeapMonth(System.Int32, System.Int32)
  spec.csharp:
  - uid: System.Globalization.Calendar.GetLeapMonth(System.Int32,System.Int32)
    name: GetLeapMonth
    fullName: System.Globalization.Calendar.GetLeapMonth
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Globalization.Calendar.GetLeapMonth(System.Int32,System.Int32)
    name: GetLeapMonth
    fullName: System.Globalization.Calendar.GetLeapMonth
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
- uid: System.Globalization.Calendar.GetMonth(System.DateTime)
  parent: System.Globalization.Calendar
  isExternal: true
  name: GetMonth(DateTime)
  fullName: System.Globalization.Calendar.GetMonth(System.DateTime)
  spec.csharp:
  - uid: System.Globalization.Calendar.GetMonth(System.DateTime)
    name: GetMonth
    fullName: System.Globalization.Calendar.GetMonth
    isExternal: true
  - name: (
    fullName: (
  - uid: System.DateTime
    name: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Globalization.Calendar.GetMonth(System.DateTime)
    name: GetMonth
    fullName: System.Globalization.Calendar.GetMonth
    isExternal: true
  - name: (
    fullName: (
  - uid: System.DateTime
    name: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: )
    fullName: )
- uid: System.Globalization.Calendar.GetMonthsInYear(System.Int32,System.Int32)
  parent: System.Globalization.Calendar
  isExternal: true
  name: GetMonthsInYear(Int32, Int32)
  fullName: System.Globalization.Calendar.GetMonthsInYear(System.Int32, System.Int32)
  spec.csharp:
  - uid: System.Globalization.Calendar.GetMonthsInYear(System.Int32,System.Int32)
    name: GetMonthsInYear
    fullName: System.Globalization.Calendar.GetMonthsInYear
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Globalization.Calendar.GetMonthsInYear(System.Int32,System.Int32)
    name: GetMonthsInYear
    fullName: System.Globalization.Calendar.GetMonthsInYear
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
- uid: System.Globalization.Calendar.GetYear(System.DateTime)
  parent: System.Globalization.Calendar
  isExternal: true
  name: GetYear(DateTime)
  fullName: System.Globalization.Calendar.GetYear(System.DateTime)
  spec.csharp:
  - uid: System.Globalization.Calendar.GetYear(System.DateTime)
    name: GetYear
    fullName: System.Globalization.Calendar.GetYear
    isExternal: true
  - name: (
    fullName: (
  - uid: System.DateTime
    name: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Globalization.Calendar.GetYear(System.DateTime)
    name: GetYear
    fullName: System.Globalization.Calendar.GetYear
    isExternal: true
  - name: (
    fullName: (
  - uid: System.DateTime
    name: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: )
    fullName: )
- uid: System.Globalization.Calendar.IsLeapDay(System.Int32,System.Int32,System.Int32,System.Int32)
  parent: System.Globalization.Calendar
  isExternal: true
  name: IsLeapDay(Int32, Int32, Int32, Int32)
  fullName: System.Globalization.Calendar.IsLeapDay(System.Int32, System.Int32, System.Int32, System.Int32)
  spec.csharp:
  - uid: System.Globalization.Calendar.IsLeapDay(System.Int32,System.Int32,System.Int32,System.Int32)
    name: IsLeapDay
    fullName: System.Globalization.Calendar.IsLeapDay
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Globalization.Calendar.IsLeapDay(System.Int32,System.Int32,System.Int32,System.Int32)
    name: IsLeapDay
    fullName: System.Globalization.Calendar.IsLeapDay
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  fullName: System.Boolean
- uid: System.Globalization.Calendar.IsLeapMonth(System.Int32,System.Int32,System.Int32)
  parent: System.Globalization.Calendar
  isExternal: true
  name: IsLeapMonth(Int32, Int32, Int32)
  fullName: System.Globalization.Calendar.IsLeapMonth(System.Int32, System.Int32, System.Int32)
  spec.csharp:
  - uid: System.Globalization.Calendar.IsLeapMonth(System.Int32,System.Int32,System.Int32)
    name: IsLeapMonth
    fullName: System.Globalization.Calendar.IsLeapMonth
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Globalization.Calendar.IsLeapMonth(System.Int32,System.Int32,System.Int32)
    name: IsLeapMonth
    fullName: System.Globalization.Calendar.IsLeapMonth
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
- uid: System.Globalization.Calendar.IsLeapYear(System.Int32,System.Int32)
  parent: System.Globalization.Calendar
  isExternal: true
  name: IsLeapYear(Int32, Int32)
  fullName: System.Globalization.Calendar.IsLeapYear(System.Int32, System.Int32)
  spec.csharp:
  - uid: System.Globalization.Calendar.IsLeapYear(System.Int32,System.Int32)
    name: IsLeapYear
    fullName: System.Globalization.Calendar.IsLeapYear
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Globalization.Calendar.IsLeapYear(System.Int32,System.Int32)
    name: IsLeapYear
    fullName: System.Globalization.Calendar.IsLeapYear
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
- uid: System.Globalization.Calendar.ToDateTime(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  parent: System.Globalization.Calendar
  isExternal: true
  name: ToDateTime(Int32, Int32, Int32, Int32, Int32, Int32, Int32, Int32)
  fullName: System.Globalization.Calendar.ToDateTime(System.Int32, System.Int32, System.Int32, System.Int32, System.Int32, System.Int32, System.Int32, System.Int32)
  spec.csharp:
  - uid: System.Globalization.Calendar.ToDateTime(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
    name: ToDateTime
    fullName: System.Globalization.Calendar.ToDateTime
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Globalization.Calendar.ToDateTime(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
    name: ToDateTime
    fullName: System.Globalization.Calendar.ToDateTime
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
- uid: System.Globalization.Calendar.ToFourDigitYear(System.Int32)
  parent: System.Globalization.Calendar
  isExternal: true
  name: ToFourDigitYear(Int32)
  fullName: System.Globalization.Calendar.ToFourDigitYear(System.Int32)
  spec.csharp:
  - uid: System.Globalization.Calendar.ToFourDigitYear(System.Int32)
    name: ToFourDigitYear
    fullName: System.Globalization.Calendar.ToFourDigitYear
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Globalization.Calendar.ToFourDigitYear(System.Int32)
    name: ToFourDigitYear
    fullName: System.Globalization.Calendar.ToFourDigitYear
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
- uid: System.InvalidOperationException
  parent: System
  isExternal: false
  name: InvalidOperationException
  fullName: System.InvalidOperationException
- uid: System.ArgumentOutOfRangeException
  isExternal: false
  name: ArgumentOutOfRangeException
  fullName: System.ArgumentOutOfRangeException
- uid: System.ArgumentException
  parent: System
  isExternal: false
  name: ArgumentException
  fullName: System.ArgumentException
