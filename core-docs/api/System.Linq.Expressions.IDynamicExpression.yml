items:
- uid: System.Linq.Expressions.IDynamicExpression
  commentId: T:System.Linq.Expressions.IDynamicExpression
  id: IDynamicExpression
  parent: System.Linq.Expressions
  children:
  - System.Linq.Expressions.IDynamicExpression.CreateCallSite
  - System.Linq.Expressions.IDynamicExpression.DelegateType
  - System.Linq.Expressions.IDynamicExpression.Rewrite(System.Linq.Expressions.Expression[])
  langs:
  - csharp
  - vb
  name: IDynamicExpression
  fullName: System.Linq.Expressions.IDynamicExpression
  type: Interface
  source:
    remote:
      path: src/System.Linq.Expressions/src/System/Linq/Expressions/IDynamicExpression.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IDynamicExpression
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/IDynamicExpression.cs
    startLine: 6
  assemblies:
  - System.Linq.Expressions
  namespace: System.Linq.Expressions
  syntax:
    content: 'public interface IDynamicExpression : IArgumentProvider'
    content.vb: >-
      Public Interface IDynamicExpression
          Inherits IArgumentProvider
  inheritedMembers:
  - System.Linq.Expressions.IArgumentProvider.ArgumentCount
  - System.Linq.Expressions.IArgumentProvider.GetArgument(System.Int32)
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: System.Linq.Expressions.IDynamicExpression.DelegateType
  commentId: P:System.Linq.Expressions.IDynamicExpression.DelegateType
  id: DelegateType
  parent: System.Linq.Expressions.IDynamicExpression
  langs:
  - csharp
  - vb
  name: DelegateType
  fullName: System.Linq.Expressions.IDynamicExpression.DelegateType
  type: Property
  source:
    remote:
      path: src/System.Linq.Expressions/src/System/Linq/Expressions/IDynamicExpression.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: DelegateType
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/IDynamicExpression.cs
    startLine: 11
  assemblies:
  - System.Linq.Expressions
  namespace: System.Linq.Expressions
  syntax:
    content: Type DelegateType { get; }
    content.vb: ReadOnly Property DelegateType As Type
    parameters: []
    return:
      type: Type
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: System.Linq.Expressions.IDynamicExpression.CreateCallSite
  commentId: M:System.Linq.Expressions.IDynamicExpression.CreateCallSite
  id: CreateCallSite
  parent: System.Linq.Expressions.IDynamicExpression
  langs:
  - csharp
  - vb
  name: CreateCallSite()
  fullName: System.Linq.Expressions.IDynamicExpression.CreateCallSite()
  type: Method
  source:
    remote:
      path: src/System.Linq.Expressions/src/System/Linq/Expressions/IDynamicExpression.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CreateCallSite
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/IDynamicExpression.cs
    startLine: 25
  assemblies:
  - System.Linq.Expressions
  namespace: System.Linq.Expressions
  syntax:
    content: object CreateCallSite()
    content.vb: Function CreateCallSite As Object
    return:
      type: System.Object
- uid: System.Linq.Expressions.IDynamicExpression.Rewrite(System.Linq.Expressions.Expression[])
  commentId: M:System.Linq.Expressions.IDynamicExpression.Rewrite(System.Linq.Expressions.Expression[])
  id: Rewrite(System.Linq.Expressions.Expression[])
  parent: System.Linq.Expressions.IDynamicExpression
  langs:
  - csharp
  - vb
  name: Rewrite(Expression[])
  fullName: System.Linq.Expressions.IDynamicExpression.Rewrite(System.Linq.Expressions.Expression[])
  type: Method
  source:
    remote:
      path: src/System.Linq.Expressions/src/System/Linq/Expressions/IDynamicExpression.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Rewrite
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/IDynamicExpression.cs
    startLine: 20
  assemblies:
  - System.Linq.Expressions
  namespace: System.Linq.Expressions
  syntax:
    content: Expression Rewrite(Expression[] args)
    content.vb: Function Rewrite(args As Expression()) As Expression
    parameters:
    - id: args
      type: System.Linq.Expressions.Expression[]
    return:
      type: System.Linq.Expressions.Expression
  fullName.vb: System.Linq.Expressions.IDynamicExpression.Rewrite(System.Linq.Expressions.Expression())
  name.vb: Rewrite(Expression())
references:
- uid: System.Linq.Expressions
  isExternal: false
  name: System.Linq.Expressions
  fullName: System.Linq.Expressions
- uid: System.Linq.Expressions.IArgumentProvider.ArgumentCount
  parent: System.Linq.Expressions.IArgumentProvider
  isExternal: false
  name: ArgumentCount
  fullName: System.Linq.Expressions.IArgumentProvider.ArgumentCount
- uid: System.Linq.Expressions.IArgumentProvider.GetArgument(System.Int32)
  parent: System.Linq.Expressions.IArgumentProvider
  isExternal: true
  name: GetArgument(Int32)
  fullName: System.Linq.Expressions.IArgumentProvider.GetArgument(System.Int32)
  spec.csharp:
  - uid: System.Linq.Expressions.IArgumentProvider.GetArgument(System.Int32)
    name: GetArgument
    fullName: System.Linq.Expressions.IArgumentProvider.GetArgument
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.IArgumentProvider.GetArgument(System.Int32)
    name: GetArgument
    fullName: System.Linq.Expressions.IArgumentProvider.GetArgument
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
- uid: System.Linq.Expressions.IArgumentProvider
  parent: System.Linq.Expressions
  isExternal: false
  name: IArgumentProvider
  fullName: System.Linq.Expressions.IArgumentProvider
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  fullName: System.Type
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System.Linq.Expressions.Expression[]
  isExternal: false
  name: Expression[]
  fullName: System.Linq.Expressions.Expression[]
  fullname.vb: System.Linq.Expressions.Expression()
  name.vb: Expression()
  spec.csharp:
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ()
    fullName: ()
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  fullName: System.Linq.Expressions.Expression
