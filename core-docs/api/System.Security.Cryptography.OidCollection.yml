items:
- uid: System.Security.Cryptography.OidCollection
  commentId: T:System.Security.Cryptography.OidCollection
  id: OidCollection
  parent: System.Security.Cryptography
  children:
  - System.Security.Cryptography.OidCollection.#ctor
  - System.Security.Cryptography.OidCollection.Add(System.Security.Cryptography.Oid)
  - System.Security.Cryptography.OidCollection.CopyTo(System.Security.Cryptography.Oid[],System.Int32)
  - System.Security.Cryptography.OidCollection.Count
  - System.Security.Cryptography.OidCollection.GetEnumerator
  - System.Security.Cryptography.OidCollection.Item(System.Int32)
  - System.Security.Cryptography.OidCollection.Item(System.String)
  - System.Security.Cryptography.OidCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  - System.Security.Cryptography.OidCollection.System#Collections#ICollection#IsSynchronized
  - System.Security.Cryptography.OidCollection.System#Collections#ICollection#SyncRoot
  - System.Security.Cryptography.OidCollection.System#Collections#IEnumerable#GetEnumerator
  langs:
  - csharp
  - vb
  name: OidCollection
  fullName: System.Security.Cryptography.OidCollection
  type: Class
  source:
    remote:
      path: src/System.Security.Cryptography.Encoding/ref/System.Security.Cryptography.Encoding.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: OidCollection
    path: src/System.Security.Cryptography.Encoding/ref/System.Security.Cryptography.Encoding.cs
    startLine: 32
  assemblies:
  - System.Security.Cryptography.Encoding
  namespace: System.Security.Cryptography
  summary: "\n<p>Represents a collection of <xref href=\"System.Security.Cryptography.Oid\" data-throw-if-not-resolved=\"false\"></xref> objects. This class cannot be inherited.</p>\n"
  remarks: "\n<p>This class implements the <xref href=\"System.Collections.ICollection\" data-throw-if-not-resolved=\"false\"></xref> interface.</p>\n"
  example:
  - "\n<p>The following code example shows how to use the <xref href=\"System.Security.Cryptography.OidCollection\" data-throw-if-not-resolved=\"false\"></xref> class.</p>Cryptography.Oid#1"
  syntax:
    content: 'public sealed class OidCollection : ICollection, IEnumerable'
    content.vb: >-
      Public NotInheritable Class OidCollection
          Implements ICollection, IEnumerable
  inheritance:
  - System.Object
  implements:
  - System.Collections.ICollection
  - System.Collections.IEnumerable
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: System.Security.Cryptography.OidCollection.#ctor
  commentId: M:System.Security.Cryptography.OidCollection.#ctor
  id: '#ctor'
  parent: System.Security.Cryptography.OidCollection
  langs:
  - csharp
  - vb
  name: OidCollection()
  fullName: System.Security.Cryptography.OidCollection.OidCollection()
  type: Constructor
  source:
    remote:
      path: src/System.Security.Cryptography.Encoding/ref/System.Security.Cryptography.Encoding.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Security.Cryptography.Encoding/ref/System.Security.Cryptography.Encoding.cs
    startLine: 34
  assemblies:
  - System.Security.Cryptography.Encoding
  namespace: System.Security.Cryptography
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Security.Cryptography.OidCollection\" data-throw-if-not-resolved=\"false\"></xref> class.</p>\n"
  remarks: "\n<p>This is the default constructor for this class.</p>\n"
  example:
  - "\n<p>The following code example shows how to use the <xref href=\"System.Security.Cryptography.OidCollection\" data-throw-if-not-resolved=\"false\"></xref> class.</p>Cryptography.Oid#1"
  syntax:
    content: public OidCollection()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Security.Cryptography.OidCollection.Count
  commentId: P:System.Security.Cryptography.OidCollection.Count
  id: Count
  parent: System.Security.Cryptography.OidCollection
  langs:
  - csharp
  - vb
  name: Count
  fullName: System.Security.Cryptography.OidCollection.Count
  type: Property
  source:
    remote:
      path: src/System.Security.Cryptography.Encoding/ref/System.Security.Cryptography.Encoding.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Count
    path: src/System.Security.Cryptography.Encoding/ref/System.Security.Cryptography.Encoding.cs
    startLine: 35
  assemblies:
  - System.Security.Cryptography.Encoding
  namespace: System.Security.Cryptography
  summary: "\n<p>Gets the number of <xref href=\"System.Security.Cryptography.Oid\" data-throw-if-not-resolved=\"false\"></xref> objects in a collection. </p>\n"
  example:
  - "\n<p>The following code example shows how to use the <xref href=\"System.Security.Cryptography.OidCollection\" data-throw-if-not-resolved=\"false\"></xref> class.</p>Cryptography.Oid#1"
  syntax:
    content: public int Count { get; }
    content.vb: Public ReadOnly Property Count As Integer
    parameters: []
    return:
      type: System.Int32
      description: "\n<p>The number of <xref href=\"System.Security.Cryptography.Oid\" data-throw-if-not-resolved=\"false\"></xref> objects in a collection.</p>\n"
  implements:
  - System.Collections.ICollection.Count
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Security.Cryptography.OidCollection.Item(System.Int32)
  commentId: P:System.Security.Cryptography.OidCollection.Item(System.Int32)
  id: Item(System.Int32)
  parent: System.Security.Cryptography.OidCollection
  langs:
  - csharp
  - vb
  name: Item[Int32]
  fullName: System.Security.Cryptography.OidCollection.Item[System.Int32]
  type: Property
  source:
    remote:
      path: src/System.Security.Cryptography.Encoding/ref/System.Security.Cryptography.Encoding.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: this[]
    path: src/System.Security.Cryptography.Encoding/ref/System.Security.Cryptography.Encoding.cs
    startLine: 36
  assemblies:
  - System.Security.Cryptography.Encoding
  namespace: System.Security.Cryptography
  summary: "\n<p>Gets an <xref href=\"System.Security.Cryptography.Oid\" data-throw-if-not-resolved=\"false\"></xref> object from the <xref href=\"System.Security.Cryptography.OidCollection\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  remarks: "\n<p>Use this method to retrieve an <xref href=\"System.Security.Cryptography.Oid\" data-throw-if-not-resolved=\"false\"></xref> object from an <xref href=\"System.Security.Cryptography.OidCollection\" data-throw-if-not-resolved=\"false\"></xref> object, if you know its location. You can use the <xref href=\"System.Security.Cryptography.OidCollection.Item(System.String)\" data-throw-if-not-resolved=\"false\"></xref> property to retrieve an <xref href=\"System.Security.Cryptography.Oid\" data-throw-if-not-resolved=\"false\"></xref> object if you know the value of the object's <xref href=\"System.Security.Cryptography.Oid.Value\" data-throw-if-not-resolved=\"false\"></xref> property or <xref href=\"System.Security.Cryptography.Oid.FriendlyName\" data-throw-if-not-resolved=\"false\"></xref> property.</p>\n"
  example:
  - "\n<p>The following code example shows how to use the <xref href=\"System.Security.Cryptography.OidCollection\" data-throw-if-not-resolved=\"false\"></xref> class.</p>Cryptography.Oid#1"
  syntax:
    content: public Oid this[int index] { get; }
    content.vb: Public ReadOnly Property Item(index As Integer) As Oid
    parameters:
    - id: index
      type: System.Int32
      description: "\n<p>The location of the <xref href=\"System.Security.Cryptography.Oid\" data-throw-if-not-resolved=\"false\"></xref> object in the collection.</p>\n"
    return:
      type: System.Security.Cryptography.Oid
      description: "\n<p>An <xref href=\"System.Security.Cryptography.Oid\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: System.Security.Cryptography.OidCollection.Item(System.Int32)
  name.vb: Item(Int32)
- uid: System.Security.Cryptography.OidCollection.Item(System.String)
  commentId: P:System.Security.Cryptography.OidCollection.Item(System.String)
  id: Item(System.String)
  parent: System.Security.Cryptography.OidCollection
  langs:
  - csharp
  - vb
  name: Item[String]
  fullName: System.Security.Cryptography.OidCollection.Item[System.String]
  type: Property
  source:
    remote:
      path: src/System.Security.Cryptography.Encoding/ref/System.Security.Cryptography.Encoding.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: this[]
    path: src/System.Security.Cryptography.Encoding/ref/System.Security.Cryptography.Encoding.cs
    startLine: 37
  assemblies:
  - System.Security.Cryptography.Encoding
  namespace: System.Security.Cryptography
  summary: "\n<p>Gets the first <xref href=\"System.Security.Cryptography.Oid\" data-throw-if-not-resolved=\"false\"></xref> object that contains a value of the <xref href=\"System.Security.Cryptography.Oid.Value\" data-throw-if-not-resolved=\"false\"></xref> property or a value of the <xref href=\"System.Security.Cryptography.Oid.FriendlyName\" data-throw-if-not-resolved=\"false\"></xref> property that matches the specified string value from the <xref href=\"System.Security.Cryptography.OidCollection\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  remarks: "\n<p>Use this property to retrieve an <xref href=\"System.Security.Cryptography.Oid\" data-throw-if-not-resolved=\"false\"></xref> object from an <xref href=\"System.Security.Cryptography.OidCollection\" data-throw-if-not-resolved=\"false\"></xref> object if you know the value of the <xref href=\"System.Security.Cryptography.Oid.Value\" data-throw-if-not-resolved=\"false\"></xref> or <xref href=\"System.Security.Cryptography.Oid.FriendlyName\" data-throw-if-not-resolved=\"false\"></xref> property of the <xref href=\"System.Security.Cryptography.Oid\" data-throw-if-not-resolved=\"false\"></xref> object. You can use the <xref href=\"System.Security.Cryptography.OidCollection.Item(System.Int32)\" data-throw-if-not-resolved=\"false\"></xref> property to retrieve an <xref href=\"System.Security.Cryptography.Oid\" data-throw-if-not-resolved=\"false\"></xref> object if you know its location in the collection.</p>\n"
  example:
  - "\n<p>The following code example shows how to use the <xref href=\"System.Security.Cryptography.OidCollection\" data-throw-if-not-resolved=\"false\"></xref> class.</p>Cryptography.Oid#1"
  syntax:
    content: public Oid this[string oid] { get; }
    content.vb: Public ReadOnly Property Item(oid As String) As Oid
    parameters:
    - id: oid
      type: System.String
      description: "\n<p>A string that represents a <xref href=\"System.Security.Cryptography.Oid.Value\" data-throw-if-not-resolved=\"false\"></xref> property or a <xref href=\"System.Security.Cryptography.Oid.FriendlyName\" data-throw-if-not-resolved=\"false\"></xref> property.</p>\n"
    return:
      type: System.Security.Cryptography.Oid
      description: "\n<p>An <xref href=\"System.Security.Cryptography.Oid\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: System.Security.Cryptography.OidCollection.Item(System.String)
  name.vb: Item(String)
- uid: System.Security.Cryptography.OidCollection.System#Collections#ICollection#IsSynchronized
  commentId: P:System.Security.Cryptography.OidCollection.System#Collections#ICollection#IsSynchronized
  id: System#Collections#ICollection#IsSynchronized
  isEii: true
  parent: System.Security.Cryptography.OidCollection
  langs:
  - csharp
  - vb
  name: ICollection.IsSynchronized
  fullName: System.Security.Cryptography.OidCollection.System.Collections.ICollection.IsSynchronized
  type: Property
  source:
    remote:
      path: src/System.Security.Cryptography.Encoding/ref/System.Security.Cryptography.Encoding.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: System.Collections.ICollection.IsSynchronized
    path: src/System.Security.Cryptography.Encoding/ref/System.Security.Cryptography.Encoding.cs
    startLine: 38
  assemblies:
  - System.Security.Cryptography.Encoding
  namespace: System.Security.Cryptography
  syntax:
    content: bool ICollection.IsSynchronized { get; }
    content.vb: ReadOnly WriteOnly Property System.Collections.ICollection.IsSynchronized As Boolean Implements ICollection.IsSynchronized
    parameters: []
    return:
      type: System.Boolean
  implements:
  - System.Collections.ICollection.IsSynchronized
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
  name.vb: System.Collections.ICollection.IsSynchronized
- uid: System.Security.Cryptography.OidCollection.System#Collections#ICollection#SyncRoot
  commentId: P:System.Security.Cryptography.OidCollection.System#Collections#ICollection#SyncRoot
  id: System#Collections#ICollection#SyncRoot
  isEii: true
  parent: System.Security.Cryptography.OidCollection
  langs:
  - csharp
  - vb
  name: ICollection.SyncRoot
  fullName: System.Security.Cryptography.OidCollection.System.Collections.ICollection.SyncRoot
  type: Property
  source:
    remote:
      path: src/System.Security.Cryptography.Encoding/ref/System.Security.Cryptography.Encoding.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: System.Collections.ICollection.SyncRoot
    path: src/System.Security.Cryptography.Encoding/ref/System.Security.Cryptography.Encoding.cs
    startLine: 39
  assemblies:
  - System.Security.Cryptography.Encoding
  namespace: System.Security.Cryptography
  syntax:
    content: object ICollection.SyncRoot { get; }
    content.vb: ReadOnly WriteOnly Property System.Collections.ICollection.SyncRoot As Object Implements ICollection.SyncRoot
    parameters: []
    return:
      type: System.Object
  implements:
  - System.Collections.ICollection.SyncRoot
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
  name.vb: System.Collections.ICollection.SyncRoot
- uid: System.Security.Cryptography.OidCollection.Add(System.Security.Cryptography.Oid)
  commentId: M:System.Security.Cryptography.OidCollection.Add(System.Security.Cryptography.Oid)
  id: Add(System.Security.Cryptography.Oid)
  parent: System.Security.Cryptography.OidCollection
  langs:
  - csharp
  - vb
  name: Add(Oid)
  fullName: System.Security.Cryptography.OidCollection.Add(System.Security.Cryptography.Oid)
  type: Method
  source:
    remote:
      path: src/System.Security.Cryptography.Encoding/ref/System.Security.Cryptography.Encoding.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Add
    path: src/System.Security.Cryptography.Encoding/ref/System.Security.Cryptography.Encoding.cs
    startLine: 40
  assemblies:
  - System.Security.Cryptography.Encoding
  namespace: System.Security.Cryptography
  summary: "\n<p>Adds an <xref href=\"System.Security.Cryptography.Oid\" data-throw-if-not-resolved=\"false\"></xref> object to the <xref href=\"System.Security.Cryptography.OidCollection\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  remarks: "\n<p>Use this method to add an <xref href=\"System.Security.Cryptography.Oid\" data-throw-if-not-resolved=\"false\"></xref> object to an existing collection at the current location.</p>\n"
  example:
  - "\n<p>The following code example shows how to use the <xref href=\"System.Security.Cryptography.OidCollection\" data-throw-if-not-resolved=\"false\"></xref> class.</p>Cryptography.Oid#1"
  syntax:
    content: public int Add(Oid oid)
    content.vb: Public Function Add(oid As Oid) As Integer
    parameters:
    - id: oid
      type: System.Security.Cryptography.Oid
      description: "\n<p>The <xref href=\"System.Security.Cryptography.Oid\" data-throw-if-not-resolved=\"false\"></xref> object to add to the collection.</p>\n"
    return:
      type: System.Int32
      description: "\n<p>The index of the added <xref href=\"System.Security.Cryptography.Oid\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Security.Cryptography.OidCollection.CopyTo(System.Security.Cryptography.Oid[],System.Int32)
  commentId: M:System.Security.Cryptography.OidCollection.CopyTo(System.Security.Cryptography.Oid[],System.Int32)
  id: CopyTo(System.Security.Cryptography.Oid[],System.Int32)
  parent: System.Security.Cryptography.OidCollection
  langs:
  - csharp
  - vb
  name: CopyTo(Oid[], Int32)
  fullName: System.Security.Cryptography.OidCollection.CopyTo(System.Security.Cryptography.Oid[], System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Security.Cryptography.Encoding/ref/System.Security.Cryptography.Encoding.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CopyTo
    path: src/System.Security.Cryptography.Encoding/ref/System.Security.Cryptography.Encoding.cs
    startLine: 41
  assemblies:
  - System.Security.Cryptography.Encoding
  namespace: System.Security.Cryptography
  summary: "\n<p>Copies the <xref href=\"System.Security.Cryptography.OidCollection\" data-throw-if-not-resolved=\"false\"></xref> object into an array.</p>\n"
  remarks: "\n<p>This method copies an <xref href=\"System.Security.Cryptography.OidCollection\" data-throw-if-not-resolved=\"false\"></xref> object into an array at the specified location.</p>\n"
  example:
  - "\n<p>The following code example shows how to use the <xref href=\"System.Security.Cryptography.OidCollection\" data-throw-if-not-resolved=\"false\"></xref> class.</p>Cryptography.Oid#1"
  syntax:
    content: public void CopyTo(Oid[] array, int index)
    content.vb: Public Sub CopyTo(array As Oid(), index As Integer)
    parameters:
    - id: array
      type: System.Security.Cryptography.Oid[]
      description: "\n<p>The array to copy the <xref href=\"System.Security.Cryptography.OidCollection\" data-throw-if-not-resolved=\"false\"></xref> object into.</p>\n"
    - id: index
      type: System.Int32
      description: "\n<p>The location where the copy operation starts.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Security.Cryptography.OidCollection.CopyTo(System.Security.Cryptography.Oid(), System.Int32)
  name.vb: CopyTo(Oid(), Int32)
- uid: System.Security.Cryptography.OidCollection.GetEnumerator
  commentId: M:System.Security.Cryptography.OidCollection.GetEnumerator
  id: GetEnumerator
  parent: System.Security.Cryptography.OidCollection
  langs:
  - csharp
  - vb
  name: GetEnumerator()
  fullName: System.Security.Cryptography.OidCollection.GetEnumerator()
  type: Method
  source:
    remote:
      path: src/System.Security.Cryptography.Encoding/ref/System.Security.Cryptography.Encoding.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetEnumerator
    path: src/System.Security.Cryptography.Encoding/ref/System.Security.Cryptography.Encoding.cs
    startLine: 42
  assemblies:
  - System.Security.Cryptography.Encoding
  namespace: System.Security.Cryptography
  summary: "\n<p>Returns an <xref href=\"System.Security.Cryptography.OidEnumerator\" data-throw-if-not-resolved=\"false\"></xref> object that can be used to navigate the <xref href=\"System.Security.Cryptography.OidCollection\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  remarks: "\n<p>The <xref href=\"System.Security.Cryptography.OidEnumerator\" data-throw-if-not-resolved=\"false\"></xref> class implements the <xref href=\"System.Collections.IEnumerator\" data-throw-if-not-resolved=\"false\"></xref> interface, which allows you to move within a collection.</p>\n"
  example:
  - "\n<p>The following code example shows how to use the <xref href=\"System.Security.Cryptography.OidCollection\" data-throw-if-not-resolved=\"false\"></xref> class.</p>Cryptography.Oid#1"
  syntax:
    content: public OidEnumerator GetEnumerator()
    content.vb: Public Function GetEnumerator As OidEnumerator
    return:
      type: System.Security.Cryptography.OidEnumerator
      description: "\n<p>An <xref href=\"System.Security.Cryptography.OidEnumerator\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Security.Cryptography.OidCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  commentId: M:System.Security.Cryptography.OidCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  id: System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  isEii: true
  parent: System.Security.Cryptography.OidCollection
  langs:
  - csharp
  - vb
  name: ICollection.CopyTo(Array, Int32)
  fullName: System.Security.Cryptography.OidCollection.System.Collections.ICollection.CopyTo(System.Array, System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Security.Cryptography.Encoding/ref/System.Security.Cryptography.Encoding.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: System.Collections.ICollection.CopyTo
    path: src/System.Security.Cryptography.Encoding/ref/System.Security.Cryptography.Encoding.cs
    startLine: 43
  assemblies:
  - System.Security.Cryptography.Encoding
  namespace: System.Security.Cryptography
  summary: "\n<p>Copies the <xref href=\"System.Security.Cryptography.OidCollection\" data-throw-if-not-resolved=\"false\"></xref> object into an array.</p>\n"
  remarks: "\n<p>This method copies an <xref href=\"System.Security.Cryptography.OidCollection\" data-throw-if-not-resolved=\"false\"></xref> object into an array at the specified location.</p>\n"
  example:
  - 
  syntax:
    content: void ICollection.CopyTo(Array array, int index)
    content.vb: Sub System.Collections.ICollection.CopyTo(array As Array, index As Integer) Implements ICollection.CopyTo
    parameters:
    - id: array
      type: System.Array
      description: "\n<p>The array to copy the <xref href=\"System.Security.Cryptography.OidCollection\" data-throw-if-not-resolved=\"false\"></xref> object to.</p>\n"
    - id: index
      type: System.Int32
      description: "\n<p>The location where the copy operation starts.</p>\n"
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<p>\n<em>array</em> cannot be a multidimensional array.</p>\n<p>-or-</p>\n<p>\n      The length of <em>array</em> is an invalid offset length.</p>\n"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>array</em> is <strong>null</strong>.</p>\n"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>The value of <em>index</em> is out range.</p>\n"
  implements:
  - System.Collections.ICollection.CopyTo(System.Array,System.Int32)
  name.vb: System.Collections.ICollection.CopyTo(Array, Int32)
- uid: System.Security.Cryptography.OidCollection.System#Collections#IEnumerable#GetEnumerator
  commentId: M:System.Security.Cryptography.OidCollection.System#Collections#IEnumerable#GetEnumerator
  id: System#Collections#IEnumerable#GetEnumerator
  isEii: true
  parent: System.Security.Cryptography.OidCollection
  langs:
  - csharp
  - vb
  name: IEnumerable.GetEnumerator()
  fullName: System.Security.Cryptography.OidCollection.System.Collections.IEnumerable.GetEnumerator()
  type: Method
  source:
    remote:
      path: src/System.Security.Cryptography.Encoding/ref/System.Security.Cryptography.Encoding.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: System.Collections.IEnumerable.GetEnumerator
    path: src/System.Security.Cryptography.Encoding/ref/System.Security.Cryptography.Encoding.cs
    startLine: 44
  assemblies:
  - System.Security.Cryptography.Encoding
  namespace: System.Security.Cryptography
  summary: "\n<p>Returns an <xref href=\"System.Security.Cryptography.OidEnumerator\" data-throw-if-not-resolved=\"false\"></xref> object that can be used to navigate the <xref href=\"System.Security.Cryptography.OidCollection\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  remarks: "\n<p>The <xref href=\"System.Security.Cryptography.OidEnumerator\" data-throw-if-not-resolved=\"false\"></xref> class implements the <xref href=\"System.Collections.IEnumerator\" data-throw-if-not-resolved=\"false\"></xref> interface, which allows you to move within a collection.</p>\n"
  example:
  - 
  syntax:
    content: IEnumerator IEnumerable.GetEnumerator()
    content.vb: Function System.Collections.IEnumerable.GetEnumerator As IEnumerator Implements IEnumerable.GetEnumerator
    return:
      type: System.Collections.IEnumerator
      description: "\n<p>An <xref href=\"System.Security.Cryptography.OidEnumerator\" data-throw-if-not-resolved=\"false\"></xref> object that can be used to navigate the collection.</p>\n"
  implements:
  - System.Collections.IEnumerable.GetEnumerator
  name.vb: System.Collections.IEnumerable.GetEnumerator()
references:
- uid: System.Security.Cryptography
  isExternal: false
  name: System.Security.Cryptography
  fullName: System.Security.Cryptography
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System.Collections.ICollection
  parent: System.Collections
  isExternal: false
  name: ICollection
  fullName: System.Collections.ICollection
- uid: System.Collections.IEnumerable
  parent: System.Collections
  isExternal: false
  name: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Collections
  isExternal: false
  name: System.Collections
  fullName: System.Collections
- uid: System.Collections.ICollection.Count
  parent: System.Collections.ICollection
  isExternal: false
  name: Count
  fullName: System.Collections.ICollection.Count
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  fullName: System.Int32
- uid: System.Security.Cryptography.Oid
  parent: System.Security.Cryptography
  isExternal: false
  name: Oid
  fullName: System.Security.Cryptography.Oid
- uid: System.String
  parent: System
  isExternal: false
  name: String
  fullName: System.String
- uid: System.Collections.ICollection.IsSynchronized
  parent: System.Collections.ICollection
  isExternal: false
  name: IsSynchronized
  fullName: System.Collections.ICollection.IsSynchronized
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  fullName: System.Boolean
- uid: System.Collections.ICollection.SyncRoot
  parent: System.Collections.ICollection
  isExternal: false
  name: SyncRoot
  fullName: System.Collections.ICollection.SyncRoot
- uid: System.Security.Cryptography.Oid[]
  isExternal: false
  name: Oid[]
  fullName: System.Security.Cryptography.Oid[]
  fullname.vb: System.Security.Cryptography.Oid()
  name.vb: Oid()
  spec.csharp:
  - uid: System.Security.Cryptography.Oid
    name: Oid
    fullName: System.Security.Cryptography.Oid
  - name: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Security.Cryptography.Oid
    name: Oid
    fullName: System.Security.Cryptography.Oid
  - name: ()
    fullName: ()
- uid: System.Security.Cryptography.OidEnumerator
  parent: System.Security.Cryptography
  isExternal: false
  name: OidEnumerator
  fullName: System.Security.Cryptography.OidEnumerator
- uid: System.Collections.ICollection.CopyTo(System.Array,System.Int32)
  parent: System.Collections.ICollection
  isExternal: true
  name: CopyTo(Array, Int32)
  fullName: System.Collections.ICollection.CopyTo(System.Array, System.Int32)
  spec.csharp:
  - uid: System.Collections.ICollection.CopyTo(System.Array,System.Int32)
    name: CopyTo
    fullName: System.Collections.ICollection.CopyTo
  - name: (
    fullName: (
  - uid: System.Array
    name: Array
    fullName: System.Array
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ICollection.CopyTo(System.Array,System.Int32)
    name: CopyTo
    fullName: System.Collections.ICollection.CopyTo
  - name: (
    fullName: (
  - uid: System.Array
    name: Array
    fullName: System.Array
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
- uid: System.Array
  parent: System
  isExternal: false
  name: Array
  fullName: System.Array
- uid: System.Collections.IEnumerable.GetEnumerator
  parent: System.Collections.IEnumerable
  isExternal: false
  name: GetEnumerator()
  fullName: System.Collections.IEnumerable.GetEnumerator()
  spec.csharp:
  - uid: System.Collections.IEnumerable.GetEnumerator
    name: GetEnumerator
    fullName: System.Collections.IEnumerable.GetEnumerator
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Collections.IEnumerable.GetEnumerator
    name: GetEnumerator
    fullName: System.Collections.IEnumerable.GetEnumerator
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: false
  name: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.ArgumentException
  parent: System
  isExternal: false
  name: ArgumentException
  fullName: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: false
  name: ArgumentNullException
  fullName: System.ArgumentNullException
- uid: System.ArgumentOutOfRangeException
  isExternal: false
  name: ArgumentOutOfRangeException
  fullName: System.ArgumentOutOfRangeException
