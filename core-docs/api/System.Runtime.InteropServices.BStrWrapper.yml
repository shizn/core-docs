items:
- uid: System.Runtime.InteropServices.BStrWrapper
  commentId: T:System.Runtime.InteropServices.BStrWrapper
  id: BStrWrapper
  parent: System.Runtime.InteropServices
  children:
  - System.Runtime.InteropServices.BStrWrapper.#ctor(System.Object)
  - System.Runtime.InteropServices.BStrWrapper.#ctor(System.String)
  - System.Runtime.InteropServices.BStrWrapper.WrappedObject
  langs:
  - csharp
  - vb
  name: BStrWrapper
  fullName: System.Runtime.InteropServices.BStrWrapper
  type: Class
  source:
    remote:
      path: src/mscorlib/src/System/Runtime/InteropServices/BStrWrapper.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: BStrWrapper
    path: src/mscorlib/src/System/Runtime/InteropServices/BStrWrapper.cs
    startLine: 19
  assemblies:
  - System.Runtime.InteropServices
  namespace: System.Runtime.InteropServices
  summary: "\n<p>Marshals data of type <strong>VT_BSTR</strong> from managed to unmanaged code. This class cannot be inherited.</p>\n"
  remarks: "\n<p>The <xref href=\"System.Runtime.InteropServices.BStrWrapper\" data-throw-if-not-resolved=\"false\"></xref> class controls how the wrapped object is marshaled when passed as <strong>VARIANT</strong>. You can wrap a <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref> object in a <xref href=\"System.Runtime.InteropServices.BStrWrapper\" data-throw-if-not-resolved=\"false\"></xref> object to marshal it as <strong>VT_BSTR</strong>. <xref href=\"System.Runtime.InteropServices.BStrWrapper\" data-throw-if-not-resolved=\"false\"></xref> is useful when passing a null string to unmanaged code. Without <xref href=\"System.Runtime.InteropServices.BStrWrapper\" data-throw-if-not-resolved=\"false\"></xref>, a null string is passed as <strong>VT_EMPTY</strong>; however, wrapping the string with <xref href=\"System.Runtime.InteropServices.BStrWrapper\" data-throw-if-not-resolved=\"false\"></xref> ensures that the null string is passed as <strong>VT_BSTR</strong>.</p>\n"
  example:
  - 
  syntax:
    content: >-
      [Serializable]

      [ComVisible(true)]

      public sealed class BStrWrapper
    content.vb: >-
      <Serializable>

      <ComVisible(True)>

      Public NotInheritable Class BStrWrapper
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: BStrWrapper and support for marshalling to the VARIANT type may be unavailable in future releases.
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: System.Runtime.InteropServices.BStrWrapper.#ctor(System.Object)
  commentId: M:System.Runtime.InteropServices.BStrWrapper.#ctor(System.Object)
  id: '#ctor(System.Object)'
  parent: System.Runtime.InteropServices.BStrWrapper
  langs:
  - csharp
  - vb
  name: BStrWrapper(Object)
  fullName: System.Runtime.InteropServices.BStrWrapper.BStrWrapper(System.Object)
  type: Constructor
  source:
    remote:
      path: src/mscorlib/src/System/Runtime/InteropServices/BStrWrapper.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: .ctor
    path: src/mscorlib/src/System/Runtime/InteropServices/BStrWrapper.cs
    startLine: 32
  assemblies:
  - System.Runtime.InteropServices
  namespace: System.Runtime.InteropServices
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Runtime.InteropServices.BStrWrapper\" data-throw-if-not-resolved=\"false\"></xref> class with the specified <xref href=\"System.Object\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  syntax:
    content: >-
      [SecuritySafeCritical]

      [SecurityPermission(SecurityAction.Demand, Flags = SecurityPermissionFlag.UnmanagedCode)]

      public BStrWrapper(object value)
    content.vb: >-
      <SecuritySafeCritical>

      <SecurityPermission(SecurityAction.Demand, Flags:=SecurityPermissionFlag.UnmanagedCode)>

      Public Sub New(value As Object)
    parameters:
    - id: value
      type: System.Object
  see:
  - type: System.Security.Permissions.SecurityPermission
    commentId: T:System.Security.Permissions.SecurityPermission
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Runtime.InteropServices.BStrWrapper.#ctor(System.String)
  commentId: M:System.Runtime.InteropServices.BStrWrapper.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Runtime.InteropServices.BStrWrapper
  langs:
  - csharp
  - vb
  name: BStrWrapper(String)
  fullName: System.Runtime.InteropServices.BStrWrapper.BStrWrapper(System.String)
  type: Constructor
  source:
    remote:
      path: src/mscorlib/src/System/Runtime/InteropServices/BStrWrapper.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: .ctor
    path: src/mscorlib/src/System/Runtime/InteropServices/BStrWrapper.cs
    startLine: 23
  assemblies:
  - System.Runtime.InteropServices
  namespace: System.Runtime.InteropServices
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Runtime.InteropServices.BStrWrapper\" data-throw-if-not-resolved=\"false\"></xref> class with the specified <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  syntax:
    content: >-
      [SecuritySafeCritical]

      [SecurityPermission(SecurityAction.Demand, Flags = SecurityPermissionFlag.UnmanagedCode)]

      public BStrWrapper(string value)
    content.vb: >-
      <SecuritySafeCritical>

      <SecurityPermission(SecurityAction.Demand, Flags:=SecurityPermissionFlag.UnmanagedCode)>

      Public Sub New(value As String)
    parameters:
    - id: value
      type: System.String
  see:
  - type: System.Security.Permissions.SecurityPermission
    commentId: T:System.Security.Permissions.SecurityPermission
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Runtime.InteropServices.BStrWrapper.WrappedObject
  commentId: P:System.Runtime.InteropServices.BStrWrapper.WrappedObject
  id: WrappedObject
  parent: System.Runtime.InteropServices.BStrWrapper
  langs:
  - csharp
  - vb
  name: WrappedObject
  fullName: System.Runtime.InteropServices.BStrWrapper.WrappedObject
  type: Property
  source:
    remote:
      path: src/mscorlib/src/System/Runtime/InteropServices/BStrWrapper.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: WrappedObject
    path: src/mscorlib/src/System/Runtime/InteropServices/BStrWrapper.cs
    startLine: 41
  assemblies:
  - System.Runtime.InteropServices
  namespace: System.Runtime.InteropServices
  summary: "\n<p>Gets the wrapped <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref> object to marshal as type <strong>VT_BSTR</strong>.</p>\n"
  syntax:
    content: public string WrappedObject { get; }
    content.vb: Public ReadOnly Property WrappedObject As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: System.Runtime.InteropServices
  isExternal: false
  name: System.Runtime.InteropServices
  fullName: System.Runtime.InteropServices
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.String
  parent: System
  isExternal: false
  name: String
  fullName: System.String
