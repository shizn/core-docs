items:
- uid: System.Runtime.InteropServices.BStrWrapper
  commentId: T:System.Runtime.InteropServices.BStrWrapper
  id: BStrWrapper
  parent: System.Runtime.InteropServices
  children:
  - System.Runtime.InteropServices.BStrWrapper.#ctor(System.Object)
  - System.Runtime.InteropServices.BStrWrapper.#ctor(System.String)
  - System.Runtime.InteropServices.BStrWrapper.WrappedObject
  langs:
  - csharp
  - vb
  name: BStrWrapper
  fullName: System.Runtime.InteropServices.BStrWrapper
  type: Class
  source:
    remote:
      path: src/System.Runtime.InteropServices/ref/System.Runtime.InteropServices.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: BStrWrapper
    path: src/System.Runtime.InteropServices/ref/System.Runtime.InteropServices.cs
    startLine: 55
  assemblies:
  - System.Runtime.InteropServices
  namespace: System.Runtime.InteropServices
  summary: "\n<p>Marshals data of type <strong>VT_BSTR</strong> from managed to unmanaged code. This class cannot be inherited.</p>\n"
  remarks: "\n<p>The <xref href=\"System.Runtime.InteropServices.BStrWrapper\" data-throw-if-not-resolved=\"false\"></xref> class controls how the wrapped object is marshaled when passed as <strong>VARIANT</strong>. You can wrap a <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref> object in a <xref href=\"System.Runtime.InteropServices.BStrWrapper\" data-throw-if-not-resolved=\"false\"></xref> object to marshal it as <strong>VT_BSTR</strong>. <xref href=\"System.Runtime.InteropServices.BStrWrapper\" data-throw-if-not-resolved=\"false\"></xref> is useful when passing a null string to unmanaged code. Without <xref href=\"System.Runtime.InteropServices.BStrWrapper\" data-throw-if-not-resolved=\"false\"></xref>, a null string is passed as <strong>VT_EMPTY</strong>; however, wrapping the string with <xref href=\"System.Runtime.InteropServices.BStrWrapper\" data-throw-if-not-resolved=\"false\"></xref> ensures that the null string is passed as <strong>VT_BSTR</strong>.</p>\n"
  example:
  - 
  syntax:
    content: 'public sealed class BStrWrapper : object'
    content.vb: >-
      Public NotInheritable Class BStrWrapper
          Inherits Object
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: System.Runtime.InteropServices.BStrWrapper.#ctor(System.Object)
  commentId: M:System.Runtime.InteropServices.BStrWrapper.#ctor(System.Object)
  id: '#ctor(System.Object)'
  parent: System.Runtime.InteropServices.BStrWrapper
  langs:
  - csharp
  - vb
  name: BStrWrapper(Object)
  fullName: System.Runtime.InteropServices.BStrWrapper.BStrWrapper(System.Object)
  type: Constructor
  source:
    remote:
      path: src/System.Runtime.InteropServices/ref/System.Runtime.InteropServices.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Runtime.InteropServices/ref/System.Runtime.InteropServices.cs
    startLine: 59
  assemblies:
  - System.Runtime.InteropServices
  namespace: System.Runtime.InteropServices
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Runtime.InteropServices.BStrWrapper\" data-throw-if-not-resolved=\"false\"></xref> class with the specified <xref href=\"System.Object\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  syntax:
    content: public BStrWrapper(object value)
    content.vb: Public Sub New(value As Object)
    parameters:
    - id: value
      type: System.Object
      description: "\n<p>The object to wrap and marshal as <strong>VT_BSTR</strong>.</p>\n"
  see:
  - type: System.Security.Permissions.SecurityPermission
    commentId: T:System.Security.Permissions.SecurityPermission
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Runtime.InteropServices.BStrWrapper.#ctor(System.String)
  commentId: M:System.Runtime.InteropServices.BStrWrapper.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Runtime.InteropServices.BStrWrapper
  langs:
  - csharp
  - vb
  name: BStrWrapper(String)
  fullName: System.Runtime.InteropServices.BStrWrapper.BStrWrapper(System.String)
  type: Constructor
  source:
    remote:
      path: src/System.Runtime.InteropServices/ref/System.Runtime.InteropServices.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Runtime.InteropServices/ref/System.Runtime.InteropServices.cs
    startLine: 60
  assemblies:
  - System.Runtime.InteropServices
  namespace: System.Runtime.InteropServices
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Runtime.InteropServices.BStrWrapper\" data-throw-if-not-resolved=\"false\"></xref> class with the specified <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  syntax:
    content: public BStrWrapper(string value)
    content.vb: Public Sub New(value As String)
    parameters:
    - id: value
      type: System.String
      description: "\n<p>The object to wrap and marshal as <strong>VT_BSTR</strong>.</p>\n"
  see:
  - type: System.Security.Permissions.SecurityPermission
    commentId: T:System.Security.Permissions.SecurityPermission
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Runtime.InteropServices.BStrWrapper.WrappedObject
  commentId: P:System.Runtime.InteropServices.BStrWrapper.WrappedObject
  id: WrappedObject
  parent: System.Runtime.InteropServices.BStrWrapper
  langs:
  - csharp
  - vb
  name: WrappedObject
  fullName: System.Runtime.InteropServices.BStrWrapper.WrappedObject
  type: Property
  source:
    remote:
      path: src/System.Runtime.InteropServices/ref/System.Runtime.InteropServices.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: WrappedObject
    path: src/System.Runtime.InteropServices/ref/System.Runtime.InteropServices.cs
    startLine: 61
  assemblies:
  - System.Runtime.InteropServices
  namespace: System.Runtime.InteropServices
  summary: "\n<p>Gets the wrapped <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref> object to marshal as type <strong>VT_BSTR</strong>.</p>\n"
  syntax:
    content: public string WrappedObject { get; }
    content.vb: Public ReadOnly Property WrappedObject As String
    parameters: []
    return:
      type: System.String
      description: "\n<p>The object that is wrapped by <xref href=\"System.Runtime.InteropServices.BStrWrapper\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: System.Runtime.InteropServices
  isExternal: false
  name: System.Runtime.InteropServices
  fullName: System.Runtime.InteropServices
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.String
  parent: System
  isExternal: false
  name: String
  fullName: System.String
