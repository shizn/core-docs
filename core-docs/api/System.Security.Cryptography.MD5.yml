items:
- uid: System.Security.Cryptography.MD5
  commentId: T:System.Security.Cryptography.MD5
  id: MD5
  parent: System.Security.Cryptography
  children:
  - System.Security.Cryptography.MD5.#ctor
  - System.Security.Cryptography.MD5.Create
  langs:
  - csharp
  - vb
  name: MD5
  fullName: System.Security.Cryptography.MD5
  type: Class
  source:
    remote:
      path: src/System.Security.Cryptography.Algorithms/src/System/Security/Cryptography/MD5.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: MD5
    path: src/System.Security.Cryptography.Algorithms/src/System/Security/Cryptography/MD5.cs
    startLine: 17
  assemblies:
  - System.Security.Cryptography.Algorithms
  namespace: System.Security.Cryptography
  summary: "\n<p>Represents the abstract class from which all implementations of the <xref href=\"System.Security.Cryptography.MD5\" data-throw-if-not-resolved=\"false\"></xref> hash algorithm inherit. </p>\n"
  remarks: "\n<p>Hash functions map binary strings of an arbitrary length to small binary strings of a fixed length. A cryptographic hash function has the property that it is computationally infeasible to find two distinct inputs that hash to the same value; that is, hashes of two sets of data should match if the corresponding data also matches. Small changes to the data result in large, unpredictable changes in the hash.</p>\n<p>The hash size for the <xref href=\"System.Security.Cryptography.MD5\" data-throw-if-not-resolved=\"false\"></xref> algorithm is 128 bits.</p>\n<p>The <see cref=\"Overload:System.Security.Cryptography.HashAlgorithm.ComputeHash\"></see> methods of the <xref href=\"System.Security.Cryptography.MD5\" data-throw-if-not-resolved=\"false\"></xref> class return the hash as an array of 16 bytes.  Note that some MD5 implementations produce a 32-character, hexadecimal-formatted hash.  To interoperate with such implementations, format the return value of the <see cref=\"Overload:System.Security.Cryptography.HashAlgorithm.ComputeHash\"></see> methods as a hexadecimal value.</p>\n<p>Newer hash functions, such as the Secure Hash Algorithms SHA-256 and SHA-512, are available. Consider using the <xref href=\"System.Security.Cryptography.SHA256\" data-throw-if-not-resolved=\"false\"></xref> class or the <xref href=\"System.Security.Cryptography.SHA512\" data-throw-if-not-resolved=\"false\"></xref> class instead of the <xref href=\"System.Security.Cryptography.MD5\" data-throw-if-not-resolved=\"false\"></xref> class. Use <xref href=\"System.Security.Cryptography.MD5\" data-throw-if-not-resolved=\"false\"></xref> only for compatibility with legacy applications and data.</p>\n"
  example:
  - "\n<p>The following code example computes the <xref href=\"System.Security.Cryptography.MD5\" data-throw-if-not-resolved=\"false\"></xref> hash value of a string and returns the hash as a 32-character, hexadecimal-formatted string.  The hash string created by this code example is compatible with any MD5 hash function (on any platform) that creates a 32-character, hexadecimal-formatted hash string.</p>Security.Cryptography.MD5#1"
  syntax:
    content: 'public abstract class MD5 : HashAlgorithm'
    content.vb: >-
      Public MustInherit Class MD5
          Inherits HashAlgorithm
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: System.Security.Cryptography.MD5.#ctor
  commentId: M:System.Security.Cryptography.MD5.#ctor
  id: '#ctor'
  parent: System.Security.Cryptography.MD5
  langs:
  - csharp
  - vb
  name: MD5()
  fullName: System.Security.Cryptography.MD5.MD5()
  type: Constructor
  source:
    remote:
      path: src/System.Security.Cryptography.Algorithms/src/System/Security/Cryptography/MD5.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Security.Cryptography.Algorithms/src/System/Security/Cryptography/MD5.cs
    startLine: 19
  assemblies:
  - System.Security.Cryptography.Algorithms
  namespace: System.Security.Cryptography
  summary: "\n<p>Initializes a new instance of <xref href=\"System.Security.Cryptography.MD5\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  remarks: "\n<p>To create an instance of the <xref href=\"System.Security.Cryptography.MD5\" data-throw-if-not-resolved=\"false\"></xref> class, use the <see cref=\"Overload:System.Security.Cryptography.MD5.Create\"></see> method.</p>\n"
  syntax:
    content: protected MD5()
    content.vb: Protected Sub New
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: System.Security.Cryptography.MD5.Create
  commentId: M:System.Security.Cryptography.MD5.Create
  id: Create
  parent: System.Security.Cryptography.MD5
  langs:
  - csharp
  - vb
  name: Create()
  fullName: System.Security.Cryptography.MD5.Create()
  type: Method
  source:
    remote:
      path: src/System.Security.Cryptography.Algorithms/src/System/Security/Cryptography/MD5.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Create
    path: src/System.Security.Cryptography.Algorithms/src/System/Security/Cryptography/MD5.cs
    startLine: 23
  assemblies:
  - System.Security.Cryptography.Algorithms
  namespace: System.Security.Cryptography
  summary: "\n<p>Creates an instance of the default implementation of the <xref href=\"System.Security.Cryptography.MD5\" data-throw-if-not-resolved=\"false\"></xref> hash algorithm.</p>\n"
  syntax:
    content: public static MD5 Create()
    content.vb: Public Shared Function Create As MD5
    return:
      type: System.Security.Cryptography.MD5
  exceptions:
  - type: System.Reflection.TargetInvocationException
    commentId: T:System.Reflection.TargetInvocationException
    description: "\n<p>The algorithm was used with Federal Information Processing Standards (FIPS) mode enabled, but is not FIPS compatible.</p>\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: System.Security.Cryptography
  isExternal: false
  name: System.Security.Cryptography
  fullName: System.Security.Cryptography
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Security.Cryptography.MD5
  parent: System.Security.Cryptography
  isExternal: false
  name: MD5
  fullName: System.Security.Cryptography.MD5
- uid: System.Reflection.TargetInvocationException
  isExternal: false
  name: TargetInvocationException
  fullName: System.Reflection.TargetInvocationException
