items:
- uid: System.Linq.IQueryProvider
  commentId: T:System.Linq.IQueryProvider
  id: IQueryProvider
  parent: System.Linq
  children:
  - System.Linq.IQueryProvider.CreateQuery(System.Linq.Expressions.Expression)
  - System.Linq.IQueryProvider.CreateQuery``1(System.Linq.Expressions.Expression)
  - System.Linq.IQueryProvider.Execute(System.Linq.Expressions.Expression)
  - System.Linq.IQueryProvider.Execute``1(System.Linq.Expressions.Expression)
  langs:
  - csharp
  - vb
  name: IQueryProvider
  fullName: System.Linq.IQueryProvider
  type: Interface
  source:
    remote:
      path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IQueryProvider
    path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs
    startLine: 25
  assemblies:
  - System.Linq.Expressions
  namespace: System.Linq
  summary: "\n<p>Defines methods to create and execute queries that are described by an <xref href=\"System.Linq.IQueryable\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  remarks: "\n<p>The <xref href=\"System.Linq.IQueryProvider\" data-throw-if-not-resolved=\"false\"></xref> interface is intended for implementation by query providers.</p>\n<p>For more information about how to create your own LINQ provider, see <see href=\"http://go.microsoft.com/fwlink/?LinkID=112370\">LINQ: Building an IQueryable Provider</see> on MSDN Blogs.</p>\n"
  example:
  - 
  syntax:
    content: public interface IQueryProvider
    content.vb: Public Interface IQueryProvider
  seealso:
  - type: System.Linq.Queryable
    commentId: T:System.Linq.Queryable
  - type: System.Linq.IQueryable`1
    commentId: T:System.Linq.IQueryable`1
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: System.Linq.IQueryProvider.CreateQuery(System.Linq.Expressions.Expression)
  commentId: M:System.Linq.IQueryProvider.CreateQuery(System.Linq.Expressions.Expression)
  id: CreateQuery(System.Linq.Expressions.Expression)
  parent: System.Linq.IQueryProvider
  langs:
  - csharp
  - vb
  name: CreateQuery(Expression)
  fullName: System.Linq.IQueryProvider.CreateQuery(System.Linq.Expressions.Expression)
  type: Method
  source:
    remote:
      path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CreateQuery
    path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs
    startLine: 27
  assemblies:
  - System.Linq.Expressions
  namespace: System.Linq
  summary: "\n<p>Constructs an <xref href=\"System.Linq.IQueryable\" data-throw-if-not-resolved=\"false\"></xref> object that can evaluate the query represented by a specified expression tree.</p>\n"
  remarks: "\n<p>The <xref href=\"System.Linq.IQueryable.Expression\" data-throw-if-not-resolved=\"false\"></xref> property of the returned <xref href=\"System.Linq.IQueryable\" data-throw-if-not-resolved=\"false\"></xref> object is equal to <em>expression</em>.</p>\n<p>The <xref href=\"System.Linq.IQueryProvider.CreateQuery(System.Linq.Expressions.Expression)\" data-throw-if-not-resolved=\"false\"></xref> method is used to create new <xref href=\"System.Linq.IQueryable\" data-throw-if-not-resolved=\"false\"></xref> objects, given an expression tree. The query that is represented by the returned object is associated with a specific LINQ provider.</p>\n<p>Several of the standard query operator methods defined in <xref href=\"System.Linq.Queryable\" data-throw-if-not-resolved=\"false\"></xref>, such as <xref href=\"System.Linq.Queryable.OfType``1(System.Linq.IQueryable)\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"System.Linq.Queryable.Cast``1(System.Linq.IQueryable)\" data-throw-if-not-resolved=\"false\"></xref>, call this method. They pass it a <xref href=\"System.Linq.Expressions.MethodCallExpression\" data-throw-if-not-resolved=\"false\"></xref> that represents a LINQ query.</p>\n"
  example:
  - 
  syntax:
    content: IQueryable CreateQuery(Expression expression)
    content.vb: Function CreateQuery(expression As Expression) As IQueryable
    parameters:
    - id: expression
      type: System.Linq.Expressions.Expression
      description: "\n<p>An expression tree that represents a LINQ query.</p>\n"
    return:
      type: System.Linq.IQueryable
      description: "\n<p>An <xref href=\"System.Linq.IQueryable\" data-throw-if-not-resolved=\"false\"></xref> that can evaluate the query represented by the specified expression tree.</p>\n"
- uid: System.Linq.IQueryProvider.CreateQuery``1(System.Linq.Expressions.Expression)
  commentId: M:System.Linq.IQueryProvider.CreateQuery``1(System.Linq.Expressions.Expression)
  id: CreateQuery``1(System.Linq.Expressions.Expression)
  parent: System.Linq.IQueryProvider
  langs:
  - csharp
  - vb
  name: CreateQuery<TElement>(Expression)
  fullName: System.Linq.IQueryProvider.CreateQuery<TElement>(System.Linq.Expressions.Expression)
  type: Method
  source:
    remote:
      path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CreateQuery
    path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs
    startLine: 28
  assemblies:
  - System.Linq.Expressions
  namespace: System.Linq
  summary: "\n<p>Constructs an <xref href=\"System.Linq.IQueryable`1\" data-throw-if-not-resolved=\"false\"></xref> object that can evaluate the query represented by a specified expression tree.</p>\n"
  remarks: "\n<p>The <xref href=\"System.Linq.IQueryable.Expression\" data-throw-if-not-resolved=\"false\"></xref> property of the returned <xref href=\"System.Linq.IQueryable`1\" data-throw-if-not-resolved=\"false\"></xref> object is equal to <em>expression</em>.</p>\n<p>The <xref href=\"System.Linq.IQueryProvider.CreateQuery``1(System.Linq.Expressions.Expression)\" data-throw-if-not-resolved=\"false\"></xref> method is used to create new <xref href=\"System.Linq.IQueryable`1\" data-throw-if-not-resolved=\"false\"></xref> objects, given an expression tree. The query that is represented by the returned object is associated with a specific LINQ provider.</p>\n<p>Most of the <xref href=\"System.Linq.Queryable\" data-throw-if-not-resolved=\"false\"></xref> standard query operator methods that return enumerable results call this method. They pass it a <xref href=\"System.Linq.Expressions.MethodCallExpression\" data-throw-if-not-resolved=\"false\"></xref> that represents a LINQ query.</p>\n"
  example:
  - 
  syntax:
    content: IQueryable<TElement> CreateQuery<TElement>(Expression expression)
    content.vb: Function CreateQuery(Of TElement)(expression As Expression) As IQueryable(Of TElement)
    parameters:
    - id: expression
      type: System.Linq.Expressions.Expression
      description: "\n<p>An expression tree that represents a LINQ query.</p>\n"
    typeParameters:
    - id: TElement
      description: "\n<p>The type of the elements of the <xref href=\"System.Linq.IQueryable`1\" data-throw-if-not-resolved=\"false\"></xref> that is returned.</p>\n"
    return:
      type: System.Linq.IQueryable{{TElement}}
      description: "\n<p>An <xref href=\"System.Linq.IQueryable`1\" data-throw-if-not-resolved=\"false\"></xref> that can evaluate the query represented by the specified expression tree.</p>\n"
  fullName.vb: System.Linq.IQueryProvider.CreateQuery(Of TElement)(System.Linq.Expressions.Expression)
  name.vb: CreateQuery(Of TElement)(Expression)
- uid: System.Linq.IQueryProvider.Execute(System.Linq.Expressions.Expression)
  commentId: M:System.Linq.IQueryProvider.Execute(System.Linq.Expressions.Expression)
  id: Execute(System.Linq.Expressions.Expression)
  parent: System.Linq.IQueryProvider
  langs:
  - csharp
  - vb
  name: Execute(Expression)
  fullName: System.Linq.IQueryProvider.Execute(System.Linq.Expressions.Expression)
  type: Method
  source:
    remote:
      path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Execute
    path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs
    startLine: 29
  assemblies:
  - System.Linq.Expressions
  namespace: System.Linq
  summary: "\n<p>Executes the query represented by a specified expression tree.</p>\n"
  remarks: "\n<p>The <xref href=\"System.Linq.IQueryProvider.Execute(System.Linq.Expressions.Expression)\" data-throw-if-not-resolved=\"false\"></xref> method executes queries that return a single value (instead of an enumerable sequence of values). Expression trees that represent queries that return enumerable results are executed when their associated <xref href=\"System.Linq.IQueryable\" data-throw-if-not-resolved=\"false\"></xref> object is enumerated.</p>\n"
  example:
  - 
  syntax:
    content: object Execute(Expression expression)
    content.vb: Function Execute(expression As Expression) As Object
    parameters:
    - id: expression
      type: System.Linq.Expressions.Expression
      description: "\n<p>An expression tree that represents a LINQ query.</p>\n"
    return:
      type: System.Object
      description: "\n<p>The value that results from executing the specified query.</p>\n"
- uid: System.Linq.IQueryProvider.Execute``1(System.Linq.Expressions.Expression)
  commentId: M:System.Linq.IQueryProvider.Execute``1(System.Linq.Expressions.Expression)
  id: Execute``1(System.Linq.Expressions.Expression)
  parent: System.Linq.IQueryProvider
  langs:
  - csharp
  - vb
  name: Execute<TResult>(Expression)
  fullName: System.Linq.IQueryProvider.Execute<TResult>(System.Linq.Expressions.Expression)
  type: Method
  source:
    remote:
      path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Execute
    path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs
    startLine: 30
  assemblies:
  - System.Linq.Expressions
  namespace: System.Linq
  summary: "\n<p>Executes the strongly-typed query represented by a specified expression tree.</p>\n"
  remarks: "\n<p>The <xref href=\"System.Linq.IQueryProvider.Execute``1(System.Linq.Expressions.Expression)\" data-throw-if-not-resolved=\"false\"></xref> method executes queries that return a single value (instead of an enumerable sequence of values). Expression trees that represent queries that return enumerable results are executed when the <xref href=\"System.Linq.IQueryable`1\" data-throw-if-not-resolved=\"false\"></xref> object that contains the expression tree is enumerated.</p>\n<p>The <xref href=\"System.Linq.Queryable\" data-throw-if-not-resolved=\"false\"></xref> standard query operator methods that return singleton results call <xref href=\"System.Linq.IQueryProvider.Execute``1(System.Linq.Expressions.Expression)\" data-throw-if-not-resolved=\"false\"></xref>. They pass it a <xref href=\"System.Linq.Expressions.MethodCallExpression\" data-throw-if-not-resolved=\"false\"></xref> that represents a LINQ query.</p>\n"
  example:
  - 
  syntax:
    content: TResult Execute<TResult>(Expression expression)
    content.vb: Function Execute(Of TResult)(expression As Expression) As TResult
    parameters:
    - id: expression
      type: System.Linq.Expressions.Expression
      description: "\n<p>An expression tree that represents a LINQ query.</p>\n"
    typeParameters:
    - id: TResult
      description: "\n<p>The type of the value that results from executing the query.</p>\n"
    return:
      type: '{TResult}'
      description: "\n<p>The value that results from executing the specified query.</p>\n"
  fullName.vb: System.Linq.IQueryProvider.Execute(Of TResult)(System.Linq.Expressions.Expression)
  name.vb: Execute(Of TResult)(Expression)
references:
- uid: System.Linq
  isExternal: false
  name: System.Linq
  fullName: System.Linq
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.IQueryable
  parent: System.Linq
  isExternal: false
  name: IQueryable
  fullName: System.Linq.IQueryable
- uid: System.Linq.Expressions
  isExternal: false
  name: System.Linq.Expressions
  fullName: System.Linq.Expressions
- uid: System.Linq.IQueryable{{TElement}}
  parent: System.Linq
  definition: System.Linq.IQueryable`1
  name: IQueryable<TElement>
  fullName: System.Linq.IQueryable<TElement>
  fullname.vb: System.Linq.IQueryable(Of TElement)
  name.vb: IQueryable(Of TElement)
  spec.csharp:
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    fullName: System.Linq.IQueryable
  - name: <
    fullName: <
  - name: TElement
    fullName: TElement
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    fullName: System.Linq.IQueryable
  - name: '(Of '
    fullName: '(Of '
  - name: TElement
    fullName: TElement
  - name: )
    fullName: )
- uid: System.Linq.IQueryable`1
  parent: System.Linq
  isExternal: false
  name: IQueryable<T>
  fullName: System.Linq.IQueryable<T>
  fullname.vb: System.Linq.IQueryable(Of T)
  name.vb: IQueryable(Of T)
  spec.csharp:
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    fullName: System.Linq.IQueryable
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    fullName: System.Linq.IQueryable
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: '{TResult}'
  isExternal: false
  name: TResult
  fullName: TResult
