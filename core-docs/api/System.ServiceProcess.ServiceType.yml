items:
- uid: System.ServiceProcess.ServiceType
  commentId: T:System.ServiceProcess.ServiceType
  id: ServiceType
  parent: System.ServiceProcess
  children:
  - System.ServiceProcess.ServiceType.Adapter
  - System.ServiceProcess.ServiceType.FileSystemDriver
  - System.ServiceProcess.ServiceType.InteractiveProcess
  - System.ServiceProcess.ServiceType.KernelDriver
  - System.ServiceProcess.ServiceType.RecognizerDriver
  - System.ServiceProcess.ServiceType.Win32OwnProcess
  - System.ServiceProcess.ServiceType.Win32ShareProcess
  langs:
  - csharp
  - vb
  name: ServiceType
  fullName: System.ServiceProcess.ServiceType
  type: Enum
  source:
    remote:
      path: src/System.ServiceProcess.ServiceController/ref/System.ServiceProcess.ServiceController.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ServiceType
    path: src/System.ServiceProcess.ServiceController/ref/System.ServiceProcess.ServiceController.cs
    startLine: 59
  assemblies:
  - System.ServiceProcess.ServiceController
  namespace: System.ServiceProcess
  summary: "\n<p>Represents the type of the service.</p>\n"
  remarks: "\n<p>The service type indicates how the service is used by the system. The <xref href=\"System.ServiceProcess.ServiceController\" data-throw-if-not-resolved=\"false\"></xref> that passes commands to the service stores a value for the service type.</p>\n<p>The value of a ServiceType instance represents a set of flags combined using the bitwise OR operator.</p>\n<p>The creation of interactive services is not supported. To workaround this, you can create a non-interactive service and a separate control GUI application that communicates with the service using sockets or remoting. </p>\n"
  example:
  - "\n<p>The following example uses the <xref href=\"System.ServiceProcess.ServiceController\" data-throw-if-not-resolved=\"false\"></xref> class to display the device driver services on the local computer.</p>ServiceController#5"
  syntax:
    content: >-
      [Flags]

      public enum ServiceType
    content.vb: >-
      <Flags>

      Public Enum ServiceType
  seealso:
  - type: System.ServiceProcess.ServiceController.ServiceType
    commentId: P:System.ServiceProcess.ServiceController.ServiceType
  - type: System.ServiceProcess.ServiceController
    commentId: T:System.ServiceProcess.ServiceController
  attributes:
  - type: System.FlagsAttribute
    ctor: System.FlagsAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - enum
  modifiers.vb:
  - Public
  - Enum
- uid: System.ServiceProcess.ServiceType.Adapter
  commentId: F:System.ServiceProcess.ServiceType.Adapter
  id: Adapter
  parent: System.ServiceProcess.ServiceType
  langs:
  - csharp
  - vb
  name: Adapter
  fullName: System.ServiceProcess.ServiceType.Adapter
  type: Field
  source:
    remote:
      path: src/System.ServiceProcess.ServiceController/ref/System.ServiceProcess.ServiceController.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Adapter
    path: src/System.ServiceProcess.ServiceController/ref/System.ServiceProcess.ServiceController.cs
    startLine: 62
  assemblies:
  - System.ServiceProcess.ServiceController
  namespace: System.ServiceProcess
  summary: "\n<p>A service for a hardware device that requires its own driver.</p>\n"
  syntax:
    content: Adapter = 4
    return:
      type: System.ServiceProcess.ServiceType
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.ServiceProcess.ServiceType.FileSystemDriver
  commentId: F:System.ServiceProcess.ServiceType.FileSystemDriver
  id: FileSystemDriver
  parent: System.ServiceProcess.ServiceType
  langs:
  - csharp
  - vb
  name: FileSystemDriver
  fullName: System.ServiceProcess.ServiceType.FileSystemDriver
  type: Field
  source:
    remote:
      path: src/System.ServiceProcess.ServiceController/ref/System.ServiceProcess.ServiceController.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: FileSystemDriver
    path: src/System.ServiceProcess.ServiceController/ref/System.ServiceProcess.ServiceController.cs
    startLine: 63
  assemblies:
  - System.ServiceProcess.ServiceController
  namespace: System.ServiceProcess
  summary: "\n<p>A file system driver, which is also a Kernel device driver.</p>\n"
  syntax:
    content: FileSystemDriver = 2
    return:
      type: System.ServiceProcess.ServiceType
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.ServiceProcess.ServiceType.InteractiveProcess
  commentId: F:System.ServiceProcess.ServiceType.InteractiveProcess
  id: InteractiveProcess
  parent: System.ServiceProcess.ServiceType
  langs:
  - csharp
  - vb
  name: InteractiveProcess
  fullName: System.ServiceProcess.ServiceType.InteractiveProcess
  type: Field
  source:
    remote:
      path: src/System.ServiceProcess.ServiceController/ref/System.ServiceProcess.ServiceController.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: InteractiveProcess
    path: src/System.ServiceProcess.ServiceController/ref/System.ServiceProcess.ServiceController.cs
    startLine: 64
  assemblies:
  - System.ServiceProcess.ServiceController
  namespace: System.ServiceProcess
  summary: "\n<p>A service that can communicate with the desktop.</p>\n"
  syntax:
    content: InteractiveProcess = 256
    return:
      type: System.ServiceProcess.ServiceType
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.ServiceProcess.ServiceType.KernelDriver
  commentId: F:System.ServiceProcess.ServiceType.KernelDriver
  id: KernelDriver
  parent: System.ServiceProcess.ServiceType
  langs:
  - csharp
  - vb
  name: KernelDriver
  fullName: System.ServiceProcess.ServiceType.KernelDriver
  type: Field
  source:
    remote:
      path: src/System.ServiceProcess.ServiceController/ref/System.ServiceProcess.ServiceController.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: KernelDriver
    path: src/System.ServiceProcess.ServiceController/ref/System.ServiceProcess.ServiceController.cs
    startLine: 65
  assemblies:
  - System.ServiceProcess.ServiceController
  namespace: System.ServiceProcess
  summary: "\n<p>A Kernel device driver such as a hard disk or other low-level hardware device driver.</p>\n"
  syntax:
    content: KernelDriver = 1
    return:
      type: System.ServiceProcess.ServiceType
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.ServiceProcess.ServiceType.RecognizerDriver
  commentId: F:System.ServiceProcess.ServiceType.RecognizerDriver
  id: RecognizerDriver
  parent: System.ServiceProcess.ServiceType
  langs:
  - csharp
  - vb
  name: RecognizerDriver
  fullName: System.ServiceProcess.ServiceType.RecognizerDriver
  type: Field
  source:
    remote:
      path: src/System.ServiceProcess.ServiceController/ref/System.ServiceProcess.ServiceController.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: RecognizerDriver
    path: src/System.ServiceProcess.ServiceController/ref/System.ServiceProcess.ServiceController.cs
    startLine: 66
  assemblies:
  - System.ServiceProcess.ServiceController
  namespace: System.ServiceProcess
  summary: "\n<p>A file system driver used during startup to determine the file systems present on the system.</p>\n"
  syntax:
    content: RecognizerDriver = 8
    return:
      type: System.ServiceProcess.ServiceType
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.ServiceProcess.ServiceType.Win32OwnProcess
  commentId: F:System.ServiceProcess.ServiceType.Win32OwnProcess
  id: Win32OwnProcess
  parent: System.ServiceProcess.ServiceType
  langs:
  - csharp
  - vb
  name: Win32OwnProcess
  fullName: System.ServiceProcess.ServiceType.Win32OwnProcess
  type: Field
  source:
    remote:
      path: src/System.ServiceProcess.ServiceController/ref/System.ServiceProcess.ServiceController.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Win32OwnProcess
    path: src/System.ServiceProcess.ServiceController/ref/System.ServiceProcess.ServiceController.cs
    startLine: 67
  assemblies:
  - System.ServiceProcess.ServiceController
  namespace: System.ServiceProcess
  summary: "\n<p>A Win32 program that can be started by the Service Controller and that obeys the service control protocol. This type of Win32 service runs in a process by itself.</p>\n"
  syntax:
    content: Win32OwnProcess = 16
    return:
      type: System.ServiceProcess.ServiceType
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.ServiceProcess.ServiceType.Win32ShareProcess
  commentId: F:System.ServiceProcess.ServiceType.Win32ShareProcess
  id: Win32ShareProcess
  parent: System.ServiceProcess.ServiceType
  langs:
  - csharp
  - vb
  name: Win32ShareProcess
  fullName: System.ServiceProcess.ServiceType.Win32ShareProcess
  type: Field
  source:
    remote:
      path: src/System.ServiceProcess.ServiceController/ref/System.ServiceProcess.ServiceController.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Win32ShareProcess
    path: src/System.ServiceProcess.ServiceController/ref/System.ServiceProcess.ServiceController.cs
    startLine: 68
  assemblies:
  - System.ServiceProcess.ServiceController
  namespace: System.ServiceProcess
  summary: "\n<p>A Win32 service that can share a process with other Win32 services.</p>\n"
  syntax:
    content: Win32ShareProcess = 32
    return:
      type: System.ServiceProcess.ServiceType
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
references:
- uid: System.ServiceProcess
  isExternal: false
  name: System.ServiceProcess
  fullName: System.ServiceProcess
- uid: System.ServiceProcess.ServiceType
  parent: System.ServiceProcess
  isExternal: false
  name: ServiceType
  fullName: System.ServiceProcess.ServiceType
