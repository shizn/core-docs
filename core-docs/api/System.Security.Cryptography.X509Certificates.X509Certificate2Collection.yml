items:
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2Collection
  commentId: T:System.Security.Cryptography.X509Certificates.X509Certificate2Collection
  id: X509Certificate2Collection
  parent: System.Security.Cryptography.X509Certificates
  children:
  - System.Security.Cryptography.X509Certificates.X509Certificate2Collection.#ctor
  - System.Security.Cryptography.X509Certificates.X509Certificate2Collection.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2)
  - System.Security.Cryptography.X509Certificates.X509Certificate2Collection.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2[])
  - System.Security.Cryptography.X509Certificates.X509Certificate2Collection.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2Collection)
  - System.Security.Cryptography.X509Certificates.X509Certificate2Collection.Add(System.Security.Cryptography.X509Certificates.X509Certificate2)
  - System.Security.Cryptography.X509Certificates.X509Certificate2Collection.AddRange(System.Security.Cryptography.X509Certificates.X509Certificate2[])
  - System.Security.Cryptography.X509Certificates.X509Certificate2Collection.AddRange(System.Security.Cryptography.X509Certificates.X509Certificate2Collection)
  - System.Security.Cryptography.X509Certificates.X509Certificate2Collection.Contains(System.Security.Cryptography.X509Certificates.X509Certificate2)
  - System.Security.Cryptography.X509Certificates.X509Certificate2Collection.Export(System.Security.Cryptography.X509Certificates.X509ContentType)
  - System.Security.Cryptography.X509Certificates.X509Certificate2Collection.Export(System.Security.Cryptography.X509Certificates.X509ContentType,System.String)
  - System.Security.Cryptography.X509Certificates.X509Certificate2Collection.Find(System.Security.Cryptography.X509Certificates.X509FindType,System.Object,System.Boolean)
  - System.Security.Cryptography.X509Certificates.X509Certificate2Collection.GetEnumerator
  - System.Security.Cryptography.X509Certificates.X509Certificate2Collection.Import(System.Byte[])
  - System.Security.Cryptography.X509Certificates.X509Certificate2Collection.Import(System.Byte[],System.String,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)
  - System.Security.Cryptography.X509Certificates.X509Certificate2Collection.Import(System.String)
  - System.Security.Cryptography.X509Certificates.X509Certificate2Collection.Import(System.String,System.String,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)
  - System.Security.Cryptography.X509Certificates.X509Certificate2Collection.Insert(System.Int32,System.Security.Cryptography.X509Certificates.X509Certificate2)
  - System.Security.Cryptography.X509Certificates.X509Certificate2Collection.Item(System.Int32)
  - System.Security.Cryptography.X509Certificates.X509Certificate2Collection.Remove(System.Security.Cryptography.X509Certificates.X509Certificate2)
  - System.Security.Cryptography.X509Certificates.X509Certificate2Collection.RemoveRange(System.Security.Cryptography.X509Certificates.X509Certificate2[])
  - System.Security.Cryptography.X509Certificates.X509Certificate2Collection.RemoveRange(System.Security.Cryptography.X509Certificates.X509Certificate2Collection)
  langs:
  - csharp
  - vb
  name: X509Certificate2Collection
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2Collection
  type: Class
  source:
    remote:
      path: src/System.Security.Cryptography.X509Certificates/ref/System.Security.Cryptography.X509Certificates.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: X509Certificate2Collection
    path: src/System.Security.Cryptography.X509Certificates/ref/System.Security.Cryptography.X509Certificates.cs
    startLine: 156
  assemblies:
  - System.Security.Cryptography.X509Certificates
  namespace: System.Security.Cryptography.X509Certificates
  summary: "\n<p>Represents a collection of <xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate2\" data-throw-if-not-resolved=\"false\"></xref> objects. This class cannot be inherited.</p>\n"
  remarks: "\n<p>When an <xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate2\" data-throw-if-not-resolved=\"false\"></xref> store is opened, the result is represented by an <xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate2Collection\" data-throw-if-not-resolved=\"false\"></xref> object. If you are familiar with the unmanaged Cryptographic API constructs, you can think of an <xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate2Collection\" data-throw-if-not-resolved=\"false\"></xref> as a memory store of <xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate2\" data-throw-if-not-resolved=\"false\"></xref> objects.</p>\n"
  example:
  - "\n<p>The following code example opens the current user's personal certificate store, selects only valid certificates, allows the user to select a certificate, and then writes certificate and certificate chain information to the console. The output depends on the certificate the user selects.</p>certselect#1"
  syntax:
    content: 'public class X509Certificate2Collection : X509CertificateCollection, IList, ICollection, IEnumerable'
    content.vb: >-
      Public Class X509Certificate2Collection
          Inherits X509CertificateCollection
          Implements IList, ICollection, IEnumerable
  inheritance:
  - System.Object
  - System.Security.Cryptography.X509Certificates.X509CertificateCollection
  implements:
  - System.Collections.IList
  - System.Collections.ICollection
  - System.Collections.IEnumerable
  inheritedMembers:
  - System.Security.Cryptography.X509Certificates.X509CertificateCollection.Add(System.Security.Cryptography.X509Certificates.X509Certificate)
  - System.Security.Cryptography.X509Certificates.X509CertificateCollection.AddRange(System.Security.Cryptography.X509Certificates.X509Certificate[])
  - System.Security.Cryptography.X509Certificates.X509CertificateCollection.AddRange(System.Security.Cryptography.X509Certificates.X509CertificateCollection)
  - System.Security.Cryptography.X509Certificates.X509CertificateCollection.Contains(System.Security.Cryptography.X509Certificates.X509Certificate)
  - System.Security.Cryptography.X509Certificates.X509CertificateCollection.CopyTo(System.Security.Cryptography.X509Certificates.X509Certificate[],System.Int32)
  - System.Security.Cryptography.X509Certificates.X509CertificateCollection.GetHashCode
  - System.Security.Cryptography.X509Certificates.X509CertificateCollection.IndexOf(System.Security.Cryptography.X509Certificates.X509Certificate)
  - System.Security.Cryptography.X509Certificates.X509CertificateCollection.Insert(System.Int32,System.Security.Cryptography.X509Certificates.X509Certificate)
  - System.Security.Cryptography.X509Certificates.X509CertificateCollection.Remove(System.Security.Cryptography.X509Certificates.X509Certificate)
  - System.Security.Cryptography.X509Certificates.X509CertificateCollection.Count
  - System.Security.Cryptography.X509Certificates.X509CertificateCollection.System#Collections#ICollection#IsSynchronized
  - System.Security.Cryptography.X509Certificates.X509CertificateCollection.System#Collections#ICollection#SyncRoot
  - System.Security.Cryptography.X509Certificates.X509CertificateCollection.System#Collections#IList#IsFixedSize
  - System.Security.Cryptography.X509Certificates.X509CertificateCollection.System#Collections#IList#IsReadOnly
  - System.Security.Cryptography.X509Certificates.X509CertificateCollection.System#Collections#IList#Item(System.Int32)
  - System.Security.Cryptography.X509Certificates.X509CertificateCollection.Clear
  - System.Security.Cryptography.X509Certificates.X509CertificateCollection.System#Collections#IEnumerable#GetEnumerator
  - System.Security.Cryptography.X509Certificates.X509CertificateCollection.RemoveAt(System.Int32)
  - System.Security.Cryptography.X509Certificates.X509CertificateCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  - System.Security.Cryptography.X509Certificates.X509CertificateCollection.System#Collections#IList#Add(System.Object)
  - System.Security.Cryptography.X509Certificates.X509CertificateCollection.System#Collections#IList#Contains(System.Object)
  - System.Security.Cryptography.X509Certificates.X509CertificateCollection.System#Collections#IList#IndexOf(System.Object)
  - System.Security.Cryptography.X509Certificates.X509CertificateCollection.System#Collections#IList#Insert(System.Int32,System.Object)
  - System.Security.Cryptography.X509Certificates.X509CertificateCollection.System#Collections#IList#Remove(System.Object)
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2Collection.#ctor
  commentId: M:System.Security.Cryptography.X509Certificates.X509Certificate2Collection.#ctor
  id: '#ctor'
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2Collection
  langs:
  - csharp
  - vb
  name: X509Certificate2Collection()
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2Collection.X509Certificate2Collection()
  type: Constructor
  source:
    remote:
      path: src/System.Security.Cryptography.X509Certificates/ref/System.Security.Cryptography.X509Certificates.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Security.Cryptography.X509Certificates/ref/System.Security.Cryptography.X509Certificates.cs
    startLine: 158
  assemblies:
  - System.Security.Cryptography.X509Certificates
  namespace: System.Security.Cryptography.X509Certificates
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate2Collection\" data-throw-if-not-resolved=\"false\"></xref> class without any <xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate2\" data-throw-if-not-resolved=\"false\"></xref> information.</p>\n"
  remarks: "\n<p>This constructor creates an empty <xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate2Collection\" data-throw-if-not-resolved=\"false\"></xref> object, which is unlike the other constructors that use certificate or collection information to create the object.</p>\n"
  example:
  - "\n<p>The following code example opens the current user's personal certificate store, selects only valid certificates, allows the user to select a certificate, and then writes certificate and certificate chain information to the console. The output depends on the certificate the user selects.</p>certselect#1"
  syntax:
    content: public X509Certificate2Collection()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2Collection.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2)
  commentId: M:System.Security.Cryptography.X509Certificates.X509Certificate2Collection.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2)
  id: '#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2)'
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2Collection
  langs:
  - csharp
  - vb
  name: X509Certificate2Collection(X509Certificate2)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2Collection.X509Certificate2Collection(System.Security.Cryptography.X509Certificates.X509Certificate2)
  type: Constructor
  source:
    remote:
      path: src/System.Security.Cryptography.X509Certificates/ref/System.Security.Cryptography.X509Certificates.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Security.Cryptography.X509Certificates/ref/System.Security.Cryptography.X509Certificates.cs
    startLine: 159
  assemblies:
  - System.Security.Cryptography.X509Certificates
  namespace: System.Security.Cryptography.X509Certificates
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate2Collection\" data-throw-if-not-resolved=\"false\"></xref> class using an <xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate2\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  example:
  - 
  syntax:
    content: public X509Certificate2Collection(X509Certificate2 certificate)
    content.vb: Public Sub New(certificate As X509Certificate2)
    parameters:
    - id: certificate
      type: System.Security.Cryptography.X509Certificates.X509Certificate2
      description: "\n<p>An <xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate2\" data-throw-if-not-resolved=\"false\"></xref> object to start the collection from.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2Collection.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2[])
  commentId: M:System.Security.Cryptography.X509Certificates.X509Certificate2Collection.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2[])
  id: '#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2[])'
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2Collection
  langs:
  - csharp
  - vb
  name: X509Certificate2Collection(X509Certificate2[])
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2Collection.X509Certificate2Collection(System.Security.Cryptography.X509Certificates.X509Certificate2[])
  type: Constructor
  source:
    remote:
      path: src/System.Security.Cryptography.X509Certificates/ref/System.Security.Cryptography.X509Certificates.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Security.Cryptography.X509Certificates/ref/System.Security.Cryptography.X509Certificates.cs
    startLine: 160
  assemblies:
  - System.Security.Cryptography.X509Certificates
  namespace: System.Security.Cryptography.X509Certificates
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate2Collection\" data-throw-if-not-resolved=\"false\"></xref> class using an array of <xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate2\" data-throw-if-not-resolved=\"false\"></xref> objects.</p>\n"
  example:
  - "\n<p>The following code example opens the current user's personal certificate store, selects only valid certificates, allows the user to select a certificate, and then writes certificate and certificate chain information to the console. The output depends on the certificate you select.</p>certselect#1"
  syntax:
    content: public X509Certificate2Collection(X509Certificate2[] certificates)
    content.vb: Public Sub New(certificates As X509Certificate2())
    parameters:
    - id: certificates
      type: System.Security.Cryptography.X509Certificates.X509Certificate2[]
      description: "\n<p>An array of <xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate2\" data-throw-if-not-resolved=\"false\"></xref> objects. </p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Security.Cryptography.X509Certificates.X509Certificate2Collection.X509Certificate2Collection(System.Security.Cryptography.X509Certificates.X509Certificate2())
  name.vb: X509Certificate2Collection(X509Certificate2())
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2Collection.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2Collection)
  commentId: M:System.Security.Cryptography.X509Certificates.X509Certificate2Collection.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2Collection)
  id: '#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2Collection)'
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2Collection
  langs:
  - csharp
  - vb
  name: X509Certificate2Collection(X509Certificate2Collection)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2Collection.X509Certificate2Collection(System.Security.Cryptography.X509Certificates.X509Certificate2Collection)
  type: Constructor
  source:
    remote:
      path: src/System.Security.Cryptography.X509Certificates/ref/System.Security.Cryptography.X509Certificates.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Security.Cryptography.X509Certificates/ref/System.Security.Cryptography.X509Certificates.cs
    startLine: 161
  assemblies:
  - System.Security.Cryptography.X509Certificates
  namespace: System.Security.Cryptography.X509Certificates
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate2Collection\" data-throw-if-not-resolved=\"false\"></xref> class using the specified certificate collection.</p>\n"
  example:
  - "\n<p>The following code example opens the current user's personal certificate store, selects only valid certificates, allows the user to select a certificate, and then writes certificate and certificate chain information to the console. The output depends on the certificate the user selects.</p>certselect#1"
  syntax:
    content: public X509Certificate2Collection(X509Certificate2Collection certificates)
    content.vb: Public Sub New(certificates As X509Certificate2Collection)
    parameters:
    - id: certificates
      type: System.Security.Cryptography.X509Certificates.X509Certificate2Collection
      description: "\n<p>An <xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate2Collection\" data-throw-if-not-resolved=\"false\"></xref> object. </p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2Collection.Item(System.Int32)
  commentId: P:System.Security.Cryptography.X509Certificates.X509Certificate2Collection.Item(System.Int32)
  id: Item(System.Int32)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2Collection
  langs:
  - csharp
  - vb
  name: Item[Int32]
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2Collection.Item[System.Int32]
  type: Property
  source:
    remote:
      path: src/System.Security.Cryptography.X509Certificates/ref/System.Security.Cryptography.X509Certificates.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: this[]
    path: src/System.Security.Cryptography.X509Certificates/ref/System.Security.Cryptography.X509Certificates.cs
    startLine: 162
  assemblies:
  - System.Security.Cryptography.X509Certificates
  namespace: System.Security.Cryptography.X509Certificates
  summary: "\n<p>Gets or sets the element at the specified index.</p>\n"
  remarks: "\n<p>This property provides the ability to access a specific element in the collection by using the following syntax: <code>myCollection[index]</code>.</p>\n"
  example:
  - "\n<p>The following code example opens the current user's personal certificate store, selects only valid certificates, allows the user to select a certificate, and then writes certificate and certificate chain information to the console. The output depends on the certificate the user selects.</p>certselect#1"
  syntax:
    content: public X509Certificate2 this[int index] { get; set; }
    content.vb: Public Property Item(index As Integer) As X509Certificate2
    parameters:
    - id: index
      type: System.Int32
      description: "\n<p>The zero-based index of the element to get or set. </p>\n"
    return:
      type: System.Security.Cryptography.X509Certificates.X509Certificate2
      description: "\n<p>The element at the specified index.</p>\n"
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>\n<em>index</em> is less than zero.</p>\n<p>-or- </p>\n<p>\n<em>index</em> is equal to or greater than the <xref href=\"System.Collections.CollectionBase.Count\" data-throw-if-not-resolved=\"false\"></xref> property. </p>\n"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>index</em> is <strong>null</strong>. </p>\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: System.Security.Cryptography.X509Certificates.X509Certificate2Collection.Item(System.Int32)
  name.vb: Item(Int32)
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2Collection.Add(System.Security.Cryptography.X509Certificates.X509Certificate2)
  commentId: M:System.Security.Cryptography.X509Certificates.X509Certificate2Collection.Add(System.Security.Cryptography.X509Certificates.X509Certificate2)
  id: Add(System.Security.Cryptography.X509Certificates.X509Certificate2)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2Collection
  langs:
  - csharp
  - vb
  name: Add(X509Certificate2)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2Collection.Add(System.Security.Cryptography.X509Certificates.X509Certificate2)
  type: Method
  source:
    remote:
      path: src/System.Security.Cryptography.X509Certificates/ref/System.Security.Cryptography.X509Certificates.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Add
    path: src/System.Security.Cryptography.X509Certificates/ref/System.Security.Cryptography.X509Certificates.cs
    startLine: 163
  assemblies:
  - System.Security.Cryptography.X509Certificates
  namespace: System.Security.Cryptography.X509Certificates
  summary: "\n<p>Adds an object to the end of the <xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate2Collection\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  remarks: "\n<p>This method adds an <xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate2\" data-throw-if-not-resolved=\"false\"></xref> object to a collection and returns the index location of the certificate.</p>\n"
  example:
  - "\n<p>The following code example opens an X.509 certificate store, adds and deletes certificates, and then closes the store. It assumes that you have three certificates to add to and remove from a local store.</p>x509store2#1"
  syntax:
    content: public int Add(X509Certificate2 certificate)
    content.vb: Public Function Add(certificate As X509Certificate2) As Integer
    parameters:
    - id: certificate
      type: System.Security.Cryptography.X509Certificates.X509Certificate2
      description: "\n<p>An X.509 certificate represented as an <xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate2\" data-throw-if-not-resolved=\"false\"></xref> object. </p>\n"
    return:
      type: System.Int32
      description: "\n<p>The <xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate2Collection\" data-throw-if-not-resolved=\"false\"></xref> index at which the <em>certificate</em> has been added.</p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>certificate</em> is <strong>null</strong>. </p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2Collection.AddRange(System.Security.Cryptography.X509Certificates.X509Certificate2[])
  commentId: M:System.Security.Cryptography.X509Certificates.X509Certificate2Collection.AddRange(System.Security.Cryptography.X509Certificates.X509Certificate2[])
  id: AddRange(System.Security.Cryptography.X509Certificates.X509Certificate2[])
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2Collection
  langs:
  - csharp
  - vb
  name: AddRange(X509Certificate2[])
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2Collection.AddRange(System.Security.Cryptography.X509Certificates.X509Certificate2[])
  type: Method
  source:
    remote:
      path: src/System.Security.Cryptography.X509Certificates/ref/System.Security.Cryptography.X509Certificates.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: AddRange
    path: src/System.Security.Cryptography.X509Certificates/ref/System.Security.Cryptography.X509Certificates.cs
    startLine: 164
  assemblies:
  - System.Security.Cryptography.X509Certificates
  namespace: System.Security.Cryptography.X509Certificates
  summary: "\n<p>Adds multiple <xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate2\" data-throw-if-not-resolved=\"false\"></xref> objects in an array to the <xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate2Collection\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  remarks: "\n<p>Use this method if you have an array of <xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate2\" data-throw-if-not-resolved=\"false\"></xref> objects to add to an <xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate2Collection\" data-throw-if-not-resolved=\"false\"></xref> object. The <xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate2Collection.AddRange(System.Security.Cryptography.X509Certificates.X509Certificate2[])\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate2Collection.RemoveRange(System.Security.Cryptography.X509Certificates.X509Certificate2[])\" data-throw-if-not-resolved=\"false\"></xref> methods process requests transactionally, so that if a single add or remove fails, the entire operation is aborted.</p>\n"
  syntax:
    content: public void AddRange(X509Certificate2[] certificates)
    content.vb: Public Sub AddRange(certificates As X509Certificate2())
    parameters:
    - id: certificates
      type: System.Security.Cryptography.X509Certificates.X509Certificate2[]
      description: "\n<p>An array of <xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate2\" data-throw-if-not-resolved=\"false\"></xref> objects. </p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>certificates</em> is <strong>null</strong>. </p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Security.Cryptography.X509Certificates.X509Certificate2Collection.AddRange(System.Security.Cryptography.X509Certificates.X509Certificate2())
  name.vb: AddRange(X509Certificate2())
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2Collection.AddRange(System.Security.Cryptography.X509Certificates.X509Certificate2Collection)
  commentId: M:System.Security.Cryptography.X509Certificates.X509Certificate2Collection.AddRange(System.Security.Cryptography.X509Certificates.X509Certificate2Collection)
  id: AddRange(System.Security.Cryptography.X509Certificates.X509Certificate2Collection)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2Collection
  langs:
  - csharp
  - vb
  name: AddRange(X509Certificate2Collection)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2Collection.AddRange(System.Security.Cryptography.X509Certificates.X509Certificate2Collection)
  type: Method
  source:
    remote:
      path: src/System.Security.Cryptography.X509Certificates/ref/System.Security.Cryptography.X509Certificates.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: AddRange
    path: src/System.Security.Cryptography.X509Certificates/ref/System.Security.Cryptography.X509Certificates.cs
    startLine: 165
  assemblies:
  - System.Security.Cryptography.X509Certificates
  namespace: System.Security.Cryptography.X509Certificates
  summary: "\n<p>Adds multiple <xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate2\" data-throw-if-not-resolved=\"false\"></xref> objects in an <xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate2Collection\" data-throw-if-not-resolved=\"false\"></xref> object to another <xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate2Collection\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  remarks: "\n<p>Use this method if you have certificates in an <xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate2Collection\" data-throw-if-not-resolved=\"false\"></xref> object that you want to add to another <xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate2Collection\" data-throw-if-not-resolved=\"false\"></xref> object. The <xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate2Collection.AddRange(System.Security.Cryptography.X509Certificates.X509Certificate2[])\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate2Collection.RemoveRange(System.Security.Cryptography.X509Certificates.X509Certificate2[])\" data-throw-if-not-resolved=\"false\"></xref> methods process requests transactionally, so that if a single add or remove fails, the entire operation is aborted.</p>\n"
  syntax:
    content: public void AddRange(X509Certificate2Collection certificates)
    content.vb: Public Sub AddRange(certificates As X509Certificate2Collection)
    parameters:
    - id: certificates
      type: System.Security.Cryptography.X509Certificates.X509Certificate2Collection
      description: "\n<p>An <xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate2Collection\" data-throw-if-not-resolved=\"false\"></xref> object. </p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>certificates</em> is <strong>null</strong>. </p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2Collection.Contains(System.Security.Cryptography.X509Certificates.X509Certificate2)
  commentId: M:System.Security.Cryptography.X509Certificates.X509Certificate2Collection.Contains(System.Security.Cryptography.X509Certificates.X509Certificate2)
  id: Contains(System.Security.Cryptography.X509Certificates.X509Certificate2)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2Collection
  langs:
  - csharp
  - vb
  name: Contains(X509Certificate2)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2Collection.Contains(System.Security.Cryptography.X509Certificates.X509Certificate2)
  type: Method
  source:
    remote:
      path: src/System.Security.Cryptography.X509Certificates/ref/System.Security.Cryptography.X509Certificates.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Contains
    path: src/System.Security.Cryptography.X509Certificates/ref/System.Security.Cryptography.X509Certificates.cs
    startLine: 166
  assemblies:
  - System.Security.Cryptography.X509Certificates
  namespace: System.Security.Cryptography.X509Certificates
  summary: "\n<p>Determines whether the <xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate2Collection\" data-throw-if-not-resolved=\"false\"></xref> object contains a specific certificate.</p>\n"
  remarks: "\n<p>This method performs a linear search; therefore, the average execution time is proportional to the <xref href=\"System.Collections.CollectionBase.Count\" data-throw-if-not-resolved=\"false\"></xref> property. That is, this method is an O(<em>n</em>) operation, where <em>n</em> is <xref href=\"System.Collections.CollectionBase.Count\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>This method determines equality by calling the <xref href=\"System.Object.Equals(System.Object)\" data-throw-if-not-resolved=\"false\"></xref> method.</p>\n"
  syntax:
    content: public bool Contains(X509Certificate2 certificate)
    content.vb: Public Function Contains(certificate As X509Certificate2) As Boolean
    parameters:
    - id: certificate
      type: System.Security.Cryptography.X509Certificates.X509Certificate2
      description: "\n<p>The <xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate2\" data-throw-if-not-resolved=\"false\"></xref> object to locate in the collection. </p>\n"
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if the <xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate2Collection\" data-throw-if-not-resolved=\"false\"></xref> contains the specified <em>certificate</em>; otherwise, <strong>false</strong>.</p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>certificate</em> is <strong>null</strong>. </p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2Collection.Export(System.Security.Cryptography.X509Certificates.X509ContentType)
  commentId: M:System.Security.Cryptography.X509Certificates.X509Certificate2Collection.Export(System.Security.Cryptography.X509Certificates.X509ContentType)
  id: Export(System.Security.Cryptography.X509Certificates.X509ContentType)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2Collection
  langs:
  - csharp
  - vb
  name: Export(X509ContentType)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2Collection.Export(System.Security.Cryptography.X509Certificates.X509ContentType)
  type: Method
  source:
    remote:
      path: src/System.Security.Cryptography.X509Certificates/ref/System.Security.Cryptography.X509Certificates.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Export
    path: src/System.Security.Cryptography.X509Certificates/ref/System.Security.Cryptography.X509Certificates.cs
    startLine: 167
  assemblies:
  - System.Security.Cryptography.X509Certificates
  namespace: System.Security.Cryptography.X509Certificates
  summary: "\n<p>Exports X.509 certificate information into a byte array.</p>\n"
  remarks: "\n<p>This method supports content types that do not require a password.</p>\n"
  syntax:
    content: public byte[] Export(X509ContentType contentType)
    content.vb: Public Function Export(contentType As X509ContentType) As Byte()
    parameters:
    - id: contentType
      type: System.Security.Cryptography.X509Certificates.X509ContentType
      description: "\n<p>A supported <xref href=\"System.Security.Cryptography.X509Certificates.X509ContentType\" data-throw-if-not-resolved=\"false\"></xref> object. </p>\n"
    return:
      type: System.Byte[]
      description: "\n<p>X.509 certificate information in a byte array.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2Collection.Export(System.Security.Cryptography.X509Certificates.X509ContentType,System.String)
  commentId: M:System.Security.Cryptography.X509Certificates.X509Certificate2Collection.Export(System.Security.Cryptography.X509Certificates.X509ContentType,System.String)
  id: Export(System.Security.Cryptography.X509Certificates.X509ContentType,System.String)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2Collection
  langs:
  - csharp
  - vb
  name: Export(X509ContentType, String)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2Collection.Export(System.Security.Cryptography.X509Certificates.X509ContentType, System.String)
  type: Method
  source:
    remote:
      path: src/System.Security.Cryptography.X509Certificates/ref/System.Security.Cryptography.X509Certificates.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Export
    path: src/System.Security.Cryptography.X509Certificates/ref/System.Security.Cryptography.X509Certificates.cs
    startLine: 168
  assemblies:
  - System.Security.Cryptography.X509Certificates
  namespace: System.Security.Cryptography.X509Certificates
  summary: "\n<p>Exports X.509 certificate information into a byte array using a password.</p>\n"
  remarks: "\n<p>This method supports the following <xref href=\"System.Security.Cryptography.X509Certificates.X509ContentType\" data-throw-if-not-resolved=\"false\"></xref> types: </p>\n<ul><li>\n<p>\n<xref href=\"System.Security.Cryptography.X509Certificates.X509ContentType.Cert\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</li><li>\n<p>\n<xref href=\"System.Security.Cryptography.X509Certificates.X509ContentType.SerializedCert\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</li><li>\n<p>\n<xref href=\"System.Security.Cryptography.X509Certificates.X509ContentType.Pfx\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</li><li>\n<p>\n<xref href=\"System.Security.Cryptography.X509Certificates.X509ContentType.SerializedStore\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</li><li>\n<p>\n<xref href=\"System.Security.Cryptography.X509Certificates.X509ContentType.Pkcs7\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</li></ul>\n"
  syntax:
    content: public byte[] Export(X509ContentType contentType, string password)
    content.vb: Public Function Export(contentType As X509ContentType, password As String) As Byte()
    parameters:
    - id: contentType
      type: System.Security.Cryptography.X509Certificates.X509ContentType
      description: "\n<p>A supported <xref href=\"System.Security.Cryptography.X509Certificates.X509ContentType\" data-throw-if-not-resolved=\"false\"></xref> object. </p>\n"
    - id: password
      type: System.String
      description: "\n<p>A string used to protect the byte array. </p>\n"
    return:
      type: System.Byte[]
      description: "\n<p>X.509 certificate information in a byte array.</p>\n"
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "\n<p>The certificate is unreadable, the content is invalid or, in the case of a certificate requiring a password, the private key could not be exported because the password provided was incorrect. </p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2Collection.Find(System.Security.Cryptography.X509Certificates.X509FindType,System.Object,System.Boolean)
  commentId: M:System.Security.Cryptography.X509Certificates.X509Certificate2Collection.Find(System.Security.Cryptography.X509Certificates.X509FindType,System.Object,System.Boolean)
  id: Find(System.Security.Cryptography.X509Certificates.X509FindType,System.Object,System.Boolean)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2Collection
  langs:
  - csharp
  - vb
  name: Find(X509FindType, Object, Boolean)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2Collection.Find(System.Security.Cryptography.X509Certificates.X509FindType, System.Object, System.Boolean)
  type: Method
  source:
    remote:
      path: src/System.Security.Cryptography.X509Certificates/ref/System.Security.Cryptography.X509Certificates.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Find
    path: src/System.Security.Cryptography.X509Certificates/ref/System.Security.Cryptography.X509Certificates.cs
    startLine: 169
  assemblies:
  - System.Security.Cryptography.X509Certificates
  namespace: System.Security.Cryptography.X509Certificates
  summary: "\n<p>Searches an <xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate2Collection\" data-throw-if-not-resolved=\"false\"></xref> object using the search criteria specified by the <xref href=\"System.Security.Cryptography.X509Certificates.X509FindType\" data-throw-if-not-resolved=\"false\"></xref> enumeration and the <em>findValue</em> object.</p>\n"
  remarks: "\n<p>Use this method to find <xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate2\" data-throw-if-not-resolved=\"false\"></xref> objects if no user interaction is needed. Use the <xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate2Collection.Find(System.Security.Cryptography.X509Certificates.X509FindType,System.Object,System.Boolean)\" data-throw-if-not-resolved=\"false\"></xref> method to allow the user to select <xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate2\" data-throw-if-not-resolved=\"false\"></xref> objects.</p>\n<p>Note that this method can be used in a cascading or nested style, narrowing the search criteria with each call to the method.</p>\n"
  example:
  - "\n<p>The following code example opens the current user's personal certificate store, finds only valid certificates, allows the user to select a certificate, and then writes certificate and certificate chain information to the console. The output depends on the certificate the user selects.</p>certselect#1"
  syntax:
    content: public X509Certificate2Collection Find(X509FindType findType, object findValue, bool validOnly)
    content.vb: Public Function Find(findType As X509FindType, findValue As Object, validOnly As Boolean) As X509Certificate2Collection
    parameters:
    - id: findType
      type: System.Security.Cryptography.X509Certificates.X509FindType
      description: "\n<p>One of the <xref href=\"System.Security.Cryptography.X509Certificates.X509FindType\" data-throw-if-not-resolved=\"false\"></xref>  values. </p>\n"
    - id: findValue
      type: System.Object
      description: "\n<p>The search criteria as an object. </p>\n"
    - id: validOnly
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> to allow only valid certificates to be returned from the search; otherwise, <strong>false</strong>. </p>\n"
    return:
      type: System.Security.Cryptography.X509Certificates.X509Certificate2Collection
      description: "\n<p>An <xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate2Collection\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "\n<p>\n<em>findType</em> is invalid. </p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2Collection.GetEnumerator
  commentId: M:System.Security.Cryptography.X509Certificates.X509Certificate2Collection.GetEnumerator
  id: GetEnumerator
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2Collection
  langs:
  - csharp
  - vb
  name: GetEnumerator()
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2Collection.GetEnumerator()
  type: Method
  source:
    remote:
      path: src/System.Security.Cryptography.X509Certificates/ref/System.Security.Cryptography.X509Certificates.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetEnumerator
    path: src/System.Security.Cryptography.X509Certificates/ref/System.Security.Cryptography.X509Certificates.cs
    startLine: 170
  assemblies:
  - System.Security.Cryptography.X509Certificates
  namespace: System.Security.Cryptography.X509Certificates
  summary: "\n<p>Returns an enumerator that can iterate through a <xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate2Collection\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  remarks: "\n<p>Enumerators allow read-only access to data in the collection. Enumerators cannot be used to modify the underlying collection.</p>\n"
  syntax:
    content: public X509Certificate2Enumerator GetEnumerator()
    content.vb: Public Function GetEnumerator As X509Certificate2Enumerator
    return:
      type: System.Security.Cryptography.X509Certificates.X509Certificate2Enumerator
      description: "\n<p>An <xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate2Enumerator\" data-throw-if-not-resolved=\"false\"></xref> object that can iterate through the <xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate2Collection\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2Collection.Import(System.Byte[])
  commentId: M:System.Security.Cryptography.X509Certificates.X509Certificate2Collection.Import(System.Byte[])
  id: Import(System.Byte[])
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2Collection
  langs:
  - csharp
  - vb
  name: Import(Byte[])
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2Collection.Import(System.Byte[])
  type: Method
  source:
    remote:
      path: src/System.Security.Cryptography.X509Certificates/ref/System.Security.Cryptography.X509Certificates.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Import
    path: src/System.Security.Cryptography.X509Certificates/ref/System.Security.Cryptography.X509Certificates.cs
    startLine: 171
  assemblies:
  - System.Security.Cryptography.X509Certificates
  namespace: System.Security.Cryptography.X509Certificates
  summary: "\n<p>Imports a certificate in the form of a byte array into a <xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate2Collection\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  remarks: "\n<p>This method imports a certificate in the form of a byte array into a <xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate2Collection\" data-throw-if-not-resolved=\"false\"></xref> object. This method supports the following <xref href=\"System.Security.Cryptography.X509Certificates.X509ContentType\" data-throw-if-not-resolved=\"false\"></xref> types: </p>\n<ul><li>\n<p>\n<xref href=\"System.Security.Cryptography.X509Certificates.X509ContentType.Cert\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</li><li>\n<p>\n<xref href=\"System.Security.Cryptography.X509Certificates.X509ContentType.SerializedCert\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</li><li>\n<p>\n<xref href=\"System.Security.Cryptography.X509Certificates.X509ContentType.Pfx\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</li><li>\n<p>\n<xref href=\"System.Security.Cryptography.X509Certificates.X509ContentType.SerializedStore\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</li><li>\n<p>\n<xref href=\"System.Security.Cryptography.X509Certificates.X509ContentType.Pkcs7\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</li><li>\n<p>\n<xref href=\"System.Security.Cryptography.X509Certificates.X509ContentType.Authenticode\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</li></ul>\n"
  syntax:
    content: public void Import(byte[] rawData)
    content.vb: Public Sub Import(rawData As Byte())
    parameters:
    - id: rawData
      type: System.Byte[]
      description: "\n<p>A byte array containing data from an X.509 certificate. </p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Security.Cryptography.X509Certificates.X509Certificate2Collection.Import(System.Byte())
  name.vb: Import(Byte())
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2Collection.Import(System.Byte[],System.String,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)
  commentId: M:System.Security.Cryptography.X509Certificates.X509Certificate2Collection.Import(System.Byte[],System.String,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)
  id: Import(System.Byte[],System.String,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2Collection
  langs:
  - csharp
  - vb
  name: Import(Byte[], String, X509KeyStorageFlags)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2Collection.Import(System.Byte[], System.String, System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)
  type: Method
  source:
    remote:
      path: src/System.Security.Cryptography.X509Certificates/ref/System.Security.Cryptography.X509Certificates.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Import
    path: src/System.Security.Cryptography.X509Certificates/ref/System.Security.Cryptography.X509Certificates.cs
    startLine: 172
  assemblies:
  - System.Security.Cryptography.X509Certificates
  namespace: System.Security.Cryptography.X509Certificates
  summary: "\n<p>Imports a certificate, in the form of a byte array that requires a password to access the certificate, into a <xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate2Collection\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  remarks: "\n<p>This method can be used with a PFX/PKCS12 binary large object (BLOB) protected by a password. Key containers associated with certificates in the PFX/PKCS12 BLOB can be created and the <xref href=\"System.Security.Cryptography.X509Certificates.X509KeyStorageFlags\" data-throw-if-not-resolved=\"false\"></xref> value can be used to control this process. Note that if you do not create a key container, the private key is not persisted.</p>\n<p>This method imports a certificate byte array into a collection of certificates. This method supports the following <xref href=\"System.Security.Cryptography.X509Certificates.X509ContentType\" data-throw-if-not-resolved=\"false\"></xref> types: </p>\n<ul><li>\n<p>\n<xref href=\"System.Security.Cryptography.X509Certificates.X509ContentType.Cert\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</li><li>\n<p>\n<xref href=\"System.Security.Cryptography.X509Certificates.X509ContentType.SerializedCert\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</li><li>\n<p>\n<xref href=\"System.Security.Cryptography.X509Certificates.X509ContentType.Pfx\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</li><li>\n<p>\n<xref href=\"System.Security.Cryptography.X509Certificates.X509ContentType.SerializedStore\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</li><li>\n<p>\n<xref href=\"System.Security.Cryptography.X509Certificates.X509ContentType.Pkcs7\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</li></ul>\n"
  syntax:
    content: public void Import(byte[] rawData, string password, X509KeyStorageFlags keyStorageFlags)
    content.vb: Public Sub Import(rawData As Byte(), password As String, keyStorageFlags As X509KeyStorageFlags)
    parameters:
    - id: rawData
      type: System.Byte[]
      description: "\n<p>A byte array containing data from an <xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate2\" data-throw-if-not-resolved=\"false\"></xref> object. </p>\n"
    - id: password
      type: System.String
      description: "\n<p>The password required to access the certificate information. </p>\n"
    - id: keyStorageFlags
      type: System.Security.Cryptography.X509Certificates.X509KeyStorageFlags
      description: "\n<p>A bitwise combination of the enumeration values that control how and where the certificate is imported. </p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Security.Cryptography.X509Certificates.X509Certificate2Collection.Import(System.Byte(), System.String, System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)
  name.vb: Import(Byte(), String, X509KeyStorageFlags)
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2Collection.Import(System.String)
  commentId: M:System.Security.Cryptography.X509Certificates.X509Certificate2Collection.Import(System.String)
  id: Import(System.String)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2Collection
  langs:
  - csharp
  - vb
  name: Import(String)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2Collection.Import(System.String)
  type: Method
  source:
    remote:
      path: src/System.Security.Cryptography.X509Certificates/ref/System.Security.Cryptography.X509Certificates.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Import
    path: src/System.Security.Cryptography.X509Certificates/ref/System.Security.Cryptography.X509Certificates.cs
    startLine: 173
  assemblies:
  - System.Security.Cryptography.X509Certificates
  namespace: System.Security.Cryptography.X509Certificates
  summary: "\n<p>Imports a certificate file into a <xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate2Collection\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  remarks: "\n<p>This method supports the following <xref href=\"System.Security.Cryptography.X509Certificates.X509ContentType\" data-throw-if-not-resolved=\"false\"></xref> types: </p>\n<ul><li>\n<p>\n<xref href=\"System.Security.Cryptography.X509Certificates.X509ContentType.Cert\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</li><li>\n<p>\n<xref href=\"System.Security.Cryptography.X509Certificates.X509ContentType.SerializedCert\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</li><li>\n<p>\n<xref href=\"System.Security.Cryptography.X509Certificates.X509ContentType.Pfx\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</li><li>\n<p>\n<xref href=\"System.Security.Cryptography.X509Certificates.X509ContentType.SerializedStore\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</li><li>\n<p>\n<xref href=\"System.Security.Cryptography.X509Certificates.X509ContentType.Pkcs7\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</li><li>\n<p>\n<xref href=\"System.Security.Cryptography.X509Certificates.X509ContentType.Authenticode\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</li></ul>\n"
  syntax:
    content: public void Import(string fileName)
    content.vb: Public Sub Import(fileName As String)
    parameters:
    - id: fileName
      type: System.String
      description: "\n<p>The name of the file containing the certificate information. </p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2Collection.Import(System.String,System.String,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)
  commentId: M:System.Security.Cryptography.X509Certificates.X509Certificate2Collection.Import(System.String,System.String,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)
  id: Import(System.String,System.String,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2Collection
  langs:
  - csharp
  - vb
  name: Import(String, String, X509KeyStorageFlags)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2Collection.Import(System.String, System.String, System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)
  type: Method
  source:
    remote:
      path: src/System.Security.Cryptography.X509Certificates/ref/System.Security.Cryptography.X509Certificates.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Import
    path: src/System.Security.Cryptography.X509Certificates/ref/System.Security.Cryptography.X509Certificates.cs
    startLine: 174
  assemblies:
  - System.Security.Cryptography.X509Certificates
  namespace: System.Security.Cryptography.X509Certificates
  summary: "\n<p>Imports a certificate file that requires a password into a <xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate2Collection\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  remarks: "\n<p>This method can be used with a PFX/PKCS12 file or other certificate files that require a password. Key containers associated with certificates in the PFX/PKCS12 file can be created and <xref href=\"System.Security.Cryptography.X509Certificates.X509KeyStorageFlags\" data-throw-if-not-resolved=\"false\"></xref> value can be used to control this process. Note that if you do not create a key container, the private key is not persisted.</p>\n<p>Note that a PFX/PKCS12 file can contain more than one certificate. This method imports the first certificate associated with the private key or, if no private key is found, the first certificate found.</p>\n<p>This method supports the following <xref href=\"System.Security.Cryptography.X509Certificates.X509ContentType\" data-throw-if-not-resolved=\"false\"></xref> types: </p>\n<ul><li>\n<p>\n<xref href=\"System.Security.Cryptography.X509Certificates.X509ContentType.Cert\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</li><li>\n<p>\n<xref href=\"System.Security.Cryptography.X509Certificates.X509ContentType.SerializedCert\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</li><li>\n<p>\n<xref href=\"System.Security.Cryptography.X509Certificates.X509ContentType.Pfx\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</li><li>\n<p>\n<xref href=\"System.Security.Cryptography.X509Certificates.X509ContentType.SerializedStore\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</li><li>\n<p>\n<xref href=\"System.Security.Cryptography.X509Certificates.X509ContentType.Pkcs7\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</li><li>\n<p>\n<xref href=\"System.Security.Cryptography.X509Certificates.X509ContentType.Authenticode\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</li></ul>\n"
  syntax:
    content: public void Import(string fileName, string password, X509KeyStorageFlags keyStorageFlags)
    content.vb: Public Sub Import(fileName As String, password As String, keyStorageFlags As X509KeyStorageFlags)
    parameters:
    - id: fileName
      type: System.String
      description: "\n<p>The name of the file containing the certificate information. </p>\n"
    - id: password
      type: System.String
      description: "\n<p>The password required to access the certificate information. </p>\n"
    - id: keyStorageFlags
      type: System.Security.Cryptography.X509Certificates.X509KeyStorageFlags
      description: "\n<p>A bitwise combination of the enumeration values that control how and where the certificate is imported. </p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2Collection.Insert(System.Int32,System.Security.Cryptography.X509Certificates.X509Certificate2)
  commentId: M:System.Security.Cryptography.X509Certificates.X509Certificate2Collection.Insert(System.Int32,System.Security.Cryptography.X509Certificates.X509Certificate2)
  id: Insert(System.Int32,System.Security.Cryptography.X509Certificates.X509Certificate2)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2Collection
  langs:
  - csharp
  - vb
  name: Insert(Int32, X509Certificate2)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2Collection.Insert(System.Int32, System.Security.Cryptography.X509Certificates.X509Certificate2)
  type: Method
  source:
    remote:
      path: src/System.Security.Cryptography.X509Certificates/ref/System.Security.Cryptography.X509Certificates.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Insert
    path: src/System.Security.Cryptography.X509Certificates/ref/System.Security.Cryptography.X509Certificates.cs
    startLine: 175
  assemblies:
  - System.Security.Cryptography.X509Certificates
  namespace: System.Security.Cryptography.X509Certificates
  summary: "\n<p>Inserts an object into the <xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate2Collection\" data-throw-if-not-resolved=\"false\"></xref> object at the specified index.</p>\n"
  remarks: "\n<p>If the <xref href=\"System.Collections.CollectionBase.Count\" data-throw-if-not-resolved=\"false\"></xref> property already equals the capacity of the list, the capacity is doubled by automatically reallocating the internal array before the new element is inserted.</p>\n<p>If <em>index</em> is equal to <xref href=\"System.Collections.CollectionBase.Count\" data-throw-if-not-resolved=\"false\"></xref>, <em>certificate</em> is added to the end of the collection.</p>\n"
  syntax:
    content: public void Insert(int index, X509Certificate2 certificate)
    content.vb: Public Sub Insert(index As Integer, certificate As X509Certificate2)
    parameters:
    - id: index
      type: System.Int32
      description: "\n<p>The zero-based index at which to insert <em>certificate</em>. </p>\n"
    - id: certificate
      type: System.Security.Cryptography.X509Certificates.X509Certificate2
      description: "\n<p>The <xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate2\" data-throw-if-not-resolved=\"false\"></xref> object to insert. </p>\n"
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>\n<em>index</em> is less than zero.</p>\n<p>-or- </p>\n<p>\n<em>index</em> is greater than the <xref href=\"System.Collections.CollectionBase.Count\" data-throw-if-not-resolved=\"false\"></xref> property. </p>\n"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "\n<p>The collection is read-only.</p>\n<p>-or- </p>\n<p>The collection has a fixed size. </p>\n"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>certificate</em> is <strong>null</strong>. </p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2Collection.Remove(System.Security.Cryptography.X509Certificates.X509Certificate2)
  commentId: M:System.Security.Cryptography.X509Certificates.X509Certificate2Collection.Remove(System.Security.Cryptography.X509Certificates.X509Certificate2)
  id: Remove(System.Security.Cryptography.X509Certificates.X509Certificate2)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2Collection
  langs:
  - csharp
  - vb
  name: Remove(X509Certificate2)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2Collection.Remove(System.Security.Cryptography.X509Certificates.X509Certificate2)
  type: Method
  source:
    remote:
      path: src/System.Security.Cryptography.X509Certificates/ref/System.Security.Cryptography.X509Certificates.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Remove
    path: src/System.Security.Cryptography.X509Certificates/ref/System.Security.Cryptography.X509Certificates.cs
    startLine: 176
  assemblies:
  - System.Security.Cryptography.X509Certificates
  namespace: System.Security.Cryptography.X509Certificates
  summary: "\n<p>Removes the first occurrence of a certificate from the <xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate2Collection\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  remarks: "\n<p>This method removes the first occurrence of a certificate.</p>\n"
  syntax:
    content: public void Remove(X509Certificate2 certificate)
    content.vb: Public Sub Remove(certificate As X509Certificate2)
    parameters:
    - id: certificate
      type: System.Security.Cryptography.X509Certificates.X509Certificate2
      description: "\n<p>The <xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate2\" data-throw-if-not-resolved=\"false\"></xref> object to be removed from the <xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate2Collection\" data-throw-if-not-resolved=\"false\"></xref> object. </p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>certificate</em> is <strong>null</strong>. </p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2Collection.RemoveRange(System.Security.Cryptography.X509Certificates.X509Certificate2[])
  commentId: M:System.Security.Cryptography.X509Certificates.X509Certificate2Collection.RemoveRange(System.Security.Cryptography.X509Certificates.X509Certificate2[])
  id: RemoveRange(System.Security.Cryptography.X509Certificates.X509Certificate2[])
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2Collection
  langs:
  - csharp
  - vb
  name: RemoveRange(X509Certificate2[])
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2Collection.RemoveRange(System.Security.Cryptography.X509Certificates.X509Certificate2[])
  type: Method
  source:
    remote:
      path: src/System.Security.Cryptography.X509Certificates/ref/System.Security.Cryptography.X509Certificates.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: RemoveRange
    path: src/System.Security.Cryptography.X509Certificates/ref/System.Security.Cryptography.X509Certificates.cs
    startLine: 177
  assemblies:
  - System.Security.Cryptography.X509Certificates
  namespace: System.Security.Cryptography.X509Certificates
  summary: "\n<p>Removes multiple <xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate2\" data-throw-if-not-resolved=\"false\"></xref> objects in an array from an <xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate2Collection\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  remarks: "\n<p>Use this method if you have an array of <xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate2\" data-throw-if-not-resolved=\"false\"></xref> objects to remove from an <xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate2Collection\" data-throw-if-not-resolved=\"false\"></xref> object. The <xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate2Collection.AddRange(System.Security.Cryptography.X509Certificates.X509Certificate2[])\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate2Collection.RemoveRange(System.Security.Cryptography.X509Certificates.X509Certificate2[])\" data-throw-if-not-resolved=\"false\"></xref> methods process requests transactionally, so that if a single add or remove fails, the entire operation is aborted.</p>\n"
  syntax:
    content: public void RemoveRange(X509Certificate2[] certificates)
    content.vb: Public Sub RemoveRange(certificates As X509Certificate2())
    parameters:
    - id: certificates
      type: System.Security.Cryptography.X509Certificates.X509Certificate2[]
      description: "\n<p>An array of <xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate2\" data-throw-if-not-resolved=\"false\"></xref> objects. </p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>certificates</em> is <strong>null</strong>. </p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Security.Cryptography.X509Certificates.X509Certificate2Collection.RemoveRange(System.Security.Cryptography.X509Certificates.X509Certificate2())
  name.vb: RemoveRange(X509Certificate2())
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2Collection.RemoveRange(System.Security.Cryptography.X509Certificates.X509Certificate2Collection)
  commentId: M:System.Security.Cryptography.X509Certificates.X509Certificate2Collection.RemoveRange(System.Security.Cryptography.X509Certificates.X509Certificate2Collection)
  id: RemoveRange(System.Security.Cryptography.X509Certificates.X509Certificate2Collection)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2Collection
  langs:
  - csharp
  - vb
  name: RemoveRange(X509Certificate2Collection)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2Collection.RemoveRange(System.Security.Cryptography.X509Certificates.X509Certificate2Collection)
  type: Method
  source:
    remote:
      path: src/System.Security.Cryptography.X509Certificates/ref/System.Security.Cryptography.X509Certificates.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: RemoveRange
    path: src/System.Security.Cryptography.X509Certificates/ref/System.Security.Cryptography.X509Certificates.cs
    startLine: 178
  assemblies:
  - System.Security.Cryptography.X509Certificates
  namespace: System.Security.Cryptography.X509Certificates
  summary: "\n<p>Removes multiple <xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate2\" data-throw-if-not-resolved=\"false\"></xref> objects in an <xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate2Collection\" data-throw-if-not-resolved=\"false\"></xref> object from another <xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate2Collection\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  remarks: "\n<p>Use this method if you have certificates in an <xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate2Collection\" data-throw-if-not-resolved=\"false\"></xref> object that you want to remove from another <xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate2Collection\" data-throw-if-not-resolved=\"false\"></xref> object. The <xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate2Collection.AddRange(System.Security.Cryptography.X509Certificates.X509Certificate2[])\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate2Collection.RemoveRange(System.Security.Cryptography.X509Certificates.X509Certificate2[])\" data-throw-if-not-resolved=\"false\"></xref> methods process requests transactionally, so that if a single add or remove fails, the entire operation is aborted.</p>\n"
  syntax:
    content: public void RemoveRange(X509Certificate2Collection certificates)
    content.vb: Public Sub RemoveRange(certificates As X509Certificate2Collection)
    parameters:
    - id: certificates
      type: System.Security.Cryptography.X509Certificates.X509Certificate2Collection
      description: "\n<p>An <xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate2Collection\" data-throw-if-not-resolved=\"false\"></xref> object. </p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>certificates</em> is <strong>null</strong>. </p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: System.Security.Cryptography.X509Certificates
  isExternal: false
  name: System.Security.Cryptography.X509Certificates
  fullName: System.Security.Cryptography.X509Certificates
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System.Security.Cryptography.X509Certificates.X509CertificateCollection
  parent: System.Security.Cryptography.X509Certificates
  isExternal: false
  name: X509CertificateCollection
  fullName: System.Security.Cryptography.X509Certificates.X509CertificateCollection
- uid: System.Collections.IList
  parent: System.Collections
  isExternal: false
  name: IList
  fullName: System.Collections.IList
- uid: System.Collections.ICollection
  parent: System.Collections
  isExternal: false
  name: ICollection
  fullName: System.Collections.ICollection
- uid: System.Collections.IEnumerable
  parent: System.Collections
  isExternal: false
  name: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: System.Security.Cryptography.X509Certificates.X509CertificateCollection.Add(System.Security.Cryptography.X509Certificates.X509Certificate)
  parent: System.Security.Cryptography.X509Certificates.X509CertificateCollection
  isExternal: false
  name: Add(X509Certificate)
  fullName: System.Security.Cryptography.X509Certificates.X509CertificateCollection.Add(System.Security.Cryptography.X509Certificates.X509Certificate)
  spec.csharp:
  - uid: System.Security.Cryptography.X509Certificates.X509CertificateCollection.Add(System.Security.Cryptography.X509Certificates.X509Certificate)
    name: Add
    fullName: System.Security.Cryptography.X509Certificates.X509CertificateCollection.Add
  - name: (
    fullName: (
  - uid: System.Security.Cryptography.X509Certificates.X509Certificate
    name: X509Certificate
    fullName: System.Security.Cryptography.X509Certificates.X509Certificate
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Security.Cryptography.X509Certificates.X509CertificateCollection.Add(System.Security.Cryptography.X509Certificates.X509Certificate)
    name: Add
    fullName: System.Security.Cryptography.X509Certificates.X509CertificateCollection.Add
  - name: (
    fullName: (
  - uid: System.Security.Cryptography.X509Certificates.X509Certificate
    name: X509Certificate
    fullName: System.Security.Cryptography.X509Certificates.X509Certificate
  - name: )
    fullName: )
- uid: System.Security.Cryptography.X509Certificates.X509CertificateCollection.AddRange(System.Security.Cryptography.X509Certificates.X509Certificate[])
  parent: System.Security.Cryptography.X509Certificates.X509CertificateCollection
  isExternal: false
  name: AddRange(X509Certificate[])
  fullName: System.Security.Cryptography.X509Certificates.X509CertificateCollection.AddRange(System.Security.Cryptography.X509Certificates.X509Certificate[])
  fullname.vb: System.Security.Cryptography.X509Certificates.X509CertificateCollection.AddRange(System.Security.Cryptography.X509Certificates.X509Certificate())
  name.vb: AddRange(X509Certificate())
  spec.csharp:
  - uid: System.Security.Cryptography.X509Certificates.X509CertificateCollection.AddRange(System.Security.Cryptography.X509Certificates.X509Certificate[])
    name: AddRange
    fullName: System.Security.Cryptography.X509Certificates.X509CertificateCollection.AddRange
  - name: (
    fullName: (
  - uid: System.Security.Cryptography.X509Certificates.X509Certificate
    name: X509Certificate
    fullName: System.Security.Cryptography.X509Certificates.X509Certificate
  - name: '[]'
    fullName: '[]'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Security.Cryptography.X509Certificates.X509CertificateCollection.AddRange(System.Security.Cryptography.X509Certificates.X509Certificate[])
    name: AddRange
    fullName: System.Security.Cryptography.X509Certificates.X509CertificateCollection.AddRange
  - name: (
    fullName: (
  - uid: System.Security.Cryptography.X509Certificates.X509Certificate
    name: X509Certificate
    fullName: System.Security.Cryptography.X509Certificates.X509Certificate
  - name: ()
    fullName: ()
  - name: )
    fullName: )
- uid: System.Security.Cryptography.X509Certificates.X509CertificateCollection.AddRange(System.Security.Cryptography.X509Certificates.X509CertificateCollection)
  parent: System.Security.Cryptography.X509Certificates.X509CertificateCollection
  isExternal: false
  name: AddRange(X509CertificateCollection)
  fullName: System.Security.Cryptography.X509Certificates.X509CertificateCollection.AddRange(System.Security.Cryptography.X509Certificates.X509CertificateCollection)
  spec.csharp:
  - uid: System.Security.Cryptography.X509Certificates.X509CertificateCollection.AddRange(System.Security.Cryptography.X509Certificates.X509CertificateCollection)
    name: AddRange
    fullName: System.Security.Cryptography.X509Certificates.X509CertificateCollection.AddRange
  - name: (
    fullName: (
  - uid: System.Security.Cryptography.X509Certificates.X509CertificateCollection
    name: X509CertificateCollection
    fullName: System.Security.Cryptography.X509Certificates.X509CertificateCollection
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Security.Cryptography.X509Certificates.X509CertificateCollection.AddRange(System.Security.Cryptography.X509Certificates.X509CertificateCollection)
    name: AddRange
    fullName: System.Security.Cryptography.X509Certificates.X509CertificateCollection.AddRange
  - name: (
    fullName: (
  - uid: System.Security.Cryptography.X509Certificates.X509CertificateCollection
    name: X509CertificateCollection
    fullName: System.Security.Cryptography.X509Certificates.X509CertificateCollection
  - name: )
    fullName: )
- uid: System.Security.Cryptography.X509Certificates.X509CertificateCollection.Contains(System.Security.Cryptography.X509Certificates.X509Certificate)
  parent: System.Security.Cryptography.X509Certificates.X509CertificateCollection
  isExternal: false
  name: Contains(X509Certificate)
  fullName: System.Security.Cryptography.X509Certificates.X509CertificateCollection.Contains(System.Security.Cryptography.X509Certificates.X509Certificate)
  spec.csharp:
  - uid: System.Security.Cryptography.X509Certificates.X509CertificateCollection.Contains(System.Security.Cryptography.X509Certificates.X509Certificate)
    name: Contains
    fullName: System.Security.Cryptography.X509Certificates.X509CertificateCollection.Contains
  - name: (
    fullName: (
  - uid: System.Security.Cryptography.X509Certificates.X509Certificate
    name: X509Certificate
    fullName: System.Security.Cryptography.X509Certificates.X509Certificate
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Security.Cryptography.X509Certificates.X509CertificateCollection.Contains(System.Security.Cryptography.X509Certificates.X509Certificate)
    name: Contains
    fullName: System.Security.Cryptography.X509Certificates.X509CertificateCollection.Contains
  - name: (
    fullName: (
  - uid: System.Security.Cryptography.X509Certificates.X509Certificate
    name: X509Certificate
    fullName: System.Security.Cryptography.X509Certificates.X509Certificate
  - name: )
    fullName: )
- uid: System.Security.Cryptography.X509Certificates.X509CertificateCollection.CopyTo(System.Security.Cryptography.X509Certificates.X509Certificate[],System.Int32)
  parent: System.Security.Cryptography.X509Certificates.X509CertificateCollection
  isExternal: true
  name: CopyTo(X509Certificate[], Int32)
  fullName: System.Security.Cryptography.X509Certificates.X509CertificateCollection.CopyTo(System.Security.Cryptography.X509Certificates.X509Certificate[], System.Int32)
  fullname.vb: System.Security.Cryptography.X509Certificates.X509CertificateCollection.CopyTo(System.Security.Cryptography.X509Certificates.X509Certificate(), System.Int32)
  name.vb: CopyTo(X509Certificate(), Int32)
  spec.csharp:
  - uid: System.Security.Cryptography.X509Certificates.X509CertificateCollection.CopyTo(System.Security.Cryptography.X509Certificates.X509Certificate[],System.Int32)
    name: CopyTo
    fullName: System.Security.Cryptography.X509Certificates.X509CertificateCollection.CopyTo
  - name: (
    fullName: (
  - uid: System.Security.Cryptography.X509Certificates.X509Certificate
    name: X509Certificate
    fullName: System.Security.Cryptography.X509Certificates.X509Certificate
  - name: '[]'
    fullName: '[]'
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Security.Cryptography.X509Certificates.X509CertificateCollection.CopyTo(System.Security.Cryptography.X509Certificates.X509Certificate[],System.Int32)
    name: CopyTo
    fullName: System.Security.Cryptography.X509Certificates.X509CertificateCollection.CopyTo
  - name: (
    fullName: (
  - uid: System.Security.Cryptography.X509Certificates.X509Certificate
    name: X509Certificate
    fullName: System.Security.Cryptography.X509Certificates.X509Certificate
  - name: ()
    fullName: ()
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
- uid: System.Security.Cryptography.X509Certificates.X509CertificateCollection.GetHashCode
  parent: System.Security.Cryptography.X509Certificates.X509CertificateCollection
  isExternal: false
  name: GetHashCode()
  fullName: System.Security.Cryptography.X509Certificates.X509CertificateCollection.GetHashCode()
  spec.csharp:
  - uid: System.Security.Cryptography.X509Certificates.X509CertificateCollection.GetHashCode
    name: GetHashCode
    fullName: System.Security.Cryptography.X509Certificates.X509CertificateCollection.GetHashCode
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Security.Cryptography.X509Certificates.X509CertificateCollection.GetHashCode
    name: GetHashCode
    fullName: System.Security.Cryptography.X509Certificates.X509CertificateCollection.GetHashCode
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Security.Cryptography.X509Certificates.X509CertificateCollection.IndexOf(System.Security.Cryptography.X509Certificates.X509Certificate)
  parent: System.Security.Cryptography.X509Certificates.X509CertificateCollection
  isExternal: false
  name: IndexOf(X509Certificate)
  fullName: System.Security.Cryptography.X509Certificates.X509CertificateCollection.IndexOf(System.Security.Cryptography.X509Certificates.X509Certificate)
  spec.csharp:
  - uid: System.Security.Cryptography.X509Certificates.X509CertificateCollection.IndexOf(System.Security.Cryptography.X509Certificates.X509Certificate)
    name: IndexOf
    fullName: System.Security.Cryptography.X509Certificates.X509CertificateCollection.IndexOf
  - name: (
    fullName: (
  - uid: System.Security.Cryptography.X509Certificates.X509Certificate
    name: X509Certificate
    fullName: System.Security.Cryptography.X509Certificates.X509Certificate
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Security.Cryptography.X509Certificates.X509CertificateCollection.IndexOf(System.Security.Cryptography.X509Certificates.X509Certificate)
    name: IndexOf
    fullName: System.Security.Cryptography.X509Certificates.X509CertificateCollection.IndexOf
  - name: (
    fullName: (
  - uid: System.Security.Cryptography.X509Certificates.X509Certificate
    name: X509Certificate
    fullName: System.Security.Cryptography.X509Certificates.X509Certificate
  - name: )
    fullName: )
- uid: System.Security.Cryptography.X509Certificates.X509CertificateCollection.Insert(System.Int32,System.Security.Cryptography.X509Certificates.X509Certificate)
  parent: System.Security.Cryptography.X509Certificates.X509CertificateCollection
  isExternal: true
  name: Insert(Int32, X509Certificate)
  fullName: System.Security.Cryptography.X509Certificates.X509CertificateCollection.Insert(System.Int32, System.Security.Cryptography.X509Certificates.X509Certificate)
  spec.csharp:
  - uid: System.Security.Cryptography.X509Certificates.X509CertificateCollection.Insert(System.Int32,System.Security.Cryptography.X509Certificates.X509Certificate)
    name: Insert
    fullName: System.Security.Cryptography.X509Certificates.X509CertificateCollection.Insert
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Security.Cryptography.X509Certificates.X509Certificate
    name: X509Certificate
    fullName: System.Security.Cryptography.X509Certificates.X509Certificate
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Security.Cryptography.X509Certificates.X509CertificateCollection.Insert(System.Int32,System.Security.Cryptography.X509Certificates.X509Certificate)
    name: Insert
    fullName: System.Security.Cryptography.X509Certificates.X509CertificateCollection.Insert
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Security.Cryptography.X509Certificates.X509Certificate
    name: X509Certificate
    fullName: System.Security.Cryptography.X509Certificates.X509Certificate
  - name: )
    fullName: )
- uid: System.Security.Cryptography.X509Certificates.X509CertificateCollection.Remove(System.Security.Cryptography.X509Certificates.X509Certificate)
  parent: System.Security.Cryptography.X509Certificates.X509CertificateCollection
  isExternal: false
  name: Remove(X509Certificate)
  fullName: System.Security.Cryptography.X509Certificates.X509CertificateCollection.Remove(System.Security.Cryptography.X509Certificates.X509Certificate)
  spec.csharp:
  - uid: System.Security.Cryptography.X509Certificates.X509CertificateCollection.Remove(System.Security.Cryptography.X509Certificates.X509Certificate)
    name: Remove
    fullName: System.Security.Cryptography.X509Certificates.X509CertificateCollection.Remove
  - name: (
    fullName: (
  - uid: System.Security.Cryptography.X509Certificates.X509Certificate
    name: X509Certificate
    fullName: System.Security.Cryptography.X509Certificates.X509Certificate
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Security.Cryptography.X509Certificates.X509CertificateCollection.Remove(System.Security.Cryptography.X509Certificates.X509Certificate)
    name: Remove
    fullName: System.Security.Cryptography.X509Certificates.X509CertificateCollection.Remove
  - name: (
    fullName: (
  - uid: System.Security.Cryptography.X509Certificates.X509Certificate
    name: X509Certificate
    fullName: System.Security.Cryptography.X509Certificates.X509Certificate
  - name: )
    fullName: )
- uid: System.Security.Cryptography.X509Certificates.X509CertificateCollection.Count
  parent: System.Security.Cryptography.X509Certificates.X509CertificateCollection
  isExternal: false
  name: Count
  fullName: System.Security.Cryptography.X509Certificates.X509CertificateCollection.Count
- uid: System.Security.Cryptography.X509Certificates.X509CertificateCollection.System#Collections#ICollection#IsSynchronized
  parent: System.Security.Cryptography.X509Certificates.X509CertificateCollection
  isExternal: false
  name: ICollection.IsSynchronized
  fullName: System.Security.Cryptography.X509Certificates.X509CertificateCollection.System.Collections.ICollection.IsSynchronized
  name.vb: System.Collections.ICollection.IsSynchronized
- uid: System.Security.Cryptography.X509Certificates.X509CertificateCollection.System#Collections#ICollection#SyncRoot
  parent: System.Security.Cryptography.X509Certificates.X509CertificateCollection
  isExternal: false
  name: ICollection.SyncRoot
  fullName: System.Security.Cryptography.X509Certificates.X509CertificateCollection.System.Collections.ICollection.SyncRoot
  name.vb: System.Collections.ICollection.SyncRoot
- uid: System.Security.Cryptography.X509Certificates.X509CertificateCollection.System#Collections#IList#IsFixedSize
  parent: System.Security.Cryptography.X509Certificates.X509CertificateCollection
  isExternal: false
  name: IList.IsFixedSize
  fullName: System.Security.Cryptography.X509Certificates.X509CertificateCollection.System.Collections.IList.IsFixedSize
  name.vb: System.Collections.IList.IsFixedSize
- uid: System.Security.Cryptography.X509Certificates.X509CertificateCollection.System#Collections#IList#IsReadOnly
  parent: System.Security.Cryptography.X509Certificates.X509CertificateCollection
  isExternal: false
  name: IList.IsReadOnly
  fullName: System.Security.Cryptography.X509Certificates.X509CertificateCollection.System.Collections.IList.IsReadOnly
  name.vb: System.Collections.IList.IsReadOnly
- uid: System.Security.Cryptography.X509Certificates.X509CertificateCollection.System#Collections#IList#Item(System.Int32)
  parent: System.Security.Cryptography.X509Certificates.X509CertificateCollection
  isExternal: true
  name: IList.Item[Int32]
  fullName: System.Security.Cryptography.X509Certificates.X509CertificateCollection.System.Collections.IList.Item[System.Int32]
  fullname.vb: System.Security.Cryptography.X509Certificates.X509CertificateCollection.System.Collections.IList.Item(System.Int32)
  name.vb: System.Collections.IList.Item(Int32)
  spec.csharp:
  - uid: System.Security.Cryptography.X509Certificates.X509CertificateCollection.System#Collections#IList#Item(System.Int32)
    name: IList.Item
    fullName: System.Security.Cryptography.X509Certificates.X509CertificateCollection.System.Collections.IList.Item
  - name: '['
    fullName: '['
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ']'
    fullName: ']'
  spec.vb:
  - uid: System.Security.Cryptography.X509Certificates.X509CertificateCollection.System#Collections#IList#Item(System.Int32)
    name: System.Collections.IList.Item
    fullName: System.Security.Cryptography.X509Certificates.X509CertificateCollection.System.Collections.IList.Item
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
- uid: System.Security.Cryptography.X509Certificates.X509CertificateCollection.Clear
  parent: System.Security.Cryptography.X509Certificates.X509CertificateCollection
  isExternal: false
  name: Clear()
  fullName: System.Security.Cryptography.X509Certificates.X509CertificateCollection.Clear()
  spec.csharp:
  - uid: System.Security.Cryptography.X509Certificates.X509CertificateCollection.Clear
    name: Clear
    fullName: System.Security.Cryptography.X509Certificates.X509CertificateCollection.Clear
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Security.Cryptography.X509Certificates.X509CertificateCollection.Clear
    name: Clear
    fullName: System.Security.Cryptography.X509Certificates.X509CertificateCollection.Clear
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Security.Cryptography.X509Certificates.X509CertificateCollection.System#Collections#IEnumerable#GetEnumerator
  parent: System.Security.Cryptography.X509Certificates.X509CertificateCollection
  isExternal: false
  name: IEnumerable.GetEnumerator()
  fullName: System.Security.Cryptography.X509Certificates.X509CertificateCollection.System.Collections.IEnumerable.GetEnumerator()
  name.vb: System.Collections.IEnumerable.GetEnumerator()
  spec.csharp:
  - uid: System.Security.Cryptography.X509Certificates.X509CertificateCollection.System#Collections#IEnumerable#GetEnumerator
    name: IEnumerable.GetEnumerator
    fullName: System.Security.Cryptography.X509Certificates.X509CertificateCollection.System.Collections.IEnumerable.GetEnumerator
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Security.Cryptography.X509Certificates.X509CertificateCollection.System#Collections#IEnumerable#GetEnumerator
    name: System.Collections.IEnumerable.GetEnumerator
    fullName: System.Security.Cryptography.X509Certificates.X509CertificateCollection.System.Collections.IEnumerable.GetEnumerator
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Security.Cryptography.X509Certificates.X509CertificateCollection.RemoveAt(System.Int32)
  parent: System.Security.Cryptography.X509Certificates.X509CertificateCollection
  isExternal: true
  name: RemoveAt(Int32)
  fullName: System.Security.Cryptography.X509Certificates.X509CertificateCollection.RemoveAt(System.Int32)
  spec.csharp:
  - uid: System.Security.Cryptography.X509Certificates.X509CertificateCollection.RemoveAt(System.Int32)
    name: RemoveAt
    fullName: System.Security.Cryptography.X509Certificates.X509CertificateCollection.RemoveAt
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Security.Cryptography.X509Certificates.X509CertificateCollection.RemoveAt(System.Int32)
    name: RemoveAt
    fullName: System.Security.Cryptography.X509Certificates.X509CertificateCollection.RemoveAt
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
- uid: System.Security.Cryptography.X509Certificates.X509CertificateCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  parent: System.Security.Cryptography.X509Certificates.X509CertificateCollection
  isExternal: true
  name: ICollection.CopyTo(Array, Int32)
  fullName: System.Security.Cryptography.X509Certificates.X509CertificateCollection.System.Collections.ICollection.CopyTo(System.Array, System.Int32)
  name.vb: System.Collections.ICollection.CopyTo(Array, Int32)
  spec.csharp:
  - uid: System.Security.Cryptography.X509Certificates.X509CertificateCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
    name: ICollection.CopyTo
    fullName: System.Security.Cryptography.X509Certificates.X509CertificateCollection.System.Collections.ICollection.CopyTo
  - name: (
    fullName: (
  - uid: System.Array
    name: Array
    fullName: System.Array
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Security.Cryptography.X509Certificates.X509CertificateCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
    name: System.Collections.ICollection.CopyTo
    fullName: System.Security.Cryptography.X509Certificates.X509CertificateCollection.System.Collections.ICollection.CopyTo
  - name: (
    fullName: (
  - uid: System.Array
    name: Array
    fullName: System.Array
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
- uid: System.Security.Cryptography.X509Certificates.X509CertificateCollection.System#Collections#IList#Add(System.Object)
  parent: System.Security.Cryptography.X509Certificates.X509CertificateCollection
  isExternal: true
  name: IList.Add(Object)
  fullName: System.Security.Cryptography.X509Certificates.X509CertificateCollection.System.Collections.IList.Add(System.Object)
  name.vb: System.Collections.IList.Add(Object)
  spec.csharp:
  - uid: System.Security.Cryptography.X509Certificates.X509CertificateCollection.System#Collections#IList#Add(System.Object)
    name: IList.Add
    fullName: System.Security.Cryptography.X509Certificates.X509CertificateCollection.System.Collections.IList.Add
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Security.Cryptography.X509Certificates.X509CertificateCollection.System#Collections#IList#Add(System.Object)
    name: System.Collections.IList.Add
    fullName: System.Security.Cryptography.X509Certificates.X509CertificateCollection.System.Collections.IList.Add
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Security.Cryptography.X509Certificates.X509CertificateCollection.System#Collections#IList#Contains(System.Object)
  parent: System.Security.Cryptography.X509Certificates.X509CertificateCollection
  isExternal: true
  name: IList.Contains(Object)
  fullName: System.Security.Cryptography.X509Certificates.X509CertificateCollection.System.Collections.IList.Contains(System.Object)
  name.vb: System.Collections.IList.Contains(Object)
  spec.csharp:
  - uid: System.Security.Cryptography.X509Certificates.X509CertificateCollection.System#Collections#IList#Contains(System.Object)
    name: IList.Contains
    fullName: System.Security.Cryptography.X509Certificates.X509CertificateCollection.System.Collections.IList.Contains
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Security.Cryptography.X509Certificates.X509CertificateCollection.System#Collections#IList#Contains(System.Object)
    name: System.Collections.IList.Contains
    fullName: System.Security.Cryptography.X509Certificates.X509CertificateCollection.System.Collections.IList.Contains
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Security.Cryptography.X509Certificates.X509CertificateCollection.System#Collections#IList#IndexOf(System.Object)
  parent: System.Security.Cryptography.X509Certificates.X509CertificateCollection
  isExternal: true
  name: IList.IndexOf(Object)
  fullName: System.Security.Cryptography.X509Certificates.X509CertificateCollection.System.Collections.IList.IndexOf(System.Object)
  name.vb: System.Collections.IList.IndexOf(Object)
  spec.csharp:
  - uid: System.Security.Cryptography.X509Certificates.X509CertificateCollection.System#Collections#IList#IndexOf(System.Object)
    name: IList.IndexOf
    fullName: System.Security.Cryptography.X509Certificates.X509CertificateCollection.System.Collections.IList.IndexOf
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Security.Cryptography.X509Certificates.X509CertificateCollection.System#Collections#IList#IndexOf(System.Object)
    name: System.Collections.IList.IndexOf
    fullName: System.Security.Cryptography.X509Certificates.X509CertificateCollection.System.Collections.IList.IndexOf
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Security.Cryptography.X509Certificates.X509CertificateCollection.System#Collections#IList#Insert(System.Int32,System.Object)
  parent: System.Security.Cryptography.X509Certificates.X509CertificateCollection
  isExternal: true
  name: IList.Insert(Int32, Object)
  fullName: System.Security.Cryptography.X509Certificates.X509CertificateCollection.System.Collections.IList.Insert(System.Int32, System.Object)
  name.vb: System.Collections.IList.Insert(Int32, Object)
  spec.csharp:
  - uid: System.Security.Cryptography.X509Certificates.X509CertificateCollection.System#Collections#IList#Insert(System.Int32,System.Object)
    name: IList.Insert
    fullName: System.Security.Cryptography.X509Certificates.X509CertificateCollection.System.Collections.IList.Insert
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Security.Cryptography.X509Certificates.X509CertificateCollection.System#Collections#IList#Insert(System.Int32,System.Object)
    name: System.Collections.IList.Insert
    fullName: System.Security.Cryptography.X509Certificates.X509CertificateCollection.System.Collections.IList.Insert
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Security.Cryptography.X509Certificates.X509CertificateCollection.System#Collections#IList#Remove(System.Object)
  parent: System.Security.Cryptography.X509Certificates.X509CertificateCollection
  isExternal: true
  name: IList.Remove(Object)
  fullName: System.Security.Cryptography.X509Certificates.X509CertificateCollection.System.Collections.IList.Remove(System.Object)
  name.vb: System.Collections.IList.Remove(Object)
  spec.csharp:
  - uid: System.Security.Cryptography.X509Certificates.X509CertificateCollection.System#Collections#IList#Remove(System.Object)
    name: IList.Remove
    fullName: System.Security.Cryptography.X509Certificates.X509CertificateCollection.System.Collections.IList.Remove
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Security.Cryptography.X509Certificates.X509CertificateCollection.System#Collections#IList#Remove(System.Object)
    name: System.Collections.IList.Remove
    fullName: System.Security.Cryptography.X509Certificates.X509CertificateCollection.System.Collections.IList.Remove
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Collections
  isExternal: false
  name: System.Collections
  fullName: System.Collections
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2
  parent: System.Security.Cryptography.X509Certificates
  isExternal: false
  name: X509Certificate2
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2[]
  isExternal: false
  name: X509Certificate2[]
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2[]
  fullname.vb: System.Security.Cryptography.X509Certificates.X509Certificate2()
  name.vb: X509Certificate2()
  spec.csharp:
  - uid: System.Security.Cryptography.X509Certificates.X509Certificate2
    name: X509Certificate2
    fullName: System.Security.Cryptography.X509Certificates.X509Certificate2
  - name: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Security.Cryptography.X509Certificates.X509Certificate2
    name: X509Certificate2
    fullName: System.Security.Cryptography.X509Certificates.X509Certificate2
  - name: ()
    fullName: ()
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2Collection
  parent: System.Security.Cryptography.X509Certificates
  isExternal: false
  name: X509Certificate2Collection
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2Collection
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  fullName: System.Int32
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  fullName: System.Boolean
- uid: System.Security.Cryptography.X509Certificates.X509ContentType
  parent: System.Security.Cryptography.X509Certificates
  isExternal: false
  name: X509ContentType
  fullName: System.Security.Cryptography.X509Certificates.X509ContentType
- uid: System.Byte[]
  isExternal: true
  name: Byte[]
  fullName: System.Byte[]
  fullname.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    fullName: ()
- uid: System.String
  parent: System
  isExternal: false
  name: String
  fullName: System.String
- uid: System.Security.Cryptography.X509Certificates.X509FindType
  parent: System.Security.Cryptography.X509Certificates
  isExternal: false
  name: X509FindType
  fullName: System.Security.Cryptography.X509Certificates.X509FindType
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2Enumerator
  parent: System.Security.Cryptography.X509Certificates
  isExternal: false
  name: X509Certificate2Enumerator
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2Enumerator
- uid: System.Security.Cryptography.X509Certificates.X509KeyStorageFlags
  parent: System.Security.Cryptography.X509Certificates
  isExternal: false
  name: X509KeyStorageFlags
  fullName: System.Security.Cryptography.X509Certificates.X509KeyStorageFlags
- uid: System.ArgumentOutOfRangeException
  isExternal: false
  name: ArgumentOutOfRangeException
  fullName: System.ArgumentOutOfRangeException
- uid: System.ArgumentNullException
  isExternal: false
  name: ArgumentNullException
  fullName: System.ArgumentNullException
- uid: System.Security.Cryptography.CryptographicException
  isExternal: false
  name: CryptographicException
  fullName: System.Security.Cryptography.CryptographicException
- uid: System.NotSupportedException
  parent: System
  isExternal: false
  name: NotSupportedException
  fullName: System.NotSupportedException
