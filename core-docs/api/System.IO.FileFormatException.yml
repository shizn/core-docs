items:
- uid: System.IO.FileFormatException
  commentId: T:System.IO.FileFormatException
  id: FileFormatException
  parent: System.IO
  children:
  - System.IO.FileFormatException.#ctor
  - System.IO.FileFormatException.#ctor(System.String)
  - System.IO.FileFormatException.#ctor(System.String,System.Exception)
  - System.IO.FileFormatException.#ctor(System.Uri)
  - System.IO.FileFormatException.#ctor(System.Uri,System.Exception)
  - System.IO.FileFormatException.#ctor(System.Uri,System.String)
  - System.IO.FileFormatException.#ctor(System.Uri,System.String,System.Exception)
  - System.IO.FileFormatException.SourceUri
  langs:
  - csharp
  - vb
  name: FileFormatException
  fullName: System.IO.FileFormatException
  type: Class
  source:
    remote:
      path: src/System.IO.Packaging/ref/System.IO.Packaging.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: FileFormatException
    path: src/System.IO.Packaging/ref/System.IO.Packaging.cs
    startLine: 10
  assemblies:
  - System.IO.Packaging
  namespace: System.IO
  summary: "\n<p>The exception that is thrown when an input file or a data stream that is supposed to conform to a certain file format specification is malformed.</p>\n"
  example:
  - 
  syntax:
    content: 'public class FileFormatException : FormatException, ISerializable, _Exception'
    content.vb: >-
      Public Class FileFormatException
          Inherits FormatException
          Implements ISerializable, _Exception
  inheritance:
  - System.Object
  - System.Exception
  - System.SystemException
  - System.FormatException
  implements:
  - System.Runtime.Serialization.ISerializable
  - System.Runtime.InteropServices._Exception
  inheritedMembers:
  - System.Exception.GetBaseException
  - System.Exception.ToString
  - System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Exception.GetType
  - System.Exception.Message
  - System.Exception.Data
  - System.Exception.InnerException
  - System.Exception.TargetSite
  - System.Exception.StackTrace
  - System.Exception.HelpLink
  - System.Exception.Source
  - System.Exception.HResult
  - System.Exception.SerializeObjectState
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: System.IO.FileFormatException.#ctor
  commentId: M:System.IO.FileFormatException.#ctor
  id: '#ctor'
  parent: System.IO.FileFormatException
  langs:
  - csharp
  - vb
  name: FileFormatException()
  fullName: System.IO.FileFormatException.FileFormatException()
  type: Constructor
  source:
    remote:
      path: src/System.IO.Packaging/ref/System.IO.Packaging.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.IO.Packaging/ref/System.IO.Packaging.cs
    startLine: 12
  assemblies:
  - System.IO.Packaging
  namespace: System.IO
  summary: "\n<p>Creates a new instance of the <xref href=\"System.IO.FileFormatException\" data-throw-if-not-resolved=\"false\"></xref> class.</p>\n"
  remarks: "\n<p>This constructor uses a default system message that describes the error, such as \"An input file or a data stream does not conform to the expected file format specification.\" This message takes into account the current system culture.</p>\n"
  example:
  - 
  syntax:
    content: public FileFormatException()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.IO.FileFormatException.#ctor(System.String)
  commentId: M:System.IO.FileFormatException.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.IO.FileFormatException
  langs:
  - csharp
  - vb
  name: FileFormatException(String)
  fullName: System.IO.FileFormatException.FileFormatException(System.String)
  type: Constructor
  source:
    remote:
      path: src/System.IO.Packaging/ref/System.IO.Packaging.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.IO.Packaging/ref/System.IO.Packaging.cs
    startLine: 13
  assemblies:
  - System.IO.Packaging
  namespace: System.IO
  summary: "\n<p>Creates a new instance of the <xref href=\"System.IO.FileFormatException\" data-throw-if-not-resolved=\"false\"></xref> class with a specified error message.</p>\n"
  example:
  - 
  syntax:
    content: public FileFormatException(string message)
    content.vb: Public Sub New(message As String)
    parameters:
    - id: message
      type: System.String
      description: "\n<p>A <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref> value that represents the error message.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.IO.FileFormatException.#ctor(System.String,System.Exception)
  commentId: M:System.IO.FileFormatException.#ctor(System.String,System.Exception)
  id: '#ctor(System.String,System.Exception)'
  parent: System.IO.FileFormatException
  langs:
  - csharp
  - vb
  name: FileFormatException(String, Exception)
  fullName: System.IO.FileFormatException.FileFormatException(System.String, System.Exception)
  type: Constructor
  source:
    remote:
      path: src/System.IO.Packaging/ref/System.IO.Packaging.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.IO.Packaging/ref/System.IO.Packaging.cs
    startLine: 14
  assemblies:
  - System.IO.Packaging
  namespace: System.IO
  summary: "\n<p>Creates a new instance of the <xref href=\"System.IO.FileFormatException\" data-throw-if-not-resolved=\"false\"></xref> class with a specified error message and exception type.</p>\n"
  remarks: "\n<p>This constructor initializes the <xref href=\"System.Exception.Message\" data-throw-if-not-resolved=\"false\"></xref> property of the new <xref href=\"System.IO.FileFormatException\" data-throw-if-not-resolved=\"false\"></xref> instance with the specified error message represented by <em>message</em>.</p>\n"
  example:
  - 
  syntax:
    content: public FileFormatException(string message, Exception innerException)
    content.vb: Public Sub New(message As String, innerException As Exception)
    parameters:
    - id: message
      type: System.String
      description: "\n<p>A <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref> value that represents the error message.</p>\n"
    - id: innerException
      type: System.Exception
      description: "\n<p>The value of the <xref href=\"System.Exception.InnerException\" data-throw-if-not-resolved=\"false\"></xref> property, which represents the cause of the current exception.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.IO.FileFormatException.#ctor(System.Uri)
  commentId: M:System.IO.FileFormatException.#ctor(System.Uri)
  id: '#ctor(System.Uri)'
  parent: System.IO.FileFormatException
  langs:
  - csharp
  - vb
  name: FileFormatException(Uri)
  fullName: System.IO.FileFormatException.FileFormatException(System.Uri)
  type: Constructor
  source:
    remote:
      path: src/System.IO.Packaging/ref/System.IO.Packaging.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.IO.Packaging/ref/System.IO.Packaging.cs
    startLine: 15
  assemblies:
  - System.IO.Packaging
  namespace: System.IO
  summary: "\n<p>Creates a new instance of the <xref href=\"System.IO.FileFormatException\" data-throw-if-not-resolved=\"false\"></xref> class with a source URI value.</p>\n"
  remarks: "\n<p>This constructor initializes the <xref href=\"System.Exception.Message\" data-throw-if-not-resolved=\"false\"></xref> property of the new <xref href=\"System.IO.FileFormatException\" data-throw-if-not-resolved=\"false\"></xref> instance to a system-supplied message that describes the error and includes the file name, such as \"The file '<em>sourceUri</em>' does not conform to the expected file format specification.\" This message takes into account the current system culture.</p>\n<p>The <xref href=\"System.IO.FileFormatException.SourceUri\" data-throw-if-not-resolved=\"false\"></xref> property is initialized using the <em>sourceUri</em> parameter.</p>\n"
  example:
  - 
  syntax:
    content: public FileFormatException(Uri sourceUri)
    content.vb: Public Sub New(sourceUri As Uri)
    parameters:
    - id: sourceUri
      type: System.Uri
      description: "\n<p>The <xref href=\"System.Uri\" data-throw-if-not-resolved=\"false\"></xref> value of the file that caused this error.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.IO.FileFormatException.#ctor(System.Uri,System.Exception)
  commentId: M:System.IO.FileFormatException.#ctor(System.Uri,System.Exception)
  id: '#ctor(System.Uri,System.Exception)'
  parent: System.IO.FileFormatException
  langs:
  - csharp
  - vb
  name: FileFormatException(Uri, Exception)
  fullName: System.IO.FileFormatException.FileFormatException(System.Uri, System.Exception)
  type: Constructor
  source:
    remote:
      path: src/System.IO.Packaging/ref/System.IO.Packaging.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.IO.Packaging/ref/System.IO.Packaging.cs
    startLine: 16
  assemblies:
  - System.IO.Packaging
  namespace: System.IO
  summary: "\n<p>Creates a new instance of the <xref href=\"System.IO.FileFormatException\" data-throw-if-not-resolved=\"false\"></xref> class with a source URI value and an exception type.</p>\n"
  remarks: "\n<p>This constructor initializes the Message property of the new instance to a system-supplied message that describes the error and includes the file name, such as \"The file '<em>sourceUri</em>' does not conform to the expected file format specification.\" This message takes into account the current system culture.</p>\n<p>The <xref href=\"System.IO.FileFormatException.SourceUri\" data-throw-if-not-resolved=\"false\"></xref> property is initialized using the <em>sourceUri</em> parameter.</p>\n"
  example:
  - 
  syntax:
    content: public FileFormatException(Uri sourceUri, Exception innerException)
    content.vb: Public Sub New(sourceUri As Uri, innerException As Exception)
    parameters:
    - id: sourceUri
      type: System.Uri
      description: "\n<p>The <xref href=\"System.Uri\" data-throw-if-not-resolved=\"false\"></xref> value of the file that caused this error.</p>\n"
    - id: innerException
      type: System.Exception
      description: "\n<p>The value of the <xref href=\"System.Exception.InnerException\" data-throw-if-not-resolved=\"false\"></xref> property, which represents the cause of the current exception.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.IO.FileFormatException.#ctor(System.Uri,System.String)
  commentId: M:System.IO.FileFormatException.#ctor(System.Uri,System.String)
  id: '#ctor(System.Uri,System.String)'
  parent: System.IO.FileFormatException
  langs:
  - csharp
  - vb
  name: FileFormatException(Uri, String)
  fullName: System.IO.FileFormatException.FileFormatException(System.Uri, System.String)
  type: Constructor
  source:
    remote:
      path: src/System.IO.Packaging/ref/System.IO.Packaging.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.IO.Packaging/ref/System.IO.Packaging.cs
    startLine: 17
  assemblies:
  - System.IO.Packaging
  namespace: System.IO
  summary: "\n<p>Creates a new instance of the <xref href=\"System.IO.FileFormatException\" data-throw-if-not-resolved=\"false\"></xref> class with a source URI value and a specified error message.</p>\n"
  remarks: "\n<p>This constructor initializes the <xref href=\"System.Exception.Message\" data-throw-if-not-resolved=\"false\"></xref> property of the new <xref href=\"System.IO.FileFormatException\" data-throw-if-not-resolved=\"false\"></xref> instance with the specified error message represented by <em>message</em>. The caller of this constructor is required to ensure that this string has been localized for the current system culture.</p>\n<p>The <xref href=\"System.IO.FileFormatException.SourceUri\" data-throw-if-not-resolved=\"false\"></xref> property is initialized using the <em>sourceUri</em> parameter.</p>\n"
  example:
  - 
  syntax:
    content: public FileFormatException(Uri sourceUri, string message)
    content.vb: Public Sub New(sourceUri As Uri, message As String)
    parameters:
    - id: sourceUri
      type: System.Uri
      description: "\n<p>The <xref href=\"System.Uri\" data-throw-if-not-resolved=\"false\"></xref> value of the file that caused this error.</p>\n"
    - id: message
      type: System.String
      description: "\n<p>A <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref> value that represents the error message.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.IO.FileFormatException.#ctor(System.Uri,System.String,System.Exception)
  commentId: M:System.IO.FileFormatException.#ctor(System.Uri,System.String,System.Exception)
  id: '#ctor(System.Uri,System.String,System.Exception)'
  parent: System.IO.FileFormatException
  langs:
  - csharp
  - vb
  name: FileFormatException(Uri, String, Exception)
  fullName: System.IO.FileFormatException.FileFormatException(System.Uri, System.String, System.Exception)
  type: Constructor
  source:
    remote:
      path: src/System.IO.Packaging/ref/System.IO.Packaging.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.IO.Packaging/ref/System.IO.Packaging.cs
    startLine: 18
  assemblies:
  - System.IO.Packaging
  namespace: System.IO
  summary: "\n<p>Creates a new instance of the <xref href=\"System.IO.FileFormatException\" data-throw-if-not-resolved=\"false\"></xref> class with a source URI value, a specified error message, and an exception type.</p>\n"
  remarks: "\n<p>This constructor initializes the Message property of the new instance using the message parameter. The caller of this constructor is required to ensure that this string has been localized for the current system culture.</p>\n<p>The <xref href=\"System.IO.FileFormatException.SourceUri\" data-throw-if-not-resolved=\"false\"></xref> property is initialized using the <em>sourceUri</em> parameter.</p>\n"
  example:
  - 
  syntax:
    content: public FileFormatException(Uri sourceUri, string message, Exception innerException)
    content.vb: Public Sub New(sourceUri As Uri, message As String, innerException As Exception)
    parameters:
    - id: sourceUri
      type: System.Uri
      description: "\n<p>The <xref href=\"System.Uri\" data-throw-if-not-resolved=\"false\"></xref> value of the file that caused this error.</p>\n"
    - id: message
      type: System.String
      description: "\n<p>A <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref> value that represents the error message.</p>\n"
    - id: innerException
      type: System.Exception
      description: "\n<p>The value of the <xref href=\"System.Exception.InnerException\" data-throw-if-not-resolved=\"false\"></xref> property, which represents the cause of the current exception.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.IO.FileFormatException.SourceUri
  commentId: P:System.IO.FileFormatException.SourceUri
  id: SourceUri
  parent: System.IO.FileFormatException
  langs:
  - csharp
  - vb
  name: SourceUri
  fullName: System.IO.FileFormatException.SourceUri
  type: Property
  source:
    remote:
      path: src/System.IO.Packaging/ref/System.IO.Packaging.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: SourceUri
    path: src/System.IO.Packaging/ref/System.IO.Packaging.cs
    startLine: 19
  assemblies:
  - System.IO.Packaging
  namespace: System.IO
  summary: "\n<p>Gets the name of a file that caused the <xref href=\"System.IO.FileFormatException\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  remarks: "\n<p>If there was an error in obtaining the name the file that caused the exception, the return value is <strong>null</strong>, and SourceUri.<xref href=\"System.Object.ToString\" data-throw-if-not-resolved=\"false\"></xref> returns an empty string.</p>\n"
  example:
  - 
  syntax:
    content: public Uri SourceUri { get; }
    content.vb: Public ReadOnly Property SourceUri As Uri
    parameters: []
    return:
      type: System.Uri
      description: "\n<p>A <xref href=\"System.Uri\" data-throw-if-not-resolved=\"false\"></xref> that represents the name the file that caused the exception.</p>\n"
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: System.IO
  isExternal: false
  name: System.IO
  fullName: System.IO
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System.Exception
  parent: System
  isExternal: false
  name: Exception
  fullName: System.Exception
- uid: System.SystemException
  parent: System
  isExternal: true
  name: SystemException
  fullName: System.SystemException
- uid: System.FormatException
  parent: System
  isExternal: false
  name: FormatException
  fullName: System.FormatException
- uid: System.Runtime.Serialization.ISerializable
  parent: System.Runtime.Serialization
  isExternal: false
  name: ISerializable
  fullName: System.Runtime.Serialization.ISerializable
- uid: System.Runtime.InteropServices._Exception
  parent: System.Runtime.InteropServices
  isExternal: true
  name: _Exception
  fullName: System.Runtime.InteropServices._Exception
- uid: System.Exception.GetBaseException
  parent: System.Exception
  isExternal: false
  name: GetBaseException()
  fullName: System.Exception.GetBaseException()
  spec.csharp:
  - uid: System.Exception.GetBaseException
    name: GetBaseException
    fullName: System.Exception.GetBaseException
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Exception.GetBaseException
    name: GetBaseException
    fullName: System.Exception.GetBaseException
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Exception.ToString
  parent: System.Exception
  isExternal: false
  name: ToString()
  fullName: System.Exception.ToString()
  spec.csharp:
  - uid: System.Exception.ToString
    name: ToString
    fullName: System.Exception.ToString
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Exception.ToString
    name: ToString
    fullName: System.Exception.ToString
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Exception
  isExternal: true
  name: GetObjectData(SerializationInfo, StreamingContext)
  fullName: System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)
  spec.csharp:
  - uid: System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
    name: GetObjectData
    fullName: System.Exception.GetObjectData
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Runtime.Serialization.SerializationInfo
    name: SerializationInfo
    fullName: System.Runtime.Serialization.SerializationInfo
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Runtime.Serialization.StreamingContext
    name: StreamingContext
    fullName: System.Runtime.Serialization.StreamingContext
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
    name: GetObjectData
    fullName: System.Exception.GetObjectData
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Runtime.Serialization.SerializationInfo
    name: SerializationInfo
    fullName: System.Runtime.Serialization.SerializationInfo
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Runtime.Serialization.StreamingContext
    name: StreamingContext
    fullName: System.Runtime.Serialization.StreamingContext
    isExternal: true
  - name: )
    fullName: )
- uid: System.Exception.GetType
  parent: System.Exception
  isExternal: true
  name: GetType()
  fullName: System.Exception.GetType()
  spec.csharp:
  - uid: System.Exception.GetType
    name: GetType
    fullName: System.Exception.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Exception.GetType
    name: GetType
    fullName: System.Exception.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Exception.Message
  parent: System.Exception
  isExternal: false
  name: Message
  fullName: System.Exception.Message
- uid: System.Exception.Data
  parent: System.Exception
  isExternal: false
  name: Data
  fullName: System.Exception.Data
- uid: System.Exception.InnerException
  parent: System.Exception
  isExternal: false
  name: InnerException
  fullName: System.Exception.InnerException
- uid: System.Exception.TargetSite
  parent: System.Exception
  isExternal: true
  name: TargetSite
  fullName: System.Exception.TargetSite
- uid: System.Exception.StackTrace
  parent: System.Exception
  isExternal: false
  name: StackTrace
  fullName: System.Exception.StackTrace
- uid: System.Exception.HelpLink
  parent: System.Exception
  isExternal: false
  name: HelpLink
  fullName: System.Exception.HelpLink
- uid: System.Exception.Source
  parent: System.Exception
  isExternal: false
  name: Source
  fullName: System.Exception.Source
- uid: System.Exception.HResult
  parent: System.Exception
  isExternal: false
  name: HResult
  fullName: System.Exception.HResult
- uid: System.Exception.SerializeObjectState
  parent: System.Exception
  isExternal: true
  name: SerializeObjectState
  fullName: System.Exception.SerializeObjectState
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Runtime.Serialization
  isExternal: false
  name: System.Runtime.Serialization
  fullName: System.Runtime.Serialization
- uid: System.Runtime.InteropServices
  isExternal: false
  name: System.Runtime.InteropServices
  fullName: System.Runtime.InteropServices
- uid: System.String
  parent: System
  isExternal: false
  name: String
  fullName: System.String
- uid: System.Uri
  parent: System
  isExternal: false
  name: Uri
  fullName: System.Uri
