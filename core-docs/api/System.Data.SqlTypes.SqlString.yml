items:
- uid: System.Data.SqlTypes.SqlString
  commentId: T:System.Data.SqlTypes.SqlString
  id: SqlString
  parent: System.Data.SqlTypes
  children:
  - System.Data.SqlTypes.SqlString.#ctor(System.Int32,System.Data.SqlTypes.SqlCompareOptions,System.Byte[])
  - System.Data.SqlTypes.SqlString.#ctor(System.Int32,System.Data.SqlTypes.SqlCompareOptions,System.Byte[],System.Boolean)
  - System.Data.SqlTypes.SqlString.#ctor(System.Int32,System.Data.SqlTypes.SqlCompareOptions,System.Byte[],System.Int32,System.Int32)
  - System.Data.SqlTypes.SqlString.#ctor(System.Int32,System.Data.SqlTypes.SqlCompareOptions,System.Byte[],System.Int32,System.Int32,System.Boolean)
  - System.Data.SqlTypes.SqlString.#ctor(System.String)
  - System.Data.SqlTypes.SqlString.#ctor(System.String,System.Int32)
  - System.Data.SqlTypes.SqlString.#ctor(System.String,System.Int32,System.Data.SqlTypes.SqlCompareOptions)
  - System.Data.SqlTypes.SqlString.Add(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)
  - System.Data.SqlTypes.SqlString.BinarySort
  - System.Data.SqlTypes.SqlString.BinarySort2
  - System.Data.SqlTypes.SqlString.Clone
  - System.Data.SqlTypes.SqlString.CompareInfo
  - System.Data.SqlTypes.SqlString.CompareOptionsFromSqlCompareOptions(System.Data.SqlTypes.SqlCompareOptions)
  - System.Data.SqlTypes.SqlString.CompareTo(System.Data.SqlTypes.SqlString)
  - System.Data.SqlTypes.SqlString.CompareTo(System.Object)
  - System.Data.SqlTypes.SqlString.Concat(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)
  - System.Data.SqlTypes.SqlString.CultureInfo
  - System.Data.SqlTypes.SqlString.Equals(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)
  - System.Data.SqlTypes.SqlString.Equals(System.Object)
  - System.Data.SqlTypes.SqlString.GetHashCode
  - System.Data.SqlTypes.SqlString.GetNonUnicodeBytes
  - System.Data.SqlTypes.SqlString.GetUnicodeBytes
  - System.Data.SqlTypes.SqlString.GreaterThan(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)
  - System.Data.SqlTypes.SqlString.GreaterThanOrEqual(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)
  - System.Data.SqlTypes.SqlString.IgnoreCase
  - System.Data.SqlTypes.SqlString.IgnoreKanaType
  - System.Data.SqlTypes.SqlString.IgnoreNonSpace
  - System.Data.SqlTypes.SqlString.IgnoreWidth
  - System.Data.SqlTypes.SqlString.IsNull
  - System.Data.SqlTypes.SqlString.LCID
  - System.Data.SqlTypes.SqlString.LessThan(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)
  - System.Data.SqlTypes.SqlString.LessThanOrEqual(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)
  - System.Data.SqlTypes.SqlString.NotEquals(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)
  - System.Data.SqlTypes.SqlString.Null
  - System.Data.SqlTypes.SqlString.op_Addition(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)
  - System.Data.SqlTypes.SqlString.op_Equality(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)
  - System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlBoolean)~System.Data.SqlTypes.SqlString
  - System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlByte)~System.Data.SqlTypes.SqlString
  - System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlDateTime)~System.Data.SqlTypes.SqlString
  - System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlDecimal)~System.Data.SqlTypes.SqlString
  - System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlDouble)~System.Data.SqlTypes.SqlString
  - System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlGuid)~System.Data.SqlTypes.SqlString
  - System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlInt16)~System.Data.SqlTypes.SqlString
  - System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlInt32)~System.Data.SqlTypes.SqlString
  - System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlInt64)~System.Data.SqlTypes.SqlString
  - System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlMoney)~System.Data.SqlTypes.SqlString
  - System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlSingle)~System.Data.SqlTypes.SqlString
  - System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlString)~System.String
  - System.Data.SqlTypes.SqlString.op_GreaterThan(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)
  - System.Data.SqlTypes.SqlString.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)
  - System.Data.SqlTypes.SqlString.op_Implicit(System.String)~System.Data.SqlTypes.SqlString
  - System.Data.SqlTypes.SqlString.op_Inequality(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)
  - System.Data.SqlTypes.SqlString.op_LessThan(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)
  - System.Data.SqlTypes.SqlString.op_LessThanOrEqual(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)
  - System.Data.SqlTypes.SqlString.SqlCompareOptions
  - System.Data.SqlTypes.SqlString.ToSqlBoolean
  - System.Data.SqlTypes.SqlString.ToSqlByte
  - System.Data.SqlTypes.SqlString.ToSqlDateTime
  - System.Data.SqlTypes.SqlString.ToSqlDecimal
  - System.Data.SqlTypes.SqlString.ToSqlDouble
  - System.Data.SqlTypes.SqlString.ToSqlGuid
  - System.Data.SqlTypes.SqlString.ToSqlInt16
  - System.Data.SqlTypes.SqlString.ToSqlInt32
  - System.Data.SqlTypes.SqlString.ToSqlInt64
  - System.Data.SqlTypes.SqlString.ToSqlMoney
  - System.Data.SqlTypes.SqlString.ToSqlSingle
  - System.Data.SqlTypes.SqlString.ToString
  - System.Data.SqlTypes.SqlString.Value
  langs:
  - csharp
  - vb
  name: SqlString
  fullName: System.Data.SqlTypes.SqlString
  type: Struct
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLString.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: SqlString
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLString.cs
    startLine: 35
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: "\n<p>Represents a variable-length stream of characters to be stored in or retrieved from the database. <xref href=\"System.Data.SqlTypes.SqlString\" data-throw-if-not-resolved=\"false\"></xref> has a different underlying data structure from its corresponding .NET Framework <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref> data type.</p>\n"
  remarks: "\n<p>\n<xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref> always uses the default <xref href=\"System.Globalization.CultureInfo\" data-throw-if-not-resolved=\"false\"></xref> from the current thread, but <xref href=\"System.Data.SqlTypes.SqlString\" data-throw-if-not-resolved=\"false\"></xref> contains its own locale Id and compare flags. The comparison result of two <xref href=\"System.Data.SqlTypes.SqlString\" data-throw-if-not-resolved=\"false\"></xref> structures is independent of operating system and current thread locale. </p>\n<p>When you use <xref href=\"System.Data.SqlTypes.SqlString\" data-throw-if-not-resolved=\"false\"></xref> comparison operators, note that if the LCIDs of arguments are different, comparison functions throw an exception because they cannot be compared. For example, the statement </p>\n<pre><code> SqlString mySqlString = new SqlString(\"abc\");</code></pre>\n<p>is equivalent to </p>\n<pre><code> SqlString mySqlString = new SqlString(\"abc\", CultureInfo.CurrentCulture.LCID);</code></pre>\n"
  syntax:
    content: >-
      [StructLayout(LayoutKind.Sequential)]

      public struct SqlString : INullable, IComparable
    content.vb: >-
      <StructLayout(LayoutKind.Sequential)>

      Public Structure SqlString
          Implements INullable, IComparable
  seealso:
  - type: System.Globalization.CultureInfo.CurrentCulture
    commentId: P:System.Globalization.CultureInfo.CurrentCulture
  implements:
  - System.Data.SqlTypes.INullable
  - System.IComparable
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetType
  attributes:
  - type: System.Runtime.InteropServices.StructLayoutAttribute
    ctor: System.Runtime.InteropServices.StructLayoutAttribute.#ctor(System.Runtime.InteropServices.LayoutKind)
    arguments:
    - type: System.Runtime.InteropServices.LayoutKind
      value: 0
  modifiers.csharp:
  - public
  - struct
  modifiers.vb:
  - Public
  - Structure
- uid: System.Data.SqlTypes.SqlString.BinarySort
  commentId: F:System.Data.SqlTypes.SqlString.BinarySort
  id: BinarySort
  parent: System.Data.SqlTypes.SqlString
  langs:
  - csharp
  - vb
  name: BinarySort
  fullName: System.Data.SqlTypes.SqlString.BinarySort
  type: Field
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLString.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: BinarySort
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLString.cs
    startLine: 68
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: "\n<p>Specifies that sorts should be based on a characters numeric value instead of its alphabetical value.</p>\n"
  remarks: "\n<p>\n<xref href=\"System.Data.SqlTypes.SqlString.BinarySort\" data-throw-if-not-resolved=\"false\"></xref> functions as a constant for the <xref href=\"System.Data.SqlTypes.SqlString\" data-throw-if-not-resolved=\"false\"></xref> class.</p>\n"
  syntax:
    content: public static readonly int BinarySort
    content.vb: Public Shared ReadOnly BinarySort As Integer
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: System.Data.SqlTypes.SqlString.BinarySort2
  commentId: F:System.Data.SqlTypes.SqlString.BinarySort2
  id: BinarySort2
  parent: System.Data.SqlTypes.SqlString
  langs:
  - csharp
  - vb
  name: BinarySort2
  fullName: System.Data.SqlTypes.SqlString.BinarySort2
  type: Field
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLString.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: BinarySort2
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLString.cs
    startLine: 71
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: "\n<p>Specifies that sorts should be based on a character's numeric value instead of its alphabetical value.</p>\n"
  syntax:
    content: public static readonly int BinarySort2
    content.vb: Public Shared ReadOnly BinarySort2 As Integer
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: System.Data.SqlTypes.SqlString.IgnoreCase
  commentId: F:System.Data.SqlTypes.SqlString.IgnoreCase
  id: IgnoreCase
  parent: System.Data.SqlTypes.SqlString
  langs:
  - csharp
  - vb
  name: IgnoreCase
  fullName: System.Data.SqlTypes.SqlString.IgnoreCase
  type: Field
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLString.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IgnoreCase
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLString.cs
    startLine: 56
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: "\n<p>Specifies that <xref href=\"System.Data.SqlTypes.SqlString\" data-throw-if-not-resolved=\"false\"></xref> comparisons should ignore case.</p>\n"
  remarks: "\n<p>\n<xref href=\"System.Data.SqlTypes.SqlString.IgnoreCase\" data-throw-if-not-resolved=\"false\"></xref> functions as a constant for the <xref href=\"System.Data.SqlTypes.SqlString\" data-throw-if-not-resolved=\"false\"></xref> class.</p>\n"
  syntax:
    content: public static readonly int IgnoreCase
    content.vb: Public Shared ReadOnly IgnoreCase As Integer
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: System.Data.SqlTypes.SqlString.IgnoreKanaType
  commentId: F:System.Data.SqlTypes.SqlString.IgnoreKanaType
  id: IgnoreKanaType
  parent: System.Data.SqlTypes.SqlString
  langs:
  - csharp
  - vb
  name: IgnoreKanaType
  fullName: System.Data.SqlTypes.SqlString.IgnoreKanaType
  type: Field
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLString.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IgnoreKanaType
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLString.cs
    startLine: 65
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: "\n<p>Specifies that the string comparison must ignore the Kana type. </p>\n"
  remarks: "\n<p>Kana type refers to Japanese hiragana and katakana characters that represent phonetic sounds in the Japanese language. Hiragana is used for native Japanese expressions and words, while katakana is used for words borrowed from other languages, such as \"computer\" or \"Internet\". A phonetic sound can be expressed in both hiragana and katakana. If this value is selected, the hiragana character for one sound is considered equal to the katakana character for the same sound.</p>\n<p>\n<xref href=\"System.Data.SqlTypes.SqlString.IgnoreKanaType\" data-throw-if-not-resolved=\"false\"></xref> functions as a constant for the <xref href=\"System.Data.SqlTypes.SqlString\" data-throw-if-not-resolved=\"false\"></xref> class.</p>\n"
  syntax:
    content: public static readonly int IgnoreKanaType
    content.vb: Public Shared ReadOnly IgnoreKanaType As Integer
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: System.Data.SqlTypes.SqlString.IgnoreNonSpace
  commentId: F:System.Data.SqlTypes.SqlString.IgnoreNonSpace
  id: IgnoreNonSpace
  parent: System.Data.SqlTypes.SqlString
  langs:
  - csharp
  - vb
  name: IgnoreNonSpace
  fullName: System.Data.SqlTypes.SqlString.IgnoreNonSpace
  type: Field
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLString.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IgnoreNonSpace
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLString.cs
    startLine: 62
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: "\n<p>Specifies that the string comparison must ignore non-space combining characters, such as diacritics. </p>\n"
  remarks: "\n<p>The Unicode Standard defines combining characters as characters that are combined with base characters to produce a new character. Non-space combining characters do not use character space by themselves when rendered. For more information about non-space combining characters, see the Unicode Standard at http://www.unicode.org.</p>\n<p>\n<xref href=\"System.Data.SqlTypes.SqlString.IgnoreNonSpace\" data-throw-if-not-resolved=\"false\"></xref> functions as a constant for the <xref href=\"System.Data.SqlTypes.SqlString\" data-throw-if-not-resolved=\"false\"></xref> class.</p>\n"
  syntax:
    content: public static readonly int IgnoreNonSpace
    content.vb: Public Shared ReadOnly IgnoreNonSpace As Integer
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: System.Data.SqlTypes.SqlString.IgnoreWidth
  commentId: F:System.Data.SqlTypes.SqlString.IgnoreWidth
  id: IgnoreWidth
  parent: System.Data.SqlTypes.SqlString
  langs:
  - csharp
  - vb
  name: IgnoreWidth
  fullName: System.Data.SqlTypes.SqlString.IgnoreWidth
  type: Field
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLString.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IgnoreWidth
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLString.cs
    startLine: 59
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: "\n<p>Specifies that the string comparison must ignore the character width. </p>\n"
  remarks: "\n<p>For example, Japanese katakana characters can be written as full-width or half-width and, if this value is selected, the katakana characters written as full-width are considered equal to the same characters written in half-width.</p>\n<p>\n<xref href=\"System.Data.SqlTypes.SqlString.IgnoreWidth\" data-throw-if-not-resolved=\"false\"></xref> functions as a constant for the <xref href=\"System.Data.SqlTypes.SqlString\" data-throw-if-not-resolved=\"false\"></xref> class.</p>\n"
  syntax:
    content: public static readonly int IgnoreWidth
    content.vb: Public Shared ReadOnly IgnoreWidth As Integer
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: System.Data.SqlTypes.SqlString.Null
  commentId: F:System.Data.SqlTypes.SqlString.Null
  parent: System.Data.SqlTypes.SqlString
  langs:
  - csharp
  - vb
  fullName: System.Data.SqlTypes.SqlString.Null
  type: Field
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLString.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLString.cs
    startLine: 50
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: "\n<p>Represents a <xref href=\"System.DBNull\" data-throw-if-not-resolved=\"false\"></xref> that can be assigned to this instance of the <xref href=\"System.Data.SqlTypes.SqlString\" data-throw-if-not-resolved=\"false\"></xref> structure.</p>\n"
  remarks: "\n<p>\n<strong>Null</strong> functions as a constant for the <xref href=\"System.Data.SqlTypes.SqlString\" data-throw-if-not-resolved=\"false\"></xref> structure.  For more information, see Handling Null Values.</p>\n"
  syntax:
    content: public static readonly SqlString Null
    content.vb: Public Shared ReadOnly Null As SqlString
    return:
      type: System.Data.SqlTypes.SqlString
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: System.Data.SqlTypes.SqlString.#ctor(System.Int32,System.Data.SqlTypes.SqlCompareOptions,System.Byte[])
  commentId: M:System.Data.SqlTypes.SqlString.#ctor(System.Int32,System.Data.SqlTypes.SqlCompareOptions,System.Byte[])
  id: '#ctor(System.Int32,System.Data.SqlTypes.SqlCompareOptions,System.Byte[])'
  parent: System.Data.SqlTypes.SqlString
  langs:
  - csharp
  - vb
  name: SqlString(Int32, SqlCompareOptions, Byte[])
  fullName: System.Data.SqlTypes.SqlString.SqlString(System.Int32, System.Data.SqlTypes.SqlCompareOptions, System.Byte[])
  type: Constructor
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLString.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLString.cs
    startLine: 163
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Data.SqlTypes.SqlString\" data-throw-if-not-resolved=\"false\"></xref> structure using the specified locale id, compare options, and data.</p>\n"
  syntax:
    content: public SqlString(int lcid, SqlCompareOptions compareOptions, byte[] data)
    content.vb: Public Sub New(lcid As Integer, compareOptions As SqlCompareOptions, data As Byte())
    parameters:
    - id: lcid
      type: System.Int32
    - id: compareOptions
      type: System.Data.SqlTypes.SqlCompareOptions
    - id: data
      type: System.Byte[]
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Data.SqlTypes.SqlString.SqlString(System.Int32, System.Data.SqlTypes.SqlCompareOptions, System.Byte())
  name.vb: SqlString(Int32, SqlCompareOptions, Byte())
- uid: System.Data.SqlTypes.SqlString.#ctor(System.Int32,System.Data.SqlTypes.SqlCompareOptions,System.Byte[],System.Boolean)
  commentId: M:System.Data.SqlTypes.SqlString.#ctor(System.Int32,System.Data.SqlTypes.SqlCompareOptions,System.Byte[],System.Boolean)
  id: '#ctor(System.Int32,System.Data.SqlTypes.SqlCompareOptions,System.Byte[],System.Boolean)'
  parent: System.Data.SqlTypes.SqlString
  langs:
  - csharp
  - vb
  name: SqlString(Int32, SqlCompareOptions, Byte[], Boolean)
  fullName: System.Data.SqlTypes.SqlString.SqlString(System.Int32, System.Data.SqlTypes.SqlCompareOptions, System.Byte[], System.Boolean)
  type: Constructor
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLString.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLString.cs
    startLine: 143
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Data.SqlTypes.SqlString\" data-throw-if-not-resolved=\"false\"></xref> class.</p>\n"
  syntax:
    content: public SqlString(int lcid, SqlCompareOptions compareOptions, byte[] data, bool fUnicode)
    content.vb: Public Sub New(lcid As Integer, compareOptions As SqlCompareOptions, data As Byte(), fUnicode As Boolean)
    parameters:
    - id: lcid
      type: System.Int32
    - id: compareOptions
      type: System.Data.SqlTypes.SqlCompareOptions
    - id: data
      type: System.Byte[]
    - id: fUnicode
      type: System.Boolean
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Data.SqlTypes.SqlString.SqlString(System.Int32, System.Data.SqlTypes.SqlCompareOptions, System.Byte(), System.Boolean)
  name.vb: SqlString(Int32, SqlCompareOptions, Byte(), Boolean)
- uid: System.Data.SqlTypes.SqlString.#ctor(System.Int32,System.Data.SqlTypes.SqlCompareOptions,System.Byte[],System.Int32,System.Int32)
  commentId: M:System.Data.SqlTypes.SqlString.#ctor(System.Int32,System.Data.SqlTypes.SqlCompareOptions,System.Byte[],System.Int32,System.Int32)
  id: '#ctor(System.Int32,System.Data.SqlTypes.SqlCompareOptions,System.Byte[],System.Int32,System.Int32)'
  parent: System.Data.SqlTypes.SqlString
  langs:
  - csharp
  - vb
  name: SqlString(Int32, SqlCompareOptions, Byte[], Int32, Int32)
  fullName: System.Data.SqlTypes.SqlString.SqlString(System.Int32, System.Data.SqlTypes.SqlCompareOptions, System.Byte[], System.Int32, System.Int32)
  type: Constructor
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLString.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLString.cs
    startLine: 153
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Data.SqlTypes.SqlString\" data-throw-if-not-resolved=\"false\"></xref> class.</p>\n"
  syntax:
    content: public SqlString(int lcid, SqlCompareOptions compareOptions, byte[] data, int index, int count)
    content.vb: Public Sub New(lcid As Integer, compareOptions As SqlCompareOptions, data As Byte(), index As Integer, count As Integer)
    parameters:
    - id: lcid
      type: System.Int32
    - id: compareOptions
      type: System.Data.SqlTypes.SqlCompareOptions
    - id: data
      type: System.Byte[]
    - id: index
      type: System.Int32
    - id: count
      type: System.Int32
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Data.SqlTypes.SqlString.SqlString(System.Int32, System.Data.SqlTypes.SqlCompareOptions, System.Byte(), System.Int32, System.Int32)
  name.vb: SqlString(Int32, SqlCompareOptions, Byte(), Int32, Int32)
- uid: System.Data.SqlTypes.SqlString.#ctor(System.Int32,System.Data.SqlTypes.SqlCompareOptions,System.Byte[],System.Int32,System.Int32,System.Boolean)
  commentId: M:System.Data.SqlTypes.SqlString.#ctor(System.Int32,System.Data.SqlTypes.SqlCompareOptions,System.Byte[],System.Int32,System.Int32,System.Boolean)
  id: '#ctor(System.Int32,System.Data.SqlTypes.SqlCompareOptions,System.Byte[],System.Int32,System.Int32,System.Boolean)'
  parent: System.Data.SqlTypes.SqlString
  langs:
  - csharp
  - vb
  name: SqlString(Int32, SqlCompareOptions, Byte[], Int32, Int32, Boolean)
  fullName: System.Data.SqlTypes.SqlString.SqlString(System.Int32, System.Data.SqlTypes.SqlCompareOptions, System.Byte[], System.Int32, System.Int32, System.Boolean)
  type: Constructor
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLString.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLString.cs
    startLine: 106
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Data.SqlTypes.SqlString\" data-throw-if-not-resolved=\"false\"></xref> class.</p>\n"
  syntax:
    content: public SqlString(int lcid, SqlCompareOptions compareOptions, byte[] data, int index, int count, bool fUnicode)
    content.vb: Public Sub New(lcid As Integer, compareOptions As SqlCompareOptions, data As Byte(), index As Integer, count As Integer, fUnicode As Boolean)
    parameters:
    - id: lcid
      type: System.Int32
    - id: compareOptions
      type: System.Data.SqlTypes.SqlCompareOptions
    - id: data
      type: System.Byte[]
    - id: index
      type: System.Int32
    - id: count
      type: System.Int32
    - id: fUnicode
      type: System.Boolean
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Data.SqlTypes.SqlString.SqlString(System.Int32, System.Data.SqlTypes.SqlCompareOptions, System.Byte(), System.Int32, System.Int32, System.Boolean)
  name.vb: SqlString(Int32, SqlCompareOptions, Byte(), Int32, Int32, Boolean)
- uid: System.Data.SqlTypes.SqlString.#ctor(System.String)
  commentId: M:System.Data.SqlTypes.SqlString.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Data.SqlTypes.SqlString
  langs:
  - csharp
  - vb
  name: SqlString(String)
  fullName: System.Data.SqlTypes.SqlString.SqlString(System.String)
  type: Constructor
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLString.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLString.cs
    startLine: 206
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Data.SqlTypes.SqlString\" data-throw-if-not-resolved=\"false\"></xref> structure using the specified string.</p>\n"
  syntax:
    content: public SqlString(string data)
    content.vb: Public Sub New(data As String)
    parameters:
    - id: data
      type: System.String
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Data.SqlTypes.SqlString.#ctor(System.String,System.Int32)
  commentId: M:System.Data.SqlTypes.SqlString.#ctor(System.String,System.Int32)
  id: '#ctor(System.String,System.Int32)'
  parent: System.Data.SqlTypes.SqlString
  langs:
  - csharp
  - vb
  name: SqlString(String, Int32)
  fullName: System.Data.SqlTypes.SqlString.SqlString(System.String, System.Int32)
  type: Constructor
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLString.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLString.cs
    startLine: 197
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Data.SqlTypes.SqlString\" data-throw-if-not-resolved=\"false\"></xref> structure using the specified string and locale id values.</p>\n"
  syntax:
    content: public SqlString(string data, int lcid)
    content.vb: Public Sub New(data As String, lcid As Integer)
    parameters:
    - id: data
      type: System.String
    - id: lcid
      type: System.Int32
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Data.SqlTypes.SqlString.#ctor(System.String,System.Int32,System.Data.SqlTypes.SqlCompareOptions)
  commentId: M:System.Data.SqlTypes.SqlString.#ctor(System.String,System.Int32,System.Data.SqlTypes.SqlCompareOptions)
  id: '#ctor(System.String,System.Int32,System.Data.SqlTypes.SqlCompareOptions)'
  parent: System.Data.SqlTypes.SqlString
  langs:
  - csharp
  - vb
  name: SqlString(String, Int32, SqlCompareOptions)
  fullName: System.Data.SqlTypes.SqlString.SqlString(System.String, System.Int32, System.Data.SqlTypes.SqlCompareOptions)
  type: Constructor
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLString.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLString.cs
    startLine: 174
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Data.SqlTypes.SqlString\" data-throw-if-not-resolved=\"false\"></xref> structure using the specified string, locale id, and compare option values.</p>\n"
  syntax:
    content: public SqlString(string data, int lcid, SqlCompareOptions compareOptions)
    content.vb: Public Sub New(data As String, lcid As Integer, compareOptions As SqlCompareOptions)
    parameters:
    - id: data
      type: System.String
    - id: lcid
      type: System.Int32
    - id: compareOptions
      type: System.Data.SqlTypes.SqlCompareOptions
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Data.SqlTypes.SqlString.CompareInfo
  commentId: P:System.Data.SqlTypes.SqlString.CompareInfo
  id: CompareInfo
  parent: System.Data.SqlTypes.SqlString
  langs:
  - csharp
  - vb
  name: CompareInfo
  fullName: System.Data.SqlTypes.SqlString.CompareInfo
  type: Property
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLString.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CompareInfo
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLString.cs
    startLine: 296
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: "\n<p>Gets the <xref href=\"System.Globalization.CompareInfo\" data-throw-if-not-resolved=\"false\"></xref> object that defines how string comparisons should be performed for this <xref href=\"System.Data.SqlTypes.SqlString\" data-throw-if-not-resolved=\"false\"></xref> structure.</p>\n"
  syntax:
    content: public CompareInfo CompareInfo { get; }
    content.vb: Public ReadOnly Property CompareInfo As CompareInfo
    parameters: []
    return:
      type: System.Globalization.CompareInfo
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Data.SqlTypes.SqlString.CultureInfo
  commentId: P:System.Data.SqlTypes.SqlString.CultureInfo
  id: CultureInfo
  parent: System.Data.SqlTypes.SqlString
  langs:
  - csharp
  - vb
  name: CultureInfo
  fullName: System.Data.SqlTypes.SqlString.CultureInfo
  type: Property
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLString.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CultureInfo
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLString.cs
    startLine: 275
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: "\n<p>Gets the <xref href=\"System.Globalization.CultureInfo\" data-throw-if-not-resolved=\"false\"></xref> structure that represents information about the culture of this <xref href=\"System.Data.SqlTypes.SqlString\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  syntax:
    content: public CultureInfo CultureInfo { get; }
    content.vb: Public ReadOnly Property CultureInfo As CultureInfo
    parameters: []
    return:
      type: System.Globalization.CultureInfo
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Data.SqlTypes.SqlString.IsNull
  commentId: P:System.Data.SqlTypes.SqlString.IsNull
  id: IsNull
  parent: System.Data.SqlTypes.SqlString
  langs:
  - csharp
  - vb
  name: IsNull
  fullName: System.Data.SqlTypes.SqlString.IsNull
  type: Property
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLString.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IsNull
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLString.cs
    startLine: 236
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: "\n<p>Indicates whether this <xref href=\"System.Data.SqlTypes.SqlString\" data-throw-if-not-resolved=\"false\"></xref> structure is null.</p>\n"
  remarks: "\n<p>For more information, see Handling Null Values.</p>\n"
  syntax:
    content: public bool IsNull { get; }
    content.vb: Public ReadOnly Property IsNull As Boolean
    parameters: []
    return:
      type: System.Boolean
  implements:
  - System.Data.SqlTypes.INullable.IsNull
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Data.SqlTypes.SqlString.LCID
  commentId: P:System.Data.SqlTypes.SqlString.LCID
  id: LCID
  parent: System.Data.SqlTypes.SqlString
  langs:
  - csharp
  - vb
  name: LCID
  fullName: System.Data.SqlTypes.SqlString.LCID
  type: Property
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLString.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: LCID
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLString.cs
    startLine: 261
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: "\n<p>Specifies the geographical locale and language for the <xref href=\"System.Data.SqlTypes.SqlString\" data-throw-if-not-resolved=\"false\"></xref> structure.</p>\n"
  syntax:
    content: public int LCID { get; }
    content.vb: Public ReadOnly Property LCID As Integer
    parameters: []
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Data.SqlTypes.SqlString.SqlCompareOptions
  commentId: P:System.Data.SqlTypes.SqlString.SqlCompareOptions
  id: SqlCompareOptions
  parent: System.Data.SqlTypes.SqlString
  langs:
  - csharp
  - vb
  name: SqlCompareOptions
  fullName: System.Data.SqlTypes.SqlString.SqlCompareOptions
  type: Property
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLString.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: SqlCompareOptions
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLString.cs
    startLine: 313
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: "\n<p>A combination of one or more of the <xref href=\"System.Data.SqlTypes.SqlCompareOptions\" data-throw-if-not-resolved=\"false\"></xref> enumeration values that represent the way in which this <xref href=\"System.Data.SqlTypes.SqlString\" data-throw-if-not-resolved=\"false\"></xref> should be compared to other <xref href=\"System.Data.SqlTypes.SqlString\" data-throw-if-not-resolved=\"false\"></xref> structures.</p>\n"
  syntax:
    content: public SqlCompareOptions SqlCompareOptions { get; }
    content.vb: Public ReadOnly Property SqlCompareOptions As SqlCompareOptions
    parameters: []
    return:
      type: System.Data.SqlTypes.SqlCompareOptions
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Data.SqlTypes.SqlString.Value
  commentId: P:System.Data.SqlTypes.SqlString.Value
  id: Value
  parent: System.Data.SqlTypes.SqlString
  langs:
  - csharp
  - vb
  name: Value
  fullName: System.Data.SqlTypes.SqlString.Value
  type: Property
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLString.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Value
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLString.cs
    startLine: 247
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: "\n<p>Gets the string that is stored in this <xref href=\"System.Data.SqlTypes.SqlString\" data-throw-if-not-resolved=\"false\"></xref> structure. This property is read-only.</p>\n"
  syntax:
    content: public string Value { get; }
    content.vb: Public ReadOnly Property Value As String
    parameters: []
    return:
      type: System.String
  exceptions:
  - type: System.Data.SqlTypes.SqlNullValueException
    commentId: T:System.Data.SqlTypes.SqlNullValueException
    description: "\n<p>The value of the string is <xref href=\"System.Data.SqlTypes.SqlString.Null\" data-throw-if-not-resolved=\"false\"></xref>. </p>\n"
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Data.SqlTypes.SqlString.Add(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)
  commentId: M:System.Data.SqlTypes.SqlString.Add(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)
  id: Add(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)
  parent: System.Data.SqlTypes.SqlString
  langs:
  - csharp
  - vb
  name: Add(SqlString, SqlString)
  fullName: System.Data.SqlTypes.SqlString.Add(System.Data.SqlTypes.SqlString, System.Data.SqlTypes.SqlString)
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLString.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Add
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLString.cs
    startLine: 668
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: "\n<p>Concatenates two specified <xref href=\"System.Data.SqlTypes.SqlString\" data-throw-if-not-resolved=\"false\"></xref> values to create a new <xref href=\"System.Data.SqlTypes.SqlString\" data-throw-if-not-resolved=\"false\"></xref> structure.</p>\n"
  remarks: "\n<p>\n<em>x</em> will appear first in the resulting <xref href=\"System.Data.SqlTypes.SqlString\" data-throw-if-not-resolved=\"false\"></xref>, followed by <em>y</em>.</p>\n"
  syntax:
    content: public static SqlString Add(SqlString x, SqlString y)
    content.vb: Public Shared Function Add(x As SqlString, y As SqlString) As SqlString
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlString
    - id: y
      type: System.Data.SqlTypes.SqlString
    return:
      type: System.Data.SqlTypes.SqlString
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Data.SqlTypes.SqlString.Clone
  commentId: M:System.Data.SqlTypes.SqlString.Clone
  id: Clone
  parent: System.Data.SqlTypes.SqlString
  langs:
  - csharp
  - vb
  name: Clone()
  fullName: System.Data.SqlTypes.SqlString.Clone()
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLString.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Clone
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLString.cs
    startLine: 598
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: "\n<p>Creates a copy of this <xref href=\"System.Data.SqlTypes.SqlString\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  syntax:
    content: public SqlString Clone()
    content.vb: Public Function Clone As SqlString
    return:
      type: System.Data.SqlTypes.SqlString
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Data.SqlTypes.SqlString.CompareOptionsFromSqlCompareOptions(System.Data.SqlTypes.SqlCompareOptions)
  commentId: M:System.Data.SqlTypes.SqlString.CompareOptionsFromSqlCompareOptions(System.Data.SqlTypes.SqlCompareOptions)
  id: CompareOptionsFromSqlCompareOptions(System.Data.SqlTypes.SqlCompareOptions)
  parent: System.Data.SqlTypes.SqlString
  langs:
  - csharp
  - vb
  name: CompareOptionsFromSqlCompareOptions(SqlCompareOptions)
  fullName: System.Data.SqlTypes.SqlString.CompareOptionsFromSqlCompareOptions(System.Data.SqlTypes.SqlCompareOptions)
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLString.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CompareOptionsFromSqlCompareOptions
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLString.cs
    startLine: 777
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: "\n<p>Gets the <xref href=\"System.Globalization.CompareOptions\" data-throw-if-not-resolved=\"false\"></xref> enumeration equilvalent of the specified <xref href=\"System.Data.SqlTypes.SqlCompareOptions\" data-throw-if-not-resolved=\"false\"></xref> value.</p>\n"
  syntax:
    content: public static CompareOptions CompareOptionsFromSqlCompareOptions(SqlCompareOptions compareOptions)
    content.vb: Public Shared Function CompareOptionsFromSqlCompareOptions(compareOptions As SqlCompareOptions) As CompareOptions
    parameters:
    - id: compareOptions
      type: System.Data.SqlTypes.SqlCompareOptions
    return:
      type: System.Globalization.CompareOptions
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Data.SqlTypes.SqlString.CompareTo(System.Data.SqlTypes.SqlString)
  commentId: M:System.Data.SqlTypes.SqlString.CompareTo(System.Data.SqlTypes.SqlString)
  id: CompareTo(System.Data.SqlTypes.SqlString)
  parent: System.Data.SqlTypes.SqlString
  langs:
  - csharp
  - vb
  name: CompareTo(SqlString)
  fullName: System.Data.SqlTypes.SqlString.CompareTo(System.Data.SqlTypes.SqlString)
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLString.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CompareTo
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLString.cs
    startLine: 970
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: "\n<p>Compares this <xref href=\"System.Data.SqlTypes.SqlString\" data-throw-if-not-resolved=\"false\"></xref> instance to the supplied <xref href=\"System.Data.SqlTypes.SqlString\" data-throw-if-not-resolved=\"false\"></xref> and returns an indication of their relative values.</p>\n"
  syntax:
    content: public int CompareTo(SqlString value)
    content.vb: Public Function CompareTo(value As SqlString) As Integer
    parameters:
    - id: value
      type: System.Data.SqlTypes.SqlString
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Data.SqlTypes.SqlString.CompareTo(System.Object)
  commentId: M:System.Data.SqlTypes.SqlString.CompareTo(System.Object)
  id: CompareTo(System.Object)
  parent: System.Data.SqlTypes.SqlString
  langs:
  - csharp
  - vb
  name: CompareTo(Object)
  fullName: System.Data.SqlTypes.SqlString.CompareTo(System.Object)
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLString.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CompareTo
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLString.cs
    startLine: 959
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: "\n<p>Compares this <xref href=\"System.Data.SqlTypes.SqlString\" data-throw-if-not-resolved=\"false\"></xref> object to the supplied <xref href=\"System.Object\" data-throw-if-not-resolved=\"false\"></xref> and returns an indication of their relative values.</p>\n"
  syntax:
    content: public int CompareTo(object value)
    content.vb: Public Function CompareTo(value As Object) As Integer
    parameters:
    - id: value
      type: System.Object
    return:
      type: System.Int32
  implements:
  - System.IComparable.CompareTo(System.Object)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Data.SqlTypes.SqlString.Concat(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)
  commentId: M:System.Data.SqlTypes.SqlString.Concat(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)
  id: Concat(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)
  parent: System.Data.SqlTypes.SqlString
  langs:
  - csharp
  - vb
  name: Concat(SqlString, SqlString)
  fullName: System.Data.SqlTypes.SqlString.Concat(System.Data.SqlTypes.SqlString, System.Data.SqlTypes.SqlString)
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLString.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Concat
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLString.cs
    startLine: 663
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: "\n<p>Concatenates the two specified <xref href=\"System.Data.SqlTypes.SqlString\" data-throw-if-not-resolved=\"false\"></xref> structures.</p>\n"
  syntax:
    content: public static SqlString Concat(SqlString x, SqlString y)
    content.vb: Public Shared Function Concat(x As SqlString, y As SqlString) As SqlString
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlString
    - id: y
      type: System.Data.SqlTypes.SqlString
    return:
      type: System.Data.SqlTypes.SqlString
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Data.SqlTypes.SqlString.Equals(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)
  commentId: M:System.Data.SqlTypes.SqlString.Equals(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)
  id: Equals(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)
  parent: System.Data.SqlTypes.SqlString
  langs:
  - csharp
  - vb
  name: Equals(SqlString, SqlString)
  fullName: System.Data.SqlTypes.SqlString.Equals(System.Data.SqlTypes.SqlString, System.Data.SqlTypes.SqlString)
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLString.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Equals
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLString.cs
    startLine: 674
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: "\n<p>Performs a logical comparison of the two <xref href=\"System.Data.SqlTypes.SqlString\" data-throw-if-not-resolved=\"false\"></xref> operands to determine whether they are equal.</p>\n"
  syntax:
    content: public static SqlBoolean Equals(SqlString x, SqlString y)
    content.vb: Public Shared Function Equals(x As SqlString, y As SqlString) As SqlBoolean
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlString
    - id: y
      type: System.Data.SqlTypes.SqlString
    return:
      type: System.Data.SqlTypes.SqlBoolean
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Data.SqlTypes.SqlString.Equals(System.Object)
  commentId: M:System.Data.SqlTypes.SqlString.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Data.SqlTypes.SqlString
  langs:
  - csharp
  - vb
  name: Equals(Object)
  fullName: System.Data.SqlTypes.SqlString.Equals(System.Object)
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLString.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Equals
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLString.cs
    startLine: 999
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: "\n<p>Compares the supplied object parameter to the <xref href=\"System.Data.SqlTypes.SqlString.Value\" data-throw-if-not-resolved=\"false\"></xref> property of the <xref href=\"System.Data.SqlTypes.SqlString\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  syntax:
    content: public override bool Equals(object value)
    content.vb: Public Overrides Function Equals(value As Object) As Boolean
    parameters:
    - id: value
      type: System.Object
    return:
      type: System.Boolean
  overridden: System.ValueType.Equals(System.Object)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Data.SqlTypes.SqlString.GetHashCode
  commentId: M:System.Data.SqlTypes.SqlString.GetHashCode
  id: GetHashCode
  parent: System.Data.SqlTypes.SqlString
  langs:
  - csharp
  - vb
  name: GetHashCode()
  fullName: System.Data.SqlTypes.SqlString.GetHashCode()
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLString.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetHashCode
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLString.cs
    startLine: 1018
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: "\n<p>Gets the hash code for this instance.</p>\n"
  syntax:
    content: public override int GetHashCode()
    content.vb: Public Overrides Function GetHashCode As Integer
    return:
      type: System.Int32
  overridden: System.ValueType.GetHashCode
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Data.SqlTypes.SqlString.GetNonUnicodeBytes
  commentId: M:System.Data.SqlTypes.SqlString.GetNonUnicodeBytes
  id: GetNonUnicodeBytes
  parent: System.Data.SqlTypes.SqlString
  langs:
  - csharp
  - vb
  name: GetNonUnicodeBytes()
  fullName: System.Data.SqlTypes.SqlString.GetNonUnicodeBytes()
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLString.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetNonUnicodeBytes
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLString.cs
    startLine: 366
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: "\n<p>Gets an array of bytes, that contains the contents of the <xref href=\"System.Data.SqlTypes.SqlString\" data-throw-if-not-resolved=\"false\"></xref> in ANSI format.</p>\n"
  syntax:
    content: public byte[] GetNonUnicodeBytes()
    content.vb: Public Function GetNonUnicodeBytes As Byte()
    return:
      type: System.Byte[]
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Data.SqlTypes.SqlString.GetUnicodeBytes
  commentId: M:System.Data.SqlTypes.SqlString.GetUnicodeBytes
  id: GetUnicodeBytes
  parent: System.Data.SqlTypes.SqlString
  langs:
  - csharp
  - vb
  name: GetUnicodeBytes()
  fullName: System.Data.SqlTypes.SqlString.GetUnicodeBytes()
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLString.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetUnicodeBytes
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLString.cs
    startLine: 355
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: "\n<p>Gets an array of bytes, that contains the contents of the <xref href=\"System.Data.SqlTypes.SqlString\" data-throw-if-not-resolved=\"false\"></xref> in Unicode format.</p>\n"
  syntax:
    content: public byte[] GetUnicodeBytes()
    content.vb: Public Function GetUnicodeBytes As Byte()
    return:
      type: System.Byte[]
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Data.SqlTypes.SqlString.GreaterThan(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)
  commentId: M:System.Data.SqlTypes.SqlString.GreaterThan(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)
  id: GreaterThan(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)
  parent: System.Data.SqlTypes.SqlString
  langs:
  - csharp
  - vb
  name: GreaterThan(SqlString, SqlString)
  fullName: System.Data.SqlTypes.SqlString.GreaterThan(System.Data.SqlTypes.SqlString, System.Data.SqlTypes.SqlString)
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLString.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GreaterThan
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLString.cs
    startLine: 692
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: "\n<p>Performs a logical comparison of the two <xref href=\"System.Data.SqlTypes.SqlString\" data-throw-if-not-resolved=\"false\"></xref> operands to determine whether the first is greater than the second.</p>\n"
  syntax:
    content: public static SqlBoolean GreaterThan(SqlString x, SqlString y)
    content.vb: Public Shared Function GreaterThan(x As SqlString, y As SqlString) As SqlBoolean
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlString
    - id: y
      type: System.Data.SqlTypes.SqlString
    return:
      type: System.Data.SqlTypes.SqlBoolean
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Data.SqlTypes.SqlString.GreaterThanOrEqual(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)
  commentId: M:System.Data.SqlTypes.SqlString.GreaterThanOrEqual(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)
  id: GreaterThanOrEqual(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)
  parent: System.Data.SqlTypes.SqlString
  langs:
  - csharp
  - vb
  name: GreaterThanOrEqual(SqlString, SqlString)
  fullName: System.Data.SqlTypes.SqlString.GreaterThanOrEqual(System.Data.SqlTypes.SqlString, System.Data.SqlTypes.SqlString)
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLString.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GreaterThanOrEqual
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLString.cs
    startLine: 704
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: "\n<p>Performs a logical comparison of the two <xref href=\"System.Data.SqlTypes.SqlString\" data-throw-if-not-resolved=\"false\"></xref> operands to determine whether the first is greater than or equal to the second.</p>\n"
  syntax:
    content: public static SqlBoolean GreaterThanOrEqual(SqlString x, SqlString y)
    content.vb: Public Shared Function GreaterThanOrEqual(x As SqlString, y As SqlString) As SqlBoolean
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlString
    - id: y
      type: System.Data.SqlTypes.SqlString
    return:
      type: System.Data.SqlTypes.SqlBoolean
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Data.SqlTypes.SqlString.LessThan(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)
  commentId: M:System.Data.SqlTypes.SqlString.LessThan(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)
  id: LessThan(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)
  parent: System.Data.SqlTypes.SqlString
  langs:
  - csharp
  - vb
  name: LessThan(SqlString, SqlString)
  fullName: System.Data.SqlTypes.SqlString.LessThan(System.Data.SqlTypes.SqlString, System.Data.SqlTypes.SqlString)
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLString.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: LessThan
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLString.cs
    startLine: 686
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: "\n<p>Performs a logical comparison of the two <xref href=\"System.Data.SqlTypes.SqlString\" data-throw-if-not-resolved=\"false\"></xref> operands to determine whether the first is less than the second.</p>\n"
  syntax:
    content: public static SqlBoolean LessThan(SqlString x, SqlString y)
    content.vb: Public Shared Function LessThan(x As SqlString, y As SqlString) As SqlBoolean
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlString
    - id: y
      type: System.Data.SqlTypes.SqlString
    return:
      type: System.Data.SqlTypes.SqlBoolean
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Data.SqlTypes.SqlString.LessThanOrEqual(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)
  commentId: M:System.Data.SqlTypes.SqlString.LessThanOrEqual(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)
  id: LessThanOrEqual(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)
  parent: System.Data.SqlTypes.SqlString
  langs:
  - csharp
  - vb
  name: LessThanOrEqual(SqlString, SqlString)
  fullName: System.Data.SqlTypes.SqlString.LessThanOrEqual(System.Data.SqlTypes.SqlString, System.Data.SqlTypes.SqlString)
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLString.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: LessThanOrEqual
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLString.cs
    startLine: 698
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: "\n<p>Performs a logical comparison of the two <xref href=\"System.Data.SqlTypes.SqlString\" data-throw-if-not-resolved=\"false\"></xref> operands to determine whether the first is less than or equal to the second.</p>\n"
  syntax:
    content: public static SqlBoolean LessThanOrEqual(SqlString x, SqlString y)
    content.vb: Public Shared Function LessThanOrEqual(x As SqlString, y As SqlString) As SqlBoolean
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlString
    - id: y
      type: System.Data.SqlTypes.SqlString
    return:
      type: System.Data.SqlTypes.SqlBoolean
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Data.SqlTypes.SqlString.NotEquals(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)
  commentId: M:System.Data.SqlTypes.SqlString.NotEquals(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)
  id: NotEquals(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)
  parent: System.Data.SqlTypes.SqlString
  langs:
  - csharp
  - vb
  name: NotEquals(SqlString, SqlString)
  fullName: System.Data.SqlTypes.SqlString.NotEquals(System.Data.SqlTypes.SqlString, System.Data.SqlTypes.SqlString)
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLString.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: NotEquals
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLString.cs
    startLine: 680
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: "\n<p>Performs a logical comparison of the two <xref href=\"System.Data.SqlTypes.SqlString\" data-throw-if-not-resolved=\"false\"></xref> operands to determine whether they are not equal.</p>\n"
  syntax:
    content: public static SqlBoolean NotEquals(SqlString x, SqlString y)
    content.vb: Public Shared Function NotEquals(x As SqlString, y As SqlString) As SqlBoolean
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlString
    - id: y
      type: System.Data.SqlTypes.SqlString
    return:
      type: System.Data.SqlTypes.SqlBoolean
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Data.SqlTypes.SqlString.op_Addition(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)
  commentId: M:System.Data.SqlTypes.SqlString.op_Addition(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)
  id: op_Addition(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)
  parent: System.Data.SqlTypes.SqlString
  langs:
  - csharp
  - vb
  name: Addition(SqlString, SqlString)
  fullName: System.Data.SqlTypes.SqlString.Addition(System.Data.SqlTypes.SqlString, System.Data.SqlTypes.SqlString)
  type: Operator
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLString.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_Addition
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLString.cs
    startLine: 391
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: "\n<p>Concatenates the two specified <xref href=\"System.Data.SqlTypes.SqlString\" data-throw-if-not-resolved=\"false\"></xref> structures.</p>\n"
  syntax:
    content: public static SqlString operator +(SqlString x, SqlString y)
    content.vb: Public Shared Operator +(x As SqlString, y As SqlString) As SqlString
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlString
    - id: y
      type: System.Data.SqlTypes.SqlString
    return:
      type: System.Data.SqlTypes.SqlString
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Data.SqlTypes.SqlString.op_Equality(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)
  commentId: M:System.Data.SqlTypes.SqlString.op_Equality(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)
  id: op_Equality(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)
  parent: System.Data.SqlTypes.SqlString
  langs:
  - csharp
  - vb
  name: Equality(SqlString, SqlString)
  fullName: System.Data.SqlTypes.SqlString.Equality(System.Data.SqlTypes.SqlString, System.Data.SqlTypes.SqlString)
  type: Operator
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLString.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_Equality
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLString.cs
    startLine: 613
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: "\n<p>Performs a logical comparison of the two <xref href=\"System.Data.SqlTypes.SqlString\" data-throw-if-not-resolved=\"false\"></xref> operands to determine whether they are equal.</p>\n"
  syntax:
    content: public static SqlBoolean operator ==(SqlString x, SqlString y)
    content.vb: Public Shared Operator =(x As SqlString, y As SqlString) As SqlBoolean
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlString
    - id: y
      type: System.Data.SqlTypes.SqlString
    return:
      type: System.Data.SqlTypes.SqlBoolean
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlBoolean)~System.Data.SqlTypes.SqlString
  commentId: M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlBoolean)~System.Data.SqlTypes.SqlString
  id: op_Explicit(System.Data.SqlTypes.SqlBoolean)~System.Data.SqlTypes.SqlString
  parent: System.Data.SqlTypes.SqlString
  langs:
  - csharp
  - vb
  name: Explicit(SqlBoolean to SqlString)
  fullName: System.Data.SqlTypes.SqlString.Explicit(System.Data.SqlTypes.SqlBoolean to System.Data.SqlTypes.SqlString)
  type: Operator
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLString.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_Explicit
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLString.cs
    startLine: 500
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: "\n<p>Converts the specified <xref href=\"System.Data.SqlTypes.SqlBoolean\" data-throw-if-not-resolved=\"false\"></xref> structure to <xref href=\"System.Data.SqlTypes.SqlString\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: public static explicit operator SqlString(SqlBoolean x)
    content.vb: Public Shared Narrowing Operator CType(x As SqlBoolean) As SqlString
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlBoolean
    return:
      type: System.Data.SqlTypes.SqlString
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Data.SqlTypes.SqlString.Narrowing(System.Data.SqlTypes.SqlBoolean to System.Data.SqlTypes.SqlString)
  name.vb: Narrowing(SqlBoolean to SqlString)
- uid: System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlByte)~System.Data.SqlTypes.SqlString
  commentId: M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlByte)~System.Data.SqlTypes.SqlString
  id: op_Explicit(System.Data.SqlTypes.SqlByte)~System.Data.SqlTypes.SqlString
  parent: System.Data.SqlTypes.SqlString
  langs:
  - csharp
  - vb
  name: Explicit(SqlByte to SqlString)
  fullName: System.Data.SqlTypes.SqlString.Explicit(System.Data.SqlTypes.SqlByte to System.Data.SqlTypes.SqlString)
  type: Operator
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLString.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_Explicit
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLString.cs
    startLine: 509
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: "\n<p>Converts the specified <xref href=\"System.Data.SqlTypes.SqlByte\" data-throw-if-not-resolved=\"false\"></xref> structure to <xref href=\"System.Data.SqlTypes.SqlString\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: public static explicit operator SqlString(SqlByte x)
    content.vb: Public Shared Narrowing Operator CType(x As SqlByte) As SqlString
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlByte
    return:
      type: System.Data.SqlTypes.SqlString
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Data.SqlTypes.SqlString.Narrowing(System.Data.SqlTypes.SqlByte to System.Data.SqlTypes.SqlString)
  name.vb: Narrowing(SqlByte to SqlString)
- uid: System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlDateTime)~System.Data.SqlTypes.SqlString
  commentId: M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlDateTime)~System.Data.SqlTypes.SqlString
  id: op_Explicit(System.Data.SqlTypes.SqlDateTime)~System.Data.SqlTypes.SqlString
  parent: System.Data.SqlTypes.SqlString
  langs:
  - csharp
  - vb
  name: Explicit(SqlDateTime to SqlString)
  fullName: System.Data.SqlTypes.SqlString.Explicit(System.Data.SqlTypes.SqlDateTime to System.Data.SqlTypes.SqlString)
  type: Operator
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLString.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_Explicit
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLString.cs
    startLine: 581
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: "\n<p>Converts the specified <xref href=\"System.Data.SqlTypes.SqlDateTime\" data-throw-if-not-resolved=\"false\"></xref> parameter to <xref href=\"System.Data.SqlTypes.SqlString\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: public static explicit operator SqlString(SqlDateTime x)
    content.vb: Public Shared Narrowing Operator CType(x As SqlDateTime) As SqlString
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlDateTime
    return:
      type: System.Data.SqlTypes.SqlString
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Data.SqlTypes.SqlString.Narrowing(System.Data.SqlTypes.SqlDateTime to System.Data.SqlTypes.SqlString)
  name.vb: Narrowing(SqlDateTime to SqlString)
- uid: System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlDecimal)~System.Data.SqlTypes.SqlString
  commentId: M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlDecimal)~System.Data.SqlTypes.SqlString
  id: op_Explicit(System.Data.SqlTypes.SqlDecimal)~System.Data.SqlTypes.SqlString
  parent: System.Data.SqlTypes.SqlString
  langs:
  - csharp
  - vb
  name: Explicit(SqlDecimal to SqlString)
  fullName: System.Data.SqlTypes.SqlString.Explicit(System.Data.SqlTypes.SqlDecimal to System.Data.SqlTypes.SqlString)
  type: Operator
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLString.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_Explicit
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLString.cs
    startLine: 563
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: "\n<p>Converts the specified <xref href=\"System.Data.SqlTypes.SqlDecimal\" data-throw-if-not-resolved=\"false\"></xref> parameter to <xref href=\"System.Data.SqlTypes.SqlString\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: public static explicit operator SqlString(SqlDecimal x)
    content.vb: Public Shared Narrowing Operator CType(x As SqlDecimal) As SqlString
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlDecimal
    return:
      type: System.Data.SqlTypes.SqlString
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Data.SqlTypes.SqlString.Narrowing(System.Data.SqlTypes.SqlDecimal to System.Data.SqlTypes.SqlString)
  name.vb: Narrowing(SqlDecimal to SqlString)
- uid: System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlDouble)~System.Data.SqlTypes.SqlString
  commentId: M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlDouble)~System.Data.SqlTypes.SqlString
  id: op_Explicit(System.Data.SqlTypes.SqlDouble)~System.Data.SqlTypes.SqlString
  parent: System.Data.SqlTypes.SqlString
  langs:
  - csharp
  - vb
  name: Explicit(SqlDouble to SqlString)
  fullName: System.Data.SqlTypes.SqlString.Explicit(System.Data.SqlTypes.SqlDouble to System.Data.SqlTypes.SqlString)
  type: Operator
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLString.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_Explicit
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLString.cs
    startLine: 554
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: "\n<p>Converts the specified <xref href=\"System.Data.SqlTypes.SqlDouble\" data-throw-if-not-resolved=\"false\"></xref> parameter to <xref href=\"System.Data.SqlTypes.SqlString\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: public static explicit operator SqlString(SqlDouble x)
    content.vb: Public Shared Narrowing Operator CType(x As SqlDouble) As SqlString
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlDouble
    return:
      type: System.Data.SqlTypes.SqlString
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Data.SqlTypes.SqlString.Narrowing(System.Data.SqlTypes.SqlDouble to System.Data.SqlTypes.SqlString)
  name.vb: Narrowing(SqlDouble to SqlString)
- uid: System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlGuid)~System.Data.SqlTypes.SqlString
  commentId: M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlGuid)~System.Data.SqlTypes.SqlString
  id: op_Explicit(System.Data.SqlTypes.SqlGuid)~System.Data.SqlTypes.SqlString
  parent: System.Data.SqlTypes.SqlString
  langs:
  - csharp
  - vb
  name: Explicit(SqlGuid to SqlString)
  fullName: System.Data.SqlTypes.SqlString.Explicit(System.Data.SqlTypes.SqlGuid to System.Data.SqlTypes.SqlString)
  type: Operator
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLString.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_Explicit
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLString.cs
    startLine: 590
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: "\n<p>Converts the specified <xref href=\"System.Data.SqlTypes.SqlGuid\" data-throw-if-not-resolved=\"false\"></xref> parameter to <xref href=\"System.Data.SqlTypes.SqlString\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: public static explicit operator SqlString(SqlGuid x)
    content.vb: Public Shared Narrowing Operator CType(x As SqlGuid) As SqlString
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlGuid
    return:
      type: System.Data.SqlTypes.SqlString
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Data.SqlTypes.SqlString.Narrowing(System.Data.SqlTypes.SqlGuid to System.Data.SqlTypes.SqlString)
  name.vb: Narrowing(SqlGuid to SqlString)
- uid: System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlInt16)~System.Data.SqlTypes.SqlString
  commentId: M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlInt16)~System.Data.SqlTypes.SqlString
  id: op_Explicit(System.Data.SqlTypes.SqlInt16)~System.Data.SqlTypes.SqlString
  parent: System.Data.SqlTypes.SqlString
  langs:
  - csharp
  - vb
  name: Explicit(SqlInt16 to SqlString)
  fullName: System.Data.SqlTypes.SqlString.Explicit(System.Data.SqlTypes.SqlInt16 to System.Data.SqlTypes.SqlString)
  type: Operator
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLString.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_Explicit
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLString.cs
    startLine: 518
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: "\n<p>Converts the specified <xref href=\"System.Data.SqlTypes.SqlInt16\" data-throw-if-not-resolved=\"false\"></xref> parameter to <xref href=\"System.Data.SqlTypes.SqlString\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: public static explicit operator SqlString(SqlInt16 x)
    content.vb: Public Shared Narrowing Operator CType(x As SqlInt16) As SqlString
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlInt16
    return:
      type: System.Data.SqlTypes.SqlString
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Data.SqlTypes.SqlString.Narrowing(System.Data.SqlTypes.SqlInt16 to System.Data.SqlTypes.SqlString)
  name.vb: Narrowing(SqlInt16 to SqlString)
- uid: System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlInt32)~System.Data.SqlTypes.SqlString
  commentId: M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlInt32)~System.Data.SqlTypes.SqlString
  id: op_Explicit(System.Data.SqlTypes.SqlInt32)~System.Data.SqlTypes.SqlString
  parent: System.Data.SqlTypes.SqlString
  langs:
  - csharp
  - vb
  name: Explicit(SqlInt32 to SqlString)
  fullName: System.Data.SqlTypes.SqlString.Explicit(System.Data.SqlTypes.SqlInt32 to System.Data.SqlTypes.SqlString)
  type: Operator
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLString.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_Explicit
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLString.cs
    startLine: 527
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: "\n<p>Converts the specified <xref href=\"System.Data.SqlTypes.SqlInt32\" data-throw-if-not-resolved=\"false\"></xref> parameter to <xref href=\"System.Data.SqlTypes.SqlString\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: public static explicit operator SqlString(SqlInt32 x)
    content.vb: Public Shared Narrowing Operator CType(x As SqlInt32) As SqlString
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlInt32
    return:
      type: System.Data.SqlTypes.SqlString
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Data.SqlTypes.SqlString.Narrowing(System.Data.SqlTypes.SqlInt32 to System.Data.SqlTypes.SqlString)
  name.vb: Narrowing(SqlInt32 to SqlString)
- uid: System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlInt64)~System.Data.SqlTypes.SqlString
  commentId: M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlInt64)~System.Data.SqlTypes.SqlString
  id: op_Explicit(System.Data.SqlTypes.SqlInt64)~System.Data.SqlTypes.SqlString
  parent: System.Data.SqlTypes.SqlString
  langs:
  - csharp
  - vb
  name: Explicit(SqlInt64 to SqlString)
  fullName: System.Data.SqlTypes.SqlString.Explicit(System.Data.SqlTypes.SqlInt64 to System.Data.SqlTypes.SqlString)
  type: Operator
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLString.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_Explicit
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLString.cs
    startLine: 536
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: "\n<p>Converts the specified <xref href=\"System.Data.SqlTypes.SqlInt64\" data-throw-if-not-resolved=\"false\"></xref> parameter to <xref href=\"System.Data.SqlTypes.SqlString\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: public static explicit operator SqlString(SqlInt64 x)
    content.vb: Public Shared Narrowing Operator CType(x As SqlInt64) As SqlString
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlInt64
    return:
      type: System.Data.SqlTypes.SqlString
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Data.SqlTypes.SqlString.Narrowing(System.Data.SqlTypes.SqlInt64 to System.Data.SqlTypes.SqlString)
  name.vb: Narrowing(SqlInt64 to SqlString)
- uid: System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlMoney)~System.Data.SqlTypes.SqlString
  commentId: M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlMoney)~System.Data.SqlTypes.SqlString
  id: op_Explicit(System.Data.SqlTypes.SqlMoney)~System.Data.SqlTypes.SqlString
  parent: System.Data.SqlTypes.SqlString
  langs:
  - csharp
  - vb
  name: Explicit(SqlMoney to SqlString)
  fullName: System.Data.SqlTypes.SqlString.Explicit(System.Data.SqlTypes.SqlMoney to System.Data.SqlTypes.SqlString)
  type: Operator
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLString.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_Explicit
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLString.cs
    startLine: 572
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: "\n<p>Converts the specified <xref href=\"System.Data.SqlTypes.SqlMoney\" data-throw-if-not-resolved=\"false\"></xref> parameter to <xref href=\"System.Data.SqlTypes.SqlString\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: public static explicit operator SqlString(SqlMoney x)
    content.vb: Public Shared Narrowing Operator CType(x As SqlMoney) As SqlString
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlMoney
    return:
      type: System.Data.SqlTypes.SqlString
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Data.SqlTypes.SqlString.Narrowing(System.Data.SqlTypes.SqlMoney to System.Data.SqlTypes.SqlString)
  name.vb: Narrowing(SqlMoney to SqlString)
- uid: System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlSingle)~System.Data.SqlTypes.SqlString
  commentId: M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlSingle)~System.Data.SqlTypes.SqlString
  id: op_Explicit(System.Data.SqlTypes.SqlSingle)~System.Data.SqlTypes.SqlString
  parent: System.Data.SqlTypes.SqlString
  langs:
  - csharp
  - vb
  name: Explicit(SqlSingle to SqlString)
  fullName: System.Data.SqlTypes.SqlString.Explicit(System.Data.SqlTypes.SqlSingle to System.Data.SqlTypes.SqlString)
  type: Operator
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLString.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_Explicit
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLString.cs
    startLine: 545
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: "\n<p>Converts the specified <xref href=\"System.Data.SqlTypes.SqlSingle\" data-throw-if-not-resolved=\"false\"></xref> parameter to <xref href=\"System.Data.SqlTypes.SqlString\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: public static explicit operator SqlString(SqlSingle x)
    content.vb: Public Shared Narrowing Operator CType(x As SqlSingle) As SqlString
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlSingle
    return:
      type: System.Data.SqlTypes.SqlString
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Data.SqlTypes.SqlString.Narrowing(System.Data.SqlTypes.SqlSingle to System.Data.SqlTypes.SqlString)
  name.vb: Narrowing(SqlSingle to SqlString)
- uid: System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlString)~System.String
  commentId: M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlString)~System.String
  id: op_Explicit(System.Data.SqlTypes.SqlString)~System.String
  parent: System.Data.SqlTypes.SqlString
  langs:
  - csharp
  - vb
  name: Explicit(SqlString to String)
  fullName: System.Data.SqlTypes.SqlString.Explicit(System.Data.SqlTypes.SqlString to System.String)
  type: Operator
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLString.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_Explicit
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLString.cs
    startLine: 337
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: "\n<p>Converts a <xref href=\"System.Data.SqlTypes.SqlString\" data-throw-if-not-resolved=\"false\"></xref> to a <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref></p>\n"
  syntax:
    content: public static explicit operator string (SqlString x)
    content.vb: Public Shared Narrowing Operator CType(x As SqlString) As String
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlString
    return:
      type: System.String
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Data.SqlTypes.SqlString.Narrowing(System.Data.SqlTypes.SqlString to System.String)
  name.vb: Narrowing(SqlString to String)
- uid: System.Data.SqlTypes.SqlString.op_GreaterThan(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)
  commentId: M:System.Data.SqlTypes.SqlString.op_GreaterThan(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)
  id: op_GreaterThan(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)
  parent: System.Data.SqlTypes.SqlString
  langs:
  - csharp
  - vb
  name: GreaterThan(SqlString, SqlString)
  fullName: System.Data.SqlTypes.SqlString.GreaterThan(System.Data.SqlTypes.SqlString, System.Data.SqlTypes.SqlString)
  type: Operator
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLString.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_GreaterThan
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLString.cs
    startLine: 637
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: "\n<p>Performs a logical comparison of the two <xref href=\"System.Data.SqlTypes.SqlString\" data-throw-if-not-resolved=\"false\"></xref> operands to determine whether the first is greater than the second.</p>\n"
  syntax:
    content: public static SqlBoolean operator>(SqlString x, SqlString y)
    content.vb: Public Shared Operator>(x As SqlString, y As SqlString) As SqlBoolean
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlString
    - id: y
      type: System.Data.SqlTypes.SqlString
    return:
      type: System.Data.SqlTypes.SqlBoolean
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Data.SqlTypes.SqlString.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)
  commentId: M:System.Data.SqlTypes.SqlString.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)
  id: op_GreaterThanOrEqual(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)
  parent: System.Data.SqlTypes.SqlString
  langs:
  - csharp
  - vb
  name: GreaterThanOrEqual(SqlString, SqlString)
  fullName: System.Data.SqlTypes.SqlString.GreaterThanOrEqual(System.Data.SqlTypes.SqlString, System.Data.SqlTypes.SqlString)
  type: Operator
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLString.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_GreaterThanOrEqual
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLString.cs
    startLine: 653
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: "\n<p>Performs a logical comparison of the two <xref href=\"System.Data.SqlTypes.SqlString\" data-throw-if-not-resolved=\"false\"></xref> operands to determine whether the first is greater than or equal to the second.</p>\n"
  syntax:
    content: public static SqlBoolean operator >=(SqlString x, SqlString y)
    content.vb: Public Shared Operator >=(x As SqlString, y As SqlString) As SqlBoolean
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlString
    - id: y
      type: System.Data.SqlTypes.SqlString
    return:
      type: System.Data.SqlTypes.SqlBoolean
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Data.SqlTypes.SqlString.op_Implicit(System.String)~System.Data.SqlTypes.SqlString
  commentId: M:System.Data.SqlTypes.SqlString.op_Implicit(System.String)~System.Data.SqlTypes.SqlString
  id: op_Implicit(System.String)~System.Data.SqlTypes.SqlString
  parent: System.Data.SqlTypes.SqlString
  langs:
  - csharp
  - vb
  name: Implicit(String to SqlString)
  fullName: System.Data.SqlTypes.SqlString.Implicit(System.String to System.Data.SqlTypes.SqlString)
  type: Operator
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLString.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_Implicit
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLString.cs
    startLine: 328
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: "\n<p>Converts the <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref> parameter to a <xref href=\"System.Data.SqlTypes.SqlString\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: public static implicit operator SqlString(string x)
    content.vb: Public Shared Widening Operator CType(x As String) As SqlString
    parameters:
    - id: x
      type: System.String
    return:
      type: System.Data.SqlTypes.SqlString
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Data.SqlTypes.SqlString.Widening(System.String to System.Data.SqlTypes.SqlString)
  name.vb: Widening(String to SqlString)
- uid: System.Data.SqlTypes.SqlString.op_Inequality(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)
  commentId: M:System.Data.SqlTypes.SqlString.op_Inequality(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)
  id: op_Inequality(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)
  parent: System.Data.SqlTypes.SqlString
  langs:
  - csharp
  - vb
  name: Inequality(SqlString, SqlString)
  fullName: System.Data.SqlTypes.SqlString.Inequality(System.Data.SqlTypes.SqlString, System.Data.SqlTypes.SqlString)
  type: Operator
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLString.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_Inequality
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLString.cs
    startLine: 621
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: "\n<p>Performs a logical comparison of the two <xref href=\"System.Data.SqlTypes.SqlString\" data-throw-if-not-resolved=\"false\"></xref> operands to determine whether they are not equal.</p>\n"
  syntax:
    content: public static SqlBoolean operator !=(SqlString x, SqlString y)
    content.vb: Public Shared Operator <>(x As SqlString, y As SqlString) As SqlBoolean
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlString
    - id: y
      type: System.Data.SqlTypes.SqlString
    return:
      type: System.Data.SqlTypes.SqlBoolean
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Data.SqlTypes.SqlString.op_LessThan(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)
  commentId: M:System.Data.SqlTypes.SqlString.op_LessThan(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)
  id: op_LessThan(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)
  parent: System.Data.SqlTypes.SqlString
  langs:
  - csharp
  - vb
  name: LessThan(SqlString, SqlString)
  fullName: System.Data.SqlTypes.SqlString.LessThan(System.Data.SqlTypes.SqlString, System.Data.SqlTypes.SqlString)
  type: Operator
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLString.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_LessThan
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLString.cs
    startLine: 629
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: "\n<p>Performs a logical comparison of the two <xref href=\"System.Data.SqlTypes.SqlString\" data-throw-if-not-resolved=\"false\"></xref> operands to determine whether the first is less than the second.</p>\n"
  syntax:
    content: public static SqlBoolean operator <(SqlString x, SqlString y)
    content.vb: Public Shared Operator <(x As SqlString, y As SqlString) As SqlBoolean
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlString
    - id: y
      type: System.Data.SqlTypes.SqlString
    return:
      type: System.Data.SqlTypes.SqlBoolean
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Data.SqlTypes.SqlString.op_LessThanOrEqual(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)
  commentId: M:System.Data.SqlTypes.SqlString.op_LessThanOrEqual(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)
  id: op_LessThanOrEqual(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)
  parent: System.Data.SqlTypes.SqlString
  langs:
  - csharp
  - vb
  name: LessThanOrEqual(SqlString, SqlString)
  fullName: System.Data.SqlTypes.SqlString.LessThanOrEqual(System.Data.SqlTypes.SqlString, System.Data.SqlTypes.SqlString)
  type: Operator
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLString.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_LessThanOrEqual
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLString.cs
    startLine: 645
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: "\n<p>Performs a logical comparison of the two <xref href=\"System.Data.SqlTypes.SqlString\" data-throw-if-not-resolved=\"false\"></xref> operands to determine whether the first is less than or equal to the second.</p>\n"
  syntax:
    content: public static SqlBoolean operator <=(SqlString x, SqlString y)
    content.vb: Public Shared Operator <=(x As SqlString, y As SqlString) As SqlBoolean
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlString
    - id: y
      type: System.Data.SqlTypes.SqlString
    return:
      type: System.Data.SqlTypes.SqlBoolean
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Data.SqlTypes.SqlString.ToSqlBoolean
  commentId: M:System.Data.SqlTypes.SqlString.ToSqlBoolean
  id: ToSqlBoolean
  parent: System.Data.SqlTypes.SqlString
  langs:
  - csharp
  - vb
  name: ToSqlBoolean()
  fullName: System.Data.SqlTypes.SqlString.ToSqlBoolean()
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLString.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ToSqlBoolean
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLString.cs
    startLine: 711
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: "\n<p>Converts this <xref href=\"System.Data.SqlTypes.SqlString\" data-throw-if-not-resolved=\"false\"></xref> structure to <xref href=\"System.Data.SqlTypes.SqlBoolean\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: public SqlBoolean ToSqlBoolean()
    content.vb: Public Function ToSqlBoolean As SqlBoolean
    return:
      type: System.Data.SqlTypes.SqlBoolean
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Data.SqlTypes.SqlString.ToSqlByte
  commentId: M:System.Data.SqlTypes.SqlString.ToSqlByte
  id: ToSqlByte
  parent: System.Data.SqlTypes.SqlString
  langs:
  - csharp
  - vb
  name: ToSqlByte()
  fullName: System.Data.SqlTypes.SqlString.ToSqlByte()
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLString.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ToSqlByte
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLString.cs
    startLine: 716
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: "\n<p>Converts this <xref href=\"System.Data.SqlTypes.SqlString\" data-throw-if-not-resolved=\"false\"></xref> structure to <xref href=\"System.Data.SqlTypes.SqlByte\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: public SqlByte ToSqlByte()
    content.vb: Public Function ToSqlByte As SqlByte
    return:
      type: System.Data.SqlTypes.SqlByte
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Data.SqlTypes.SqlString.ToSqlDateTime
  commentId: M:System.Data.SqlTypes.SqlString.ToSqlDateTime
  id: ToSqlDateTime
  parent: System.Data.SqlTypes.SqlString
  langs:
  - csharp
  - vb
  name: ToSqlDateTime()
  fullName: System.Data.SqlTypes.SqlString.ToSqlDateTime()
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLString.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ToSqlDateTime
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLString.cs
    startLine: 721
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: "\n<p>Converts this <xref href=\"System.Data.SqlTypes.SqlString\" data-throw-if-not-resolved=\"false\"></xref> structure to <xref href=\"System.Data.SqlTypes.SqlDateTime\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: public SqlDateTime ToSqlDateTime()
    content.vb: Public Function ToSqlDateTime As SqlDateTime
    return:
      type: System.Data.SqlTypes.SqlDateTime
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Data.SqlTypes.SqlString.ToSqlDecimal
  commentId: M:System.Data.SqlTypes.SqlString.ToSqlDecimal
  id: ToSqlDecimal
  parent: System.Data.SqlTypes.SqlString
  langs:
  - csharp
  - vb
  name: ToSqlDecimal()
  fullName: System.Data.SqlTypes.SqlString.ToSqlDecimal()
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLString.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ToSqlDecimal
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLString.cs
    startLine: 751
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: "\n<p>Converts this <xref href=\"System.Data.SqlTypes.SqlString\" data-throw-if-not-resolved=\"false\"></xref> structure to <xref href=\"System.Data.SqlTypes.SqlDecimal\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: public SqlDecimal ToSqlDecimal()
    content.vb: Public Function ToSqlDecimal As SqlDecimal
    return:
      type: System.Data.SqlTypes.SqlDecimal
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Data.SqlTypes.SqlString.ToSqlDouble
  commentId: M:System.Data.SqlTypes.SqlString.ToSqlDouble
  id: ToSqlDouble
  parent: System.Data.SqlTypes.SqlString
  langs:
  - csharp
  - vb
  name: ToSqlDouble()
  fullName: System.Data.SqlTypes.SqlString.ToSqlDouble()
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLString.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ToSqlDouble
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLString.cs
    startLine: 726
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: "\n<p>Converts this <xref href=\"System.Data.SqlTypes.SqlString\" data-throw-if-not-resolved=\"false\"></xref> structure to <xref href=\"System.Data.SqlTypes.SqlDouble\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: public SqlDouble ToSqlDouble()
    content.vb: Public Function ToSqlDouble As SqlDouble
    return:
      type: System.Data.SqlTypes.SqlDouble
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Data.SqlTypes.SqlString.ToSqlGuid
  commentId: M:System.Data.SqlTypes.SqlString.ToSqlGuid
  id: ToSqlGuid
  parent: System.Data.SqlTypes.SqlString
  langs:
  - csharp
  - vb
  name: ToSqlGuid()
  fullName: System.Data.SqlTypes.SqlString.ToSqlGuid()
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLString.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ToSqlGuid
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLString.cs
    startLine: 761
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: "\n<p>Converts this <xref href=\"System.Data.SqlTypes.SqlString\" data-throw-if-not-resolved=\"false\"></xref> structure to <xref href=\"System.Data.SqlTypes.SqlGuid\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: public SqlGuid ToSqlGuid()
    content.vb: Public Function ToSqlGuid As SqlGuid
    return:
      type: System.Data.SqlTypes.SqlGuid
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Data.SqlTypes.SqlString.ToSqlInt16
  commentId: M:System.Data.SqlTypes.SqlString.ToSqlInt16
  id: ToSqlInt16
  parent: System.Data.SqlTypes.SqlString
  langs:
  - csharp
  - vb
  name: ToSqlInt16()
  fullName: System.Data.SqlTypes.SqlString.ToSqlInt16()
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLString.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ToSqlInt16
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLString.cs
    startLine: 731
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: "\n<p>Converts this <xref href=\"System.Data.SqlTypes.SqlString\" data-throw-if-not-resolved=\"false\"></xref> structure to <xref href=\"System.Data.SqlTypes.SqlInt16\" data-throw-if-not-resolved=\"false\"></xref>. </p>\n"
  syntax:
    content: public SqlInt16 ToSqlInt16()
    content.vb: Public Function ToSqlInt16 As SqlInt16
    return:
      type: System.Data.SqlTypes.SqlInt16
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Data.SqlTypes.SqlString.ToSqlInt32
  commentId: M:System.Data.SqlTypes.SqlString.ToSqlInt32
  id: ToSqlInt32
  parent: System.Data.SqlTypes.SqlString
  langs:
  - csharp
  - vb
  name: ToSqlInt32()
  fullName: System.Data.SqlTypes.SqlString.ToSqlInt32()
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLString.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ToSqlInt32
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLString.cs
    startLine: 736
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: "\n<p>Converts this <xref href=\"System.Data.SqlTypes.SqlString\" data-throw-if-not-resolved=\"false\"></xref> structure to <xref href=\"System.Data.SqlTypes.SqlInt32\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: public SqlInt32 ToSqlInt32()
    content.vb: Public Function ToSqlInt32 As SqlInt32
    return:
      type: System.Data.SqlTypes.SqlInt32
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Data.SqlTypes.SqlString.ToSqlInt64
  commentId: M:System.Data.SqlTypes.SqlString.ToSqlInt64
  id: ToSqlInt64
  parent: System.Data.SqlTypes.SqlString
  langs:
  - csharp
  - vb
  name: ToSqlInt64()
  fullName: System.Data.SqlTypes.SqlString.ToSqlInt64()
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLString.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ToSqlInt64
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLString.cs
    startLine: 741
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: "\n<p>Converts this <xref href=\"System.Data.SqlTypes.SqlString\" data-throw-if-not-resolved=\"false\"></xref> structure to <xref href=\"System.Data.SqlTypes.SqlInt64\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: public SqlInt64 ToSqlInt64()
    content.vb: Public Function ToSqlInt64 As SqlInt64
    return:
      type: System.Data.SqlTypes.SqlInt64
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Data.SqlTypes.SqlString.ToSqlMoney
  commentId: M:System.Data.SqlTypes.SqlString.ToSqlMoney
  id: ToSqlMoney
  parent: System.Data.SqlTypes.SqlString
  langs:
  - csharp
  - vb
  name: ToSqlMoney()
  fullName: System.Data.SqlTypes.SqlString.ToSqlMoney()
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLString.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ToSqlMoney
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLString.cs
    startLine: 746
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: "\n<p>Converts this <xref href=\"System.Data.SqlTypes.SqlString\" data-throw-if-not-resolved=\"false\"></xref> structure to <xref href=\"System.Data.SqlTypes.SqlMoney\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: public SqlMoney ToSqlMoney()
    content.vb: Public Function ToSqlMoney As SqlMoney
    return:
      type: System.Data.SqlTypes.SqlMoney
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Data.SqlTypes.SqlString.ToSqlSingle
  commentId: M:System.Data.SqlTypes.SqlString.ToSqlSingle
  id: ToSqlSingle
  parent: System.Data.SqlTypes.SqlString
  langs:
  - csharp
  - vb
  name: ToSqlSingle()
  fullName: System.Data.SqlTypes.SqlString.ToSqlSingle()
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLString.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ToSqlSingle
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLString.cs
    startLine: 756
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: "\n<p>Converts this <xref href=\"System.Data.SqlTypes.SqlString\" data-throw-if-not-resolved=\"false\"></xref> structure to <xref href=\"System.Data.SqlTypes.SqlSingle\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: public SqlSingle ToSqlSingle()
    content.vb: Public Function ToSqlSingle As SqlSingle
    return:
      type: System.Data.SqlTypes.SqlSingle
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Data.SqlTypes.SqlString.ToString
  commentId: M:System.Data.SqlTypes.SqlString.ToString
  id: ToString
  parent: System.Data.SqlTypes.SqlString
  langs:
  - csharp
  - vb
  name: ToString()
  fullName: System.Data.SqlTypes.SqlString.ToString()
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLString.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ToString
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLString.cs
    startLine: 347
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: "\n<p>Converts a <xref href=\"System.Data.SqlTypes.SqlString\" data-throw-if-not-resolved=\"false\"></xref> object to a <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: public override string ToString()
    content.vb: Public Overrides Function ToString As String
    return:
      type: System.String
  overridden: System.ValueType.ToString
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: System.Data.SqlTypes
  isExternal: false
  name: System.Data.SqlTypes
  fullName: System.Data.SqlTypes
- uid: System.Data.SqlTypes.INullable
  parent: System.Data.SqlTypes
  isExternal: false
  name: INullable
  fullName: System.Data.SqlTypes.INullable
- uid: System.IComparable
  parent: System
  isExternal: false
  name: IComparable
  fullName: System.IComparable
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  fullName: System.Int32
- uid: System.Data.SqlTypes.SqlString
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlString
  fullName: System.Data.SqlTypes.SqlString
- uid: System.Data.SqlTypes.SqlCompareOptions
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlCompareOptions
  fullName: System.Data.SqlTypes.SqlCompareOptions
- uid: System.Byte[]
  isExternal: true
  name: Byte[]
  fullName: System.Byte[]
  fullname.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    fullName: ()
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  fullName: System.Boolean
- uid: System.String
  parent: System
  isExternal: false
  name: String
  fullName: System.String
- uid: System.Globalization.CompareInfo
  parent: System.Globalization
  isExternal: false
  name: CompareInfo
  fullName: System.Globalization.CompareInfo
- uid: System.Globalization
  isExternal: false
  name: System.Globalization
  fullName: System.Globalization
- uid: System.Globalization.CultureInfo
  parent: System.Globalization
  isExternal: false
  name: CultureInfo
  fullName: System.Globalization.CultureInfo
- uid: System.Data.SqlTypes.INullable.IsNull
  parent: System.Data.SqlTypes.INullable
  isExternal: false
  name: IsNull
  fullName: System.Data.SqlTypes.INullable.IsNull
- uid: System.Globalization.CompareOptions
  parent: System.Globalization
  isExternal: false
  name: CompareOptions
  fullName: System.Globalization.CompareOptions
- uid: System.IComparable.CompareTo(System.Object)
  parent: System.IComparable
  isExternal: true
  name: CompareTo(Object)
  fullName: System.IComparable.CompareTo(System.Object)
  spec.csharp:
  - uid: System.IComparable.CompareTo(System.Object)
    name: CompareTo
    fullName: System.IComparable.CompareTo
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IComparable.CompareTo(System.Object)
    name: CompareTo
    fullName: System.IComparable.CompareTo
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Data.SqlTypes.SqlBoolean
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlBoolean
  fullName: System.Data.SqlTypes.SqlBoolean
- uid: System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  name: Equals(Object)
  fullName: System.ValueType.Equals(System.Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    fullName: System.ValueType.Equals
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    fullName: System.ValueType.Equals
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.ValueType
  parent: System
  isExternal: false
  name: ValueType
  fullName: System.ValueType
- uid: System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: false
  name: GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    fullName: System.ValueType.GetHashCode
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    fullName: System.ValueType.GetHashCode
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Data.SqlTypes.SqlByte
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlByte
  fullName: System.Data.SqlTypes.SqlByte
- uid: System.Data.SqlTypes.SqlDateTime
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlDateTime
  fullName: System.Data.SqlTypes.SqlDateTime
- uid: System.Data.SqlTypes.SqlDecimal
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlDecimal
  fullName: System.Data.SqlTypes.SqlDecimal
- uid: System.Data.SqlTypes.SqlDouble
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlDouble
  fullName: System.Data.SqlTypes.SqlDouble
- uid: System.Data.SqlTypes.SqlGuid
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlGuid
  fullName: System.Data.SqlTypes.SqlGuid
- uid: System.Data.SqlTypes.SqlInt16
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlInt16
  fullName: System.Data.SqlTypes.SqlInt16
- uid: System.Data.SqlTypes.SqlInt32
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlInt32
  fullName: System.Data.SqlTypes.SqlInt32
- uid: System.Data.SqlTypes.SqlInt64
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlInt64
  fullName: System.Data.SqlTypes.SqlInt64
- uid: System.Data.SqlTypes.SqlMoney
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlMoney
  fullName: System.Data.SqlTypes.SqlMoney
- uid: System.Data.SqlTypes.SqlSingle
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlSingle
  fullName: System.Data.SqlTypes.SqlSingle
- uid: System.ValueType.ToString
  parent: System.ValueType
  isExternal: false
  name: ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    fullName: System.ValueType.ToString
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    fullName: System.ValueType.ToString
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Data.SqlTypes.SqlNullValueException
  isExternal: false
  name: SqlNullValueException
  fullName: System.Data.SqlTypes.SqlNullValueException
