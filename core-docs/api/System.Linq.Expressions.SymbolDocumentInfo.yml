items:
- uid: System.Linq.Expressions.SymbolDocumentInfo
  commentId: T:System.Linq.Expressions.SymbolDocumentInfo
  id: SymbolDocumentInfo
  parent: System.Linq.Expressions
  children:
  - System.Linq.Expressions.SymbolDocumentInfo.DocumentType
  - System.Linq.Expressions.SymbolDocumentInfo.FileName
  - System.Linq.Expressions.SymbolDocumentInfo.Language
  - System.Linq.Expressions.SymbolDocumentInfo.LanguageVendor
  langs:
  - csharp
  - vb
  name: SymbolDocumentInfo
  fullName: System.Linq.Expressions.SymbolDocumentInfo
  type: Class
  source:
    remote:
      path: src/System.Linq.Expressions/src/System/Linq/Expressions/SymbolDocumentInfo.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: SymbolDocumentInfo
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/SymbolDocumentInfo.cs
    startLine: 13
  assemblies:
  - System.Linq.Expressions
  namespace: System.Linq.Expressions
  summary: Stores information necessary to emit debugging symbol information for a source file, in particular the file name and unique language identifier.
  syntax:
    content: 'public class SymbolDocumentInfo : object'
    content.vb: >-
      Public Class SymbolDocumentInfo
          Inherits Object
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: System.Linq.Expressions.SymbolDocumentInfo.DocumentType
  commentId: P:System.Linq.Expressions.SymbolDocumentInfo.DocumentType
  id: DocumentType
  parent: System.Linq.Expressions.SymbolDocumentInfo
  langs:
  - csharp
  - vb
  name: DocumentType
  fullName: System.Linq.Expressions.SymbolDocumentInfo.DocumentType
  type: Property
  source:
    remote:
      path: src/System.Linq.Expressions/src/System/Linq/Expressions/SymbolDocumentInfo.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: DocumentType
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/SymbolDocumentInfo.cs
    startLine: 53
  assemblies:
  - System.Linq.Expressions
  namespace: System.Linq.Expressions
  summary: Returns the document type's unique identifier, if any. Defaults to the GUID for a text file.
  syntax:
    content: public virtual Guid DocumentType { get; }
    content.vb: Public Overridable ReadOnly Property DocumentType As Guid
    parameters: []
    return:
      type: System.Guid
      description: The document type's unique identifier.
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: System.Linq.Expressions.SymbolDocumentInfo.FileName
  commentId: P:System.Linq.Expressions.SymbolDocumentInfo.FileName
  id: FileName
  parent: System.Linq.Expressions.SymbolDocumentInfo
  langs:
  - csharp
  - vb
  name: FileName
  fullName: System.Linq.Expressions.SymbolDocumentInfo.FileName
  type: Property
  source:
    remote:
      path: src/System.Linq.Expressions/src/System/Linq/Expressions/SymbolDocumentInfo.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: FileName
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/SymbolDocumentInfo.cs
    startLine: 26
  assemblies:
  - System.Linq.Expressions
  namespace: System.Linq.Expressions
  summary: The source file name.
  syntax:
    content: public string FileName { get; }
    content.vb: Public ReadOnly Property FileName As String
    parameters: []
    return:
      type: System.String
      description: The string representing the source file name.
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Linq.Expressions.SymbolDocumentInfo.Language
  commentId: P:System.Linq.Expressions.SymbolDocumentInfo.Language
  id: Language
  parent: System.Linq.Expressions.SymbolDocumentInfo
  langs:
  - csharp
  - vb
  name: Language
  fullName: System.Linq.Expressions.SymbolDocumentInfo.Language
  type: Property
  source:
    remote:
      path: src/System.Linq.Expressions/src/System/Linq/Expressions/SymbolDocumentInfo.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Language
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/SymbolDocumentInfo.cs
    startLine: 34
  assemblies:
  - System.Linq.Expressions
  namespace: System.Linq.Expressions
  summary: Returns the language's unique identifier, if any.
  syntax:
    content: public virtual Guid Language { get; }
    content.vb: Public Overridable ReadOnly Property Language As Guid
    parameters: []
    return:
      type: System.Guid
      description: The language's unique identifier
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: System.Linq.Expressions.SymbolDocumentInfo.LanguageVendor
  commentId: P:System.Linq.Expressions.SymbolDocumentInfo.LanguageVendor
  id: LanguageVendor
  parent: System.Linq.Expressions.SymbolDocumentInfo
  langs:
  - csharp
  - vb
  name: LanguageVendor
  fullName: System.Linq.Expressions.SymbolDocumentInfo.LanguageVendor
  type: Property
  source:
    remote:
      path: src/System.Linq.Expressions/src/System/Linq/Expressions/SymbolDocumentInfo.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: LanguageVendor
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/SymbolDocumentInfo.cs
    startLine: 42
  assemblies:
  - System.Linq.Expressions
  namespace: System.Linq.Expressions
  summary: Returns the language vendor's unique identifier, if any.
  syntax:
    content: public virtual Guid LanguageVendor { get; }
    content.vb: Public Overridable ReadOnly Property LanguageVendor As Guid
    parameters: []
    return:
      type: System.Guid
      description: The language vendor's unique identifier.
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
references:
- uid: System.Linq.Expressions
  isExternal: false
  name: System.Linq.Expressions
  fullName: System.Linq.Expressions
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Guid
  parent: System
  isExternal: false
  name: Guid
  fullName: System.Guid
- uid: System.String
  parent: System
  isExternal: false
  name: String
  fullName: System.String
