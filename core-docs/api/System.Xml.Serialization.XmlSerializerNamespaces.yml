items:
- uid: System.Xml.Serialization.XmlSerializerNamespaces
  commentId: T:System.Xml.Serialization.XmlSerializerNamespaces
  id: XmlSerializerNamespaces
  parent: System.Xml.Serialization
  children:
  - System.Xml.Serialization.XmlSerializerNamespaces.#ctor
  - System.Xml.Serialization.XmlSerializerNamespaces.#ctor(System.Xml.Serialization.XmlSerializerNamespaces)
  - System.Xml.Serialization.XmlSerializerNamespaces.#ctor(System.Xml.XmlQualifiedName[])
  - System.Xml.Serialization.XmlSerializerNamespaces.Add(System.String,System.String)
  - System.Xml.Serialization.XmlSerializerNamespaces.Count
  - System.Xml.Serialization.XmlSerializerNamespaces.ToArray
  langs:
  - csharp
  - vb
  name: XmlSerializerNamespaces
  fullName: System.Xml.Serialization.XmlSerializerNamespaces
  type: Class
  source:
    remote:
      path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: XmlSerializerNamespaces
    path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.cs
    startLine: 199
  assemblies:
  - System.Xml.XmlSerializer
  namespace: System.Xml.Serialization
  summary: "\n<p>Contains the XML namespaces and prefixes that the <xref href=\"System.Xml.Serialization.XmlSerializer\" data-throw-if-not-resolved=\"false\"></xref> uses to generate qualified names in an XML-document instance.</p>\n"
  remarks: "\n<p>The <xref href=\"System.Xml.Serialization.XmlSerializerNamespaces\" data-throw-if-not-resolved=\"false\"></xref> contains a collection of XML namespaces, each with an associated prefix. The <xref href=\"System.Xml.Serialization.XmlSerializer\" data-throw-if-not-resolved=\"false\"></xref> uses an instance of the <xref href=\"System.Xml.Serialization.XmlSerializerNamespaces\" data-throw-if-not-resolved=\"false\"></xref> class to create qualified names in an XML document.</p>\n<p>XML namespaces contained by the <xref href=\"System.Xml.Serialization.XmlSerializerNamespaces\" data-throw-if-not-resolved=\"false\"></xref> must conform to the www.w3.org specification named <em>Namespaces in XML</em>.</p>\n<p>XML namespaces provide a way to qualify the names of XML elements and attributes in XML documents. A qualified name consists of a prefix and a local name, separated by a colon. The prefix functions only as a placeholder; it is mapped to a URI that specifies a namespace. The combination of the universally-managed URI namespace and the local name produces a name that is guaranteed to be universally unique.</p>\n<p>To create qualified names in an XML document: </p>\n<ol><li>\n<p>Create an <xref href=\"System.Xml.Serialization.XmlSerializerNamespaces\" data-throw-if-not-resolved=\"false\"></xref> instance.</p>\n</li><li>\n<p>\n<xref href=\"System.Xml.Serialization.XmlSerializerNamespaces.Add(System.String,System.String)\" data-throw-if-not-resolved=\"false\"></xref> each prefix and namespace pair that you want to the instance.</p>\n</li><li>\n<p>Apply the appropriate.NET attribute to each property or class that the <xref href=\"System.Xml.Serialization.XmlSerializer\" data-throw-if-not-resolved=\"false\"></xref> serializes into an XML document. The available attributes are: </p>\n</li></ol>\n<ul><li>\n<p>\n<xref href=\"System.Xml.Serialization.XmlArrayAttribute\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</li><li>\n<p>\n<xref href=\"System.Xml.Serialization.XmlArrayItemAttribute\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</li><li>\n<p>\n<xref href=\"System.Xml.Serialization.XmlAttributeAttribute\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</li><li>\n<p>\n<xref href=\"System.Xml.Serialization.XmlElementAttribute\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</li><li>\n<p>\n<xref href=\"System.Xml.Serialization.XmlRootAttribute\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</li><li>\n<p>\n<xref href=\"System.Xml.Serialization.XmlTypeAttribute\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</li></ul>\n<ol><li>\n<p>Set the <strong>Namespace</strong> property of each attribute to one of the namespace values from the <xref href=\"System.Xml.Serialization.XmlSerializerNamespaces\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n</li><li>\n<p>Pass the <xref href=\"System.Xml.Serialization.XmlSerializerNamespaces\" data-throw-if-not-resolved=\"false\"></xref> to the <xref href=\"System.Xml.Serialization.XmlSerializer.Serialize(System.IO.TextWriter,System.Object)\" data-throw-if-not-resolved=\"false\"></xref> method of the <xref href=\"System.Xml.Serialization.XmlSerializer\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n</li></ol>\n<p>The creation of an empty namespace and prefix pair is not supported. That is, you cannot create a pair using the following code:</p>\n<pre><code class=\"c#\">XmlSerializerNamespaces ns = new XmlSerializerNamespaces(); \nns.Add(\"\", \"\");</code></pre>\n<pre><code class=\"vb#\">Dim ns As XmlSerializerNamespaces ns = New XmlSerializerNamespaces()\nns.Add(\"\", \"\")</code></pre>\n"
  example:
  - "\n<p>The following example creates an <xref href=\"System.Xml.Serialization.XmlSerializerNamespaces\" data-throw-if-not-resolved=\"false\"></xref> object, and adds two prefix and namespace pairs to it. The example then passes the <xref href=\"System.Xml.Serialization.XmlSerializerNamespaces\" data-throw-if-not-resolved=\"false\"></xref> to the <xref href=\"System.Xml.Serialization.XmlSerializer.Serialize(System.IO.TextWriter,System.Object)\" data-throw-if-not-resolved=\"false\"></xref> method, which serializes a <strong>Books</strong> object into an XML document. Using the <xref href=\"System.Xml.Serialization.XmlSerializerNamespaces\" data-throw-if-not-resolved=\"false\"></xref> object, the <xref href=\"System.Xml.Serialization.XmlSerializer.Serialize(System.IO.TextWriter,System.Object)\" data-throw-if-not-resolved=\"false\"></xref> method qualifies each XML element and attribute with one of the two namespaces.</p>Classic XmlSerializerNamespaces Example#1"
  syntax:
    content: public class XmlSerializerNamespaces
    content.vb: Public Class XmlSerializerNamespaces
  seealso:
  - type: System.Xml.Serialization.XmlAttributes
    commentId: T:System.Xml.Serialization.XmlAttributes
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: System.Xml.Serialization.XmlSerializerNamespaces.#ctor
  commentId: M:System.Xml.Serialization.XmlSerializerNamespaces.#ctor
  id: '#ctor'
  parent: System.Xml.Serialization.XmlSerializerNamespaces
  langs:
  - csharp
  - vb
  name: XmlSerializerNamespaces()
  fullName: System.Xml.Serialization.XmlSerializerNamespaces.XmlSerializerNamespaces()
  type: Constructor
  source:
    remote:
      path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.cs
    startLine: 201
  assemblies:
  - System.Xml.XmlSerializer
  namespace: System.Xml.Serialization
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Xml.Serialization.XmlSerializerNamespaces\" data-throw-if-not-resolved=\"false\"></xref> class.</p>\n"
  example:
  - "\n<p>The following example creates an instance of the <xref href=\"System.Xml.Serialization.XmlSerializerNamespaces\" data-throw-if-not-resolved=\"false\"></xref> class, and adds a prefix and namespace pair to the object.</p>XmlSerializerNameSpaces_Constructor#1"
  syntax:
    content: public XmlSerializerNamespaces()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Xml.Serialization.XmlSerializerNamespaces.#ctor(System.Xml.Serialization.XmlSerializerNamespaces)
  commentId: M:System.Xml.Serialization.XmlSerializerNamespaces.#ctor(System.Xml.Serialization.XmlSerializerNamespaces)
  id: '#ctor(System.Xml.Serialization.XmlSerializerNamespaces)'
  parent: System.Xml.Serialization.XmlSerializerNamespaces
  langs:
  - csharp
  - vb
  name: XmlSerializerNamespaces(XmlSerializerNamespaces)
  fullName: System.Xml.Serialization.XmlSerializerNamespaces.XmlSerializerNamespaces(System.Xml.Serialization.XmlSerializerNamespaces)
  type: Constructor
  source:
    remote:
      path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.cs
    startLine: 202
  assemblies:
  - System.Xml.XmlSerializer
  namespace: System.Xml.Serialization
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Xml.Serialization.XmlSerializerNamespaces\" data-throw-if-not-resolved=\"false\"></xref> class, using the specified instance of <strong>XmlSerializerNamespaces</strong> containing the collection of prefix and namespace pairs.</p>\n"
  example:
  - "\n<p>The following example creates two <xref href=\"System.Xml.XmlQualifiedName\" data-throw-if-not-resolved=\"false\"></xref> objects, and creates a new <xref href=\"System.Xml.Serialization.XmlSerializerNamespaces\" data-throw-if-not-resolved=\"false\"></xref> instance from them.</p>Classic XmlSerializerNamespaces.XmlSerializerNamespaces1 Example#1"
  syntax:
    content: public XmlSerializerNamespaces(XmlSerializerNamespaces namespaces)
    content.vb: Public Sub New(namespaces As XmlSerializerNamespaces)
    parameters:
    - id: namespaces
      type: System.Xml.Serialization.XmlSerializerNamespaces
      description: "\n<p>An instance of the <xref href=\"System.Xml.Serialization.XmlSerializerNamespaces\" data-throw-if-not-resolved=\"false\"></xref>containing the namespace and prefix pairs. </p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Xml.Serialization.XmlSerializerNamespaces.#ctor(System.Xml.XmlQualifiedName[])
  commentId: M:System.Xml.Serialization.XmlSerializerNamespaces.#ctor(System.Xml.XmlQualifiedName[])
  id: '#ctor(System.Xml.XmlQualifiedName[])'
  parent: System.Xml.Serialization.XmlSerializerNamespaces
  langs:
  - csharp
  - vb
  name: XmlSerializerNamespaces(XmlQualifiedName[])
  fullName: System.Xml.Serialization.XmlSerializerNamespaces.XmlSerializerNamespaces(System.Xml.XmlQualifiedName[])
  type: Constructor
  source:
    remote:
      path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.cs
    startLine: 203
  assemblies:
  - System.Xml.XmlSerializer
  namespace: System.Xml.Serialization
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Xml.Serialization.XmlSerializerNamespaces\" data-throw-if-not-resolved=\"false\"></xref> class.</p>\n"
  syntax:
    content: public XmlSerializerNamespaces(XmlQualifiedName[] namespaces)
    content.vb: Public Sub New(namespaces As XmlQualifiedName())
    parameters:
    - id: namespaces
      type: System.Xml.XmlQualifiedName[]
      description: "\n<p>An array of <xref href=\"System.Xml.XmlQualifiedName\" data-throw-if-not-resolved=\"false\"></xref> objects. </p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Xml.Serialization.XmlSerializerNamespaces.XmlSerializerNamespaces(System.Xml.XmlQualifiedName())
  name.vb: XmlSerializerNamespaces(XmlQualifiedName())
- uid: System.Xml.Serialization.XmlSerializerNamespaces.Count
  commentId: P:System.Xml.Serialization.XmlSerializerNamespaces.Count
  id: Count
  parent: System.Xml.Serialization.XmlSerializerNamespaces
  langs:
  - csharp
  - vb
  name: Count
  fullName: System.Xml.Serialization.XmlSerializerNamespaces.Count
  type: Property
  source:
    remote:
      path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Count
    path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.cs
    startLine: 204
  assemblies:
  - System.Xml.XmlSerializer
  namespace: System.Xml.Serialization
  summary: "\n<p>Gets the number of prefix and namespace pairs in the collection.</p>\n"
  syntax:
    content: public int Count { get; }
    content.vb: Public ReadOnly Property Count As Integer
    parameters: []
    return:
      type: System.Int32
      description: "\n<p>The number of prefix and namespace pairs in the collection.</p>\n"
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Xml.Serialization.XmlSerializerNamespaces.Add(System.String,System.String)
  commentId: M:System.Xml.Serialization.XmlSerializerNamespaces.Add(System.String,System.String)
  id: Add(System.String,System.String)
  parent: System.Xml.Serialization.XmlSerializerNamespaces
  langs:
  - csharp
  - vb
  name: Add(String, String)
  fullName: System.Xml.Serialization.XmlSerializerNamespaces.Add(System.String, System.String)
  type: Method
  source:
    remote:
      path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Add
    path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.cs
    startLine: 205
  assemblies:
  - System.Xml.XmlSerializer
  namespace: System.Xml.Serialization
  summary: "\n<p>Adds a prefix and namespace pair to an <xref href=\"System.Xml.Serialization.XmlSerializerNamespaces\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  remarks: "\n<p>If you want the <xref href=\"System.Xml.Serialization.XmlSerializer\" data-throw-if-not-resolved=\"false\"></xref> to qualify the element and attribute names in an XML document, you must <xref href=\"System.Xml.Serialization.XmlSerializerNamespaces.Add(System.String,System.String)\" data-throw-if-not-resolved=\"false\"></xref> the prefix and namespace pairs to an <xref href=\"System.Xml.Serialization.XmlSerializerNamespaces\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n<p>Any namespaces that you add must conform to the www.w3.org specification <em>Namespaces in XML</em>.</p>\n"
  example:
  - "\n<p>The following example creates an <xref href=\"System.Xml.Serialization.XmlSerializerNamespaces\" data-throw-if-not-resolved=\"false\"></xref> object, and adds three prefix and namespace pairs to it by calling the <xref href=\"System.Xml.Serialization.XmlSerializerNamespaces.Add(System.String,System.String)\" data-throw-if-not-resolved=\"false\"></xref> method.</p>Classic XmlSerializerNamespaces.Add Example#1"
  syntax:
    content: public void Add(string prefix, string ns)
    content.vb: Public Sub Add(prefix As String, ns As String)
    parameters:
    - id: prefix
      type: System.String
      description: "\n<p>The prefix associated with an XML namespace. </p>\n"
    - id: ns
      type: System.String
      description: "\n<p>An XML namespace. </p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Xml.Serialization.XmlSerializerNamespaces.ToArray
  commentId: M:System.Xml.Serialization.XmlSerializerNamespaces.ToArray
  id: ToArray
  parent: System.Xml.Serialization.XmlSerializerNamespaces
  langs:
  - csharp
  - vb
  name: ToArray()
  fullName: System.Xml.Serialization.XmlSerializerNamespaces.ToArray()
  type: Method
  source:
    remote:
      path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ToArray
    path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.cs
    startLine: 206
  assemblies:
  - System.Xml.XmlSerializer
  namespace: System.Xml.Serialization
  summary: "\n<p>Gets the array of prefix and namespace pairs in an <xref href=\"System.Xml.Serialization.XmlSerializerNamespaces\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  example:
  - "\n<p>The following example prints each <xref href=\"System.Xml.XmlQualifiedName.Name\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"System.Xml.XmlQualifiedName.Namespace\" data-throw-if-not-resolved=\"false\"></xref> in an <xref href=\"System.Xml.Serialization.XmlSerializerNamespaces\" data-throw-if-not-resolved=\"false\"></xref> object.</p>Classic XmlSerializerNamespaces.ToArray Example#1"
  syntax:
    content: public XmlQualifiedName[] ToArray()
    content.vb: Public Function ToArray As XmlQualifiedName()
    return:
      type: System.Xml.XmlQualifiedName[]
      description: "\n<p>An array of <xref href=\"System.Xml.XmlQualifiedName\" data-throw-if-not-resolved=\"false\"></xref> objects that are used as qualified names in an XML document.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: System.Xml.Serialization
  isExternal: false
  name: System.Xml.Serialization
  fullName: System.Xml.Serialization
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Xml.Serialization.XmlSerializerNamespaces
  parent: System.Xml.Serialization
  isExternal: false
  name: XmlSerializerNamespaces
  fullName: System.Xml.Serialization.XmlSerializerNamespaces
- uid: System.Xml.XmlQualifiedName[]
  isExternal: true
  name: XmlQualifiedName[]
  fullName: System.Xml.XmlQualifiedName[]
  fullname.vb: System.Xml.XmlQualifiedName()
  name.vb: XmlQualifiedName()
  spec.csharp:
  - uid: System.Xml.XmlQualifiedName
    name: XmlQualifiedName
    fullName: System.Xml.XmlQualifiedName
    isExternal: true
  - name: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Xml.XmlQualifiedName
    name: XmlQualifiedName
    fullName: System.Xml.XmlQualifiedName
    isExternal: true
  - name: ()
    fullName: ()
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  fullName: System.Int32
- uid: System.String
  parent: System
  isExternal: false
  name: String
  fullName: System.String
