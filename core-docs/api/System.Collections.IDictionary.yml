items:
- uid: System.Collections.IDictionary
  commentId: T:System.Collections.IDictionary
  id: IDictionary
  parent: System.Collections
  children:
  - System.Collections.IDictionary.Add(System.Object,System.Object)
  - System.Collections.IDictionary.Clear
  - System.Collections.IDictionary.Contains(System.Object)
  - System.Collections.IDictionary.GetEnumerator
  - System.Collections.IDictionary.IsFixedSize
  - System.Collections.IDictionary.IsReadOnly
  - System.Collections.IDictionary.Item(System.Object)
  - System.Collections.IDictionary.Keys
  - System.Collections.IDictionary.Remove(System.Object)
  - System.Collections.IDictionary.Values
  langs:
  - csharp
  - vb
  name: IDictionary
  fullName: System.Collections.IDictionary
  type: Interface
  source:
    remote:
      path: src/mscorlib/src/System/Collections/IDictionary.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: IDictionary
    path: src/mscorlib/src/System/Collections/IDictionary.cs
    startLine: 23
  assemblies:
  - System.Runtime
  namespace: System.Collections
  summary: Represents a nongeneric collection of key/value pairs.
  syntax:
    content: 'public interface IDictionary : ICollection, IEnumerable'
    content.vb: >-
      Public Interface IDictionary
          Inherits ICollection, IEnumerable
  inheritedMembers:
  - System.Collections.ICollection.Count
  - System.Collections.ICollection.IsSynchronized
  - System.Collections.ICollection.SyncRoot
  - System.Collections.ICollection.CopyTo(System.Array,System.Int32)
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: System.Collections.IDictionary.IsFixedSize
  commentId: P:System.Collections.IDictionary.IsFixedSize
  id: IsFixedSize
  parent: System.Collections.IDictionary
  langs:
  - csharp
  - vb
  name: IsFixedSize
  fullName: System.Collections.IDictionary.IsFixedSize
  type: Property
  source:
    remote:
      path: src/mscorlib/src/System/Collections/IDictionary.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: IsFixedSize
    path: src/mscorlib/src/System/Collections/IDictionary.cs
    startLine: 58
  assemblies:
  - System.Runtime
  namespace: System.Collections
  summary: Gets a value indicating whether the <xref href="System.Collections.IDictionary" data-throw-if-not-resolved="false"></xref> object has a fixed size.
  syntax:
    content: bool IsFixedSize { get; }
    content.vb: ReadOnly Property IsFixedSize As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: true if the <xref href="System.Collections.IDictionary" data-throw-if-not-resolved="false"></xref> object has a fixed size; otherwise, false.
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: System.Collections.IDictionary.IsReadOnly
  commentId: P:System.Collections.IDictionary.IsReadOnly
  id: IsReadOnly
  parent: System.Collections.IDictionary
  langs:
  - csharp
  - vb
  name: IsReadOnly
  fullName: System.Collections.IDictionary.IsReadOnly
  type: Property
  source:
    remote:
      path: src/mscorlib/src/System/Collections/IDictionary.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: IsReadOnly
    path: src/mscorlib/src/System/Collections/IDictionary.cs
    startLine: 55
  assemblies:
  - System.Runtime
  namespace: System.Collections
  summary: Gets a value indicating whether the <xref href="System.Collections.IDictionary" data-throw-if-not-resolved="false"></xref> object is read-only.
  syntax:
    content: bool IsReadOnly { get; }
    content.vb: ReadOnly Property IsReadOnly As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: true if the <xref href="System.Collections.IDictionary" data-throw-if-not-resolved="false"></xref> object is read-only; otherwise, false.
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: System.Collections.IDictionary.Item(System.Object)
  commentId: P:System.Collections.IDictionary.Item(System.Object)
  id: Item(System.Object)
  parent: System.Collections.IDictionary
  langs:
  - csharp
  - vb
  name: Item[Object]
  fullName: System.Collections.IDictionary.Item[System.Object]
  type: Property
  source:
    remote:
      path: src/mscorlib/src/System/Collections/IDictionary.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: this[]
    path: src/mscorlib/src/System/Collections/IDictionary.cs
    startLine: 29
  assemblies:
  - System.Runtime
  namespace: System.Collections
  summary: Gets or sets the element with the specified key.
  syntax:
    content: object this[object key] { get; set; }
    content.vb: Property Item(key As Object) As Object
    parameters:
    - id: key
      type: System.Object
      description: 'The key of the element to get or set. '
    return:
      type: System.Object
      description: The element with the specified key, or null if the key does not exist.
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>key</em> is null. "
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: 'The property is set and the <xref href="System.Collections.IDictionary" data-throw-if-not-resolved="false"></xref> object is read-only.-or- The property is set, <em>key</em> does not exist in the collection, and the <xref href="System.Collections.IDictionary" data-throw-if-not-resolved="false"></xref> has a fixed size. '
  modifiers.csharp:
  - get
  - set
  fullName.vb: System.Collections.IDictionary.Item(System.Object)
  name.vb: Item(Object)
- uid: System.Collections.IDictionary.Keys
  commentId: P:System.Collections.IDictionary.Keys
  id: Keys
  parent: System.Collections.IDictionary
  langs:
  - csharp
  - vb
  name: Keys
  fullName: System.Collections.IDictionary.Keys
  type: Property
  source:
    remote:
      path: src/mscorlib/src/System/Collections/IDictionary.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Keys
    path: src/mscorlib/src/System/Collections/IDictionary.cs
    startLine: 35
  assemblies:
  - System.Runtime
  namespace: System.Collections
  summary: Gets an <xref href="System.Collections.ICollection" data-throw-if-not-resolved="false"></xref> object containing the keys of the <xref href="System.Collections.IDictionary" data-throw-if-not-resolved="false"></xref> object.
  syntax:
    content: ICollection Keys { get; }
    content.vb: ReadOnly Property Keys As ICollection
    parameters: []
    return:
      type: System.Collections.ICollection
      description: An <xref href="System.Collections.ICollection" data-throw-if-not-resolved="false"></xref> object containing the keys of the <xref href="System.Collections.IDictionary" data-throw-if-not-resolved="false"></xref> object.
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: System.Collections.IDictionary.Values
  commentId: P:System.Collections.IDictionary.Values
  id: Values
  parent: System.Collections.IDictionary
  langs:
  - csharp
  - vb
  name: Values
  fullName: System.Collections.IDictionary.Values
  type: Property
  source:
    remote:
      path: src/mscorlib/src/System/Collections/IDictionary.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Values
    path: src/mscorlib/src/System/Collections/IDictionary.cs
    startLine: 40
  assemblies:
  - System.Runtime
  namespace: System.Collections
  summary: Gets an <xref href="System.Collections.ICollection" data-throw-if-not-resolved="false"></xref> object containing the values in the <xref href="System.Collections.IDictionary" data-throw-if-not-resolved="false"></xref> object.
  syntax:
    content: ICollection Values { get; }
    content.vb: ReadOnly Property Values As ICollection
    parameters: []
    return:
      type: System.Collections.ICollection
      description: An <xref href="System.Collections.ICollection" data-throw-if-not-resolved="false"></xref> object containing the values in the <xref href="System.Collections.IDictionary" data-throw-if-not-resolved="false"></xref> object.
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: System.Collections.IDictionary.Add(System.Object,System.Object)
  commentId: M:System.Collections.IDictionary.Add(System.Object,System.Object)
  id: Add(System.Object,System.Object)
  parent: System.Collections.IDictionary
  langs:
  - csharp
  - vb
  name: Add(Object, Object)
  fullName: System.Collections.IDictionary.Add(System.Object, System.Object)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Collections/IDictionary.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Add
    path: src/mscorlib/src/System/Collections/IDictionary.cs
    startLine: 50
  assemblies:
  - System.Runtime
  namespace: System.Collections
  summary: Adds an element with the provided key and value to the <xref href="System.Collections.IDictionary" data-throw-if-not-resolved="false"></xref> object.
  syntax:
    content: void Add(object key, object value)
    content.vb: Sub Add(key As Object, value As Object)
    parameters:
    - id: key
      type: System.Object
      description: 'The <xref href="System.Object" data-throw-if-not-resolved="false"></xref> to use as the key of the element to add. '
    - id: value
      type: System.Object
      description: 'The <xref href="System.Object" data-throw-if-not-resolved="false"></xref> to use as the value of the element to add. '
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>key</em> is null. "
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: 'An element with the same key already exists in the <xref href="System.Collections.IDictionary" data-throw-if-not-resolved="false"></xref> object. '
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: 'The <xref href="System.Collections.IDictionary" data-throw-if-not-resolved="false"></xref> is read-only.-or- The <xref href="System.Collections.IDictionary" data-throw-if-not-resolved="false"></xref> has a fixed size. '
- uid: System.Collections.IDictionary.Clear
  commentId: M:System.Collections.IDictionary.Clear
  id: Clear
  parent: System.Collections.IDictionary
  langs:
  - csharp
  - vb
  name: Clear()
  fullName: System.Collections.IDictionary.Clear()
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Collections/IDictionary.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Clear
    path: src/mscorlib/src/System/Collections/IDictionary.cs
    startLine: 53
  assemblies:
  - System.Runtime
  namespace: System.Collections
  summary: Removes all elements from the <xref href="System.Collections.IDictionary" data-throw-if-not-resolved="false"></xref> object.
  syntax:
    content: void Clear()
    content.vb: Sub Clear
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: 'The <xref href="System.Collections.IDictionary" data-throw-if-not-resolved="false"></xref> object is read-only. '
- uid: System.Collections.IDictionary.Contains(System.Object)
  commentId: M:System.Collections.IDictionary.Contains(System.Object)
  id: Contains(System.Object)
  parent: System.Collections.IDictionary
  langs:
  - csharp
  - vb
  name: Contains(Object)
  fullName: System.Collections.IDictionary.Contains(System.Object)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Collections/IDictionary.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Contains
    path: src/mscorlib/src/System/Collections/IDictionary.cs
    startLine: 46
  assemblies:
  - System.Runtime
  namespace: System.Collections
  summary: Determines whether the <xref href="System.Collections.IDictionary" data-throw-if-not-resolved="false"></xref> object contains an element with the specified key.
  syntax:
    content: bool Contains(object key)
    content.vb: Function Contains(key As Object) As Boolean
    parameters:
    - id: key
      type: System.Object
      description: The key to locate in the <xref href="System.Collections.IDictionary" data-throw-if-not-resolved="false"></xref> object.
    return:
      type: System.Boolean
      description: true if the <xref href="System.Collections.IDictionary" data-throw-if-not-resolved="false"></xref> contains an element with the key; otherwise, false.
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>key</em> is null. "
- uid: System.Collections.IDictionary.GetEnumerator
  commentId: M:System.Collections.IDictionary.GetEnumerator
  id: GetEnumerator
  parent: System.Collections.IDictionary
  langs:
  - csharp
  - vb
  name: GetEnumerator()
  fullName: System.Collections.IDictionary.GetEnumerator()
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Collections/IDictionary.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: GetEnumerator
    path: src/mscorlib/src/System/Collections/IDictionary.cs
    startLine: 62
  assemblies:
  - System.Runtime
  namespace: System.Collections
  summary: Returns an <xref href="System.Collections.IDictionaryEnumerator" data-throw-if-not-resolved="false"></xref> object for the <xref href="System.Collections.IDictionary" data-throw-if-not-resolved="false"></xref> object.
  syntax:
    content: IDictionaryEnumerator GetEnumerator()
    content.vb: Function GetEnumerator As IDictionaryEnumerator
    return:
      type: System.Collections.IDictionaryEnumerator
      description: An <xref href="System.Collections.IDictionaryEnumerator" data-throw-if-not-resolved="false"></xref> object for the <xref href="System.Collections.IDictionary" data-throw-if-not-resolved="false"></xref> object.
- uid: System.Collections.IDictionary.Remove(System.Object)
  commentId: M:System.Collections.IDictionary.Remove(System.Object)
  id: Remove(System.Object)
  parent: System.Collections.IDictionary
  langs:
  - csharp
  - vb
  name: Remove(Object)
  fullName: System.Collections.IDictionary.Remove(System.Object)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Collections/IDictionary.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Remove
    path: src/mscorlib/src/System/Collections/IDictionary.cs
    startLine: 66
  assemblies:
  - System.Runtime
  namespace: System.Collections
  summary: Removes the element with the specified key from the <xref href="System.Collections.IDictionary" data-throw-if-not-resolved="false"></xref> object.
  syntax:
    content: void Remove(object key)
    content.vb: Sub Remove(key As Object)
    parameters:
    - id: key
      type: System.Object
      description: 'The key of the element to remove. '
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>key</em> is null. "
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: 'The <xref href="System.Collections.IDictionary" data-throw-if-not-resolved="false"></xref> object is read-only.-or- The <xref href="System.Collections.IDictionary" data-throw-if-not-resolved="false"></xref> has a fixed size. '
references:
- uid: System.Collections
  isExternal: false
  name: System.Collections
  fullName: System.Collections
- uid: System.Collections.ICollection.Count
  parent: System.Collections.ICollection
  isExternal: false
  name: Count
  fullName: System.Collections.ICollection.Count
- uid: System.Collections.ICollection.IsSynchronized
  parent: System.Collections.ICollection
  isExternal: false
  name: IsSynchronized
  fullName: System.Collections.ICollection.IsSynchronized
- uid: System.Collections.ICollection.SyncRoot
  parent: System.Collections.ICollection
  isExternal: false
  name: SyncRoot
  fullName: System.Collections.ICollection.SyncRoot
- uid: System.Collections.ICollection.CopyTo(System.Array,System.Int32)
  parent: System.Collections.ICollection
  isExternal: false
  name: CopyTo(Array, Int32)
  fullName: System.Collections.ICollection.CopyTo(System.Array, System.Int32)
  spec.csharp:
  - uid: System.Collections.ICollection.CopyTo(System.Array,System.Int32)
    name: CopyTo
    fullName: System.Collections.ICollection.CopyTo
  - name: (
    fullName: (
  - uid: System.Array
    name: Array
    fullName: System.Array
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ICollection.CopyTo(System.Array,System.Int32)
    name: CopyTo
    fullName: System.Collections.ICollection.CopyTo
  - name: (
    fullName: (
  - uid: System.Array
    name: Array
    fullName: System.Array
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
  - name: )
    fullName: )
- uid: System.Collections.ICollection
  parent: System.Collections
  isExternal: false
  name: ICollection
  fullName: System.Collections.ICollection
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  fullName: System.Boolean
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System.Collections.IDictionaryEnumerator
  parent: System.Collections
  isExternal: false
  name: IDictionaryEnumerator
  fullName: System.Collections.IDictionaryEnumerator
- uid: System.ArgumentNullException
  isExternal: false
  name: ArgumentNullException
  fullName: System.ArgumentNullException
- uid: System.NotSupportedException
  parent: System
  isExternal: false
  name: NotSupportedException
  fullName: System.NotSupportedException
- uid: System.ArgumentException
  parent: System
  isExternal: false
  name: ArgumentException
  fullName: System.ArgumentException
