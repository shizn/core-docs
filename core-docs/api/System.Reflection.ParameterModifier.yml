items:
- uid: System.Reflection.ParameterModifier
  commentId: T:System.Reflection.ParameterModifier
  id: ParameterModifier
  parent: System.Reflection
  children:
  - System.Reflection.ParameterModifier.#ctor(System.Int32)
  - System.Reflection.ParameterModifier.Item(System.Int32)
  langs:
  - csharp
  - vb
  name: ParameterModifier
  fullName: System.Reflection.ParameterModifier
  type: Struct
  source:
    remote:
      path: src/System.Reflection/ref/System.Reflection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ParameterModifier
    path: src/System.Reflection/ref/System.Reflection.cs
    startLine: 352
  assemblies:
  - System.Reflection
  namespace: System.Reflection
  summary: "\n<p>Attaches a modifier to parameters so that binding can work with parameter signatures in which the types have been modified.</p>\n"
  remarks: "\n<p>The <xref href=\"System.Reflection.ParameterModifier\" data-throw-if-not-resolved=\"false\"></xref> structure is used with the <xref href=\"System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])\" data-throw-if-not-resolved=\"false\"></xref> method overload when passing parameters by reference to a COM component that is accessed late bound. The parameters that are to be passed by reference are specified by a single <xref href=\"System.Reflection.ParameterModifier\" data-throw-if-not-resolved=\"false\"></xref> structure, which must be passed in an array containing a single element. The single <xref href=\"System.Reflection.ParameterModifier\" data-throw-if-not-resolved=\"false\"></xref> structure in this array must be initialized with the number of parameters in the member that is to be invoked. To indicate which of these parameters are passed by reference, set the value of the <xref href=\"System.Reflection.ParameterModifier.Item(System.Int32)\" data-throw-if-not-resolved=\"false\"></xref> property (the indexer in C#) to <strong>true</strong> for the index number corresponding to the zero-based position of the parameter. </p>\n"
  example:
  - "\n<p>The following code example shows this for a member that has three string arguments, the first and third of which are passed by reference. Assume that a variable named <code>obj</code> contains a reference to the COM object.</p>System.Reflection.ParameterModifier#1"
  syntax:
    content: public struct ParameterModifier
    content.vb: Public Structure ParameterModifier
  modifiers.csharp:
  - public
  - struct
  modifiers.vb:
  - Public
  - Structure
- uid: System.Reflection.ParameterModifier.#ctor(System.Int32)
  commentId: M:System.Reflection.ParameterModifier.#ctor(System.Int32)
  id: '#ctor(System.Int32)'
  parent: System.Reflection.ParameterModifier
  langs:
  - csharp
  - vb
  name: ParameterModifier(Int32)
  fullName: System.Reflection.ParameterModifier.ParameterModifier(System.Int32)
  type: Constructor
  source:
    remote:
      path: src/System.Reflection/ref/System.Reflection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Reflection/ref/System.Reflection.cs
    startLine: 355
  assemblies:
  - System.Reflection
  namespace: System.Reflection
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Reflection.ParameterModifier\" data-throw-if-not-resolved=\"false\"></xref> structure representing the specified number of parameters.</p>\n"
  syntax:
    content: public ParameterModifier(int parameterCount)
    content.vb: Public Sub New(parameterCount As Integer)
    parameters:
    - id: parameterCount
      type: System.Int32
      description: "\n<p>The number of parameters. </p>\n"
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<p>\n<em>parameterCount</em> is negative. </p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Reflection.ParameterModifier.Item(System.Int32)
  commentId: P:System.Reflection.ParameterModifier.Item(System.Int32)
  id: Item(System.Int32)
  parent: System.Reflection.ParameterModifier
  langs:
  - csharp
  - vb
  name: Item[Int32]
  fullName: System.Reflection.ParameterModifier.Item[System.Int32]
  type: Property
  source:
    remote:
      path: src/System.Reflection/ref/System.Reflection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: this[]
    path: src/System.Reflection/ref/System.Reflection.cs
    startLine: 356
  assemblies:
  - System.Reflection
  namespace: System.Reflection
  summary: "\n<p>Gets or sets a value that specifies whether the parameter at the specified index position is to be modified by the current <xref href=\"System.Reflection.ParameterModifier\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  remarks: "\n<p>Indexers permit a default property on a type to be indexed as if the type were an array.</p>\n"
  syntax:
    content: public bool this[int index] { get; set; }
    content.vb: Public Property Item(index As Integer) As Boolean
    parameters:
    - id: index
      type: System.Int32
      description: "\n<p>The index position of the parameter whose modification status is being examined or set. </p>\n"
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if the parameter at this index position is to be modified by this <xref href=\"System.Reflection.ParameterModifier\" data-throw-if-not-resolved=\"false\"></xref>; otherwise, <strong>false</strong>.</p>\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: System.Reflection.ParameterModifier.Item(System.Int32)
  name.vb: Item(Int32)
references:
- uid: System.Reflection
  isExternal: false
  name: System.Reflection
  fullName: System.Reflection
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  fullName: System.Int32
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  fullName: System.Boolean
- uid: System.ArgumentException
  parent: System
  isExternal: false
  name: ArgumentException
  fullName: System.ArgumentException
