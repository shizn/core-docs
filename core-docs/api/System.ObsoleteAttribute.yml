items:
- uid: System.ObsoleteAttribute
  commentId: T:System.ObsoleteAttribute
  id: ObsoleteAttribute
  parent: System
  children:
  - System.ObsoleteAttribute.#ctor
  - System.ObsoleteAttribute.#ctor(System.String)
  - System.ObsoleteAttribute.#ctor(System.String,System.Boolean)
  - System.ObsoleteAttribute.IsError
  - System.ObsoleteAttribute.Message
  langs:
  - csharp
  - vb
  name: ObsoleteAttribute
  fullName: System.ObsoleteAttribute
  type: Class
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ObsoleteAttribute
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 1328
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Marks the program elements that are no longer in use. This class cannot be inherited.</p>\n"
  remarks: "\n<p>\n<xref href=\"System.ObsoleteAttribute\" data-throw-if-not-resolved=\"false\"></xref> is applicable to all program elements except assemblies, modules, parameters, and return values. Marking an element as obsolete informs users that the element will be removed in future versions of the product.</p>\n<p>The <xref href=\"System.ObsoleteAttribute\" data-throw-if-not-resolved=\"false\"></xref> class includes two properties:</p>\n<ul><li>\n<p>\n<xref href=\"System.ObsoleteAttribute.Message\" data-throw-if-not-resolved=\"false\"></xref>. The string assigned to the <xref href=\"System.ObsoleteAttribute.Message\" data-throw-if-not-resolved=\"false\"></xref> property is emitted by the compiler when the attribute target is used in code. The string should note that the attribute target is obsolete and, if possible, provide some workaround or programmatic alternative. </p>\n</li><li>\n<p>\n<xref href=\"System.ObsoleteAttribute.IsError\" data-throw-if-not-resolved=\"false\"></xref>. This is a Boolean value that indicates to the compiler whether using the <xref href=\"System.ObsoleteAttribute\" data-throw-if-not-resolved=\"false\"></xref> attribute should cause it to emit an error (<xref href=\"System.ObsoleteAttribute.IsError\" data-throw-if-not-resolved=\"false\"></xref> is <strong>true</strong>) or a warning (<xref href=\"System.ObsoleteAttribute.IsError\" data-throw-if-not-resolved=\"false\"></xref> is <strong>false</strong>).  </p>\n</li></ul>\n<p>For more information about using attributes, see Extending Metadata Using Attributes.</p>\n"
  example:
  - <p>The following example defines a class that contains a property and a method that are marked with the <xref href="System.ObsoleteAttribute" data-throw-if-not-resolved="false"></xref> attribute. Accessing the value of the <code>OldProperty</code> property in code generates a compiler warning, but calling the <code>CallOldMethod</code> method generates a compiler error. The example also shows the output that results when you attempt to compile the source code. </p>ObsoleteAttribute#1
  syntax:
    content: >-
      [AttributeUsage(AttributeTargets.Class | AttributeTargets.Constructor | AttributeTargets.Delegate | AttributeTargets.Enum | AttributeTargets.Event | AttributeTargets.Field | AttributeTargets.Interface | AttributeTargets.Method | AttributeTargets.Property | AttributeTargets.Struct, Inherited = false)]

      public sealed class ObsoleteAttribute : Attribute
    content.vb: >-
      <AttributeUsage(AttributeTargets.Class Or AttributeTargets.Constructor Or AttributeTargets.Delegate Or AttributeTargets.Enum Or AttributeTargets.Event Or AttributeTargets.Field Or AttributeTargets.Interface Or AttributeTargets.Method Or AttributeTargets.Property Or AttributeTargets.Struct, Inherited:=False)>

      Public NotInheritable Class ObsoleteAttribute
          Inherits Attribute
  seealso:
  - type: System.Attribute
    commentId: T:System.Attribute
  inheritance:
  - System.Object
  - System.Attribute
  inheritedMembers:
  - System.Attribute.Equals(System.Object)
  - System.Attribute.GetHashCode
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  attributes:
  - type: System.AttributeUsageAttribute
    ctor: System.AttributeUsageAttribute.#ctor(System.AttributeTargets)
    arguments:
    - type: System.AttributeTargets
      value: 6140
    namedArguments:
    - name: Inherited
      type: System.Boolean
      value: false
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: System.ObsoleteAttribute.#ctor
  commentId: M:System.ObsoleteAttribute.#ctor
  id: '#ctor'
  parent: System.ObsoleteAttribute
  langs:
  - csharp
  - vb
  name: ObsoleteAttribute()
  fullName: System.ObsoleteAttribute.ObsoleteAttribute()
  type: Constructor
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 1331
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.ObsoleteAttribute\" data-throw-if-not-resolved=\"false\"></xref> class with default properties.</p>\n"
  remarks: "\n<p>The following table shows the initial property values for an instance of <xref href=\"System.ObsoleteAttribute\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>Property </p>\n<p>Value </p>\n<table><tbody><tr><td>\n<p>\n<xref href=\"System.ObsoleteAttribute.IsError\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td><td>\n<p>\n<strong>false</strong>\n</p>\n</td></tr><tr><td>\n<p>\n<xref href=\"System.ObsoleteAttribute.Message\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td><td>\n<p>\n<strong>null</strong>\n</p>\n</td></tr></tbody></table>\n"
  syntax:
    content: public ObsoleteAttribute()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.ObsoleteAttribute.#ctor(System.String)
  commentId: M:System.ObsoleteAttribute.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.ObsoleteAttribute
  langs:
  - csharp
  - vb
  name: ObsoleteAttribute(String)
  fullName: System.ObsoleteAttribute.ObsoleteAttribute(System.String)
  type: Constructor
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 1332
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.ObsoleteAttribute\" data-throw-if-not-resolved=\"false\"></xref> class with a specified workaround message.</p>\n"
  remarks: "\n<p>The following table shows the initial property values for an instance of <xref href=\"System.ObsoleteAttribute\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>Property </p>\n<p>Value </p>\n<table><tbody><tr><td>\n<p>\n<xref href=\"System.ObsoleteAttribute.IsError\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td><td>\n<p>\n<strong>false</strong>. </p>\n</td></tr><tr><td>\n<p>\n<xref href=\"System.ObsoleteAttribute.Message\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td><td>\n<p>The workaround message. </p>\n</td></tr></tbody></table>\n"
  syntax:
    content: public ObsoleteAttribute(string message)
    content.vb: Public Sub New(message As String)
    parameters:
    - id: message
      type: System.String
      description: "\n<p>The text string that describes alternative workarounds. </p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.ObsoleteAttribute.#ctor(System.String,System.Boolean)
  commentId: M:System.ObsoleteAttribute.#ctor(System.String,System.Boolean)
  id: '#ctor(System.String,System.Boolean)'
  parent: System.ObsoleteAttribute
  langs:
  - csharp
  - vb
  name: ObsoleteAttribute(String, Boolean)
  fullName: System.ObsoleteAttribute.ObsoleteAttribute(System.String, System.Boolean)
  type: Constructor
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 1333
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.ObsoleteAttribute\" data-throw-if-not-resolved=\"false\"></xref> class with a workaround message and a Boolean value indicating whether the obsolete element usage is considered an error.</p>\n"
  remarks: "\n<p>The following table shows the initial property values for an instance of <xref href=\"System.ObsoleteAttribute\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>Property </p>\n<p>Value </p>\n<table><tbody><tr><td>\n<p>\n<xref href=\"System.ObsoleteAttribute.IsError\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td><td>\n<p>The <em>error</em> value. </p>\n</td></tr><tr><td>\n<p>\n<xref href=\"System.ObsoleteAttribute.Message\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td><td>\n<p>The <em>message</em> value. </p>\n</td></tr></tbody></table>\n"
  syntax:
    content: public ObsoleteAttribute(string message, bool error)
    content.vb: Public Sub New(message As String, error As Boolean)
    parameters:
    - id: message
      type: System.String
      description: "\n<p>The text string that describes alternative workarounds. </p>\n"
    - id: error
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if the obsolete element usage generates a compiler error; <strong>false</strong> if it generates a compiler warning. </p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.ObsoleteAttribute.IsError
  commentId: P:System.ObsoleteAttribute.IsError
  id: IsError
  parent: System.ObsoleteAttribute
  langs:
  - csharp
  - vb
  name: IsError
  fullName: System.ObsoleteAttribute.IsError
  type: Property
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IsError
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 1334
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Gets a Boolean value indicating whether the compiler will treat usage of the obsolete program element as an error.</p>\n"
  example:
  - "\n<p>The following example defines a class that contains two members marked as obsolete. The first, a property named <code>OldProperty</code>, produces a compiler warning if it is called. The second, a method named <code>CallOldMethod</code>, produces a compiler error. The example uses reflection to get information about the <xref href=\"System.ObsoleteAttribute\" data-throw-if-not-resolved=\"false\"></xref> attributes applied to members of the type and displays the values of their <xref href=\"System.ObsoleteAttribute.Message\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"System.ObsoleteAttribute.IsError\" data-throw-if-not-resolved=\"false\"></xref> properties. </p>System.ObsoleteAttribute.Message#1"
  syntax:
    content: public bool IsError { get; }
    content.vb: Public ReadOnly Property IsError As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if the obsolete element usage is considered an error; otherwise, <strong>false</strong>. The default is <strong>false</strong>.</p>\n"
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.ObsoleteAttribute.Message
  commentId: P:System.ObsoleteAttribute.Message
  id: Message
  parent: System.ObsoleteAttribute
  langs:
  - csharp
  - vb
  name: Message
  fullName: System.ObsoleteAttribute.Message
  type: Property
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Message
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 1335
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Gets the workaround message, including a description of the alternative program elements.</p>\n"
  example:
  - "\n<p>The following example defines a class that contains two members marked as obsolete. The first, a property named <code>OldProperty</code>, produces a compiler warning if it is called. The second, a method named <code>CallOldMethod</code>, produces a compiler error. The example uses reflection to get information about the <xref href=\"System.ObsoleteAttribute\" data-throw-if-not-resolved=\"false\"></xref> attributes applied to members of the type and displays the values of their <xref href=\"System.ObsoleteAttribute.Message\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"System.ObsoleteAttribute.IsError\" data-throw-if-not-resolved=\"false\"></xref> properties. </p>System.ObsoleteAttribute.Message#1"
  syntax:
    content: public string Message { get; }
    content.vb: Public ReadOnly Property Message As String
    parameters: []
    return:
      type: System.String
      description: "\n<p>The workaround text string.</p>\n"
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System.Attribute
  parent: System
  isExternal: false
  name: Attribute
  fullName: System.Attribute
- uid: System.Attribute.Equals(System.Object)
  parent: System.Attribute
  isExternal: false
  name: Equals(Object)
  fullName: System.Attribute.Equals(System.Object)
  spec.csharp:
  - uid: System.Attribute.Equals(System.Object)
    name: Equals
    fullName: System.Attribute.Equals
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Attribute.Equals(System.Object)
    name: Equals
    fullName: System.Attribute.Equals
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
  - name: )
    fullName: )
- uid: System.Attribute.GetHashCode
  parent: System.Attribute
  isExternal: false
  name: GetHashCode()
  fullName: System.Attribute.GetHashCode()
  spec.csharp:
  - uid: System.Attribute.GetHashCode
    name: GetHashCode
    fullName: System.Attribute.GetHashCode
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Attribute.GetHashCode
    name: GetHashCode
    fullName: System.Attribute.GetHashCode
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: false
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: false
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
  - name: )
    fullName: )
- uid: System.Object.ToString
  parent: System.Object
  isExternal: false
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.String
  parent: System
  isExternal: false
  name: String
  fullName: System.String
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  fullName: System.Boolean
