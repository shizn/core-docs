items:
- uid: System.Collections.Queue
  commentId: T:System.Collections.Queue
  id: Queue
  parent: System.Collections
  children:
  - System.Collections.Queue.#ctor
  - System.Collections.Queue.#ctor(System.Collections.ICollection)
  - System.Collections.Queue.#ctor(System.Int32)
  - System.Collections.Queue.#ctor(System.Int32,System.Single)
  - System.Collections.Queue.Clear
  - System.Collections.Queue.Clone
  - System.Collections.Queue.Contains(System.Object)
  - System.Collections.Queue.CopyTo(System.Array,System.Int32)
  - System.Collections.Queue.Count
  - System.Collections.Queue.Dequeue
  - System.Collections.Queue.Enqueue(System.Object)
  - System.Collections.Queue.GetEnumerator
  - System.Collections.Queue.IsSynchronized
  - System.Collections.Queue.Peek
  - System.Collections.Queue.Synchronized(System.Collections.Queue)
  - System.Collections.Queue.SyncRoot
  - System.Collections.Queue.ToArray
  - System.Collections.Queue.TrimToSize
  langs:
  - csharp
  - vb
  name: Queue
  fullName: System.Collections.Queue
  type: Class
  source:
    remote:
      path: src/System.Collections.NonGeneric/src/System/Collections/Queue.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Queue
    path: src/System.Collections.NonGeneric/src/System/Collections/Queue.cs
    startLine: 20
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  summary: Represents a first-in, first-out collection of objects.
  syntax:
    content: 'public class Queue : ICollection, IEnumerable'
    content.vb: >-
      Public Class Queue
          Inherits ICollection
          Implements IEnumerable
  inheritance:
  - System.Object
  implements:
  - System.Collections.IEnumerable
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: System.Collections.Queue.#ctor
  commentId: M:System.Collections.Queue.#ctor
  id: '#ctor'
  parent: System.Collections.Queue
  langs:
  - csharp
  - vb
  name: Queue()
  fullName: System.Collections.Queue.Queue()
  type: Constructor
  source:
    remote:
      path: src/System.Collections.NonGeneric/src/System/Collections/Queue.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Collections.NonGeneric/src/System/Collections/Queue.cs
    startLine: 37
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  summary: Initializes a new instance of the <xref href="System.Collections.Queue" data-throw-if-not-resolved="false"></xref> class that is empty, has the default initial capacity, and uses the default growth factor.
  syntax:
    content: public Queue()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Collections.Queue.#ctor(System.Collections.ICollection)
  commentId: M:System.Collections.Queue.#ctor(System.Collections.ICollection)
  id: '#ctor(System.Collections.ICollection)'
  parent: System.Collections.Queue
  langs:
  - csharp
  - vb
  name: Queue(ICollection)
  fullName: System.Collections.Queue.Queue(System.Collections.ICollection)
  type: Constructor
  source:
    remote:
      path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
    startLine: 181
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  summary: Initializes a new instance of the <xref href="System.Collections.Queue" data-throw-if-not-resolved="false"></xref> class that contains elements copied from the specified collection, has the same initial capacity as the number of elements copied, and uses the default growth factor.
  syntax:
    content: public Queue(ICollection col)
    content.vb: Public Sub New(col As ICollection)
    parameters:
    - id: col
      type: System.Collections.ICollection
      description: 'The <xref href="System.Collections.ICollection" data-throw-if-not-resolved="false"></xref> to copy elements from. '
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>col</em> is null. "
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Collections.Queue.#ctor(System.Int32)
  commentId: M:System.Collections.Queue.#ctor(System.Int32)
  id: '#ctor(System.Int32)'
  parent: System.Collections.Queue
  langs:
  - csharp
  - vb
  name: Queue(Int32)
  fullName: System.Collections.Queue.Queue(System.Int32)
  type: Constructor
  source:
    remote:
      path: src/System.Collections.NonGeneric/src/System/Collections/Queue.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Collections.NonGeneric/src/System/Collections/Queue.cs
    startLine: 45
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  summary: Initializes a new instance of the <xref href="System.Collections.Queue" data-throw-if-not-resolved="false"></xref> class that is empty, has the specified initial capacity, and uses the default growth factor.
  syntax:
    content: public Queue(int capacity)
    content.vb: Public Sub New(capacity As Integer)
    parameters:
    - id: capacity
      type: System.Int32
      description: 'The initial number of elements that the <xref href="System.Collections.Queue" data-throw-if-not-resolved="false"></xref> can contain. '
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<em>capacity</em> is less than zero. "
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Collections.Queue.#ctor(System.Int32,System.Single)
  commentId: M:System.Collections.Queue.#ctor(System.Int32,System.Single)
  id: '#ctor(System.Int32,System.Single)'
  parent: System.Collections.Queue
  langs:
  - csharp
  - vb
  name: Queue(Int32, Single)
  fullName: System.Collections.Queue.Queue(System.Int32, System.Single)
  type: Constructor
  source:
    remote:
      path: src/System.Collections.NonGeneric/src/System/Collections/Queue.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Collections.NonGeneric/src/System/Collections/Queue.cs
    startLine: 53
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  summary: Initializes a new instance of the <xref href="System.Collections.Queue" data-throw-if-not-resolved="false"></xref> class that is empty, has the specified initial capacity, and uses the specified growth factor.
  syntax:
    content: public Queue(int capacity, float growFactor)
    content.vb: Public Sub New(capacity As Integer, growFactor As Single)
    parameters:
    - id: capacity
      type: System.Int32
      description: 'The initial number of elements that the <xref href="System.Collections.Queue" data-throw-if-not-resolved="false"></xref> can contain. '
    - id: growFactor
      type: System.Single
      description: 'The factor by which the capacity of the <xref href="System.Collections.Queue" data-throw-if-not-resolved="false"></xref> is expanded. '
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<em>capacity</em> is less than zero.-or- <em>growFactor</em> is less than 1.0 or greater than 10.0. "
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Collections.Queue.Count
  commentId: P:System.Collections.Queue.Count
  id: Count
  parent: System.Collections.Queue
  langs:
  - csharp
  - vb
  name: Count
  fullName: System.Collections.Queue.Count
  type: Property
  source:
    remote:
      path: src/System.Collections.NonGeneric/src/System/Collections/Queue.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Count
    path: src/System.Collections.NonGeneric/src/System/Collections/Queue.cs
    startLine: 82
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  summary: Gets the number of elements contained in the <xref href="System.Collections.Queue" data-throw-if-not-resolved="false"></xref>.
  syntax:
    content: public virtual int Count { get; }
    content.vb: Public Overridable ReadOnly Property Count As Integer
    parameters: []
    return:
      type: System.Int32
      description: The number of elements contained in the <xref href="System.Collections.Queue" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: System.Collections.Queue.IsSynchronized
  commentId: P:System.Collections.Queue.IsSynchronized
  id: IsSynchronized
  parent: System.Collections.Queue
  langs:
  - csharp
  - vb
  name: IsSynchronized
  fullName: System.Collections.Queue.IsSynchronized
  type: Property
  source:
    remote:
      path: src/System.Collections.NonGeneric/src/System/Collections/Queue.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IsSynchronized
    path: src/System.Collections.NonGeneric/src/System/Collections/Queue.cs
    startLine: 103
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  summary: Gets a value indicating whether access to the <xref href="System.Collections.Queue" data-throw-if-not-resolved="false"></xref> is synchronized (thread safe).
  syntax:
    content: public virtual bool IsSynchronized { get; }
    content.vb: Public Overridable ReadOnly Property IsSynchronized As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: true if access to the <xref href="System.Collections.Queue" data-throw-if-not-resolved="false"></xref> is synchronized (thread safe); otherwise, false. The default is false.
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: System.Collections.Queue.SyncRoot
  commentId: P:System.Collections.Queue.SyncRoot
  id: SyncRoot
  parent: System.Collections.Queue
  langs:
  - csharp
  - vb
  name: SyncRoot
  fullName: System.Collections.Queue.SyncRoot
  type: Property
  source:
    remote:
      path: src/System.Collections.NonGeneric/src/System/Collections/Queue.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: SyncRoot
    path: src/System.Collections.NonGeneric/src/System/Collections/Queue.cs
    startLine: 108
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  summary: Gets an object that can be used to synchronize access to the <xref href="System.Collections.Queue" data-throw-if-not-resolved="false"></xref>.
  syntax:
    content: public virtual object SyncRoot { get; }
    content.vb: Public Overridable ReadOnly Property SyncRoot As Object
    parameters: []
    return:
      type: System.Object
      description: An object that can be used to synchronize access to the <xref href="System.Collections.Queue" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: System.Collections.Queue.Clear
  commentId: M:System.Collections.Queue.Clear
  id: Clear
  parent: System.Collections.Queue
  langs:
  - csharp
  - vb
  name: Clear()
  fullName: System.Collections.Queue.Clear()
  type: Method
  source:
    remote:
      path: src/System.Collections.NonGeneric/src/System/Collections/Queue.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Clear
    path: src/System.Collections.NonGeneric/src/System/Collections/Queue.cs
    startLine: 121
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  summary: Removes all objects from the <xref href="System.Collections.Queue" data-throw-if-not-resolved="false"></xref>.
  syntax:
    content: public virtual void Clear()
    content.vb: Public Overridable Sub Clear
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Collections.Queue.Clone
  commentId: M:System.Collections.Queue.Clone
  id: Clone
  parent: System.Collections.Queue
  langs:
  - csharp
  - vb
  name: Clone()
  fullName: System.Collections.Queue.Clone()
  type: Method
  source:
    remote:
      path: src/System.Collections.NonGeneric/src/System/Collections/Queue.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Clone
    path: src/System.Collections.NonGeneric/src/System/Collections/Queue.cs
    startLine: 87
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  summary: Creates a shallow copy of the <xref href="System.Collections.Queue" data-throw-if-not-resolved="false"></xref>.
  syntax:
    content: public virtual object Clone()
    content.vb: Public Overridable Function Clone As Object
    return:
      type: System.Object
      description: A shallow copy of the <xref href="System.Collections.Queue" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Collections.Queue.Contains(System.Object)
  commentId: M:System.Collections.Queue.Contains(System.Object)
  id: Contains(System.Object)
  parent: System.Collections.Queue
  langs:
  - csharp
  - vb
  name: Contains(Object)
  fullName: System.Collections.Queue.Contains(System.Object)
  type: Method
  source:
    remote:
      path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Contains
    path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
    startLine: 189
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  summary: Determines whether an element is in the <xref href="System.Collections.Queue" data-throw-if-not-resolved="false"></xref>.
  syntax:
    content: public virtual bool Contains(object obj)
    content.vb: Public Overridable Function Contains(obj As Object) As Boolean
    parameters:
    - id: obj
      type: System.Object
      description: 'The <xref href="System.Object" data-throw-if-not-resolved="false"></xref> to locate in the <xref href="System.Collections.Queue" data-throw-if-not-resolved="false"></xref>. The value can be null. '
    return:
      type: System.Boolean
      description: true if <em>obj</em> is found in the <xref href="System.Collections.Queue" data-throw-if-not-resolved="false"></xref>; otherwise, false.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Collections.Queue.CopyTo(System.Array,System.Int32)
  commentId: M:System.Collections.Queue.CopyTo(System.Array,System.Int32)
  id: CopyTo(System.Array,System.Int32)
  parent: System.Collections.Queue
  langs:
  - csharp
  - vb
  name: CopyTo(Array, Int32)
  fullName: System.Collections.Queue.CopyTo(System.Array, System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CopyTo
    path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
    startLine: 190
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  summary: Copies the <xref href="System.Collections.Queue" data-throw-if-not-resolved="false"></xref> elements to an existing one-dimensional <xref href="System.Array" data-throw-if-not-resolved="false"></xref>, starting at the specified array index.
  syntax:
    content: public virtual void CopyTo(Array array, int index)
    content.vb: Public Overridable Sub CopyTo(array As Array, index As Integer)
    parameters:
    - id: array
      type: System.Array
      description: 'The one-dimensional <xref href="System.Array" data-throw-if-not-resolved="false"></xref> that is the destination of the elements copied from <xref href="System.Collections.Queue" data-throw-if-not-resolved="false"></xref>. The <xref href="System.Array" data-throw-if-not-resolved="false"></xref> must have zero-based indexing. '
    - id: index
      type: System.Int32
      description: 'The zero-based index in <em>array</em> at which copying begins. '
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>array</em> is null. "
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<em>index</em> is less than zero. "
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<em>array</em> is multidimensional.-or- The number of elements in the source <xref href=\"System.Collections.Queue\" data-throw-if-not-resolved=\"false\"></xref> is greater than the available space from <em>index</em> to the end of the destination <em>array</em>. "
  - type: System.ArrayTypeMismatchException
    commentId: T:System.ArrayTypeMismatchException
    description: 'The type of the source <xref href="System.Collections.Queue" data-throw-if-not-resolved="false"></xref> cannot be cast automatically to the type of the destination <em>array</em>. '
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Collections.Queue.Dequeue
  commentId: M:System.Collections.Queue.Dequeue
  id: Dequeue
  parent: System.Collections.Queue
  langs:
  - csharp
  - vb
  name: Dequeue()
  fullName: System.Collections.Queue.Dequeue()
  type: Method
  source:
    remote:
      path: src/System.Collections.NonGeneric/src/System/Collections/Queue.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Dequeue
    path: src/System.Collections.NonGeneric/src/System/Collections/Queue.cs
    startLine: 197
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  summary: Removes and returns the object at the beginning of the <xref href="System.Collections.Queue" data-throw-if-not-resolved="false"></xref>.
  syntax:
    content: public virtual object Dequeue()
    content.vb: Public Overridable Function Dequeue As Object
    return:
      type: System.Object
      description: The object that is removed from the beginning of the <xref href="System.Collections.Queue" data-throw-if-not-resolved="false"></xref>.
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: 'The <xref href="System.Collections.Queue" data-throw-if-not-resolved="false"></xref> is empty. '
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Collections.Queue.Enqueue(System.Object)
  commentId: M:System.Collections.Queue.Enqueue(System.Object)
  id: Enqueue(System.Object)
  parent: System.Collections.Queue
  langs:
  - csharp
  - vb
  name: Enqueue(Object)
  fullName: System.Collections.Queue.Enqueue(System.Object)
  type: Method
  source:
    remote:
      path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Enqueue
    path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
    startLine: 192
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  summary: Adds an object to the end of the <xref href="System.Collections.Queue" data-throw-if-not-resolved="false"></xref>.
  syntax:
    content: public virtual void Enqueue(object obj)
    content.vb: Public Overridable Sub Enqueue(obj As Object)
    parameters:
    - id: obj
      type: System.Object
      description: 'The object to add to the <xref href="System.Collections.Queue" data-throw-if-not-resolved="false"></xref>. The value can be null. '
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Collections.Queue.GetEnumerator
  commentId: M:System.Collections.Queue.GetEnumerator
  id: GetEnumerator
  parent: System.Collections.Queue
  langs:
  - csharp
  - vb
  name: GetEnumerator()
  fullName: System.Collections.Queue.GetEnumerator()
  type: Method
  source:
    remote:
      path: src/System.Collections.NonGeneric/src/System/Collections/Queue.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetEnumerator
    path: src/System.Collections.NonGeneric/src/System/Collections/Queue.cs
    startLine: 190
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  summary: Returns an enumerator that iterates through the <xref href="System.Collections.Queue" data-throw-if-not-resolved="false"></xref>.
  syntax:
    content: public virtual IEnumerator GetEnumerator()
    content.vb: Public Overridable Function GetEnumerator As IEnumerator
    return:
      type: System.Collections.IEnumerator
      description: An <xref href="System.Collections.IEnumerator" data-throw-if-not-resolved="false"></xref> for the <xref href="System.Collections.Queue" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Collections.Queue.Peek
  commentId: M:System.Collections.Queue.Peek
  id: Peek
  parent: System.Collections.Queue
  langs:
  - csharp
  - vb
  name: Peek()
  fullName: System.Collections.Queue.Peek()
  type: Method
  source:
    remote:
      path: src/System.Collections.NonGeneric/src/System/Collections/Queue.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Peek
    path: src/System.Collections.NonGeneric/src/System/Collections/Queue.cs
    startLine: 214
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  summary: Returns the object at the beginning of the <xref href="System.Collections.Queue" data-throw-if-not-resolved="false"></xref> without removing it.
  syntax:
    content: public virtual object Peek()
    content.vb: Public Overridable Function Peek As Object
    return:
      type: System.Object
      description: The object at the beginning of the <xref href="System.Collections.Queue" data-throw-if-not-resolved="false"></xref>.
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: 'The <xref href="System.Collections.Queue" data-throw-if-not-resolved="false"></xref> is empty. '
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Collections.Queue.Synchronized(System.Collections.Queue)
  commentId: M:System.Collections.Queue.Synchronized(System.Collections.Queue)
  id: Synchronized(System.Collections.Queue)
  parent: System.Collections.Queue
  langs:
  - csharp
  - vb
  name: Synchronized(Queue)
  fullName: System.Collections.Queue.Synchronized(System.Collections.Queue)
  type: Method
  source:
    remote:
      path: src/System.Collections.NonGeneric/src/System/Collections/Queue.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Synchronized
    path: src/System.Collections.NonGeneric/src/System/Collections/Queue.cs
    startLine: 227
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  summary: Returns a new <xref href="System.Collections.Queue" data-throw-if-not-resolved="false"></xref> that wraps the original queue, and is thread safe.
  syntax:
    content: public static Queue Synchronized(Queue queue)
    content.vb: Public Shared Function Synchronized(queue As Queue) As Queue
    parameters:
    - id: queue
      type: System.Collections.Queue
      description: 'The <xref href="System.Collections.Queue" data-throw-if-not-resolved="false"></xref> to synchronize. '
    return:
      type: System.Collections.Queue
      description: A <xref href="System.Collections.Queue" data-throw-if-not-resolved="false"></xref> wrapper that is synchronized (thread safe).
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>queue</em> is null. "
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Collections.Queue.ToArray
  commentId: M:System.Collections.Queue.ToArray
  id: ToArray
  parent: System.Collections.Queue
  langs:
  - csharp
  - vb
  name: ToArray()
  fullName: System.Collections.Queue.ToArray()
  type: Method
  source:
    remote:
      path: src/System.Collections.NonGeneric/src/System/Collections/Queue.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ToArray
    path: src/System.Collections.NonGeneric/src/System/Collections/Queue.cs
    startLine: 270
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  summary: Copies the <xref href="System.Collections.Queue" data-throw-if-not-resolved="false"></xref> elements to a new array.
  syntax:
    content: public virtual object[] ToArray()
    content.vb: Public Overridable Function ToArray As Object()
    return:
      type: System.Object[]
      description: A new array containing elements copied from the <xref href="System.Collections.Queue" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Collections.Queue.TrimToSize
  commentId: M:System.Collections.Queue.TrimToSize
  id: TrimToSize
  parent: System.Collections.Queue
  langs:
  - csharp
  - vb
  name: TrimToSize()
  fullName: System.Collections.Queue.TrimToSize()
  type: Method
  source:
    remote:
      path: src/System.Collections.NonGeneric/src/System/Collections/Queue.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: TrimToSize
    path: src/System.Collections.NonGeneric/src/System/Collections/Queue.cs
    startLine: 314
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  summary: Sets the capacity to the actual number of elements in the <xref href="System.Collections.Queue" data-throw-if-not-resolved="false"></xref>.
  syntax:
    content: public virtual void TrimToSize()
    content.vb: Public Overridable Sub TrimToSize
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: The <xref href="System.Collections.Queue" data-throw-if-not-resolved="false"></xref> is read-only.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
references:
- uid: System.Collections
  isExternal: false
  name: System.Collections
  fullName: System.Collections
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System.Collections.IEnumerable
  parent: System.Collections
  isExternal: false
  name: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Collections.ICollection
  parent: System.Collections
  isExternal: false
  name: ICollection
  fullName: System.Collections.ICollection
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  fullName: System.Int32
- uid: System.Single
  parent: System
  isExternal: false
  name: Single
  fullName: System.Single
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  fullName: System.Boolean
- uid: System.Array
  parent: System
  isExternal: false
  name: Array
  fullName: System.Array
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: false
  name: Collections.IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Collections.Queue
  parent: System.Collections
  isExternal: false
  name: Queue
  fullName: System.Collections.Queue
- uid: System.Object[]
  isExternal: false
  name: Object[]
  fullName: System.Object[]
  fullname.vb: System.Object()
  name.vb: Object()
  spec.csharp:
  - uid: System.Object
    name: Object
    fullName: System.Object
  - name: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Object
    name: Object
    fullName: System.Object
  - name: ()
    fullName: ()
- uid: System.ArgumentNullException
  isExternal: false
  name: ArgumentNullException
  fullName: System.ArgumentNullException
- uid: System.ArgumentOutOfRangeException
  isExternal: false
  name: ArgumentOutOfRangeException
  fullName: System.ArgumentOutOfRangeException
- uid: System.ArgumentException
  parent: System
  isExternal: false
  name: ArgumentException
  fullName: System.ArgumentException
- uid: System.ArrayTypeMismatchException
  isExternal: false
  name: ArrayTypeMismatchException
  fullName: System.ArrayTypeMismatchException
- uid: System.InvalidOperationException
  parent: System
  isExternal: false
  name: InvalidOperationException
  fullName: System.InvalidOperationException
- uid: System.NotSupportedException
  parent: System
  isExternal: false
  name: NotSupportedException
  fullName: System.NotSupportedException
