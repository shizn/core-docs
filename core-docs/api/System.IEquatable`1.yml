items:
- uid: System.IEquatable`1
  commentId: T:System.IEquatable`1
  id: IEquatable`1
  parent: System
  children:
  - System.IEquatable`1.Equals(`0)
  langs:
  - csharp
  - vb
  name: IEquatable<T>
  fullName: System.IEquatable<T>
  type: Interface
  source:
    remote:
      path: src/mscorlib/src/System/IEquatable.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: IEquatable
    path: src/mscorlib/src/System/IEquatable.cs
    startLine: 7
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Defines a generalized method that a value type or class implements to create a type-specific method for determining equality of instances.</p>\n"
  remarks: "\n<p>This interface is implemented by types whose values can be equated (for example, the numeric and string classes). A value type or class implements the <xref href=\"System.IEquatable`1.Equals(`0)\" data-throw-if-not-resolved=\"false\"></xref> method to create a type-specific method suitable for determining equality of instances.</p>\n<p>The <xref href=\"System.IComparable`1\" data-throw-if-not-resolved=\"false\"></xref> interface defines the <xref href=\"System.IComparable`1.CompareTo(`0)\" data-throw-if-not-resolved=\"false\"></xref> method, which determines the sort order of instances of the implementing type. The <xref href=\"System.IEquatable`1\" data-throw-if-not-resolved=\"false\"></xref> interface defines the <xref href=\"System.IEquatable`1.Equals(`0)\" data-throw-if-not-resolved=\"false\"></xref> method, which determines the equality of instances of the implementing type. </p>\n<p>The <xref href=\"System.IEquatable`1\" data-throw-if-not-resolved=\"false\"></xref> interface is used by generic collection objects such as <xref href=\"System.Collections.Generic.Dictionary`2\" data-throw-if-not-resolved=\"false\"></xref>, <xref href=\"System.Collections.Generic.List`1\" data-throw-if-not-resolved=\"false\"></xref>, and <xref href=\"System.Collections.Generic.LinkedList`1\" data-throw-if-not-resolved=\"false\"></xref> when testing for equality in such methods as <strong>Contains</strong>, <strong>IndexOf</strong>, <strong>LastIndexOf</strong>, and <strong>Remove</strong>. It should be implemented for any object that might be stored in a generic collection.  </p>\n"
  example:
  - "\n<p>See the example for the <xref href=\"System.IEquatable`1.Equals(`0)\" data-throw-if-not-resolved=\"false\"></xref> method.</p>\n"
  syntax:
    content: public interface IEquatable<T>
    content.vb: Public Interface IEquatable(Of T)
    typeParameters:
    - id: T
  seealso:
  - type: System.IComparable`1
    commentId: T:System.IComparable`1
  - type: System.IComparable
    commentId: T:System.IComparable
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
  fullName.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
- uid: System.IEquatable`1.Equals(`0)
  commentId: M:System.IEquatable`1.Equals(`0)
  id: Equals(`0)
  parent: System.IEquatable`1
  langs:
  - csharp
  - vb
  name: Equals(T)
  fullName: System.IEquatable<T>.Equals(T)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/IEquatable.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Equals
    path: src/mscorlib/src/System/IEquatable.cs
    startLine: 9
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Indicates whether the current object is equal to another object of the same type.</p>\n"
  remarks: "\n<p>The implementation of the <xref href=\"System.IEquatable`1.Equals(`0)\" data-throw-if-not-resolved=\"false\"></xref> method is intended to perform a test for equality with another object of type <em>T</em>, the same type as the current object. The <xref href=\"System.IEquatable`1.Equals(`0)\" data-throw-if-not-resolved=\"false\"></xref> method is called in the following circumstances:</p>\n<ul><li>\n<p>When the <strong>Equals</strong> method is called and the <em>other</em> parameter represents a strongly-typed object of type <em>T</em>. (If <em>other</em> is of type <xref href=\"System.Object\" data-throw-if-not-resolved=\"false\"></xref>, the base <xref href=\"System.Object.Equals(System.Object)\" data-throw-if-not-resolved=\"false\"></xref> method is called. Of the two methods, <xref href=\"System.IEquatable`1.Equals(`0)\" data-throw-if-not-resolved=\"false\"></xref> offers slightly better performance.)</p>\n</li><li>\n<p>When the search methods of a number of generic collection objects are called. Some of these types and their methods include the following: </p>\n<ul><li>\n<p>Some of the generic overloads of the <xref href=\"System.Array.BinarySearch(System.Array,System.Object)\" data-throw-if-not-resolved=\"false\"></xref> method.</p>\n</li><li>\n<p>The search methods of the <xref href=\"System.Collections.Generic.List`1\" data-throw-if-not-resolved=\"false\"></xref> class, including <xref href=\"System.Collections.Generic.List`1.Contains(`0)\" data-throw-if-not-resolved=\"false\"></xref>, <xref href=\"System.Collections.Generic.List`1.IndexOf(`0)\" data-throw-if-not-resolved=\"false\"></xref>, <xref href=\"System.Collections.Generic.List`1.LastIndexOf(`0)\" data-throw-if-not-resolved=\"false\"></xref>, and <xref href=\"System.Collections.Generic.List`1.Remove(`0)\" data-throw-if-not-resolved=\"false\"></xref>. </p>\n</li><li>\n<p>The search methods of the <xref href=\"System.Collections.Generic.Dictionary`2\" data-throw-if-not-resolved=\"false\"></xref> class, including <xref href=\"System.Collections.Generic.Dictionary`2.ContainsKey(`0)\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"System.Collections.Generic.IDictionary`2.Remove(`0)\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n</li><li>\n<p>The search methods of the generic <xref href=\"System.Collections.Generic.LinkedList`1\" data-throw-if-not-resolved=\"false\"></xref> class, including <xref href=\"System.Collections.Generic.LinkedList`1.Contains(`0)\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"System.Collections.Generic.LinkedList`1.Remove(System.Collections.Generic.LinkedListNode{`0})\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n</li></ul>\n</li></ul>\n<p>In other words, to handle the possibility that objects of a class will be stored in an array or a generic collection object, it is a good idea to implement <xref href=\"System.IEquatable`1\" data-throw-if-not-resolved=\"false\"></xref> so that the object can be easily identified and manipulated.</p>\n<p>When implementing the <xref href=\"System.IEquatable`1.Equals(`0)\" data-throw-if-not-resolved=\"false\"></xref> method, define equality appropriately for the type specified by the generic type argument. For example, if the type argument is <xref href=\"System.Int32\" data-throw-if-not-resolved=\"false\"></xref>, define equality appropriately for the comparison of two 32-bit signed integers.</p>\n"
  example:
  - "\n<p>The following example shows the partial implementation of a <code>Person</code> class that implements <xref href=\"System.IEquatable`1\" data-throw-if-not-resolved=\"false\"></xref> and has two properties, <code>LastName</code> and <code>SSN</code>. The <xref href=\"System.IEquatable`1.Equals(`0)\" data-throw-if-not-resolved=\"false\"></xref> method returns <strong>True</strong> if the <code>SSN</code> property of two <code>Person</code> objects is identical; otherwise, it returns <strong>False</strong>.</p>System.GenericIEquatable.Equals#3<p><code>Person</code> objects can then be stored in a <xref href=\"System.Collections.Generic.List`1\" data-throw-if-not-resolved=\"false\"></xref> object and can be identified by the <strong>Contains</strong> method, as the following example shows. </p>System.GenericIEquatable.Equals#12"
  syntax:
    content: bool Equals(T other)
    content.vb: Function Equals(other As T) As Boolean
    parameters:
    - id: other
      type: '{T}'
    return:
      type: System.Boolean
  fullName.vb: System.IEquatable(Of T).Equals(T)
references:
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: '{T}'
  isExternal: false
  name: T
  fullName: T
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  fullName: System.Boolean
