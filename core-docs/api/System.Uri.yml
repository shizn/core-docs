items:
- uid: System.Uri
  commentId: T:System.Uri
  id: Uri
  parent: System
  children:
  - System.Uri.#ctor(System.String)
  - System.Uri.#ctor(System.String,System.UriKind)
  - System.Uri.#ctor(System.Uri,System.String)
  - System.Uri.#ctor(System.Uri,System.Uri)
  - System.Uri.AbsolutePath
  - System.Uri.AbsoluteUri
  - System.Uri.Authority
  - System.Uri.CheckHostName(System.String)
  - System.Uri.CheckSchemeName(System.String)
  - System.Uri.Compare(System.Uri,System.Uri,System.UriComponents,System.UriFormat,System.StringComparison)
  - System.Uri.DnsSafeHost
  - System.Uri.Equals(System.Object)
  - System.Uri.EscapeDataString(System.String)
  - System.Uri.EscapeUriString(System.String)
  - System.Uri.Fragment
  - System.Uri.GetComponents(System.UriComponents,System.UriFormat)
  - System.Uri.GetHashCode
  - System.Uri.Host
  - System.Uri.HostNameType
  - System.Uri.IdnHost
  - System.Uri.IsAbsoluteUri
  - System.Uri.IsBaseOf(System.Uri)
  - System.Uri.IsDefaultPort
  - System.Uri.IsFile
  - System.Uri.IsLoopback
  - System.Uri.IsUnc
  - System.Uri.IsWellFormedOriginalString
  - System.Uri.IsWellFormedUriString(System.String,System.UriKind)
  - System.Uri.LocalPath
  - System.Uri.MakeRelativeUri(System.Uri)
  - System.Uri.op_Equality(System.Uri,System.Uri)
  - System.Uri.op_Inequality(System.Uri,System.Uri)
  - System.Uri.OriginalString
  - System.Uri.PathAndQuery
  - System.Uri.Port
  - System.Uri.Query
  - System.Uri.Scheme
  - System.Uri.Segments
  - System.Uri.ToString
  - System.Uri.TryCreate(System.String,System.UriKind,System.Uri@)
  - System.Uri.TryCreate(System.Uri,System.String,System.Uri@)
  - System.Uri.TryCreate(System.Uri,System.Uri,System.Uri@)
  - System.Uri.UnescapeDataString(System.String)
  - System.Uri.UserEscaped
  - System.Uri.UserInfo
  langs:
  - csharp
  - vb
  name: Uri
  fullName: System.Uri
  type: Class
  source:
    remote:
      path: src/System.Private.Uri/src/System/UriExt.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Uri
    path: src/System.Private.Uri/src/System/UriExt.cs
    startLine: 11
  assemblies:
  - System.Runtime
  namespace: System
  syntax:
    content: 'public class Uri : object'
    content.vb: >-
      Public Class Uri
          Inherits Object
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: System.Uri.#ctor(System.String)
  commentId: M:System.Uri.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Uri
  langs:
  - csharp
  - vb
  name: Uri(String)
  fullName: System.Uri.Uri(System.String)
  type: Constructor
  source:
    remote:
      path: src/System.Private.Uri/src/System/Uri.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Private.Uri/src/System/Uri.cs
    startLine: 321
  assemblies:
  - System.Runtime
  namespace: System
  syntax:
    content: public Uri(string uriString)
    content.vb: Public Sub New(uriString As String)
    parameters:
    - id: uriString
      type: System.String
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Uri.#ctor(System.String,System.UriKind)
  commentId: M:System.Uri.#ctor(System.String,System.UriKind)
  id: '#ctor(System.String,System.UriKind)'
  parent: System.Uri
  langs:
  - csharp
  - vb
  name: Uri(String, UriKind)
  fullName: System.Uri.Uri(System.String, System.UriKind)
  type: Constructor
  source:
    remote:
      path: src/System.Private.Uri/src/System/Uri.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Private.Uri/src/System/Uri.cs
    startLine: 332
  assemblies:
  - System.Runtime
  namespace: System
  syntax:
    content: public Uri(string uriString, UriKind uriKind)
    content.vb: Public Sub New(uriString As String, uriKind As UriKind)
    parameters:
    - id: uriString
      type: System.String
    - id: uriKind
      type: System.UriKind
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Uri.#ctor(System.Uri,System.String)
  commentId: M:System.Uri.#ctor(System.Uri,System.String)
  id: '#ctor(System.Uri,System.String)'
  parent: System.Uri
  langs:
  - csharp
  - vb
  name: Uri(Uri, String)
  fullName: System.Uri.Uri(System.Uri, System.String)
  type: Constructor
  source:
    remote:
      path: src/System.Private.Uri/src/System/Uri.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Private.Uri/src/System/Uri.cs
    startLine: 347
  assemblies:
  - System.Runtime
  namespace: System
  syntax:
    content: public Uri(Uri baseUri, string relativeUri)
    content.vb: Public Sub New(baseUri As Uri, relativeUri As String)
    parameters:
    - id: baseUri
      type: System.Uri
    - id: relativeUri
      type: System.String
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Uri.#ctor(System.Uri,System.Uri)
  commentId: M:System.Uri.#ctor(System.Uri,System.Uri)
  id: '#ctor(System.Uri,System.Uri)'
  parent: System.Uri
  langs:
  - csharp
  - vb
  name: Uri(Uri, Uri)
  fullName: System.Uri.Uri(System.Uri, System.Uri)
  type: Constructor
  source:
    remote:
      path: src/System.Private.Uri/src/System/Uri.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Private.Uri/src/System/Uri.cs
    startLine: 400
  assemblies:
  - System.Runtime
  namespace: System
  syntax:
    content: public Uri(Uri baseUri, Uri relativeUri)
    content.vb: Public Sub New(baseUri As Uri, relativeUri As Uri)
    parameters:
    - id: baseUri
      type: System.Uri
    - id: relativeUri
      type: System.Uri
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Uri.AbsolutePath
  commentId: P:System.Uri.AbsolutePath
  id: AbsolutePath
  parent: System.Uri
  langs:
  - csharp
  - vb
  name: AbsolutePath
  fullName: System.Uri.AbsolutePath
  type: Property
  source:
    remote:
      path: src/System.Private.Uri/src/System/Uri.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: AbsolutePath
    path: src/System.Private.Uri/src/System/Uri.cs
    startLine: 550
  assemblies:
  - System.Runtime
  namespace: System
  syntax:
    content: public string AbsolutePath { get; }
    content.vb: Public ReadOnly Property AbsolutePath As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Uri.AbsoluteUri
  commentId: P:System.Uri.AbsoluteUri
  id: AbsoluteUri
  parent: System.Uri
  langs:
  - csharp
  - vb
  name: AbsoluteUri
  fullName: System.Uri.AbsoluteUri
  type: Property
  source:
    remote:
      path: src/System.Private.Uri/src/System/Uri.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: AbsoluteUri
    path: src/System.Private.Uri/src/System/Uri.cs
    startLine: 591
  assemblies:
  - System.Runtime
  namespace: System
  syntax:
    content: public string AbsoluteUri { get; }
    content.vb: Public ReadOnly Property AbsoluteUri As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Uri.Authority
  commentId: P:System.Uri.Authority
  id: Authority
  parent: System.Uri
  langs:
  - csharp
  - vb
  name: Authority
  fullName: System.Uri.Authority
  type: Property
  source:
    remote:
      path: src/System.Private.Uri/src/System/Uri.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Authority
    path: src/System.Private.Uri/src/System/Uri.cs
    startLine: 639
  assemblies:
  - System.Runtime
  namespace: System
  syntax:
    content: public string Authority { get; }
    content.vb: Public ReadOnly Property Authority As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Uri.DnsSafeHost
  commentId: P:System.Uri.DnsSafeHost
  id: DnsSafeHost
  parent: System.Uri
  langs:
  - csharp
  - vb
  name: DnsSafeHost
  fullName: System.Uri.DnsSafeHost
  type: Property
  source:
    remote:
      path: src/System.Private.Uri/src/System/Uri.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: DnsSafeHost
    path: src/System.Private.Uri/src/System/Uri.cs
    startLine: 1071
  assemblies:
  - System.Runtime
  namespace: System
  syntax:
    content: public string DnsSafeHost { get; }
    content.vb: Public ReadOnly Property DnsSafeHost As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Uri.Fragment
  commentId: P:System.Uri.Fragment
  id: Fragment
  parent: System.Uri
  langs:
  - csharp
  - vb
  name: Fragment
  fullName: System.Uri.Fragment
  type: Property
  source:
    remote:
      path: src/System.Private.Uri/src/System/Uri.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Fragment
    path: src/System.Private.Uri/src/System/Uri.cs
    startLine: 1002
  assemblies:
  - System.Runtime
  namespace: System
  syntax:
    content: public string Fragment { get; }
    content.vb: Public ReadOnly Property Fragment As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Uri.Host
  commentId: P:System.Uri.Host
  id: Host
  parent: System.Uri
  langs:
  - csharp
  - vb
  name: Host
  fullName: System.Uri.Host
  type: Property
  source:
    remote:
      path: src/System.Private.Uri/src/System/Uri.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Host
    path: src/System.Private.Uri/src/System/Uri.cs
    startLine: 814
  assemblies:
  - System.Runtime
  namespace: System
  syntax:
    content: public string Host { get; }
    content.vb: Public ReadOnly Property Host As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Uri.HostNameType
  commentId: P:System.Uri.HostNameType
  id: HostNameType
  parent: System.Uri
  langs:
  - csharp
  - vb
  name: HostNameType
  fullName: System.Uri.HostNameType
  type: Property
  source:
    remote:
      path: src/System.Private.Uri/src/System/Uri.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: HostNameType
    path: src/System.Private.Uri/src/System/Uri.cs
    startLine: 654
  assemblies:
  - System.Runtime
  namespace: System
  syntax:
    content: public UriHostNameType HostNameType { get; }
    content.vb: Public ReadOnly Property HostNameType As UriHostNameType
    parameters: []
    return:
      type: System.UriHostNameType
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Uri.IdnHost
  commentId: P:System.Uri.IdnHost
  id: IdnHost
  parent: System.Uri
  langs:
  - csharp
  - vb
  name: IdnHost
  fullName: System.Uri.IdnHost
  type: Property
  source:
    remote:
      path: src/System.Private.Uri/src/System/Uri.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IdnHost
    path: src/System.Private.Uri/src/System/Uri.cs
    startLine: 1133
  assemblies:
  - System.Runtime
  namespace: System
  syntax:
    content: public string IdnHost { get; }
    content.vb: Public ReadOnly Property IdnHost As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Uri.IsAbsoluteUri
  commentId: P:System.Uri.IsAbsoluteUri
  id: IsAbsoluteUri
  parent: System.Uri
  langs:
  - csharp
  - vb
  name: IsAbsoluteUri
  fullName: System.Uri.IsAbsoluteUri
  type: Property
  source:
    remote:
      path: src/System.Private.Uri/src/System/Uri.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IsAbsoluteUri
    path: src/System.Private.Uri/src/System/Uri.cs
    startLine: 1152
  assemblies:
  - System.Runtime
  namespace: System
  syntax:
    content: public bool IsAbsoluteUri { get; }
    content.vb: Public ReadOnly Property IsAbsoluteUri As Boolean
    parameters: []
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Uri.IsDefaultPort
  commentId: P:System.Uri.IsDefaultPort
  id: IsDefaultPort
  parent: System.Uri
  langs:
  - csharp
  - vb
  name: IsDefaultPort
  fullName: System.Uri.IsDefaultPort
  type: Property
  source:
    remote:
      path: src/System.Private.Uri/src/System/Uri.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IsDefaultPort
    path: src/System.Private.Uri/src/System/Uri.cs
    startLine: 686
  assemblies:
  - System.Runtime
  namespace: System
  syntax:
    content: public bool IsDefaultPort { get; }
    content.vb: Public ReadOnly Property IsDefaultPort As Boolean
    parameters: []
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Uri.IsFile
  commentId: P:System.Uri.IsFile
  id: IsFile
  parent: System.Uri
  langs:
  - csharp
  - vb
  name: IsFile
  fullName: System.Uri.IsFile
  type: Property
  source:
    remote:
      path: src/System.Private.Uri/src/System/Uri.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IsFile
    path: src/System.Private.Uri/src/System/Uri.cs
    startLine: 706
  assemblies:
  - System.Runtime
  namespace: System
  syntax:
    content: public bool IsFile { get; }
    content.vb: Public ReadOnly Property IsFile As Boolean
    parameters: []
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Uri.IsLoopback
  commentId: P:System.Uri.IsLoopback
  id: IsLoopback
  parent: System.Uri
  langs:
  - csharp
  - vb
  name: IsLoopback
  fullName: System.Uri.IsLoopback
  type: Property
  source:
    remote:
      path: src/System.Private.Uri/src/System/Uri.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IsLoopback
    path: src/System.Private.Uri/src/System/Uri.cs
    startLine: 719
  assemblies:
  - System.Runtime
  namespace: System
  syntax:
    content: public bool IsLoopback { get; }
    content.vb: Public ReadOnly Property IsLoopback As Boolean
    parameters: []
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Uri.IsUnc
  commentId: P:System.Uri.IsUnc
  id: IsUnc
  parent: System.Uri
  langs:
  - csharp
  - vb
  name: IsUnc
  fullName: System.Uri.IsUnc
  type: Property
  source:
    remote:
      path: src/System.Private.Uri/src/System/Uri.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IsUnc
    path: src/System.Private.Uri/src/System/Uri.cs
    startLine: 800
  assemblies:
  - System.Runtime
  namespace: System
  syntax:
    content: public bool IsUnc { get; }
    content.vb: Public ReadOnly Property IsUnc As Boolean
    parameters: []
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Uri.LocalPath
  commentId: P:System.Uri.LocalPath
  id: LocalPath
  parent: System.Uri
  langs:
  - csharp
  - vb
  name: LocalPath
  fullName: System.Uri.LocalPath
  type: Property
  source:
    remote:
      path: src/System.Private.Uri/src/System/Uri.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: LocalPath
    path: src/System.Private.Uri/src/System/Uri.cs
    startLine: 624
  assemblies:
  - System.Runtime
  namespace: System
  syntax:
    content: public string LocalPath { get; }
    content.vb: Public ReadOnly Property LocalPath As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Uri.OriginalString
  commentId: P:System.Uri.OriginalString
  id: OriginalString
  parent: System.Uri
  langs:
  - csharp
  - vb
  name: OriginalString
  fullName: System.Uri.OriginalString
  type: Property
  source:
    remote:
      path: src/System.Private.Uri/src/System/Uri.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: OriginalString
    path: src/System.Private.Uri/src/System/Uri.cs
    startLine: 1058
  assemblies:
  - System.Runtime
  namespace: System
  syntax:
    content: public string OriginalString { get; }
    content.vb: Public ReadOnly Property OriginalString As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Uri.PathAndQuery
  commentId: P:System.Uri.PathAndQuery
  id: PathAndQuery
  parent: System.Uri
  langs:
  - csharp
  - vb
  name: PathAndQuery
  fullName: System.Uri.PathAndQuery
  type: Property
  source:
    remote:
      path: src/System.Private.Uri/src/System/Uri.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: PathAndQuery
    path: src/System.Private.Uri/src/System/Uri.cs
    startLine: 737
  assemblies:
  - System.Runtime
  namespace: System
  syntax:
    content: public string PathAndQuery { get; }
    content.vb: Public ReadOnly Property PathAndQuery As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Uri.Port
  commentId: P:System.Uri.Port
  id: Port
  parent: System.Uri
  langs:
  - csharp
  - vb
  name: Port
  fullName: System.Uri.Port
  type: Property
  source:
    remote:
      path: src/System.Private.Uri/src/System/Uri.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Port
    path: src/System.Private.Uri/src/System/Uri.cs
    startLine: 949
  assemblies:
  - System.Runtime
  namespace: System
  syntax:
    content: public int Port { get; }
    content.vb: Public ReadOnly Property Port As Integer
    parameters: []
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Uri.Query
  commentId: P:System.Uri.Query
  id: Query
  parent: System.Uri
  langs:
  - csharp
  - vb
  name: Query
  fullName: System.Uri.Query
  type: Property
  source:
    remote:
      path: src/System.Private.Uri/src/System/Uri.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Query
    path: src/System.Private.Uri/src/System/Uri.cs
    startLine: 976
  assemblies:
  - System.Runtime
  namespace: System
  syntax:
    content: public string Query { get; }
    content.vb: Public ReadOnly Property Query As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Uri.Scheme
  commentId: P:System.Uri.Scheme
  id: Scheme
  parent: System.Uri
  langs:
  - csharp
  - vb
  name: Scheme
  fullName: System.Uri.Scheme
  type: Property
  source:
    remote:
      path: src/System.Private.Uri/src/System/Uri.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Scheme
    path: src/System.Private.Uri/src/System/Uri.cs
    startLine: 1029
  assemblies:
  - System.Runtime
  namespace: System
  syntax:
    content: public string Scheme { get; }
    content.vb: Public ReadOnly Property Scheme As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Uri.Segments
  commentId: P:System.Uri.Segments
  id: Segments
  parent: System.Uri
  langs:
  - csharp
  - vb
  name: Segments
  fullName: System.Uri.Segments
  type: Property
  source:
    remote:
      path: src/System.Private.Uri/src/System/Uri.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Segments
    path: src/System.Private.Uri/src/System/Uri.cs
    startLine: 761
  assemblies:
  - System.Runtime
  namespace: System
  syntax:
    content: public string[] Segments { get; }
    content.vb: Public ReadOnly Property Segments As String()
    parameters: []
    return:
      type: System.String[]
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Uri.UserEscaped
  commentId: P:System.Uri.UserEscaped
  id: UserEscaped
  parent: System.Uri
  langs:
  - csharp
  - vb
  name: UserEscaped
  fullName: System.Uri.UserEscaped
  type: Property
  source:
    remote:
      path: src/System.Private.Uri/src/System/Uri.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: UserEscaped
    path: src/System.Private.Uri/src/System/Uri.cs
    startLine: 1162
  assemblies:
  - System.Runtime
  namespace: System
  syntax:
    content: public bool UserEscaped { get; }
    content.vb: Public ReadOnly Property UserEscaped As Boolean
    parameters: []
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Uri.UserInfo
  commentId: P:System.Uri.UserInfo
  id: UserInfo
  parent: System.Uri
  langs:
  - csharp
  - vb
  name: UserInfo
  fullName: System.Uri.UserInfo
  type: Property
  source:
    remote:
      path: src/System.Private.Uri/src/System/Uri.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: UserInfo
    path: src/System.Private.Uri/src/System/Uri.cs
    startLine: 1173
  assemblies:
  - System.Runtime
  namespace: System
  syntax:
    content: public string UserInfo { get; }
    content.vb: Public ReadOnly Property UserInfo As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Uri.CheckHostName(System.String)
  commentId: M:System.Uri.CheckHostName(System.String)
  id: CheckHostName(System.String)
  parent: System.Uri
  langs:
  - csharp
  - vb
  name: CheckHostName(String)
  fullName: System.Uri.CheckHostName(System.String)
  type: Method
  source:
    remote:
      path: src/System.Private.Uri/src/System/Uri.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CheckHostName
    path: src/System.Private.Uri/src/System/Uri.cs
    startLine: 1198
  assemblies:
  - System.Runtime
  namespace: System
  syntax:
    content: public static UriHostNameType CheckHostName(string name)
    content.vb: Public Shared Function CheckHostName(name As String) As UriHostNameType
    parameters:
    - id: name
      type: System.String
    return:
      type: System.UriHostNameType
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Uri.CheckSchemeName(System.String)
  commentId: M:System.Uri.CheckSchemeName(System.String)
  id: CheckSchemeName(System.String)
  parent: System.Uri
  langs:
  - csharp
  - vb
  name: CheckSchemeName(String)
  fullName: System.Uri.CheckSchemeName(System.String)
  type: Method
  source:
    remote:
      path: src/System.Private.Uri/src/System/Uri.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CheckSchemeName
    path: src/System.Private.Uri/src/System/Uri.cs
    startLine: 1318
  assemblies:
  - System.Runtime
  namespace: System
  syntax:
    content: public static bool CheckSchemeName(string schemeName)
    content.vb: Public Shared Function CheckSchemeName(schemeName As String) As Boolean
    parameters:
    - id: schemeName
      type: System.String
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Uri.Compare(System.Uri,System.Uri,System.UriComponents,System.UriFormat,System.StringComparison)
  commentId: M:System.Uri.Compare(System.Uri,System.Uri,System.UriComponents,System.UriFormat,System.StringComparison)
  id: Compare(System.Uri,System.Uri,System.UriComponents,System.UriFormat,System.StringComparison)
  parent: System.Uri
  langs:
  - csharp
  - vb
  name: Compare(Uri, Uri, UriComponents, UriFormat, StringComparison)
  fullName: System.Uri.Compare(System.Uri, System.Uri, System.UriComponents, System.UriFormat, System.StringComparison)
  type: Method
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Compare
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 2161
  assemblies:
  - System.Runtime
  namespace: System
  syntax:
    content: public static int Compare(Uri uri1, Uri uri2, UriComponents partsToCompare, UriFormat compareFormat, StringComparison comparisonType)
    content.vb: Public Shared Function Compare(uri1 As Uri, uri2 As Uri, partsToCompare As UriComponents, compareFormat As UriFormat, comparisonType As StringComparison) As Integer
    parameters:
    - id: uri1
      type: System.Uri
    - id: uri2
      type: System.Uri
    - id: partsToCompare
      type: System.UriComponents
    - id: compareFormat
      type: System.UriFormat
    - id: comparisonType
      type: System.StringComparison
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Uri.Equals(System.Object)
  commentId: M:System.Uri.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Uri
  langs:
  - csharp
  - vb
  name: Equals(Object)
  fullName: System.Uri.Equals(System.Object)
  type: Method
  source:
    remote:
      path: src/System.Private.Uri/src/System/Uri.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Equals
    path: src/System.Private.Uri/src/System/Uri.cs
    startLine: 1447
  assemblies:
  - System.Runtime
  namespace: System
  syntax:
    content: public override bool Equals(object comparand)
    content.vb: Public Overrides Function Equals(comparand As Object) As Boolean
    parameters:
    - id: comparand
      type: System.Object
    return:
      type: System.Boolean
  overridden: System.Object.Equals(System.Object)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Uri.EscapeDataString(System.String)
  commentId: M:System.Uri.EscapeDataString(System.String)
  id: EscapeDataString(System.String)
  parent: System.Uri
  langs:
  - csharp
  - vb
  name: EscapeDataString(String)
  fullName: System.Uri.EscapeDataString(System.String)
  type: Method
  source:
    remote:
      path: src/System.Private.Uri/src/System/UriExt.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: EscapeDataString
    path: src/System.Private.Uri/src/System/UriExt.cs
    startLine: 549
  assemblies:
  - System.Runtime
  namespace: System
  syntax:
    content: public static string EscapeDataString(string stringToEscape)
    content.vb: Public Shared Function EscapeDataString(stringToEscape As String) As String
    parameters:
    - id: stringToEscape
      type: System.String
    return:
      type: System.String
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Uri.EscapeUriString(System.String)
  commentId: M:System.Uri.EscapeUriString(System.String)
  id: EscapeUriString(System.String)
  parent: System.Uri
  langs:
  - csharp
  - vb
  name: EscapeUriString(String)
  fullName: System.Uri.EscapeUriString(System.String)
  type: Method
  source:
    remote:
      path: src/System.Private.Uri/src/System/UriExt.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: EscapeUriString
    path: src/System.Private.Uri/src/System/UriExt.cs
    startLine: 529
  assemblies:
  - System.Runtime
  namespace: System
  syntax:
    content: public static string EscapeUriString(string stringToEscape)
    content.vb: Public Shared Function EscapeUriString(stringToEscape As String) As String
    parameters:
    - id: stringToEscape
      type: System.String
    return:
      type: System.String
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Uri.GetComponents(System.UriComponents,System.UriFormat)
  commentId: M:System.Uri.GetComponents(System.UriComponents,System.UriFormat)
  id: GetComponents(System.UriComponents,System.UriFormat)
  parent: System.Uri
  langs:
  - csharp
  - vb
  name: GetComponents(UriComponents, UriFormat)
  fullName: System.Uri.GetComponents(System.UriComponents, System.UriFormat)
  type: Method
  source:
    remote:
      path: src/System.Private.Uri/src/System/UriExt.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetComponents
    path: src/System.Private.Uri/src/System/UriExt.cs
    startLine: 300
  assemblies:
  - System.Runtime
  namespace: System
  syntax:
    content: public string GetComponents(UriComponents components, UriFormat format)
    content.vb: Public Function GetComponents(components As UriComponents, format As UriFormat) As String
    parameters:
    - id: components
      type: System.UriComponents
    - id: format
      type: System.UriFormat
    return:
      type: System.String
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Uri.GetHashCode
  commentId: M:System.Uri.GetHashCode
  id: GetHashCode
  parent: System.Uri
  langs:
  - csharp
  - vb
  name: GetHashCode()
  fullName: System.Uri.GetHashCode()
  type: Method
  source:
    remote:
      path: src/System.Private.Uri/src/System/Uri.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetHashCode
    path: src/System.Private.Uri/src/System/Uri.cs
    startLine: 1345
  assemblies:
  - System.Runtime
  namespace: System
  syntax:
    content: public override int GetHashCode()
    content.vb: Public Overrides Function GetHashCode As Integer
    return:
      type: System.Int32
  overridden: System.Object.GetHashCode
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Uri.IsBaseOf(System.Uri)
  commentId: M:System.Uri.IsBaseOf(System.Uri)
  id: IsBaseOf(System.Uri)
  parent: System.Uri
  langs:
  - csharp
  - vb
  name: IsBaseOf(Uri)
  fullName: System.Uri.IsBaseOf(System.Uri)
  type: Method
  source:
    remote:
      path: src/System.Private.Uri/src/System/UriExt.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IsBaseOf
    path: src/System.Private.Uri/src/System/UriExt.cs
    startLine: 830
  assemblies:
  - System.Runtime
  namespace: System
  syntax:
    content: public bool IsBaseOf(Uri uri)
    content.vb: Public Function IsBaseOf(uri As Uri) As Boolean
    parameters:
    - id: uri
      type: System.Uri
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Uri.IsWellFormedOriginalString
  commentId: M:System.Uri.IsWellFormedOriginalString
  id: IsWellFormedOriginalString
  parent: System.Uri
  langs:
  - csharp
  - vb
  name: IsWellFormedOriginalString()
  fullName: System.Uri.IsWellFormedOriginalString()
  type: Method
  source:
    remote:
      path: src/System.Private.Uri/src/System/UriExt.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IsWellFormedOriginalString
    path: src/System.Private.Uri/src/System/UriExt.cs
    startLine: 351
  assemblies:
  - System.Runtime
  namespace: System
  syntax:
    content: public bool IsWellFormedOriginalString()
    content.vb: Public Function IsWellFormedOriginalString As Boolean
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Uri.IsWellFormedUriString(System.String,System.UriKind)
  commentId: M:System.Uri.IsWellFormedUriString(System.String,System.UriKind)
  id: IsWellFormedUriString(System.String,System.UriKind)
  parent: System.Uri
  langs:
  - csharp
  - vb
  name: IsWellFormedUriString(String, UriKind)
  fullName: System.Uri.IsWellFormedUriString(System.String, System.UriKind)
  type: Method
  source:
    remote:
      path: src/System.Private.Uri/src/System/UriExt.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IsWellFormedUriString
    path: src/System.Private.Uri/src/System/UriExt.cs
    startLine: 359
  assemblies:
  - System.Runtime
  namespace: System
  syntax:
    content: public static bool IsWellFormedUriString(string uriString, UriKind uriKind)
    content.vb: Public Shared Function IsWellFormedUriString(uriString As String, uriKind As UriKind) As Boolean
    parameters:
    - id: uriString
      type: System.String
    - id: uriKind
      type: System.UriKind
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Uri.MakeRelativeUri(System.Uri)
  commentId: M:System.Uri.MakeRelativeUri(System.Uri)
  id: MakeRelativeUri(System.Uri)
  parent: System.Uri
  langs:
  - csharp
  - vb
  name: MakeRelativeUri(Uri)
  fullName: System.Uri.MakeRelativeUri(System.Uri)
  type: Method
  source:
    remote:
      path: src/System.Private.Uri/src/System/Uri.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: MakeRelativeUri
    path: src/System.Private.Uri/src/System/Uri.cs
    startLine: 1659
  assemblies:
  - System.Runtime
  namespace: System
  syntax:
    content: public Uri MakeRelativeUri(Uri uri)
    content.vb: Public Function MakeRelativeUri(uri As Uri) As Uri
    parameters:
    - id: uri
      type: System.Uri
    return:
      type: System.Uri
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Uri.op_Equality(System.Uri,System.Uri)
  commentId: M:System.Uri.op_Equality(System.Uri,System.Uri)
  id: op_Equality(System.Uri,System.Uri)
  parent: System.Uri
  langs:
  - csharp
  - vb
  name: Equality(Uri, Uri)
  fullName: System.Uri.Equality(System.Uri, System.Uri)
  type: Operator
  source:
    remote:
      path: src/System.Private.Uri/src/System/Uri.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_Equality
    path: src/System.Private.Uri/src/System/Uri.cs
    startLine: 1402
  assemblies:
  - System.Runtime
  namespace: System
  syntax:
    content: public static bool operator ==(Uri uri1, Uri uri2)
    content.vb: Public Shared Operator =(uri1 As Uri, uri2 As Uri) As Boolean
    parameters:
    - id: uri1
      type: System.Uri
    - id: uri2
      type: System.Uri
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Uri.op_Inequality(System.Uri,System.Uri)
  commentId: M:System.Uri.op_Inequality(System.Uri,System.Uri)
  id: op_Inequality(System.Uri,System.Uri)
  parent: System.Uri
  langs:
  - csharp
  - vb
  name: Inequality(Uri, Uri)
  fullName: System.Uri.Inequality(System.Uri, System.Uri)
  type: Operator
  source:
    remote:
      path: src/System.Private.Uri/src/System/Uri.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_Inequality
    path: src/System.Private.Uri/src/System/Uri.cs
    startLine: 1418
  assemblies:
  - System.Runtime
  namespace: System
  syntax:
    content: public static bool operator !=(Uri uri1, Uri uri2)
    content.vb: Public Shared Operator <>(uri1 As Uri, uri2 As Uri) As Boolean
    parameters:
    - id: uri1
      type: System.Uri
    - id: uri2
      type: System.Uri
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Uri.ToString
  commentId: M:System.Uri.ToString
  id: ToString
  parent: System.Uri
  langs:
  - csharp
  - vb
  name: ToString()
  fullName: System.Uri.ToString()
  type: Method
  source:
    remote:
      path: src/System.Private.Uri/src/System/Uri.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ToString
    path: src/System.Private.Uri/src/System/Uri.cs
    startLine: 1381
  assemblies:
  - System.Runtime
  namespace: System
  syntax:
    content: public override string ToString()
    content.vb: Public Overrides Function ToString As String
    return:
      type: System.String
  overridden: System.Object.ToString
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Uri.TryCreate(System.String,System.UriKind,System.Uri@)
  commentId: M:System.Uri.TryCreate(System.String,System.UriKind,System.Uri@)
  id: TryCreate(System.String,System.UriKind,System.Uri@)
  parent: System.Uri
  langs:
  - csharp
  - vb
  name: TryCreate(String, UriKind, out Uri)
  fullName: System.Uri.TryCreate(System.String, System.UriKind, out System.Uri)
  type: Method
  source:
    remote:
      path: src/System.Private.Uri/src/System/UriExt.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: TryCreate
    path: src/System.Private.Uri/src/System/UriExt.cs
    startLine: 239
  assemblies:
  - System.Runtime
  namespace: System
  syntax:
    content: public static bool TryCreate(string uriString, UriKind uriKind, out Uri result)
    content.vb: Public Shared Function TryCreate(uriString As String, uriKind As UriKind, ByRef result As Uri) As Boolean
    parameters:
    - id: uriString
      type: System.String
    - id: uriKind
      type: System.UriKind
    - id: result
      type: System.Uri
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Uri.TryCreate(System.String, System.UriKind, ByRef System.Uri)
  name.vb: TryCreate(String, UriKind, ByRef Uri)
- uid: System.Uri.TryCreate(System.Uri,System.String,System.Uri@)
  commentId: M:System.Uri.TryCreate(System.Uri,System.String,System.Uri@)
  id: TryCreate(System.Uri,System.String,System.Uri@)
  parent: System.Uri
  langs:
  - csharp
  - vb
  name: TryCreate(Uri, String, out Uri)
  fullName: System.Uri.TryCreate(System.Uri, System.String, out System.Uri)
  type: Method
  source:
    remote:
      path: src/System.Private.Uri/src/System/UriExt.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: TryCreate
    path: src/System.Private.Uri/src/System/UriExt.cs
    startLine: 251
  assemblies:
  - System.Runtime
  namespace: System
  syntax:
    content: public static bool TryCreate(Uri baseUri, string relativeUri, out Uri result)
    content.vb: Public Shared Function TryCreate(baseUri As Uri, relativeUri As String, ByRef result As Uri) As Boolean
    parameters:
    - id: baseUri
      type: System.Uri
    - id: relativeUri
      type: System.String
    - id: result
      type: System.Uri
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Uri.TryCreate(System.Uri, System.String, ByRef System.Uri)
  name.vb: TryCreate(Uri, String, ByRef Uri)
- uid: System.Uri.TryCreate(System.Uri,System.Uri,System.Uri@)
  commentId: M:System.Uri.TryCreate(System.Uri,System.Uri,System.Uri@)
  id: TryCreate(System.Uri,System.Uri,System.Uri@)
  parent: System.Uri
  langs:
  - csharp
  - vb
  name: TryCreate(Uri, Uri, out Uri)
  fullName: System.Uri.TryCreate(System.Uri, System.Uri, out System.Uri)
  type: Method
  source:
    remote:
      path: src/System.Private.Uri/src/System/UriExt.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: TryCreate
    path: src/System.Private.Uri/src/System/UriExt.cs
    startLine: 266
  assemblies:
  - System.Runtime
  namespace: System
  syntax:
    content: public static bool TryCreate(Uri baseUri, Uri relativeUri, out Uri result)
    content.vb: Public Shared Function TryCreate(baseUri As Uri, relativeUri As Uri, ByRef result As Uri) As Boolean
    parameters:
    - id: baseUri
      type: System.Uri
    - id: relativeUri
      type: System.Uri
    - id: result
      type: System.Uri
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Uri.TryCreate(System.Uri, System.Uri, ByRef System.Uri)
  name.vb: TryCreate(Uri, Uri, ByRef Uri)
- uid: System.Uri.UnescapeDataString(System.String)
  commentId: M:System.Uri.UnescapeDataString(System.String)
  id: UnescapeDataString(System.String)
  parent: System.Uri
  langs:
  - csharp
  - vb
  name: UnescapeDataString(String)
  fullName: System.Uri.UnescapeDataString(System.String)
  type: Method
  source:
    remote:
      path: src/System.Private.Uri/src/System/UriExt.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: UnescapeDataString
    path: src/System.Private.Uri/src/System/UriExt.cs
    startLine: 494
  assemblies:
  - System.Runtime
  namespace: System
  syntax:
    content: public static string UnescapeDataString(string stringToUnescape)
    content.vb: Public Shared Function UnescapeDataString(stringToUnescape As String) As String
    parameters:
    - id: stringToUnescape
      type: System.String
    return:
      type: System.String
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: false
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: false
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
  - name: )
    fullName: )
- uid: System.String
  parent: System
  isExternal: false
  name: String
  fullName: System.String
- uid: System.UriKind
  parent: System
  isExternal: false
  name: UriKind
  fullName: System.UriKind
- uid: System.Uri
  parent: System
  isExternal: false
  name: Uri
  fullName: System.Uri
- uid: System.UriHostNameType
  parent: System
  isExternal: false
  name: UriHostNameType
  fullName: System.UriHostNameType
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  fullName: System.Boolean
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  fullName: System.Int32
- uid: System.String[]
  isExternal: false
  name: String[]
  fullName: System.String[]
  fullname.vb: System.String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: String
    fullName: System.String
  - name: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.String
    name: String
    fullName: System.String
  - name: ()
    fullName: ()
- uid: System.UriComponents
  parent: System
  isExternal: false
  name: UriComponents
  fullName: System.UriComponents
- uid: System.UriFormat
  parent: System
  isExternal: false
  name: UriFormat
  fullName: System.UriFormat
- uid: System.StringComparison
  parent: System
  isExternal: false
  name: StringComparison
  fullName: System.StringComparison
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: false
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.ToString
  parent: System.Object
  isExternal: false
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
  - name: (
    fullName: (
  - name: )
    fullName: )
