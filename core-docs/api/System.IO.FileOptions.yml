items:
- uid: System.IO.FileOptions
  commentId: T:System.IO.FileOptions
  id: FileOptions
  parent: System.IO
  children:
  - System.IO.FileOptions.Asynchronous
  - System.IO.FileOptions.DeleteOnClose
  - System.IO.FileOptions.Encrypted
  - System.IO.FileOptions.None
  - System.IO.FileOptions.RandomAccess
  - System.IO.FileOptions.SequentialScan
  - System.IO.FileOptions.WriteThrough
  langs:
  - csharp
  - vb
  name: FileOptions
  fullName: System.IO.FileOptions
  type: Enum
  source:
    remote:
      path: src/System.IO.FileSystem/src/System/IO/FileOptions.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: FileOptions
    path: src/System.IO.FileSystem/src/System/IO/FileOptions.cs
    startLine: 13
  assemblies:
  - System.IO.FileSystem
  namespace: System.IO
  summary: "\n<p>Represents advanced options for creating a <xref href=\"System.IO.FileStream\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  example:
  - "\n<p>The following example shows how to use the <xref href=\"System.IO.FileOptions.Asynchronous\" data-throw-if-not-resolved=\"false\"></xref> value when creating a file stream.</p>IO.FileStream.ctor2#2"
  syntax:
    content: 'public enum FileOptions : int'
    content.vb: Public Enum FileOptions As Integer
  modifiers.csharp:
  - public
  - enum
  modifiers.vb:
  - Public
  - Enum
- uid: System.IO.FileOptions.Asynchronous
  commentId: F:System.IO.FileOptions.Asynchronous
  id: Asynchronous
  parent: System.IO.FileOptions
  langs:
  - csharp
  - vb
  name: Asynchronous
  fullName: System.IO.FileOptions.Asynchronous
  type: Field
  source:
    remote:
      path: src/System.IO.FileSystem/src/System/IO/FileOptions.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Asynchronous
    path: src/System.IO.FileSystem/src/System/IO/FileOptions.cs
    startLine: 23
  assemblies:
  - System.IO.FileSystem
  namespace: System.IO
  summary: "\n<p>Indicates that a file can be used for asynchronous reading and writing. </p>\n"
  syntax:
    content: Asynchronous = null
    content.vb: Asynchronous = Nothing
    return:
      type: System.IO.FileOptions
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.IO.FileOptions.DeleteOnClose
  commentId: F:System.IO.FileOptions.DeleteOnClose
  id: DeleteOnClose
  parent: System.IO.FileOptions
  langs:
  - csharp
  - vb
  name: DeleteOnClose
  fullName: System.IO.FileOptions.DeleteOnClose
  type: Field
  source:
    remote:
      path: src/System.IO.FileSystem/src/System/IO/FileOptions.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: DeleteOnClose
    path: src/System.IO.FileSystem/src/System/IO/FileOptions.cs
    startLine: 26
  assemblies:
  - System.IO.FileSystem
  namespace: System.IO
  summary: "\n<p>Indicates that a file is automatically deleted when it is no longer in use.</p>\n"
  syntax:
    content: DeleteOnClose = null
    content.vb: DeleteOnClose = Nothing
    return:
      type: System.IO.FileOptions
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.IO.FileOptions.Encrypted
  commentId: F:System.IO.FileOptions.Encrypted
  id: Encrypted
  parent: System.IO.FileOptions
  langs:
  - csharp
  - vb
  name: Encrypted
  fullName: System.IO.FileOptions.Encrypted
  type: Field
  source:
    remote:
      path: src/System.IO.FileSystem/src/System/IO/FileOptions.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Encrypted
    path: src/System.IO.FileSystem/src/System/IO/FileOptions.cs
    startLine: 33
  assemblies:
  - System.IO.FileSystem
  namespace: System.IO
  summary: "\n<p>Indicates that a file is encrypted and can be decrypted only by using the same user account used for encryption.</p>\n"
  syntax:
    content: Encrypted = null
    content.vb: Encrypted = Nothing
    return:
      type: System.IO.FileOptions
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.IO.FileOptions.None
  commentId: F:System.IO.FileOptions.None
  id: None
  parent: System.IO.FileOptions
  langs:
  - csharp
  - vb
  name: None
  fullName: System.IO.FileOptions.None
  type: Field
  source:
    remote:
      path: src/System.IO.FileSystem/src/System/IO/FileOptions.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: None
    path: src/System.IO.FileSystem/src/System/IO/FileOptions.cs
    startLine: 21
  assemblies:
  - System.IO.FileSystem
  namespace: System.IO
  summary: "\n<p>Indicates that no additional options should be used when creating a <xref href=\"System.IO.FileStream\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  syntax:
    content: None = null
    content.vb: None = Nothing
    return:
      type: System.IO.FileOptions
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.IO.FileOptions.RandomAccess
  commentId: F:System.IO.FileOptions.RandomAccess
  id: RandomAccess
  parent: System.IO.FileOptions
  langs:
  - csharp
  - vb
  name: RandomAccess
  fullName: System.IO.FileOptions.RandomAccess
  type: Field
  source:
    remote:
      path: src/System.IO.FileSystem/src/System/IO/FileOptions.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: RandomAccess
    path: src/System.IO.FileSystem/src/System/IO/FileOptions.cs
    startLine: 25
  assemblies:
  - System.IO.FileSystem
  namespace: System.IO
  summary: "\n<p>Indicates that the file is accessed randomly. The system can use this as a hint to optimize file caching.</p>\n"
  syntax:
    content: RandomAccess = null
    content.vb: RandomAccess = Nothing
    return:
      type: System.IO.FileOptions
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.IO.FileOptions.SequentialScan
  commentId: F:System.IO.FileOptions.SequentialScan
  id: SequentialScan
  parent: System.IO.FileOptions
  langs:
  - csharp
  - vb
  name: SequentialScan
  fullName: System.IO.FileOptions.SequentialScan
  type: Field
  source:
    remote:
      path: src/System.IO.FileSystem/src/System/IO/FileOptions.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: SequentialScan
    path: src/System.IO.FileSystem/src/System/IO/FileOptions.cs
    startLine: 27
  assemblies:
  - System.IO.FileSystem
  namespace: System.IO
  summary: "\n<p>Indicates that the file is to be accessed sequentially from beginning to end. The system can use this as a hint to optimize file caching. If an application moves the file pointer for random access, optimum caching may not occur; however, correct operation is still guaranteed. </p>\n"
  remarks: "\n<p>Specifying this flag can increase performance for applications that read large files using sequential access. Performance gains can be even more noticeable for applications that read large files mostly sequentially, but occasionally skip over small ranges of bytes.</p>\n"
  syntax:
    content: SequentialScan = null
    content.vb: SequentialScan = Nothing
    return:
      type: System.IO.FileOptions
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.IO.FileOptions.WriteThrough
  commentId: F:System.IO.FileOptions.WriteThrough
  id: WriteThrough
  parent: System.IO.FileOptions
  langs:
  - csharp
  - vb
  name: WriteThrough
  fullName: System.IO.FileOptions.WriteThrough
  type: Field
  source:
    remote:
      path: src/System.IO.FileSystem/src/System/IO/FileOptions.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: WriteThrough
    path: src/System.IO.FileSystem/src/System/IO/FileOptions.cs
    startLine: 22
  assemblies:
  - System.IO.FileSystem
  namespace: System.IO
  summary: "\n<p>Indicates that the system should write through any intermediate cache and go directly to disk.</p>\n"
  syntax:
    content: WriteThrough = null
    content.vb: WriteThrough = Nothing
    return:
      type: System.IO.FileOptions
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
references:
- uid: System.IO
  isExternal: false
  name: System.IO
  fullName: System.IO
- uid: System.IO.FileOptions
  parent: System.IO
  isExternal: false
  name: FileOptions
  fullName: System.IO.FileOptions
