items:
- uid: System.Reflection.Emit.FieldBuilder
  commentId: T:System.Reflection.Emit.FieldBuilder
  id: FieldBuilder
  parent: System.Reflection.Emit
  children:
  - System.Reflection.Emit.FieldBuilder.Attributes
  - System.Reflection.Emit.FieldBuilder.DeclaringType
  - System.Reflection.Emit.FieldBuilder.FieldType
  - System.Reflection.Emit.FieldBuilder.GetValue(System.Object)
  - System.Reflection.Emit.FieldBuilder.Name
  - System.Reflection.Emit.FieldBuilder.SetConstant(System.Object)
  - System.Reflection.Emit.FieldBuilder.SetCustomAttribute(System.Reflection.ConstructorInfo,System.Byte[])
  - System.Reflection.Emit.FieldBuilder.SetCustomAttribute(System.Reflection.Emit.CustomAttributeBuilder)
  - System.Reflection.Emit.FieldBuilder.SetOffset(System.Int32)
  langs:
  - csharp
  - vb
  name: FieldBuilder
  fullName: System.Reflection.Emit.FieldBuilder
  type: Class
  source:
    remote:
      path: src/mscorlib/src/System/Reflection/Emit/FieldBuilder.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: FieldBuilder
    path: src/mscorlib/src/System/Reflection/Emit/FieldBuilder.cs
    startLine: 15
  assemblies:
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  summary: "\n<p>Defines and represents a field. This class cannot be inherited.</p>\n"
  remarks: "\n<p>Get an instance of <strong>FieldBuilder</strong> by calling <xref href=\"System.Reflection.Emit.TypeBuilder.DefineField(System.String,System.Type,System.Reflection.FieldAttributes)\" data-throw-if-not-resolved=\"false\"></xref>, <xref href=\"System.Reflection.Emit.ModuleBuilder.DefineInitializedData(System.String,System.Byte[],System.Reflection.FieldAttributes)\" data-throw-if-not-resolved=\"false\"></xref>, or <xref href=\"System.Reflection.Emit.ModuleBuilder.DefineUninitializedData(System.String,System.Int32,System.Reflection.FieldAttributes)\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>The <xref href=\"System.Reflection.Emit.FieldBuilder.SetValue(System.Object,System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Globalization.CultureInfo)\" data-throw-if-not-resolved=\"false\"></xref> method is currently not supported. As a workaround, retrieve the <xref href=\"System.Reflection.FieldInfo\" data-throw-if-not-resolved=\"false\"></xref> by reflecting on the finished type and call <xref href=\"System.Reflection.FieldInfo.SetValue(System.Object,System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Globalization.CultureInfo)\" data-throw-if-not-resolved=\"false\"></xref> to set the value of the field.</p>\n"
  example:
  - "\n<p>The following code sample illustrates the use of <strong>FieldBuilder</strong>.</p>FieldBuilder_Class_Name#1"
  syntax:
    content: >-
      [HostProtection(MayLeakOnAbort = true)]

      [ClassInterface(ClassInterfaceType.None)]

      [ComDefaultInterface(typeof (_FieldBuilder))]

      [ComVisible(true)]

      public sealed class FieldBuilder : FieldInfo, ICustomAttributeProvider, _MemberInfo, _FieldInfo, _FieldBuilder
    content.vb: >-
      <HostProtection(MayLeakOnAbort:=True)>

      <ClassInterface(ClassInterfaceType.None)>

      <ComDefaultInterface(GetType(_FieldBuilder))>

      <ComVisible(True)>

      Public NotInheritable Class FieldBuilder
          Inherits FieldInfo
          Implements ICustomAttributeProvider, _MemberInfo, _FieldInfo, _FieldBuilder
  inheritance:
  - System.Object
  - System.Reflection.MemberInfo
  - System.Reflection.FieldInfo
  implements:
  - System.Reflection.ICustomAttributeProvider
  - System.Runtime.InteropServices._MemberInfo
  - System.Runtime.InteropServices._FieldInfo
  inheritedMembers:
  - System.Reflection.FieldInfo.GetFieldFromHandle(System.RuntimeFieldHandle)
  - System.Reflection.FieldInfo.GetFieldFromHandle(System.RuntimeFieldHandle,System.RuntimeTypeHandle)
  - System.Reflection.FieldInfo.Equals(System.Object)
  - System.Reflection.FieldInfo.GetHashCode
  - System.Reflection.FieldInfo.GetRequiredCustomModifiers
  - System.Reflection.FieldInfo.GetOptionalCustomModifiers
  - System.Reflection.FieldInfo.SetValueDirect(System.TypedReference,System.Object)
  - System.Reflection.FieldInfo.GetValueDirect(System.TypedReference)
  - System.Reflection.FieldInfo.GetRawConstantValue
  - System.Reflection.FieldInfo.SetValue(System.Object,System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Globalization.CultureInfo)
  - System.Reflection.FieldInfo.SetValue(System.Object,System.Object)
  - System.Reflection.FieldInfo.System#Runtime#InteropServices#_FieldInfo#GetType
  - System.Reflection.FieldInfo.System#Runtime#InteropServices#_FieldInfo#GetTypeInfoCount(System.UInt32@)
  - System.Reflection.FieldInfo.System#Runtime#InteropServices#_FieldInfo#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)
  - System.Reflection.FieldInfo.System#Runtime#InteropServices#_FieldInfo#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)
  - System.Reflection.FieldInfo.System#Runtime#InteropServices#_FieldInfo#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
  - System.Reflection.FieldInfo.MemberType
  - System.Reflection.FieldInfo.FieldHandle
  - System.Reflection.FieldInfo.IsPublic
  - System.Reflection.FieldInfo.IsPrivate
  - System.Reflection.FieldInfo.IsFamily
  - System.Reflection.FieldInfo.IsAssembly
  - System.Reflection.FieldInfo.IsFamilyAndAssembly
  - System.Reflection.FieldInfo.IsFamilyOrAssembly
  - System.Reflection.FieldInfo.IsStatic
  - System.Reflection.FieldInfo.IsInitOnly
  - System.Reflection.FieldInfo.IsLiteral
  - System.Reflection.FieldInfo.IsNotSerialized
  - System.Reflection.FieldInfo.IsSpecialName
  - System.Reflection.FieldInfo.IsPinvokeImpl
  - System.Reflection.FieldInfo.IsSecurityCritical
  - System.Reflection.FieldInfo.IsSecuritySafeCritical
  - System.Reflection.FieldInfo.IsSecurityTransparent
  - System.Reflection.MemberInfo.GetCustomAttributes(System.Boolean)
  - System.Reflection.MemberInfo.GetCustomAttributes(System.Type,System.Boolean)
  - System.Reflection.MemberInfo.IsDefined(System.Type,System.Boolean)
  - System.Reflection.MemberInfo.GetCustomAttributesData
  - System.Reflection.MemberInfo.System#Runtime#InteropServices#_MemberInfo#GetType
  - System.Reflection.MemberInfo.System#Runtime#InteropServices#_MemberInfo#GetTypeInfoCount(System.UInt32@)
  - System.Reflection.MemberInfo.System#Runtime#InteropServices#_MemberInfo#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)
  - System.Reflection.MemberInfo.System#Runtime#InteropServices#_MemberInfo#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)
  - System.Reflection.MemberInfo.System#Runtime#InteropServices#_MemberInfo#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
  - System.Reflection.MemberInfo.ReflectedType
  - System.Reflection.MemberInfo.CustomAttributes
  - System.Reflection.MemberInfo.MetadataToken
  - System.Reflection.MemberInfo.Module
  - System.Object.ToString
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: System.Reflection.Emit.FieldBuilder.Attributes
  commentId: P:System.Reflection.Emit.FieldBuilder.Attributes
  id: Attributes
  parent: System.Reflection.Emit.FieldBuilder
  langs:
  - csharp
  - vb
  name: Attributes
  fullName: System.Reflection.Emit.FieldBuilder.Attributes
  type: Property
  source:
    remote:
      path: src/mscorlib/src/System/Reflection/Emit/FieldBuilder.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Attributes
    path: src/mscorlib/src/System/Reflection/Emit/FieldBuilder.cs
    startLine: 149
  assemblies:
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  summary: "\n<p>Indicates the attributes of this field. This property is read-only.</p>\n"
  remarks: "\n<p>The following code sample illustrates the use of <strong>Attributes</strong>.</p>FieldBuilder_ReflectedType#1"
  syntax:
    content: public override FieldAttributes Attributes { get; }
    content.vb: Public Overrides ReadOnly Property Attributes As FieldAttributes
    parameters: []
    return:
      type: System.Reflection.FieldAttributes
  overridden: System.Reflection.FieldInfo.Attributes
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: System.Reflection.Emit.FieldBuilder.DeclaringType
  commentId: P:System.Reflection.Emit.FieldBuilder.DeclaringType
  id: DeclaringType
  parent: System.Reflection.Emit.FieldBuilder
  langs:
  - csharp
  - vb
  name: DeclaringType
  fullName: System.Reflection.Emit.FieldBuilder.DeclaringType
  type: Property
  source:
    remote:
      path: src/mscorlib/src/System/Reflection/Emit/FieldBuilder.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: DeclaringType
    path: src/mscorlib/src/System/Reflection/Emit/FieldBuilder.cs
    startLine: 96
  assemblies:
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  summary: "\n<p>Indicates a reference to the <xref href=\"System.Type\" data-throw-if-not-resolved=\"false\"></xref> object for the type that declares this field. This property is read-only.</p>\n"
  syntax:
    content: public override Type DeclaringType { get; }
    content.vb: Public Overrides ReadOnly Property DeclaringType As Type
    parameters: []
    return:
      type: System.Type
  overridden: System.Reflection.MemberInfo.DeclaringType
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: System.Reflection.Emit.FieldBuilder.FieldType
  commentId: P:System.Reflection.Emit.FieldBuilder.FieldType
  id: FieldType
  parent: System.Reflection.Emit.FieldBuilder
  langs:
  - csharp
  - vb
  name: FieldType
  fullName: System.Reflection.Emit.FieldBuilder.FieldType
  type: Property
  source:
    remote:
      path: src/mscorlib/src/System/Reflection/Emit/FieldBuilder.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: FieldType
    path: src/mscorlib/src/System/Reflection/Emit/FieldBuilder.cs
    startLine: 121
  assemblies:
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  summary: "\n<p>Indicates the <xref href=\"System.Type\" data-throw-if-not-resolved=\"false\"></xref> object that represents the type of this field. This property is read-only.</p>\n"
  syntax:
    content: public override Type FieldType { get; }
    content.vb: Public Overrides ReadOnly Property FieldType As Type
    parameters: []
    return:
      type: System.Type
  overridden: System.Reflection.FieldInfo.FieldType
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: System.Reflection.Emit.FieldBuilder.Name
  commentId: P:System.Reflection.Emit.FieldBuilder.Name
  id: Name
  parent: System.Reflection.Emit.FieldBuilder
  langs:
  - csharp
  - vb
  name: Name
  fullName: System.Reflection.Emit.FieldBuilder.Name
  type: Property
  source:
    remote:
      path: src/mscorlib/src/System/Reflection/Emit/FieldBuilder.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Name
    path: src/mscorlib/src/System/Reflection/Emit/FieldBuilder.cs
    startLine: 91
  assemblies:
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  summary: "\n<p>Indicates the name of this field. This property is read-only.</p>\n"
  remarks: "\n<p>The following code sample illustrates the use of <strong>Name</strong>.</p>FieldBuilder_Class_Name#1"
  syntax:
    content: public override string Name { get; }
    content.vb: Public Overrides ReadOnly Property Name As String
    parameters: []
    return:
      type: System.String
  overridden: System.Reflection.MemberInfo.Name
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: System.Reflection.Emit.FieldBuilder.GetValue(System.Object)
  commentId: M:System.Reflection.Emit.FieldBuilder.GetValue(System.Object)
  id: GetValue(System.Object)
  parent: System.Reflection.Emit.FieldBuilder
  langs:
  - csharp
  - vb
  name: GetValue(Object)
  fullName: System.Reflection.Emit.FieldBuilder.GetValue(System.Object)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Reflection/Emit/FieldBuilder.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: GetValue
    path: src/mscorlib/src/System/Reflection/Emit/FieldBuilder.cs
    startLine: 126
  assemblies:
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  summary: "\n<p>Retrieves the value of the field supported by the given object.</p>\n"
  remarks: "\n<p>If the field is <strong>static</strong>, the <em>obj</em> parameter is ignored. For non-static fields, <em>obj</em> should be an instance of a class that inherits or declares the field.</p>\n<p>The return type of <xref href=\"System.Reflection.Emit.FieldBuilder.GetValue(System.Object)\" data-throw-if-not-resolved=\"false\"></xref> is <xref href=\"System.Object\" data-throw-if-not-resolved=\"false\"></xref>. For example, if the field holds a Boolean primitive value, an instance of <xref href=\"System.Object\" data-throw-if-not-resolved=\"false\"></xref> with the appropriate Boolean value is returned. Before returning the value, <xref href=\"System.Reflection.Emit.FieldBuilder.GetValue(System.Object)\" data-throw-if-not-resolved=\"false\"></xref> checks to see if the user has access permission.</p>\n<p>Access restrictions are ignored for fully-trusted code. <strong>Private</strong> constructors, methods, fields, and properties can be accessed and invoked using Reflection whenever the code is fully-trusted.</p>\n"
  syntax:
    content: public override object GetValue(object obj)
    content.vb: Public Overrides Function GetValue(obj As Object) As Object
    parameters:
    - id: obj
      type: System.Object
    return:
      type: System.Object
  overridden: System.Reflection.FieldInfo.GetValue(System.Object)
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "\n<p>This method is not supported. </p>\n"
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Reflection.Emit.FieldBuilder.SetConstant(System.Object)
  commentId: M:System.Reflection.Emit.FieldBuilder.SetConstant(System.Object)
  id: SetConstant(System.Object)
  parent: System.Reflection.Emit.FieldBuilder
  langs:
  - csharp
  - vb
  name: SetConstant(Object)
  fullName: System.Reflection.Emit.FieldBuilder.SetConstant(System.Object)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Reflection/Emit/FieldBuilder.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: SetConstant
    path: src/mscorlib/src/System/Reflection/Emit/FieldBuilder.cs
    startLine: 210
  assemblies:
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  summary: "\n<p>Sets the default value of this field.</p>\n"
  remarks: "\n<p>\n<em>defaultValue</em> is restricted to the following types: <strong>Boolean</strong>, <strong>SByte</strong>, <strong>Int16</strong>, <strong>Int32</strong>, <strong>Int64</strong>, <strong>Byte</strong>, <strong>UInt16</strong>, <strong>UInt32</strong>, <strong>UInt64</strong>, <strong>Single</strong>, <strong>Double</strong>, <strong>DateTime</strong>, <strong>Char</strong>, <strong>String</strong>, and <strong>Enum</strong>. If the field type is a reference type, CLS compliance requires <em>defaultValue</em> to be <strong>null</strong>. However, starting with the .NET Framework 4, <em>defaultValue</em> can be non-null for a reference type as long as the value can be assigned to that reference type. For example, an <strong>Int32</strong> value can be assigned to a field of type <xref href=\"System.Object\" data-throw-if-not-resolved=\"false\"></xref>. This is not CLS-compliant, but it can be useful in interop scenarios.</p>\n"
  syntax:
    content: >-
      [SecuritySafeCritical]

      public void SetConstant(object defaultValue)
    content.vb: >-
      <SecuritySafeCritical>

      Public Sub SetConstant(defaultValue As Object)
    parameters:
    - id: defaultValue
      type: System.Object
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "\n<p>The containing type has been created using <xref href=\"System.Reflection.Emit.TypeBuilder.CreateType\" data-throw-if-not-resolved=\"false\"></xref>. </p>\n"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<p>The field is not one of the supported types.</p>\n<p>-or-</p>\n<p>The type of <em>defaultValue</em> does not match the type of the field.</p>\n<p>-or-</p>\n<p>The field is of type <xref href=\"System.Object\" data-throw-if-not-resolved=\"false\"></xref> or other reference type, <em>defaultValue</em> is not <strong>null</strong>, and the value cannot be assigned to the reference type.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Reflection.Emit.FieldBuilder.SetCustomAttribute(System.Reflection.ConstructorInfo,System.Byte[])
  commentId: M:System.Reflection.Emit.FieldBuilder.SetCustomAttribute(System.Reflection.ConstructorInfo,System.Byte[])
  id: SetCustomAttribute(System.Reflection.ConstructorInfo,System.Byte[])
  parent: System.Reflection.Emit.FieldBuilder
  langs:
  - csharp
  - vb
  name: SetCustomAttribute(ConstructorInfo, Byte[])
  fullName: System.Reflection.Emit.FieldBuilder.SetCustomAttribute(System.Reflection.ConstructorInfo, System.Byte[])
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Reflection/Emit/FieldBuilder.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: SetCustomAttribute
    path: src/mscorlib/src/System/Reflection/Emit/FieldBuilder.cs
    startLine: 220
  assemblies:
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  summary: "\n<p>Sets a custom attribute using a specified custom attribute blob.</p>\n"
  remarks: "\n<p>See the metadata specification in the ECMA Partition II documentation for details on how to format <em>binaryAttribute</em>. The documentation is available online; see <see href=\"http://go.microsoft.com/fwlink/?LinkID=99212\">ECMA C# and Common Language Infrastructure Standards</see> on MSDN and <see href=\"http://go.microsoft.com/fwlink/?LinkID=65552\">Standard ECMA-335 - Common Language Infrastructure (CLI)</see> on the Ecma International Web site.</p>\n"
  example:
  - "\n<p>The following code sample illustrates the use of <strong>SetCustomAttribute</strong> in the context of <xref href=\"System.Reflection.Emit.FieldBuilder\" data-throw-if-not-resolved=\"false\"></xref>, using a byte blob.</p>FieldBuilder_SetCustomAttributes#1"
  syntax:
    content: >-
      [SecurityCritical]

      [ComVisible(true)]

      public void SetCustomAttribute(ConstructorInfo con, byte[] binaryAttribute)
    content.vb: >-
      <SecurityCritical>

      <ComVisible(True)>

      Public Sub SetCustomAttribute(con As ConstructorInfo, binaryAttribute As Byte())
    parameters:
    - id: con
      type: System.Reflection.ConstructorInfo
    - id: binaryAttribute
      type: System.Byte[]
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>con</em> or <em>binaryAttribute</em> is <strong>null</strong>. </p>\n"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "\n<p>The parent type of this field is complete. </p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Reflection.Emit.FieldBuilder.SetCustomAttribute(System.Reflection.ConstructorInfo, System.Byte())
  name.vb: SetCustomAttribute(ConstructorInfo, Byte())
- uid: System.Reflection.Emit.FieldBuilder.SetCustomAttribute(System.Reflection.Emit.CustomAttributeBuilder)
  commentId: M:System.Reflection.Emit.FieldBuilder.SetCustomAttribute(System.Reflection.Emit.CustomAttributeBuilder)
  id: SetCustomAttribute(System.Reflection.Emit.CustomAttributeBuilder)
  parent: System.Reflection.Emit.FieldBuilder
  langs:
  - csharp
  - vb
  name: SetCustomAttribute(CustomAttributeBuilder)
  fullName: System.Reflection.Emit.FieldBuilder.SetCustomAttribute(System.Reflection.Emit.CustomAttributeBuilder)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Reflection/Emit/FieldBuilder.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: SetCustomAttribute
    path: src/mscorlib/src/System/Reflection/Emit/FieldBuilder.cs
    startLine: 242
  assemblies:
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  summary: "\n<p>Sets a custom attribute using a custom attribute builder.</p>\n"
  example:
  - "\n<p>The following code sample illustrates the use of <strong>SetCustomAttribute</strong> in the context of <xref href=\"System.Reflection.Emit.FieldBuilder\" data-throw-if-not-resolved=\"false\"></xref>, using a <xref href=\"System.Reflection.Emit.CustomAttributeBuilder\" data-throw-if-not-resolved=\"false\"></xref>.</p>FieldBuilder_SetCustomAttributes#1"
  syntax:
    content: >-
      [SecuritySafeCritical]

      public void SetCustomAttribute(CustomAttributeBuilder customBuilder)
    content.vb: >-
      <SecuritySafeCritical>

      Public Sub SetCustomAttribute(customBuilder As CustomAttributeBuilder)
    parameters:
    - id: customBuilder
      type: System.Reflection.Emit.CustomAttributeBuilder
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>con</em> is <strong>null</strong>. </p>\n"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "\n<p>The parent type of this field is complete. </p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Reflection.Emit.FieldBuilder.SetOffset(System.Int32)
  commentId: M:System.Reflection.Emit.FieldBuilder.SetOffset(System.Int32)
  id: SetOffset(System.Int32)
  parent: System.Reflection.Emit.FieldBuilder
  langs:
  - csharp
  - vb
  name: SetOffset(Int32)
  fullName: System.Reflection.Emit.FieldBuilder.SetOffset(System.Int32)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Reflection/Emit/FieldBuilder.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: SetOffset
    path: src/mscorlib/src/System/Reflection/Emit/FieldBuilder.cs
    startLine: 184
  assemblies:
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  summary: "\n<p>Specifies the field layout.</p>\n"
  remarks: "\n<p>The following code sample illustrates the use of <strong>SetOffset</strong>.</p>FieldBuilder_SetOffset#1"
  syntax:
    content: >-
      [SecurityCritical]

      public void SetOffset(int iOffset)
    content.vb: >-
      <SecurityCritical>

      Public Sub SetOffset(iOffset As Integer)
    parameters:
    - id: iOffset
      type: System.Int32
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "\n<p>The containing type has been created using <xref href=\"System.Reflection.Emit.TypeBuilder.CreateType\" data-throw-if-not-resolved=\"false\"></xref>. </p>\n"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<p>\n<em>iOffset</em> is less than zero.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: System.Reflection.Emit
  isExternal: false
  name: System.Reflection.Emit
  fullName: System.Reflection.Emit
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System.Reflection.MemberInfo
  parent: System.Reflection
  isExternal: false
  name: MemberInfo
  fullName: System.Reflection.MemberInfo
- uid: System.Reflection.FieldInfo
  parent: System.Reflection
  isExternal: false
  name: FieldInfo
  fullName: System.Reflection.FieldInfo
- uid: System.Reflection.ICustomAttributeProvider
  parent: System.Reflection
  isExternal: false
  name: ICustomAttributeProvider
  fullName: System.Reflection.ICustomAttributeProvider
- uid: System.Runtime.InteropServices._MemberInfo
  parent: System.Runtime.InteropServices
  isExternal: true
  name: _MemberInfo
  fullName: System.Runtime.InteropServices._MemberInfo
- uid: System.Runtime.InteropServices._FieldInfo
  parent: System.Runtime.InteropServices
  isExternal: true
  name: _FieldInfo
  fullName: System.Runtime.InteropServices._FieldInfo
- uid: System.Reflection.FieldInfo.GetFieldFromHandle(System.RuntimeFieldHandle)
  parent: System.Reflection.FieldInfo
  isExternal: true
  name: GetFieldFromHandle(RuntimeFieldHandle)
  fullName: System.Reflection.FieldInfo.GetFieldFromHandle(System.RuntimeFieldHandle)
  spec.csharp:
  - uid: System.Reflection.FieldInfo.GetFieldFromHandle(System.RuntimeFieldHandle)
    name: GetFieldFromHandle
    fullName: System.Reflection.FieldInfo.GetFieldFromHandle
    isExternal: true
  - name: (
    fullName: (
  - uid: System.RuntimeFieldHandle
    name: RuntimeFieldHandle
    fullName: System.RuntimeFieldHandle
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.FieldInfo.GetFieldFromHandle(System.RuntimeFieldHandle)
    name: GetFieldFromHandle
    fullName: System.Reflection.FieldInfo.GetFieldFromHandle
    isExternal: true
  - name: (
    fullName: (
  - uid: System.RuntimeFieldHandle
    name: RuntimeFieldHandle
    fullName: System.RuntimeFieldHandle
    isExternal: true
  - name: )
    fullName: )
- uid: System.Reflection.FieldInfo.GetFieldFromHandle(System.RuntimeFieldHandle,System.RuntimeTypeHandle)
  parent: System.Reflection.FieldInfo
  isExternal: true
  name: GetFieldFromHandle(RuntimeFieldHandle, RuntimeTypeHandle)
  fullName: System.Reflection.FieldInfo.GetFieldFromHandle(System.RuntimeFieldHandle, System.RuntimeTypeHandle)
  spec.csharp:
  - uid: System.Reflection.FieldInfo.GetFieldFromHandle(System.RuntimeFieldHandle,System.RuntimeTypeHandle)
    name: GetFieldFromHandle
    fullName: System.Reflection.FieldInfo.GetFieldFromHandle
    isExternal: true
  - name: (
    fullName: (
  - uid: System.RuntimeFieldHandle
    name: RuntimeFieldHandle
    fullName: System.RuntimeFieldHandle
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.RuntimeTypeHandle
    name: RuntimeTypeHandle
    fullName: System.RuntimeTypeHandle
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.FieldInfo.GetFieldFromHandle(System.RuntimeFieldHandle,System.RuntimeTypeHandle)
    name: GetFieldFromHandle
    fullName: System.Reflection.FieldInfo.GetFieldFromHandle
    isExternal: true
  - name: (
    fullName: (
  - uid: System.RuntimeFieldHandle
    name: RuntimeFieldHandle
    fullName: System.RuntimeFieldHandle
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.RuntimeTypeHandle
    name: RuntimeTypeHandle
    fullName: System.RuntimeTypeHandle
    isExternal: true
  - name: )
    fullName: )
- uid: System.Reflection.FieldInfo.Equals(System.Object)
  parent: System.Reflection.FieldInfo
  isExternal: true
  name: Equals(Object)
  fullName: System.Reflection.FieldInfo.Equals(System.Object)
  spec.csharp:
  - uid: System.Reflection.FieldInfo.Equals(System.Object)
    name: Equals
    fullName: System.Reflection.FieldInfo.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.FieldInfo.Equals(System.Object)
    name: Equals
    fullName: System.Reflection.FieldInfo.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Reflection.FieldInfo.GetHashCode
  parent: System.Reflection.FieldInfo
  isExternal: true
  name: GetHashCode()
  fullName: System.Reflection.FieldInfo.GetHashCode()
  spec.csharp:
  - uid: System.Reflection.FieldInfo.GetHashCode
    name: GetHashCode
    fullName: System.Reflection.FieldInfo.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.FieldInfo.GetHashCode
    name: GetHashCode
    fullName: System.Reflection.FieldInfo.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Reflection.FieldInfo.GetRequiredCustomModifiers
  parent: System.Reflection.FieldInfo
  isExternal: true
  name: GetRequiredCustomModifiers()
  fullName: System.Reflection.FieldInfo.GetRequiredCustomModifiers()
  spec.csharp:
  - uid: System.Reflection.FieldInfo.GetRequiredCustomModifiers
    name: GetRequiredCustomModifiers
    fullName: System.Reflection.FieldInfo.GetRequiredCustomModifiers
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.FieldInfo.GetRequiredCustomModifiers
    name: GetRequiredCustomModifiers
    fullName: System.Reflection.FieldInfo.GetRequiredCustomModifiers
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Reflection.FieldInfo.GetOptionalCustomModifiers
  parent: System.Reflection.FieldInfo
  isExternal: true
  name: GetOptionalCustomModifiers()
  fullName: System.Reflection.FieldInfo.GetOptionalCustomModifiers()
  spec.csharp:
  - uid: System.Reflection.FieldInfo.GetOptionalCustomModifiers
    name: GetOptionalCustomModifiers
    fullName: System.Reflection.FieldInfo.GetOptionalCustomModifiers
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.FieldInfo.GetOptionalCustomModifiers
    name: GetOptionalCustomModifiers
    fullName: System.Reflection.FieldInfo.GetOptionalCustomModifiers
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Reflection.FieldInfo.SetValueDirect(System.TypedReference,System.Object)
  parent: System.Reflection.FieldInfo
  isExternal: true
  name: SetValueDirect(TypedReference, Object)
  fullName: System.Reflection.FieldInfo.SetValueDirect(System.TypedReference, System.Object)
  spec.csharp:
  - uid: System.Reflection.FieldInfo.SetValueDirect(System.TypedReference,System.Object)
    name: SetValueDirect
    fullName: System.Reflection.FieldInfo.SetValueDirect
    isExternal: true
  - name: (
    fullName: (
  - uid: System.TypedReference
    name: TypedReference
    fullName: System.TypedReference
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.FieldInfo.SetValueDirect(System.TypedReference,System.Object)
    name: SetValueDirect
    fullName: System.Reflection.FieldInfo.SetValueDirect
    isExternal: true
  - name: (
    fullName: (
  - uid: System.TypedReference
    name: TypedReference
    fullName: System.TypedReference
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Reflection.FieldInfo.GetValueDirect(System.TypedReference)
  parent: System.Reflection.FieldInfo
  isExternal: true
  name: GetValueDirect(TypedReference)
  fullName: System.Reflection.FieldInfo.GetValueDirect(System.TypedReference)
  spec.csharp:
  - uid: System.Reflection.FieldInfo.GetValueDirect(System.TypedReference)
    name: GetValueDirect
    fullName: System.Reflection.FieldInfo.GetValueDirect
    isExternal: true
  - name: (
    fullName: (
  - uid: System.TypedReference
    name: TypedReference
    fullName: System.TypedReference
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.FieldInfo.GetValueDirect(System.TypedReference)
    name: GetValueDirect
    fullName: System.Reflection.FieldInfo.GetValueDirect
    isExternal: true
  - name: (
    fullName: (
  - uid: System.TypedReference
    name: TypedReference
    fullName: System.TypedReference
    isExternal: true
  - name: )
    fullName: )
- uid: System.Reflection.FieldInfo.GetRawConstantValue
  parent: System.Reflection.FieldInfo
  isExternal: true
  name: GetRawConstantValue()
  fullName: System.Reflection.FieldInfo.GetRawConstantValue()
  spec.csharp:
  - uid: System.Reflection.FieldInfo.GetRawConstantValue
    name: GetRawConstantValue
    fullName: System.Reflection.FieldInfo.GetRawConstantValue
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.FieldInfo.GetRawConstantValue
    name: GetRawConstantValue
    fullName: System.Reflection.FieldInfo.GetRawConstantValue
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Reflection.FieldInfo.SetValue(System.Object,System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Globalization.CultureInfo)
  parent: System.Reflection.FieldInfo
  isExternal: true
  name: SetValue(Object, Object, BindingFlags, Binder, CultureInfo)
  fullName: System.Reflection.FieldInfo.SetValue(System.Object, System.Object, System.Reflection.BindingFlags, System.Reflection.Binder, System.Globalization.CultureInfo)
  spec.csharp:
  - uid: System.Reflection.FieldInfo.SetValue(System.Object,System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Globalization.CultureInfo)
    name: SetValue
    fullName: System.Reflection.FieldInfo.SetValue
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.BindingFlags
    name: BindingFlags
    fullName: System.Reflection.BindingFlags
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.Binder
    name: Binder
    fullName: System.Reflection.Binder
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Globalization.CultureInfo
    name: CultureInfo
    fullName: System.Globalization.CultureInfo
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.FieldInfo.SetValue(System.Object,System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Globalization.CultureInfo)
    name: SetValue
    fullName: System.Reflection.FieldInfo.SetValue
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.BindingFlags
    name: BindingFlags
    fullName: System.Reflection.BindingFlags
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.Binder
    name: Binder
    fullName: System.Reflection.Binder
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Globalization.CultureInfo
    name: CultureInfo
    fullName: System.Globalization.CultureInfo
    isExternal: true
  - name: )
    fullName: )
- uid: System.Reflection.FieldInfo.SetValue(System.Object,System.Object)
  parent: System.Reflection.FieldInfo
  isExternal: true
  name: SetValue(Object, Object)
  fullName: System.Reflection.FieldInfo.SetValue(System.Object, System.Object)
  spec.csharp:
  - uid: System.Reflection.FieldInfo.SetValue(System.Object,System.Object)
    name: SetValue
    fullName: System.Reflection.FieldInfo.SetValue
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.FieldInfo.SetValue(System.Object,System.Object)
    name: SetValue
    fullName: System.Reflection.FieldInfo.SetValue
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Reflection.FieldInfo.System#Runtime#InteropServices#_FieldInfo#GetType
  parent: System.Reflection.FieldInfo
  isExternal: true
  name: _FieldInfo.GetType()
  fullName: System.Reflection.FieldInfo.System.Runtime.InteropServices._FieldInfo.GetType()
  name.vb: System.Runtime.InteropServices._FieldInfo.GetType()
  spec.csharp:
  - uid: System.Reflection.FieldInfo.System#Runtime#InteropServices#_FieldInfo#GetType
    name: _FieldInfo.GetType
    fullName: System.Reflection.FieldInfo.System.Runtime.InteropServices._FieldInfo.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.FieldInfo.System#Runtime#InteropServices#_FieldInfo#GetType
    name: System.Runtime.InteropServices._FieldInfo.GetType
    fullName: System.Reflection.FieldInfo.System.Runtime.InteropServices._FieldInfo.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Reflection.FieldInfo.System#Runtime#InteropServices#_FieldInfo#GetTypeInfoCount(System.UInt32@)
  parent: System.Reflection.FieldInfo
  isExternal: true
  name: _FieldInfo.GetTypeInfoCount(UInt32)
  fullName: System.Reflection.FieldInfo.System.Runtime.InteropServices._FieldInfo.GetTypeInfoCount(System.UInt32)
  name.vb: System.Runtime.InteropServices._FieldInfo.GetTypeInfoCount(UInt32)
  spec.csharp:
  - uid: System.Reflection.FieldInfo.System#Runtime#InteropServices#_FieldInfo#GetTypeInfoCount(System.UInt32@)
    name: _FieldInfo.GetTypeInfoCount
    fullName: System.Reflection.FieldInfo.System.Runtime.InteropServices._FieldInfo.GetTypeInfoCount
    isExternal: true
  - name: (
    fullName: (
  - uid: System.UInt32
    name: UInt32
    fullName: System.UInt32
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.FieldInfo.System#Runtime#InteropServices#_FieldInfo#GetTypeInfoCount(System.UInt32@)
    name: System.Runtime.InteropServices._FieldInfo.GetTypeInfoCount
    fullName: System.Reflection.FieldInfo.System.Runtime.InteropServices._FieldInfo.GetTypeInfoCount
    isExternal: true
  - name: (
    fullName: (
  - uid: System.UInt32
    name: UInt32
    fullName: System.UInt32
    isExternal: true
  - name: )
    fullName: )
- uid: System.Reflection.FieldInfo.System#Runtime#InteropServices#_FieldInfo#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)
  parent: System.Reflection.FieldInfo
  isExternal: true
  name: _FieldInfo.GetTypeInfo(UInt32, UInt32, IntPtr)
  fullName: System.Reflection.FieldInfo.System.Runtime.InteropServices._FieldInfo.GetTypeInfo(System.UInt32, System.UInt32, System.IntPtr)
  name.vb: System.Runtime.InteropServices._FieldInfo.GetTypeInfo(UInt32, UInt32, IntPtr)
  spec.csharp:
  - uid: System.Reflection.FieldInfo.System#Runtime#InteropServices#_FieldInfo#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)
    name: _FieldInfo.GetTypeInfo
    fullName: System.Reflection.FieldInfo.System.Runtime.InteropServices._FieldInfo.GetTypeInfo
    isExternal: true
  - name: (
    fullName: (
  - uid: System.UInt32
    name: UInt32
    fullName: System.UInt32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.UInt32
    name: UInt32
    fullName: System.UInt32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.IntPtr
    name: IntPtr
    fullName: System.IntPtr
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.FieldInfo.System#Runtime#InteropServices#_FieldInfo#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)
    name: System.Runtime.InteropServices._FieldInfo.GetTypeInfo
    fullName: System.Reflection.FieldInfo.System.Runtime.InteropServices._FieldInfo.GetTypeInfo
    isExternal: true
  - name: (
    fullName: (
  - uid: System.UInt32
    name: UInt32
    fullName: System.UInt32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.UInt32
    name: UInt32
    fullName: System.UInt32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.IntPtr
    name: IntPtr
    fullName: System.IntPtr
    isExternal: true
  - name: )
    fullName: )
- uid: System.Reflection.FieldInfo.System#Runtime#InteropServices#_FieldInfo#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)
  parent: System.Reflection.FieldInfo
  isExternal: true
  name: _FieldInfo.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)
  fullName: System.Reflection.FieldInfo.System.Runtime.InteropServices._FieldInfo.GetIDsOfNames(System.Guid, System.IntPtr, System.UInt32, System.UInt32, System.IntPtr)
  name.vb: System.Runtime.InteropServices._FieldInfo.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)
  spec.csharp:
  - uid: System.Reflection.FieldInfo.System#Runtime#InteropServices#_FieldInfo#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)
    name: _FieldInfo.GetIDsOfNames
    fullName: System.Reflection.FieldInfo.System.Runtime.InteropServices._FieldInfo.GetIDsOfNames
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Guid
    name: Guid
    fullName: System.Guid
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.IntPtr
    name: IntPtr
    fullName: System.IntPtr
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.UInt32
    name: UInt32
    fullName: System.UInt32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.UInt32
    name: UInt32
    fullName: System.UInt32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.IntPtr
    name: IntPtr
    fullName: System.IntPtr
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.FieldInfo.System#Runtime#InteropServices#_FieldInfo#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)
    name: System.Runtime.InteropServices._FieldInfo.GetIDsOfNames
    fullName: System.Reflection.FieldInfo.System.Runtime.InteropServices._FieldInfo.GetIDsOfNames
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Guid
    name: Guid
    fullName: System.Guid
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.IntPtr
    name: IntPtr
    fullName: System.IntPtr
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.UInt32
    name: UInt32
    fullName: System.UInt32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.UInt32
    name: UInt32
    fullName: System.UInt32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.IntPtr
    name: IntPtr
    fullName: System.IntPtr
    isExternal: true
  - name: )
    fullName: )
- uid: System.Reflection.FieldInfo.System#Runtime#InteropServices#_FieldInfo#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
  parent: System.Reflection.FieldInfo
  isExternal: true
  name: _FieldInfo.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)
  fullName: System.Reflection.FieldInfo.System.Runtime.InteropServices._FieldInfo.Invoke(System.UInt32, System.Guid, System.UInt32, System.Int16, System.IntPtr, System.IntPtr, System.IntPtr, System.IntPtr)
  name.vb: System.Runtime.InteropServices._FieldInfo.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)
  spec.csharp:
  - uid: System.Reflection.FieldInfo.System#Runtime#InteropServices#_FieldInfo#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
    name: _FieldInfo.Invoke
    fullName: System.Reflection.FieldInfo.System.Runtime.InteropServices._FieldInfo.Invoke
    isExternal: true
  - name: (
    fullName: (
  - uid: System.UInt32
    name: UInt32
    fullName: System.UInt32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Guid
    name: Guid
    fullName: System.Guid
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.UInt32
    name: UInt32
    fullName: System.UInt32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Int16
    name: Int16
    fullName: System.Int16
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.IntPtr
    name: IntPtr
    fullName: System.IntPtr
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.IntPtr
    name: IntPtr
    fullName: System.IntPtr
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.IntPtr
    name: IntPtr
    fullName: System.IntPtr
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.IntPtr
    name: IntPtr
    fullName: System.IntPtr
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.FieldInfo.System#Runtime#InteropServices#_FieldInfo#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
    name: System.Runtime.InteropServices._FieldInfo.Invoke
    fullName: System.Reflection.FieldInfo.System.Runtime.InteropServices._FieldInfo.Invoke
    isExternal: true
  - name: (
    fullName: (
  - uid: System.UInt32
    name: UInt32
    fullName: System.UInt32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Guid
    name: Guid
    fullName: System.Guid
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.UInt32
    name: UInt32
    fullName: System.UInt32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Int16
    name: Int16
    fullName: System.Int16
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.IntPtr
    name: IntPtr
    fullName: System.IntPtr
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.IntPtr
    name: IntPtr
    fullName: System.IntPtr
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.IntPtr
    name: IntPtr
    fullName: System.IntPtr
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.IntPtr
    name: IntPtr
    fullName: System.IntPtr
    isExternal: true
  - name: )
    fullName: )
- uid: System.Reflection.FieldInfo.MemberType
  parent: System.Reflection.FieldInfo
  isExternal: true
  name: MemberType
  fullName: System.Reflection.FieldInfo.MemberType
- uid: System.Reflection.FieldInfo.FieldHandle
  parent: System.Reflection.FieldInfo
  isExternal: true
  name: FieldHandle
  fullName: System.Reflection.FieldInfo.FieldHandle
- uid: System.Reflection.FieldInfo.IsPublic
  parent: System.Reflection.FieldInfo
  isExternal: true
  name: IsPublic
  fullName: System.Reflection.FieldInfo.IsPublic
- uid: System.Reflection.FieldInfo.IsPrivate
  parent: System.Reflection.FieldInfo
  isExternal: true
  name: IsPrivate
  fullName: System.Reflection.FieldInfo.IsPrivate
- uid: System.Reflection.FieldInfo.IsFamily
  parent: System.Reflection.FieldInfo
  isExternal: true
  name: IsFamily
  fullName: System.Reflection.FieldInfo.IsFamily
- uid: System.Reflection.FieldInfo.IsAssembly
  parent: System.Reflection.FieldInfo
  isExternal: true
  name: IsAssembly
  fullName: System.Reflection.FieldInfo.IsAssembly
- uid: System.Reflection.FieldInfo.IsFamilyAndAssembly
  parent: System.Reflection.FieldInfo
  isExternal: true
  name: IsFamilyAndAssembly
  fullName: System.Reflection.FieldInfo.IsFamilyAndAssembly
- uid: System.Reflection.FieldInfo.IsFamilyOrAssembly
  parent: System.Reflection.FieldInfo
  isExternal: true
  name: IsFamilyOrAssembly
  fullName: System.Reflection.FieldInfo.IsFamilyOrAssembly
- uid: System.Reflection.FieldInfo.IsStatic
  parent: System.Reflection.FieldInfo
  isExternal: true
  name: IsStatic
  fullName: System.Reflection.FieldInfo.IsStatic
- uid: System.Reflection.FieldInfo.IsInitOnly
  parent: System.Reflection.FieldInfo
  isExternal: true
  name: IsInitOnly
  fullName: System.Reflection.FieldInfo.IsInitOnly
- uid: System.Reflection.FieldInfo.IsLiteral
  parent: System.Reflection.FieldInfo
  isExternal: true
  name: IsLiteral
  fullName: System.Reflection.FieldInfo.IsLiteral
- uid: System.Reflection.FieldInfo.IsNotSerialized
  parent: System.Reflection.FieldInfo
  isExternal: true
  name: IsNotSerialized
  fullName: System.Reflection.FieldInfo.IsNotSerialized
- uid: System.Reflection.FieldInfo.IsSpecialName
  parent: System.Reflection.FieldInfo
  isExternal: true
  name: IsSpecialName
  fullName: System.Reflection.FieldInfo.IsSpecialName
- uid: System.Reflection.FieldInfo.IsPinvokeImpl
  parent: System.Reflection.FieldInfo
  isExternal: true
  name: IsPinvokeImpl
  fullName: System.Reflection.FieldInfo.IsPinvokeImpl
- uid: System.Reflection.FieldInfo.IsSecurityCritical
  parent: System.Reflection.FieldInfo
  isExternal: true
  name: IsSecurityCritical
  fullName: System.Reflection.FieldInfo.IsSecurityCritical
- uid: System.Reflection.FieldInfo.IsSecuritySafeCritical
  parent: System.Reflection.FieldInfo
  isExternal: true
  name: IsSecuritySafeCritical
  fullName: System.Reflection.FieldInfo.IsSecuritySafeCritical
- uid: System.Reflection.FieldInfo.IsSecurityTransparent
  parent: System.Reflection.FieldInfo
  isExternal: true
  name: IsSecurityTransparent
  fullName: System.Reflection.FieldInfo.IsSecurityTransparent
- uid: System.Reflection.MemberInfo.GetCustomAttributes(System.Boolean)
  parent: System.Reflection.MemberInfo
  isExternal: true
  name: GetCustomAttributes(Boolean)
  fullName: System.Reflection.MemberInfo.GetCustomAttributes(System.Boolean)
  spec.csharp:
  - uid: System.Reflection.MemberInfo.GetCustomAttributes(System.Boolean)
    name: GetCustomAttributes
    fullName: System.Reflection.MemberInfo.GetCustomAttributes
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.MemberInfo.GetCustomAttributes(System.Boolean)
    name: GetCustomAttributes
    fullName: System.Reflection.MemberInfo.GetCustomAttributes
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
- uid: System.Reflection.MemberInfo.GetCustomAttributes(System.Type,System.Boolean)
  parent: System.Reflection.MemberInfo
  isExternal: true
  name: GetCustomAttributes(Type, Boolean)
  fullName: System.Reflection.MemberInfo.GetCustomAttributes(System.Type, System.Boolean)
  spec.csharp:
  - uid: System.Reflection.MemberInfo.GetCustomAttributes(System.Type,System.Boolean)
    name: GetCustomAttributes
    fullName: System.Reflection.MemberInfo.GetCustomAttributes
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.MemberInfo.GetCustomAttributes(System.Type,System.Boolean)
    name: GetCustomAttributes
    fullName: System.Reflection.MemberInfo.GetCustomAttributes
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
- uid: System.Reflection.MemberInfo.IsDefined(System.Type,System.Boolean)
  parent: System.Reflection.MemberInfo
  isExternal: true
  name: IsDefined(Type, Boolean)
  fullName: System.Reflection.MemberInfo.IsDefined(System.Type, System.Boolean)
  spec.csharp:
  - uid: System.Reflection.MemberInfo.IsDefined(System.Type,System.Boolean)
    name: IsDefined
    fullName: System.Reflection.MemberInfo.IsDefined
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.MemberInfo.IsDefined(System.Type,System.Boolean)
    name: IsDefined
    fullName: System.Reflection.MemberInfo.IsDefined
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
- uid: System.Reflection.MemberInfo.GetCustomAttributesData
  parent: System.Reflection.MemberInfo
  isExternal: true
  name: GetCustomAttributesData()
  fullName: System.Reflection.MemberInfo.GetCustomAttributesData()
  spec.csharp:
  - uid: System.Reflection.MemberInfo.GetCustomAttributesData
    name: GetCustomAttributesData
    fullName: System.Reflection.MemberInfo.GetCustomAttributesData
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.MemberInfo.GetCustomAttributesData
    name: GetCustomAttributesData
    fullName: System.Reflection.MemberInfo.GetCustomAttributesData
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Reflection.MemberInfo.System#Runtime#InteropServices#_MemberInfo#GetType
  parent: System.Reflection.MemberInfo
  isExternal: true
  name: _MemberInfo.GetType()
  fullName: System.Reflection.MemberInfo.System.Runtime.InteropServices._MemberInfo.GetType()
  name.vb: System.Runtime.InteropServices._MemberInfo.GetType()
  spec.csharp:
  - uid: System.Reflection.MemberInfo.System#Runtime#InteropServices#_MemberInfo#GetType
    name: _MemberInfo.GetType
    fullName: System.Reflection.MemberInfo.System.Runtime.InteropServices._MemberInfo.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.MemberInfo.System#Runtime#InteropServices#_MemberInfo#GetType
    name: System.Runtime.InteropServices._MemberInfo.GetType
    fullName: System.Reflection.MemberInfo.System.Runtime.InteropServices._MemberInfo.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Reflection.MemberInfo.System#Runtime#InteropServices#_MemberInfo#GetTypeInfoCount(System.UInt32@)
  parent: System.Reflection.MemberInfo
  isExternal: true
  name: _MemberInfo.GetTypeInfoCount(UInt32)
  fullName: System.Reflection.MemberInfo.System.Runtime.InteropServices._MemberInfo.GetTypeInfoCount(System.UInt32)
  name.vb: System.Runtime.InteropServices._MemberInfo.GetTypeInfoCount(UInt32)
  spec.csharp:
  - uid: System.Reflection.MemberInfo.System#Runtime#InteropServices#_MemberInfo#GetTypeInfoCount(System.UInt32@)
    name: _MemberInfo.GetTypeInfoCount
    fullName: System.Reflection.MemberInfo.System.Runtime.InteropServices._MemberInfo.GetTypeInfoCount
    isExternal: true
  - name: (
    fullName: (
  - uid: System.UInt32
    name: UInt32
    fullName: System.UInt32
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.MemberInfo.System#Runtime#InteropServices#_MemberInfo#GetTypeInfoCount(System.UInt32@)
    name: System.Runtime.InteropServices._MemberInfo.GetTypeInfoCount
    fullName: System.Reflection.MemberInfo.System.Runtime.InteropServices._MemberInfo.GetTypeInfoCount
    isExternal: true
  - name: (
    fullName: (
  - uid: System.UInt32
    name: UInt32
    fullName: System.UInt32
    isExternal: true
  - name: )
    fullName: )
- uid: System.Reflection.MemberInfo.System#Runtime#InteropServices#_MemberInfo#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)
  parent: System.Reflection.MemberInfo
  isExternal: true
  name: _MemberInfo.GetTypeInfo(UInt32, UInt32, IntPtr)
  fullName: System.Reflection.MemberInfo.System.Runtime.InteropServices._MemberInfo.GetTypeInfo(System.UInt32, System.UInt32, System.IntPtr)
  name.vb: System.Runtime.InteropServices._MemberInfo.GetTypeInfo(UInt32, UInt32, IntPtr)
  spec.csharp:
  - uid: System.Reflection.MemberInfo.System#Runtime#InteropServices#_MemberInfo#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)
    name: _MemberInfo.GetTypeInfo
    fullName: System.Reflection.MemberInfo.System.Runtime.InteropServices._MemberInfo.GetTypeInfo
    isExternal: true
  - name: (
    fullName: (
  - uid: System.UInt32
    name: UInt32
    fullName: System.UInt32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.UInt32
    name: UInt32
    fullName: System.UInt32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.IntPtr
    name: IntPtr
    fullName: System.IntPtr
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.MemberInfo.System#Runtime#InteropServices#_MemberInfo#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)
    name: System.Runtime.InteropServices._MemberInfo.GetTypeInfo
    fullName: System.Reflection.MemberInfo.System.Runtime.InteropServices._MemberInfo.GetTypeInfo
    isExternal: true
  - name: (
    fullName: (
  - uid: System.UInt32
    name: UInt32
    fullName: System.UInt32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.UInt32
    name: UInt32
    fullName: System.UInt32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.IntPtr
    name: IntPtr
    fullName: System.IntPtr
    isExternal: true
  - name: )
    fullName: )
- uid: System.Reflection.MemberInfo.System#Runtime#InteropServices#_MemberInfo#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)
  parent: System.Reflection.MemberInfo
  isExternal: true
  name: _MemberInfo.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)
  fullName: System.Reflection.MemberInfo.System.Runtime.InteropServices._MemberInfo.GetIDsOfNames(System.Guid, System.IntPtr, System.UInt32, System.UInt32, System.IntPtr)
  name.vb: System.Runtime.InteropServices._MemberInfo.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)
  spec.csharp:
  - uid: System.Reflection.MemberInfo.System#Runtime#InteropServices#_MemberInfo#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)
    name: _MemberInfo.GetIDsOfNames
    fullName: System.Reflection.MemberInfo.System.Runtime.InteropServices._MemberInfo.GetIDsOfNames
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Guid
    name: Guid
    fullName: System.Guid
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.IntPtr
    name: IntPtr
    fullName: System.IntPtr
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.UInt32
    name: UInt32
    fullName: System.UInt32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.UInt32
    name: UInt32
    fullName: System.UInt32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.IntPtr
    name: IntPtr
    fullName: System.IntPtr
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.MemberInfo.System#Runtime#InteropServices#_MemberInfo#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)
    name: System.Runtime.InteropServices._MemberInfo.GetIDsOfNames
    fullName: System.Reflection.MemberInfo.System.Runtime.InteropServices._MemberInfo.GetIDsOfNames
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Guid
    name: Guid
    fullName: System.Guid
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.IntPtr
    name: IntPtr
    fullName: System.IntPtr
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.UInt32
    name: UInt32
    fullName: System.UInt32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.UInt32
    name: UInt32
    fullName: System.UInt32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.IntPtr
    name: IntPtr
    fullName: System.IntPtr
    isExternal: true
  - name: )
    fullName: )
- uid: System.Reflection.MemberInfo.System#Runtime#InteropServices#_MemberInfo#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
  parent: System.Reflection.MemberInfo
  isExternal: true
  name: _MemberInfo.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)
  fullName: System.Reflection.MemberInfo.System.Runtime.InteropServices._MemberInfo.Invoke(System.UInt32, System.Guid, System.UInt32, System.Int16, System.IntPtr, System.IntPtr, System.IntPtr, System.IntPtr)
  name.vb: System.Runtime.InteropServices._MemberInfo.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)
  spec.csharp:
  - uid: System.Reflection.MemberInfo.System#Runtime#InteropServices#_MemberInfo#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
    name: _MemberInfo.Invoke
    fullName: System.Reflection.MemberInfo.System.Runtime.InteropServices._MemberInfo.Invoke
    isExternal: true
  - name: (
    fullName: (
  - uid: System.UInt32
    name: UInt32
    fullName: System.UInt32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Guid
    name: Guid
    fullName: System.Guid
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.UInt32
    name: UInt32
    fullName: System.UInt32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Int16
    name: Int16
    fullName: System.Int16
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.IntPtr
    name: IntPtr
    fullName: System.IntPtr
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.IntPtr
    name: IntPtr
    fullName: System.IntPtr
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.IntPtr
    name: IntPtr
    fullName: System.IntPtr
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.IntPtr
    name: IntPtr
    fullName: System.IntPtr
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.MemberInfo.System#Runtime#InteropServices#_MemberInfo#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
    name: System.Runtime.InteropServices._MemberInfo.Invoke
    fullName: System.Reflection.MemberInfo.System.Runtime.InteropServices._MemberInfo.Invoke
    isExternal: true
  - name: (
    fullName: (
  - uid: System.UInt32
    name: UInt32
    fullName: System.UInt32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Guid
    name: Guid
    fullName: System.Guid
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.UInt32
    name: UInt32
    fullName: System.UInt32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Int16
    name: Int16
    fullName: System.Int16
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.IntPtr
    name: IntPtr
    fullName: System.IntPtr
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.IntPtr
    name: IntPtr
    fullName: System.IntPtr
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.IntPtr
    name: IntPtr
    fullName: System.IntPtr
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.IntPtr
    name: IntPtr
    fullName: System.IntPtr
    isExternal: true
  - name: )
    fullName: )
- uid: System.Reflection.MemberInfo.ReflectedType
  parent: System.Reflection.MemberInfo
  isExternal: true
  name: ReflectedType
  fullName: System.Reflection.MemberInfo.ReflectedType
- uid: System.Reflection.MemberInfo.CustomAttributes
  parent: System.Reflection.MemberInfo
  isExternal: false
  name: CustomAttributes
  fullName: System.Reflection.MemberInfo.CustomAttributes
- uid: System.Reflection.MemberInfo.MetadataToken
  parent: System.Reflection.MemberInfo
  isExternal: false
  name: MetadataToken
  fullName: System.Reflection.MemberInfo.MetadataToken
- uid: System.Reflection.MemberInfo.Module
  parent: System.Reflection.MemberInfo
  isExternal: false
  name: Module
  fullName: System.Reflection.MemberInfo.Module
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Reflection
  isExternal: false
  name: System.Reflection
  fullName: System.Reflection
- uid: System.Runtime.InteropServices
  isExternal: false
  name: System.Runtime.InteropServices
  fullName: System.Runtime.InteropServices
- uid: System.Reflection.FieldInfo.Attributes
  parent: System.Reflection.FieldInfo
  isExternal: true
  name: Attributes
  fullName: System.Reflection.FieldInfo.Attributes
- uid: System.Reflection.FieldAttributes
  parent: System.Reflection
  isExternal: false
  name: FieldAttributes
  fullName: System.Reflection.FieldAttributes
- uid: System.Reflection.MemberInfo.DeclaringType
  parent: System.Reflection.MemberInfo
  isExternal: false
  name: DeclaringType
  fullName: System.Reflection.MemberInfo.DeclaringType
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  fullName: System.Type
- uid: System.Reflection.FieldInfo.FieldType
  parent: System.Reflection.FieldInfo
  isExternal: true
  name: FieldType
  fullName: System.Reflection.FieldInfo.FieldType
- uid: System.Reflection.MemberInfo.Name
  parent: System.Reflection.MemberInfo
  isExternal: false
  name: Name
  fullName: System.Reflection.MemberInfo.Name
- uid: System.String
  parent: System
  isExternal: false
  name: String
  fullName: System.String
- uid: System.Reflection.FieldInfo.GetValue(System.Object)
  parent: System.Reflection.FieldInfo
  isExternal: true
  name: GetValue(Object)
  fullName: System.Reflection.FieldInfo.GetValue(System.Object)
  spec.csharp:
  - uid: System.Reflection.FieldInfo.GetValue(System.Object)
    name: GetValue
    fullName: System.Reflection.FieldInfo.GetValue
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.FieldInfo.GetValue(System.Object)
    name: GetValue
    fullName: System.Reflection.FieldInfo.GetValue
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Reflection.ConstructorInfo
  parent: System.Reflection
  isExternal: false
  name: ConstructorInfo
  fullName: System.Reflection.ConstructorInfo
- uid: System.Byte[]
  isExternal: true
  name: Byte[]
  fullName: System.Byte[]
  fullname.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    fullName: ()
- uid: System.Reflection.Emit.CustomAttributeBuilder
  parent: System.Reflection.Emit
  isExternal: false
  name: CustomAttributeBuilder
  fullName: System.Reflection.Emit.CustomAttributeBuilder
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  fullName: System.Int32
- uid: System.NotSupportedException
  parent: System
  isExternal: false
  name: NotSupportedException
  fullName: System.NotSupportedException
- uid: System.InvalidOperationException
  parent: System
  isExternal: false
  name: InvalidOperationException
  fullName: System.InvalidOperationException
- uid: System.ArgumentException
  parent: System
  isExternal: false
  name: ArgumentException
  fullName: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: false
  name: ArgumentNullException
  fullName: System.ArgumentNullException
