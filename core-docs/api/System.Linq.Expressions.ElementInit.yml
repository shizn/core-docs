items:
- uid: System.Linq.Expressions.ElementInit
  commentId: T:System.Linq.Expressions.ElementInit
  id: ElementInit
  parent: System.Linq.Expressions
  children:
  - System.Linq.Expressions.ElementInit.AddMethod
  - System.Linq.Expressions.ElementInit.Arguments
  - System.Linq.Expressions.ElementInit.System#Linq#Expressions#IArgumentProvider#ArgumentCount
  - System.Linq.Expressions.ElementInit.System#Linq#Expressions#IArgumentProvider#GetArgument(System.Int32)
  - System.Linq.Expressions.ElementInit.ToString
  - System.Linq.Expressions.ElementInit.Update(System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  langs:
  - csharp
  - vb
  name: ElementInit
  fullName: System.Linq.Expressions.ElementInit
  type: Class
  source:
    remote:
      path: src/System.Linq.Expressions/src/System/Linq/Expressions/ElementInit.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ElementInit
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/ElementInit.cs
    startLine: 16
  assemblies:
  - System.Linq.Expressions
  namespace: System.Linq.Expressions
  syntax:
    content: 'public sealed class ElementInit : object, IArgumentProvider'
    content.vb: >-
      Public NotInheritable Class ElementInit
          Inherits Object
          Implements IArgumentProvider
  inheritance:
  - System.Object
  implements:
  - System.Linq.Expressions.IArgumentProvider
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: System.Linq.Expressions.ElementInit.AddMethod
  commentId: P:System.Linq.Expressions.ElementInit.AddMethod
  id: AddMethod
  parent: System.Linq.Expressions.ElementInit
  langs:
  - csharp
  - vb
  name: AddMethod
  fullName: System.Linq.Expressions.ElementInit.AddMethod
  type: Property
  source:
    remote:
      path: src/System.Linq.Expressions/src/System/Linq/Expressions/ElementInit.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: AddMethod
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/ElementInit.cs
    startLine: 29
  assemblies:
  - System.Linq.Expressions
  namespace: System.Linq.Expressions
  syntax:
    content: public MethodInfo AddMethod { get; }
    content.vb: Public ReadOnly Property AddMethod As MethodInfo
    parameters: []
    return:
      type: MethodInfo
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Linq.Expressions.ElementInit.Arguments
  commentId: P:System.Linq.Expressions.ElementInit.Arguments
  id: Arguments
  parent: System.Linq.Expressions.ElementInit
  langs:
  - csharp
  - vb
  name: Arguments
  fullName: System.Linq.Expressions.ElementInit.Arguments
  type: Property
  source:
    remote:
      path: src/System.Linq.Expressions/src/System/Linq/Expressions/ElementInit.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Arguments
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/ElementInit.cs
    startLine: 37
  assemblies:
  - System.Linq.Expressions
  namespace: System.Linq.Expressions
  syntax:
    content: public ReadOnlyCollection<Expression> Arguments { get; }
    content.vb: Public ReadOnly Property Arguments As ReadOnlyCollection(Of Expression)
    parameters: []
    return:
      type: ReadOnlyCollection{System.Linq.Expressions.Expression}
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Linq.Expressions.ElementInit.System#Linq#Expressions#IArgumentProvider#ArgumentCount
  commentId: P:System.Linq.Expressions.ElementInit.System#Linq#Expressions#IArgumentProvider#ArgumentCount
  id: System#Linq#Expressions#IArgumentProvider#ArgumentCount
  isEii: true
  parent: System.Linq.Expressions.ElementInit
  langs:
  - csharp
  - vb
  name: IArgumentProvider.ArgumentCount
  fullName: System.Linq.Expressions.ElementInit.System.Linq.Expressions.IArgumentProvider.ArgumentCount
  type: Property
  source:
    remote:
      path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: System.Linq.Expressions.IArgumentProvider.ArgumentCount
    path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs
    startLine: 114
  assemblies:
  - System.Linq.Expressions
  namespace: System.Linq.Expressions
  syntax:
    content: int IArgumentProvider.ArgumentCount { get; }
    content.vb: ReadOnly WriteOnly Property System.Linq.Expressions.IArgumentProvider.ArgumentCount As Integer Implements IArgumentProvider.ArgumentCount
    parameters: []
    return:
      type: System.Int32
  implements:
  - System.Linq.Expressions.IArgumentProvider.ArgumentCount
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
  name.vb: System.Linq.Expressions.IArgumentProvider.ArgumentCount
- uid: System.Linq.Expressions.ElementInit.System#Linq#Expressions#IArgumentProvider#GetArgument(System.Int32)
  commentId: M:System.Linq.Expressions.ElementInit.System#Linq#Expressions#IArgumentProvider#GetArgument(System.Int32)
  id: System#Linq#Expressions#IArgumentProvider#GetArgument(System.Int32)
  isEii: true
  parent: System.Linq.Expressions.ElementInit
  langs:
  - csharp
  - vb
  name: IArgumentProvider.GetArgument(Int32)
  fullName: System.Linq.Expressions.ElementInit.System.Linq.Expressions.IArgumentProvider.GetArgument(System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: System.Linq.Expressions.IArgumentProvider.GetArgument
    path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs
    startLine: 115
  assemblies:
  - System.Linq.Expressions
  namespace: System.Linq.Expressions
  syntax:
    content: Expression IArgumentProvider.GetArgument(int index)
    content.vb: Function System.Linq.Expressions.IArgumentProvider.GetArgument(index As Integer) As Expression Implements IArgumentProvider.GetArgument
    parameters:
    - id: index
      type: System.Int32
    return:
      type: System.Linq.Expressions.Expression
  implements:
  - System.Linq.Expressions.IArgumentProvider.GetArgument(System.Int32)
  name.vb: System.Linq.Expressions.IArgumentProvider.GetArgument(Int32)
- uid: System.Linq.Expressions.ElementInit.ToString
  commentId: M:System.Linq.Expressions.ElementInit.ToString
  id: ToString
  parent: System.Linq.Expressions.ElementInit
  langs:
  - csharp
  - vb
  name: ToString()
  fullName: System.Linq.Expressions.ElementInit.ToString()
  type: Method
  source:
    remote:
      path: src/System.Linq.Expressions/src/System/Linq/Expressions/ElementInit.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ToString
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/ElementInit.cs
    startLine: 59
  assemblies:
  - System.Linq.Expressions
  namespace: System.Linq.Expressions
  syntax:
    content: public override string ToString()
    content.vb: Public Overrides Function ToString As String
    return:
      type: System.String
      description: A <see cref="!:String"></see> representation of the node.
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Linq.Expressions.ElementInit.Update(System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  commentId: M:System.Linq.Expressions.ElementInit.Update(System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  id: Update(System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  parent: System.Linq.Expressions.ElementInit
  langs:
  - csharp
  - vb
  name: Update(Collections.Generic.IEnumerable<Expression>)
  fullName: System.Linq.Expressions.ElementInit.Update(System.Collections.Generic.IEnumerable<System.Linq.Expressions.Expression>)
  type: Method
  source:
    remote:
      path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Update
    path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs
    startLine: 117
  assemblies:
  - System.Linq.Expressions
  namespace: System.Linq.Expressions
  syntax:
    content: public ElementInit Update(Collections.Generic.IEnumerable<Expression> arguments)
    content.vb: Public Function Update(arguments As Collections.Generic.IEnumerable(Of Expression)) As ElementInit
    parameters:
    - id: arguments
      type: System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression}
    return:
      type: System.Linq.Expressions.ElementInit
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Linq.Expressions.ElementInit.Update(System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.Expression))
  name.vb: Update(Collections.Generic.IEnumerable(Of Expression))
references:
- uid: System.Linq.Expressions
  isExternal: false
  name: System.Linq.Expressions
  fullName: System.Linq.Expressions
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System.Linq.Expressions.IArgumentProvider
  parent: System.Linq.Expressions
  isExternal: false
  name: IArgumentProvider
  fullName: System.Linq.Expressions.IArgumentProvider
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Reflection.MethodInfo
  parent: System.Reflection
  isExternal: false
  name: Reflection.MethodInfo
  fullName: System.Reflection.MethodInfo
- uid: System.Reflection
  isExternal: false
  name: System.Reflection
  fullName: System.Reflection
- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.Linq.Expressions.Expression}
  definition: System.Collections.ObjectModel.ReadOnlyCollection`1
  name: Collections.ObjectModel.ReadOnlyCollection<Expression>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.Linq.Expressions.Expression>
  fullname.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of System.Linq.Expressions.Expression)
  name.vb: Collections.ObjectModel.ReadOnlyCollection(Of Expression)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: Collections.ObjectModel.ReadOnlyCollection
    fullName: System.Collections.ObjectModel.ReadOnlyCollection
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: Collections.ObjectModel.ReadOnlyCollection
    fullName: System.Collections.ObjectModel.ReadOnlyCollection
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: )
    fullName: )
- uid: System.Collections.ObjectModel.ReadOnlyCollection`1
  parent: System.Collections.ObjectModel
  isExternal: false
  name: Collections.ObjectModel.ReadOnlyCollection<>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<>
  fullname.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of )
  name.vb: Collections.ObjectModel.ReadOnlyCollection(Of )
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: Collections.ObjectModel.ReadOnlyCollection
    fullName: System.Collections.ObjectModel.ReadOnlyCollection
  - name: <
    fullName: <
  - {}
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: Collections.ObjectModel.ReadOnlyCollection
    fullName: System.Collections.ObjectModel.ReadOnlyCollection
  - name: '(Of '
    fullName: '(Of '
  - {}
  - name: )
    fullName: )
- uid: System.Collections.ObjectModel
  isExternal: false
  name: System.Collections.ObjectModel
  fullName: System.Collections.ObjectModel
- uid: System.Linq.Expressions.IArgumentProvider.ArgumentCount
  parent: System.Linq.Expressions.IArgumentProvider
  isExternal: false
  name: ArgumentCount
  fullName: System.Linq.Expressions.IArgumentProvider.ArgumentCount
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  fullName: System.Int32
- uid: System.Linq.Expressions.IArgumentProvider.GetArgument(System.Int32)
  parent: System.Linq.Expressions.IArgumentProvider
  isExternal: true
  name: GetArgument(Int32)
  fullName: System.Linq.Expressions.IArgumentProvider.GetArgument(System.Int32)
  spec.csharp:
  - uid: System.Linq.Expressions.IArgumentProvider.GetArgument(System.Int32)
    name: GetArgument
    fullName: System.Linq.Expressions.IArgumentProvider.GetArgument
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.IArgumentProvider.GetArgument(System.Int32)
    name: GetArgument
    fullName: System.Linq.Expressions.IArgumentProvider.GetArgument
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.String
  parent: System
  isExternal: false
  name: String
  fullName: System.String
- uid: System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression}
  definition: System.Collections.Generic.IEnumerable`1
  name: Collections.Generic.IEnumerable<Expression>
  fullName: System.Collections.Generic.IEnumerable<System.Linq.Expressions.Expression>
  fullname.vb: System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.Expression)
  name.vb: Collections.Generic.IEnumerable(Of Expression)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: Collections.Generic.IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: Collections.Generic.IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: )
    fullName: )
- uid: System.Linq.Expressions.ElementInit
  parent: System.Linq.Expressions
  isExternal: false
  name: ElementInit
  fullName: System.Linq.Expressions.ElementInit
- uid: System.Collections.Generic.IEnumerable`1
  parent: System.Collections.Generic
  isExternal: false
  name: Collections.Generic.IEnumerable<>
  fullName: System.Collections.Generic.IEnumerable<>
  fullname.vb: System.Collections.Generic.IEnumerable(Of )
  name.vb: Collections.Generic.IEnumerable(Of )
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: Collections.Generic.IEnumerable
    fullName: System.Collections.Generic.IEnumerable
  - name: <
    fullName: <
  - {}
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: Collections.Generic.IEnumerable
    fullName: System.Collections.Generic.IEnumerable
  - name: '(Of '
    fullName: '(Of '
  - {}
  - name: )
    fullName: )
- uid: System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  fullName: System.Collections.Generic
