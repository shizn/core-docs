items:
- uid: System.Net.Sockets.Socket
  commentId: T:System.Net.Sockets.Socket
  id: Socket
  parent: System.Net.Sockets
  children:
  - System.Net.Sockets.Socket.#ctor(System.Net.Sockets.AddressFamily,System.Net.Sockets.SocketType,System.Net.Sockets.ProtocolType)
  - System.Net.Sockets.Socket.#ctor(System.Net.Sockets.SocketType,System.Net.Sockets.ProtocolType)
  - System.Net.Sockets.Socket.Accept
  - System.Net.Sockets.Socket.AcceptAsync(System.Net.Sockets.SocketAsyncEventArgs)
  - System.Net.Sockets.Socket.AddressFamily
  - System.Net.Sockets.Socket.Available
  - System.Net.Sockets.Socket.Bind(System.Net.EndPoint)
  - System.Net.Sockets.Socket.Blocking
  - System.Net.Sockets.Socket.CancelConnectAsync(System.Net.Sockets.SocketAsyncEventArgs)
  - System.Net.Sockets.Socket.Connect(System.Net.EndPoint)
  - System.Net.Sockets.Socket.Connect(System.Net.IPAddress,System.Int32)
  - System.Net.Sockets.Socket.Connect(System.Net.IPAddress[],System.Int32)
  - System.Net.Sockets.Socket.Connect(System.String,System.Int32)
  - System.Net.Sockets.Socket.ConnectAsync(System.Net.Sockets.SocketAsyncEventArgs)
  - System.Net.Sockets.Socket.ConnectAsync(System.Net.Sockets.SocketType,System.Net.Sockets.ProtocolType,System.Net.Sockets.SocketAsyncEventArgs)
  - System.Net.Sockets.Socket.Connected
  - System.Net.Sockets.Socket.Dispose
  - System.Net.Sockets.Socket.Dispose(System.Boolean)
  - System.Net.Sockets.Socket.DontFragment
  - System.Net.Sockets.Socket.DualMode
  - System.Net.Sockets.Socket.EnableBroadcast
  - System.Net.Sockets.Socket.ExclusiveAddressUse
  - System.Net.Sockets.Socket.Finalize
  - System.Net.Sockets.Socket.GetSocketOption(System.Net.Sockets.SocketOptionLevel,System.Net.Sockets.SocketOptionName)
  - System.Net.Sockets.Socket.GetSocketOption(System.Net.Sockets.SocketOptionLevel,System.Net.Sockets.SocketOptionName,System.Byte[])
  - System.Net.Sockets.Socket.GetSocketOption(System.Net.Sockets.SocketOptionLevel,System.Net.Sockets.SocketOptionName,System.Int32)
  - System.Net.Sockets.Socket.IOControl(System.Int32,System.Byte[],System.Byte[])
  - System.Net.Sockets.Socket.IOControl(System.Net.Sockets.IOControlCode,System.Byte[],System.Byte[])
  - System.Net.Sockets.Socket.IsBound
  - System.Net.Sockets.Socket.LingerState
  - System.Net.Sockets.Socket.Listen(System.Int32)
  - System.Net.Sockets.Socket.LocalEndPoint
  - System.Net.Sockets.Socket.MulticastLoopback
  - System.Net.Sockets.Socket.NoDelay
  - System.Net.Sockets.Socket.OSSupportsIPv4
  - System.Net.Sockets.Socket.OSSupportsIPv6
  - System.Net.Sockets.Socket.Poll(System.Int32,System.Net.Sockets.SelectMode)
  - System.Net.Sockets.Socket.ProtocolType
  - System.Net.Sockets.Socket.Receive(System.Byte[])
  - System.Net.Sockets.Socket.Receive(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags)
  - System.Net.Sockets.Socket.Receive(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.Sockets.SocketError@)
  - System.Net.Sockets.Socket.Receive(System.Byte[],System.Int32,System.Net.Sockets.SocketFlags)
  - System.Net.Sockets.Socket.Receive(System.Byte[],System.Net.Sockets.SocketFlags)
  - System.Net.Sockets.Socket.Receive(System.Collections.Generic.IList{System.ArraySegment{System.Byte}})
  - System.Net.Sockets.Socket.Receive(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.Net.Sockets.SocketFlags)
  - System.Net.Sockets.Socket.Receive(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.Net.Sockets.SocketFlags,System.Net.Sockets.SocketError@)
  - System.Net.Sockets.Socket.ReceiveAsync(System.Net.Sockets.SocketAsyncEventArgs)
  - System.Net.Sockets.Socket.ReceiveBufferSize
  - System.Net.Sockets.Socket.ReceiveFrom(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.EndPoint@)
  - System.Net.Sockets.Socket.ReceiveFrom(System.Byte[],System.Int32,System.Net.Sockets.SocketFlags,System.Net.EndPoint@)
  - System.Net.Sockets.Socket.ReceiveFrom(System.Byte[],System.Net.EndPoint@)
  - System.Net.Sockets.Socket.ReceiveFrom(System.Byte[],System.Net.Sockets.SocketFlags,System.Net.EndPoint@)
  - System.Net.Sockets.Socket.ReceiveFromAsync(System.Net.Sockets.SocketAsyncEventArgs)
  - System.Net.Sockets.Socket.ReceiveMessageFrom(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags@,System.Net.EndPoint@,System.Net.Sockets.IPPacketInformation@)
  - System.Net.Sockets.Socket.ReceiveMessageFromAsync(System.Net.Sockets.SocketAsyncEventArgs)
  - System.Net.Sockets.Socket.ReceiveTimeout
  - System.Net.Sockets.Socket.RemoteEndPoint
  - System.Net.Sockets.Socket.Select(System.Collections.IList,System.Collections.IList,System.Collections.IList,System.Int32)
  - System.Net.Sockets.Socket.Send(System.Byte[])
  - System.Net.Sockets.Socket.Send(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags)
  - System.Net.Sockets.Socket.Send(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.Sockets.SocketError@)
  - System.Net.Sockets.Socket.Send(System.Byte[],System.Int32,System.Net.Sockets.SocketFlags)
  - System.Net.Sockets.Socket.Send(System.Byte[],System.Net.Sockets.SocketFlags)
  - System.Net.Sockets.Socket.Send(System.Collections.Generic.IList{System.ArraySegment{System.Byte}})
  - System.Net.Sockets.Socket.Send(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.Net.Sockets.SocketFlags)
  - System.Net.Sockets.Socket.Send(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.Net.Sockets.SocketFlags,System.Net.Sockets.SocketError@)
  - System.Net.Sockets.Socket.SendAsync(System.Net.Sockets.SocketAsyncEventArgs)
  - System.Net.Sockets.Socket.SendBufferSize
  - System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)
  - System.Net.Sockets.Socket.SendTimeout
  - System.Net.Sockets.Socket.SendTo(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.EndPoint)
  - System.Net.Sockets.Socket.SendTo(System.Byte[],System.Int32,System.Net.Sockets.SocketFlags,System.Net.EndPoint)
  - System.Net.Sockets.Socket.SendTo(System.Byte[],System.Net.EndPoint)
  - System.Net.Sockets.Socket.SendTo(System.Byte[],System.Net.Sockets.SocketFlags,System.Net.EndPoint)
  - System.Net.Sockets.Socket.SendToAsync(System.Net.Sockets.SocketAsyncEventArgs)
  - System.Net.Sockets.Socket.SetSocketOption(System.Net.Sockets.SocketOptionLevel,System.Net.Sockets.SocketOptionName,System.Boolean)
  - System.Net.Sockets.Socket.SetSocketOption(System.Net.Sockets.SocketOptionLevel,System.Net.Sockets.SocketOptionName,System.Byte[])
  - System.Net.Sockets.Socket.SetSocketOption(System.Net.Sockets.SocketOptionLevel,System.Net.Sockets.SocketOptionName,System.Int32)
  - System.Net.Sockets.Socket.SetSocketOption(System.Net.Sockets.SocketOptionLevel,System.Net.Sockets.SocketOptionName,System.Object)
  - System.Net.Sockets.Socket.Shutdown(System.Net.Sockets.SocketShutdown)
  - System.Net.Sockets.Socket.SocketType
  - System.Net.Sockets.Socket.Ttl
  langs:
  - csharp
  - vb
  name: Socket
  fullName: System.Net.Sockets.Socket
  type: Class
  source:
    remote:
      path: src/System.Net.Sockets/src/System/Net/Sockets/Socket.Windows.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Socket
    path: src/System.Net.Sockets/src/System/Net/Sockets/Socket.Windows.cs
    startLine: 17
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  syntax:
    content: 'public class Socket : IDisposable'
    content.vb: >-
      Public Class Socket
          Inherits IDisposable
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: System.Net.Sockets.Socket.#ctor(System.Net.Sockets.AddressFamily,System.Net.Sockets.SocketType,System.Net.Sockets.ProtocolType)
  commentId: M:System.Net.Sockets.Socket.#ctor(System.Net.Sockets.AddressFamily,System.Net.Sockets.SocketType,System.Net.Sockets.ProtocolType)
  id: '#ctor(System.Net.Sockets.AddressFamily,System.Net.Sockets.SocketType,System.Net.Sockets.ProtocolType)'
  parent: System.Net.Sockets.Socket
  langs:
  - csharp
  - vb
  name: Socket(AddressFamily, SocketType, ProtocolType)
  fullName: System.Net.Sockets.Socket.Socket(System.Net.Sockets.AddressFamily, System.Net.Sockets.SocketType, System.Net.Sockets.ProtocolType)
  type: Constructor
  source:
    remote:
      path: src/System.Net.Sockets/ref/System.Net.Sockets.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Net.Sockets/ref/System.Net.Sockets.cs
    startLine: 160
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  syntax:
    content: public Socket(AddressFamily addressFamily, SocketType socketType, ProtocolType protocolType)
    content.vb: Public Sub New(addressFamily As AddressFamily, socketType As SocketType, protocolType As ProtocolType)
    parameters:
    - id: addressFamily
      type: System.Net.Sockets.AddressFamily
    - id: socketType
      type: System.Net.Sockets.SocketType
    - id: protocolType
      type: System.Net.Sockets.ProtocolType
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Net.Sockets.Socket.#ctor(System.Net.Sockets.SocketType,System.Net.Sockets.ProtocolType)
  commentId: M:System.Net.Sockets.Socket.#ctor(System.Net.Sockets.SocketType,System.Net.Sockets.ProtocolType)
  id: '#ctor(System.Net.Sockets.SocketType,System.Net.Sockets.ProtocolType)'
  parent: System.Net.Sockets.Socket
  langs:
  - csharp
  - vb
  name: Socket(SocketType, ProtocolType)
  fullName: System.Net.Sockets.Socket.Socket(System.Net.Sockets.SocketType, System.Net.Sockets.ProtocolType)
  type: Constructor
  source:
    remote:
      path: src/System.Net.Sockets/src/System/Net/Sockets/Socket.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Net.Sockets/src/System/Net/Sockets/Socket.cs
    startLine: 80
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  syntax:
    content: public Socket(SocketType socketType, ProtocolType protocolType)
    content.vb: Public Sub New(socketType As SocketType, protocolType As ProtocolType)
    parameters:
    - id: socketType
      type: System.Net.Sockets.SocketType
    - id: protocolType
      type: System.Net.Sockets.ProtocolType
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Net.Sockets.Socket.AddressFamily
  commentId: P:System.Net.Sockets.Socket.AddressFamily
  id: AddressFamily
  parent: System.Net.Sockets.Socket
  langs:
  - csharp
  - vb
  name: AddressFamily
  fullName: System.Net.Sockets.Socket.AddressFamily
  type: Property
  source:
    remote:
      path: src/System.Net.Sockets/src/System/Net/Sockets/Socket.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: AddressFamily
    path: src/System.Net.Sockets/src/System/Net/Sockets/Socket.cs
    startLine: 389
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  syntax:
    content: public AddressFamily AddressFamily { get; }
    content.vb: Public ReadOnly Property AddressFamily As AddressFamily
    parameters: []
    return:
      type: AddressFamily
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Net.Sockets.Socket.Available
  commentId: P:System.Net.Sockets.Socket.Available
  id: Available
  parent: System.Net.Sockets.Socket
  langs:
  - csharp
  - vb
  name: Available
  fullName: System.Net.Sockets.Socket.Available
  type: Property
  source:
    remote:
      path: src/System.Net.Sockets/src/System/Net/Sockets/Socket.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Available
    path: src/System.Net.Sockets/src/System/Net/Sockets/Socket.cs
    startLine: 173
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  syntax:
    content: public int Available { get; }
    content.vb: Public ReadOnly Property Available As Integer
    parameters: []
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Net.Sockets.Socket.Blocking
  commentId: P:System.Net.Sockets.Socket.Blocking
  id: Blocking
  parent: System.Net.Sockets.Socket
  langs:
  - csharp
  - vb
  name: Blocking
  fullName: System.Net.Sockets.Socket.Blocking
  type: Property
  source:
    remote:
      path: src/System.Net.Sockets/src/System/Net/Sockets/Socket.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Blocking
    path: src/System.Net.Sockets/src/System/Net/Sockets/Socket.cs
    startLine: 323
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  syntax:
    content: public bool Blocking { get; set; }
    content.vb: Public Property Blocking As Boolean
    parameters: []
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Net.Sockets.Socket.Connected
  commentId: P:System.Net.Sockets.Socket.Connected
  id: Connected
  parent: System.Net.Sockets.Socket
  langs:
  - csharp
  - vb
  name: Connected
  fullName: System.Net.Sockets.Socket.Connected
  type: Property
  source:
    remote:
      path: src/System.Net.Sockets/src/System/Net/Sockets/Socket.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Connected
    path: src/System.Net.Sockets/src/System/Net/Sockets/Socket.cs
    startLine: 367
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  syntax:
    content: public bool Connected { get; }
    content.vb: Public ReadOnly Property Connected As Boolean
    parameters: []
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Net.Sockets.Socket.DontFragment
  commentId: P:System.Net.Sockets.Socket.DontFragment
  id: DontFragment
  parent: System.Net.Sockets.Socket
  langs:
  - csharp
  - vb
  name: DontFragment
  fullName: System.Net.Sockets.Socket.DontFragment
  type: Property
  source:
    remote:
      path: src/System.Net.Sockets/src/System/Net/Sockets/Socket.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: DontFragment
    path: src/System.Net.Sockets/src/System/Net/Sockets/Socket.cs
    startLine: 583
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  syntax:
    content: public bool DontFragment { get; set; }
    content.vb: Public Property DontFragment As Boolean
    parameters: []
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Net.Sockets.Socket.DualMode
  commentId: P:System.Net.Sockets.Socket.DualMode
  id: DualMode
  parent: System.Net.Sockets.Socket
  langs:
  - csharp
  - vb
  name: DualMode
  fullName: System.Net.Sockets.Socket.DualMode
  type: Property
  source:
    remote:
      path: src/System.Net.Sockets/src/System/Net/Sockets/Socket.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: DualMode
    path: src/System.Net.Sockets/src/System/Net/Sockets/Socket.cs
    startLine: 662
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  syntax:
    content: public bool DualMode { get; set; }
    content.vb: Public Property DualMode As Boolean
    parameters: []
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Net.Sockets.Socket.EnableBroadcast
  commentId: P:System.Net.Sockets.Socket.EnableBroadcast
  id: EnableBroadcast
  parent: System.Net.Sockets.Socket
  langs:
  - csharp
  - vb
  name: EnableBroadcast
  fullName: System.Net.Sockets.Socket.EnableBroadcast
  type: Property
  source:
    remote:
      path: src/System.Net.Sockets/src/System/Net/Sockets/Socket.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: EnableBroadcast
    path: src/System.Net.Sockets/src/System/Net/Sockets/Socket.cs
    startLine: 646
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  syntax:
    content: public bool EnableBroadcast { get; set; }
    content.vb: Public Property EnableBroadcast As Boolean
    parameters: []
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Net.Sockets.Socket.ExclusiveAddressUse
  commentId: P:System.Net.Sockets.Socket.ExclusiveAddressUse
  id: ExclusiveAddressUse
  parent: System.Net.Sockets.Socket
  langs:
  - csharp
  - vb
  name: ExclusiveAddressUse
  fullName: System.Net.Sockets.Socket.ExclusiveAddressUse
  type: Property
  source:
    remote:
      path: src/System.Net.Sockets/src/System/Net/Sockets/Socket.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ExclusiveAddressUse
    path: src/System.Net.Sockets/src/System/Net/Sockets/Socket.cs
    startLine: 423
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  syntax:
    content: public bool ExclusiveAddressUse { get; set; }
    content.vb: Public Property ExclusiveAddressUse As Boolean
    parameters: []
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Net.Sockets.Socket.IsBound
  commentId: P:System.Net.Sockets.Socket.IsBound
  id: IsBound
  parent: System.Net.Sockets.Socket
  langs:
  - csharp
  - vb
  name: IsBound
  fullName: System.Net.Sockets.Socket.IsBound
  type: Property
  source:
    remote:
      path: src/System.Net.Sockets/src/System/Net/Sockets/Socket.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IsBound
    path: src/System.Net.Sockets/src/System/Net/Sockets/Socket.cs
    startLine: 415
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  syntax:
    content: public bool IsBound { get; }
    content.vb: Public ReadOnly Property IsBound As Boolean
    parameters: []
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Net.Sockets.Socket.LingerState
  commentId: P:System.Net.Sockets.Socket.LingerState
  id: LingerState
  parent: System.Net.Sockets.Socket
  langs:
  - csharp
  - vb
  name: LingerState
  fullName: System.Net.Sockets.Socket.LingerState
  type: Property
  source:
    remote:
      path: src/System.Net.Sockets/src/System/Net/Sockets/Socket.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: LingerState
    path: src/System.Net.Sockets/src/System/Net/Sockets/Socket.cs
    startLine: 517
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  syntax:
    content: public LingerOption LingerState { get; set; }
    content.vb: Public Property LingerState As LingerOption
    parameters: []
    return:
      type: System.Net.Sockets.LingerOption
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Net.Sockets.Socket.LocalEndPoint
  commentId: P:System.Net.Sockets.Socket.LocalEndPoint
  id: LocalEndPoint
  parent: System.Net.Sockets.Socket
  langs:
  - csharp
  - vb
  name: LocalEndPoint
  fullName: System.Net.Sockets.Socket.LocalEndPoint
  type: Property
  source:
    remote:
      path: src/System.Net.Sockets/src/System/Net/Sockets/Socket.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: LocalEndPoint
    path: src/System.Net.Sockets/src/System/Net/Sockets/Socket.cs
    startLine: 210
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  syntax:
    content: public EndPoint LocalEndPoint { get; }
    content.vb: Public ReadOnly Property LocalEndPoint As EndPoint
    parameters: []
    return:
      type: EndPoint
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Net.Sockets.Socket.MulticastLoopback
  commentId: P:System.Net.Sockets.Socket.MulticastLoopback
  id: MulticastLoopback
  parent: System.Net.Sockets.Socket
  langs:
  - csharp
  - vb
  name: MulticastLoopback
  fullName: System.Net.Sockets.Socket.MulticastLoopback
  type: Property
  source:
    remote:
      path: src/System.Net.Sockets/src/System/Net/Sockets/Socket.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: MulticastLoopback
    path: src/System.Net.Sockets/src/System/Net/Sockets/Socket.cs
    startLine: 610
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  syntax:
    content: public bool MulticastLoopback { get; set; }
    content.vb: Public Property MulticastLoopback As Boolean
    parameters: []
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Net.Sockets.Socket.NoDelay
  commentId: P:System.Net.Sockets.Socket.NoDelay
  id: NoDelay
  parent: System.Net.Sockets.Socket
  langs:
  - csharp
  - vb
  name: NoDelay
  fullName: System.Net.Sockets.Socket.NoDelay
  type: Property
  source:
    remote:
      path: src/System.Net.Sockets/src/System/Net/Sockets/Socket.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: NoDelay
    path: src/System.Net.Sockets/src/System/Net/Sockets/Socket.cs
    startLine: 529
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  syntax:
    content: public bool NoDelay { get; set; }
    content.vb: Public Property NoDelay As Boolean
    parameters: []
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Net.Sockets.Socket.OSSupportsIPv4
  commentId: P:System.Net.Sockets.Socket.OSSupportsIPv4
  id: OSSupportsIPv4
  parent: System.Net.Sockets.Socket
  langs:
  - csharp
  - vb
  name: OSSupportsIPv4
  fullName: System.Net.Sockets.Socket.OSSupportsIPv4
  type: Property
  source:
    remote:
      path: src/System.Net.Sockets/src/System/Net/Sockets/Socket.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: OSSupportsIPv4
    path: src/System.Net.Sockets/src/System/Net/Sockets/Socket.cs
    startLine: 153
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  syntax:
    content: public static bool OSSupportsIPv4 { get; }
    content.vb: Public Shared ReadOnly Property OSSupportsIPv4 As Boolean
    parameters: []
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: System.Net.Sockets.Socket.OSSupportsIPv6
  commentId: P:System.Net.Sockets.Socket.OSSupportsIPv6
  id: OSSupportsIPv6
  parent: System.Net.Sockets.Socket
  langs:
  - csharp
  - vb
  name: OSSupportsIPv6
  fullName: System.Net.Sockets.Socket.OSSupportsIPv6
  type: Property
  source:
    remote:
      path: src/System.Net.Sockets/src/System/Net/Sockets/Socket.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: OSSupportsIPv6
    path: src/System.Net.Sockets/src/System/Net/Sockets/Socket.cs
    startLine: 162
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  syntax:
    content: public static bool OSSupportsIPv6 { get; }
    content.vb: Public Shared ReadOnly Property OSSupportsIPv6 As Boolean
    parameters: []
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: System.Net.Sockets.Socket.ProtocolType
  commentId: P:System.Net.Sockets.Socket.ProtocolType
  id: ProtocolType
  parent: System.Net.Sockets.Socket
  langs:
  - csharp
  - vb
  name: ProtocolType
  fullName: System.Net.Sockets.Socket.ProtocolType
  type: Property
  source:
    remote:
      path: src/System.Net.Sockets/src/System/Net/Sockets/Socket.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ProtocolType
    path: src/System.Net.Sockets/src/System/Net/Sockets/Socket.cs
    startLine: 407
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  syntax:
    content: public ProtocolType ProtocolType { get; }
    content.vb: Public ReadOnly Property ProtocolType As ProtocolType
    parameters: []
    return:
      type: System.Net.Sockets.ProtocolType
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Net.Sockets.Socket.ReceiveBufferSize
  commentId: P:System.Net.Sockets.Socket.ReceiveBufferSize
  id: ReceiveBufferSize
  parent: System.Net.Sockets.Socket
  langs:
  - csharp
  - vb
  name: ReceiveBufferSize
  fullName: System.Net.Sockets.Socket.ReceiveBufferSize
  type: Property
  source:
    remote:
      path: src/System.Net.Sockets/src/System/Net/Sockets/Socket.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ReceiveBufferSize
    path: src/System.Net.Sockets/src/System/Net/Sockets/Socket.cs
    startLine: 439
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  syntax:
    content: public int ReceiveBufferSize { get; set; }
    content.vb: Public Property ReceiveBufferSize As Integer
    parameters: []
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Net.Sockets.Socket.ReceiveTimeout
  commentId: P:System.Net.Sockets.Socket.ReceiveTimeout
  id: ReceiveTimeout
  parent: System.Net.Sockets.Socket
  langs:
  - csharp
  - vb
  name: ReceiveTimeout
  fullName: System.Net.Sockets.Socket.ReceiveTimeout
  type: Property
  source:
    remote:
      path: src/System.Net.Sockets/src/System/Net/Sockets/Socket.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ReceiveTimeout
    path: src/System.Net.Sockets/src/System/Net/Sockets/Socket.cs
    startLine: 474
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  syntax:
    content: public int ReceiveTimeout { get; set; }
    content.vb: Public Property ReceiveTimeout As Integer
    parameters: []
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Net.Sockets.Socket.RemoteEndPoint
  commentId: P:System.Net.Sockets.Socket.RemoteEndPoint
  id: RemoteEndPoint
  parent: System.Net.Sockets.Socket
  langs:
  - csharp
  - vb
  name: RemoteEndPoint
  fullName: System.Net.Sockets.Socket.RemoteEndPoint
  type: Property
  source:
    remote:
      path: src/System.Net.Sockets/src/System/Net/Sockets/Socket.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: RemoteEndPoint
    path: src/System.Net.Sockets/src/System/Net/Sockets/Socket.cs
    startLine: 257
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  syntax:
    content: public EndPoint RemoteEndPoint { get; }
    content.vb: Public ReadOnly Property RemoteEndPoint As EndPoint
    parameters: []
    return:
      type: EndPoint
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Net.Sockets.Socket.SendBufferSize
  commentId: P:System.Net.Sockets.Socket.SendBufferSize
  id: SendBufferSize
  parent: System.Net.Sockets.Socket
  langs:
  - csharp
  - vb
  name: SendBufferSize
  fullName: System.Net.Sockets.Socket.SendBufferSize
  type: Property
  source:
    remote:
      path: src/System.Net.Sockets/src/System/Net/Sockets/Socket.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: SendBufferSize
    path: src/System.Net.Sockets/src/System/Net/Sockets/Socket.cs
    startLine: 456
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  syntax:
    content: public int SendBufferSize { get; set; }
    content.vb: Public Property SendBufferSize As Integer
    parameters: []
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Net.Sockets.Socket.SendTimeout
  commentId: P:System.Net.Sockets.Socket.SendTimeout
  id: SendTimeout
  parent: System.Net.Sockets.Socket
  langs:
  - csharp
  - vb
  name: SendTimeout
  fullName: System.Net.Sockets.Socket.SendTimeout
  type: Property
  source:
    remote:
      path: src/System.Net.Sockets/src/System/Net/Sockets/Socket.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: SendTimeout
    path: src/System.Net.Sockets/src/System/Net/Sockets/Socket.cs
    startLine: 495
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  syntax:
    content: public int SendTimeout { get; set; }
    content.vb: Public Property SendTimeout As Integer
    parameters: []
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Net.Sockets.Socket.SocketType
  commentId: P:System.Net.Sockets.Socket.SocketType
  id: SocketType
  parent: System.Net.Sockets.Socket
  langs:
  - csharp
  - vb
  name: SocketType
  fullName: System.Net.Sockets.Socket.SocketType
  type: Property
  source:
    remote:
      path: src/System.Net.Sockets/src/System/Net/Sockets/Socket.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: SocketType
    path: src/System.Net.Sockets/src/System/Net/Sockets/Socket.cs
    startLine: 398
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  syntax:
    content: public SocketType SocketType { get; }
    content.vb: Public ReadOnly Property SocketType As SocketType
    parameters: []
    return:
      type: System.Net.Sockets.SocketType
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Net.Sockets.Socket.Ttl
  commentId: P:System.Net.Sockets.Socket.Ttl
  id: Ttl
  parent: System.Net.Sockets.Socket
  langs:
  - csharp
  - vb
  name: Ttl
  fullName: System.Net.Sockets.Socket.Ttl
  type: Property
  source:
    remote:
      path: src/System.Net.Sockets/src/System/Net/Sockets/Socket.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Ttl
    path: src/System.Net.Sockets/src/System/Net/Sockets/Socket.cs
    startLine: 541
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  syntax:
    content: public short Ttl { get; set; }
    content.vb: Public Property Ttl As Short
    parameters: []
    return:
      type: System.Int16
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Net.Sockets.Socket.Accept
  commentId: M:System.Net.Sockets.Socket.Accept
  id: Accept
  parent: System.Net.Sockets.Socket
  langs:
  - csharp
  - vb
  name: Accept()
  fullName: System.Net.Sockets.Socket.Accept()
  type: Method
  source:
    remote:
      path: src/System.Net.Sockets/src/System/Net/Sockets/Socket.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Accept
    path: src/System.Net.Sockets/src/System/Net/Sockets/Socket.cs
    startLine: 1078
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  syntax:
    content: public Socket Accept()
    content.vb: Public Function Accept As Socket
    return:
      type: System.Net.Sockets.Socket
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Net.Sockets.Socket.AcceptAsync(System.Net.Sockets.SocketAsyncEventArgs)
  commentId: M:System.Net.Sockets.Socket.AcceptAsync(System.Net.Sockets.SocketAsyncEventArgs)
  id: AcceptAsync(System.Net.Sockets.SocketAsyncEventArgs)
  parent: System.Net.Sockets.Socket
  langs:
  - csharp
  - vb
  name: AcceptAsync(SocketAsyncEventArgs)
  fullName: System.Net.Sockets.Socket.AcceptAsync(System.Net.Sockets.SocketAsyncEventArgs)
  type: Method
  source:
    remote:
      path: src/System.Net.Sockets/src/System/Net/Sockets/Socket.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: AcceptAsync
    path: src/System.Net.Sockets/src/System/Net/Sockets/Socket.cs
    startLine: 4250
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  syntax:
    content: public bool AcceptAsync(SocketAsyncEventArgs e)
    content.vb: Public Function AcceptAsync(e As SocketAsyncEventArgs) As Boolean
    parameters:
    - id: e
      type: System.Net.Sockets.SocketAsyncEventArgs
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Net.Sockets.Socket.Bind(System.Net.EndPoint)
  commentId: M:System.Net.Sockets.Socket.Bind(System.Net.EndPoint)
  id: Bind(System.Net.EndPoint)
  parent: System.Net.Sockets.Socket
  langs:
  - csharp
  - vb
  name: Bind(EndPoint)
  fullName: System.Net.Sockets.Socket.Bind(System.Net.EndPoint)
  type: Method
  source:
    remote:
      path: src/System.Net.Sockets/ref/System.Net.Sockets.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Bind
    path: src/System.Net.Sockets/ref/System.Net.Sockets.cs
    startLine: 187
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  syntax:
    content: public void Bind(EndPoint localEP)
    content.vb: Public Sub Bind(localEP As EndPoint)
    parameters:
    - id: localEP
      type: System.Net.EndPoint
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Net.Sockets.Socket.CancelConnectAsync(System.Net.Sockets.SocketAsyncEventArgs)
  commentId: M:System.Net.Sockets.Socket.CancelConnectAsync(System.Net.Sockets.SocketAsyncEventArgs)
  id: CancelConnectAsync(System.Net.Sockets.SocketAsyncEventArgs)
  parent: System.Net.Sockets.Socket
  langs:
  - csharp
  - vb
  name: CancelConnectAsync(SocketAsyncEventArgs)
  fullName: System.Net.Sockets.Socket.CancelConnectAsync(System.Net.Sockets.SocketAsyncEventArgs)
  type: Method
  source:
    remote:
      path: src/System.Net.Sockets/src/System/Net/Sockets/Socket.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CancelConnectAsync
    path: src/System.Net.Sockets/src/System/Net/Sockets/Socket.cs
    startLine: 4516
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  syntax:
    content: public static void CancelConnectAsync(SocketAsyncEventArgs e)
    content.vb: Public Shared Sub CancelConnectAsync(e As SocketAsyncEventArgs)
    parameters:
    - id: e
      type: System.Net.Sockets.SocketAsyncEventArgs
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Net.Sockets.Socket.Connect(System.Net.EndPoint)
  commentId: M:System.Net.Sockets.Socket.Connect(System.Net.EndPoint)
  id: Connect(System.Net.EndPoint)
  parent: System.Net.Sockets.Socket
  langs:
  - csharp
  - vb
  name: Connect(EndPoint)
  fullName: System.Net.Sockets.Socket.Connect(System.Net.EndPoint)
  type: Method
  source:
    remote:
      path: src/System.Net.Sockets/ref/System.Net.Sockets.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Connect
    path: src/System.Net.Sockets/ref/System.Net.Sockets.cs
    startLine: 189
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  syntax:
    content: public void Connect(EndPoint remoteEP)
    content.vb: Public Sub Connect(remoteEP As EndPoint)
    parameters:
    - id: remoteEP
      type: System.Net.EndPoint
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Net.Sockets.Socket.Connect(System.Net.IPAddress,System.Int32)
  commentId: M:System.Net.Sockets.Socket.Connect(System.Net.IPAddress,System.Int32)
  id: Connect(System.Net.IPAddress,System.Int32)
  parent: System.Net.Sockets.Socket
  langs:
  - csharp
  - vb
  name: Connect(IPAddress, Int32)
  fullName: System.Net.Sockets.Socket.Connect(System.Net.IPAddress, System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Net.Sockets/ref/System.Net.Sockets.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Connect
    path: src/System.Net.Sockets/ref/System.Net.Sockets.cs
    startLine: 190
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  syntax:
    content: public void Connect(IPAddress address, int port)
    content.vb: Public Sub Connect(address As IPAddress, port As Integer)
    parameters:
    - id: address
      type: System.Net.IPAddress
    - id: port
      type: System.Int32
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Net.Sockets.Socket.Connect(System.Net.IPAddress[],System.Int32)
  commentId: M:System.Net.Sockets.Socket.Connect(System.Net.IPAddress[],System.Int32)
  id: Connect(System.Net.IPAddress[],System.Int32)
  parent: System.Net.Sockets.Socket
  langs:
  - csharp
  - vb
  name: Connect(IPAddress[], Int32)
  fullName: System.Net.Sockets.Socket.Connect(System.Net.IPAddress[], System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Net.Sockets/ref/System.Net.Sockets.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Connect
    path: src/System.Net.Sockets/ref/System.Net.Sockets.cs
    startLine: 191
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  syntax:
    content: public void Connect(IPAddress[] addresses, int port)
    content.vb: Public Sub Connect(addresses As IPAddress(), port As Integer)
    parameters:
    - id: addresses
      type: System.Net.IPAddress[]
    - id: port
      type: System.Int32
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Net.Sockets.Socket.Connect(System.Net.IPAddress(), System.Int32)
  name.vb: Connect(IPAddress(), Int32)
- uid: System.Net.Sockets.Socket.Connect(System.String,System.Int32)
  commentId: M:System.Net.Sockets.Socket.Connect(System.String,System.Int32)
  id: Connect(System.String,System.Int32)
  parent: System.Net.Sockets.Socket
  langs:
  - csharp
  - vb
  name: Connect(String, Int32)
  fullName: System.Net.Sockets.Socket.Connect(System.String, System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Net.Sockets/src/System/Net/Sockets/Socket.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Connect
    path: src/System.Net.Sockets/src/System/Net/Sockets/Socket.cs
    startLine: 923
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  syntax:
    content: public void Connect(string host, int port)
    content.vb: Public Sub Connect(host As String, port As Integer)
    parameters:
    - id: host
      type: System.String
    - id: port
      type: System.Int32
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Net.Sockets.Socket.ConnectAsync(System.Net.Sockets.SocketAsyncEventArgs)
  commentId: M:System.Net.Sockets.Socket.ConnectAsync(System.Net.Sockets.SocketAsyncEventArgs)
  id: ConnectAsync(System.Net.Sockets.SocketAsyncEventArgs)
  parent: System.Net.Sockets.Socket
  langs:
  - csharp
  - vb
  name: ConnectAsync(SocketAsyncEventArgs)
  fullName: System.Net.Sockets.Socket.ConnectAsync(System.Net.Sockets.SocketAsyncEventArgs)
  type: Method
  source:
    remote:
      path: src/System.Net.Sockets/src/System/Net/Sockets/Socket.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ConnectAsync
    path: src/System.Net.Sockets/src/System/Net/Sockets/Socket.cs
    startLine: 4323
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  syntax:
    content: public bool ConnectAsync(SocketAsyncEventArgs e)
    content.vb: Public Function ConnectAsync(e As SocketAsyncEventArgs) As Boolean
    parameters:
    - id: e
      type: System.Net.Sockets.SocketAsyncEventArgs
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Net.Sockets.Socket.ConnectAsync(System.Net.Sockets.SocketType,System.Net.Sockets.ProtocolType,System.Net.Sockets.SocketAsyncEventArgs)
  commentId: M:System.Net.Sockets.Socket.ConnectAsync(System.Net.Sockets.SocketType,System.Net.Sockets.ProtocolType,System.Net.Sockets.SocketAsyncEventArgs)
  id: ConnectAsync(System.Net.Sockets.SocketType,System.Net.Sockets.ProtocolType,System.Net.Sockets.SocketAsyncEventArgs)
  parent: System.Net.Sockets.Socket
  langs:
  - csharp
  - vb
  name: ConnectAsync(SocketType, ProtocolType, SocketAsyncEventArgs)
  fullName: System.Net.Sockets.Socket.ConnectAsync(System.Net.Sockets.SocketType, System.Net.Sockets.ProtocolType, System.Net.Sockets.SocketAsyncEventArgs)
  type: Method
  source:
    remote:
      path: src/System.Net.Sockets/src/System/Net/Sockets/Socket.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ConnectAsync
    path: src/System.Net.Sockets/src/System/Net/Sockets/Socket.cs
    startLine: 4448
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  syntax:
    content: public static bool ConnectAsync(SocketType socketType, ProtocolType protocolType, SocketAsyncEventArgs e)
    content.vb: Public Shared Function ConnectAsync(socketType As SocketType, protocolType As ProtocolType, e As SocketAsyncEventArgs) As Boolean
    parameters:
    - id: socketType
      type: System.Net.Sockets.SocketType
    - id: protocolType
      type: System.Net.Sockets.ProtocolType
    - id: e
      type: System.Net.Sockets.SocketAsyncEventArgs
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Net.Sockets.Socket.Dispose
  commentId: M:System.Net.Sockets.Socket.Dispose
  id: Dispose
  parent: System.Net.Sockets.Socket
  langs:
  - csharp
  - vb
  name: Dispose()
  fullName: System.Net.Sockets.Socket.Dispose()
  type: Method
  source:
    remote:
      path: src/System.Net.Sockets/src/System/Net/Sockets/Socket.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Dispose
    path: src/System.Net.Sockets/src/System/Net/Sockets/Socket.cs
    startLine: 5343
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  syntax:
    content: public void Dispose()
    content.vb: Public Sub Dispose
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Net.Sockets.Socket.Dispose(System.Boolean)
  commentId: M:System.Net.Sockets.Socket.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Net.Sockets.Socket
  langs:
  - csharp
  - vb
  name: Dispose(Boolean)
  fullName: System.Net.Sockets.Socket.Dispose(System.Boolean)
  type: Method
  source:
    remote:
      path: src/System.Net.Sockets/src/System/Net/Sockets/Socket.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Dispose
    path: src/System.Net.Sockets/src/System/Net/Sockets/Socket.cs
    startLine: 5172
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  syntax:
    content: protected virtual void Dispose(bool disposing)
    content.vb: Protected Overridable Sub Dispose(disposing As Boolean)
    parameters:
    - id: disposing
      type: System.Boolean
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: System.Net.Sockets.Socket.Finalize
  commentId: M:System.Net.Sockets.Socket.Finalize
  id: Finalize
  parent: System.Net.Sockets.Socket
  langs:
  - csharp
  - vb
  name: Finalize()
  fullName: System.Net.Sockets.Socket.Finalize()
  type: Method
  source:
    remote:
      path: src/System.Net.Sockets/src/System/Net/Sockets/Socket.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Finalize
    path: src/System.Net.Sockets/src/System/Net/Sockets/Socket.cs
    startLine: 5362
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  syntax:
    content: protected void Finalize()
    content.vb: Protected Sub Finalize
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: System.Net.Sockets.Socket.GetSocketOption(System.Net.Sockets.SocketOptionLevel,System.Net.Sockets.SocketOptionName)
  commentId: M:System.Net.Sockets.Socket.GetSocketOption(System.Net.Sockets.SocketOptionLevel,System.Net.Sockets.SocketOptionName)
  id: GetSocketOption(System.Net.Sockets.SocketOptionLevel,System.Net.Sockets.SocketOptionName)
  parent: System.Net.Sockets.Socket
  langs:
  - csharp
  - vb
  name: GetSocketOption(SocketOptionLevel, SocketOptionName)
  fullName: System.Net.Sockets.Socket.GetSocketOption(System.Net.Sockets.SocketOptionLevel, System.Net.Sockets.SocketOptionName)
  type: Method
  source:
    remote:
      path: src/System.Net.Sockets/src/System/Net/Sockets/Socket.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetSocketOption
    path: src/System.Net.Sockets/src/System/Net/Sockets/Socket.cs
    startLine: 2049
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  syntax:
    content: public object GetSocketOption(SocketOptionLevel optionLevel, SocketOptionName optionName)
    content.vb: Public Function GetSocketOption(optionLevel As SocketOptionLevel, optionName As SocketOptionName) As Object
    parameters:
    - id: optionLevel
      type: System.Net.Sockets.SocketOptionLevel
    - id: optionName
      type: System.Net.Sockets.SocketOptionName
    return:
      type: System.Object
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Net.Sockets.Socket.GetSocketOption(System.Net.Sockets.SocketOptionLevel,System.Net.Sockets.SocketOptionName,System.Byte[])
  commentId: M:System.Net.Sockets.Socket.GetSocketOption(System.Net.Sockets.SocketOptionLevel,System.Net.Sockets.SocketOptionName,System.Byte[])
  id: GetSocketOption(System.Net.Sockets.SocketOptionLevel,System.Net.Sockets.SocketOptionName,System.Byte[])
  parent: System.Net.Sockets.Socket
  langs:
  - csharp
  - vb
  name: GetSocketOption(SocketOptionLevel, SocketOptionName, Byte[])
  fullName: System.Net.Sockets.Socket.GetSocketOption(System.Net.Sockets.SocketOptionLevel, System.Net.Sockets.SocketOptionName, System.Byte[])
  type: Method
  source:
    remote:
      path: src/System.Net.Sockets/src/System/Net/Sockets/Socket.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetSocketOption
    path: src/System.Net.Sockets/src/System/Net/Sockets/Socket.cs
    startLine: 2099
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  syntax:
    content: public void GetSocketOption(SocketOptionLevel optionLevel, SocketOptionName optionName, byte[] optionValue)
    content.vb: Public Sub GetSocketOption(optionLevel As SocketOptionLevel, optionName As SocketOptionName, optionValue As Byte())
    parameters:
    - id: optionLevel
      type: System.Net.Sockets.SocketOptionLevel
    - id: optionName
      type: System.Net.Sockets.SocketOptionName
    - id: optionValue
      type: System.Byte[]
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Net.Sockets.Socket.GetSocketOption(System.Net.Sockets.SocketOptionLevel, System.Net.Sockets.SocketOptionName, System.Byte())
  name.vb: GetSocketOption(SocketOptionLevel, SocketOptionName, Byte())
- uid: System.Net.Sockets.Socket.GetSocketOption(System.Net.Sockets.SocketOptionLevel,System.Net.Sockets.SocketOptionName,System.Int32)
  commentId: M:System.Net.Sockets.Socket.GetSocketOption(System.Net.Sockets.SocketOptionLevel,System.Net.Sockets.SocketOptionName,System.Int32)
  id: GetSocketOption(System.Net.Sockets.SocketOptionLevel,System.Net.Sockets.SocketOptionName,System.Int32)
  parent: System.Net.Sockets.Socket
  langs:
  - csharp
  - vb
  name: GetSocketOption(SocketOptionLevel, SocketOptionName, Int32)
  fullName: System.Net.Sockets.Socket.GetSocketOption(System.Net.Sockets.SocketOptionLevel, System.Net.Sockets.SocketOptionName, System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Net.Sockets/src/System/Net/Sockets/Socket.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetSocketOption
    path: src/System.Net.Sockets/src/System/Net/Sockets/Socket.cs
    startLine: 2135
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  syntax:
    content: public byte[] GetSocketOption(SocketOptionLevel optionLevel, SocketOptionName optionName, int optionLength)
    content.vb: Public Function GetSocketOption(optionLevel As SocketOptionLevel, optionName As SocketOptionName, optionLength As Integer) As Byte()
    parameters:
    - id: optionLevel
      type: System.Net.Sockets.SocketOptionLevel
    - id: optionName
      type: System.Net.Sockets.SocketOptionName
    - id: optionLength
      type: System.Int32
    return:
      type: System.Byte[]
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Net.Sockets.Socket.IOControl(System.Int32,System.Byte[],System.Byte[])
  commentId: M:System.Net.Sockets.Socket.IOControl(System.Int32,System.Byte[],System.Byte[])
  id: IOControl(System.Int32,System.Byte[],System.Byte[])
  parent: System.Net.Sockets.Socket
  langs:
  - csharp
  - vb
  name: IOControl(Int32, Byte[], Byte[])
  fullName: System.Net.Sockets.Socket.IOControl(System.Int32, System.Byte[], System.Byte[])
  type: Method
  source:
    remote:
      path: src/System.Net.Sockets/src/System/Net/Sockets/Socket.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IOControl
    path: src/System.Net.Sockets/src/System/Net/Sockets/Socket.cs
    startLine: 1887
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  syntax:
    content: public int IOControl(int ioControlCode, byte[] optionInValue, byte[] optionOutValue)
    content.vb: Public Function IOControl(ioControlCode As Integer, optionInValue As Byte(), optionOutValue As Byte()) As Integer
    parameters:
    - id: ioControlCode
      type: System.Int32
    - id: optionInValue
      type: System.Byte[]
    - id: optionOutValue
      type: System.Byte[]
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Net.Sockets.Socket.IOControl(System.Int32, System.Byte(), System.Byte())
  name.vb: IOControl(Int32, Byte(), Byte())
- uid: System.Net.Sockets.Socket.IOControl(System.Net.Sockets.IOControlCode,System.Byte[],System.Byte[])
  commentId: M:System.Net.Sockets.Socket.IOControl(System.Net.Sockets.IOControlCode,System.Byte[],System.Byte[])
  id: IOControl(System.Net.Sockets.IOControlCode,System.Byte[],System.Byte[])
  parent: System.Net.Sockets.Socket
  langs:
  - csharp
  - vb
  name: IOControl(IOControlCode, Byte[], Byte[])
  fullName: System.Net.Sockets.Socket.IOControl(System.Net.Sockets.IOControlCode, System.Byte[], System.Byte[])
  type: Method
  source:
    remote:
      path: src/System.Net.Sockets/src/System/Net/Sockets/Socket.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IOControl
    path: src/System.Net.Sockets/src/System/Net/Sockets/Socket.cs
    startLine: 1926
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  syntax:
    content: public int IOControl(IOControlCode ioControlCode, byte[] optionInValue, byte[] optionOutValue)
    content.vb: Public Function IOControl(ioControlCode As IOControlCode, optionInValue As Byte(), optionOutValue As Byte()) As Integer
    parameters:
    - id: ioControlCode
      type: System.Net.Sockets.IOControlCode
    - id: optionInValue
      type: System.Byte[]
    - id: optionOutValue
      type: System.Byte[]
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Net.Sockets.Socket.IOControl(System.Net.Sockets.IOControlCode, System.Byte(), System.Byte())
  name.vb: IOControl(IOControlCode, Byte(), Byte())
- uid: System.Net.Sockets.Socket.Listen(System.Int32)
  commentId: M:System.Net.Sockets.Socket.Listen(System.Int32)
  id: Listen(System.Int32)
  parent: System.Net.Sockets.Socket
  langs:
  - csharp
  - vb
  name: Listen(Int32)
  fullName: System.Net.Sockets.Socket.Listen(System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Net.Sockets/src/System/Net/Sockets/Socket.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Listen
    path: src/System.Net.Sockets/src/System/Net/Sockets/Socket.cs
    startLine: 1024
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  syntax:
    content: public void Listen(int backlog)
    content.vb: Public Sub Listen(backlog As Integer)
    parameters:
    - id: backlog
      type: System.Int32
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Net.Sockets.Socket.Poll(System.Int32,System.Net.Sockets.SelectMode)
  commentId: M:System.Net.Sockets.Socket.Poll(System.Int32,System.Net.Sockets.SelectMode)
  id: Poll(System.Int32,System.Net.Sockets.SelectMode)
  parent: System.Net.Sockets.Socket
  langs:
  - csharp
  - vb
  name: Poll(Int32, SelectMode)
  fullName: System.Net.Sockets.Socket.Poll(System.Int32, System.Net.Sockets.SelectMode)
  type: Method
  source:
    remote:
      path: src/System.Net.Sockets/src/System/Net/Sockets/Socket.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Poll
    path: src/System.Net.Sockets/src/System/Net/Sockets/Socket.cs
    startLine: 2182
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  syntax:
    content: public bool Poll(int microSeconds, SelectMode mode)
    content.vb: Public Function Poll(microSeconds As Integer, mode As SelectMode) As Boolean
    parameters:
    - id: microSeconds
      type: System.Int32
    - id: mode
      type: System.Net.Sockets.SelectMode
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Net.Sockets.Socket.Receive(System.Byte[])
  commentId: M:System.Net.Sockets.Socket.Receive(System.Byte[])
  id: Receive(System.Byte[])
  parent: System.Net.Sockets.Socket
  langs:
  - csharp
  - vb
  name: Receive(Byte[])
  fullName: System.Net.Sockets.Socket.Receive(System.Byte[])
  type: Method
  source:
    remote:
      path: src/System.Net.Sockets/src/System/Net/Sockets/Socket.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Receive
    path: src/System.Net.Sockets/src/System/Net/Sockets/Socket.cs
    startLine: 1452
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  syntax:
    content: public int Receive(byte[] buffer)
    content.vb: Public Function Receive(buffer As Byte()) As Integer
    parameters:
    - id: buffer
      type: System.Byte[]
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Net.Sockets.Socket.Receive(System.Byte())
  name.vb: Receive(Byte())
- uid: System.Net.Sockets.Socket.Receive(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags)
  commentId: M:System.Net.Sockets.Socket.Receive(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags)
  id: Receive(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags)
  parent: System.Net.Sockets.Socket
  langs:
  - csharp
  - vb
  name: Receive(Byte[], Int32, Int32, SocketFlags)
  fullName: System.Net.Sockets.Socket.Receive(System.Byte[], System.Int32, System.Int32, System.Net.Sockets.SocketFlags)
  type: Method
  source:
    remote:
      path: src/System.Net.Sockets/src/System/Net/Sockets/Socket.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Receive
    path: src/System.Net.Sockets/src/System/Net/Sockets/Socket.cs
    startLine: 1458
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  syntax:
    content: public int Receive(byte[] buffer, int offset, int size, SocketFlags socketFlags)
    content.vb: Public Function Receive(buffer As Byte(), offset As Integer, size As Integer, socketFlags As SocketFlags) As Integer
    parameters:
    - id: buffer
      type: System.Byte[]
    - id: offset
      type: System.Int32
    - id: size
      type: System.Int32
    - id: socketFlags
      type: System.Net.Sockets.SocketFlags
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Net.Sockets.Socket.Receive(System.Byte(), System.Int32, System.Int32, System.Net.Sockets.SocketFlags)
  name.vb: Receive(Byte(), Int32, Int32, SocketFlags)
- uid: System.Net.Sockets.Socket.Receive(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.Sockets.SocketError@)
  commentId: M:System.Net.Sockets.Socket.Receive(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.Sockets.SocketError@)
  id: Receive(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.Sockets.SocketError@)
  parent: System.Net.Sockets.Socket
  langs:
  - csharp
  - vb
  name: Receive(Byte[], Int32, Int32, SocketFlags, out SocketError)
  fullName: System.Net.Sockets.Socket.Receive(System.Byte[], System.Int32, System.Int32, System.Net.Sockets.SocketFlags, out System.Net.Sockets.SocketError)
  type: Method
  source:
    remote:
      path: src/System.Net.Sockets/ref/System.Net.Sockets.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Receive
    path: src/System.Net.Sockets/ref/System.Net.Sockets.cs
    startLine: 207
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  syntax:
    content: public int Receive(byte[] buffer, int offset, int size, SocketFlags socketFlags, out SocketError errorCode)
    content.vb: Public Function Receive(buffer As Byte(), offset As Integer, size As Integer, socketFlags As SocketFlags, ByRef errorCode As SocketError) As Integer
    parameters:
    - id: buffer
      type: System.Byte[]
    - id: offset
      type: System.Int32
    - id: size
      type: System.Int32
    - id: socketFlags
      type: System.Net.Sockets.SocketFlags
    - id: errorCode
      type: System.Net.Sockets.SocketError
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Net.Sockets.Socket.Receive(System.Byte(), System.Int32, System.Int32, System.Net.Sockets.SocketFlags, ByRef System.Net.Sockets.SocketError)
  name.vb: Receive(Byte(), Int32, Int32, SocketFlags, ByRef SocketError)
- uid: System.Net.Sockets.Socket.Receive(System.Byte[],System.Int32,System.Net.Sockets.SocketFlags)
  commentId: M:System.Net.Sockets.Socket.Receive(System.Byte[],System.Int32,System.Net.Sockets.SocketFlags)
  id: Receive(System.Byte[],System.Int32,System.Net.Sockets.SocketFlags)
  parent: System.Net.Sockets.Socket
  langs:
  - csharp
  - vb
  name: Receive(Byte[], Int32, SocketFlags)
  fullName: System.Net.Sockets.Socket.Receive(System.Byte[], System.Int32, System.Net.Sockets.SocketFlags)
  type: Method
  source:
    remote:
      path: src/System.Net.Sockets/src/System/Net/Sockets/Socket.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Receive
    path: src/System.Net.Sockets/src/System/Net/Sockets/Socket.cs
    startLine: 1442
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  syntax:
    content: public int Receive(byte[] buffer, int size, SocketFlags socketFlags)
    content.vb: Public Function Receive(buffer As Byte(), size As Integer, socketFlags As SocketFlags) As Integer
    parameters:
    - id: buffer
      type: System.Byte[]
    - id: size
      type: System.Int32
    - id: socketFlags
      type: System.Net.Sockets.SocketFlags
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Net.Sockets.Socket.Receive(System.Byte(), System.Int32, System.Net.Sockets.SocketFlags)
  name.vb: Receive(Byte(), Int32, SocketFlags)
- uid: System.Net.Sockets.Socket.Receive(System.Byte[],System.Net.Sockets.SocketFlags)
  commentId: M:System.Net.Sockets.Socket.Receive(System.Byte[],System.Net.Sockets.SocketFlags)
  id: Receive(System.Byte[],System.Net.Sockets.SocketFlags)
  parent: System.Net.Sockets.Socket
  langs:
  - csharp
  - vb
  name: Receive(Byte[], SocketFlags)
  fullName: System.Net.Sockets.Socket.Receive(System.Byte[], System.Net.Sockets.SocketFlags)
  type: Method
  source:
    remote:
      path: src/System.Net.Sockets/src/System/Net/Sockets/Socket.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Receive
    path: src/System.Net.Sockets/src/System/Net/Sockets/Socket.cs
    startLine: 1447
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  syntax:
    content: public int Receive(byte[] buffer, SocketFlags socketFlags)
    content.vb: Public Function Receive(buffer As Byte(), socketFlags As SocketFlags) As Integer
    parameters:
    - id: buffer
      type: System.Byte[]
    - id: socketFlags
      type: System.Net.Sockets.SocketFlags
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Net.Sockets.Socket.Receive(System.Byte(), System.Net.Sockets.SocketFlags)
  name.vb: Receive(Byte(), SocketFlags)
- uid: System.Net.Sockets.Socket.Receive(System.Collections.Generic.IList{System.ArraySegment{System.Byte}})
  commentId: M:System.Net.Sockets.Socket.Receive(System.Collections.Generic.IList{System.ArraySegment{System.Byte}})
  id: Receive(System.Collections.Generic.IList{System.ArraySegment{System.Byte}})
  parent: System.Net.Sockets.Socket
  langs:
  - csharp
  - vb
  name: Receive(Collections.Generic.IList<ArraySegment<Byte>>)
  fullName: System.Net.Sockets.Socket.Receive(System.Collections.Generic.IList<System.ArraySegment<System.Byte>>)
  type: Method
  source:
    remote:
      path: src/System.Net.Sockets/ref/System.Net.Sockets.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Receive
    path: src/System.Net.Sockets/ref/System.Net.Sockets.cs
    startLine: 210
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  syntax:
    content: public int Receive(Collections.Generic.IList<ArraySegment<byte>> buffers)
    content.vb: Public Function Receive(buffers As Collections.Generic.IList(Of ArraySegment(Of Byte))) As Integer
    parameters:
    - id: buffers
      type: System.Collections.Generic.IList{System.ArraySegment{System.Byte}}
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Net.Sockets.Socket.Receive(System.Collections.Generic.IList(Of System.ArraySegment(Of System.Byte)))
  name.vb: Receive(Collections.Generic.IList(Of ArraySegment(Of Byte)))
- uid: System.Net.Sockets.Socket.Receive(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.Net.Sockets.SocketFlags)
  commentId: M:System.Net.Sockets.Socket.Receive(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.Net.Sockets.SocketFlags)
  id: Receive(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.Net.Sockets.SocketFlags)
  parent: System.Net.Sockets.Socket
  langs:
  - csharp
  - vb
  name: Receive(Collections.Generic.IList<ArraySegment<Byte>>, SocketFlags)
  fullName: System.Net.Sockets.Socket.Receive(System.Collections.Generic.IList<System.ArraySegment<System.Byte>>, System.Net.Sockets.SocketFlags)
  type: Method
  source:
    remote:
      path: src/System.Net.Sockets/ref/System.Net.Sockets.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Receive
    path: src/System.Net.Sockets/ref/System.Net.Sockets.cs
    startLine: 211
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  syntax:
    content: public int Receive(Collections.Generic.IList<ArraySegment<byte>> buffers, SocketFlags socketFlags)
    content.vb: Public Function Receive(buffers As Collections.Generic.IList(Of ArraySegment(Of Byte)), socketFlags As SocketFlags) As Integer
    parameters:
    - id: buffers
      type: System.Collections.Generic.IList{System.ArraySegment{System.Byte}}
    - id: socketFlags
      type: System.Net.Sockets.SocketFlags
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Net.Sockets.Socket.Receive(System.Collections.Generic.IList(Of System.ArraySegment(Of System.Byte)), System.Net.Sockets.SocketFlags)
  name.vb: Receive(Collections.Generic.IList(Of ArraySegment(Of Byte)), SocketFlags)
- uid: System.Net.Sockets.Socket.Receive(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.Net.Sockets.SocketFlags,System.Net.Sockets.SocketError@)
  commentId: M:System.Net.Sockets.Socket.Receive(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.Net.Sockets.SocketFlags,System.Net.Sockets.SocketError@)
  id: Receive(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.Net.Sockets.SocketFlags,System.Net.Sockets.SocketError@)
  parent: System.Net.Sockets.Socket
  langs:
  - csharp
  - vb
  name: Receive(Collections.Generic.IList<ArraySegment<Byte>>, SocketFlags, out SocketError)
  fullName: System.Net.Sockets.Socket.Receive(System.Collections.Generic.IList<System.ArraySegment<System.Byte>>, System.Net.Sockets.SocketFlags, out System.Net.Sockets.SocketError)
  type: Method
  source:
    remote:
      path: src/System.Net.Sockets/ref/System.Net.Sockets.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Receive
    path: src/System.Net.Sockets/ref/System.Net.Sockets.cs
    startLine: 212
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  syntax:
    content: public int Receive(Collections.Generic.IList<ArraySegment<byte>> buffers, SocketFlags socketFlags, out SocketError errorCode)
    content.vb: Public Function Receive(buffers As Collections.Generic.IList(Of ArraySegment(Of Byte)), socketFlags As SocketFlags, ByRef errorCode As SocketError) As Integer
    parameters:
    - id: buffers
      type: System.Collections.Generic.IList{System.ArraySegment{System.Byte}}
    - id: socketFlags
      type: System.Net.Sockets.SocketFlags
    - id: errorCode
      type: System.Net.Sockets.SocketError
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Net.Sockets.Socket.Receive(System.Collections.Generic.IList(Of System.ArraySegment(Of System.Byte)), System.Net.Sockets.SocketFlags, ByRef System.Net.Sockets.SocketError)
  name.vb: Receive(Collections.Generic.IList(Of ArraySegment(Of Byte)), SocketFlags, ByRef SocketError)
- uid: System.Net.Sockets.Socket.ReceiveAsync(System.Net.Sockets.SocketAsyncEventArgs)
  commentId: M:System.Net.Sockets.Socket.ReceiveAsync(System.Net.Sockets.SocketAsyncEventArgs)
  id: ReceiveAsync(System.Net.Sockets.SocketAsyncEventArgs)
  parent: System.Net.Sockets.Socket
  langs:
  - csharp
  - vb
  name: ReceiveAsync(SocketAsyncEventArgs)
  fullName: System.Net.Sockets.Socket.ReceiveAsync(System.Net.Sockets.SocketAsyncEventArgs)
  type: Method
  source:
    remote:
      path: src/System.Net.Sockets/src/System/Net/Sockets/Socket.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ReceiveAsync
    path: src/System.Net.Sockets/src/System/Net/Sockets/Socket.cs
    startLine: 4525
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  syntax:
    content: public bool ReceiveAsync(SocketAsyncEventArgs e)
    content.vb: Public Function ReceiveAsync(e As SocketAsyncEventArgs) As Boolean
    parameters:
    - id: e
      type: System.Net.Sockets.SocketAsyncEventArgs
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Net.Sockets.Socket.ReceiveFrom(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.EndPoint@)
  commentId: M:System.Net.Sockets.Socket.ReceiveFrom(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.EndPoint@)
  id: ReceiveFrom(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.EndPoint@)
  parent: System.Net.Sockets.Socket
  langs:
  - csharp
  - vb
  name: ReceiveFrom(Byte[], Int32, Int32, SocketFlags, ref EndPoint)
  fullName: System.Net.Sockets.Socket.ReceiveFrom(System.Byte[], System.Int32, System.Int32, System.Net.Sockets.SocketFlags, ref System.Net.EndPoint)
  type: Method
  source:
    remote:
      path: src/System.Net.Sockets/ref/System.Net.Sockets.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ReceiveFrom
    path: src/System.Net.Sockets/ref/System.Net.Sockets.cs
    startLine: 214
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  syntax:
    content: public int ReceiveFrom(byte[] buffer, int offset, int size, SocketFlags socketFlags, ref EndPoint remoteEP)
    content.vb: Public Function ReceiveFrom(buffer As Byte(), offset As Integer, size As Integer, socketFlags As SocketFlags, ByRef remoteEP As EndPoint) As Integer
    parameters:
    - id: buffer
      type: System.Byte[]
    - id: offset
      type: System.Int32
    - id: size
      type: System.Int32
    - id: socketFlags
      type: System.Net.Sockets.SocketFlags
    - id: remoteEP
      type: System.Net.EndPoint
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Net.Sockets.Socket.ReceiveFrom(System.Byte(), System.Int32, System.Int32, System.Net.Sockets.SocketFlags, ByRef System.Net.EndPoint)
  name.vb: ReceiveFrom(Byte(), Int32, Int32, SocketFlags, ByRef EndPoint)
- uid: System.Net.Sockets.Socket.ReceiveFrom(System.Byte[],System.Int32,System.Net.Sockets.SocketFlags,System.Net.EndPoint@)
  commentId: M:System.Net.Sockets.Socket.ReceiveFrom(System.Byte[],System.Int32,System.Net.Sockets.SocketFlags,System.Net.EndPoint@)
  id: ReceiveFrom(System.Byte[],System.Int32,System.Net.Sockets.SocketFlags,System.Net.EndPoint@)
  parent: System.Net.Sockets.Socket
  langs:
  - csharp
  - vb
  name: ReceiveFrom(Byte[], Int32, SocketFlags, ref EndPoint)
  fullName: System.Net.Sockets.Socket.ReceiveFrom(System.Byte[], System.Int32, System.Net.Sockets.SocketFlags, ref System.Net.EndPoint)
  type: Method
  source:
    remote:
      path: src/System.Net.Sockets/ref/System.Net.Sockets.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ReceiveFrom
    path: src/System.Net.Sockets/ref/System.Net.Sockets.cs
    startLine: 215
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  syntax:
    content: public int ReceiveFrom(byte[] buffer, int size, SocketFlags socketFlags, ref EndPoint remoteEP)
    content.vb: Public Function ReceiveFrom(buffer As Byte(), size As Integer, socketFlags As SocketFlags, ByRef remoteEP As EndPoint) As Integer
    parameters:
    - id: buffer
      type: System.Byte[]
    - id: size
      type: System.Int32
    - id: socketFlags
      type: System.Net.Sockets.SocketFlags
    - id: remoteEP
      type: System.Net.EndPoint
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Net.Sockets.Socket.ReceiveFrom(System.Byte(), System.Int32, System.Net.Sockets.SocketFlags, ByRef System.Net.EndPoint)
  name.vb: ReceiveFrom(Byte(), Int32, SocketFlags, ByRef EndPoint)
- uid: System.Net.Sockets.Socket.ReceiveFrom(System.Byte[],System.Net.EndPoint@)
  commentId: M:System.Net.Sockets.Socket.ReceiveFrom(System.Byte[],System.Net.EndPoint@)
  id: ReceiveFrom(System.Byte[],System.Net.EndPoint@)
  parent: System.Net.Sockets.Socket
  langs:
  - csharp
  - vb
  name: ReceiveFrom(Byte[], ref EndPoint)
  fullName: System.Net.Sockets.Socket.ReceiveFrom(System.Byte[], ref System.Net.EndPoint)
  type: Method
  source:
    remote:
      path: src/System.Net.Sockets/ref/System.Net.Sockets.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ReceiveFrom
    path: src/System.Net.Sockets/ref/System.Net.Sockets.cs
    startLine: 216
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  syntax:
    content: public int ReceiveFrom(byte[] buffer, ref EndPoint remoteEP)
    content.vb: Public Function ReceiveFrom(buffer As Byte(), ByRef remoteEP As EndPoint) As Integer
    parameters:
    - id: buffer
      type: System.Byte[]
    - id: remoteEP
      type: System.Net.EndPoint
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Net.Sockets.Socket.ReceiveFrom(System.Byte(), ByRef System.Net.EndPoint)
  name.vb: ReceiveFrom(Byte(), ByRef EndPoint)
- uid: System.Net.Sockets.Socket.ReceiveFrom(System.Byte[],System.Net.Sockets.SocketFlags,System.Net.EndPoint@)
  commentId: M:System.Net.Sockets.Socket.ReceiveFrom(System.Byte[],System.Net.Sockets.SocketFlags,System.Net.EndPoint@)
  id: ReceiveFrom(System.Byte[],System.Net.Sockets.SocketFlags,System.Net.EndPoint@)
  parent: System.Net.Sockets.Socket
  langs:
  - csharp
  - vb
  name: ReceiveFrom(Byte[], SocketFlags, ref EndPoint)
  fullName: System.Net.Sockets.Socket.ReceiveFrom(System.Byte[], System.Net.Sockets.SocketFlags, ref System.Net.EndPoint)
  type: Method
  source:
    remote:
      path: src/System.Net.Sockets/ref/System.Net.Sockets.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ReceiveFrom
    path: src/System.Net.Sockets/ref/System.Net.Sockets.cs
    startLine: 217
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  syntax:
    content: public int ReceiveFrom(byte[] buffer, SocketFlags socketFlags, ref EndPoint remoteEP)
    content.vb: Public Function ReceiveFrom(buffer As Byte(), socketFlags As SocketFlags, ByRef remoteEP As EndPoint) As Integer
    parameters:
    - id: buffer
      type: System.Byte[]
    - id: socketFlags
      type: System.Net.Sockets.SocketFlags
    - id: remoteEP
      type: System.Net.EndPoint
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Net.Sockets.Socket.ReceiveFrom(System.Byte(), System.Net.Sockets.SocketFlags, ByRef System.Net.EndPoint)
  name.vb: ReceiveFrom(Byte(), SocketFlags, ByRef EndPoint)
- uid: System.Net.Sockets.Socket.ReceiveFromAsync(System.Net.Sockets.SocketAsyncEventArgs)
  commentId: M:System.Net.Sockets.Socket.ReceiveFromAsync(System.Net.Sockets.SocketAsyncEventArgs)
  id: ReceiveFromAsync(System.Net.Sockets.SocketAsyncEventArgs)
  parent: System.Net.Sockets.Socket
  langs:
  - csharp
  - vb
  name: ReceiveFromAsync(SocketAsyncEventArgs)
  fullName: System.Net.Sockets.Socket.ReceiveFromAsync(System.Net.Sockets.SocketAsyncEventArgs)
  type: Method
  source:
    remote:
      path: src/System.Net.Sockets/src/System/Net/Sockets/Socket.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ReceiveFromAsync
    path: src/System.Net.Sockets/src/System/Net/Sockets/Socket.cs
    startLine: 4583
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  syntax:
    content: public bool ReceiveFromAsync(SocketAsyncEventArgs e)
    content.vb: Public Function ReceiveFromAsync(e As SocketAsyncEventArgs) As Boolean
    parameters:
    - id: e
      type: System.Net.Sockets.SocketAsyncEventArgs
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Net.Sockets.Socket.ReceiveMessageFrom(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags@,System.Net.EndPoint@,System.Net.Sockets.IPPacketInformation@)
  commentId: M:System.Net.Sockets.Socket.ReceiveMessageFrom(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags@,System.Net.EndPoint@,System.Net.Sockets.IPPacketInformation@)
  id: ReceiveMessageFrom(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags@,System.Net.EndPoint@,System.Net.Sockets.IPPacketInformation@)
  parent: System.Net.Sockets.Socket
  langs:
  - csharp
  - vb
  name: ReceiveMessageFrom(Byte[], Int32, Int32, ref SocketFlags, ref EndPoint, out IPPacketInformation)
  fullName: System.Net.Sockets.Socket.ReceiveMessageFrom(System.Byte[], System.Int32, System.Int32, ref System.Net.Sockets.SocketFlags, ref System.Net.EndPoint, out System.Net.Sockets.IPPacketInformation)
  type: Method
  source:
    remote:
      path: src/System.Net.Sockets/ref/System.Net.Sockets.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ReceiveMessageFrom
    path: src/System.Net.Sockets/ref/System.Net.Sockets.cs
    startLine: 219
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  syntax:
    content: public int ReceiveMessageFrom(byte[] buffer, int offset, int size, ref SocketFlags socketFlags, ref EndPoint remoteEP, out IPPacketInformation ipPacketInformation)
    content.vb: Public Function ReceiveMessageFrom(buffer As Byte(), offset As Integer, size As Integer, ByRef socketFlags As SocketFlags, ByRef remoteEP As EndPoint, ByRef ipPacketInformation As IPPacketInformation) As Integer
    parameters:
    - id: buffer
      type: System.Byte[]
    - id: offset
      type: System.Int32
    - id: size
      type: System.Int32
    - id: socketFlags
      type: System.Net.Sockets.SocketFlags
    - id: remoteEP
      type: System.Net.EndPoint
    - id: ipPacketInformation
      type: System.Net.Sockets.IPPacketInformation
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Net.Sockets.Socket.ReceiveMessageFrom(System.Byte(), System.Int32, System.Int32, ByRef System.Net.Sockets.SocketFlags, ByRef System.Net.EndPoint, ByRef System.Net.Sockets.IPPacketInformation)
  name.vb: ReceiveMessageFrom(Byte(), Int32, Int32, ByRef SocketFlags, ByRef EndPoint, ByRef IPPacketInformation)
- uid: System.Net.Sockets.Socket.ReceiveMessageFromAsync(System.Net.Sockets.SocketAsyncEventArgs)
  commentId: M:System.Net.Sockets.Socket.ReceiveMessageFromAsync(System.Net.Sockets.SocketAsyncEventArgs)
  id: ReceiveMessageFromAsync(System.Net.Sockets.SocketAsyncEventArgs)
  parent: System.Net.Sockets.Socket
  langs:
  - csharp
  - vb
  name: ReceiveMessageFromAsync(SocketAsyncEventArgs)
  fullName: System.Net.Sockets.Socket.ReceiveMessageFromAsync(System.Net.Sockets.SocketAsyncEventArgs)
  type: Method
  source:
    remote:
      path: src/System.Net.Sockets/src/System/Net/Sockets/Socket.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ReceiveMessageFromAsync
    path: src/System.Net.Sockets/src/System/Net/Sockets/Socket.cs
    startLine: 4660
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  syntax:
    content: public bool ReceiveMessageFromAsync(SocketAsyncEventArgs e)
    content.vb: Public Function ReceiveMessageFromAsync(e As SocketAsyncEventArgs) As Boolean
    parameters:
    - id: e
      type: System.Net.Sockets.SocketAsyncEventArgs
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Net.Sockets.Socket.Select(System.Collections.IList,System.Collections.IList,System.Collections.IList,System.Int32)
  commentId: M:System.Net.Sockets.Socket.Select(System.Collections.IList,System.Collections.IList,System.Collections.IList,System.Int32)
  id: Select(System.Collections.IList,System.Collections.IList,System.Collections.IList,System.Int32)
  parent: System.Net.Sockets.Socket
  langs:
  - csharp
  - vb
  name: Select(Collections.IList, Collections.IList, Collections.IList, Int32)
  fullName: System.Net.Sockets.Socket.Select(System.Collections.IList, System.Collections.IList, System.Collections.IList, System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Net.Sockets/ref/System.Net.Sockets.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Select
    path: src/System.Net.Sockets/ref/System.Net.Sockets.cs
    startLine: 221
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  syntax:
    content: public static void Select(Collections.IList checkRead, Collections.IList checkWrite, Collections.IList checkError, int microSeconds)
    content.vb: Public Shared Sub Select(checkRead As Collections.IList, checkWrite As Collections.IList, checkError As Collections.IList, microSeconds As Integer)
    parameters:
    - id: checkRead
      type: System.Collections.IList
    - id: checkWrite
      type: System.Collections.IList
    - id: checkError
      type: System.Collections.IList
    - id: microSeconds
      type: System.Int32
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Net.Sockets.Socket.Send(System.Byte[])
  commentId: M:System.Net.Sockets.Socket.Send(System.Byte[])
  id: Send(System.Byte[])
  parent: System.Net.Sockets.Socket
  langs:
  - csharp
  - vb
  name: Send(Byte[])
  fullName: System.Net.Sockets.Socket.Send(System.Byte[])
  type: Method
  source:
    remote:
      path: src/System.Net.Sockets/src/System/Net/Sockets/Socket.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Send
    path: src/System.Net.Sockets/src/System/Net/Sockets/Socket.cs
    startLine: 1160
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  syntax:
    content: public int Send(byte[] buffer)
    content.vb: Public Function Send(buffer As Byte()) As Integer
    parameters:
    - id: buffer
      type: System.Byte[]
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Net.Sockets.Socket.Send(System.Byte())
  name.vb: Send(Byte())
- uid: System.Net.Sockets.Socket.Send(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags)
  commentId: M:System.Net.Sockets.Socket.Send(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags)
  id: Send(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags)
  parent: System.Net.Sockets.Socket
  langs:
  - csharp
  - vb
  name: Send(Byte[], Int32, Int32, SocketFlags)
  fullName: System.Net.Sockets.Socket.Send(System.Byte[], System.Int32, System.Int32, System.Net.Sockets.SocketFlags)
  type: Method
  source:
    remote:
      path: src/System.Net.Sockets/src/System/Net/Sockets/Socket.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Send
    path: src/System.Net.Sockets/src/System/Net/Sockets/Socket.cs
    startLine: 1252
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  syntax:
    content: public int Send(byte[] buffer, int offset, int size, SocketFlags socketFlags)
    content.vb: Public Function Send(buffer As Byte(), offset As Integer, size As Integer, socketFlags As SocketFlags) As Integer
    parameters:
    - id: buffer
      type: System.Byte[]
    - id: offset
      type: System.Int32
    - id: size
      type: System.Int32
    - id: socketFlags
      type: System.Net.Sockets.SocketFlags
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Net.Sockets.Socket.Send(System.Byte(), System.Int32, System.Int32, System.Net.Sockets.SocketFlags)
  name.vb: Send(Byte(), Int32, Int32, SocketFlags)
- uid: System.Net.Sockets.Socket.Send(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.Sockets.SocketError@)
  commentId: M:System.Net.Sockets.Socket.Send(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.Sockets.SocketError@)
  id: Send(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.Sockets.SocketError@)
  parent: System.Net.Sockets.Socket
  langs:
  - csharp
  - vb
  name: Send(Byte[], Int32, Int32, SocketFlags, out SocketError)
  fullName: System.Net.Sockets.Socket.Send(System.Byte[], System.Int32, System.Int32, System.Net.Sockets.SocketFlags, out System.Net.Sockets.SocketError)
  type: Method
  source:
    remote:
      path: src/System.Net.Sockets/ref/System.Net.Sockets.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Send
    path: src/System.Net.Sockets/ref/System.Net.Sockets.cs
    startLine: 224
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  syntax:
    content: public int Send(byte[] buffer, int offset, int size, SocketFlags socketFlags, out SocketError errorCode)
    content.vb: Public Function Send(buffer As Byte(), offset As Integer, size As Integer, socketFlags As SocketFlags, ByRef errorCode As SocketError) As Integer
    parameters:
    - id: buffer
      type: System.Byte[]
    - id: offset
      type: System.Int32
    - id: size
      type: System.Int32
    - id: socketFlags
      type: System.Net.Sockets.SocketFlags
    - id: errorCode
      type: System.Net.Sockets.SocketError
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Net.Sockets.Socket.Send(System.Byte(), System.Int32, System.Int32, System.Net.Sockets.SocketFlags, ByRef System.Net.Sockets.SocketError)
  name.vb: Send(Byte(), Int32, Int32, SocketFlags, ByRef SocketError)
- uid: System.Net.Sockets.Socket.Send(System.Byte[],System.Int32,System.Net.Sockets.SocketFlags)
  commentId: M:System.Net.Sockets.Socket.Send(System.Byte[],System.Int32,System.Net.Sockets.SocketFlags)
  id: Send(System.Byte[],System.Int32,System.Net.Sockets.SocketFlags)
  parent: System.Net.Sockets.Socket
  langs:
  - csharp
  - vb
  name: Send(Byte[], Int32, SocketFlags)
  fullName: System.Net.Sockets.Socket.Send(System.Byte[], System.Int32, System.Net.Sockets.SocketFlags)
  type: Method
  source:
    remote:
      path: src/System.Net.Sockets/src/System/Net/Sockets/Socket.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Send
    path: src/System.Net.Sockets/src/System/Net/Sockets/Socket.cs
    startLine: 1150
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  syntax:
    content: public int Send(byte[] buffer, int size, SocketFlags socketFlags)
    content.vb: Public Function Send(buffer As Byte(), size As Integer, socketFlags As SocketFlags) As Integer
    parameters:
    - id: buffer
      type: System.Byte[]
    - id: size
      type: System.Int32
    - id: socketFlags
      type: System.Net.Sockets.SocketFlags
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Net.Sockets.Socket.Send(System.Byte(), System.Int32, System.Net.Sockets.SocketFlags)
  name.vb: Send(Byte(), Int32, SocketFlags)
- uid: System.Net.Sockets.Socket.Send(System.Byte[],System.Net.Sockets.SocketFlags)
  commentId: M:System.Net.Sockets.Socket.Send(System.Byte[],System.Net.Sockets.SocketFlags)
  id: Send(System.Byte[],System.Net.Sockets.SocketFlags)
  parent: System.Net.Sockets.Socket
  langs:
  - csharp
  - vb
  name: Send(Byte[], SocketFlags)
  fullName: System.Net.Sockets.Socket.Send(System.Byte[], System.Net.Sockets.SocketFlags)
  type: Method
  source:
    remote:
      path: src/System.Net.Sockets/src/System/Net/Sockets/Socket.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Send
    path: src/System.Net.Sockets/src/System/Net/Sockets/Socket.cs
    startLine: 1155
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  syntax:
    content: public int Send(byte[] buffer, SocketFlags socketFlags)
    content.vb: Public Function Send(buffer As Byte(), socketFlags As SocketFlags) As Integer
    parameters:
    - id: buffer
      type: System.Byte[]
    - id: socketFlags
      type: System.Net.Sockets.SocketFlags
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Net.Sockets.Socket.Send(System.Byte(), System.Net.Sockets.SocketFlags)
  name.vb: Send(Byte(), SocketFlags)
- uid: System.Net.Sockets.Socket.Send(System.Collections.Generic.IList{System.ArraySegment{System.Byte}})
  commentId: M:System.Net.Sockets.Socket.Send(System.Collections.Generic.IList{System.ArraySegment{System.Byte}})
  id: Send(System.Collections.Generic.IList{System.ArraySegment{System.Byte}})
  parent: System.Net.Sockets.Socket
  langs:
  - csharp
  - vb
  name: Send(Collections.Generic.IList<ArraySegment<Byte>>)
  fullName: System.Net.Sockets.Socket.Send(System.Collections.Generic.IList<System.ArraySegment<System.Byte>>)
  type: Method
  source:
    remote:
      path: src/System.Net.Sockets/ref/System.Net.Sockets.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Send
    path: src/System.Net.Sockets/ref/System.Net.Sockets.cs
    startLine: 227
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  syntax:
    content: public int Send(Collections.Generic.IList<ArraySegment<byte>> buffers)
    content.vb: Public Function Send(buffers As Collections.Generic.IList(Of ArraySegment(Of Byte))) As Integer
    parameters:
    - id: buffers
      type: System.Collections.Generic.IList{System.ArraySegment{System.Byte}}
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Net.Sockets.Socket.Send(System.Collections.Generic.IList(Of System.ArraySegment(Of System.Byte)))
  name.vb: Send(Collections.Generic.IList(Of ArraySegment(Of Byte)))
- uid: System.Net.Sockets.Socket.Send(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.Net.Sockets.SocketFlags)
  commentId: M:System.Net.Sockets.Socket.Send(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.Net.Sockets.SocketFlags)
  id: Send(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.Net.Sockets.SocketFlags)
  parent: System.Net.Sockets.Socket
  langs:
  - csharp
  - vb
  name: Send(Collections.Generic.IList<ArraySegment<Byte>>, SocketFlags)
  fullName: System.Net.Sockets.Socket.Send(System.Collections.Generic.IList<System.ArraySegment<System.Byte>>, System.Net.Sockets.SocketFlags)
  type: Method
  source:
    remote:
      path: src/System.Net.Sockets/ref/System.Net.Sockets.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Send
    path: src/System.Net.Sockets/ref/System.Net.Sockets.cs
    startLine: 228
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  syntax:
    content: public int Send(Collections.Generic.IList<ArraySegment<byte>> buffers, SocketFlags socketFlags)
    content.vb: Public Function Send(buffers As Collections.Generic.IList(Of ArraySegment(Of Byte)), socketFlags As SocketFlags) As Integer
    parameters:
    - id: buffers
      type: System.Collections.Generic.IList{System.ArraySegment{System.Byte}}
    - id: socketFlags
      type: System.Net.Sockets.SocketFlags
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Net.Sockets.Socket.Send(System.Collections.Generic.IList(Of System.ArraySegment(Of System.Byte)), System.Net.Sockets.SocketFlags)
  name.vb: Send(Collections.Generic.IList(Of ArraySegment(Of Byte)), SocketFlags)
- uid: System.Net.Sockets.Socket.Send(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.Net.Sockets.SocketFlags,System.Net.Sockets.SocketError@)
  commentId: M:System.Net.Sockets.Socket.Send(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.Net.Sockets.SocketFlags,System.Net.Sockets.SocketError@)
  id: Send(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.Net.Sockets.SocketFlags,System.Net.Sockets.SocketError@)
  parent: System.Net.Sockets.Socket
  langs:
  - csharp
  - vb
  name: Send(Collections.Generic.IList<ArraySegment<Byte>>, SocketFlags, out SocketError)
  fullName: System.Net.Sockets.Socket.Send(System.Collections.Generic.IList<System.ArraySegment<System.Byte>>, System.Net.Sockets.SocketFlags, out System.Net.Sockets.SocketError)
  type: Method
  source:
    remote:
      path: src/System.Net.Sockets/ref/System.Net.Sockets.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Send
    path: src/System.Net.Sockets/ref/System.Net.Sockets.cs
    startLine: 229
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  syntax:
    content: public int Send(Collections.Generic.IList<ArraySegment<byte>> buffers, SocketFlags socketFlags, out SocketError errorCode)
    content.vb: Public Function Send(buffers As Collections.Generic.IList(Of ArraySegment(Of Byte)), socketFlags As SocketFlags, ByRef errorCode As SocketError) As Integer
    parameters:
    - id: buffers
      type: System.Collections.Generic.IList{System.ArraySegment{System.Byte}}
    - id: socketFlags
      type: System.Net.Sockets.SocketFlags
    - id: errorCode
      type: System.Net.Sockets.SocketError
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Net.Sockets.Socket.Send(System.Collections.Generic.IList(Of System.ArraySegment(Of System.Byte)), System.Net.Sockets.SocketFlags, ByRef System.Net.Sockets.SocketError)
  name.vb: Send(Collections.Generic.IList(Of ArraySegment(Of Byte)), SocketFlags, ByRef SocketError)
- uid: System.Net.Sockets.Socket.SendAsync(System.Net.Sockets.SocketAsyncEventArgs)
  commentId: M:System.Net.Sockets.Socket.SendAsync(System.Net.Sockets.SocketAsyncEventArgs)
  id: SendAsync(System.Net.Sockets.SocketAsyncEventArgs)
  parent: System.Net.Sockets.Socket
  langs:
  - csharp
  - vb
  name: SendAsync(SocketAsyncEventArgs)
  fullName: System.Net.Sockets.Socket.SendAsync(System.Net.Sockets.SocketAsyncEventArgs)
  type: Method
  source:
    remote:
      path: src/System.Net.Sockets/src/System/Net/Sockets/Socket.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: SendAsync
    path: src/System.Net.Sockets/src/System/Net/Sockets/Socket.cs
    startLine: 4739
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  syntax:
    content: public bool SendAsync(SocketAsyncEventArgs e)
    content.vb: Public Function SendAsync(e As SocketAsyncEventArgs) As Boolean
    parameters:
    - id: e
      type: System.Net.Sockets.SocketAsyncEventArgs
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)
  commentId: M:System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)
  id: SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)
  parent: System.Net.Sockets.Socket
  langs:
  - csharp
  - vb
  name: SendPacketsAsync(SocketAsyncEventArgs)
  fullName: System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)
  type: Method
  source:
    remote:
      path: src/System.Net.Sockets/src/System/Net/Sockets/Socket.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: SendPacketsAsync
    path: src/System.Net.Sockets/src/System/Net/Sockets/Socket.cs
    startLine: 4797
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  syntax:
    content: public bool SendPacketsAsync(SocketAsyncEventArgs e)
    content.vb: Public Function SendPacketsAsync(e As SocketAsyncEventArgs) As Boolean
    parameters:
    - id: e
      type: System.Net.Sockets.SocketAsyncEventArgs
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Net.Sockets.Socket.SendTo(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.EndPoint)
  commentId: M:System.Net.Sockets.Socket.SendTo(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.EndPoint)
  id: SendTo(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.EndPoint)
  parent: System.Net.Sockets.Socket
  langs:
  - csharp
  - vb
  name: SendTo(Byte[], Int32, Int32, SocketFlags, EndPoint)
  fullName: System.Net.Sockets.Socket.SendTo(System.Byte[], System.Int32, System.Int32, System.Net.Sockets.SocketFlags, System.Net.EndPoint)
  type: Method
  source:
    remote:
      path: src/System.Net.Sockets/ref/System.Net.Sockets.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: SendTo
    path: src/System.Net.Sockets/ref/System.Net.Sockets.cs
    startLine: 232
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  syntax:
    content: public int SendTo(byte[] buffer, int offset, int size, SocketFlags socketFlags, EndPoint remoteEP)
    content.vb: Public Function SendTo(buffer As Byte(), offset As Integer, size As Integer, socketFlags As SocketFlags, remoteEP As EndPoint) As Integer
    parameters:
    - id: buffer
      type: System.Byte[]
    - id: offset
      type: System.Int32
    - id: size
      type: System.Int32
    - id: socketFlags
      type: System.Net.Sockets.SocketFlags
    - id: remoteEP
      type: System.Net.EndPoint
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Net.Sockets.Socket.SendTo(System.Byte(), System.Int32, System.Int32, System.Net.Sockets.SocketFlags, System.Net.EndPoint)
  name.vb: SendTo(Byte(), Int32, Int32, SocketFlags, EndPoint)
- uid: System.Net.Sockets.Socket.SendTo(System.Byte[],System.Int32,System.Net.Sockets.SocketFlags,System.Net.EndPoint)
  commentId: M:System.Net.Sockets.Socket.SendTo(System.Byte[],System.Int32,System.Net.Sockets.SocketFlags,System.Net.EndPoint)
  id: SendTo(System.Byte[],System.Int32,System.Net.Sockets.SocketFlags,System.Net.EndPoint)
  parent: System.Net.Sockets.Socket
  langs:
  - csharp
  - vb
  name: SendTo(Byte[], Int32, SocketFlags, EndPoint)
  fullName: System.Net.Sockets.Socket.SendTo(System.Byte[], System.Int32, System.Net.Sockets.SocketFlags, System.Net.EndPoint)
  type: Method
  source:
    remote:
      path: src/System.Net.Sockets/ref/System.Net.Sockets.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: SendTo
    path: src/System.Net.Sockets/ref/System.Net.Sockets.cs
    startLine: 233
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  syntax:
    content: public int SendTo(byte[] buffer, int size, SocketFlags socketFlags, EndPoint remoteEP)
    content.vb: Public Function SendTo(buffer As Byte(), size As Integer, socketFlags As SocketFlags, remoteEP As EndPoint) As Integer
    parameters:
    - id: buffer
      type: System.Byte[]
    - id: size
      type: System.Int32
    - id: socketFlags
      type: System.Net.Sockets.SocketFlags
    - id: remoteEP
      type: System.Net.EndPoint
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Net.Sockets.Socket.SendTo(System.Byte(), System.Int32, System.Net.Sockets.SocketFlags, System.Net.EndPoint)
  name.vb: SendTo(Byte(), Int32, SocketFlags, EndPoint)
- uid: System.Net.Sockets.Socket.SendTo(System.Byte[],System.Net.EndPoint)
  commentId: M:System.Net.Sockets.Socket.SendTo(System.Byte[],System.Net.EndPoint)
  id: SendTo(System.Byte[],System.Net.EndPoint)
  parent: System.Net.Sockets.Socket
  langs:
  - csharp
  - vb
  name: SendTo(Byte[], EndPoint)
  fullName: System.Net.Sockets.Socket.SendTo(System.Byte[], System.Net.EndPoint)
  type: Method
  source:
    remote:
      path: src/System.Net.Sockets/ref/System.Net.Sockets.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: SendTo
    path: src/System.Net.Sockets/ref/System.Net.Sockets.cs
    startLine: 234
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  syntax:
    content: public int SendTo(byte[] buffer, EndPoint remoteEP)
    content.vb: Public Function SendTo(buffer As Byte(), remoteEP As EndPoint) As Integer
    parameters:
    - id: buffer
      type: System.Byte[]
    - id: remoteEP
      type: System.Net.EndPoint
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Net.Sockets.Socket.SendTo(System.Byte(), System.Net.EndPoint)
  name.vb: SendTo(Byte(), EndPoint)
- uid: System.Net.Sockets.Socket.SendTo(System.Byte[],System.Net.Sockets.SocketFlags,System.Net.EndPoint)
  commentId: M:System.Net.Sockets.Socket.SendTo(System.Byte[],System.Net.Sockets.SocketFlags,System.Net.EndPoint)
  id: SendTo(System.Byte[],System.Net.Sockets.SocketFlags,System.Net.EndPoint)
  parent: System.Net.Sockets.Socket
  langs:
  - csharp
  - vb
  name: SendTo(Byte[], SocketFlags, EndPoint)
  fullName: System.Net.Sockets.Socket.SendTo(System.Byte[], System.Net.Sockets.SocketFlags, System.Net.EndPoint)
  type: Method
  source:
    remote:
      path: src/System.Net.Sockets/ref/System.Net.Sockets.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: SendTo
    path: src/System.Net.Sockets/ref/System.Net.Sockets.cs
    startLine: 235
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  syntax:
    content: public int SendTo(byte[] buffer, SocketFlags socketFlags, EndPoint remoteEP)
    content.vb: Public Function SendTo(buffer As Byte(), socketFlags As SocketFlags, remoteEP As EndPoint) As Integer
    parameters:
    - id: buffer
      type: System.Byte[]
    - id: socketFlags
      type: System.Net.Sockets.SocketFlags
    - id: remoteEP
      type: System.Net.EndPoint
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Net.Sockets.Socket.SendTo(System.Byte(), System.Net.Sockets.SocketFlags, System.Net.EndPoint)
  name.vb: SendTo(Byte(), SocketFlags, EndPoint)
- uid: System.Net.Sockets.Socket.SendToAsync(System.Net.Sockets.SocketAsyncEventArgs)
  commentId: M:System.Net.Sockets.Socket.SendToAsync(System.Net.Sockets.SocketAsyncEventArgs)
  id: SendToAsync(System.Net.Sockets.SocketAsyncEventArgs)
  parent: System.Net.Sockets.Socket
  langs:
  - csharp
  - vb
  name: SendToAsync(SocketAsyncEventArgs)
  fullName: System.Net.Sockets.Socket.SendToAsync(System.Net.Sockets.SocketAsyncEventArgs)
  type: Method
  source:
    remote:
      path: src/System.Net.Sockets/src/System/Net/Sockets/Socket.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: SendToAsync
    path: src/System.Net.Sockets/src/System/Net/Sockets/Socket.cs
    startLine: 4873
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  syntax:
    content: public bool SendToAsync(SocketAsyncEventArgs e)
    content.vb: Public Function SendToAsync(e As SocketAsyncEventArgs) As Boolean
    parameters:
    - id: e
      type: System.Net.Sockets.SocketAsyncEventArgs
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Net.Sockets.Socket.SetSocketOption(System.Net.Sockets.SocketOptionLevel,System.Net.Sockets.SocketOptionName,System.Boolean)
  commentId: M:System.Net.Sockets.Socket.SetSocketOption(System.Net.Sockets.SocketOptionLevel,System.Net.Sockets.SocketOptionName,System.Boolean)
  id: SetSocketOption(System.Net.Sockets.SocketOptionLevel,System.Net.Sockets.SocketOptionName,System.Boolean)
  parent: System.Net.Sockets.Socket
  langs:
  - csharp
  - vb
  name: SetSocketOption(SocketOptionLevel, SocketOptionName, Boolean)
  fullName: System.Net.Sockets.Socket.SetSocketOption(System.Net.Sockets.SocketOptionLevel, System.Net.Sockets.SocketOptionName, System.Boolean)
  type: Method
  source:
    remote:
      path: src/System.Net.Sockets/src/System/Net/Sockets/Socket.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: SetSocketOption
    path: src/System.Net.Sockets/src/System/Net/Sockets/Socket.cs
    startLine: 1984
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  syntax:
    content: public void SetSocketOption(SocketOptionLevel optionLevel, SocketOptionName optionName, bool optionValue)
    content.vb: Public Sub SetSocketOption(optionLevel As SocketOptionLevel, optionName As SocketOptionName, optionValue As Boolean)
    parameters:
    - id: optionLevel
      type: System.Net.Sockets.SocketOptionLevel
    - id: optionName
      type: System.Net.Sockets.SocketOptionName
    - id: optionValue
      type: System.Boolean
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Net.Sockets.Socket.SetSocketOption(System.Net.Sockets.SocketOptionLevel,System.Net.Sockets.SocketOptionName,System.Byte[])
  commentId: M:System.Net.Sockets.Socket.SetSocketOption(System.Net.Sockets.SocketOptionLevel,System.Net.Sockets.SocketOptionName,System.Byte[])
  id: SetSocketOption(System.Net.Sockets.SocketOptionLevel,System.Net.Sockets.SocketOptionName,System.Byte[])
  parent: System.Net.Sockets.Socket
  langs:
  - csharp
  - vb
  name: SetSocketOption(SocketOptionLevel, SocketOptionName, Byte[])
  fullName: System.Net.Sockets.Socket.SetSocketOption(System.Net.Sockets.SocketOptionLevel, System.Net.Sockets.SocketOptionName, System.Byte[])
  type: Method
  source:
    remote:
      path: src/System.Net.Sockets/src/System/Net/Sockets/Socket.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: SetSocketOption
    path: src/System.Net.Sockets/src/System/Net/Sockets/Socket.cs
    startLine: 1947
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  syntax:
    content: public void SetSocketOption(SocketOptionLevel optionLevel, SocketOptionName optionName, byte[] optionValue)
    content.vb: Public Sub SetSocketOption(optionLevel As SocketOptionLevel, optionName As SocketOptionName, optionValue As Byte())
    parameters:
    - id: optionLevel
      type: System.Net.Sockets.SocketOptionLevel
    - id: optionName
      type: System.Net.Sockets.SocketOptionName
    - id: optionValue
      type: System.Byte[]
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Net.Sockets.Socket.SetSocketOption(System.Net.Sockets.SocketOptionLevel, System.Net.Sockets.SocketOptionName, System.Byte())
  name.vb: SetSocketOption(SocketOptionLevel, SocketOptionName, Byte())
- uid: System.Net.Sockets.Socket.SetSocketOption(System.Net.Sockets.SocketOptionLevel,System.Net.Sockets.SocketOptionName,System.Int32)
  commentId: M:System.Net.Sockets.Socket.SetSocketOption(System.Net.Sockets.SocketOptionLevel,System.Net.Sockets.SocketOptionName,System.Int32)
  id: SetSocketOption(System.Net.Sockets.SocketOptionLevel,System.Net.Sockets.SocketOptionName,System.Int32)
  parent: System.Net.Sockets.Socket
  langs:
  - csharp
  - vb
  name: SetSocketOption(SocketOptionLevel, SocketOptionName, Int32)
  fullName: System.Net.Sockets.Socket.SetSocketOption(System.Net.Sockets.SocketOptionLevel, System.Net.Sockets.SocketOptionName, System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Net.Sockets/src/System/Net/Sockets/Socket.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: SetSocketOption
    path: src/System.Net.Sockets/src/System/Net/Sockets/Socket.cs
    startLine: 1932
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  syntax:
    content: public void SetSocketOption(SocketOptionLevel optionLevel, SocketOptionName optionName, int optionValue)
    content.vb: Public Sub SetSocketOption(optionLevel As SocketOptionLevel, optionName As SocketOptionName, optionValue As Integer)
    parameters:
    - id: optionLevel
      type: System.Net.Sockets.SocketOptionLevel
    - id: optionName
      type: System.Net.Sockets.SocketOptionName
    - id: optionValue
      type: System.Int32
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Net.Sockets.Socket.SetSocketOption(System.Net.Sockets.SocketOptionLevel,System.Net.Sockets.SocketOptionName,System.Object)
  commentId: M:System.Net.Sockets.Socket.SetSocketOption(System.Net.Sockets.SocketOptionLevel,System.Net.Sockets.SocketOptionName,System.Object)
  id: SetSocketOption(System.Net.Sockets.SocketOptionLevel,System.Net.Sockets.SocketOptionName,System.Object)
  parent: System.Net.Sockets.Socket
  langs:
  - csharp
  - vb
  name: SetSocketOption(SocketOptionLevel, SocketOptionName, Object)
  fullName: System.Net.Sockets.Socket.SetSocketOption(System.Net.Sockets.SocketOptionLevel, System.Net.Sockets.SocketOptionName, System.Object)
  type: Method
  source:
    remote:
      path: src/System.Net.Sockets/src/System/Net/Sockets/Socket.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: SetSocketOption
    path: src/System.Net.Sockets/src/System/Net/Sockets/Socket.cs
    startLine: 1990
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  syntax:
    content: public void SetSocketOption(SocketOptionLevel optionLevel, SocketOptionName optionName, object optionValue)
    content.vb: Public Sub SetSocketOption(optionLevel As SocketOptionLevel, optionName As SocketOptionName, optionValue As Object)
    parameters:
    - id: optionLevel
      type: System.Net.Sockets.SocketOptionLevel
    - id: optionName
      type: System.Net.Sockets.SocketOptionName
    - id: optionValue
      type: System.Object
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Net.Sockets.Socket.Shutdown(System.Net.Sockets.SocketShutdown)
  commentId: M:System.Net.Sockets.Socket.Shutdown(System.Net.Sockets.SocketShutdown)
  id: Shutdown(System.Net.Sockets.SocketShutdown)
  parent: System.Net.Sockets.Socket
  langs:
  - csharp
  - vb
  name: Shutdown(SocketShutdown)
  fullName: System.Net.Sockets.Socket.Shutdown(System.Net.Sockets.SocketShutdown)
  type: Method
  source:
    remote:
      path: src/System.Net.Sockets/src/System/Net/Sockets/Socket.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Shutdown
    path: src/System.Net.Sockets/src/System/Net/Sockets/Socket.cs
    startLine: 4204
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  syntax:
    content: public void Shutdown(SocketShutdown how)
    content.vb: Public Sub Shutdown(how As SocketShutdown)
    parameters:
    - id: how
      type: System.Net.Sockets.SocketShutdown
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: System.Net.Sockets
  isExternal: false
  name: System.Net.Sockets
  fullName: System.Net.Sockets
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Net.Sockets.AddressFamily
  parent: System.Net.Sockets
  isExternal: false
  name: AddressFamily
  fullName: System.Net.Sockets.AddressFamily
- uid: System.Net.Sockets.SocketType
  parent: System.Net.Sockets
  isExternal: false
  name: SocketType
  fullName: System.Net.Sockets.SocketType
- uid: System.Net.Sockets.ProtocolType
  parent: System.Net.Sockets
  isExternal: false
  name: ProtocolType
  fullName: System.Net.Sockets.ProtocolType
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  fullName: System.Int32
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  fullName: System.Boolean
- uid: System.Net.Sockets.LingerOption
  parent: System.Net.Sockets
  isExternal: false
  name: LingerOption
  fullName: System.Net.Sockets.LingerOption
- uid: System.Net.EndPoint
  parent: System.Net
  isExternal: false
  name: EndPoint
  fullName: System.Net.EndPoint
- uid: System.Net
  isExternal: false
  name: System.Net
  fullName: System.Net
- uid: System.Int16
  parent: System
  isExternal: false
  name: Int16
  fullName: System.Int16
- uid: System.Net.Sockets.Socket
  parent: System.Net.Sockets
  isExternal: false
  name: Socket
  fullName: System.Net.Sockets.Socket
- uid: System.Net.Sockets.SocketAsyncEventArgs
  parent: System.Net.Sockets
  isExternal: false
  name: SocketAsyncEventArgs
  fullName: System.Net.Sockets.SocketAsyncEventArgs
- uid: System.Net.IPAddress
  parent: System.Net
  isExternal: false
  name: IPAddress
  fullName: System.Net.IPAddress
- uid: System.Net.IPAddress[]
  isExternal: false
  name: IPAddress[]
  fullName: System.Net.IPAddress[]
  fullname.vb: System.Net.IPAddress()
  name.vb: IPAddress()
  spec.csharp:
  - uid: System.Net.IPAddress
    name: IPAddress
    fullName: System.Net.IPAddress
  - name: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Net.IPAddress
    name: IPAddress
    fullName: System.Net.IPAddress
  - name: ()
    fullName: ()
- uid: System.String
  parent: System
  isExternal: false
  name: String
  fullName: System.String
- uid: System.Net.Sockets.SocketOptionLevel
  parent: System.Net.Sockets
  isExternal: false
  name: SocketOptionLevel
  fullName: System.Net.Sockets.SocketOptionLevel
- uid: System.Net.Sockets.SocketOptionName
  parent: System.Net.Sockets
  isExternal: false
  name: SocketOptionName
  fullName: System.Net.Sockets.SocketOptionName
- uid: System.Byte[]
  isExternal: false
  name: Byte[]
  fullName: System.Byte[]
  fullname.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
  - name: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
  - name: ()
    fullName: ()
- uid: System.Net.Sockets.IOControlCode
  parent: System.Net.Sockets
  isExternal: false
  name: IOControlCode
  fullName: System.Net.Sockets.IOControlCode
- uid: System.Net.Sockets.SelectMode
  parent: System.Net.Sockets
  isExternal: false
  name: SelectMode
  fullName: System.Net.Sockets.SelectMode
- uid: System.Net.Sockets.SocketFlags
  parent: System.Net.Sockets
  isExternal: false
  name: SocketFlags
  fullName: System.Net.Sockets.SocketFlags
- uid: System.Net.Sockets.SocketError
  parent: System.Net.Sockets
  isExternal: false
  name: SocketError
  fullName: System.Net.Sockets.SocketError
- uid: System.Collections.Generic.IList{System.ArraySegment{System.Byte}}
  definition: System.Collections.Generic.IList`1
  name: Collections.Generic.IList<ArraySegment<Byte>>
  fullName: System.Collections.Generic.IList<System.ArraySegment<System.Byte>>
  fullname.vb: System.Collections.Generic.IList(Of System.ArraySegment(Of System.Byte))
  name.vb: Collections.Generic.IList(Of ArraySegment(Of Byte))
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: Collections.Generic.IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    fullName: <
  - uid: System.ArraySegment`1
    name: ArraySegment
    fullName: System.ArraySegment
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: Collections.Generic.IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.ArraySegment`1
    name: ArraySegment
    fullName: System.ArraySegment
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
    isExternal: true
  - name: )
    fullName: )
  - name: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  parent: System.Collections.Generic
  isExternal: false
  name: Collections.Generic.IList<>
  fullName: System.Collections.Generic.IList<>
  fullname.vb: System.Collections.Generic.IList(Of )
  name.vb: Collections.Generic.IList(Of )
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: Collections.Generic.IList
    fullName: System.Collections.Generic.IList
  - name: <
    fullName: <
  - {}
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: Collections.Generic.IList
    fullName: System.Collections.Generic.IList
  - name: '(Of '
    fullName: '(Of '
  - {}
  - name: )
    fullName: )
- uid: System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Net.Sockets.IPPacketInformation
  parent: System.Net.Sockets
  isExternal: false
  name: IPPacketInformation
  fullName: System.Net.Sockets.IPPacketInformation
- uid: System.Collections.IList
  parent: System.Collections
  isExternal: false
  name: IList
  fullName: System.Collections.IList
- uid: System.Collections
  isExternal: false
  name: System.Collections
  fullName: System.Collections
- uid: System.Net.Sockets.SocketShutdown
  parent: System.Net.Sockets
  isExternal: false
  name: SocketShutdown
  fullName: System.Net.Sockets.SocketShutdown
