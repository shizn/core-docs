items:
- uid: System.Net.Sockets.Socket
  commentId: T:System.Net.Sockets.Socket
  id: Socket
  parent: System.Net.Sockets
  children:
  - System.Net.Sockets.Socket.#ctor(System.Net.Sockets.AddressFamily,System.Net.Sockets.SocketType,System.Net.Sockets.ProtocolType)
  - System.Net.Sockets.Socket.#ctor(System.Net.Sockets.SocketType,System.Net.Sockets.ProtocolType)
  - System.Net.Sockets.Socket.Accept
  - System.Net.Sockets.Socket.AcceptAsync(System.Net.Sockets.SocketAsyncEventArgs)
  - System.Net.Sockets.Socket.AddressFamily
  - System.Net.Sockets.Socket.Available
  - System.Net.Sockets.Socket.Bind(System.Net.EndPoint)
  - System.Net.Sockets.Socket.Blocking
  - System.Net.Sockets.Socket.CancelConnectAsync(System.Net.Sockets.SocketAsyncEventArgs)
  - System.Net.Sockets.Socket.Connect(System.Net.EndPoint)
  - System.Net.Sockets.Socket.Connect(System.Net.IPAddress,System.Int32)
  - System.Net.Sockets.Socket.Connect(System.Net.IPAddress[],System.Int32)
  - System.Net.Sockets.Socket.Connect(System.String,System.Int32)
  - System.Net.Sockets.Socket.ConnectAsync(System.Net.Sockets.SocketAsyncEventArgs)
  - System.Net.Sockets.Socket.ConnectAsync(System.Net.Sockets.SocketType,System.Net.Sockets.ProtocolType,System.Net.Sockets.SocketAsyncEventArgs)
  - System.Net.Sockets.Socket.Connected
  - System.Net.Sockets.Socket.Dispose
  - System.Net.Sockets.Socket.Dispose(System.Boolean)
  - System.Net.Sockets.Socket.DontFragment
  - System.Net.Sockets.Socket.DualMode
  - System.Net.Sockets.Socket.EnableBroadcast
  - System.Net.Sockets.Socket.ExclusiveAddressUse
  - System.Net.Sockets.Socket.Finalize
  - System.Net.Sockets.Socket.GetSocketOption(System.Net.Sockets.SocketOptionLevel,System.Net.Sockets.SocketOptionName)
  - System.Net.Sockets.Socket.GetSocketOption(System.Net.Sockets.SocketOptionLevel,System.Net.Sockets.SocketOptionName,System.Byte[])
  - System.Net.Sockets.Socket.GetSocketOption(System.Net.Sockets.SocketOptionLevel,System.Net.Sockets.SocketOptionName,System.Int32)
  - System.Net.Sockets.Socket.IOControl(System.Int32,System.Byte[],System.Byte[])
  - System.Net.Sockets.Socket.IOControl(System.Net.Sockets.IOControlCode,System.Byte[],System.Byte[])
  - System.Net.Sockets.Socket.IsBound
  - System.Net.Sockets.Socket.LingerState
  - System.Net.Sockets.Socket.Listen(System.Int32)
  - System.Net.Sockets.Socket.LocalEndPoint
  - System.Net.Sockets.Socket.MulticastLoopback
  - System.Net.Sockets.Socket.NoDelay
  - System.Net.Sockets.Socket.OSSupportsIPv4
  - System.Net.Sockets.Socket.OSSupportsIPv6
  - System.Net.Sockets.Socket.Poll(System.Int32,System.Net.Sockets.SelectMode)
  - System.Net.Sockets.Socket.ProtocolType
  - System.Net.Sockets.Socket.Receive(System.Byte[])
  - System.Net.Sockets.Socket.Receive(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags)
  - System.Net.Sockets.Socket.Receive(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.Sockets.SocketError@)
  - System.Net.Sockets.Socket.Receive(System.Byte[],System.Int32,System.Net.Sockets.SocketFlags)
  - System.Net.Sockets.Socket.Receive(System.Byte[],System.Net.Sockets.SocketFlags)
  - System.Net.Sockets.Socket.Receive(System.Collections.Generic.IList{System.ArraySegment{System.Byte}})
  - System.Net.Sockets.Socket.Receive(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.Net.Sockets.SocketFlags)
  - System.Net.Sockets.Socket.Receive(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.Net.Sockets.SocketFlags,System.Net.Sockets.SocketError@)
  - System.Net.Sockets.Socket.ReceiveAsync(System.Net.Sockets.SocketAsyncEventArgs)
  - System.Net.Sockets.Socket.ReceiveBufferSize
  - System.Net.Sockets.Socket.ReceiveFrom(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.EndPoint@)
  - System.Net.Sockets.Socket.ReceiveFrom(System.Byte[],System.Int32,System.Net.Sockets.SocketFlags,System.Net.EndPoint@)
  - System.Net.Sockets.Socket.ReceiveFrom(System.Byte[],System.Net.EndPoint@)
  - System.Net.Sockets.Socket.ReceiveFrom(System.Byte[],System.Net.Sockets.SocketFlags,System.Net.EndPoint@)
  - System.Net.Sockets.Socket.ReceiveFromAsync(System.Net.Sockets.SocketAsyncEventArgs)
  - System.Net.Sockets.Socket.ReceiveMessageFrom(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags@,System.Net.EndPoint@,System.Net.Sockets.IPPacketInformation@)
  - System.Net.Sockets.Socket.ReceiveMessageFromAsync(System.Net.Sockets.SocketAsyncEventArgs)
  - System.Net.Sockets.Socket.ReceiveTimeout
  - System.Net.Sockets.Socket.RemoteEndPoint
  - System.Net.Sockets.Socket.Select(System.Collections.IList,System.Collections.IList,System.Collections.IList,System.Int32)
  - System.Net.Sockets.Socket.Send(System.Byte[])
  - System.Net.Sockets.Socket.Send(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags)
  - System.Net.Sockets.Socket.Send(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.Sockets.SocketError@)
  - System.Net.Sockets.Socket.Send(System.Byte[],System.Int32,System.Net.Sockets.SocketFlags)
  - System.Net.Sockets.Socket.Send(System.Byte[],System.Net.Sockets.SocketFlags)
  - System.Net.Sockets.Socket.Send(System.Collections.Generic.IList{System.ArraySegment{System.Byte}})
  - System.Net.Sockets.Socket.Send(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.Net.Sockets.SocketFlags)
  - System.Net.Sockets.Socket.Send(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.Net.Sockets.SocketFlags,System.Net.Sockets.SocketError@)
  - System.Net.Sockets.Socket.SendAsync(System.Net.Sockets.SocketAsyncEventArgs)
  - System.Net.Sockets.Socket.SendBufferSize
  - System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)
  - System.Net.Sockets.Socket.SendTimeout
  - System.Net.Sockets.Socket.SendTo(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.EndPoint)
  - System.Net.Sockets.Socket.SendTo(System.Byte[],System.Int32,System.Net.Sockets.SocketFlags,System.Net.EndPoint)
  - System.Net.Sockets.Socket.SendTo(System.Byte[],System.Net.EndPoint)
  - System.Net.Sockets.Socket.SendTo(System.Byte[],System.Net.Sockets.SocketFlags,System.Net.EndPoint)
  - System.Net.Sockets.Socket.SendToAsync(System.Net.Sockets.SocketAsyncEventArgs)
  - System.Net.Sockets.Socket.SetSocketOption(System.Net.Sockets.SocketOptionLevel,System.Net.Sockets.SocketOptionName,System.Boolean)
  - System.Net.Sockets.Socket.SetSocketOption(System.Net.Sockets.SocketOptionLevel,System.Net.Sockets.SocketOptionName,System.Byte[])
  - System.Net.Sockets.Socket.SetSocketOption(System.Net.Sockets.SocketOptionLevel,System.Net.Sockets.SocketOptionName,System.Int32)
  - System.Net.Sockets.Socket.SetSocketOption(System.Net.Sockets.SocketOptionLevel,System.Net.Sockets.SocketOptionName,System.Object)
  - System.Net.Sockets.Socket.Shutdown(System.Net.Sockets.SocketShutdown)
  - System.Net.Sockets.Socket.SocketType
  - System.Net.Sockets.Socket.Ttl
  langs:
  - csharp
  - vb
  name: Socket
  fullName: System.Net.Sockets.Socket
  type: Class
  source:
    remote:
      path: src/System.Net.Sockets/src/System/Net/Sockets/Socket.Windows.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Socket
    path: src/System.Net.Sockets/src/System/Net/Sockets/Socket.Windows.cs
    startLine: 17
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  summary: Implements the Berkeley sockets interface.
  syntax:
    content: 'public class Socket : IDisposable'
    content.vb: >-
      Public Class Socket
          Inherits IDisposable
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: System.Net.Sockets.Socket.#ctor(System.Net.Sockets.AddressFamily,System.Net.Sockets.SocketType,System.Net.Sockets.ProtocolType)
  commentId: M:System.Net.Sockets.Socket.#ctor(System.Net.Sockets.AddressFamily,System.Net.Sockets.SocketType,System.Net.Sockets.ProtocolType)
  id: '#ctor(System.Net.Sockets.AddressFamily,System.Net.Sockets.SocketType,System.Net.Sockets.ProtocolType)'
  parent: System.Net.Sockets.Socket
  langs:
  - csharp
  - vb
  name: Socket(AddressFamily, SocketType, ProtocolType)
  fullName: System.Net.Sockets.Socket.Socket(System.Net.Sockets.AddressFamily, System.Net.Sockets.SocketType, System.Net.Sockets.ProtocolType)
  type: Constructor
  source:
    remote:
      path: src/System.Net.Sockets/ref/System.Net.Sockets.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Net.Sockets/ref/System.Net.Sockets.cs
    startLine: 160
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  summary: Initializes a new instance of the <xref href="System.Net.Sockets.Socket" data-throw-if-not-resolved="false"></xref> class using the specified address family, socket type and protocol.
  syntax:
    content: public Socket(AddressFamily addressFamily, SocketType socketType, ProtocolType protocolType)
    content.vb: Public Sub New(addressFamily As AddressFamily, socketType As SocketType, protocolType As ProtocolType)
    parameters:
    - id: addressFamily
      type: System.Net.Sockets.AddressFamily
      description: 'One of the <xref href="System.Net.Sockets.AddressFamily" data-throw-if-not-resolved="false"></xref> values. '
    - id: socketType
      type: System.Net.Sockets.SocketType
      description: 'One of the <xref href="System.Net.Sockets.SocketType" data-throw-if-not-resolved="false"></xref> values. '
    - id: protocolType
      type: System.Net.Sockets.ProtocolType
      description: 'One of the <xref href="System.Net.Sockets.ProtocolType" data-throw-if-not-resolved="false"></xref> values. '
  exceptions:
  - type: System.Net.Sockets.SocketException
    commentId: T:System.Net.Sockets.SocketException
    description: 'The combination of <em>addressFamily</em>, <em>socketType</em>, and <em>protocolType</em> results in an invalid socket. '
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Net.Sockets.Socket.#ctor(System.Net.Sockets.SocketType,System.Net.Sockets.ProtocolType)
  commentId: M:System.Net.Sockets.Socket.#ctor(System.Net.Sockets.SocketType,System.Net.Sockets.ProtocolType)
  id: '#ctor(System.Net.Sockets.SocketType,System.Net.Sockets.ProtocolType)'
  parent: System.Net.Sockets.Socket
  langs:
  - csharp
  - vb
  name: Socket(SocketType, ProtocolType)
  fullName: System.Net.Sockets.Socket.Socket(System.Net.Sockets.SocketType, System.Net.Sockets.ProtocolType)
  type: Constructor
  source:
    remote:
      path: src/System.Net.Sockets/src/System/Net/Sockets/Socket.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Net.Sockets/src/System/Net/Sockets/Socket.cs
    startLine: 80
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  summary: Initializes a new instance of the <xref href="System.Net.Sockets.Socket" data-throw-if-not-resolved="false"></xref> class using the specified socket type and protocol.
  syntax:
    content: public Socket(SocketType socketType, ProtocolType protocolType)
    content.vb: Public Sub New(socketType As SocketType, protocolType As ProtocolType)
    parameters:
    - id: socketType
      type: System.Net.Sockets.SocketType
      description: One of the <xref href="System.Net.Sockets.SocketType" data-throw-if-not-resolved="false"></xref> values.
    - id: protocolType
      type: System.Net.Sockets.ProtocolType
      description: One of the <xref href="System.Net.Sockets.ProtocolType" data-throw-if-not-resolved="false"></xref> values.
  exceptions:
  - type: System.Net.Sockets.SocketException
    commentId: T:System.Net.Sockets.SocketException
    description: 'The combination of  <em>socketType</em> and <em>protocolType</em> results in an invalid socket. '
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Net.Sockets.Socket.AddressFamily
  commentId: P:System.Net.Sockets.Socket.AddressFamily
  id: AddressFamily
  parent: System.Net.Sockets.Socket
  langs:
  - csharp
  - vb
  name: AddressFamily
  fullName: System.Net.Sockets.Socket.AddressFamily
  type: Property
  source:
    remote:
      path: src/System.Net.Sockets/src/System/Net/Sockets/Socket.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: AddressFamily
    path: src/System.Net.Sockets/src/System/Net/Sockets/Socket.cs
    startLine: 389
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  summary: Gets the address family of the <xref href="System.Net.Sockets.Socket" data-throw-if-not-resolved="false"></xref>.
  syntax:
    content: public AddressFamily AddressFamily { get; }
    content.vb: Public ReadOnly Property AddressFamily As AddressFamily
    parameters: []
    return:
      type: System.Net.Sockets.AddressFamily
      description: One of the <xref href="System.Net.Sockets.AddressFamily" data-throw-if-not-resolved="false"></xref> values.
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Net.Sockets.Socket.Available
  commentId: P:System.Net.Sockets.Socket.Available
  id: Available
  parent: System.Net.Sockets.Socket
  langs:
  - csharp
  - vb
  name: Available
  fullName: System.Net.Sockets.Socket.Available
  type: Property
  source:
    remote:
      path: src/System.Net.Sockets/src/System/Net/Sockets/Socket.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Available
    path: src/System.Net.Sockets/src/System/Net/Sockets/Socket.cs
    startLine: 173
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  summary: Gets the amount of data that has been received from the network and is available to be read.
  syntax:
    content: public int Available { get; }
    content.vb: Public ReadOnly Property Available As Integer
    parameters: []
    return:
      type: System.Int32
      description: The number of bytes of data received from the network and available to be read.
  exceptions:
  - type: System.Net.Sockets.SocketException
    commentId: T:System.Net.Sockets.SocketException
    description: 'An error occurred when attempting to access the socket. See the Remarks section for more information. '
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: 'The <xref href="System.Net.Sockets.Socket" data-throw-if-not-resolved="false"></xref> has been closed. '
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Net.Sockets.Socket.Blocking
  commentId: P:System.Net.Sockets.Socket.Blocking
  id: Blocking
  parent: System.Net.Sockets.Socket
  langs:
  - csharp
  - vb
  name: Blocking
  fullName: System.Net.Sockets.Socket.Blocking
  type: Property
  source:
    remote:
      path: src/System.Net.Sockets/src/System/Net/Sockets/Socket.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Blocking
    path: src/System.Net.Sockets/src/System/Net/Sockets/Socket.cs
    startLine: 323
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  summary: Gets or sets a value that indicates whether the <xref href="System.Net.Sockets.Socket" data-throw-if-not-resolved="false"></xref> is in blocking mode.
  syntax:
    content: public bool Blocking { get; set; }
    content.vb: Public Property Blocking As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: true if the <xref href="System.Net.Sockets.Socket" data-throw-if-not-resolved="false"></xref> will block; otherwise, false. The default is true.
  exceptions:
  - type: System.Net.Sockets.SocketException
    commentId: T:System.Net.Sockets.SocketException
    description: 'An error occurred when attempting to access the socket. See the Remarks section for more information. '
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: 'The <xref href="System.Net.Sockets.Socket" data-throw-if-not-resolved="false"></xref> has been closed. '
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Net.Sockets.Socket.Connected
  commentId: P:System.Net.Sockets.Socket.Connected
  id: Connected
  parent: System.Net.Sockets.Socket
  langs:
  - csharp
  - vb
  name: Connected
  fullName: System.Net.Sockets.Socket.Connected
  type: Property
  source:
    remote:
      path: src/System.Net.Sockets/src/System/Net/Sockets/Socket.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Connected
    path: src/System.Net.Sockets/src/System/Net/Sockets/Socket.cs
    startLine: 367
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  summary: Gets a value that indicates whether a <xref href="System.Net.Sockets.Socket" data-throw-if-not-resolved="false"></xref> is connected to a remote host as of the last <see cref="Overload:System.Net.Sockets.Socket.Send"></see> or <see cref="Overload:System.Net.Sockets.Socket.Receive"></see> operation.
  syntax:
    content: public bool Connected { get; }
    content.vb: Public ReadOnly Property Connected As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: true if the <xref href="System.Net.Sockets.Socket" data-throw-if-not-resolved="false"></xref> was connected to a remote resource as of the most recent operation; otherwise, false.
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Net.Sockets.Socket.DontFragment
  commentId: P:System.Net.Sockets.Socket.DontFragment
  id: DontFragment
  parent: System.Net.Sockets.Socket
  langs:
  - csharp
  - vb
  name: DontFragment
  fullName: System.Net.Sockets.Socket.DontFragment
  type: Property
  source:
    remote:
      path: src/System.Net.Sockets/src/System/Net/Sockets/Socket.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: DontFragment
    path: src/System.Net.Sockets/src/System/Net/Sockets/Socket.cs
    startLine: 583
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  summary: Gets or sets a <xref href="System.Boolean" data-throw-if-not-resolved="false"></xref> value that specifies whether the <xref href="System.Net.Sockets.Socket" data-throw-if-not-resolved="false"></xref> allows Internet Protocol (IP) datagrams to be fragmented.
  syntax:
    content: public bool DontFragment { get; set; }
    content.vb: Public Property DontFragment As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: true if the <xref href="System.Net.Sockets.Socket" data-throw-if-not-resolved="false"></xref> allows datagram fragmentation; otherwise, false. The default is true.
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: 'This property can be set only for sockets in the <xref href="System.Net.Sockets.AddressFamily.InterNetwork" data-throw-if-not-resolved="false"></xref> or <xref href="System.Net.Sockets.AddressFamily.InterNetworkV6" data-throw-if-not-resolved="false"></xref> families. '
  - type: System.Net.Sockets.SocketException
    commentId: T:System.Net.Sockets.SocketException
    description: 'An error occurred when attempting to access the socket. See the Remarks section for more information. '
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: 'The <xref href="System.Net.Sockets.Socket" data-throw-if-not-resolved="false"></xref> has been closed. '
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Net.Sockets.Socket.DualMode
  commentId: P:System.Net.Sockets.Socket.DualMode
  id: DualMode
  parent: System.Net.Sockets.Socket
  langs:
  - csharp
  - vb
  name: DualMode
  fullName: System.Net.Sockets.Socket.DualMode
  type: Property
  source:
    remote:
      path: src/System.Net.Sockets/src/System/Net/Sockets/Socket.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: DualMode
    path: src/System.Net.Sockets/src/System/Net/Sockets/Socket.cs
    startLine: 662
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  summary: Gets or sets a <xref href="System.Boolean" data-throw-if-not-resolved="false"></xref> value that specifies whether the <xref href="System.Net.Sockets.Socket" data-throw-if-not-resolved="false"></xref> is a dual-mode socket used for both IPv4 and IPv6.
  syntax:
    content: public bool DualMode { get; set; }
    content.vb: Public Property DualMode As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: Returns <xref href="System.Boolean" data-throw-if-not-resolved="false"></xref>.true if the <xref href="System.Net.Sockets.Socket" data-throw-if-not-resolved="false"></xref> is a  dual-mode socket; otherwise, false. The default is false.
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Net.Sockets.Socket.EnableBroadcast
  commentId: P:System.Net.Sockets.Socket.EnableBroadcast
  id: EnableBroadcast
  parent: System.Net.Sockets.Socket
  langs:
  - csharp
  - vb
  name: EnableBroadcast
  fullName: System.Net.Sockets.Socket.EnableBroadcast
  type: Property
  source:
    remote:
      path: src/System.Net.Sockets/src/System/Net/Sockets/Socket.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: EnableBroadcast
    path: src/System.Net.Sockets/src/System/Net/Sockets/Socket.cs
    startLine: 646
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  summary: Gets or sets a <xref href="System.Boolean" data-throw-if-not-resolved="false"></xref> value that specifies whether the <xref href="System.Net.Sockets.Socket" data-throw-if-not-resolved="false"></xref> can send or receive broadcast packets.
  syntax:
    content: public bool EnableBroadcast { get; set; }
    content.vb: Public Property EnableBroadcast As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: true if the <xref href="System.Net.Sockets.Socket" data-throw-if-not-resolved="false"></xref> allows broadcast packets; otherwise, false. The default is false.
  exceptions:
  - type: System.Net.Sockets.SocketException
    commentId: T:System.Net.Sockets.SocketException
    description: 'This option is valid for a datagram socket only. '
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: 'The <xref href="System.Net.Sockets.Socket" data-throw-if-not-resolved="false"></xref> has been closed. '
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Net.Sockets.Socket.ExclusiveAddressUse
  commentId: P:System.Net.Sockets.Socket.ExclusiveAddressUse
  id: ExclusiveAddressUse
  parent: System.Net.Sockets.Socket
  langs:
  - csharp
  - vb
  name: ExclusiveAddressUse
  fullName: System.Net.Sockets.Socket.ExclusiveAddressUse
  type: Property
  source:
    remote:
      path: src/System.Net.Sockets/src/System/Net/Sockets/Socket.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ExclusiveAddressUse
    path: src/System.Net.Sockets/src/System/Net/Sockets/Socket.cs
    startLine: 423
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  summary: Gets or sets a <xref href="System.Boolean" data-throw-if-not-resolved="false"></xref> value that specifies whether the <xref href="System.Net.Sockets.Socket" data-throw-if-not-resolved="false"></xref> allows only one process to bind to a port.
  syntax:
    content: public bool ExclusiveAddressUse { get; set; }
    content.vb: Public Property ExclusiveAddressUse As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: "true if the <xref href=\"System.Net.Sockets.Socket\" data-throw-if-not-resolved=\"false\"></xref> allows only one socket to bind to a specific port; otherwise, false. The default is true for Windows Server 2003 and Windows XP Service Pack 2, and false for all other versions."
  exceptions:
  - type: System.Net.Sockets.SocketException
    commentId: T:System.Net.Sockets.SocketException
    description: An error occurred when attempting to access the socket.
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: 'The <xref href="System.Net.Sockets.Socket" data-throw-if-not-resolved="false"></xref> has been closed. '
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "\n<xref href=\"System.Net.Sockets.Socket.Bind(System.Net.EndPoint)\" data-throw-if-not-resolved=\"false\"></xref> has been called for this <xref href=\"System.Net.Sockets.Socket\" data-throw-if-not-resolved=\"false\"></xref>."
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Net.Sockets.Socket.IsBound
  commentId: P:System.Net.Sockets.Socket.IsBound
  id: IsBound
  parent: System.Net.Sockets.Socket
  langs:
  - csharp
  - vb
  name: IsBound
  fullName: System.Net.Sockets.Socket.IsBound
  type: Property
  source:
    remote:
      path: src/System.Net.Sockets/src/System/Net/Sockets/Socket.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IsBound
    path: src/System.Net.Sockets/src/System/Net/Sockets/Socket.cs
    startLine: 415
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  summary: Gets a value that indicates whether the <xref href="System.Net.Sockets.Socket" data-throw-if-not-resolved="false"></xref> is bound to a specific local port.
  syntax:
    content: public bool IsBound { get; }
    content.vb: Public ReadOnly Property IsBound As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: true if the <xref href="System.Net.Sockets.Socket" data-throw-if-not-resolved="false"></xref> is bound to a local port; otherwise, false.
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Net.Sockets.Socket.LingerState
  commentId: P:System.Net.Sockets.Socket.LingerState
  id: LingerState
  parent: System.Net.Sockets.Socket
  langs:
  - csharp
  - vb
  name: LingerState
  fullName: System.Net.Sockets.Socket.LingerState
  type: Property
  source:
    remote:
      path: src/System.Net.Sockets/src/System/Net/Sockets/Socket.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: LingerState
    path: src/System.Net.Sockets/src/System/Net/Sockets/Socket.cs
    startLine: 517
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  summary: Gets or sets a value that specifies whether the <xref href="System.Net.Sockets.Socket" data-throw-if-not-resolved="false"></xref> will delay closing a socket in an attempt to send all pending data.
  syntax:
    content: public LingerOption LingerState { get; set; }
    content.vb: Public Property LingerState As LingerOption
    parameters: []
    return:
      type: System.Net.Sockets.LingerOption
      description: A <xref href="System.Net.Sockets.LingerOption" data-throw-if-not-resolved="false"></xref> that specifies how to linger while closing a socket.
  exceptions:
  - type: System.Net.Sockets.SocketException
    commentId: T:System.Net.Sockets.SocketException
    description: An error occurred when attempting to access the socket.
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: 'The <xref href="System.Net.Sockets.Socket" data-throw-if-not-resolved="false"></xref> has been closed. '
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Net.Sockets.Socket.LocalEndPoint
  commentId: P:System.Net.Sockets.Socket.LocalEndPoint
  id: LocalEndPoint
  parent: System.Net.Sockets.Socket
  langs:
  - csharp
  - vb
  name: LocalEndPoint
  fullName: System.Net.Sockets.Socket.LocalEndPoint
  type: Property
  source:
    remote:
      path: src/System.Net.Sockets/src/System/Net/Sockets/Socket.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: LocalEndPoint
    path: src/System.Net.Sockets/src/System/Net/Sockets/Socket.cs
    startLine: 210
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  summary: Gets the local endpoint.
  syntax:
    content: public EndPoint LocalEndPoint { get; }
    content.vb: Public ReadOnly Property LocalEndPoint As EndPoint
    parameters: []
    return:
      type: System.Net.EndPoint
      description: The <xref href="System.Net.EndPoint" data-throw-if-not-resolved="false"></xref> that the <xref href="System.Net.Sockets.Socket" data-throw-if-not-resolved="false"></xref> is using for communications.
  exceptions:
  - type: System.Net.Sockets.SocketException
    commentId: T:System.Net.Sockets.SocketException
    description: 'An error occurred when attempting to access the socket. See the Remarks section for more information. '
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: 'The <xref href="System.Net.Sockets.Socket" data-throw-if-not-resolved="false"></xref> has been closed. '
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Net.Sockets.Socket.MulticastLoopback
  commentId: P:System.Net.Sockets.Socket.MulticastLoopback
  id: MulticastLoopback
  parent: System.Net.Sockets.Socket
  langs:
  - csharp
  - vb
  name: MulticastLoopback
  fullName: System.Net.Sockets.Socket.MulticastLoopback
  type: Property
  source:
    remote:
      path: src/System.Net.Sockets/src/System/Net/Sockets/Socket.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: MulticastLoopback
    path: src/System.Net.Sockets/src/System/Net/Sockets/Socket.cs
    startLine: 610
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  summary: Gets or sets a value that specifies whether outgoing multicast packets are delivered to the sending application.
  syntax:
    content: public bool MulticastLoopback { get; set; }
    content.vb: Public Property MulticastLoopback As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: true if the <xref href="System.Net.Sockets.Socket" data-throw-if-not-resolved="false"></xref> receives outgoing multicast packets; otherwise, false.
  exceptions:
  - type: System.Net.Sockets.SocketException
    commentId: T:System.Net.Sockets.SocketException
    description: An error occurred when attempting to access the socket.
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: 'The <xref href="System.Net.Sockets.Socket" data-throw-if-not-resolved="false"></xref> has been closed. '
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Net.Sockets.Socket.NoDelay
  commentId: P:System.Net.Sockets.Socket.NoDelay
  id: NoDelay
  parent: System.Net.Sockets.Socket
  langs:
  - csharp
  - vb
  name: NoDelay
  fullName: System.Net.Sockets.Socket.NoDelay
  type: Property
  source:
    remote:
      path: src/System.Net.Sockets/src/System/Net/Sockets/Socket.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: NoDelay
    path: src/System.Net.Sockets/src/System/Net/Sockets/Socket.cs
    startLine: 529
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  summary: Gets or sets a <xref href="System.Boolean" data-throw-if-not-resolved="false"></xref> value that specifies whether the stream <xref href="System.Net.Sockets.Socket" data-throw-if-not-resolved="false"></xref> is using the Nagle algorithm.
  syntax:
    content: public bool NoDelay { get; set; }
    content.vb: Public Property NoDelay As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: false if the <xref href="System.Net.Sockets.Socket" data-throw-if-not-resolved="false"></xref> uses the Nagle algorithm; otherwise, true. The default is false.
  exceptions:
  - type: System.Net.Sockets.SocketException
    commentId: T:System.Net.Sockets.SocketException
    description: 'An error occurred when attempting to access the <xref href="System.Net.Sockets.Socket" data-throw-if-not-resolved="false"></xref>. See the Remarks section for more information. '
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: 'The <xref href="System.Net.Sockets.Socket" data-throw-if-not-resolved="false"></xref> has been closed. '
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Net.Sockets.Socket.OSSupportsIPv4
  commentId: P:System.Net.Sockets.Socket.OSSupportsIPv4
  id: OSSupportsIPv4
  parent: System.Net.Sockets.Socket
  langs:
  - csharp
  - vb
  name: OSSupportsIPv4
  fullName: System.Net.Sockets.Socket.OSSupportsIPv4
  type: Property
  source:
    remote:
      path: src/System.Net.Sockets/src/System/Net/Sockets/Socket.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: OSSupportsIPv4
    path: src/System.Net.Sockets/src/System/Net/Sockets/Socket.cs
    startLine: 153
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  summary: Indicates whether the underlying operating system and network adaptors support Internet Protocol version 4 (IPv4).
  syntax:
    content: public static bool OSSupportsIPv4 { get; }
    content.vb: Public Shared ReadOnly Property OSSupportsIPv4 As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: true if the operating system and network adaptors support the IPv4 protocol; otherwise, false.
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: System.Net.Sockets.Socket.OSSupportsIPv6
  commentId: P:System.Net.Sockets.Socket.OSSupportsIPv6
  id: OSSupportsIPv6
  parent: System.Net.Sockets.Socket
  langs:
  - csharp
  - vb
  name: OSSupportsIPv6
  fullName: System.Net.Sockets.Socket.OSSupportsIPv6
  type: Property
  source:
    remote:
      path: src/System.Net.Sockets/src/System/Net/Sockets/Socket.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: OSSupportsIPv6
    path: src/System.Net.Sockets/src/System/Net/Sockets/Socket.cs
    startLine: 162
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  summary: Indicates whether the underlying operating system and network adaptors support Internet Protocol version 6 (IPv6).
  syntax:
    content: public static bool OSSupportsIPv6 { get; }
    content.vb: Public Shared ReadOnly Property OSSupportsIPv6 As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: true if the operating system and network adaptors support the IPv6 protocol; otherwise, false.
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: System.Net.Sockets.Socket.ProtocolType
  commentId: P:System.Net.Sockets.Socket.ProtocolType
  id: ProtocolType
  parent: System.Net.Sockets.Socket
  langs:
  - csharp
  - vb
  name: ProtocolType
  fullName: System.Net.Sockets.Socket.ProtocolType
  type: Property
  source:
    remote:
      path: src/System.Net.Sockets/src/System/Net/Sockets/Socket.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ProtocolType
    path: src/System.Net.Sockets/src/System/Net/Sockets/Socket.cs
    startLine: 407
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  summary: Gets the protocol type of the <xref href="System.Net.Sockets.Socket" data-throw-if-not-resolved="false"></xref>.
  syntax:
    content: public ProtocolType ProtocolType { get; }
    content.vb: Public ReadOnly Property ProtocolType As ProtocolType
    parameters: []
    return:
      type: System.Net.Sockets.ProtocolType
      description: One of the <xref href="System.Net.Sockets.ProtocolType" data-throw-if-not-resolved="false"></xref> values.
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Net.Sockets.Socket.ReceiveBufferSize
  commentId: P:System.Net.Sockets.Socket.ReceiveBufferSize
  id: ReceiveBufferSize
  parent: System.Net.Sockets.Socket
  langs:
  - csharp
  - vb
  name: ReceiveBufferSize
  fullName: System.Net.Sockets.Socket.ReceiveBufferSize
  type: Property
  source:
    remote:
      path: src/System.Net.Sockets/src/System/Net/Sockets/Socket.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ReceiveBufferSize
    path: src/System.Net.Sockets/src/System/Net/Sockets/Socket.cs
    startLine: 439
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  summary: Gets or sets a value that specifies the size of the receive buffer of the <xref href="System.Net.Sockets.Socket" data-throw-if-not-resolved="false"></xref>.
  syntax:
    content: public int ReceiveBufferSize { get; set; }
    content.vb: Public Property ReceiveBufferSize As Integer
    parameters: []
    return:
      type: System.Int32
      description: An <xref href="System.Int32" data-throw-if-not-resolved="false"></xref> that contains the size, in bytes, of the receive buffer. The default is 8192.
  exceptions:
  - type: System.Net.Sockets.SocketException
    commentId: T:System.Net.Sockets.SocketException
    description: An error occurred when attempting to access the socket.
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: 'The <xref href="System.Net.Sockets.Socket" data-throw-if-not-resolved="false"></xref> has been closed. '
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: The value specified for a set operation is less than 0.
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Net.Sockets.Socket.ReceiveTimeout
  commentId: P:System.Net.Sockets.Socket.ReceiveTimeout
  id: ReceiveTimeout
  parent: System.Net.Sockets.Socket
  langs:
  - csharp
  - vb
  name: ReceiveTimeout
  fullName: System.Net.Sockets.Socket.ReceiveTimeout
  type: Property
  source:
    remote:
      path: src/System.Net.Sockets/src/System/Net/Sockets/Socket.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ReceiveTimeout
    path: src/System.Net.Sockets/src/System/Net/Sockets/Socket.cs
    startLine: 474
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  summary: Gets or sets a value that specifies the amount of time after which a synchronous <see cref="Overload:System.Net.Sockets.Socket.Receive"></see> call will time out.
  syntax:
    content: public int ReceiveTimeout { get; set; }
    content.vb: Public Property ReceiveTimeout As Integer
    parameters: []
    return:
      type: System.Int32
      description: The time-out value, in milliseconds. The default value is 0, which indicates an infinite time-out period. Specifying -1 also indicates an infinite time-out period.
  exceptions:
  - type: System.Net.Sockets.SocketException
    commentId: T:System.Net.Sockets.SocketException
    description: An error occurred when attempting to access the socket.
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: 'The <xref href="System.Net.Sockets.Socket" data-throw-if-not-resolved="false"></xref> has been closed. '
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: The value specified for a set operation is less than -1.
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Net.Sockets.Socket.RemoteEndPoint
  commentId: P:System.Net.Sockets.Socket.RemoteEndPoint
  id: RemoteEndPoint
  parent: System.Net.Sockets.Socket
  langs:
  - csharp
  - vb
  name: RemoteEndPoint
  fullName: System.Net.Sockets.Socket.RemoteEndPoint
  type: Property
  source:
    remote:
      path: src/System.Net.Sockets/src/System/Net/Sockets/Socket.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: RemoteEndPoint
    path: src/System.Net.Sockets/src/System/Net/Sockets/Socket.cs
    startLine: 257
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  summary: Gets the remote endpoint.
  syntax:
    content: public EndPoint RemoteEndPoint { get; }
    content.vb: Public ReadOnly Property RemoteEndPoint As EndPoint
    parameters: []
    return:
      type: System.Net.EndPoint
      description: The <xref href="System.Net.EndPoint" data-throw-if-not-resolved="false"></xref> with which the <xref href="System.Net.Sockets.Socket" data-throw-if-not-resolved="false"></xref> is communicating.
  exceptions:
  - type: System.Net.Sockets.SocketException
    commentId: T:System.Net.Sockets.SocketException
    description: 'An error occurred when attempting to access the socket. See the Remarks section for more information. '
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: 'The <xref href="System.Net.Sockets.Socket" data-throw-if-not-resolved="false"></xref> has been closed. '
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Net.Sockets.Socket.SendBufferSize
  commentId: P:System.Net.Sockets.Socket.SendBufferSize
  id: SendBufferSize
  parent: System.Net.Sockets.Socket
  langs:
  - csharp
  - vb
  name: SendBufferSize
  fullName: System.Net.Sockets.Socket.SendBufferSize
  type: Property
  source:
    remote:
      path: src/System.Net.Sockets/src/System/Net/Sockets/Socket.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: SendBufferSize
    path: src/System.Net.Sockets/src/System/Net/Sockets/Socket.cs
    startLine: 456
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  summary: Gets or sets a value that specifies the size of the send buffer of the <xref href="System.Net.Sockets.Socket" data-throw-if-not-resolved="false"></xref>.
  syntax:
    content: public int SendBufferSize { get; set; }
    content.vb: Public Property SendBufferSize As Integer
    parameters: []
    return:
      type: System.Int32
      description: An <xref href="System.Int32" data-throw-if-not-resolved="false"></xref> that contains the size, in bytes, of the send buffer. The default is 8192.
  exceptions:
  - type: System.Net.Sockets.SocketException
    commentId: T:System.Net.Sockets.SocketException
    description: An error occurred when attempting to access the socket.
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: 'The <xref href="System.Net.Sockets.Socket" data-throw-if-not-resolved="false"></xref> has been closed. '
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: The value specified for a set operation is less than 0.
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Net.Sockets.Socket.SendTimeout
  commentId: P:System.Net.Sockets.Socket.SendTimeout
  id: SendTimeout
  parent: System.Net.Sockets.Socket
  langs:
  - csharp
  - vb
  name: SendTimeout
  fullName: System.Net.Sockets.Socket.SendTimeout
  type: Property
  source:
    remote:
      path: src/System.Net.Sockets/src/System/Net/Sockets/Socket.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: SendTimeout
    path: src/System.Net.Sockets/src/System/Net/Sockets/Socket.cs
    startLine: 495
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  summary: Gets or sets a value that specifies the amount of time after which a synchronous <see cref="Overload:System.Net.Sockets.Socket.Send"></see> call will time out.
  syntax:
    content: public int SendTimeout { get; set; }
    content.vb: Public Property SendTimeout As Integer
    parameters: []
    return:
      type: System.Int32
      description: The time-out value, in milliseconds. If you set the property with a value between 1 and 499, the value will be changed to 500. The default value is 0, which indicates an infinite time-out period. Specifying -1 also indicates an infinite time-out period.
  exceptions:
  - type: System.Net.Sockets.SocketException
    commentId: T:System.Net.Sockets.SocketException
    description: An error occurred when attempting to access the socket.
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: 'The <xref href="System.Net.Sockets.Socket" data-throw-if-not-resolved="false"></xref> has been closed. '
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: The value specified for a set operation is less than -1.
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Net.Sockets.Socket.SocketType
  commentId: P:System.Net.Sockets.Socket.SocketType
  id: SocketType
  parent: System.Net.Sockets.Socket
  langs:
  - csharp
  - vb
  name: SocketType
  fullName: System.Net.Sockets.Socket.SocketType
  type: Property
  source:
    remote:
      path: src/System.Net.Sockets/src/System/Net/Sockets/Socket.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: SocketType
    path: src/System.Net.Sockets/src/System/Net/Sockets/Socket.cs
    startLine: 398
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  summary: Gets the type of the <xref href="System.Net.Sockets.Socket" data-throw-if-not-resolved="false"></xref>.
  syntax:
    content: public SocketType SocketType { get; }
    content.vb: Public ReadOnly Property SocketType As SocketType
    parameters: []
    return:
      type: System.Net.Sockets.SocketType
      description: One of the <xref href="System.Net.Sockets.SocketType" data-throw-if-not-resolved="false"></xref> values.
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Net.Sockets.Socket.Ttl
  commentId: P:System.Net.Sockets.Socket.Ttl
  id: Ttl
  parent: System.Net.Sockets.Socket
  langs:
  - csharp
  - vb
  name: Ttl
  fullName: System.Net.Sockets.Socket.Ttl
  type: Property
  source:
    remote:
      path: src/System.Net.Sockets/src/System/Net/Sockets/Socket.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Ttl
    path: src/System.Net.Sockets/src/System/Net/Sockets/Socket.cs
    startLine: 541
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  summary: Gets or sets a value that specifies the Time To Live (TTL) value of Internet Protocol (IP) packets sent by the <xref href="System.Net.Sockets.Socket" data-throw-if-not-resolved="false"></xref>.
  syntax:
    content: public short Ttl { get; set; }
    content.vb: Public Property Ttl As Short
    parameters: []
    return:
      type: System.Int16
      description: The TTL value.
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: The TTL value can't be set to a negative number.
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: This property can be set only for sockets in the <xref href="System.Net.Sockets.AddressFamily.InterNetwork" data-throw-if-not-resolved="false"></xref> or <xref href="System.Net.Sockets.AddressFamily.InterNetworkV6" data-throw-if-not-resolved="false"></xref> families.
  - type: System.Net.Sockets.SocketException
    commentId: T:System.Net.Sockets.SocketException
    description: An error occurred when attempting to access the socket. This error is also returned when an attempt was made to set TTL to a value higher than 255.
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: 'The <xref href="System.Net.Sockets.Socket" data-throw-if-not-resolved="false"></xref> has been closed. '
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Net.Sockets.Socket.Accept
  commentId: M:System.Net.Sockets.Socket.Accept
  id: Accept
  parent: System.Net.Sockets.Socket
  langs:
  - csharp
  - vb
  name: Accept()
  fullName: System.Net.Sockets.Socket.Accept()
  type: Method
  source:
    remote:
      path: src/System.Net.Sockets/src/System/Net/Sockets/Socket.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Accept
    path: src/System.Net.Sockets/src/System/Net/Sockets/Socket.cs
    startLine: 1078
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  summary: Creates a new <xref href="System.Net.Sockets.Socket" data-throw-if-not-resolved="false"></xref> for a newly created connection.
  syntax:
    content: public Socket Accept()
    content.vb: Public Function Accept As Socket
    return:
      type: System.Net.Sockets.Socket
      description: A <xref href="System.Net.Sockets.Socket" data-throw-if-not-resolved="false"></xref> for a newly created connection.
  exceptions:
  - type: System.Net.Sockets.SocketException
    commentId: T:System.Net.Sockets.SocketException
    description: 'An error occurred when attempting to access the socket. See the Remarks section for more information. '
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: 'The <xref href="System.Net.Sockets.Socket" data-throw-if-not-resolved="false"></xref> has been closed. '
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: 'The accepting socket is not listening for connections. You must call <xref href="System.Net.Sockets.Socket.Bind(System.Net.EndPoint)" data-throw-if-not-resolved="false"></xref> and <xref href="System.Net.Sockets.Socket.Listen(System.Int32)" data-throw-if-not-resolved="false"></xref> before calling <xref href="System.Net.Sockets.Socket.Accept" data-throw-if-not-resolved="false"></xref>. '
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Net.Sockets.Socket.AcceptAsync(System.Net.Sockets.SocketAsyncEventArgs)
  commentId: M:System.Net.Sockets.Socket.AcceptAsync(System.Net.Sockets.SocketAsyncEventArgs)
  id: AcceptAsync(System.Net.Sockets.SocketAsyncEventArgs)
  parent: System.Net.Sockets.Socket
  langs:
  - csharp
  - vb
  name: AcceptAsync(SocketAsyncEventArgs)
  fullName: System.Net.Sockets.Socket.AcceptAsync(System.Net.Sockets.SocketAsyncEventArgs)
  type: Method
  source:
    remote:
      path: src/System.Net.Sockets/src/System/Net/Sockets/Socket.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: AcceptAsync
    path: src/System.Net.Sockets/src/System/Net/Sockets/Socket.cs
    startLine: 4220
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  summary: Begins an asynchronous operation to accept an incoming connection attempt.
  syntax:
    content: public bool AcceptAsync(SocketAsyncEventArgs e)
    content.vb: Public Function AcceptAsync(e As SocketAsyncEventArgs) As Boolean
    parameters:
    - id: e
      type: System.Net.Sockets.SocketAsyncEventArgs
      description: The <xref href="System.Net.Sockets.SocketAsyncEventArgs" data-throw-if-not-resolved="false"></xref> object to use for this asynchronous socket operation.
    return:
      type: System.Boolean
      description: Returns true if the I/O operation is pending. The <xref href="System.Net.Sockets.SocketAsyncEventArgs.Completed" data-throw-if-not-resolved="false"></xref> event on the <em>e</em> parameter will be raised upon completion of the operation.Returns false if the I/O operation completed synchronously. The <xref href="System.Net.Sockets.SocketAsyncEventArgs.Completed" data-throw-if-not-resolved="false"></xref> event on the <em>e</em> parameter will not be raised and the <em>e</em> object passed as a parameter may be examined immediately after the method call returns to retrieve the result of the operation.
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: An argument is not valid. This exception occurs if the buffer provided is not large enough. The buffer must be at least 2 * (sizeof(SOCKADDR_STORAGE + 16) bytes. This exception also occurs if multiple buffers are specified, the <xref href="System.Net.Sockets.SocketAsyncEventArgs.BufferList" data-throw-if-not-resolved="false"></xref> property is not null.
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: An argument is out of range. The exception occurs if the <xref href="System.Net.Sockets.SocketAsyncEventArgs.Count" data-throw-if-not-resolved="false"></xref> is less than 0.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: 'An invalid operation was requested. This exception occurs if the accepting <xref href="System.Net.Sockets.Socket" data-throw-if-not-resolved="false"></xref> is not listening for connections or the accepted socket is bound. You must call the <xref href="System.Net.Sockets.Socket.Bind(System.Net.EndPoint)" data-throw-if-not-resolved="false"></xref> and <xref href="System.Net.Sockets.Socket.Listen(System.Int32)" data-throw-if-not-resolved="false"></xref> method before calling the <xref href="System.Net.Sockets.Socket.AcceptAsync(System.Net.Sockets.SocketAsyncEventArgs)" data-throw-if-not-resolved="false"></xref> method.This exception also occurs if the socket is already connected or a socket operation was already in progress using the specified <em>e</em> parameter. '
  - type: System.Net.Sockets.SocketException
    commentId: T:System.Net.Sockets.SocketException
    description: 'An error occurred when attempting to access the socket. See the Remarks section for more information. '
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: Windows XP or later is required for this method.
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: 'The <xref href="System.Net.Sockets.Socket" data-throw-if-not-resolved="false"></xref> has been closed. '
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Net.Sockets.Socket.Bind(System.Net.EndPoint)
  commentId: M:System.Net.Sockets.Socket.Bind(System.Net.EndPoint)
  id: Bind(System.Net.EndPoint)
  parent: System.Net.Sockets.Socket
  langs:
  - csharp
  - vb
  name: Bind(EndPoint)
  fullName: System.Net.Sockets.Socket.Bind(System.Net.EndPoint)
  type: Method
  source:
    remote:
      path: src/System.Net.Sockets/ref/System.Net.Sockets.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Bind
    path: src/System.Net.Sockets/ref/System.Net.Sockets.cs
    startLine: 187
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  summary: Associates a <xref href="System.Net.Sockets.Socket" data-throw-if-not-resolved="false"></xref> with a local endpoint.
  syntax:
    content: public void Bind(EndPoint localEP)
    content.vb: Public Sub Bind(localEP As EndPoint)
    parameters:
    - id: localEP
      type: System.Net.EndPoint
      description: 'The local <xref href="System.Net.EndPoint" data-throw-if-not-resolved="false"></xref> to associate with the <xref href="System.Net.Sockets.Socket" data-throw-if-not-resolved="false"></xref>. '
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>localEP</em> is null. "
  - type: System.Net.Sockets.SocketException
    commentId: T:System.Net.Sockets.SocketException
    description: 'An error occurred when attempting to access the socket. See the Remarks section for more information. '
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: 'The <xref href="System.Net.Sockets.Socket" data-throw-if-not-resolved="false"></xref> has been closed. '
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: 'A caller higher in the call stack does not have permission for the requested operation. '
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Net.Sockets.Socket.CancelConnectAsync(System.Net.Sockets.SocketAsyncEventArgs)
  commentId: M:System.Net.Sockets.Socket.CancelConnectAsync(System.Net.Sockets.SocketAsyncEventArgs)
  id: CancelConnectAsync(System.Net.Sockets.SocketAsyncEventArgs)
  parent: System.Net.Sockets.Socket
  langs:
  - csharp
  - vb
  name: CancelConnectAsync(SocketAsyncEventArgs)
  fullName: System.Net.Sockets.Socket.CancelConnectAsync(System.Net.Sockets.SocketAsyncEventArgs)
  type: Method
  source:
    remote:
      path: src/System.Net.Sockets/src/System/Net/Sockets/Socket.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CancelConnectAsync
    path: src/System.Net.Sockets/src/System/Net/Sockets/Socket.cs
    startLine: 4486
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  summary: Cancels an asynchronous request for a remote host connection.
  syntax:
    content: public static void CancelConnectAsync(SocketAsyncEventArgs e)
    content.vb: Public Shared Sub CancelConnectAsync(e As SocketAsyncEventArgs)
    parameters:
    - id: e
      type: System.Net.Sockets.SocketAsyncEventArgs
      description: The <xref href="System.Net.Sockets.SocketAsyncEventArgs" data-throw-if-not-resolved="false"></xref> object used to request the connection to the remote host by calling one of the <xref href="System.Net.Sockets.Socket.ConnectAsync(System.Net.Sockets.SocketType,System.Net.Sockets.ProtocolType,System.Net.Sockets.SocketAsyncEventArgs)" data-throw-if-not-resolved="false"></xref> methods.
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <em>e</em> parameter cannot be null and the <xref href="System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint" data-throw-if-not-resolved="false"></xref> cannot be null.
  - type: System.Net.Sockets.SocketException
    commentId: T:System.Net.Sockets.SocketException
    description: 'An error occurred when attempting to access the socket. '
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: 'The <xref href="System.Net.Sockets.Socket" data-throw-if-not-resolved="false"></xref> has been closed. '
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: A caller higher in the call stack does not have permission for the requested operation.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Net.Sockets.Socket.Connect(System.Net.EndPoint)
  commentId: M:System.Net.Sockets.Socket.Connect(System.Net.EndPoint)
  id: Connect(System.Net.EndPoint)
  parent: System.Net.Sockets.Socket
  langs:
  - csharp
  - vb
  name: Connect(EndPoint)
  fullName: System.Net.Sockets.Socket.Connect(System.Net.EndPoint)
  type: Method
  source:
    remote:
      path: src/System.Net.Sockets/ref/System.Net.Sockets.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Connect
    path: src/System.Net.Sockets/ref/System.Net.Sockets.cs
    startLine: 189
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  summary: Establishes a connection to a remote host.
  syntax:
    content: public void Connect(EndPoint remoteEP)
    content.vb: Public Sub Connect(remoteEP As EndPoint)
    parameters:
    - id: remoteEP
      type: System.Net.EndPoint
      description: 'An <xref href="System.Net.EndPoint" data-throw-if-not-resolved="false"></xref> that represents the remote device. '
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>remoteEP</em> is null. "
  - type: System.Net.Sockets.SocketException
    commentId: T:System.Net.Sockets.SocketException
    description: 'An error occurred when attempting to access the socket. See the Remarks section for more information. '
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: 'The <xref href="System.Net.Sockets.Socket" data-throw-if-not-resolved="false"></xref> has been closed. '
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: 'A caller higher in the call stack does not have permission for the requested operation. '
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: The <xref href="System.Net.Sockets.Socket" data-throw-if-not-resolved="false"></xref> is <xref href="System.Net.Sockets.Socket.Listen(System.Int32)" data-throw-if-not-resolved="false"></xref>ing.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Net.Sockets.Socket.Connect(System.Net.IPAddress,System.Int32)
  commentId: M:System.Net.Sockets.Socket.Connect(System.Net.IPAddress,System.Int32)
  id: Connect(System.Net.IPAddress,System.Int32)
  parent: System.Net.Sockets.Socket
  langs:
  - csharp
  - vb
  name: Connect(IPAddress, Int32)
  fullName: System.Net.Sockets.Socket.Connect(System.Net.IPAddress, System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Net.Sockets/ref/System.Net.Sockets.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Connect
    path: src/System.Net.Sockets/ref/System.Net.Sockets.cs
    startLine: 190
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  summary: Establishes a connection to a remote host. The host is specified by an IP address and a port number.
  syntax:
    content: public void Connect(IPAddress address, int port)
    content.vb: Public Sub Connect(address As IPAddress, port As Integer)
    parameters:
    - id: address
      type: System.Net.IPAddress
      description: The IP address of the remote host.
    - id: port
      type: System.Int32
      description: The port number of the remote host.
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>address</em> is null. "
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: The port number is not valid.
  - type: System.Net.Sockets.SocketException
    commentId: T:System.Net.Sockets.SocketException
    description: 'An error occurred when attempting to access the socket. See the Remarks section for more information. '
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: 'The <xref href="System.Net.Sockets.Socket" data-throw-if-not-resolved="false"></xref> has been closed. '
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: This method is valid for sockets in the <xref href="System.Net.Sockets.AddressFamily.InterNetwork" data-throw-if-not-resolved="false"></xref> or <xref href="System.Net.Sockets.AddressFamily.InterNetworkV6" data-throw-if-not-resolved="false"></xref> families.
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: The length of <em>address</em> is zero.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: The <xref href="System.Net.Sockets.Socket" data-throw-if-not-resolved="false"></xref> is <xref href="System.Net.Sockets.Socket.Listen(System.Int32)" data-throw-if-not-resolved="false"></xref>ing.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Net.Sockets.Socket.Connect(System.Net.IPAddress[],System.Int32)
  commentId: M:System.Net.Sockets.Socket.Connect(System.Net.IPAddress[],System.Int32)
  id: Connect(System.Net.IPAddress[],System.Int32)
  parent: System.Net.Sockets.Socket
  langs:
  - csharp
  - vb
  name: Connect(IPAddress[], Int32)
  fullName: System.Net.Sockets.Socket.Connect(System.Net.IPAddress[], System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Net.Sockets/ref/System.Net.Sockets.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Connect
    path: src/System.Net.Sockets/ref/System.Net.Sockets.cs
    startLine: 191
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  summary: Establishes a connection to a remote host. The host is specified by an array of IP addresses and a port number.
  syntax:
    content: public void Connect(IPAddress[] addresses, int port)
    content.vb: Public Sub Connect(addresses As IPAddress(), port As Integer)
    parameters:
    - id: addresses
      type: System.Net.IPAddress[]
      description: The IP addresses of the remote host.
    - id: port
      type: System.Int32
      description: The port number of the remote host.
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>addresses</em> is null. "
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: The port number is not valid.
  - type: System.Net.Sockets.SocketException
    commentId: T:System.Net.Sockets.SocketException
    description: 'An error occurred when attempting to access the socket. See the Remarks section for more information. '
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: 'The <xref href="System.Net.Sockets.Socket" data-throw-if-not-resolved="false"></xref> has been closed. '
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: This method is valid for sockets in the <xref href="System.Net.Sockets.AddressFamily.InterNetwork" data-throw-if-not-resolved="false"></xref> or <xref href="System.Net.Sockets.AddressFamily.InterNetworkV6" data-throw-if-not-resolved="false"></xref> families.
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: The length of <em>address</em> is zero.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: The <xref href="System.Net.Sockets.Socket" data-throw-if-not-resolved="false"></xref> is <xref href="System.Net.Sockets.Socket.Listen(System.Int32)" data-throw-if-not-resolved="false"></xref>ing.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Net.Sockets.Socket.Connect(System.Net.IPAddress(), System.Int32)
  name.vb: Connect(IPAddress(), Int32)
- uid: System.Net.Sockets.Socket.Connect(System.String,System.Int32)
  commentId: M:System.Net.Sockets.Socket.Connect(System.String,System.Int32)
  id: Connect(System.String,System.Int32)
  parent: System.Net.Sockets.Socket
  langs:
  - csharp
  - vb
  name: Connect(String, Int32)
  fullName: System.Net.Sockets.Socket.Connect(System.String, System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Net.Sockets/src/System/Net/Sockets/Socket.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Connect
    path: src/System.Net.Sockets/src/System/Net/Sockets/Socket.cs
    startLine: 923
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  summary: Establishes a connection to a remote host. The host is specified by a host name and a port number.
  syntax:
    content: public void Connect(string host, int port)
    content.vb: Public Sub Connect(host As String, port As Integer)
    parameters:
    - id: host
      type: System.String
      description: The name of the remote host.
    - id: port
      type: System.Int32
      description: The port number of the remote host.
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>host</em> is null. "
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: The port number is not valid.
  - type: System.Net.Sockets.SocketException
    commentId: T:System.Net.Sockets.SocketException
    description: 'An error occurred when attempting to access the socket. See the Remarks section for more information. '
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: 'The <xref href="System.Net.Sockets.Socket" data-throw-if-not-resolved="false"></xref> has been closed. '
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: This method is valid for sockets in the <xref href="System.Net.Sockets.AddressFamily.InterNetwork" data-throw-if-not-resolved="false"></xref> or <xref href="System.Net.Sockets.AddressFamily.InterNetworkV6" data-throw-if-not-resolved="false"></xref> families.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: The <xref href="System.Net.Sockets.Socket" data-throw-if-not-resolved="false"></xref> is <xref href="System.Net.Sockets.Socket.Listen(System.Int32)" data-throw-if-not-resolved="false"></xref>ing.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Net.Sockets.Socket.ConnectAsync(System.Net.Sockets.SocketAsyncEventArgs)
  commentId: M:System.Net.Sockets.Socket.ConnectAsync(System.Net.Sockets.SocketAsyncEventArgs)
  id: ConnectAsync(System.Net.Sockets.SocketAsyncEventArgs)
  parent: System.Net.Sockets.Socket
  langs:
  - csharp
  - vb
  name: ConnectAsync(SocketAsyncEventArgs)
  fullName: System.Net.Sockets.Socket.ConnectAsync(System.Net.Sockets.SocketAsyncEventArgs)
  type: Method
  source:
    remote:
      path: src/System.Net.Sockets/src/System/Net/Sockets/Socket.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ConnectAsync
    path: src/System.Net.Sockets/src/System/Net/Sockets/Socket.cs
    startLine: 4293
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  summary: Begins an asynchronous request for a connection to a remote host.
  syntax:
    content: public bool ConnectAsync(SocketAsyncEventArgs e)
    content.vb: Public Function ConnectAsync(e As SocketAsyncEventArgs) As Boolean
    parameters:
    - id: e
      type: System.Net.Sockets.SocketAsyncEventArgs
      description: The <xref href="System.Net.Sockets.SocketAsyncEventArgs" data-throw-if-not-resolved="false"></xref> object to use for this asynchronous socket operation.
    return:
      type: System.Boolean
      description: 'Returns true if the I/O operation is pending. The <xref href="System.Net.Sockets.SocketAsyncEventArgs.Completed" data-throw-if-not-resolved="false"></xref> event on the <em>e</em> parameter will be raised upon completion of the operation. Returns false if the I/O operation completed synchronously. In this case, The <xref href="System.Net.Sockets.SocketAsyncEventArgs.Completed" data-throw-if-not-resolved="false"></xref> event on the <em>e</em> parameter will not be raised and the <em>e</em> object passed as a parameter may be examined immediately after the method call returns to retrieve the result of the operation. '
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: 'An argument is not valid. This exception occurs if multiple buffers are specified, the <xref href="System.Net.Sockets.SocketAsyncEventArgs.BufferList" data-throw-if-not-resolved="false"></xref> property is not null. '
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <em>e</em> parameter cannot be null and the <xref href="System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint" data-throw-if-not-resolved="false"></xref> cannot be null.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: The <xref href="System.Net.Sockets.Socket" data-throw-if-not-resolved="false"></xref> is listening or a socket operation was already in progress using the <xref href="System.Net.Sockets.SocketAsyncEventArgs" data-throw-if-not-resolved="false"></xref> object specified in the <em>e</em> parameter.
  - type: System.Net.Sockets.SocketException
    commentId: T:System.Net.Sockets.SocketException
    description: An error occurred when attempting to access the socket. See the Remarks section for more information.
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: Windows XP or later is required for this method. This exception also occurs if the local endpoint and the <xref href="System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint" data-throw-if-not-resolved="false"></xref> are not the same address family.
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: 'The <xref href="System.Net.Sockets.Socket" data-throw-if-not-resolved="false"></xref> has been closed. '
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: A caller higher in the call stack does not have permission for the requested operation.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Net.Sockets.Socket.ConnectAsync(System.Net.Sockets.SocketType,System.Net.Sockets.ProtocolType,System.Net.Sockets.SocketAsyncEventArgs)
  commentId: M:System.Net.Sockets.Socket.ConnectAsync(System.Net.Sockets.SocketType,System.Net.Sockets.ProtocolType,System.Net.Sockets.SocketAsyncEventArgs)
  id: ConnectAsync(System.Net.Sockets.SocketType,System.Net.Sockets.ProtocolType,System.Net.Sockets.SocketAsyncEventArgs)
  parent: System.Net.Sockets.Socket
  langs:
  - csharp
  - vb
  name: ConnectAsync(SocketType, ProtocolType, SocketAsyncEventArgs)
  fullName: System.Net.Sockets.Socket.ConnectAsync(System.Net.Sockets.SocketType, System.Net.Sockets.ProtocolType, System.Net.Sockets.SocketAsyncEventArgs)
  type: Method
  source:
    remote:
      path: src/System.Net.Sockets/src/System/Net/Sockets/Socket.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ConnectAsync
    path: src/System.Net.Sockets/src/System/Net/Sockets/Socket.cs
    startLine: 4418
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  summary: Begins an asynchronous request for a connection to a remote host.
  syntax:
    content: public static bool ConnectAsync(SocketType socketType, ProtocolType protocolType, SocketAsyncEventArgs e)
    content.vb: Public Shared Function ConnectAsync(socketType As SocketType, protocolType As ProtocolType, e As SocketAsyncEventArgs) As Boolean
    parameters:
    - id: socketType
      type: System.Net.Sockets.SocketType
      description: One of the <xref href="System.Net.Sockets.SocketType" data-throw-if-not-resolved="false"></xref> values.
    - id: protocolType
      type: System.Net.Sockets.ProtocolType
      description: One of the <xref href="System.Net.Sockets.ProtocolType" data-throw-if-not-resolved="false"></xref> values.
    - id: e
      type: System.Net.Sockets.SocketAsyncEventArgs
      description: The <xref href="System.Net.Sockets.SocketAsyncEventArgs" data-throw-if-not-resolved="false"></xref> object to use for this asynchronous socket operation.
    return:
      type: System.Boolean
      description: 'Returns true if the I/O operation is pending. The <xref href="System.Net.Sockets.SocketAsyncEventArgs.Completed" data-throw-if-not-resolved="false"></xref> event on the <em>e</em> parameter will be raised upon completion of the operation. Returns false if the I/O operation completed synchronously. In this case, The <xref href="System.Net.Sockets.SocketAsyncEventArgs.Completed" data-throw-if-not-resolved="false"></xref> event on the <em>e</em> parameter will not be raised and the <em>e</em> object passed as a parameter may be examined immediately after the method call returns to retrieve the result of the operation. '
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: 'An argument is not valid. This exception occurs if multiple buffers are specified, the <xref href="System.Net.Sockets.SocketAsyncEventArgs.BufferList" data-throw-if-not-resolved="false"></xref> property is not null. '
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <em>e</em> parameter cannot be null and the <xref href="System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint" data-throw-if-not-resolved="false"></xref> cannot be null.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: The <xref href="System.Net.Sockets.Socket" data-throw-if-not-resolved="false"></xref> is listening or a socket operation was already in progress using the <xref href="System.Net.Sockets.SocketAsyncEventArgs" data-throw-if-not-resolved="false"></xref> object specified in the <em>e</em> parameter.
  - type: System.Net.Sockets.SocketException
    commentId: T:System.Net.Sockets.SocketException
    description: An error occurred when attempting to access the socket. See the Remarks section for more information.
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: Windows XP or later is required for this method. This exception also occurs if the local endpoint and the <xref href="System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint" data-throw-if-not-resolved="false"></xref> are not the same address family.
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: 'The <xref href="System.Net.Sockets.Socket" data-throw-if-not-resolved="false"></xref> has been closed. '
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: A caller higher in the call stack does not have permission for the requested operation.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Net.Sockets.Socket.Dispose
  commentId: M:System.Net.Sockets.Socket.Dispose
  id: Dispose
  parent: System.Net.Sockets.Socket
  langs:
  - csharp
  - vb
  name: Dispose()
  fullName: System.Net.Sockets.Socket.Dispose()
  type: Method
  source:
    remote:
      path: src/System.Net.Sockets/src/System/Net/Sockets/Socket.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Dispose
    path: src/System.Net.Sockets/src/System/Net/Sockets/Socket.cs
    startLine: 5313
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  summary: Releases all resources used by the current instance of the <xref href="System.Net.Sockets.Socket" data-throw-if-not-resolved="false"></xref> class.
  syntax:
    content: public void Dispose()
    content.vb: Public Sub Dispose
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Net.Sockets.Socket.Dispose(System.Boolean)
  commentId: M:System.Net.Sockets.Socket.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Net.Sockets.Socket
  langs:
  - csharp
  - vb
  name: Dispose(Boolean)
  fullName: System.Net.Sockets.Socket.Dispose(System.Boolean)
  type: Method
  source:
    remote:
      path: src/System.Net.Sockets/src/System/Net/Sockets/Socket.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Dispose
    path: src/System.Net.Sockets/src/System/Net/Sockets/Socket.cs
    startLine: 5142
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  summary: Releases the unmanaged resources used by the <xref href="System.Net.Sockets.Socket" data-throw-if-not-resolved="false"></xref>, and optionally disposes of the managed resources.
  syntax:
    content: protected virtual void Dispose(bool disposing)
    content.vb: Protected Overridable Sub Dispose(disposing As Boolean)
    parameters:
    - id: disposing
      type: System.Boolean
      description: 'true to release both managed and unmanaged resources; false to releases only unmanaged resources. '
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: System.Net.Sockets.Socket.Finalize
  commentId: M:System.Net.Sockets.Socket.Finalize
  id: Finalize
  parent: System.Net.Sockets.Socket
  langs:
  - csharp
  - vb
  name: Finalize()
  fullName: System.Net.Sockets.Socket.Finalize()
  type: Method
  source:
    remote:
      path: src/System.Net.Sockets/src/System/Net/Sockets/Socket.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Finalize
    path: src/System.Net.Sockets/src/System/Net/Sockets/Socket.cs
    startLine: 5332
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  summary: Frees resources used by the <xref href="System.Net.Sockets.Socket" data-throw-if-not-resolved="false"></xref> class.
  syntax:
    content: protected void Finalize()
    content.vb: Protected Sub Finalize
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: System.Net.Sockets.Socket.GetSocketOption(System.Net.Sockets.SocketOptionLevel,System.Net.Sockets.SocketOptionName)
  commentId: M:System.Net.Sockets.Socket.GetSocketOption(System.Net.Sockets.SocketOptionLevel,System.Net.Sockets.SocketOptionName)
  id: GetSocketOption(System.Net.Sockets.SocketOptionLevel,System.Net.Sockets.SocketOptionName)
  parent: System.Net.Sockets.Socket
  langs:
  - csharp
  - vb
  name: GetSocketOption(SocketOptionLevel, SocketOptionName)
  fullName: System.Net.Sockets.Socket.GetSocketOption(System.Net.Sockets.SocketOptionLevel, System.Net.Sockets.SocketOptionName)
  type: Method
  source:
    remote:
      path: src/System.Net.Sockets/src/System/Net/Sockets/Socket.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetSocketOption
    path: src/System.Net.Sockets/src/System/Net/Sockets/Socket.cs
    startLine: 2049
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  summary: Returns the value of a specified <xref href="System.Net.Sockets.Socket" data-throw-if-not-resolved="false"></xref> option, represented as an object.
  syntax:
    content: public object GetSocketOption(SocketOptionLevel optionLevel, SocketOptionName optionName)
    content.vb: Public Function GetSocketOption(optionLevel As SocketOptionLevel, optionName As SocketOptionName) As Object
    parameters:
    - id: optionLevel
      type: System.Net.Sockets.SocketOptionLevel
      description: 'One of the <xref href="System.Net.Sockets.SocketOptionLevel" data-throw-if-not-resolved="false"></xref> values. '
    - id: optionName
      type: System.Net.Sockets.SocketOptionName
      description: 'One of the <xref href="System.Net.Sockets.SocketOptionName" data-throw-if-not-resolved="false"></xref> values. '
    return:
      type: System.Object
      description: An object that represents the value of the option. When the <em>optionName</em> parameter is set to <xref href="System.Net.Sockets.SocketOptionName.Linger" data-throw-if-not-resolved="false"></xref> the return value is an instance of the <xref href="System.Net.Sockets.LingerOption" data-throw-if-not-resolved="false"></xref> class. When <em>optionName</em> is set to <xref href="System.Net.Sockets.SocketOptionName.AddMembership" data-throw-if-not-resolved="false"></xref> or <xref href="System.Net.Sockets.SocketOptionName.DropMembership" data-throw-if-not-resolved="false"></xref>, the return value is an instance of the <xref href="System.Net.Sockets.MulticastOption" data-throw-if-not-resolved="false"></xref> class. When <em>optionName</em> is any other value, the return value is an integer.
  exceptions:
  - type: System.Net.Sockets.SocketException
    commentId: T:System.Net.Sockets.SocketException
    description: An error occurred when attempting to access the socket. See the Remarks section for more information.-or-<em>optionName</em> was set to the unsupported value <xref href="System.Net.Sockets.SocketOptionName.MaxConnections" data-throw-if-not-resolved="false"></xref>.
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: 'The <xref href="System.Net.Sockets.Socket" data-throw-if-not-resolved="false"></xref> has been closed. '
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Net.Sockets.Socket.GetSocketOption(System.Net.Sockets.SocketOptionLevel,System.Net.Sockets.SocketOptionName,System.Byte[])
  commentId: M:System.Net.Sockets.Socket.GetSocketOption(System.Net.Sockets.SocketOptionLevel,System.Net.Sockets.SocketOptionName,System.Byte[])
  id: GetSocketOption(System.Net.Sockets.SocketOptionLevel,System.Net.Sockets.SocketOptionName,System.Byte[])
  parent: System.Net.Sockets.Socket
  langs:
  - csharp
  - vb
  name: GetSocketOption(SocketOptionLevel, SocketOptionName, Byte[])
  fullName: System.Net.Sockets.Socket.GetSocketOption(System.Net.Sockets.SocketOptionLevel, System.Net.Sockets.SocketOptionName, System.Byte[])
  type: Method
  source:
    remote:
      path: src/System.Net.Sockets/src/System/Net/Sockets/Socket.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetSocketOption
    path: src/System.Net.Sockets/src/System/Net/Sockets/Socket.cs
    startLine: 2099
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  summary: Returns the specified <xref href="System.Net.Sockets.Socket" data-throw-if-not-resolved="false"></xref> option setting, represented as a byte array.
  syntax:
    content: public void GetSocketOption(SocketOptionLevel optionLevel, SocketOptionName optionName, byte[] optionValue)
    content.vb: Public Sub GetSocketOption(optionLevel As SocketOptionLevel, optionName As SocketOptionName, optionValue As Byte())
    parameters:
    - id: optionLevel
      type: System.Net.Sockets.SocketOptionLevel
      description: 'One of the <xref href="System.Net.Sockets.SocketOptionLevel" data-throw-if-not-resolved="false"></xref> values. '
    - id: optionName
      type: System.Net.Sockets.SocketOptionName
      description: 'One of the <xref href="System.Net.Sockets.SocketOptionName" data-throw-if-not-resolved="false"></xref> values. '
    - id: optionValue
      type: System.Byte[]
      description: 'An array of type <xref href="System.Byte" data-throw-if-not-resolved="false"></xref> that is to receive the option setting. '
  exceptions:
  - type: System.Net.Sockets.SocketException
    commentId: T:System.Net.Sockets.SocketException
    description: An error occurred when attempting to access the socket. See the Remarks section for more information. - or -In .NET Compact Framework applications, the Windows CE default buffer space is set to 32768 bytes. You can change the per socket buffer space by calling <see cref="Overload:System.Net.Sockets.Socket.SetSocketOption"></see>.
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: 'The <xref href="System.Net.Sockets.Socket" data-throw-if-not-resolved="false"></xref> has been closed. '
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Net.Sockets.Socket.GetSocketOption(System.Net.Sockets.SocketOptionLevel, System.Net.Sockets.SocketOptionName, System.Byte())
  name.vb: GetSocketOption(SocketOptionLevel, SocketOptionName, Byte())
- uid: System.Net.Sockets.Socket.GetSocketOption(System.Net.Sockets.SocketOptionLevel,System.Net.Sockets.SocketOptionName,System.Int32)
  commentId: M:System.Net.Sockets.Socket.GetSocketOption(System.Net.Sockets.SocketOptionLevel,System.Net.Sockets.SocketOptionName,System.Int32)
  id: GetSocketOption(System.Net.Sockets.SocketOptionLevel,System.Net.Sockets.SocketOptionName,System.Int32)
  parent: System.Net.Sockets.Socket
  langs:
  - csharp
  - vb
  name: GetSocketOption(SocketOptionLevel, SocketOptionName, Int32)
  fullName: System.Net.Sockets.Socket.GetSocketOption(System.Net.Sockets.SocketOptionLevel, System.Net.Sockets.SocketOptionName, System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Net.Sockets/src/System/Net/Sockets/Socket.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetSocketOption
    path: src/System.Net.Sockets/src/System/Net/Sockets/Socket.cs
    startLine: 2135
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  summary: Returns the value of the specified <xref href="System.Net.Sockets.Socket" data-throw-if-not-resolved="false"></xref> option in an array.
  syntax:
    content: public byte[] GetSocketOption(SocketOptionLevel optionLevel, SocketOptionName optionName, int optionLength)
    content.vb: Public Function GetSocketOption(optionLevel As SocketOptionLevel, optionName As SocketOptionName, optionLength As Integer) As Byte()
    parameters:
    - id: optionLevel
      type: System.Net.Sockets.SocketOptionLevel
      description: 'One of the <xref href="System.Net.Sockets.SocketOptionLevel" data-throw-if-not-resolved="false"></xref> values. '
    - id: optionName
      type: System.Net.Sockets.SocketOptionName
      description: 'One of the <xref href="System.Net.Sockets.SocketOptionName" data-throw-if-not-resolved="false"></xref> values. '
    - id: optionLength
      type: System.Int32
      description: 'The length, in bytes, of the expected return value. '
    return:
      type: System.Byte[]
      description: An array of type <xref href="System.Byte" data-throw-if-not-resolved="false"></xref> that contains the value of the socket option.
  exceptions:
  - type: System.Net.Sockets.SocketException
    commentId: T:System.Net.Sockets.SocketException
    description: An error occurred when attempting to access the socket. See the Remarks section for more information. - or -In .NET Compact Framework applications, the Windows CE default buffer space is set to 32768 bytes. You can change the per socket buffer space by calling <see cref="Overload:System.Net.Sockets.Socket.SetSocketOption"></see>.
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: 'The <xref href="System.Net.Sockets.Socket" data-throw-if-not-resolved="false"></xref> has been closed. '
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Net.Sockets.Socket.IOControl(System.Int32,System.Byte[],System.Byte[])
  commentId: M:System.Net.Sockets.Socket.IOControl(System.Int32,System.Byte[],System.Byte[])
  id: IOControl(System.Int32,System.Byte[],System.Byte[])
  parent: System.Net.Sockets.Socket
  langs:
  - csharp
  - vb
  name: IOControl(Int32, Byte[], Byte[])
  fullName: System.Net.Sockets.Socket.IOControl(System.Int32, System.Byte[], System.Byte[])
  type: Method
  source:
    remote:
      path: src/System.Net.Sockets/src/System/Net/Sockets/Socket.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IOControl
    path: src/System.Net.Sockets/src/System/Net/Sockets/Socket.cs
    startLine: 1887
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  summary: Sets low-level operating modes for the <xref href="System.Net.Sockets.Socket" data-throw-if-not-resolved="false"></xref> using numerical control codes.
  syntax:
    content: public int IOControl(int ioControlCode, byte[] optionInValue, byte[] optionOutValue)
    content.vb: Public Function IOControl(ioControlCode As Integer, optionInValue As Byte(), optionOutValue As Byte()) As Integer
    parameters:
    - id: ioControlCode
      type: System.Int32
      description: 'An <xref href="System.Int32" data-throw-if-not-resolved="false"></xref> value that specifies the control code of the operation to perform. '
    - id: optionInValue
      type: System.Byte[]
      description: 'A <xref href="System.Byte" data-throw-if-not-resolved="false"></xref> array that contains the input data required by the operation. '
    - id: optionOutValue
      type: System.Byte[]
      description: 'A <xref href="System.Byte" data-throw-if-not-resolved="false"></xref> array that contains the output data returned by the operation. '
    return:
      type: System.Int32
      description: The number of bytes in the <em>optionOutValue</em> parameter.
  exceptions:
  - type: System.Net.Sockets.SocketException
    commentId: T:System.Net.Sockets.SocketException
    description: 'An error occurred when attempting to access the socket. See the Remarks section for more information. '
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: 'The <xref href="System.Net.Sockets.Socket" data-throw-if-not-resolved="false"></xref> has been closed. '
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: 'An attempt was made to change the blocking mode without using the <xref href="System.Net.Sockets.Socket.Blocking" data-throw-if-not-resolved="false"></xref> property. '
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: 'A caller in the call stack does not have the required permissions. '
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Net.Sockets.Socket.IOControl(System.Int32, System.Byte(), System.Byte())
  name.vb: IOControl(Int32, Byte(), Byte())
- uid: System.Net.Sockets.Socket.IOControl(System.Net.Sockets.IOControlCode,System.Byte[],System.Byte[])
  commentId: M:System.Net.Sockets.Socket.IOControl(System.Net.Sockets.IOControlCode,System.Byte[],System.Byte[])
  id: IOControl(System.Net.Sockets.IOControlCode,System.Byte[],System.Byte[])
  parent: System.Net.Sockets.Socket
  langs:
  - csharp
  - vb
  name: IOControl(IOControlCode, Byte[], Byte[])
  fullName: System.Net.Sockets.Socket.IOControl(System.Net.Sockets.IOControlCode, System.Byte[], System.Byte[])
  type: Method
  source:
    remote:
      path: src/System.Net.Sockets/src/System/Net/Sockets/Socket.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IOControl
    path: src/System.Net.Sockets/src/System/Net/Sockets/Socket.cs
    startLine: 1926
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  summary: Sets low-level operating modes for the <xref href="System.Net.Sockets.Socket" data-throw-if-not-resolved="false"></xref> using the <xref href="System.Net.Sockets.IOControlCode" data-throw-if-not-resolved="false"></xref> enumeration to specify control codes.
  syntax:
    content: public int IOControl(IOControlCode ioControlCode, byte[] optionInValue, byte[] optionOutValue)
    content.vb: Public Function IOControl(ioControlCode As IOControlCode, optionInValue As Byte(), optionOutValue As Byte()) As Integer
    parameters:
    - id: ioControlCode
      type: System.Net.Sockets.IOControlCode
      description: 'A <xref href="System.Net.Sockets.IOControlCode" data-throw-if-not-resolved="false"></xref> value that specifies the control code of the operation to perform. '
    - id: optionInValue
      type: System.Byte[]
      description: 'An array of type <xref href="System.Byte" data-throw-if-not-resolved="false"></xref> that contains the input data required by the operation. '
    - id: optionOutValue
      type: System.Byte[]
      description: 'An array of type <xref href="System.Byte" data-throw-if-not-resolved="false"></xref> that contains the output data returned by the operation. '
    return:
      type: System.Int32
      description: The number of bytes in the <em>optionOutValue</em> parameter.
  exceptions:
  - type: System.Net.Sockets.SocketException
    commentId: T:System.Net.Sockets.SocketException
    description: 'An error occurred when attempting to access the socket. See the Remarks section for more information. '
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: 'The <xref href="System.Net.Sockets.Socket" data-throw-if-not-resolved="false"></xref> has been closed. '
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: 'An attempt was made to change the blocking mode without using the <xref href="System.Net.Sockets.Socket.Blocking" data-throw-if-not-resolved="false"></xref> property. '
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Net.Sockets.Socket.IOControl(System.Net.Sockets.IOControlCode, System.Byte(), System.Byte())
  name.vb: IOControl(IOControlCode, Byte(), Byte())
- uid: System.Net.Sockets.Socket.Listen(System.Int32)
  commentId: M:System.Net.Sockets.Socket.Listen(System.Int32)
  id: Listen(System.Int32)
  parent: System.Net.Sockets.Socket
  langs:
  - csharp
  - vb
  name: Listen(Int32)
  fullName: System.Net.Sockets.Socket.Listen(System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Net.Sockets/src/System/Net/Sockets/Socket.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Listen
    path: src/System.Net.Sockets/src/System/Net/Sockets/Socket.cs
    startLine: 1024
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  summary: Places a <xref href="System.Net.Sockets.Socket" data-throw-if-not-resolved="false"></xref> in a listening state.
  syntax:
    content: public void Listen(int backlog)
    content.vb: Public Sub Listen(backlog As Integer)
    parameters:
    - id: backlog
      type: System.Int32
      description: 'The maximum length of the pending connections queue. '
  exceptions:
  - type: System.Net.Sockets.SocketException
    commentId: T:System.Net.Sockets.SocketException
    description: 'An error occurred when attempting to access the socket. See the Remarks section for more information. '
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: 'The <xref href="System.Net.Sockets.Socket" data-throw-if-not-resolved="false"></xref> has been closed. '
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Net.Sockets.Socket.Poll(System.Int32,System.Net.Sockets.SelectMode)
  commentId: M:System.Net.Sockets.Socket.Poll(System.Int32,System.Net.Sockets.SelectMode)
  id: Poll(System.Int32,System.Net.Sockets.SelectMode)
  parent: System.Net.Sockets.Socket
  langs:
  - csharp
  - vb
  name: Poll(Int32, SelectMode)
  fullName: System.Net.Sockets.Socket.Poll(System.Int32, System.Net.Sockets.SelectMode)
  type: Method
  source:
    remote:
      path: src/System.Net.Sockets/src/System/Net/Sockets/Socket.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Poll
    path: src/System.Net.Sockets/src/System/Net/Sockets/Socket.cs
    startLine: 2182
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  summary: Determines the status of the <xref href="System.Net.Sockets.Socket" data-throw-if-not-resolved="false"></xref>.
  syntax:
    content: public bool Poll(int microSeconds, SelectMode mode)
    content.vb: Public Function Poll(microSeconds As Integer, mode As SelectMode) As Boolean
    parameters:
    - id: microSeconds
      type: System.Int32
      description: 'The time to wait for a response, in microseconds. '
    - id: mode
      type: System.Net.Sockets.SelectMode
      description: 'One of the <xref href="System.Net.Sockets.SelectMode" data-throw-if-not-resolved="false"></xref> values. '
    return:
      type: System.Boolean
      description: 'The status of the <xref href="System.Net.Sockets.Socket" data-throw-if-not-resolved="false"></xref> based on the polling mode value passed in the <em>mode</em> parameter.Mode Return Value <xref href="System.Net.Sockets.SelectMode.SelectRead" data-throw-if-not-resolved="false"></xref>true if <xref href="System.Net.Sockets.Socket.Listen(System.Int32)" data-throw-if-not-resolved="false"></xref> has been called and a connection is pending; -or- true if data is available for reading; -or- true if the connection has been closed, reset, or terminated; otherwise, returns false. <xref href="System.Net.Sockets.SelectMode.SelectWrite" data-throw-if-not-resolved="false"></xref>true, if processing a <xref href="System.Net.Sockets.Socket.Connect(System.Net.EndPoint)" data-throw-if-not-resolved="false"></xref>, and the connection has succeeded; -or- true if data can be sent; otherwise, returns false. <xref href="System.Net.Sockets.SelectMode.SelectError" data-throw-if-not-resolved="false"></xref>true if processing a <xref href="System.Net.Sockets.Socket.Connect(System.Net.EndPoint)" data-throw-if-not-resolved="false"></xref> that does not block, and the connection has failed; -or- true if <xref href="System.Net.Sockets.SocketOptionName.OutOfBandInline" data-throw-if-not-resolved="false"></xref> is not set and out-of-band data is available; otherwise, returns false. '
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: 'The <em>mode</em> parameter is not one of the <xref href="System.Net.Sockets.SelectMode" data-throw-if-not-resolved="false"></xref> values. '
  - type: System.Net.Sockets.SocketException
    commentId: T:System.Net.Sockets.SocketException
    description: 'An error occurred when attempting to access the socket. See remarks below. '
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: 'The <xref href="System.Net.Sockets.Socket" data-throw-if-not-resolved="false"></xref> has been closed. '
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Net.Sockets.Socket.Receive(System.Byte[])
  commentId: M:System.Net.Sockets.Socket.Receive(System.Byte[])
  id: Receive(System.Byte[])
  parent: System.Net.Sockets.Socket
  langs:
  - csharp
  - vb
  name: Receive(Byte[])
  fullName: System.Net.Sockets.Socket.Receive(System.Byte[])
  type: Method
  source:
    remote:
      path: src/System.Net.Sockets/src/System/Net/Sockets/Socket.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Receive
    path: src/System.Net.Sockets/src/System/Net/Sockets/Socket.cs
    startLine: 1452
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  summary: Receives data from a bound <xref href="System.Net.Sockets.Socket" data-throw-if-not-resolved="false"></xref> into a receive buffer.
  syntax:
    content: public int Receive(byte[] buffer)
    content.vb: Public Function Receive(buffer As Byte()) As Integer
    parameters:
    - id: buffer
      type: System.Byte[]
      description: 'An array of type <xref href="System.Byte" data-throw-if-not-resolved="false"></xref> that is the storage location for the received data. '
    return:
      type: System.Int32
      description: The number of bytes received.
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>buffer</em> is null. "
  - type: System.Net.Sockets.SocketException
    commentId: T:System.Net.Sockets.SocketException
    description: 'An error occurred when attempting to access the socket. See the Remarks section for more information. '
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: 'The <xref href="System.Net.Sockets.Socket" data-throw-if-not-resolved="false"></xref> has been closed. '
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: 'A caller in the call stack does not have the required permissions. '
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Net.Sockets.Socket.Receive(System.Byte())
  name.vb: Receive(Byte())
- uid: System.Net.Sockets.Socket.Receive(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags)
  commentId: M:System.Net.Sockets.Socket.Receive(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags)
  id: Receive(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags)
  parent: System.Net.Sockets.Socket
  langs:
  - csharp
  - vb
  name: Receive(Byte[], Int32, Int32, SocketFlags)
  fullName: System.Net.Sockets.Socket.Receive(System.Byte[], System.Int32, System.Int32, System.Net.Sockets.SocketFlags)
  type: Method
  source:
    remote:
      path: src/System.Net.Sockets/src/System/Net/Sockets/Socket.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Receive
    path: src/System.Net.Sockets/src/System/Net/Sockets/Socket.cs
    startLine: 1458
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  summary: Receives the specified number of bytes from a bound <xref href="System.Net.Sockets.Socket" data-throw-if-not-resolved="false"></xref> into the specified offset position of the receive buffer, using the specified <xref href="System.Net.Sockets.SocketFlags" data-throw-if-not-resolved="false"></xref>.
  syntax:
    content: public int Receive(byte[] buffer, int offset, int size, SocketFlags socketFlags)
    content.vb: Public Function Receive(buffer As Byte(), offset As Integer, size As Integer, socketFlags As SocketFlags) As Integer
    parameters:
    - id: buffer
      type: System.Byte[]
      description: 'An array of type <xref href="System.Byte" data-throw-if-not-resolved="false"></xref> that is the storage location for received data. '
    - id: offset
      type: System.Int32
      description: 'The location in <em>buffer</em> to store the received data. '
    - id: size
      type: System.Int32
      description: 'The number of bytes to receive. '
    - id: socketFlags
      type: System.Net.Sockets.SocketFlags
      description: 'A bitwise combination of the <xref href="System.Net.Sockets.SocketFlags" data-throw-if-not-resolved="false"></xref> values. '
    return:
      type: System.Int32
      description: The number of bytes received.
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>buffer</em> is null. "
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<em>offset</em> is less than 0.-or- <em>offset</em> is greater than the length of <em>buffer</em>.-or- <em>size</em> is less than 0.-or- <em>size</em> is greater than the length of <em>buffer</em> minus the value of the <em>offset</em> parameter. "
  - type: System.Net.Sockets.SocketException
    commentId: T:System.Net.Sockets.SocketException
    description: "\n<em>socketFlags</em> is not a valid combination of values.-or- The <xref href=\"System.Net.Sockets.Socket.LocalEndPoint\" data-throw-if-not-resolved=\"false\"></xref> property was not set.-or- An operating system error occurs while accessing the <xref href=\"System.Net.Sockets.Socket\" data-throw-if-not-resolved=\"false\"></xref>. "
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: 'The <xref href="System.Net.Sockets.Socket" data-throw-if-not-resolved="false"></xref> has been closed. '
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: 'A caller in the call stack does not have the required permissions. '
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Net.Sockets.Socket.Receive(System.Byte(), System.Int32, System.Int32, System.Net.Sockets.SocketFlags)
  name.vb: Receive(Byte(), Int32, Int32, SocketFlags)
- uid: System.Net.Sockets.Socket.Receive(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.Sockets.SocketError@)
  commentId: M:System.Net.Sockets.Socket.Receive(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.Sockets.SocketError@)
  id: Receive(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.Sockets.SocketError@)
  parent: System.Net.Sockets.Socket
  langs:
  - csharp
  - vb
  name: Receive(Byte[], Int32, Int32, SocketFlags, out SocketError)
  fullName: System.Net.Sockets.Socket.Receive(System.Byte[], System.Int32, System.Int32, System.Net.Sockets.SocketFlags, out System.Net.Sockets.SocketError)
  type: Method
  source:
    remote:
      path: src/System.Net.Sockets/ref/System.Net.Sockets.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Receive
    path: src/System.Net.Sockets/ref/System.Net.Sockets.cs
    startLine: 207
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  summary: Receives data from a bound <xref href="System.Net.Sockets.Socket" data-throw-if-not-resolved="false"></xref> into a receive buffer, using the specified <xref href="System.Net.Sockets.SocketFlags" data-throw-if-not-resolved="false"></xref>.
  syntax:
    content: public int Receive(byte[] buffer, int offset, int size, SocketFlags socketFlags, out SocketError errorCode)
    content.vb: Public Function Receive(buffer As Byte(), offset As Integer, size As Integer, socketFlags As SocketFlags, ByRef errorCode As SocketError) As Integer
    parameters:
    - id: buffer
      type: System.Byte[]
      description: An array of type <xref href="System.Byte" data-throw-if-not-resolved="false"></xref> that is the storage location for the received data.
    - id: offset
      type: System.Int32
      description: 'The position in the <em>buffer</em> parameter to store the received data. '
    - id: size
      type: System.Int32
      description: 'The number of bytes to receive. '
    - id: socketFlags
      type: System.Net.Sockets.SocketFlags
      description: A bitwise combination of the <xref href="System.Net.Sockets.SocketFlags" data-throw-if-not-resolved="false"></xref> values.
    - id: errorCode
      type: System.Net.Sockets.SocketError
      description: A <xref href="System.Net.Sockets.SocketError" data-throw-if-not-resolved="false"></xref> object that stores the socket error.
    return:
      type: System.Int32
      description: The number of bytes received.
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>buffer</em> is null. "
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<em>offset</em> is less than 0.-or- <em>offset</em> is greater than the length of <em>buffer</em>.-or- <em>size</em> is less than 0.-or- <em>size</em> is greater than the length of <em>buffer</em> minus the value of the <em>offset</em> parameter. "
  - type: System.Net.Sockets.SocketException
    commentId: T:System.Net.Sockets.SocketException
    description: "\n<em>socketFlags</em> is not a valid combination of values.-or- The <xref href=\"System.Net.Sockets.Socket.LocalEndPoint\" data-throw-if-not-resolved=\"false\"></xref> property is not set.-or- An operating system error occurs while accessing the <xref href=\"System.Net.Sockets.Socket\" data-throw-if-not-resolved=\"false\"></xref>. "
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: 'The <xref href="System.Net.Sockets.Socket" data-throw-if-not-resolved="false"></xref> has been closed. '
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: 'A caller in the call stack does not have the required permissions. '
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Net.Sockets.Socket.Receive(System.Byte(), System.Int32, System.Int32, System.Net.Sockets.SocketFlags, ByRef System.Net.Sockets.SocketError)
  name.vb: Receive(Byte(), Int32, Int32, SocketFlags, ByRef SocketError)
- uid: System.Net.Sockets.Socket.Receive(System.Byte[],System.Int32,System.Net.Sockets.SocketFlags)
  commentId: M:System.Net.Sockets.Socket.Receive(System.Byte[],System.Int32,System.Net.Sockets.SocketFlags)
  id: Receive(System.Byte[],System.Int32,System.Net.Sockets.SocketFlags)
  parent: System.Net.Sockets.Socket
  langs:
  - csharp
  - vb
  name: Receive(Byte[], Int32, SocketFlags)
  fullName: System.Net.Sockets.Socket.Receive(System.Byte[], System.Int32, System.Net.Sockets.SocketFlags)
  type: Method
  source:
    remote:
      path: src/System.Net.Sockets/src/System/Net/Sockets/Socket.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Receive
    path: src/System.Net.Sockets/src/System/Net/Sockets/Socket.cs
    startLine: 1442
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  summary: Receives the specified number of bytes of data from a bound <xref href="System.Net.Sockets.Socket" data-throw-if-not-resolved="false"></xref> into a receive buffer, using the specified <xref href="System.Net.Sockets.SocketFlags" data-throw-if-not-resolved="false"></xref>.
  syntax:
    content: public int Receive(byte[] buffer, int size, SocketFlags socketFlags)
    content.vb: Public Function Receive(buffer As Byte(), size As Integer, socketFlags As SocketFlags) As Integer
    parameters:
    - id: buffer
      type: System.Byte[]
      description: 'An array of type <xref href="System.Byte" data-throw-if-not-resolved="false"></xref> that is the storage location for the received data. '
    - id: size
      type: System.Int32
      description: 'The number of bytes to receive. '
    - id: socketFlags
      type: System.Net.Sockets.SocketFlags
      description: 'A bitwise combination of the <xref href="System.Net.Sockets.SocketFlags" data-throw-if-not-resolved="false"></xref> values. '
    return:
      type: System.Int32
      description: The number of bytes received.
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>buffer</em> is null. "
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<em>size</em> exceeds the size of <em>buffer</em>. "
  - type: System.Net.Sockets.SocketException
    commentId: T:System.Net.Sockets.SocketException
    description: 'An error occurred when attempting to access the socket. See the Remarks section for more information. '
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: 'The <xref href="System.Net.Sockets.Socket" data-throw-if-not-resolved="false"></xref> has been closed. '
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: 'A caller in the call stack does not have the required permissions. '
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Net.Sockets.Socket.Receive(System.Byte(), System.Int32, System.Net.Sockets.SocketFlags)
  name.vb: Receive(Byte(), Int32, SocketFlags)
- uid: System.Net.Sockets.Socket.Receive(System.Byte[],System.Net.Sockets.SocketFlags)
  commentId: M:System.Net.Sockets.Socket.Receive(System.Byte[],System.Net.Sockets.SocketFlags)
  id: Receive(System.Byte[],System.Net.Sockets.SocketFlags)
  parent: System.Net.Sockets.Socket
  langs:
  - csharp
  - vb
  name: Receive(Byte[], SocketFlags)
  fullName: System.Net.Sockets.Socket.Receive(System.Byte[], System.Net.Sockets.SocketFlags)
  type: Method
  source:
    remote:
      path: src/System.Net.Sockets/src/System/Net/Sockets/Socket.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Receive
    path: src/System.Net.Sockets/src/System/Net/Sockets/Socket.cs
    startLine: 1447
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  summary: Receives data from a bound <xref href="System.Net.Sockets.Socket" data-throw-if-not-resolved="false"></xref> into a receive buffer, using the specified <xref href="System.Net.Sockets.SocketFlags" data-throw-if-not-resolved="false"></xref>.
  syntax:
    content: public int Receive(byte[] buffer, SocketFlags socketFlags)
    content.vb: Public Function Receive(buffer As Byte(), socketFlags As SocketFlags) As Integer
    parameters:
    - id: buffer
      type: System.Byte[]
      description: 'An array of type <xref href="System.Byte" data-throw-if-not-resolved="false"></xref> that is the storage location for the received data. '
    - id: socketFlags
      type: System.Net.Sockets.SocketFlags
      description: 'A bitwise combination of the <xref href="System.Net.Sockets.SocketFlags" data-throw-if-not-resolved="false"></xref> values. '
    return:
      type: System.Int32
      description: The number of bytes received.
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>buffer</em> is null. "
  - type: System.Net.Sockets.SocketException
    commentId: T:System.Net.Sockets.SocketException
    description: 'An error occurred when attempting to access the socket. See the Remarks section for more information. '
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: 'The <xref href="System.Net.Sockets.Socket" data-throw-if-not-resolved="false"></xref> has been closed. '
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: 'A caller in the call stack does not have the required permissions. '
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Net.Sockets.Socket.Receive(System.Byte(), System.Net.Sockets.SocketFlags)
  name.vb: Receive(Byte(), SocketFlags)
- uid: System.Net.Sockets.Socket.Receive(System.Collections.Generic.IList{System.ArraySegment{System.Byte}})
  commentId: M:System.Net.Sockets.Socket.Receive(System.Collections.Generic.IList{System.ArraySegment{System.Byte}})
  id: Receive(System.Collections.Generic.IList{System.ArraySegment{System.Byte}})
  parent: System.Net.Sockets.Socket
  langs:
  - csharp
  - vb
  name: Receive(Collections.Generic.IList<ArraySegment<Byte>>)
  fullName: System.Net.Sockets.Socket.Receive(System.Collections.Generic.IList<System.ArraySegment<System.Byte>>)
  type: Method
  source:
    remote:
      path: src/System.Net.Sockets/ref/System.Net.Sockets.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Receive
    path: src/System.Net.Sockets/ref/System.Net.Sockets.cs
    startLine: 210
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  summary: Receives data from a bound <xref href="System.Net.Sockets.Socket" data-throw-if-not-resolved="false"></xref> into the list of receive buffers.
  syntax:
    content: public int Receive(Collections.Generic.IList<ArraySegment<byte>> buffers)
    content.vb: Public Function Receive(buffers As Collections.Generic.IList(Of ArraySegment(Of Byte))) As Integer
    parameters:
    - id: buffers
      type: System.Collections.Generic.IList{System.ArraySegment{System.Byte}}
      description: A list of <xref href="System.ArraySegment`1" data-throw-if-not-resolved="false"></xref>s of type <xref href="System.Byte" data-throw-if-not-resolved="false"></xref> that contains the received data.
    return:
      type: System.Int32
      description: The number of bytes received.
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: 'The <em>buffer</em> parameter is null. '
  - type: System.Net.Sockets.SocketException
    commentId: T:System.Net.Sockets.SocketException
    description: 'An error occurred while attempting to access the socket. See the Remarks section for more information. '
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: 'The <xref href="System.Net.Sockets.Socket" data-throw-if-not-resolved="false"></xref> has been closed. '
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Net.Sockets.Socket.Receive(System.Collections.Generic.IList(Of System.ArraySegment(Of System.Byte)))
  name.vb: Receive(Collections.Generic.IList(Of ArraySegment(Of Byte)))
- uid: System.Net.Sockets.Socket.Receive(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.Net.Sockets.SocketFlags)
  commentId: M:System.Net.Sockets.Socket.Receive(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.Net.Sockets.SocketFlags)
  id: Receive(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.Net.Sockets.SocketFlags)
  parent: System.Net.Sockets.Socket
  langs:
  - csharp
  - vb
  name: Receive(Collections.Generic.IList<ArraySegment<Byte>>, SocketFlags)
  fullName: System.Net.Sockets.Socket.Receive(System.Collections.Generic.IList<System.ArraySegment<System.Byte>>, System.Net.Sockets.SocketFlags)
  type: Method
  source:
    remote:
      path: src/System.Net.Sockets/ref/System.Net.Sockets.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Receive
    path: src/System.Net.Sockets/ref/System.Net.Sockets.cs
    startLine: 211
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  summary: Receives data from a bound <xref href="System.Net.Sockets.Socket" data-throw-if-not-resolved="false"></xref> into the list of receive buffers, using the specified <xref href="System.Net.Sockets.SocketFlags" data-throw-if-not-resolved="false"></xref>.
  syntax:
    content: public int Receive(Collections.Generic.IList<ArraySegment<byte>> buffers, SocketFlags socketFlags)
    content.vb: Public Function Receive(buffers As Collections.Generic.IList(Of ArraySegment(Of Byte)), socketFlags As SocketFlags) As Integer
    parameters:
    - id: buffers
      type: System.Collections.Generic.IList{System.ArraySegment{System.Byte}}
      description: A list of <xref href="System.ArraySegment`1" data-throw-if-not-resolved="false"></xref>s of type <xref href="System.Byte" data-throw-if-not-resolved="false"></xref> that contains the received data.
    - id: socketFlags
      type: System.Net.Sockets.SocketFlags
      description: A bitwise combination of the <xref href="System.Net.Sockets.SocketFlags" data-throw-if-not-resolved="false"></xref> values.
    return:
      type: System.Int32
      description: The number of bytes received.
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>buffers</em> is null.-or-<em>buffers</em>.Count is zero."
  - type: System.Net.Sockets.SocketException
    commentId: T:System.Net.Sockets.SocketException
    description: 'An error occurred while attempting to access the socket. See the Remarks section for more information. '
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: 'The <xref href="System.Net.Sockets.Socket" data-throw-if-not-resolved="false"></xref> has been closed. '
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Net.Sockets.Socket.Receive(System.Collections.Generic.IList(Of System.ArraySegment(Of System.Byte)), System.Net.Sockets.SocketFlags)
  name.vb: Receive(Collections.Generic.IList(Of ArraySegment(Of Byte)), SocketFlags)
- uid: System.Net.Sockets.Socket.Receive(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.Net.Sockets.SocketFlags,System.Net.Sockets.SocketError@)
  commentId: M:System.Net.Sockets.Socket.Receive(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.Net.Sockets.SocketFlags,System.Net.Sockets.SocketError@)
  id: Receive(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.Net.Sockets.SocketFlags,System.Net.Sockets.SocketError@)
  parent: System.Net.Sockets.Socket
  langs:
  - csharp
  - vb
  name: Receive(Collections.Generic.IList<ArraySegment<Byte>>, SocketFlags, out SocketError)
  fullName: System.Net.Sockets.Socket.Receive(System.Collections.Generic.IList<System.ArraySegment<System.Byte>>, System.Net.Sockets.SocketFlags, out System.Net.Sockets.SocketError)
  type: Method
  source:
    remote:
      path: src/System.Net.Sockets/ref/System.Net.Sockets.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Receive
    path: src/System.Net.Sockets/ref/System.Net.Sockets.cs
    startLine: 212
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  summary: Receives data from a bound <xref href="System.Net.Sockets.Socket" data-throw-if-not-resolved="false"></xref> into the list of receive buffers, using the specified <xref href="System.Net.Sockets.SocketFlags" data-throw-if-not-resolved="false"></xref>.
  syntax:
    content: public int Receive(Collections.Generic.IList<ArraySegment<byte>> buffers, SocketFlags socketFlags, out SocketError errorCode)
    content.vb: Public Function Receive(buffers As Collections.Generic.IList(Of ArraySegment(Of Byte)), socketFlags As SocketFlags, ByRef errorCode As SocketError) As Integer
    parameters:
    - id: buffers
      type: System.Collections.Generic.IList{System.ArraySegment{System.Byte}}
      description: A list of <xref href="System.ArraySegment`1" data-throw-if-not-resolved="false"></xref>s of type <xref href="System.Byte" data-throw-if-not-resolved="false"></xref> that contains the received data.
    - id: socketFlags
      type: System.Net.Sockets.SocketFlags
      description: A bitwise combination of the <xref href="System.Net.Sockets.SocketFlags" data-throw-if-not-resolved="false"></xref> values.
    - id: errorCode
      type: System.Net.Sockets.SocketError
      description: A <xref href="System.Net.Sockets.SocketError" data-throw-if-not-resolved="false"></xref> object that stores the socket error.
    return:
      type: System.Int32
      description: The number of bytes received.
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>buffers</em> is null.-or-<em>buffers</em>.Count is zero."
  - type: System.Net.Sockets.SocketException
    commentId: T:System.Net.Sockets.SocketException
    description: 'An error occurred while attempting to access the socket. See the Remarks section for more information. '
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: 'The <xref href="System.Net.Sockets.Socket" data-throw-if-not-resolved="false"></xref> has been closed. '
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Net.Sockets.Socket.Receive(System.Collections.Generic.IList(Of System.ArraySegment(Of System.Byte)), System.Net.Sockets.SocketFlags, ByRef System.Net.Sockets.SocketError)
  name.vb: Receive(Collections.Generic.IList(Of ArraySegment(Of Byte)), SocketFlags, ByRef SocketError)
- uid: System.Net.Sockets.Socket.ReceiveAsync(System.Net.Sockets.SocketAsyncEventArgs)
  commentId: M:System.Net.Sockets.Socket.ReceiveAsync(System.Net.Sockets.SocketAsyncEventArgs)
  id: ReceiveAsync(System.Net.Sockets.SocketAsyncEventArgs)
  parent: System.Net.Sockets.Socket
  langs:
  - csharp
  - vb
  name: ReceiveAsync(SocketAsyncEventArgs)
  fullName: System.Net.Sockets.Socket.ReceiveAsync(System.Net.Sockets.SocketAsyncEventArgs)
  type: Method
  source:
    remote:
      path: src/System.Net.Sockets/src/System/Net/Sockets/Socket.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ReceiveAsync
    path: src/System.Net.Sockets/src/System/Net/Sockets/Socket.cs
    startLine: 4495
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  summary: Begins an asynchronous request to receive data from a connected <xref href="System.Net.Sockets.Socket" data-throw-if-not-resolved="false"></xref> object.
  syntax:
    content: public bool ReceiveAsync(SocketAsyncEventArgs e)
    content.vb: Public Function ReceiveAsync(e As SocketAsyncEventArgs) As Boolean
    parameters:
    - id: e
      type: System.Net.Sockets.SocketAsyncEventArgs
      description: The <xref href="System.Net.Sockets.SocketAsyncEventArgs" data-throw-if-not-resolved="false"></xref> object to use for this asynchronous socket operation.
    return:
      type: System.Boolean
      description: Returns true if the I/O operation is pending. The <xref href="System.Net.Sockets.SocketAsyncEventArgs.Completed" data-throw-if-not-resolved="false"></xref> event on the <em>e</em> parameter will be raised upon completion of the operation. Returns false if the I/O operation completed synchronously. In this case, The <xref href="System.Net.Sockets.SocketAsyncEventArgs.Completed" data-throw-if-not-resolved="false"></xref> event on the <em>e</em> parameter will not be raised and the <em>e</em> object passed as a parameter may be examined immediately after the method call returns to retrieve the result of the operation.
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: An argument was invalid. The <xref href="System.Net.Sockets.SocketAsyncEventArgs.Buffer" data-throw-if-not-resolved="false"></xref> or <xref href="System.Net.Sockets.SocketAsyncEventArgs.BufferList" data-throw-if-not-resolved="false"></xref> properties on the <em>e</em> parameter must reference valid buffers. One or the other of these properties may be set, but not both at the same time.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: A socket operation was already in progress using the <xref href="System.Net.Sockets.SocketAsyncEventArgs" data-throw-if-not-resolved="false"></xref> object specified in the <em>e</em> parameter.
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: Windows XP or later is required for this method.
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: 'The <xref href="System.Net.Sockets.Socket" data-throw-if-not-resolved="false"></xref> has been closed. '
  - type: System.Net.Sockets.SocketException
    commentId: T:System.Net.Sockets.SocketException
    description: 'An error occurred when attempting to access the socket. See the Remarks section for more information. '
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Net.Sockets.Socket.ReceiveFrom(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.EndPoint@)
  commentId: M:System.Net.Sockets.Socket.ReceiveFrom(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.EndPoint@)
  id: ReceiveFrom(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.EndPoint@)
  parent: System.Net.Sockets.Socket
  langs:
  - csharp
  - vb
  name: ReceiveFrom(Byte[], Int32, Int32, SocketFlags, ref EndPoint)
  fullName: System.Net.Sockets.Socket.ReceiveFrom(System.Byte[], System.Int32, System.Int32, System.Net.Sockets.SocketFlags, ref System.Net.EndPoint)
  type: Method
  source:
    remote:
      path: src/System.Net.Sockets/ref/System.Net.Sockets.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ReceiveFrom
    path: src/System.Net.Sockets/ref/System.Net.Sockets.cs
    startLine: 214
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  summary: Receives the specified number of bytes of data into the specified location of the data buffer, using the specified <xref href="System.Net.Sockets.SocketFlags" data-throw-if-not-resolved="false"></xref>, and stores the endpoint.
  syntax:
    content: public int ReceiveFrom(byte[] buffer, int offset, int size, SocketFlags socketFlags, ref EndPoint remoteEP)
    content.vb: Public Function ReceiveFrom(buffer As Byte(), offset As Integer, size As Integer, socketFlags As SocketFlags, ByRef remoteEP As EndPoint) As Integer
    parameters:
    - id: buffer
      type: System.Byte[]
      description: 'An array of type <xref href="System.Byte" data-throw-if-not-resolved="false"></xref> that is the storage location for received data. '
    - id: offset
      type: System.Int32
      description: 'The position in the <em>buffer</em> parameter to store the received data. '
    - id: size
      type: System.Int32
      description: 'The number of bytes to receive. '
    - id: socketFlags
      type: System.Net.Sockets.SocketFlags
      description: 'A bitwise combination of the <xref href="System.Net.Sockets.SocketFlags" data-throw-if-not-resolved="false"></xref> values. '
    - id: remoteEP
      type: System.Net.EndPoint
      description: 'An <xref href="System.Net.EndPoint" data-throw-if-not-resolved="false"></xref>, passed by reference, that represents the remote server. '
    return:
      type: System.Int32
      description: The number of bytes received.
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>buffer</em> is null.-or- <em>remoteEP</em> is null. "
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<em>offset</em> is less than 0.-or- <em>offset</em> is greater than the length of <em>buffer</em>.-or- <em>size</em> is less than 0.-or- <em>size</em> is greater than the length of the <em>buffer</em> minus the value of the offset parameter. "
  - type: System.Net.Sockets.SocketException
    commentId: T:System.Net.Sockets.SocketException
    description: "\n<em>socketFlags</em> is not a valid combination of values.-or- The <xref href=\"System.Net.Sockets.Socket.LocalEndPoint\" data-throw-if-not-resolved=\"false\"></xref> property was not set.-or- An error occurred when attempting to access the socket. See the Remarks section for more information. "
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: 'The <xref href="System.Net.Sockets.Socket" data-throw-if-not-resolved="false"></xref> has been closed. '
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Net.Sockets.Socket.ReceiveFrom(System.Byte(), System.Int32, System.Int32, System.Net.Sockets.SocketFlags, ByRef System.Net.EndPoint)
  name.vb: ReceiveFrom(Byte(), Int32, Int32, SocketFlags, ByRef EndPoint)
- uid: System.Net.Sockets.Socket.ReceiveFrom(System.Byte[],System.Int32,System.Net.Sockets.SocketFlags,System.Net.EndPoint@)
  commentId: M:System.Net.Sockets.Socket.ReceiveFrom(System.Byte[],System.Int32,System.Net.Sockets.SocketFlags,System.Net.EndPoint@)
  id: ReceiveFrom(System.Byte[],System.Int32,System.Net.Sockets.SocketFlags,System.Net.EndPoint@)
  parent: System.Net.Sockets.Socket
  langs:
  - csharp
  - vb
  name: ReceiveFrom(Byte[], Int32, SocketFlags, ref EndPoint)
  fullName: System.Net.Sockets.Socket.ReceiveFrom(System.Byte[], System.Int32, System.Net.Sockets.SocketFlags, ref System.Net.EndPoint)
  type: Method
  source:
    remote:
      path: src/System.Net.Sockets/ref/System.Net.Sockets.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ReceiveFrom
    path: src/System.Net.Sockets/ref/System.Net.Sockets.cs
    startLine: 215
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  summary: Receives the specified number of bytes into the data buffer, using the specified <xref href="System.Net.Sockets.SocketFlags" data-throw-if-not-resolved="false"></xref>, and stores the endpoint.
  syntax:
    content: public int ReceiveFrom(byte[] buffer, int size, SocketFlags socketFlags, ref EndPoint remoteEP)
    content.vb: Public Function ReceiveFrom(buffer As Byte(), size As Integer, socketFlags As SocketFlags, ByRef remoteEP As EndPoint) As Integer
    parameters:
    - id: buffer
      type: System.Byte[]
      description: 'An array of type <xref href="System.Byte" data-throw-if-not-resolved="false"></xref> that is the storage location for received data. '
    - id: size
      type: System.Int32
      description: 'The number of bytes to receive. '
    - id: socketFlags
      type: System.Net.Sockets.SocketFlags
      description: 'A bitwise combination of the <xref href="System.Net.Sockets.SocketFlags" data-throw-if-not-resolved="false"></xref> values. '
    - id: remoteEP
      type: System.Net.EndPoint
      description: 'An <xref href="System.Net.EndPoint" data-throw-if-not-resolved="false"></xref>, passed by reference, that represents the remote server. '
    return:
      type: System.Int32
      description: The number of bytes received.
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>buffer</em> is null.-or- <em>remoteEP</em> is null. "
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<em>size</em> is less than 0.-or- <em>size</em> is greater than the length of <em>buffer</em>. "
  - type: System.Net.Sockets.SocketException
    commentId: T:System.Net.Sockets.SocketException
    description: "\n<em>socketFlags</em> is not a valid combination of values.-or- The <xref href=\"System.Net.Sockets.Socket.LocalEndPoint\" data-throw-if-not-resolved=\"false\"></xref> property was not set.-or- An operating system error occurs while accessing the <xref href=\"System.Net.Sockets.Socket\" data-throw-if-not-resolved=\"false\"></xref>. "
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: 'The <xref href="System.Net.Sockets.Socket" data-throw-if-not-resolved="false"></xref> has been closed. '
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: 'A caller in the call stack does not have the required permissions. '
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Net.Sockets.Socket.ReceiveFrom(System.Byte(), System.Int32, System.Net.Sockets.SocketFlags, ByRef System.Net.EndPoint)
  name.vb: ReceiveFrom(Byte(), Int32, SocketFlags, ByRef EndPoint)
- uid: System.Net.Sockets.Socket.ReceiveFrom(System.Byte[],System.Net.EndPoint@)
  commentId: M:System.Net.Sockets.Socket.ReceiveFrom(System.Byte[],System.Net.EndPoint@)
  id: ReceiveFrom(System.Byte[],System.Net.EndPoint@)
  parent: System.Net.Sockets.Socket
  langs:
  - csharp
  - vb
  name: ReceiveFrom(Byte[], ref EndPoint)
  fullName: System.Net.Sockets.Socket.ReceiveFrom(System.Byte[], ref System.Net.EndPoint)
  type: Method
  source:
    remote:
      path: src/System.Net.Sockets/ref/System.Net.Sockets.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ReceiveFrom
    path: src/System.Net.Sockets/ref/System.Net.Sockets.cs
    startLine: 216
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  summary: Receives a datagram into the data buffer and stores the endpoint.
  syntax:
    content: public int ReceiveFrom(byte[] buffer, ref EndPoint remoteEP)
    content.vb: Public Function ReceiveFrom(buffer As Byte(), ByRef remoteEP As EndPoint) As Integer
    parameters:
    - id: buffer
      type: System.Byte[]
      description: 'An array of type <xref href="System.Byte" data-throw-if-not-resolved="false"></xref> that is the storage location for received data. '
    - id: remoteEP
      type: System.Net.EndPoint
      description: 'An <xref href="System.Net.EndPoint" data-throw-if-not-resolved="false"></xref>, passed by reference, that represents the remote server. '
    return:
      type: System.Int32
      description: The number of bytes received.
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>buffer</em> is null.-or- <em>remoteEP</em> is null. "
  - type: System.Net.Sockets.SocketException
    commentId: T:System.Net.Sockets.SocketException
    description: 'An error occurred when attempting to access the socket. See the Remarks section for more information. '
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: 'The <xref href="System.Net.Sockets.Socket" data-throw-if-not-resolved="false"></xref> has been closed. '
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: 'A caller in the call stack does not have the required permissions. '
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Net.Sockets.Socket.ReceiveFrom(System.Byte(), ByRef System.Net.EndPoint)
  name.vb: ReceiveFrom(Byte(), ByRef EndPoint)
- uid: System.Net.Sockets.Socket.ReceiveFrom(System.Byte[],System.Net.Sockets.SocketFlags,System.Net.EndPoint@)
  commentId: M:System.Net.Sockets.Socket.ReceiveFrom(System.Byte[],System.Net.Sockets.SocketFlags,System.Net.EndPoint@)
  id: ReceiveFrom(System.Byte[],System.Net.Sockets.SocketFlags,System.Net.EndPoint@)
  parent: System.Net.Sockets.Socket
  langs:
  - csharp
  - vb
  name: ReceiveFrom(Byte[], SocketFlags, ref EndPoint)
  fullName: System.Net.Sockets.Socket.ReceiveFrom(System.Byte[], System.Net.Sockets.SocketFlags, ref System.Net.EndPoint)
  type: Method
  source:
    remote:
      path: src/System.Net.Sockets/ref/System.Net.Sockets.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ReceiveFrom
    path: src/System.Net.Sockets/ref/System.Net.Sockets.cs
    startLine: 217
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  summary: Receives a datagram into the data buffer, using the specified <xref href="System.Net.Sockets.SocketFlags" data-throw-if-not-resolved="false"></xref>, and stores the endpoint.
  syntax:
    content: public int ReceiveFrom(byte[] buffer, SocketFlags socketFlags, ref EndPoint remoteEP)
    content.vb: Public Function ReceiveFrom(buffer As Byte(), socketFlags As SocketFlags, ByRef remoteEP As EndPoint) As Integer
    parameters:
    - id: buffer
      type: System.Byte[]
      description: 'An array of type <xref href="System.Byte" data-throw-if-not-resolved="false"></xref> that is the storage location for the received data. '
    - id: socketFlags
      type: System.Net.Sockets.SocketFlags
      description: 'A bitwise combination of the <xref href="System.Net.Sockets.SocketFlags" data-throw-if-not-resolved="false"></xref> values. '
    - id: remoteEP
      type: System.Net.EndPoint
      description: 'An <xref href="System.Net.EndPoint" data-throw-if-not-resolved="false"></xref>, passed by reference, that represents the remote server. '
    return:
      type: System.Int32
      description: The number of bytes received.
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>buffer</em> is null.-or- <em>remoteEP</em> is null. "
  - type: System.Net.Sockets.SocketException
    commentId: T:System.Net.Sockets.SocketException
    description: 'An error occurred when attempting to access the socket. See the Remarks section for more information. '
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: 'The <xref href="System.Net.Sockets.Socket" data-throw-if-not-resolved="false"></xref> has been closed. '
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: 'A caller in the call stack does not have the required permissions. '
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Net.Sockets.Socket.ReceiveFrom(System.Byte(), System.Net.Sockets.SocketFlags, ByRef System.Net.EndPoint)
  name.vb: ReceiveFrom(Byte(), SocketFlags, ByRef EndPoint)
- uid: System.Net.Sockets.Socket.ReceiveFromAsync(System.Net.Sockets.SocketAsyncEventArgs)
  commentId: M:System.Net.Sockets.Socket.ReceiveFromAsync(System.Net.Sockets.SocketAsyncEventArgs)
  id: ReceiveFromAsync(System.Net.Sockets.SocketAsyncEventArgs)
  parent: System.Net.Sockets.Socket
  langs:
  - csharp
  - vb
  name: ReceiveFromAsync(SocketAsyncEventArgs)
  fullName: System.Net.Sockets.Socket.ReceiveFromAsync(System.Net.Sockets.SocketAsyncEventArgs)
  type: Method
  source:
    remote:
      path: src/System.Net.Sockets/src/System/Net/Sockets/Socket.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ReceiveFromAsync
    path: src/System.Net.Sockets/src/System/Net/Sockets/Socket.cs
    startLine: 4553
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  summary: Begins to asynchronously receive data from a specified network device.
  syntax:
    content: public bool ReceiveFromAsync(SocketAsyncEventArgs e)
    content.vb: Public Function ReceiveFromAsync(e As SocketAsyncEventArgs) As Boolean
    parameters:
    - id: e
      type: System.Net.Sockets.SocketAsyncEventArgs
      description: The <xref href="System.Net.Sockets.SocketAsyncEventArgs" data-throw-if-not-resolved="false"></xref> object to use for this asynchronous socket operation.
    return:
      type: System.Boolean
      description: Returns true if the I/O operation is pending. The <xref href="System.Net.Sockets.SocketAsyncEventArgs.Completed" data-throw-if-not-resolved="false"></xref> event on the <em>e</em> parameter will be raised upon completion of the operation. Returns false if the I/O operation completed synchronously. In this case, The <xref href="System.Net.Sockets.SocketAsyncEventArgs.Completed" data-throw-if-not-resolved="false"></xref> event on the <em>e</em> parameter will not be raised and the <em>e</em> object passed as a parameter may be examined immediately after the method call returns to retrieve the result of the operation.
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <xref href="System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint" data-throw-if-not-resolved="false"></xref> cannot be null.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: A socket operation was already in progress using the <xref href="System.Net.Sockets.SocketAsyncEventArgs" data-throw-if-not-resolved="false"></xref> object specified in the <em>e</em> parameter.
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: Windows XP or later is required for this method.
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: 'The <xref href="System.Net.Sockets.Socket" data-throw-if-not-resolved="false"></xref> has been closed. '
  - type: System.Net.Sockets.SocketException
    commentId: T:System.Net.Sockets.SocketException
    description: 'An error occurred when attempting to access the socket. '
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Net.Sockets.Socket.ReceiveMessageFrom(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags@,System.Net.EndPoint@,System.Net.Sockets.IPPacketInformation@)
  commentId: M:System.Net.Sockets.Socket.ReceiveMessageFrom(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags@,System.Net.EndPoint@,System.Net.Sockets.IPPacketInformation@)
  id: ReceiveMessageFrom(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags@,System.Net.EndPoint@,System.Net.Sockets.IPPacketInformation@)
  parent: System.Net.Sockets.Socket
  langs:
  - csharp
  - vb
  name: ReceiveMessageFrom(Byte[], Int32, Int32, ref SocketFlags, ref EndPoint, out IPPacketInformation)
  fullName: System.Net.Sockets.Socket.ReceiveMessageFrom(System.Byte[], System.Int32, System.Int32, ref System.Net.Sockets.SocketFlags, ref System.Net.EndPoint, out System.Net.Sockets.IPPacketInformation)
  type: Method
  source:
    remote:
      path: src/System.Net.Sockets/ref/System.Net.Sockets.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ReceiveMessageFrom
    path: src/System.Net.Sockets/ref/System.Net.Sockets.cs
    startLine: 219
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  summary: Receives the specified number of bytes of data into the specified location of the data buffer, using the specified <xref href="System.Net.Sockets.SocketFlags" data-throw-if-not-resolved="false"></xref>, and stores the endpoint and packet information.
  syntax:
    content: public int ReceiveMessageFrom(byte[] buffer, int offset, int size, ref SocketFlags socketFlags, ref EndPoint remoteEP, out IPPacketInformation ipPacketInformation)
    content.vb: Public Function ReceiveMessageFrom(buffer As Byte(), offset As Integer, size As Integer, ByRef socketFlags As SocketFlags, ByRef remoteEP As EndPoint, ByRef ipPacketInformation As IPPacketInformation) As Integer
    parameters:
    - id: buffer
      type: System.Byte[]
      description: An array of type <xref href="System.Byte" data-throw-if-not-resolved="false"></xref> that is the storage location for received data.
    - id: offset
      type: System.Int32
      description: The position in the <em>buffer</em> parameter to store the received data.
    - id: size
      type: System.Int32
      description: The number of bytes to receive.
    - id: socketFlags
      type: System.Net.Sockets.SocketFlags
      description: A bitwise combination of the <xref href="System.Net.Sockets.SocketFlags" data-throw-if-not-resolved="false"></xref> values.
    - id: remoteEP
      type: System.Net.EndPoint
      description: An <xref href="System.Net.EndPoint" data-throw-if-not-resolved="false"></xref>, passed by reference, that represents the remote server.
    - id: ipPacketInformation
      type: System.Net.Sockets.IPPacketInformation
      description: An <xref href="System.Net.Sockets.IPPacketInformation" data-throw-if-not-resolved="false"></xref> holding address and interface information.
    return:
      type: System.Int32
      description: The number of bytes received.
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>buffer</em> is null.- or- <em>remoteEP</em> is null. "
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<em>offset</em> is less than 0.-or- <em>offset</em> is greater than the length of <em>buffer</em>.-or- <em>size</em> is less than 0.-or- <em>size</em> is greater than the length of the <em>buffer</em> minus the value of the offset parameter. "
  - type: System.Net.Sockets.SocketException
    commentId: T:System.Net.Sockets.SocketException
    description: "\n<em>socketFlags</em> is not a valid combination of values.-or- The <xref href=\"System.Net.Sockets.Socket.LocalEndPoint\" data-throw-if-not-resolved=\"false\"></xref> property was not set.-or- The .NET Framework is running on an AMD 64-bit processor.-or- An error occurred when attempting to access the socket. See the Remarks section for more information. "
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: 'The <xref href="System.Net.Sockets.Socket" data-throw-if-not-resolved="false"></xref> has been closed. '
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: The operating system is Windows 2000 or earlier, and this method requires Windows XP.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Net.Sockets.Socket.ReceiveMessageFrom(System.Byte(), System.Int32, System.Int32, ByRef System.Net.Sockets.SocketFlags, ByRef System.Net.EndPoint, ByRef System.Net.Sockets.IPPacketInformation)
  name.vb: ReceiveMessageFrom(Byte(), Int32, Int32, ByRef SocketFlags, ByRef EndPoint, ByRef IPPacketInformation)
- uid: System.Net.Sockets.Socket.ReceiveMessageFromAsync(System.Net.Sockets.SocketAsyncEventArgs)
  commentId: M:System.Net.Sockets.Socket.ReceiveMessageFromAsync(System.Net.Sockets.SocketAsyncEventArgs)
  id: ReceiveMessageFromAsync(System.Net.Sockets.SocketAsyncEventArgs)
  parent: System.Net.Sockets.Socket
  langs:
  - csharp
  - vb
  name: ReceiveMessageFromAsync(SocketAsyncEventArgs)
  fullName: System.Net.Sockets.Socket.ReceiveMessageFromAsync(System.Net.Sockets.SocketAsyncEventArgs)
  type: Method
  source:
    remote:
      path: src/System.Net.Sockets/src/System/Net/Sockets/Socket.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ReceiveMessageFromAsync
    path: src/System.Net.Sockets/src/System/Net/Sockets/Socket.cs
    startLine: 4630
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  summary: Begins to asynchronously receive the specified number of bytes of data into the specified location in the data buffer, using the specified <xref href="System.Net.Sockets.SocketAsyncEventArgs.SocketFlags" data-throw-if-not-resolved="false"></xref>, and stores the endpoint and packet information.
  syntax:
    content: public bool ReceiveMessageFromAsync(SocketAsyncEventArgs e)
    content.vb: Public Function ReceiveMessageFromAsync(e As SocketAsyncEventArgs) As Boolean
    parameters:
    - id: e
      type: System.Net.Sockets.SocketAsyncEventArgs
      description: The <xref href="System.Net.Sockets.SocketAsyncEventArgs" data-throw-if-not-resolved="false"></xref> object to use for this asynchronous socket operation.
    return:
      type: System.Boolean
      description: Returns true if the I/O operation is pending. The <xref href="System.Net.Sockets.SocketAsyncEventArgs.Completed" data-throw-if-not-resolved="false"></xref> event on the <em>e</em> parameter will be raised upon completion of the operation. Returns false if the I/O operation completed synchronously. In this case, The <xref href="System.Net.Sockets.SocketAsyncEventArgs.Completed" data-throw-if-not-resolved="false"></xref> event on the <em>e</em> parameter will not be raised and the <em>e</em> object passed as a parameter may be examined immediately after the method call returns to retrieve the result of the operation.
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <xref href="System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint" data-throw-if-not-resolved="false"></xref> cannot be null.
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: Windows XP or later is required for this method.
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: 'The <xref href="System.Net.Sockets.Socket" data-throw-if-not-resolved="false"></xref> has been closed. '
  - type: System.Net.Sockets.SocketException
    commentId: T:System.Net.Sockets.SocketException
    description: 'An error occurred when attempting to access the socket. '
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Net.Sockets.Socket.Select(System.Collections.IList,System.Collections.IList,System.Collections.IList,System.Int32)
  commentId: M:System.Net.Sockets.Socket.Select(System.Collections.IList,System.Collections.IList,System.Collections.IList,System.Int32)
  id: Select(System.Collections.IList,System.Collections.IList,System.Collections.IList,System.Int32)
  parent: System.Net.Sockets.Socket
  langs:
  - csharp
  - vb
  name: Select(Collections.IList, Collections.IList, Collections.IList, Int32)
  fullName: System.Net.Sockets.Socket.Select(System.Collections.IList, System.Collections.IList, System.Collections.IList, System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Net.Sockets/ref/System.Net.Sockets.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Select
    path: src/System.Net.Sockets/ref/System.Net.Sockets.cs
    startLine: 221
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  summary: Determines the status of one or more sockets.
  syntax:
    content: public static void Select(Collections.IList checkRead, Collections.IList checkWrite, Collections.IList checkError, int microSeconds)
    content.vb: Public Shared Sub Select(checkRead As Collections.IList, checkWrite As Collections.IList, checkError As Collections.IList, microSeconds As Integer)
    parameters:
    - id: checkRead
      type: System.Collections.IList
      description: 'An <xref href="System.Collections.IList" data-throw-if-not-resolved="false"></xref> of <xref href="System.Net.Sockets.Socket" data-throw-if-not-resolved="false"></xref> instances to check for readability. '
    - id: checkWrite
      type: System.Collections.IList
      description: 'An <xref href="System.Collections.IList" data-throw-if-not-resolved="false"></xref> of <xref href="System.Net.Sockets.Socket" data-throw-if-not-resolved="false"></xref> instances to check for writability. '
    - id: checkError
      type: System.Collections.IList
      description: 'An <xref href="System.Collections.IList" data-throw-if-not-resolved="false"></xref> of <xref href="System.Net.Sockets.Socket" data-throw-if-not-resolved="false"></xref> instances to check for errors. '
    - id: microSeconds
      type: System.Int32
      description: The time-out value, in microseconds. A -1 value indicates an infinite time-out.
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: 'The <em>checkRead</em> parameter is null or empty.-and- The <em>checkWrite</em> parameter is null or empty -and- The <em>checkError</em> parameter is null or empty. '
  - type: System.Net.Sockets.SocketException
    commentId: T:System.Net.Sockets.SocketException
    description: 'An error occurred when attempting to access the socket. See the Remarks section for more information. '
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Net.Sockets.Socket.Send(System.Byte[])
  commentId: M:System.Net.Sockets.Socket.Send(System.Byte[])
  id: Send(System.Byte[])
  parent: System.Net.Sockets.Socket
  langs:
  - csharp
  - vb
  name: Send(Byte[])
  fullName: System.Net.Sockets.Socket.Send(System.Byte[])
  type: Method
  source:
    remote:
      path: src/System.Net.Sockets/src/System/Net/Sockets/Socket.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Send
    path: src/System.Net.Sockets/src/System/Net/Sockets/Socket.cs
    startLine: 1160
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  summary: Sends data to a connected <xref href="System.Net.Sockets.Socket" data-throw-if-not-resolved="false"></xref>.
  syntax:
    content: public int Send(byte[] buffer)
    content.vb: Public Function Send(buffer As Byte()) As Integer
    parameters:
    - id: buffer
      type: System.Byte[]
      description: 'An array of type <xref href="System.Byte" data-throw-if-not-resolved="false"></xref> that contains the data to be sent. '
    return:
      type: System.Int32
      description: The number of bytes sent to the <xref href="System.Net.Sockets.Socket" data-throw-if-not-resolved="false"></xref>.
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>buffer</em> is null. "
  - type: System.Net.Sockets.SocketException
    commentId: T:System.Net.Sockets.SocketException
    description: 'An error occurred when attempting to access the socket. See the Remarks section for more information. '
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: 'The <xref href="System.Net.Sockets.Socket" data-throw-if-not-resolved="false"></xref> has been closed. '
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Net.Sockets.Socket.Send(System.Byte())
  name.vb: Send(Byte())
- uid: System.Net.Sockets.Socket.Send(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags)
  commentId: M:System.Net.Sockets.Socket.Send(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags)
  id: Send(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags)
  parent: System.Net.Sockets.Socket
  langs:
  - csharp
  - vb
  name: Send(Byte[], Int32, Int32, SocketFlags)
  fullName: System.Net.Sockets.Socket.Send(System.Byte[], System.Int32, System.Int32, System.Net.Sockets.SocketFlags)
  type: Method
  source:
    remote:
      path: src/System.Net.Sockets/src/System/Net/Sockets/Socket.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Send
    path: src/System.Net.Sockets/src/System/Net/Sockets/Socket.cs
    startLine: 1252
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  summary: Sends the specified number of bytes of data to a connected <xref href="System.Net.Sockets.Socket" data-throw-if-not-resolved="false"></xref>, starting at the specified offset, and using the specified <xref href="System.Net.Sockets.SocketFlags" data-throw-if-not-resolved="false"></xref>.
  syntax:
    content: public int Send(byte[] buffer, int offset, int size, SocketFlags socketFlags)
    content.vb: Public Function Send(buffer As Byte(), offset As Integer, size As Integer, socketFlags As SocketFlags) As Integer
    parameters:
    - id: buffer
      type: System.Byte[]
      description: 'An array of type <xref href="System.Byte" data-throw-if-not-resolved="false"></xref> that contains the data to be sent. '
    - id: offset
      type: System.Int32
      description: 'The position in the data buffer at which to begin sending data. '
    - id: size
      type: System.Int32
      description: 'The number of bytes to send. '
    - id: socketFlags
      type: System.Net.Sockets.SocketFlags
      description: 'A bitwise combination of the <xref href="System.Net.Sockets.SocketFlags" data-throw-if-not-resolved="false"></xref> values. '
    return:
      type: System.Int32
      description: The number of bytes sent to the <xref href="System.Net.Sockets.Socket" data-throw-if-not-resolved="false"></xref>.
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>buffer</em> is null. "
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<em>offset</em> is less than 0.-or- <em>offset</em> is greater than the length of <em>buffer</em>.-or- <em>size</em> is less than 0.-or- <em>size</em> is greater than the length of <em>buffer</em> minus the value of the <em>offset</em> parameter. "
  - type: System.Net.Sockets.SocketException
    commentId: T:System.Net.Sockets.SocketException
    description: "\n<em>socketFlags</em> is not a valid combination of values.-or- An operating system error occurs while accessing the <xref href=\"System.Net.Sockets.Socket\" data-throw-if-not-resolved=\"false\"></xref>. See the Remarks section for more information. "
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: 'The <xref href="System.Net.Sockets.Socket" data-throw-if-not-resolved="false"></xref> has been closed. '
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Net.Sockets.Socket.Send(System.Byte(), System.Int32, System.Int32, System.Net.Sockets.SocketFlags)
  name.vb: Send(Byte(), Int32, Int32, SocketFlags)
- uid: System.Net.Sockets.Socket.Send(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.Sockets.SocketError@)
  commentId: M:System.Net.Sockets.Socket.Send(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.Sockets.SocketError@)
  id: Send(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.Sockets.SocketError@)
  parent: System.Net.Sockets.Socket
  langs:
  - csharp
  - vb
  name: Send(Byte[], Int32, Int32, SocketFlags, out SocketError)
  fullName: System.Net.Sockets.Socket.Send(System.Byte[], System.Int32, System.Int32, System.Net.Sockets.SocketFlags, out System.Net.Sockets.SocketError)
  type: Method
  source:
    remote:
      path: src/System.Net.Sockets/ref/System.Net.Sockets.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Send
    path: src/System.Net.Sockets/ref/System.Net.Sockets.cs
    startLine: 224
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  summary: Sends the specified number of bytes of data to a connected <xref href="System.Net.Sockets.Socket" data-throw-if-not-resolved="false"></xref>, starting at the specified offset, and using the specified <xref href="System.Net.Sockets.SocketFlags" data-throw-if-not-resolved="false"></xref>
  syntax:
    content: public int Send(byte[] buffer, int offset, int size, SocketFlags socketFlags, out SocketError errorCode)
    content.vb: Public Function Send(buffer As Byte(), offset As Integer, size As Integer, socketFlags As SocketFlags, ByRef errorCode As SocketError) As Integer
    parameters:
    - id: buffer
      type: System.Byte[]
      description: 'An array of type <xref href="System.Byte" data-throw-if-not-resolved="false"></xref> that contains the data to be sent. '
    - id: offset
      type: System.Int32
      description: 'The position in the data buffer at which to begin sending data. '
    - id: size
      type: System.Int32
      description: 'The number of bytes to send. '
    - id: socketFlags
      type: System.Net.Sockets.SocketFlags
      description: 'A bitwise combination of the <xref href="System.Net.Sockets.SocketFlags" data-throw-if-not-resolved="false"></xref> values. '
    - id: errorCode
      type: System.Net.Sockets.SocketError
      description: A <xref href="System.Net.Sockets.SocketError" data-throw-if-not-resolved="false"></xref> object that stores the socket error.
    return:
      type: System.Int32
      description: The number of bytes sent to the <xref href="System.Net.Sockets.Socket" data-throw-if-not-resolved="false"></xref>.
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>buffer</em> is null. "
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<em>offset</em> is less than 0.-or- <em>offset</em> is greater than the length of <em>buffer</em>.-or- <em>size</em> is less than 0.-or- <em>size</em> is greater than the length of <em>buffer</em> minus the value of the <em>offset</em> parameter. "
  - type: System.Net.Sockets.SocketException
    commentId: T:System.Net.Sockets.SocketException
    description: "\n<em>socketFlags</em> is not a valid combination of values.-or- An operating system error occurs while accessing the <xref href=\"System.Net.Sockets.Socket\" data-throw-if-not-resolved=\"false\"></xref>. See the Remarks section for more information. "
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: 'The <xref href="System.Net.Sockets.Socket" data-throw-if-not-resolved="false"></xref> has been closed. '
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Net.Sockets.Socket.Send(System.Byte(), System.Int32, System.Int32, System.Net.Sockets.SocketFlags, ByRef System.Net.Sockets.SocketError)
  name.vb: Send(Byte(), Int32, Int32, SocketFlags, ByRef SocketError)
- uid: System.Net.Sockets.Socket.Send(System.Byte[],System.Int32,System.Net.Sockets.SocketFlags)
  commentId: M:System.Net.Sockets.Socket.Send(System.Byte[],System.Int32,System.Net.Sockets.SocketFlags)
  id: Send(System.Byte[],System.Int32,System.Net.Sockets.SocketFlags)
  parent: System.Net.Sockets.Socket
  langs:
  - csharp
  - vb
  name: Send(Byte[], Int32, SocketFlags)
  fullName: System.Net.Sockets.Socket.Send(System.Byte[], System.Int32, System.Net.Sockets.SocketFlags)
  type: Method
  source:
    remote:
      path: src/System.Net.Sockets/src/System/Net/Sockets/Socket.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Send
    path: src/System.Net.Sockets/src/System/Net/Sockets/Socket.cs
    startLine: 1150
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  summary: Sends the specified number of bytes of data to a connected <xref href="System.Net.Sockets.Socket" data-throw-if-not-resolved="false"></xref>, using the specified <xref href="System.Net.Sockets.SocketFlags" data-throw-if-not-resolved="false"></xref>.
  syntax:
    content: public int Send(byte[] buffer, int size, SocketFlags socketFlags)
    content.vb: Public Function Send(buffer As Byte(), size As Integer, socketFlags As SocketFlags) As Integer
    parameters:
    - id: buffer
      type: System.Byte[]
      description: 'An array of type <xref href="System.Byte" data-throw-if-not-resolved="false"></xref> that contains the data to be sent. '
    - id: size
      type: System.Int32
      description: 'The number of bytes to send. '
    - id: socketFlags
      type: System.Net.Sockets.SocketFlags
      description: 'A bitwise combination of the <xref href="System.Net.Sockets.SocketFlags" data-throw-if-not-resolved="false"></xref> values. '
    return:
      type: System.Int32
      description: The number of bytes sent to the <xref href="System.Net.Sockets.Socket" data-throw-if-not-resolved="false"></xref>.
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>buffer</em> is null. "
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<em>size</em> is less than 0 or exceeds the size of the buffer. "
  - type: System.Net.Sockets.SocketException
    commentId: T:System.Net.Sockets.SocketException
    description: "\n<em>socketFlags</em> is not a valid combination of values.-or- An operating system error occurs while accessing the socket. See the Remarks section for more information. "
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: 'The <xref href="System.Net.Sockets.Socket" data-throw-if-not-resolved="false"></xref> has been closed. '
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Net.Sockets.Socket.Send(System.Byte(), System.Int32, System.Net.Sockets.SocketFlags)
  name.vb: Send(Byte(), Int32, SocketFlags)
- uid: System.Net.Sockets.Socket.Send(System.Byte[],System.Net.Sockets.SocketFlags)
  commentId: M:System.Net.Sockets.Socket.Send(System.Byte[],System.Net.Sockets.SocketFlags)
  id: Send(System.Byte[],System.Net.Sockets.SocketFlags)
  parent: System.Net.Sockets.Socket
  langs:
  - csharp
  - vb
  name: Send(Byte[], SocketFlags)
  fullName: System.Net.Sockets.Socket.Send(System.Byte[], System.Net.Sockets.SocketFlags)
  type: Method
  source:
    remote:
      path: src/System.Net.Sockets/src/System/Net/Sockets/Socket.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Send
    path: src/System.Net.Sockets/src/System/Net/Sockets/Socket.cs
    startLine: 1155
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  summary: Sends data to a connected <xref href="System.Net.Sockets.Socket" data-throw-if-not-resolved="false"></xref> using the specified <xref href="System.Net.Sockets.SocketFlags" data-throw-if-not-resolved="false"></xref>.
  syntax:
    content: public int Send(byte[] buffer, SocketFlags socketFlags)
    content.vb: Public Function Send(buffer As Byte(), socketFlags As SocketFlags) As Integer
    parameters:
    - id: buffer
      type: System.Byte[]
      description: 'An array of type <xref href="System.Byte" data-throw-if-not-resolved="false"></xref> that contains the data to be sent. '
    - id: socketFlags
      type: System.Net.Sockets.SocketFlags
      description: 'A bitwise combination of the <xref href="System.Net.Sockets.SocketFlags" data-throw-if-not-resolved="false"></xref> values. '
    return:
      type: System.Int32
      description: The number of bytes sent to the <xref href="System.Net.Sockets.Socket" data-throw-if-not-resolved="false"></xref>.
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>buffer</em> is null. "
  - type: System.Net.Sockets.SocketException
    commentId: T:System.Net.Sockets.SocketException
    description: 'An error occurred when attempting to access the socket. See the Remarks section for more information. '
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: 'The <xref href="System.Net.Sockets.Socket" data-throw-if-not-resolved="false"></xref> has been closed. '
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Net.Sockets.Socket.Send(System.Byte(), System.Net.Sockets.SocketFlags)
  name.vb: Send(Byte(), SocketFlags)
- uid: System.Net.Sockets.Socket.Send(System.Collections.Generic.IList{System.ArraySegment{System.Byte}})
  commentId: M:System.Net.Sockets.Socket.Send(System.Collections.Generic.IList{System.ArraySegment{System.Byte}})
  id: Send(System.Collections.Generic.IList{System.ArraySegment{System.Byte}})
  parent: System.Net.Sockets.Socket
  langs:
  - csharp
  - vb
  name: Send(Collections.Generic.IList<ArraySegment<Byte>>)
  fullName: System.Net.Sockets.Socket.Send(System.Collections.Generic.IList<System.ArraySegment<System.Byte>>)
  type: Method
  source:
    remote:
      path: src/System.Net.Sockets/ref/System.Net.Sockets.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Send
    path: src/System.Net.Sockets/ref/System.Net.Sockets.cs
    startLine: 227
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  summary: Sends the set of buffers in the list to a connected <xref href="System.Net.Sockets.Socket" data-throw-if-not-resolved="false"></xref>.
  syntax:
    content: public int Send(Collections.Generic.IList<ArraySegment<byte>> buffers)
    content.vb: Public Function Send(buffers As Collections.Generic.IList(Of ArraySegment(Of Byte))) As Integer
    parameters:
    - id: buffers
      type: System.Collections.Generic.IList{System.ArraySegment{System.Byte}}
      description: 'A list of <xref href="System.ArraySegment`1" data-throw-if-not-resolved="false"></xref>s of type <xref href="System.Byte" data-throw-if-not-resolved="false"></xref> that contains the data to be sent. '
    return:
      type: System.Int32
      description: The number of bytes sent to the <xref href="System.Net.Sockets.Socket" data-throw-if-not-resolved="false"></xref>.
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>buffers</em> is null. "
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<em>buffers</em> is empty."
  - type: System.Net.Sockets.SocketException
    commentId: T:System.Net.Sockets.SocketException
    description: 'An error occurred when attempting to access the socket. See remarks section below. '
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: 'The <xref href="System.Net.Sockets.Socket" data-throw-if-not-resolved="false"></xref> has been closed. '
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Net.Sockets.Socket.Send(System.Collections.Generic.IList(Of System.ArraySegment(Of System.Byte)))
  name.vb: Send(Collections.Generic.IList(Of ArraySegment(Of Byte)))
- uid: System.Net.Sockets.Socket.Send(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.Net.Sockets.SocketFlags)
  commentId: M:System.Net.Sockets.Socket.Send(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.Net.Sockets.SocketFlags)
  id: Send(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.Net.Sockets.SocketFlags)
  parent: System.Net.Sockets.Socket
  langs:
  - csharp
  - vb
  name: Send(Collections.Generic.IList<ArraySegment<Byte>>, SocketFlags)
  fullName: System.Net.Sockets.Socket.Send(System.Collections.Generic.IList<System.ArraySegment<System.Byte>>, System.Net.Sockets.SocketFlags)
  type: Method
  source:
    remote:
      path: src/System.Net.Sockets/ref/System.Net.Sockets.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Send
    path: src/System.Net.Sockets/ref/System.Net.Sockets.cs
    startLine: 228
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  summary: Sends the set of buffers in the list to a connected <xref href="System.Net.Sockets.Socket" data-throw-if-not-resolved="false"></xref>, using the specified <xref href="System.Net.Sockets.SocketFlags" data-throw-if-not-resolved="false"></xref>.
  syntax:
    content: public int Send(Collections.Generic.IList<ArraySegment<byte>> buffers, SocketFlags socketFlags)
    content.vb: Public Function Send(buffers As Collections.Generic.IList(Of ArraySegment(Of Byte)), socketFlags As SocketFlags) As Integer
    parameters:
    - id: buffers
      type: System.Collections.Generic.IList{System.ArraySegment{System.Byte}}
      description: A list of <xref href="System.ArraySegment`1" data-throw-if-not-resolved="false"></xref>s of type <xref href="System.Byte" data-throw-if-not-resolved="false"></xref> that contains the data to be sent.
    - id: socketFlags
      type: System.Net.Sockets.SocketFlags
      description: A bitwise combination of the <xref href="System.Net.Sockets.SocketFlags" data-throw-if-not-resolved="false"></xref> values.
    return:
      type: System.Int32
      description: The number of bytes sent to the <xref href="System.Net.Sockets.Socket" data-throw-if-not-resolved="false"></xref>.
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>buffers</em> is null."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<em>buffers</em> is empty."
  - type: System.Net.Sockets.SocketException
    commentId: T:System.Net.Sockets.SocketException
    description: 'An error occurred when attempting to access the socket. See the Remarks section for more information. '
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: 'The <xref href="System.Net.Sockets.Socket" data-throw-if-not-resolved="false"></xref> has been closed. '
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Net.Sockets.Socket.Send(System.Collections.Generic.IList(Of System.ArraySegment(Of System.Byte)), System.Net.Sockets.SocketFlags)
  name.vb: Send(Collections.Generic.IList(Of ArraySegment(Of Byte)), SocketFlags)
- uid: System.Net.Sockets.Socket.Send(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.Net.Sockets.SocketFlags,System.Net.Sockets.SocketError@)
  commentId: M:System.Net.Sockets.Socket.Send(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.Net.Sockets.SocketFlags,System.Net.Sockets.SocketError@)
  id: Send(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.Net.Sockets.SocketFlags,System.Net.Sockets.SocketError@)
  parent: System.Net.Sockets.Socket
  langs:
  - csharp
  - vb
  name: Send(Collections.Generic.IList<ArraySegment<Byte>>, SocketFlags, out SocketError)
  fullName: System.Net.Sockets.Socket.Send(System.Collections.Generic.IList<System.ArraySegment<System.Byte>>, System.Net.Sockets.SocketFlags, out System.Net.Sockets.SocketError)
  type: Method
  source:
    remote:
      path: src/System.Net.Sockets/ref/System.Net.Sockets.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Send
    path: src/System.Net.Sockets/ref/System.Net.Sockets.cs
    startLine: 229
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  summary: Sends the set of buffers in the list to a connected <xref href="System.Net.Sockets.Socket" data-throw-if-not-resolved="false"></xref>, using the specified <xref href="System.Net.Sockets.SocketFlags" data-throw-if-not-resolved="false"></xref>.
  syntax:
    content: public int Send(Collections.Generic.IList<ArraySegment<byte>> buffers, SocketFlags socketFlags, out SocketError errorCode)
    content.vb: Public Function Send(buffers As Collections.Generic.IList(Of ArraySegment(Of Byte)), socketFlags As SocketFlags, ByRef errorCode As SocketError) As Integer
    parameters:
    - id: buffers
      type: System.Collections.Generic.IList{System.ArraySegment{System.Byte}}
      description: A list of <xref href="System.ArraySegment`1" data-throw-if-not-resolved="false"></xref>s of type <xref href="System.Byte" data-throw-if-not-resolved="false"></xref> that contains the data to be sent.
    - id: socketFlags
      type: System.Net.Sockets.SocketFlags
      description: A bitwise combination of the <xref href="System.Net.Sockets.SocketFlags" data-throw-if-not-resolved="false"></xref> values.
    - id: errorCode
      type: System.Net.Sockets.SocketError
      description: A <xref href="System.Net.Sockets.SocketError" data-throw-if-not-resolved="false"></xref> object that stores the socket error.
    return:
      type: System.Int32
      description: The number of bytes sent to the <xref href="System.Net.Sockets.Socket" data-throw-if-not-resolved="false"></xref>.
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>buffers</em> is null."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<em>buffers</em> is empty."
  - type: System.Net.Sockets.SocketException
    commentId: T:System.Net.Sockets.SocketException
    description: 'An error occurred when attempting to access the socket. See the Remarks section for more information. '
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: 'The <xref href="System.Net.Sockets.Socket" data-throw-if-not-resolved="false"></xref> has been closed. '
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Net.Sockets.Socket.Send(System.Collections.Generic.IList(Of System.ArraySegment(Of System.Byte)), System.Net.Sockets.SocketFlags, ByRef System.Net.Sockets.SocketError)
  name.vb: Send(Collections.Generic.IList(Of ArraySegment(Of Byte)), SocketFlags, ByRef SocketError)
- uid: System.Net.Sockets.Socket.SendAsync(System.Net.Sockets.SocketAsyncEventArgs)
  commentId: M:System.Net.Sockets.Socket.SendAsync(System.Net.Sockets.SocketAsyncEventArgs)
  id: SendAsync(System.Net.Sockets.SocketAsyncEventArgs)
  parent: System.Net.Sockets.Socket
  langs:
  - csharp
  - vb
  name: SendAsync(SocketAsyncEventArgs)
  fullName: System.Net.Sockets.Socket.SendAsync(System.Net.Sockets.SocketAsyncEventArgs)
  type: Method
  source:
    remote:
      path: src/System.Net.Sockets/src/System/Net/Sockets/Socket.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: SendAsync
    path: src/System.Net.Sockets/src/System/Net/Sockets/Socket.cs
    startLine: 4709
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  summary: Sends data asynchronously to a connected <xref href="System.Net.Sockets.Socket" data-throw-if-not-resolved="false"></xref> object.
  syntax:
    content: public bool SendAsync(SocketAsyncEventArgs e)
    content.vb: Public Function SendAsync(e As SocketAsyncEventArgs) As Boolean
    parameters:
    - id: e
      type: System.Net.Sockets.SocketAsyncEventArgs
      description: The <xref href="System.Net.Sockets.SocketAsyncEventArgs" data-throw-if-not-resolved="false"></xref> object to use for this asynchronous socket operation.
    return:
      type: System.Boolean
      description: Returns true if the I/O operation is pending. The <xref href="System.Net.Sockets.SocketAsyncEventArgs.Completed" data-throw-if-not-resolved="false"></xref> event on the <em>e</em> parameter will be raised upon completion of the operation. Returns false if the I/O operation completed synchronously. In this case, The <xref href="System.Net.Sockets.SocketAsyncEventArgs.Completed" data-throw-if-not-resolved="false"></xref> event on the <em>e</em> parameter will not be raised and the <em>e</em> object passed as a parameter may be examined immediately after the method call returns to retrieve the result of the operation.
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: The <xref href="System.Net.Sockets.SocketAsyncEventArgs.Buffer" data-throw-if-not-resolved="false"></xref> or <xref href="System.Net.Sockets.SocketAsyncEventArgs.BufferList" data-throw-if-not-resolved="false"></xref> properties on the <em>e</em> parameter must reference valid buffers. One or the other of these properties may be set, but not both at the same time.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: A socket operation was already in progress using the <xref href="System.Net.Sockets.SocketAsyncEventArgs" data-throw-if-not-resolved="false"></xref> object specified in the <em>e</em> parameter.
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: Windows XP or later is required for this method.
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: 'The <xref href="System.Net.Sockets.Socket" data-throw-if-not-resolved="false"></xref> has been closed. '
  - type: System.Net.Sockets.SocketException
    commentId: T:System.Net.Sockets.SocketException
    description: The <xref href="System.Net.Sockets.Socket" data-throw-if-not-resolved="false"></xref> is not yet connected or was not obtained via an <xref href="System.Net.Sockets.Socket.Accept" data-throw-if-not-resolved="false"></xref>, <xref href="System.Net.Sockets.Socket.AcceptAsync(System.Net.Sockets.SocketAsyncEventArgs)" data-throw-if-not-resolved="false"></xref>,or <see cref="Overload:System.Net.Sockets.Socket.BeginAccept"></see>, method.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)
  commentId: M:System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)
  id: SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)
  parent: System.Net.Sockets.Socket
  langs:
  - csharp
  - vb
  name: SendPacketsAsync(SocketAsyncEventArgs)
  fullName: System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)
  type: Method
  source:
    remote:
      path: src/System.Net.Sockets/src/System/Net/Sockets/Socket.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: SendPacketsAsync
    path: src/System.Net.Sockets/src/System/Net/Sockets/Socket.cs
    startLine: 4767
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  summary: Sends a collection of files or in memory data buffers asynchronously to a connected <xref href="System.Net.Sockets.Socket" data-throw-if-not-resolved="false"></xref> object.
  syntax:
    content: public bool SendPacketsAsync(SocketAsyncEventArgs e)
    content.vb: Public Function SendPacketsAsync(e As SocketAsyncEventArgs) As Boolean
    parameters:
    - id: e
      type: System.Net.Sockets.SocketAsyncEventArgs
      description: The <xref href="System.Net.Sockets.SocketAsyncEventArgs" data-throw-if-not-resolved="false"></xref> object to use for this asynchronous socket operation.
    return:
      type: System.Boolean
      description: Returns true if the I/O operation is pending. The <xref href="System.Net.Sockets.SocketAsyncEventArgs.Completed" data-throw-if-not-resolved="false"></xref> event on the <em>e</em> parameter will be raised upon completion of the operation. Returns false if the I/O operation completed synchronously. In this case, The <xref href="System.Net.Sockets.SocketAsyncEventArgs.Completed" data-throw-if-not-resolved="false"></xref> event on the <em>e</em> parameter will not be raised and the <em>e</em> object passed as a parameter may be examined immediately after the method call returns to retrieve the result of the operation.
  exceptions:
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: 'The file specified in the <xref href="System.Net.Sockets.SendPacketsElement.FilePath" data-throw-if-not-resolved="false"></xref> property was not found. '
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: A socket operation was already in progress using the <xref href="System.Net.Sockets.SocketAsyncEventArgs" data-throw-if-not-resolved="false"></xref> object specified in the <em>e</em> parameter.
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: 'Windows XP or later is required for this method. This exception also occurs if the <xref href="System.Net.Sockets.Socket" data-throw-if-not-resolved="false"></xref> is not connected to a remote host. '
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: 'The <xref href="System.Net.Sockets.Socket" data-throw-if-not-resolved="false"></xref> has been closed. '
  - type: System.Net.Sockets.SocketException
    commentId: T:System.Net.Sockets.SocketException
    description: A connectionless <xref href="System.Net.Sockets.Socket" data-throw-if-not-resolved="false"></xref> is being used and the file being sent exceeds the maximum packet size of the underlying transport.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Net.Sockets.Socket.SendTo(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.EndPoint)
  commentId: M:System.Net.Sockets.Socket.SendTo(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.EndPoint)
  id: SendTo(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.EndPoint)
  parent: System.Net.Sockets.Socket
  langs:
  - csharp
  - vb
  name: SendTo(Byte[], Int32, Int32, SocketFlags, EndPoint)
  fullName: System.Net.Sockets.Socket.SendTo(System.Byte[], System.Int32, System.Int32, System.Net.Sockets.SocketFlags, System.Net.EndPoint)
  type: Method
  source:
    remote:
      path: src/System.Net.Sockets/ref/System.Net.Sockets.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: SendTo
    path: src/System.Net.Sockets/ref/System.Net.Sockets.cs
    startLine: 232
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  summary: Sends the specified number of bytes of data to the specified endpoint, starting at the specified location in the buffer, and using the specified <xref href="System.Net.Sockets.SocketFlags" data-throw-if-not-resolved="false"></xref>.
  syntax:
    content: public int SendTo(byte[] buffer, int offset, int size, SocketFlags socketFlags, EndPoint remoteEP)
    content.vb: Public Function SendTo(buffer As Byte(), offset As Integer, size As Integer, socketFlags As SocketFlags, remoteEP As EndPoint) As Integer
    parameters:
    - id: buffer
      type: System.Byte[]
      description: 'An array of type <xref href="System.Byte" data-throw-if-not-resolved="false"></xref> that contains the data to be sent. '
    - id: offset
      type: System.Int32
      description: 'The position in the data buffer at which to begin sending data. '
    - id: size
      type: System.Int32
      description: 'The number of bytes to send. '
    - id: socketFlags
      type: System.Net.Sockets.SocketFlags
      description: 'A bitwise combination of the <xref href="System.Net.Sockets.SocketFlags" data-throw-if-not-resolved="false"></xref> values. '
    - id: remoteEP
      type: System.Net.EndPoint
      description: 'The <xref href="System.Net.EndPoint" data-throw-if-not-resolved="false"></xref> that represents the destination location for the data. '
    return:
      type: System.Int32
      description: The number of bytes sent.
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>buffer</em> is null.-or- <em>remoteEP</em> is null. "
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<em>offset</em> is less than 0.-or- <em>offset</em> is greater than the length of <em>buffer</em>.-or- <em>size</em> is less than 0.-or- <em>size</em> is greater than the length of <em>buffer</em> minus the value of the <em>offset</em> parameter. "
  - type: System.Net.Sockets.SocketException
    commentId: T:System.Net.Sockets.SocketException
    description: "\n<em>socketFlags</em> is not a valid combination of values.-or- An operating system error occurs while accessing the <xref href=\"System.Net.Sockets.Socket\" data-throw-if-not-resolved=\"false\"></xref>. See the Remarks section for more information. "
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: 'The <xref href="System.Net.Sockets.Socket" data-throw-if-not-resolved="false"></xref> has been closed. '
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: 'A caller in the call stack does not have the required permissions. '
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Net.Sockets.Socket.SendTo(System.Byte(), System.Int32, System.Int32, System.Net.Sockets.SocketFlags, System.Net.EndPoint)
  name.vb: SendTo(Byte(), Int32, Int32, SocketFlags, EndPoint)
- uid: System.Net.Sockets.Socket.SendTo(System.Byte[],System.Int32,System.Net.Sockets.SocketFlags,System.Net.EndPoint)
  commentId: M:System.Net.Sockets.Socket.SendTo(System.Byte[],System.Int32,System.Net.Sockets.SocketFlags,System.Net.EndPoint)
  id: SendTo(System.Byte[],System.Int32,System.Net.Sockets.SocketFlags,System.Net.EndPoint)
  parent: System.Net.Sockets.Socket
  langs:
  - csharp
  - vb
  name: SendTo(Byte[], Int32, SocketFlags, EndPoint)
  fullName: System.Net.Sockets.Socket.SendTo(System.Byte[], System.Int32, System.Net.Sockets.SocketFlags, System.Net.EndPoint)
  type: Method
  source:
    remote:
      path: src/System.Net.Sockets/ref/System.Net.Sockets.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: SendTo
    path: src/System.Net.Sockets/ref/System.Net.Sockets.cs
    startLine: 233
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  summary: Sends the specified number of bytes of data to the specified endpoint using the specified <xref href="System.Net.Sockets.SocketFlags" data-throw-if-not-resolved="false"></xref>.
  syntax:
    content: public int SendTo(byte[] buffer, int size, SocketFlags socketFlags, EndPoint remoteEP)
    content.vb: Public Function SendTo(buffer As Byte(), size As Integer, socketFlags As SocketFlags, remoteEP As EndPoint) As Integer
    parameters:
    - id: buffer
      type: System.Byte[]
      description: 'An array of type <xref href="System.Byte" data-throw-if-not-resolved="false"></xref> that contains the data to be sent. '
    - id: size
      type: System.Int32
      description: 'The number of bytes to send. '
    - id: socketFlags
      type: System.Net.Sockets.SocketFlags
      description: 'A bitwise combination of the <xref href="System.Net.Sockets.SocketFlags" data-throw-if-not-resolved="false"></xref> values. '
    - id: remoteEP
      type: System.Net.EndPoint
      description: 'The <xref href="System.Net.EndPoint" data-throw-if-not-resolved="false"></xref> that represents the destination location for the data. '
    return:
      type: System.Int32
      description: The number of bytes sent.
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>buffer</em> is null.-or- <em>remoteEP</em> is null. "
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: 'The specified <em>size</em> exceeds the size of <em>buffer</em>. '
  - type: System.Net.Sockets.SocketException
    commentId: T:System.Net.Sockets.SocketException
    description: 'An error occurred when attempting to access the socket. See the Remarks section for more information. '
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: 'The <xref href="System.Net.Sockets.Socket" data-throw-if-not-resolved="false"></xref> has been closed. '
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Net.Sockets.Socket.SendTo(System.Byte(), System.Int32, System.Net.Sockets.SocketFlags, System.Net.EndPoint)
  name.vb: SendTo(Byte(), Int32, SocketFlags, EndPoint)
- uid: System.Net.Sockets.Socket.SendTo(System.Byte[],System.Net.EndPoint)
  commentId: M:System.Net.Sockets.Socket.SendTo(System.Byte[],System.Net.EndPoint)
  id: SendTo(System.Byte[],System.Net.EndPoint)
  parent: System.Net.Sockets.Socket
  langs:
  - csharp
  - vb
  name: SendTo(Byte[], EndPoint)
  fullName: System.Net.Sockets.Socket.SendTo(System.Byte[], System.Net.EndPoint)
  type: Method
  source:
    remote:
      path: src/System.Net.Sockets/ref/System.Net.Sockets.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: SendTo
    path: src/System.Net.Sockets/ref/System.Net.Sockets.cs
    startLine: 234
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  summary: Sends data to the specified endpoint.
  syntax:
    content: public int SendTo(byte[] buffer, EndPoint remoteEP)
    content.vb: Public Function SendTo(buffer As Byte(), remoteEP As EndPoint) As Integer
    parameters:
    - id: buffer
      type: System.Byte[]
      description: 'An array of type <xref href="System.Byte" data-throw-if-not-resolved="false"></xref> that contains the data to be sent. '
    - id: remoteEP
      type: System.Net.EndPoint
      description: 'The <xref href="System.Net.EndPoint" data-throw-if-not-resolved="false"></xref> that represents the destination for the data. '
    return:
      type: System.Int32
      description: The number of bytes sent.
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>buffer</em> is null.-or- <em>remoteEP</em> is null. "
  - type: System.Net.Sockets.SocketException
    commentId: T:System.Net.Sockets.SocketException
    description: 'An error occurred when attempting to access the socket. See the Remarks section for more information. '
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: 'The <xref href="System.Net.Sockets.Socket" data-throw-if-not-resolved="false"></xref> has been closed. '
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Net.Sockets.Socket.SendTo(System.Byte(), System.Net.EndPoint)
  name.vb: SendTo(Byte(), EndPoint)
- uid: System.Net.Sockets.Socket.SendTo(System.Byte[],System.Net.Sockets.SocketFlags,System.Net.EndPoint)
  commentId: M:System.Net.Sockets.Socket.SendTo(System.Byte[],System.Net.Sockets.SocketFlags,System.Net.EndPoint)
  id: SendTo(System.Byte[],System.Net.Sockets.SocketFlags,System.Net.EndPoint)
  parent: System.Net.Sockets.Socket
  langs:
  - csharp
  - vb
  name: SendTo(Byte[], SocketFlags, EndPoint)
  fullName: System.Net.Sockets.Socket.SendTo(System.Byte[], System.Net.Sockets.SocketFlags, System.Net.EndPoint)
  type: Method
  source:
    remote:
      path: src/System.Net.Sockets/ref/System.Net.Sockets.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: SendTo
    path: src/System.Net.Sockets/ref/System.Net.Sockets.cs
    startLine: 235
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  summary: Sends data to a specific endpoint using the specified <xref href="System.Net.Sockets.SocketFlags" data-throw-if-not-resolved="false"></xref>.
  syntax:
    content: public int SendTo(byte[] buffer, SocketFlags socketFlags, EndPoint remoteEP)
    content.vb: Public Function SendTo(buffer As Byte(), socketFlags As SocketFlags, remoteEP As EndPoint) As Integer
    parameters:
    - id: buffer
      type: System.Byte[]
      description: 'An array of type <xref href="System.Byte" data-throw-if-not-resolved="false"></xref> that contains the data to be sent. '
    - id: socketFlags
      type: System.Net.Sockets.SocketFlags
      description: 'A bitwise combination of the <xref href="System.Net.Sockets.SocketFlags" data-throw-if-not-resolved="false"></xref> values. '
    - id: remoteEP
      type: System.Net.EndPoint
      description: 'The <xref href="System.Net.EndPoint" data-throw-if-not-resolved="false"></xref> that represents the destination location for the data. '
    return:
      type: System.Int32
      description: The number of bytes sent.
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>buffer</em> is null.-or- <em>remoteEP</em> is null. "
  - type: System.Net.Sockets.SocketException
    commentId: T:System.Net.Sockets.SocketException
    description: 'An error occurred when attempting to access the socket. See the Remarks section for more information. '
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: 'The <xref href="System.Net.Sockets.Socket" data-throw-if-not-resolved="false"></xref> has been closed. '
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Net.Sockets.Socket.SendTo(System.Byte(), System.Net.Sockets.SocketFlags, System.Net.EndPoint)
  name.vb: SendTo(Byte(), SocketFlags, EndPoint)
- uid: System.Net.Sockets.Socket.SendToAsync(System.Net.Sockets.SocketAsyncEventArgs)
  commentId: M:System.Net.Sockets.Socket.SendToAsync(System.Net.Sockets.SocketAsyncEventArgs)
  id: SendToAsync(System.Net.Sockets.SocketAsyncEventArgs)
  parent: System.Net.Sockets.Socket
  langs:
  - csharp
  - vb
  name: SendToAsync(SocketAsyncEventArgs)
  fullName: System.Net.Sockets.Socket.SendToAsync(System.Net.Sockets.SocketAsyncEventArgs)
  type: Method
  source:
    remote:
      path: src/System.Net.Sockets/src/System/Net/Sockets/Socket.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: SendToAsync
    path: src/System.Net.Sockets/src/System/Net/Sockets/Socket.cs
    startLine: 4843
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  summary: Sends data asynchronously to a specific remote host.
  syntax:
    content: public bool SendToAsync(SocketAsyncEventArgs e)
    content.vb: Public Function SendToAsync(e As SocketAsyncEventArgs) As Boolean
    parameters:
    - id: e
      type: System.Net.Sockets.SocketAsyncEventArgs
      description: The <xref href="System.Net.Sockets.SocketAsyncEventArgs" data-throw-if-not-resolved="false"></xref> object to use for this asynchronous socket operation.
    return:
      type: System.Boolean
      description: Returns true if the I/O operation is pending. The <xref href="System.Net.Sockets.SocketAsyncEventArgs.Completed" data-throw-if-not-resolved="false"></xref> event on the <em>e</em> parameter will be raised upon completion of the operation. Returns false if the I/O operation completed synchronously. In this case, The <xref href="System.Net.Sockets.SocketAsyncEventArgs.Completed" data-throw-if-not-resolved="false"></xref> event on the <em>e</em> parameter will not be raised and the <em>e</em> object passed as a parameter may be examined immediately after the method call returns to retrieve the result of the operation.
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <xref href="System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint" data-throw-if-not-resolved="false"></xref> cannot be null.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: A socket operation was already in progress using the <xref href="System.Net.Sockets.SocketAsyncEventArgs" data-throw-if-not-resolved="false"></xref> object specified in the <em>e</em> parameter.
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: Windows XP or later is required for this method.
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: 'The <xref href="System.Net.Sockets.Socket" data-throw-if-not-resolved="false"></xref> has been closed. '
  - type: System.Net.Sockets.SocketException
    commentId: T:System.Net.Sockets.SocketException
    description: The protocol specified is connection-oriented, but the <xref href="System.Net.Sockets.Socket" data-throw-if-not-resolved="false"></xref> is not yet connected.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Net.Sockets.Socket.SetSocketOption(System.Net.Sockets.SocketOptionLevel,System.Net.Sockets.SocketOptionName,System.Boolean)
  commentId: M:System.Net.Sockets.Socket.SetSocketOption(System.Net.Sockets.SocketOptionLevel,System.Net.Sockets.SocketOptionName,System.Boolean)
  id: SetSocketOption(System.Net.Sockets.SocketOptionLevel,System.Net.Sockets.SocketOptionName,System.Boolean)
  parent: System.Net.Sockets.Socket
  langs:
  - csharp
  - vb
  name: SetSocketOption(SocketOptionLevel, SocketOptionName, Boolean)
  fullName: System.Net.Sockets.Socket.SetSocketOption(System.Net.Sockets.SocketOptionLevel, System.Net.Sockets.SocketOptionName, System.Boolean)
  type: Method
  source:
    remote:
      path: src/System.Net.Sockets/src/System/Net/Sockets/Socket.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: SetSocketOption
    path: src/System.Net.Sockets/src/System/Net/Sockets/Socket.cs
    startLine: 1984
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  summary: Sets the specified <xref href="System.Net.Sockets.Socket" data-throw-if-not-resolved="false"></xref> option to the specified <xref href="System.Boolean" data-throw-if-not-resolved="false"></xref> value.
  syntax:
    content: public void SetSocketOption(SocketOptionLevel optionLevel, SocketOptionName optionName, bool optionValue)
    content.vb: Public Sub SetSocketOption(optionLevel As SocketOptionLevel, optionName As SocketOptionName, optionValue As Boolean)
    parameters:
    - id: optionLevel
      type: System.Net.Sockets.SocketOptionLevel
      description: 'One of the <xref href="System.Net.Sockets.SocketOptionLevel" data-throw-if-not-resolved="false"></xref> values. '
    - id: optionName
      type: System.Net.Sockets.SocketOptionName
      description: 'One of the <xref href="System.Net.Sockets.SocketOptionName" data-throw-if-not-resolved="false"></xref> values. '
    - id: optionValue
      type: System.Boolean
      description: 'The value of the option, represented as a <xref href="System.Boolean" data-throw-if-not-resolved="false"></xref>. '
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: 'The <xref href="System.Net.Sockets.Socket" data-throw-if-not-resolved="false"></xref> object has been closed. '
  - type: System.Net.Sockets.SocketException
    commentId: T:System.Net.Sockets.SocketException
    description: 'An error occurred when attempting to access the socket. See the Remarks section for more information. '
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Net.Sockets.Socket.SetSocketOption(System.Net.Sockets.SocketOptionLevel,System.Net.Sockets.SocketOptionName,System.Byte[])
  commentId: M:System.Net.Sockets.Socket.SetSocketOption(System.Net.Sockets.SocketOptionLevel,System.Net.Sockets.SocketOptionName,System.Byte[])
  id: SetSocketOption(System.Net.Sockets.SocketOptionLevel,System.Net.Sockets.SocketOptionName,System.Byte[])
  parent: System.Net.Sockets.Socket
  langs:
  - csharp
  - vb
  name: SetSocketOption(SocketOptionLevel, SocketOptionName, Byte[])
  fullName: System.Net.Sockets.Socket.SetSocketOption(System.Net.Sockets.SocketOptionLevel, System.Net.Sockets.SocketOptionName, System.Byte[])
  type: Method
  source:
    remote:
      path: src/System.Net.Sockets/src/System/Net/Sockets/Socket.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: SetSocketOption
    path: src/System.Net.Sockets/src/System/Net/Sockets/Socket.cs
    startLine: 1947
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  summary: Sets the specified <xref href="System.Net.Sockets.Socket" data-throw-if-not-resolved="false"></xref> option to the specified value, represented as a byte array.
  syntax:
    content: public void SetSocketOption(SocketOptionLevel optionLevel, SocketOptionName optionName, byte[] optionValue)
    content.vb: Public Sub SetSocketOption(optionLevel As SocketOptionLevel, optionName As SocketOptionName, optionValue As Byte())
    parameters:
    - id: optionLevel
      type: System.Net.Sockets.SocketOptionLevel
      description: 'One of the <xref href="System.Net.Sockets.SocketOptionLevel" data-throw-if-not-resolved="false"></xref> values. '
    - id: optionName
      type: System.Net.Sockets.SocketOptionName
      description: 'One of the <xref href="System.Net.Sockets.SocketOptionName" data-throw-if-not-resolved="false"></xref> values. '
    - id: optionValue
      type: System.Byte[]
      description: 'An array of type <xref href="System.Byte" data-throw-if-not-resolved="false"></xref> that represents the value of the option. '
  exceptions:
  - type: System.Net.Sockets.SocketException
    commentId: T:System.Net.Sockets.SocketException
    description: 'An error occurred when attempting to access the socket. See the Remarks section for more information. '
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: 'The <xref href="System.Net.Sockets.Socket" data-throw-if-not-resolved="false"></xref> has been closed. '
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Net.Sockets.Socket.SetSocketOption(System.Net.Sockets.SocketOptionLevel, System.Net.Sockets.SocketOptionName, System.Byte())
  name.vb: SetSocketOption(SocketOptionLevel, SocketOptionName, Byte())
- uid: System.Net.Sockets.Socket.SetSocketOption(System.Net.Sockets.SocketOptionLevel,System.Net.Sockets.SocketOptionName,System.Int32)
  commentId: M:System.Net.Sockets.Socket.SetSocketOption(System.Net.Sockets.SocketOptionLevel,System.Net.Sockets.SocketOptionName,System.Int32)
  id: SetSocketOption(System.Net.Sockets.SocketOptionLevel,System.Net.Sockets.SocketOptionName,System.Int32)
  parent: System.Net.Sockets.Socket
  langs:
  - csharp
  - vb
  name: SetSocketOption(SocketOptionLevel, SocketOptionName, Int32)
  fullName: System.Net.Sockets.Socket.SetSocketOption(System.Net.Sockets.SocketOptionLevel, System.Net.Sockets.SocketOptionName, System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Net.Sockets/src/System/Net/Sockets/Socket.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: SetSocketOption
    path: src/System.Net.Sockets/src/System/Net/Sockets/Socket.cs
    startLine: 1932
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  summary: Sets the specified <xref href="System.Net.Sockets.Socket" data-throw-if-not-resolved="false"></xref> option to the specified integer value.
  syntax:
    content: public void SetSocketOption(SocketOptionLevel optionLevel, SocketOptionName optionName, int optionValue)
    content.vb: Public Sub SetSocketOption(optionLevel As SocketOptionLevel, optionName As SocketOptionName, optionValue As Integer)
    parameters:
    - id: optionLevel
      type: System.Net.Sockets.SocketOptionLevel
      description: 'One of the <xref href="System.Net.Sockets.SocketOptionLevel" data-throw-if-not-resolved="false"></xref> values. '
    - id: optionName
      type: System.Net.Sockets.SocketOptionName
      description: 'One of the <xref href="System.Net.Sockets.SocketOptionName" data-throw-if-not-resolved="false"></xref> values. '
    - id: optionValue
      type: System.Int32
      description: 'A value of the option. '
  exceptions:
  - type: System.Net.Sockets.SocketException
    commentId: T:System.Net.Sockets.SocketException
    description: 'An error occurred when attempting to access the socket. See the Remarks section for more information. '
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: 'The <xref href="System.Net.Sockets.Socket" data-throw-if-not-resolved="false"></xref> has been closed. '
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Net.Sockets.Socket.SetSocketOption(System.Net.Sockets.SocketOptionLevel,System.Net.Sockets.SocketOptionName,System.Object)
  commentId: M:System.Net.Sockets.Socket.SetSocketOption(System.Net.Sockets.SocketOptionLevel,System.Net.Sockets.SocketOptionName,System.Object)
  id: SetSocketOption(System.Net.Sockets.SocketOptionLevel,System.Net.Sockets.SocketOptionName,System.Object)
  parent: System.Net.Sockets.Socket
  langs:
  - csharp
  - vb
  name: SetSocketOption(SocketOptionLevel, SocketOptionName, Object)
  fullName: System.Net.Sockets.Socket.SetSocketOption(System.Net.Sockets.SocketOptionLevel, System.Net.Sockets.SocketOptionName, System.Object)
  type: Method
  source:
    remote:
      path: src/System.Net.Sockets/src/System/Net/Sockets/Socket.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: SetSocketOption
    path: src/System.Net.Sockets/src/System/Net/Sockets/Socket.cs
    startLine: 1990
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  summary: Sets the specified <xref href="System.Net.Sockets.Socket" data-throw-if-not-resolved="false"></xref> option to the specified value, represented as an object.
  syntax:
    content: public void SetSocketOption(SocketOptionLevel optionLevel, SocketOptionName optionName, object optionValue)
    content.vb: Public Sub SetSocketOption(optionLevel As SocketOptionLevel, optionName As SocketOptionName, optionValue As Object)
    parameters:
    - id: optionLevel
      type: System.Net.Sockets.SocketOptionLevel
      description: 'One of the <xref href="System.Net.Sockets.SocketOptionLevel" data-throw-if-not-resolved="false"></xref> values. '
    - id: optionName
      type: System.Net.Sockets.SocketOptionName
      description: 'One of the <xref href="System.Net.Sockets.SocketOptionName" data-throw-if-not-resolved="false"></xref> values. '
    - id: optionValue
      type: System.Object
      description: 'A <xref href="System.Net.Sockets.LingerOption" data-throw-if-not-resolved="false"></xref> or <xref href="System.Net.Sockets.MulticastOption" data-throw-if-not-resolved="false"></xref> that contains the value of the option. '
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>optionValue</em> is null. "
  - type: System.Net.Sockets.SocketException
    commentId: T:System.Net.Sockets.SocketException
    description: 'An error occurred when attempting to access the socket. See the Remarks section for more information. '
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: 'The <xref href="System.Net.Sockets.Socket" data-throw-if-not-resolved="false"></xref> has been closed. '
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Net.Sockets.Socket.Shutdown(System.Net.Sockets.SocketShutdown)
  commentId: M:System.Net.Sockets.Socket.Shutdown(System.Net.Sockets.SocketShutdown)
  id: Shutdown(System.Net.Sockets.SocketShutdown)
  parent: System.Net.Sockets.Socket
  langs:
  - csharp
  - vb
  name: Shutdown(SocketShutdown)
  fullName: System.Net.Sockets.Socket.Shutdown(System.Net.Sockets.SocketShutdown)
  type: Method
  source:
    remote:
      path: src/System.Net.Sockets/src/System/Net/Sockets/Socket.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Shutdown
    path: src/System.Net.Sockets/src/System/Net/Sockets/Socket.cs
    startLine: 4174
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  summary: Disables sends and receives on a <xref href="System.Net.Sockets.Socket" data-throw-if-not-resolved="false"></xref>.
  syntax:
    content: public void Shutdown(SocketShutdown how)
    content.vb: Public Sub Shutdown(how As SocketShutdown)
    parameters:
    - id: how
      type: System.Net.Sockets.SocketShutdown
      description: 'One of the <xref href="System.Net.Sockets.SocketShutdown" data-throw-if-not-resolved="false"></xref> values that specifies the operation that will no longer be allowed. '
  exceptions:
  - type: System.Net.Sockets.SocketException
    commentId: T:System.Net.Sockets.SocketException
    description: 'An error occurred when attempting to access the socket. See the Remarks section for more information. '
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: 'The <xref href="System.Net.Sockets.Socket" data-throw-if-not-resolved="false"></xref> has been closed. '
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: System.Net.Sockets
  isExternal: false
  name: System.Net.Sockets
  fullName: System.Net.Sockets
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Net.Sockets.AddressFamily
  parent: System.Net.Sockets
  isExternal: false
  name: AddressFamily
  fullName: System.Net.Sockets.AddressFamily
- uid: System.Net.Sockets.SocketType
  parent: System.Net.Sockets
  isExternal: false
  name: SocketType
  fullName: System.Net.Sockets.SocketType
- uid: System.Net.Sockets.ProtocolType
  parent: System.Net.Sockets
  isExternal: false
  name: ProtocolType
  fullName: System.Net.Sockets.ProtocolType
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  fullName: System.Int32
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  fullName: System.Boolean
- uid: System.Net.Sockets.LingerOption
  parent: System.Net.Sockets
  isExternal: false
  name: LingerOption
  fullName: System.Net.Sockets.LingerOption
- uid: System.Net.EndPoint
  parent: System.Net
  isExternal: false
  name: EndPoint
  fullName: System.Net.EndPoint
- uid: System.Net
  isExternal: false
  name: System.Net
  fullName: System.Net
- uid: System.Int16
  parent: System
  isExternal: false
  name: Int16
  fullName: System.Int16
- uid: System.Net.Sockets.Socket
  parent: System.Net.Sockets
  isExternal: false
  name: Socket
  fullName: System.Net.Sockets.Socket
- uid: System.Net.Sockets.SocketAsyncEventArgs
  parent: System.Net.Sockets
  isExternal: false
  name: SocketAsyncEventArgs
  fullName: System.Net.Sockets.SocketAsyncEventArgs
- uid: System.Net.IPAddress
  parent: System.Net
  isExternal: false
  name: IPAddress
  fullName: System.Net.IPAddress
- uid: System.Net.IPAddress[]
  isExternal: false
  name: IPAddress[]
  fullName: System.Net.IPAddress[]
  fullname.vb: System.Net.IPAddress()
  name.vb: IPAddress()
  spec.csharp:
  - uid: System.Net.IPAddress
    name: IPAddress
    fullName: System.Net.IPAddress
  - name: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Net.IPAddress
    name: IPAddress
    fullName: System.Net.IPAddress
  - name: ()
    fullName: ()
- uid: System.String
  parent: System
  isExternal: false
  name: String
  fullName: System.String
- uid: System.Net.Sockets.SocketOptionLevel
  parent: System.Net.Sockets
  isExternal: false
  name: SocketOptionLevel
  fullName: System.Net.Sockets.SocketOptionLevel
- uid: System.Net.Sockets.SocketOptionName
  parent: System.Net.Sockets
  isExternal: false
  name: SocketOptionName
  fullName: System.Net.Sockets.SocketOptionName
- uid: System.Byte[]
  isExternal: false
  name: Byte[]
  fullName: System.Byte[]
  fullname.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
  - name: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
  - name: ()
    fullName: ()
- uid: System.Net.Sockets.IOControlCode
  parent: System.Net.Sockets
  isExternal: false
  name: IOControlCode
  fullName: System.Net.Sockets.IOControlCode
- uid: System.Net.Sockets.SelectMode
  parent: System.Net.Sockets
  isExternal: false
  name: SelectMode
  fullName: System.Net.Sockets.SelectMode
- uid: System.Net.Sockets.SocketFlags
  parent: System.Net.Sockets
  isExternal: false
  name: SocketFlags
  fullName: System.Net.Sockets.SocketFlags
- uid: System.Net.Sockets.SocketError
  parent: System.Net.Sockets
  isExternal: false
  name: SocketError
  fullName: System.Net.Sockets.SocketError
- uid: System.Collections.Generic.IList{System.ArraySegment{System.Byte}}
  definition: System.Collections.Generic.IList`1
  name: Collections.Generic.IList<ArraySegment<Byte>>
  fullName: System.Collections.Generic.IList<System.ArraySegment<System.Byte>>
  fullname.vb: System.Collections.Generic.IList(Of System.ArraySegment(Of System.Byte))
  name.vb: Collections.Generic.IList(Of ArraySegment(Of Byte))
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: Collections.Generic.IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    fullName: <
  - uid: System.ArraySegment`1
    name: ArraySegment
    fullName: System.ArraySegment
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: Collections.Generic.IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.ArraySegment`1
    name: ArraySegment
    fullName: System.ArraySegment
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
    isExternal: true
  - name: )
    fullName: )
  - name: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  parent: System.Collections.Generic
  isExternal: false
  name: Generic.IList<>
  fullName: System.Collections.Generic.IList<>
  fullname.vb: System.Collections.Generic.IList(Of )
  name.vb: Generic.IList(Of )
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: Generic.IList
    fullName: System.Collections.Generic.IList
  - name: <
    fullName: <
  - {}
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: Generic.IList
    fullName: System.Collections.Generic.IList
  - name: '(Of '
    fullName: '(Of '
  - {}
  - name: )
    fullName: )
- uid: System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Net.Sockets.IPPacketInformation
  parent: System.Net.Sockets
  isExternal: false
  name: IPPacketInformation
  fullName: System.Net.Sockets.IPPacketInformation
- uid: System.Collections.IList
  parent: System.Collections
  isExternal: false
  name: IList
  fullName: System.Collections.IList
- uid: System.Collections
  isExternal: false
  name: System.Collections
  fullName: System.Collections
- uid: System.Net.Sockets.SocketShutdown
  parent: System.Net.Sockets
  isExternal: false
  name: SocketShutdown
  fullName: System.Net.Sockets.SocketShutdown
- uid: System.Net.Sockets.SocketException
  isExternal: false
  name: SocketException
  fullName: System.Net.Sockets.SocketException
- uid: System.ObjectDisposedException
  isExternal: false
  name: ObjectDisposedException
  fullName: System.ObjectDisposedException
- uid: System.NotSupportedException
  parent: System
  isExternal: false
  name: NotSupportedException
  fullName: System.NotSupportedException
- uid: System.InvalidOperationException
  parent: System
  isExternal: false
  name: InvalidOperationException
  fullName: System.InvalidOperationException
- uid: System.ArgumentOutOfRangeException
  isExternal: false
  name: ArgumentOutOfRangeException
  fullName: System.ArgumentOutOfRangeException
- uid: System.ArgumentException
  parent: System
  isExternal: false
  name: ArgumentException
  fullName: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: false
  name: ArgumentNullException
  fullName: System.ArgumentNullException
- uid: System.Security.SecurityException
  isExternal: false
  name: SecurityException
  fullName: System.Security.SecurityException
- uid: System.IO.FileNotFoundException
  isExternal: false
  name: FileNotFoundException
  fullName: System.IO.FileNotFoundException
