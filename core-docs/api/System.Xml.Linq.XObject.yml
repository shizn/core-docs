items:
- uid: System.Xml.Linq.XObject
  commentId: T:System.Xml.Linq.XObject
  id: XObject
  parent: System.Xml.Linq
  children:
  - System.Xml.Linq.XObject.AddAnnotation(System.Object)
  - System.Xml.Linq.XObject.Annotation(System.Type)
  - System.Xml.Linq.XObject.Annotation``1
  - System.Xml.Linq.XObject.Annotations(System.Type)
  - System.Xml.Linq.XObject.Annotations``1
  - System.Xml.Linq.XObject.BaseUri
  - System.Xml.Linq.XObject.Changed
  - System.Xml.Linq.XObject.Changing
  - System.Xml.Linq.XObject.Document
  - System.Xml.Linq.XObject.NodeType
  - System.Xml.Linq.XObject.Parent
  - System.Xml.Linq.XObject.RemoveAnnotations(System.Type)
  - System.Xml.Linq.XObject.RemoveAnnotations``1
  langs:
  - csharp
  - vb
  name: XObject
  fullName: System.Xml.Linq.XObject
  type: Class
  source:
    remote:
      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: XObject
    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
    startLine: 388
  assemblies:
  - System.Xml.XDocument
  namespace: System.Xml.Linq
  syntax:
    content: 'public abstract class XObject : IXmlLineInfo'
    content.vb: >-
      Public MustInherit Class XObject
          Inherits IXmlLineInfo
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: System.Xml.Linq.XObject.BaseUri
  commentId: P:System.Xml.Linq.XObject.BaseUri
  id: BaseUri
  parent: System.Xml.Linq.XObject
  langs:
  - csharp
  - vb
  name: BaseUri
  fullName: System.Xml.Linq.XObject.BaseUri
  type: Property
  source:
    remote:
      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: BaseUri
    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
    startLine: 391
  assemblies:
  - System.Xml.XDocument
  namespace: System.Xml.Linq
  syntax:
    content: public string BaseUri { get; }
    content.vb: Public ReadOnly Property BaseUri As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Xml.Linq.XObject.Document
  commentId: P:System.Xml.Linq.XObject.Document
  id: Document
  parent: System.Xml.Linq.XObject
  langs:
  - csharp
  - vb
  name: Document
  fullName: System.Xml.Linq.XObject.Document
  type: Property
  source:
    remote:
      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Document
    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
    startLine: 392
  assemblies:
  - System.Xml.XDocument
  namespace: System.Xml.Linq
  syntax:
    content: public XDocument Document { get; }
    content.vb: Public ReadOnly Property Document As XDocument
    parameters: []
    return:
      type: System.Xml.Linq.XDocument
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Xml.Linq.XObject.NodeType
  commentId: P:System.Xml.Linq.XObject.NodeType
  id: NodeType
  parent: System.Xml.Linq.XObject
  langs:
  - csharp
  - vb
  name: NodeType
  fullName: System.Xml.Linq.XObject.NodeType
  type: Property
  source:
    remote:
      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: NodeType
    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
    startLine: 393
  assemblies:
  - System.Xml.XDocument
  namespace: System.Xml.Linq
  syntax:
    content: public abstract XmlNodeType NodeType { get; }
    content.vb: Public MustOverride ReadOnly Property NodeType As XmlNodeType
    parameters: []
    return:
      type: System.Xml.XmlNodeType
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
- uid: System.Xml.Linq.XObject.Parent
  commentId: P:System.Xml.Linq.XObject.Parent
  id: Parent
  parent: System.Xml.Linq.XObject
  langs:
  - csharp
  - vb
  name: Parent
  fullName: System.Xml.Linq.XObject.Parent
  type: Property
  source:
    remote:
      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Parent
    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
    startLine: 394
  assemblies:
  - System.Xml.XDocument
  namespace: System.Xml.Linq
  syntax:
    content: public XElement Parent { get; }
    content.vb: Public ReadOnly Property Parent As XElement
    parameters: []
    return:
      type: System.Xml.Linq.XElement
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Xml.Linq.XObject.Changed
  commentId: E:System.Xml.Linq.XObject.Changed
  id: Changed
  parent: System.Xml.Linq.XObject
  langs:
  - csharp
  - vb
  name: Changed
  fullName: System.Xml.Linq.XObject.Changed
  type: Event
  source:
    remote:
      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Changed
    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
    startLine: 397
  assemblies:
  - System.Xml.XDocument
  namespace: System.Xml.Linq
  syntax:
    content: public event EventHandler<XObjectChangeEventArgs> Changed
    content.vb: Public Event Changed As EventHandler(Of XObjectChangeEventArgs)
    return:
      type: System.EventHandler{System.Xml.Linq.XObjectChangeEventArgs}
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Xml.Linq.XObject.Changing
  commentId: E:System.Xml.Linq.XObject.Changing
  id: Changing
  parent: System.Xml.Linq.XObject
  langs:
  - csharp
  - vb
  name: Changing
  fullName: System.Xml.Linq.XObject.Changing
  type: Event
  source:
    remote:
      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Changing
    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
    startLine: 398
  assemblies:
  - System.Xml.XDocument
  namespace: System.Xml.Linq
  syntax:
    content: public event EventHandler<XObjectChangeEventArgs> Changing
    content.vb: Public Event Changing As EventHandler(Of XObjectChangeEventArgs)
    return:
      type: System.EventHandler{System.Xml.Linq.XObjectChangeEventArgs}
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Xml.Linq.XObject.AddAnnotation(System.Object)
  commentId: M:System.Xml.Linq.XObject.AddAnnotation(System.Object)
  id: AddAnnotation(System.Object)
  parent: System.Xml.Linq.XObject
  langs:
  - csharp
  - vb
  name: AddAnnotation(Object)
  fullName: System.Xml.Linq.XObject.AddAnnotation(System.Object)
  type: Method
  source:
    remote:
      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: AddAnnotation
    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
    startLine: 399
  assemblies:
  - System.Xml.XDocument
  namespace: System.Xml.Linq
  syntax:
    content: public void AddAnnotation(object annotation)
    content.vb: Public Sub AddAnnotation(annotation As Object)
    parameters:
    - id: annotation
      type: System.Object
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Xml.Linq.XObject.Annotation(System.Type)
  commentId: M:System.Xml.Linq.XObject.Annotation(System.Type)
  id: Annotation(System.Type)
  parent: System.Xml.Linq.XObject
  langs:
  - csharp
  - vb
  name: Annotation(Type)
  fullName: System.Xml.Linq.XObject.Annotation(System.Type)
  type: Method
  source:
    remote:
      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Annotation
    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
    startLine: 400
  assemblies:
  - System.Xml.XDocument
  namespace: System.Xml.Linq
  syntax:
    content: public object Annotation(Type type)
    content.vb: Public Function Annotation(type As Type) As Object
    parameters:
    - id: type
      type: System.Type
    return:
      type: System.Object
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Xml.Linq.XObject.Annotation``1
  commentId: M:System.Xml.Linq.XObject.Annotation``1
  id: Annotation``1
  parent: System.Xml.Linq.XObject
  langs:
  - csharp
  - vb
  name: Annotation<T>()
  fullName: System.Xml.Linq.XObject.Annotation<T>()
  type: Method
  source:
    remote:
      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Annotation
    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
    startLine: 401
  assemblies:
  - System.Xml.XDocument
  namespace: System.Xml.Linq
  syntax:
    content: 'public T Annotation<T>()where T : class'
    content.vb: Public Function Annotation(Of T As Class) As T
    typeParameters:
    - id: T
    return:
      type: '{T}'
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Xml.Linq.XObject.Annotation(Of T)()
  name.vb: Annotation(Of T)()
- uid: System.Xml.Linq.XObject.Annotations(System.Type)
  commentId: M:System.Xml.Linq.XObject.Annotations(System.Type)
  id: Annotations(System.Type)
  parent: System.Xml.Linq.XObject
  langs:
  - csharp
  - vb
  name: Annotations(Type)
  fullName: System.Xml.Linq.XObject.Annotations(System.Type)
  type: Method
  source:
    remote:
      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Annotations
    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
    startLine: 402
  assemblies:
  - System.Xml.XDocument
  namespace: System.Xml.Linq
  syntax:
    content: public Collections.Generic.IEnumerable<object> Annotations(Type type)
    content.vb: Public Function Annotations(type As Type) As Collections.Generic.IEnumerable(Of Object)
    parameters:
    - id: type
      type: System.Type
    return:
      type: System.Collections.Generic.IEnumerable{System.Object}
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Xml.Linq.XObject.Annotations``1
  commentId: M:System.Xml.Linq.XObject.Annotations``1
  id: Annotations``1
  parent: System.Xml.Linq.XObject
  langs:
  - csharp
  - vb
  name: Annotations<T>()
  fullName: System.Xml.Linq.XObject.Annotations<T>()
  type: Method
  source:
    remote:
      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Annotations
    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
    startLine: 403
  assemblies:
  - System.Xml.XDocument
  namespace: System.Xml.Linq
  syntax:
    content: 'public Collections.Generic.IEnumerable<T> Annotations<T>()where T : class'
    content.vb: Public Function Annotations(Of T As Class) As Collections.Generic.IEnumerable(Of T)
    typeParameters:
    - id: T
    return:
      type: System.Collections.Generic.IEnumerable{{T}}
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Xml.Linq.XObject.Annotations(Of T)()
  name.vb: Annotations(Of T)()
- uid: System.Xml.Linq.XObject.RemoveAnnotations(System.Type)
  commentId: M:System.Xml.Linq.XObject.RemoveAnnotations(System.Type)
  id: RemoveAnnotations(System.Type)
  parent: System.Xml.Linq.XObject
  langs:
  - csharp
  - vb
  name: RemoveAnnotations(Type)
  fullName: System.Xml.Linq.XObject.RemoveAnnotations(System.Type)
  type: Method
  source:
    remote:
      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: RemoveAnnotations
    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
    startLine: 404
  assemblies:
  - System.Xml.XDocument
  namespace: System.Xml.Linq
  syntax:
    content: public void RemoveAnnotations(Type type)
    content.vb: Public Sub RemoveAnnotations(type As Type)
    parameters:
    - id: type
      type: System.Type
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Xml.Linq.XObject.RemoveAnnotations``1
  commentId: M:System.Xml.Linq.XObject.RemoveAnnotations``1
  id: RemoveAnnotations``1
  parent: System.Xml.Linq.XObject
  langs:
  - csharp
  - vb
  name: RemoveAnnotations<T>()
  fullName: System.Xml.Linq.XObject.RemoveAnnotations<T>()
  type: Method
  source:
    remote:
      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: RemoveAnnotations
    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
    startLine: 405
  assemblies:
  - System.Xml.XDocument
  namespace: System.Xml.Linq
  syntax:
    content: 'public void RemoveAnnotations<T>()where T : class'
    content.vb: Public Sub RemoveAnnotations(Of T As Class)
    typeParameters:
    - id: T
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Xml.Linq.XObject.RemoveAnnotations(Of T)()
  name.vb: RemoveAnnotations(Of T)()
references:
- uid: System.Xml.Linq
  isExternal: false
  name: System.Xml.Linq
  fullName: System.Xml.Linq
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.String
  parent: System
  isExternal: false
  name: String
  fullName: System.String
- uid: System.Xml.Linq.XDocument
  parent: System.Xml.Linq
  isExternal: false
  name: XDocument
  fullName: System.Xml.Linq.XDocument
- uid: System.Xml.XmlNodeType
  parent: System.Xml
  isExternal: false
  name: XmlNodeType
  fullName: System.Xml.XmlNodeType
- uid: System.Xml
  isExternal: false
  name: System.Xml
  fullName: System.Xml
- uid: System.Xml.Linq.XElement
  parent: System.Xml.Linq
  isExternal: false
  name: XElement
  fullName: System.Xml.Linq.XElement
- uid: System.EventHandler{System.Xml.Linq.XObjectChangeEventArgs}
  definition: System.EventHandler`1
  name: EventHandler<XObjectChangeEventArgs>
  fullName: System.EventHandler<System.Xml.Linq.XObjectChangeEventArgs>
  fullname.vb: System.EventHandler(Of System.Xml.Linq.XObjectChangeEventArgs)
  name.vb: EventHandler(Of XObjectChangeEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Xml.Linq.XObjectChangeEventArgs
    name: XObjectChangeEventArgs
    fullName: System.Xml.Linq.XObjectChangeEventArgs
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Xml.Linq.XObjectChangeEventArgs
    name: XObjectChangeEventArgs
    fullName: System.Xml.Linq.XObjectChangeEventArgs
  - name: )
    fullName: )
- uid: System.EventHandler`1
  isExternal: false
  name: EventHandler<>
  fullName: System.EventHandler<>
  fullname.vb: System.EventHandler(Of )
  name.vb: EventHandler(Of )
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    fullName: System.EventHandler
  - name: <
    fullName: <
  - name: 
    fullName: 
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    fullName: System.EventHandler
  - name: '(Of '
    fullName: '(Of '
  - name: 
    fullName: 
  - name: )
    fullName: )
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  fullName: System.Type
- uid: '{T}'
  isExternal: false
  name: T
  fullName: T
- uid: System.Collections.Generic.IEnumerable{System.Object}
  definition: System.Collections.Generic.IEnumerable`1
  name: Collections.Generic.IEnumerable<Object>
  fullName: System.Collections.Generic.IEnumerable<System.Object>
  fullname.vb: System.Collections.Generic.IEnumerable(Of System.Object)
  name.vb: Collections.Generic.IEnumerable(Of Object)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: Collections.Generic.IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: Collections.Generic.IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  parent: System.Collections.Generic
  isExternal: false
  name: Collections.Generic.IEnumerable<>
  fullName: System.Collections.Generic.IEnumerable<>
  fullname.vb: System.Collections.Generic.IEnumerable(Of )
  name.vb: Collections.Generic.IEnumerable(Of )
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: Collections.Generic.IEnumerable
    fullName: System.Collections.Generic.IEnumerable
  - name: <
    fullName: <
  - name: 
    fullName: 
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: Collections.Generic.IEnumerable
    fullName: System.Collections.Generic.IEnumerable
  - name: '(Of '
    fullName: '(Of '
  - name: 
    fullName: 
  - name: )
    fullName: )
- uid: System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Collections.Generic.IEnumerable{{T}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: Collections.Generic.IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  fullname.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: Collections.Generic.IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: Collections.Generic.IEnumerable
    fullName: System.Collections.Generic.IEnumerable
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: Collections.Generic.IEnumerable
    fullName: System.Collections.Generic.IEnumerable
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
