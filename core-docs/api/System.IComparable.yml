items:
- uid: System.IComparable
  commentId: T:System.IComparable
  id: IComparable
  parent: System
  children:
  - System.IComparable.CompareTo(System.Object)
  langs:
  - csharp
  - vb
  name: IComparable
  fullName: System.IComparable
  type: Interface
  source:
    remote:
      path: src/mscorlib/src/System/IComparable.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: IComparable
    path: src/mscorlib/src/System/IComparable.cs
    startLine: 12
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Defines a generalized type-specific comparison method that a value type or class implements to order or sort its instances.</p>\n"
  remarks: "\n<p>This interface is implemented by types whose values can be ordered or sorted. It requires that implementing types define a single method, <xref href=\"System.IComparable.CompareTo(System.Object)\" data-throw-if-not-resolved=\"false\"></xref>, that indicates whether the position of the current instance in the sort order is before, after, or the same as a second object of the same type. The instance's <xref href=\"System.IComparable\" data-throw-if-not-resolved=\"false\"></xref> implementation is called automatically by methods such as <xref href=\"System.Array.Sort(System.Array)\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"System.Collections.ArrayList.Sort\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>The implementation of the <xref href=\"System.IComparable.CompareTo(System.Object)\" data-throw-if-not-resolved=\"false\"></xref> method must return an <xref href=\"System.Int32\" data-throw-if-not-resolved=\"false\"></xref> that has one of three values, as shown in the following table. </p>\n<p>Value </p>\n<p>Meaning </p>\n<table><tbody><tr><td>\n<p>Less than zero </p>\n</td><td>\n<p>The current instance precedes the object specified by the <xref href=\"System.IComparable.CompareTo(System.Object)\" data-throw-if-not-resolved=\"false\"></xref> method in the sort order.</p>\n</td></tr><tr><td>\n<p>Zero </p>\n</td><td>\n<p>This current instance occurs in the same position in the sort order as the object specified by the <xref href=\"System.IComparable.CompareTo(System.Object)\" data-throw-if-not-resolved=\"false\"></xref> method. </p>\n</td></tr><tr><td>\n<p>Greater than zero </p>\n</td><td>\n<p>This current instance follows the object specified by the <xref href=\"System.IComparable.CompareTo(System.Object)\" data-throw-if-not-resolved=\"false\"></xref> method in the sort order. </p>\n</td></tr></tbody></table>\n<p>All numeric types (such as <xref href=\"System.Int32\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"System.Double\" data-throw-if-not-resolved=\"false\"></xref>) implement <xref href=\"System.IComparable\" data-throw-if-not-resolved=\"false\"></xref>, as do <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref>, <xref href=\"System.Char\" data-throw-if-not-resolved=\"false\"></xref>, and <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref>. Custom types should also provide their own implementation of <xref href=\"System.IComparable\" data-throw-if-not-resolved=\"false\"></xref> to enable object instances to be ordered or sorted.</p>\n"
  example:
  - "\n<p>The following example illustrates the implementation of <xref href=\"System.IComparable\" data-throw-if-not-resolved=\"false\"></xref> and the requisite <xref href=\"System.IComparable.CompareTo(System.Object)\" data-throw-if-not-resolved=\"false\"></xref> method.</p>IComparable Example#1"
  syntax:
    content: >-
      [ComVisible(true)]

      public interface IComparable
    content.vb: >-
      <ComVisible(True)>

      Public Interface IComparable
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: System.IComparable.CompareTo(System.Object)
  commentId: M:System.IComparable.CompareTo(System.Object)
  id: CompareTo(System.Object)
  parent: System.IComparable
  langs:
  - csharp
  - vb
  name: CompareTo(Object)
  fullName: System.IComparable.CompareTo(System.Object)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/IComparable.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: CompareTo
    path: src/mscorlib/src/System/IComparable.cs
    startLine: 22
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Compares the current instance with another object of the same type and returns an integer that indicates whether the current instance precedes, follows, or occurs in the same position in the sort order as the other object.</p>\n"
  remarks: "\n<p>The <xref href=\"System.IComparable.CompareTo(System.Object)\" data-throw-if-not-resolved=\"false\"></xref> method is implemented by types whose values can be ordered or sorted. It is called automatically by methods of non-generic collection objects, such as <xref href=\"System.Array.Sort(System.Array)\" data-throw-if-not-resolved=\"false\"></xref>, to order each member of the array. If a custom class or structure does not implement <xref href=\"System.IComparable\" data-throw-if-not-resolved=\"false\"></xref>, its members cannot be ordered and the sort operation can throw an <xref href=\"System.InvalidOperationException\" data-throw-if-not-resolved=\"false\"></xref>. </p>\n<p>This method is only a definition and must be implemented by a specific class or value type to have effect. The meaning of the comparisons specified in the Return Value section (\"precedes\", \"occurs in the same position as\", and \"follows\") depends on the particular implementation.</p>\n<p>By definition, any object compares greater than (or follows) <strong>null</strong>, and two null references compare equal to each other.</p>\n<p>The parameter, <em>obj</em>, must be the same type as the class or value type that implements this interface; otherwise, an <xref href=\"System.ArgumentException\" data-throw-if-not-resolved=\"false\"></xref> is thrown.</p>\n"
  example:
  - "\n<p>The following example illustrates the use of <xref href=\"System.IComparable.CompareTo(System.Object)\" data-throw-if-not-resolved=\"false\"></xref> to compare a <code>Temperature</code> object implementing <xref href=\"System.IComparable\" data-throw-if-not-resolved=\"false\"></xref> with another object. The <code>Temperature</code>object implements <xref href=\"System.IComparable.CompareTo(System.Object)\" data-throw-if-not-resolved=\"false\"></xref> by simply wrapping a call to the <xref href=\"System.Int32.CompareTo(System.Int32)\" data-throw-if-not-resolved=\"false\"></xref> method.</p>IComparable Example#1"
  syntax:
    content: int CompareTo(object obj)
    content.vb: Function CompareTo(obj As Object) As Integer
    parameters:
    - id: obj
      type: System.Object
    return:
      type: System.Int32
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<p>\n<em>obj</em> is not the same type as this instance. </p>\n"
  seealso:
  - type: System.Object
    commentId: T:System.Object
references:
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  fullName: System.Int32
- uid: System.ArgumentException
  parent: System
  isExternal: false
  name: ArgumentException
  fullName: System.ArgumentException
