items:
- uid: System.Collections.Generic.SortedDictionary`2.Enumerator
  commentId: T:System.Collections.Generic.SortedDictionary`2.Enumerator
  id: SortedDictionary`2.Enumerator
  parent: System.Collections.Generic
  children:
  - System.Collections.Generic.SortedDictionary`2.Enumerator.Current
  - System.Collections.Generic.SortedDictionary`2.Enumerator.Dispose
  - System.Collections.Generic.SortedDictionary`2.Enumerator.MoveNext
  langs:
  - csharp
  - vb
  name: SortedDictionary<TKey, TValue>.Enumerator
  fullName: System.Collections.Generic.SortedDictionary<TKey, TValue>.Enumerator
  type: Struct
  source:
    remote:
      path: src/System.Collections/src/System/Collections/Generic/SortedDictionary.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Enumerator
    path: src/System.Collections/src/System/Collections/Generic/SortedDictionary.cs
    startLine: 440
  assemblies:
  - System.Collections
  namespace: System.Collections.Generic
  summary: Enumerates the elements of a <xref href="System.Collections.Generic.SortedDictionary`2" data-throw-if-not-resolved="false"></xref>.
  syntax:
    content: 'public struct Enumerator : IEnumerator<KeyValuePair<TKey, TValue>>, IDictionaryEnumerator, IEnumerator, IDisposable'
    content.vb: >-
      Public Structure Enumerator
          Implements IEnumerator(Of KeyValuePair(Of TKey, TValue)), IDictionaryEnumerator, IEnumerator, IDisposable
  implements:
  - System.Collections.Generic.IEnumerator{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}
  - System.Collections.IDictionaryEnumerator
  - System.Collections.IEnumerator
  - System.IDisposable
  modifiers.csharp:
  - public
  - struct
  modifiers.vb:
  - Public
  - Structure
  fullName.vb: System.Collections.Generic.SortedDictionary(Of TKey, TValue).Enumerator
  name.vb: SortedDictionary(Of TKey, TValue).Enumerator
- uid: System.Collections.Generic.SortedDictionary`2.Enumerator.Current
  commentId: P:System.Collections.Generic.SortedDictionary`2.Enumerator.Current
  id: Current
  parent: System.Collections.Generic.SortedDictionary`2.Enumerator
  langs:
  - csharp
  - vb
  name: Current
  fullName: System.Collections.Generic.SortedDictionary<TKey, TValue>.Enumerator.Current
  type: Property
  source:
    remote:
      path: src/System.Collections/src/System/Collections/Generic/SortedDictionary.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Current
    path: src/System.Collections/src/System/Collections/Generic/SortedDictionary.cs
    startLine: 465
  assemblies:
  - System.Collections
  namespace: System.Collections.Generic
  summary: Gets the element at the current position of the enumerator.
  syntax:
    content: public KeyValuePair<TKey, TValue> Current { get; }
    content.vb: Public ReadOnly Property Current As KeyValuePair(Of TKey, TValue)
    parameters: []
    return:
      type: System.Collections.Generic.KeyValuePair{{TKey},{TValue}}
      description: The element in the <xref href="System.Collections.Generic.SortedDictionary`2" data-throw-if-not-resolved="false"></xref> at the current position of the enumerator.
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: System.Collections.Generic.SortedDictionary(Of TKey, TValue).Enumerator.Current
- uid: System.Collections.Generic.SortedDictionary`2.Enumerator.Dispose
  commentId: M:System.Collections.Generic.SortedDictionary`2.Enumerator.Dispose
  id: Dispose
  parent: System.Collections.Generic.SortedDictionary`2.Enumerator
  langs:
  - csharp
  - vb
  name: Dispose()
  fullName: System.Collections.Generic.SortedDictionary<TKey, TValue>.Enumerator.Dispose()
  type: Method
  source:
    remote:
      path: src/System.Collections/src/System/Collections/Generic/SortedDictionary.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Dispose
    path: src/System.Collections/src/System/Collections/Generic/SortedDictionary.cs
    startLine: 460
  assemblies:
  - System.Collections
  namespace: System.Collections.Generic
  summary: Releases all resources used by the <xref href="System.Collections.Generic.SortedDictionary`2.Enumerator" data-throw-if-not-resolved="false"></xref>.
  syntax:
    content: public void Dispose()
    content.vb: Public Sub Dispose
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Collections.Generic.SortedDictionary(Of TKey, TValue).Enumerator.Dispose()
- uid: System.Collections.Generic.SortedDictionary`2.Enumerator.MoveNext
  commentId: M:System.Collections.Generic.SortedDictionary`2.Enumerator.MoveNext
  id: MoveNext
  parent: System.Collections.Generic.SortedDictionary`2.Enumerator
  langs:
  - csharp
  - vb
  name: MoveNext()
  fullName: System.Collections.Generic.SortedDictionary<TKey, TValue>.Enumerator.MoveNext()
  type: Method
  source:
    remote:
      path: src/System.Collections/src/System/Collections/Generic/SortedDictionary.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: MoveNext
    path: src/System.Collections/src/System/Collections/Generic/SortedDictionary.cs
    startLine: 455
  assemblies:
  - System.Collections
  namespace: System.Collections.Generic
  summary: Advances the enumerator to the next element of the <xref href="System.Collections.Generic.SortedDictionary`2" data-throw-if-not-resolved="false"></xref>.
  syntax:
    content: public bool MoveNext()
    content.vb: Public Function MoveNext As Boolean
    return:
      type: System.Boolean
      description: true if the enumerator was successfully advanced to the next element; false if the enumerator has passed the end of the collection.
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: 'The collection was modified after the enumerator was created. '
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Collections.Generic.SortedDictionary(Of TKey, TValue).Enumerator.MoveNext()
references:
- uid: System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Collections.Generic.IEnumerator{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}
  definition: System.Collections.Generic.IEnumerator`1
  name: Generic.IEnumerator<Generic.KeyValuePair<TKey, TValue>>
  fullName: System.Collections.Generic.IEnumerator<System.Collections.Generic.KeyValuePair<TKey, TValue>>
  fullname.vb: System.Collections.Generic.IEnumerator(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))
  name.vb: Generic.IEnumerator(Of Generic.KeyValuePair(Of TKey, TValue))
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: Generic.IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: Generic.KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: Generic.IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.KeyValuePair`2
    name: Generic.KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: )
    fullName: )
  - name: )
    fullName: )
- uid: System.Collections.IDictionaryEnumerator
  parent: System.Collections
  isExternal: false
  name: IDictionaryEnumerator
  fullName: System.Collections.IDictionaryEnumerator
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: false
  name: Collections.IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.IDisposable
  parent: System
  isExternal: false
  name: IDisposable
  fullName: System.IDisposable
- uid: System.Collections.Generic.IEnumerator`1
  parent: System.Collections.Generic
  isExternal: false
  name: Generic.IEnumerator<>
  fullName: System.Collections.Generic.IEnumerator<>
  fullname.vb: System.Collections.Generic.IEnumerator(Of )
  name.vb: Generic.IEnumerator(Of )
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: Generic.IEnumerator
    fullName: System.Collections.Generic.IEnumerator
  - name: <
    fullName: <
  - {}
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: Generic.IEnumerator
    fullName: System.Collections.Generic.IEnumerator
  - name: '(Of '
    fullName: '(Of '
  - {}
  - name: )
    fullName: )
- uid: System.Collections
  isExternal: false
  name: System.Collections
  fullName: System.Collections
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Collections.Generic.KeyValuePair{{TKey},{TValue}}
  definition: System.Collections.Generic.KeyValuePair`2
  name: KeyValuePair<TKey, TValue>
  fullName: System.Collections.Generic.KeyValuePair<TKey, TValue>
  fullname.vb: System.Collections.Generic.KeyValuePair(Of TKey, TValue)
  name.vb: KeyValuePair(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: )
    fullName: )
- uid: System.Collections.Generic.KeyValuePair`2
  isExternal: false
  name: KeyValuePair<, >
  fullName: System.Collections.Generic.KeyValuePair<, >
  fullname.vb: System.Collections.Generic.KeyValuePair(Of , )
  name.vb: KeyValuePair(Of , )
  spec.csharp:
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
  - name: <
    fullName: <
  - {}
  - name: ', '
    fullName: ', '
  - {}
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
  - name: '(Of '
    fullName: '(Of '
  - {}
  - name: ', '
    fullName: ', '
  - {}
  - name: )
    fullName: )
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  fullName: System.Boolean
- uid: System.InvalidOperationException
  parent: System
  isExternal: false
  name: InvalidOperationException
  fullName: System.InvalidOperationException
