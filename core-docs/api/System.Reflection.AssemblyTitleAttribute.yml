items:
- uid: System.Reflection.AssemblyTitleAttribute
  commentId: T:System.Reflection.AssemblyTitleAttribute
  id: AssemblyTitleAttribute
  parent: System.Reflection
  children:
  - System.Reflection.AssemblyTitleAttribute.#ctor(System.String)
  - System.Reflection.AssemblyTitleAttribute.Title
  langs:
  - csharp
  - vb
  name: AssemblyTitleAttribute
  fullName: System.Reflection.AssemblyTitleAttribute
  type: Class
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: AssemblyTitleAttribute
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 2767
  assemblies:
  - System.Runtime
  namespace: System.Reflection
  summary: "\n<p>Specifies a description for an assembly.</p>\n"
  remarks: "\n<p>The assembly title is a friendly name, which can include spaces.</p>\n<p>In Windows Vista, the information specified for this attribute appears on the Details tab of the Windows File Properties dialog box for the assembly. The property name is File description. In Windows XP, this information appears on the Version tab of the Windows File Properties dialog box. </p>\n"
  example:
  - "\n<p>The following example shows how to add attributes, including the <xref href=\"System.Reflection.AssemblyTitleAttribute\" data-throw-if-not-resolved=\"false\"></xref> attribute, to a dynamic assembly. The example saves the assembly to disk, and the attribute value can be viewed by using the Windows File Properties dialog box.</p>AssemblyBuilder_DefineVersionInfoResource#1"
  syntax:
    content: >-
      [AttributeUsage(AttributeTargets.Assembly, Inherited = false)]

      public sealed class AssemblyTitleAttribute : Attribute
    content.vb: >-
      <AttributeUsage(AttributeTargets.Assembly, Inherited:=False)>

      Public NotInheritable Class AssemblyTitleAttribute
          Inherits Attribute
  inheritance:
  - System.Object
  - System.Attribute
  inheritedMembers:
  - System.Attribute.Equals(System.Object)
  - System.Attribute.GetHashCode
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  attributes:
  - type: System.AttributeUsageAttribute
    ctor: System.AttributeUsageAttribute.#ctor(System.AttributeTargets)
    arguments:
    - type: System.AttributeTargets
      value: 1
    namedArguments:
    - name: Inherited
      type: System.Boolean
      value: false
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: System.Reflection.AssemblyTitleAttribute.#ctor(System.String)
  commentId: M:System.Reflection.AssemblyTitleAttribute.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Reflection.AssemblyTitleAttribute
  langs:
  - csharp
  - vb
  name: AssemblyTitleAttribute(String)
  fullName: System.Reflection.AssemblyTitleAttribute.AssemblyTitleAttribute(System.String)
  type: Constructor
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 2770
  assemblies:
  - System.Runtime
  namespace: System.Reflection
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Reflection.AssemblyTitleAttribute\" data-throw-if-not-resolved=\"false\"></xref> class.</p>\n"
  remarks: "\n<p>In Windows Vista, the string specified for the <em>title</em> parameter appears on the Details tab of the Windows File Properties dialog box for the assembly. The property name is File description. In Windows XP, this string appears on the Version tab of the Windows File Properties dialog box.</p>\n"
  syntax:
    content: public AssemblyTitleAttribute(string title)
    content.vb: Public Sub New(title As String)
    parameters:
    - id: title
      type: System.String
      description: "\n<p>The assembly title. </p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Reflection.AssemblyTitleAttribute.Title
  commentId: P:System.Reflection.AssemblyTitleAttribute.Title
  id: Title
  parent: System.Reflection.AssemblyTitleAttribute
  langs:
  - csharp
  - vb
  name: Title
  fullName: System.Reflection.AssemblyTitleAttribute.Title
  type: Property
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Title
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 2771
  assemblies:
  - System.Runtime
  namespace: System.Reflection
  summary: "\n<p>Gets assembly title information.</p>\n"
  remarks: "\n<p>In Windows Vista, the value of the <xref href=\"System.Reflection.AssemblyTitleAttribute.Title\" data-throw-if-not-resolved=\"false\"></xref> property appears on the Details tab of the Windows File Properties dialog box for the assembly. The property name is File description. In Windows XP, this property appears on the Version tab of the Windows File Properties dialog box. </p>\n"
  syntax:
    content: public string Title { get; }
    content.vb: Public ReadOnly Property Title As String
    parameters: []
    return:
      type: System.String
      description: "\n<p>The assembly title.</p>\n"
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: System.Reflection
  isExternal: false
  name: System.Reflection
  fullName: System.Reflection
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System.Attribute
  parent: System
  isExternal: false
  name: Attribute
  fullName: System.Attribute
- uid: System.Attribute.Equals(System.Object)
  parent: System.Attribute
  isExternal: false
  name: Equals(Object)
  fullName: System.Attribute.Equals(System.Object)
  spec.csharp:
  - uid: System.Attribute.Equals(System.Object)
    name: Equals
    fullName: System.Attribute.Equals
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Attribute.Equals(System.Object)
    name: Equals
    fullName: System.Attribute.Equals
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
  - name: )
    fullName: )
- uid: System.Attribute.GetHashCode
  parent: System.Attribute
  isExternal: false
  name: GetHashCode()
  fullName: System.Attribute.GetHashCode()
  spec.csharp:
  - uid: System.Attribute.GetHashCode
    name: GetHashCode
    fullName: System.Attribute.GetHashCode
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Attribute.GetHashCode
    name: GetHashCode
    fullName: System.Attribute.GetHashCode
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: false
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: false
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
  - name: )
    fullName: )
- uid: System.Object.ToString
  parent: System.Object
  isExternal: false
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.String
  parent: System
  isExternal: false
  name: String
  fullName: System.String
