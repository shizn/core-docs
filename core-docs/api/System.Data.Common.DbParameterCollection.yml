items:
- uid: System.Data.Common.DbParameterCollection
  commentId: T:System.Data.Common.DbParameterCollection
  id: DbParameterCollection
  parent: System.Data.Common
  children:
  - System.Data.Common.DbParameterCollection.#ctor
  - System.Data.Common.DbParameterCollection.Add(System.Object)
  - System.Data.Common.DbParameterCollection.AddRange(System.Array)
  - System.Data.Common.DbParameterCollection.Clear
  - System.Data.Common.DbParameterCollection.Contains(System.Object)
  - System.Data.Common.DbParameterCollection.Contains(System.String)
  - System.Data.Common.DbParameterCollection.CopyTo(System.Array,System.Int32)
  - System.Data.Common.DbParameterCollection.Count
  - System.Data.Common.DbParameterCollection.GetEnumerator
  - System.Data.Common.DbParameterCollection.GetParameter(System.Int32)
  - System.Data.Common.DbParameterCollection.GetParameter(System.String)
  - System.Data.Common.DbParameterCollection.IndexOf(System.Object)
  - System.Data.Common.DbParameterCollection.IndexOf(System.String)
  - System.Data.Common.DbParameterCollection.Insert(System.Int32,System.Object)
  - System.Data.Common.DbParameterCollection.Item(System.Int32)
  - System.Data.Common.DbParameterCollection.Item(System.String)
  - System.Data.Common.DbParameterCollection.Remove(System.Object)
  - System.Data.Common.DbParameterCollection.RemoveAt(System.Int32)
  - System.Data.Common.DbParameterCollection.RemoveAt(System.String)
  - System.Data.Common.DbParameterCollection.SetParameter(System.Int32,System.Data.Common.DbParameter)
  - System.Data.Common.DbParameterCollection.SetParameter(System.String,System.Data.Common.DbParameter)
  - System.Data.Common.DbParameterCollection.SyncRoot
  - System.Data.Common.DbParameterCollection.System#Collections#ICollection#IsSynchronized
  - System.Data.Common.DbParameterCollection.System#Collections#IList#IsFixedSize
  - System.Data.Common.DbParameterCollection.System#Collections#IList#IsReadOnly
  - System.Data.Common.DbParameterCollection.System#Collections#IList#Item(System.Int32)
  - System.Data.Common.DbParameterCollection.System#Data#IDataParameterCollection#Item(System.String)
  langs:
  - csharp
  - vb
  name: DbParameterCollection
  fullName: System.Data.Common.DbParameterCollection
  type: Class
  source:
    remote:
      path: src/System.Data.Common/src/System/Data/Common/DbParameterCollection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: DbParameterCollection
    path: src/System.Data.Common/src/System/Data/Common/DbParameterCollection.cs
    startLine: 14
  assemblies:
  - System.Data.Common
  namespace: System.Data.Common
  summary: "\n<p>The base class for a collection of parameters relevant to a <xref href=\"System.Data.Common.DbCommand\" data-throw-if-not-resolved=\"false\"></xref>. </p>\n"
  syntax:
    content: 'public abstract class DbParameterCollection : IDataParameterCollection, IList, ICollection, IEnumerable'
    content.vb: >-
      Public MustInherit Class DbParameterCollection
          Implements IDataParameterCollection, IList, ICollection, IEnumerable
  inheritance:
  - System.Object
  implements:
  - System.Data.IDataParameterCollection
  - System.Collections.IList
  - System.Collections.ICollection
  - System.Collections.IEnumerable
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: System.Data.Common.DbParameterCollection.#ctor
  commentId: M:System.Data.Common.DbParameterCollection.#ctor
  id: '#ctor'
  parent: System.Data.Common.DbParameterCollection
  langs:
  - csharp
  - vb
  name: DbParameterCollection()
  fullName: System.Data.Common.DbParameterCollection.DbParameterCollection()
  type: Constructor
  source:
    remote:
      path: src/System.Data.Common/src/System/Data/Common/DbParameterCollection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Data.Common/src/System/Data/Common/DbParameterCollection.cs
    startLine: 17
  assemblies:
  - System.Data.Common
  namespace: System.Data.Common
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Data.Common.DbParameterCollection\" data-throw-if-not-resolved=\"false\"></xref> class.</p>\n"
  example:
  - 
  syntax:
    content: protected DbParameterCollection()
    content.vb: Protected Sub New
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: System.Data.Common.DbParameterCollection.Count
  commentId: P:System.Data.Common.DbParameterCollection.Count
  id: Count
  parent: System.Data.Common.DbParameterCollection
  langs:
  - csharp
  - vb
  name: Count
  fullName: System.Data.Common.DbParameterCollection.Count
  type: Property
  source:
    remote:
      path: src/System.Data.Common/src/System/Data/Common/DbParameterCollection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Count
    path: src/System.Data.Common/src/System/Data/Common/DbParameterCollection.cs
    startLine: 21
  assemblies:
  - System.Data.Common
  namespace: System.Data.Common
  summary: "\n<p>Specifies the number of items in the collection.</p>\n"
  example:
  - 
  syntax:
    content: public abstract int Count { get; }
    content.vb: Public MustOverride ReadOnly Property Count As Integer
    parameters: []
    return:
      type: System.Int32
  implements:
  - System.Collections.ICollection.Count
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
- uid: System.Data.Common.DbParameterCollection.Item(System.Int32)
  commentId: P:System.Data.Common.DbParameterCollection.Item(System.Int32)
  id: Item(System.Int32)
  parent: System.Data.Common.DbParameterCollection
  langs:
  - csharp
  - vb
  name: Item[Int32]
  fullName: System.Data.Common.DbParameterCollection.Item[System.Int32]
  type: Property
  source:
    remote:
      path: src/System.Data.Common/src/System/Data/Common/DbParameterCollection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: this[]
    path: src/System.Data.Common/src/System/Data/Common/DbParameterCollection.cs
    startLine: 71
  assemblies:
  - System.Data.Common
  namespace: System.Data.Common
  summary: "\n<p>Gets and sets the <xref href=\"System.Data.Common.DbParameter\" data-throw-if-not-resolved=\"false\"></xref> at the specified index.</p>\n"
  example:
  - 
  syntax:
    content: public DbParameter this[int index] { get; set; }
    content.vb: Public Property Item(index As Integer) As DbParameter
    parameters:
    - id: index
      type: System.Int32
    return:
      type: System.Data.Common.DbParameter
  exceptions:
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: "\n<p>The specified index does not exist. </p>\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: System.Data.Common.DbParameterCollection.Item(System.Int32)
  name.vb: Item(Int32)
- uid: System.Data.Common.DbParameterCollection.Item(System.String)
  commentId: P:System.Data.Common.DbParameterCollection.Item(System.String)
  id: Item(System.String)
  parent: System.Data.Common.DbParameterCollection
  langs:
  - csharp
  - vb
  name: Item[String]
  fullName: System.Data.Common.DbParameterCollection.Item[System.String]
  type: Property
  source:
    remote:
      path: src/System.Data.Common/src/System/Data/Common/DbParameterCollection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: this[]
    path: src/System.Data.Common/src/System/Data/Common/DbParameterCollection.cs
    startLine: 83
  assemblies:
  - System.Data.Common
  namespace: System.Data.Common
  summary: "\n<p>Gets and sets the <xref href=\"System.Data.Common.DbParameter\" data-throw-if-not-resolved=\"false\"></xref> with the specified name.</p>\n"
  example:
  - 
  syntax:
    content: public DbParameter this[string parameterName] { get; set; }
    content.vb: Public Property Item(parameterName As String) As DbParameter
    parameters:
    - id: parameterName
      type: System.String
    return:
      type: System.Data.Common.DbParameter
  exceptions:
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: "\n<p>The specified index does not exist. </p>\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: System.Data.Common.DbParameterCollection.Item(System.String)
  name.vb: Item(String)
- uid: System.Data.Common.DbParameterCollection.SyncRoot
  commentId: P:System.Data.Common.DbParameterCollection.SyncRoot
  id: SyncRoot
  parent: System.Data.Common.DbParameterCollection
  langs:
  - csharp
  - vb
  name: SyncRoot
  fullName: System.Data.Common.DbParameterCollection.SyncRoot
  type: Property
  source:
    remote:
      path: src/System.Data.Common/src/System/Data/Common/DbParameterCollection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: SyncRoot
    path: src/System.Data.Common/src/System/Data/Common/DbParameterCollection.cs
    startLine: 41
  assemblies:
  - System.Data.Common
  namespace: System.Data.Common
  summary: "\n<p>Specifies the <xref href=\"System.Object\" data-throw-if-not-resolved=\"false\"></xref> to be used to synchronize access to the collection.</p>\n"
  example:
  - 
  syntax:
    content: public abstract object SyncRoot { get; }
    content.vb: Public MustOverride ReadOnly Property SyncRoot As Object
    parameters: []
    return:
      type: System.Object
  implements:
  - System.Collections.ICollection.SyncRoot
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
- uid: System.Data.Common.DbParameterCollection.System#Collections#IList#Item(System.Int32)
  commentId: P:System.Data.Common.DbParameterCollection.System#Collections#IList#Item(System.Int32)
  id: System#Collections#IList#Item(System.Int32)
  isEii: true
  parent: System.Data.Common.DbParameterCollection
  langs:
  - csharp
  - vb
  name: IList.Item[Int32]
  fullName: System.Data.Common.DbParameterCollection.System.Collections.IList.Item[System.Int32]
  type: Property
  source:
    remote:
      path: src/System.Data.Common/src/System/Data/Common/DbParameterCollection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: System.Collections.IList.this[]
    path: src/System.Data.Common/src/System/Data/Common/DbParameterCollection.cs
    startLine: 58
  assemblies:
  - System.Data.Common
  namespace: System.Data.Common
  summary: "\n<p>Gets or sets the element at the specified index.</p>\n"
  remarks: "\n<p>This member is an explicit interface member implementation. It can be used only when the <xref href=\"System.Data.Common.DbParameterCollection\" data-throw-if-not-resolved=\"false\"></xref> instance is cast to an <xref href=\"System.Collections.IList\" data-throw-if-not-resolved=\"false\"></xref> interface.</p>\n<p>For more information, see <xref href=\"System.Collections.IList.Item(System.Int32)\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  example:
  - "\n<p></p>\n<p></p>\n<p></p>\n"
  syntax:
    content: object IList.this[int index] { get; set; }
    content.vb: ReadOnly WriteOnly Property System.Collections.IList.Item(index As Integer) As Object Implements IList.this
    parameters:
    - id: index
      type: System.Int32
    return:
      type: System.Object
  implements:
  - System.Collections.IList.Item(System.Int32)
  modifiers.csharp:
  - get
  - set
  fullName.vb: System.Data.Common.DbParameterCollection.System.Collections.IList.Item(System.Int32)
  name.vb: System.Collections.IList.Item(Int32)
- uid: System.Data.Common.DbParameterCollection.System#Data#IDataParameterCollection#Item(System.String)
  commentId: P:System.Data.Common.DbParameterCollection.System#Data#IDataParameterCollection#Item(System.String)
  id: System#Data#IDataParameterCollection#Item(System.String)
  isEii: true
  parent: System.Data.Common.DbParameterCollection
  langs:
  - csharp
  - vb
  name: IDataParameterCollection.Item[String]
  fullName: System.Data.Common.DbParameterCollection.System.Data.IDataParameterCollection.Item[System.String]
  type: Property
  source:
    remote:
      path: src/System.Data.Common/src/System/Data/Common/DbParameterCollection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: System.Data.IDataParameterCollection.this[]
    path: src/System.Data.Common/src/System/Data/Common/DbParameterCollection.cs
    startLine: 46
  assemblies:
  - System.Data.Common
  namespace: System.Data.Common
  summary: "\n<p>Gets or sets the parameter at the specified index.</p>\n"
  remarks: "\n<p>This member is an explicit interface member implementation. It can be used only when the <xref href=\"System.Data.Common.DbParameterCollection\" data-throw-if-not-resolved=\"false\"></xref> instance is cast to an <xref href=\"System.Data.IDataParameterCollection\" data-throw-if-not-resolved=\"false\"></xref> interface.</p>\n<p>For more information, see <xref href=\"System.Data.IDataParameterCollection.Item(System.String)\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  example:
  - "\n<p></p>\n<p></p>\n"
  syntax:
    content: object IDataParameterCollection.this[string parameterName] { get; set; }
    content.vb: ReadOnly WriteOnly Property System.Data.IDataParameterCollection.Item(parameterName As String) As Object Implements IDataParameterCollection.this
    parameters:
    - id: parameterName
      type: System.String
    return:
      type: System.Object
  implements:
  - System.Data.IDataParameterCollection.Item(System.String)
  modifiers.csharp:
  - get
  - set
  fullName.vb: System.Data.Common.DbParameterCollection.System.Data.IDataParameterCollection.Item(System.String)
  name.vb: System.Data.IDataParameterCollection.Item(String)
- uid: System.Data.Common.DbParameterCollection.Add(System.Object)
  commentId: M:System.Data.Common.DbParameterCollection.Add(System.Object)
  id: Add(System.Object)
  parent: System.Data.Common.DbParameterCollection
  langs:
  - csharp
  - vb
  name: Add(Object)
  fullName: System.Data.Common.DbParameterCollection.Add(System.Object)
  type: Method
  source:
    remote:
      path: src/System.Data.Common/src/System/Data/Common/DbParameterCollection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Add
    path: src/System.Data.Common/src/System/Data/Common/DbParameterCollection.cs
    startLine: 95
  assemblies:
  - System.Data.Common
  namespace: System.Data.Common
  summary: "\n<p>Adds the specified <xref href=\"System.Data.Common.DbParameter\" data-throw-if-not-resolved=\"false\"></xref> object to the <xref href=\"System.Data.Common.DbParameterCollection\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  example:
  - 
  syntax:
    content: public abstract int Add(object value)
    content.vb: Public MustOverride Function Add(value As Object) As Integer
    parameters:
    - id: value
      type: System.Object
    return:
      type: System.Int32
  implements:
  - System.Collections.IList.Add(System.Object)
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: System.Data.Common.DbParameterCollection.AddRange(System.Array)
  commentId: M:System.Data.Common.DbParameterCollection.AddRange(System.Array)
  id: AddRange(System.Array)
  parent: System.Data.Common.DbParameterCollection
  langs:
  - csharp
  - vb
  name: AddRange(Array)
  fullName: System.Data.Common.DbParameterCollection.AddRange(System.Array)
  type: Method
  source:
    remote:
      path: src/System.Data.Common/src/System/Data/Common/DbParameterCollection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: AddRange
    path: src/System.Data.Common/src/System/Data/Common/DbParameterCollection.cs
    startLine: 97
  assemblies:
  - System.Data.Common
  namespace: System.Data.Common
  summary: "\n<p>Adds an array of items with the specified values to the <xref href=\"System.Data.Common.DbParameterCollection\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  example:
  - 
  syntax:
    content: public abstract void AddRange(Array values)
    content.vb: Public MustOverride Sub AddRange(values As Array)
    parameters:
    - id: values
      type: System.Array
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: System.Data.Common.DbParameterCollection.Clear
  commentId: M:System.Data.Common.DbParameterCollection.Clear
  id: Clear
  parent: System.Data.Common.DbParameterCollection
  langs:
  - csharp
  - vb
  name: Clear()
  fullName: System.Data.Common.DbParameterCollection.Clear()
  type: Method
  source:
    remote:
      path: src/System.Data.Common/src/System/Data/Common/DbParameterCollection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Clear
    path: src/System.Data.Common/src/System/Data/Common/DbParameterCollection.cs
    startLine: 105
  assemblies:
  - System.Data.Common
  namespace: System.Data.Common
  summary: "\n<p>Removes all <xref href=\"System.Data.Common.DbParameter\" data-throw-if-not-resolved=\"false\"></xref> values from the <xref href=\"System.Data.Common.DbParameterCollection\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  example:
  - 
  syntax:
    content: public abstract void Clear()
    content.vb: Public MustOverride Sub Clear
  implements:
  - System.Collections.IList.Clear
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: System.Data.Common.DbParameterCollection.Contains(System.Object)
  commentId: M:System.Data.Common.DbParameterCollection.Contains(System.Object)
  id: Contains(System.Object)
  parent: System.Data.Common.DbParameterCollection
  langs:
  - csharp
  - vb
  name: Contains(Object)
  fullName: System.Data.Common.DbParameterCollection.Contains(System.Object)
  type: Method
  source:
    remote:
      path: src/System.Data.Common/src/System/Data/Common/DbParameterCollection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Contains
    path: src/System.Data.Common/src/System/Data/Common/DbParameterCollection.cs
    startLine: 99
  assemblies:
  - System.Data.Common
  namespace: System.Data.Common
  summary: "\n<p>Indicates whether a <xref href=\"System.Data.Common.DbParameter\" data-throw-if-not-resolved=\"false\"></xref> with the specified <xref href=\"System.Data.Common.DbParameter.Value\" data-throw-if-not-resolved=\"false\"></xref> is contained in the collection.</p>\n"
  example:
  - 
  syntax:
    content: public abstract bool Contains(object value)
    content.vb: Public MustOverride Function Contains(value As Object) As Boolean
    parameters:
    - id: value
      type: System.Object
    return:
      type: System.Boolean
  implements:
  - System.Collections.IList.Contains(System.Object)
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: System.Data.Common.DbParameterCollection.Contains(System.String)
  commentId: M:System.Data.Common.DbParameterCollection.Contains(System.String)
  id: Contains(System.String)
  parent: System.Data.Common.DbParameterCollection
  langs:
  - csharp
  - vb
  name: Contains(String)
  fullName: System.Data.Common.DbParameterCollection.Contains(System.String)
  type: Method
  source:
    remote:
      path: src/System.Data.Common/src/System/Data/Common/DbParameterCollection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Contains
    path: src/System.Data.Common/src/System/Data/Common/DbParameterCollection.cs
    startLine: 101
  assemblies:
  - System.Data.Common
  namespace: System.Data.Common
  summary: "\n<p>Indicates whether a <xref href=\"System.Data.Common.DbParameter\" data-throw-if-not-resolved=\"false\"></xref> with the specified name exists in the collection.</p>\n"
  example:
  - 
  syntax:
    content: public abstract bool Contains(string value)
    content.vb: Public MustOverride Function Contains(value As String) As Boolean
    parameters:
    - id: value
      type: System.String
    return:
      type: System.Boolean
  implements:
  - System.Data.IDataParameterCollection.Contains(System.String)
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: System.Data.Common.DbParameterCollection.CopyTo(System.Array,System.Int32)
  commentId: M:System.Data.Common.DbParameterCollection.CopyTo(System.Array,System.Int32)
  id: CopyTo(System.Array,System.Int32)
  parent: System.Data.Common.DbParameterCollection
  langs:
  - csharp
  - vb
  name: CopyTo(Array, Int32)
  fullName: System.Data.Common.DbParameterCollection.CopyTo(System.Array, System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Data.Common/src/System/Data/Common/DbParameterCollection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CopyTo
    path: src/System.Data.Common/src/System/Data/Common/DbParameterCollection.cs
    startLine: 103
  assemblies:
  - System.Data.Common
  namespace: System.Data.Common
  summary: "\n<p>Copies an array of items to the collection starting at the specified index.</p>\n"
  example:
  - 
  syntax:
    content: public abstract void CopyTo(Array array, int index)
    content.vb: Public MustOverride Sub CopyTo(array As Array, index As Integer)
    parameters:
    - id: array
      type: System.Array
    - id: index
      type: System.Int32
  implements:
  - System.Collections.ICollection.CopyTo(System.Array,System.Int32)
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: System.Data.Common.DbParameterCollection.GetEnumerator
  commentId: M:System.Data.Common.DbParameterCollection.GetEnumerator
  id: GetEnumerator
  parent: System.Data.Common.DbParameterCollection
  langs:
  - csharp
  - vb
  name: GetEnumerator()
  fullName: System.Data.Common.DbParameterCollection.GetEnumerator()
  type: Method
  source:
    remote:
      path: src/System.Data.Common/src/System/Data/Common/DbParameterCollection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetEnumerator
    path: src/System.Data.Common/src/System/Data/Common/DbParameterCollection.cs
    startLine: 107
  assemblies:
  - System.Data.Common
  namespace: System.Data.Common
  summary: "\n<p>Exposes the <xref href=\"System.Collections.IEnumerable.GetEnumerator\" data-throw-if-not-resolved=\"false\"></xref> method, which supports a simple iteration over a collection by a .NET Framework data provider.</p>\n"
  example:
  - 
  syntax:
    content: public abstract IEnumerator GetEnumerator()
    content.vb: Public MustOverride Function GetEnumerator As IEnumerator
    return:
      type: System.Collections.IEnumerator
  implements:
  - System.Collections.IEnumerable.GetEnumerator
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: System.Data.Common.DbParameterCollection.GetParameter(System.Int32)
  commentId: M:System.Data.Common.DbParameterCollection.GetParameter(System.Int32)
  id: GetParameter(System.Int32)
  parent: System.Data.Common.DbParameterCollection
  langs:
  - csharp
  - vb
  name: GetParameter(Int32)
  fullName: System.Data.Common.DbParameterCollection.GetParameter(System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Data.Common/src/System/Data/Common/DbParameterCollection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetParameter
    path: src/System.Data.Common/src/System/Data/Common/DbParameterCollection.cs
    startLine: 109
  assemblies:
  - System.Data.Common
  namespace: System.Data.Common
  summary: "\n<p>Returns the <xref href=\"System.Data.Common.DbParameter\" data-throw-if-not-resolved=\"false\"></xref> object at the specified index in the collection.</p>\n"
  example:
  - 
  syntax:
    content: protected abstract DbParameter GetParameter(int index)
    content.vb: Protected MustOverride Function GetParameter(index As Integer) As DbParameter
    parameters:
    - id: index
      type: System.Int32
    return:
      type: System.Data.Common.DbParameter
  modifiers.csharp:
  - protected
  - abstract
  modifiers.vb:
  - Protected
  - MustOverride
- uid: System.Data.Common.DbParameterCollection.GetParameter(System.String)
  commentId: M:System.Data.Common.DbParameterCollection.GetParameter(System.String)
  id: GetParameter(System.String)
  parent: System.Data.Common.DbParameterCollection
  langs:
  - csharp
  - vb
  name: GetParameter(String)
  fullName: System.Data.Common.DbParameterCollection.GetParameter(System.String)
  type: Method
  source:
    remote:
      path: src/System.Data.Common/src/System/Data/Common/DbParameterCollection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetParameter
    path: src/System.Data.Common/src/System/Data/Common/DbParameterCollection.cs
    startLine: 111
  assemblies:
  - System.Data.Common
  namespace: System.Data.Common
  summary: "\n<p>Returns <xref href=\"System.Data.Common.DbParameter\" data-throw-if-not-resolved=\"false\"></xref> the object with the specified name.</p>\n"
  example:
  - 
  syntax:
    content: protected abstract DbParameter GetParameter(string parameterName)
    content.vb: Protected MustOverride Function GetParameter(parameterName As String) As DbParameter
    parameters:
    - id: parameterName
      type: System.String
    return:
      type: System.Data.Common.DbParameter
  modifiers.csharp:
  - protected
  - abstract
  modifiers.vb:
  - Protected
  - MustOverride
- uid: System.Data.Common.DbParameterCollection.IndexOf(System.Object)
  commentId: M:System.Data.Common.DbParameterCollection.IndexOf(System.Object)
  id: IndexOf(System.Object)
  parent: System.Data.Common.DbParameterCollection
  langs:
  - csharp
  - vb
  name: IndexOf(Object)
  fullName: System.Data.Common.DbParameterCollection.IndexOf(System.Object)
  type: Method
  source:
    remote:
      path: src/System.Data.Common/src/System/Data/Common/DbParameterCollection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IndexOf
    path: src/System.Data.Common/src/System/Data/Common/DbParameterCollection.cs
    startLine: 113
  assemblies:
  - System.Data.Common
  namespace: System.Data.Common
  summary: "\n<p>Returns the index of the specified <xref href=\"System.Data.Common.DbParameter\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  example:
  - 
  syntax:
    content: public abstract int IndexOf(object value)
    content.vb: Public MustOverride Function IndexOf(value As Object) As Integer
    parameters:
    - id: value
      type: System.Object
    return:
      type: System.Int32
  implements:
  - System.Collections.IList.IndexOf(System.Object)
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: System.Data.Common.DbParameterCollection.IndexOf(System.String)
  commentId: M:System.Data.Common.DbParameterCollection.IndexOf(System.String)
  id: IndexOf(System.String)
  parent: System.Data.Common.DbParameterCollection
  langs:
  - csharp
  - vb
  name: IndexOf(String)
  fullName: System.Data.Common.DbParameterCollection.IndexOf(System.String)
  type: Method
  source:
    remote:
      path: src/System.Data.Common/src/System/Data/Common/DbParameterCollection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IndexOf
    path: src/System.Data.Common/src/System/Data/Common/DbParameterCollection.cs
    startLine: 115
  assemblies:
  - System.Data.Common
  namespace: System.Data.Common
  summary: "\n<p>Returns the index of the <xref href=\"System.Data.Common.DbParameter\" data-throw-if-not-resolved=\"false\"></xref> object with the specified name.</p>\n"
  example:
  - 
  syntax:
    content: public abstract int IndexOf(string parameterName)
    content.vb: Public MustOverride Function IndexOf(parameterName As String) As Integer
    parameters:
    - id: parameterName
      type: System.String
    return:
      type: System.Int32
  implements:
  - System.Data.IDataParameterCollection.IndexOf(System.String)
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: System.Data.Common.DbParameterCollection.Insert(System.Int32,System.Object)
  commentId: M:System.Data.Common.DbParameterCollection.Insert(System.Int32,System.Object)
  id: Insert(System.Int32,System.Object)
  parent: System.Data.Common.DbParameterCollection
  langs:
  - csharp
  - vb
  name: Insert(Int32, Object)
  fullName: System.Data.Common.DbParameterCollection.Insert(System.Int32, System.Object)
  type: Method
  source:
    remote:
      path: src/System.Data.Common/src/System/Data/Common/DbParameterCollection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Insert
    path: src/System.Data.Common/src/System/Data/Common/DbParameterCollection.cs
    startLine: 117
  assemblies:
  - System.Data.Common
  namespace: System.Data.Common
  summary: "\n<p>Inserts the specified index of the <xref href=\"System.Data.Common.DbParameter\" data-throw-if-not-resolved=\"false\"></xref> object with the specified name into the collection at the specified index.</p>\n"
  example:
  - 
  syntax:
    content: public abstract void Insert(int index, object value)
    content.vb: Public MustOverride Sub Insert(index As Integer, value As Object)
    parameters:
    - id: index
      type: System.Int32
    - id: value
      type: System.Object
  implements:
  - System.Collections.IList.Insert(System.Int32,System.Object)
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: System.Data.Common.DbParameterCollection.Remove(System.Object)
  commentId: M:System.Data.Common.DbParameterCollection.Remove(System.Object)
  id: Remove(System.Object)
  parent: System.Data.Common.DbParameterCollection
  langs:
  - csharp
  - vb
  name: Remove(Object)
  fullName: System.Data.Common.DbParameterCollection.Remove(System.Object)
  type: Method
  source:
    remote:
      path: src/System.Data.Common/src/System/Data/Common/DbParameterCollection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Remove
    path: src/System.Data.Common/src/System/Data/Common/DbParameterCollection.cs
    startLine: 119
  assemblies:
  - System.Data.Common
  namespace: System.Data.Common
  summary: "\n<p>Removes the specified <xref href=\"System.Data.Common.DbParameter\" data-throw-if-not-resolved=\"false\"></xref> object from the collection.</p>\n"
  example:
  - 
  syntax:
    content: public abstract void Remove(object value)
    content.vb: Public MustOverride Sub Remove(value As Object)
    parameters:
    - id: value
      type: System.Object
  implements:
  - System.Collections.IList.Remove(System.Object)
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: System.Data.Common.DbParameterCollection.RemoveAt(System.Int32)
  commentId: M:System.Data.Common.DbParameterCollection.RemoveAt(System.Int32)
  id: RemoveAt(System.Int32)
  parent: System.Data.Common.DbParameterCollection
  langs:
  - csharp
  - vb
  name: RemoveAt(Int32)
  fullName: System.Data.Common.DbParameterCollection.RemoveAt(System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Data.Common/src/System/Data/Common/DbParameterCollection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: RemoveAt
    path: src/System.Data.Common/src/System/Data/Common/DbParameterCollection.cs
    startLine: 121
  assemblies:
  - System.Data.Common
  namespace: System.Data.Common
  summary: "\n<p>Removes the <xref href=\"System.Data.Common.DbParameter\" data-throw-if-not-resolved=\"false\"></xref> object at the specified from the collection.</p>\n"
  example:
  - 
  syntax:
    content: public abstract void RemoveAt(int index)
    content.vb: Public MustOverride Sub RemoveAt(index As Integer)
    parameters:
    - id: index
      type: System.Int32
  implements:
  - System.Collections.IList.RemoveAt(System.Int32)
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: System.Data.Common.DbParameterCollection.RemoveAt(System.String)
  commentId: M:System.Data.Common.DbParameterCollection.RemoveAt(System.String)
  id: RemoveAt(System.String)
  parent: System.Data.Common.DbParameterCollection
  langs:
  - csharp
  - vb
  name: RemoveAt(String)
  fullName: System.Data.Common.DbParameterCollection.RemoveAt(System.String)
  type: Method
  source:
    remote:
      path: src/System.Data.Common/src/System/Data/Common/DbParameterCollection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: RemoveAt
    path: src/System.Data.Common/src/System/Data/Common/DbParameterCollection.cs
    startLine: 123
  assemblies:
  - System.Data.Common
  namespace: System.Data.Common
  summary: "\n<p>Removes the <xref href=\"System.Data.Common.DbParameter\" data-throw-if-not-resolved=\"false\"></xref> object with the specified name from the collection.</p>\n"
  example:
  - 
  syntax:
    content: public abstract void RemoveAt(string parameterName)
    content.vb: Public MustOverride Sub RemoveAt(parameterName As String)
    parameters:
    - id: parameterName
      type: System.String
  implements:
  - System.Data.IDataParameterCollection.RemoveAt(System.String)
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: System.Data.Common.DbParameterCollection.SetParameter(System.Int32,System.Data.Common.DbParameter)
  commentId: M:System.Data.Common.DbParameterCollection.SetParameter(System.Int32,System.Data.Common.DbParameter)
  id: SetParameter(System.Int32,System.Data.Common.DbParameter)
  parent: System.Data.Common.DbParameterCollection
  langs:
  - csharp
  - vb
  name: SetParameter(Int32, DbParameter)
  fullName: System.Data.Common.DbParameterCollection.SetParameter(System.Int32, System.Data.Common.DbParameter)
  type: Method
  source:
    remote:
      path: src/System.Data.Common/src/System/Data/Common/DbParameterCollection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: SetParameter
    path: src/System.Data.Common/src/System/Data/Common/DbParameterCollection.cs
    startLine: 125
  assemblies:
  - System.Data.Common
  namespace: System.Data.Common
  summary: "\n<p>Sets the <xref href=\"System.Data.Common.DbParameter\" data-throw-if-not-resolved=\"false\"></xref> object at the specified index to a new value. </p>\n"
  example:
  - 
  syntax:
    content: protected abstract void SetParameter(int index, DbParameter value)
    content.vb: Protected MustOverride Sub SetParameter(index As Integer, value As DbParameter)
    parameters:
    - id: index
      type: System.Int32
    - id: value
      type: System.Data.Common.DbParameter
  modifiers.csharp:
  - protected
  - abstract
  modifiers.vb:
  - Protected
  - MustOverride
- uid: System.Data.Common.DbParameterCollection.SetParameter(System.String,System.Data.Common.DbParameter)
  commentId: M:System.Data.Common.DbParameterCollection.SetParameter(System.String,System.Data.Common.DbParameter)
  id: SetParameter(System.String,System.Data.Common.DbParameter)
  parent: System.Data.Common.DbParameterCollection
  langs:
  - csharp
  - vb
  name: SetParameter(String, DbParameter)
  fullName: System.Data.Common.DbParameterCollection.SetParameter(System.String, System.Data.Common.DbParameter)
  type: Method
  source:
    remote:
      path: src/System.Data.Common/src/System/Data/Common/DbParameterCollection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: SetParameter
    path: src/System.Data.Common/src/System/Data/Common/DbParameterCollection.cs
    startLine: 127
  assemblies:
  - System.Data.Common
  namespace: System.Data.Common
  summary: "\n<p>Sets the <xref href=\"System.Data.Common.DbParameter\" data-throw-if-not-resolved=\"false\"></xref> object with the specified name to a new value.</p>\n"
  example:
  - 
  syntax:
    content: protected abstract void SetParameter(string parameterName, DbParameter value)
    content.vb: Protected MustOverride Sub SetParameter(parameterName As String, value As DbParameter)
    parameters:
    - id: parameterName
      type: System.String
    - id: value
      type: System.Data.Common.DbParameter
  modifiers.csharp:
  - protected
  - abstract
  modifiers.vb:
  - Protected
  - MustOverride
- uid: System.Data.Common.DbParameterCollection.System#Collections#IList#IsFixedSize
  commentId: P:System.Data.Common.DbParameterCollection.System#Collections#IList#IsFixedSize
  id: System#Collections#IList#IsFixedSize
  isEii: true
  parent: System.Data.Common.DbParameterCollection
  langs:
  - csharp
  - vb
  name: IList.IsFixedSize
  fullName: System.Data.Common.DbParameterCollection.System.Collections.IList.IsFixedSize
  type: Property
  source:
    remote:
      path: src/System.Data.Common/src/System/Data/Common/DbParameterCollection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: System.Collections.IList.IsFixedSize
    path: src/System.Data.Common/src/System/Data/Common/DbParameterCollection.cs
    startLine: 26
  assemblies:
  - System.Data.Common
  namespace: System.Data.Common
  syntax:
    content: bool IList.IsFixedSize { get; }
    content.vb: ReadOnly WriteOnly Property System.Collections.IList.IsFixedSize As Boolean Implements IList.IsFixedSize
    parameters: []
    return:
      type: System.Boolean
  implements:
  - System.Collections.IList.IsFixedSize
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
  name.vb: System.Collections.IList.IsFixedSize
- uid: System.Data.Common.DbParameterCollection.System#Collections#IList#IsReadOnly
  commentId: P:System.Data.Common.DbParameterCollection.System#Collections#IList#IsReadOnly
  id: System#Collections#IList#IsReadOnly
  isEii: true
  parent: System.Data.Common.DbParameterCollection
  langs:
  - csharp
  - vb
  name: IList.IsReadOnly
  fullName: System.Data.Common.DbParameterCollection.System.Collections.IList.IsReadOnly
  type: Property
  source:
    remote:
      path: src/System.Data.Common/ref/System.Data.Common.Manual.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: System.Collections.IList.IsReadOnly
    path: src/System.Data.Common/ref/System.Data.Common.Manual.cs
    startLine: 30
  assemblies:
  - System.Data.Common
  namespace: System.Data.Common
  syntax:
    content: bool IList.IsReadOnly { get; }
    content.vb: ReadOnly WriteOnly Property System.Collections.IList.IsReadOnly As Boolean Implements IList.IsReadOnly
    parameters: []
    return:
      type: System.Boolean
  implements:
  - System.Collections.IList.IsReadOnly
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
  name.vb: System.Collections.IList.IsReadOnly
- uid: System.Data.Common.DbParameterCollection.System#Collections#ICollection#IsSynchronized
  commentId: P:System.Data.Common.DbParameterCollection.System#Collections#ICollection#IsSynchronized
  id: System#Collections#ICollection#IsSynchronized
  isEii: true
  parent: System.Data.Common.DbParameterCollection
  langs:
  - csharp
  - vb
  name: ICollection.IsSynchronized
  fullName: System.Data.Common.DbParameterCollection.System.Collections.ICollection.IsSynchronized
  type: Property
  source:
    remote:
      path: src/System.Data.Common/ref/System.Data.Common.Manual.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: System.Collections.ICollection.IsSynchronized
    path: src/System.Data.Common/ref/System.Data.Common.Manual.cs
    startLine: 31
  assemblies:
  - System.Data.Common
  namespace: System.Data.Common
  syntax:
    content: bool ICollection.IsSynchronized { get; }
    content.vb: ReadOnly WriteOnly Property System.Collections.ICollection.IsSynchronized As Boolean Implements ICollection.IsSynchronized
    parameters: []
    return:
      type: System.Boolean
  implements:
  - System.Collections.ICollection.IsSynchronized
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
  name.vb: System.Collections.ICollection.IsSynchronized
references:
- uid: System.Data.Common
  isExternal: false
  name: System.Data.Common
  fullName: System.Data.Common
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System.Data.IDataParameterCollection
  parent: System.Data
  isExternal: false
  name: IDataParameterCollection
  fullName: System.Data.IDataParameterCollection
- uid: System.Collections.IList
  parent: System.Collections
  isExternal: false
  name: IList
  fullName: System.Collections.IList
- uid: System.Collections.ICollection
  parent: System.Collections
  isExternal: false
  name: ICollection
  fullName: System.Collections.ICollection
- uid: System.Collections.IEnumerable
  parent: System.Collections
  isExternal: false
  name: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Data
  isExternal: false
  name: System.Data
  fullName: System.Data
- uid: System.Collections
  isExternal: false
  name: System.Collections
  fullName: System.Collections
- uid: System.Collections.ICollection.Count
  parent: System.Collections.ICollection
  isExternal: false
  name: Count
  fullName: System.Collections.ICollection.Count
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  fullName: System.Int32
- uid: System.Data.Common.DbParameter
  parent: System.Data.Common
  isExternal: false
  name: DbParameter
  fullName: System.Data.Common.DbParameter
- uid: System.String
  parent: System
  isExternal: false
  name: String
  fullName: System.String
- uid: System.Collections.ICollection.SyncRoot
  parent: System.Collections.ICollection
  isExternal: false
  name: SyncRoot
  fullName: System.Collections.ICollection.SyncRoot
- uid: System.Collections.IList.Item(System.Int32)
  parent: System.Collections.IList
  isExternal: true
  name: Item[Int32]
  fullName: System.Collections.IList.Item[System.Int32]
  fullname.vb: System.Collections.IList.Item(System.Int32)
  name.vb: Item(Int32)
  spec.csharp:
  - uid: System.Collections.IList.Item(System.Int32)
    name: Item
    fullName: System.Collections.IList.Item
  - name: '['
    fullName: '['
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ']'
    fullName: ']'
  spec.vb:
  - uid: System.Collections.IList.Item(System.Int32)
    name: Item
    fullName: System.Collections.IList.Item
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
- uid: System.Data.IDataParameterCollection.Item(System.String)
  parent: System.Data.IDataParameterCollection
  isExternal: true
  name: Item[String]
  fullName: System.Data.IDataParameterCollection.Item[System.String]
  fullname.vb: System.Data.IDataParameterCollection.Item(System.String)
  name.vb: Item(String)
  spec.csharp:
  - uid: System.Data.IDataParameterCollection.Item(System.String)
    name: Item
    fullName: System.Data.IDataParameterCollection.Item
  - name: '['
    fullName: '['
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ']'
    fullName: ']'
  spec.vb:
  - uid: System.Data.IDataParameterCollection.Item(System.String)
    name: Item
    fullName: System.Data.IDataParameterCollection.Item
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: System.Collections.IList.Add(System.Object)
  parent: System.Collections.IList
  isExternal: true
  name: Add(Object)
  fullName: System.Collections.IList.Add(System.Object)
  spec.csharp:
  - uid: System.Collections.IList.Add(System.Object)
    name: Add
    fullName: System.Collections.IList.Add
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Collections.IList.Add(System.Object)
    name: Add
    fullName: System.Collections.IList.Add
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Array
  parent: System
  isExternal: false
  name: Array
  fullName: System.Array
- uid: System.Collections.IList.Clear
  parent: System.Collections.IList
  isExternal: false
  name: Clear()
  fullName: System.Collections.IList.Clear()
  spec.csharp:
  - uid: System.Collections.IList.Clear
    name: Clear
    fullName: System.Collections.IList.Clear
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Collections.IList.Clear
    name: Clear
    fullName: System.Collections.IList.Clear
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Collections.IList.Contains(System.Object)
  parent: System.Collections.IList
  isExternal: true
  name: Contains(Object)
  fullName: System.Collections.IList.Contains(System.Object)
  spec.csharp:
  - uid: System.Collections.IList.Contains(System.Object)
    name: Contains
    fullName: System.Collections.IList.Contains
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Collections.IList.Contains(System.Object)
    name: Contains
    fullName: System.Collections.IList.Contains
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  fullName: System.Boolean
- uid: System.Data.IDataParameterCollection.Contains(System.String)
  parent: System.Data.IDataParameterCollection
  isExternal: true
  name: Contains(String)
  fullName: System.Data.IDataParameterCollection.Contains(System.String)
  spec.csharp:
  - uid: System.Data.IDataParameterCollection.Contains(System.String)
    name: Contains
    fullName: System.Data.IDataParameterCollection.Contains
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Data.IDataParameterCollection.Contains(System.String)
    name: Contains
    fullName: System.Data.IDataParameterCollection.Contains
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: System.Collections.ICollection.CopyTo(System.Array,System.Int32)
  parent: System.Collections.ICollection
  isExternal: true
  name: CopyTo(Array, Int32)
  fullName: System.Collections.ICollection.CopyTo(System.Array, System.Int32)
  spec.csharp:
  - uid: System.Collections.ICollection.CopyTo(System.Array,System.Int32)
    name: CopyTo
    fullName: System.Collections.ICollection.CopyTo
  - name: (
    fullName: (
  - uid: System.Array
    name: Array
    fullName: System.Array
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ICollection.CopyTo(System.Array,System.Int32)
    name: CopyTo
    fullName: System.Collections.ICollection.CopyTo
  - name: (
    fullName: (
  - uid: System.Array
    name: Array
    fullName: System.Array
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
- uid: System.Collections.IEnumerable.GetEnumerator
  parent: System.Collections.IEnumerable
  isExternal: false
  name: GetEnumerator()
  fullName: System.Collections.IEnumerable.GetEnumerator()
  spec.csharp:
  - uid: System.Collections.IEnumerable.GetEnumerator
    name: GetEnumerator
    fullName: System.Collections.IEnumerable.GetEnumerator
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Collections.IEnumerable.GetEnumerator
    name: GetEnumerator
    fullName: System.Collections.IEnumerable.GetEnumerator
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: false
  name: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Collections.IList.IndexOf(System.Object)
  parent: System.Collections.IList
  isExternal: true
  name: IndexOf(Object)
  fullName: System.Collections.IList.IndexOf(System.Object)
  spec.csharp:
  - uid: System.Collections.IList.IndexOf(System.Object)
    name: IndexOf
    fullName: System.Collections.IList.IndexOf
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Collections.IList.IndexOf(System.Object)
    name: IndexOf
    fullName: System.Collections.IList.IndexOf
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Data.IDataParameterCollection.IndexOf(System.String)
  parent: System.Data.IDataParameterCollection
  isExternal: true
  name: IndexOf(String)
  fullName: System.Data.IDataParameterCollection.IndexOf(System.String)
  spec.csharp:
  - uid: System.Data.IDataParameterCollection.IndexOf(System.String)
    name: IndexOf
    fullName: System.Data.IDataParameterCollection.IndexOf
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Data.IDataParameterCollection.IndexOf(System.String)
    name: IndexOf
    fullName: System.Data.IDataParameterCollection.IndexOf
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: System.Collections.IList.Insert(System.Int32,System.Object)
  parent: System.Collections.IList
  isExternal: true
  name: Insert(Int32, Object)
  fullName: System.Collections.IList.Insert(System.Int32, System.Object)
  spec.csharp:
  - uid: System.Collections.IList.Insert(System.Int32,System.Object)
    name: Insert
    fullName: System.Collections.IList.Insert
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Collections.IList.Insert(System.Int32,System.Object)
    name: Insert
    fullName: System.Collections.IList.Insert
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Collections.IList.Remove(System.Object)
  parent: System.Collections.IList
  isExternal: true
  name: Remove(Object)
  fullName: System.Collections.IList.Remove(System.Object)
  spec.csharp:
  - uid: System.Collections.IList.Remove(System.Object)
    name: Remove
    fullName: System.Collections.IList.Remove
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Collections.IList.Remove(System.Object)
    name: Remove
    fullName: System.Collections.IList.Remove
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Collections.IList.RemoveAt(System.Int32)
  parent: System.Collections.IList
  isExternal: true
  name: RemoveAt(Int32)
  fullName: System.Collections.IList.RemoveAt(System.Int32)
  spec.csharp:
  - uid: System.Collections.IList.RemoveAt(System.Int32)
    name: RemoveAt
    fullName: System.Collections.IList.RemoveAt
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Collections.IList.RemoveAt(System.Int32)
    name: RemoveAt
    fullName: System.Collections.IList.RemoveAt
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
- uid: System.Data.IDataParameterCollection.RemoveAt(System.String)
  parent: System.Data.IDataParameterCollection
  isExternal: true
  name: RemoveAt(String)
  fullName: System.Data.IDataParameterCollection.RemoveAt(System.String)
  spec.csharp:
  - uid: System.Data.IDataParameterCollection.RemoveAt(System.String)
    name: RemoveAt
    fullName: System.Data.IDataParameterCollection.RemoveAt
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Data.IDataParameterCollection.RemoveAt(System.String)
    name: RemoveAt
    fullName: System.Data.IDataParameterCollection.RemoveAt
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: System.Collections.IList.IsFixedSize
  parent: System.Collections.IList
  isExternal: false
  name: IsFixedSize
  fullName: System.Collections.IList.IsFixedSize
- uid: System.Collections.IList.IsReadOnly
  parent: System.Collections.IList
  isExternal: false
  name: IsReadOnly
  fullName: System.Collections.IList.IsReadOnly
- uid: System.Collections.ICollection.IsSynchronized
  parent: System.Collections.ICollection
  isExternal: false
  name: IsSynchronized
  fullName: System.Collections.ICollection.IsSynchronized
- uid: System.IndexOutOfRangeException
  isExternal: false
  name: IndexOutOfRangeException
  fullName: System.IndexOutOfRangeException
