items:
- uid: System.Linq.Expressions.CatchBlock
  commentId: T:System.Linq.Expressions.CatchBlock
  id: CatchBlock
  parent: System.Linq.Expressions
  children:
  - System.Linq.Expressions.CatchBlock.Body
  - System.Linq.Expressions.CatchBlock.Filter
  - System.Linq.Expressions.CatchBlock.Test
  - System.Linq.Expressions.CatchBlock.ToString
  - System.Linq.Expressions.CatchBlock.Update(System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.CatchBlock.Variable
  langs:
  - csharp
  - vb
  name: CatchBlock
  fullName: System.Linq.Expressions.CatchBlock
  type: Class
  source:
    remote:
      path: src/System.Linq.Expressions/src/System/Linq/Expressions/CatchBlock.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CatchBlock
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/CatchBlock.cs
    startLine: 14
  assemblies:
  - System.Linq.Expressions
  namespace: System.Linq.Expressions
  summary: Represents a catch statement in a try block.
  syntax:
    content: 'public sealed class CatchBlock : object'
    content.vb: >-
      Public NotInheritable Class CatchBlock
          Inherits Object
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: System.Linq.Expressions.CatchBlock.Body
  commentId: P:System.Linq.Expressions.CatchBlock.Body
  id: Body
  parent: System.Linq.Expressions.CatchBlock
  langs:
  - csharp
  - vb
  name: Body
  fullName: System.Linq.Expressions.CatchBlock.Body
  type: Property
  source:
    remote:
      path: src/System.Linq.Expressions/src/System/Linq/Expressions/CatchBlock.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Body
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/CatchBlock.cs
    startLine: 49
  assemblies:
  - System.Linq.Expressions
  namespace: System.Linq.Expressions
  summary: Gets the body of the catch block.
  syntax:
    content: public Expression Body { get; }
    content.vb: Public ReadOnly Property Body As Expression
    parameters: []
    return:
      type: System.Linq.Expressions.Expression
      description: The <xref href="System.Linq.Expressions.Expression" data-throw-if-not-resolved="false"></xref> object representing the catch body.
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Linq.Expressions.CatchBlock.Filter
  commentId: P:System.Linq.Expressions.CatchBlock.Filter
  id: Filter
  parent: System.Linq.Expressions.CatchBlock
  langs:
  - csharp
  - vb
  name: Filter
  fullName: System.Linq.Expressions.CatchBlock.Filter
  type: Property
  source:
    remote:
      path: src/System.Linq.Expressions/src/System/Linq/Expressions/CatchBlock.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Filter
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/CatchBlock.cs
    startLine: 57
  assemblies:
  - System.Linq.Expressions
  namespace: System.Linq.Expressions
  summary: Gets the body of the <xref href="System.Linq.Expressions.CatchBlock" data-throw-if-not-resolved="false"></xref> filter.
  syntax:
    content: public Expression Filter { get; }
    content.vb: Public ReadOnly Property Filter As Expression
    parameters: []
    return:
      type: System.Linq.Expressions.Expression
      description: The <xref href="System.Linq.Expressions.Expression" data-throw-if-not-resolved="false"></xref> object representing the body of the <xref href="System.Linq.Expressions.CatchBlock" data-throw-if-not-resolved="false"></xref> filter.
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Linq.Expressions.CatchBlock.Test
  commentId: P:System.Linq.Expressions.CatchBlock.Test
  id: Test
  parent: System.Linq.Expressions.CatchBlock
  langs:
  - csharp
  - vb
  name: Test
  fullName: System.Linq.Expressions.CatchBlock.Test
  type: Property
  source:
    remote:
      path: src/System.Linq.Expressions/src/System/Linq/Expressions/CatchBlock.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Test
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/CatchBlock.cs
    startLine: 41
  assemblies:
  - System.Linq.Expressions
  namespace: System.Linq.Expressions
  summary: Gets the type of <xref href="System.Exception" data-throw-if-not-resolved="false"></xref> this handler catches.
  syntax:
    content: public Type Test { get; }
    content.vb: Public ReadOnly Property Test As Type
    parameters: []
    return:
      type: System.Type
      description: The <xref href="System.Type" data-throw-if-not-resolved="false"></xref> object representing the type of <xref href="System.Exception" data-throw-if-not-resolved="false"></xref> this handler catches.
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Linq.Expressions.CatchBlock.Variable
  commentId: P:System.Linq.Expressions.CatchBlock.Variable
  id: Variable
  parent: System.Linq.Expressions.CatchBlock
  langs:
  - csharp
  - vb
  name: Variable
  fullName: System.Linq.Expressions.CatchBlock.Variable
  type: Property
  source:
    remote:
      path: src/System.Linq.Expressions/src/System/Linq/Expressions/CatchBlock.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Variable
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/CatchBlock.cs
    startLine: 33
  assemblies:
  - System.Linq.Expressions
  namespace: System.Linq.Expressions
  summary: Gets a reference to the <xref href="System.Exception" data-throw-if-not-resolved="false"></xref> object caught by this handler.
  syntax:
    content: public ParameterExpression Variable { get; }
    content.vb: Public ReadOnly Property Variable As ParameterExpression
    parameters: []
    return:
      type: System.Linq.Expressions.ParameterExpression
      description: The <xref href="System.Linq.Expressions.ParameterExpression" data-throw-if-not-resolved="false"></xref> object representing a reference to the <xref href="System.Exception" data-throw-if-not-resolved="false"></xref> object caught by this handler.
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Linq.Expressions.CatchBlock.ToString
  commentId: M:System.Linq.Expressions.CatchBlock.ToString
  id: ToString
  parent: System.Linq.Expressions.CatchBlock
  langs:
  - csharp
  - vb
  name: ToString()
  fullName: System.Linq.Expressions.CatchBlock.ToString()
  type: Method
  source:
    remote:
      path: src/System.Linq.Expressions/src/System/Linq/Expressions/CatchBlock.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ToString
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/CatchBlock.cs
    startLine: 69
  assemblies:
  - System.Linq.Expressions
  namespace: System.Linq.Expressions
  summary: Returns a <xref href="System.String" data-throw-if-not-resolved="false"></xref> that represents the current <xref href="System.Object" data-throw-if-not-resolved="false"></xref>.
  syntax:
    content: public override string ToString()
    content.vb: Public Overrides Function ToString As String
    return:
      type: System.String
      description: A <xref href="System.String" data-throw-if-not-resolved="false"></xref> that represents the current <xref href="System.Object" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Linq.Expressions.CatchBlock.Update(System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  commentId: M:System.Linq.Expressions.CatchBlock.Update(System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  id: Update(System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.CatchBlock
  langs:
  - csharp
  - vb
  name: Update(ParameterExpression, Expression, Expression)
  fullName: System.Linq.Expressions.CatchBlock.Update(System.Linq.Expressions.ParameterExpression, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)
  type: Method
  source:
    remote:
      path: src/System.Linq.Expressions/src/System/Linq/Expressions/CatchBlock.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Update
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/CatchBlock.cs
    startLine: 83
  assemblies:
  - System.Linq.Expressions
  namespace: System.Linq.Expressions
  summary: Creates a new expression that is like this one, but using the supplied children. If all of the children are the same, it will return this expression.
  syntax:
    content: public CatchBlock Update(ParameterExpression variable, Expression filter, Expression body)
    content.vb: Public Function Update(variable As ParameterExpression, filter As Expression, body As Expression) As CatchBlock
    parameters:
    - id: variable
      type: System.Linq.Expressions.ParameterExpression
      description: The <xref href="System.Linq.Expressions.CatchBlock.Variable" data-throw-if-not-resolved="false"></xref> property of the result.
    - id: filter
      type: System.Linq.Expressions.Expression
      description: The <xref href="System.Linq.Expressions.CatchBlock.Filter" data-throw-if-not-resolved="false"></xref> property of the result.
    - id: body
      type: System.Linq.Expressions.Expression
      description: The <xref href="System.Linq.Expressions.CatchBlock.Body" data-throw-if-not-resolved="false"></xref> property of the result.
    return:
      type: System.Linq.Expressions.CatchBlock
      description: This expression if no children are changed or an expression with the updated children.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: System.Linq.Expressions
  isExternal: false
  name: System.Linq.Expressions
  fullName: System.Linq.Expressions
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  fullName: System.Type
- uid: System.Linq.Expressions.ParameterExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: ParameterExpression
  fullName: System.Linq.Expressions.ParameterExpression
- uid: System.String
  parent: System
  isExternal: false
  name: String
  fullName: System.String
- uid: System.Linq.Expressions.CatchBlock
  parent: System.Linq.Expressions
  isExternal: false
  name: CatchBlock
  fullName: System.Linq.Expressions.CatchBlock
