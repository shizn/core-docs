items:
- uid: System.Net.Dns
  commentId: T:System.Net.Dns
  id: Dns
  parent: System.Net
  children:
  - System.Net.Dns.GetHostAddressesAsync(System.String)
  - System.Net.Dns.GetHostEntryAsync(System.Net.IPAddress)
  - System.Net.Dns.GetHostEntryAsync(System.String)
  - System.Net.Dns.GetHostName
  langs:
  - csharp
  - vb
  name: Dns
  fullName: System.Net.Dns
  type: Class
  source:
    remote:
      path: src/System.Net.NameResolution/src/System/Net/DNS.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Dns
    path: src/System.Net.NameResolution/src/System/Net/DNS.cs
    startLine: 17
  assemblies:
  - System.Net.NameResolution
  namespace: System.Net
  syntax:
    content: 'public class Dns : object'
    content.vb: >-
      Public Class Dns
          Inherits Object
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: System.Net.Dns.GetHostAddressesAsync(System.String)
  commentId: M:System.Net.Dns.GetHostAddressesAsync(System.String)
  id: GetHostAddressesAsync(System.String)
  parent: System.Net.Dns
  langs:
  - csharp
  - vb
  name: GetHostAddressesAsync(String)
  fullName: System.Net.Dns.GetHostAddressesAsync(System.String)
  type: Method
  source:
    remote:
      path: src/System.Net.NameResolution/src/System/Net/DNS.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetHostAddressesAsync
    path: src/System.Net.NameResolution/src/System/Net/DNS.cs
    startLine: 404
  assemblies:
  - System.Net.NameResolution
  namespace: System.Net
  syntax:
    content: public static Task<IPAddress[]> GetHostAddressesAsync(string hostNameOrAddress)
    content.vb: Public Shared Function GetHostAddressesAsync(hostNameOrAddress As String) As Task(Of IPAddress())
    parameters:
    - id: hostNameOrAddress
      type: System.String
    return:
      type: Task{IPAddress[]}
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Net.Dns.GetHostEntryAsync(System.Net.IPAddress)
  commentId: M:System.Net.Dns.GetHostEntryAsync(System.Net.IPAddress)
  id: GetHostEntryAsync(System.Net.IPAddress)
  parent: System.Net.Dns
  langs:
  - csharp
  - vb
  name: GetHostEntryAsync(IPAddress)
  fullName: System.Net.Dns.GetHostEntryAsync(System.Net.IPAddress)
  type: Method
  source:
    remote:
      path: src/System.Net.NameResolution/ref/System.Net.NameResolution.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetHostEntryAsync
    path: src/System.Net.NameResolution/ref/System.Net.NameResolution.cs
    startLine: 13
  assemblies:
  - System.Net.NameResolution
  namespace: System.Net
  syntax:
    content: public static Threading.Tasks.Task<IPHostEntry> GetHostEntryAsync(IPAddress address)
    content.vb: Public Shared Function GetHostEntryAsync(address As IPAddress) As Threading.Tasks.Task(Of IPHostEntry)
    parameters:
    - id: address
      type: System.Net.IPAddress
    return:
      type: System.Threading.Tasks.Task{System.Net.IPHostEntry}
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Net.Dns.GetHostEntryAsync(System.String)
  commentId: M:System.Net.Dns.GetHostEntryAsync(System.String)
  id: GetHostEntryAsync(System.String)
  parent: System.Net.Dns
  langs:
  - csharp
  - vb
  name: GetHostEntryAsync(String)
  fullName: System.Net.Dns.GetHostEntryAsync(System.String)
  type: Method
  source:
    remote:
      path: src/System.Net.NameResolution/src/System/Net/DNS.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetHostEntryAsync
    path: src/System.Net.NameResolution/src/System/Net/DNS.cs
    startLine: 422
  assemblies:
  - System.Net.NameResolution
  namespace: System.Net
  syntax:
    content: public static Task<IPHostEntry> GetHostEntryAsync(string hostNameOrAddress)
    content.vb: Public Shared Function GetHostEntryAsync(hostNameOrAddress As String) As Task(Of IPHostEntry)
    parameters:
    - id: hostNameOrAddress
      type: System.String
    return:
      type: Task{System.Net.IPHostEntry}
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Net.Dns.GetHostName
  commentId: M:System.Net.Dns.GetHostName
  id: GetHostName
  parent: System.Net.Dns
  langs:
  - csharp
  - vb
  name: GetHostName()
  fullName: System.Net.Dns.GetHostName()
  type: Method
  source:
    remote:
      path: src/System.Net.NameResolution/src/System/Net/DNS.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetHostName
    path: src/System.Net.NameResolution/src/System/Net/DNS.cs
    startLine: 168
  assemblies:
  - System.Net.NameResolution
  namespace: System.Net
  syntax:
    content: public static string GetHostName()
    content.vb: Public Shared Function GetHostName As String
    return:
      type: System.String
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: System.Net
  isExternal: false
  name: System.Net
  fullName: System.Net
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.String
  parent: System
  isExternal: false
  name: String
  fullName: System.String
- uid: System.Threading.Tasks.Task{System.Net.IPAddress[]}
  definition: System.Threading.Tasks.Task`1
  name: Threading.Tasks.Task<IPAddress[]>
  fullName: System.Threading.Tasks.Task<System.Net.IPAddress[]>
  fullname.vb: System.Threading.Tasks.Task(Of System.Net.IPAddress())
  name.vb: Threading.Tasks.Task(Of IPAddress())
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Threading.Tasks.Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Net.IPAddress
    name: IPAddress
    fullName: System.Net.IPAddress
    isExternal: true
  - name: '[]'
    fullName: '[]'
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Threading.Tasks.Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Net.IPAddress
    name: IPAddress
    fullName: System.Net.IPAddress
    isExternal: true
  - name: ()
    fullName: ()
  - name: )
    fullName: )
- uid: System.Threading.Tasks.Task`1
  parent: System.Threading.Tasks
  isExternal: false
  name: Threading.Tasks.Task<>
  fullName: System.Threading.Tasks.Task<>
  fullname.vb: System.Threading.Tasks.Task(Of )
  name.vb: Threading.Tasks.Task(Of )
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Threading.Tasks.Task
    fullName: System.Threading.Tasks.Task
  - name: <
    fullName: <
  - {}
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Threading.Tasks.Task
    fullName: System.Threading.Tasks.Task
  - name: '(Of '
    fullName: '(Of '
  - {}
  - name: )
    fullName: )
- uid: System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: System.Net.IPAddress
  parent: System.Net
  isExternal: false
  name: IPAddress
  fullName: System.Net.IPAddress
- uid: System.Threading.Tasks.Task{System.Net.IPHostEntry}
  definition: System.Threading.Tasks.Task`1
  name: Threading.Tasks.Task<IPHostEntry>
  fullName: System.Threading.Tasks.Task<System.Net.IPHostEntry>
  fullname.vb: System.Threading.Tasks.Task(Of System.Net.IPHostEntry)
  name.vb: Threading.Tasks.Task(Of IPHostEntry)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Threading.Tasks.Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Net.IPHostEntry
    name: IPHostEntry
    fullName: System.Net.IPHostEntry
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Threading.Tasks.Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Net.IPHostEntry
    name: IPHostEntry
    fullName: System.Net.IPHostEntry
  - name: )
    fullName: )
