items:
- uid: System.Reflection.AmbiguousMatchException
  commentId: T:System.Reflection.AmbiguousMatchException
  id: AmbiguousMatchException
  parent: System.Reflection
  children:
  - System.Reflection.AmbiguousMatchException.#ctor
  - System.Reflection.AmbiguousMatchException.#ctor(System.String)
  - System.Reflection.AmbiguousMatchException.#ctor(System.String,System.Exception)
  langs:
  - csharp
  - vb
  name: AmbiguousMatchException
  fullName: System.Reflection.AmbiguousMatchException
  type: Class
  source:
    remote:
      path: src/System.Reflection/ref/4.0/System.Reflection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: AmbiguousMatchException
    path: src/System.Reflection/ref/4.0/System.Reflection.cs
    startLine: 10
  assemblies:
  - System.Reflection
  namespace: System.Reflection
  summary: "\n<p>The exception that is thrown when binding to a member results in more than one member matching the binding criteria. This class cannot be inherited.</p>\n"
  remarks: "\n<p>\n<strong>AmbiguousMatchException</strong> uses the HRESULT COR_E_AMBIGUOUSMATCH which has the value 0x8000211D.</p>\n<p>An <strong>AmbiguousMatchException</strong> is thrown when a member is invoked late-bound and multiple overloads satisfy the binding criteria, or when more than one member matches the binding criteria passed to a reflection method that can return only a single result (for example, <see cref=\"Overload:System.Type.GetMethod\"></see> or <see cref=\"Overload:System.Type.GetProperty\"></see>). </p>\n"
  syntax:
    content: 'public sealed class AmbiguousMatchException : Exception'
    content.vb: >-
      Public NotInheritable Class AmbiguousMatchException
          Inherits Exception
  seealso:
  - type: System.Exception
    commentId: T:System.Exception
  - type: System.SystemException
    commentId: T:System.SystemException
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: System.Reflection.AmbiguousMatchException.#ctor
  commentId: M:System.Reflection.AmbiguousMatchException.#ctor
  id: '#ctor'
  parent: System.Reflection.AmbiguousMatchException
  langs:
  - csharp
  - vb
  name: AmbiguousMatchException()
  fullName: System.Reflection.AmbiguousMatchException.AmbiguousMatchException()
  type: Constructor
  source:
    remote:
      path: src/System.Reflection/ref/4.0/System.Reflection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Reflection/ref/4.0/System.Reflection.cs
    startLine: 12
  assemblies:
  - System.Reflection
  namespace: System.Reflection
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Reflection.AmbiguousMatchException\" data-throw-if-not-resolved=\"false\"></xref> class with an empty message string and the root cause exception set to <strong>null</strong>.</p>\n"
  remarks: "\n<p>\n<strong>AmbiguousMatchException</strong> inherits from <xref href=\"System.Exception\" data-throw-if-not-resolved=\"false\"></xref>. This constructor sets the properties of the <strong>Exception</strong> object as shown in the following table.</p>\n<p>Property </p>\n<p>Value </p>\n<table><tbody><tr><td>\n<p>\n<xref href=\"System.Exception.InnerException\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td><td>\n<p>\n<strong>null</strong>\n</p>\n</td></tr><tr><td>\n<p>\n<xref href=\"System.Exception.Message\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td><td>\n<p>The empty string (\"\"). </p>\n</td></tr></tbody></table>\n"
  syntax:
    content: public AmbiguousMatchException()
    content.vb: Public Sub New
  seealso:
  - type: System.Exception
    commentId: T:System.Exception
  - type: System.SystemException
    commentId: T:System.SystemException
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Reflection.AmbiguousMatchException.#ctor(System.String)
  commentId: M:System.Reflection.AmbiguousMatchException.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Reflection.AmbiguousMatchException
  langs:
  - csharp
  - vb
  name: AmbiguousMatchException(String)
  fullName: System.Reflection.AmbiguousMatchException.AmbiguousMatchException(System.String)
  type: Constructor
  source:
    remote:
      path: src/System.Reflection/ref/4.0/System.Reflection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Reflection/ref/4.0/System.Reflection.cs
    startLine: 13
  assemblies:
  - System.Reflection
  namespace: System.Reflection
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Reflection.AmbiguousMatchException\" data-throw-if-not-resolved=\"false\"></xref> class with its message string set to the given message and the root cause exception set to <strong>null</strong>.</p>\n"
  remarks: "\n<p>\n<strong>AmbiguousMatchException</strong> inherits from <xref href=\"System.Exception\" data-throw-if-not-resolved=\"false\"></xref>. This constructor sets the properties of the <strong>Exception</strong> object as shown in the following table.</p>\n<p>Property </p>\n<p>Value </p>\n<table><tbody><tr><td>\n<p>\n<xref href=\"System.Exception.InnerException\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td><td>\n<p>\n<strong>null</strong>\n</p>\n</td></tr><tr><td>\n<p>\n<xref href=\"System.Exception.Message\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td><td>\n<p>The <em>message</em> string. </p>\n</td></tr></tbody></table>\n"
  syntax:
    content: public AmbiguousMatchException(string message)
    content.vb: Public Sub New(message As String)
    parameters:
    - id: message
      type: System.String
      description: "\n<p>A string indicating the reason this exception was thrown. </p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Reflection.AmbiguousMatchException.#ctor(System.String,System.Exception)
  commentId: M:System.Reflection.AmbiguousMatchException.#ctor(System.String,System.Exception)
  id: '#ctor(System.String,System.Exception)'
  parent: System.Reflection.AmbiguousMatchException
  langs:
  - csharp
  - vb
  name: AmbiguousMatchException(String, Exception)
  fullName: System.Reflection.AmbiguousMatchException.AmbiguousMatchException(System.String, System.Exception)
  type: Constructor
  source:
    remote:
      path: src/System.Reflection/ref/4.0/System.Reflection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Reflection/ref/4.0/System.Reflection.cs
    startLine: 14
  assemblies:
  - System.Reflection
  namespace: System.Reflection
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Reflection.AmbiguousMatchException\" data-throw-if-not-resolved=\"false\"></xref> class with a specified error message and a reference to the inner exception that is the cause of this exception.</p>\n"
  remarks: "\n<p>An exception that is thrown as a direct result of a previous exception should include a reference to the previous exception in the <xref href=\"System.Exception.InnerException\" data-throw-if-not-resolved=\"false\"></xref> property. The <xref href=\"System.Exception.InnerException\" data-throw-if-not-resolved=\"false\"></xref> property returns the same value that is passed into the constructor, or <strong>null</strong> if the <xref href=\"System.Exception.InnerException\" data-throw-if-not-resolved=\"false\"></xref> property does not supply the inner exception value to the constructor.</p>\n<p>The following table shows the initial property values for an instance of <xref href=\"System.Reflection.AmbiguousMatchException\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>Property </p>\n<p>Value </p>\n<table><tbody><tr><td>\n<p>\n<xref href=\"System.Exception.InnerException\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td><td>\n<p>The inner exception reference. </p>\n</td></tr><tr><td>\n<p>\n<xref href=\"System.Exception.Message\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td><td>\n<p>The error message string. </p>\n</td></tr></tbody></table>\n"
  example:
  - "\n<p>The following example shows two classes, each named <code>Mymethod</code>. One class takes an integer and the other takes a string. If an integer is passed to <code>Mymethod</code>, the first class is used. If a string is passed, the second class is used. If it cannot be determined which <code>Mymethod</code> to use, <strong>AmbiguousMatchException</strong> is thrown.</p>Classic AmbiguousMatchException.AmbiguousMatchException2 Example#1"
  syntax:
    content: public AmbiguousMatchException(string message, Exception inner)
    content.vb: Public Sub New(message As String, inner As Exception)
    parameters:
    - id: message
      type: System.String
      description: "\n<p>The error message that explains the reason for the exception. </p>\n"
    - id: inner
      type: System.Exception
      description: "\n<p>The exception that is the cause of the current exception. If the <em>inner</em> parameter is not <strong>null</strong>, the current exception is raised in a <strong>catch</strong> block that handles the inner exception. </p>\n"
  seealso:
  - type: System.Exception
    commentId: T:System.Exception
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: System.Reflection
  isExternal: false
  name: System.Reflection
  fullName: System.Reflection
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.String
  parent: System
  isExternal: false
  name: String
  fullName: System.String
- uid: System.Exception
  parent: System
  isExternal: false
  name: Exception
  fullName: System.Exception
