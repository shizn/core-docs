items:
- uid: System.Reflection.MethodImplAttributes
  commentId: T:System.Reflection.MethodImplAttributes
  id: MethodImplAttributes
  parent: System.Reflection
  children:
  - System.Reflection.MethodImplAttributes.AggressiveInlining
  - System.Reflection.MethodImplAttributes.CodeTypeMask
  - System.Reflection.MethodImplAttributes.ForwardRef
  - System.Reflection.MethodImplAttributes.IL
  - System.Reflection.MethodImplAttributes.InternalCall
  - System.Reflection.MethodImplAttributes.Managed
  - System.Reflection.MethodImplAttributes.ManagedMask
  - System.Reflection.MethodImplAttributes.Native
  - System.Reflection.MethodImplAttributes.NoInlining
  - System.Reflection.MethodImplAttributes.NoOptimization
  - System.Reflection.MethodImplAttributes.OPTIL
  - System.Reflection.MethodImplAttributes.PreserveSig
  - System.Reflection.MethodImplAttributes.Runtime
  - System.Reflection.MethodImplAttributes.Synchronized
  - System.Reflection.MethodImplAttributes.Unmanaged
  langs:
  - csharp
  - vb
  name: MethodImplAttributes
  fullName: System.Reflection.MethodImplAttributes
  type: Enum
  source:
    remote:
      path: src/mscorlib/src/System/Reflection/MethodImplAttributes.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: MethodImplAttributes
    path: src/mscorlib/src/System/Reflection/MethodImplAttributes.cs
    startLine: 11
  assemblies:
  - System.Reflection.Primitives
  namespace: System.Reflection
  summary: Specifies flags for the attributes of a method implementation.
  syntax:
    content: 'public enum MethodImplAttributes : int'
    content.vb: Public Enum MethodImplAttributes As Integer
  modifiers.csharp:
  - public
  - enum
  modifiers.vb:
  - Public
  - Enum
- uid: System.Reflection.MethodImplAttributes.AggressiveInlining
  commentId: F:System.Reflection.MethodImplAttributes.AggressiveInlining
  id: AggressiveInlining
  parent: System.Reflection.MethodImplAttributes
  langs:
  - csharp
  - vb
  name: AggressiveInlining
  fullName: System.Reflection.MethodImplAttributes.AggressiveInlining
  type: Field
  source:
    remote:
      path: src/mscorlib/src/System/Reflection/MethodImplAttributes.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: AggressiveInlining
    path: src/mscorlib/src/System/Reflection/MethodImplAttributes.cs
    startLine: 38
  assemblies:
  - System.Reflection.Primitives
  namespace: System.Reflection
  summary: Specifies that the method should be inlined wherever possible.
  syntax:
    content: AggressiveInlining = null
    content.vb: AggressiveInlining = Nothing
    return:
      type: System.Reflection.MethodImplAttributes
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Reflection.MethodImplAttributes.CodeTypeMask
  commentId: F:System.Reflection.MethodImplAttributes.CodeTypeMask
  id: CodeTypeMask
  parent: System.Reflection.MethodImplAttributes
  langs:
  - csharp
  - vb
  name: CodeTypeMask
  fullName: System.Reflection.MethodImplAttributes.CodeTypeMask
  type: Field
  source:
    remote:
      path: src/mscorlib/src/System/Reflection/MethodImplAttributes.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: CodeTypeMask
    path: src/mscorlib/src/System/Reflection/MethodImplAttributes.cs
    startLine: 16
  assemblies:
  - System.Reflection.Primitives
  namespace: System.Reflection
  summary: Specifies flags about code type.
  syntax:
    content: CodeTypeMask = null
    content.vb: CodeTypeMask = Nothing
    return:
      type: System.Reflection.MethodImplAttributes
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Reflection.MethodImplAttributes.ForwardRef
  commentId: F:System.Reflection.MethodImplAttributes.ForwardRef
  id: ForwardRef
  parent: System.Reflection.MethodImplAttributes
  langs:
  - csharp
  - vb
  name: ForwardRef
  fullName: System.Reflection.MethodImplAttributes.ForwardRef
  type: Field
  source:
    remote:
      path: src/mscorlib/src/System/Reflection/MethodImplAttributes.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ForwardRef
    path: src/mscorlib/src/System/Reflection/MethodImplAttributes.cs
    startLine: 31
  assemblies:
  - System.Reflection.Primitives
  namespace: System.Reflection
  summary: Specifies that the method is not defined.
  syntax:
    content: ForwardRef = null
    content.vb: ForwardRef = Nothing
    return:
      type: System.Reflection.MethodImplAttributes
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Reflection.MethodImplAttributes.IL
  commentId: F:System.Reflection.MethodImplAttributes.IL
  id: IL
  parent: System.Reflection.MethodImplAttributes
  langs:
  - csharp
  - vb
  name: IL
  fullName: System.Reflection.MethodImplAttributes.IL
  type: Field
  source:
    remote:
      path: src/mscorlib/src/System/Reflection/MethodImplAttributes.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: IL
    path: src/mscorlib/src/System/Reflection/MethodImplAttributes.cs
    startLine: 17
  assemblies:
  - System.Reflection.Primitives
  namespace: System.Reflection
  summary: Specifies that the method implementation is in Microsoft intermediate language (MSIL).
  syntax:
    content: IL = null
    content.vb: IL = Nothing
    return:
      type: System.Reflection.MethodImplAttributes
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Reflection.MethodImplAttributes.InternalCall
  commentId: F:System.Reflection.MethodImplAttributes.InternalCall
  id: InternalCall
  parent: System.Reflection.MethodImplAttributes
  langs:
  - csharp
  - vb
  name: InternalCall
  fullName: System.Reflection.MethodImplAttributes.InternalCall
  type: Field
  source:
    remote:
      path: src/mscorlib/src/System/Reflection/MethodImplAttributes.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: InternalCall
    path: src/mscorlib/src/System/Reflection/MethodImplAttributes.cs
    startLine: 34
  assemblies:
  - System.Reflection.Primitives
  namespace: System.Reflection
  summary: Specifies an internal call.
  syntax:
    content: InternalCall = null
    content.vb: InternalCall = Nothing
    return:
      type: System.Reflection.MethodImplAttributes
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Reflection.MethodImplAttributes.Managed
  commentId: F:System.Reflection.MethodImplAttributes.Managed
  id: Managed
  parent: System.Reflection.MethodImplAttributes
  langs:
  - csharp
  - vb
  name: Managed
  fullName: System.Reflection.MethodImplAttributes.Managed
  type: Field
  source:
    remote:
      path: src/mscorlib/src/System/Reflection/MethodImplAttributes.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Managed
    path: src/mscorlib/src/System/Reflection/MethodImplAttributes.cs
    startLine: 27
  assemblies:
  - System.Reflection.Primitives
  namespace: System.Reflection
  summary: 'Specifies that the method is implemented in managed code. '
  syntax:
    content: Managed = null
    content.vb: Managed = Nothing
    return:
      type: System.Reflection.MethodImplAttributes
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Reflection.MethodImplAttributes.ManagedMask
  commentId: F:System.Reflection.MethodImplAttributes.ManagedMask
  id: ManagedMask
  parent: System.Reflection.MethodImplAttributes
  langs:
  - csharp
  - vb
  name: ManagedMask
  fullName: System.Reflection.MethodImplAttributes.ManagedMask
  type: Field
  source:
    remote:
      path: src/mscorlib/src/System/Reflection/MethodImplAttributes.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ManagedMask
    path: src/mscorlib/src/System/Reflection/MethodImplAttributes.cs
    startLine: 25
  assemblies:
  - System.Reflection.Primitives
  namespace: System.Reflection
  summary: Specifies whether the method is implemented in managed or unmanaged code.
  syntax:
    content: ManagedMask = null
    content.vb: ManagedMask = Nothing
    return:
      type: System.Reflection.MethodImplAttributes
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Reflection.MethodImplAttributes.Native
  commentId: F:System.Reflection.MethodImplAttributes.Native
  id: Native
  parent: System.Reflection.MethodImplAttributes
  langs:
  - csharp
  - vb
  name: Native
  fullName: System.Reflection.MethodImplAttributes.Native
  type: Field
  source:
    remote:
      path: src/mscorlib/src/System/Reflection/MethodImplAttributes.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Native
    path: src/mscorlib/src/System/Reflection/MethodImplAttributes.cs
    startLine: 18
  assemblies:
  - System.Reflection.Primitives
  namespace: System.Reflection
  summary: Specifies that the method implementation is native.
  syntax:
    content: Native = null
    content.vb: Native = Nothing
    return:
      type: System.Reflection.MethodImplAttributes
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Reflection.MethodImplAttributes.NoInlining
  commentId: F:System.Reflection.MethodImplAttributes.NoInlining
  id: NoInlining
  parent: System.Reflection.MethodImplAttributes
  langs:
  - csharp
  - vb
  name: NoInlining
  fullName: System.Reflection.MethodImplAttributes.NoInlining
  type: Field
  source:
    remote:
      path: src/mscorlib/src/System/Reflection/MethodImplAttributes.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: NoInlining
    path: src/mscorlib/src/System/Reflection/MethodImplAttributes.cs
    startLine: 37
  assemblies:
  - System.Reflection.Primitives
  namespace: System.Reflection
  summary: Specifies that the method cannot be inlined.
  syntax:
    content: NoInlining = null
    content.vb: NoInlining = Nothing
    return:
      type: System.Reflection.MethodImplAttributes
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Reflection.MethodImplAttributes.NoOptimization
  commentId: F:System.Reflection.MethodImplAttributes.NoOptimization
  id: NoOptimization
  parent: System.Reflection.MethodImplAttributes
  langs:
  - csharp
  - vb
  name: NoOptimization
  fullName: System.Reflection.MethodImplAttributes.NoOptimization
  type: Field
  source:
    remote:
      path: src/mscorlib/src/System/Reflection/MethodImplAttributes.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: NoOptimization
    path: src/mscorlib/src/System/Reflection/MethodImplAttributes.cs
    startLine: 40
  assemblies:
  - System.Reflection.Primitives
  namespace: System.Reflection
  summary: Specifies that the method is not optimized by the just-in-time (JIT) compiler or by native code generation (see Ngen.exe) when debugging possible code generation problems.
  syntax:
    content: NoOptimization = null
    content.vb: NoOptimization = Nothing
    return:
      type: System.Reflection.MethodImplAttributes
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Reflection.MethodImplAttributes.OPTIL
  commentId: F:System.Reflection.MethodImplAttributes.OPTIL
  id: OPTIL
  parent: System.Reflection.MethodImplAttributes
  langs:
  - csharp
  - vb
  name: OPTIL
  fullName: System.Reflection.MethodImplAttributes.OPTIL
  type: Field
  source:
    remote:
      path: src/mscorlib/src/System/Reflection/MethodImplAttributes.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: OPTIL
    path: src/mscorlib/src/System/Reflection/MethodImplAttributes.cs
    startLine: 20
  assemblies:
  - System.Reflection.Primitives
  namespace: System.Reflection
  summary: Specifies that the method implementation is in Optimized Intermediate Language (OPTIL).
  syntax:
    content: OPTIL = null
    content.vb: OPTIL = Nothing
    return:
      type: System.Reflection.MethodImplAttributes
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Reflection.MethodImplAttributes.PreserveSig
  commentId: F:System.Reflection.MethodImplAttributes.PreserveSig
  id: PreserveSig
  parent: System.Reflection.MethodImplAttributes
  langs:
  - csharp
  - vb
  name: PreserveSig
  fullName: System.Reflection.MethodImplAttributes.PreserveSig
  type: Field
  source:
    remote:
      path: src/mscorlib/src/System/Reflection/MethodImplAttributes.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: PreserveSig
    path: src/mscorlib/src/System/Reflection/MethodImplAttributes.cs
    startLine: 32
  assemblies:
  - System.Reflection.Primitives
  namespace: System.Reflection
  summary: Specifies that the method signature is exported exactly as declared.
  syntax:
    content: PreserveSig = null
    content.vb: PreserveSig = Nothing
    return:
      type: System.Reflection.MethodImplAttributes
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Reflection.MethodImplAttributes.Runtime
  commentId: F:System.Reflection.MethodImplAttributes.Runtime
  id: Runtime
  parent: System.Reflection.MethodImplAttributes
  langs:
  - csharp
  - vb
  name: Runtime
  fullName: System.Reflection.MethodImplAttributes.Runtime
  type: Field
  source:
    remote:
      path: src/mscorlib/src/System/Reflection/MethodImplAttributes.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Runtime
    path: src/mscorlib/src/System/Reflection/MethodImplAttributes.cs
    startLine: 21
  assemblies:
  - System.Reflection.Primitives
  namespace: System.Reflection
  summary: Specifies that the method implementation is provided by the runtime.
  syntax:
    content: Runtime = null
    content.vb: Runtime = Nothing
    return:
      type: System.Reflection.MethodImplAttributes
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Reflection.MethodImplAttributes.Synchronized
  commentId: F:System.Reflection.MethodImplAttributes.Synchronized
  id: Synchronized
  parent: System.Reflection.MethodImplAttributes
  langs:
  - csharp
  - vb
  name: Synchronized
  fullName: System.Reflection.MethodImplAttributes.Synchronized
  type: Field
  source:
    remote:
      path: src/mscorlib/src/System/Reflection/MethodImplAttributes.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Synchronized
    path: src/mscorlib/src/System/Reflection/MethodImplAttributes.cs
    startLine: 36
  assemblies:
  - System.Reflection.Primitives
  namespace: System.Reflection
  summary: 'Specifies that the method is single-threaded through the body. Static methods (Shared in Visual Basic) lock on the type, whereas instance methods lock on the instance. You can also use the C# lock statement or the Visual Basic SyncLock statement for this purpose. '
  syntax:
    content: Synchronized = null
    content.vb: Synchronized = Nothing
    return:
      type: System.Reflection.MethodImplAttributes
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Reflection.MethodImplAttributes.Unmanaged
  commentId: F:System.Reflection.MethodImplAttributes.Unmanaged
  id: Unmanaged
  parent: System.Reflection.MethodImplAttributes
  langs:
  - csharp
  - vb
  name: Unmanaged
  fullName: System.Reflection.MethodImplAttributes.Unmanaged
  type: Field
  source:
    remote:
      path: src/mscorlib/src/System/Reflection/MethodImplAttributes.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Unmanaged
    path: src/mscorlib/src/System/Reflection/MethodImplAttributes.cs
    startLine: 26
  assemblies:
  - System.Reflection.Primitives
  namespace: System.Reflection
  summary: Specifies that the method is implemented in unmanaged code.
  syntax:
    content: Unmanaged = null
    content.vb: Unmanaged = Nothing
    return:
      type: System.Reflection.MethodImplAttributes
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
references:
- uid: System.Reflection
  isExternal: false
  name: System.Reflection
  fullName: System.Reflection
- uid: System.Reflection.MethodImplAttributes
  parent: System.Reflection
  isExternal: false
  name: MethodImplAttributes
  fullName: System.Reflection.MethodImplAttributes
