items:
- uid: System.Globalization.NumberFormatInfo
  commentId: T:System.Globalization.NumberFormatInfo
  id: NumberFormatInfo
  parent: System.Globalization
  children:
  - System.Globalization.NumberFormatInfo.#ctor
  - System.Globalization.NumberFormatInfo.Clone
  - System.Globalization.NumberFormatInfo.CurrencyDecimalDigits
  - System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator
  - System.Globalization.NumberFormatInfo.CurrencyGroupSeparator
  - System.Globalization.NumberFormatInfo.CurrencyGroupSizes
  - System.Globalization.NumberFormatInfo.CurrencyNegativePattern
  - System.Globalization.NumberFormatInfo.CurrencyPositivePattern
  - System.Globalization.NumberFormatInfo.CurrencySymbol
  - System.Globalization.NumberFormatInfo.CurrentInfo
  - System.Globalization.NumberFormatInfo.GetFormat(System.Type)
  - System.Globalization.NumberFormatInfo.GetInstance(System.IFormatProvider)
  - System.Globalization.NumberFormatInfo.InvariantInfo
  - System.Globalization.NumberFormatInfo.IsReadOnly
  - System.Globalization.NumberFormatInfo.NaNSymbol
  - System.Globalization.NumberFormatInfo.NegativeInfinitySymbol
  - System.Globalization.NumberFormatInfo.NegativeSign
  - System.Globalization.NumberFormatInfo.NumberDecimalDigits
  - System.Globalization.NumberFormatInfo.NumberDecimalSeparator
  - System.Globalization.NumberFormatInfo.NumberGroupSeparator
  - System.Globalization.NumberFormatInfo.NumberGroupSizes
  - System.Globalization.NumberFormatInfo.NumberNegativePattern
  - System.Globalization.NumberFormatInfo.PercentDecimalDigits
  - System.Globalization.NumberFormatInfo.PercentDecimalSeparator
  - System.Globalization.NumberFormatInfo.PercentGroupSeparator
  - System.Globalization.NumberFormatInfo.PercentGroupSizes
  - System.Globalization.NumberFormatInfo.PercentNegativePattern
  - System.Globalization.NumberFormatInfo.PercentPositivePattern
  - System.Globalization.NumberFormatInfo.PercentSymbol
  - System.Globalization.NumberFormatInfo.PerMilleSymbol
  - System.Globalization.NumberFormatInfo.PositiveInfinitySymbol
  - System.Globalization.NumberFormatInfo.PositiveSign
  - System.Globalization.NumberFormatInfo.ReadOnly(System.Globalization.NumberFormatInfo)
  langs:
  - csharp
  - vb
  name: NumberFormatInfo
  fullName: System.Globalization.NumberFormatInfo
  type: Class
  source:
    remote:
      path: src/mscorlib/src/System/Globalization/NumberFormatInfo.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: NumberFormatInfo
    path: src/mscorlib/src/System/Globalization/NumberFormatInfo.cs
    startLine: 42
  assemblies:
  - System.Globalization
  namespace: System.Globalization
  summary: "\n<p>Provides culture-specific information for formatting and parsing numeric values. </p>\n"
  remarks: "\n<p>The <xref href=\"System.Globalization.NumberFormatInfo\" data-throw-if-not-resolved=\"false\"></xref> class contains culture-specific information that is used when you format and parse numeric values. This information includes the currency symbol, the decimal symbol, the group separator symbol, and the symbols for positive and negative signs. </p>\n<ul><li>\n<p>Instantiating a NumberFormatInfo object</p>\n<ul><li>\n<p>For the current culture</p>\n</li><li>\n<p>For the invariant culture</p>\n</li><li>\n<p>For a specific culture</p>\n</li><li>\n<p>For a neutral culture</p>\n</li></ul>\n</li><li>\n<p>NumberFormatInfo and dynamic data</p>\n</li><li>\n<p>IFormatProvider, NumberFormatInfo, and numeric formatting</p>\n</li><li>\n<p>Format strings and NumberFormatInfo properties</p>\n</li><li>\n<p>Modifying NumberFormatInfo properties</p>\n<ul><li>\n<p>Modifying the currency symbol and pattern</p>\n</li><li>\n<p>Formatting a national identification number</p>\n</li></ul>\n</li><li>\n<p>Parsing numeric strings</p>\n<ul><li>\n<p>Parsing user strings</p>\n</li><li>\n<p>Serializing and deserializing numeric data</p>\n</li></ul>\n</li></ul>\n"
  example:
  - <p>The following example shows how to retrieve a <xref href="System.Globalization.NumberFormatInfo" data-throw-if-not-resolved="false"></xref> object for a corresponding <xref href="System.Globalization.CultureInfo" data-throw-if-not-resolved="false"></xref> object, and use the retrieved object to query number formatting information for the particular culture.</p>NumberFormatInfo#1
  syntax:
    content: >-
      [Serializable]

      [ComVisible(true)]

      public sealed class NumberFormatInfo : ICloneable, IFormatProvider
    content.vb: >-
      <Serializable>

      <ComVisible(True)>

      Public NotInheritable Class NumberFormatInfo
          Implements ICloneable, IFormatProvider
  seealso:
  - type: System.Globalization.CultureInfo
    commentId: T:System.Globalization.CultureInfo
  - type: System.IFormatProvider
    commentId: T:System.IFormatProvider
  inheritance:
  - System.Object
  implements:
  - System.IFormatProvider
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: System.Globalization.NumberFormatInfo.#ctor
  commentId: M:System.Globalization.NumberFormatInfo.#ctor
  id: '#ctor'
  parent: System.Globalization.NumberFormatInfo
  langs:
  - csharp
  - vb
  name: NumberFormatInfo()
  fullName: System.Globalization.NumberFormatInfo.NumberFormatInfo()
  type: Constructor
  source:
    remote:
      path: src/mscorlib/src/System/Globalization/NumberFormatInfo.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: .ctor
    path: src/mscorlib/src/System/Globalization/NumberFormatInfo.cs
    startLine: 109
  assemblies:
  - System.Globalization
  namespace: System.Globalization
  summary: "\n<p>Initializes a new writable instance of the <xref href=\"System.Globalization.NumberFormatInfo\" data-throw-if-not-resolved=\"false\"></xref> class that is culture-independent (invariant).</p>\n"
  remarks: "\n<p>The properties of the new instance can be modified if your application needs user-defined formatting.</p>\n"
  syntax:
    content: public NumberFormatInfo()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Globalization.NumberFormatInfo.CurrencyDecimalDigits
  commentId: P:System.Globalization.NumberFormatInfo.CurrencyDecimalDigits
  id: CurrencyDecimalDigits
  parent: System.Globalization.NumberFormatInfo
  langs:
  - csharp
  - vb
  name: CurrencyDecimalDigits
  fullName: System.Globalization.NumberFormatInfo.CurrencyDecimalDigits
  type: Property
  source:
    remote:
      path: src/mscorlib/src/System/Globalization/NumberFormatInfo.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: CurrencyDecimalDigits
    path: src/mscorlib/src/System/Globalization/NumberFormatInfo.cs
    startLine: 319
  assemblies:
  - System.Globalization
  namespace: System.Globalization
  summary: "\n<p>Gets or sets the number of decimal places to use in currency values.</p>\n"
  remarks: "\n<p>The <xref href=\"System.Globalization.NumberFormatInfo.CurrencyDecimalDigits\" data-throw-if-not-resolved=\"false\"></xref> property is used with the \"C\" standard format string without a precision specifier in numeric formatting operations. It defines the default number of fractional digits that appear after the decimal separator. This value is overridden if a precision specifier is used. For more information, see Standard Numeric Format Strings.</p>\n"
  example:
  - "\n<p>The following example demonstrates the effect of changing the <xref href=\"System.Globalization.NumberFormatInfo.CurrencyDecimalDigits\" data-throw-if-not-resolved=\"false\"></xref> property.</p>CurrencyDecimalDigits#1"
  syntax:
    content: public int CurrencyDecimalDigits { get; set; }
    content.vb: Public Property CurrencyDecimalDigits As Integer
    parameters: []
    return:
      type: System.Int32
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>The property is being set to a value that is less than 0 or greater than 99. </p>\n"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "\n<p>The property is being set and the <xref href=\"System.Globalization.NumberFormatInfo\" data-throw-if-not-resolved=\"false\"></xref> object is read-only. </p>\n"
  seealso:
  - type: System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator
    commentId: P:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator
  - type: System.Globalization.NumberFormatInfo.CurrencyGroupSeparator
    commentId: P:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator
  - type: System.Globalization.NumberFormatInfo.CurrencyGroupSizes
    commentId: P:System.Globalization.NumberFormatInfo.CurrencyGroupSizes
  - type: System.Globalization.NumberFormatInfo.CurrencySymbol
    commentId: P:System.Globalization.NumberFormatInfo.CurrencySymbol
  - type: System.Globalization.NumberFormatInfo.CurrencyNegativePattern
    commentId: P:System.Globalization.NumberFormatInfo.CurrencyNegativePattern
  - type: System.Globalization.NumberFormatInfo.CurrencyPositivePattern
    commentId: P:System.Globalization.NumberFormatInfo.CurrencyPositivePattern
  - type: System.Globalization.NumberFormatInfo.NumberDecimalDigits
    commentId: P:System.Globalization.NumberFormatInfo.NumberDecimalDigits
  - type: System.Globalization.NumberFormatInfo.PercentDecimalDigits
    commentId: P:System.Globalization.NumberFormatInfo.PercentDecimalDigits
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator
  commentId: P:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator
  id: CurrencyDecimalSeparator
  parent: System.Globalization.NumberFormatInfo
  langs:
  - csharp
  - vb
  name: CurrencyDecimalSeparator
  fullName: System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator
  type: Property
  source:
    remote:
      path: src/mscorlib/src/System/Globalization/NumberFormatInfo.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: CurrencyDecimalSeparator
    path: src/mscorlib/src/System/Globalization/NumberFormatInfo.cs
    startLine: 338
  assemblies:
  - System.Globalization
  namespace: System.Globalization
  summary: "\n<p>Gets or sets the string to use as the decimal separator in currency values.</p>\n"
  remarks: "\n<p>The initial value of this property is derived from the settings in the Region and Language item in Control Panel. </p>\n<p>The <xref href=\"System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator\" data-throw-if-not-resolved=\"false\"></xref> property is used with the \"C\" standard format string to define the symbol that separates integral from fractional digits. For more information, see Standard Numeric Format Strings. </p>\n"
  example:
  - "\n<p>The following example demonstrates the effect of changing the <xref href=\"System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator\" data-throw-if-not-resolved=\"false\"></xref> property.</p>CurrencyDecimalSeparator#1"
  syntax:
    content: public string CurrencyDecimalSeparator { get; set; }
    content.vb: Public Property CurrencyDecimalSeparator As String
    parameters: []
    return:
      type: System.String
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>The property is being set to <strong>null</strong>. </p>\n"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "\n<p>The property is being set and the <xref href=\"System.Globalization.NumberFormatInfo\" data-throw-if-not-resolved=\"false\"></xref> object is read-only. </p>\n"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<p>The property is being set to an empty string.</p>\n"
  seealso:
  - type: System.Globalization.NumberFormatInfo.CurrencyDecimalDigits
    commentId: P:System.Globalization.NumberFormatInfo.CurrencyDecimalDigits
  - type: System.Globalization.NumberFormatInfo.CurrencyGroupSeparator
    commentId: P:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator
  - type: System.Globalization.NumberFormatInfo.CurrencyGroupSizes
    commentId: P:System.Globalization.NumberFormatInfo.CurrencyGroupSizes
  - type: System.Globalization.NumberFormatInfo.CurrencySymbol
    commentId: P:System.Globalization.NumberFormatInfo.CurrencySymbol
  - type: System.Globalization.NumberFormatInfo.CurrencyNegativePattern
    commentId: P:System.Globalization.NumberFormatInfo.CurrencyNegativePattern
  - type: System.Globalization.NumberFormatInfo.CurrencyPositivePattern
    commentId: P:System.Globalization.NumberFormatInfo.CurrencyPositivePattern
  - type: System.Globalization.NumberFormatInfo.NumberDecimalSeparator
    commentId: P:System.Globalization.NumberFormatInfo.NumberDecimalSeparator
  - type: System.Globalization.NumberFormatInfo.PercentDecimalSeparator
    commentId: P:System.Globalization.NumberFormatInfo.PercentDecimalSeparator
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Globalization.NumberFormatInfo.CurrencyGroupSeparator
  commentId: P:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator
  id: CurrencyGroupSeparator
  parent: System.Globalization.NumberFormatInfo
  langs:
  - csharp
  - vb
  name: CurrencyGroupSeparator
  fullName: System.Globalization.NumberFormatInfo.CurrencyGroupSeparator
  type: Property
  source:
    remote:
      path: src/mscorlib/src/System/Globalization/NumberFormatInfo.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: CurrencyGroupSeparator
    path: src/mscorlib/src/System/Globalization/NumberFormatInfo.cs
    startLine: 437
  assemblies:
  - System.Globalization
  namespace: System.Globalization
  summary: "\n<p>Gets or sets the string that separates groups of digits to the left of the decimal in currency values.</p>\n"
  remarks: "\n<p>The initial value of this property is derived from the settings in the Regional and Language item in Control Panel. </p>\n<p>The <xref href=\"System.Globalization.NumberFormatInfo.CurrencyGroupSeparator\" data-throw-if-not-resolved=\"false\"></xref>  property is used with the \"C\" standard format string to define the symbol that separates groups of integral digits. For more information, see Standard Numeric Format Strings. </p>\n"
  example:
  - "\n<p>The following example demonstrates the effect of changing the <xref href=\"System.Globalization.NumberFormatInfo.CurrencyGroupSeparator\" data-throw-if-not-resolved=\"false\"></xref> property.</p>CurrencyGroupSeparator#1"
  syntax:
    content: public string CurrencyGroupSeparator { get; set; }
    content.vb: Public Property CurrencyGroupSeparator As String
    parameters: []
    return:
      type: System.String
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>The property is being set to <strong>null</strong>. </p>\n"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "\n<p>The property is being set and the <xref href=\"System.Globalization.NumberFormatInfo\" data-throw-if-not-resolved=\"false\"></xref> object is read-only. </p>\n"
  seealso:
  - type: System.Globalization.NumberFormatInfo.CurrencyDecimalDigits
    commentId: P:System.Globalization.NumberFormatInfo.CurrencyDecimalDigits
  - type: System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator
    commentId: P:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator
  - type: System.Globalization.NumberFormatInfo.CurrencyGroupSizes
    commentId: P:System.Globalization.NumberFormatInfo.CurrencyGroupSizes
  - type: System.Globalization.NumberFormatInfo.CurrencySymbol
    commentId: P:System.Globalization.NumberFormatInfo.CurrencySymbol
  - type: System.Globalization.NumberFormatInfo.CurrencyNegativePattern
    commentId: P:System.Globalization.NumberFormatInfo.CurrencyNegativePattern
  - type: System.Globalization.NumberFormatInfo.CurrencyPositivePattern
    commentId: P:System.Globalization.NumberFormatInfo.CurrencyPositivePattern
  - type: System.Globalization.NumberFormatInfo.NumberGroupSeparator
    commentId: P:System.Globalization.NumberFormatInfo.NumberGroupSeparator
  - type: System.Globalization.NumberFormatInfo.PercentGroupSeparator
    commentId: P:System.Globalization.NumberFormatInfo.PercentGroupSeparator
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Globalization.NumberFormatInfo.CurrencyGroupSizes
  commentId: P:System.Globalization.NumberFormatInfo.CurrencyGroupSizes
  id: CurrencyGroupSizes
  parent: System.Globalization.NumberFormatInfo
  langs:
  - csharp
  - vb
  name: CurrencyGroupSizes
  fullName: System.Globalization.NumberFormatInfo.CurrencyGroupSizes
  type: Property
  source:
    remote:
      path: src/mscorlib/src/System/Globalization/NumberFormatInfo.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: CurrencyGroupSizes
    path: src/mscorlib/src/System/Globalization/NumberFormatInfo.cs
    startLine: 378
  assemblies:
  - System.Globalization
  namespace: System.Globalization
  summary: "\n<p>Gets or sets the number of digits in each group to the left of the decimal in currency values.</p>\n"
  remarks: "\n<p>The <xref href=\"System.Globalization.NumberFormatInfo.CurrencyGroupSizes\" data-throw-if-not-resolved=\"false\"></xref>  property is used with the \"C\" standard format string to define the number of digits that appear in integral groups. For more information, see Standard Numeric Format Strings. Every element in the one-dimensional array must be an integer from 1 through 9. The last element can be 0.</p>\n<p>The first element of the array defines the number of elements in the least significant group of digits immediately to the left of the <xref href=\"System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator\" data-throw-if-not-resolved=\"false\"></xref>. Each subsequent element refers to the next significant group of digits to the left of the previous group. If the last element of the array is not 0, the remaining digits are grouped based on the last element of the array. If the last element is 0, the remaining digits are not grouped.</p>\n<p>For example, if the array contains { 3, 4, 5 }, the digits are grouped similar to \"$55,55555,55555,55555,4444,333.00\". If the array contains { 3, 4, 0 }, the digits are grouped similar to \"$55555555555555555,4444,333.00\".</p>\n"
  example:
  - "\n<p>The following example demonstrates the effect of changing the <xref href=\"System.Globalization.NumberFormatInfo.CurrencyGroupSizes\" data-throw-if-not-resolved=\"false\"></xref> property.</p>CurrencyGroupSizes#1"
  syntax:
    content: public int[] CurrencyGroupSizes { get; set; }
    content.vb: Public Property CurrencyGroupSizes As Integer()
    parameters: []
    return:
      type: System.Int32[]
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>The property is being set to <strong>null</strong>. </p>\n"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<p>The property is being set and the array contains an entry that is less than 0 or greater than 9.</p>\n<p>-or- </p>\n<p>The property is being set and the array contains an entry, other than the last entry, that is set to 0. </p>\n"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "\n<p>The property is being set and the <xref href=\"System.Globalization.NumberFormatInfo\" data-throw-if-not-resolved=\"false\"></xref> object is read-only. </p>\n"
  seealso:
  - type: System.Globalization.NumberFormatInfo.CurrencyDecimalDigits
    commentId: P:System.Globalization.NumberFormatInfo.CurrencyDecimalDigits
  - type: System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator
    commentId: P:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator
  - type: System.Globalization.NumberFormatInfo.CurrencyGroupSeparator
    commentId: P:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator
  - type: System.Globalization.NumberFormatInfo.CurrencySymbol
    commentId: P:System.Globalization.NumberFormatInfo.CurrencySymbol
  - type: System.Globalization.NumberFormatInfo.CurrencyNegativePattern
    commentId: P:System.Globalization.NumberFormatInfo.CurrencyNegativePattern
  - type: System.Globalization.NumberFormatInfo.CurrencyPositivePattern
    commentId: P:System.Globalization.NumberFormatInfo.CurrencyPositivePattern
  - type: System.Globalization.NumberFormatInfo.NumberGroupSizes
    commentId: P:System.Globalization.NumberFormatInfo.NumberGroupSizes
  - type: System.Globalization.NumberFormatInfo.PercentGroupSizes
    commentId: P:System.Globalization.NumberFormatInfo.PercentGroupSizes
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Globalization.NumberFormatInfo.CurrencyNegativePattern
  commentId: P:System.Globalization.NumberFormatInfo.CurrencyNegativePattern
  id: CurrencyNegativePattern
  parent: System.Globalization.NumberFormatInfo
  langs:
  - csharp
  - vb
  name: CurrencyNegativePattern
  fullName: System.Globalization.NumberFormatInfo.CurrencyNegativePattern
  type: Property
  source:
    remote:
      path: src/mscorlib/src/System/Globalization/NumberFormatInfo.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: CurrencyNegativePattern
    path: src/mscorlib/src/System/Globalization/NumberFormatInfo.cs
    startLine: 494
  assemblies:
  - System.Globalization
  namespace: System.Globalization
  summary: "\n<p>Gets or sets the format pattern for negative currency values.</p>\n"
  remarks: "\n<p>The <xref href=\"System.Globalization.NumberFormatInfo.CurrencyNegativePattern\" data-throw-if-not-resolved=\"false\"></xref> property is used with the \"C\" standard format string to define the pattern of negative currency values. For more information, see Standard Numeric Format Strings. This property has one of the values in the following table. The symbol \"$\" is the <xref href=\"System.Globalization.NumberFormatInfo.CurrencySymbol\" data-throw-if-not-resolved=\"false\"></xref>, the symbol \"-\" is the <xref href=\"System.Globalization.NumberFormatInfo.NegativeSign\" data-throw-if-not-resolved=\"false\"></xref>, and <em>n</em> is a number.</p>\n<p>Value </p>\n<p>Associated pattern </p>\n<table><tbody><tr><td>\n<p>0 </p>\n</td><td>\n<p>($n) </p>\n</td></tr><tr><td>\n<p>1 </p>\n</td><td>\n<p>-$n </p>\n</td></tr><tr><td>\n<p>2 </p>\n</td><td>\n<p>$-n </p>\n</td></tr><tr><td>\n<p>3 </p>\n</td><td>\n<p>$n- </p>\n</td></tr><tr><td>\n<p>4 </p>\n</td><td>\n<p>(n$) </p>\n</td></tr><tr><td>\n<p>5 </p>\n</td><td>\n<p>-n$ </p>\n</td></tr><tr><td>\n<p>6 </p>\n</td><td>\n<p>n-$ </p>\n</td></tr><tr><td>\n<p>7 </p>\n</td><td>\n<p>n$- </p>\n</td></tr><tr><td>\n<p>8 </p>\n</td><td>\n<p>-n $ </p>\n</td></tr><tr><td>\n<p>9 </p>\n</td><td>\n<p>-$ n </p>\n</td></tr><tr><td>\n<p>10 </p>\n</td><td>\n<p>n $- </p>\n</td></tr><tr><td>\n<p>11 </p>\n</td><td>\n<p>$ n- </p>\n</td></tr><tr><td>\n<p>12 </p>\n</td><td>\n<p>$ -n </p>\n</td></tr><tr><td>\n<p>13 </p>\n</td><td>\n<p>n- $ </p>\n</td></tr><tr><td>\n<p>14 </p>\n</td><td>\n<p>($ n) </p>\n</td></tr><tr><td>\n<p>15 </p>\n</td><td>\n<p>(n $) </p>\n</td></tr></tbody></table>\n"
  example:
  - "\n<p>The following example shows how the <xref href=\"System.Globalization.NumberFormatInfo.CurrencyNegativePattern\" data-throw-if-not-resolved=\"false\"></xref> property defines the format of negative currency values.  It retrieves all the specific cultures that are defined on the host computer and displays each culture's <xref href=\"System.Globalization.NumberFormatInfo.CurrencyNegativePattern\" data-throw-if-not-resolved=\"false\"></xref> property value, its associated pattern, and a number formatted as a currency value. </p>System.Globalization.NumberFormatInfo.CurrencyNegativePattern#1"
  syntax:
    content: public int CurrencyNegativePattern { get; set; }
    content.vb: Public Property CurrencyNegativePattern As Integer
    parameters: []
    return:
      type: System.Int32
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>The property is being set to a value that is less than 0 or greater than 15. </p>\n"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "\n<p>The property is being set and the <xref href=\"System.Globalization.NumberFormatInfo\" data-throw-if-not-resolved=\"false\"></xref> object is read-only. </p>\n"
  seealso:
  - type: System.Globalization.NumberFormatInfo.CurrencyDecimalDigits
    commentId: P:System.Globalization.NumberFormatInfo.CurrencyDecimalDigits
  - type: System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator
    commentId: P:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator
  - type: System.Globalization.NumberFormatInfo.CurrencyGroupSeparator
    commentId: P:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator
  - type: System.Globalization.NumberFormatInfo.CurrencyGroupSizes
    commentId: P:System.Globalization.NumberFormatInfo.CurrencyGroupSizes
  - type: System.Globalization.NumberFormatInfo.CurrencySymbol
    commentId: P:System.Globalization.NumberFormatInfo.CurrencySymbol
  - type: System.Globalization.NumberFormatInfo.CurrencyPositivePattern
    commentId: P:System.Globalization.NumberFormatInfo.CurrencyPositivePattern
  - type: System.Globalization.NumberFormatInfo.NumberNegativePattern
    commentId: P:System.Globalization.NumberFormatInfo.NumberNegativePattern
  - type: System.Globalization.NumberFormatInfo.PercentNegativePattern
    commentId: P:System.Globalization.NumberFormatInfo.PercentNegativePattern
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Globalization.NumberFormatInfo.CurrencyPositivePattern
  commentId: P:System.Globalization.NumberFormatInfo.CurrencyPositivePattern
  id: CurrencyPositivePattern
  parent: System.Globalization.NumberFormatInfo
  langs:
  - csharp
  - vb
  name: CurrencyPositivePattern
  fullName: System.Globalization.NumberFormatInfo.CurrencyPositivePattern
  type: Property
  source:
    remote:
      path: src/mscorlib/src/System/Globalization/NumberFormatInfo.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: CurrencyPositivePattern
    path: src/mscorlib/src/System/Globalization/NumberFormatInfo.cs
    startLine: 648
  assemblies:
  - System.Globalization
  namespace: System.Globalization
  summary: "\n<p>Gets or sets the format pattern for positive currency values.</p>\n"
  remarks: "\n<p>The <xref href=\"System.Globalization.NumberFormatInfo.CurrencyPositivePattern\" data-throw-if-not-resolved=\"false\"></xref>  property is used with the \"C\" standard format string to define pattern of positive currency values. For more information, see Standard Numeric Format Strings. This property has one of the values in the following table. The symbol \"$\" is the <xref href=\"System.Globalization.NumberFormatInfo.CurrencySymbol\" data-throw-if-not-resolved=\"false\"></xref> and <em>n</em> is a number.</p>\n<p>Value </p>\n<p>Associated pattern </p>\n<table><tbody><tr><td>\n<p>0 </p>\n</td><td>\n<p>$n </p>\n</td></tr><tr><td>\n<p>1 </p>\n</td><td>\n<p>n$ </p>\n</td></tr><tr><td>\n<p>2 </p>\n</td><td>\n<p>$ n </p>\n</td></tr><tr><td>\n<p>3 </p>\n</td><td>\n<p>n $ </p>\n</td></tr></tbody></table>\n<p>Note that the pattern does not support a positive sign.</p>\n"
  syntax:
    content: public int CurrencyPositivePattern { get; set; }
    content.vb: Public Property CurrencyPositivePattern As Integer
    parameters: []
    return:
      type: System.Int32
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>The property is being set to a value that is less than 0 or greater than 3. </p>\n"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "\n<p>The property is being set and the <xref href=\"System.Globalization.NumberFormatInfo\" data-throw-if-not-resolved=\"false\"></xref> object is read-only. </p>\n"
  seealso:
  - type: System.Globalization.NumberFormatInfo.CurrencyDecimalDigits
    commentId: P:System.Globalization.NumberFormatInfo.CurrencyDecimalDigits
  - type: System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator
    commentId: P:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator
  - type: System.Globalization.NumberFormatInfo.CurrencyGroupSeparator
    commentId: P:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator
  - type: System.Globalization.NumberFormatInfo.CurrencyGroupSizes
    commentId: P:System.Globalization.NumberFormatInfo.CurrencyGroupSizes
  - type: System.Globalization.NumberFormatInfo.CurrencySymbol
    commentId: P:System.Globalization.NumberFormatInfo.CurrencySymbol
  - type: System.Globalization.NumberFormatInfo.CurrencyNegativePattern
    commentId: P:System.Globalization.NumberFormatInfo.CurrencyNegativePattern
  - type: System.Globalization.NumberFormatInfo.PercentPositivePattern
    commentId: P:System.Globalization.NumberFormatInfo.PercentPositivePattern
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Globalization.NumberFormatInfo.CurrencySymbol
  commentId: P:System.Globalization.NumberFormatInfo.CurrencySymbol
  id: CurrencySymbol
  parent: System.Globalization.NumberFormatInfo
  langs:
  - csharp
  - vb
  name: CurrencySymbol
  fullName: System.Globalization.NumberFormatInfo.CurrencySymbol
  type: Property
  source:
    remote:
      path: src/mscorlib/src/System/Globalization/NumberFormatInfo.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: CurrencySymbol
    path: src/mscorlib/src/System/Globalization/NumberFormatInfo.cs
    startLine: 447
  assemblies:
  - System.Globalization
  namespace: System.Globalization
  summary: "\n<p>Gets or sets the string to use as the currency symbol.</p>\n"
  remarks: "\n<p>The string assigned to the <xref href=\"System.Globalization.NumberFormatInfo.CurrencySymbol\" data-throw-if-not-resolved=\"false\"></xref> property is included in the result string when a numeric value is formatted with the \"C\" standard numeric format string.</p>\n"
  example:
  - "\n<p>The following example displays the currency symbol for the current culture and uses the \"C\" standard numeric format string to format a currency value. </p>System.Globalization.NumberFormatInfo.CurrencySymbol#1"
  syntax:
    content: public string CurrencySymbol { get; set; }
    content.vb: Public Property CurrencySymbol As String
    parameters: []
    return:
      type: System.String
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>The property is being set to <strong>null</strong>. </p>\n"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "\n<p>The property is being set and the <xref href=\"System.Globalization.NumberFormatInfo\" data-throw-if-not-resolved=\"false\"></xref> object is read-only. </p>\n"
  seealso:
  - type: System.Globalization.NumberFormatInfo.CurrencyDecimalDigits
    commentId: P:System.Globalization.NumberFormatInfo.CurrencyDecimalDigits
  - type: System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator
    commentId: P:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator
  - type: System.Globalization.NumberFormatInfo.CurrencyGroupSeparator
    commentId: P:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator
  - type: System.Globalization.NumberFormatInfo.CurrencyGroupSizes
    commentId: P:System.Globalization.NumberFormatInfo.CurrencyGroupSizes
  - type: System.Globalization.NumberFormatInfo.CurrencyNegativePattern
    commentId: P:System.Globalization.NumberFormatInfo.CurrencyNegativePattern
  - type: System.Globalization.NumberFormatInfo.CurrencyPositivePattern
    commentId: P:System.Globalization.NumberFormatInfo.CurrencyPositivePattern
  - type: System.Globalization.NumberFormatInfo.NaNSymbol
    commentId: P:System.Globalization.NumberFormatInfo.NaNSymbol
  - type: System.Globalization.NumberFormatInfo.PercentSymbol
    commentId: P:System.Globalization.NumberFormatInfo.PercentSymbol
  - type: System.Globalization.NumberFormatInfo.PerMilleSymbol
    commentId: P:System.Globalization.NumberFormatInfo.PerMilleSymbol
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Globalization.NumberFormatInfo.CurrentInfo
  commentId: P:System.Globalization.NumberFormatInfo.CurrentInfo
  id: CurrentInfo
  parent: System.Globalization.NumberFormatInfo
  langs:
  - csharp
  - vb
  name: CurrentInfo
  fullName: System.Globalization.NumberFormatInfo.CurrentInfo
  type: Property
  source:
    remote:
      path: src/mscorlib/src/System/Globalization/NumberFormatInfo.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: CurrentInfo
    path: src/mscorlib/src/System/Globalization/NumberFormatInfo.cs
    startLine: 463
  assemblies:
  - System.Globalization
  namespace: System.Globalization
  summary: "\n<p>Gets a read-only <xref href=\"System.Globalization.NumberFormatInfo\" data-throw-if-not-resolved=\"false\"></xref> that formats values based on the current culture.</p>\n"
  remarks: "\n<p>Retrieving a <xref href=\"System.Globalization.NumberFormatInfo\" data-throw-if-not-resolved=\"false\"></xref> object from the <xref href=\"System.Globalization.NumberFormatInfo.CurrentInfo\" data-throw-if-not-resolved=\"false\"></xref> property is equivalent to retrieving a <xref href=\"System.Globalization.NumberFormatInfo\" data-throw-if-not-resolved=\"false\"></xref> object from the <strong>CultureInfo.CurrentCulture.NumberFormat</strong> property. </p>\n"
  example:
  - "\n<p>The following example shows that the objects returned by the <xref href=\"System.Globalization.NumberFormatInfo.CurrentInfo\" data-throw-if-not-resolved=\"false\"></xref> and   <strong>CultureInfo.CurrentCulture.NumberFormat</strong> properties are identical. It then uses reflection to display the property values of the <xref href=\"System.Globalization.NumberFormatInfo\" data-throw-if-not-resolved=\"false\"></xref> object returned by the <xref href=\"System.Globalization.NumberFormatInfo.CurrentInfo\" data-throw-if-not-resolved=\"false\"></xref> property on a system whose current culture is en-US. </p>System.Globalization.NumberFormatInfo.CurrentInfo#1"
  syntax:
    content: public static NumberFormatInfo CurrentInfo { get; }
    content.vb: Public Shared ReadOnly Property CurrentInfo As NumberFormatInfo
    parameters: []
    return:
      type: System.Globalization.NumberFormatInfo
  seealso:
  - type: System.Globalization.CultureInfo
    commentId: T:System.Globalization.CultureInfo
  - type: System.Globalization.CultureInfo.NumberFormat
    commentId: P:System.Globalization.CultureInfo.NumberFormat
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: System.Globalization.NumberFormatInfo.InvariantInfo
  commentId: P:System.Globalization.NumberFormatInfo.InvariantInfo
  id: InvariantInfo
  parent: System.Globalization.NumberFormatInfo
  langs:
  - csharp
  - vb
  name: InvariantInfo
  fullName: System.Globalization.NumberFormatInfo.InvariantInfo
  type: Property
  source:
    remote:
      path: src/mscorlib/src/System/Globalization/NumberFormatInfo.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: InvariantInfo
    path: src/mscorlib/src/System/Globalization/NumberFormatInfo.cs
    startLine: 269
  assemblies:
  - System.Globalization
  namespace: System.Globalization
  summary: "\n<p>Gets a read-only <xref href=\"System.Globalization.NumberFormatInfo\" data-throw-if-not-resolved=\"false\"></xref> object that is culture-independent (invariant).</p>\n"
  remarks: "\n<p>This <xref href=\"System.Globalization.NumberFormatInfo\" data-throw-if-not-resolved=\"false\"></xref> object returned by this property does not change, regardless of the current culture. It represents the formatting conventions of the invariant culture, which is a culture associated with the English language but not with any country/region. The invariant culture is used in formatting operations that are culture-independent or that produce result strings suitable for display across multiple cultures. </p>\n"
  example:
  - "\n<p>The following example displays the default property values of the <xref href=\"System.Globalization.NumberFormatInfo.InvariantInfo\" data-throw-if-not-resolved=\"false\"></xref>.</p>System.Globalization.NumberFormatInfo.InvariantInfo#1"
  syntax:
    content: public static NumberFormatInfo InvariantInfo { get; }
    content.vb: Public Shared ReadOnly Property InvariantInfo As NumberFormatInfo
    parameters: []
    return:
      type: System.Globalization.NumberFormatInfo
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: System.Globalization.NumberFormatInfo.IsReadOnly
  commentId: P:System.Globalization.NumberFormatInfo.IsReadOnly
  id: IsReadOnly
  parent: System.Globalization.NumberFormatInfo
  langs:
  - csharp
  - vb
  name: IsReadOnly
  fullName: System.Globalization.NumberFormatInfo.IsReadOnly
  type: Property
  source:
    remote:
      path: src/mscorlib/src/System/Globalization/NumberFormatInfo.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: IsReadOnly
    path: src/mscorlib/src/System/Globalization/NumberFormatInfo.cs
    startLine: 348
  assemblies:
  - System.Globalization
  namespace: System.Globalization
  summary: "\n<p>Gets a value that indicates whether this <xref href=\"System.Globalization.NumberFormatInfo\" data-throw-if-not-resolved=\"false\"></xref> object is read-only.</p>\n"
  remarks: "\n<p>Attempting to perform an assignment to a property of a read-only <xref href=\"System.Globalization.NumberFormatInfo\" data-throw-if-not-resolved=\"false\"></xref> causes an <xref href=\"System.InvalidOperationException\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>You can call the <xref href=\"System.Globalization.NumberFormatInfo.Clone\" data-throw-if-not-resolved=\"false\"></xref> method to create a read/write <xref href=\"System.Globalization.NumberFormatInfo\" data-throw-if-not-resolved=\"false\"></xref> object from a read-only object, as the following example illustrates. </p>System.Globalization.NumberFormatInfo.IsReadOnly#1"
  syntax:
    content: public bool IsReadOnly { get; }
    content.vb: Public ReadOnly Property IsReadOnly As Boolean
    parameters: []
    return:
      type: System.Boolean
  seealso:
  - type: System.Globalization.NumberFormatInfo.ReadOnly(System.Globalization.NumberFormatInfo)
    commentId: M:System.Globalization.NumberFormatInfo.ReadOnly(System.Globalization.NumberFormatInfo)
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Globalization.NumberFormatInfo.NaNSymbol
  commentId: P:System.Globalization.NumberFormatInfo.NaNSymbol
  id: NaNSymbol
  parent: System.Globalization.NumberFormatInfo
  langs:
  - csharp
  - vb
  name: NaNSymbol
  fullName: System.Globalization.NumberFormatInfo.NaNSymbol
  type: Property
  source:
    remote:
      path: src/mscorlib/src/System/Globalization/NumberFormatInfo.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: NaNSymbol
    path: src/mscorlib/src/System/Globalization/NumberFormatInfo.cs
    startLine: 477
  assemblies:
  - System.Globalization
  namespace: System.Globalization
  summary: "\n<p>Gets or sets the string that represents the IEEE NaN (not a number) value.</p>\n"
  remarks: "\n<p>For more information on NaN values, see <xref href=\"System.Double\" data-throw-if-not-resolved=\"false\"></xref> or <xref href=\"System.Single\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: public string NaNSymbol { get; set; }
    content.vb: Public Property NaNSymbol As String
    parameters: []
    return:
      type: System.String
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>The property is being set to <strong>null</strong>. </p>\n"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "\n<p>The property is being set and the <xref href=\"System.Globalization.NumberFormatInfo\" data-throw-if-not-resolved=\"false\"></xref> object is read-only. </p>\n"
  seealso:
  - type: System.Globalization.NumberFormatInfo.PositiveInfinitySymbol
    commentId: P:System.Globalization.NumberFormatInfo.PositiveInfinitySymbol
  - type: System.Globalization.NumberFormatInfo.NegativeInfinitySymbol
    commentId: P:System.Globalization.NumberFormatInfo.NegativeInfinitySymbol
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Globalization.NumberFormatInfo.NegativeInfinitySymbol
  commentId: P:System.Globalization.NumberFormatInfo.NegativeInfinitySymbol
  id: NegativeInfinitySymbol
  parent: System.Globalization.NumberFormatInfo
  langs:
  - csharp
  - vb
  name: NegativeInfinitySymbol
  fullName: System.Globalization.NumberFormatInfo.NegativeInfinitySymbol
  type: Property
  source:
    remote:
      path: src/mscorlib/src/System/Globalization/NumberFormatInfo.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: NegativeInfinitySymbol
    path: src/mscorlib/src/System/Globalization/NumberFormatInfo.cs
    startLine: 579
  assemblies:
  - System.Globalization
  namespace: System.Globalization
  summary: "\n<p>Gets or sets the string that represents negative infinity.</p>\n"
  remarks: "\n<p>For more information on negative infinity, see <xref href=\"System.Double\" data-throw-if-not-resolved=\"false\"></xref> or <xref href=\"System.Single\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: public string NegativeInfinitySymbol { get; set; }
    content.vb: Public Property NegativeInfinitySymbol As String
    parameters: []
    return:
      type: System.String
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>The property is being set to <strong>null</strong>. </p>\n"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "\n<p>The property is being set and the <xref href=\"System.Globalization.NumberFormatInfo\" data-throw-if-not-resolved=\"false\"></xref> object is read-only. </p>\n"
  seealso:
  - type: System.Globalization.NumberFormatInfo.PositiveInfinitySymbol
    commentId: P:System.Globalization.NumberFormatInfo.PositiveInfinitySymbol
  - type: System.Globalization.NumberFormatInfo.NaNSymbol
    commentId: P:System.Globalization.NumberFormatInfo.NaNSymbol
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Globalization.NumberFormatInfo.NegativeSign
  commentId: P:System.Globalization.NumberFormatInfo.NegativeSign
  id: NegativeSign
  parent: System.Globalization.NumberFormatInfo
  langs:
  - csharp
  - vb
  name: NegativeSign
  fullName: System.Globalization.NumberFormatInfo.NegativeSign
  type: Property
  source:
    remote:
      path: src/mscorlib/src/System/Globalization/NumberFormatInfo.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: NegativeSign
    path: src/mscorlib/src/System/Globalization/NumberFormatInfo.cs
    startLine: 595
  assemblies:
  - System.Globalization
  namespace: System.Globalization
  summary: "\n<p>Gets or sets the string that denotes that the associated number is negative.</p>\n"
  remarks: "\n<p>This property is used in both formatting and parsing operations. For more information on its use in formatting operations, see the Standard Numeric Format Strings and Custom Numeric Format Strings topics. </p>\n"
  example:
  - "\n<p>The following example instantiates a read-write <xref href=\"System.Globalization.CultureInfo\" data-throw-if-not-resolved=\"false\"></xref> object that represents the invariant culture and assigns the OVERLINE character (U+203E) to its <xref href=\"System.Globalization.NumberFormatInfo.NegativeSign\" data-throw-if-not-resolved=\"false\"></xref> property. It then uses this <xref href=\"System.Globalization.CultureInfo\" data-throw-if-not-resolved=\"false\"></xref> object to format an array of negative floating-point numbers. </p>System.Globalization.NumberFormatInfo.NegativeSign#1"
  syntax:
    content: public string NegativeSign { get; set; }
    content.vb: Public Property NegativeSign As String
    parameters: []
    return:
      type: System.String
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>The property is being set to <strong>null</strong>. </p>\n"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "\n<p>The property is being set and the <xref href=\"System.Globalization.NumberFormatInfo\" data-throw-if-not-resolved=\"false\"></xref> object is read-only. </p>\n"
  seealso:
  - type: System.Globalization.NumberFormatInfo.PositiveSign
    commentId: P:System.Globalization.NumberFormatInfo.PositiveSign
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Globalization.NumberFormatInfo.NumberDecimalDigits
  commentId: P:System.Globalization.NumberFormatInfo.NumberDecimalDigits
  id: NumberDecimalDigits
  parent: System.Globalization.NumberFormatInfo
  langs:
  - csharp
  - vb
  name: NumberDecimalDigits
  fullName: System.Globalization.NumberFormatInfo.NumberDecimalDigits
  type: Property
  source:
    remote:
      path: src/mscorlib/src/System/Globalization/NumberFormatInfo.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: NumberDecimalDigits
    path: src/mscorlib/src/System/Globalization/NumberFormatInfo.cs
    startLine: 609
  assemblies:
  - System.Globalization
  namespace: System.Globalization
  summary: "\n<p>Gets or sets the number of decimal places to use in numeric values.</p>\n"
  remarks: "\n<p>The <xref href=\"System.Globalization.NumberFormatInfo.NumberDecimalDigits\" data-throw-if-not-resolved=\"false\"></xref> property is used with the \"F\" and \"N\" standard format strings without a precision specifier in numeric formatting operations. It defines the default number of fractional digits that appear after the decimal separator. This value is overridden if a precision specifier is used. For more information, see Standard Numeric Format Strings.</p>\n"
  example:
  - "\n<p>The following example demonstrates the effect of changing the <xref href=\"System.Globalization.NumberFormatInfo.NumberDecimalDigits\" data-throw-if-not-resolved=\"false\"></xref> property.</p>NumberDecimalDigits#1"
  syntax:
    content: public int NumberDecimalDigits { get; set; }
    content.vb: Public Property NumberDecimalDigits As Integer
    parameters: []
    return:
      type: System.Int32
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>The property is being set to a value that is less than 0 or greater than 99. </p>\n"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "\n<p>The property is being set and the <xref href=\"System.Globalization.NumberFormatInfo\" data-throw-if-not-resolved=\"false\"></xref> object is read-only. </p>\n"
  seealso:
  - type: System.Globalization.NumberFormatInfo.NumberDecimalSeparator
    commentId: P:System.Globalization.NumberFormatInfo.NumberDecimalSeparator
  - type: System.Globalization.NumberFormatInfo.NumberGroupSeparator
    commentId: P:System.Globalization.NumberFormatInfo.NumberGroupSeparator
  - type: System.Globalization.NumberFormatInfo.NumberGroupSizes
    commentId: P:System.Globalization.NumberFormatInfo.NumberGroupSizes
  - type: System.Globalization.NumberFormatInfo.NaNSymbol
    commentId: P:System.Globalization.NumberFormatInfo.NaNSymbol
  - type: System.Globalization.NumberFormatInfo.NumberNegativePattern
    commentId: P:System.Globalization.NumberFormatInfo.NumberNegativePattern
  - type: System.Globalization.NumberFormatInfo.CurrencyDecimalDigits
    commentId: P:System.Globalization.NumberFormatInfo.CurrencyDecimalDigits
  - type: System.Globalization.NumberFormatInfo.PercentDecimalDigits
    commentId: P:System.Globalization.NumberFormatInfo.PercentDecimalDigits
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Globalization.NumberFormatInfo.NumberDecimalSeparator
  commentId: P:System.Globalization.NumberFormatInfo.NumberDecimalSeparator
  id: NumberDecimalSeparator
  parent: System.Globalization.NumberFormatInfo
  langs:
  - csharp
  - vb
  name: NumberDecimalSeparator
  fullName: System.Globalization.NumberFormatInfo.NumberDecimalSeparator
  type: Property
  source:
    remote:
      path: src/mscorlib/src/System/Globalization/NumberFormatInfo.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: NumberDecimalSeparator
    path: src/mscorlib/src/System/Globalization/NumberFormatInfo.cs
    startLine: 628
  assemblies:
  - System.Globalization
  namespace: System.Globalization
  summary: "\n<p>Gets or sets the string to use as the decimal separator in numeric values.</p>\n"
  remarks: "\n<p>The <xref href=\"System.Globalization.NumberFormatInfo.NumberDecimalSeparator\" data-throw-if-not-resolved=\"false\"></xref> property is used with the \"E\", \"F\", \"G\", \"N\", and \"R\" standard format strings to define the symbol that separates integral from fractional digits. For more information, see Standard Numeric Format Strings. </p>\n<p>The initial value of this property is derived from the settings in the Region and Language item in Control Panel. </p>\n"
  example:
  - "\n<p>The following example demonstrates the effect of changing the <xref href=\"System.Globalization.NumberFormatInfo.NumberDecimalSeparator\" data-throw-if-not-resolved=\"false\"></xref> property.</p>NumberDecimalSeparator#1"
  syntax:
    content: public string NumberDecimalSeparator { get; set; }
    content.vb: Public Property NumberDecimalSeparator As String
    parameters: []
    return:
      type: System.String
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>The property is being set to <strong>null</strong>. </p>\n"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "\n<p>The property is being set and the <xref href=\"System.Globalization.NumberFormatInfo\" data-throw-if-not-resolved=\"false\"></xref> object is read-only. </p>\n"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<p>The property is being set to an empty string.</p>\n"
  seealso:
  - type: System.Globalization.NumberFormatInfo.NumberDecimalDigits
    commentId: P:System.Globalization.NumberFormatInfo.NumberDecimalDigits
  - type: System.Globalization.NumberFormatInfo.NumberGroupSeparator
    commentId: P:System.Globalization.NumberFormatInfo.NumberGroupSeparator
  - type: System.Globalization.NumberFormatInfo.NumberGroupSizes
    commentId: P:System.Globalization.NumberFormatInfo.NumberGroupSizes
  - type: System.Globalization.NumberFormatInfo.NaNSymbol
    commentId: P:System.Globalization.NumberFormatInfo.NaNSymbol
  - type: System.Globalization.NumberFormatInfo.NumberNegativePattern
    commentId: P:System.Globalization.NumberFormatInfo.NumberNegativePattern
  - type: System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator
    commentId: P:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator
  - type: System.Globalization.NumberFormatInfo.PercentDecimalSeparator
    commentId: P:System.Globalization.NumberFormatInfo.PercentDecimalSeparator
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Globalization.NumberFormatInfo.NumberGroupSeparator
  commentId: P:System.Globalization.NumberFormatInfo.NumberGroupSeparator
  id: NumberGroupSeparator
  parent: System.Globalization.NumberFormatInfo
  langs:
  - csharp
  - vb
  name: NumberGroupSeparator
  fullName: System.Globalization.NumberFormatInfo.NumberGroupSeparator
  type: Property
  source:
    remote:
      path: src/mscorlib/src/System/Globalization/NumberFormatInfo.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: NumberGroupSeparator
    path: src/mscorlib/src/System/Globalization/NumberFormatInfo.cs
    startLine: 638
  assemblies:
  - System.Globalization
  namespace: System.Globalization
  summary: "\n<p>Gets or sets the string that separates groups of digits to the left of the decimal in numeric values.</p>\n"
  remarks: "\n<p>The <xref href=\"System.Globalization.NumberFormatInfo.NumberGroupSeparator\" data-throw-if-not-resolved=\"false\"></xref>  property is used with the \"N\" standard format string to define the symbol that separates groups of integral digits. For more information, see Standard Numeric Format Strings.</p>\n<p>The initial value of this property is derived from the settings in the Region and Language item in Control Panel. </p>\n"
  example:
  - "\n<p>The following example demonstrates the effect of changing the <xref href=\"System.Globalization.NumberFormatInfo.NumberGroupSeparator\" data-throw-if-not-resolved=\"false\"></xref> property.</p>NumberGroupSeparator#1"
  syntax:
    content: public string NumberGroupSeparator { get; set; }
    content.vb: Public Property NumberGroupSeparator As String
    parameters: []
    return:
      type: System.String
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>The property is being set to <strong>null</strong>. </p>\n"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "\n<p>The property is being set and the <xref href=\"System.Globalization.NumberFormatInfo\" data-throw-if-not-resolved=\"false\"></xref> object is read-only. </p>\n"
  seealso:
  - type: System.Globalization.NumberFormatInfo.NumberDecimalDigits
    commentId: P:System.Globalization.NumberFormatInfo.NumberDecimalDigits
  - type: System.Globalization.NumberFormatInfo.NumberDecimalSeparator
    commentId: P:System.Globalization.NumberFormatInfo.NumberDecimalSeparator
  - type: System.Globalization.NumberFormatInfo.NumberGroupSizes
    commentId: P:System.Globalization.NumberFormatInfo.NumberGroupSizes
  - type: System.Globalization.NumberFormatInfo.NaNSymbol
    commentId: P:System.Globalization.NumberFormatInfo.NaNSymbol
  - type: System.Globalization.NumberFormatInfo.NumberNegativePattern
    commentId: P:System.Globalization.NumberFormatInfo.NumberNegativePattern
  - type: System.Globalization.NumberFormatInfo.CurrencyGroupSeparator
    commentId: P:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator
  - type: System.Globalization.NumberFormatInfo.PercentGroupSeparator
    commentId: P:System.Globalization.NumberFormatInfo.PercentGroupSeparator
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Globalization.NumberFormatInfo.NumberGroupSizes
  commentId: P:System.Globalization.NumberFormatInfo.NumberGroupSizes
  id: NumberGroupSizes
  parent: System.Globalization.NumberFormatInfo
  langs:
  - csharp
  - vb
  name: NumberGroupSizes
  fullName: System.Globalization.NumberFormatInfo.NumberGroupSizes
  type: Property
  source:
    remote:
      path: src/mscorlib/src/System/Globalization/NumberFormatInfo.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: NumberGroupSizes
    path: src/mscorlib/src/System/Globalization/NumberFormatInfo.cs
    startLine: 399
  assemblies:
  - System.Globalization
  namespace: System.Globalization
  summary: "\n<p>Gets or sets the number of digits in each group to the left of the decimal in numeric values.</p>\n"
  remarks: "\n<p>The value of the <xref href=\"System.Globalization.NumberFormatInfo.NumberGroupSizes\" data-throw-if-not-resolved=\"false\"></xref> property affects the result of number values that are formatted by using the \"N\" . If a custom numeric format string or other standard numeric format strings are used, the value of the <xref href=\"System.Globalization.NumberFormatInfo.NumberGroupSizes\" data-throw-if-not-resolved=\"false\"></xref> property is ignored. </p>\n<p>Every element in the one-dimensional array must be an integer from 1 through 9. The last element can be 0.</p>\n<p>The first element of the array defines the number of elements in the least significant group of digits immediately to the left of the <xref href=\"System.Globalization.NumberFormatInfo.NumberDecimalSeparator\" data-throw-if-not-resolved=\"false\"></xref>. Each subsequent element refers to the next significant group of digits to the left of the previous group. If the last element of the array is not 0, the remaining digits are grouped based on the last element of the array. If the last element is 0, the remaining digits are not grouped.</p>\n<p>For example, if the array contains { 3, 4, 5 }, the digits are grouped similar to \"55,55555,55555,55555,4444,333.00\". If the array contains { 3, 4, 0 }, the digits are grouped similar to \"55555555555555555,4444,333.00\".</p>\n"
  example:
  - "\n<p>The following example demonstrates the effect of changing the <xref href=\"System.Globalization.NumberFormatInfo.NumberGroupSizes\" data-throw-if-not-resolved=\"false\"></xref> property.</p>NumberGroupSizes#1<p>The following example prints a value using different <xref href=\"System.Globalization.NumberFormatInfo.NumberGroupSizes\" data-throw-if-not-resolved=\"false\"></xref> arrays.</p>Classic NumberFormatInfo.NumberGroupSizes Example#1"
  syntax:
    content: public int[] NumberGroupSizes { get; set; }
    content.vb: Public Property NumberGroupSizes As Integer()
    parameters: []
    return:
      type: System.Int32[]
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>The property is being set to <strong>null</strong>. </p>\n"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<p>The property is being set and the array contains an entry that is less than 0 or greater than 9.</p>\n<p>-or- </p>\n<p>The property is being set and the array contains an entry, other than the last entry, that is set to 0. </p>\n"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "\n<p>The property is being set and the <xref href=\"System.Globalization.NumberFormatInfo\" data-throw-if-not-resolved=\"false\"></xref> object is read-only. </p>\n"
  seealso:
  - type: System.Globalization.NumberFormatInfo.NumberDecimalDigits
    commentId: P:System.Globalization.NumberFormatInfo.NumberDecimalDigits
  - type: System.Globalization.NumberFormatInfo.NumberDecimalSeparator
    commentId: P:System.Globalization.NumberFormatInfo.NumberDecimalSeparator
  - type: System.Globalization.NumberFormatInfo.NumberGroupSeparator
    commentId: P:System.Globalization.NumberFormatInfo.NumberGroupSeparator
  - type: System.Globalization.NumberFormatInfo.NaNSymbol
    commentId: P:System.Globalization.NumberFormatInfo.NaNSymbol
  - type: System.Globalization.NumberFormatInfo.NumberNegativePattern
    commentId: P:System.Globalization.NumberFormatInfo.NumberNegativePattern
  - type: System.Globalization.NumberFormatInfo.CurrencyGroupSizes
    commentId: P:System.Globalization.NumberFormatInfo.CurrencyGroupSizes
  - type: System.Globalization.NumberFormatInfo.PercentGroupSizes
    commentId: P:System.Globalization.NumberFormatInfo.PercentGroupSizes
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Globalization.NumberFormatInfo.NumberNegativePattern
  commentId: P:System.Globalization.NumberFormatInfo.NumberNegativePattern
  id: NumberNegativePattern
  parent: System.Globalization.NumberFormatInfo
  langs:
  - csharp
  - vb
  name: NumberNegativePattern
  fullName: System.Globalization.NumberFormatInfo.NumberNegativePattern
  type: Property
  source:
    remote:
      path: src/mscorlib/src/System/Globalization/NumberFormatInfo.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: NumberNegativePattern
    path: src/mscorlib/src/System/Globalization/NumberFormatInfo.cs
    startLine: 513
  assemblies:
  - System.Globalization
  namespace: System.Globalization
  summary: "\n<p>Gets or sets the format pattern for negative numeric values.</p>\n"
  remarks: "\n<p>The <xref href=\"System.Globalization.NumberFormatInfo.NumberNegativePattern\" data-throw-if-not-resolved=\"false\"></xref> property defines the format of negative values formatted with the \"N\" standard numeric format string. This property has one of the values in the following table. The symbol \"-\" is the <xref href=\"System.Globalization.NumberFormatInfo.NegativeSign\" data-throw-if-not-resolved=\"false\"></xref> and <em>n</em> is a number.</p>\n<p>Value </p>\n<p>Associated pattern </p>\n<table><tbody><tr><td>\n<p>0 </p>\n</td><td>\n<p>(n) </p>\n</td></tr><tr><td>\n<p>1 </p>\n</td><td>\n<p>-n </p>\n</td></tr><tr><td>\n<p>2 </p>\n</td><td>\n<p>- n </p>\n</td></tr><tr><td>\n<p>3 </p>\n</td><td>\n<p>n- </p>\n</td></tr><tr><td>\n<p>4 </p>\n</td><td>\n<p>n - </p>\n</td></tr></tbody></table>\n<p>The default value for the invariant culture returned by the <xref href=\"System.Globalization.NumberFormatInfo.InvariantInfo\" data-throw-if-not-resolved=\"false\"></xref> property is 1, which represents \"-n\", where n is a number.</p>\n"
  example:
  - "\n<p>The following example displays a value using different <xref href=\"System.Globalization.NumberFormatInfo.NumberNegativePattern\" data-throw-if-not-resolved=\"false\"></xref> patterns.</p>Classic NumberFormatInfo.NumberNegativePattern Example#1"
  syntax:
    content: public int NumberNegativePattern { get; set; }
    content.vb: Public Property NumberNegativePattern As Integer
    parameters: []
    return:
      type: System.Int32
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>The property is being set to a value that is less than 0 or greater than 4. </p>\n"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "\n<p>The property is being set and the <xref href=\"System.Globalization.NumberFormatInfo\" data-throw-if-not-resolved=\"false\"></xref> object is read-only. </p>\n"
  seealso:
  - type: System.Globalization.NumberFormatInfo.NumberDecimalDigits
    commentId: P:System.Globalization.NumberFormatInfo.NumberDecimalDigits
  - type: System.Globalization.NumberFormatInfo.NumberDecimalSeparator
    commentId: P:System.Globalization.NumberFormatInfo.NumberDecimalSeparator
  - type: System.Globalization.NumberFormatInfo.NumberGroupSeparator
    commentId: P:System.Globalization.NumberFormatInfo.NumberGroupSeparator
  - type: System.Globalization.NumberFormatInfo.NumberGroupSizes
    commentId: P:System.Globalization.NumberFormatInfo.NumberGroupSizes
  - type: System.Globalization.NumberFormatInfo.NaNSymbol
    commentId: P:System.Globalization.NumberFormatInfo.NaNSymbol
  - type: System.Globalization.NumberFormatInfo.CurrencyNegativePattern
    commentId: P:System.Globalization.NumberFormatInfo.CurrencyNegativePattern
  - type: System.Globalization.NumberFormatInfo.PercentNegativePattern
    commentId: P:System.Globalization.NumberFormatInfo.PercentNegativePattern
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Globalization.NumberFormatInfo.PercentDecimalDigits
  commentId: P:System.Globalization.NumberFormatInfo.PercentDecimalDigits
  id: PercentDecimalDigits
  parent: System.Globalization.NumberFormatInfo
  langs:
  - csharp
  - vb
  name: PercentDecimalDigits
  fullName: System.Globalization.NumberFormatInfo.PercentDecimalDigits
  type: Property
  source:
    remote:
      path: src/mscorlib/src/System/Globalization/NumberFormatInfo.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: PercentDecimalDigits
    path: src/mscorlib/src/System/Globalization/NumberFormatInfo.cs
    startLine: 697
  assemblies:
  - System.Globalization
  namespace: System.Globalization
  summary: "\n<p>Gets or sets the number of decimal places to use in percent values. </p>\n"
  remarks: "\n<p>The <xref href=\"System.Globalization.NumberFormatInfo.PercentDecimalDigits\" data-throw-if-not-resolved=\"false\"></xref> property is used with the \"P\" standard format string without a precision specifier in numeric formatting operations. It defines the default number of fractional digits that appear after the decimal separator. This value is overridden if a precision specifier is used. For more information, see Standard Numeric Format Strings.</p>\n"
  example:
  - "\n<p>The following example demonstrates the effect of changing the <xref href=\"System.Globalization.NumberFormatInfo.PercentDecimalDigits\" data-throw-if-not-resolved=\"false\"></xref> property.</p>PercentDecimalDigits#1"
  syntax:
    content: public int PercentDecimalDigits { get; set; }
    content.vb: Public Property PercentDecimalDigits As Integer
    parameters: []
    return:
      type: System.Int32
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>The property is being set to a value that is less than 0 or greater than 99. </p>\n"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "\n<p>The property is being set and the <xref href=\"System.Globalization.NumberFormatInfo\" data-throw-if-not-resolved=\"false\"></xref> object is read-only. </p>\n"
  seealso:
  - type: System.Globalization.NumberFormatInfo.PercentDecimalSeparator
    commentId: P:System.Globalization.NumberFormatInfo.PercentDecimalSeparator
  - type: System.Globalization.NumberFormatInfo.PercentGroupSeparator
    commentId: P:System.Globalization.NumberFormatInfo.PercentGroupSeparator
  - type: System.Globalization.NumberFormatInfo.PercentGroupSizes
    commentId: P:System.Globalization.NumberFormatInfo.PercentGroupSizes
  - type: System.Globalization.NumberFormatInfo.PercentSymbol
    commentId: P:System.Globalization.NumberFormatInfo.PercentSymbol
  - type: System.Globalization.NumberFormatInfo.PercentNegativePattern
    commentId: P:System.Globalization.NumberFormatInfo.PercentNegativePattern
  - type: System.Globalization.NumberFormatInfo.PercentPositivePattern
    commentId: P:System.Globalization.NumberFormatInfo.PercentPositivePattern
  - type: System.Globalization.NumberFormatInfo.CurrencyDecimalDigits
    commentId: P:System.Globalization.NumberFormatInfo.CurrencyDecimalDigits
  - type: System.Globalization.NumberFormatInfo.NumberDecimalDigits
    commentId: P:System.Globalization.NumberFormatInfo.NumberDecimalDigits
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Globalization.NumberFormatInfo.PercentDecimalSeparator
  commentId: P:System.Globalization.NumberFormatInfo.PercentDecimalSeparator
  id: PercentDecimalSeparator
  parent: System.Globalization.NumberFormatInfo
  langs:
  - csharp
  - vb
  name: PercentDecimalSeparator
  fullName: System.Globalization.NumberFormatInfo.PercentDecimalSeparator
  type: Property
  source:
    remote:
      path: src/mscorlib/src/System/Globalization/NumberFormatInfo.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: PercentDecimalSeparator
    path: src/mscorlib/src/System/Globalization/NumberFormatInfo.cs
    startLine: 716
  assemblies:
  - System.Globalization
  namespace: System.Globalization
  summary: "\n<p>Gets or sets the string to use as the decimal separator in percent values. </p>\n"
  remarks: "\n<p>The <xref href=\"System.Globalization.NumberFormatInfo.PercentDecimalSeparator\" data-throw-if-not-resolved=\"false\"></xref> property is used with the \"P\" standard format string to define the symbol that separates integral from fractional digits. For more information, see Standard Numeric Format Strings.</p>\n"
  example:
  - "\n<p>The following example demonstrates the effect of changing the <xref href=\"System.Globalization.NumberFormatInfo.PercentDecimalSeparator\" data-throw-if-not-resolved=\"false\"></xref> property.</p>PercentDecimalSeparator#1"
  syntax:
    content: public string PercentDecimalSeparator { get; set; }
    content.vb: Public Property PercentDecimalSeparator As String
    parameters: []
    return:
      type: System.String
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>The property is being set to <strong>null</strong>. </p>\n"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "\n<p>The property is being set and the <xref href=\"System.Globalization.NumberFormatInfo\" data-throw-if-not-resolved=\"false\"></xref> object is read-only. </p>\n"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<p>The property is being set to an empty string.</p>\n"
  seealso:
  - type: System.Globalization.NumberFormatInfo.PercentDecimalDigits
    commentId: P:System.Globalization.NumberFormatInfo.PercentDecimalDigits
  - type: System.Globalization.NumberFormatInfo.PercentGroupSeparator
    commentId: P:System.Globalization.NumberFormatInfo.PercentGroupSeparator
  - type: System.Globalization.NumberFormatInfo.PercentGroupSizes
    commentId: P:System.Globalization.NumberFormatInfo.PercentGroupSizes
  - type: System.Globalization.NumberFormatInfo.PercentSymbol
    commentId: P:System.Globalization.NumberFormatInfo.PercentSymbol
  - type: System.Globalization.NumberFormatInfo.PercentNegativePattern
    commentId: P:System.Globalization.NumberFormatInfo.PercentNegativePattern
  - type: System.Globalization.NumberFormatInfo.PercentPositivePattern
    commentId: P:System.Globalization.NumberFormatInfo.PercentPositivePattern
  - type: System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator
    commentId: P:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator
  - type: System.Globalization.NumberFormatInfo.NumberDecimalSeparator
    commentId: P:System.Globalization.NumberFormatInfo.NumberDecimalSeparator
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Globalization.NumberFormatInfo.PercentGroupSeparator
  commentId: P:System.Globalization.NumberFormatInfo.PercentGroupSeparator
  id: PercentGroupSeparator
  parent: System.Globalization.NumberFormatInfo
  langs:
  - csharp
  - vb
  name: PercentGroupSeparator
  fullName: System.Globalization.NumberFormatInfo.PercentGroupSeparator
  type: Property
  source:
    remote:
      path: src/mscorlib/src/System/Globalization/NumberFormatInfo.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: PercentGroupSeparator
    path: src/mscorlib/src/System/Globalization/NumberFormatInfo.cs
    startLine: 726
  assemblies:
  - System.Globalization
  namespace: System.Globalization
  summary: "\n<p>Gets or sets the string that separates groups of digits to the left of the decimal in percent values. </p>\n"
  remarks: "\n<p>The <xref href=\"System.Globalization.NumberFormatInfo.PercentGroupSeparator\" data-throw-if-not-resolved=\"false\"></xref>  property is used with the \"P\" standard format string to define the symbol that separates groups of integers. For more information, see Standard Numeric Format Strings.</p>\n"
  example:
  - "\n<p>The following example demonstrates the effect of changing the <xref href=\"System.Globalization.NumberFormatInfo.PercentGroupSeparator\" data-throw-if-not-resolved=\"false\"></xref> property.</p>PercentGroupSeparator#1"
  syntax:
    content: public string PercentGroupSeparator { get; set; }
    content.vb: Public Property PercentGroupSeparator As String
    parameters: []
    return:
      type: System.String
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>The property is being set to <strong>null</strong>. </p>\n"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "\n<p>The property is being set and the <xref href=\"System.Globalization.NumberFormatInfo\" data-throw-if-not-resolved=\"false\"></xref> object is read-only. </p>\n"
  seealso:
  - type: System.Globalization.NumberFormatInfo.PercentDecimalDigits
    commentId: P:System.Globalization.NumberFormatInfo.PercentDecimalDigits
  - type: System.Globalization.NumberFormatInfo.PercentDecimalSeparator
    commentId: P:System.Globalization.NumberFormatInfo.PercentDecimalSeparator
  - type: System.Globalization.NumberFormatInfo.PercentGroupSizes
    commentId: P:System.Globalization.NumberFormatInfo.PercentGroupSizes
  - type: System.Globalization.NumberFormatInfo.PercentSymbol
    commentId: P:System.Globalization.NumberFormatInfo.PercentSymbol
  - type: System.Globalization.NumberFormatInfo.PercentNegativePattern
    commentId: P:System.Globalization.NumberFormatInfo.PercentNegativePattern
  - type: System.Globalization.NumberFormatInfo.PercentPositivePattern
    commentId: P:System.Globalization.NumberFormatInfo.PercentPositivePattern
  - type: System.Globalization.NumberFormatInfo.CurrencyGroupSeparator
    commentId: P:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator
  - type: System.Globalization.NumberFormatInfo.NumberGroupSeparator
    commentId: P:System.Globalization.NumberFormatInfo.NumberGroupSeparator
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Globalization.NumberFormatInfo.PercentGroupSizes
  commentId: P:System.Globalization.NumberFormatInfo.PercentGroupSizes
  id: PercentGroupSizes
  parent: System.Globalization.NumberFormatInfo
  langs:
  - csharp
  - vb
  name: PercentGroupSizes
  fullName: System.Globalization.NumberFormatInfo.PercentGroupSizes
  type: Property
  source:
    remote:
      path: src/mscorlib/src/System/Globalization/NumberFormatInfo.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: PercentGroupSizes
    path: src/mscorlib/src/System/Globalization/NumberFormatInfo.cs
    startLine: 418
  assemblies:
  - System.Globalization
  namespace: System.Globalization
  summary: "\n<p>Gets or sets the number of digits in each group to the left of the decimal in percent values. </p>\n"
  remarks: "\n<p>The <xref href=\"System.Globalization.NumberFormatInfo.PercentGroupSizes\" data-throw-if-not-resolved=\"false\"></xref> property is used with the \"P\" standard format string to define the number of digits that appear in integral groups. For more information, see Standard Numeric Format Strings. Every element in the one-dimensional array must be an integer from 1 through 9. The last element can be 0.</p>\n<p>The first element of the array defines the number of elements in the least significant group of digits immediately to the left of the <xref href=\"System.Globalization.NumberFormatInfo.PercentDecimalSeparator\" data-throw-if-not-resolved=\"false\"></xref>. Each subsequent element refers to the next significant group of digits to the left of the previous group. If the last element of the array is not 0, the remaining digits are grouped based on the last element of the array. If the last element is 0, the remaining digits are not grouped.</p>\n<p>For example, if the array contains { 3, 4, 5 }, the digits are grouped similar to \"55,55555,55555,55555,4444,333.00%\". If the array contains { 3, 4, 0 }, the digits are grouped similar to \"55555555555555555,4444,333.00%\".</p>\n"
  example:
  - "\n<p>The following example demonstrates the effect of changing the <xref href=\"System.Globalization.NumberFormatInfo.PercentGroupSizes\" data-throw-if-not-resolved=\"false\"></xref> property.</p>PercentGroupSizes#1"
  syntax:
    content: public int[] PercentGroupSizes { get; set; }
    content.vb: Public Property PercentGroupSizes As Integer()
    parameters: []
    return:
      type: System.Int32[]
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>The property is being set to <strong>null</strong>. </p>\n"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<p>The property is being set and the array contains an entry that is less than 0 or greater than 9.</p>\n<p>-or- </p>\n<p>The property is being set and the array contains an entry, other than the last entry, that is set to 0. </p>\n"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "\n<p>The property is being set and the <xref href=\"System.Globalization.NumberFormatInfo\" data-throw-if-not-resolved=\"false\"></xref> object is read-only. </p>\n"
  seealso:
  - type: System.Globalization.NumberFormatInfo.PercentDecimalDigits
    commentId: P:System.Globalization.NumberFormatInfo.PercentDecimalDigits
  - type: System.Globalization.NumberFormatInfo.PercentDecimalSeparator
    commentId: P:System.Globalization.NumberFormatInfo.PercentDecimalSeparator
  - type: System.Globalization.NumberFormatInfo.PercentGroupSeparator
    commentId: P:System.Globalization.NumberFormatInfo.PercentGroupSeparator
  - type: System.Globalization.NumberFormatInfo.PercentSymbol
    commentId: P:System.Globalization.NumberFormatInfo.PercentSymbol
  - type: System.Globalization.NumberFormatInfo.PercentNegativePattern
    commentId: P:System.Globalization.NumberFormatInfo.PercentNegativePattern
  - type: System.Globalization.NumberFormatInfo.PercentPositivePattern
    commentId: P:System.Globalization.NumberFormatInfo.PercentPositivePattern
  - type: System.Globalization.NumberFormatInfo.CurrencyGroupSizes
    commentId: P:System.Globalization.NumberFormatInfo.CurrencyGroupSizes
  - type: System.Globalization.NumberFormatInfo.NumberGroupSizes
    commentId: P:System.Globalization.NumberFormatInfo.NumberGroupSizes
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Globalization.NumberFormatInfo.PercentNegativePattern
  commentId: P:System.Globalization.NumberFormatInfo.PercentNegativePattern
  id: PercentNegativePattern
  parent: System.Globalization.NumberFormatInfo
  langs:
  - csharp
  - vb
  name: PercentNegativePattern
  fullName: System.Globalization.NumberFormatInfo.PercentNegativePattern
  type: Property
  source:
    remote:
      path: src/mscorlib/src/System/Globalization/NumberFormatInfo.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: PercentNegativePattern
    path: src/mscorlib/src/System/Globalization/NumberFormatInfo.cs
    startLine: 557
  assemblies:
  - System.Globalization
  namespace: System.Globalization
  summary: "\n<p>Gets or sets the format pattern for negative percent values.</p>\n"
  remarks: "\n<p>The <xref href=\"System.Globalization.NumberFormatInfo.PercentNegativePattern\" data-throw-if-not-resolved=\"false\"></xref> property is used with the \"P\" standard format string to define the pattern of negative percentage values. For more information, see Standard Numeric Format Strings. This property has one of the values in the following table. The symbol \"%\" is the <xref href=\"System.Globalization.NumberFormatInfo.PercentSymbol\" data-throw-if-not-resolved=\"false\"></xref>, the symbol \"-\" is the <xref href=\"System.Globalization.NumberFormatInfo.NegativeSign\" data-throw-if-not-resolved=\"false\"></xref>, and <em>n</em> is a number. Values 3-11 were introduced in the .NET Framework 2.0 and cannot be used in earlier versions.</p>\n<p>Value </p>\n<p>Associated pattern </p>\n<table><tbody><tr><td>\n<p>0 </p>\n</td><td>\n<p>-n % </p>\n</td></tr><tr><td>\n<p>1 </p>\n</td><td>\n<p>-n% </p>\n</td></tr><tr><td>\n<p>2 </p>\n</td><td>\n<p>-%n </p>\n</td></tr><tr><td>\n<p>3</p>\n</td><td>\n<p>%-n</p>\n</td></tr><tr><td>\n<p>4</p>\n</td><td>\n<p>%n-</p>\n</td></tr><tr><td>\n<p>5</p>\n</td><td>\n<p>n-%</p>\n</td></tr><tr><td>\n<p>6</p>\n</td><td>\n<p>n%-</p>\n</td></tr><tr><td>\n<p>7</p>\n</td><td>\n<p>-% n</p>\n</td></tr><tr><td>\n<p>8</p>\n</td><td>\n<p>n %-</p>\n</td></tr><tr><td>\n<p>9</p>\n</td><td>\n<p>% n-</p>\n</td></tr><tr><td>\n<p>10</p>\n</td><td>\n<p>% -n</p>\n</td></tr><tr><td>\n<p>11</p>\n</td><td>\n<p>n- %</p>\n</td></tr></tbody></table>\n"
  syntax:
    content: public int PercentNegativePattern { get; set; }
    content.vb: Public Property PercentNegativePattern As Integer
    parameters: []
    return:
      type: System.Int32
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>The property is being set to a value that is less than 0 or greater than 11. </p>\n"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "\n<p>The property is being set and the <xref href=\"System.Globalization.NumberFormatInfo\" data-throw-if-not-resolved=\"false\"></xref> object is read-only. </p>\n"
  seealso:
  - type: System.Globalization.NumberFormatInfo.PercentDecimalDigits
    commentId: P:System.Globalization.NumberFormatInfo.PercentDecimalDigits
  - type: System.Globalization.NumberFormatInfo.PercentDecimalSeparator
    commentId: P:System.Globalization.NumberFormatInfo.PercentDecimalSeparator
  - type: System.Globalization.NumberFormatInfo.PercentGroupSeparator
    commentId: P:System.Globalization.NumberFormatInfo.PercentGroupSeparator
  - type: System.Globalization.NumberFormatInfo.PercentGroupSizes
    commentId: P:System.Globalization.NumberFormatInfo.PercentGroupSizes
  - type: System.Globalization.NumberFormatInfo.PercentSymbol
    commentId: P:System.Globalization.NumberFormatInfo.PercentSymbol
  - type: System.Globalization.NumberFormatInfo.PercentPositivePattern
    commentId: P:System.Globalization.NumberFormatInfo.PercentPositivePattern
  - type: System.Globalization.NumberFormatInfo.CurrencyNegativePattern
    commentId: P:System.Globalization.NumberFormatInfo.CurrencyNegativePattern
  - type: System.Globalization.NumberFormatInfo.NumberNegativePattern
    commentId: P:System.Globalization.NumberFormatInfo.NumberNegativePattern
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Globalization.NumberFormatInfo.PercentPositivePattern
  commentId: P:System.Globalization.NumberFormatInfo.PercentPositivePattern
  id: PercentPositivePattern
  parent: System.Globalization.NumberFormatInfo
  langs:
  - csharp
  - vb
  name: PercentPositivePattern
  fullName: System.Globalization.NumberFormatInfo.PercentPositivePattern
  type: Property
  source:
    remote:
      path: src/mscorlib/src/System/Globalization/NumberFormatInfo.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: PercentPositivePattern
    path: src/mscorlib/src/System/Globalization/NumberFormatInfo.cs
    startLine: 535
  assemblies:
  - System.Globalization
  namespace: System.Globalization
  summary: "\n<p>Gets or sets the format pattern for positive percent values.</p>\n"
  remarks: "\n<p>The <xref href=\"System.Globalization.NumberFormatInfo.PercentPositivePattern\" data-throw-if-not-resolved=\"false\"></xref>  property is used with the \"P\" standard format string to define pattern of positive percentage values. For more information, see Standard Numeric Format Strings. This property has one of the values in the following table. The symbol \"%\" is the <xref href=\"System.Globalization.NumberFormatInfo.PercentSymbol\" data-throw-if-not-resolved=\"false\"></xref> and <em>n</em> is a number.</p>\n<p>Value </p>\n<p>Associated pattern </p>\n<table><tbody><tr><td>\n<p>0 </p>\n</td><td>\n<p>n % </p>\n</td></tr><tr><td>\n<p>1 </p>\n</td><td>\n<p>n% </p>\n</td></tr><tr><td>\n<p>2 </p>\n</td><td>\n<p>%n </p>\n</td></tr><tr><td>\n<p>3</p>\n</td><td>\n<p>% n</p>\n</td></tr></tbody></table>\n"
  syntax:
    content: public int PercentPositivePattern { get; set; }
    content.vb: Public Property PercentPositivePattern As Integer
    parameters: []
    return:
      type: System.Int32
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>The property is being set to a value that is less than 0 or greater than 3. </p>\n"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "\n<p>The property is being set and the <xref href=\"System.Globalization.NumberFormatInfo\" data-throw-if-not-resolved=\"false\"></xref> object is read-only. </p>\n"
  seealso:
  - type: System.Globalization.NumberFormatInfo.PercentDecimalDigits
    commentId: P:System.Globalization.NumberFormatInfo.PercentDecimalDigits
  - type: System.Globalization.NumberFormatInfo.PercentDecimalSeparator
    commentId: P:System.Globalization.NumberFormatInfo.PercentDecimalSeparator
  - type: System.Globalization.NumberFormatInfo.PercentGroupSeparator
    commentId: P:System.Globalization.NumberFormatInfo.PercentGroupSeparator
  - type: System.Globalization.NumberFormatInfo.PercentGroupSizes
    commentId: P:System.Globalization.NumberFormatInfo.PercentGroupSizes
  - type: System.Globalization.NumberFormatInfo.PercentSymbol
    commentId: P:System.Globalization.NumberFormatInfo.PercentSymbol
  - type: System.Globalization.NumberFormatInfo.PercentNegativePattern
    commentId: P:System.Globalization.NumberFormatInfo.PercentNegativePattern
  - type: System.Globalization.NumberFormatInfo.CurrencyPositivePattern
    commentId: P:System.Globalization.NumberFormatInfo.CurrencyPositivePattern
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Globalization.NumberFormatInfo.PercentSymbol
  commentId: P:System.Globalization.NumberFormatInfo.PercentSymbol
  id: PercentSymbol
  parent: System.Globalization.NumberFormatInfo
  langs:
  - csharp
  - vb
  name: PercentSymbol
  fullName: System.Globalization.NumberFormatInfo.PercentSymbol
  type: Property
  source:
    remote:
      path: src/mscorlib/src/System/Globalization/NumberFormatInfo.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: PercentSymbol
    path: src/mscorlib/src/System/Globalization/NumberFormatInfo.cs
    startLine: 736
  assemblies:
  - System.Globalization
  namespace: System.Globalization
  summary: "\n<p>Gets or sets the string to use as the percent symbol.</p>\n"
  remarks: "\n<p>The string assigned to the <xref href=\"System.Globalization.NumberFormatInfo.PercentSymbol\" data-throw-if-not-resolved=\"false\"></xref> property is included in the result string when a numeric value is formatted with the \"P\"  or with a format string that includes the \"%\" .</p>\n"
  syntax:
    content: public string PercentSymbol { get; set; }
    content.vb: Public Property PercentSymbol As String
    parameters: []
    return:
      type: System.String
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>The property is being set to <strong>null</strong>. </p>\n"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "\n<p>The property is being set and the <xref href=\"System.Globalization.NumberFormatInfo\" data-throw-if-not-resolved=\"false\"></xref> object is read-only. </p>\n"
  seealso:
  - type: System.Globalization.NumberFormatInfo.PercentDecimalDigits
    commentId: P:System.Globalization.NumberFormatInfo.PercentDecimalDigits
  - type: System.Globalization.NumberFormatInfo.PercentDecimalSeparator
    commentId: P:System.Globalization.NumberFormatInfo.PercentDecimalSeparator
  - type: System.Globalization.NumberFormatInfo.PercentGroupSeparator
    commentId: P:System.Globalization.NumberFormatInfo.PercentGroupSeparator
  - type: System.Globalization.NumberFormatInfo.PercentGroupSizes
    commentId: P:System.Globalization.NumberFormatInfo.PercentGroupSizes
  - type: System.Globalization.NumberFormatInfo.PercentNegativePattern
    commentId: P:System.Globalization.NumberFormatInfo.PercentNegativePattern
  - type: System.Globalization.NumberFormatInfo.PercentPositivePattern
    commentId: P:System.Globalization.NumberFormatInfo.PercentPositivePattern
  - type: System.Globalization.NumberFormatInfo.CurrencySymbol
    commentId: P:System.Globalization.NumberFormatInfo.CurrencySymbol
  - type: System.Globalization.NumberFormatInfo.NaNSymbol
    commentId: P:System.Globalization.NumberFormatInfo.NaNSymbol
  - type: System.Globalization.NumberFormatInfo.PerMilleSymbol
    commentId: P:System.Globalization.NumberFormatInfo.PerMilleSymbol
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Globalization.NumberFormatInfo.PerMilleSymbol
  commentId: P:System.Globalization.NumberFormatInfo.PerMilleSymbol
  id: PerMilleSymbol
  parent: System.Globalization.NumberFormatInfo
  langs:
  - csharp
  - vb
  name: PerMilleSymbol
  fullName: System.Globalization.NumberFormatInfo.PerMilleSymbol
  type: Property
  source:
    remote:
      path: src/mscorlib/src/System/Globalization/NumberFormatInfo.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: PerMilleSymbol
    path: src/mscorlib/src/System/Globalization/NumberFormatInfo.cs
    startLine: 752
  assemblies:
  - System.Globalization
  namespace: System.Globalization
  summary: "\n<p>Gets or sets the string to use as the per mille symbol.</p>\n"
  remarks: "\n<p>The string assigned to the <xref href=\"System.Globalization.NumberFormatInfo.PerMilleSymbol\" data-throw-if-not-resolved=\"false\"></xref> property is included in the result string when a numeric value is formatted with a format string that includes the \"‰\" .</p>\n"
  syntax:
    content: public string PerMilleSymbol { get; set; }
    content.vb: Public Property PerMilleSymbol As String
    parameters: []
    return:
      type: System.String
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>The property is being set to <strong>null</strong>. </p>\n"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "\n<p>The property is being set and the <xref href=\"System.Globalization.NumberFormatInfo\" data-throw-if-not-resolved=\"false\"></xref> object is read-only. </p>\n"
  seealso:
  - type: System.Globalization.NumberFormatInfo.CurrencySymbol
    commentId: P:System.Globalization.NumberFormatInfo.CurrencySymbol
  - type: System.Globalization.NumberFormatInfo.NaNSymbol
    commentId: P:System.Globalization.NumberFormatInfo.NaNSymbol
  - type: System.Globalization.NumberFormatInfo.PercentSymbol
    commentId: P:System.Globalization.NumberFormatInfo.PercentSymbol
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Globalization.NumberFormatInfo.PositiveInfinitySymbol
  commentId: P:System.Globalization.NumberFormatInfo.PositiveInfinitySymbol
  id: PositiveInfinitySymbol
  parent: System.Globalization.NumberFormatInfo
  langs:
  - csharp
  - vb
  name: PositiveInfinitySymbol
  fullName: System.Globalization.NumberFormatInfo.PositiveInfinitySymbol
  type: Property
  source:
    remote:
      path: src/mscorlib/src/System/Globalization/NumberFormatInfo.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: PositiveInfinitySymbol
    path: src/mscorlib/src/System/Globalization/NumberFormatInfo.cs
    startLine: 667
  assemblies:
  - System.Globalization
  namespace: System.Globalization
  summary: "\n<p>Gets or sets the string that represents positive infinity.</p>\n"
  remarks: "\n<p>For more information on positive infinity, see <xref href=\"System.Double\" data-throw-if-not-resolved=\"false\"></xref> or <xref href=\"System.Single\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: public string PositiveInfinitySymbol { get; set; }
    content.vb: Public Property PositiveInfinitySymbol As String
    parameters: []
    return:
      type: System.String
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>The property is being set to <strong>null</strong>. </p>\n"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "\n<p>The property is being set and the <xref href=\"System.Globalization.NumberFormatInfo\" data-throw-if-not-resolved=\"false\"></xref> object is read-only. </p>\n"
  seealso:
  - type: System.Globalization.NumberFormatInfo.NegativeInfinitySymbol
    commentId: P:System.Globalization.NumberFormatInfo.NegativeInfinitySymbol
  - type: System.Globalization.NumberFormatInfo.NaNSymbol
    commentId: P:System.Globalization.NumberFormatInfo.NaNSymbol
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Globalization.NumberFormatInfo.PositiveSign
  commentId: P:System.Globalization.NumberFormatInfo.PositiveSign
  id: PositiveSign
  parent: System.Globalization.NumberFormatInfo
  langs:
  - csharp
  - vb
  name: PositiveSign
  fullName: System.Globalization.NumberFormatInfo.PositiveSign
  type: Property
  source:
    remote:
      path: src/mscorlib/src/System/Globalization/NumberFormatInfo.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: PositiveSign
    path: src/mscorlib/src/System/Globalization/NumberFormatInfo.cs
    startLine: 683
  assemblies:
  - System.Globalization
  namespace: System.Globalization
  summary: "\n<p>Gets or sets the string that denotes that the associated number is positive.</p>\n"
  remarks: "\n<p>This property is used only for parsing numeric strings, not for formatting.</p>\n"
  syntax:
    content: public string PositiveSign { get; set; }
    content.vb: Public Property PositiveSign As String
    parameters: []
    return:
      type: System.String
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>In a set operation, the value to be assigned is <strong>null</strong>.</p>\n"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "\n<p>The property is being set and the <xref href=\"System.Globalization.NumberFormatInfo\" data-throw-if-not-resolved=\"false\"></xref> object is read-only. </p>\n"
  seealso:
  - type: System.Globalization.NumberFormatInfo.NegativeSign
    commentId: P:System.Globalization.NumberFormatInfo.NegativeSign
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Globalization.NumberFormatInfo.Clone
  commentId: M:System.Globalization.NumberFormatInfo.Clone
  id: Clone
  parent: System.Globalization.NumberFormatInfo
  langs:
  - csharp
  - vb
  name: Clone()
  fullName: System.Globalization.NumberFormatInfo.Clone()
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Globalization/NumberFormatInfo.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Clone
    path: src/mscorlib/src/System/Globalization/NumberFormatInfo.cs
    startLine: 312
  assemblies:
  - System.Globalization
  namespace: System.Globalization
  summary: "\n<p>Creates a shallow copy of the <xref href=\"System.Globalization.NumberFormatInfo\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  remarks: "\n<p>The clone is writable even if the original <xref href=\"System.Globalization.NumberFormatInfo\" data-throw-if-not-resolved=\"false\"></xref> object is read-only. Therefore, the properties of the clone can be modified with user-defined patterns.</p>\n<p>A shallow copy of an object is a copy of the object only. If the object contains references to other objects, the shallow copy will not create copies of the referred objects. It will refer to the original objects instead. On the other hand, a deep copy of an object creates a copy of the object and a copy of everything directly or indirectly referenced by that object. In the case of a <xref href=\"System.Globalization.NumberFormatInfo\" data-throw-if-not-resolved=\"false\"></xref> object, a shallow copy is sufficient for copying all instance properties, because all properties that return object references are <strong>static</strong> (<strong>Shared</strong> in Visual Basic). </p>\n"
  example:
  - "\n<p>The following example uses the <xref href=\"System.Globalization.NumberFormatInfo.Clone\" data-throw-if-not-resolved=\"false\"></xref> method to create a read/write copy of a <xref href=\"System.Globalization.NumberFormatInfo\" data-throw-if-not-resolved=\"false\"></xref> object that represents the numeric formatting conventions of the current thread culture. </p>System.Globalization.NumberFormatInfo.IsReadOnly#1"
  syntax:
    content: public object Clone()
    content.vb: Public Function Clone As Object
    return:
      type: System.Object
  seealso:
  - type: System.Globalization.NumberFormatInfo.IsReadOnly
    commentId: P:System.Globalization.NumberFormatInfo.IsReadOnly
  - type: System.Globalization.NumberFormatInfo.ReadOnly(System.Globalization.NumberFormatInfo)
    commentId: M:System.Globalization.NumberFormatInfo.ReadOnly(System.Globalization.NumberFormatInfo)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Globalization.NumberFormatInfo.GetFormat(System.Type)
  commentId: M:System.Globalization.NumberFormatInfo.GetFormat(System.Type)
  id: GetFormat(System.Type)
  parent: System.Globalization.NumberFormatInfo
  langs:
  - csharp
  - vb
  name: GetFormat(Type)
  fullName: System.Globalization.NumberFormatInfo.GetFormat(System.Type)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Globalization/NumberFormatInfo.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: GetFormat
    path: src/mscorlib/src/System/Globalization/NumberFormatInfo.cs
    startLine: 792
  assemblies:
  - System.Globalization
  namespace: System.Globalization
  summary: "\n<p>Gets an object of the specified type that provides a number formatting service.</p>\n"
  remarks: "\n<p>The <strong>Format(String, IFormatProvider)</strong> methods supported by the base data types invoke this method when the current <xref href=\"System.Globalization.NumberFormatInfo\" data-throw-if-not-resolved=\"false\"></xref> is passed as the <xref href=\"System.IFormatProvider\" data-throw-if-not-resolved=\"false\"></xref> parameter. This method implements <xref href=\"System.IFormatProvider.GetFormat(System.Type)\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: public object GetFormat(Type formatType)
    content.vb: Public Function GetFormat(formatType As Type) As Object
    parameters:
    - id: formatType
      type: System.Type
    return:
      type: System.Object
  seealso:
  - type: System.IFormatProvider
    commentId: T:System.IFormatProvider
  - type: System.Globalization.DateTimeFormatInfo.GetFormat(System.Type)
    commentId: M:System.Globalization.DateTimeFormatInfo.GetFormat(System.Type)
  implements:
  - System.IFormatProvider.GetFormat(System.Type)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Globalization.NumberFormatInfo.GetInstance(System.IFormatProvider)
  commentId: M:System.Globalization.NumberFormatInfo.GetInstance(System.IFormatProvider)
  id: GetInstance(System.IFormatProvider)
  parent: System.Globalization.NumberFormatInfo
  langs:
  - csharp
  - vb
  name: GetInstance(IFormatProvider)
  fullName: System.Globalization.NumberFormatInfo.GetInstance(System.IFormatProvider)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Globalization/NumberFormatInfo.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: GetInstance
    path: src/mscorlib/src/System/Globalization/NumberFormatInfo.cs
    startLine: 283
  assemblies:
  - System.Globalization
  namespace: System.Globalization
  summary: "\n<p>Gets the <xref href=\"System.Globalization.NumberFormatInfo\" data-throw-if-not-resolved=\"false\"></xref> associated with the specified <xref href=\"System.IFormatProvider\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  remarks: "\n<p>This method uses the <xref href=\"System.IFormatProvider.GetFormat(System.Type)\" data-throw-if-not-resolved=\"false\"></xref> method of <em>formatProvider</em> using <xref href=\"System.Globalization.NumberFormatInfo\" data-throw-if-not-resolved=\"false\"></xref> as the Type parameter. If <em>formatProvider</em> is <strong>null</strong> or if <xref href=\"System.IFormatProvider.GetFormat(System.Type)\" data-throw-if-not-resolved=\"false\"></xref> returns <strong>null</strong>, this method returns <xref href=\"System.Globalization.NumberFormatInfo.CurrentInfo\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>Your application gets a <xref href=\"System.Globalization.NumberFormatInfo\" data-throw-if-not-resolved=\"false\"></xref> object for a specific culture using one of the following methods: </p>\n<ul><li>\n<p>Through the <xref href=\"System.Globalization.CultureInfo.NumberFormat\" data-throw-if-not-resolved=\"false\"></xref> property.</p>\n</li><li>\n<p>Through the <xref href=\"System.Globalization.NumberFormatInfo.GetInstance(System.IFormatProvider)\" data-throw-if-not-resolved=\"false\"></xref> method where <em>provider</em> is a <xref href=\"System.Globalization.CultureInfo\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n</li></ul>\n<p>A <xref href=\"System.Globalization.NumberFormatInfo\" data-throw-if-not-resolved=\"false\"></xref> object is created only for the invariant culture or for specific cultures, not for neutral cultures. For more information about the invariant culture, specific cultures, and neutral cultures, see the <xref href=\"System.Globalization.CultureInfo\" data-throw-if-not-resolved=\"false\"></xref> class.</p>\n"
  syntax:
    content: public static NumberFormatInfo GetInstance(IFormatProvider formatProvider)
    content.vb: Public Shared Function GetInstance(formatProvider As IFormatProvider) As NumberFormatInfo
    parameters:
    - id: formatProvider
      type: System.IFormatProvider
    return:
      type: System.Globalization.NumberFormatInfo
  seealso:
  - type: System.IFormatProvider
    commentId: T:System.IFormatProvider
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Globalization.NumberFormatInfo.ReadOnly(System.Globalization.NumberFormatInfo)
  commentId: M:System.Globalization.NumberFormatInfo.ReadOnly(System.Globalization.NumberFormatInfo)
  id: ReadOnly(System.Globalization.NumberFormatInfo)
  parent: System.Globalization.NumberFormatInfo
  langs:
  - csharp
  - vb
  name: ReadOnly(NumberFormatInfo)
  fullName: System.Globalization.NumberFormatInfo.ReadOnly(System.Globalization.NumberFormatInfo)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Globalization/NumberFormatInfo.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ReadOnly
    path: src/mscorlib/src/System/Globalization/NumberFormatInfo.cs
    startLine: 796
  assemblies:
  - System.Globalization
  namespace: System.Globalization
  summary: "\n<p>Returns a read-only <xref href=\"System.Globalization.NumberFormatInfo\" data-throw-if-not-resolved=\"false\"></xref> wrapper.</p>\n"
  remarks: "\n<p>This wrapper prevents any modifications to <em>nfi</em>.</p>\n<p>Attempting to perform an assignment to a property of a read-only <xref href=\"System.Globalization.NumberFormatInfo\" data-throw-if-not-resolved=\"false\"></xref> causes an <xref href=\"System.InvalidOperationException\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: public static NumberFormatInfo ReadOnly(NumberFormatInfo nfi)
    content.vb: Public Shared Function ReadOnly(nfi As NumberFormatInfo) As NumberFormatInfo
    parameters:
    - id: nfi
      type: System.Globalization.NumberFormatInfo
    return:
      type: System.Globalization.NumberFormatInfo
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>nfi</em> is <strong>null</strong>. </p>\n"
  seealso:
  - type: System.Globalization.NumberFormatInfo.IsReadOnly
    commentId: P:System.Globalization.NumberFormatInfo.IsReadOnly
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: System.Globalization
  isExternal: false
  name: System.Globalization
  fullName: System.Globalization
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System.IFormatProvider
  parent: System
  isExternal: false
  name: IFormatProvider
  fullName: System.IFormatProvider
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  fullName: System.Int32
- uid: System.String
  parent: System
  isExternal: false
  name: String
  fullName: System.String
- uid: System.Int32[]
  isExternal: true
  name: Int32[]
  fullName: System.Int32[]
  fullname.vb: System.Int32()
  name.vb: Int32()
  spec.csharp:
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ()
    fullName: ()
- uid: System.Globalization.NumberFormatInfo
  parent: System.Globalization
  isExternal: false
  name: NumberFormatInfo
  fullName: System.Globalization.NumberFormatInfo
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  fullName: System.Boolean
- uid: System.IFormatProvider.GetFormat(System.Type)
  parent: System.IFormatProvider
  isExternal: true
  name: GetFormat(Type)
  fullName: System.IFormatProvider.GetFormat(System.Type)
  spec.csharp:
  - uid: System.IFormatProvider.GetFormat(System.Type)
    name: GetFormat
    fullName: System.IFormatProvider.GetFormat
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IFormatProvider.GetFormat(System.Type)
    name: GetFormat
    fullName: System.IFormatProvider.GetFormat
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: )
    fullName: )
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  fullName: System.Type
- uid: System.ArgumentOutOfRangeException
  isExternal: false
  name: ArgumentOutOfRangeException
  fullName: System.ArgumentOutOfRangeException
- uid: System.InvalidOperationException
  parent: System
  isExternal: false
  name: InvalidOperationException
  fullName: System.InvalidOperationException
- uid: System.ArgumentNullException
  isExternal: false
  name: ArgumentNullException
  fullName: System.ArgumentNullException
- uid: System.ArgumentException
  parent: System
  isExternal: false
  name: ArgumentException
  fullName: System.ArgumentException
