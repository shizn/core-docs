items:
- uid: System.Net.NetworkInformation.IPAddressCollection
  commentId: T:System.Net.NetworkInformation.IPAddressCollection
  id: IPAddressCollection
  parent: System.Net.NetworkInformation
  children:
  - System.Net.NetworkInformation.IPAddressCollection.#ctor
  - System.Net.NetworkInformation.IPAddressCollection.Add(System.Net.IPAddress)
  - System.Net.NetworkInformation.IPAddressCollection.Clear
  - System.Net.NetworkInformation.IPAddressCollection.Contains(System.Net.IPAddress)
  - System.Net.NetworkInformation.IPAddressCollection.CopyTo(System.Net.IPAddress[],System.Int32)
  - System.Net.NetworkInformation.IPAddressCollection.Count
  - System.Net.NetworkInformation.IPAddressCollection.GetEnumerator
  - System.Net.NetworkInformation.IPAddressCollection.IsReadOnly
  - System.Net.NetworkInformation.IPAddressCollection.Item(System.Int32)
  - System.Net.NetworkInformation.IPAddressCollection.Remove(System.Net.IPAddress)
  langs:
  - csharp
  - vb
  name: IPAddressCollection
  fullName: System.Net.NetworkInformation.IPAddressCollection
  type: Class
  source:
    remote:
      path: src/System.Net.Primitives/src/System/Net/NetworkInformation/IPAddressCollection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IPAddressCollection
    path: src/System.Net.Primitives/src/System/Net/NetworkInformation/IPAddressCollection.cs
    startLine: 8
  assemblies:
  - System.Net.Primitives
  namespace: System.Net.NetworkInformation
  syntax:
    content: 'public class IPAddressCollection : ICollection<IPAddress>'
    content.vb: >-
      Public Class IPAddressCollection
          Inherits ICollection(Of IPAddress)
  inheritance:
  - System.Object
  implements:
  - System.Collections.Generic.IEnumerable{System.Net.IPAddress}
  - System.Collections.IEnumerable
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: System.Net.NetworkInformation.IPAddressCollection.#ctor
  commentId: M:System.Net.NetworkInformation.IPAddressCollection.#ctor
  id: '#ctor'
  parent: System.Net.NetworkInformation.IPAddressCollection
  langs:
  - csharp
  - vb
  name: IPAddressCollection()
  fullName: System.Net.NetworkInformation.IPAddressCollection.IPAddressCollection()
  type: Constructor
  source:
    remote:
      path: src/System.Net.Primitives/src/System/Net/NetworkInformation/IPAddressCollection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Net.Primitives/src/System/Net/NetworkInformation/IPAddressCollection.cs
    startLine: 10
  assemblies:
  - System.Net.Primitives
  namespace: System.Net.NetworkInformation
  syntax:
    content: protected IPAddressCollection()
    content.vb: Protected Sub New
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: System.Net.NetworkInformation.IPAddressCollection.Count
  commentId: P:System.Net.NetworkInformation.IPAddressCollection.Count
  id: Count
  parent: System.Net.NetworkInformation.IPAddressCollection
  langs:
  - csharp
  - vb
  name: Count
  fullName: System.Net.NetworkInformation.IPAddressCollection.Count
  type: Property
  source:
    remote:
      path: src/System.Net.Primitives/src/System/Net/NetworkInformation/IPAddressCollection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Count
    path: src/System.Net.Primitives/src/System/Net/NetworkInformation/IPAddressCollection.cs
    startLine: 19
  assemblies:
  - System.Net.Primitives
  namespace: System.Net.NetworkInformation
  syntax:
    content: public virtual int Count { get; }
    content.vb: Public Overridable ReadOnly Property Count As Integer
    parameters: []
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: System.Net.NetworkInformation.IPAddressCollection.IsReadOnly
  commentId: P:System.Net.NetworkInformation.IPAddressCollection.IsReadOnly
  id: IsReadOnly
  parent: System.Net.NetworkInformation.IPAddressCollection
  langs:
  - csharp
  - vb
  name: IsReadOnly
  fullName: System.Net.NetworkInformation.IPAddressCollection.IsReadOnly
  type: Property
  source:
    remote:
      path: src/System.Net.Primitives/src/System/Net/NetworkInformation/IPAddressCollection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IsReadOnly
    path: src/System.Net.Primitives/src/System/Net/NetworkInformation/IPAddressCollection.cs
    startLine: 27
  assemblies:
  - System.Net.Primitives
  namespace: System.Net.NetworkInformation
  syntax:
    content: public virtual bool IsReadOnly { get; }
    content.vb: Public Overridable ReadOnly Property IsReadOnly As Boolean
    parameters: []
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: System.Net.NetworkInformation.IPAddressCollection.Item(System.Int32)
  commentId: P:System.Net.NetworkInformation.IPAddressCollection.Item(System.Int32)
  id: Item(System.Int32)
  parent: System.Net.NetworkInformation.IPAddressCollection
  langs:
  - csharp
  - vb
  name: Item[Int32]
  fullName: System.Net.NetworkInformation.IPAddressCollection.Item[System.Int32]
  type: Property
  source:
    remote:
      path: src/System.Net.Primitives/src/System/Net/NetworkInformation/IPAddressCollection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: this[]
    path: src/System.Net.Primitives/src/System/Net/NetworkInformation/IPAddressCollection.cs
    startLine: 55
  assemblies:
  - System.Net.Primitives
  namespace: System.Net.NetworkInformation
  syntax:
    content: public virtual IPAddress this[int index] { get; }
    content.vb: Public Overridable ReadOnly Property Item(index As Integer) As IPAddress
    parameters:
    - id: index
      type: System.Int32
    return:
      type: System.Net.IPAddress
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
  fullName.vb: System.Net.NetworkInformation.IPAddressCollection.Item(System.Int32)
  name.vb: Item(Int32)
- uid: System.Net.NetworkInformation.IPAddressCollection.Add(System.Net.IPAddress)
  commentId: M:System.Net.NetworkInformation.IPAddressCollection.Add(System.Net.IPAddress)
  id: Add(System.Net.IPAddress)
  parent: System.Net.NetworkInformation.IPAddressCollection
  langs:
  - csharp
  - vb
  name: Add(IPAddress)
  fullName: System.Net.NetworkInformation.IPAddressCollection.Add(System.Net.IPAddress)
  type: Method
  source:
    remote:
      path: src/System.Net.Primitives/src/System/Net/NetworkInformation/IPAddressCollection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Add
    path: src/System.Net.Primitives/src/System/Net/NetworkInformation/IPAddressCollection.cs
    startLine: 35
  assemblies:
  - System.Net.Primitives
  namespace: System.Net.NetworkInformation
  syntax:
    content: public virtual void Add(IPAddress address)
    content.vb: Public Overridable Sub Add(address As IPAddress)
    parameters:
    - id: address
      type: System.Net.IPAddress
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Net.NetworkInformation.IPAddressCollection.Clear
  commentId: M:System.Net.NetworkInformation.IPAddressCollection.Clear
  id: Clear
  parent: System.Net.NetworkInformation.IPAddressCollection
  langs:
  - csharp
  - vb
  name: Clear()
  fullName: System.Net.NetworkInformation.IPAddressCollection.Clear()
  type: Method
  source:
    remote:
      path: src/System.Net.Primitives/src/System/Net/NetworkInformation/IPAddressCollection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Clear
    path: src/System.Net.Primitives/src/System/Net/NetworkInformation/IPAddressCollection.cs
    startLine: 68
  assemblies:
  - System.Net.Primitives
  namespace: System.Net.NetworkInformation
  syntax:
    content: public virtual void Clear()
    content.vb: Public Overridable Sub Clear
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Net.NetworkInformation.IPAddressCollection.Contains(System.Net.IPAddress)
  commentId: M:System.Net.NetworkInformation.IPAddressCollection.Contains(System.Net.IPAddress)
  id: Contains(System.Net.IPAddress)
  parent: System.Net.NetworkInformation.IPAddressCollection
  langs:
  - csharp
  - vb
  name: Contains(IPAddress)
  fullName: System.Net.NetworkInformation.IPAddressCollection.Contains(System.Net.IPAddress)
  type: Method
  source:
    remote:
      path: src/System.Net.Primitives/src/System/Net/NetworkInformation/IPAddressCollection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Contains
    path: src/System.Net.Primitives/src/System/Net/NetworkInformation/IPAddressCollection.cs
    startLine: 40
  assemblies:
  - System.Net.Primitives
  namespace: System.Net.NetworkInformation
  syntax:
    content: public virtual bool Contains(IPAddress address)
    content.vb: Public Overridable Function Contains(address As IPAddress) As Boolean
    parameters:
    - id: address
      type: System.Net.IPAddress
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Net.NetworkInformation.IPAddressCollection.CopyTo(System.Net.IPAddress[],System.Int32)
  commentId: M:System.Net.NetworkInformation.IPAddressCollection.CopyTo(System.Net.IPAddress[],System.Int32)
  id: CopyTo(System.Net.IPAddress[],System.Int32)
  parent: System.Net.NetworkInformation.IPAddressCollection
  langs:
  - csharp
  - vb
  name: CopyTo(IPAddress[], Int32)
  fullName: System.Net.NetworkInformation.IPAddressCollection.CopyTo(System.Net.IPAddress[], System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Net.Primitives/src/System/Net/NetworkInformation/IPAddressCollection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CopyTo
    path: src/System.Net.Primitives/src/System/Net/NetworkInformation/IPAddressCollection.cs
    startLine: 14
  assemblies:
  - System.Net.Primitives
  namespace: System.Net.NetworkInformation
  syntax:
    content: public virtual void CopyTo(IPAddress[] array, int offset)
    content.vb: Public Overridable Sub CopyTo(array As IPAddress(), offset As Integer)
    parameters:
    - id: array
      type: System.Net.IPAddress[]
    - id: offset
      type: System.Int32
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: System.Net.NetworkInformation.IPAddressCollection.CopyTo(System.Net.IPAddress(), System.Int32)
  name.vb: CopyTo(IPAddress(), Int32)
- uid: System.Net.NetworkInformation.IPAddressCollection.GetEnumerator
  commentId: M:System.Net.NetworkInformation.IPAddressCollection.GetEnumerator
  id: GetEnumerator
  parent: System.Net.NetworkInformation.IPAddressCollection
  langs:
  - csharp
  - vb
  name: GetEnumerator()
  fullName: System.Net.NetworkInformation.IPAddressCollection.GetEnumerator()
  type: Method
  source:
    remote:
      path: src/System.Net.Primitives/src/System/Net/NetworkInformation/IPAddressCollection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetEnumerator
    path: src/System.Net.Primitives/src/System/Net/NetworkInformation/IPAddressCollection.cs
    startLine: 50
  assemblies:
  - System.Net.Primitives
  namespace: System.Net.NetworkInformation
  syntax:
    content: public virtual IEnumerator<IPAddress> GetEnumerator()
    content.vb: Public Overridable Function GetEnumerator As IEnumerator(Of IPAddress)
    return:
      type: IEnumerator{System.Net.IPAddress}
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Net.NetworkInformation.IPAddressCollection.Remove(System.Net.IPAddress)
  commentId: M:System.Net.NetworkInformation.IPAddressCollection.Remove(System.Net.IPAddress)
  id: Remove(System.Net.IPAddress)
  parent: System.Net.NetworkInformation.IPAddressCollection
  langs:
  - csharp
  - vb
  name: Remove(IPAddress)
  fullName: System.Net.NetworkInformation.IPAddressCollection.Remove(System.Net.IPAddress)
  type: Method
  source:
    remote:
      path: src/System.Net.Primitives/src/System/Net/NetworkInformation/IPAddressCollection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Remove
    path: src/System.Net.Primitives/src/System/Net/NetworkInformation/IPAddressCollection.cs
    startLine: 63
  assemblies:
  - System.Net.Primitives
  namespace: System.Net.NetworkInformation
  syntax:
    content: public virtual bool Remove(IPAddress address)
    content.vb: Public Overridable Function Remove(address As IPAddress) As Boolean
    parameters:
    - id: address
      type: System.Net.IPAddress
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
references:
- uid: System.Net.NetworkInformation
  isExternal: false
  name: System.Net.NetworkInformation
  fullName: System.Net.NetworkInformation
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System.Collections.Generic.IEnumerable{System.Net.IPAddress}
  definition: System.Collections.Generic.IEnumerable`1
  name: Collections.Generic.IEnumerable<IPAddress>
  fullName: System.Collections.Generic.IEnumerable<System.Net.IPAddress>
  fullname.vb: System.Collections.Generic.IEnumerable(Of System.Net.IPAddress)
  name.vb: Collections.Generic.IEnumerable(Of IPAddress)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: Collections.Generic.IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Net.IPAddress
    name: IPAddress
    fullName: System.Net.IPAddress
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: Collections.Generic.IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Net.IPAddress
    name: IPAddress
    fullName: System.Net.IPAddress
  - name: )
    fullName: )
- uid: System.Collections.IEnumerable
  parent: System.Collections
  isExternal: false
  name: Collections.IEnumerable
  fullName: System.Collections.IEnumerable
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Collections.Generic.IEnumerable`1
  parent: System.Collections.Generic
  isExternal: false
  name: Collections.Generic.IEnumerable<>
  fullName: System.Collections.Generic.IEnumerable<>
  fullname.vb: System.Collections.Generic.IEnumerable(Of )
  name.vb: Collections.Generic.IEnumerable(Of )
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: Collections.Generic.IEnumerable
    fullName: System.Collections.Generic.IEnumerable
  - name: <
    fullName: <
  - {}
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: Collections.Generic.IEnumerable
    fullName: System.Collections.Generic.IEnumerable
  - name: '(Of '
    fullName: '(Of '
  - {}
  - name: )
    fullName: )
- uid: System.Collections
  isExternal: false
  name: System.Collections
  fullName: System.Collections
- uid: System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  fullName: System.Int32
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  fullName: System.Boolean
- uid: System.Net.IPAddress
  parent: System.Net
  isExternal: false
  name: IPAddress
  fullName: System.Net.IPAddress
- uid: System.Net
  isExternal: false
  name: System.Net
  fullName: System.Net
- uid: System.Net.IPAddress[]
  isExternal: false
  name: IPAddress[]
  fullName: System.Net.IPAddress[]
  fullname.vb: System.Net.IPAddress()
  name.vb: IPAddress()
  spec.csharp:
  - uid: System.Net.IPAddress
    name: IPAddress
    fullName: System.Net.IPAddress
  - name: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Net.IPAddress
    name: IPAddress
    fullName: System.Net.IPAddress
  - name: ()
    fullName: ()
- uid: System.Collections.Generic.IEnumerator{System.Net.IPAddress}
  definition: System.Collections.Generic.IEnumerator`1
  name: Collections.Generic.IEnumerator<IPAddress>
  fullName: System.Collections.Generic.IEnumerator<System.Net.IPAddress>
  fullname.vb: System.Collections.Generic.IEnumerator(Of System.Net.IPAddress)
  name.vb: Collections.Generic.IEnumerator(Of IPAddress)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: Collections.Generic.IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Net.IPAddress
    name: IPAddress
    fullName: System.Net.IPAddress
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: Collections.Generic.IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Net.IPAddress
    name: IPAddress
    fullName: System.Net.IPAddress
  - name: )
    fullName: )
- uid: System.Collections.Generic.IEnumerator`1
  parent: System.Collections.Generic
  isExternal: false
  name: Collections.Generic.IEnumerator<>
  fullName: System.Collections.Generic.IEnumerator<>
  fullname.vb: System.Collections.Generic.IEnumerator(Of )
  name.vb: Collections.Generic.IEnumerator(Of )
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: Collections.Generic.IEnumerator
    fullName: System.Collections.Generic.IEnumerator
  - name: <
    fullName: <
  - {}
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: Collections.Generic.IEnumerator
    fullName: System.Collections.Generic.IEnumerator
  - name: '(Of '
    fullName: '(Of '
  - {}
  - name: )
    fullName: )
