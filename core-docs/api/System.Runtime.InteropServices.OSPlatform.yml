items:
- uid: System.Runtime.InteropServices.OSPlatform
  commentId: T:System.Runtime.InteropServices.OSPlatform
  id: OSPlatform
  parent: System.Runtime.InteropServices
  children:
  - System.Runtime.InteropServices.OSPlatform.Create(System.String)
  - System.Runtime.InteropServices.OSPlatform.Equals(System.Object)
  - System.Runtime.InteropServices.OSPlatform.Equals(System.Runtime.InteropServices.OSPlatform)
  - System.Runtime.InteropServices.OSPlatform.GetHashCode
  - System.Runtime.InteropServices.OSPlatform.Linux
  - System.Runtime.InteropServices.OSPlatform.op_Equality(System.Runtime.InteropServices.OSPlatform,System.Runtime.InteropServices.OSPlatform)
  - System.Runtime.InteropServices.OSPlatform.op_Inequality(System.Runtime.InteropServices.OSPlatform,System.Runtime.InteropServices.OSPlatform)
  - System.Runtime.InteropServices.OSPlatform.OSX
  - System.Runtime.InteropServices.OSPlatform.ToString
  - System.Runtime.InteropServices.OSPlatform.Windows
  langs:
  - csharp
  - vb
  name: OSPlatform
  fullName: System.Runtime.InteropServices.OSPlatform
  type: Struct
  source:
    remote:
      path: src/System.Runtime.InteropServices.RuntimeInformation/ref/System.Runtime.InteropServices.RuntimeInformation.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: OSPlatform
    path: src/System.Runtime.InteropServices.RuntimeInformation/ref/System.Runtime.InteropServices.RuntimeInformation.cs
    startLine: 10
  assemblies:
  - System.Runtime.InteropServices.RuntimeInformation
  namespace: System.Runtime.InteropServices
  syntax:
    content: >-
      [StructLayout(LayoutKind.Sequential)]

      public struct OSPlatform : IEquatable<OSPlatform>
    content.vb: >-
      <StructLayout(LayoutKind.Sequential)>

      Public Structure OSPlatform
          Implements IEquatable(Of OSPlatform)
  implements:
  - System.IEquatable{System.Runtime.InteropServices.OSPlatform}
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetType
  attributes:
  - type: System.Runtime.InteropServices.StructLayoutAttribute
    ctor: System.Runtime.InteropServices.StructLayoutAttribute.#ctor(System.Runtime.InteropServices.LayoutKind)
    arguments:
    - type: System.Runtime.InteropServices.LayoutKind
      value: 0
  modifiers.csharp:
  - public
  - struct
  modifiers.vb:
  - Public
  - Structure
- uid: System.Runtime.InteropServices.OSPlatform.Linux
  commentId: P:System.Runtime.InteropServices.OSPlatform.Linux
  id: Linux
  parent: System.Runtime.InteropServices.OSPlatform
  langs:
  - csharp
  - vb
  name: Linux
  fullName: System.Runtime.InteropServices.OSPlatform.Linux
  type: Property
  source:
    remote:
      path: src/System.Runtime.InteropServices.RuntimeInformation/ref/System.Runtime.InteropServices.RuntimeInformation.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Linux
    path: src/System.Runtime.InteropServices.RuntimeInformation/ref/System.Runtime.InteropServices.RuntimeInformation.cs
    startLine: 13
  assemblies:
  - System.Runtime.InteropServices.RuntimeInformation
  namespace: System.Runtime.InteropServices
  syntax:
    content: public static OSPlatform Linux { get; }
    content.vb: Public Shared ReadOnly Property Linux As OSPlatform
    parameters: []
    return:
      type: System.Runtime.InteropServices.OSPlatform
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: System.Runtime.InteropServices.OSPlatform.OSX
  commentId: P:System.Runtime.InteropServices.OSPlatform.OSX
  id: OSX
  parent: System.Runtime.InteropServices.OSPlatform
  langs:
  - csharp
  - vb
  name: OSX
  fullName: System.Runtime.InteropServices.OSPlatform.OSX
  type: Property
  source:
    remote:
      path: src/System.Runtime.InteropServices.RuntimeInformation/ref/System.Runtime.InteropServices.RuntimeInformation.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: OSX
    path: src/System.Runtime.InteropServices.RuntimeInformation/ref/System.Runtime.InteropServices.RuntimeInformation.cs
    startLine: 14
  assemblies:
  - System.Runtime.InteropServices.RuntimeInformation
  namespace: System.Runtime.InteropServices
  syntax:
    content: public static OSPlatform OSX { get; }
    content.vb: Public Shared ReadOnly Property OSX As OSPlatform
    parameters: []
    return:
      type: System.Runtime.InteropServices.OSPlatform
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: System.Runtime.InteropServices.OSPlatform.Windows
  commentId: P:System.Runtime.InteropServices.OSPlatform.Windows
  id: Windows
  parent: System.Runtime.InteropServices.OSPlatform
  langs:
  - csharp
  - vb
  name: Windows
  fullName: System.Runtime.InteropServices.OSPlatform.Windows
  type: Property
  source:
    remote:
      path: src/System.Runtime.InteropServices.RuntimeInformation/ref/System.Runtime.InteropServices.RuntimeInformation.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Windows
    path: src/System.Runtime.InteropServices.RuntimeInformation/ref/System.Runtime.InteropServices.RuntimeInformation.cs
    startLine: 15
  assemblies:
  - System.Runtime.InteropServices.RuntimeInformation
  namespace: System.Runtime.InteropServices
  syntax:
    content: public static OSPlatform Windows { get; }
    content.vb: Public Shared ReadOnly Property Windows As OSPlatform
    parameters: []
    return:
      type: System.Runtime.InteropServices.OSPlatform
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: System.Runtime.InteropServices.OSPlatform.Create(System.String)
  commentId: M:System.Runtime.InteropServices.OSPlatform.Create(System.String)
  id: Create(System.String)
  parent: System.Runtime.InteropServices.OSPlatform
  langs:
  - csharp
  - vb
  name: Create(String)
  fullName: System.Runtime.InteropServices.OSPlatform.Create(System.String)
  type: Method
  source:
    remote:
      path: src/System.Runtime.InteropServices.RuntimeInformation/ref/System.Runtime.InteropServices.RuntimeInformation.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Create
    path: src/System.Runtime.InteropServices.RuntimeInformation/ref/System.Runtime.InteropServices.RuntimeInformation.cs
    startLine: 16
  assemblies:
  - System.Runtime.InteropServices.RuntimeInformation
  namespace: System.Runtime.InteropServices
  syntax:
    content: public static OSPlatform Create(string osPlatform)
    content.vb: Public Shared Function Create(osPlatform As String) As OSPlatform
    parameters:
    - id: osPlatform
      type: System.String
    return:
      type: System.Runtime.InteropServices.OSPlatform
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Runtime.InteropServices.OSPlatform.Equals(System.Object)
  commentId: M:System.Runtime.InteropServices.OSPlatform.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Runtime.InteropServices.OSPlatform
  langs:
  - csharp
  - vb
  name: Equals(Object)
  fullName: System.Runtime.InteropServices.OSPlatform.Equals(System.Object)
  type: Method
  source:
    remote:
      path: src/System.Runtime.InteropServices.RuntimeInformation/ref/System.Runtime.InteropServices.RuntimeInformation.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Equals
    path: src/System.Runtime.InteropServices.RuntimeInformation/ref/System.Runtime.InteropServices.RuntimeInformation.cs
    startLine: 17
  assemblies:
  - System.Runtime.InteropServices.RuntimeInformation
  namespace: System.Runtime.InteropServices
  syntax:
    content: public override bool Equals(object obj)
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
    parameters:
    - id: obj
      type: System.Object
    return:
      type: System.Boolean
  overridden: System.ValueType.Equals(System.Object)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Runtime.InteropServices.OSPlatform.Equals(System.Runtime.InteropServices.OSPlatform)
  commentId: M:System.Runtime.InteropServices.OSPlatform.Equals(System.Runtime.InteropServices.OSPlatform)
  id: Equals(System.Runtime.InteropServices.OSPlatform)
  parent: System.Runtime.InteropServices.OSPlatform
  langs:
  - csharp
  - vb
  name: Equals(OSPlatform)
  fullName: System.Runtime.InteropServices.OSPlatform.Equals(System.Runtime.InteropServices.OSPlatform)
  type: Method
  source:
    remote:
      path: src/System.Runtime.InteropServices.RuntimeInformation/ref/System.Runtime.InteropServices.RuntimeInformation.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Equals
    path: src/System.Runtime.InteropServices.RuntimeInformation/ref/System.Runtime.InteropServices.RuntimeInformation.cs
    startLine: 18
  assemblies:
  - System.Runtime.InteropServices.RuntimeInformation
  namespace: System.Runtime.InteropServices
  syntax:
    content: public bool Equals(OSPlatform other)
    content.vb: Public Function Equals(other As OSPlatform) As Boolean
    parameters:
    - id: other
      type: System.Runtime.InteropServices.OSPlatform
    return:
      type: System.Boolean
  implements:
  - System.IEquatable{System.Runtime.InteropServices.OSPlatform}.Equals(System.Runtime.InteropServices.OSPlatform)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Runtime.InteropServices.OSPlatform.GetHashCode
  commentId: M:System.Runtime.InteropServices.OSPlatform.GetHashCode
  id: GetHashCode
  parent: System.Runtime.InteropServices.OSPlatform
  langs:
  - csharp
  - vb
  name: GetHashCode()
  fullName: System.Runtime.InteropServices.OSPlatform.GetHashCode()
  type: Method
  source:
    remote:
      path: src/System.Runtime.InteropServices.RuntimeInformation/ref/System.Runtime.InteropServices.RuntimeInformation.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetHashCode
    path: src/System.Runtime.InteropServices.RuntimeInformation/ref/System.Runtime.InteropServices.RuntimeInformation.cs
    startLine: 19
  assemblies:
  - System.Runtime.InteropServices.RuntimeInformation
  namespace: System.Runtime.InteropServices
  syntax:
    content: public override int GetHashCode()
    content.vb: Public Overrides Function GetHashCode As Integer
    return:
      type: System.Int32
  overridden: System.ValueType.GetHashCode
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Runtime.InteropServices.OSPlatform.op_Equality(System.Runtime.InteropServices.OSPlatform,System.Runtime.InteropServices.OSPlatform)
  commentId: M:System.Runtime.InteropServices.OSPlatform.op_Equality(System.Runtime.InteropServices.OSPlatform,System.Runtime.InteropServices.OSPlatform)
  id: op_Equality(System.Runtime.InteropServices.OSPlatform,System.Runtime.InteropServices.OSPlatform)
  parent: System.Runtime.InteropServices.OSPlatform
  langs:
  - csharp
  - vb
  name: Equality(OSPlatform, OSPlatform)
  fullName: System.Runtime.InteropServices.OSPlatform.Equality(System.Runtime.InteropServices.OSPlatform, System.Runtime.InteropServices.OSPlatform)
  type: Operator
  source:
    remote:
      path: src/System.Runtime.InteropServices.RuntimeInformation/ref/System.Runtime.InteropServices.RuntimeInformation.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_Equality
    path: src/System.Runtime.InteropServices.RuntimeInformation/ref/System.Runtime.InteropServices.RuntimeInformation.cs
    startLine: 20
  assemblies:
  - System.Runtime.InteropServices.RuntimeInformation
  namespace: System.Runtime.InteropServices
  syntax:
    content: public static bool operator ==(OSPlatform left, OSPlatform right)
    content.vb: Public Shared Operator =(left As OSPlatform, right As OSPlatform) As Boolean
    parameters:
    - id: left
      type: System.Runtime.InteropServices.OSPlatform
    - id: right
      type: System.Runtime.InteropServices.OSPlatform
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Runtime.InteropServices.OSPlatform.op_Inequality(System.Runtime.InteropServices.OSPlatform,System.Runtime.InteropServices.OSPlatform)
  commentId: M:System.Runtime.InteropServices.OSPlatform.op_Inequality(System.Runtime.InteropServices.OSPlatform,System.Runtime.InteropServices.OSPlatform)
  id: op_Inequality(System.Runtime.InteropServices.OSPlatform,System.Runtime.InteropServices.OSPlatform)
  parent: System.Runtime.InteropServices.OSPlatform
  langs:
  - csharp
  - vb
  name: Inequality(OSPlatform, OSPlatform)
  fullName: System.Runtime.InteropServices.OSPlatform.Inequality(System.Runtime.InteropServices.OSPlatform, System.Runtime.InteropServices.OSPlatform)
  type: Operator
  source:
    remote:
      path: src/System.Runtime.InteropServices.RuntimeInformation/ref/System.Runtime.InteropServices.RuntimeInformation.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_Inequality
    path: src/System.Runtime.InteropServices.RuntimeInformation/ref/System.Runtime.InteropServices.RuntimeInformation.cs
    startLine: 21
  assemblies:
  - System.Runtime.InteropServices.RuntimeInformation
  namespace: System.Runtime.InteropServices
  syntax:
    content: public static bool operator !=(OSPlatform left, OSPlatform right)
    content.vb: Public Shared Operator <>(left As OSPlatform, right As OSPlatform) As Boolean
    parameters:
    - id: left
      type: System.Runtime.InteropServices.OSPlatform
    - id: right
      type: System.Runtime.InteropServices.OSPlatform
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Runtime.InteropServices.OSPlatform.ToString
  commentId: M:System.Runtime.InteropServices.OSPlatform.ToString
  id: ToString
  parent: System.Runtime.InteropServices.OSPlatform
  langs:
  - csharp
  - vb
  name: ToString()
  fullName: System.Runtime.InteropServices.OSPlatform.ToString()
  type: Method
  source:
    remote:
      path: src/System.Runtime.InteropServices.RuntimeInformation/ref/System.Runtime.InteropServices.RuntimeInformation.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ToString
    path: src/System.Runtime.InteropServices.RuntimeInformation/ref/System.Runtime.InteropServices.RuntimeInformation.cs
    startLine: 22
  assemblies:
  - System.Runtime.InteropServices.RuntimeInformation
  namespace: System.Runtime.InteropServices
  syntax:
    content: public override string ToString()
    content.vb: Public Overrides Function ToString As String
    return:
      type: System.String
  overridden: System.ValueType.ToString
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: System.Runtime.InteropServices
  isExternal: false
  name: System.Runtime.InteropServices
  fullName: System.Runtime.InteropServices
- uid: System.IEquatable{System.Runtime.InteropServices.OSPlatform}
  parent: System
  definition: System.IEquatable`1
  name: IEquatable<OSPlatform>
  fullName: System.IEquatable<System.Runtime.InteropServices.OSPlatform>
  fullname.vb: System.IEquatable(Of System.Runtime.InteropServices.OSPlatform)
  name.vb: IEquatable(Of OSPlatform)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Runtime.InteropServices.OSPlatform
    name: OSPlatform
    fullName: System.Runtime.InteropServices.OSPlatform
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Runtime.InteropServices.OSPlatform
    name: OSPlatform
    fullName: System.Runtime.InteropServices.OSPlatform
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.IEquatable`1
  parent: System
  isExternal: false
  name: IEquatable<T>
  fullName: System.IEquatable<T>
  fullname.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    fullName: System.IEquatable
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    fullName: System.IEquatable
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System.Runtime.InteropServices.OSPlatform
  parent: System.Runtime.InteropServices
  isExternal: false
  name: OSPlatform
  fullName: System.Runtime.InteropServices.OSPlatform
- uid: System.String
  parent: System
  isExternal: false
  name: String
  fullName: System.String
- uid: System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  name: Equals(Object)
  fullName: System.ValueType.Equals(System.Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    fullName: System.ValueType.Equals
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    fullName: System.ValueType.Equals
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  fullName: System.Boolean
- uid: System.ValueType
  parent: System
  isExternal: false
  name: ValueType
  fullName: System.ValueType
- uid: System.IEquatable{System.Runtime.InteropServices.OSPlatform}.Equals(System.Runtime.InteropServices.OSPlatform)
  parent: System.IEquatable{System.Runtime.InteropServices.OSPlatform}
  definition: System.IEquatable`1.Equals(`0)
  name: Equals(OSPlatform)
  fullName: System.IEquatable<System.Runtime.InteropServices.OSPlatform>.Equals(System.Runtime.InteropServices.OSPlatform)
  fullname.vb: System.IEquatable(Of System.Runtime.InteropServices.OSPlatform).Equals(System.Runtime.InteropServices.OSPlatform)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    fullName: System.IEquatable<System.Runtime.InteropServices.OSPlatform>.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Runtime.InteropServices.OSPlatform
    name: OSPlatform
    fullName: System.Runtime.InteropServices.OSPlatform
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    fullName: System.IEquatable(Of System.Runtime.InteropServices.OSPlatform).Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Runtime.InteropServices.OSPlatform
    name: OSPlatform
    fullName: System.Runtime.InteropServices.OSPlatform
  - name: )
    fullName: )
- uid: System.IEquatable`1.Equals(`0)
  parent: System.IEquatable`1
  isExternal: false
  name: Equals(T)
  fullName: System.IEquatable<T>.Equals(T)
  fullname.vb: System.IEquatable(Of T).Equals(T)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    fullName: System.IEquatable<T>.Equals
  - name: (
    fullName: (
  - name: T
    fullName: T
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    fullName: System.IEquatable(Of T).Equals
  - name: (
    fullName: (
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: false
  name: GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    fullName: System.ValueType.GetHashCode
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    fullName: System.ValueType.GetHashCode
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  fullName: System.Int32
- uid: System.ValueType.ToString
  parent: System.ValueType
  isExternal: false
  name: ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    fullName: System.ValueType.ToString
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    fullName: System.ValueType.ToString
  - name: (
    fullName: (
  - name: )
    fullName: )
