items:
- uid: System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken
  commentId: T:System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken
  id: EventRegistrationToken
  parent: System.Runtime.InteropServices.WindowsRuntime
  children:
  - System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken.Equals(System.Object)
  - System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken.GetHashCode
  - System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken.op_Equality(System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken,System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken)
  - System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken.op_Inequality(System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken,System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken)
  langs:
  - csharp
  - vb
  name: EventRegistrationToken
  fullName: System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken
  type: Struct
  source:
    remote:
      path: src/mscorlib/src/System/Runtime/InteropServices/WindowsRuntime/EventRegistrationToken.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: EventRegistrationToken
    path: src/mscorlib/src/System/Runtime/InteropServices/WindowsRuntime/EventRegistrationToken.cs
    startLine: 13
  assemblies:
  - System.Runtime.InteropServices.WindowsRuntime
  namespace: System.Runtime.InteropServices.WindowsRuntime
  summary: "\n<p>A token that is returned when an event handler is added to a Windows Runtime event. The token is used to remove the event handler from the event at a later time. </p>\n"
  remarks: "\n<p>Use the <xref href=\"System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken\" data-throw-if-not-resolved=\"false\"></xref> structure only if you use native Windows Runtime techniques to add and remove event handlers for Windows Runtime events. If you use the syntax that is provided by the C# or Visual Basic languages to add and remove event handlers, <xref href=\"System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken\" data-throw-if-not-resolved=\"false\"></xref> is an implementation detail handled by the compilers. </p>\n"
  syntax:
    content: public struct EventRegistrationToken
    content.vb: Public Structure EventRegistrationToken
  inheritedMembers:
  - System.ValueType.ToString
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetType
  attributes:
  - type: System.Runtime.InteropServices.StructLayoutAttribute
    ctor: System.Runtime.InteropServices.StructLayoutAttribute.#ctor(System.Runtime.InteropServices.LayoutKind)
    arguments:
    - type: System.Runtime.InteropServices.LayoutKind
      value: 0
  modifiers.csharp:
  - public
  - struct
  modifiers.vb:
  - Public
  - Structure
- uid: System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken.Equals(System.Object)
  commentId: M:System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken
  langs:
  - csharp
  - vb
  name: Equals(Object)
  fullName: System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken.Equals(System.Object)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Runtime/InteropServices/WindowsRuntime/EventRegistrationToken.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Equals
    path: src/mscorlib/src/System/Runtime/InteropServices/WindowsRuntime/EventRegistrationToken.cs
    startLine: 37
  assemblies:
  - System.Runtime.InteropServices.WindowsRuntime
  namespace: System.Runtime.InteropServices.WindowsRuntime
  summary: "\n<p>Returns a value that indicates whether the current object is equal to the specified object. </p>\n"
  syntax:
    content: public override bool Equals(object obj)
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
    parameters:
    - id: obj
      type: System.Object
    return:
      type: System.Boolean
  overridden: System.ValueType.Equals(System.Object)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken.GetHashCode
  commentId: M:System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken.GetHashCode
  id: GetHashCode
  parent: System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken
  langs:
  - csharp
  - vb
  name: GetHashCode()
  fullName: System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken.GetHashCode()
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Runtime/InteropServices/WindowsRuntime/EventRegistrationToken.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: GetHashCode
    path: src/mscorlib/src/System/Runtime/InteropServices/WindowsRuntime/EventRegistrationToken.cs
    startLine: 47
  assemblies:
  - System.Runtime.InteropServices.WindowsRuntime
  namespace: System.Runtime.InteropServices.WindowsRuntime
  summary: "\n<p>Returns the hash code for this instance. </p>\n"
  syntax:
    content: public override int GetHashCode()
    content.vb: Public Overrides Function GetHashCode As Integer
    return:
      type: System.Int32
  overridden: System.ValueType.GetHashCode
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken.op_Equality(System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken,System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken)
  commentId: M:System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken.op_Equality(System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken,System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken)
  id: op_Equality(System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken,System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken)
  parent: System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken
  langs:
  - csharp
  - vb
  name: Equality(EventRegistrationToken, EventRegistrationToken)
  fullName: System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken.Equality(System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken, System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken)
  type: Operator
  source:
    remote:
      path: src/mscorlib/src/System/Runtime/InteropServices/WindowsRuntime/EventRegistrationToken.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: op_Equality
    path: src/mscorlib/src/System/Runtime/InteropServices/WindowsRuntime/EventRegistrationToken.cs
    startLine: 27
  assemblies:
  - System.Runtime.InteropServices.WindowsRuntime
  namespace: System.Runtime.InteropServices.WindowsRuntime
  summary: "\n<p>Indicates whether two <xref href=\"System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken\" data-throw-if-not-resolved=\"false\"></xref> instances are equal. </p>\n"
  syntax:
    content: public static bool operator ==(EventRegistrationToken left, EventRegistrationToken right)
    content.vb: Public Shared Operator =(left As EventRegistrationToken, right As EventRegistrationToken) As Boolean
    parameters:
    - id: left
      type: System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken
    - id: right
      type: System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken.op_Inequality(System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken,System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken)
  commentId: M:System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken.op_Inequality(System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken,System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken)
  id: op_Inequality(System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken,System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken)
  parent: System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken
  langs:
  - csharp
  - vb
  name: Inequality(EventRegistrationToken, EventRegistrationToken)
  fullName: System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken.Inequality(System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken, System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken)
  type: Operator
  source:
    remote:
      path: src/mscorlib/src/System/Runtime/InteropServices/WindowsRuntime/EventRegistrationToken.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: op_Inequality
    path: src/mscorlib/src/System/Runtime/InteropServices/WindowsRuntime/EventRegistrationToken.cs
    startLine: 32
  assemblies:
  - System.Runtime.InteropServices.WindowsRuntime
  namespace: System.Runtime.InteropServices.WindowsRuntime
  summary: "\n<p>Indicates whether two <xref href=\"System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken\" data-throw-if-not-resolved=\"false\"></xref> instances are not equal.</p>\n"
  syntax:
    content: public static bool operator !=(EventRegistrationToken left, EventRegistrationToken right)
    content.vb: Public Shared Operator <>(left As EventRegistrationToken, right As EventRegistrationToken) As Boolean
    parameters:
    - id: left
      type: System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken
    - id: right
      type: System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: System.Runtime.InteropServices.WindowsRuntime
  isExternal: false
  name: System.Runtime.InteropServices.WindowsRuntime
  fullName: System.Runtime.InteropServices.WindowsRuntime
- uid: System.ValueType.ToString
  parent: System.ValueType
  isExternal: false
  name: ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    fullName: System.ValueType.ToString
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    fullName: System.ValueType.ToString
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.ValueType
  parent: System
  isExternal: false
  name: ValueType
  fullName: System.ValueType
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  name: Equals(Object)
  fullName: System.ValueType.Equals(System.Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    fullName: System.ValueType.Equals
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    fullName: System.ValueType.Equals
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  fullName: System.Boolean
- uid: System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: false
  name: GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    fullName: System.ValueType.GetHashCode
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    fullName: System.ValueType.GetHashCode
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  fullName: System.Int32
- uid: System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken
  parent: System.Runtime.InteropServices.WindowsRuntime
  isExternal: false
  name: EventRegistrationToken
  fullName: System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken
