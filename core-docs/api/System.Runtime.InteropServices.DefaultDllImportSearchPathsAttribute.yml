items:
- uid: System.Runtime.InteropServices.DefaultDllImportSearchPathsAttribute
  commentId: T:System.Runtime.InteropServices.DefaultDllImportSearchPathsAttribute
  id: DefaultDllImportSearchPathsAttribute
  parent: System.Runtime.InteropServices
  children:
  - System.Runtime.InteropServices.DefaultDllImportSearchPathsAttribute.#ctor(System.Runtime.InteropServices.DllImportSearchPath)
  - System.Runtime.InteropServices.DefaultDllImportSearchPathsAttribute.Paths
  langs:
  - csharp
  - vb
  name: DefaultDllImportSearchPathsAttribute
  fullName: System.Runtime.InteropServices.DefaultDllImportSearchPathsAttribute
  type: Class
  source:
    remote:
      path: src/System.Runtime.InteropServices/ref/System.Runtime.InteropServices.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: DefaultDllImportSearchPathsAttribute
    path: src/System.Runtime.InteropServices/ref/System.Runtime.InteropServices.cs
    startLine: 198
  assemblies:
  - System.Runtime.InteropServices
  namespace: System.Runtime.InteropServices
  summary: "\n<p>Specifies the paths that are used to search for DLLs that provide functions for platform invokes. </p>\n"
  remarks: "\n<p>When applied to an assembly, this attribute specifies the paths that are used by default to search for any DLL that provides a function for a platform invoke, in any code in the assembly. When applied to an individual platform invoke, this attribute overrides the default search paths that were specified for the assembly. </p>\n<p>This attribute is ignored for any platform invoke that specifies an absolute path. </p>\n<p>Use this attribute to prevent the Win32 LoadLibraryEx function from searching the current working directory. This helps protect your application from attacks in which malicious software places a DLL in the current working directory, so that when a platform invoke calls the Win32 LoadLibraryEx function, the function's default search order finds the malicious DLL instead of the system DLL it was intended to find. </p>\n<p>The common language runtime handles the call to the <see href=\"http://go.microsoft.com/fwlink/?LinkId=236091\">LoadLibraryEx</see>function according to the following algorithm:</p>\n<ol><li>\n<p>If the attribute is applied to an individual platform invoke, use the values specified by that instance of the attribute.</p>\n</li><li>\n<p>Otherwise, if the attribute is applied to the assembly that contains the platform invoke, use the values specified by that instance of the attribute. </p>\n</li><li>\n<p>Otherwise, search the assembly directory and then call the LoadLibraryEx function with the LOAD_WITH_ALTERED_SEARCH_PATH flag. </p>\n</li></ol>\n"
  syntax:
    content: 'public sealed class DefaultDllImportSearchPathsAttribute : Attribute'
    content.vb: >-
      Public NotInheritable Class DefaultDllImportSearchPathsAttribute
          Inherits Attribute
  seealso:
  - type: System.Runtime.InteropServices.DllImportSearchPath
    commentId: T:System.Runtime.InteropServices.DllImportSearchPath
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: System.Runtime.InteropServices.DefaultDllImportSearchPathsAttribute.#ctor(System.Runtime.InteropServices.DllImportSearchPath)
  commentId: M:System.Runtime.InteropServices.DefaultDllImportSearchPathsAttribute.#ctor(System.Runtime.InteropServices.DllImportSearchPath)
  id: '#ctor(System.Runtime.InteropServices.DllImportSearchPath)'
  parent: System.Runtime.InteropServices.DefaultDllImportSearchPathsAttribute
  langs:
  - csharp
  - vb
  name: DefaultDllImportSearchPathsAttribute(DllImportSearchPath)
  fullName: System.Runtime.InteropServices.DefaultDllImportSearchPathsAttribute.DefaultDllImportSearchPathsAttribute(System.Runtime.InteropServices.DllImportSearchPath)
  type: Constructor
  source:
    remote:
      path: src/System.Runtime.InteropServices/ref/System.Runtime.InteropServices.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Runtime.InteropServices/ref/System.Runtime.InteropServices.cs
    startLine: 201
  assemblies:
  - System.Runtime.InteropServices
  namespace: System.Runtime.InteropServices
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Runtime.InteropServices.DefaultDllImportSearchPathsAttribute\" data-throw-if-not-resolved=\"false\"></xref> class, specifying the paths to use when searching for the targets of platform invokes. </p>\n"
  syntax:
    content: public DefaultDllImportSearchPathsAttribute(DllImportSearchPath paths)
    content.vb: Public Sub New(paths As DllImportSearchPath)
    parameters:
    - id: paths
      type: System.Runtime.InteropServices.DllImportSearchPath
      description: "\n<p>A bitwise combination of enumeration values that specify the paths that the LoadLibraryEx function searches during platform invokes. </p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Runtime.InteropServices.DefaultDllImportSearchPathsAttribute.Paths
  commentId: P:System.Runtime.InteropServices.DefaultDllImportSearchPathsAttribute.Paths
  id: Paths
  parent: System.Runtime.InteropServices.DefaultDllImportSearchPathsAttribute
  langs:
  - csharp
  - vb
  name: Paths
  fullName: System.Runtime.InteropServices.DefaultDllImportSearchPathsAttribute.Paths
  type: Property
  source:
    remote:
      path: src/System.Runtime.InteropServices/ref/System.Runtime.InteropServices.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Paths
    path: src/System.Runtime.InteropServices/ref/System.Runtime.InteropServices.cs
    startLine: 202
  assemblies:
  - System.Runtime.InteropServices
  namespace: System.Runtime.InteropServices
  summary: "\n<p>Gets a bitwise combination of enumeration values that specify the paths that the LoadLibraryEx function searches during platform invokes. </p>\n"
  remarks: "\n<p>When the <xref href=\"System.Runtime.InteropServices.DefaultDllImportSearchPathsAttribute\" data-throw-if-not-resolved=\"false\"></xref> attribute is applied to an assembly, the paths are used by default to search for the targets of any platform invokes that are performed by code in the assembly. When the attribute is applied to an individual platform invoke, the paths are used to search for the target of the individual platform invoke and override the paths that are specified for the assembly. </p>\n"
  syntax:
    content: public DllImportSearchPath Paths { get; }
    content.vb: Public ReadOnly Property Paths As DllImportSearchPath
    parameters: []
    return:
      type: System.Runtime.InteropServices.DllImportSearchPath
      description: "\n<p>A bitwise combination of enumeration values that specify search paths for platform invokes. </p>\n"
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: System.Runtime.InteropServices
  isExternal: false
  name: System.Runtime.InteropServices
  fullName: System.Runtime.InteropServices
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Runtime.InteropServices.DllImportSearchPath
  parent: System.Runtime.InteropServices
  isExternal: false
  name: DllImportSearchPath
  fullName: System.Runtime.InteropServices.DllImportSearchPath
