items:
- uid: System.Data.SqlClient.SqlRowsCopiedEventArgs
  commentId: T:System.Data.SqlClient.SqlRowsCopiedEventArgs
  id: SqlRowsCopiedEventArgs
  parent: System.Data.SqlClient
  children:
  - System.Data.SqlClient.SqlRowsCopiedEventArgs.#ctor(System.Int64)
  - System.Data.SqlClient.SqlRowsCopiedEventArgs.Abort
  - System.Data.SqlClient.SqlRowsCopiedEventArgs.RowsCopied
  langs:
  - csharp
  - vb
  name: SqlRowsCopiedEventArgs
  fullName: System.Data.SqlClient.SqlRowsCopiedEventArgs
  type: Class
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlClient/RowsCopiedEventArgs.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: SqlRowsCopiedEventArgs
    path: src/System.Data.SqlClient/src/System/Data/SqlClient/RowsCopiedEventArgs.cs
    startLine: 10
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlClient
  summary: "\n<p>Represents the set of arguments passed to the <xref href=\"System.Data.SqlClient.SqlRowsCopiedEventHandler\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: 'public class SqlRowsCopiedEventArgs : EventArgs'
    content.vb: >-
      Public Class SqlRowsCopiedEventArgs
          Inherits EventArgs
  inheritance:
  - System.Object
  - System.EventArgs
  inheritedMembers:
  - System.EventArgs.Empty
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: System.Data.SqlClient.SqlRowsCopiedEventArgs.#ctor(System.Int64)
  commentId: M:System.Data.SqlClient.SqlRowsCopiedEventArgs.#ctor(System.Int64)
  id: '#ctor(System.Int64)'
  parent: System.Data.SqlClient.SqlRowsCopiedEventArgs
  langs:
  - csharp
  - vb
  name: SqlRowsCopiedEventArgs(Int64)
  fullName: System.Data.SqlClient.SqlRowsCopiedEventArgs.SqlRowsCopiedEventArgs(System.Int64)
  type: Constructor
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlClient/RowsCopiedEventArgs.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Data.SqlClient/src/System/Data/SqlClient/RowsCopiedEventArgs.cs
    startLine: 15
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlClient
  summary: "\n<p>Creates a new instance of the <xref href=\"System.Data.SqlClient.SqlRowsCopiedEventArgs\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  remarks: "\n<p>The value in the <em>rowsCopied</em> parameter is reset on each call to any one of the <strong>SqlBulkCopy.WriteToServer</strong> methods.</p>\n"
  example:
  - 
  syntax:
    content: public SqlRowsCopiedEventArgs(long rowsCopied)
    content.vb: Public Sub New(rowsCopied As Long)
    parameters:
    - id: rowsCopied
      type: System.Int64
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Data.SqlClient.SqlRowsCopiedEventArgs.Abort
  commentId: P:System.Data.SqlClient.SqlRowsCopiedEventArgs.Abort
  id: Abort
  parent: System.Data.SqlClient.SqlRowsCopiedEventArgs
  langs:
  - csharp
  - vb
  name: Abort
  fullName: System.Data.SqlClient.SqlRowsCopiedEventArgs.Abort
  type: Property
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlClient/RowsCopiedEventArgs.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Abort
    path: src/System.Data.SqlClient/src/System/Data/SqlClient/RowsCopiedEventArgs.cs
    startLine: 20
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlClient
  summary: "\n<p>Gets or sets a value that indicates whether the bulk copy operation should be aborted.</p>\n"
  remarks: "\n<p>Use the <xref href=\"System.Data.SqlClient.SqlRowsCopiedEventArgs.Abort\" data-throw-if-not-resolved=\"false\"></xref> property to cancel a bulk copy operation. Set <xref href=\"System.Data.SqlClient.SqlRowsCopiedEventArgs.Abort\" data-throw-if-not-resolved=\"false\"></xref> to <strong>true</strong> to abort the bulk copy operation.</p>\n<p>If you call the <strong>Close</strong> method from <xref href=\"System.Data.SqlClient.SqlBulkCopy.SqlRowsCopied\" data-throw-if-not-resolved=\"false\"></xref>, an exception is generated, and the <xref href=\"System.Data.SqlClient.SqlBulkCopy\" data-throw-if-not-resolved=\"false\"></xref> object state does not change.</p>\n<p>If an application specifically creates a <xref href=\"System.Data.SqlClient.SqlTransaction\" data-throw-if-not-resolved=\"false\"></xref> object in the <xref href=\"System.Data.SqlClient.SqlCommand\" data-throw-if-not-resolved=\"false\"></xref> constructor, the transaction is not rolled back. The application is responsible for determining whether it is required to rollback the operation, and if so, it must call the <xref href=\"System.Data.SqlClient.SqlTransaction.Rollback\" data-throw-if-not-resolved=\"false\"></xref> method. If the application does not create a transaction, the internal transaction corresponding to the current batch is automatically rolled back. However, changes related to previous batches within the bulk copy operation are retained, because the transactions for them already have been committed.</p>\n"
  syntax:
    content: public bool Abort { get; set; }
    content.vb: Public Property Abort As Boolean
    parameters: []
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Data.SqlClient.SqlRowsCopiedEventArgs.RowsCopied
  commentId: P:System.Data.SqlClient.SqlRowsCopiedEventArgs.RowsCopied
  id: RowsCopied
  parent: System.Data.SqlClient.SqlRowsCopiedEventArgs
  langs:
  - csharp
  - vb
  name: RowsCopied
  fullName: System.Data.SqlClient.SqlRowsCopiedEventArgs.RowsCopied
  type: Property
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlClient/RowsCopiedEventArgs.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: RowsCopied
    path: src/System.Data.SqlClient/src/System/Data/SqlClient/RowsCopiedEventArgs.cs
    startLine: 32
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlClient
  summary: "\n<p>Gets a value that returns the number of rows copied during the current bulk copy operation.</p>\n"
  remarks: "\n<p>The value in the <xref href=\"System.Data.SqlClient.SqlRowsCopiedEventArgs.RowsCopied\" data-throw-if-not-resolved=\"false\"></xref> property is reset on each call to any of the <strong>SqlBulkCopy.WriteToServer</strong> methods.</p>\n"
  syntax:
    content: public long RowsCopied { get; }
    content.vb: Public ReadOnly Property RowsCopied As Long
    parameters: []
    return:
      type: System.Int64
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: System.Data.SqlClient
  isExternal: false
  name: System.Data.SqlClient
  fullName: System.Data.SqlClient
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System.EventArgs
  parent: System
  isExternal: false
  name: EventArgs
  fullName: System.EventArgs
- uid: System.EventArgs.Empty
  parent: System.EventArgs
  isExternal: true
  name: Empty
  fullName: System.EventArgs.Empty
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Int64
  parent: System
  isExternal: false
  name: Int64
  fullName: System.Int64
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  fullName: System.Boolean
