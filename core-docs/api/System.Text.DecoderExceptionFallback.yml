items:
- uid: System.Text.DecoderExceptionFallback
  commentId: T:System.Text.DecoderExceptionFallback
  id: DecoderExceptionFallback
  parent: System.Text
  children:
  - System.Text.DecoderExceptionFallback.#ctor
  - System.Text.DecoderExceptionFallback.CreateFallbackBuffer
  - System.Text.DecoderExceptionFallback.Equals(System.Object)
  - System.Text.DecoderExceptionFallback.GetHashCode
  - System.Text.DecoderExceptionFallback.MaxCharCount
  langs:
  - csharp
  - vb
  name: DecoderExceptionFallback
  fullName: System.Text.DecoderExceptionFallback
  type: Class
  source:
    remote:
      path: src/mscorlib/src/System/Text/DecoderExceptionFallback.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: DecoderExceptionFallback
    path: src/mscorlib/src/System/Text/DecoderExceptionFallback.cs
    startLine: 10
  assemblies:
  - System.Text.Encoding
  namespace: System.Text
  summary: "\n<p>Provides a failure-handling mechanism, called a fallback, for an encoded input byte sequence that cannot be converted to an input character. The fallback throws an exception instead of decoding the input byte sequence. This class cannot be inherited.</p>\n"
  remarks: "\n<p>An encoding maps a Unicode character to an encoded sequence of bytes, which can subsequently be transferred to a physical medium, such as a disk, or over a communications link. Characters can be mapped in various ways, and a particular encoding is represented by a type derived from the <xref href=\"System.Text.Encoding\" data-throw-if-not-resolved=\"false\"></xref> class. Specifically, the encoding type's <strong>GetBytes</strong> method encodes a character to a byte sequence, and the <strong>GetChars</strong> method decodes a byte sequence to a character. </p>\n<p>A decoding operation can fail if the input byte sequence cannot be mapped by the encoding. For example, an <xref href=\"System.Text.ASCIIEncoding\" data-throw-if-not-resolved=\"false\"></xref> object cannot decode a byte sequence that yields a character having a code point value that is outside the range U+0000 to U+007F. </p>\n<p>In cases where an encoding or decoding conversion cannot be performed, the .NET Framework provides a failure-handling mechanism called a fallback. Your application can use the predefined .NET Framework decoder fallback, or it can create a custom decoder fallback derived from the <xref href=\"System.Text.DecoderFallback\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"System.Text.DecoderFallbackBuffer\" data-throw-if-not-resolved=\"false\"></xref> classes. </p>\n<p>The .NET Framework provides two predefined classes that implement different fallback strategies for handling decoding conversion failures. The <xref href=\"System.Text.DecoderReplacementFallback\" data-throw-if-not-resolved=\"false\"></xref> class substitutes a string provided in place of any input byte sequence that cannot be converted. After the substitute string is emitted, the decoding operation continues converting the remainder of the input. In contrast, the <xref href=\"System.Text.DecoderExceptionFallback\" data-throw-if-not-resolved=\"false\"></xref> class throws a <xref href=\"System.Text.DecoderFallbackException\" data-throw-if-not-resolved=\"false\"></xref> when an invalid byte sequence is encountered.</p>\n"
  example:
  - "\n<p>The following code example demonstrates the <xref href=\"System.Text.DecoderExceptionFallback\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"System.Text.DecoderFallbackException\" data-throw-if-not-resolved=\"false\"></xref> classes.</p>sys.txt.fallbackDecExc#1"
  syntax:
    content: >-
      [Serializable]

      public sealed class DecoderExceptionFallback : DecoderFallback
    content.vb: >-
      <Serializable>

      Public NotInheritable Class DecoderExceptionFallback
          Inherits DecoderFallback
  inheritance:
  - System.Object
  - System.Text.DecoderFallback
  inheritedMembers:
  - System.Text.DecoderFallback.ExceptionFallback
  - System.Text.DecoderFallback.ReplacementFallback
  - System.Object.ToString
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: System.Text.DecoderExceptionFallback.#ctor
  commentId: M:System.Text.DecoderExceptionFallback.#ctor
  id: '#ctor'
  parent: System.Text.DecoderExceptionFallback
  langs:
  - csharp
  - vb
  name: DecoderExceptionFallback()
  fullName: System.Text.DecoderExceptionFallback.DecoderExceptionFallback()
  type: Constructor
  source:
    remote:
      path: src/mscorlib/src/System/Text/DecoderExceptionFallback.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: .ctor
    path: src/mscorlib/src/System/Text/DecoderExceptionFallback.cs
    startLine: 14
  assemblies:
  - System.Text.Encoding
  namespace: System.Text
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Text.DecoderExceptionFallback\" data-throw-if-not-resolved=\"false\"></xref> class. </p>\n"
  syntax:
    content: public DecoderExceptionFallback()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Text.DecoderExceptionFallback.MaxCharCount
  commentId: P:System.Text.DecoderExceptionFallback.MaxCharCount
  id: MaxCharCount
  parent: System.Text.DecoderExceptionFallback
  langs:
  - csharp
  - vb
  name: MaxCharCount
  fullName: System.Text.DecoderExceptionFallback.MaxCharCount
  type: Property
  source:
    remote:
      path: src/mscorlib/src/System/Text/DecoderExceptionFallback.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: MaxCharCount
    path: src/mscorlib/src/System/Text/DecoderExceptionFallback.cs
    startLine: 24
  assemblies:
  - System.Text.Encoding
  namespace: System.Text
  summary: "\n<p>Gets the maximum number of characters this instance can return.</p>\n"
  syntax:
    content: public override int MaxCharCount { get; }
    content.vb: Public Overrides ReadOnly Property MaxCharCount As Integer
    parameters: []
    return:
      type: System.Int32
  overridden: System.Text.DecoderFallback.MaxCharCount
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: System.Text.DecoderExceptionFallback.CreateFallbackBuffer
  commentId: M:System.Text.DecoderExceptionFallback.CreateFallbackBuffer
  id: CreateFallbackBuffer
  parent: System.Text.DecoderExceptionFallback
  langs:
  - csharp
  - vb
  name: CreateFallbackBuffer()
  fullName: System.Text.DecoderExceptionFallback.CreateFallbackBuffer()
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Text/DecoderExceptionFallback.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: CreateFallbackBuffer
    path: src/mscorlib/src/System/Text/DecoderExceptionFallback.cs
    startLine: 18
  assemblies:
  - System.Text.Encoding
  namespace: System.Text
  summary: "\n<p>Returns a decoder fallback buffer that throws an exception if it cannot convert a sequence of bytes to a character. </p>\n"
  remarks: "\n<p>A decoder fallback buffer is responsible for receiving and handling byte sequences that a decoder cannot convert to characters. This method returns an instance of the <xref href=\"System.Text.DecoderExceptionFallbackBuffer\" data-throw-if-not-resolved=\"false\"></xref> class, which is a subclass of  the <xref href=\"System.Text.DecoderFallbackBuffer\" data-throw-if-not-resolved=\"false\"></xref> class. A <xref href=\"System.Text.DecoderExceptionFallbackBuffer\" data-throw-if-not-resolved=\"false\"></xref> object throws an <xref href=\"System.Text.DecoderFallbackException\" data-throw-if-not-resolved=\"false\"></xref> exception whenever a sequence of bytes is passed to its <xref href=\"System.Text.DecoderExceptionFallbackBuffer.Fallback(System.Byte[],System.Int32)\" data-throw-if-not-resolved=\"false\"></xref> method. </p>\n"
  syntax:
    content: public override DecoderFallbackBuffer CreateFallbackBuffer()
    content.vb: Public Overrides Function CreateFallbackBuffer As DecoderFallbackBuffer
    return:
      type: System.Text.DecoderFallbackBuffer
  overridden: System.Text.DecoderFallback.CreateFallbackBuffer
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Text.DecoderExceptionFallback.Equals(System.Object)
  commentId: M:System.Text.DecoderExceptionFallback.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Text.DecoderExceptionFallback
  langs:
  - csharp
  - vb
  name: Equals(Object)
  fullName: System.Text.DecoderExceptionFallback.Equals(System.Object)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Text/DecoderExceptionFallback.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Equals
    path: src/mscorlib/src/System/Text/DecoderExceptionFallback.cs
    startLine: 32
  assemblies:
  - System.Text.Encoding
  namespace: System.Text
  summary: "\n<p>Indicates whether the current <xref href=\"System.Text.DecoderExceptionFallback\" data-throw-if-not-resolved=\"false\"></xref> object and a specified object are equal.</p>\n"
  syntax:
    content: public override bool Equals(object value)
    content.vb: Public Overrides Function Equals(value As Object) As Boolean
    parameters:
    - id: value
      type: System.Object
    return:
      type: System.Boolean
  overridden: System.Object.Equals(System.Object)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Text.DecoderExceptionFallback.GetHashCode
  commentId: M:System.Text.DecoderExceptionFallback.GetHashCode
  id: GetHashCode
  parent: System.Text.DecoderExceptionFallback
  langs:
  - csharp
  - vb
  name: GetHashCode()
  fullName: System.Text.DecoderExceptionFallback.GetHashCode()
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Text/DecoderExceptionFallback.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: GetHashCode
    path: src/mscorlib/src/System/Text/DecoderExceptionFallback.cs
    startLine: 42
  assemblies:
  - System.Text.Encoding
  namespace: System.Text
  summary: "\n<p>Retrieves the hash code for this instance.</p>\n"
  remarks: "\n<p>Because the <xref href=\"System.Text.DecoderExceptionFallback.GetHashCode\" data-throw-if-not-resolved=\"false\"></xref> method always returns the same value, the application should not use this value to distinguish one <xref href=\"System.Text.DecoderExceptionFallback\" data-throw-if-not-resolved=\"false\"></xref> object from another. </p>\n"
  syntax:
    content: public override int GetHashCode()
    content.vb: Public Overrides Function GetHashCode As Integer
    return:
      type: System.Int32
  overridden: System.Object.GetHashCode
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: System.Text
  isExternal: false
  name: System.Text
  fullName: System.Text
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System.Text.DecoderFallback
  parent: System.Text
  isExternal: false
  name: DecoderFallback
  fullName: System.Text.DecoderFallback
- uid: System.Text.DecoderFallback.ExceptionFallback
  parent: System.Text.DecoderFallback
  isExternal: false
  name: ExceptionFallback
  fullName: System.Text.DecoderFallback.ExceptionFallback
- uid: System.Text.DecoderFallback.ReplacementFallback
  parent: System.Text.DecoderFallback
  isExternal: false
  name: ReplacementFallback
  fullName: System.Text.DecoderFallback.ReplacementFallback
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Text.DecoderFallback.MaxCharCount
  parent: System.Text.DecoderFallback
  isExternal: false
  name: MaxCharCount
  fullName: System.Text.DecoderFallback.MaxCharCount
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  fullName: System.Int32
- uid: System.Text.DecoderFallback.CreateFallbackBuffer
  parent: System.Text.DecoderFallback
  isExternal: false
  name: CreateFallbackBuffer()
  fullName: System.Text.DecoderFallback.CreateFallbackBuffer()
  spec.csharp:
  - uid: System.Text.DecoderFallback.CreateFallbackBuffer
    name: CreateFallbackBuffer
    fullName: System.Text.DecoderFallback.CreateFallbackBuffer
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Text.DecoderFallback.CreateFallbackBuffer
    name: CreateFallbackBuffer
    fullName: System.Text.DecoderFallback.CreateFallbackBuffer
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Text.DecoderFallbackBuffer
  parent: System.Text
  isExternal: false
  name: DecoderFallbackBuffer
  fullName: System.Text.DecoderFallbackBuffer
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  fullName: System.Boolean
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
