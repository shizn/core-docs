items:
- uid: System.Security.Cryptography.ECCurve
  commentId: T:System.Security.Cryptography.ECCurve
  id: ECCurve
  parent: System.Security.Cryptography
  children:
  - System.Security.Cryptography.ECCurve.A
  - System.Security.Cryptography.ECCurve.B
  - System.Security.Cryptography.ECCurve.Cofactor
  - System.Security.Cryptography.ECCurve.CreateFromFriendlyName(System.String)
  - System.Security.Cryptography.ECCurve.CreateFromOid(System.Security.Cryptography.Oid)
  - System.Security.Cryptography.ECCurve.CreateFromValue(System.String)
  - System.Security.Cryptography.ECCurve.CurveType
  - System.Security.Cryptography.ECCurve.G
  - System.Security.Cryptography.ECCurve.Hash
  - System.Security.Cryptography.ECCurve.IsCharacteristic2
  - System.Security.Cryptography.ECCurve.IsExplicit
  - System.Security.Cryptography.ECCurve.IsNamed
  - System.Security.Cryptography.ECCurve.IsPrime
  - System.Security.Cryptography.ECCurve.Oid
  - System.Security.Cryptography.ECCurve.Order
  - System.Security.Cryptography.ECCurve.Polynomial
  - System.Security.Cryptography.ECCurve.Prime
  - System.Security.Cryptography.ECCurve.Seed
  - System.Security.Cryptography.ECCurve.Validate
  langs:
  - csharp
  - vb
  name: ECCurve
  fullName: System.Security.Cryptography.ECCurve
  type: Struct
  source:
    remote:
      path: src/System.Security.Cryptography.Algorithms/src/System/Security/Cryptography/ECCurve.NamedCurves.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ECCurve
    path: src/System.Security.Cryptography.Algorithms/src/System/Security/Cryptography/ECCurve.NamedCurves.cs
    startLine: 8
  assemblies:
  - System.Security.Cryptography.Algorithms
  namespace: System.Security.Cryptography
  syntax:
    content: public struct ECCurve
    content.vb: Public Structure ECCurve
  modifiers.csharp:
  - public
  - struct
  modifiers.vb:
  - Public
  - Structure
- uid: System.Security.Cryptography.ECCurve.A
  commentId: F:System.Security.Cryptography.ECCurve.A
  id: A
  parent: System.Security.Cryptography.ECCurve
  langs:
  - csharp
  - vb
  name: A
  fullName: System.Security.Cryptography.ECCurve.A
  type: Field
  source:
    remote:
      path: src/System.Security.Cryptography.Algorithms/src/System/Security/Cryptography/ECCurve.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: A
    path: src/System.Security.Cryptography.Algorithms/src/System/Security/Cryptography/ECCurve.cs
    startLine: 20
  assemblies:
  - System.Security.Cryptography.Algorithms
  namespace: System.Security.Cryptography
  syntax:
    content: public byte[] A
    content.vb: Public A As Byte()
    return:
      type: System.Byte[]
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Security.Cryptography.ECCurve.B
  commentId: F:System.Security.Cryptography.ECCurve.B
  id: B
  parent: System.Security.Cryptography.ECCurve
  langs:
  - csharp
  - vb
  name: B
  fullName: System.Security.Cryptography.ECCurve.B
  type: Field
  source:
    remote:
      path: src/System.Security.Cryptography.Algorithms/src/System/Security/Cryptography/ECCurve.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: B
    path: src/System.Security.Cryptography.Algorithms/src/System/Security/Cryptography/ECCurve.cs
    startLine: 25
  assemblies:
  - System.Security.Cryptography.Algorithms
  namespace: System.Security.Cryptography
  syntax:
    content: public byte[] B
    content.vb: Public B As Byte()
    return:
      type: System.Byte[]
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Security.Cryptography.ECCurve.Cofactor
  commentId: F:System.Security.Cryptography.ECCurve.Cofactor
  id: Cofactor
  parent: System.Security.Cryptography.ECCurve
  langs:
  - csharp
  - vb
  name: Cofactor
  fullName: System.Security.Cryptography.ECCurve.Cofactor
  type: Field
  source:
    remote:
      path: src/System.Security.Cryptography.Algorithms/src/System/Security/Cryptography/ECCurve.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Cofactor
    path: src/System.Security.Cryptography.Algorithms/src/System/Security/Cryptography/ECCurve.cs
    startLine: 40
  assemblies:
  - System.Security.Cryptography.Algorithms
  namespace: System.Security.Cryptography
  syntax:
    content: public byte[] Cofactor
    content.vb: Public Cofactor As Byte()
    return:
      type: System.Byte[]
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Security.Cryptography.ECCurve.CurveType
  commentId: F:System.Security.Cryptography.ECCurve.CurveType
  id: CurveType
  parent: System.Security.Cryptography.ECCurve
  langs:
  - csharp
  - vb
  name: CurveType
  fullName: System.Security.Cryptography.ECCurve.CurveType
  type: Field
  source:
    remote:
      path: src/System.Security.Cryptography.Algorithms/src/System/Security/Cryptography/ECCurve.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CurveType
    path: src/System.Security.Cryptography.Algorithms/src/System/Security/Cryptography/ECCurve.cs
    startLine: 50
  assemblies:
  - System.Security.Cryptography.Algorithms
  namespace: System.Security.Cryptography
  syntax:
    content: public ECCurve.ECCurveType CurveType
    content.vb: Public CurveType As ECCurve.ECCurveType
    return:
      type: System.Security.Cryptography.ECCurve.ECCurveType
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Security.Cryptography.ECCurve.G
  commentId: F:System.Security.Cryptography.ECCurve.G
  id: G
  parent: System.Security.Cryptography.ECCurve
  langs:
  - csharp
  - vb
  name: G
  fullName: System.Security.Cryptography.ECCurve.G
  type: Field
  source:
    remote:
      path: src/System.Security.Cryptography.Algorithms/src/System/Security/Cryptography/ECCurve.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: G
    path: src/System.Security.Cryptography.Algorithms/src/System/Security/Cryptography/ECCurve.cs
    startLine: 30
  assemblies:
  - System.Security.Cryptography.Algorithms
  namespace: System.Security.Cryptography
  syntax:
    content: public ECPoint G
    content.vb: Public G As ECPoint
    return:
      type: System.Security.Cryptography.ECPoint
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Security.Cryptography.ECCurve.Hash
  commentId: F:System.Security.Cryptography.ECCurve.Hash
  id: Hash
  parent: System.Security.Cryptography.ECCurve
  langs:
  - csharp
  - vb
  name: Hash
  fullName: System.Security.Cryptography.ECCurve.Hash
  type: Field
  source:
    remote:
      path: src/System.Security.Cryptography.Algorithms/src/System/Security/Cryptography/ECCurve.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Hash
    path: src/System.Security.Cryptography.Algorithms/src/System/Security/Cryptography/ECCurve.cs
    startLine: 55
  assemblies:
  - System.Security.Cryptography.Algorithms
  namespace: System.Security.Cryptography
  syntax:
    content: public HashAlgorithmName? Hash
    content.vb: Public Hash As HashAlgorithmName?
    return:
      type: System.Nullable{HashAlgorithmName}
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Security.Cryptography.ECCurve.Order
  commentId: F:System.Security.Cryptography.ECCurve.Order
  id: Order
  parent: System.Security.Cryptography.ECCurve
  langs:
  - csharp
  - vb
  name: Order
  fullName: System.Security.Cryptography.ECCurve.Order
  type: Field
  source:
    remote:
      path: src/System.Security.Cryptography.Algorithms/src/System/Security/Cryptography/ECCurve.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Order
    path: src/System.Security.Cryptography.Algorithms/src/System/Security/Cryptography/ECCurve.cs
    startLine: 35
  assemblies:
  - System.Security.Cryptography.Algorithms
  namespace: System.Security.Cryptography
  syntax:
    content: public byte[] Order
    content.vb: Public Order As Byte()
    return:
      type: System.Byte[]
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Security.Cryptography.ECCurve.Polynomial
  commentId: F:System.Security.Cryptography.ECCurve.Polynomial
  id: Polynomial
  parent: System.Security.Cryptography.ECCurve
  langs:
  - csharp
  - vb
  name: Polynomial
  fullName: System.Security.Cryptography.ECCurve.Polynomial
  type: Field
  source:
    remote:
      path: src/System.Security.Cryptography.Algorithms/src/System/Security/Cryptography/ECCurve.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Polynomial
    path: src/System.Security.Cryptography.Algorithms/src/System/Security/Cryptography/ECCurve.cs
    startLine: 60
  assemblies:
  - System.Security.Cryptography.Algorithms
  namespace: System.Security.Cryptography
  syntax:
    content: public byte[] Polynomial
    content.vb: Public Polynomial As Byte()
    return:
      type: System.Byte[]
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Security.Cryptography.ECCurve.Prime
  commentId: F:System.Security.Cryptography.ECCurve.Prime
  id: Prime
  parent: System.Security.Cryptography.ECCurve
  langs:
  - csharp
  - vb
  name: Prime
  fullName: System.Security.Cryptography.ECCurve.Prime
  type: Field
  source:
    remote:
      path: src/System.Security.Cryptography.Algorithms/src/System/Security/Cryptography/ECCurve.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Prime
    path: src/System.Security.Cryptography.Algorithms/src/System/Security/Cryptography/ECCurve.cs
    startLine: 65
  assemblies:
  - System.Security.Cryptography.Algorithms
  namespace: System.Security.Cryptography
  syntax:
    content: public byte[] Prime
    content.vb: Public Prime As Byte()
    return:
      type: System.Byte[]
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Security.Cryptography.ECCurve.Seed
  commentId: F:System.Security.Cryptography.ECCurve.Seed
  id: Seed
  parent: System.Security.Cryptography.ECCurve
  langs:
  - csharp
  - vb
  name: Seed
  fullName: System.Security.Cryptography.ECCurve.Seed
  type: Field
  source:
    remote:
      path: src/System.Security.Cryptography.Algorithms/src/System/Security/Cryptography/ECCurve.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Seed
    path: src/System.Security.Cryptography.Algorithms/src/System/Security/Cryptography/ECCurve.cs
    startLine: 45
  assemblies:
  - System.Security.Cryptography.Algorithms
  namespace: System.Security.Cryptography
  syntax:
    content: public byte[] Seed
    content.vb: Public Seed As Byte()
    return:
      type: System.Byte[]
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Security.Cryptography.ECCurve.IsCharacteristic2
  commentId: P:System.Security.Cryptography.ECCurve.IsCharacteristic2
  id: IsCharacteristic2
  parent: System.Security.Cryptography.ECCurve
  langs:
  - csharp
  - vb
  name: IsCharacteristic2
  fullName: System.Security.Cryptography.ECCurve.IsCharacteristic2
  type: Property
  source:
    remote:
      path: src/System.Security.Cryptography.Algorithms/src/System/Security/Cryptography/ECCurve.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IsCharacteristic2
    path: src/System.Security.Cryptography.Algorithms/src/System/Security/Cryptography/ECCurve.cs
    startLine: 156
  assemblies:
  - System.Security.Cryptography.Algorithms
  namespace: System.Security.Cryptography
  syntax:
    content: public bool IsCharacteristic2 { get; }
    content.vb: Public ReadOnly Property IsCharacteristic2 As Boolean
    parameters: []
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Security.Cryptography.ECCurve.IsExplicit
  commentId: P:System.Security.Cryptography.ECCurve.IsExplicit
  id: IsExplicit
  parent: System.Security.Cryptography.ECCurve
  langs:
  - csharp
  - vb
  name: IsExplicit
  fullName: System.Security.Cryptography.ECCurve.IsExplicit
  type: Property
  source:
    remote:
      path: src/System.Security.Cryptography.Algorithms/src/System/Security/Cryptography/ECCurve.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IsExplicit
    path: src/System.Security.Cryptography.Algorithms/src/System/Security/Cryptography/ECCurve.cs
    startLine: 164
  assemblies:
  - System.Security.Cryptography.Algorithms
  namespace: System.Security.Cryptography
  syntax:
    content: public bool IsExplicit { get; }
    content.vb: Public ReadOnly Property IsExplicit As Boolean
    parameters: []
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Security.Cryptography.ECCurve.IsNamed
  commentId: P:System.Security.Cryptography.ECCurve.IsNamed
  id: IsNamed
  parent: System.Security.Cryptography.ECCurve
  langs:
  - csharp
  - vb
  name: IsNamed
  fullName: System.Security.Cryptography.ECCurve.IsNamed
  type: Property
  source:
    remote:
      path: src/System.Security.Cryptography.Algorithms/src/System/Security/Cryptography/ECCurve.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IsNamed
    path: src/System.Security.Cryptography.Algorithms/src/System/Security/Cryptography/ECCurve.cs
    startLine: 172
  assemblies:
  - System.Security.Cryptography.Algorithms
  namespace: System.Security.Cryptography
  syntax:
    content: public bool IsNamed { get; }
    content.vb: Public ReadOnly Property IsNamed As Boolean
    parameters: []
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Security.Cryptography.ECCurve.IsPrime
  commentId: P:System.Security.Cryptography.ECCurve.IsPrime
  id: IsPrime
  parent: System.Security.Cryptography.ECCurve
  langs:
  - csharp
  - vb
  name: IsPrime
  fullName: System.Security.Cryptography.ECCurve.IsPrime
  type: Property
  source:
    remote:
      path: src/System.Security.Cryptography.Algorithms/src/System/Security/Cryptography/ECCurve.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IsPrime
    path: src/System.Security.Cryptography.Algorithms/src/System/Security/Cryptography/ECCurve.cs
    startLine: 146
  assemblies:
  - System.Security.Cryptography.Algorithms
  namespace: System.Security.Cryptography
  syntax:
    content: public bool IsPrime { get; }
    content.vb: Public ReadOnly Property IsPrime As Boolean
    parameters: []
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Security.Cryptography.ECCurve.Oid
  commentId: P:System.Security.Cryptography.ECCurve.Oid
  id: Oid
  parent: System.Security.Cryptography.ECCurve
  langs:
  - csharp
  - vb
  name: Oid
  fullName: System.Security.Cryptography.ECCurve.Oid
  type: Property
  source:
    remote:
      path: src/System.Security.Cryptography.Algorithms/src/System/Security/Cryptography/ECCurve.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Oid
    path: src/System.Security.Cryptography.Algorithms/src/System/Security/Cryptography/ECCurve.cs
    startLine: 72
  assemblies:
  - System.Security.Cryptography.Algorithms
  namespace: System.Security.Cryptography
  syntax:
    content: public Oid Oid { get; }
    content.vb: Public ReadOnly Property Oid As Oid
    parameters: []
    return:
      type: Oid
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Security.Cryptography.ECCurve.CreateFromFriendlyName(System.String)
  commentId: M:System.Security.Cryptography.ECCurve.CreateFromFriendlyName(System.String)
  id: CreateFromFriendlyName(System.String)
  parent: System.Security.Cryptography.ECCurve
  langs:
  - csharp
  - vb
  name: CreateFromFriendlyName(String)
  fullName: System.Security.Cryptography.ECCurve.CreateFromFriendlyName(System.String)
  type: Method
  source:
    remote:
      path: src/System.Security.Cryptography.Algorithms/src/System/Security/Cryptography/ECCurve.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CreateFromFriendlyName
    path: src/System.Security.Cryptography.Algorithms/src/System/Security/Cryptography/ECCurve.cs
    startLine: 118
  assemblies:
  - System.Security.Cryptography.Algorithms
  namespace: System.Security.Cryptography
  syntax:
    content: public static ECCurve CreateFromFriendlyName(string oidFriendlyName)
    content.vb: Public Shared Function CreateFromFriendlyName(oidFriendlyName As String) As ECCurve
    parameters:
    - id: oidFriendlyName
      type: System.String
      description: The Oid friendly name to use.
    return:
      type: System.Security.Cryptography.ECCurve
      description: An ECCurve representing a named curve.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Security.Cryptography.ECCurve.CreateFromOid(System.Security.Cryptography.Oid)
  commentId: M:System.Security.Cryptography.ECCurve.CreateFromOid(System.Security.Cryptography.Oid)
  id: CreateFromOid(System.Security.Cryptography.Oid)
  parent: System.Security.Cryptography.ECCurve
  langs:
  - csharp
  - vb
  name: CreateFromOid(Oid)
  fullName: System.Security.Cryptography.ECCurve.CreateFromOid(System.Security.Cryptography.Oid)
  type: Method
  source:
    remote:
      path: src/System.Security.Cryptography.Algorithms/ref/System.Security.Cryptography.Algorithms.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CreateFromOid
    path: src/System.Security.Cryptography.Algorithms/ref/System.Security.Cryptography.Algorithms.cs
    startLine: 44
  assemblies:
  - System.Security.Cryptography.Algorithms
  namespace: System.Security.Cryptography
  syntax:
    content: public static ECCurve CreateFromOid(Oid curveOid)
    content.vb: Public Shared Function CreateFromOid(curveOid As Oid) As ECCurve
    parameters:
    - id: curveOid
      type: System.Security.Cryptography.Oid
    return:
      type: System.Security.Cryptography.ECCurve
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Security.Cryptography.ECCurve.CreateFromValue(System.String)
  commentId: M:System.Security.Cryptography.ECCurve.CreateFromValue(System.String)
  id: CreateFromValue(System.String)
  parent: System.Security.Cryptography.ECCurve
  langs:
  - csharp
  - vb
  name: CreateFromValue(String)
  fullName: System.Security.Cryptography.ECCurve.CreateFromValue(System.String)
  type: Method
  source:
    remote:
      path: src/System.Security.Cryptography.Algorithms/src/System/Security/Cryptography/ECCurve.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CreateFromValue
    path: src/System.Security.Cryptography.Algorithms/src/System/Security/Cryptography/ECCurve.cs
    startLine: 132
  assemblies:
  - System.Security.Cryptography.Algorithms
  namespace: System.Security.Cryptography
  syntax:
    content: public static ECCurve CreateFromValue(string oidValue)
    content.vb: Public Shared Function CreateFromValue(oidValue As String) As ECCurve
    parameters:
    - id: oidValue
      type: System.String
    return:
      type: System.Security.Cryptography.ECCurve
      description: An ECCurve representing a named curve.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Security.Cryptography.ECCurve.Validate
  commentId: M:System.Security.Cryptography.ECCurve.Validate
  id: Validate
  parent: System.Security.Cryptography.ECCurve
  langs:
  - csharp
  - vb
  name: Validate()
  fullName: System.Security.Cryptography.ECCurve.Validate()
  type: Method
  source:
    remote:
      path: src/System.Security.Cryptography.Algorithms/src/System/Security/Cryptography/ECCurve.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Validate
    path: src/System.Security.Cryptography.Algorithms/src/System/Security/Cryptography/ECCurve.cs
    startLine: 186
  assemblies:
  - System.Security.Cryptography.Algorithms
  namespace: System.Security.Cryptography
  syntax:
    content: public void Validate()
    content.vb: Public Sub Validate
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: System.Security.Cryptography
  isExternal: false
  name: System.Security.Cryptography
  fullName: System.Security.Cryptography
- uid: System.Byte[]
  isExternal: false
  name: Byte[]
  fullName: System.Byte[]
  fullname.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
  - name: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
  - name: ()
    fullName: ()
- uid: System.Security.Cryptography.ECCurve.ECCurveType
  parent: System.Security.Cryptography
  isExternal: false
  name: ECCurve.ECCurveType
  fullName: System.Security.Cryptography.ECCurve.ECCurveType
- uid: System.Security.Cryptography.ECPoint
  parent: System.Security.Cryptography
  isExternal: false
  name: ECPoint
  fullName: System.Security.Cryptography.ECPoint
- uid: System.Nullable{System.Security.Cryptography.HashAlgorithmName}
  definition: System.Nullable`1
  name: Nullable<HashAlgorithmName>
  fullName: System.Nullable<System.Security.Cryptography.HashAlgorithmName>
  fullname.vb: System.Nullable(Of System.Security.Cryptography.HashAlgorithmName)
  name.vb: Nullable(Of HashAlgorithmName)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Security.Cryptography.HashAlgorithmName
    name: HashAlgorithmName
    fullName: System.Security.Cryptography.HashAlgorithmName
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Security.Cryptography.HashAlgorithmName
    name: HashAlgorithmName
    fullName: System.Security.Cryptography.HashAlgorithmName
    isExternal: true
  - name: )
    fullName: )
- uid: System.Nullable`1
  parent: System
  isExternal: false
  name: Nullable<>
  fullName: System.Nullable<>
  fullname.vb: System.Nullable(Of )
  name.vb: Nullable(Of )
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
  - name: <
    fullName: <
  - {}
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
  - name: '(Of '
    fullName: '(Of '
  - {}
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  fullName: System.Boolean
- uid: System.Security.Cryptography.Oid
  parent: System.Security.Cryptography
  isExternal: false
  name: Oid
  fullName: System.Security.Cryptography.Oid
- uid: System.String
  parent: System
  isExternal: false
  name: String
  fullName: System.String
- uid: System.Security.Cryptography.ECCurve
  parent: System.Security.Cryptography
  isExternal: false
  name: ECCurve
  fullName: System.Security.Cryptography.ECCurve
