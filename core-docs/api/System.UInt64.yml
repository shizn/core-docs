items:
- uid: System.UInt64
  commentId: T:System.UInt64
  id: UInt64
  parent: System
  children:
  - System.UInt64.CompareTo(System.UInt64)
  - System.UInt64.Equals(System.Object)
  - System.UInt64.Equals(System.UInt64)
  - System.UInt64.GetHashCode
  - System.UInt64.MaxValue
  - System.UInt64.MinValue
  - System.UInt64.Parse(System.String)
  - System.UInt64.Parse(System.String,System.Globalization.NumberStyles)
  - System.UInt64.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)
  - System.UInt64.Parse(System.String,System.IFormatProvider)
  - System.UInt64.System#IComparable#CompareTo(System.Object)
  - System.UInt64.System#IConvertible#GetTypeCode
  - System.UInt64.System#IConvertible#ToBoolean(System.IFormatProvider)
  - System.UInt64.System#IConvertible#ToByte(System.IFormatProvider)
  - System.UInt64.System#IConvertible#ToChar(System.IFormatProvider)
  - System.UInt64.System#IConvertible#ToDateTime(System.IFormatProvider)
  - System.UInt64.System#IConvertible#ToDecimal(System.IFormatProvider)
  - System.UInt64.System#IConvertible#ToDouble(System.IFormatProvider)
  - System.UInt64.System#IConvertible#ToInt16(System.IFormatProvider)
  - System.UInt64.System#IConvertible#ToInt32(System.IFormatProvider)
  - System.UInt64.System#IConvertible#ToInt64(System.IFormatProvider)
  - System.UInt64.System#IConvertible#ToSByte(System.IFormatProvider)
  - System.UInt64.System#IConvertible#ToSingle(System.IFormatProvider)
  - System.UInt64.System#IConvertible#ToType(System.Type,System.IFormatProvider)
  - System.UInt64.System#IConvertible#ToUInt16(System.IFormatProvider)
  - System.UInt64.System#IConvertible#ToUInt32(System.IFormatProvider)
  - System.UInt64.System#IConvertible#ToUInt64(System.IFormatProvider)
  - System.UInt64.ToString
  - System.UInt64.ToString(System.IFormatProvider)
  - System.UInt64.ToString(System.String)
  - System.UInt64.ToString(System.String,System.IFormatProvider)
  - System.UInt64.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.UInt64@)
  - System.UInt64.TryParse(System.String,System.UInt64@)
  langs:
  - csharp
  - vb
  name: UInt64
  fullName: System.UInt64
  type: Struct
  source:
    remote:
      path: src/mscorlib/src/System/UInt64.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: UInt64
    path: src/mscorlib/src/System/UInt64.cs
    startLine: 19
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Represents a 64-bit unsigned integer.</p>\n"
  remarks: "\n<p>The <xref href=\"System.UInt64\" data-throw-if-not-resolved=\"false\"></xref> value type represents unsigned integers with values ranging from 0 to 18,446,744,073,709,551,615.</p>\n<p>   The <xref href=\"System.UInt64\" data-throw-if-not-resolved=\"false\"></xref> type is not CLS-compliant. The CLS-compliant alternative type is <xref href=\"System.Decimal\" data-throw-if-not-resolved=\"false\"></xref>. <xref href=\"System.Int64\" data-throw-if-not-resolved=\"false\"></xref> can be used instead to replace a <xref href=\"System.UInt64\" data-throw-if-not-resolved=\"false\"></xref> value that ranges from zero to <xref href=\"System.Int64.MaxValue\" data-throw-if-not-resolved=\"false\"></xref>. For more information about CLS compliance, see Language Independence and Language-Independent Components. </p>\n<p>\n<xref href=\"System.UInt64\" data-throw-if-not-resolved=\"false\"></xref> provides methods to compare instances of this type, convert the value of an instance to its string representation, and convert the string representation of a number to an instance of this type.</p>\n"
  syntax:
    content: >-
      [Serializable]

      [CLSCompliant(false)]

      [StructLayout(LayoutKind.Sequential)]

      [ComVisible(true)]

      public struct UInt64 : IComparable, IFormattable, IConvertible, IComparable<ulong>, IEquatable<ulong>
    content.vb: >-
      <Serializable>

      <CLSCompliant(False)>

      <StructLayout(LayoutKind.Sequential)>

      <ComVisible(True)>

      Public Structure UInt64
          Implements IComparable, IFormattable, IConvertible, IComparable(Of ULong), IEquatable(Of ULong)
  seealso:
  - type: System.Int64
    commentId: T:System.Int64
  implements:
  - System.IComparable
  - System.IComparable{System.UInt64}
  - System.IConvertible
  - System.IEquatable{System.UInt64}
  - System.IFormattable
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetType
  attributes:
  - type: System.CLSCompliantAttribute
    ctor: System.CLSCompliantAttribute.#ctor(System.Boolean)
    arguments:
    - type: System.Boolean
      value: false
  - type: System.Runtime.InteropServices.StructLayoutAttribute
    ctor: System.Runtime.InteropServices.StructLayoutAttribute.#ctor(System.Runtime.InteropServices.LayoutKind)
    arguments:
    - type: System.Runtime.InteropServices.LayoutKind
      value: 0
  modifiers.csharp:
  - public
  - struct
  modifiers.vb:
  - Public
  - Structure
- uid: System.UInt64.MaxValue
  commentId: F:System.UInt64.MaxValue
  id: MaxValue
  parent: System.UInt64
  langs:
  - csharp
  - vb
  name: MaxValue
  fullName: System.UInt64.MaxValue
  type: Field
  source:
    remote:
      path: src/mscorlib/src/System/UInt64.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: MaxValue
    path: src/mscorlib/src/System/UInt64.cs
    startLine: 27
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Represents the largest possible value of <xref href=\"System.UInt64\" data-throw-if-not-resolved=\"false\"></xref>. This field is constant.</p>\n"
  remarks: "\n<p>The value of this constant is 18,446,744,073,709,551,615; that is, hexadecimal 0xFFFFFFFFFFFFFFFF.</p>\n"
  example:
  - "\n<p>The following example uses the <xref href=\"System.UInt64.MinValue\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"System.UInt64.MaxValue\" data-throw-if-not-resolved=\"false\"></xref> fields to verify that a <xref href=\"System.Double\" data-throw-if-not-resolved=\"false\"></xref> value is within the range of the <xref href=\"System.UInt64\" data-throw-if-not-resolved=\"false\"></xref> type before it performs a type conversion. This prevents an <xref href=\"System.OverflowException\" data-throw-if-not-resolved=\"false\"></xref> at run time.</p>System.UInt64.MaxValue#1"
  syntax:
    content: public const ulong MaxValue = 18446744073709551615UL
    content.vb: Public Const MaxValue As ULong = 18446744073709551615UL
    return:
      type: System.UInt64
  seealso:
  - type: System.UInt64.MinValue
    commentId: F:System.UInt64.MinValue
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.UInt64.MinValue
  commentId: F:System.UInt64.MinValue
  id: MinValue
  parent: System.UInt64
  langs:
  - csharp
  - vb
  name: MinValue
  fullName: System.UInt64.MinValue
  type: Field
  source:
    remote:
      path: src/mscorlib/src/System/UInt64.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: MinValue
    path: src/mscorlib/src/System/UInt64.cs
    startLine: 28
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Represents the smallest possible value of <xref href=\"System.UInt64\" data-throw-if-not-resolved=\"false\"></xref>. This field is constant.</p>\n"
  remarks: "\n<p>The value of this constant is 0.</p>\n"
  example:
  - "\n<p>The following example uses the <xref href=\"System.UInt64.MinValue\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"System.UInt64.MaxValue\" data-throw-if-not-resolved=\"false\"></xref> fields to verify that a <xref href=\"System.Double\" data-throw-if-not-resolved=\"false\"></xref> value is within the range of the <xref href=\"System.UInt64\" data-throw-if-not-resolved=\"false\"></xref> type before it performs a type conversion. This prevents an <xref href=\"System.OverflowException\" data-throw-if-not-resolved=\"false\"></xref> at run time.</p>System.UInt64.MaxValue#1"
  syntax:
    content: public const ulong MinValue = 0UL
    content.vb: Public Const MinValue As ULong = 0UL
    return:
      type: System.UInt64
  seealso:
  - type: System.UInt64.MaxValue
    commentId: F:System.UInt64.MaxValue
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.UInt64.CompareTo(System.UInt64)
  commentId: M:System.UInt64.CompareTo(System.UInt64)
  id: CompareTo(System.UInt64)
  parent: System.UInt64
  langs:
  - csharp
  - vb
  name: CompareTo(UInt64)
  fullName: System.UInt64.CompareTo(System.UInt64)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/UInt64.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: CompareTo
    path: src/mscorlib/src/System/UInt64.cs
    startLine: 51
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Compares this instance to a specified 64-bit unsigned integer and returns an indication of their relative values.</p>\n"
  remarks: "\n<p>This method implements the <xref href=\"System.IComparable`1\" data-throw-if-not-resolved=\"false\"></xref> interface and performs slightly better than the <xref href=\"System.UInt64.CompareTo(System.Object)\" data-throw-if-not-resolved=\"false\"></xref> method because it does not have to convert the <em>value</em> parameter to an object.</p>\n<p>Depending on your programming language, it might be possible to code a <see cref=\"Overload:System.UInt64.CompareTo\"></see> method where the parameter type has fewer bits (is narrower) than the instance type. This is possible because some programming languages perform an implicit widening conversion that represents the parameter as a type with as many bits as the instance.</p>\n<p>For example, suppose the instance type is <xref href=\"System.Int32\" data-throw-if-not-resolved=\"false\"></xref> and the parameter type is <xref href=\"System.Byte\" data-throw-if-not-resolved=\"false\"></xref>. The Microsoft C# compiler generates instructions to represent the value of the parameter as an <xref href=\"System.Int32\" data-throw-if-not-resolved=\"false\"></xref> object, then generates a <xref href=\"System.Int32.CompareTo(System.Object)\" data-throw-if-not-resolved=\"false\"></xref> method that compares the values of the <xref href=\"System.Int32\" data-throw-if-not-resolved=\"false\"></xref> instance and the <xref href=\"System.Int32\" data-throw-if-not-resolved=\"false\"></xref> parameter representation.</p>\n<p>Consult your programming language's documentation to determine whether its compiler performs implicit widening conversions on numeric types.</p>\n"
  example:
  - "\n<p>The following code example demonstrates generic and nongeneric versions of the <see cref=\"Overload:System.UInt64.CompareTo\"></see> method for several value and reference types.</p>T.CompareTo#1"
  syntax:
    content: public int CompareTo(ulong value)
    content.vb: Public Function CompareTo(value As ULong) As Integer
    parameters:
    - id: value
      type: System.UInt64
    return:
      type: System.Int32
  seealso:
  - type: System.UInt64.Equals(System.Object)
    commentId: M:System.UInt64.Equals(System.Object)
  implements:
  - System.IComparable{System.UInt64}.CompareTo(System.UInt64)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.UInt64.Equals(System.Object)
  commentId: M:System.UInt64.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.UInt64
  langs:
  - csharp
  - vb
  name: Equals(Object)
  fullName: System.UInt64.Equals(System.Object)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/UInt64.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Equals
    path: src/mscorlib/src/System/UInt64.cs
    startLine: 59
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Returns a value indicating whether this instance is equal to a specified object.</p>\n"
  example:
  - "\n<p>The following example demonstrates the <xref href=\"System.UInt64.Equals(System.Object)\" data-throw-if-not-resolved=\"false\"></xref> method.</p>System.UInt64.Equals#1"
  syntax:
    content: public override bool Equals(object obj)
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
    parameters:
    - id: obj
      type: System.Object
    return:
      type: System.Boolean
  overridden: System.ValueType.Equals(System.Object)
  seealso:
  - type: System.UInt64.CompareTo(System.Object)
    commentId: M:System.UInt64.CompareTo(System.Object)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.UInt64.Equals(System.UInt64)
  commentId: M:System.UInt64.Equals(System.UInt64)
  id: Equals(System.UInt64)
  parent: System.UInt64
  langs:
  - csharp
  - vb
  name: Equals(UInt64)
  fullName: System.UInt64.Equals(System.UInt64)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/UInt64.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Equals
    path: src/mscorlib/src/System/UInt64.cs
    startLine: 66
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Returns a value indicating whether this instance is equal to a specified <xref href=\"System.UInt64\" data-throw-if-not-resolved=\"false\"></xref> value.</p>\n"
  remarks: "\n<p>This method implements the <xref href=\"System.IEquatable`1\" data-throw-if-not-resolved=\"false\"></xref> interface, and performs slightly better than <xref href=\"System.UInt64.Equals(System.Object)\" data-throw-if-not-resolved=\"false\"></xref> because it does not have to convert the <em>obj</em> parameter to an object.</p>\n"
  example:
  - "\n<p>The following example demonstrates the <xref href=\"System.UInt64.Equals(System.Object)\" data-throw-if-not-resolved=\"false\"></xref> method.</p>UInt64_Equals#1"
  syntax:
    content: >-
      [NonVersionable]

      public bool Equals(ulong obj)
    content.vb: >-
      <NonVersionable>

      Public Function Equals(obj As ULong) As Boolean
    parameters:
    - id: obj
      type: System.UInt64
    return:
      type: System.Boolean
  implements:
  - System.IEquatable{System.UInt64}.Equals(System.UInt64)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.UInt64.GetHashCode
  commentId: M:System.UInt64.GetHashCode
  id: GetHashCode
  parent: System.UInt64
  langs:
  - csharp
  - vb
  name: GetHashCode()
  fullName: System.UInt64.GetHashCode()
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/UInt64.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: GetHashCode
    path: src/mscorlib/src/System/UInt64.cs
    startLine: 73
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Returns the hash code for this instance.</p>\n"
  syntax:
    content: public override int GetHashCode()
    content.vb: Public Overrides Function GetHashCode As Integer
    return:
      type: System.Int32
  overridden: System.ValueType.GetHashCode
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.UInt64.Parse(System.String)
  commentId: M:System.UInt64.Parse(System.String)
  id: Parse(System.String)
  parent: System.UInt64
  langs:
  - csharp
  - vb
  name: Parse(String)
  fullName: System.UInt64.Parse(System.String)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/UInt64.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Parse
    path: src/mscorlib/src/System/UInt64.cs
    startLine: 101
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Converts the string representation of a number to its 64-bit unsigned integer equivalent.</p>\n"
  remarks: "\n<p>The <em>s</em> parameter should be the string representation of a number in the following form.</p>\n<p>[ws][sign]digits[ws]</p>\n<p>Elements in square brackets ([ and ]) are optional. The following table describes each element.</p>\n<p>Element</p>\n<p>Description</p>\n<table><tbody><tr><td>\n<p>ws</p>\n</td><td>\n<p>Optional white space. </p>\n</td></tr><tr><td>\n<p>sign</p>\n</td><td>\n<p>An optional sign. Valid sign characters are determined by the <xref href=\"System.Globalization.NumberFormatInfo.NegativeSign\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"System.Globalization.NumberFormatInfo.PositiveSign\" data-throw-if-not-resolved=\"false\"></xref> properties of the current culture. However, the negative sign symbol can be used only with zero; otherwise, the method throws an <xref href=\"System.OverflowException\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n</td></tr><tr><td>\n<p>digits</p>\n</td><td>\n<p>A sequence of digits ranging from 0 to 9. Any leading zeros are ignored.</p>\n</td></tr></tbody></table>\n<p>The string specified by the <em>s</em> parameter is interpreted by using the <xref href=\"System.Globalization.NumberStyles.Integer\" data-throw-if-not-resolved=\"false\"></xref> style. It cannot contain any group separators or decimal separator, and it cannot have a decimal portion.</p>\n<p>The <em>s</em> parameter is parsed by using the formatting information in a <xref href=\"System.Globalization.NumberFormatInfo\" data-throw-if-not-resolved=\"false\"></xref> object that is initialized for the current system culture. For more information, see <xref href=\"System.Globalization.NumberFormatInfo.CurrentInfo\" data-throw-if-not-resolved=\"false\"></xref>. To parse a string by using the formatting information of a specific culture, use the <xref href=\"System.UInt64.Parse(System.String,System.IFormatProvider)\" data-throw-if-not-resolved=\"false\"></xref> method.</p>\n"
  example:
  - "\n<p>The following example uses the <xref href=\"System.UInt64.Parse(System.String)\" data-throw-if-not-resolved=\"false\"></xref> method to parse an array of string values.</p>System.UInt64.Parse#1"
  syntax:
    content: >-
      [CLSCompliant(false)]

      public static ulong Parse(string s)
    content.vb: >-
      <CLSCompliant(False)>

      Public Shared Function Parse(s As String) As ULong
    parameters:
    - id: s
      type: System.String
    return:
      type: System.UInt64
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>The <em>s</em> parameter is <strong>null</strong>. </p>\n"
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "\n<p>The <em>s</em> parameter is not in the correct format. </p>\n"
  - type: System.OverflowException
    commentId: T:System.OverflowException
    description: "\n<p>The <em>s</em> parameter represents a number less than <xref href=\"System.UInt64.MinValue\" data-throw-if-not-resolved=\"false\"></xref> or greater than <xref href=\"System.UInt64.MaxValue\" data-throw-if-not-resolved=\"false\"></xref>. </p>\n"
  attributes:
  - type: System.CLSCompliantAttribute
    ctor: System.CLSCompliantAttribute.#ctor(System.Boolean)
    arguments:
    - type: System.Boolean
      value: false
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.UInt64.Parse(System.String,System.Globalization.NumberStyles)
  commentId: M:System.UInt64.Parse(System.String,System.Globalization.NumberStyles)
  id: Parse(System.String,System.Globalization.NumberStyles)
  parent: System.UInt64
  langs:
  - csharp
  - vb
  name: Parse(String, NumberStyles)
  fullName: System.UInt64.Parse(System.String, System.Globalization.NumberStyles)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/UInt64.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Parse
    path: src/mscorlib/src/System/UInt64.cs
    startLine: 106
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Converts the string representation of a number in a specified style to its 64-bit unsigned integer equivalent.</p>\n"
  remarks: "\n<p>The <em>style</em> parameter defines the style elements (such as white space, the positive or negative sign symbol, the group separator symbol, or the decimal point symbol) that are allowed in the <em>s</em> parameter for the parse operation to succeed. <em>style</em> must be a combination of bit flags from the <xref href=\"System.Globalization.NumberStyles\" data-throw-if-not-resolved=\"false\"></xref> enumeration. The <em>style</em> parameter makes this method overload useful when <em>s</em> contains the string representation of a hexadecimal value, when the number system (decimal or hexadecimal) represented by <em>s</em> is known only at run time, or when you want to disallow white space or a sign symbol in <em>s</em>.</p>\n<p>Depending on the value of <em>style</em>, the <em>s</em> parameter may include the following elements: </p>\n<p>[ws][$][sign][digits,]digits[.fractional_digits][E[sign]exponential_digits][ws] </p>\n<p>Elements in square brackets ([ and ]) are optional. If <em>style</em> includes <xref href=\"System.Globalization.NumberStyles.AllowHexSpecifier\" data-throw-if-not-resolved=\"false\"></xref>, the <em>s</em> parameter may contain the following elements:</p>\n<p>[ws]hexdigits[ws]</p>\n<p>The following table describes each element.</p>\n<p>Element</p>\n<p>Description</p>\n<table><tbody><tr><td>\n<p>ws</p>\n</td><td>\n<p>Optional white space. White space can appear at the start of <em>s</em> if <em>style</em> includes the <xref href=\"System.Globalization.NumberStyles.AllowLeadingWhite\" data-throw-if-not-resolved=\"false\"></xref> flag, and it can appear at the end of <em>s</em> if <em>style</em> includes the <xref href=\"System.Globalization.NumberStyles.AllowTrailingWhite\" data-throw-if-not-resolved=\"false\"></xref> flag.</p>\n</td></tr><tr><td>\n<p>$</p>\n</td><td>\n<p>A culture-specific currency symbol. Its position in the string is defined by the <xref href=\"System.Globalization.NumberFormatInfo.CurrencyNegativePattern\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"System.Globalization.NumberFormatInfo.CurrencyPositivePattern\" data-throw-if-not-resolved=\"false\"></xref> properties of the current culture. The current culture's currency symbol can appear in <em>s</em> if <em>style</em> includes the <xref href=\"System.Globalization.NumberStyles.AllowCurrencySymbol\" data-throw-if-not-resolved=\"false\"></xref> flag.</p>\n</td></tr><tr><td>\n<p>sign</p>\n</td><td>\n<p>An optional sign. The sign can appear at the start of <em>s</em> if <em>style</em> includes the <xref href=\"System.Globalization.NumberStyles.AllowLeadingSign\" data-throw-if-not-resolved=\"false\"></xref> flag, and it can appear at the end of <em>s</em> if <em>style</em> includes the <xref href=\"System.Globalization.NumberStyles.AllowTrailingSign\" data-throw-if-not-resolved=\"false\"></xref> flag. Parentheses can be used in <em>s</em> to indicate a negative value if <em>style</em> includes the <xref href=\"System.Globalization.NumberStyles.AllowParentheses\" data-throw-if-not-resolved=\"false\"></xref> flag. However, the negative sign symbol can be used only with zero; otherwise, the method throws an <xref href=\"System.OverflowException\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n</td></tr><tr><td>\n<p>digits</p>\n<p>fractional_digits</p>\n<p>exponential_digits</p>\n</td><td>\n<p>A sequence of digits from 0 through 9. For fractional_digits, only the digit 0 is valid.</p>\n</td></tr><tr><td>\n<p>,</p>\n</td><td>\n<p>A culture-specific group separator symbol. The current culture's group separator can appear in <em>s</em> if <em>style</em> includes the <xref href=\"System.Globalization.NumberStyles.AllowThousands\" data-throw-if-not-resolved=\"false\"></xref> flag.</p>\n</td></tr><tr><td>\n<p>.</p>\n</td><td>\n<p>A culture-specific decimal point symbol. The current culture's decimal point symbol can appear in <em>s</em> if <em>style</em> includes the <xref href=\"System.Globalization.NumberStyles.AllowDecimalPoint\" data-throw-if-not-resolved=\"false\"></xref> flag. Only the digit 0 can appear as a fractional digit for the parse operation to succeed; if fractional_digits includes any other digit, a <xref href=\"System.FormatException\" data-throw-if-not-resolved=\"false\"></xref> is thrown.</p>\n</td></tr><tr><td>\n<p>E</p>\n</td><td>\n<p>The \"e\" or \"E\" character, which indicates that the value is represented in exponential (scientific) notation. The <em>s</em> parameter can represent a number in exponential notation if <em>style</em> includes the <xref href=\"System.Globalization.NumberStyles.AllowExponent\" data-throw-if-not-resolved=\"false\"></xref> flag.</p>\n</td></tr><tr><td>\n<p>hexdigits</p>\n</td><td>\n<p>A sequence of hexadecimal digits from 0 through f, or 0 through F. </p>\n</td></tr></tbody></table>\n<p>A string with digits only (which corresponds to the <xref href=\"System.Globalization.NumberStyles.None\" data-throw-if-not-resolved=\"false\"></xref> style) always parses successfully. Most of the remaining <xref href=\"System.Globalization.NumberStyles\" data-throw-if-not-resolved=\"false\"></xref> members control elements that may be present, but are not required to be present, in the input string. The following table indicates how individual <xref href=\"System.Globalization.NumberStyles\" data-throw-if-not-resolved=\"false\"></xref> members affect the elements that may be present in <em>s</em>.</p>\n<p>\n<strong>NumberStyles</strong> value</p>\n<p>Elements permitted in <em>s</em> in addition to digits</p>\n<table><tbody><tr><td>\n<p>\n<xref href=\"System.Globalization.NumberStyles.None\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td><td>\n<p>The digits element only.</p>\n</td></tr><tr><td>\n<p>\n<xref href=\"System.Globalization.NumberStyles.AllowDecimalPoint\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td><td>\n<p>The decimal point (.) and fractional-digits elements.</p>\n</td></tr><tr><td>\n<p>\n<xref href=\"System.Globalization.NumberStyles.AllowExponent\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td><td>\n<p>The \"e\" or \"E\" character, which indicates exponential notation, along with exponential_digits. </p>\n</td></tr><tr><td>\n<p>\n<xref href=\"System.Globalization.NumberStyles.AllowLeadingWhite\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td><td>\n<p>The ws element at the start of <em>s</em>.</p>\n</td></tr><tr><td>\n<p>\n<xref href=\"System.Globalization.NumberStyles.AllowTrailingWhite\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td><td>\n<p>The ws element at the end of <em>s</em>.</p>\n</td></tr><tr><td>\n<p>\n<xref href=\"System.Globalization.NumberStyles.AllowLeadingSign\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td><td>\n<p>The sign element at the start of <em>s</em>. </p>\n</td></tr><tr><td>\n<p>\n<xref href=\"System.Globalization.NumberStyles.AllowTrailingSign\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td><td>\n<p>The sign element at the end of <em>s</em>.</p>\n</td></tr><tr><td>\n<p>\n<xref href=\"System.Globalization.NumberStyles.AllowParentheses\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td><td>\n<p>The sign element in the form of parentheses enclosing the numeric value. </p>\n</td></tr><tr><td>\n<p>\n<xref href=\"System.Globalization.NumberStyles.AllowThousands\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td><td>\n<p>The group separator (,) element.</p>\n</td></tr><tr><td>\n<p>\n<xref href=\"System.Globalization.NumberStyles.AllowCurrencySymbol\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td><td>\n<p>The currency ($) element.</p>\n</td></tr><tr><td>\n<p>\n<xref href=\"System.Globalization.NumberStyles.Currency\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td><td>\n<p>All elements. However, <em>s</em> cannot represent a hexadecimal number or a number in exponential notation.</p>\n</td></tr><tr><td>\n<p>\n<xref href=\"System.Globalization.NumberStyles.Float\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td><td>\n<p>The ws element at the start or end of <em>s</em>, sign at the start of <em>s</em>, and the decimal point (.) symbol. The <em>s</em> parameter can also use exponential notation.</p>\n</td></tr><tr><td>\n<p>\n<xref href=\"System.Globalization.NumberStyles.Number\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td><td>\n<p>The <em>ws</em>, <em>sign</em>, group separator (,), and decimal point (.) elements.</p>\n</td></tr><tr><td>\n<p>\n<xref href=\"System.Globalization.NumberStyles.Any\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td><td>\n<p>All elements. However, <em>s</em> cannot represent a hexadecimal number.</p>\n</td></tr></tbody></table>\n<p>Unlike the other <xref href=\"System.Globalization.NumberStyles\" data-throw-if-not-resolved=\"false\"></xref> values, which allow for, but do not require, the presence of particular style elements in <em>s</em>, the <xref href=\"System.Globalization.NumberStyles.AllowHexSpecifier\" data-throw-if-not-resolved=\"false\"></xref> style value means that the individual numeric characters in <em>s</em> are always interpreted as hexadecimal characters. Valid hexadecimal characters are 0-9, A-F, and a-f. A prefix such as \"0x\" is not supported and causes the parse operation to fail. The only other flags that can be combined with the <em>style</em> parameter are <xref href=\"System.Globalization.NumberStyles.AllowLeadingWhite\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"System.Globalization.NumberStyles.AllowTrailingWhite\" data-throw-if-not-resolved=\"false\"></xref>. (The <xref href=\"System.Globalization.NumberStyles\" data-throw-if-not-resolved=\"false\"></xref> enumeration includes a composite number style, <xref href=\"System.Globalization.NumberStyles.HexNumber\" data-throw-if-not-resolved=\"false\"></xref>, that includes both white-space flags.)</p>\n<p>If <em>s</em> is the string representation of a hexadecimal number, it cannot be preceded by any decoration (such as <strong>0x</strong> or <strong>&h</strong>) that differentiates it as a hexadecimal number. This causes the conversion to fail.</p>\n<p>The <em>s</em> parameter is parsed by using the formatting information in a <xref href=\"System.Globalization.NumberFormatInfo\" data-throw-if-not-resolved=\"false\"></xref> object that is initialized for the current system culture. To specify the culture whose formatting information is used for the parse operation, call the <xref href=\"System.UInt64.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)\" data-throw-if-not-resolved=\"false\"></xref> overload.</p>\n"
  example:
  - "\n<p>The following example tries to parse each element in a string array by using a number of <xref href=\"System.Globalization.NumberStyles\" data-throw-if-not-resolved=\"false\"></xref> values.</p>System.UInt64.Parse#2"
  syntax:
    content: >-
      [CLSCompliant(false)]

      public static ulong Parse(string s, NumberStyles style)
    content.vb: >-
      <CLSCompliant(False)>

      Public Shared Function Parse(s As String, style As NumberStyles) As ULong
    parameters:
    - id: s
      type: System.String
    - id: style
      type: System.Globalization.NumberStyles
    return:
      type: System.UInt64
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>The <em>s</em> parameter is <strong>null</strong>. </p>\n"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<p>\n<em>style</em> is not a <xref href=\"System.Globalization.NumberStyles\" data-throw-if-not-resolved=\"false\"></xref> value. </p>\n<p>-or-</p>\n<p>\n<em>style</em> is not a combination of <xref href=\"System.Globalization.NumberStyles.AllowHexSpecifier\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"System.Globalization.NumberStyles.HexNumber\" data-throw-if-not-resolved=\"false\"></xref> values.</p>\n"
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "\n<p>The <em>s</em> parameter is not in a format compliant with <em>style</em>. </p>\n"
  - type: System.OverflowException
    commentId: T:System.OverflowException
    description: "\n<p>The <em>s</em> parameter represents a number less than <xref href=\"System.UInt64.MinValue\" data-throw-if-not-resolved=\"false\"></xref> or greater than <xref href=\"System.UInt64.MaxValue\" data-throw-if-not-resolved=\"false\"></xref>. </p>\n<p>-or-</p>\n<p>\n<em>s</em> includes non-zero, fractional digits.</p>\n"
  attributes:
  - type: System.CLSCompliantAttribute
    ctor: System.CLSCompliantAttribute.#ctor(System.Boolean)
    arguments:
    - type: System.Boolean
      value: false
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.UInt64.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)
  commentId: M:System.UInt64.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)
  id: Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)
  parent: System.UInt64
  langs:
  - csharp
  - vb
  name: Parse(String, NumberStyles, IFormatProvider)
  fullName: System.UInt64.Parse(System.String, System.Globalization.NumberStyles, System.IFormatProvider)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/UInt64.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Parse
    path: src/mscorlib/src/System/UInt64.cs
    startLine: 117
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Converts the string representation of a number in a specified style and culture-specific format to its 64-bit unsigned integer equivalent.</p>\n"
  remarks: "\n<p>The <em>style</em> parameter defines the style elements (such as white space or the positive or negative sign symbol) that are allowed in the <em>s</em> parameter for the parse operation to succeed. It must be a combination of bit flags from the <xref href=\"System.Globalization.NumberStyles\" data-throw-if-not-resolved=\"false\"></xref> enumeration.</p>\n<p>Depending on the value of <em>style</em>, the <em>s</em> parameter may include the following elements: </p>\n<p>[ws][$][sign]digits[.fractional_digits][E[sign]exponential_digits][ws] </p>\n<p>Elements in square brackets ([ and ]) are optional. If <em>style</em> includes <xref href=\"System.Globalization.NumberStyles.AllowHexSpecifier\" data-throw-if-not-resolved=\"false\"></xref>, the <em>s</em> parameter may include the following elements:</p>\n<p>[ws]hexdigits[ws]</p>\n<p>The following table describes each element.</p>\n<p>Element</p>\n<p>Description</p>\n<table><tbody><tr><td>\n<p>ws</p>\n</td><td>\n<p>Optional white space. White space can appear at the beginning of <em>s</em> if <em>style</em> includes the <xref href=\"System.Globalization.NumberStyles.AllowLeadingWhite\" data-throw-if-not-resolved=\"false\"></xref> flag, and it can appear at the end of <em>s</em> if <em>style</em> includes the <xref href=\"System.Globalization.NumberStyles.AllowTrailingWhite\" data-throw-if-not-resolved=\"false\"></xref> flag.</p>\n</td></tr><tr><td>\n<p>$</p>\n</td><td>\n<p>A culture-specific currency symbol. Its position in the string is defined by the <xref href=\"System.Globalization.NumberFormatInfo.CurrencyPositivePattern\" data-throw-if-not-resolved=\"false\"></xref> property of the <xref href=\"System.Globalization.NumberFormatInfo\" data-throw-if-not-resolved=\"false\"></xref> object that is returned by the <xref href=\"System.IFormatProvider.GetFormat(System.Type)\" data-throw-if-not-resolved=\"false\"></xref> method of the <em>provider</em> parameter. The currency symbol can appear in <em>s</em> if <em>style</em> includes the <xref href=\"System.Globalization.NumberStyles.AllowCurrencySymbol\" data-throw-if-not-resolved=\"false\"></xref> flag.</p>\n</td></tr><tr><td>\n<p>sign</p>\n</td><td>\n<p>An optional sign. (The method throws an <xref href=\"System.OverflowException\" data-throw-if-not-resolved=\"false\"></xref> if <em>s</em> includes a negative sign and represents a non-zero number.) The sign can appear at the beginning of <em>s</em> if <em>style</em> includes the <xref href=\"System.Globalization.NumberStyles.AllowLeadingSign\" data-throw-if-not-resolved=\"false\"></xref> flag, and it can appear the end of <em>s</em> if <em>style</em> includes the <xref href=\"System.Globalization.NumberStyles.AllowTrailingSign\" data-throw-if-not-resolved=\"false\"></xref> flag. Parentheses can be used in <em>s</em> to indicate a negative value if <em>style</em> includes the <xref href=\"System.Globalization.NumberStyles.AllowParentheses\" data-throw-if-not-resolved=\"false\"></xref> flag.</p>\n</td></tr><tr><td>\n<p>digits</p>\n</td><td>\n<p>A sequence of digits from 0 through 9. </p>\n</td></tr><tr><td>\n<p>.</p>\n</td><td>\n<p>A culture-specific decimal point symbol. The current culture's decimal point symbol can appear in <em>s</em> if <em>style</em> includes the <xref href=\"System.Globalization.NumberStyles.AllowDecimalPoint\" data-throw-if-not-resolved=\"false\"></xref> flag.</p>\n</td></tr><tr><td>\n<p>fractional_digits</p>\n</td><td>\n<p>One or more occurrences of the digit 0-9 if <em>style</em> includes the <xref href=\"System.Globalization.NumberStyles.AllowExponent\" data-throw-if-not-resolved=\"false\"></xref> flag, or one or more occurrences of the digit 0 if it does not. Fractional digits can appear in <em>s</em> only if <em>style</em> includes the <xref href=\"System.Globalization.NumberStyles.AllowDecimalPoint\" data-throw-if-not-resolved=\"false\"></xref> flag.</p>\n</td></tr><tr><td>\n<p>E</p>\n</td><td>\n<p>The \"e\" or \"E\" character, which indicates that the value is represented in exponential (scientific) notation. The <em>s</em> parameter can represent a number in exponential notation if <em>style</em> includes the <xref href=\"System.Globalization.NumberStyles.AllowExponent\" data-throw-if-not-resolved=\"false\"></xref> flag.</p>\n</td></tr><tr><td>\n<p>exponential_digits</p>\n</td><td>\n<p>A sequence of digits from 0 through 9. The <em>s</em> parameter can represent a number in exponential notation if <em>style</em> includes the <xref href=\"System.Globalization.NumberStyles.AllowExponent\" data-throw-if-not-resolved=\"false\"></xref> flag.</p>\n</td></tr><tr><td>\n<p>hexdigits</p>\n</td><td>\n<p>A sequence of hexadecimal digits from 0 through f, or 0 through F. </p>\n</td></tr></tbody></table>\n<p>A string with decimal digits only (which corresponds to the <xref href=\"System.Globalization.NumberStyles.None\" data-throw-if-not-resolved=\"false\"></xref> style) always parses successfully. Most of the remaining <xref href=\"System.Globalization.NumberStyles\" data-throw-if-not-resolved=\"false\"></xref> members control elements that may be present, but are not required to be present, in this input string. The following table indicates how individual <xref href=\"System.Globalization.NumberStyles\" data-throw-if-not-resolved=\"false\"></xref> members affect the elements that may be present in <em>s</em>.</p>\n<p>Non-composite <strong>NumberStyles</strong> values</p>\n<p>Elements permitted in <em>s</em> in addition to digits</p>\n<table><tbody><tr><td>\n<p>\n<xref href=\"System.Globalization.NumberStyles.None\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td><td>\n<p>Decimal digits only.</p>\n</td></tr><tr><td>\n<p>\n<xref href=\"System.Globalization.NumberStyles.AllowDecimalPoint\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td><td>\n<p>The decimal point (.) and fractional_digits elements. However, if style does not include the <xref href=\"System.Globalization.NumberStyles.AllowExponent\" data-throw-if-not-resolved=\"false\"></xref> flag, fractional_digits must consist of only one or more 0 digits; otherwise, an <xref href=\"System.OverflowException\" data-throw-if-not-resolved=\"false\"></xref> is thrown. </p>\n</td></tr><tr><td>\n<p>\n<xref href=\"System.Globalization.NumberStyles.AllowExponent\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td><td>\n<p>The \"e\" or \"E\" character, which indicates exponential notation, along with exponential_digits. </p>\n</td></tr><tr><td>\n<p>\n<xref href=\"System.Globalization.NumberStyles.AllowLeadingWhite\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td><td>\n<p>The ws element at the beginning of <em>s</em>.</p>\n</td></tr><tr><td>\n<p>\n<xref href=\"System.Globalization.NumberStyles.AllowTrailingWhite\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td><td>\n<p>The ws element at the end of <em>s</em>.</p>\n</td></tr><tr><td>\n<p>\n<xref href=\"System.Globalization.NumberStyles.AllowLeadingSign\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td><td>\n<p>A sign before digits.</p>\n</td></tr><tr><td>\n<p>\n<xref href=\"System.Globalization.NumberStyles.AllowTrailingSign\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td><td>\n<p>A sign after digits.</p>\n</td></tr><tr><td>\n<p>\n<xref href=\"System.Globalization.NumberStyles.AllowParentheses\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td><td>\n<p>Parentheses before and after digits to indicate a negative value.</p>\n</td></tr><tr><td>\n<p>\n<xref href=\"System.Globalization.NumberStyles.AllowThousands\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td><td>\n<p>The group separator (,) element. </p>\n</td></tr><tr><td>\n<p>\n<xref href=\"System.Globalization.NumberStyles.AllowCurrencySymbol\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td><td>\n<p>The currency ($) element.</p>\n</td></tr></tbody></table>\n<p>If the <xref href=\"System.Globalization.NumberStyles.AllowHexSpecifier\" data-throw-if-not-resolved=\"false\"></xref> flag is used, <em>s</em> must be a hexadecimal value. Valid hexadecimal characters are 0-9, A-F, and a-f. A prefix such as \"0x\" is not supported and causes the parse operation to fail. The only other flags that can be combined with it are <xref href=\"System.Globalization.NumberStyles.AllowLeadingWhite\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"System.Globalization.NumberStyles.AllowTrailingWhite\" data-throw-if-not-resolved=\"false\"></xref>. (The <xref href=\"System.Globalization.NumberStyles\" data-throw-if-not-resolved=\"false\"></xref> enumeration includes a composite number style, <xref href=\"System.Globalization.NumberStyles.HexNumber\" data-throw-if-not-resolved=\"false\"></xref>, that includes both white-space flags.) </p>\n<p>If the <em>s</em> parameter is the string representation of a hexadecimal number, it cannot be preceded by any decoration (such as <strong>0x</strong> or <strong>&h</strong>) that differentiates it as a hexadecimal number. This causes the parse operation to throw an exception.</p>\n<p>The <em>provider</em> parameter is an <xref href=\"System.IFormatProvider\" data-throw-if-not-resolved=\"false\"></xref> implementation whose <xref href=\"System.IFormatProvider.GetFormat(System.Type)\" data-throw-if-not-resolved=\"false\"></xref> method returns a <xref href=\"System.Globalization.NumberFormatInfo\" data-throw-if-not-resolved=\"false\"></xref> object that provides culture-specific information about the format of <em>s</em>. There are three ways to use the <em>provider</em> parameter to supply custom formatting information to the parse operation:</p>\n<ul><li>\n<p>You can pass the actual <xref href=\"System.Globalization.NumberFormatInfo\" data-throw-if-not-resolved=\"false\"></xref> object that provides formatting information. (Its implementation of <xref href=\"System.IFormatProvider.GetFormat(System.Type)\" data-throw-if-not-resolved=\"false\"></xref> simply returns itself.)</p>\n</li><li>\n<p>You can pass a <xref href=\"System.Globalization.CultureInfo\" data-throw-if-not-resolved=\"false\"></xref> object that specifies the culture whose formatting is to be used. Its <xref href=\"System.Globalization.CultureInfo.NumberFormat\" data-throw-if-not-resolved=\"false\"></xref> property provides formatting information.  </p>\n</li><li>\n<p>You can pass a custom <xref href=\"System.IFormatProvider\" data-throw-if-not-resolved=\"false\"></xref> implementation. Its <xref href=\"System.IFormatProvider.GetFormat(System.Type)\" data-throw-if-not-resolved=\"false\"></xref> method must instantiate and return the <xref href=\"System.Globalization.NumberFormatInfo\" data-throw-if-not-resolved=\"false\"></xref> object that provides formatting information.</p>\n</li></ul>\n<p>If <em>provider</em> is <strong>null</strong>, the <xref href=\"System.Globalization.NumberFormatInfo\" data-throw-if-not-resolved=\"false\"></xref> object for the current culture is used.</p>\n"
  example:
  - "\n<p>The following example uses the <xref href=\"System.UInt64.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)\" data-throw-if-not-resolved=\"false\"></xref> method to convert various string representations of numbers to 64-bit unsigned integer values.</p>System.UInt64.Parse#4"
  syntax:
    content: >-
      [CLSCompliant(false)]

      public static ulong Parse(string s, NumberStyles style, IFormatProvider provider)
    content.vb: >-
      <CLSCompliant(False)>

      Public Shared Function Parse(s As String, style As NumberStyles, provider As IFormatProvider) As ULong
    parameters:
    - id: s
      type: System.String
    - id: style
      type: System.Globalization.NumberStyles
    - id: provider
      type: System.IFormatProvider
    return:
      type: System.UInt64
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>The <em>s</em> parameter is <strong>null</strong>. </p>\n"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<p>\n<em>style</em> is not a <xref href=\"System.Globalization.NumberStyles\" data-throw-if-not-resolved=\"false\"></xref> value. </p>\n<p>-or-</p>\n<p>\n<em>style</em> is not a combination of <xref href=\"System.Globalization.NumberStyles.AllowHexSpecifier\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"System.Globalization.NumberStyles.HexNumber\" data-throw-if-not-resolved=\"false\"></xref> values.</p>\n"
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "\n<p>The <em>s</em> parameter is not in a format compliant with <em>style</em>. </p>\n"
  - type: System.OverflowException
    commentId: T:System.OverflowException
    description: "\n<p>The <em>s</em> parameter represents a number less than <xref href=\"System.UInt64.MinValue\" data-throw-if-not-resolved=\"false\"></xref> or greater than <xref href=\"System.UInt64.MaxValue\" data-throw-if-not-resolved=\"false\"></xref>. </p>\n<p>-or-</p>\n<p>\n<em>s</em> includes non-zero, fractional digits.</p>\n"
  attributes:
  - type: System.CLSCompliantAttribute
    ctor: System.CLSCompliantAttribute.#ctor(System.Boolean)
    arguments:
    - type: System.Boolean
      value: false
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.UInt64.Parse(System.String,System.IFormatProvider)
  commentId: M:System.UInt64.Parse(System.String,System.IFormatProvider)
  id: Parse(System.String,System.IFormatProvider)
  parent: System.UInt64
  langs:
  - csharp
  - vb
  name: Parse(String, IFormatProvider)
  fullName: System.UInt64.Parse(System.String, System.IFormatProvider)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/UInt64.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Parse
    path: src/mscorlib/src/System/UInt64.cs
    startLine: 112
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Converts the string representation of a number in a specified culture-specific format to its 64-bit unsigned integer equivalent.</p>\n"
  remarks: "\n<p>This overload of the <xref href=\"System.UInt64.Parse(System.String,System.IFormatProvider)\" data-throw-if-not-resolved=\"false\"></xref> method is typically used to convert text that can be formatted in a variety of ways to a <xref href=\"System.UInt64\" data-throw-if-not-resolved=\"false\"></xref> value. For example, it can be used to convert the text entered by a user into an HTML text box to a numeric value.</p>\n<p>The <em>s</em> parameter contains a number of the form: </p>\n<p>[ws][sign]digits[ws] </p>\n<p>Items in square brackets ([ and ]) are optional. The following table describes each element.</p>\n<p>Element</p>\n<p>Description</p>\n<table><tbody><tr><td>\n<p>ws</p>\n</td><td>\n<p>Optional white space. </p>\n</td></tr><tr><td>\n<p>sign</p>\n</td><td>\n<p>An optional positive sign, or a negative sign if <em>s</em> represents the value zero.</p>\n</td></tr><tr><td>\n<p>digits</p>\n</td><td>\n<p>A sequence of digits ranging from 0 to 9. </p>\n</td></tr></tbody></table>\n<p>The s parameter is interpreted using the <xref href=\"System.Globalization.NumberStyles.Integer\" data-throw-if-not-resolved=\"false\"></xref> style. In addition to the unsigned integer value's decimal digits, only leading and trailing spaces along with a leading sign is allowed. (If the negative sign is present, <em>s</em> must represent a value of zero, or the method throws an <xref href=\"System.OverflowException\" data-throw-if-not-resolved=\"false\"></xref>.) To explicitly define the style elements together with the culture-specific formatting information that can be present in <em>s</em>, use the <xref href=\"System.UInt64.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)\" data-throw-if-not-resolved=\"false\"></xref> method.</p>\n<p>The <em>provider</em> parameter is an <xref href=\"System.IFormatProvider\" data-throw-if-not-resolved=\"false\"></xref> implementation whose <xref href=\"System.IFormatProvider.GetFormat(System.Type)\" data-throw-if-not-resolved=\"false\"></xref> method returns a <xref href=\"System.Globalization.NumberFormatInfo\" data-throw-if-not-resolved=\"false\"></xref> object that provides culture-specific information about the format of <em>s</em>. There are three ways to use the <em>provider</em> parameter to supply custom formatting information to the parse operation:</p>\n<ul><li>\n<p>You can pass the actual <xref href=\"System.Globalization.NumberFormatInfo\" data-throw-if-not-resolved=\"false\"></xref> object that provides formatting information. (Its implementation of <xref href=\"System.IFormatProvider.GetFormat(System.Type)\" data-throw-if-not-resolved=\"false\"></xref> simply returns itself.)</p>\n</li><li>\n<p>You can pass a <xref href=\"System.Globalization.CultureInfo\" data-throw-if-not-resolved=\"false\"></xref> object that specifies the culture whose formatting is to be used. Its <xref href=\"System.Globalization.CultureInfo.NumberFormat\" data-throw-if-not-resolved=\"false\"></xref> property provides formatting information.  </p>\n</li><li>\n<p>You can pass a custom <xref href=\"System.IFormatProvider\" data-throw-if-not-resolved=\"false\"></xref> implementation. Its <xref href=\"System.IFormatProvider.GetFormat(System.Type)\" data-throw-if-not-resolved=\"false\"></xref> method must instantiate and return the <xref href=\"System.Globalization.NumberFormatInfo\" data-throw-if-not-resolved=\"false\"></xref> object that provides formatting information.</p>\n</li></ul>\n<p>If <em>provider</em> is <strong>null</strong>, the <xref href=\"System.Globalization.NumberFormatInfo\" data-throw-if-not-resolved=\"false\"></xref> for the current culture is used.</p>\n"
  example:
  - "\n<p>The following example is the button click event handler of a Web form. It uses the array returned by the <xref href=\"System.Web.HttpRequest.UserLanguages\" data-throw-if-not-resolved=\"false\"></xref> property to determine the user's locale. It then instantiates a <xref href=\"System.Globalization.CultureInfo\" data-throw-if-not-resolved=\"false\"></xref> object that corresponds to that locale. The <xref href=\"System.Globalization.NumberFormatInfo\" data-throw-if-not-resolved=\"false\"></xref> object that belongs to that <xref href=\"System.Globalization.CultureInfo\" data-throw-if-not-resolved=\"false\"></xref> object is then passed to the <xref href=\"System.UInt64.Parse(System.String,System.IFormatProvider)\" data-throw-if-not-resolved=\"false\"></xref> method to convert the user's input to a <xref href=\"System.UInt64\" data-throw-if-not-resolved=\"false\"></xref> value.</p>ParseMethod#1"
  syntax:
    content: >-
      [CLSCompliant(false)]

      public static ulong Parse(string s, IFormatProvider provider)
    content.vb: >-
      <CLSCompliant(False)>

      Public Shared Function Parse(s As String, provider As IFormatProvider) As ULong
    parameters:
    - id: s
      type: System.String
    - id: provider
      type: System.IFormatProvider
    return:
      type: System.UInt64
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>The <em>s</em> parameter is <strong>null</strong>. </p>\n"
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "\n<p>The <em>s</em> parameter is not in the correct style. </p>\n"
  - type: System.OverflowException
    commentId: T:System.OverflowException
    description: "\n<p>The <em>s</em> parameter represents a number less than <xref href=\"System.UInt64.MinValue\" data-throw-if-not-resolved=\"false\"></xref> or greater than <xref href=\"System.UInt64.MaxValue\" data-throw-if-not-resolved=\"false\"></xref>. </p>\n"
  seealso:
  - type: System.UInt64.ToString
    commentId: M:System.UInt64.ToString
  attributes:
  - type: System.CLSCompliantAttribute
    ctor: System.CLSCompliantAttribute.#ctor(System.Boolean)
    arguments:
    - type: System.Boolean
      value: false
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.UInt64.System#IComparable#CompareTo(System.Object)
  commentId: M:System.UInt64.System#IComparable#CompareTo(System.Object)
  id: System#IComparable#CompareTo(System.Object)
  isEii: true
  parent: System.UInt64
  langs:
  - csharp
  - vb
  name: IComparable.CompareTo(Object)
  fullName: System.UInt64.System.IComparable.CompareTo(System.Object)
  type: Method
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: System.IComparable.CompareTo
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 2064
  assemblies:
  - System.Runtime
  namespace: System
  syntax:
    content: int IComparable.CompareTo(object value)
    content.vb: Function System.IComparable.CompareTo(value As Object) As Integer Implements IComparable.CompareTo
    parameters:
    - id: value
      type: System.Object
    return:
      type: System.Int32
  implements:
  - System.IComparable.CompareTo(System.Object)
  name.vb: System.IComparable.CompareTo(Object)
- uid: System.UInt64.System#IConvertible#GetTypeCode
  commentId: M:System.UInt64.System#IConvertible#GetTypeCode
  id: System#IConvertible#GetTypeCode
  isEii: true
  parent: System.UInt64
  langs:
  - csharp
  - vb
  name: IConvertible.GetTypeCode()
  fullName: System.UInt64.System.IConvertible.GetTypeCode()
  type: Method
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: System.IConvertible.GetTypeCode
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 2065
  assemblies:
  - System.Runtime
  namespace: System
  syntax:
    content: TypeCode IConvertible.GetTypeCode()
    content.vb: Function System.IConvertible.GetTypeCode As TypeCode Implements IConvertible.GetTypeCode
    return:
      type: System.TypeCode
  implements:
  - System.IConvertible.GetTypeCode
  name.vb: System.IConvertible.GetTypeCode()
- uid: System.UInt64.System#IConvertible#ToBoolean(System.IFormatProvider)
  commentId: M:System.UInt64.System#IConvertible#ToBoolean(System.IFormatProvider)
  id: System#IConvertible#ToBoolean(System.IFormatProvider)
  isEii: true
  parent: System.UInt64
  langs:
  - csharp
  - vb
  name: IConvertible.ToBoolean(IFormatProvider)
  fullName: System.UInt64.System.IConvertible.ToBoolean(System.IFormatProvider)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/UInt64.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: System.IConvertible.ToBoolean
    path: src/mscorlib/src/System/UInt64.cs
    startLine: 143
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>For a description of this member, see <xref href=\"System.IConvertible.ToBoolean(System.IFormatProvider)\" data-throw-if-not-resolved=\"false\"></xref>. </p>\n"
  remarks: "\n<p>This member is an explicit interface member implementation. It can be used only when the <xref href=\"System.UInt64\" data-throw-if-not-resolved=\"false\"></xref> instance is cast to an <xref href=\"System.IConvertible\" data-throw-if-not-resolved=\"false\"></xref> interface. The recommended alternative is to call the <xref href=\"System.Convert.ToBoolean(System.UInt64)\" data-throw-if-not-resolved=\"false\"></xref> method.</p>\n"
  syntax:
    content: bool IConvertible.ToBoolean(IFormatProvider provider)
    content.vb: Function System.IConvertible.ToBoolean(provider As IFormatProvider) As Boolean Implements IConvertible.ToBoolean
    parameters:
    - id: provider
      type: System.IFormatProvider
    return:
      type: System.Boolean
  implements:
  - System.IConvertible.ToBoolean(System.IFormatProvider)
  name.vb: System.IConvertible.ToBoolean(IFormatProvider)
- uid: System.UInt64.System#IConvertible#ToByte(System.IFormatProvider)
  commentId: M:System.UInt64.System#IConvertible#ToByte(System.IFormatProvider)
  id: System#IConvertible#ToByte(System.IFormatProvider)
  isEii: true
  parent: System.UInt64
  langs:
  - csharp
  - vb
  name: IConvertible.ToByte(IFormatProvider)
  fullName: System.UInt64.System.IConvertible.ToByte(System.IFormatProvider)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/UInt64.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: System.IConvertible.ToByte
    path: src/mscorlib/src/System/UInt64.cs
    startLine: 158
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>For a description of this member, see <xref href=\"System.IConvertible.ToByte(System.IFormatProvider)\" data-throw-if-not-resolved=\"false\"></xref>. </p>\n"
  remarks: "\n<p>This member is an explicit interface member implementation. It can be used only when the <xref href=\"System.UInt64\" data-throw-if-not-resolved=\"false\"></xref> instance is cast to an <xref href=\"System.IConvertible\" data-throw-if-not-resolved=\"false\"></xref> interface. The recommended alternative is to call the <xref href=\"System.Convert.ToByte(System.UInt64)\" data-throw-if-not-resolved=\"false\"></xref> method.</p>\n"
  syntax:
    content: byte IConvertible.ToByte(IFormatProvider provider)
    content.vb: Function System.IConvertible.ToByte(provider As IFormatProvider) As Byte Implements IConvertible.ToByte
    parameters:
    - id: provider
      type: System.IFormatProvider
    return:
      type: System.Byte
  implements:
  - System.IConvertible.ToByte(System.IFormatProvider)
  name.vb: System.IConvertible.ToByte(IFormatProvider)
- uid: System.UInt64.System#IConvertible#ToChar(System.IFormatProvider)
  commentId: M:System.UInt64.System#IConvertible#ToChar(System.IFormatProvider)
  id: System#IConvertible#ToChar(System.IFormatProvider)
  isEii: true
  parent: System.UInt64
  langs:
  - csharp
  - vb
  name: IConvertible.ToChar(IFormatProvider)
  fullName: System.UInt64.System.IConvertible.ToChar(System.IFormatProvider)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/UInt64.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: System.IConvertible.ToChar
    path: src/mscorlib/src/System/UInt64.cs
    startLine: 148
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>For a description of this member, see <xref href=\"System.IConvertible.ToChar(System.IFormatProvider)\" data-throw-if-not-resolved=\"false\"></xref>. </p>\n"
  remarks: "\n<p>This member is an explicit interface member implementation. It can be used only when the <xref href=\"System.UInt64\" data-throw-if-not-resolved=\"false\"></xref> instance is cast to an <xref href=\"System.IConvertible\" data-throw-if-not-resolved=\"false\"></xref> interface. The recommended alternative is to call the <xref href=\"System.Convert.ToChar(System.UInt64)\" data-throw-if-not-resolved=\"false\"></xref> method.</p>\n"
  syntax:
    content: char IConvertible.ToChar(IFormatProvider provider)
    content.vb: Function System.IConvertible.ToChar(provider As IFormatProvider) As Char Implements IConvertible.ToChar
    parameters:
    - id: provider
      type: System.IFormatProvider
    return:
      type: System.Char
  implements:
  - System.IConvertible.ToChar(System.IFormatProvider)
  name.vb: System.IConvertible.ToChar(IFormatProvider)
- uid: System.UInt64.System#IConvertible#ToDateTime(System.IFormatProvider)
  commentId: M:System.UInt64.System#IConvertible#ToDateTime(System.IFormatProvider)
  id: System#IConvertible#ToDateTime(System.IFormatProvider)
  isEii: true
  parent: System.UInt64
  langs:
  - csharp
  - vb
  name: IConvertible.ToDateTime(IFormatProvider)
  fullName: System.UInt64.System.IConvertible.ToDateTime(System.IFormatProvider)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/UInt64.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: System.IConvertible.ToDateTime
    path: src/mscorlib/src/System/UInt64.cs
    startLine: 208
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>This conversion is not supported. Attempting to use this method throws an <xref href=\"System.InvalidCastException\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: DateTime IConvertible.ToDateTime(IFormatProvider provider)
    content.vb: Function System.IConvertible.ToDateTime(provider As IFormatProvider) As Date Implements IConvertible.ToDateTime
    parameters:
    - id: provider
      type: System.IFormatProvider
    return:
      type: System.DateTime
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "\n<p>In all cases.</p>\n"
  implements:
  - System.IConvertible.ToDateTime(System.IFormatProvider)
  name.vb: System.IConvertible.ToDateTime(IFormatProvider)
- uid: System.UInt64.System#IConvertible#ToDecimal(System.IFormatProvider)
  commentId: M:System.UInt64.System#IConvertible#ToDecimal(System.IFormatProvider)
  id: System#IConvertible#ToDecimal(System.IFormatProvider)
  isEii: true
  parent: System.UInt64
  langs:
  - csharp
  - vb
  name: IConvertible.ToDecimal(IFormatProvider)
  fullName: System.UInt64.System.IConvertible.ToDecimal(System.IFormatProvider)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/UInt64.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: System.IConvertible.ToDecimal
    path: src/mscorlib/src/System/UInt64.cs
    startLine: 203
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>For a description of this member, see <xref href=\"System.IConvertible.ToDecimal(System.IFormatProvider)\" data-throw-if-not-resolved=\"false\"></xref>. </p>\n"
  remarks: "\n<p>This member is an explicit interface member implementation. It can be used only when the <xref href=\"System.UInt64\" data-throw-if-not-resolved=\"false\"></xref> instance is cast to an <xref href=\"System.IConvertible\" data-throw-if-not-resolved=\"false\"></xref> interface. The recommended alternative is to call the <xref href=\"System.Convert.ToDecimal(System.UInt64)\" data-throw-if-not-resolved=\"false\"></xref> method.</p>\n"
  syntax:
    content: decimal IConvertible.ToDecimal(IFormatProvider provider)
    content.vb: Function System.IConvertible.ToDecimal(provider As IFormatProvider) As Decimal Implements IConvertible.ToDecimal
    parameters:
    - id: provider
      type: System.IFormatProvider
    return:
      type: System.Decimal
  implements:
  - System.IConvertible.ToDecimal(System.IFormatProvider)
  name.vb: System.IConvertible.ToDecimal(IFormatProvider)
- uid: System.UInt64.System#IConvertible#ToDouble(System.IFormatProvider)
  commentId: M:System.UInt64.System#IConvertible#ToDouble(System.IFormatProvider)
  id: System#IConvertible#ToDouble(System.IFormatProvider)
  isEii: true
  parent: System.UInt64
  langs:
  - csharp
  - vb
  name: IConvertible.ToDouble(IFormatProvider)
  fullName: System.UInt64.System.IConvertible.ToDouble(System.IFormatProvider)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/UInt64.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: System.IConvertible.ToDouble
    path: src/mscorlib/src/System/UInt64.cs
    startLine: 198
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>For a description of this member, see <xref href=\"System.IConvertible.ToDouble(System.IFormatProvider)\" data-throw-if-not-resolved=\"false\"></xref>. </p>\n"
  remarks: "\n<p>This member is an explicit interface member implementation. It can be used only when the <xref href=\"System.UInt64\" data-throw-if-not-resolved=\"false\"></xref> instance is cast to an <xref href=\"System.IConvertible\" data-throw-if-not-resolved=\"false\"></xref> interface. The recommended alternative is to call the <xref href=\"System.Convert.ToDouble(System.UInt64)\" data-throw-if-not-resolved=\"false\"></xref> method.</p>\n"
  syntax:
    content: double IConvertible.ToDouble(IFormatProvider provider)
    content.vb: Function System.IConvertible.ToDouble(provider As IFormatProvider) As Double Implements IConvertible.ToDouble
    parameters:
    - id: provider
      type: System.IFormatProvider
    return:
      type: System.Double
  implements:
  - System.IConvertible.ToDouble(System.IFormatProvider)
  name.vb: System.IConvertible.ToDouble(IFormatProvider)
- uid: System.UInt64.System#IConvertible#ToInt16(System.IFormatProvider)
  commentId: M:System.UInt64.System#IConvertible#ToInt16(System.IFormatProvider)
  id: System#IConvertible#ToInt16(System.IFormatProvider)
  isEii: true
  parent: System.UInt64
  langs:
  - csharp
  - vb
  name: IConvertible.ToInt16(IFormatProvider)
  fullName: System.UInt64.System.IConvertible.ToInt16(System.IFormatProvider)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/UInt64.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: System.IConvertible.ToInt16
    path: src/mscorlib/src/System/UInt64.cs
    startLine: 163
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>For a description of this member, see <xref href=\"System.IConvertible.ToInt16(System.IFormatProvider)\" data-throw-if-not-resolved=\"false\"></xref>. </p>\n"
  remarks: "\n<p>This member is an explicit interface member implementation. It can be used only when the <xref href=\"System.UInt64\" data-throw-if-not-resolved=\"false\"></xref> instance is cast to an <xref href=\"System.IConvertible\" data-throw-if-not-resolved=\"false\"></xref> interface. The recommended alternative is to call the <xref href=\"System.Convert.ToInt16(System.UInt64)\" data-throw-if-not-resolved=\"false\"></xref> method.</p>\n"
  syntax:
    content: short IConvertible.ToInt16(IFormatProvider provider)
    content.vb: Function System.IConvertible.ToInt16(provider As IFormatProvider) As Short Implements IConvertible.ToInt16
    parameters:
    - id: provider
      type: System.IFormatProvider
    return:
      type: System.Int16
  implements:
  - System.IConvertible.ToInt16(System.IFormatProvider)
  name.vb: System.IConvertible.ToInt16(IFormatProvider)
- uid: System.UInt64.System#IConvertible#ToInt32(System.IFormatProvider)
  commentId: M:System.UInt64.System#IConvertible#ToInt32(System.IFormatProvider)
  id: System#IConvertible#ToInt32(System.IFormatProvider)
  isEii: true
  parent: System.UInt64
  langs:
  - csharp
  - vb
  name: IConvertible.ToInt32(IFormatProvider)
  fullName: System.UInt64.System.IConvertible.ToInt32(System.IFormatProvider)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/UInt64.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: System.IConvertible.ToInt32
    path: src/mscorlib/src/System/UInt64.cs
    startLine: 173
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>For a description of this member, see <xref href=\"System.IConvertible.ToInt32(System.IFormatProvider)\" data-throw-if-not-resolved=\"false\"></xref>. </p>\n"
  remarks: "\n<p>This member is an explicit interface member implementation. It can be used only when the <xref href=\"System.UInt64\" data-throw-if-not-resolved=\"false\"></xref> instance is cast to an <xref href=\"System.IConvertible\" data-throw-if-not-resolved=\"false\"></xref> interface. The recommended alternative is to call the <xref href=\"System.Convert.ToInt32(System.UInt64)\" data-throw-if-not-resolved=\"false\"></xref> method.</p>\n"
  syntax:
    content: int IConvertible.ToInt32(IFormatProvider provider)
    content.vb: Function System.IConvertible.ToInt32(provider As IFormatProvider) As Integer Implements IConvertible.ToInt32
    parameters:
    - id: provider
      type: System.IFormatProvider
    return:
      type: System.Int32
  implements:
  - System.IConvertible.ToInt32(System.IFormatProvider)
  name.vb: System.IConvertible.ToInt32(IFormatProvider)
- uid: System.UInt64.System#IConvertible#ToInt64(System.IFormatProvider)
  commentId: M:System.UInt64.System#IConvertible#ToInt64(System.IFormatProvider)
  id: System#IConvertible#ToInt64(System.IFormatProvider)
  isEii: true
  parent: System.UInt64
  langs:
  - csharp
  - vb
  name: IConvertible.ToInt64(IFormatProvider)
  fullName: System.UInt64.System.IConvertible.ToInt64(System.IFormatProvider)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/UInt64.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: System.IConvertible.ToInt64
    path: src/mscorlib/src/System/UInt64.cs
    startLine: 183
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>For a description of this member, see <xref href=\"System.IConvertible.ToInt64(System.IFormatProvider)\" data-throw-if-not-resolved=\"false\"></xref>. </p>\n"
  remarks: "\n<p>This member is an explicit interface member implementation. It can be used only when the <xref href=\"System.UInt64\" data-throw-if-not-resolved=\"false\"></xref> instance is cast to an <xref href=\"System.IConvertible\" data-throw-if-not-resolved=\"false\"></xref> interface. The recommended alternative is to call the <xref href=\"System.Convert.ToInt64(System.UInt64)\" data-throw-if-not-resolved=\"false\"></xref> method.</p>\n"
  syntax:
    content: long IConvertible.ToInt64(IFormatProvider provider)
    content.vb: Function System.IConvertible.ToInt64(provider As IFormatProvider) As Long Implements IConvertible.ToInt64
    parameters:
    - id: provider
      type: System.IFormatProvider
    return:
      type: System.Int64
  implements:
  - System.IConvertible.ToInt64(System.IFormatProvider)
  name.vb: System.IConvertible.ToInt64(IFormatProvider)
- uid: System.UInt64.System#IConvertible#ToSByte(System.IFormatProvider)
  commentId: M:System.UInt64.System#IConvertible#ToSByte(System.IFormatProvider)
  id: System#IConvertible#ToSByte(System.IFormatProvider)
  isEii: true
  parent: System.UInt64
  langs:
  - csharp
  - vb
  name: IConvertible.ToSByte(IFormatProvider)
  fullName: System.UInt64.System.IConvertible.ToSByte(System.IFormatProvider)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/UInt64.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: System.IConvertible.ToSByte
    path: src/mscorlib/src/System/UInt64.cs
    startLine: 153
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>For a description of this member, see <xref href=\"System.IConvertible.ToSByte(System.IFormatProvider)\" data-throw-if-not-resolved=\"false\"></xref>. </p>\n"
  remarks: "\n<p>This member is an explicit interface member implementation. It can be used only when the <xref href=\"System.UInt64\" data-throw-if-not-resolved=\"false\"></xref> instance is cast to an <xref href=\"System.IConvertible\" data-throw-if-not-resolved=\"false\"></xref> interface. The recommended alternative is to call the <xref href=\"System.Convert.ToSByte(System.UInt64)\" data-throw-if-not-resolved=\"false\"></xref> method.</p>\n"
  syntax:
    content: sbyte IConvertible.ToSByte(IFormatProvider provider)
    content.vb: Function System.IConvertible.ToSByte(provider As IFormatProvider) As SByte Implements IConvertible.ToSByte
    parameters:
    - id: provider
      type: System.IFormatProvider
    return:
      type: System.SByte
  implements:
  - System.IConvertible.ToSByte(System.IFormatProvider)
  name.vb: System.IConvertible.ToSByte(IFormatProvider)
- uid: System.UInt64.System#IConvertible#ToSingle(System.IFormatProvider)
  commentId: M:System.UInt64.System#IConvertible#ToSingle(System.IFormatProvider)
  id: System#IConvertible#ToSingle(System.IFormatProvider)
  isEii: true
  parent: System.UInt64
  langs:
  - csharp
  - vb
  name: IConvertible.ToSingle(IFormatProvider)
  fullName: System.UInt64.System.IConvertible.ToSingle(System.IFormatProvider)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/UInt64.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: System.IConvertible.ToSingle
    path: src/mscorlib/src/System/UInt64.cs
    startLine: 193
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>For a description of this member, see <xref href=\"System.IConvertible.ToSingle(System.IFormatProvider)\" data-throw-if-not-resolved=\"false\"></xref>. </p>\n"
  remarks: "\n<p>This member is an explicit interface member implementation. It can be used only when the <xref href=\"System.UInt64\" data-throw-if-not-resolved=\"false\"></xref> instance is cast to an <xref href=\"System.IConvertible\" data-throw-if-not-resolved=\"false\"></xref> interface. The recommended alternative is to call the <xref href=\"System.Convert.ToSingle(System.UInt64)\" data-throw-if-not-resolved=\"false\"></xref> method.</p>\n"
  syntax:
    content: float IConvertible.ToSingle(IFormatProvider provider)
    content.vb: Function System.IConvertible.ToSingle(provider As IFormatProvider) As Single Implements IConvertible.ToSingle
    parameters:
    - id: provider
      type: System.IFormatProvider
    return:
      type: System.Single
  implements:
  - System.IConvertible.ToSingle(System.IFormatProvider)
  name.vb: System.IConvertible.ToSingle(IFormatProvider)
- uid: System.UInt64.System#IConvertible#ToType(System.Type,System.IFormatProvider)
  commentId: M:System.UInt64.System#IConvertible#ToType(System.Type,System.IFormatProvider)
  id: System#IConvertible#ToType(System.Type,System.IFormatProvider)
  isEii: true
  parent: System.UInt64
  langs:
  - csharp
  - vb
  name: IConvertible.ToType(Type, IFormatProvider)
  fullName: System.UInt64.System.IConvertible.ToType(System.Type, System.IFormatProvider)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/UInt64.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: System.IConvertible.ToType
    path: src/mscorlib/src/System/UInt64.cs
    startLine: 213
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>For a description of this member, see <xref href=\"System.IConvertible.ToType(System.Type,System.IFormatProvider)\" data-throw-if-not-resolved=\"false\"></xref>. </p>\n"
  remarks: "\n<p>This member is an explicit interface member implementation. It can be used only when the <xref href=\"System.UInt64\" data-throw-if-not-resolved=\"false\"></xref> instance is cast to an <xref href=\"System.IConvertible\" data-throw-if-not-resolved=\"false\"></xref> interface. The recommended alternative is to call the <strong>static</strong> (<strong>Shared</strong> in Visual Basic) <xref href=\"System.Convert.ChangeType(System.Object,System.Type,System.IFormatProvider)\" data-throw-if-not-resolved=\"false\"></xref> method.</p>\n"
  syntax:
    content: object IConvertible.ToType(Type type, IFormatProvider provider)
    content.vb: Function System.IConvertible.ToType(type As Type, provider As IFormatProvider) As Object Implements IConvertible.ToType
    parameters:
    - id: type
      type: System.Type
    - id: provider
      type: System.IFormatProvider
    return:
      type: System.Object
  implements:
  - System.IConvertible.ToType(System.Type,System.IFormatProvider)
  name.vb: System.IConvertible.ToType(Type, IFormatProvider)
- uid: System.UInt64.System#IConvertible#ToUInt16(System.IFormatProvider)
  commentId: M:System.UInt64.System#IConvertible#ToUInt16(System.IFormatProvider)
  id: System#IConvertible#ToUInt16(System.IFormatProvider)
  isEii: true
  parent: System.UInt64
  langs:
  - csharp
  - vb
  name: IConvertible.ToUInt16(IFormatProvider)
  fullName: System.UInt64.System.IConvertible.ToUInt16(System.IFormatProvider)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/UInt64.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: System.IConvertible.ToUInt16
    path: src/mscorlib/src/System/UInt64.cs
    startLine: 168
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>For a description of this member, see <xref href=\"System.IConvertible.ToUInt16(System.IFormatProvider)\" data-throw-if-not-resolved=\"false\"></xref>. </p>\n"
  remarks: "\n<p>This member is an explicit interface member implementation. It can be used only when the <xref href=\"System.UInt64\" data-throw-if-not-resolved=\"false\"></xref> instance is cast to an <xref href=\"System.IConvertible\" data-throw-if-not-resolved=\"false\"></xref> interface. The recommended alternative is to call the <xref href=\"System.Convert.ToUInt16(System.UInt64)\" data-throw-if-not-resolved=\"false\"></xref> method.</p>\n"
  syntax:
    content: ushort IConvertible.ToUInt16(IFormatProvider provider)
    content.vb: Function System.IConvertible.ToUInt16(provider As IFormatProvider) As UShort Implements IConvertible.ToUInt16
    parameters:
    - id: provider
      type: System.IFormatProvider
    return:
      type: System.UInt16
  implements:
  - System.IConvertible.ToUInt16(System.IFormatProvider)
  name.vb: System.IConvertible.ToUInt16(IFormatProvider)
- uid: System.UInt64.System#IConvertible#ToUInt32(System.IFormatProvider)
  commentId: M:System.UInt64.System#IConvertible#ToUInt32(System.IFormatProvider)
  id: System#IConvertible#ToUInt32(System.IFormatProvider)
  isEii: true
  parent: System.UInt64
  langs:
  - csharp
  - vb
  name: IConvertible.ToUInt32(IFormatProvider)
  fullName: System.UInt64.System.IConvertible.ToUInt32(System.IFormatProvider)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/UInt64.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: System.IConvertible.ToUInt32
    path: src/mscorlib/src/System/UInt64.cs
    startLine: 178
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>For a description of this member, see <xref href=\"System.IConvertible.ToUInt32(System.IFormatProvider)\" data-throw-if-not-resolved=\"false\"></xref>. </p>\n"
  remarks: "\n<p>This member is an explicit interface member implementation. It can be used only when the <xref href=\"System.UInt64\" data-throw-if-not-resolved=\"false\"></xref> instance is cast to an <xref href=\"System.IConvertible\" data-throw-if-not-resolved=\"false\"></xref> interface. The recommended alternative is to call the <xref href=\"System.Convert.ToUInt32(System.UInt64)\" data-throw-if-not-resolved=\"false\"></xref> method.</p>\n"
  syntax:
    content: uint IConvertible.ToUInt32(IFormatProvider provider)
    content.vb: Function System.IConvertible.ToUInt32(provider As IFormatProvider) As UInteger Implements IConvertible.ToUInt32
    parameters:
    - id: provider
      type: System.IFormatProvider
    return:
      type: System.UInt32
  implements:
  - System.IConvertible.ToUInt32(System.IFormatProvider)
  name.vb: System.IConvertible.ToUInt32(IFormatProvider)
- uid: System.UInt64.System#IConvertible#ToUInt64(System.IFormatProvider)
  commentId: M:System.UInt64.System#IConvertible#ToUInt64(System.IFormatProvider)
  id: System#IConvertible#ToUInt64(System.IFormatProvider)
  isEii: true
  parent: System.UInt64
  langs:
  - csharp
  - vb
  name: IConvertible.ToUInt64(IFormatProvider)
  fullName: System.UInt64.System.IConvertible.ToUInt64(System.IFormatProvider)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/UInt64.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: System.IConvertible.ToUInt64
    path: src/mscorlib/src/System/UInt64.cs
    startLine: 188
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>For a description of this member, see <xref href=\"System.IConvertible.ToUInt64(System.IFormatProvider)\" data-throw-if-not-resolved=\"false\"></xref>. </p>\n"
  remarks: "\n<p>This member is an explicit interface member implementation. It can be used only when the <xref href=\"System.UInt64\" data-throw-if-not-resolved=\"false\"></xref> instance is cast to an <xref href=\"System.IConvertible\" data-throw-if-not-resolved=\"false\"></xref> interface.</p>\n"
  syntax:
    content: ulong IConvertible.ToUInt64(IFormatProvider provider)
    content.vb: Function System.IConvertible.ToUInt64(provider As IFormatProvider) As ULong Implements IConvertible.ToUInt64
    parameters:
    - id: provider
      type: System.IFormatProvider
    return:
      type: System.UInt64
  implements:
  - System.IConvertible.ToUInt64(System.IFormatProvider)
  name.vb: System.IConvertible.ToUInt64(IFormatProvider)
- uid: System.UInt64.ToString
  commentId: M:System.UInt64.ToString
  id: ToString
  parent: System.UInt64
  langs:
  - csharp
  - vb
  name: ToString()
  fullName: System.UInt64.ToString()
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/UInt64.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToString
    path: src/mscorlib/src/System/UInt64.cs
    startLine: 77
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Converts the numeric value of this instance to its equivalent string representation.</p>\n"
  remarks: "\n<p>The <xref href=\"System.UInt64.ToString\" data-throw-if-not-resolved=\"false\"></xref> method formats a <xref href=\"System.UInt64\" data-throw-if-not-resolved=\"false\"></xref> value in the default (\"G\", or general) format by using the <xref href=\"System.Globalization.NumberFormatInfo\" data-throw-if-not-resolved=\"false\"></xref> object of the current culture. If you want to specify a different format or culture, use the other overloads of the <xref href=\"System.UInt64.ToString(System.String)\" data-throw-if-not-resolved=\"false\"></xref> method, as follows: </p>\n<p>To use format</p>\n<p>For culture</p>\n<p>Use the overload</p>\n<p></p>\n"
  example:
  - "\n<p>The following example displays a <xref href=\"System.UInt64\" data-throw-if-not-resolved=\"false\"></xref> value by using the default <xref href=\"System.UInt64.ToString\" data-throw-if-not-resolved=\"false\"></xref> method. It also displays the string representations of the <xref href=\"System.UInt64\" data-throw-if-not-resolved=\"false\"></xref> value that results from using some standard format specifiers. The examples are displayed using the formatting conventions of the en-US culture.</p>System.UInt64.ToString#1"
  syntax:
    content: >-
      [SecuritySafeCritical]

      public override string ToString()
    content.vb: >-
      <SecuritySafeCritical>

      Public Overrides Function ToString As String
    return:
      type: System.String
  overridden: System.ValueType.ToString
  seealso:
  - type: System.UInt64.Parse(System.String)
    commentId: M:System.UInt64.Parse(System.String)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.UInt64.ToString(System.IFormatProvider)
  commentId: M:System.UInt64.ToString(System.IFormatProvider)
  id: ToString(System.IFormatProvider)
  parent: System.UInt64
  langs:
  - csharp
  - vb
  name: ToString(IFormatProvider)
  fullName: System.UInt64.ToString(System.IFormatProvider)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/UInt64.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToString
    path: src/mscorlib/src/System/UInt64.cs
    startLine: 83
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Converts the numeric value of this instance to its equivalent string representation using the specified culture-specific format information.</p>\n"
  remarks: "\n<p>The <xref href=\"System.UInt64.ToString(System.IFormatProvider)\" data-throw-if-not-resolved=\"false\"></xref> method formats a <xref href=\"System.UInt64\" data-throw-if-not-resolved=\"false\"></xref> value in the default (\"G\", or general) format by using the <xref href=\"System.Globalization.NumberFormatInfo\" data-throw-if-not-resolved=\"false\"></xref> object of a specified culture. If you want to specify a different format or the current culture, use the other overloads of the <xref href=\"System.UInt64.ToString(System.String)\" data-throw-if-not-resolved=\"false\"></xref> method, as follows:</p>\n<p>To use format</p>\n<p>For culture</p>\n<p>Use the overload</p>\n<p></p>\n<p>The <em>provider</em> parameter is an <xref href=\"System.IFormatProvider\" data-throw-if-not-resolved=\"false\"></xref> implementation. Its <xref href=\"System.IFormatProvider.GetFormat(System.Type)\" data-throw-if-not-resolved=\"false\"></xref> method returns a <xref href=\"System.Globalization.NumberFormatInfo\" data-throw-if-not-resolved=\"false\"></xref> object that provides culture-specific formatting information. However, none of the properties of the <xref href=\"System.Globalization.NumberFormatInfo\" data-throw-if-not-resolved=\"false\"></xref> are used when formatting with the general numeric format specifier (\"G\").</p>\n"
  example:
  - "\n<p>The following example formats a 64-bit signed integer value by using several format providers, including one for the invariant culture. The output from the example illustrates that the formatted string returned by the <xref href=\"System.UInt64.ToString(System.IFormatProvider)\" data-throw-if-not-resolved=\"false\"></xref> method is the same regardless of the format provider.</p>System.UInt64.ToString#2"
  syntax:
    content: >-
      [SecuritySafeCritical]

      public string ToString(IFormatProvider provider)
    content.vb: >-
      <SecuritySafeCritical>

      Public Function ToString(provider As IFormatProvider) As String
    parameters:
    - id: provider
      type: System.IFormatProvider
    return:
      type: System.String
  seealso:
  - type: System.UInt64.Parse(System.String)
    commentId: M:System.UInt64.Parse(System.String)
  implements:
  - System.IConvertible.ToString(System.IFormatProvider)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.UInt64.ToString(System.String)
  commentId: M:System.UInt64.ToString(System.String)
  id: ToString(System.String)
  parent: System.UInt64
  langs:
  - csharp
  - vb
  name: ToString(String)
  fullName: System.UInt64.ToString(System.String)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/UInt64.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToString
    path: src/mscorlib/src/System/UInt64.cs
    startLine: 89
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Converts the numeric value of this instance to its equivalent string representation using the specified format.</p>\n"
  remarks: "\n<p>The <xref href=\"System.UInt64.ToString(System.String)\" data-throw-if-not-resolved=\"false\"></xref> method formats a <xref href=\"System.UInt64\" data-throw-if-not-resolved=\"false\"></xref> value in a specified format by using a <xref href=\"System.Globalization.NumberFormatInfo\" data-throw-if-not-resolved=\"false\"></xref> object that represents the conventions of the current culture. If you want to use the default (\"G\", or general) format or specify a different culture, use the other overloads of the <xref href=\"System.UInt64.ToString(System.String)\" data-throw-if-not-resolved=\"false\"></xref> method, as follows:</p>\n<p>To use format</p>\n<p>For culture</p>\n<p>Use the overload</p>\n<p></p>\n<p>The <em>format</em> parameter can be any valid Standard Numeric Format Strings, or any combination of Custom Numeric Format Strings. If <em>format</em> is equal to <xref href=\"System.String.Empty\" data-throw-if-not-resolved=\"false\"></xref> or is <strong>null</strong>, the return value of the current <xref href=\"System.UInt64\" data-throw-if-not-resolved=\"false\"></xref> object is formatted with the general format specifier (\"G\"). If <em>format</em> is any other value, the method throws a <xref href=\"System.FormatException\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics:</p>\n<ul><li>\n<p>For more information about numeric format specifiers, see Standard Numeric Format Strings and Custom Numeric Format Strings. </p>\n</li><li>\n<p>For more information about support for formatting in the .NET Framework, see Formatting Types in the .NET Framework. </p>\n</li></ul>\n<p>The format of the returned string is determined by the <xref href=\"System.Globalization.NumberFormatInfo\" data-throw-if-not-resolved=\"false\"></xref> object for the current culture. Depending on the <em>format</em> parameter, this object controls symbols such as the group separator and the decimal point symbol in the output string. To provide formatting information for cultures other than the current culture, call the <xref href=\"System.UInt64.ToString(System.String,System.IFormatProvider)\" data-throw-if-not-resolved=\"false\"></xref> overload.</p>\n"
  example:
  - "\n<p>The following example displays a 64-bit unsigned integer value by using each standard format string and some custom format strings.</p>System.UInt64.ToString#3"
  syntax:
    content: >-
      [SecuritySafeCritical]

      public string ToString(string format)
    content.vb: >-
      <SecuritySafeCritical>

      Public Function ToString(format As String) As String
    parameters:
    - id: format
      type: System.String
    return:
      type: System.String
  exceptions:
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "\n<p>The <em>format</em> parameter is invalid. </p>\n"
  seealso:
  - type: System.UInt64.Parse(System.String)
    commentId: M:System.UInt64.Parse(System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.UInt64.ToString(System.String,System.IFormatProvider)
  commentId: M:System.UInt64.ToString(System.String,System.IFormatProvider)
  id: ToString(System.String,System.IFormatProvider)
  parent: System.UInt64
  langs:
  - csharp
  - vb
  name: ToString(String, IFormatProvider)
  fullName: System.UInt64.ToString(System.String, System.IFormatProvider)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/UInt64.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToString
    path: src/mscorlib/src/System/UInt64.cs
    startLine: 95
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Converts the numeric value of this instance to its equivalent string representation using the specified format and culture-specific format information.</p>\n"
  remarks: "\n<p>The <xref href=\"System.UInt64.ToString(System.String,System.IFormatProvider)\" data-throw-if-not-resolved=\"false\"></xref> method formats a <xref href=\"System.UInt64\" data-throw-if-not-resolved=\"false\"></xref> value in a specified format by using the <xref href=\"System.Globalization.NumberFormatInfo\" data-throw-if-not-resolved=\"false\"></xref> object of a specified culture. If you want to use default format or culture settings, use the other overloads of the <xref href=\"System.UInt64.ToString(System.String)\" data-throw-if-not-resolved=\"false\"></xref> method, as follows:</p>\n<p>To use format</p>\n<p>For culture</p>\n<p>Use the overload</p>\n<p></p>\n<p>The <em>format</em> parameter can be any valid Standard Numeric Format Strings, or any combination of Custom Numeric Format Strings. If <em>format</em> is equal to <xref href=\"System.String.Empty\" data-throw-if-not-resolved=\"false\"></xref> or is <strong>null</strong>, the return value of the current <xref href=\"System.UInt64\" data-throw-if-not-resolved=\"false\"></xref> object is formatted with the general format specifier (\"G\"). If <em>format</em> is any other value, the method throws a <xref href=\"System.FormatException\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics:</p>\n<ul><li>\n<p>For more information about numeric format specifiers, see Standard Numeric Format Strings and Custom Numeric Format Strings. </p>\n</li><li>\n<p>For more information about formatting, see Formatting Types in the .NET Framework. </p>\n</li></ul>\n<p>The <em>provider</em> parameter is an <xref href=\"System.IFormatProvider\" data-throw-if-not-resolved=\"false\"></xref> implementation. Its <xref href=\"System.IFormatProvider.GetFormat(System.Type)\" data-throw-if-not-resolved=\"false\"></xref> method returns a <xref href=\"System.Globalization.NumberFormatInfo\" data-throw-if-not-resolved=\"false\"></xref> object that provides culture-specific information about the format of the string returned by this method. When the <xref href=\"System.UInt64.ToString(System.String,System.IFormatProvider)\" data-throw-if-not-resolved=\"false\"></xref> method is invoked, it calls the <em>provider</em> parameter's <xref href=\"System.IFormatProvider.GetFormat(System.Type)\" data-throw-if-not-resolved=\"false\"></xref> method and passes it a <xref href=\"System.Type\" data-throw-if-not-resolved=\"false\"></xref> object that represents the <xref href=\"System.Globalization.NumberFormatInfo\" data-throw-if-not-resolved=\"false\"></xref> type. The <xref href=\"System.IFormatProvider.GetFormat(System.Type)\" data-throw-if-not-resolved=\"false\"></xref> method then returns the <xref href=\"System.Globalization.NumberFormatInfo\" data-throw-if-not-resolved=\"false\"></xref> object that provides information for formatting the current <xref href=\"System.UInt64\" data-throw-if-not-resolved=\"false\"></xref> value, such as the group separator symbol or the decimal point symbol. There are three ways to use the <em>provider</em> parameter to supply formatting information to the <xref href=\"System.UInt64.ToString(System.String,System.IFormatProvider)\" data-throw-if-not-resolved=\"false\"></xref> method: </p>\n<ul><li>\n<p>You can pass a <xref href=\"System.Globalization.CultureInfo\" data-throw-if-not-resolved=\"false\"></xref> object that represents the culture that supplies formatting information. Its <xref href=\"System.Globalization.CultureInfo.GetFormat(System.Type)\" data-throw-if-not-resolved=\"false\"></xref> method returns the <xref href=\"System.Globalization.NumberFormatInfo\" data-throw-if-not-resolved=\"false\"></xref> object that provides numeric formatting information for that culture.</p>\n</li><li>\n<p>You can pass the actual <xref href=\"System.Globalization.NumberFormatInfo\" data-throw-if-not-resolved=\"false\"></xref> object that provides numeric formatting information. (Its implementation of <xref href=\"System.Globalization.NumberFormatInfo.GetFormat(System.Type)\" data-throw-if-not-resolved=\"false\"></xref> just returns itself.)</p>\n</li><li>\n<p>You can pass a custom object that implements <xref href=\"System.IFormatProvider\" data-throw-if-not-resolved=\"false\"></xref>. Its <xref href=\"System.IFormatProvider.GetFormat(System.Type)\" data-throw-if-not-resolved=\"false\"></xref> method instantiates and returns the <xref href=\"System.Globalization.NumberFormatInfo\" data-throw-if-not-resolved=\"false\"></xref> object that provides formatting information.</p>\n</li></ul>\n<p>If <em>provider</em> is <strong>null</strong>, the formatting of the returned string is based on the <xref href=\"System.Globalization.NumberFormatInfo\" data-throw-if-not-resolved=\"false\"></xref> object of the current culture.</p>\n"
  example:
  - "\n<p>The following example displays a 32-bit unsigned integer value by using the standard numeric format specifiers and a number of specific <xref href=\"System.Globalization.CultureInfo\" data-throw-if-not-resolved=\"false\"></xref> objects.</p>System.UInt64.ToString#4"
  syntax:
    content: >-
      [SecuritySafeCritical]

      public string ToString(string format, IFormatProvider provider)
    content.vb: >-
      <SecuritySafeCritical>

      Public Function ToString(format As String, provider As IFormatProvider) As String
    parameters:
    - id: format
      type: System.String
    - id: provider
      type: System.IFormatProvider
    return:
      type: System.String
  exceptions:
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "\n<p>The <em>format</em> parameter is invalid. </p>\n"
  seealso:
  - type: System.UInt64.Parse(System.String)
    commentId: M:System.UInt64.Parse(System.String)
  implements:
  - System.IFormattable.ToString(System.String,System.IFormatProvider)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.UInt64.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.UInt64@)
  commentId: M:System.UInt64.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.UInt64@)
  id: TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.UInt64@)
  parent: System.UInt64
  langs:
  - csharp
  - vb
  name: TryParse(String, NumberStyles, IFormatProvider, out UInt64)
  fullName: System.UInt64.TryParse(System.String, System.Globalization.NumberStyles, System.IFormatProvider, out System.UInt64)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/UInt64.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: TryParse
    path: src/mscorlib/src/System/UInt64.cs
    startLine: 128
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Tries to convert the string representation of a number in a specified style and culture-specific format to its 64-bit unsigned integer equivalent. A return value indicates whether the conversion succeeded or failed.</p>\n"
  remarks: "\n<p>The <xref href=\"System.UInt64.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.UInt64@)\" data-throw-if-not-resolved=\"false\"></xref> method is like the <xref href=\"System.UInt64.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)\" data-throw-if-not-resolved=\"false\"></xref> method, except that it does not throw an exception if the conversion fails. This method eliminates the need to use exception handling to test for a <xref href=\"System.FormatException\" data-throw-if-not-resolved=\"false\"></xref> if <em>s</em> is invalid and cannot be parsed successfully.</p>\n<p>The <em>style</em> parameter defines the style elements (such as white space or a positive or negative sign) that are allowed in the <em>s</em> parameter for the parse operation to succeed. It must be a combination of bit flags from the <xref href=\"System.Globalization.NumberStyles\" data-throw-if-not-resolved=\"false\"></xref> enumeration. Depending on the value of <em>style</em>, the <em>s</em> parameter may include the following elements: </p>\n<p>[ws][$][sign][digits,]digits[.fractional_digits][E[sign]exponential_digits][ws] </p>\n<p>Items in square brackets ([ and ]) are optional. Or, if the <em>style</em> parameter includes <xref href=\"System.Globalization.NumberStyles.AllowHexSpecifier\" data-throw-if-not-resolved=\"false\"></xref>, the <em>s</em> parameter may include the following elements:</p>\n<p>[ws]hexdigits[ws]</p>\n<p>The following table describes each element.</p>\n<p>Element</p>\n<p>Description</p>\n<table><tbody><tr><td>\n<p>ws</p>\n</td><td>\n<p>Optional white space. White space can appear at the start of <em>s</em> if <em>style</em> includes the <xref href=\"System.Globalization.NumberStyles.AllowLeadingWhite\" data-throw-if-not-resolved=\"false\"></xref> flag, or at the end of <em>s</em> if <em>style</em> includes the <xref href=\"System.Globalization.NumberStyles.AllowTrailingWhite\" data-throw-if-not-resolved=\"false\"></xref> flag. </p>\n</td></tr><tr><td>\n<p>$</p>\n</td><td>\n<p>A culture-specific currency symbol. Its position in the string is defined by the <xref href=\"System.Globalization.NumberFormatInfo.CurrencyPositivePattern\" data-throw-if-not-resolved=\"false\"></xref> property of the <xref href=\"System.Globalization.NumberFormatInfo\" data-throw-if-not-resolved=\"false\"></xref> object returned by the <xref href=\"System.IFormatProvider.GetFormat(System.Type)\" data-throw-if-not-resolved=\"false\"></xref> method of the <em>provider</em> parameter. The currency symbol can appear in <em>s</em> if <em>style</em> includes the <xref href=\"System.Globalization.NumberStyles.AllowCurrencySymbol\" data-throw-if-not-resolved=\"false\"></xref> flag.</p>\n</td></tr><tr><td>\n<p>sign</p>\n</td><td>\n<p>An optional sign. The sign can appear at the start of <em>s</em> if <em>style</em> includes the <xref href=\"System.Globalization.NumberStyles.AllowLeadingSign\" data-throw-if-not-resolved=\"false\"></xref> flag, and it can appear at the end of <em>s</em> if <em>style</em> includes the <xref href=\"System.Globalization.NumberStyles.AllowTrailingSign\" data-throw-if-not-resolved=\"false\"></xref> flag. Parentheses can be used in <em>s</em> to indicate a negative value if <em>style</em> includes the <xref href=\"System.Globalization.NumberStyles.AllowParentheses\" data-throw-if-not-resolved=\"false\"></xref> flag. However, if the negative sign is present, <em>s</em> can only represent the value zero for the parse operation to succeed. </p>\n</td></tr><tr><td>\n<p>digits</p>\n</td><td>\n<p>A sequence of digits from 0 through 9.</p>\n</td></tr><tr><td>\n<p>,</p>\n</td><td>\n<p>A culture-specific group separator. The group separator of the culture specified by <em>provider</em> can appear in <em>s</em> if <em>style</em> includes the <xref href=\"System.Globalization.NumberStyles.AllowThousands\" data-throw-if-not-resolved=\"false\"></xref> flag.</p>\n</td></tr><tr><td>\n<p>.</p>\n</td><td>\n<p>A culture-specific decimal point symbol. The decimal point symbol of the culture specified by <em>provider</em> can appear in <em>s</em> if <em>style</em> includes the <xref href=\"System.Globalization.NumberStyles.AllowDecimalPoint\" data-throw-if-not-resolved=\"false\"></xref> flag.</p>\n</td></tr><tr><td>\n<p>fractional_digits</p>\n</td><td>\n<p>One or more occurrences of the digit 0. Fractional digits can appear in <em>s</em> only if <em>style</em> includes the <xref href=\"System.Globalization.NumberStyles.AllowDecimalPoint\" data-throw-if-not-resolved=\"false\"></xref> flag.</p>\n</td></tr><tr><td>\n<p>E</p>\n</td><td>\n<p>The \"e\" or \"E\" character, which indicates that the value is represented in exponential (scientific) notation. The <em>s</em> parameter can represent a number in exponential notation if <em>style</em> includes the <xref href=\"System.Globalization.NumberStyles.AllowExponent\" data-throw-if-not-resolved=\"false\"></xref> flag.</p>\n</td></tr><tr><td>\n<p>exponential_digits</p>\n</td><td>\n<p>A sequence of digits from 0 through 9. The <em>s</em> parameter can represent a number in exponential notation if <em>style</em> includes the <xref href=\"System.Globalization.NumberStyles.AllowExponent\" data-throw-if-not-resolved=\"false\"></xref> flag.</p>\n</td></tr><tr><td>\n<p>hexdigits</p>\n</td><td>\n<p>A sequence of hexadecimal digits from 0 through f, or 0 through F. </p>\n</td></tr></tbody></table>\n<p>A string with decimal digits only (which corresponds to the <xref href=\"System.Globalization.NumberStyles.None\" data-throw-if-not-resolved=\"false\"></xref> flag) always parses successfully. Most of the remaining <xref href=\"System.Globalization.NumberStyles\" data-throw-if-not-resolved=\"false\"></xref> members control elements that may be present, but are not required to be present, in this input string. The following table indicates how individual <xref href=\"System.Globalization.NumberStyles\" data-throw-if-not-resolved=\"false\"></xref> members affect the elements that may be present in <em>s</em>.</p>\n<p>Non-composite <strong>NumberStyles</strong> values</p>\n<p>Elements permitted in value in addition to digits</p>\n<table><tbody><tr><td>\n<p>\n<xref href=\"System.Globalization.NumberStyles.None\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td><td>\n<p>Decimal digits only.</p>\n</td></tr><tr><td>\n<p>\n<xref href=\"System.Globalization.NumberStyles.AllowDecimalPoint\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td><td>\n<p>The decimal point (.) and fractional_digits elements. However, fractional_digits must consist of only one or more 0 digits, or the method returns <strong>false</strong>.</p>\n</td></tr><tr><td>\n<p>\n<xref href=\"System.Globalization.NumberStyles.AllowExponent\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td><td>\n<p>The \"e\" or \"E\" character, which indicates exponential notation, along with exponential_digits. If <em>s</em> represents a number in exponential notation, it cannot have a non-zero, fractional component.</p>\n</td></tr><tr><td>\n<p>\n<xref href=\"System.Globalization.NumberStyles.AllowLeadingWhite\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td><td>\n<p>The ws element at the start of <em>s</em>.</p>\n</td></tr><tr><td>\n<p>\n<xref href=\"System.Globalization.NumberStyles.AllowTrailingWhite\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td><td>\n<p>The ws element at the end of <em>s</em>.</p>\n</td></tr><tr><td>\n<p>\n<xref href=\"System.Globalization.NumberStyles.AllowLeadingSign\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td><td>\n<p>The sign element before digits. </p>\n</td></tr><tr><td>\n<p>\n<xref href=\"System.Globalization.NumberStyles.AllowTrailingSign\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td><td>\n<p>The sign element after digits.</p>\n</td></tr><tr><td>\n<p>\n<xref href=\"System.Globalization.NumberStyles.AllowParentheses\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td><td>\n<p>The sign element in the form of parentheses enclosing a zero numeric value.</p>\n</td></tr><tr><td>\n<p>\n<xref href=\"System.Globalization.NumberStyles.AllowThousands\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td><td>\n<p>The group separator (,) element.</p>\n</td></tr><tr><td>\n<p>\n<xref href=\"System.Globalization.NumberStyles.AllowCurrencySymbol\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td><td>\n<p>The currency ($) element.</p>\n</td></tr><tr><td>\n<p>\n<xref href=\"System.Globalization.NumberStyles.Currency\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td><td>\n<p>All elements. However, <em>s</em> cannot represent a hexadecimal number or a number in exponential notation.</p>\n</td></tr><tr><td>\n<p>\n<xref href=\"System.Globalization.NumberStyles.Float\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td><td>\n<p>The ws element at the start or end of <em>s</em>, sign at the start of <em>s</em>, and the decimal point (.) symbol. The <em>s</em> parameter can also use exponential notation.</p>\n</td></tr><tr><td>\n<p>\n<xref href=\"System.Globalization.NumberStyles.Number\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td><td>\n<p>The ws, sign, group separator (,), and decimal point (.) elements.</p>\n</td></tr><tr><td>\n<p>\n<xref href=\"System.Globalization.NumberStyles.Any\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td><td>\n<p>All elements. However, <em>s</em> cannot represent a hexadecimal number.</p>\n</td></tr></tbody></table>\n<p>If the <xref href=\"System.Globalization.NumberStyles.AllowHexSpecifier\" data-throw-if-not-resolved=\"false\"></xref> flag is used, <em>s</em> must be a hexadecimal value. Valid hexadecimal characters are 0-9, A-F, and a-f. A prefix such as \"0x\" is not supported and causes the parse operation to fail. The only other flags that can be present in <em>style</em> are <xref href=\"System.Globalization.NumberStyles.AllowLeadingWhite\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"System.Globalization.NumberStyles.AllowTrailingWhite\" data-throw-if-not-resolved=\"false\"></xref>. (The <xref href=\"System.Globalization.NumberStyles\" data-throw-if-not-resolved=\"false\"></xref> enumeration has a composite style, <xref href=\"System.Globalization.NumberStyles.HexNumber\" data-throw-if-not-resolved=\"false\"></xref>, that includes both white-space flags.) </p>\n<p>If <em>s</em> is the string representation of a hexadecimal number, it cannot be preceded by any decoration (such as <strong>0x</strong> or <strong>&h</strong>) that differentiates it as a hexadecimal number. This causes the conversion to fail.</p>\n<p>The <em>provider</em> parameter is an <xref href=\"System.IFormatProvider\" data-throw-if-not-resolved=\"false\"></xref> implementation. Its <xref href=\"System.IFormatProvider.GetFormat(System.Type)\" data-throw-if-not-resolved=\"false\"></xref> method returns a <xref href=\"System.Globalization.NumberFormatInfo\" data-throw-if-not-resolved=\"false\"></xref> object that provides culture-specific information about the format of <em>s</em>. The <em>provider</em> parameter can be any one of the following:</p>\n<ul><li>\n<p>A <xref href=\"System.Globalization.CultureInfo\" data-throw-if-not-resolved=\"false\"></xref> object that represents the culture that supplies formatting information. Its <xref href=\"System.Globalization.CultureInfo.GetFormat(System.Type)\" data-throw-if-not-resolved=\"false\"></xref> method returns the <xref href=\"System.Globalization.NumberFormatInfo\" data-throw-if-not-resolved=\"false\"></xref> object that provides numeric formatting information for that culture.</p>\n</li><li>\n<p>A <xref href=\"System.Globalization.NumberFormatInfo\" data-throw-if-not-resolved=\"false\"></xref> object that provides numeric formatting information. (Its implementation of <xref href=\"System.Globalization.NumberFormatInfo.GetFormat(System.Type)\" data-throw-if-not-resolved=\"false\"></xref> just returns itself.)</p>\n</li><li>\n<p>A custom object that implements <xref href=\"System.IFormatProvider\" data-throw-if-not-resolved=\"false\"></xref>. Its <xref href=\"System.IFormatProvider.GetFormat(System.Type)\" data-throw-if-not-resolved=\"false\"></xref> method instantiates and returns the <xref href=\"System.Globalization.NumberFormatInfo\" data-throw-if-not-resolved=\"false\"></xref> object that provides formatting information.</p>\n</li></ul>\n<p>If <em>provider</em> is <strong>null</strong>, the <xref href=\"System.Globalization.NumberFormatInfo\" data-throw-if-not-resolved=\"false\"></xref> object for the current culture is used.</p>\n"
  example:
  - "\n<p>The following example calls the <xref href=\"System.UInt64.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.UInt64@)\" data-throw-if-not-resolved=\"false\"></xref> method with a number of different strings and <xref href=\"System.Globalization.NumberStyles\" data-throw-if-not-resolved=\"false\"></xref> values.</p>System.UInt64.TryParse#2"
  syntax:
    content: >-
      [CLSCompliant(false)]

      public static bool TryParse(string s, NumberStyles style, IFormatProvider provider, out ulong result)
    content.vb: >-
      <CLSCompliant(False)>

      Public Shared Function TryParse(s As String, style As NumberStyles, provider As IFormatProvider, ByRef result As ULong) As Boolean
    parameters:
    - id: s
      type: System.String
    - id: style
      type: System.Globalization.NumberStyles
    - id: provider
      type: System.IFormatProvider
    - id: result
      type: System.UInt64
    return:
      type: System.Boolean
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<p>\n<em>style</em> is not a <xref href=\"System.Globalization.NumberStyles\" data-throw-if-not-resolved=\"false\"></xref> value. </p>\n<p>-or-</p>\n<p>\n<em>style</em> is not a combination of <xref href=\"System.Globalization.NumberStyles.AllowHexSpecifier\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"System.Globalization.NumberStyles.HexNumber\" data-throw-if-not-resolved=\"false\"></xref> values.</p>\n"
  seealso:
  - type: System.UInt64.Parse(System.String)
    commentId: M:System.UInt64.Parse(System.String)
  attributes:
  - type: System.CLSCompliantAttribute
    ctor: System.CLSCompliantAttribute.#ctor(System.Boolean)
    arguments:
    - type: System.Boolean
      value: false
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.UInt64.TryParse(System.String, System.Globalization.NumberStyles, System.IFormatProvider, ByRef System.UInt64)
  name.vb: TryParse(String, NumberStyles, IFormatProvider, ByRef UInt64)
- uid: System.UInt64.TryParse(System.String,System.UInt64@)
  commentId: M:System.UInt64.TryParse(System.String,System.UInt64@)
  id: TryParse(System.String,System.UInt64@)
  parent: System.UInt64
  langs:
  - csharp
  - vb
  name: TryParse(String, out UInt64)
  fullName: System.UInt64.TryParse(System.String, out System.UInt64)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/UInt64.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: TryParse
    path: src/mscorlib/src/System/UInt64.cs
    startLine: 123
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Tries to convert the string representation of a number to its 64-bit unsigned integer equivalent. A return value indicates whether the conversion succeeded or failed.</p>\n"
  remarks: "\n<p>The <xref href=\"System.UInt64.TryParse(System.String,System.UInt64@)\" data-throw-if-not-resolved=\"false\"></xref> method is like the <xref href=\"System.UInt64.Parse(System.String)\" data-throw-if-not-resolved=\"false\"></xref> method, except that it does not throw an exception if the conversion fails. This method eliminates the need to use exception handling to test for a <xref href=\"System.FormatException\" data-throw-if-not-resolved=\"false\"></xref> if <em>s</em> is invalid and cannot be successfully parsed.</p>\n<p>The <em>s</em> parameter should be the string representation of a decimal number in the following form: </p>\n<p>[ws][sign]digits[ws] </p>\n<p>Elements in square brackets ([ and ]) are optional. The following table describes each element.</p>\n<p>Element</p>\n<p>Description</p>\n<table><tbody><tr><td>\n<p>ws</p>\n</td><td>\n<p>Optional white space.</p>\n</td></tr><tr><td>\n<p>sign</p>\n</td><td>\n<p>An optional sign. Valid sign characters are determined by the <xref href=\"System.Globalization.NumberFormatInfo.NegativeSign\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"System.Globalization.NumberFormatInfo.PositiveSign\" data-throw-if-not-resolved=\"false\"></xref> properties of the current culture.</p>\n</td></tr><tr><td>\n<p>digits</p>\n</td><td>\n<p>A sequence of decimal digits ranging from 0 to 9.</p>\n</td></tr></tbody></table>\n<p>The <em>s</em> parameter is interpreted by using the <xref href=\"System.Globalization.NumberStyles.Integer\" data-throw-if-not-resolved=\"false\"></xref> style. In addition to the decimal digits, only leading and trailing spaces with a leading sign are allowed. To explicitly define the style elements with the culture-specific formatting information that can be present in <em>s</em>, call the <xref href=\"System.UInt64.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.UInt64@)\" data-throw-if-not-resolved=\"false\"></xref> method.</p>\n<p>The string specified by the <em>s</em> parameter cannot contain any group separators or decimal separator, and it cannot have a fractional portion. </p>\n<p>The <em>s</em> parameter is parsed using the formatting information in a <xref href=\"System.Globalization.NumberFormatInfo\" data-throw-if-not-resolved=\"false\"></xref> object initialized for the current system culture. For more information, see <xref href=\"System.Globalization.NumberFormatInfo.CurrentInfo\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>This overload interprets all digits in the <em>s</em> parameter as decimal digits. To parse the string representation of a hexadecimal number, call the <xref href=\"System.UInt64.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.UInt64@)\" data-throw-if-not-resolved=\"false\"></xref> overload instead. </p>\n"
  example:
  - "\n<p>The following example calls the <xref href=\"System.UInt64.TryParse(System.String,System.UInt64@)\" data-throw-if-not-resolved=\"false\"></xref> method once for each element in a string array.</p>System.UInt64.TryParse#1"
  syntax:
    content: >-
      [CLSCompliant(false)]

      public static bool TryParse(string s, out ulong result)
    content.vb: >-
      <CLSCompliant(False)>

      Public Shared Function TryParse(s As String, ByRef result As ULong) As Boolean
    parameters:
    - id: s
      type: System.String
    - id: result
      type: System.UInt64
    return:
      type: System.Boolean
  attributes:
  - type: System.CLSCompliantAttribute
    ctor: System.CLSCompliantAttribute.#ctor(System.Boolean)
    arguments:
    - type: System.Boolean
      value: false
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.UInt64.TryParse(System.String, ByRef System.UInt64)
  name.vb: TryParse(String, ByRef UInt64)
references:
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.IComparable
  parent: System
  isExternal: false
  name: IComparable
  fullName: System.IComparable
- uid: System.IComparable{System.UInt64}
  parent: System
  definition: System.IComparable`1
  name: IComparable<UInt64>
  fullName: System.IComparable<System.UInt64>
  fullname.vb: System.IComparable(Of System.UInt64)
  name.vb: IComparable(Of UInt64)
  spec.csharp:
  - uid: System.IComparable`1
    name: IComparable
    fullName: System.IComparable
  - name: <
    fullName: <
  - uid: System.UInt64
    name: UInt64
    fullName: System.UInt64
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IComparable`1
    name: IComparable
    fullName: System.IComparable
  - name: '(Of '
    fullName: '(Of '
  - uid: System.UInt64
    name: UInt64
    fullName: System.UInt64
    isExternal: true
  - name: )
    fullName: )
- uid: System.IConvertible
  parent: System
  isExternal: false
  name: IConvertible
  fullName: System.IConvertible
- uid: System.IEquatable{System.UInt64}
  parent: System
  definition: System.IEquatable`1
  name: IEquatable<UInt64>
  fullName: System.IEquatable<System.UInt64>
  fullname.vb: System.IEquatable(Of System.UInt64)
  name.vb: IEquatable(Of UInt64)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    fullName: System.IEquatable
  - name: <
    fullName: <
  - uid: System.UInt64
    name: UInt64
    fullName: System.UInt64
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    fullName: System.IEquatable
  - name: '(Of '
    fullName: '(Of '
  - uid: System.UInt64
    name: UInt64
    fullName: System.UInt64
    isExternal: true
  - name: )
    fullName: )
- uid: System.IFormattable
  parent: System
  isExternal: false
  name: IFormattable
  fullName: System.IFormattable
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.IComparable`1
  parent: System
  isExternal: false
  name: IComparable<T>
  fullName: System.IComparable<T>
  fullname.vb: System.IComparable(Of T)
  name.vb: IComparable(Of T)
  spec.csharp:
  - uid: System.IComparable`1
    name: IComparable
    fullName: System.IComparable
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IComparable`1
    name: IComparable
    fullName: System.IComparable
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.IEquatable`1
  parent: System
  isExternal: false
  name: IEquatable<T>
  fullName: System.IEquatable<T>
  fullname.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    fullName: System.IEquatable
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    fullName: System.IEquatable
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System.UInt64
  parent: System
  isExternal: false
  name: UInt64
  fullName: System.UInt64
- uid: System.IComparable{System.UInt64}.CompareTo(System.UInt64)
  parent: System.IComparable{System.UInt64}
  definition: System.IComparable`1.CompareTo(`0)
  name: CompareTo(UInt64)
  fullName: System.IComparable<System.UInt64>.CompareTo(System.UInt64)
  fullname.vb: System.IComparable(Of System.UInt64).CompareTo(System.UInt64)
  spec.csharp:
  - uid: System.IComparable`1.CompareTo(`0)
    name: CompareTo
    fullName: System.IComparable<System.UInt64>.CompareTo
  - name: (
    fullName: (
  - uid: System.UInt64
    name: UInt64
    fullName: System.UInt64
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IComparable`1.CompareTo(`0)
    name: CompareTo
    fullName: System.IComparable(Of System.UInt64).CompareTo
  - name: (
    fullName: (
  - uid: System.UInt64
    name: UInt64
    fullName: System.UInt64
    isExternal: true
  - name: )
    fullName: )
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  fullName: System.Int32
- uid: System.IComparable`1.CompareTo(`0)
  parent: System.IComparable`1
  isExternal: false
  name: CompareTo(T)
  fullName: System.IComparable<T>.CompareTo(T)
  fullname.vb: System.IComparable(Of T).CompareTo(T)
  spec.csharp:
  - uid: System.IComparable`1.CompareTo(`0)
    name: CompareTo
    fullName: System.IComparable<T>.CompareTo
  - name: (
    fullName: (
  - name: T
    fullName: T
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IComparable`1.CompareTo(`0)
    name: CompareTo
    fullName: System.IComparable(Of T).CompareTo
  - name: (
    fullName: (
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  name: Equals(Object)
  fullName: System.ValueType.Equals(System.Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    fullName: System.ValueType.Equals
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    fullName: System.ValueType.Equals
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  fullName: System.Boolean
- uid: System.ValueType
  parent: System
  isExternal: false
  name: ValueType
  fullName: System.ValueType
- uid: System.IEquatable{System.UInt64}.Equals(System.UInt64)
  parent: System.IEquatable{System.UInt64}
  definition: System.IEquatable`1.Equals(`0)
  name: Equals(UInt64)
  fullName: System.IEquatable<System.UInt64>.Equals(System.UInt64)
  fullname.vb: System.IEquatable(Of System.UInt64).Equals(System.UInt64)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    fullName: System.IEquatable<System.UInt64>.Equals
  - name: (
    fullName: (
  - uid: System.UInt64
    name: UInt64
    fullName: System.UInt64
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    fullName: System.IEquatable(Of System.UInt64).Equals
  - name: (
    fullName: (
  - uid: System.UInt64
    name: UInt64
    fullName: System.UInt64
    isExternal: true
  - name: )
    fullName: )
- uid: System.IEquatable`1.Equals(`0)
  parent: System.IEquatable`1
  isExternal: false
  name: Equals(T)
  fullName: System.IEquatable<T>.Equals(T)
  fullname.vb: System.IEquatable(Of T).Equals(T)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    fullName: System.IEquatable<T>.Equals
  - name: (
    fullName: (
  - name: T
    fullName: T
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    fullName: System.IEquatable(Of T).Equals
  - name: (
    fullName: (
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: false
  name: GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    fullName: System.ValueType.GetHashCode
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    fullName: System.ValueType.GetHashCode
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.String
  parent: System
  isExternal: false
  name: String
  fullName: System.String
- uid: System.Globalization.NumberStyles
  parent: System.Globalization
  isExternal: false
  name: NumberStyles
  fullName: System.Globalization.NumberStyles
- uid: System.Globalization
  isExternal: false
  name: System.Globalization
  fullName: System.Globalization
- uid: System.IFormatProvider
  parent: System
  isExternal: false
  name: IFormatProvider
  fullName: System.IFormatProvider
- uid: System.IComparable.CompareTo(System.Object)
  parent: System.IComparable
  isExternal: true
  name: CompareTo(Object)
  fullName: System.IComparable.CompareTo(System.Object)
  spec.csharp:
  - uid: System.IComparable.CompareTo(System.Object)
    name: CompareTo
    fullName: System.IComparable.CompareTo
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IComparable.CompareTo(System.Object)
    name: CompareTo
    fullName: System.IComparable.CompareTo
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.IConvertible.GetTypeCode
  parent: System.IConvertible
  isExternal: false
  name: GetTypeCode()
  fullName: System.IConvertible.GetTypeCode()
  spec.csharp:
  - uid: System.IConvertible.GetTypeCode
    name: GetTypeCode
    fullName: System.IConvertible.GetTypeCode
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IConvertible.GetTypeCode
    name: GetTypeCode
    fullName: System.IConvertible.GetTypeCode
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.TypeCode
  parent: System
  isExternal: false
  name: TypeCode
  fullName: System.TypeCode
- uid: System.IConvertible.ToBoolean(System.IFormatProvider)
  parent: System.IConvertible
  isExternal: false
  name: ToBoolean(IFormatProvider)
  fullName: System.IConvertible.ToBoolean(System.IFormatProvider)
  spec.csharp:
  - uid: System.IConvertible.ToBoolean(System.IFormatProvider)
    name: ToBoolean
    fullName: System.IConvertible.ToBoolean
  - name: (
    fullName: (
  - uid: System.IFormatProvider
    name: IFormatProvider
    fullName: System.IFormatProvider
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IConvertible.ToBoolean(System.IFormatProvider)
    name: ToBoolean
    fullName: System.IConvertible.ToBoolean
  - name: (
    fullName: (
  - uid: System.IFormatProvider
    name: IFormatProvider
    fullName: System.IFormatProvider
  - name: )
    fullName: )
- uid: System.IConvertible.ToByte(System.IFormatProvider)
  parent: System.IConvertible
  isExternal: false
  name: ToByte(IFormatProvider)
  fullName: System.IConvertible.ToByte(System.IFormatProvider)
  spec.csharp:
  - uid: System.IConvertible.ToByte(System.IFormatProvider)
    name: ToByte
    fullName: System.IConvertible.ToByte
  - name: (
    fullName: (
  - uid: System.IFormatProvider
    name: IFormatProvider
    fullName: System.IFormatProvider
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IConvertible.ToByte(System.IFormatProvider)
    name: ToByte
    fullName: System.IConvertible.ToByte
  - name: (
    fullName: (
  - uid: System.IFormatProvider
    name: IFormatProvider
    fullName: System.IFormatProvider
  - name: )
    fullName: )
- uid: System.Byte
  parent: System
  isExternal: false
  name: Byte
  fullName: System.Byte
- uid: System.IConvertible.ToChar(System.IFormatProvider)
  parent: System.IConvertible
  isExternal: false
  name: ToChar(IFormatProvider)
  fullName: System.IConvertible.ToChar(System.IFormatProvider)
  spec.csharp:
  - uid: System.IConvertible.ToChar(System.IFormatProvider)
    name: ToChar
    fullName: System.IConvertible.ToChar
  - name: (
    fullName: (
  - uid: System.IFormatProvider
    name: IFormatProvider
    fullName: System.IFormatProvider
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IConvertible.ToChar(System.IFormatProvider)
    name: ToChar
    fullName: System.IConvertible.ToChar
  - name: (
    fullName: (
  - uid: System.IFormatProvider
    name: IFormatProvider
    fullName: System.IFormatProvider
  - name: )
    fullName: )
- uid: System.Char
  parent: System
  isExternal: false
  name: Char
  fullName: System.Char
- uid: System.IConvertible.ToDateTime(System.IFormatProvider)
  parent: System.IConvertible
  isExternal: false
  name: ToDateTime(IFormatProvider)
  fullName: System.IConvertible.ToDateTime(System.IFormatProvider)
  spec.csharp:
  - uid: System.IConvertible.ToDateTime(System.IFormatProvider)
    name: ToDateTime
    fullName: System.IConvertible.ToDateTime
  - name: (
    fullName: (
  - uid: System.IFormatProvider
    name: IFormatProvider
    fullName: System.IFormatProvider
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IConvertible.ToDateTime(System.IFormatProvider)
    name: ToDateTime
    fullName: System.IConvertible.ToDateTime
  - name: (
    fullName: (
  - uid: System.IFormatProvider
    name: IFormatProvider
    fullName: System.IFormatProvider
  - name: )
    fullName: )
- uid: System.DateTime
  parent: System
  isExternal: false
  name: DateTime
  fullName: System.DateTime
- uid: System.IConvertible.ToDecimal(System.IFormatProvider)
  parent: System.IConvertible
  isExternal: false
  name: ToDecimal(IFormatProvider)
  fullName: System.IConvertible.ToDecimal(System.IFormatProvider)
  spec.csharp:
  - uid: System.IConvertible.ToDecimal(System.IFormatProvider)
    name: ToDecimal
    fullName: System.IConvertible.ToDecimal
  - name: (
    fullName: (
  - uid: System.IFormatProvider
    name: IFormatProvider
    fullName: System.IFormatProvider
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IConvertible.ToDecimal(System.IFormatProvider)
    name: ToDecimal
    fullName: System.IConvertible.ToDecimal
  - name: (
    fullName: (
  - uid: System.IFormatProvider
    name: IFormatProvider
    fullName: System.IFormatProvider
  - name: )
    fullName: )
- uid: System.Decimal
  parent: System
  isExternal: false
  name: Decimal
  fullName: System.Decimal
- uid: System.IConvertible.ToDouble(System.IFormatProvider)
  parent: System.IConvertible
  isExternal: false
  name: ToDouble(IFormatProvider)
  fullName: System.IConvertible.ToDouble(System.IFormatProvider)
  spec.csharp:
  - uid: System.IConvertible.ToDouble(System.IFormatProvider)
    name: ToDouble
    fullName: System.IConvertible.ToDouble
  - name: (
    fullName: (
  - uid: System.IFormatProvider
    name: IFormatProvider
    fullName: System.IFormatProvider
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IConvertible.ToDouble(System.IFormatProvider)
    name: ToDouble
    fullName: System.IConvertible.ToDouble
  - name: (
    fullName: (
  - uid: System.IFormatProvider
    name: IFormatProvider
    fullName: System.IFormatProvider
  - name: )
    fullName: )
- uid: System.Double
  parent: System
  isExternal: false
  name: Double
  fullName: System.Double
- uid: System.IConvertible.ToInt16(System.IFormatProvider)
  parent: System.IConvertible
  isExternal: false
  name: ToInt16(IFormatProvider)
  fullName: System.IConvertible.ToInt16(System.IFormatProvider)
  spec.csharp:
  - uid: System.IConvertible.ToInt16(System.IFormatProvider)
    name: ToInt16
    fullName: System.IConvertible.ToInt16
  - name: (
    fullName: (
  - uid: System.IFormatProvider
    name: IFormatProvider
    fullName: System.IFormatProvider
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IConvertible.ToInt16(System.IFormatProvider)
    name: ToInt16
    fullName: System.IConvertible.ToInt16
  - name: (
    fullName: (
  - uid: System.IFormatProvider
    name: IFormatProvider
    fullName: System.IFormatProvider
  - name: )
    fullName: )
- uid: System.Int16
  parent: System
  isExternal: false
  name: Int16
  fullName: System.Int16
- uid: System.IConvertible.ToInt32(System.IFormatProvider)
  parent: System.IConvertible
  isExternal: false
  name: ToInt32(IFormatProvider)
  fullName: System.IConvertible.ToInt32(System.IFormatProvider)
  spec.csharp:
  - uid: System.IConvertible.ToInt32(System.IFormatProvider)
    name: ToInt32
    fullName: System.IConvertible.ToInt32
  - name: (
    fullName: (
  - uid: System.IFormatProvider
    name: IFormatProvider
    fullName: System.IFormatProvider
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IConvertible.ToInt32(System.IFormatProvider)
    name: ToInt32
    fullName: System.IConvertible.ToInt32
  - name: (
    fullName: (
  - uid: System.IFormatProvider
    name: IFormatProvider
    fullName: System.IFormatProvider
  - name: )
    fullName: )
- uid: System.IConvertible.ToInt64(System.IFormatProvider)
  parent: System.IConvertible
  isExternal: false
  name: ToInt64(IFormatProvider)
  fullName: System.IConvertible.ToInt64(System.IFormatProvider)
  spec.csharp:
  - uid: System.IConvertible.ToInt64(System.IFormatProvider)
    name: ToInt64
    fullName: System.IConvertible.ToInt64
  - name: (
    fullName: (
  - uid: System.IFormatProvider
    name: IFormatProvider
    fullName: System.IFormatProvider
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IConvertible.ToInt64(System.IFormatProvider)
    name: ToInt64
    fullName: System.IConvertible.ToInt64
  - name: (
    fullName: (
  - uid: System.IFormatProvider
    name: IFormatProvider
    fullName: System.IFormatProvider
  - name: )
    fullName: )
- uid: System.Int64
  parent: System
  isExternal: false
  name: Int64
  fullName: System.Int64
- uid: System.IConvertible.ToSByte(System.IFormatProvider)
  parent: System.IConvertible
  isExternal: false
  name: ToSByte(IFormatProvider)
  fullName: System.IConvertible.ToSByte(System.IFormatProvider)
  spec.csharp:
  - uid: System.IConvertible.ToSByte(System.IFormatProvider)
    name: ToSByte
    fullName: System.IConvertible.ToSByte
  - name: (
    fullName: (
  - uid: System.IFormatProvider
    name: IFormatProvider
    fullName: System.IFormatProvider
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IConvertible.ToSByte(System.IFormatProvider)
    name: ToSByte
    fullName: System.IConvertible.ToSByte
  - name: (
    fullName: (
  - uid: System.IFormatProvider
    name: IFormatProvider
    fullName: System.IFormatProvider
  - name: )
    fullName: )
- uid: System.SByte
  parent: System
  isExternal: false
  name: SByte
  fullName: System.SByte
- uid: System.IConvertible.ToSingle(System.IFormatProvider)
  parent: System.IConvertible
  isExternal: false
  name: ToSingle(IFormatProvider)
  fullName: System.IConvertible.ToSingle(System.IFormatProvider)
  spec.csharp:
  - uid: System.IConvertible.ToSingle(System.IFormatProvider)
    name: ToSingle
    fullName: System.IConvertible.ToSingle
  - name: (
    fullName: (
  - uid: System.IFormatProvider
    name: IFormatProvider
    fullName: System.IFormatProvider
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IConvertible.ToSingle(System.IFormatProvider)
    name: ToSingle
    fullName: System.IConvertible.ToSingle
  - name: (
    fullName: (
  - uid: System.IFormatProvider
    name: IFormatProvider
    fullName: System.IFormatProvider
  - name: )
    fullName: )
- uid: System.Single
  parent: System
  isExternal: false
  name: Single
  fullName: System.Single
- uid: System.IConvertible.ToType(System.Type,System.IFormatProvider)
  parent: System.IConvertible
  isExternal: false
  name: ToType(Type, IFormatProvider)
  fullName: System.IConvertible.ToType(System.Type, System.IFormatProvider)
  spec.csharp:
  - uid: System.IConvertible.ToType(System.Type,System.IFormatProvider)
    name: ToType
    fullName: System.IConvertible.ToType
  - name: (
    fullName: (
  - uid: System.Type
    name: Type
    fullName: System.Type
  - name: ', '
    fullName: ', '
  - uid: System.IFormatProvider
    name: IFormatProvider
    fullName: System.IFormatProvider
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IConvertible.ToType(System.Type,System.IFormatProvider)
    name: ToType
    fullName: System.IConvertible.ToType
  - name: (
    fullName: (
  - uid: System.Type
    name: Type
    fullName: System.Type
  - name: ', '
    fullName: ', '
  - uid: System.IFormatProvider
    name: IFormatProvider
    fullName: System.IFormatProvider
  - name: )
    fullName: )
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  fullName: System.Type
- uid: System.IConvertible.ToUInt16(System.IFormatProvider)
  parent: System.IConvertible
  isExternal: false
  name: ToUInt16(IFormatProvider)
  fullName: System.IConvertible.ToUInt16(System.IFormatProvider)
  spec.csharp:
  - uid: System.IConvertible.ToUInt16(System.IFormatProvider)
    name: ToUInt16
    fullName: System.IConvertible.ToUInt16
  - name: (
    fullName: (
  - uid: System.IFormatProvider
    name: IFormatProvider
    fullName: System.IFormatProvider
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IConvertible.ToUInt16(System.IFormatProvider)
    name: ToUInt16
    fullName: System.IConvertible.ToUInt16
  - name: (
    fullName: (
  - uid: System.IFormatProvider
    name: IFormatProvider
    fullName: System.IFormatProvider
  - name: )
    fullName: )
- uid: System.UInt16
  parent: System
  isExternal: false
  name: UInt16
  fullName: System.UInt16
- uid: System.IConvertible.ToUInt32(System.IFormatProvider)
  parent: System.IConvertible
  isExternal: false
  name: ToUInt32(IFormatProvider)
  fullName: System.IConvertible.ToUInt32(System.IFormatProvider)
  spec.csharp:
  - uid: System.IConvertible.ToUInt32(System.IFormatProvider)
    name: ToUInt32
    fullName: System.IConvertible.ToUInt32
  - name: (
    fullName: (
  - uid: System.IFormatProvider
    name: IFormatProvider
    fullName: System.IFormatProvider
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IConvertible.ToUInt32(System.IFormatProvider)
    name: ToUInt32
    fullName: System.IConvertible.ToUInt32
  - name: (
    fullName: (
  - uid: System.IFormatProvider
    name: IFormatProvider
    fullName: System.IFormatProvider
  - name: )
    fullName: )
- uid: System.UInt32
  parent: System
  isExternal: false
  name: UInt32
  fullName: System.UInt32
- uid: System.IConvertible.ToUInt64(System.IFormatProvider)
  parent: System.IConvertible
  isExternal: false
  name: ToUInt64(IFormatProvider)
  fullName: System.IConvertible.ToUInt64(System.IFormatProvider)
  spec.csharp:
  - uid: System.IConvertible.ToUInt64(System.IFormatProvider)
    name: ToUInt64
    fullName: System.IConvertible.ToUInt64
  - name: (
    fullName: (
  - uid: System.IFormatProvider
    name: IFormatProvider
    fullName: System.IFormatProvider
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IConvertible.ToUInt64(System.IFormatProvider)
    name: ToUInt64
    fullName: System.IConvertible.ToUInt64
  - name: (
    fullName: (
  - uid: System.IFormatProvider
    name: IFormatProvider
    fullName: System.IFormatProvider
  - name: )
    fullName: )
- uid: System.ValueType.ToString
  parent: System.ValueType
  isExternal: false
  name: ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    fullName: System.ValueType.ToString
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    fullName: System.ValueType.ToString
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.IConvertible.ToString(System.IFormatProvider)
  parent: System.IConvertible
  isExternal: false
  name: ToString(IFormatProvider)
  fullName: System.IConvertible.ToString(System.IFormatProvider)
  spec.csharp:
  - uid: System.IConvertible.ToString(System.IFormatProvider)
    name: ToString
    fullName: System.IConvertible.ToString
  - name: (
    fullName: (
  - uid: System.IFormatProvider
    name: IFormatProvider
    fullName: System.IFormatProvider
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IConvertible.ToString(System.IFormatProvider)
    name: ToString
    fullName: System.IConvertible.ToString
  - name: (
    fullName: (
  - uid: System.IFormatProvider
    name: IFormatProvider
    fullName: System.IFormatProvider
  - name: )
    fullName: )
- uid: System.IFormattable.ToString(System.String,System.IFormatProvider)
  parent: System.IFormattable
  isExternal: true
  name: ToString(String, IFormatProvider)
  fullName: System.IFormattable.ToString(System.String, System.IFormatProvider)
  spec.csharp:
  - uid: System.IFormattable.ToString(System.String,System.IFormatProvider)
    name: ToString
    fullName: System.IFormattable.ToString
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.IFormatProvider
    name: IFormatProvider
    fullName: System.IFormatProvider
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IFormattable.ToString(System.String,System.IFormatProvider)
    name: ToString
    fullName: System.IFormattable.ToString
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.IFormatProvider
    name: IFormatProvider
    fullName: System.IFormatProvider
  - name: )
    fullName: )
- uid: System.ArgumentNullException
  isExternal: false
  name: ArgumentNullException
  fullName: System.ArgumentNullException
- uid: System.FormatException
  parent: System
  isExternal: false
  name: FormatException
  fullName: System.FormatException
- uid: System.OverflowException
  isExternal: false
  name: OverflowException
  fullName: System.OverflowException
- uid: System.ArgumentException
  parent: System
  isExternal: false
  name: ArgumentException
  fullName: System.ArgumentException
- uid: System.InvalidCastException
  isExternal: false
  name: InvalidCastException
  fullName: System.InvalidCastException
