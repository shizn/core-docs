items:
- uid: System.Net.NetworkInformation.NetworkChange
  commentId: T:System.Net.NetworkInformation.NetworkChange
  id: NetworkChange
  parent: System.Net.NetworkInformation
  children:
  - System.Net.NetworkInformation.NetworkChange.NetworkAddressChanged
  langs:
  - csharp
  - vb
  name: NetworkChange
  fullName: System.Net.NetworkInformation.NetworkChange
  type: Class
  source:
    remote:
      path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: NetworkChange
    path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs
    startLine: 255
  assemblies:
  - System.Net.NetworkInformation
  namespace: System.Net.NetworkInformation
  summary: "\n<p>Allows applications to receive notification when the Internet Protocol (IP) address of a network interface, also called a network card or adapter, changes.</p>\n"
  remarks: "\n<p>The <xref href=\"System.Net.NetworkInformation.NetworkChange\" data-throw-if-not-resolved=\"false\"></xref> class provides address change notification by raising <xref href=\"System.Net.NetworkInformation.NetworkChange.NetworkAddressChanged\" data-throw-if-not-resolved=\"false\"></xref> events. An interface address can change for many reasons, such as a disconnected network cable, moving out of range of a wireless Local Area Network, or hardware failure.</p>\n<p>To receive notification, you must identify your application's event handlers, which are one or more methods that perform your application-specific tasks each time the event is raised. To have a <xref href=\"System.Net.NetworkInformation.NetworkChange\" data-throw-if-not-resolved=\"false\"></xref> object call your event-handling methods when a <xref href=\"System.Net.NetworkInformation.NetworkChange.NetworkAddressChanged\" data-throw-if-not-resolved=\"false\"></xref> event occurs, you must associate the methods with a <xref href=\"System.Net.NetworkInformation.NetworkAddressChangedEventHandler\" data-throw-if-not-resolved=\"false\"></xref> delegate, and add this delegate to the event.</p>\n"
  example:
  - "\n<p>The following code example listens for address changes and displays the status of network interfaces when a <xref href=\"System.Net.NetworkInformation.NetworkChange.NetworkAddressChanged\" data-throw-if-not-resolved=\"false\"></xref> event occurs.</p>NclNetAddressChanged1#1"
  syntax:
    content: public class NetworkChange
    content.vb: Public Class NetworkChange
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: System.Net.NetworkInformation.NetworkChange.NetworkAddressChanged
  commentId: E:System.Net.NetworkInformation.NetworkChange.NetworkAddressChanged
  id: NetworkAddressChanged
  parent: System.Net.NetworkInformation.NetworkChange
  langs:
  - csharp
  - vb
  name: NetworkAddressChanged
  fullName: System.Net.NetworkInformation.NetworkChange.NetworkAddressChanged
  type: Event
  source:
    remote:
      path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: NetworkAddressChanged
    path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs
    startLine: 257
  assemblies:
  - System.Net.NetworkInformation
  namespace: System.Net.NetworkInformation
  summary: "\n<p>Occurs when the IP address of a network interface changes.</p>\n"
  remarks: "\n<p>The <xref href=\"System.Net.NetworkInformation.NetworkChange\" data-throw-if-not-resolved=\"false\"></xref> class raises <xref href=\"System.Net.NetworkInformation.NetworkChange.NetworkAddressChanged\" data-throw-if-not-resolved=\"false\"></xref> events when the address of a network interface, also called a network card or adapter, changes.</p>\n<p>To have a <xref href=\"System.Net.NetworkInformation.NetworkChange\" data-throw-if-not-resolved=\"false\"></xref> object call an event-handling method when a <xref href=\"System.Net.NetworkInformation.NetworkChange.NetworkAddressChanged\" data-throw-if-not-resolved=\"false\"></xref> event occurs, you must associate the method with a <xref href=\"System.Net.NetworkInformation.NetworkAddressChangedEventHandler\" data-throw-if-not-resolved=\"false\"></xref> delegate, and add this delegate to this event. </p>\n<p>The <xref href=\"System.Net.NetworkInformation.NetworkChange.NetworkAddressChanged\" data-throw-if-not-resolved=\"false\"></xref> event is supported on Windows 2000 and later.</p>\n"
  example:
  - "\n<p>The following code example listens for address changes and displays the status of network interfaces when a <xref href=\"System.Net.NetworkInformation.NetworkChange.NetworkAddressChanged\" data-throw-if-not-resolved=\"false\"></xref> event occurs.</p>NclNetAddressChanged1#1"
  syntax:
    content: public static event NetworkAddressChangedEventHandler NetworkAddressChanged
    content.vb: Public Shared Event NetworkAddressChanged As NetworkAddressChangedEventHandler
    return:
      type: System.Net.NetworkInformation.NetworkAddressChangedEventHandler
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: System.Net.NetworkInformation
  isExternal: false
  name: System.Net.NetworkInformation
  fullName: System.Net.NetworkInformation
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Net.NetworkInformation.NetworkAddressChangedEventHandler
  parent: System.Net.NetworkInformation
  isExternal: false
  name: NetworkAddressChangedEventHandler
  fullName: System.Net.NetworkInformation.NetworkAddressChangedEventHandler
