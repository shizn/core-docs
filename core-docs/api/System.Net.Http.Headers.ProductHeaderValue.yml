items:
- uid: System.Net.Http.Headers.ProductHeaderValue
  commentId: T:System.Net.Http.Headers.ProductHeaderValue
  id: ProductHeaderValue
  parent: System.Net.Http.Headers
  children:
  - System.Net.Http.Headers.ProductHeaderValue.#ctor(System.String)
  - System.Net.Http.Headers.ProductHeaderValue.#ctor(System.String,System.String)
  - System.Net.Http.Headers.ProductHeaderValue.Equals(System.Object)
  - System.Net.Http.Headers.ProductHeaderValue.GetHashCode
  - System.Net.Http.Headers.ProductHeaderValue.Name
  - System.Net.Http.Headers.ProductHeaderValue.Parse(System.String)
  - System.Net.Http.Headers.ProductHeaderValue.ToString
  - System.Net.Http.Headers.ProductHeaderValue.TryParse(System.String,System.Net.Http.Headers.ProductHeaderValue@)
  - System.Net.Http.Headers.ProductHeaderValue.Version
  langs:
  - csharp
  - vb
  name: ProductHeaderValue
  fullName: System.Net.Http.Headers.ProductHeaderValue
  type: Class
  source:
    remote:
      path: src/System.Net.Http/ref/System.Net.Http.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ProductHeaderValue
    path: src/System.Net.Http/ref/System.Net.Http.cs
    startLine: 482
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: "\n<p>Represents a product token value in a User-Agent header.</p>\n"
  remarks: "\n<p>The <xref href=\"System.Net.Http.Headers.ProductInfoHeaderValue\" data-throw-if-not-resolved=\"false\"></xref> class provides support for the product token header value used in a User-Agent header as defined in <see href=\"http://go.microsoft.com/fwlink/?LinkID=241642\">RFC 2616</see> by the IETF.</p>\n"
  syntax:
    content: public class ProductHeaderValue
    content.vb: Public Class ProductHeaderValue
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: System.Net.Http.Headers.ProductHeaderValue.#ctor(System.String)
  commentId: M:System.Net.Http.Headers.ProductHeaderValue.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Net.Http.Headers.ProductHeaderValue
  langs:
  - csharp
  - vb
  name: ProductHeaderValue(String)
  fullName: System.Net.Http.Headers.ProductHeaderValue.ProductHeaderValue(System.String)
  type: Constructor
  source:
    remote:
      path: src/System.Net.Http/ref/System.Net.Http.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Net.Http/ref/System.Net.Http.cs
    startLine: 484
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Net.Http.Headers.ProductHeaderValue\" data-throw-if-not-resolved=\"false\"></xref> class.</p>\n"
  syntax:
    content: public ProductHeaderValue(string name)
    content.vb: Public Sub New(name As String)
    parameters:
    - id: name
      type: System.String
      description: "\n<p>The product name.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Net.Http.Headers.ProductHeaderValue.#ctor(System.String,System.String)
  commentId: M:System.Net.Http.Headers.ProductHeaderValue.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: System.Net.Http.Headers.ProductHeaderValue
  langs:
  - csharp
  - vb
  name: ProductHeaderValue(String, String)
  fullName: System.Net.Http.Headers.ProductHeaderValue.ProductHeaderValue(System.String, System.String)
  type: Constructor
  source:
    remote:
      path: src/System.Net.Http/ref/System.Net.Http.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Net.Http/ref/System.Net.Http.cs
    startLine: 485
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Net.Http.Headers.ProductHeaderValue\" data-throw-if-not-resolved=\"false\"></xref> class.</p>\n"
  syntax:
    content: public ProductHeaderValue(string name, string version)
    content.vb: Public Sub New(name As String, version As String)
    parameters:
    - id: name
      type: System.String
      description: "\n<p>The product name value.</p>\n"
    - id: version
      type: System.String
      description: "\n<p>The product version value.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Net.Http.Headers.ProductHeaderValue.Name
  commentId: P:System.Net.Http.Headers.ProductHeaderValue.Name
  id: Name
  parent: System.Net.Http.Headers.ProductHeaderValue
  langs:
  - csharp
  - vb
  name: Name
  fullName: System.Net.Http.Headers.ProductHeaderValue.Name
  type: Property
  source:
    remote:
      path: src/System.Net.Http/ref/System.Net.Http.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Name
    path: src/System.Net.Http/ref/System.Net.Http.cs
    startLine: 486
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: "\n<p>Gets the name of the product token.</p>\n"
  syntax:
    content: public string Name { get; }
    content.vb: Public ReadOnly Property Name As String
    parameters: []
    return:
      type: System.String
      description: "\n<p>Returns <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>The name of the product token.</p>\n"
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Net.Http.Headers.ProductHeaderValue.Version
  commentId: P:System.Net.Http.Headers.ProductHeaderValue.Version
  id: Version
  parent: System.Net.Http.Headers.ProductHeaderValue
  langs:
  - csharp
  - vb
  name: Version
  fullName: System.Net.Http.Headers.ProductHeaderValue.Version
  type: Property
  source:
    remote:
      path: src/System.Net.Http/ref/System.Net.Http.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Version
    path: src/System.Net.Http/ref/System.Net.Http.cs
    startLine: 487
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: "\n<p>Gets the version of the product token.</p>\n"
  syntax:
    content: public string Version { get; }
    content.vb: Public ReadOnly Property Version As String
    parameters: []
    return:
      type: System.String
      description: "\n<p>Returns <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>The version of the product token. </p>\n"
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Net.Http.Headers.ProductHeaderValue.Equals(System.Object)
  commentId: M:System.Net.Http.Headers.ProductHeaderValue.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Net.Http.Headers.ProductHeaderValue
  langs:
  - csharp
  - vb
  name: Equals(Object)
  fullName: System.Net.Http.Headers.ProductHeaderValue.Equals(System.Object)
  type: Method
  source:
    remote:
      path: src/System.Net.Http/ref/System.Net.Http.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Equals
    path: src/System.Net.Http/ref/System.Net.Http.cs
    startLine: 488
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: "\n<p>Determines whether the specified <xref href=\"System.Object\" data-throw-if-not-resolved=\"false\"></xref> is equal to the current <xref href=\"System.Net.Http.Headers.ProductHeaderValue\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  syntax:
    content: public override bool Equals(object obj)
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
    parameters:
    - id: obj
      type: System.Object
      description: "\n<p>The object to compare with the current object.</p>\n"
    return:
      type: System.Boolean
      description: "\n<p>Returns <xref href=\"System.Boolean\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>\n<strong>true</strong> if the specified <xref href=\"System.Object\" data-throw-if-not-resolved=\"false\"></xref> is equal to the current object; otherwise, <strong>false</strong>.</p>\n"
  overridden: System.Object.Equals(System.Object)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Net.Http.Headers.ProductHeaderValue.GetHashCode
  commentId: M:System.Net.Http.Headers.ProductHeaderValue.GetHashCode
  id: GetHashCode
  parent: System.Net.Http.Headers.ProductHeaderValue
  langs:
  - csharp
  - vb
  name: GetHashCode()
  fullName: System.Net.Http.Headers.ProductHeaderValue.GetHashCode()
  type: Method
  source:
    remote:
      path: src/System.Net.Http/ref/System.Net.Http.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetHashCode
    path: src/System.Net.Http/ref/System.Net.Http.cs
    startLine: 489
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: "\n<p>Serves as a hash function for an <xref href=\"System.Net.Http.Headers.ProductHeaderValue\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  remarks: "\n<p>A hash code is a numeric value that is used to identify an object during equality testing. It can also serve as an index for an object in a collection.</p>\n<p>The <xref href=\"System.Net.Http.Headers.ProductHeaderValue.GetHashCode\" data-throw-if-not-resolved=\"false\"></xref>  method is suitable for use in hashing algorithms and data structures such as a hash table.</p>\n"
  syntax:
    content: public override int GetHashCode()
    content.vb: Public Overrides Function GetHashCode As Integer
    return:
      type: System.Int32
      description: "\n<p>Returns <xref href=\"System.Int32\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>A hash code for the current object.</p>\n"
  overridden: System.Object.GetHashCode
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Net.Http.Headers.ProductHeaderValue.Parse(System.String)
  commentId: M:System.Net.Http.Headers.ProductHeaderValue.Parse(System.String)
  id: Parse(System.String)
  parent: System.Net.Http.Headers.ProductHeaderValue
  langs:
  - csharp
  - vb
  name: Parse(String)
  fullName: System.Net.Http.Headers.ProductHeaderValue.Parse(System.String)
  type: Method
  source:
    remote:
      path: src/System.Net.Http/ref/System.Net.Http.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Parse
    path: src/System.Net.Http/ref/System.Net.Http.cs
    startLine: 490
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: "\n<p>Converts a string to an <xref href=\"System.Net.Http.Headers.ProductHeaderValue\" data-throw-if-not-resolved=\"false\"></xref> instance.</p>\n"
  syntax:
    content: public static ProductHeaderValue Parse(string input)
    content.vb: Public Shared Function Parse(input As String) As ProductHeaderValue
    parameters:
    - id: input
      type: System.String
      description: "\n<p>A string that represents product header value information.</p>\n"
    return:
      type: System.Net.Http.Headers.ProductHeaderValue
      description: "\n<p>Returns <xref href=\"System.Net.Http.Headers.ProductHeaderValue\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>An <xref href=\"System.Net.Http.Headers.ProductHeaderValue\" data-throw-if-not-resolved=\"false\"></xref> instance.</p>\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Net.Http.Headers.ProductHeaderValue.ToString
  commentId: M:System.Net.Http.Headers.ProductHeaderValue.ToString
  id: ToString
  parent: System.Net.Http.Headers.ProductHeaderValue
  langs:
  - csharp
  - vb
  name: ToString()
  fullName: System.Net.Http.Headers.ProductHeaderValue.ToString()
  type: Method
  source:
    remote:
      path: src/System.Net.Http/ref/System.Net.Http.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ToString
    path: src/System.Net.Http/ref/System.Net.Http.cs
    startLine: 491
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: "\n<p>Returns a string that represents the current <xref href=\"System.Net.Http.Headers.ProductHeaderValue\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  syntax:
    content: public override string ToString()
    content.vb: Public Overrides Function ToString As String
    return:
      type: System.String
      description: "\n<p>Returns <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>A string that represents the current object.</p>\n"
  overridden: System.Object.ToString
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Net.Http.Headers.ProductHeaderValue.TryParse(System.String,System.Net.Http.Headers.ProductHeaderValue@)
  commentId: M:System.Net.Http.Headers.ProductHeaderValue.TryParse(System.String,System.Net.Http.Headers.ProductHeaderValue@)
  id: TryParse(System.String,System.Net.Http.Headers.ProductHeaderValue@)
  parent: System.Net.Http.Headers.ProductHeaderValue
  langs:
  - csharp
  - vb
  name: TryParse(String, out ProductHeaderValue)
  fullName: System.Net.Http.Headers.ProductHeaderValue.TryParse(System.String, out System.Net.Http.Headers.ProductHeaderValue)
  type: Method
  source:
    remote:
      path: src/System.Net.Http/ref/System.Net.Http.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: TryParse
    path: src/System.Net.Http/ref/System.Net.Http.cs
    startLine: 492
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: "\n<p>Determines whether a string is valid <xref href=\"System.Net.Http.Headers.ProductHeaderValue\" data-throw-if-not-resolved=\"false\"></xref> information.</p>\n"
  syntax:
    content: public static bool TryParse(string input, out ProductHeaderValue parsedValue)
    content.vb: Public Shared Function TryParse(input As String, ByRef parsedValue As ProductHeaderValue) As Boolean
    parameters:
    - id: input
      type: System.String
      description: "\n<p>The string to validate.</p>\n"
    - id: parsedValue
      type: System.Net.Http.Headers.ProductHeaderValue
      description: "\n<p>The <xref href=\"System.Net.Http.Headers.ProductHeaderValue\" data-throw-if-not-resolved=\"false\"></xref> version of the string.</p>\n"
    return:
      type: System.Boolean
      description: "\n<p>Returns <xref href=\"System.Boolean\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>\n<strong>true</strong> if <em>input</em> is valid <xref href=\"System.Net.Http.Headers.ProductHeaderValue\" data-throw-if-not-resolved=\"false\"></xref> information; otherwise, <strong>false</strong>.</p>\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Net.Http.Headers.ProductHeaderValue.TryParse(System.String, ByRef System.Net.Http.Headers.ProductHeaderValue)
  name.vb: TryParse(String, ByRef ProductHeaderValue)
references:
- uid: System.Net.Http.Headers
  isExternal: false
  name: System.Net.Http.Headers
  fullName: System.Net.Http.Headers
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.String
  parent: System
  isExternal: false
  name: String
  fullName: System.String
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  fullName: System.Boolean
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  fullName: System.Int32
- uid: System.Net.Http.Headers.ProductHeaderValue
  parent: System.Net.Http.Headers
  isExternal: false
  name: ProductHeaderValue
  fullName: System.Net.Http.Headers.ProductHeaderValue
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
