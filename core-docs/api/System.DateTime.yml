items:
- uid: System.DateTime
  commentId: T:System.DateTime
  id: DateTime
  parent: System
  children:
  - System.DateTime.#ctor(System.Int32,System.Int32,System.Int32)
  - System.DateTime.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  - System.DateTime.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.DateTimeKind)
  - System.DateTime.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  - System.DateTime.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.DateTimeKind)
  - System.DateTime.#ctor(System.Int64)
  - System.DateTime.#ctor(System.Int64,System.DateTimeKind)
  - System.DateTime.Add(System.TimeSpan)
  - System.DateTime.AddDays(System.Double)
  - System.DateTime.AddHours(System.Double)
  - System.DateTime.AddMilliseconds(System.Double)
  - System.DateTime.AddMinutes(System.Double)
  - System.DateTime.AddMonths(System.Int32)
  - System.DateTime.AddSeconds(System.Double)
  - System.DateTime.AddTicks(System.Int64)
  - System.DateTime.AddYears(System.Int32)
  - System.DateTime.Compare(System.DateTime,System.DateTime)
  - System.DateTime.CompareTo(System.DateTime)
  - System.DateTime.Date
  - System.DateTime.Day
  - System.DateTime.DayOfWeek
  - System.DateTime.DayOfYear
  - System.DateTime.DaysInMonth(System.Int32,System.Int32)
  - System.DateTime.Equals(System.DateTime)
  - System.DateTime.Equals(System.DateTime,System.DateTime)
  - System.DateTime.Equals(System.Object)
  - System.DateTime.FromBinary(System.Int64)
  - System.DateTime.FromFileTime(System.Int64)
  - System.DateTime.FromFileTimeUtc(System.Int64)
  - System.DateTime.GetDateTimeFormats
  - System.DateTime.GetDateTimeFormats(System.Char)
  - System.DateTime.GetDateTimeFormats(System.Char,System.IFormatProvider)
  - System.DateTime.GetDateTimeFormats(System.IFormatProvider)
  - System.DateTime.GetHashCode
  - System.DateTime.Hour
  - System.DateTime.IsDaylightSavingTime
  - System.DateTime.IsLeapYear(System.Int32)
  - System.DateTime.Kind
  - System.DateTime.MaxValue
  - System.DateTime.Millisecond
  - System.DateTime.Minute
  - System.DateTime.MinValue
  - System.DateTime.Month
  - System.DateTime.Now
  - System.DateTime.op_Addition(System.DateTime,System.TimeSpan)
  - System.DateTime.op_Equality(System.DateTime,System.DateTime)
  - System.DateTime.op_GreaterThan(System.DateTime,System.DateTime)
  - System.DateTime.op_GreaterThanOrEqual(System.DateTime,System.DateTime)
  - System.DateTime.op_Inequality(System.DateTime,System.DateTime)
  - System.DateTime.op_LessThan(System.DateTime,System.DateTime)
  - System.DateTime.op_LessThanOrEqual(System.DateTime,System.DateTime)
  - System.DateTime.op_Subtraction(System.DateTime,System.DateTime)
  - System.DateTime.op_Subtraction(System.DateTime,System.TimeSpan)
  - System.DateTime.Parse(System.String)
  - System.DateTime.Parse(System.String,System.IFormatProvider)
  - System.DateTime.Parse(System.String,System.IFormatProvider,System.Globalization.DateTimeStyles)
  - System.DateTime.ParseExact(System.String,System.String,System.IFormatProvider)
  - System.DateTime.ParseExact(System.String,System.String,System.IFormatProvider,System.Globalization.DateTimeStyles)
  - System.DateTime.ParseExact(System.String,System.String[],System.IFormatProvider,System.Globalization.DateTimeStyles)
  - System.DateTime.Second
  - System.DateTime.SpecifyKind(System.DateTime,System.DateTimeKind)
  - System.DateTime.Subtract(System.DateTime)
  - System.DateTime.Subtract(System.TimeSpan)
  - System.DateTime.System#IComparable#CompareTo(System.Object)
  - System.DateTime.System#IConvertible#GetTypeCode
  - System.DateTime.System#IConvertible#ToBoolean(System.IFormatProvider)
  - System.DateTime.System#IConvertible#ToByte(System.IFormatProvider)
  - System.DateTime.System#IConvertible#ToChar(System.IFormatProvider)
  - System.DateTime.System#IConvertible#ToDateTime(System.IFormatProvider)
  - System.DateTime.System#IConvertible#ToDecimal(System.IFormatProvider)
  - System.DateTime.System#IConvertible#ToDouble(System.IFormatProvider)
  - System.DateTime.System#IConvertible#ToInt16(System.IFormatProvider)
  - System.DateTime.System#IConvertible#ToInt32(System.IFormatProvider)
  - System.DateTime.System#IConvertible#ToInt64(System.IFormatProvider)
  - System.DateTime.System#IConvertible#ToSByte(System.IFormatProvider)
  - System.DateTime.System#IConvertible#ToSingle(System.IFormatProvider)
  - System.DateTime.System#IConvertible#ToType(System.Type,System.IFormatProvider)
  - System.DateTime.System#IConvertible#ToUInt16(System.IFormatProvider)
  - System.DateTime.System#IConvertible#ToUInt32(System.IFormatProvider)
  - System.DateTime.System#IConvertible#ToUInt64(System.IFormatProvider)
  - System.DateTime.Ticks
  - System.DateTime.TimeOfDay
  - System.DateTime.ToBinary
  - System.DateTime.Today
  - System.DateTime.ToFileTime
  - System.DateTime.ToFileTimeUtc
  - System.DateTime.ToLocalTime
  - System.DateTime.ToString
  - System.DateTime.ToString(System.IFormatProvider)
  - System.DateTime.ToString(System.String)
  - System.DateTime.ToString(System.String,System.IFormatProvider)
  - System.DateTime.ToUniversalTime
  - System.DateTime.TryParse(System.String,System.DateTime@)
  - System.DateTime.TryParse(System.String,System.IFormatProvider,System.Globalization.DateTimeStyles,System.DateTime@)
  - System.DateTime.TryParseExact(System.String,System.String,System.IFormatProvider,System.Globalization.DateTimeStyles,System.DateTime@)
  - System.DateTime.TryParseExact(System.String,System.String[],System.IFormatProvider,System.Globalization.DateTimeStyles,System.DateTime@)
  - System.DateTime.UtcNow
  - System.DateTime.Year
  langs:
  - csharp
  - vb
  name: DateTime
  fullName: System.DateTime
  type: Struct
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: DateTime
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 398
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Represents an instant in time, typically expressed as a date and time of day. </p>\n<p>To browse the .NET Framework source code for this type, see the <see href=\"http://referencesource-beta.microsoft.com/#mscorlib/system/datetime.cs#df6b1eba7461813b\">Reference Source</see>.</p>\n"
  remarks: "\n<p>To view the .NET Framework source code for this type, see the <see href=\"http://referencesource-beta.microsoft.com/#mscorlib/system/datetime.cs#df6b1eba7461813b\">Reference Source</see>. You can browse through the source code online, download the reference for offline viewing, and step through the sources (including patches and updates) during debugging; see <see href=\"http://referencesource.microsoft.com/\">instructions</see>.</p>\n<p>The <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> value type represents dates and times with values ranging from 00:00:00 (midnight), January 1, 0001 Anno Domini (Common Era) through 11:59:59 P.M., December 31, 9999 A.D. (C.E.) in the Gregorian calendar. </p>\n<p>Time values are measured in 100-nanosecond units called ticks, and a particular date is the number of ticks since 12:00 midnight, January 1, 0001 A.D. (C.E.) in the <xref href=\"System.Globalization.GregorianCalendar\" data-throw-if-not-resolved=\"false\"></xref> calendar (excluding ticks that would be added by leap seconds). For example, a ticks value of 31241376000000000L represents the date, Friday, January 01, 0100 12:00:00 midnight. A <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> value is always expressed in the context of an explicit or default calendar.</p>\n<p>If you are working with a ticks value that you want to convert to some other time interval, such as minutes or seconds, you should use the <xref href=\"System.TimeSpan.TicksPerDay\" data-throw-if-not-resolved=\"false\"></xref>, <xref href=\"System.TimeSpan.TicksPerHour\" data-throw-if-not-resolved=\"false\"></xref>, <xref href=\"System.TimeSpan.TicksPerMinute\" data-throw-if-not-resolved=\"false\"></xref>, <xref href=\"System.TimeSpan.TicksPerSecond\" data-throw-if-not-resolved=\"false\"></xref>, or <xref href=\"System.TimeSpan.TicksPerMillisecond\" data-throw-if-not-resolved=\"false\"></xref> constant to perform the conversion. For example, to add the number of seconds represented by a specified number of ticks to the <xref href=\"System.DateTime.Second\" data-throw-if-not-resolved=\"false\"></xref> component of a <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> value, you can use the expression <code>dateValue.Second + nTicks/Timespan.TicksPerSecond</code>.</p>\n<p>In this section:</p>\n<p>Instantiating a DateTime objectDateTime values and their string representationsConverting strings to DateTime valuesVersion considerationsDateTime valuesDateTime operationsDateTime resolutionDateTime vs. TimeSpanDateTime values and calendarsPersisting DateTime valuesCOM interop considerations</p>\n"
  example:
  - <p>The following example demonstrates how to compare roughly equivalent <xref href="System.DateTime" data-throw-if-not-resolved="false"></xref> values, accepting a small margin of difference when declaring them equal.</p>DateTime Equivalency Example#1
  syntax:
    content: 'public struct DateTime : IComparable, IComparable<DateTime>, IConvertible, IEquatable<DateTime>, IFormattable'
    content.vb: >-
      Public Structure DateTime
          Implements IComparable, IComparable(Of Date), IConvertible, IEquatable(Of Date), IFormattable
  seealso:
  - type: System.DateTimeOffset
    commentId: T:System.DateTimeOffset
  - type: System.TimeSpan
    commentId: T:System.TimeSpan
  - type: System.Globalization.Calendar
    commentId: T:System.Globalization.Calendar
  - type: System.TimeZone.GetUtcOffset(System.DateTime)
    commentId: M:System.TimeZone.GetUtcOffset(System.DateTime)
  - type: System.TimeZoneInfo
    commentId: T:System.TimeZoneInfo
  implements:
  - System.IComparable
  - System.IComparable{System.DateTime}
  - System.IConvertible
  - System.IEquatable{System.DateTime}
  - System.IFormattable
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.ReferenceEquals(System.Object,System.Object)
  modifiers.csharp:
  - public
  - struct
  modifiers.vb:
  - Public
  - Structure
- uid: System.DateTime.MaxValue
  commentId: F:System.DateTime.MaxValue
  id: MaxValue
  parent: System.DateTime
  langs:
  - csharp
  - vb
  name: MaxValue
  fullName: System.DateTime.MaxValue
  type: Field
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: MaxValue
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 400
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Represents the largest possible value of <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref>. This field is read-only.</p>\n"
  remarks: "\n<p>The value of this constant is equivalent to 23:59:59.9999999 UTC, December 31, 9999 in the Gregorian calendar, exactly one 100-nanosecond tick before 00:00:00 UTC, January 1, 10000.</p>\n<p>Some calendars, such as the <xref href=\"System.Globalization.UmAlQuraCalendar\" data-throw-if-not-resolved=\"false\"></xref>, support an upper date range that is earlier than <xref href=\"System.DateTime.MaxValue\" data-throw-if-not-resolved=\"false\"></xref>. In these cases, trying to access <xref href=\"System.DateTime.MaxValue\" data-throw-if-not-resolved=\"false\"></xref> in variable assignments or formatting and parsing operations can throw an <xref href=\"System.ArgumentOutOfRangeException\" data-throw-if-not-resolved=\"false\"></xref>. Rather than retrieving the value of <xref href=\"System.DateTime.MaxValue\" data-throw-if-not-resolved=\"false\"></xref>, you can retrieve the value of the specified culture's latest valid date value from the <strong>System.Globalization.CultureInfo.DateTimeFormat.Calendar.MaxSupportedDateTime</strong> property. </p>\n"
  example:
  - "\n<p>The following example instantiates a <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> object by passing its constructor an <xref href=\"System.Int64\" data-throw-if-not-resolved=\"false\"></xref> value that represents a number of ticks. Before invoking the constructor, the example ensures that this value is greater than or equal to <strong>DateTime.MinValue.Ticks</strong> and less than or equal to <strong>DateTime.MaxValue.Ticks</strong>. If not, it throws an <xref href=\"System.ArgumentOutOfRangeException\" data-throw-if-not-resolved=\"false\"></xref>.</p>System.DateTime.MinValue#2"
  syntax:
    content: public static readonly DateTime MaxValue
    content.vb: Public Shared ReadOnly MaxValue As Date
    return:
      type: System.DateTime
  seealso:
  - type: System.DateTime.MinValue
    commentId: F:System.DateTime.MinValue
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: System.DateTime.MinValue
  commentId: F:System.DateTime.MinValue
  id: MinValue
  parent: System.DateTime
  langs:
  - csharp
  - vb
  name: MinValue
  fullName: System.DateTime.MinValue
  type: Field
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: MinValue
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 401
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Represents the smallest possible value of <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref>. This field is read-only.</p>\n"
  remarks: "\n<p>The value of this constant is equivalent to 00:00:00.0000000 UTC, January 1, 0001, in the Gregorian calendar.</p>\n<p>\n<xref href=\"System.DateTime.MinValue\" data-throw-if-not-resolved=\"false\"></xref> defines the date and time that is assigned to an uninitialized <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> variable. The following example illustrates this.</p>System.DateTime.MinValue#1<p>The <xref href=\"System.DateTime.MinValue\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"System.DateTime.MaxValue\" data-throw-if-not-resolved=\"false\"></xref> properties can be used to ensure that a value lies within the supported range before passing it to a <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> constructor. The code in the Example section illustrates this usage.</p>"
  example:
  - "\n<p>The following example instantiates a <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> object by passing its constructor an <xref href=\"System.Int64\" data-throw-if-not-resolved=\"false\"></xref> value that represents a number of ticks. Before invoking the constructor, the example ensures that this value is greater than or equal to <strong>DateTime.MinValue.Ticks</strong> and less than or equal to <strong>DateTime.MaxValue.Ticks</strong>. If not, it throws an <xref href=\"System.ArgumentOutOfRangeException\" data-throw-if-not-resolved=\"false\"></xref>.</p>System.DateTime.MinValue#2"
  syntax:
    content: public static readonly DateTime MinValue
    content.vb: Public Shared ReadOnly MinValue As Date
    return:
      type: System.DateTime
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: System.DateTime.#ctor(System.Int32,System.Int32,System.Int32)
  commentId: M:System.DateTime.#ctor(System.Int32,System.Int32,System.Int32)
  id: '#ctor(System.Int32,System.Int32,System.Int32)'
  parent: System.DateTime
  langs:
  - csharp
  - vb
  name: DateTime(Int32, Int32, Int32)
  fullName: System.DateTime.DateTime(System.Int32, System.Int32, System.Int32)
  type: Constructor
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 402
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> structure to the specified year, month, and day.</p>\n"
  remarks: "\n<p>This constructor interprets <em>year</em>, <em>month</em>, and <em>day</em> as a year, month, and day in the Gregorian calendar. To instantiate a <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> value by using the year, month, and day in another calendar, call the <xref href=\"System.DateTime.#ctor(System.Int32,System.Int32,System.Int32,System.Globalization.Calendar)\" data-throw-if-not-resolved=\"false\"></xref> constructor.</p>\n<p>The time of day for the resulting <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> is midnight (00:00:00). The <xref href=\"System.DateTime.Kind\" data-throw-if-not-resolved=\"false\"></xref> property is initialized to <xref href=\"System.DateTimeKind.Unspecified\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  example:
  - "\n<p>The following example uses the <xref href=\"System.DateTime.#ctor(System.Int32,System.Int32,System.Int32)\" data-throw-if-not-resolved=\"false\"></xref> constructor to instantiate a <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> value. The example also illustrates that this overload creates a <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> value whose time component equals midnight (or 0:00).</p>System.DateTime.Constructor#1"
  syntax:
    content: public DateTime(int year, int month, int day)
    content.vb: Public Sub New(year As Integer, month As Integer, day As Integer)
    parameters:
    - id: year
      type: System.Int32
      description: "\n<p>The year (1 through 9999). </p>\n"
    - id: month
      type: System.Int32
      description: "\n<p>The month (1 through 12). </p>\n"
    - id: day
      type: System.Int32
      description: "\n<p>The day (1 through the number of days in <em>month</em>). </p>\n"
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>\n<em>year</em> is less than 1 or greater than 9999.</p>\n<p>-or- </p>\n<p>\n<em>month</em> is less than 1 or greater than 12.</p>\n<p>-or- </p>\n<p>\n<em>day</em> is less than 1 or greater than the number of days in <em>month</em>. </p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.DateTime.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  commentId: M:System.DateTime.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  id: '#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)'
  parent: System.DateTime
  langs:
  - csharp
  - vb
  name: DateTime(Int32, Int32, Int32, Int32, Int32, Int32)
  fullName: System.DateTime.DateTime(System.Int32, System.Int32, System.Int32, System.Int32, System.Int32, System.Int32)
  type: Constructor
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 403
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> structure to the specified year, month, day, hour, minute, and second.</p>\n"
  remarks: "\n<p>The <xref href=\"System.DateTime.Kind\" data-throw-if-not-resolved=\"false\"></xref> property is initialized to <xref href=\"System.DateTimeKind.Unspecified\" data-throw-if-not-resolved=\"false\"></xref>. </p>\n<p>This constructor interprets<em>year</em>, <em>month</em>, and <em>day</em> as a year, month, and day in the Gregorian calendar. To instantiate a <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> value by using the year, month, and day in another calendar, call the <xref href=\"System.DateTime.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Globalization.Calendar)\" data-throw-if-not-resolved=\"false\"></xref> constructor.</p>\n<p>For applications in which portability of date and time data or a limited degree of time zone awareness is important, you can use the corresponding <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> constructor.</p>\n"
  example:
  - "\n<p>The following example uses the <xref href=\"System.DateTime.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)\" data-throw-if-not-resolved=\"false\"></xref> constructor to instantiate a <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> value.</p>System.DateTime.Constructor#3"
  syntax:
    content: public DateTime(int year, int month, int day, int hour, int minute, int second)
    content.vb: Public Sub New(year As Integer, month As Integer, day As Integer, hour As Integer, minute As Integer, second As Integer)
    parameters:
    - id: year
      type: System.Int32
      description: "\n<p>The year (1 through 9999). </p>\n"
    - id: month
      type: System.Int32
      description: "\n<p>The month (1 through 12). </p>\n"
    - id: day
      type: System.Int32
      description: "\n<p>The day (1 through the number of days in <em>month</em>). </p>\n"
    - id: hour
      type: System.Int32
      description: "\n<p>The hours (0 through 23). </p>\n"
    - id: minute
      type: System.Int32
      description: "\n<p>The minutes (0 through 59). </p>\n"
    - id: second
      type: System.Int32
      description: "\n<p>The seconds (0 through 59). </p>\n"
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>\n<em>year</em> is less than 1 or greater than 9999. </p>\n<p>-or- </p>\n<p>\n<em>month</em> is less than 1 or greater than 12. </p>\n<p>-or- </p>\n<p>\n<em>day</em> is less than 1 or greater than the number of days in <em>month</em>.</p>\n<p>-or- </p>\n<p>\n<em>hour</em> is less than 0 or greater than 23. </p>\n<p>-or- </p>\n<p>\n<em>minute</em> is less than 0 or greater than 59. </p>\n<p>-or- </p>\n<p>\n<em>second</em> is less than 0 or greater than 59. </p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.DateTime.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.DateTimeKind)
  commentId: M:System.DateTime.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.DateTimeKind)
  id: '#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.DateTimeKind)'
  parent: System.DateTime
  langs:
  - csharp
  - vb
  name: DateTime(Int32, Int32, Int32, Int32, Int32, Int32, DateTimeKind)
  fullName: System.DateTime.DateTime(System.Int32, System.Int32, System.Int32, System.Int32, System.Int32, System.Int32, System.DateTimeKind)
  type: Constructor
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 404
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> structure to the specified year, month, day, hour, minute, second, and Coordinated Universal Time (UTC) or local time.</p>\n"
  remarks: "\n<p>This constructor interprets<em>year</em>, <em>month</em>, and <em>day</em> as a year, month, and day in the Gregorian calendar. To instantiate a <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> value by using the year, month, and day in another calendar, call the <xref href=\"System.DateTime.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Globalization.Calendar,System.DateTimeKind)\" data-throw-if-not-resolved=\"false\"></xref> constructor.</p>\n<p>For applications in which portability of date and time data or a limited degree of time zone awareness is important, you can use the corresponding <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> constructor.</p>\n"
  example:
  - "\n<p>The following example uses the <xref href=\"System.DateTime.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.DateTimeKind)\" data-throw-if-not-resolved=\"false\"></xref> constructor to instantiate a <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> value.</p>System.DateTime.Constructor#7"
  syntax:
    content: public DateTime(int year, int month, int day, int hour, int minute, int second, DateTimeKind kind)
    content.vb: Public Sub New(year As Integer, month As Integer, day As Integer, hour As Integer, minute As Integer, second As Integer, kind As DateTimeKind)
    parameters:
    - id: year
      type: System.Int32
      description: "\n<p>The year (1 through 9999). </p>\n"
    - id: month
      type: System.Int32
      description: "\n<p>The month (1 through 12). </p>\n"
    - id: day
      type: System.Int32
      description: "\n<p>The day (1 through the number of days in <em>month</em>). </p>\n"
    - id: hour
      type: System.Int32
      description: "\n<p>The hours (0 through 23). </p>\n"
    - id: minute
      type: System.Int32
      description: "\n<p>The minutes (0 through 59). </p>\n"
    - id: second
      type: System.Int32
      description: "\n<p>The seconds (0 through 59). </p>\n"
    - id: kind
      type: System.DateTimeKind
      description: "\n<p>One of the enumeration values that indicates whether <em>year</em>, <em>month</em>, <em>day</em>, <em>hour</em>, <em>minute</em> and <em>second</em> specify a local time, Coordinated Universal Time (UTC), or neither.</p>\n"
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>\n<em>year</em> is less than 1 or greater than 9999. </p>\n<p>-or- </p>\n<p>\n<em>month</em> is less than 1 or greater than 12. </p>\n<p>-or- </p>\n<p>\n<em>day</em> is less than 1 or greater than the number of days in <em>month</em>.</p>\n<p>-or- </p>\n<p>\n<em>hour</em> is less than 0 or greater than 23. </p>\n<p>-or- </p>\n<p>\n<em>minute</em> is less than 0 or greater than 59. </p>\n<p>-or- </p>\n<p>\n<em>second</em> is less than 0 or greater than 59. </p>\n"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<p>\n<em>kind</em> is not one of the <xref href=\"System.DateTimeKind\" data-throw-if-not-resolved=\"false\"></xref> values.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.DateTime.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  commentId: M:System.DateTime.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  id: '#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)'
  parent: System.DateTime
  langs:
  - csharp
  - vb
  name: DateTime(Int32, Int32, Int32, Int32, Int32, Int32, Int32)
  fullName: System.DateTime.DateTime(System.Int32, System.Int32, System.Int32, System.Int32, System.Int32, System.Int32, System.Int32)
  type: Constructor
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 405
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> structure to the specified year, month, day, hour, minute, second, and millisecond.</p>\n"
  remarks: "\n<p>This constructor interprets<em>year</em>, <em>month</em>, and <em>day</em> as a year, month, and day in the Gregorian calendar. To instantiate a <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> value by using the year, month, and day in another calendar, call the <xref href=\"System.DateTime.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Globalization.Calendar)\" data-throw-if-not-resolved=\"false\"></xref> constructor.</p>\n<p>The <xref href=\"System.DateTime.Kind\" data-throw-if-not-resolved=\"false\"></xref> property is initialized to <xref href=\"System.DateTimeKind.Unspecified\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>For applications in which portability of date and time data or a limited degree of time zone awareness is important, you can use the corresponding <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> constructor.</p>\n"
  example:
  - "\n<p>The following example uses the <xref href=\"System.DateTime.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)\" data-throw-if-not-resolved=\"false\"></xref> constructor to instantiate a <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> value.</p>System.DateTime.Constructor#5"
  syntax:
    content: public DateTime(int year, int month, int day, int hour, int minute, int second, int millisecond)
    content.vb: Public Sub New(year As Integer, month As Integer, day As Integer, hour As Integer, minute As Integer, second As Integer, millisecond As Integer)
    parameters:
    - id: year
      type: System.Int32
      description: "\n<p>The year (1 through 9999). </p>\n"
    - id: month
      type: System.Int32
      description: "\n<p>The month (1 through 12). </p>\n"
    - id: day
      type: System.Int32
      description: "\n<p>The day (1 through the number of days in <em>month</em>). </p>\n"
    - id: hour
      type: System.Int32
      description: "\n<p>The hours (0 through 23). </p>\n"
    - id: minute
      type: System.Int32
      description: "\n<p>The minutes (0 through 59). </p>\n"
    - id: second
      type: System.Int32
      description: "\n<p>The seconds (0 through 59). </p>\n"
    - id: millisecond
      type: System.Int32
      description: "\n<p>The milliseconds (0 through 999). </p>\n"
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>\n<em>year</em> is less than 1 or greater than 9999.</p>\n<p>-or- </p>\n<p>\n<em>month</em> is less than 1 or greater than 12.</p>\n<p>-or- </p>\n<p>\n<em>day</em> is less than 1 or greater than the number of days in <em>month</em>.</p>\n<p>-or- </p>\n<p>\n<em>hour</em> is less than 0 or greater than 23.</p>\n<p>-or- </p>\n<p>\n<em>minute</em> is less than 0 or greater than 59.</p>\n<p>-or- </p>\n<p>\n<em>second</em> is less than 0 or greater than 59.</p>\n<p>-or- </p>\n<p>\n<em>millisecond</em> is less than 0 or greater than 999. </p>\n"
  seealso:
  - type: System.Int32
    commentId: T:System.Int32
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.DateTime.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.DateTimeKind)
  commentId: M:System.DateTime.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.DateTimeKind)
  id: '#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.DateTimeKind)'
  parent: System.DateTime
  langs:
  - csharp
  - vb
  name: DateTime(Int32, Int32, Int32, Int32, Int32, Int32, Int32, DateTimeKind)
  fullName: System.DateTime.DateTime(System.Int32, System.Int32, System.Int32, System.Int32, System.Int32, System.Int32, System.Int32, System.DateTimeKind)
  type: Constructor
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 406
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> structure to the specified year, month, day, hour, minute, second, millisecond, and Coordinated Universal Time (UTC) or local time.</p>\n"
  remarks: "\n<p>This constructor interprets<em>year</em>, <em>month</em>, and <em>day</em> as a year, month, and day in the Gregorian calendar. To instantiate a <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> value by using the year, month, and day in another calendar, call the <xref href=\"System.DateTime.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Globalization.Calendar,System.DateTimeKind)\" data-throw-if-not-resolved=\"false\"></xref> constructor.</p>\n<p>For applications in which portability of date and time data or a limited degree of time zone awareness is important, you can use the corresponding <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> constructor.</p>\n"
  example:
  - "\n<p>The following example uses the <xref href=\"System.DateTime.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.DateTimeKind)\" data-throw-if-not-resolved=\"false\"></xref> constructor to instantiate a <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> value.</p>System.DateTime.Constructor#8"
  syntax:
    content: public DateTime(int year, int month, int day, int hour, int minute, int second, int millisecond, DateTimeKind kind)
    content.vb: Public Sub New(year As Integer, month As Integer, day As Integer, hour As Integer, minute As Integer, second As Integer, millisecond As Integer, kind As DateTimeKind)
    parameters:
    - id: year
      type: System.Int32
      description: "\n<p>The year (1 through 9999). </p>\n"
    - id: month
      type: System.Int32
      description: "\n<p>The month (1 through 12). </p>\n"
    - id: day
      type: System.Int32
      description: "\n<p>The day (1 through the number of days in <em>month</em>). </p>\n"
    - id: hour
      type: System.Int32
      description: "\n<p>The hours (0 through 23). </p>\n"
    - id: minute
      type: System.Int32
      description: "\n<p>The minutes (0 through 59). </p>\n"
    - id: second
      type: System.Int32
      description: "\n<p>The seconds (0 through 59). </p>\n"
    - id: millisecond
      type: System.Int32
      description: "\n<p>The milliseconds (0 through 999). </p>\n"
    - id: kind
      type: System.DateTimeKind
      description: "\n<p>One of the enumeration values that indicates whether <em>year</em>, <em>month</em>, <em>day</em>, <em>hour</em>, <em>minute</em>, <em>second</em>, and <em>millisecond</em> specify a local time, Coordinated Universal Time (UTC), or neither.</p>\n"
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>\n<em>year</em> is less than 1 or greater than 9999.</p>\n<p>-or- </p>\n<p>\n<em>month</em> is less than 1 or greater than 12.</p>\n<p>-or- </p>\n<p>\n<em>day</em> is less than 1 or greater than the number of days in <em>month</em>.</p>\n<p>-or- </p>\n<p>\n<em>hour</em> is less than 0 or greater than 23.</p>\n<p>-or- </p>\n<p>\n<em>minute</em> is less than 0 or greater than 59.</p>\n<p>-or- </p>\n<p>\n<em>second</em> is less than 0 or greater than 59.</p>\n<p>-or- </p>\n<p>\n<em>millisecond</em> is less than 0 or greater than 999. </p>\n"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<p>\n<em>kind</em> is not one of the <xref href=\"System.DateTimeKind\" data-throw-if-not-resolved=\"false\"></xref> values.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.DateTime.#ctor(System.Int64)
  commentId: M:System.DateTime.#ctor(System.Int64)
  id: '#ctor(System.Int64)'
  parent: System.DateTime
  langs:
  - csharp
  - vb
  name: DateTime(Int64)
  fullName: System.DateTime.DateTime(System.Int64)
  type: Constructor
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 407
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> structure to a specified number of ticks.</p>\n"
  remarks: "\n<p>The <xref href=\"System.DateTime.Kind\" data-throw-if-not-resolved=\"false\"></xref> property is initialized to <xref href=\"System.DateTimeKind.Unspecified\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>For applications in which portability of date and time data or a limited degree of time zone awareness is important, you can use the corresponding <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> constructor.</p>\n"
  example:
  - "\n<p>The following example demonstrates one of the <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> constructors.</p>datetime.ctor_Int64#1"
  syntax:
    content: public DateTime(long ticks)
    content.vb: Public Sub New(ticks As Long)
    parameters:
    - id: ticks
      type: System.Int64
      description: "\n<p>A date and time expressed in the number of 100-nanosecond intervals that have elapsed since January 1, 0001 at 00:00:00.000 in the Gregorian calendar. </p>\n"
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>\n<em>ticks</em> is less than <xref href=\"System.DateTime.MinValue\" data-throw-if-not-resolved=\"false\"></xref> or greater than <xref href=\"System.DateTime.MaxValue\" data-throw-if-not-resolved=\"false\"></xref>. </p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.DateTime.#ctor(System.Int64,System.DateTimeKind)
  commentId: M:System.DateTime.#ctor(System.Int64,System.DateTimeKind)
  id: '#ctor(System.Int64,System.DateTimeKind)'
  parent: System.DateTime
  langs:
  - csharp
  - vb
  name: DateTime(Int64, DateTimeKind)
  fullName: System.DateTime.DateTime(System.Int64, System.DateTimeKind)
  type: Constructor
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 408
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> structure to a specified number of ticks and to Coordinated Universal Time (UTC) or local time.</p>\n"
  remarks: "\n<p>For applications in which portability of date and time data or a limited degree of time zone awareness is important, you can use the corresponding <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> constructor.</p>\n"
  example:
  - 
  syntax:
    content: public DateTime(long ticks, DateTimeKind kind)
    content.vb: Public Sub New(ticks As Long, kind As DateTimeKind)
    parameters:
    - id: ticks
      type: System.Int64
      description: "\n<p>A date and time expressed in the number of 100-nanosecond intervals that have elapsed since January 1, 0001 at 00:00:00.000 in the Gregorian calendar. </p>\n"
    - id: kind
      type: System.DateTimeKind
      description: "\n<p>One of the enumeration values that indicates whether <em>ticks</em> specifies a local time, Coordinated Universal Time (UTC), or neither.</p>\n"
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>\n<em>ticks</em> is less than <xref href=\"System.DateTime.MinValue\" data-throw-if-not-resolved=\"false\"></xref> or greater than <xref href=\"System.DateTime.MaxValue\" data-throw-if-not-resolved=\"false\"></xref>. </p>\n"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<p>\n<em>kind</em> is not one of the <xref href=\"System.DateTimeKind\" data-throw-if-not-resolved=\"false\"></xref> values.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.DateTime.Date
  commentId: P:System.DateTime.Date
  id: Date
  parent: System.DateTime
  langs:
  - csharp
  - vb
  name: Date
  fullName: System.DateTime.Date
  type: Property
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Date
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 409
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Gets the date component of this instance.</p>\n"
  remarks: "\n<p>The value of the <xref href=\"System.DateTime.Kind\" data-throw-if-not-resolved=\"false\"></xref> property of the returned <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> value is the same as that of the current instance.</p>\n<p>Because the <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> type represents both dates and times in a single type, it is important to avoid misinterpreting a date returned by the <xref href=\"System.DateTime.Date\" data-throw-if-not-resolved=\"false\"></xref> property as a date and time. </p>\n"
  example:
  - "\n<p>The following example uses the <xref href=\"System.DateTime.Date\" data-throw-if-not-resolved=\"false\"></xref> property to extract the date component of a <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> value with its time component set to zero (or 0:00:00, or midnight). It also illustrates that, depending on the format string used when displaying the <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> value, the time component can continue to appear in formatted output.</p>System.DateTime.Date#1"
  syntax:
    content: public DateTime Date { get; }
    content.vb: Public ReadOnly Property Date As Date
    parameters: []
    return:
      type: System.DateTime
      description: "\n<p>A new object with the same date as this instance, and the time value set to 12:00:00 midnight (00:00:00).</p>\n"
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.DateTime.Day
  commentId: P:System.DateTime.Day
  id: Day
  parent: System.DateTime
  langs:
  - csharp
  - vb
  name: Day
  fullName: System.DateTime.Day
  type: Property
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Day
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 410
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Gets the day of the month represented by this instance.</p>\n"
  remarks: "\n<p>The <xref href=\"System.DateTime.Day\" data-throw-if-not-resolved=\"false\"></xref> property always returns the day of the month in the Gregorian calendar, even if the current <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> value was instantiated using some other calendar or if the current thread culture's default calendar is not the Gregorian calendar. To retrieve the day of the month of a particular date using some other calendar, call that calendar's <xref href=\"System.Globalization.Calendar.GetDayOfMonth(System.DateTime)\" data-throw-if-not-resolved=\"false\"></xref> method. The following example uses both the <xref href=\"System.DateTime.Day\" data-throw-if-not-resolved=\"false\"></xref> property and the <xref href=\"System.Globalization.HijriCalendar.GetDayOfMonth(System.DateTime)\" data-throw-if-not-resolved=\"false\"></xref> method to retrieve the day of the month for a <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> value that is instantiated using the Hijri calendar.</p>System.DateTime.Day#1<p>Similarly, the following example uses both the <xref href=\"System.DateTime.Day\" data-throw-if-not-resolved=\"false\"></xref> property and the <xref href=\"System.Globalization.HijriCalendar.GetDayOfMonth(System.DateTime)\" data-throw-if-not-resolved=\"false\"></xref> method to retrieve the day of the month when the current thread culture is ar-SA, which uses Hijri as its default calendar.</p>System.DateTime.Day#2"
  example:
  - "\n<p>The following example demonstrates the <xref href=\"System.DateTime.Day\" data-throw-if-not-resolved=\"false\"></xref> property.</p>System.DateTime.Minute etc#1"
  syntax:
    content: public int Day { get; }
    content.vb: Public ReadOnly Property Day As Integer
    parameters: []
    return:
      type: System.Int32
      description: "\n<p>The day component, expressed as a value between 1 and 31.</p>\n"
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.DateTime.DayOfWeek
  commentId: P:System.DateTime.DayOfWeek
  id: DayOfWeek
  parent: System.DateTime
  langs:
  - csharp
  - vb
  name: DayOfWeek
  fullName: System.DateTime.DayOfWeek
  type: Property
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: DayOfWeek
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 411
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Gets the day of the week represented by this instance.</p>\n"
  remarks: "\n<p>The value of the constants in the <xref href=\"System.DayOfWeek\" data-throw-if-not-resolved=\"false\"></xref> enumeration ranges from <xref href=\"System.DayOfWeek.Sunday\" data-throw-if-not-resolved=\"false\"></xref> to <xref href=\"System.DayOfWeek.Saturday\" data-throw-if-not-resolved=\"false\"></xref>. If cast to an integer, its value ranges from zero (which indicates <xref href=\"System.DayOfWeek.Sunday\" data-throw-if-not-resolved=\"false\"></xref>) to six (which indicates <xref href=\"System.DayOfWeek.Saturday\" data-throw-if-not-resolved=\"false\"></xref>).</p>\n<p>The <xref href=\"System.DateTime.DayOfWeek\" data-throw-if-not-resolved=\"false\"></xref> property returns an enumerated constant; it does not reflect a system's regional and language settings. To retrieve a string representing a localized weekday name for a particular date, call one of the overloads of the <see cref=\"Overload:System.DateTime.ToString\"></see> method that includes a <em>format</em> parameter and pass it either the <strong>ddd</strong> or <strong>dddd</strong> custom format strings. For details, see How to: Extract the Day of the Week from a Specific Date.   </p>\n"
  example:
  - "\n<p>The following example demonstrates the <xref href=\"System.DateTime.DayOfWeek\" data-throw-if-not-resolved=\"false\"></xref> property and the <xref href=\"System.DayOfWeek\" data-throw-if-not-resolved=\"false\"></xref> enumeration.</p>DateTime.DayOfWeek#1"
  syntax:
    content: public DayOfWeek DayOfWeek { get; }
    content.vb: Public ReadOnly Property DayOfWeek As DayOfWeek
    parameters: []
    return:
      type: System.DayOfWeek
      description: "\n<p>An enumerated constant that indicates the day of the week of this <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> value. </p>\n"
  seealso:
  - type: System.DateTime.Ticks
    commentId: P:System.DateTime.Ticks
  - type: System.Int32
    commentId: T:System.Int32
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.DateTime.DayOfYear
  commentId: P:System.DateTime.DayOfYear
  id: DayOfYear
  parent: System.DateTime
  langs:
  - csharp
  - vb
  name: DayOfYear
  fullName: System.DateTime.DayOfYear
  type: Property
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: DayOfYear
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 412
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Gets the day of the year represented by this instance.</p>\n"
  remarks: "\n<p>The<xref href=\"System.DateTime.DayOfYear\" data-throw-if-not-resolved=\"false\"></xref> property takes leap years into account when it calculates the day of the year. The property value always reflects the day of the year in the Gregorian calendar, regardless of the current thread culture's current calendar. To retrieve the day of the year in a different calendar, call the <xref href=\"System.Globalization.Calendar.GetDayOfYear(System.DateTime)\" data-throw-if-not-resolved=\"false\"></xref> method of that calendar. </p>\n"
  example:
  - "\n<p>The following example displays the day of the year of December 31 for the years 2010-2020 in the Gregorian calendar. Note that the example shows that December 31 is the 366th day of the year in leap years. </p>System.DateTime.DayOfYear#1"
  syntax:
    content: public int DayOfYear { get; }
    content.vb: Public ReadOnly Property DayOfYear As Integer
    parameters: []
    return:
      type: System.Int32
      description: "\n<p>The day of the year, expressed as a value between 1 and 366.</p>\n"
  seealso:
  - type: System.Globalization.Calendar.GetDayOfYear(System.DateTime)
    commentId: M:System.Globalization.Calendar.GetDayOfYear(System.DateTime)
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.DateTime.Hour
  commentId: P:System.DateTime.Hour
  id: Hour
  parent: System.DateTime
  langs:
  - csharp
  - vb
  name: Hour
  fullName: System.DateTime.Hour
  type: Property
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Hour
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 413
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Gets the hour component of the date represented by this instance.</p>\n"
  remarks: "\n<p>The value of the <xref href=\"System.DateTime.Hour\" data-throw-if-not-resolved=\"false\"></xref> property is always expressed using a 24-hour clock. To retrieve a string that represents the hour of a date and time using a 12-hour clock, call the <xref href=\"System.DateTime.ToString(System.String)\" data-throw-if-not-resolved=\"false\"></xref> or <xref href=\"System.DateTime.ToString(System.String,System.IFormatProvider)\" data-throw-if-not-resolved=\"false\"></xref> method with the \"h\" custom format specifier. For example:</p>System.DateTime.Hour#1"
  example:
  - "\n<p>The following example demonstrates the <xref href=\"System.DateTime.Hour\" data-throw-if-not-resolved=\"false\"></xref> property.</p>System.DateTime.Minute etc#1"
  syntax:
    content: public int Hour { get; }
    content.vb: Public ReadOnly Property Hour As Integer
    parameters: []
    return:
      type: System.Int32
      description: "\n<p>The hour component, expressed as a value between 0 and 23.</p>\n"
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.DateTime.Kind
  commentId: P:System.DateTime.Kind
  id: Kind
  parent: System.DateTime
  langs:
  - csharp
  - vb
  name: Kind
  fullName: System.DateTime.Kind
  type: Property
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Kind
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 414
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Gets a value that indicates whether the time represented by this instance is based on local time, Coordinated Universal Time (UTC), or neither.</p>\n"
  remarks: "\n<p>You can explicitly set the <xref href=\"System.DateTime.Kind\" data-throw-if-not-resolved=\"false\"></xref> property of a new <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> value to a particular <xref href=\"System.DateTimeKind\" data-throw-if-not-resolved=\"false\"></xref> value by calling the <xref href=\"System.DateTime.SpecifyKind(System.DateTime,System.DateTimeKind)\" data-throw-if-not-resolved=\"false\"></xref> method. </p>\n<p>The <xref href=\"System.DateTime.Kind\" data-throw-if-not-resolved=\"false\"></xref> property allows a <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> value to clearly reflect either Coordinated Universal Time (UTC) or the local time. In contrast, the <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> structure can unambiguously reflect any time in any time zone as a single point in time.   </p>\n"
  example:
  - "\n<p>The following example uses the <xref href=\"System.DateTime.SpecifyKind(System.DateTime,System.DateTimeKind)\" data-throw-if-not-resolved=\"false\"></xref> method to demonstrate how the <xref href=\"System.DateTime.Kind\" data-throw-if-not-resolved=\"false\"></xref> property influences the <xref href=\"System.DateTime.ToLocalTime\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"System.DateTime.ToUniversalTime\" data-throw-if-not-resolved=\"false\"></xref> conversion methods.</p>DateTime.Kind_Suite#1<p></p>"
  syntax:
    content: public DateTimeKind Kind { get; }
    content.vb: Public ReadOnly Property Kind As DateTimeKind
    parameters: []
    return:
      type: System.DateTimeKind
      description: "\n<p>One of the enumeration values that indicates what the current time represents. The default is <xref href=\"System.DateTimeKind.Unspecified\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  seealso:
  - type: System.DateTime.SpecifyKind(System.DateTime,System.DateTimeKind)
    commentId: M:System.DateTime.SpecifyKind(System.DateTime,System.DateTimeKind)
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.DateTime.Millisecond
  commentId: P:System.DateTime.Millisecond
  id: Millisecond
  parent: System.DateTime
  langs:
  - csharp
  - vb
  name: Millisecond
  fullName: System.DateTime.Millisecond
  type: Property
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Millisecond
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 415
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Gets the milliseconds component of the date represented by this instance.</p>\n"
  remarks: "\n<p>You can display the string representation of the <xref href=\"System.DateTime.Millisecond\" data-throw-if-not-resolved=\"false\"></xref> property by using the \"fff\" format specifier. For example, the following code displays a string that contains the number of milliseconds in a date and time to the console.</p>System.DateTime.Millisecond#1<p>You can also display the millisecond component together with the other components of a date and time value by using the \"o\" standard format specifier. For example:</p>System.DateTime.Millisecond#2<p>However, the \"o\" format specifier is intended less for displaying than for round-tripping or storing a <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> value. You can also display milliseconds together with other date and time components by using a custom format string, as the following example shows.</p>System.DateTime.Millisecond#3"
  example:
  - "\n<p>The following example demonstrates the <xref href=\"System.DateTime.Millisecond\" data-throw-if-not-resolved=\"false\"></xref> property.</p>System.DateTime.Minute etc#1"
  syntax:
    content: public int Millisecond { get; }
    content.vb: Public ReadOnly Property Millisecond As Integer
    parameters: []
    return:
      type: System.Int32
      description: "\n<p>The milliseconds component, expressed as a value between 0 and 999.</p>\n"
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.DateTime.Minute
  commentId: P:System.DateTime.Minute
  id: Minute
  parent: System.DateTime
  langs:
  - csharp
  - vb
  name: Minute
  fullName: System.DateTime.Minute
  type: Property
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Minute
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 416
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Gets the minute component of the date represented by this instance.</p>\n"
  example:
  - "\n<p>The following example demonstrates the <xref href=\"System.DateTime.Minute\" data-throw-if-not-resolved=\"false\"></xref> property.</p>System.DateTime.Minute etc#1"
  syntax:
    content: public int Minute { get; }
    content.vb: Public ReadOnly Property Minute As Integer
    parameters: []
    return:
      type: System.Int32
      description: "\n<p>The minute component, expressed as a value between 0 and 59.</p>\n"
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.DateTime.Month
  commentId: P:System.DateTime.Month
  id: Month
  parent: System.DateTime
  langs:
  - csharp
  - vb
  name: Month
  fullName: System.DateTime.Month
  type: Property
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Month
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 417
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Gets the month component of the date represented by this instance.</p>\n"
  example:
  - "\n<p>The following example demonstrates the <xref href=\"System.DateTime.Month\" data-throw-if-not-resolved=\"false\"></xref> property.</p>System.DateTime.Minute etc#1"
  syntax:
    content: public int Month { get; }
    content.vb: Public ReadOnly Property Month As Integer
    parameters: []
    return:
      type: System.Int32
      description: "\n<p>The month component, expressed as a value between 1 and 12.</p>\n"
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.DateTime.Now
  commentId: P:System.DateTime.Now
  id: Now
  parent: System.DateTime
  langs:
  - csharp
  - vb
  name: Now
  fullName: System.DateTime.Now
  type: Property
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Now
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 418
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Gets a <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> object that is set to the current date and time on this computer, expressed as the local time.</p>\n"
  remarks: "\n<p>The <xref href=\"System.DateTime.Now\" data-throw-if-not-resolved=\"false\"></xref> property returns a <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> value that represents the current date and time on the local computer. Note that there is a difference between a <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> value, which represents the number of ticks that have elapsed since midnight of January 1, 0000, and the string representation of that <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> value, which expresses a date and time value in a culture-specific-specific format. For information on formatting date and time values, see the <xref href=\"System.DateTime.ToString\" data-throw-if-not-resolved=\"false\"></xref>method. The following example displays the short date and time string in a number of culture-specific formats. </p>System.DateTime.Now#2<p>The resolution of this property depends on the system timer, which is approximately 15 milliseconds on Windows systems.As a result, repeated calls to the <xref href=\"System.DateTime.Now\" data-throw-if-not-resolved=\"false\"></xref> property in a short time interval, such as in a loop, may return the same value.</p><p>The <xref href=\"System.DateTime.Now\" data-throw-if-not-resolved=\"false\"></xref> property is frequently used to measure performance. However, because of its low resolution, it is not suitable for use as a benchmarking tool. A better alternative is to use the <xref href=\"System.Diagnostics.Stopwatch\" data-throw-if-not-resolved=\"false\"></xref> class.</p><p>Starting with the .NET Framework version 2.0, the return value is a <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> whose <xref href=\"System.DateTime.Kind\" data-throw-if-not-resolved=\"false\"></xref> property returns <xref href=\"System.DateTimeKind.Local\" data-throw-if-not-resolved=\"false\"></xref>.</p><p>You can also use the <xref href=\"System.DateTimeOffset.Now\" data-throw-if-not-resolved=\"false\"></xref> property to retrieve the current local date and time. It allows a local time to be expressed unambiguously as a single point in time, which in turn makes that time value portable across computers. </p>"
  example:
  - "\n<p>The following example uses the <xref href=\"System.DateTime.Now\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"System.DateTime.UtcNow\" data-throw-if-not-resolved=\"false\"></xref> properties to retrieve the current local date and time and the current universal coordinated (UTC) date and time. It then uses the formatting conventions of a number of cultures to display the strings, along with the values of the their <xref href=\"System.DateTime.Kind\" data-throw-if-not-resolved=\"false\"></xref> properties.</p>System.DateTime.Now#3"
  syntax:
    content: public static DateTime Now { get; }
    content.vb: Public Shared ReadOnly Property Now As Date
    parameters: []
    return:
      type: System.DateTime
      description: "\n<p>An object whose value is the current local date and time.</p>\n"
  seealso:
  - type: System.DateTimeOffset.Now
    commentId: P:System.DateTimeOffset.Now
  - type: System.DateTime.UtcNow
    commentId: P:System.DateTime.UtcNow
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: System.DateTime.Second
  commentId: P:System.DateTime.Second
  id: Second
  parent: System.DateTime
  langs:
  - csharp
  - vb
  name: Second
  fullName: System.DateTime.Second
  type: Property
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Second
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 419
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Gets the seconds component of the date represented by this instance.</p>\n"
  example:
  - "\n<p>The following example demonstrates the <xref href=\"System.DateTime.Second\" data-throw-if-not-resolved=\"false\"></xref> property.</p>System.DateTime.Minute etc#1"
  syntax:
    content: public int Second { get; }
    content.vb: Public ReadOnly Property Second As Integer
    parameters: []
    return:
      type: System.Int32
      description: "\n<p>The seconds component, expressed as a value between 0 and 59.</p>\n"
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.DateTime.Ticks
  commentId: P:System.DateTime.Ticks
  id: Ticks
  parent: System.DateTime
  langs:
  - csharp
  - vb
  name: Ticks
  fullName: System.DateTime.Ticks
  type: Property
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Ticks
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 420
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Gets the number of ticks that represent the date and time of this instance.</p>\n"
  remarks: "\n<p>A single tick represents one hundred nanoseconds or one ten-millionth of a second. There are 10,000 ticks in a millisecond, or 10 million ticks in a second. </p>\n<p>The value of this property represents the number of 100-nanosecond intervals that have elapsed since 12:00:00 midnight, January 1, 0001 (0:00:00 UTC on January 1, 0001, in the Gregorian calendar), which represents <xref href=\"System.DateTime.MinValue\" data-throw-if-not-resolved=\"false\"></xref>. It does not include the number of ticks that are attributable to leap seconds.</p>\n"
  example:
  - "\n<p>The following example uses the <xref href=\"System.DateTime.Ticks\" data-throw-if-not-resolved=\"false\"></xref> property to display the number of ticks that have elapsed since the beginning of the twenty-first century and to instantiate a <xref href=\"System.TimeSpan\" data-throw-if-not-resolved=\"false\"></xref> object. The <xref href=\"System.TimeSpan\" data-throw-if-not-resolved=\"false\"></xref> object is then used to display the elapsed time using several other time intervals.</p>System.DateTime.Ticks#1"
  syntax:
    content: public long Ticks { get; }
    content.vb: Public ReadOnly Property Ticks As Long
    parameters: []
    return:
      type: System.Int64
      description: "\n<p>The number of ticks that represent the date and time of this instance. The value is between <strong>DateTime.MinValue.Ticks</strong> and <strong>DateTime.MaxValue.Ticks</strong>.</p>\n"
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.DateTime.TimeOfDay
  commentId: P:System.DateTime.TimeOfDay
  id: TimeOfDay
  parent: System.DateTime
  langs:
  - csharp
  - vb
  name: TimeOfDay
  fullName: System.DateTime.TimeOfDay
  type: Property
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: TimeOfDay
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 421
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Gets the time of day for this instance.</p>\n"
  remarks: "\n<p>Unlike the <xref href=\"System.DateTime.Date\" data-throw-if-not-resolved=\"false\"></xref> property. which returns a <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> value that represents a date without its time component, the <xref href=\"System.DateTime.TimeOfDay\" data-throw-if-not-resolved=\"false\"></xref> property returns a <xref href=\"System.TimeSpan\" data-throw-if-not-resolved=\"false\"></xref> value that represents a  <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> value's time component. </p>\n<p>If you want to display the time of day or retrieve the string representation of the time of day of a <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> value, you can instead call an overload of the <xref href=\"System.DateTime.ToString(System.String)\" data-throw-if-not-resolved=\"false\"></xref> method that has a <em>format</em> parameter or use the composite formatting feature with the \"t\" or \"T\" standard format string. </p>\n"
  example:
  - "\n<p>The following example displays the value of the <xref href=\"System.DateTime.TimeOfDay\" data-throw-if-not-resolved=\"false\"></xref> property for an array of <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> values. It also contrasts the return value with the string returned by the \"t\" standard format string in a composite formatting operation. </p>System.DateTime.TimeOfDay#1"
  syntax:
    content: public TimeSpan TimeOfDay { get; }
    content.vb: Public ReadOnly Property TimeOfDay As TimeSpan
    parameters: []
    return:
      type: System.TimeSpan
      description: "\n<p>A time interval that represents the fraction of the day that has elapsed since midnight.</p>\n"
  seealso:
  - type: System.TimeSpan
    commentId: T:System.TimeSpan
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.DateTime.Today
  commentId: P:System.DateTime.Today
  id: Today
  parent: System.DateTime
  langs:
  - csharp
  - vb
  name: Today
  fullName: System.DateTime.Today
  type: Property
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Today
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 422
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Gets the current date.</p>\n"
  remarks: "\n<p>Starting with the .NET Framework version 2.0, the return value is a <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> whose <xref href=\"System.DateTime.Kind\" data-throw-if-not-resolved=\"false\"></xref> property returns <xref href=\"System.DateTimeKind.Local\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>Because it returns the current date without the current time, the <xref href=\"System.DateTime.Today\" data-throw-if-not-resolved=\"false\"></xref> property is suitable for use in applications that work with dates only. For details, see Choosing Between DateTime, DateTimeOffset, TimeSpan, and TimeZoneInfo. In contrast, the <xref href=\"System.DateTime.TimeOfDay\" data-throw-if-not-resolved=\"false\"></xref> property returns the current time without the current date, and the <xref href=\"System.DateTime.Now\" data-throw-if-not-resolved=\"false\"></xref> property returns both the current date and the current time. </p>\n"
  example:
  - "\n<p>The following example uses the <xref href=\"System.DateTime.Date\" data-throw-if-not-resolved=\"false\"></xref> property to retrieve the current date. It also illustrates how a <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> value can be formatted using some of the standard date and time format strings. Note that the output produced by the third call to the <xref href=\"System.DateTime.ToString(System.String)\" data-throw-if-not-resolved=\"false\"></xref> method uses the g format specifier to include the time component, which is zero.</p>System.DateTime.Today#1"
  syntax:
    content: public static DateTime Today { get; }
    content.vb: Public Shared ReadOnly Property Today As Date
    parameters: []
    return:
      type: System.DateTime
      description: "\n<p>An object that is set to today's date, with the time component set to 00:00:00.</p>\n"
  seealso:
  - type: System.DateTime.Now
    commentId: P:System.DateTime.Now
  - type: System.DateTime.TimeOfDay
    commentId: P:System.DateTime.TimeOfDay
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: System.DateTime.UtcNow
  commentId: P:System.DateTime.UtcNow
  id: UtcNow
  parent: System.DateTime
  langs:
  - csharp
  - vb
  name: UtcNow
  fullName: System.DateTime.UtcNow
  type: Property
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: UtcNow
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 423
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Gets a <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> object that is set to the current date and time on this computer, expressed as the Coordinated Universal Time (UTC).</p>\n"
  remarks: "\n<p>The resolution of this property depends on the system timer.</p>\n<p>System </p>\n<p>Approximate Resolution </p>\n<table><tbody><tr><td>\n<p>Windows NT 3.5 and later </p>\n</td><td>\n<p>10 milliseconds </p>\n</td></tr><tr><td>\n<p>Windows 98 </p>\n</td><td>\n<p>55 milliseconds </p>\n</td></tr></tbody></table>\n<p>Starting with the .NET Framework version 2.0, the return value is a <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> whose <xref href=\"System.DateTime.Kind\" data-throw-if-not-resolved=\"false\"></xref> property returns <xref href=\"System.DateTimeKind.Utc\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>An alternative to using <xref href=\"System.DateTime.UtcNow\" data-throw-if-not-resolved=\"false\"></xref> is <xref href=\"System.DateTimeOffset.UtcNow\" data-throw-if-not-resolved=\"false\"></xref>. While the former indicates that a date and time value is Coordinated Universal Time (UTC) by assigning <xref href=\"System.DateTimeKind.Utc\" data-throw-if-not-resolved=\"false\"></xref> to its <xref href=\"System.DateTime.Kind\" data-throw-if-not-resolved=\"false\"></xref> property, the latter assigns the date and time value the UTC time's offset (equal to <xref href=\"System.TimeSpan.Zero\" data-throw-if-not-resolved=\"false\"></xref>).</p>\n"
  example:
  - "\n<p>The following example uses the <xref href=\"System.DateTime.SpecifyKind(System.DateTime,System.DateTimeKind)\" data-throw-if-not-resolved=\"false\"></xref> method to demonstrate how the <xref href=\"System.DateTime.Kind\" data-throw-if-not-resolved=\"false\"></xref> property influences the <xref href=\"System.DateTime.ToLocalTime\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"System.DateTime.ToUniversalTime\" data-throw-if-not-resolved=\"false\"></xref> conversion methods.</p>DateTime.Kind_Suite#1"
  syntax:
    content: public static DateTime UtcNow { get; }
    content.vb: Public Shared ReadOnly Property UtcNow As Date
    parameters: []
    return:
      type: System.DateTime
      description: "\n<p>An object whose value is the current UTC date and time.</p>\n"
  seealso:
  - type: System.DateTimeOffset.UtcNow
    commentId: P:System.DateTimeOffset.UtcNow
  - type: System.TimeZone.GetUtcOffset(System.DateTime)
    commentId: M:System.TimeZone.GetUtcOffset(System.DateTime)
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: System.DateTime.Year
  commentId: P:System.DateTime.Year
  id: Year
  parent: System.DateTime
  langs:
  - csharp
  - vb
  name: Year
  fullName: System.DateTime.Year
  type: Property
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Year
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 424
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Gets the year component of the date represented by this instance.</p>\n"
  remarks: "\n<p>The<xref href=\"System.DateTime.Year\" data-throw-if-not-resolved=\"false\"></xref> property returns the year of the current instance in the Gregorian calendar. It does not return the year using the default calendar of the current culture. To retrieve the year using a particular calendar, you can call that calendar's <strong>GetYear</strong> method, as the following code shows.</p>System.DateTime.Year#1"
  example:
  - "\n<p>The following example demonstrates the <xref href=\"System.DateTime.Year\" data-throw-if-not-resolved=\"false\"></xref> property.</p>System.DateTime.Minute etc#1"
  syntax:
    content: public int Year { get; }
    content.vb: Public ReadOnly Property Year As Integer
    parameters: []
    return:
      type: System.Int32
      description: "\n<p>The year, between 1 and 9999.</p>\n"
  seealso:
  - type: System.Int32
    commentId: T:System.Int32
  - type: System.Globalization.Calendar
    commentId: T:System.Globalization.Calendar
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.DateTime.Add(System.TimeSpan)
  commentId: M:System.DateTime.Add(System.TimeSpan)
  id: Add(System.TimeSpan)
  parent: System.DateTime
  langs:
  - csharp
  - vb
  name: Add(TimeSpan)
  fullName: System.DateTime.Add(System.TimeSpan)
  type: Method
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Add
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 425
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Returns a new <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> that adds the value of the specified <xref href=\"System.TimeSpan\" data-throw-if-not-resolved=\"false\"></xref> to the value of this instance.</p>\n"
  remarks: "\n<p>You can use the <xref href=\"System.DateTime.Add(System.TimeSpan)\" data-throw-if-not-resolved=\"false\"></xref> method to add more than one kind of time interval (days, hours, minutes, seconds, or milliseconds) in a single operation. This method's behavior is identical to that of the addition operator. The <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> structure also supports specialized addition methods (such as <xref href=\"System.DateTime.AddDays(System.Double)\" data-throw-if-not-resolved=\"false\"></xref>, <xref href=\"System.DateTime.AddHours(System.Double)\" data-throw-if-not-resolved=\"false\"></xref>, and <xref href=\"System.DateTime.AddMinutes(System.Double)\" data-throw-if-not-resolved=\"false\"></xref>) for each time interval.</p>\n<p>The <xref href=\"System.DateTime.Add(System.TimeSpan)\" data-throw-if-not-resolved=\"false\"></xref> method takes into account leap years and the number of days in a month when performing date arithmetic. </p>\n<p>This method does not change the value of this <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref>. Instead, it returns a new <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> whose value is the result of this operation. The <xref href=\"System.DateTime.Kind\" data-throw-if-not-resolved=\"false\"></xref> property of the new <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> instance is the same as that of the current instance.</p>\n"
  example:
  - "\n<p>The following example demonstrates the <xref href=\"System.DateTime.Add(System.TimeSpan)\" data-throw-if-not-resolved=\"false\"></xref> method. It calculates the day of the week that is 36 days (864 hours) from this moment.</p>DateTime.Add#1"
  syntax:
    content: public DateTime Add(TimeSpan value)
    content.vb: Public Function Add(value As TimeSpan) As Date
    parameters:
    - id: value
      type: System.TimeSpan
      description: "\n<p>A positive or negative time interval. </p>\n"
    return:
      type: System.DateTime
      description: "\n<p>An object whose value is the sum of the date and time represented by this instance and the time interval represented by <em>value</em>.</p>\n"
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>The resulting <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> is less than <xref href=\"System.DateTime.MinValue\" data-throw-if-not-resolved=\"false\"></xref> or greater than <xref href=\"System.DateTime.MaxValue\" data-throw-if-not-resolved=\"false\"></xref>. </p>\n"
  seealso:
  - type: System.TimeSpan
    commentId: T:System.TimeSpan
  - type: System.TimeSpan.Add(System.TimeSpan)
    commentId: M:System.TimeSpan.Add(System.TimeSpan)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.DateTime.AddDays(System.Double)
  commentId: M:System.DateTime.AddDays(System.Double)
  id: AddDays(System.Double)
  parent: System.DateTime
  langs:
  - csharp
  - vb
  name: AddDays(Double)
  fullName: System.DateTime.AddDays(System.Double)
  type: Method
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: AddDays
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 426
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Returns a new <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> that adds the specified number of days to the value of this instance.</p>\n"
  remarks: "\n<p>This method does not change the value of this <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref>. Instead, it returns a new <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> whose value is the result of this operation.</p>\n<p>The fractional part of <em>value</em>is the fractional part of a day. For example, 4.5 is equivalent to 4 days, 12 hours, 0 minutes, 0 seconds, 0 milliseconds, and 0 ticks.</p>\n<p>The <em>value</em> parameter is rounded to the nearest millisecond.</p>\n<p>The<xref href=\"System.DateTime.AddDays(System.Double)\" data-throw-if-not-resolved=\"false\"></xref> method takes into account leap years and the number of days in a month when performing date arithmetic.</p>\n"
  example:
  - "\n<p>The following example uses the <xref href=\"System.DateTime.AddDays(System.Double)\" data-throw-if-not-resolved=\"false\"></xref> method to determine the day of the week 36 days after the current date.</p>DateTime.AddDays#1"
  syntax:
    content: public DateTime AddDays(double value)
    content.vb: Public Function AddDays(value As Double) As Date
    parameters:
    - id: value
      type: System.Double
      description: "\n<p>A number of whole and fractional days. The <em>value</em> parameter can be negative or positive. </p>\n"
    return:
      type: System.DateTime
      description: "\n<p>An object whose value is the sum of the date and time represented by this instance and the number of days represented by <em>value</em>.</p>\n"
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>The resulting <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> is less than <xref href=\"System.DateTime.MinValue\" data-throw-if-not-resolved=\"false\"></xref> or greater than <xref href=\"System.DateTime.MaxValue\" data-throw-if-not-resolved=\"false\"></xref>. </p>\n"
  seealso:
  - type: System.Double
    commentId: T:System.Double
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.DateTime.AddHours(System.Double)
  commentId: M:System.DateTime.AddHours(System.Double)
  id: AddHours(System.Double)
  parent: System.DateTime
  langs:
  - csharp
  - vb
  name: AddHours(Double)
  fullName: System.DateTime.AddHours(System.Double)
  type: Method
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: AddHours
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 427
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Returns a new <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> that adds the specified number of hours to the value of this instance.</p>\n"
  remarks: "\n<p>This method does not change the value of this <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref>. Instead, it returns a new <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> whose value is the result of this operation. The <xref href=\"System.DateTime.Kind\" data-throw-if-not-resolved=\"false\"></xref> property of the returned <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> object is the same as that of <em>value</em>.</p>\n<p>The fractional part of <em>value</em> is the fractional part of an hour. For example, 4.5 is equivalent to 4 hours, 30 minutes, 0 seconds, 0 milliseconds, and 0 ticks.</p>\n<p>The <em>value</em> parameter is rounded to the nearest millisecond.</p>\n<p>Converting time intervals of less than an hour to a fraction can involve a loss of precision if the result is a non-terminating repeating decimal. (For example, one minute is 0.016667 of an hour.) If this is problematic, you can use the <xref href=\"System.DateTime.Add(System.TimeSpan)\" data-throw-if-not-resolved=\"false\"></xref> method, which enables you to specify more than one kind of time interval in a single method call and eliminates the need to convert time intervals to fractional parts of an hour.</p>\n"
  example:
  - "\n<p>The following example uses the <xref href=\"System.DateTime.AddHours(System.Double)\" data-throw-if-not-resolved=\"false\"></xref> method to add a number of whole and fractional values to a date and time. It also illustrates the loss of precision caused by passing the method a value that includes a fractional component.</p>System.DateTime.AddHours#1"
  syntax:
    content: public DateTime AddHours(double value)
    content.vb: Public Function AddHours(value As Double) As Date
    parameters:
    - id: value
      type: System.Double
      description: "\n<p>A number of whole and fractional hours. The <em>value</em> parameter can be negative or positive. </p>\n"
    return:
      type: System.DateTime
      description: "\n<p>An object whose value is the sum of the date and time represented by this instance and the number of hours represented by <em>value</em>.</p>\n"
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>The resulting <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> is less than <xref href=\"System.DateTime.MinValue\" data-throw-if-not-resolved=\"false\"></xref> or greater than <xref href=\"System.DateTime.MaxValue\" data-throw-if-not-resolved=\"false\"></xref>. </p>\n"
  seealso:
  - type: System.DateTime.Add(System.TimeSpan)
    commentId: M:System.DateTime.Add(System.TimeSpan)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.DateTime.AddMilliseconds(System.Double)
  commentId: M:System.DateTime.AddMilliseconds(System.Double)
  id: AddMilliseconds(System.Double)
  parent: System.DateTime
  langs:
  - csharp
  - vb
  name: AddMilliseconds(Double)
  fullName: System.DateTime.AddMilliseconds(System.Double)
  type: Method
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: AddMilliseconds
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 428
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Returns a new <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> that adds the specified number of milliseconds to the value of this instance.</p>\n"
  remarks: "\n<p>This method does not change the value of this <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref>. Instead, it returns a new <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> whose value is the result of this operation.</p>\n<p>The fractional part of <em>value</em> is the fractional part of a millisecond. For example, 4.5 is equivalent to 4 milliseconds and 5000 ticks, where one millisecond = 10000 ticks.</p>\n<p>The <em>value</em> parameter is rounded to the nearest integer.</p>\n"
  example:
  - "\n<p>The following example uses the <xref href=\"System.DateTime.AddMilliseconds(System.Double)\" data-throw-if-not-resolved=\"false\"></xref> method to add one millisecond and 1.5 milliseconds to a <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> value. It then displays each new value and displays the difference between it and the original value. The difference is displayed both as a time span and as a number of ticks. The example makes it clear that one millisecond equals 10,000 ticks. It also shows that fractional milliseconds are rounded before performing the addition; the <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> value that results from adding 1.5 milliseconds to the original date is 2 milliseconds greater than the original date.</p>System.DateTime.AddMilliseconds#1"
  syntax:
    content: public DateTime AddMilliseconds(double value)
    content.vb: Public Function AddMilliseconds(value As Double) As Date
    parameters:
    - id: value
      type: System.Double
      description: "\n<p>A number of whole and fractional milliseconds. The <em>value</em> parameter can be negative or positive. Note that this value is rounded to the nearest integer.</p>\n"
    return:
      type: System.DateTime
      description: "\n<p>An object whose value is the sum of the date and time represented by this instance and the number of milliseconds represented by <em>value</em>.</p>\n"
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>The resulting <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> is less than <xref href=\"System.DateTime.MinValue\" data-throw-if-not-resolved=\"false\"></xref> or greater than <xref href=\"System.DateTime.MaxValue\" data-throw-if-not-resolved=\"false\"></xref>. </p>\n"
  seealso:
  - type: System.Double
    commentId: T:System.Double
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.DateTime.AddMinutes(System.Double)
  commentId: M:System.DateTime.AddMinutes(System.Double)
  id: AddMinutes(System.Double)
  parent: System.DateTime
  langs:
  - csharp
  - vb
  name: AddMinutes(Double)
  fullName: System.DateTime.AddMinutes(System.Double)
  type: Method
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: AddMinutes
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 429
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Returns a new <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> that adds the specified number of minutes to the value of this instance.</p>\n"
  remarks: "\n<p>This method does not change the value of this <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref>. Instead, it returns a new <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> whose value is the result of this operation.</p>\n<p>The fractional part of <em>value</em> is the fractional part of a minute. For example, 4.5 is equivalent to 4 minutes, 30 seconds, 0 milliseconds, and 0 ticks.</p>\n<p>The <em>value</em> parameter is rounded to the nearest millisecond.</p>\n"
  example:
  - "\n<p>The following example uses the <xref href=\"System.DateTime.AddMinutes(System.Double)\" data-throw-if-not-resolved=\"false\"></xref> method to add a number of whole and fractional values to a date and time. </p>System.DateTime.AddMinutes#1"
  syntax:
    content: public DateTime AddMinutes(double value)
    content.vb: Public Function AddMinutes(value As Double) As Date
    parameters:
    - id: value
      type: System.Double
      description: "\n<p>A number of whole and fractional minutes. The <em>value</em> parameter can be negative or positive. </p>\n"
    return:
      type: System.DateTime
      description: "\n<p>An object whose value is the sum of the date and time represented by this instance and the number of minutes represented by <em>value</em>.</p>\n"
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>The resulting <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> is less than <xref href=\"System.DateTime.MinValue\" data-throw-if-not-resolved=\"false\"></xref> or greater than <xref href=\"System.DateTime.MaxValue\" data-throw-if-not-resolved=\"false\"></xref>. </p>\n"
  seealso:
  - type: System.Double
    commentId: T:System.Double
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.DateTime.AddMonths(System.Int32)
  commentId: M:System.DateTime.AddMonths(System.Int32)
  id: AddMonths(System.Int32)
  parent: System.DateTime
  langs:
  - csharp
  - vb
  name: AddMonths(Int32)
  fullName: System.DateTime.AddMonths(System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: AddMonths
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 430
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Returns a new <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> that adds the specified number of months to the value of this instance.</p>\n"
  remarks: "\n<p>This method does not change the value of this <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> object. Instead, it returns a new <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> object whose value is the result of this operation.</p>\n<p>The <xref href=\"System.DateTime.AddMonths(System.Int32)\" data-throw-if-not-resolved=\"false\"></xref> method calculates the resulting month and year, taking into account leap years and the number of days in a month, then adjusts the day part of the resulting <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> object. If the resulting day is not a valid day in the resulting month, the last valid day of the resulting month is used. For example, March 31st + 1 month = April 30th, and March 31st - 1 month = February 28 for a non-leap year and February 29 for a leap year.</p>\n<p> The time-of-day part of the resulting <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> object remains the same as this instance. </p>\n"
  example:
  - "\n<p>The following example adds between zero and fifteen months to the last day of December, 2015. In this case, the AddMonths method returns the date of the last day of each month, and successfully handles leap years. </p>System.DateTime.AddMonths#1"
  syntax:
    content: public DateTime AddMonths(int months)
    content.vb: Public Function AddMonths(months As Integer) As Date
    parameters:
    - id: months
      type: System.Int32
      description: "\n<p>A number of months. The <em>months</em> parameter can be negative or positive. </p>\n"
    return:
      type: System.DateTime
      description: "\n<p>An object whose value is the sum of the date and time represented by this instance and <em>months</em>.</p>\n"
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>The resulting <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> is less than <xref href=\"System.DateTime.MinValue\" data-throw-if-not-resolved=\"false\"></xref> or greater than <xref href=\"System.DateTime.MaxValue\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>-or- </p>\n<p>\n<em>months</em> is less than -120,000 or greater than 120,000. </p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.DateTime.AddSeconds(System.Double)
  commentId: M:System.DateTime.AddSeconds(System.Double)
  id: AddSeconds(System.Double)
  parent: System.DateTime
  langs:
  - csharp
  - vb
  name: AddSeconds(Double)
  fullName: System.DateTime.AddSeconds(System.Double)
  type: Method
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: AddSeconds
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 431
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Returns a new <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> that adds the specified number of seconds to the value of this instance.</p>\n"
  remarks: "\n<p>This method does not change the value of this <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref>. Instead, it returns a new <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> whose value is the result of this operation.</p>\n<p>The fractional part of <em>value</em> is the fractional part of a second. For example, 4.5 is equivalent to 4 seconds, 500 milliseconds, and 0 ticks.</p>\n<p>The <em>value</em> parameter is rounded to the nearest millisecond.</p>\n"
  example:
  - "\n<p>The following example uses the<xref href=\"System.DateTime.AddSeconds(System.Double)\" data-throw-if-not-resolved=\"false\"></xref>method to add 30 seconds and the number of seconds in one day to a <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> value. It then displays each new value and displays the difference between it and the original value. The difference is displayed both as a time span and as a number of ticks. </p>System.DateTime.AddSeconds#1"
  syntax:
    content: public DateTime AddSeconds(double value)
    content.vb: Public Function AddSeconds(value As Double) As Date
    parameters:
    - id: value
      type: System.Double
      description: "\n<p>A number of whole and fractional seconds. The <em>value</em> parameter can be negative or positive. </p>\n"
    return:
      type: System.DateTime
      description: "\n<p>An object whose value is the sum of the date and time represented by this instance and the number of seconds represented by <em>value</em>.</p>\n"
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>The resulting <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> is less than <xref href=\"System.DateTime.MinValue\" data-throw-if-not-resolved=\"false\"></xref> or greater than <xref href=\"System.DateTime.MaxValue\" data-throw-if-not-resolved=\"false\"></xref>. </p>\n"
  seealso:
  - type: System.Double
    commentId: T:System.Double
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.DateTime.AddTicks(System.Int64)
  commentId: M:System.DateTime.AddTicks(System.Int64)
  id: AddTicks(System.Int64)
  parent: System.DateTime
  langs:
  - csharp
  - vb
  name: AddTicks(Int64)
  fullName: System.DateTime.AddTicks(System.Int64)
  type: Method
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: AddTicks
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 432
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Returns a new <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> that adds the specified number of ticks to the value of this instance.</p>\n"
  remarks: "\n<p>This method does not change the value of this <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref>. Instead, it returns a new <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> whose value is the result of this operation.</p>\n"
  syntax:
    content: public DateTime AddTicks(long value)
    content.vb: Public Function AddTicks(value As Long) As Date
    parameters:
    - id: value
      type: System.Int64
      description: "\n<p>A number of 100-nanosecond ticks. The <em>value</em> parameter can be positive or negative. </p>\n"
    return:
      type: System.DateTime
      description: "\n<p>An object whose value is the sum of the date and time represented by this instance and the time represented by <em>value</em>.</p>\n"
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>The resulting <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> is less than <xref href=\"System.DateTime.MinValue\" data-throw-if-not-resolved=\"false\"></xref> or greater than <xref href=\"System.DateTime.MaxValue\" data-throw-if-not-resolved=\"false\"></xref>. </p>\n"
  seealso:
  - type: System.Int64
    commentId: T:System.Int64
  - type: System.DateTime.Ticks
    commentId: P:System.DateTime.Ticks
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.DateTime.AddYears(System.Int32)
  commentId: M:System.DateTime.AddYears(System.Int32)
  id: AddYears(System.Int32)
  parent: System.DateTime
  langs:
  - csharp
  - vb
  name: AddYears(Int32)
  fullName: System.DateTime.AddYears(System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: AddYears
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 433
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Returns a new <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> that adds the specified number of years to the value of this instance.</p>\n"
  remarks: "\n<p>This method does not change the value of this <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> object. Instead, it returns a new <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> object whose value is the result of this operation.</p>\n<p>The <xref href=\"System.DateTime.AddYears(System.Int32)\" data-throw-if-not-resolved=\"false\"></xref> method calculates the resulting year taking into account leap years. The month and time-of-day part of the resulting <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> object remains the same as this instance.</p>\n<p>If the current instance represents the leap day in a leap year, the return value depends on the target date:</p>\n<ul><li>\n<p>If <em>value</em> + <xref href=\"System.DateTime.Year\" data-throw-if-not-resolved=\"false\"></xref> is also a leap year, the return value represents the leap day in that year. For example, if four years is added to February 29, 2012, the date returned is February 29, 2016. </p>\n</li><li>\n<p>If <em>value</em> + <xref href=\"System.DateTime.Year\" data-throw-if-not-resolved=\"false\"></xref> is not a leap year, the return value represents the day before the leap day in that year. For example, if one year is added to February 29, 2012, the date returned is February 28, 2013. </p>\n</li></ul>\n<p>The following example illustrates using the <xref href=\"System.DateTime.AddYears(System.Int32)\" data-throw-if-not-resolved=\"false\"></xref> method with a <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> value that represents a leap year day. It displays the date for the fifteen years prior to and the fifteen years that follow February 29, 2000. </p>System.DateTime.AddYears#1"
  syntax:
    content: public DateTime AddYears(int value)
    content.vb: Public Function AddYears(value As Integer) As Date
    parameters:
    - id: value
      type: System.Int32
      description: "\n<p>A number of years. The <em>value</em> parameter can be negative or positive. </p>\n"
    return:
      type: System.DateTime
      description: "\n<p>An object whose value is the sum of the date and time represented by this instance and the number of years represented by <em>value</em>.</p>\n"
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>\n<em>value</em> or the resulting <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> is less than <xref href=\"System.DateTime.MinValue\" data-throw-if-not-resolved=\"false\"></xref> or greater than <xref href=\"System.DateTime.MaxValue\" data-throw-if-not-resolved=\"false\"></xref>. </p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.DateTime.Compare(System.DateTime,System.DateTime)
  commentId: M:System.DateTime.Compare(System.DateTime,System.DateTime)
  id: Compare(System.DateTime,System.DateTime)
  parent: System.DateTime
  langs:
  - csharp
  - vb
  name: Compare(DateTime, DateTime)
  fullName: System.DateTime.Compare(System.DateTime, System.DateTime)
  type: Method
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Compare
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 434
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Compares two instances of <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> and returns an integer that indicates whether the first instance is earlier than, the same as, or later than the second instance.</p>\n"
  remarks: "\n<p>To determine the relationship of <em>t1</em> to <em>t2</em>, the <xref href=\"System.DateTime.Compare(System.DateTime,System.DateTime)\" data-throw-if-not-resolved=\"false\"></xref> method compares the <xref href=\"System.DateTime.Ticks\" data-throw-if-not-resolved=\"false\"></xref> property of <em>t1</em> and <em>t2</em> but ignores their <xref href=\"System.DateTime.Kind\" data-throw-if-not-resolved=\"false\"></xref> property. Before comparing <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> objects, ensure that the objects represent times in the same time zone.</p>\n"
  example:
  - "\n<p>The following example demonstrates the<xref href=\"System.DateTime.Compare(System.DateTime,System.DateTime)\" data-throw-if-not-resolved=\"false\"></xref> method.</p>System.DateTime.Compare#1"
  syntax:
    content: public static int Compare(DateTime t1, DateTime t2)
    content.vb: Public Shared Function Compare(t1 As Date, t2 As Date) As Integer
    parameters:
    - id: t1
      type: System.DateTime
      description: "\n<p>The first object to compare. </p>\n"
    - id: t2
      type: System.DateTime
      description: "\n<p>The second object to compare. </p>\n"
    return:
      type: System.Int32
      description: "\n<p>A signed number indicating the relative values of <em>t1</em> and <em>t2</em>.</p>\n<p>Value Type </p>\n<p>Condition </p>\n<table><tbody><tr><td>\n<p>Less than zero </p>\n</td><td>\n<p>\n<em>t1</em> is earlier than <em>t2</em>. </p>\n</td></tr><tr><td>\n<p>Zero </p>\n</td><td>\n<p>\n<em>t1</em> is the same as <em>t2</em>. </p>\n</td></tr><tr><td>\n<p>Greater than zero </p>\n</td><td>\n<p>\n<em>t1</em> is later than <em>t2</em>. </p>\n</td></tr></tbody></table>\n"
  seealso:
  - type: System.DateTime.CompareTo(System.Object)
    commentId: M:System.DateTime.CompareTo(System.Object)
  - type: System.DateTime.Equals(System.Object)
    commentId: M:System.DateTime.Equals(System.Object)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.DateTime.CompareTo(System.DateTime)
  commentId: M:System.DateTime.CompareTo(System.DateTime)
  id: CompareTo(System.DateTime)
  parent: System.DateTime
  langs:
  - csharp
  - vb
  name: CompareTo(DateTime)
  fullName: System.DateTime.CompareTo(System.DateTime)
  type: Method
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CompareTo
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 435
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Compares the value of this instance to a specified <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> value and returns an integer that indicates whether this instance is earlier than, the same as, or later than the specified <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> value.</p>\n"
  remarks: "\n<p>To determine the relationship of the current instance to <em>value</em>, the <xref href=\"System.DateTime.CompareTo(System.DateTime)\" data-throw-if-not-resolved=\"false\"></xref> method compares the <xref href=\"System.DateTime.Ticks\" data-throw-if-not-resolved=\"false\"></xref> property of the current instance and <em>value</em> but ignores their <xref href=\"System.DateTime.Kind\" data-throw-if-not-resolved=\"false\"></xref> property.  Before comparing <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> objects, make sure that the objects represent times in the same time zone. You can do this by comparing the values of their <xref href=\"System.DateTime.Kind\" data-throw-if-not-resolved=\"false\"></xref> properties.</p>\n<p>This method implements the <xref href=\"System.IComparable`1\" data-throw-if-not-resolved=\"false\"></xref> interface and performs slightly better than the <xref href=\"System.DateTime.CompareTo(System.Object)\" data-throw-if-not-resolved=\"false\"></xref> method overload because it does not have to convert the <em>value</em> parameter to an object.</p>\n"
  example:
  - "\n<p>The following example instantiates three <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> objects, one that represents today's date, another that represents the date one year previously, and a third that represents the date one year in the future. It then calls the <xref href=\"System.DateTime.CompareTo(System.DateTime)\" data-throw-if-not-resolved=\"false\"></xref> method and displays the result of the comparison.</p>DateTime.CompareTo.2#1<p></p>"
  syntax:
    content: public int CompareTo(DateTime value)
    content.vb: Public Function CompareTo(value As Date) As Integer
    parameters:
    - id: value
      type: System.DateTime
      description: "\n<p>The object to compare to the current instance. </p>\n"
    return:
      type: System.Int32
      description: "\n<p>A signed number indicating the relative values of this instance and the <em>value</em> parameter.</p>\n<p>Value </p>\n<p>Description </p>\n<table><tbody><tr><td>\n<p>Less than zero </p>\n</td><td>\n<p>This instance is earlier than <em>value</em>. </p>\n</td></tr><tr><td>\n<p>Zero </p>\n</td><td>\n<p>This instance is the same as <em>value</em>. </p>\n</td></tr><tr><td>\n<p>Greater than zero </p>\n</td><td>\n<p>This instance is later than <em>value</em>. </p>\n</td></tr></tbody></table>\n"
  seealso:
  - type: System.DateTime.Compare(System.DateTime,System.DateTime)
    commentId: M:System.DateTime.Compare(System.DateTime,System.DateTime)
  - type: System.DateTime.Equals(System.Object)
    commentId: M:System.DateTime.Equals(System.Object)
  implements:
  - System.IComparable{System.DateTime}.CompareTo(System.DateTime)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.DateTime.DaysInMonth(System.Int32,System.Int32)
  commentId: M:System.DateTime.DaysInMonth(System.Int32,System.Int32)
  id: DaysInMonth(System.Int32,System.Int32)
  parent: System.DateTime
  langs:
  - csharp
  - vb
  name: DaysInMonth(Int32, Int32)
  fullName: System.DateTime.DaysInMonth(System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: DaysInMonth
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 436
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Returns the number of days in the specified month and year.</p>\n"
  remarks: "\n<p>The<xref href=\"System.DateTime.DaysInMonth(System.Int32,System.Int32)\" data-throw-if-not-resolved=\"false\"></xref> method always interprets <em>month</em> and <em>year</em> as the month and year of the Gregorian calendar even if the Gregorian calendar is not the current culture's current calendar. To get the number of days in a specified month of a particular calendar, call that calendar's <xref href=\"System.Globalization.Calendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)\" data-throw-if-not-resolved=\"false\"></xref> method.</p>\n"
  example:
  - "\n<p>The following example demonstrates how to use the <xref href=\"System.DateTime.DaysInMonth(System.Int32,System.Int32)\" data-throw-if-not-resolved=\"false\"></xref> method to determine the number of days in July 2001, February 1998 (a non-leap year), and February 1996 (a leap year).</p>DateTime.DaysInMonth#1"
  - "\n<p>The following example displays the number of days in each month of a year specified in an integer array. </p>System.DateTime.DaysInMonth#1"
  syntax:
    content: public static int DaysInMonth(int year, int month)
    content.vb: Public Shared Function DaysInMonth(year As Integer, month As Integer) As Integer
    parameters:
    - id: year
      type: System.Int32
      description: "\n<p>The year. </p>\n"
    - id: month
      type: System.Int32
      description: "\n<p>The month (a number ranging from 1 to 12). </p>\n"
    return:
      type: System.Int32
      description: "\n<p>The number of days in <em>month</em> for the specified <em>year</em>.</p>\n<p>For example, if <em>month</em> equals 2 for February, the return value is 28 or 29 depending upon whether <em>year</em> is a leap year.</p>\n"
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>\n<em>month</em> is less than 1 or greater than 12.</p>\n<p>-or-</p>\n<p>\n<em>year</em> is less than 1 or greater than 9999.</p>\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.DateTime.Equals(System.DateTime)
  commentId: M:System.DateTime.Equals(System.DateTime)
  id: Equals(System.DateTime)
  parent: System.DateTime
  langs:
  - csharp
  - vb
  name: Equals(DateTime)
  fullName: System.DateTime.Equals(System.DateTime)
  type: Method
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Equals
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 437
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Returns a value indicating whether the value of this instance is equal to the value of the specified <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> instance.</p>\n"
  remarks: "\n<p>The current instance and <em>value</em> are equal if their <xref href=\"System.DateTime.Ticks\" data-throw-if-not-resolved=\"false\"></xref> property values are equal. Their <xref href=\"System.DateTime.Kind\" data-throw-if-not-resolved=\"false\"></xref> property values are not considered in the test for equality. </p>\n<p>This method implements the <xref href=\"System.IEquatable`1\" data-throw-if-not-resolved=\"false\"></xref> interface, and performs slightly better than the <xref href=\"System.DateTime.Equals(System.Object)\" data-throw-if-not-resolved=\"false\"></xref> method because the <em>value</em> parameter does not have to be converted to an object. </p>\n"
  example:
  - "\n<p>The following example demonstrates the <xref href=\"System.DateTime.Equals(System.DateTime)\" data-throw-if-not-resolved=\"false\"></xref> method.</p>System.DateTime.Equals-Instance#1"
  syntax:
    content: public bool Equals(DateTime value)
    content.vb: Public Function Equals(value As Date) As Boolean
    parameters:
    - id: value
      type: System.DateTime
      description: "\n<p>The object to compare to this instance. </p>\n"
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if the <em>value</em> parameter equals the value of this instance; otherwise, <strong>false</strong>.</p>\n"
  seealso:
  - type: System.DateTime.Equals(System.Object)
    commentId: M:System.DateTime.Equals(System.Object)
  - type: System.DateTime.Compare(System.DateTime,System.DateTime)
    commentId: M:System.DateTime.Compare(System.DateTime,System.DateTime)
  - type: System.DateTime.CompareTo(System.Object)
    commentId: M:System.DateTime.CompareTo(System.Object)
  implements:
  - System.IEquatable{System.DateTime}.Equals(System.DateTime)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.DateTime.Equals(System.DateTime,System.DateTime)
  commentId: M:System.DateTime.Equals(System.DateTime,System.DateTime)
  id: Equals(System.DateTime,System.DateTime)
  parent: System.DateTime
  langs:
  - csharp
  - vb
  name: Equals(DateTime, DateTime)
  fullName: System.DateTime.Equals(System.DateTime, System.DateTime)
  type: Method
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Equals
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 438
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Returns a value indicating whether two <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> instances  have the same date and time value.</p>\n"
  remarks: "\n<p>\n<em>t1</em> and <em>t2</em> are equal if their <xref href=\"System.DateTime.Ticks\" data-throw-if-not-resolved=\"false\"></xref> property values are equal. Their<xref href=\"System.DateTime.Kind\" data-throw-if-not-resolved=\"false\"></xref> property values are not considered in the test for equality.</p>\n"
  example:
  - "\n<p>The following example demonstrates the <xref href=\"System.DateTime.Equals(System.DateTime,System.DateTime)\" data-throw-if-not-resolved=\"false\"></xref> method.</p>DateTime.Equals#1"
  syntax:
    content: public static bool Equals(DateTime t1, DateTime t2)
    content.vb: Public Shared Function Equals(t1 As Date, t2 As Date) As Boolean
    parameters:
    - id: t1
      type: System.DateTime
      description: "\n<p>The first object to compare. </p>\n"
    - id: t2
      type: System.DateTime
      description: "\n<p>The second object to compare. </p>\n"
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if the two values are equal; otherwise, <strong>false</strong>.</p>\n"
  seealso:
  - type: System.Boolean
    commentId: T:System.Boolean
  - type: System.DateTime.Compare(System.DateTime,System.DateTime)
    commentId: M:System.DateTime.Compare(System.DateTime,System.DateTime)
  - type: System.DateTime.CompareTo(System.Object)
    commentId: M:System.DateTime.CompareTo(System.Object)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.DateTime.Equals(System.Object)
  commentId: M:System.DateTime.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.DateTime
  langs:
  - csharp
  - vb
  name: Equals(Object)
  fullName: System.DateTime.Equals(System.Object)
  type: Method
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Equals
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 439
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Returns a value indicating whether this instance is equal to a specified object.</p>\n"
  remarks: "\n<p>The current instance and <em>value</em> are equal if their <xref href=\"System.DateTime.Ticks\" data-throw-if-not-resolved=\"false\"></xref> property values are equal. Their <xref href=\"System.DateTime.Kind\" data-throw-if-not-resolved=\"false\"></xref> property values are not considered in the test for equality.</p>\n"
  example:
  - "\n<p>The following example demonstrates the <xref href=\"System.DateTime.Equals(System.Object)\" data-throw-if-not-resolved=\"false\"></xref> method.</p>System.DateTime.Equals-Instance#1"
  syntax:
    content: public override bool Equals(object value)
    content.vb: Public Overrides Function Equals(value As Object) As Boolean
    parameters:
    - id: value
      type: System.Object
      description: "\n<p>The object to compare to this instance. </p>\n"
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if <em>value</em> is an instance of <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> and equals the value of this instance; otherwise, <strong>false</strong>.</p>\n"
  overridden: System.ValueType.Equals(System.Object)
  seealso:
  - type: System.DateTime.Compare(System.DateTime,System.DateTime)
    commentId: M:System.DateTime.Compare(System.DateTime,System.DateTime)
  - type: System.DateTime.CompareTo(System.Object)
    commentId: M:System.DateTime.CompareTo(System.Object)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.DateTime.FromBinary(System.Int64)
  commentId: M:System.DateTime.FromBinary(System.Int64)
  id: FromBinary(System.Int64)
  parent: System.DateTime
  langs:
  - csharp
  - vb
  name: FromBinary(Int64)
  fullName: System.DateTime.FromBinary(System.Int64)
  type: Method
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: FromBinary
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 440
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Deserializes a 64-bit binary value and recreates an original serialized <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  remarks: "\n<p>Use the <xref href=\"System.DateTime.ToBinary\" data-throw-if-not-resolved=\"false\"></xref> method to convert the value of the current <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> object to a binary value. Subsequently, use the binary value and the <xref href=\"System.DateTime.FromBinary(System.Int64)\" data-throw-if-not-resolved=\"false\"></xref> method to recreate the original <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n<p>In some cases, the <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> value returned by the <xref href=\"System.DateTime.FromBinary(System.Int64)\" data-throw-if-not-resolved=\"false\"></xref> method is not identical to the original <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> value supplied to the <xref href=\"System.DateTime.ToBinary\" data-throw-if-not-resolved=\"false\"></xref> method. For more information, see the next section, \"Local Time Adjustment\". </p>\n"
  example:
  - 
  syntax:
    content: public static DateTime FromBinary(long dateData)
    content.vb: Public Shared Function FromBinary(dateData As Long) As Date
    parameters:
    - id: dateData
      type: System.Int64
      description: "\n<p>A 64-bit signed integer that encodes the <xref href=\"System.DateTime.Kind\" data-throw-if-not-resolved=\"false\"></xref> property in a 2-bit field and the <xref href=\"System.DateTime.Ticks\" data-throw-if-not-resolved=\"false\"></xref> property in a 62-bit field. </p>\n"
    return:
      type: System.DateTime
      description: "\n<p>An object that is equivalent to the <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> object that was serialized by the <xref href=\"System.DateTime.ToBinary\" data-throw-if-not-resolved=\"false\"></xref> method.</p>\n"
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<p>\n<em>dateData</em> is less than <xref href=\"System.DateTime.MinValue\" data-throw-if-not-resolved=\"false\"></xref> or greater than <xref href=\"System.DateTime.MaxValue\" data-throw-if-not-resolved=\"false\"></xref>. </p>\n"
  seealso:
  - type: System.DateTime.ToBinary
    commentId: M:System.DateTime.ToBinary
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.DateTime.FromFileTime(System.Int64)
  commentId: M:System.DateTime.FromFileTime(System.Int64)
  id: FromFileTime(System.Int64)
  parent: System.DateTime
  langs:
  - csharp
  - vb
  name: FromFileTime(Int64)
  fullName: System.DateTime.FromFileTime(System.Int64)
  type: Method
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: FromFileTime
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 441
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Converts the specified Windows file time to an equivalent local time.</p>\n"
  remarks: "\n<p>A Windows file time is a 64-bit value that represents the number of 100-nanosecond intervals that have elapsed since 12:00 midnight, January 1, 1601 A.D. (C.E.) Coordinated Universal Time (UTC). Windows uses a file time to record when an application creates, accesses, or writes to a file. </p>\n<p>The <em>fileTime</em> parameter specifies a file time expressed in 100-nanosecond ticks.</p>\n<p>Starting with the .NET Framework version 2.0, the return value is a <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> whose <xref href=\"System.DateTime.Kind\" data-throw-if-not-resolved=\"false\"></xref> property is <xref href=\"System.DateTimeKind.Local\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  example:
  - "\n<p>The following example demonstrates the <xref href=\"System.DateTime.FromFileTime(System.Int64)\" data-throw-if-not-resolved=\"false\"></xref> method.</p>DateTime.FromFileTime#1"
  syntax:
    content: public static DateTime FromFileTime(long fileTime)
    content.vb: Public Shared Function FromFileTime(fileTime As Long) As Date
    parameters:
    - id: fileTime
      type: System.Int64
      description: "\n<p>A Windows file time expressed in ticks. </p>\n"
    return:
      type: System.DateTime
      description: "\n<p>An object that represents the local time equivalent of the date and time represented by the <em>fileTime</em> parameter.</p>\n"
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>\n<em>fileTime</em> is less than 0 or represents a time greater than <xref href=\"System.DateTime.MaxValue\" data-throw-if-not-resolved=\"false\"></xref>. </p>\n"
  seealso:
  - type: System.DateTime.ToUniversalTime
    commentId: M:System.DateTime.ToUniversalTime
  - type: System.TimeZone.GetUtcOffset(System.DateTime)
    commentId: M:System.TimeZone.GetUtcOffset(System.DateTime)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.DateTime.FromFileTimeUtc(System.Int64)
  commentId: M:System.DateTime.FromFileTimeUtc(System.Int64)
  id: FromFileTimeUtc(System.Int64)
  parent: System.DateTime
  langs:
  - csharp
  - vb
  name: FromFileTimeUtc(Int64)
  fullName: System.DateTime.FromFileTimeUtc(System.Int64)
  type: Method
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: FromFileTimeUtc
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 442
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Converts the specified Windows file time to an equivalent UTC time.</p>\n"
  remarks: "\n<p>A Windows file time is a 64-bit value that represents the number of 100-nanosecond intervals that have elapsed since 12:00 midnight, January 1, 1601 A.D. (C.E.) Coordinated Universal Time (UTC). Windows uses a file time to record when an application creates, accesses, or writes to a file. </p>\n<p>The <em>fileTime</em> parameter specifies a file time expressed in 100-nanosecond ticks.</p>\n<p>Starting with the .NET Framework version 2.0, the return value is a <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> whose <xref href=\"System.DateTime.Kind\" data-throw-if-not-resolved=\"false\"></xref> property is <xref href=\"System.DateTimeKind.Utc\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: public static DateTime FromFileTimeUtc(long fileTime)
    content.vb: Public Shared Function FromFileTimeUtc(fileTime As Long) As Date
    parameters:
    - id: fileTime
      type: System.Int64
      description: "\n<p>A Windows file time expressed in ticks. </p>\n"
    return:
      type: System.DateTime
      description: "\n<p>An object that represents the UTC time equivalent of the date and time represented by the <em>fileTime</em> parameter.</p>\n"
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>\n<em>fileTime</em> is less than 0 or represents a time greater than <xref href=\"System.DateTime.MaxValue\" data-throw-if-not-resolved=\"false\"></xref>. </p>\n"
  seealso:
  - type: System.DateTime.ToUniversalTime
    commentId: M:System.DateTime.ToUniversalTime
  - type: System.TimeZone.GetUtcOffset(System.DateTime)
    commentId: M:System.TimeZone.GetUtcOffset(System.DateTime)
  - type: System.DateTime.FromFileTime(System.Int64)
    commentId: M:System.DateTime.FromFileTime(System.Int64)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.DateTime.GetDateTimeFormats
  commentId: M:System.DateTime.GetDateTimeFormats
  id: GetDateTimeFormats
  parent: System.DateTime
  langs:
  - csharp
  - vb
  name: GetDateTimeFormats()
  fullName: System.DateTime.GetDateTimeFormats()
  type: Method
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetDateTimeFormats
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 443
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Converts the value of this instance to all the string representations supported by the standard date and time format specifiers.</p>\n"
  remarks: "\n<p>The string array returned by the <xref href=\"System.DateTime.GetDateTimeFormats\" data-throw-if-not-resolved=\"false\"></xref> method is equivalent to combining the string arrays returned by separate calls to the <xref href=\"System.DateTime.GetDateTimeFormats(System.Char)\" data-throw-if-not-resolved=\"false\"></xref> method with the \"d\", \"D\", \"f\", \"F\", \"g\", \"G\", \"m\", \"o\", \"r\", \"s\", \"t\", \"T\", \"u\", \"U\", and \"y\" standard format strings. For more information about standard format specifiers, see Standard Date and Time Format Strings.</p>\n<p>Each element of the return value is formatted using information from the current culture. For more information about culture-specific formatting information for the current culture, see <xref href=\"System.Globalization.CultureInfo.CurrentCulture\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>Because this method uses culture-sensitive data, you should not assume that multiple calls to the method will return identical data. The data returned by this method can change if the current culture changes, the user overrides individual cultural settings, or an update occurs to the system's cultural data. </p>\n"
  example:
  - "\n<p>The following example demonstrates the <xref href=\"System.DateTime.GetDateTimeFormats\" data-throw-if-not-resolved=\"false\"></xref> method. It displays the string representation of a date using all possible standard date and time formats in the computer's current culture, which in this case is en-US.</p>DateTime.GetDateTimeFormats#1<p>The example displays the following output:</p><pre><code>7/28/2009\n7/28/09\n07/28/09\n07/28/2009\n09/07/28\n2009-07-28\n28-Jul-09\nTuesday, July 28, 2009\nJuly 28, 2009\nTuesday, 28 July, 2009\n28 July, 2009\nTuesday, July 28, 2009 5:23 AM\nTuesday, July 28, 2009 05:23 AM\nTuesday, July 28, 2009 5:23\nTuesday, July 28, 2009 05:23\nJuly 28, 2009 5:23 AM\nJuly 28, 2009 05:23 AM\nJuly 28, 2009 5:23\nJuly 28, 2009 05:23\nTuesday, 28 July, 2009 5:23 AM\nTuesday, 28 July, 2009 05:23 AM\nTuesday, 28 July, 2009 5:23\nTuesday, 28 July, 2009 05:23\n28 July, 2009 5:23 AM\n28 July, 2009 05:23 AM\n28 July, 2009 5:23\n28 July, 2009 05:23\nTuesday, July 28, 2009 5:23:15 AM\nTuesday, July 28, 2009 05:23:15 AM\nTuesday, July 28, 2009 5:23:15\nTuesday, July 28, 2009 05:23:15\nJuly 28, 2009 5:23:15 AM\nJuly 28, 2009 05:23:15 AM\nJuly 28, 2009 5:23:15\nJuly 28, 2009 05:23:15\nTuesday, 28 July, 2009 5:23:15 AM\nTuesday, 28 July, 2009 05:23:15 AM\nTuesday, 28 July, 2009 5:23:15\nTuesday, 28 July, 2009 05:23:15\n28 July, 2009 5:23:15 AM\n28 July, 2009 05:23:15 AM\n28 July, 2009 5:23:15\n28 July, 2009 05:23:15\n7/28/2009 5:23 AM\n7/28/2009 05:23 AM\n7/28/2009 5:23\n7/28/2009 05:23\n7/28/09 5:23 AM\n7/28/09 05:23 AM\n7/28/09 5:23\n7/28/09 05:23\n07/28/09 5:23 AM\n07/28/09 05:23 AM\n07/28/09 5:23\n07/28/09 05:23\n07/28/2009 5:23 AM\n07/28/2009 05:23 AM\n07/28/2009 5:23\n07/28/2009 05:23\n09/07/28 5:23 AM\n09/07/28 05:23 AM\n09/07/28 5:23\n09/07/28 05:23\n2009-07-28 5:23 AM\n2009-07-28 05:23 AM\n2009-07-28 5:23\n2009-07-28 05:23\n28-Jul-09 5:23 AM\n28-Jul-09 05:23 AM\n28-Jul-09 5:23\n28-Jul-09 05:23\n7/28/2009 5:23:15 AM\n7/28/2009 05:23:15 AM\n7/28/2009 5:23:15\n7/28/2009 05:23:15\n7/28/09 5:23:15 AM\n7/28/09 05:23:15 AM\n7/28/09 5:23:15\n7/28/09 05:23:15\n07/28/09 5:23:15 AM\n07/28/09 05:23:15 AM\n07/28/09 5:23:15\n07/28/09 05:23:15\n07/28/2009 5:23:15 AM\n07/28/2009 05:23:15 AM\n07/28/2009 5:23:15\n07/28/2009 05:23:15\n09/07/28 5:23:15 AM\n09/07/28 05:23:15 AM\n09/07/28 5:23:15\n09/07/28 05:23:15\n2009-07-28 5:23:15 AM\n2009-07-28 05:23:15 AM\n2009-07-28 5:23:15\n2009-07-28 05:23:15\n28-Jul-09 5:23:15 AM\n28-Jul-09 05:23:15 AM\n28-Jul-09 5:23:15\n28-Jul-09 05:23:15\nJuly 28\nJuly 28\n2009-07-28T05:23:15.0160000\n2009-07-28T05:23:15.0160000\nTue, 28 Jul 2009 05:23:15 GMT\nTue, 28 Jul 2009 05:23:15 GMT\n2009-07-28T05:23:15\n5:23 AM\n05:23 AM\n5:23\n05:23\n5:23:15 AM\n05:23:15 AM\n5:23:15\n05:23:15\n2009-07-28 05:23:15Z\nTuesday, July 28, 2009 12:23:15 PM\nTuesday, July 28, 2009 12:23:15 PM\nTuesday, July 28, 2009 12:23:15\nTuesday, July 28, 2009 12:23:15\nJuly 28, 2009 12:23:15 PM\nJuly 28, 2009 12:23:15 PM\nJuly 28, 2009 12:23:15\nJuly 28, 2009 12:23:15\nTuesday, 28 July, 2009 12:23:15 PM\nTuesday, 28 July, 2009 12:23:15 PM\nTuesday, 28 July, 2009 12:23:15\nTuesday, 28 July, 2009 12:23:15\n28 July, 2009 12:23:15 PM\n28 July, 2009 12:23:15 PM\n28 July, 2009 12:23:15\n28 July, 2009 12:23:15\nJuly, 2009\nJuly, 2009</code></pre>"
  syntax:
    content: public string[] GetDateTimeFormats()
    content.vb: Public Function GetDateTimeFormats As String()
    return:
      type: System.String[]
      description: "\n<p>A string array where each element is the representation of the value of this instance formatted with one of the standard date and time format specifiers.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.DateTime.GetDateTimeFormats(System.Char)
  commentId: M:System.DateTime.GetDateTimeFormats(System.Char)
  id: GetDateTimeFormats(System.Char)
  parent: System.DateTime
  langs:
  - csharp
  - vb
  name: GetDateTimeFormats(Char)
  fullName: System.DateTime.GetDateTimeFormats(System.Char)
  type: Method
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetDateTimeFormats
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 444
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Converts the value of this instance to all the string representations supported by the specified standard date and time format specifier.</p>\n"
  remarks: "\n<p>The <em>format</em> parameter can be any of the standard date and time format specifiers. These include d, D, f, F, g, G, M (or m), O (or o), R (or r), s, t, T, u, U, and Y (or y). For more information, see Standard Date and Time Format Strings.</p>\n<p>Each element of the return value is formatted using information from the current culture. For more information about culture-specific formatting information for the current culture, see <xref href=\"System.Globalization.CultureInfo.CurrentCulture\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>Because this method uses culture-sensitive data, you should not assume that multiple calls to the method will return identical data. The data returned by this method can change if the current culture changes, the user overrides individual cultural settings, or an update occurs to the system's cultural data. </p>\n"
  example:
  - "\n<p>The following example demonstrates the <xref href=\"System.DateTime.GetDateTimeFormats(System.Char)\" data-throw-if-not-resolved=\"false\"></xref> method. It displays the string representation of a date using the long date format specifier (\"D\") for the current culture.</p>DateTime.GetDateTimeFormats#3"
  syntax:
    content: public string[] GetDateTimeFormats(char format)
    content.vb: Public Function GetDateTimeFormats(format As Char) As String()
    parameters:
    - id: format
      type: System.Char
      description: "\n<p>A standard date and time format string (see Remarks). </p>\n"
    return:
      type: System.String[]
      description: "\n<p>A string array where each element is the representation of the value of this instance formatted with the <em>format</em> standard date and time format specifier.</p>\n"
  exceptions:
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "\n<p>\n<em>format</em> is not a valid standard date and time format specifier character.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.DateTime.GetDateTimeFormats(System.Char,System.IFormatProvider)
  commentId: M:System.DateTime.GetDateTimeFormats(System.Char,System.IFormatProvider)
  id: GetDateTimeFormats(System.Char,System.IFormatProvider)
  parent: System.DateTime
  langs:
  - csharp
  - vb
  name: GetDateTimeFormats(Char, IFormatProvider)
  fullName: System.DateTime.GetDateTimeFormats(System.Char, System.IFormatProvider)
  type: Method
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetDateTimeFormats
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 445
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Converts the value of this instance to all the string representations supported by the specified standard date and time format specifier and culture-specific formatting information.</p>\n"
  remarks: "\n<p>The format parameter can be any of the standard date and time format specifiers. These include d, D, f, F, g, G, M (or m), O (or o), R (or r), s, t, T, u, U, and Y (or y). For more information, see Standard Date and Time Format Strings.</p>\n<p>Each element of the return value is formatted using culture-specific information supplied by <em>provider</em>.</p>\n<p>Because this method uses culture-sensitive data, you should not assume that multiple calls to the method will return identical data unless <em>provider</em> is a <xref href=\"System.Globalization.CultureInfo\" data-throw-if-not-resolved=\"false\"></xref> object that represents the invariant culture. The data returned by this method can change if the user overrides the individual cultural settings of <em>provider</em> or if an update occurs to the system's cultural data for <em>provider</em>. </p>\n"
  example:
  - "\n<p>The following example demonstrates the <xref href=\"System.DateTime.GetDateTimeFormats(System.Char,System.IFormatProvider)\" data-throw-if-not-resolved=\"false\"></xref> method. It displays the string representations of a date using the short date format specifier (\"d\") for the fr-FR culture.</p>DateTime.GetDateTimeFormats#4"
  syntax:
    content: public string[] GetDateTimeFormats(char format, IFormatProvider provider)
    content.vb: Public Function GetDateTimeFormats(format As Char, provider As IFormatProvider) As String()
    parameters:
    - id: format
      type: System.Char
      description: "\n<p>A date and time format string (see Remarks). </p>\n"
    - id: provider
      type: System.IFormatProvider
      description: "\n<p>An object that supplies culture-specific formatting information about this instance. </p>\n"
    return:
      type: System.String[]
      description: "\n<p>A string array where each element is the representation of the value of this instance formatted with one of the standard date and time format specifiers.</p>\n"
  exceptions:
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "\n<p>\n<em>format</em> is not a valid standard date and time format specifier character.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.DateTime.GetDateTimeFormats(System.IFormatProvider)
  commentId: M:System.DateTime.GetDateTimeFormats(System.IFormatProvider)
  id: GetDateTimeFormats(System.IFormatProvider)
  parent: System.DateTime
  langs:
  - csharp
  - vb
  name: GetDateTimeFormats(IFormatProvider)
  fullName: System.DateTime.GetDateTimeFormats(System.IFormatProvider)
  type: Method
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetDateTimeFormats
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 446
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Converts the value of this instance to all the string representations supported by the standard date and time format specifiers and the specified culture-specific formatting information.</p>\n"
  remarks: "\n<p>The string array returned by the <xref href=\"System.DateTime.GetDateTimeFormats(System.IFormatProvider)\" data-throw-if-not-resolved=\"false\"></xref> method is equivalent to combining the string arrays returned by separate calls to the <xref href=\"System.DateTime.GetDateTimeFormats(System.Char,System.IFormatProvider)\" data-throw-if-not-resolved=\"false\"></xref> method with the \"d\", \"D\", \"f\", \"F\", \"g\", \"G\", \"m\", \"o\", \"r\", \"s\", \"t\", \"T\", \"u\", \"U\", and \"y\" standard format strings. For more information about standard format specifiers, see Standard Date and Time Format Strings.</p>\n<p>Each element of the return value is formatted using culture-specific information supplied by <em>provider</em>.</p>\n<p>Because this method uses culture-sensitive data, you should not assume that multiple calls to the method will return identical data unless <em>provider</em> is a <xref href=\"System.Globalization.CultureInfo\" data-throw-if-not-resolved=\"false\"></xref> object that represents the invariant culture. The data returned by this method can change if the user overrides the individual cultural settings of <em>provider</em>or if an update occurs to the system's cultural data for <em>provider</em>. </p>\n"
  example:
  - "\n<p>The following example demonstrates the <xref href=\"System.DateTime.GetDateTimeFormats(System.IFormatProvider)\" data-throw-if-not-resolved=\"false\"></xref>method. It displays the string representation of a date using all possible standard date and time formats for the fr-FR culture.</p>DateTime.GetDateTimeFormats#2<p>The example displays the following output:</p><pre><code>28/07/2009\n28/07/09\n28.07.09\n28-07-09\n2009-07-28\nmardi 28 juillet 2009\n28 juil. 09\n28 juillet 2009\nmardi 28 juillet 2009 05:23\nmardi 28 juillet 2009 5:23\nmardi 28 juillet 2009 05.23\nmardi 28 juillet 2009 05 h 23\n28 juil. 09 05:23\n28 juil. 09 5:23\n28 juil. 09 05.23\n28 juil. 09 05 h 23\n28 juillet 2009 05:23\n28 juillet 2009 5:23\n28 juillet 2009 05.23\n28 juillet 2009 05 h 23\nmardi 28 juillet 2009 05:23:15\nmardi 28 juillet 2009 5:23:15\nmardi 28 juillet 2009 05.23\nmardi 28 juillet 2009 05 h 23\n28 juil. 09 05:23:15\n28 juil. 09 5:23:15\n28 juil. 09 05.23\n28 juil. 09 05 h 23\n28 juillet 2009 05:23:15\n28 juillet 2009 5:23:15\n28 juillet 2009 05.23\n28 juillet 2009 05 h 23\n28/07/2009 05:23\n28/07/2009 5:23\n28/07/2009 05.23\n28/07/2009 05 h 23\n28/07/09 05:23\n28/07/09 5:23\n28/07/09 05.23\n28/07/09 05 h 23\n28.07.09 05:23\n28.07.09 5:23\n28.07.09 05.23\n28.07.09 05 h 23\n28-07-09 05:23\n28-07-09 5:23\n28-07-09 05.23\n28-07-09 05 h 23\n2009-07-28 05:23\n2009-07-28 5:23\n2009-07-28 05.23\n2009-07-28 05 h 23\n28/07/2009 05:23:15\n28/07/2009 5:23:15\n28/07/2009 05.23\n28/07/2009 05 h 23\n28/07/09 05:23:15\n28/07/09 5:23:15\n28/07/09 05.23\n28/07/09 05 h 23\n28.07.09 05:23:15\n28.07.09 5:23:15\n28.07.09 05.23\n28.07.09 05 h 23\n28-07-09 05:23:15\n28-07-09 5:23:15\n28-07-09 05.23\n28-07-09 05 h 23\n2009-07-28 05:23:15\n2009-07-28 5:23:15\n2009-07-28 05.23\n2009-07-28 05 h 23\n28 juillet\n28 juillet\n2009-07-28T05:23:15.0160000\n2009-07-28T05:23:15.0160000\nTue, 28 Jul 2009 05:23:15 GMT\nTue, 28 Jul 2009 05:23:15 GMT\n2009-07-28T05:23:15\n05:23\n5:23\n05.23\n05 h 23\n05:23:15\n5:23:15\n05.23\n05 h 23\n2009-07-28 05:23:15Z\nmardi 28 juillet 2009 12:23:15\nmardi 28 juillet 2009 12:23:15\nmardi 28 juillet 2009 12.23\nmardi 28 juillet 2009 12 h 23\n28 juil. 09 12:23:15\n28 juil. 09 12:23:15\n28 juil. 09 12.23\n28 juil. 09 12 h 23\n28 juillet 2009 12:23:15\n28 juillet 2009 12:23:15\n28 juillet 2009 12.23\n28 juillet 2009 12 h 23\njuillet 2009\njuillet 2009</code></pre>"
  syntax:
    content: public string[] GetDateTimeFormats(IFormatProvider provider)
    content.vb: Public Function GetDateTimeFormats(provider As IFormatProvider) As String()
    parameters:
    - id: provider
      type: System.IFormatProvider
      description: "\n<p>An object that supplies culture-specific formatting information about this instance. </p>\n"
    return:
      type: System.String[]
      description: "\n<p>A string array where each element is the representation of the value of this instance formatted with one of the standard date and time format specifiers.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.DateTime.GetHashCode
  commentId: M:System.DateTime.GetHashCode
  id: GetHashCode
  parent: System.DateTime
  langs:
  - csharp
  - vb
  name: GetHashCode()
  fullName: System.DateTime.GetHashCode()
  type: Method
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetHashCode
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 447
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Returns the hash code for this instance.</p>\n"
  syntax:
    content: public override int GetHashCode()
    content.vb: Public Overrides Function GetHashCode As Integer
    return:
      type: System.Int32
      description: "\n<p>A 32-bit signed integer hash code.</p>\n"
  overridden: System.ValueType.GetHashCode
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.DateTime.IsDaylightSavingTime
  commentId: M:System.DateTime.IsDaylightSavingTime
  id: IsDaylightSavingTime
  parent: System.DateTime
  langs:
  - csharp
  - vb
  name: IsDaylightSavingTime()
  fullName: System.DateTime.IsDaylightSavingTime()
  type: Method
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IsDaylightSavingTime
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 448
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Indicates whether this instance of <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> is within the daylight saving time range for the current time zone.</p>\n"
  remarks: "\n<p>This method determines whether the current <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> value falls within the daylight saving time range of the local time zone, which is returned by the <xref href=\"System.TimeZoneInfo.Local\" data-throw-if-not-resolved=\"false\"></xref> property. You can determine whether a time zone supports daylight saving time by retrieving the value of its <xref href=\"System.TimeZoneInfo.SupportsDaylightSavingTime\" data-throw-if-not-resolved=\"false\"></xref> property. For time zones that observe daylight saving time, you can determine when the transition to and from daylight saving time occurs by retrieving the <xref href=\"System.TimeZoneInfo.AdjustmentRule\" data-throw-if-not-resolved=\"false\"></xref> array returned by the time zone's <xref href=\"System.TimeZoneInfo.GetAdjustmentRules\" data-throw-if-not-resolved=\"false\"></xref> property.</p>\n<p>If the current <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> value represents either an ambiguous or an invalid time in the local time zone, the method returns <strong>false</strong>. </p>\n<p>On Windows XP systems, the <xref href=\"System.DateTime.IsDaylightSavingTime\" data-throw-if-not-resolved=\"false\"></xref> method recognizes only the current adjustment rule when determining whether the current instance is a daylight saving time. As a result, the method may not accurately report whether the current instance is a daylight saving time for periods before the current adjustment rule came into effect.</p>\n"
  example:
  - 
  syntax:
    content: public bool IsDaylightSavingTime()
    content.vb: Public Function IsDaylightSavingTime As Boolean
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if the value of the <xref href=\"System.DateTime.Kind\" data-throw-if-not-resolved=\"false\"></xref> property is <xref href=\"System.DateTimeKind.Local\" data-throw-if-not-resolved=\"false\"></xref> or <xref href=\"System.DateTimeKind.Unspecified\" data-throw-if-not-resolved=\"false\"></xref> and the value of this instance of <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> is within the daylight saving time range for the local time zone; <strong>false</strong> if <xref href=\"System.DateTime.Kind\" data-throw-if-not-resolved=\"false\"></xref> is <xref href=\"System.DateTimeKind.Utc\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  seealso:
  - type: System.TimeZoneInfo.IsDaylightSavingTime(System.DateTime)
    commentId: M:System.TimeZoneInfo.IsDaylightSavingTime(System.DateTime)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.DateTime.IsLeapYear(System.Int32)
  commentId: M:System.DateTime.IsLeapYear(System.Int32)
  id: IsLeapYear(System.Int32)
  parent: System.DateTime
  langs:
  - csharp
  - vb
  name: IsLeapYear(Int32)
  fullName: System.DateTime.IsLeapYear(System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IsLeapYear
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 449
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Returns an indication whether the specified year is a leap year.</p>\n"
  remarks: "\n<p>\n<em>year</em> is specified as a 4-digit base 10 number; for example, 1996.</p>\n<p>\n<em>year</em> is always interpreted as a year in the Gregorian calendar. To determine whether a particular year was a leap year in some other calendar, call that calendar object's <strong>IsLeapYear</strong> method.</p>\n"
  example:
  - "\n<p>The following example uses the <xref href=\"System.DateTime.IsLeapYear(System.Int32)\" data-throw-if-not-resolved=\"false\"></xref> method to determine which years between 1994 and 2014 are leap years. The example also illustrates the result when the <xref href=\"System.DateTime.AddYears(System.Int32)\" data-throw-if-not-resolved=\"false\"></xref> method is used to add a year to a leap day. </p>System.DateTime.IsLeapYear#1"
  syntax:
    content: public static bool IsLeapYear(int year)
    content.vb: Public Shared Function IsLeapYear(year As Integer) As Boolean
    parameters:
    - id: year
      type: System.Int32
      description: "\n<p>A 4-digit year. </p>\n"
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if <em>year</em> is a leap year; otherwise, <strong>false</strong>.</p>\n"
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>\n<em>year</em> is less than 1 or greater than 9999.</p>\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.DateTime.op_Addition(System.DateTime,System.TimeSpan)
  commentId: M:System.DateTime.op_Addition(System.DateTime,System.TimeSpan)
  id: op_Addition(System.DateTime,System.TimeSpan)
  parent: System.DateTime
  langs:
  - csharp
  - vb
  name: Addition(DateTime, TimeSpan)
  fullName: System.DateTime.Addition(System.DateTime, System.TimeSpan)
  type: Operator
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_Addition
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 450
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Adds a specified time interval to a specified date and time, yielding a new date and time.</p>\n"
  example:
  - "\n<p>The following example demonstrates the addition operator.</p>DateTime Operators#1"
  syntax:
    content: public static DateTime operator +(DateTime d, TimeSpan t)
    content.vb: Public Shared Operator +(d As Date, t As TimeSpan) As Date
    parameters:
    - id: d
      type: System.DateTime
      description: "\n<p>The date and time value to add. </p>\n"
    - id: t
      type: System.TimeSpan
      description: "\n<p>The time interval to add. </p>\n"
    return:
      type: System.DateTime
      description: "\n<p>An object that is the sum of the values of <em>d</em> and <em>t</em>.</p>\n"
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>The resulting <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> is less than <xref href=\"System.DateTime.MinValue\" data-throw-if-not-resolved=\"false\"></xref> or greater than <xref href=\"System.DateTime.MaxValue\" data-throw-if-not-resolved=\"false\"></xref>. </p>\n"
  seealso:
  - type: System.DateTime.Add(System.TimeSpan)
    commentId: M:System.DateTime.Add(System.TimeSpan)
  - type: System.TimeSpan
    commentId: T:System.TimeSpan
  - type: System.DateTime.Ticks
    commentId: P:System.DateTime.Ticks
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.DateTime.op_Equality(System.DateTime,System.DateTime)
  commentId: M:System.DateTime.op_Equality(System.DateTime,System.DateTime)
  id: op_Equality(System.DateTime,System.DateTime)
  parent: System.DateTime
  langs:
  - csharp
  - vb
  name: Equality(DateTime, DateTime)
  fullName: System.DateTime.Equality(System.DateTime, System.DateTime)
  type: Operator
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_Equality
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 451
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Determines whether two specified instances of <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> are equal.</p>\n"
  remarks: "\n<p>The <xref href=\"System.DateTime.op_Equality(System.DateTime,System.DateTime)\" data-throw-if-not-resolved=\"false\"></xref> operator determines whether two <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> values are equal by comparing their number of ticks. Before comparing <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> objects, make sure that the objects represent times in the same time zone. You can do this by comparing the values of their <xref href=\"System.DateTime.Kind\" data-throw-if-not-resolved=\"false\"></xref> property. </p>\n"
  example:
  - "\n<p>The following example demonstrates the equality operator.</p>DateTime Operators#2"
  syntax:
    content: public static bool operator ==(DateTime d1, DateTime d2)
    content.vb: Public Shared Operator =(d1 As Date, d2 As Date) As Boolean
    parameters:
    - id: d1
      type: System.DateTime
      description: "\n<p>The first object to compare. </p>\n"
    - id: d2
      type: System.DateTime
      description: "\n<p>The second object to compare. </p>\n"
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if <em>d1</em> and <em>d2</em> represent the same date and time; otherwise, <strong>false</strong>.</p>\n"
  seealso:
  - type: System.DateTime.Equals(System.DateTime)
    commentId: M:System.DateTime.Equals(System.DateTime)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.DateTime.op_GreaterThan(System.DateTime,System.DateTime)
  commentId: M:System.DateTime.op_GreaterThan(System.DateTime,System.DateTime)
  id: op_GreaterThan(System.DateTime,System.DateTime)
  parent: System.DateTime
  langs:
  - csharp
  - vb
  name: GreaterThan(DateTime, DateTime)
  fullName: System.DateTime.GreaterThan(System.DateTime, System.DateTime)
  type: Operator
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_GreaterThan
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 452
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Determines whether one specified <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> is later than another specified <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  remarks: "\n<p>The <xref href=\"System.DateTime.op_GreaterThan(System.DateTime,System.DateTime)\" data-throw-if-not-resolved=\"false\"></xref> operator determines the relationship between two <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> values by comparing their number of ticks. Before comparing <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> objects, make sure that the objects represent times in the same time zone. You can do this by comparing the values of their <xref href=\"System.DateTime.Kind\" data-throw-if-not-resolved=\"false\"></xref> property. </p>\n"
  syntax:
    content: public static bool operator>(DateTime t1, DateTime t2)
    content.vb: Public Shared Operator>(t1 As Date, t2 As Date) As Boolean
    parameters:
    - id: t1
      type: System.DateTime
      description: "\n<p>The first object to compare. </p>\n"
    - id: t2
      type: System.DateTime
      description: "\n<p>The second object to compare. </p>\n"
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if <em>t1</em> is later than <em>t2</em>; otherwise, <strong>false</strong>.</p>\n"
  seealso:
  - type: System.DateTime.CompareTo(System.DateTime)
    commentId: M:System.DateTime.CompareTo(System.DateTime)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.DateTime.op_GreaterThanOrEqual(System.DateTime,System.DateTime)
  commentId: M:System.DateTime.op_GreaterThanOrEqual(System.DateTime,System.DateTime)
  id: op_GreaterThanOrEqual(System.DateTime,System.DateTime)
  parent: System.DateTime
  langs:
  - csharp
  - vb
  name: GreaterThanOrEqual(DateTime, DateTime)
  fullName: System.DateTime.GreaterThanOrEqual(System.DateTime, System.DateTime)
  type: Operator
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_GreaterThanOrEqual
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 453
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Determines whether one specified <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> represents a date and time that is the same as or later than another specified <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  remarks: "\n<p>The <xref href=\"System.DateTime.op_GreaterThanOrEqual(System.DateTime,System.DateTime)\" data-throw-if-not-resolved=\"false\"></xref> operator determines the relationship between two <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> values by comparing their number of ticks. Before comparing <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> objects, make sure that the objects represent times in the same time zone. You can do this by comparing the values of their <xref href=\"System.DateTime.Kind\" data-throw-if-not-resolved=\"false\"></xref> property. </p>\n"
  syntax:
    content: public static bool operator >=(DateTime t1, DateTime t2)
    content.vb: Public Shared Operator >=(t1 As Date, t2 As Date) As Boolean
    parameters:
    - id: t1
      type: System.DateTime
      description: "\n<p>The first object to compare. </p>\n"
    - id: t2
      type: System.DateTime
      description: "\n<p>The second object to compare. </p>\n"
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if <em>t1</em> is the same as or later than <em>t2</em>; otherwise, <strong>false</strong>.</p>\n"
  seealso:
  - type: System.DateTime.CompareTo(System.DateTime)
    commentId: M:System.DateTime.CompareTo(System.DateTime)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.DateTime.op_Inequality(System.DateTime,System.DateTime)
  commentId: M:System.DateTime.op_Inequality(System.DateTime,System.DateTime)
  id: op_Inequality(System.DateTime,System.DateTime)
  parent: System.DateTime
  langs:
  - csharp
  - vb
  name: Inequality(DateTime, DateTime)
  fullName: System.DateTime.Inequality(System.DateTime, System.DateTime)
  type: Operator
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_Inequality
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 454
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Determines whether two specified instances of <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> are not equal.</p>\n"
  remarks: "\n<p>The <xref href=\"System.DateTime.op_Inequality(System.DateTime,System.DateTime)\" data-throw-if-not-resolved=\"false\"></xref> operator determines whether two <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> values are not equal by comparing their number of ticks. Before comparing <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> objects, make sure that the objects represent times in the same time zone. You can do this by comparing the values of their <xref href=\"System.DateTime.Kind\" data-throw-if-not-resolved=\"false\"></xref> property. </p>\n"
  syntax:
    content: public static bool operator !=(DateTime d1, DateTime d2)
    content.vb: Public Shared Operator <>(d1 As Date, d2 As Date) As Boolean
    parameters:
    - id: d1
      type: System.DateTime
      description: "\n<p>The first object to compare. </p>\n"
    - id: d2
      type: System.DateTime
      description: "\n<p>The second object to compare. </p>\n"
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if <em>d1</em> and <em>d2</em> do not represent the same date and time; otherwise, <strong>false</strong>.</p>\n"
  seealso:
  - type: System.DateTime.CompareTo(System.DateTime)
    commentId: M:System.DateTime.CompareTo(System.DateTime)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.DateTime.op_LessThan(System.DateTime,System.DateTime)
  commentId: M:System.DateTime.op_LessThan(System.DateTime,System.DateTime)
  id: op_LessThan(System.DateTime,System.DateTime)
  parent: System.DateTime
  langs:
  - csharp
  - vb
  name: LessThan(DateTime, DateTime)
  fullName: System.DateTime.LessThan(System.DateTime, System.DateTime)
  type: Operator
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_LessThan
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 455
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Determines whether one specified <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> is earlier than another specified <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  remarks: "\n<p>The <xref href=\"System.DateTime.op_LessThan(System.DateTime,System.DateTime)\" data-throw-if-not-resolved=\"false\"></xref> operator determines the relationship between two <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> values by comparing their number of ticks. Before comparing <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> objects, make sure that the objects represent times in the same time zone. You can do this by comparing the values of their <xref href=\"System.DateTime.Kind\" data-throw-if-not-resolved=\"false\"></xref> property. </p>\n"
  syntax:
    content: public static bool operator <(DateTime t1, DateTime t2)
    content.vb: Public Shared Operator <(t1 As Date, t2 As Date) As Boolean
    parameters:
    - id: t1
      type: System.DateTime
      description: "\n<p>The first object to compare. </p>\n"
    - id: t2
      type: System.DateTime
      description: "\n<p>The second object to compare. </p>\n"
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if <em>t1</em> is earlier than <em>t2</em>; otherwise, <strong>false</strong>.</p>\n"
  seealso:
  - type: System.DateTime.CompareTo(System.DateTime)
    commentId: M:System.DateTime.CompareTo(System.DateTime)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.DateTime.op_LessThanOrEqual(System.DateTime,System.DateTime)
  commentId: M:System.DateTime.op_LessThanOrEqual(System.DateTime,System.DateTime)
  id: op_LessThanOrEqual(System.DateTime,System.DateTime)
  parent: System.DateTime
  langs:
  - csharp
  - vb
  name: LessThanOrEqual(DateTime, DateTime)
  fullName: System.DateTime.LessThanOrEqual(System.DateTime, System.DateTime)
  type: Operator
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_LessThanOrEqual
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 456
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Determines whether one specified <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> represents a date and time that is the same as or earlier than another specified <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  remarks: "\n<p>The <xref href=\"System.DateTime.op_LessThanOrEqual(System.DateTime,System.DateTime)\" data-throw-if-not-resolved=\"false\"></xref> operator determines the relationship between two <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> values by comparing their number of ticks. Before comparing <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> objects, make sure that the objects represent times in the same time zone. You can do this by comparing the values of their <xref href=\"System.DateTime.Kind\" data-throw-if-not-resolved=\"false\"></xref> property. </p>\n"
  syntax:
    content: public static bool operator <=(DateTime t1, DateTime t2)
    content.vb: Public Shared Operator <=(t1 As Date, t2 As Date) As Boolean
    parameters:
    - id: t1
      type: System.DateTime
      description: "\n<p>The first object to compare.</p>\n"
    - id: t2
      type: System.DateTime
      description: "\n<p>The second object to compare. </p>\n"
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if <em>t1</em> is the same as or earlier than <em>t2</em>; otherwise, <strong>false</strong>.</p>\n"
  seealso:
  - type: System.DateTime.CompareTo(System.DateTime)
    commentId: M:System.DateTime.CompareTo(System.DateTime)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.DateTime.op_Subtraction(System.DateTime,System.DateTime)
  commentId: M:System.DateTime.op_Subtraction(System.DateTime,System.DateTime)
  id: op_Subtraction(System.DateTime,System.DateTime)
  parent: System.DateTime
  langs:
  - csharp
  - vb
  name: Subtraction(DateTime, DateTime)
  fullName: System.DateTime.Subtraction(System.DateTime, System.DateTime)
  type: Operator
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_Subtraction
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 457
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Subtracts a specified date and time from another specified date and time and returns a time interval.</p>\n"
  remarks: "\n<p>The <xref href=\"System.DateTime.op_Subtraction(System.DateTime,System.DateTime)\" data-throw-if-not-resolved=\"false\"></xref> method does not consider the value of the <xref href=\"System.DateTime.Kind\" data-throw-if-not-resolved=\"false\"></xref> property of the two <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> values when performing the subtraction. Before subtracting <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> objects, ensure that the objects represent times in the same time zone. Otherwise, the result will include the difference between time zones.</p>\n<p>The <xref href=\"System.DateTimeOffset.op_Subtraction(System.DateTimeOffset,System.DateTimeOffset)\" data-throw-if-not-resolved=\"false\"></xref> method does consider the difference between time zones when performing the subtraction.</p>\n"
  example:
  - "\n<p>The following example demonstrates the <xref href=\"System.DateTime.Subtract(System.DateTime)\" data-throw-if-not-resolved=\"false\"></xref> method and the subtraction operator.</p>DateTime.Subtraction#1"
  syntax:
    content: public static TimeSpan operator -(DateTime d1, DateTime d2)
    content.vb: Public Shared Operator -(d1 As Date, d2 As Date) As TimeSpan
    parameters:
    - id: d1
      type: System.DateTime
      description: "\n<p>The date and time value to subtract from (the minuend). </p>\n"
    - id: d2
      type: System.DateTime
      description: "\n<p>The date and time value to subtract (the subtrahend). </p>\n"
    return:
      type: System.TimeSpan
      description: "\n<p>The time interval between <em>d1</em> and <em>d2</em>; that is, <em>d1</em> minus <em>d2</em>.</p>\n"
  seealso:
  - type: System.DateTime.Subtract(System.DateTime)
    commentId: M:System.DateTime.Subtract(System.DateTime)
  - type: System.DateTime.Ticks
    commentId: P:System.DateTime.Ticks
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.DateTime.op_Subtraction(System.DateTime,System.TimeSpan)
  commentId: M:System.DateTime.op_Subtraction(System.DateTime,System.TimeSpan)
  id: op_Subtraction(System.DateTime,System.TimeSpan)
  parent: System.DateTime
  langs:
  - csharp
  - vb
  name: Subtraction(DateTime, TimeSpan)
  fullName: System.DateTime.Subtraction(System.DateTime, System.TimeSpan)
  type: Operator
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_Subtraction
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 458
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Subtracts a specified time interval from a specified date and time and returns a new date and time.</p>\n"
  remarks: "\n<p>This method subtracts the ticks value of <em>t</em> from the ticks value of <em>d</em>.</p>\n"
  example:
  - "\n<p>The following example demonstrates the <xref href=\"System.DateTime.Subtract(System.DateTime)\" data-throw-if-not-resolved=\"false\"></xref> method and the subtraction operator.</p>DateTime.Subtraction#1"
  syntax:
    content: public static DateTime operator -(DateTime d, TimeSpan t)
    content.vb: Public Shared Operator -(d As Date, t As TimeSpan) As Date
    parameters:
    - id: d
      type: System.DateTime
      description: "\n<p>The date and time value to subtract from. </p>\n"
    - id: t
      type: System.TimeSpan
      description: "\n<p>The time interval to subtract. </p>\n"
    return:
      type: System.DateTime
      description: "\n<p>An object whose value is the value of <em>d</em> minus the value of <em>t</em>.</p>\n"
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>The resulting <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> is less than <xref href=\"System.DateTime.MinValue\" data-throw-if-not-resolved=\"false\"></xref> or greater than <xref href=\"System.DateTime.MaxValue\" data-throw-if-not-resolved=\"false\"></xref>. </p>\n"
  seealso:
  - type: System.DateTime.Subtract(System.TimeSpan)
    commentId: M:System.DateTime.Subtract(System.TimeSpan)
  - type: System.DateTime.Ticks
    commentId: P:System.DateTime.Ticks
  - type: System.TimeSpan
    commentId: T:System.TimeSpan
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.DateTime.Parse(System.String)
  commentId: M:System.DateTime.Parse(System.String)
  id: Parse(System.String)
  parent: System.DateTime
  langs:
  - csharp
  - vb
  name: Parse(String)
  fullName: System.DateTime.Parse(System.String)
  type: Method
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Parse
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 459
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Converts the string representation of a date and time to its <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> equivalent.</p>\n"
  remarks: "\n<p>For examples and comprehensive usage information about this and other overloads of the <strong>Parse</strong> method, see the <see cref=\"Overload:System.DateTime.Parse\"></see>overload summary. </p>\n"
  syntax:
    content: public static DateTime Parse(string s)
    content.vb: Public Shared Function Parse(s As String) As Date
    parameters:
    - id: s
      type: System.String
      description: "\n<p>A string that contains a date and time to convert. </p>\n"
    return:
      type: System.DateTime
      description: "\n<p>An object that is equivalent to the date and time contained in <em>s</em>.</p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>s</em> is <strong>null</strong>. </p>\n"
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "\n<p>\n<em>s</em> does not contain a valid string representation of a date and time. </p>\n"
  seealso:
  - type: System.Globalization.CultureInfo
    commentId: T:System.Globalization.CultureInfo
  - type: System.Globalization.DateTimeFormatInfo
    commentId: T:System.Globalization.DateTimeFormatInfo
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.DateTime.Parse(System.String,System.IFormatProvider)
  commentId: M:System.DateTime.Parse(System.String,System.IFormatProvider)
  id: Parse(System.String,System.IFormatProvider)
  parent: System.DateTime
  langs:
  - csharp
  - vb
  name: Parse(String, IFormatProvider)
  fullName: System.DateTime.Parse(System.String, System.IFormatProvider)
  type: Method
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Parse
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 460
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Converts the string representation of a date and time to its <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> equivalent by using culture-specific format information.</p>\n"
  remarks: "\n<p>For examples and comprehensive usage information about this and other overloads of the <strong>Parse</strong> method, see the <see cref=\"Overload:System.DateTime.Parse\"></see>overload summary. </p>\n"
  syntax:
    content: public static DateTime Parse(string s, IFormatProvider provider)
    content.vb: Public Shared Function Parse(s As String, provider As IFormatProvider) As Date
    parameters:
    - id: s
      type: System.String
      description: "\n<p>A string that contains a date and time to convert. </p>\n"
    - id: provider
      type: System.IFormatProvider
      description: "\n<p>An object that supplies culture-specific format information about <em>s</em>. </p>\n"
    return:
      type: System.DateTime
      description: "\n<p>An object that is equivalent to the date and time contained in <em>s</em> as specified by <em>provider</em>.</p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>s</em> is <strong>null</strong>. </p>\n"
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "\n<p>\n<em>s</em> does not contain a valid string representation of a date and time. </p>\n"
  seealso:
  - type: System.Globalization.CultureInfo
    commentId: T:System.Globalization.CultureInfo
  - type: System.Globalization.DateTimeFormatInfo
    commentId: T:System.Globalization.DateTimeFormatInfo
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.DateTime.Parse(System.String,System.IFormatProvider,System.Globalization.DateTimeStyles)
  commentId: M:System.DateTime.Parse(System.String,System.IFormatProvider,System.Globalization.DateTimeStyles)
  id: Parse(System.String,System.IFormatProvider,System.Globalization.DateTimeStyles)
  parent: System.DateTime
  langs:
  - csharp
  - vb
  name: Parse(String, IFormatProvider, DateTimeStyles)
  fullName: System.DateTime.Parse(System.String, System.IFormatProvider, System.Globalization.DateTimeStyles)
  type: Method
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Parse
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 461
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Converts the string representation of a date and time to its <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> equivalent by using culture-specific format information and formatting style.</p>\n"
  remarks: "\n<p>For examples and comprehensive usage information about this and other overloads of the <strong>Parse</strong> method, see the <see cref=\"Overload:System.DateTime.Parse\"></see>overload summary. </p>\n"
  syntax:
    content: public static DateTime Parse(string s, IFormatProvider provider, DateTimeStyles styles)
    content.vb: Public Shared Function Parse(s As String, provider As IFormatProvider, styles As DateTimeStyles) As Date
    parameters:
    - id: s
      type: System.String
      description: "\n<p>A string that contains a date and time to convert. </p>\n"
    - id: provider
      type: System.IFormatProvider
      description: "\n<p>An object that supplies culture-specific formatting information about <em>s</em>. </p>\n"
    - id: styles
      type: System.Globalization.DateTimeStyles
      description: "\n<p>A bitwise combination of the enumeration values that indicates the style elements that can be present in <em>s</em> for the parse operation to succeed, and that defines how to interpret the parsed date in relation to the current time zone or the current date. A typical value to specify is <xref href=\"System.Globalization.DateTimeStyles.None\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
    return:
      type: System.DateTime
      description: "\n<p>An object that is equivalent to the date and time contained in <em>s</em>, as specified by <em>provider</em> and <em>styles</em>.</p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>s</em> is <strong>null</strong>. </p>\n"
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "\n<p>\n<em>s</em> does not contain a valid string representation of a date and time. </p>\n"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<p>\n<em>styles</em> contains an invalid combination of <xref href=\"System.Globalization.DateTimeStyles\" data-throw-if-not-resolved=\"false\"></xref> values. For example, both <xref href=\"System.Globalization.DateTimeStyles.AssumeLocal\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"System.Globalization.DateTimeStyles.AssumeUniversal\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  seealso:
  - type: System.Globalization.CultureInfo
    commentId: T:System.Globalization.CultureInfo
  - type: System.Globalization.DateTimeFormatInfo
    commentId: T:System.Globalization.DateTimeFormatInfo
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.DateTime.ParseExact(System.String,System.String,System.IFormatProvider)
  commentId: M:System.DateTime.ParseExact(System.String,System.String,System.IFormatProvider)
  id: ParseExact(System.String,System.String,System.IFormatProvider)
  parent: System.DateTime
  langs:
  - csharp
  - vb
  name: ParseExact(String, String, IFormatProvider)
  fullName: System.DateTime.ParseExact(System.String, System.String, System.IFormatProvider)
  type: Method
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ParseExact
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 462
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Converts the specified string representation of a date and time to its <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> equivalent using the specified format and culture-specific format information. The format of the string representation must match the specified format exactly.</p>\n"
  remarks: "\n<p>The <xref href=\"System.DateTime.ParseExact(System.String,System.String,System.IFormatProvider)\" data-throw-if-not-resolved=\"false\"></xref> method parses the string representation of a date, which must be in the format defined by the <em>format</em> parameter. It also requires that the <Date> and <Time> elements of the string representation of a date and time appear in the order specified by <em>format</em>, and that <em>s</em> have no white space other than that permitted by <em>format</em>. If <em>format</em> defines a date with no time element and the parse operation succeeds, the resulting <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> value has a time of midnight (00:00:00). If <em>format</em> defines a time with no date element and the parse operation succeeds, the resulting <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> value has a date of <strong>DateTime.Now.Date</strong>.</p>\n<p>If <em>s</em> does not represent a time in a particular time zone and the parse operation succeeds, the<xref href=\"System.DateTime.Kind\" data-throw-if-not-resolved=\"false\"></xref> property of the returned <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> value is <xref href=\"System.DateTimeKind.Unspecified\" data-throw-if-not-resolved=\"false\"></xref>. If <em>s</em> does represent the time in a particular time zone and <em>format</em> allows time zone information to be present (for example, if <em>format</em> is equal to the \"o\", \"r\", or \"u\" standard format specifiers, or if it contains the \"z\", \"zz\", or \"zzz\" custom format specifiers), the <xref href=\"System.DateTime.Kind\" data-throw-if-not-resolved=\"false\"></xref> property of the returned <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> value is <xref href=\"System.DateTimeKind.Local\" data-throw-if-not-resolved=\"false\"></xref>. </p>\n<p>The <em>format</em> parameter is a string that contains either a single standard format specifier, or one or more custom format specifiers that define the required format of <em>s</em>. For details about valid formatting codes, see Standard Date and Time Format Strings or Custom Date and Time Format Strings. </p>\n<p>If <em>format</em> is a custom format pattern that does not include date or time separators (such as \"yyyyMMddHHmm\"), use the invariant culture for the <em>provider</em> parameter and the widest form of each custom format specifier. For example, if you want to specify hours in the format pattern, specify the wider form, \"HH\", instead of the narrower form, \"H\".</p>\n<p>The particular date and time symbols and strings (such as names of the days of the week in a particular language) used in <em>s</em> are defined by the <em>provider</em> parameter, as is the precise format of <em>s</em> if <em>format</em> is a standard format specifier string. The <em>provider</em> parameter can be any of the following:</p>\n<ul><li>\n<p>A <xref href=\"System.Globalization.CultureInfo\" data-throw-if-not-resolved=\"false\"></xref> object that represents the culture used to interpret <em>s</em>. The <xref href=\"System.Globalization.DateTimeFormatInfo\" data-throw-if-not-resolved=\"false\"></xref> object returned by its <xref href=\"System.Globalization.CultureInfo.DateTimeFormat\" data-throw-if-not-resolved=\"false\"></xref> property defines the symbols and formatting in <em>s</em>.</p>\n</li><li>\n<p>A <xref href=\"System.Globalization.DateTimeFormatInfo\" data-throw-if-not-resolved=\"false\"></xref> object that defines the format of date and time data.</p>\n</li><li>\n<p>A custom <xref href=\"System.IFormatProvider\" data-throw-if-not-resolved=\"false\"></xref> implementation whose <xref href=\"System.IFormatProvider.GetFormat(System.Type)\" data-throw-if-not-resolved=\"false\"></xref> method returns either the <xref href=\"System.Globalization.CultureInfo\" data-throw-if-not-resolved=\"false\"></xref> object or the <xref href=\"System.Globalization.DateTimeFormatInfo\" data-throw-if-not-resolved=\"false\"></xref> object that provides formatting information. </p>\n</li></ul>\n<p>If <em>provider</em> is <strong>null</strong>, the <xref href=\"System.Globalization.CultureInfo\" data-throw-if-not-resolved=\"false\"></xref> object that corresponds to the current culture is used.</p>\n"
  example:
  - "\n<p>The following example demonstrates the <xref href=\"System.DateTime.ParseExact(System.String,System.String,System.IFormatProvider)\" data-throw-if-not-resolved=\"false\"></xref> method.</p>System.DateTime.ParseExact#1"
  syntax:
    content: public static DateTime ParseExact(string s, string format, IFormatProvider provider)
    content.vb: Public Shared Function ParseExact(s As String, format As String, provider As IFormatProvider) As Date
    parameters:
    - id: s
      type: System.String
      description: "\n<p>A string that contains a date and time to convert. </p>\n"
    - id: format
      type: System.String
      description: "\n<p>A format specifier that defines the required format of <em>s</em>. For more information, see the Remarks section. </p>\n"
    - id: provider
      type: System.IFormatProvider
      description: "\n<p>An object that supplies culture-specific format information about <em>s</em>. </p>\n"
    return:
      type: System.DateTime
      description: "\n<p>An object that is equivalent to the date and time contained in <em>s</em>, as specified by <em>format</em> and <em>provider</em>.</p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>s</em> or <em>format</em> is <strong>null</strong>. </p>\n"
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "\n<p>\n<em>s</em> or <em>format</em> is an empty string. </p>\n<p>-or- </p>\n<p>\n<em>s</em> does not contain a date and time that corresponds to the pattern specified in <em>format</em>. </p>\n<p>-or-</p>\n<p>The hour component and the AM/PM designator in <em>s</em> do not agree.</p>\n"
  seealso:
  - type: System.Globalization.CultureInfo
    commentId: T:System.Globalization.CultureInfo
  - type: System.Globalization.DateTimeFormatInfo
    commentId: T:System.Globalization.DateTimeFormatInfo
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.DateTime.ParseExact(System.String,System.String,System.IFormatProvider,System.Globalization.DateTimeStyles)
  commentId: M:System.DateTime.ParseExact(System.String,System.String,System.IFormatProvider,System.Globalization.DateTimeStyles)
  id: ParseExact(System.String,System.String,System.IFormatProvider,System.Globalization.DateTimeStyles)
  parent: System.DateTime
  langs:
  - csharp
  - vb
  name: ParseExact(String, String, IFormatProvider, DateTimeStyles)
  fullName: System.DateTime.ParseExact(System.String, System.String, System.IFormatProvider, System.Globalization.DateTimeStyles)
  type: Method
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ParseExact
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 463
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Converts the specified string representation of a date and time to its <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> equivalent using the specified format, culture-specific format information, and style. The format of the string representation must match the specified format exactly or an exception is thrown.</p>\n"
  remarks: "\n<p>The <xref href=\"System.DateTime.ParseExact(System.String,System.String,System.IFormatProvider,System.Globalization.DateTimeStyles)\" data-throw-if-not-resolved=\"false\"></xref> method parses the string representation of a date, which must be in a format defined by the <em>format</em> parameter. It also requires that the date and time elements in <em>s</em> appear in the order specified by <em>format</em>. If <em>s</em> does not match the pattern of the <em>format</em> parameter, with any variations defined by the <em>style</em> parameter, the method throws a <xref href=\"System.FormatException\" data-throw-if-not-resolved=\"false\"></xref>. In contrast, the <xref href=\"System.DateTime.Parse(System.String,System.IFormatProvider,System.Globalization.DateTimeStyles)\" data-throw-if-not-resolved=\"false\"></xref> method parses the string representation of a date in any one of the formats recognized by the format provider's <xref href=\"System.Globalization.DateTimeFormatInfo\" data-throw-if-not-resolved=\"false\"></xref> object. The<xref href=\"System.DateTime.Parse(System.String,System.IFormatProvider,System.Globalization.DateTimeStyles)\" data-throw-if-not-resolved=\"false\"></xref> method also allows the date and time elements in <em>s</em> to appear in any order.</p>\n<p>If the <em>s</em> parameter contains only a time and no date, the current date is used unless the <em>style</em> parameter includes the <xref href=\"System.Globalization.DateTimeStyles.NoCurrentDateDefault\" data-throw-if-not-resolved=\"false\"></xref> flag, in which case the default date (<strong>DateTime.Date.MinValue</strong>) is used. If the <em>s</em> parameter contains only a date and no time, midnight (00:00:00) is used. The <em>style</em> parameter also determines whether the <em>s</em> parameter can contain leading, inner, or trailing white space characters.</p>\n<p>If <em>s</em> contains no time zone information, the <xref href=\"System.DateTime.Kind\" data-throw-if-not-resolved=\"false\"></xref> property of the returned <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> object is <xref href=\"System.DateTimeKind.Unspecified\" data-throw-if-not-resolved=\"false\"></xref>. This behavior can be changed by using the <xref href=\"System.Globalization.DateTimeStyles.AssumeLocal\" data-throw-if-not-resolved=\"false\"></xref> flag, which returns a <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> value whose <xref href=\"System.DateTime.Kind\" data-throw-if-not-resolved=\"false\"></xref> property is <xref href=\"System.DateTimeKind.Local\" data-throw-if-not-resolved=\"false\"></xref>, or by using the <xref href=\"System.Globalization.DateTimeStyles.AssumeUniversal\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"System.Globalization.DateTimeStyles.AdjustToUniversal\" data-throw-if-not-resolved=\"false\"></xref> flags, which returns a <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> value whose <xref href=\"System.DateTime.Kind\" data-throw-if-not-resolved=\"false\"></xref> property is <xref href=\"System.DateTimeKind.Utc\" data-throw-if-not-resolved=\"false\"></xref>. If <em>s</em> contains time zone information, the time is converted to local time, if necessary, and the <xref href=\"System.DateTime.Kind\" data-throw-if-not-resolved=\"false\"></xref> property of the returned <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> object is set to <xref href=\"System.DateTimeKind.Local\" data-throw-if-not-resolved=\"false\"></xref>. This behavior can be changed by using the <xref href=\"System.Globalization.DateTimeStyles.RoundtripKind\" data-throw-if-not-resolved=\"false\"></xref> flag to not convert Coordinated Universal Time (UTC) to a local time and to set the <xref href=\"System.DateTime.Kind\" data-throw-if-not-resolved=\"false\"></xref> property to <xref href=\"System.DateTimeKind.Utc\" data-throw-if-not-resolved=\"false\"></xref>. </p>\n<p>The <em>format</em> parameter defines the required pattern of the <em>s</em> parameter. It can consist of either one or more custom format specifiers from the Custom Date and Time Format Strings table, or a single standard format specifier, which identifies a predefined pattern, from the Standard Date and Time Format Strings table. </p>\n<p>If you do not use date or time separators in a custom format pattern, use the invariant culture for the <em>provider</em> parameter and the widest form of each custom format specifier. For example, if you want to specify hours in the pattern, specify the wider form, \"HH\", instead of the narrower form, \"H\".</p>\n<p>Rather than requiring that <em>s</em> conform to a single format for the parse operation to succeed, you can call the <xref href=\"System.DateTime.ParseExact(System.String,System.String[],System.IFormatProvider,System.Globalization.DateTimeStyles)\" data-throw-if-not-resolved=\"false\"></xref> method and specify multiple permitted formats. This makes the parse operation more likely to succeed.</p>\n<p>The <em>styles</em> parameter includes one or more members of the <xref href=\"System.Globalization.DateTimeStyles\" data-throw-if-not-resolved=\"false\"></xref> enumeration that determine whether and where white space not defined by <em>format</em> can appear in <em>s</em> and that control the precise behavior of the parse operation. The following table describes how each member of the <xref href=\"System.Globalization.DateTimeStyles\" data-throw-if-not-resolved=\"false\"></xref> enumeration affects the operation of the <xref href=\"System.DateTime.ParseExact(System.String,System.String,System.IFormatProvider,System.Globalization.DateTimeStyles)\" data-throw-if-not-resolved=\"false\"></xref> method.</p>\n<p>DateTimeStyles member</p>\n<p>Description</p>\n<table><tbody><tr><td>\n<p>\n<xref href=\"System.Globalization.DateTimeStyles.AdjustToUniversal\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td><td>\n<p>Parses <em>s</em> and, if necessary, converts it to UTC. If <em>s</em> includes a time zone offset, or if <em>s</em> contains no time zone information but <em>styles</em> includes the <xref href=\"System.Globalization.DateTimeStyles.AssumeLocal\" data-throw-if-not-resolved=\"false\"></xref> flag, the method parses the string, calls <xref href=\"System.DateTime.ToUniversalTime\" data-throw-if-not-resolved=\"false\"></xref> to convert the returned <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> value to UTC, and sets the <xref href=\"System.DateTime.Kind\" data-throw-if-not-resolved=\"false\"></xref> property to <xref href=\"System.DateTimeKind.Utc\" data-throw-if-not-resolved=\"false\"></xref>. If <em>s</em> indicates that it represents UTC, or if <em>s</em> does not contain time zone information but <em>styles</em> includes the <xref href=\"System.Globalization.DateTimeStyles.AssumeUniversal\" data-throw-if-not-resolved=\"false\"></xref> flag, the method parses the string, performs no time zone conversion on the returned <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> value, and sets the <xref href=\"System.DateTime.Kind\" data-throw-if-not-resolved=\"false\"></xref> property to <xref href=\"System.DateTimeKind.Utc\" data-throw-if-not-resolved=\"false\"></xref>. In all other cases, the flag has no effect.</p>\n</td></tr><tr><td>\n<p>\n<xref href=\"System.Globalization.DateTimeStyles.AllowInnerWhite\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td><td>\n<p>Specifies that white space not defined by <em>format</em> can appear between any individual date or time element.</p>\n</td></tr><tr><td>\n<p>\n<xref href=\"System.Globalization.DateTimeStyles.AllowLeadingWhite\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td><td>\n<p>Specifies that white space not defined by <em>format</em> can appear at the beginning of <em>s</em>.</p>\n</td></tr><tr><td>\n<p>\n<xref href=\"System.Globalization.DateTimeStyles.AllowTrailingWhite\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td><td>\n<p>Specifies that white space not defined by <em>format</em> can appear at the end of <em>s</em>. </p>\n</td></tr><tr><td>\n<p>\n<xref href=\"System.Globalization.DateTimeStyles.AllowWhiteSpaces\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td><td>\n<p>Specifies that <em>s</em> may contain leading, inner, and trailing white spaces not defined by <em>format</em>.</p>\n</td></tr><tr><td>\n<p>\n<xref href=\"System.Globalization.DateTimeStyles.AssumeLocal\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td><td>\n<p>Specifies that if <em>s</em> lacks any time zone information, it is assumed to represent a local time. Unless the <xref href=\"System.Globalization.DateTimeStyles.AdjustToUniversal\" data-throw-if-not-resolved=\"false\"></xref> flag is present, the <xref href=\"System.DateTime.Kind\" data-throw-if-not-resolved=\"false\"></xref> property of the returned <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> value is set to <xref href=\"System.DateTimeKind.Local\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n</td></tr><tr><td>\n<p>\n<xref href=\"System.Globalization.DateTimeStyles.AssumeUniversal\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td><td>\n<p>Specifies that if <em>s</em> lacks any time zone information, it is assumed to represent UTC. Unless the <xref href=\"System.Globalization.DateTimeStyles.AdjustToUniversal\" data-throw-if-not-resolved=\"false\"></xref> flag is present, the method converts the returned <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> value from UTC to local time and sets its <xref href=\"System.DateTime.Kind\" data-throw-if-not-resolved=\"false\"></xref> property to <xref href=\"System.DateTimeKind.Local\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n</td></tr><tr><td>\n<p>\n<xref href=\"System.Globalization.DateTimeStyles.NoCurrentDateDefault\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td><td>\n<p>If <em>s</em> contains time without date information, the date of the return value is set to <strong>DateTime.MinValue.Date</strong>.</p>\n</td></tr><tr><td>\n<p>\n<xref href=\"System.Globalization.DateTimeStyles.None\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td><td>\n<p>The <em>s</em> parameter is parsed using default values. No white space other than that present in <em>format</em> is allowed. If <em>s</em> lacks a date component, the date of the returned <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> value is set to 1/1/0001. If <em>s</em> contains no time zone information, the <xref href=\"System.DateTime.Kind\" data-throw-if-not-resolved=\"false\"></xref> property of the returned <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> object is set to <xref href=\"System.DateTimeKind.Unspecified\" data-throw-if-not-resolved=\"false\"></xref>. If time zone information is present in <em>s</em>, the time is converted to local time and the <xref href=\"System.DateTime.Kind\" data-throw-if-not-resolved=\"false\"></xref> property of the returned <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> object is set to <xref href=\"System.DateTimeKind.Local\" data-throw-if-not-resolved=\"false\"></xref>. </p>\n</td></tr><tr><td>\n<p>\n<xref href=\"System.Globalization.DateTimeStyles.RoundtripKind\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td><td>\n<p>For strings that contain time zone information, tries to prevent the conversion to a <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> value date and time with its <xref href=\"System.DateTime.Kind\" data-throw-if-not-resolved=\"false\"></xref> property set to <xref href=\"System.DateTimeKind.Local\" data-throw-if-not-resolved=\"false\"></xref>. This flag primarily prevents the conversion of UTC times to local times.</p>\n</td></tr></tbody></table>\n<p>The particular date and time symbols and strings (such as the names of the days of the week in a particular language) used in <em>s</em> are defined by the <em>provider</em> parameter, as is the precise format of <em>s</em> if <em>format</em> is a standard format specifier string. The <em>provider</em> parameter can be any of the following:</p>\n<ul><li>\n<p>A <xref href=\"System.Globalization.CultureInfo\" data-throw-if-not-resolved=\"false\"></xref> object that represents the culture used to interpret <em>s</em>. The <xref href=\"System.Globalization.DateTimeFormatInfo\" data-throw-if-not-resolved=\"false\"></xref> object returned by its <xref href=\"System.Globalization.CultureInfo.DateTimeFormat\" data-throw-if-not-resolved=\"false\"></xref> property defines the symbols and formatting in <em>s</em>.</p>\n</li><li>\n<p>A <xref href=\"System.Globalization.DateTimeFormatInfo\" data-throw-if-not-resolved=\"false\"></xref> object that defines the format of date and time data.</p>\n</li><li>\n<p>A custom <xref href=\"System.IFormatProvider\" data-throw-if-not-resolved=\"false\"></xref> implementation whose <xref href=\"System.IFormatProvider.GetFormat(System.Type)\" data-throw-if-not-resolved=\"false\"></xref> method returns either the <xref href=\"System.Globalization.CultureInfo\" data-throw-if-not-resolved=\"false\"></xref> object or the <xref href=\"System.Globalization.DateTimeFormatInfo\" data-throw-if-not-resolved=\"false\"></xref> object that provides formatting information. </p>\n</li></ul>\n<p>If <em>provider</em> is <strong>null</strong>, the <xref href=\"System.Globalization.CultureInfo\" data-throw-if-not-resolved=\"false\"></xref> object that corresponds to the current culture is used.</p>\n"
  example:
  - "\n<p>The following example demonstrates the <xref href=\"System.DateTime.ParseExact(System.String,System.String,System.IFormatProvider)\" data-throw-if-not-resolved=\"false\"></xref> method. Note that the string \" 5/01/2009 8:30 AM\" cannot be parsed successfully when the <em>styles</em> parameter equals <xref href=\"System.Globalization.DateTimeStyles.None\" data-throw-if-not-resolved=\"false\"></xref> because leading spaces are not allowed by <em>format</em>. Additionally, the string \"5/01/2009 09:00\" cannot be parsed successfully with a <em>format</em> of \"MM/dd/yyyyhh:mm\" because the date string does not precede the month number with a leading zero, as <em>format</em> requires.</p>System.DateTime.ParseExact#2"
  syntax:
    content: public static DateTime ParseExact(string s, string format, IFormatProvider provider, DateTimeStyles style)
    content.vb: Public Shared Function ParseExact(s As String, format As String, provider As IFormatProvider, style As DateTimeStyles) As Date
    parameters:
    - id: s
      type: System.String
      description: "\n<p>A string containing a date and time to convert. </p>\n"
    - id: format
      type: System.String
      description: "\n<p>A format specifier that defines the required format of <em>s</em>. For more information, see the Remarks section. </p>\n"
    - id: provider
      type: System.IFormatProvider
      description: "\n<p>An object that supplies culture-specific formatting information about <em>s</em>. </p>\n"
    - id: style
      type: System.Globalization.DateTimeStyles
      description: "\n<p>A bitwise combination of the enumeration values that provides additional information about <em>s</em>, about style elements that may be present in <em>s</em>, or about the conversion from <em>s</em> to a <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> value. A typical value to specify is <xref href=\"System.Globalization.DateTimeStyles.None\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
    return:
      type: System.DateTime
      description: "\n<p>An object that is equivalent to the date and time contained in <em>s</em>, as specified by <em>format</em>, <em>provider</em>, and <em>style</em>.</p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>s</em> or <em>format</em> is <strong>null</strong>. </p>\n"
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "\n<p>\n<em>s</em> or <em>format</em> is an empty string. </p>\n<p>-or- </p>\n<p>\n<em>s</em> does not contain a date and time that corresponds to the pattern specified in <em>format</em>. </p>\n<p>-or-</p>\n<p>The hour component and the AM/PM designator in <em>s</em> do not agree.</p>\n"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<p>\n<em>style</em> contains an invalid combination of <xref href=\"System.Globalization.DateTimeStyles\" data-throw-if-not-resolved=\"false\"></xref> values. For example, both <xref href=\"System.Globalization.DateTimeStyles.AssumeLocal\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"System.Globalization.DateTimeStyles.AssumeUniversal\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  seealso:
  - type: System.Globalization.CultureInfo
    commentId: T:System.Globalization.CultureInfo
  - type: System.Globalization.DateTimeFormatInfo
    commentId: T:System.Globalization.DateTimeFormatInfo
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.DateTime.ParseExact(System.String,System.String[],System.IFormatProvider,System.Globalization.DateTimeStyles)
  commentId: M:System.DateTime.ParseExact(System.String,System.String[],System.IFormatProvider,System.Globalization.DateTimeStyles)
  id: ParseExact(System.String,System.String[],System.IFormatProvider,System.Globalization.DateTimeStyles)
  parent: System.DateTime
  langs:
  - csharp
  - vb
  name: ParseExact(String, String[], IFormatProvider, DateTimeStyles)
  fullName: System.DateTime.ParseExact(System.String, System.String[], System.IFormatProvider, System.Globalization.DateTimeStyles)
  type: Method
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ParseExact
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 464
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Converts the specified string representation of a date and time to its <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> equivalent using the specified array of formats, culture-specific format information, and style. The format of the string representation must match at least one of the specified formats exactly or an exception is thrown.</p>\n"
  remarks: "\n<p>The <xref href=\"System.DateTime.ParseExact(System.String,System.String[],System.IFormatProvider,System.Globalization.DateTimeStyles)\" data-throw-if-not-resolved=\"false\"></xref> method parses the string representation of a date that matches any one of the patterns assigned to the <em>formats</em> parameter. If the string <em>s</em> does not match any one of these patterns with any of the variations defined by the <em>styles</em> parameter, the method throws a <xref href=\"System.FormatException\" data-throw-if-not-resolved=\"false\"></xref>. Aside from comparing <em>s</em> to multiple formatting patterns, rather than to a single formatting pattern, this overload behaves identically to the <xref href=\"System.DateTime.ParseExact(System.String,System.String,System.IFormatProvider,System.Globalization.DateTimeStyles)\" data-throw-if-not-resolved=\"false\"></xref> method.</p>\n<p>The <em>s</em> parameter contains the date and time to parse. If the <em>s</em> parameter contains only a time and no date, the current date is used unless the <em>style</em> parameter includes the <xref href=\"System.Globalization.DateTimeStyles.NoCurrentDateDefault\" data-throw-if-not-resolved=\"false\"></xref> flag, in which case the default date (<strong>DateTime.Date.MinValue</strong>) is used. If the <em>s</em> parameter contains only a date and no time, midnight (00:00:00) is used. The <em>style</em> parameter also determines whether the <em>s</em> parameter can contain leading, inner, or trailing white space characters other than those permitted by one of the format strings in <em>formats</em>.</p>\n<p>If <em>s</em> contains no time zone information, the <xref href=\"System.DateTime.Kind\" data-throw-if-not-resolved=\"false\"></xref> property of the returned <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> object is <xref href=\"System.DateTimeKind.Unspecified\" data-throw-if-not-resolved=\"false\"></xref>. This behavior can be changed by using the <xref href=\"System.Globalization.DateTimeStyles.AssumeLocal\" data-throw-if-not-resolved=\"false\"></xref> flag, which returns a <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> value whose <xref href=\"System.DateTime.Kind\" data-throw-if-not-resolved=\"false\"></xref> property is <xref href=\"System.DateTimeKind.Local\" data-throw-if-not-resolved=\"false\"></xref>, or by using the <xref href=\"System.Globalization.DateTimeStyles.AssumeUniversal\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"System.Globalization.DateTimeStyles.AdjustToUniversal\" data-throw-if-not-resolved=\"false\"></xref> flags, which returns a <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> value whose <xref href=\"System.DateTime.Kind\" data-throw-if-not-resolved=\"false\"></xref> property is <xref href=\"System.DateTimeKind.Utc\" data-throw-if-not-resolved=\"false\"></xref>. If <em>s</em> contains time zone information, the time is converted to local time, if necessary, and the <xref href=\"System.DateTime.Kind\" data-throw-if-not-resolved=\"false\"></xref> property of the returned <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> object is set to <xref href=\"System.DateTimeKind.Local\" data-throw-if-not-resolved=\"false\"></xref>. This behavior can be changed by using the <xref href=\"System.Globalization.DateTimeStyles.RoundtripKind\" data-throw-if-not-resolved=\"false\"></xref> flag to not convert Coordinated Universal Time (UTC) to a local time and set the <xref href=\"System.DateTime.Kind\" data-throw-if-not-resolved=\"false\"></xref> property to <xref href=\"System.DateTimeKind.Utc\" data-throw-if-not-resolved=\"false\"></xref>. </p>\n<p>The <em>formats</em> parameter contains an array of patterns, one of which <em>s</em> must match exactly if the parse operation is to succeed. The patterns in the <em>formats</em> parameter consists of one or more custom format specifiers from the Custom Date and Time Format Strings table, or a single standard format specifier, which identifies a predefined pattern, from the Standard Date and Time Format Strings table. </p>\n<p>If you do not use date or time separators in a custom format pattern, use the invariant culture for the <em>provider</em> parameter and the widest form of each custom format specifier. For example, if you want to specify hours in the pattern, specify the wider form, \"HH\", instead of the narrower form, \"H\".</p>\n<p>The <em>styles</em> parameter includes one or more members of the <xref href=\"System.Globalization.DateTimeStyles\" data-throw-if-not-resolved=\"false\"></xref> enumeration that determine whether and where white space not defined by <em>format</em> can appear in <em>s</em> and that control the precise behavior of the parse operation. The following table describes how each member of the <xref href=\"System.Globalization.DateTimeStyles\" data-throw-if-not-resolved=\"false\"></xref> enumeration affects the operation of the <xref href=\"System.DateTime.ParseExact(System.String,System.String,System.IFormatProvider,System.Globalization.DateTimeStyles)\" data-throw-if-not-resolved=\"false\"></xref> method.</p>\n<p>DateTimeStyles member</p>\n<p>Description</p>\n<table><tbody><tr><td>\n<p>\n<xref href=\"System.Globalization.DateTimeStyles.AdjustToUniversal\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td><td>\n<p>Parses <em>s</em> and, if necessary, converts it to UTC. If <em>s</em> includes a time zone offset, or if <em>s</em> contains no time zone information but <em>styles</em> includes the <xref href=\"System.Globalization.DateTimeStyles.AssumeLocal\" data-throw-if-not-resolved=\"false\"></xref> flag, the method parses the string, calls <xref href=\"System.DateTime.ToUniversalTime\" data-throw-if-not-resolved=\"false\"></xref> to convert the returned <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> value to UTC, and sets the <xref href=\"System.DateTime.Kind\" data-throw-if-not-resolved=\"false\"></xref> property to <xref href=\"System.DateTimeKind.Utc\" data-throw-if-not-resolved=\"false\"></xref>. If <em>s</em> indicates that it represents UTC, or if <em>s</em> does not contain time zone information but <em>styles</em> includes the <xref href=\"System.Globalization.DateTimeStyles.AssumeUniversal\" data-throw-if-not-resolved=\"false\"></xref> flag, the method parses the string, performs no time zone conversion on the returned <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> value, and sets the <xref href=\"System.DateTime.Kind\" data-throw-if-not-resolved=\"false\"></xref> property to <xref href=\"System.DateTimeKind.Utc\" data-throw-if-not-resolved=\"false\"></xref>. In all other cases, the flag has no effect.</p>\n</td></tr><tr><td>\n<p>\n<xref href=\"System.Globalization.DateTimeStyles.AllowInnerWhite\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td><td>\n<p>Specifies that white space not defined by <em>format</em> can appear between any individual date or time element.</p>\n</td></tr><tr><td>\n<p>\n<xref href=\"System.Globalization.DateTimeStyles.AllowLeadingWhite\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td><td>\n<p>Specifies that white space not defined by <em>format</em> can appear at the beginning of <em>s</em>.</p>\n</td></tr><tr><td>\n<p>\n<xref href=\"System.Globalization.DateTimeStyles.AllowTrailingWhite\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td><td>\n<p>Specifies that white space not defined by <em>format</em> can appear at the end of <em>s</em>. </p>\n</td></tr><tr><td>\n<p>\n<xref href=\"System.Globalization.DateTimeStyles.AllowWhiteSpaces\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td><td>\n<p>Specifies that <em>s</em> may contain leading, inner, and trailing white spaces not defined by <em>format</em>.</p>\n</td></tr><tr><td>\n<p>\n<xref href=\"System.Globalization.DateTimeStyles.AssumeLocal\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td><td>\n<p>Specifies that if <em>s</em> lacks any time zone information, it is assumed to represent a local time. Unless the <xref href=\"System.Globalization.DateTimeStyles.AdjustToUniversal\" data-throw-if-not-resolved=\"false\"></xref> flag is present, the <xref href=\"System.DateTime.Kind\" data-throw-if-not-resolved=\"false\"></xref> property of the returned <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> value is set to <xref href=\"System.DateTimeKind.Local\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n</td></tr><tr><td>\n<p>\n<xref href=\"System.Globalization.DateTimeStyles.AssumeUniversal\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td><td>\n<p>Specifies that if <em>s</em> lacks any time zone information, it is assumed to represent UTC. Unless the <xref href=\"System.Globalization.DateTimeStyles.AdjustToUniversal\" data-throw-if-not-resolved=\"false\"></xref> flag is present, the method converts the returned <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> value from UTC to local time and sets its <xref href=\"System.DateTime.Kind\" data-throw-if-not-resolved=\"false\"></xref> property to <xref href=\"System.DateTimeKind.Local\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n</td></tr><tr><td>\n<p>\n<xref href=\"System.Globalization.DateTimeStyles.NoCurrentDateDefault\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td><td>\n<p>If <em>s</em> contains time without date information, the date of the return value is set to <strong>DateTime.MinValue.Date</strong>.</p>\n</td></tr><tr><td>\n<p>\n<xref href=\"System.Globalization.DateTimeStyles.None\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td><td>\n<p>The <em>s</em> parameter is parsed using default values. No white space other than that present in <em>format</em> is allowed. If <em>s</em> lacks a date component, the date of the returned <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> value is set to 1/1/0001. If <em>s</em> contains no time zone information, the <xref href=\"System.DateTime.Kind\" data-throw-if-not-resolved=\"false\"></xref> property of the returned <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> object is set to <xref href=\"System.DateTimeKind.Unspecified\" data-throw-if-not-resolved=\"false\"></xref>. If time zone information is present in <em>s</em>, the time is converted to local time and the <xref href=\"System.DateTime.Kind\" data-throw-if-not-resolved=\"false\"></xref> property of the returned <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> object is set to <xref href=\"System.DateTimeKind.Local\" data-throw-if-not-resolved=\"false\"></xref>. </p>\n</td></tr><tr><td>\n<p>\n<xref href=\"System.Globalization.DateTimeStyles.RoundtripKind\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td><td>\n<p>For strings that contain time zone information, tries to prevent the conversion to a date and time with its <xref href=\"System.DateTime.Kind\" data-throw-if-not-resolved=\"false\"></xref> property set to <xref href=\"System.DateTimeKind.Local\" data-throw-if-not-resolved=\"false\"></xref>. This flag primarily prevents the conversion of UTC times to local times.</p>\n</td></tr></tbody></table>\n<p>The particular date and time symbols and strings (such as the names of the days of the week in a particular language) used in <em>s</em> are defined by the <em>provider</em> parameter, as is the precise format of <em>s</em> if <em>format</em> is a standard format specifier string. The <em>provider</em> parameter can be any of the following:</p>\n<ul><li>\n<p>A <xref href=\"System.Globalization.CultureInfo\" data-throw-if-not-resolved=\"false\"></xref> object that represents the culture used to interpret <em>s</em>. The <xref href=\"System.Globalization.DateTimeFormatInfo\" data-throw-if-not-resolved=\"false\"></xref> object returned by its <xref href=\"System.Globalization.CultureInfo.DateTimeFormat\" data-throw-if-not-resolved=\"false\"></xref> property defines the symbols and formatting in <em>s</em>.</p>\n</li><li>\n<p>A <xref href=\"System.Globalization.DateTimeFormatInfo\" data-throw-if-not-resolved=\"false\"></xref> object that defines the format of date and time data.</p>\n</li><li>\n<p>A custom <xref href=\"System.IFormatProvider\" data-throw-if-not-resolved=\"false\"></xref> implementation whose <xref href=\"System.IFormatProvider.GetFormat(System.Type)\" data-throw-if-not-resolved=\"false\"></xref> method returns either the <xref href=\"System.Globalization.CultureInfo\" data-throw-if-not-resolved=\"false\"></xref> object or the <xref href=\"System.Globalization.DateTimeFormatInfo\" data-throw-if-not-resolved=\"false\"></xref> object that provides formatting information. </p>\n</li></ul>\n<p>If <em>provider</em> is <strong>null</strong>, the <xref href=\"System.Globalization.CultureInfo\" data-throw-if-not-resolved=\"false\"></xref> object that corresponds to the current culture is used.</p>\n"
  example:
  - "\n<p>The following example uses the <xref href=\"System.DateTime.ParseExact(System.String,System.String[],System.IFormatProvider,System.Globalization.DateTimeStyles)\" data-throw-if-not-resolved=\"false\"></xref> method to ensure that a string in a number of possible formats can be successfully parsed .</p>System.Datetime.ParseExact#3"
  syntax:
    content: public static DateTime ParseExact(string s, string[] formats, IFormatProvider provider, DateTimeStyles style)
    content.vb: Public Shared Function ParseExact(s As String, formats As String(), provider As IFormatProvider, style As DateTimeStyles) As Date
    parameters:
    - id: s
      type: System.String
      description: "\n<p>A string that contains a date and time to convert. </p>\n"
    - id: formats
      type: System.String[]
      description: "\n<p>An array of allowable formats of <em>s</em>. For more information, see the Remarks section. </p>\n"
    - id: provider
      type: System.IFormatProvider
      description: "\n<p>An object that supplies culture-specific format information about <em>s</em>. </p>\n"
    - id: style
      type: System.Globalization.DateTimeStyles
      description: "\n<p>A bitwise combination of enumeration values that indicates the permitted format of <em>s</em>. A typical value to specify is <xref href=\"System.Globalization.DateTimeStyles.None\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
    return:
      type: System.DateTime
      description: "\n<p>An object that is equivalent to the date and time contained in <em>s</em>, as specified by <em>formats</em>, <em>provider</em>, and <em>style</em>.</p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>s</em> or <em>formats</em> is <strong>null</strong>. </p>\n"
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "\n<p>\n<em>s</em> is an empty string. </p>\n<p>-or- </p>\n<p>an element of <em>formats</em> is an empty string. </p>\n<p>-or- </p>\n<p>\n<em>s</em> does not contain a date and time that corresponds to any element of <em>formats</em>. </p>\n<p>-or-</p>\n<p>The hour component and the AM/PM designator in <em>s</em> do not agree.</p>\n"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<p>\n<em>style</em> contains an invalid combination of <xref href=\"System.Globalization.DateTimeStyles\" data-throw-if-not-resolved=\"false\"></xref> values. For example, both <xref href=\"System.Globalization.DateTimeStyles.AssumeLocal\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"System.Globalization.DateTimeStyles.AssumeUniversal\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  seealso:
  - type: System.Globalization.CultureInfo
    commentId: T:System.Globalization.CultureInfo
  - type: System.Globalization.DateTimeFormatInfo
    commentId: T:System.Globalization.DateTimeFormatInfo
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.DateTime.ParseExact(System.String, System.String(), System.IFormatProvider, System.Globalization.DateTimeStyles)
  name.vb: ParseExact(String, String(), IFormatProvider, DateTimeStyles)
- uid: System.DateTime.SpecifyKind(System.DateTime,System.DateTimeKind)
  commentId: M:System.DateTime.SpecifyKind(System.DateTime,System.DateTimeKind)
  id: SpecifyKind(System.DateTime,System.DateTimeKind)
  parent: System.DateTime
  langs:
  - csharp
  - vb
  name: SpecifyKind(DateTime, DateTimeKind)
  fullName: System.DateTime.SpecifyKind(System.DateTime, System.DateTimeKind)
  type: Method
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: SpecifyKind
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 465
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Creates a new <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> object that has the same number of ticks as the specified <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref>, but is designated as either local time, Coordinated Universal Time (UTC), or neither, as indicated by the specified <xref href=\"System.DateTimeKind\" data-throw-if-not-resolved=\"false\"></xref> value.</p>\n"
  remarks: "\n<p>A <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> object consists of a Kind field that indicates whether the time value is based on local time, Coordinated Universal Time (UTC), or neither, and a Ticks field that contains a time value measured in 100-nanosecond ticks. The <xref href=\"System.DateTime.SpecifyKind(System.DateTime,System.DateTimeKind)\" data-throw-if-not-resolved=\"false\"></xref> method creates a new <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> object using the specified <em>kind</em> parameter and the original time value.</p>\n<p>The returned <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> value does not represent the same instant in time as the <em>value</em> parameter, and <xref href=\"System.DateTime.SpecifyKind(System.DateTime,System.DateTimeKind)\" data-throw-if-not-resolved=\"false\"></xref> is not a time zone conversion method. Instead, it leaves the time specified by the <em>value</em> parameter unchanged, and sets the <xref href=\"System.DateTime.Kind\" data-throw-if-not-resolved=\"false\"></xref> property to <em>kind</em>. For information about time zone conversions, see Converting Times Between Time Zones.</p>\n<p>The <xref href=\"System.DateTime.SpecifyKind(System.DateTime,System.DateTimeKind)\" data-throw-if-not-resolved=\"false\"></xref> method is useful in interoperability scenarios where you receive a <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> object with an unspecified Kind field, but you can determine by independent means that the Ticks field represents local time or UTC.</p>\n"
  example:
  - "\n<p>The following example uses the <xref href=\"System.DateTime.SpecifyKind(System.DateTime,System.DateTimeKind)\" data-throw-if-not-resolved=\"false\"></xref> method to demonstrate how the <xref href=\"System.DateTime.Kind\" data-throw-if-not-resolved=\"false\"></xref> property influences the <xref href=\"System.DateTime.ToLocalTime\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"System.DateTime.ToUniversalTime\" data-throw-if-not-resolved=\"false\"></xref> conversion methods.</p>DateTime.Kind_Suite#1"
  syntax:
    content: public static DateTime SpecifyKind(DateTime value, DateTimeKind kind)
    content.vb: Public Shared Function SpecifyKind(value As Date, kind As DateTimeKind) As Date
    parameters:
    - id: value
      type: System.DateTime
      description: "\n<p>A date and time. </p>\n"
    - id: kind
      type: System.DateTimeKind
      description: "\n<p>One of the enumeration values that indicates whether the new object represents local time, UTC, or neither.</p>\n"
    return:
      type: System.DateTime
      description: "\n<p>A new object that has the same number of ticks as the object represented by the <em>value</em> parameter and the <xref href=\"System.DateTimeKind\" data-throw-if-not-resolved=\"false\"></xref> value specified by the <em>kind</em> parameter. </p>\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.DateTime.Subtract(System.DateTime)
  commentId: M:System.DateTime.Subtract(System.DateTime)
  id: Subtract(System.DateTime)
  parent: System.DateTime
  langs:
  - csharp
  - vb
  name: Subtract(DateTime)
  fullName: System.DateTime.Subtract(System.DateTime)
  type: Method
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Subtract
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 466
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Subtracts the specified date and time from this instance.</p>\n"
  remarks: "\n<p>If the date and time of the current instance is earlier than <em>value</em>, the method returns a <xref href=\"System.TimeSpan\" data-throw-if-not-resolved=\"false\"></xref> object that represents a negative time span. That is, the value of all of its non-zero properties (such as <xref href=\"System.TimeSpan.Days\" data-throw-if-not-resolved=\"false\"></xref> or <xref href=\"System.TimeSpan.Ticks\" data-throw-if-not-resolved=\"false\"></xref>) is negative.</p>\n<p>The<xref href=\"System.DateTime.Subtract(System.DateTime)\" data-throw-if-not-resolved=\"false\"></xref> method does not consider the value of the <xref href=\"System.DateTime.Kind\" data-throw-if-not-resolved=\"false\"></xref> property of the two <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> values when performing the subtraction. Before subtracting <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> objects, ensure that the objects represent times in the same time zone. Otherwise, the result will include the difference between time zones.</p>\n<p>The <xref href=\"System.DateTimeOffset.Subtract(System.DateTimeOffset)\" data-throw-if-not-resolved=\"false\"></xref> method does consider the difference between time zones when performing the subtraction.</p>\n"
  example:
  - "\n<p>The following example demonstrates the <xref href=\"System.DateTime.Subtract(System.DateTime)\" data-throw-if-not-resolved=\"false\"></xref> method and the subtraction operator.</p>DateTime.Subtraction#1"
  syntax:
    content: public TimeSpan Subtract(DateTime value)
    content.vb: Public Function Subtract(value As Date) As TimeSpan
    parameters:
    - id: value
      type: System.DateTime
      description: "\n<p>The date and time value to subtract. </p>\n"
    return:
      type: System.TimeSpan
      description: "\n<p>A time interval that is equal to the date and time represented by this instance minus the date and time represented by <em>value</em>.</p>\n"
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>The result is less than <xref href=\"System.DateTime.MinValue\" data-throw-if-not-resolved=\"false\"></xref> or greater than <xref href=\"System.DateTime.MaxValue\" data-throw-if-not-resolved=\"false\"></xref>. </p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.DateTime.Subtract(System.TimeSpan)
  commentId: M:System.DateTime.Subtract(System.TimeSpan)
  id: Subtract(System.TimeSpan)
  parent: System.DateTime
  langs:
  - csharp
  - vb
  name: Subtract(TimeSpan)
  fullName: System.DateTime.Subtract(System.TimeSpan)
  type: Method
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Subtract
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 467
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Subtracts the specified duration from this instance.</p>\n"
  remarks: "\n<p>This method does not change the value of this <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref>. Instead, it returns a new <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> whose value is the result of this operation.</p>\n<p>Ordinarily, the <xref href=\"System.DateTime.Subtract(System.TimeSpan)\" data-throw-if-not-resolved=\"false\"></xref> method subtracts a <xref href=\"System.TimeSpan\" data-throw-if-not-resolved=\"false\"></xref> object that represents a positive time span and returns a <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> value that is earlier than the date and time of the current instance. However, if the <xref href=\"System.TimeSpan\" data-throw-if-not-resolved=\"false\"></xref> object represents a negative time span, the <xref href=\"System.DateTime.Subtract(System.TimeSpan)\" data-throw-if-not-resolved=\"false\"></xref> method returns a <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> value that is later than the date and time of the current instance.</p>\n<p>The <xref href=\"System.DateTime.Subtract(System.TimeSpan)\" data-throw-if-not-resolved=\"false\"></xref> method allows you to subtract a time interval that consists of more than one unit of time (such as a given number of hours and a given number of minutes). To subtract a single unit of time (such as years, months, or days) from the <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> instance, you can pass a negative numeric value as a parameter to any of the following methods:</p>\n<ul><li>\n<p>\n<xref href=\"System.DateTime.AddYears(System.Int32)\" data-throw-if-not-resolved=\"false\"></xref>, to subtract a specific number of years from the current date and time instance.</p>\n</li><li>\n<p>\n<xref href=\"System.DateTime.AddMonths(System.Int32)\" data-throw-if-not-resolved=\"false\"></xref>, to subtract a specific number of months from the current date and time instance.</p>\n</li><li>\n<p>\n<xref href=\"System.DateTime.AddDays(System.Double)\" data-throw-if-not-resolved=\"false\"></xref>, to subtract a specific number of days from the current date and time instance.</p>\n</li><li>\n<p>\n<xref href=\"System.DateTime.AddHours(System.Double)\" data-throw-if-not-resolved=\"false\"></xref>, to subtract a specific number of hours from the current date and time instance.</p>\n</li><li>\n<p>\n<xref href=\"System.DateTime.AddMinutes(System.Double)\" data-throw-if-not-resolved=\"false\"></xref>, to subtract a specific number of minutes from the current date and time instance.</p>\n</li><li>\n<p>\n<xref href=\"System.DateTime.AddSeconds(System.Double)\" data-throw-if-not-resolved=\"false\"></xref>, to subtract a specific number of seconds from the current date and time instance.</p>\n</li><li>\n<p>\n<xref href=\"System.DateTime.AddMilliseconds(System.Double)\" data-throw-if-not-resolved=\"false\"></xref>, to subtract a specific number of milliseconds from the current date and time instance.</p>\n</li><li>\n<p>\n<xref href=\"System.DateTime.AddTicks(System.Int64)\" data-throw-if-not-resolved=\"false\"></xref>, to subtract a specific number of ticks from the current date and time instance.</p>\n</li></ul>\n"
  example:
  - "\n<p>The following example demonstrates the <xref href=\"System.DateTime.Subtract(System.DateTime)\" data-throw-if-not-resolved=\"false\"></xref> method and the subtraction operator.</p>DateTime.Subtraction#1"
  syntax:
    content: public DateTime Subtract(TimeSpan value)
    content.vb: Public Function Subtract(value As TimeSpan) As Date
    parameters:
    - id: value
      type: System.TimeSpan
      description: "\n<p>The time interval to subtract. </p>\n"
    return:
      type: System.DateTime
      description: "\n<p>An object that is equal to the date and time represented by this instance minus the time interval represented by <em>value</em>.</p>\n"
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>The result is less than <xref href=\"System.DateTime.MinValue\" data-throw-if-not-resolved=\"false\"></xref> or greater than <xref href=\"System.DateTime.MaxValue\" data-throw-if-not-resolved=\"false\"></xref>. </p>\n"
  seealso:
  - type: System.TimeSpan
    commentId: T:System.TimeSpan
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.DateTime.System#IComparable#CompareTo(System.Object)
  commentId: M:System.DateTime.System#IComparable#CompareTo(System.Object)
  id: System#IComparable#CompareTo(System.Object)
  isEii: true
  parent: System.DateTime
  langs:
  - csharp
  - vb
  name: IComparable.CompareTo(Object)
  fullName: System.DateTime.System.IComparable.CompareTo(System.Object)
  type: Method
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: System.IComparable.CompareTo
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 468
  assemblies:
  - System.Runtime
  namespace: System
  syntax:
    content: int IComparable.CompareTo(object value)
    content.vb: Function System.IComparable.CompareTo(value As Object) As Integer Implements IComparable.CompareTo
    parameters:
    - id: value
      type: System.Object
    return:
      type: System.Int32
  implements:
  - System.IComparable.CompareTo(System.Object)
  name.vb: System.IComparable.CompareTo(Object)
- uid: System.DateTime.System#IConvertible#GetTypeCode
  commentId: M:System.DateTime.System#IConvertible#GetTypeCode
  id: System#IConvertible#GetTypeCode
  isEii: true
  parent: System.DateTime
  langs:
  - csharp
  - vb
  name: IConvertible.GetTypeCode()
  fullName: System.DateTime.System.IConvertible.GetTypeCode()
  type: Method
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: System.IConvertible.GetTypeCode
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 469
  assemblies:
  - System.Runtime
  namespace: System
  syntax:
    content: TypeCode IConvertible.GetTypeCode()
    content.vb: Function System.IConvertible.GetTypeCode As TypeCode Implements IConvertible.GetTypeCode
    return:
      type: System.TypeCode
  implements:
  - System.IConvertible.GetTypeCode
  name.vb: System.IConvertible.GetTypeCode()
- uid: System.DateTime.System#IConvertible#ToBoolean(System.IFormatProvider)
  commentId: M:System.DateTime.System#IConvertible#ToBoolean(System.IFormatProvider)
  id: System#IConvertible#ToBoolean(System.IFormatProvider)
  isEii: true
  parent: System.DateTime
  langs:
  - csharp
  - vb
  name: IConvertible.ToBoolean(IFormatProvider)
  fullName: System.DateTime.System.IConvertible.ToBoolean(System.IFormatProvider)
  type: Method
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: System.IConvertible.ToBoolean
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 470
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>This conversion is not supported. Attempting to use this method throws an <xref href=\"System.InvalidCastException\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: bool IConvertible.ToBoolean(IFormatProvider provider)
    content.vb: Function System.IConvertible.ToBoolean(provider As IFormatProvider) As Boolean Implements IConvertible.ToBoolean
    parameters:
    - id: provider
      type: System.IFormatProvider
      description: "\n<p>An object that implements the <xref href=\"System.IFormatProvider\" data-throw-if-not-resolved=\"false\"></xref> interface. (This parameter is not used; specify <strong>null</strong>.)</p>\n"
    return:
      type: System.Boolean
      description: "\n<p>The return value for this member is not used.</p>\n"
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "\n<p>In all cases.</p>\n"
  implements:
  - System.IConvertible.ToBoolean(System.IFormatProvider)
  name.vb: System.IConvertible.ToBoolean(IFormatProvider)
- uid: System.DateTime.System#IConvertible#ToByte(System.IFormatProvider)
  commentId: M:System.DateTime.System#IConvertible#ToByte(System.IFormatProvider)
  id: System#IConvertible#ToByte(System.IFormatProvider)
  isEii: true
  parent: System.DateTime
  langs:
  - csharp
  - vb
  name: IConvertible.ToByte(IFormatProvider)
  fullName: System.DateTime.System.IConvertible.ToByte(System.IFormatProvider)
  type: Method
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: System.IConvertible.ToByte
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 471
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>This conversion is not supported. Attempting to use this method throws an <xref href=\"System.InvalidCastException\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: byte IConvertible.ToByte(IFormatProvider provider)
    content.vb: Function System.IConvertible.ToByte(provider As IFormatProvider) As Byte Implements IConvertible.ToByte
    parameters:
    - id: provider
      type: System.IFormatProvider
      description: "\n<p>An object that implements the <xref href=\"System.IFormatProvider\" data-throw-if-not-resolved=\"false\"></xref> interface. (This parameter is not used; specify <strong>null</strong>.)</p>\n"
    return:
      type: System.Byte
      description: "\n<p>The return value for this member is not used.</p>\n"
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "\n<p>In all cases.</p>\n"
  implements:
  - System.IConvertible.ToByte(System.IFormatProvider)
  name.vb: System.IConvertible.ToByte(IFormatProvider)
- uid: System.DateTime.System#IConvertible#ToChar(System.IFormatProvider)
  commentId: M:System.DateTime.System#IConvertible#ToChar(System.IFormatProvider)
  id: System#IConvertible#ToChar(System.IFormatProvider)
  isEii: true
  parent: System.DateTime
  langs:
  - csharp
  - vb
  name: IConvertible.ToChar(IFormatProvider)
  fullName: System.DateTime.System.IConvertible.ToChar(System.IFormatProvider)
  type: Method
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: System.IConvertible.ToChar
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 472
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>This conversion is not supported. Attempting to use this method throws an <xref href=\"System.InvalidCastException\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: char IConvertible.ToChar(IFormatProvider provider)
    content.vb: Function System.IConvertible.ToChar(provider As IFormatProvider) As Char Implements IConvertible.ToChar
    parameters:
    - id: provider
      type: System.IFormatProvider
      description: "\n<p>An object that implements the <xref href=\"System.IFormatProvider\" data-throw-if-not-resolved=\"false\"></xref> interface. (This parameter is not used; specify <strong>null</strong>.)</p>\n"
    return:
      type: System.Char
      description: "\n<p>The return value for this member is not used.</p>\n"
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "\n<p>In all cases.</p>\n"
  implements:
  - System.IConvertible.ToChar(System.IFormatProvider)
  name.vb: System.IConvertible.ToChar(IFormatProvider)
- uid: System.DateTime.System#IConvertible#ToDateTime(System.IFormatProvider)
  commentId: M:System.DateTime.System#IConvertible#ToDateTime(System.IFormatProvider)
  id: System#IConvertible#ToDateTime(System.IFormatProvider)
  isEii: true
  parent: System.DateTime
  langs:
  - csharp
  - vb
  name: IConvertible.ToDateTime(IFormatProvider)
  fullName: System.DateTime.System.IConvertible.ToDateTime(System.IFormatProvider)
  type: Method
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: System.IConvertible.ToDateTime
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 473
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Returns the current <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  syntax:
    content: DateTime IConvertible.ToDateTime(IFormatProvider provider)
    content.vb: Function System.IConvertible.ToDateTime(provider As IFormatProvider) As Date Implements IConvertible.ToDateTime
    parameters:
    - id: provider
      type: System.IFormatProvider
      description: "\n<p>An object that implements the <xref href=\"System.IFormatProvider\" data-throw-if-not-resolved=\"false\"></xref> interface. (This parameter is not used; specify <strong>null</strong>.)</p>\n"
    return:
      type: System.DateTime
      description: "\n<p>The current object.</p>\n"
  implements:
  - System.IConvertible.ToDateTime(System.IFormatProvider)
  name.vb: System.IConvertible.ToDateTime(IFormatProvider)
- uid: System.DateTime.System#IConvertible#ToDecimal(System.IFormatProvider)
  commentId: M:System.DateTime.System#IConvertible#ToDecimal(System.IFormatProvider)
  id: System#IConvertible#ToDecimal(System.IFormatProvider)
  isEii: true
  parent: System.DateTime
  langs:
  - csharp
  - vb
  name: IConvertible.ToDecimal(IFormatProvider)
  fullName: System.DateTime.System.IConvertible.ToDecimal(System.IFormatProvider)
  type: Method
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: System.IConvertible.ToDecimal
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 474
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>This conversion is not supported. Attempting to use this method throws an <xref href=\"System.InvalidCastException\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: decimal IConvertible.ToDecimal(IFormatProvider provider)
    content.vb: Function System.IConvertible.ToDecimal(provider As IFormatProvider) As Decimal Implements IConvertible.ToDecimal
    parameters:
    - id: provider
      type: System.IFormatProvider
      description: "\n<p>An object that implements the <xref href=\"System.IFormatProvider\" data-throw-if-not-resolved=\"false\"></xref> interface. (This parameter is not used; specify <strong>null</strong>.)</p>\n"
    return:
      type: System.Decimal
      description: "\n<p>The return value for this member is not used.</p>\n"
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "\n<p>In all cases.</p>\n"
  implements:
  - System.IConvertible.ToDecimal(System.IFormatProvider)
  name.vb: System.IConvertible.ToDecimal(IFormatProvider)
- uid: System.DateTime.System#IConvertible#ToDouble(System.IFormatProvider)
  commentId: M:System.DateTime.System#IConvertible#ToDouble(System.IFormatProvider)
  id: System#IConvertible#ToDouble(System.IFormatProvider)
  isEii: true
  parent: System.DateTime
  langs:
  - csharp
  - vb
  name: IConvertible.ToDouble(IFormatProvider)
  fullName: System.DateTime.System.IConvertible.ToDouble(System.IFormatProvider)
  type: Method
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: System.IConvertible.ToDouble
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 475
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>This conversion is not supported. Attempting to use this method throws an <xref href=\"System.InvalidCastException\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: double IConvertible.ToDouble(IFormatProvider provider)
    content.vb: Function System.IConvertible.ToDouble(provider As IFormatProvider) As Double Implements IConvertible.ToDouble
    parameters:
    - id: provider
      type: System.IFormatProvider
      description: "\n<p>An object that implements the <xref href=\"System.IFormatProvider\" data-throw-if-not-resolved=\"false\"></xref> interface. (This parameter is not used; specify <strong>null</strong>.)</p>\n"
    return:
      type: System.Double
      description: "\n<p>The return value for this member is not used.</p>\n"
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "\n<p>In all cases.</p>\n"
  implements:
  - System.IConvertible.ToDouble(System.IFormatProvider)
  name.vb: System.IConvertible.ToDouble(IFormatProvider)
- uid: System.DateTime.System#IConvertible#ToInt16(System.IFormatProvider)
  commentId: M:System.DateTime.System#IConvertible#ToInt16(System.IFormatProvider)
  id: System#IConvertible#ToInt16(System.IFormatProvider)
  isEii: true
  parent: System.DateTime
  langs:
  - csharp
  - vb
  name: IConvertible.ToInt16(IFormatProvider)
  fullName: System.DateTime.System.IConvertible.ToInt16(System.IFormatProvider)
  type: Method
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: System.IConvertible.ToInt16
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 476
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>This conversion is not supported. Attempting to use this method throws an <xref href=\"System.InvalidCastException\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: short IConvertible.ToInt16(IFormatProvider provider)
    content.vb: Function System.IConvertible.ToInt16(provider As IFormatProvider) As Short Implements IConvertible.ToInt16
    parameters:
    - id: provider
      type: System.IFormatProvider
      description: "\n<p>An object that implements the <xref href=\"System.IFormatProvider\" data-throw-if-not-resolved=\"false\"></xref> interface. (This parameter is not used; specify <strong>null</strong>.)</p>\n"
    return:
      type: System.Int16
      description: "\n<p>The return value for this member is not used.</p>\n"
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "\n<p>In all cases.</p>\n"
  implements:
  - System.IConvertible.ToInt16(System.IFormatProvider)
  name.vb: System.IConvertible.ToInt16(IFormatProvider)
- uid: System.DateTime.System#IConvertible#ToInt32(System.IFormatProvider)
  commentId: M:System.DateTime.System#IConvertible#ToInt32(System.IFormatProvider)
  id: System#IConvertible#ToInt32(System.IFormatProvider)
  isEii: true
  parent: System.DateTime
  langs:
  - csharp
  - vb
  name: IConvertible.ToInt32(IFormatProvider)
  fullName: System.DateTime.System.IConvertible.ToInt32(System.IFormatProvider)
  type: Method
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: System.IConvertible.ToInt32
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 477
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>This conversion is not supported. Attempting to use this method throws an <xref href=\"System.InvalidCastException\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: int IConvertible.ToInt32(IFormatProvider provider)
    content.vb: Function System.IConvertible.ToInt32(provider As IFormatProvider) As Integer Implements IConvertible.ToInt32
    parameters:
    - id: provider
      type: System.IFormatProvider
      description: "\n<p>An object that implements the <xref href=\"System.IFormatProvider\" data-throw-if-not-resolved=\"false\"></xref> interface. (This parameter is not used; specify <strong>null</strong>.)</p>\n"
    return:
      type: System.Int32
      description: "\n<p>The return value for this member is not used.</p>\n"
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "\n<p>In all cases.</p>\n"
  implements:
  - System.IConvertible.ToInt32(System.IFormatProvider)
  name.vb: System.IConvertible.ToInt32(IFormatProvider)
- uid: System.DateTime.System#IConvertible#ToInt64(System.IFormatProvider)
  commentId: M:System.DateTime.System#IConvertible#ToInt64(System.IFormatProvider)
  id: System#IConvertible#ToInt64(System.IFormatProvider)
  isEii: true
  parent: System.DateTime
  langs:
  - csharp
  - vb
  name: IConvertible.ToInt64(IFormatProvider)
  fullName: System.DateTime.System.IConvertible.ToInt64(System.IFormatProvider)
  type: Method
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: System.IConvertible.ToInt64
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 478
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>This conversion is not supported. Attempting to use this method throws an <xref href=\"System.InvalidCastException\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: long IConvertible.ToInt64(IFormatProvider provider)
    content.vb: Function System.IConvertible.ToInt64(provider As IFormatProvider) As Long Implements IConvertible.ToInt64
    parameters:
    - id: provider
      type: System.IFormatProvider
      description: "\n<p>An object that implements the <xref href=\"System.IFormatProvider\" data-throw-if-not-resolved=\"false\"></xref> interface. (This parameter is not used; specify <strong>null</strong>.)</p>\n"
    return:
      type: System.Int64
      description: "\n<p>The return value for this member is not used.</p>\n"
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "\n<p>In all cases.</p>\n"
  implements:
  - System.IConvertible.ToInt64(System.IFormatProvider)
  name.vb: System.IConvertible.ToInt64(IFormatProvider)
- uid: System.DateTime.System#IConvertible#ToSByte(System.IFormatProvider)
  commentId: M:System.DateTime.System#IConvertible#ToSByte(System.IFormatProvider)
  id: System#IConvertible#ToSByte(System.IFormatProvider)
  isEii: true
  parent: System.DateTime
  langs:
  - csharp
  - vb
  name: IConvertible.ToSByte(IFormatProvider)
  fullName: System.DateTime.System.IConvertible.ToSByte(System.IFormatProvider)
  type: Method
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: System.IConvertible.ToSByte
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 479
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>This conversion is not supported. Attempting to use this method throws an <xref href=\"System.InvalidCastException\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: sbyte IConvertible.ToSByte(IFormatProvider provider)
    content.vb: Function System.IConvertible.ToSByte(provider As IFormatProvider) As SByte Implements IConvertible.ToSByte
    parameters:
    - id: provider
      type: System.IFormatProvider
      description: "\n<p>An object that implements the <xref href=\"System.IFormatProvider\" data-throw-if-not-resolved=\"false\"></xref> interface. (This parameter is not used; specify <strong>null</strong>.)</p>\n"
    return:
      type: System.SByte
      description: "\n<p>The return value for this member is not used.</p>\n"
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "\n<p>In all cases.</p>\n"
  implements:
  - System.IConvertible.ToSByte(System.IFormatProvider)
  name.vb: System.IConvertible.ToSByte(IFormatProvider)
- uid: System.DateTime.System#IConvertible#ToSingle(System.IFormatProvider)
  commentId: M:System.DateTime.System#IConvertible#ToSingle(System.IFormatProvider)
  id: System#IConvertible#ToSingle(System.IFormatProvider)
  isEii: true
  parent: System.DateTime
  langs:
  - csharp
  - vb
  name: IConvertible.ToSingle(IFormatProvider)
  fullName: System.DateTime.System.IConvertible.ToSingle(System.IFormatProvider)
  type: Method
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: System.IConvertible.ToSingle
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 480
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>This conversion is not supported. Attempting to use this method throws an <xref href=\"System.InvalidCastException\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: float IConvertible.ToSingle(IFormatProvider provider)
    content.vb: Function System.IConvertible.ToSingle(provider As IFormatProvider) As Single Implements IConvertible.ToSingle
    parameters:
    - id: provider
      type: System.IFormatProvider
      description: "\n<p>An object that implements the <xref href=\"System.IFormatProvider\" data-throw-if-not-resolved=\"false\"></xref> interface. (This parameter is not used; specify <strong>null</strong>.)</p>\n"
    return:
      type: System.Single
      description: "\n<p>The return value for this member is not used.</p>\n"
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "\n<p>In all cases. </p>\n"
  implements:
  - System.IConvertible.ToSingle(System.IFormatProvider)
  name.vb: System.IConvertible.ToSingle(IFormatProvider)
- uid: System.DateTime.System#IConvertible#ToType(System.Type,System.IFormatProvider)
  commentId: M:System.DateTime.System#IConvertible#ToType(System.Type,System.IFormatProvider)
  id: System#IConvertible#ToType(System.Type,System.IFormatProvider)
  isEii: true
  parent: System.DateTime
  langs:
  - csharp
  - vb
  name: IConvertible.ToType(Type, IFormatProvider)
  fullName: System.DateTime.System.IConvertible.ToType(System.Type, System.IFormatProvider)
  type: Method
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: System.IConvertible.ToType
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 481
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Converts the current <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> object to an object of a specified type.</p>\n"
  syntax:
    content: object IConvertible.ToType(Type type, IFormatProvider provider)
    content.vb: Function System.IConvertible.ToType(type As Type, provider As IFormatProvider) As Object Implements IConvertible.ToType
    parameters:
    - id: type
      type: System.Type
      description: "\n<p>The desired type. </p>\n"
    - id: provider
      type: System.IFormatProvider
      description: "\n<p>An object that implements the <xref href=\"System.IFormatProvider\" data-throw-if-not-resolved=\"false\"></xref> interface. (This parameter is not used; specify <strong>null</strong>.)</p>\n"
    return:
      type: System.Object
      description: "\n<p>An object of the type specified by the <em>type</em> parameter, with a value equivalent to the current <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>type</em> is <strong>null</strong>. </p>\n"
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "\n<p>This conversion is not supported for the <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> type.</p>\n"
  seealso:
  - type: System.Convert
    commentId: T:System.Convert
  implements:
  - System.IConvertible.ToType(System.Type,System.IFormatProvider)
  name.vb: System.IConvertible.ToType(Type, IFormatProvider)
- uid: System.DateTime.System#IConvertible#ToUInt16(System.IFormatProvider)
  commentId: M:System.DateTime.System#IConvertible#ToUInt16(System.IFormatProvider)
  id: System#IConvertible#ToUInt16(System.IFormatProvider)
  isEii: true
  parent: System.DateTime
  langs:
  - csharp
  - vb
  name: IConvertible.ToUInt16(IFormatProvider)
  fullName: System.DateTime.System.IConvertible.ToUInt16(System.IFormatProvider)
  type: Method
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: System.IConvertible.ToUInt16
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 482
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>This conversion is not supported. Attempting to use this method throws an <xref href=\"System.InvalidCastException\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: ushort IConvertible.ToUInt16(IFormatProvider provider)
    content.vb: Function System.IConvertible.ToUInt16(provider As IFormatProvider) As UShort Implements IConvertible.ToUInt16
    parameters:
    - id: provider
      type: System.IFormatProvider
      description: "\n<p>An object that implements the <xref href=\"System.IFormatProvider\" data-throw-if-not-resolved=\"false\"></xref> interface. (This parameter is not used; specify <strong>null</strong>.)</p>\n"
    return:
      type: System.UInt16
      description: "\n<p>The return value for this member is not used.</p>\n"
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "\n<p>In all cases.</p>\n"
  implements:
  - System.IConvertible.ToUInt16(System.IFormatProvider)
  name.vb: System.IConvertible.ToUInt16(IFormatProvider)
- uid: System.DateTime.System#IConvertible#ToUInt32(System.IFormatProvider)
  commentId: M:System.DateTime.System#IConvertible#ToUInt32(System.IFormatProvider)
  id: System#IConvertible#ToUInt32(System.IFormatProvider)
  isEii: true
  parent: System.DateTime
  langs:
  - csharp
  - vb
  name: IConvertible.ToUInt32(IFormatProvider)
  fullName: System.DateTime.System.IConvertible.ToUInt32(System.IFormatProvider)
  type: Method
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: System.IConvertible.ToUInt32
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 483
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>This conversion is not supported. Attempting to use this method throws an <xref href=\"System.InvalidCastException\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: uint IConvertible.ToUInt32(IFormatProvider provider)
    content.vb: Function System.IConvertible.ToUInt32(provider As IFormatProvider) As UInteger Implements IConvertible.ToUInt32
    parameters:
    - id: provider
      type: System.IFormatProvider
      description: "\n<p>An object that implements the <xref href=\"System.IFormatProvider\" data-throw-if-not-resolved=\"false\"></xref> interface. (This parameter is not used; specify <strong>null</strong>.)</p>\n"
    return:
      type: System.UInt32
      description: "\n<p>The return value for this member is not used.</p>\n"
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "\n<p>In all cases.</p>\n"
  implements:
  - System.IConvertible.ToUInt32(System.IFormatProvider)
  name.vb: System.IConvertible.ToUInt32(IFormatProvider)
- uid: System.DateTime.System#IConvertible#ToUInt64(System.IFormatProvider)
  commentId: M:System.DateTime.System#IConvertible#ToUInt64(System.IFormatProvider)
  id: System#IConvertible#ToUInt64(System.IFormatProvider)
  isEii: true
  parent: System.DateTime
  langs:
  - csharp
  - vb
  name: IConvertible.ToUInt64(IFormatProvider)
  fullName: System.DateTime.System.IConvertible.ToUInt64(System.IFormatProvider)
  type: Method
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: System.IConvertible.ToUInt64
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 484
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>This conversion is not supported. Attempting to use this method throws an <xref href=\"System.InvalidCastException\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: ulong IConvertible.ToUInt64(IFormatProvider provider)
    content.vb: Function System.IConvertible.ToUInt64(provider As IFormatProvider) As ULong Implements IConvertible.ToUInt64
    parameters:
    - id: provider
      type: System.IFormatProvider
      description: "\n<p>An object that implements the <xref href=\"System.IFormatProvider\" data-throw-if-not-resolved=\"false\"></xref> interface. (This parameter is not used; specify <strong>null</strong>.)</p>\n"
    return:
      type: System.UInt64
      description: "\n<p>The return value for this member is not used.</p>\n"
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "\n<p>In all cases.</p>\n"
  implements:
  - System.IConvertible.ToUInt64(System.IFormatProvider)
  name.vb: System.IConvertible.ToUInt64(IFormatProvider)
- uid: System.DateTime.ToBinary
  commentId: M:System.DateTime.ToBinary
  id: ToBinary
  parent: System.DateTime
  langs:
  - csharp
  - vb
  name: ToBinary()
  fullName: System.DateTime.ToBinary()
  type: Method
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ToBinary
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 485
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Serializes the current <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> object to a 64-bit binary value that subsequently can be used to recreate the <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  remarks: "\n<p>Use the <xref href=\"System.DateTime.ToBinary\" data-throw-if-not-resolved=\"false\"></xref> method to convert the value of the current <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> object to a binary value. Subsequently, use the binary value and the <xref href=\"System.DateTime.FromBinary(System.Int64)\" data-throw-if-not-resolved=\"false\"></xref> method to recreate the original <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n<p>In some cases, the <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> value returned by the <xref href=\"System.DateTime.FromBinary(System.Int64)\" data-throw-if-not-resolved=\"false\"></xref> method is not identical to the original <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> value supplied to the <xref href=\"System.DateTime.ToBinary\" data-throw-if-not-resolved=\"false\"></xref> method. For more information, see the next section, \"Local Time Adjustment\".</p>\n"
  example:
  - 
  syntax:
    content: public long ToBinary()
    content.vb: Public Function ToBinary As Long
    return:
      type: System.Int64
      description: "\n<p>A 64-bit signed integer that encodes the <xref href=\"System.DateTime.Kind\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"System.DateTime.Ticks\" data-throw-if-not-resolved=\"false\"></xref> properties. </p>\n"
  seealso:
  - type: System.DateTime.FromBinary(System.Int64)
    commentId: M:System.DateTime.FromBinary(System.Int64)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.DateTime.ToFileTime
  commentId: M:System.DateTime.ToFileTime
  id: ToFileTime
  parent: System.DateTime
  langs:
  - csharp
  - vb
  name: ToFileTime()
  fullName: System.DateTime.ToFileTime()
  type: Method
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ToFileTime
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 486
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Converts the value of the current <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> object to a Windows file time.</p>\n"
  remarks: "\n<p>A Windows file time is a 64-bit value that represents the number of 100-nanosecond intervals that have elapsed since 12:00 midnight, January 1, 1601 A.D. (C.E.) Coordinated Universal Time (UTC). Windows uses a file time to record when an application creates, accesses, or writes to a file. </p>\n<p>The <xref href=\"System.DateTime.ToFileTime\" data-throw-if-not-resolved=\"false\"></xref> method uses the <xref href=\"System.DateTime.Kind\" data-throw-if-not-resolved=\"false\"></xref> property to determine whether the current <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> object is a local time, a UTC time, or an unspecified kind of time which is treated as a local time. </p>\n"
  example:
  - "\n<p>The following example demonstrates the <xref href=\"System.DateTime.ToFileTime\" data-throw-if-not-resolved=\"false\"></xref> method.</p>DateTime.ToFileTime#1"
  syntax:
    content: public long ToFileTime()
    content.vb: Public Function ToFileTime As Long
    return:
      type: System.Int64
      description: "\n<p>The value of the current <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> object expressed as a Windows file time.</p>\n"
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>The resulting file time would represent a date and time before 12:00 midnight January 1, 1601 C.E. UTC. </p>\n"
  seealso:
  - type: System.DateTime.ToFileTimeUtc
    commentId: M:System.DateTime.ToFileTimeUtc
  - type: System.Int64
    commentId: T:System.Int64
  - type: System.DateTime.ToUniversalTime
    commentId: M:System.DateTime.ToUniversalTime
  - type: System.TimeZone.GetUtcOffset(System.DateTime)
    commentId: M:System.TimeZone.GetUtcOffset(System.DateTime)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.DateTime.ToFileTimeUtc
  commentId: M:System.DateTime.ToFileTimeUtc
  id: ToFileTimeUtc
  parent: System.DateTime
  langs:
  - csharp
  - vb
  name: ToFileTimeUtc()
  fullName: System.DateTime.ToFileTimeUtc()
  type: Method
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ToFileTimeUtc
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 487
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Converts the value of the current <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> object to a Windows file time.</p>\n"
  remarks: "\n<p>A Windows file time is a 64-bit value that represents the number of 100-nanosecond intervals that have elapsed since 12:00 midnight, January 1, 1601 A.D. (C.E.) Coordinated Universal Time (UTC). Windows uses a file time to record when an application creates, accesses, or writes to a file. </p>\n<p>The <xref href=\"System.DateTime.ToFileTimeUtc\" data-throw-if-not-resolved=\"false\"></xref> method uses the <xref href=\"System.DateTime.Kind\" data-throw-if-not-resolved=\"false\"></xref> property to determine whether the current <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> object is a local time, a UTC time, or an unspecified kind of time which is treated as a UTC time. If it is a local time, it converts the time to UTC before performing the conversion to a Windows file time.</p>\n"
  syntax:
    content: public long ToFileTimeUtc()
    content.vb: Public Function ToFileTimeUtc As Long
    return:
      type: System.Int64
      description: "\n<p>The value of the current <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> object expressed as a Windows file time.</p>\n"
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>The resulting file time would represent a date and time before 12:00 midnight January 1, 1601 C.E. UTC. </p>\n"
  seealso:
  - type: System.DateTime.ToFileTime
    commentId: M:System.DateTime.ToFileTime
  - type: System.Int64
    commentId: T:System.Int64
  - type: System.DateTime.ToUniversalTime
    commentId: M:System.DateTime.ToUniversalTime
  - type: System.TimeZone.GetUtcOffset(System.DateTime)
    commentId: M:System.TimeZone.GetUtcOffset(System.DateTime)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.DateTime.ToLocalTime
  commentId: M:System.DateTime.ToLocalTime
  id: ToLocalTime
  parent: System.DateTime
  langs:
  - csharp
  - vb
  name: ToLocalTime()
  fullName: System.DateTime.ToLocalTime()
  type: Method
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ToLocalTime
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 488
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Converts the value of the current <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> object to local time.</p>\n"
  remarks: "\n<p>The local time is equal to the Coordinated Universal Time (UTC) time plus the UTC offset. For more information about the UTC offset, see <xref href=\"System.TimeZone.GetUtcOffset(System.DateTime)\" data-throw-if-not-resolved=\"false\"></xref>. The conversion also takes into account the daylight saving time rule that applies to the time represented by the current <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> object. </p>\n<p>On Windows XP systems, the <xref href=\"System.DateTime.ToLocalTime\" data-throw-if-not-resolved=\"false\"></xref> method recognizes only the current adjustment rule when converting from UTC to local time. As a result, conversions for periods before the current adjustment rule came into effect may not accurately reflect the difference between UTC and local time.  </p>\n<p>Starting with the .NET Framework version 2.0, the value returned by the <xref href=\"System.DateTime.ToLocalTime\" data-throw-if-not-resolved=\"false\"></xref> method is determined by the <xref href=\"System.DateTime.Kind\" data-throw-if-not-resolved=\"false\"></xref> property of the current <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> object. The following table describes the possible results. </p>\n<p>Kind</p>\n<p>Results</p>\n<table><tbody><tr><td>\n<p>\n<xref href=\"System.DateTimeKind.Utc\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td><td>\n<p>This instance of <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> is converted to local time.</p>\n</td></tr><tr><td>\n<p>\n<xref href=\"System.DateTimeKind.Local\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td><td>\n<p>No conversion is performed.</p>\n</td></tr><tr><td>\n<p>\n<xref href=\"System.DateTimeKind.Unspecified\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td><td>\n<p>This instance of <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> is assumed to be a UTC time, and the conversion is performed as if <xref href=\"System.DateTime.Kind\" data-throw-if-not-resolved=\"false\"></xref> were <xref href=\"System.DateTimeKind.Utc\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n</td></tr></tbody></table>\n<p>The <xref href=\"System.DateTime.ToLocalTime\" data-throw-if-not-resolved=\"false\"></xref> method converts a <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> value from UTC to local time. To convert the time in any designated time zone to local time, use the <xref href=\"System.TimeZoneInfo.ConvertTime(System.DateTime,System.TimeZoneInfo,System.TimeZoneInfo)\" data-throw-if-not-resolved=\"false\"></xref> method.</p>\n<p>The value returned by the conversion is a <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> whose <xref href=\"System.DateTime.Kind\" data-throw-if-not-resolved=\"false\"></xref> property always returns <xref href=\"System.DateTimeKind.Local\" data-throw-if-not-resolved=\"false\"></xref>. Consequently, a valid result is returned even if <xref href=\"System.DateTime.ToLocalTime\" data-throw-if-not-resolved=\"false\"></xref> is applied repeatedly to the same <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  example:
  - "\n<p>The following example demonstrates the <xref href=\"System.DateTime.ToLocalTime\" data-throw-if-not-resolved=\"false\"></xref> method. Note that the exact output depends on the current culture and the local time zone of the system on which it is run. </p>DateTime.ToLocalTime ToUniversalTime#1<p>The following example uses the <xref href=\"System.DateTime.SpecifyKind(System.DateTime,System.DateTimeKind)\" data-throw-if-not-resolved=\"false\"></xref> method to demonstrate how the <xref href=\"System.DateTime.Kind\" data-throw-if-not-resolved=\"false\"></xref> property influences the <xref href=\"System.DateTime.ToLocalTime\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"System.DateTime.ToUniversalTime\" data-throw-if-not-resolved=\"false\"></xref> conversion methods.</p>DateTime.Kind_Suite#1"
  syntax:
    content: public DateTime ToLocalTime()
    content.vb: Public Function ToLocalTime As Date
    return:
      type: System.DateTime
      description: "\n<p>An object whose <xref href=\"System.DateTime.Kind\" data-throw-if-not-resolved=\"false\"></xref> property is <xref href=\"System.DateTimeKind.Local\" data-throw-if-not-resolved=\"false\"></xref>, and whose value is the local time equivalent to the value of the current <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> object, or <xref href=\"System.DateTime.MaxValue\" data-throw-if-not-resolved=\"false\"></xref> if the converted value is too large to be represented by a <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> object, or <xref href=\"System.DateTime.MinValue\" data-throw-if-not-resolved=\"false\"></xref> if the converted value is too small to be represented as a <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  seealso:
  - type: System.TimeZone
    commentId: T:System.TimeZone
  - type: System.TimeZone.GetUtcOffset(System.DateTime)
    commentId: M:System.TimeZone.GetUtcOffset(System.DateTime)
  - type: System.TimeZone.GetDaylightChanges(System.Int32)
    commentId: M:System.TimeZone.GetDaylightChanges(System.Int32)
  - type: System.DateTime.ToUniversalTime
    commentId: M:System.DateTime.ToUniversalTime
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.DateTime.ToString
  commentId: M:System.DateTime.ToString
  id: ToString
  parent: System.DateTime
  langs:
  - csharp
  - vb
  name: ToString()
  fullName: System.DateTime.ToString()
  type: Method
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ToString
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 489
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Converts the value of the current <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> object to its equivalent string representation using the formatting conventions of the current culture.</p>\n"
  remarks: "\n<p>The value of the current <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> object is formatted using the general date and time format specifier ('G'). To format it using a specific date and time format specifier, call the <xref href=\"System.DateTime.ToString(System.String)\" data-throw-if-not-resolved=\"false\"></xref> method. To format it using the general date and time format specifier ('G') for a specific culture, call the <xref href=\"System.DateTime.ToString(System.IFormatProvider)\" data-throw-if-not-resolved=\"false\"></xref> method. To format it using a specific date and time format specifier and the conventions of a specific culture, call the <xref href=\"System.DateTime.ToString(System.String,System.IFormatProvider)\" data-throw-if-not-resolved=\"false\"></xref> method.</p>\n<p>This method uses formatting information derived from the current culture. In particular, it combines the custom format strings returned by the <xref href=\"System.Globalization.DateTimeFormatInfo.ShortDatePattern\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"System.Globalization.DateTimeFormatInfo.LongTimePattern\" data-throw-if-not-resolved=\"false\"></xref> properties of the <xref href=\"System.Globalization.DateTimeFormatInfo\" data-throw-if-not-resolved=\"false\"></xref> object returned by the <strong>Thread.CurrentThread.CurrentCulture.DateTimeFormat</strong> property. For more information, see <xref href=\"System.Globalization.CultureInfo.CurrentCulture\" data-throw-if-not-resolved=\"false\"></xref>. Other overloads of the <see cref=\"Overload:System.DateTime.ToString\"></see> method enable you to specify the culture whose formatting to use and to define the output pattern of the <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> value.</p>\n"
  example:
  - "\n<p>The following example illustrates how the string representation of a <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> value returned by the <xref href=\"System.DateTime.ToString\" data-throw-if-not-resolved=\"false\"></xref> method depends on the thread current culture. It changes the current thread culture from en-US to fr-FR to ja-JP. and in each case calls the <xref href=\"System.DateTime.ToString\" data-throw-if-not-resolved=\"false\"></xref> method to return the string representation of a date and time value using that culture.</p>System.DateTime.ToString#1"
  syntax:
    content: public override string ToString()
    content.vb: Public Overrides Function ToString As String
    return:
      type: System.String
      description: "\n<p>A string representation of the value of the current <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  overridden: System.ValueType.ToString
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>The date and time is outside the range of dates supported by the calendar used by the current culture. </p>\n"
  seealso:
  - type: System.Globalization.DateTimeFormatInfo
    commentId: T:System.Globalization.DateTimeFormatInfo
  - type: System.Globalization.CultureInfo
    commentId: T:System.Globalization.CultureInfo
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.DateTime.ToString(System.IFormatProvider)
  commentId: M:System.DateTime.ToString(System.IFormatProvider)
  id: ToString(System.IFormatProvider)
  parent: System.DateTime
  langs:
  - csharp
  - vb
  name: ToString(IFormatProvider)
  fullName: System.DateTime.ToString(System.IFormatProvider)
  type: Method
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ToString
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 490
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Converts the value of the current <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> object to its equivalent string representation using the specified culture-specific format information.</p>\n"
  remarks: "\n<p>The value of the current <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> object is formatted using the general date and time format specifier ('G'), which formats output using the short date pattern and the long time pattern. </p>\n<p>The format of the short date and long time pattern is defined by the <em>provider</em> parameter. The <em>provider</em> parameter can be any of the following: </p>\n<ul><li>\n<p>A <xref href=\"System.Globalization.CultureInfo\" data-throw-if-not-resolved=\"false\"></xref> object that represents the culture whose formatting conventions are to be reflected in the returned string. The <xref href=\"System.Globalization.DateTimeFormatInfo\" data-throw-if-not-resolved=\"false\"></xref> object returned by the <xref href=\"System.Globalization.CultureInfo.DateTimeFormat\" data-throw-if-not-resolved=\"false\"></xref> property defines the formatting of the returned string.</p>\n</li><li>\n<p>A <xref href=\"System.Globalization.DateTimeFormatInfo\" data-throw-if-not-resolved=\"false\"></xref> object that defines the format of date and time data.</p>\n</li><li>\n<p>A custom object that implements the <xref href=\"System.IFormatProvider\" data-throw-if-not-resolved=\"false\"></xref> interface. Its <xref href=\"System.IFormatProvider.GetFormat(System.Type)\" data-throw-if-not-resolved=\"false\"></xref> method returns a <xref href=\"System.Globalization.DateTimeFormatInfo\" data-throw-if-not-resolved=\"false\"></xref> object that provides formatting information.</p>\n</li></ul>\n<p>If <em>provider</em> is <strong>null</strong>, the <xref href=\"System.Globalization.DateTimeFormatInfo\" data-throw-if-not-resolved=\"false\"></xref> object associated with the current culture is used. For more information, see <xref href=\"System.Globalization.CultureInfo.CurrentCulture\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  example:
  - "\n<p>The following example displays the string representation of a date and time using <xref href=\"System.Globalization.CultureInfo\" data-throw-if-not-resolved=\"false\"></xref> objects that represent five different cultures. </p>System.DateTime.ToString#3"
  syntax:
    content: public string ToString(IFormatProvider provider)
    content.vb: Public Function ToString(provider As IFormatProvider) As String
    parameters:
    - id: provider
      type: System.IFormatProvider
      description: "\n<p>An object that supplies culture-specific formatting information. </p>\n"
    return:
      type: System.String
      description: "\n<p>A string representation of value of the current <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> object as specified by <em>provider</em>.</p>\n"
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>The date and time is outside the range of dates supported by the calendar used by <em>provider</em>. </p>\n"
  seealso:
  - type: System.Globalization.DateTimeFormatInfo
    commentId: T:System.Globalization.DateTimeFormatInfo
  - type: System.Globalization.CultureInfo
    commentId: T:System.Globalization.CultureInfo
  implements:
  - System.IConvertible.ToString(System.IFormatProvider)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.DateTime.ToString(System.String)
  commentId: M:System.DateTime.ToString(System.String)
  id: ToString(System.String)
  parent: System.DateTime
  langs:
  - csharp
  - vb
  name: ToString(String)
  fullName: System.DateTime.ToString(System.String)
  type: Method
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ToString
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 491
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Converts the value of the current <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> object to its equivalent string representation using the specified format and the formatting conventions of the current culture.</p>\n"
  remarks: "\n<p>The <xref href=\"System.DateTime.ToString(System.String)\" data-throw-if-not-resolved=\"false\"></xref> method returns the string representation of a date and time value in a specific format that uses the formatting conventions of the current culture; for more information, see <xref href=\"System.Globalization.CultureInfo.CurrentCulture\" data-throw-if-not-resolved=\"false\"></xref>. </p>\n<p>The <em>format</em> parameter should contain either a single format specifier character (see Standard Date and Time Format Strings) or a custom format pattern (see Custom Date and Time Format Strings) that defines the format of the returned string. If <em>format</em> is <strong>null</strong> or an empty string, the general format specifier, 'G', is used.</p>\n<p>Some uses of this method include: </p>\n<ul><li>\n<p>Getting a string that displays the date and time in the current culture’s short date and time format. To do this, you use the “G” format specifier. </p>\n</li><li>\n<p>Getting a string that contains only the month and year. To do this, you use the “MM/yyyy” format string. The format string uses the current culture’s date separator. </p>\n</li><li>\n<p>Getting a string that contains the date and time in a specific format. For example, the “MM/dd/yyyyHH:mm” format string displays the date and time string in a fixed format such as “19//03//2013 18:06\". The format string uses “/” as a fixed date separator regardless of culture-specific settings. </p>\n</li><li>\n<p>Getting a date in a condensed format that could be used for serializing a date string. For example, the \"yyyyMMdd\" format string displays a four-digit year followed by a two-digit month and a two-digit day with no date separator. </p>\n</li></ul>\n<p>The following example uses these three format strings to display a date and time value by using the conventions of the en-US and fr-FR cultures. </p>System.DateTime.ToString#5"
  example:
  - "\n<p>The following example uses each of the standard date and time format strings and a selection of custom date and time format strings to display the string representation of a <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> value. The thread current culture for the example is en-US. </p>System.DateTime.ToString#2"
  syntax:
    content: public string ToString(string format)
    content.vb: Public Function ToString(format As String) As String
    parameters:
    - id: format
      type: System.String
      description: "\n<p>A standard or custom date and time format string (see Remarks). </p>\n"
    return:
      type: System.String
      description: "\n<p>A string representation of value of the current <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> object as specified by <em>format</em>.</p>\n"
  exceptions:
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "\n<p>The length of <em>format</em> is 1, and it is not one of the format specifier characters defined for <xref href=\"System.Globalization.DateTimeFormatInfo\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>-or- </p>\n<p>\n<em>format</em> does not contain a valid custom format pattern. </p>\n"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>The date and time is outside the range of dates supported by the calendar used by the current culture.</p>\n"
  seealso:
  - type: System.Globalization.DateTimeFormatInfo
    commentId: T:System.Globalization.DateTimeFormatInfo
  - type: System.Globalization.CultureInfo
    commentId: T:System.Globalization.CultureInfo
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.DateTime.ToString(System.String,System.IFormatProvider)
  commentId: M:System.DateTime.ToString(System.String,System.IFormatProvider)
  id: ToString(System.String,System.IFormatProvider)
  parent: System.DateTime
  langs:
  - csharp
  - vb
  name: ToString(String, IFormatProvider)
  fullName: System.DateTime.ToString(System.String, System.IFormatProvider)
  type: Method
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ToString
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 492
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Converts the value of the current <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> object to its equivalent string representation using the specified format and culture-specific format information.</p>\n"
  remarks: "\n<p>The <em>format</em> parameter can contain either a single format specifier character (see Standard Date and Time Format Strings) or a custom format pattern (see Custom Date and Time Format Strings). If <em>format</em>is <strong>null</strong> or an empty string (\"\"), the standard format specifier, \"G\", is used.</p>\n<p>The <em>provider</em> parameter defines the pattern that corresponds to the standard format specifiers, as well as the symbols and names of date and time components. The <em>provider</em> parameter can be any of the following:</p>\n<ul><li>\n<p>A <xref href=\"System.Globalization.CultureInfo\" data-throw-if-not-resolved=\"false\"></xref> object that represents the culture whose formatting conventions are to be reflected in the returned string. The <xref href=\"System.Globalization.DateTimeFormatInfo\" data-throw-if-not-resolved=\"false\"></xref> object returned by the <xref href=\"System.Globalization.CultureInfo.DateTimeFormat\" data-throw-if-not-resolved=\"false\"></xref> property defines the formatting of the returned string.</p>\n</li><li>\n<p>A <xref href=\"System.Globalization.DateTimeFormatInfo\" data-throw-if-not-resolved=\"false\"></xref> object that defines the format of date and time data.</p>\n</li><li>\n<p>A custom object that implements the <xref href=\"System.IFormatProvider\" data-throw-if-not-resolved=\"false\"></xref> interface. Its <xref href=\"System.IFormatProvider.GetFormat(System.Type)\" data-throw-if-not-resolved=\"false\"></xref> method returns a <xref href=\"System.Globalization.DateTimeFormatInfo\" data-throw-if-not-resolved=\"false\"></xref> object that provides formatting information.</p>\n</li></ul>\n<p>If <em>provider</em> is <strong>null</strong>, the <xref href=\"System.Globalization.DateTimeFormatInfo\" data-throw-if-not-resolved=\"false\"></xref> associated with the current culture is used. For more information, see <xref href=\"System.Globalization.CultureInfo.CurrentCulture\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  example:
  - "\n<p>The following example uses each of the standard date time format strings to display the string representation of a date and time for four different cultures.</p>System.DateTime.ToString#4<p>The following example demonstrates different ways of formatting a <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> value using the invariant <xref href=\"System.Globalization.DateTimeFormatInfo\" data-throw-if-not-resolved=\"false\"></xref>.</p>Classic DateTime.ToString2 Example#1"
  syntax:
    content: public string ToString(string format, IFormatProvider provider)
    content.vb: Public Function ToString(format As String, provider As IFormatProvider) As String
    parameters:
    - id: format
      type: System.String
      description: "\n<p>A standard or custom date and time format string. </p>\n"
    - id: provider
      type: System.IFormatProvider
      description: "\n<p>An object that supplies culture-specific formatting information. </p>\n"
    return:
      type: System.String
      description: "\n<p>A string representation of value of the current <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> object as specified by <em>format</em> and <em>provider</em>.</p>\n"
  exceptions:
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "\n<p>The length of <em>format</em> is 1, and it is not one of the format specifier characters defined for <xref href=\"System.Globalization.DateTimeFormatInfo\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>-or- </p>\n<p>\n<em>format</em> does not contain a valid custom format pattern. </p>\n"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>The date and time is outside the range of dates supported by the calendar used by <em>provider</em>. </p>\n"
  seealso:
  - type: System.Globalization.DateTimeFormatInfo
    commentId: T:System.Globalization.DateTimeFormatInfo
  - type: System.Globalization.CultureInfo
    commentId: T:System.Globalization.CultureInfo
  implements:
  - System.IFormattable.ToString(System.String,System.IFormatProvider)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.DateTime.ToUniversalTime
  commentId: M:System.DateTime.ToUniversalTime
  id: ToUniversalTime
  parent: System.DateTime
  langs:
  - csharp
  - vb
  name: ToUniversalTime()
  fullName: System.DateTime.ToUniversalTime()
  type: Method
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ToUniversalTime
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 493
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Converts the value of the current <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> object to Coordinated Universal Time (UTC).</p>\n"
  remarks: "\n<p>The Coordinated Universal Time (UTC) is equal to the local time minus the UTC offset. For more information about the UTC offset, see <xref href=\"System.TimeZone.GetUtcOffset(System.DateTime)\" data-throw-if-not-resolved=\"false\"></xref>. The conversion also takes into account the daylight saving time rule that applies to the time represented by the current <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> object. </p>\n<p>On Windows XP systems, the <xref href=\"System.DateTime.ToUniversalTime\" data-throw-if-not-resolved=\"false\"></xref> method recognizes only the current adjustment rule when converting from local time to UTC. As a result, conversions for periods before the current adjustment rule came into effect may not accurately reflect the difference between local time and UTC. </p>\n<p>Starting with the .NET Framework version 2.0, the value returned by the <xref href=\"System.DateTime.ToUniversalTime\" data-throw-if-not-resolved=\"false\"></xref> method is determined by the <xref href=\"System.DateTime.Kind\" data-throw-if-not-resolved=\"false\"></xref> property of the current <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> object. The following table describes the possible results. </p>\n<p>Kind</p>\n<p>Results</p>\n<table><tbody><tr><td>\n<p>\n<xref href=\"System.DateTimeKind.Utc\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td><td>\n<p>No conversion is performed.</p>\n</td></tr><tr><td>\n<p>\n<xref href=\"System.DateTimeKind.Local\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td><td>\n<p>The current <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> object is converted to UTC.</p>\n</td></tr><tr><td>\n<p>\n<xref href=\"System.DateTimeKind.Unspecified\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td><td>\n<p>The current <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> object is assumed to be a local time, and the conversion is performed as if <xref href=\"System.DateTime.Kind\" data-throw-if-not-resolved=\"false\"></xref> were <xref href=\"System.DateTimeKind.Local\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n</td></tr></tbody></table>\n<p>The <xref href=\"System.DateTime.ToUniversalTime\" data-throw-if-not-resolved=\"false\"></xref> method converts a <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> value from local time to UTC. To convert the time in a non-local time zone to UTC, use the <xref href=\"System.TimeZoneInfo.ConvertTimeToUtc(System.DateTime,System.TimeZoneInfo)\" data-throw-if-not-resolved=\"false\"></xref> method. To convert a time whose offset from UTC is known, use the <xref href=\"System.DateTimeOffset.ToUniversalTime\" data-throw-if-not-resolved=\"false\"></xref> method.</p>\n<p>If the date and time instance value is an ambiguous time, this method assumes that it is a standard time. (An ambiguous time is one that can map either to a standard time or to a daylight saving time in the local time zone) If the date and time instance value is an invalid time, this method simply subtracts the local time from the local time zone's UTC offset to return UTC. (An invalid time is one that does not exist because of the application of daylight saving time adjustment rules.)</p>\n"
  example:
  - "\n<p>The following example demonstrates the <xref href=\"System.DateTime.ToUniversalTime\" data-throw-if-not-resolved=\"false\"></xref> method.</p>DateTime.ToLocalTime ToUniversalTime#1<p>The following example uses the <xref href=\"System.DateTime.SpecifyKind(System.DateTime,System.DateTimeKind)\" data-throw-if-not-resolved=\"false\"></xref> method to demonstrate how the <xref href=\"System.DateTime.Kind\" data-throw-if-not-resolved=\"false\"></xref> property influences the <xref href=\"System.DateTime.ToLocalTime\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"System.DateTime.ToUniversalTime\" data-throw-if-not-resolved=\"false\"></xref> conversion methods.</p>DateTime.Kind_Suite#1"
  syntax:
    content: public DateTime ToUniversalTime()
    content.vb: Public Function ToUniversalTime As Date
    return:
      type: System.DateTime
      description: "\n<p>An object whose <xref href=\"System.DateTime.Kind\" data-throw-if-not-resolved=\"false\"></xref> property is <xref href=\"System.DateTimeKind.Utc\" data-throw-if-not-resolved=\"false\"></xref>, and whose value is the UTC equivalent to the value of the current <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> object, or <xref href=\"System.DateTime.MaxValue\" data-throw-if-not-resolved=\"false\"></xref> if the converted value is too large to be represented by a <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> object, or <xref href=\"System.DateTime.MinValue\" data-throw-if-not-resolved=\"false\"></xref> if the converted value is too small to be represented by a <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  seealso:
  - type: System.DateTime.ToLocalTime
    commentId: M:System.DateTime.ToLocalTime
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.DateTime.TryParse(System.String,System.DateTime@)
  commentId: M:System.DateTime.TryParse(System.String,System.DateTime@)
  id: TryParse(System.String,System.DateTime@)
  parent: System.DateTime
  langs:
  - csharp
  - vb
  name: TryParse(String, out DateTime)
  fullName: System.DateTime.TryParse(System.String, out System.DateTime)
  type: Method
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: TryParse
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 494
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Converts the specified string representation of a date and time to its <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> equivalent and returns a value that indicates whether the conversion succeeded.</p>\n"
  remarks: "\n<p>The <xref href=\"System.DateTime.TryParse(System.String,System.DateTime@)\" data-throw-if-not-resolved=\"false\"></xref> method is similar to the <xref href=\"System.DateTime.Parse(System.String)\" data-throw-if-not-resolved=\"false\"></xref> method, except that the <xref href=\"System.DateTime.TryParse(System.String,System.DateTime@)\" data-throw-if-not-resolved=\"false\"></xref> method does not throw an exception if the conversion fails.</p>\n<p>The string <em>s</em> is parsed using formatting information in the current <xref href=\"System.Globalization.DateTimeFormatInfo\" data-throw-if-not-resolved=\"false\"></xref> object, which is supplied implicitly by the current thread culture.</p>\n<p>This method tries to ignore unrecognized data, if possible, and fills in missing month, day, and year information with the current date. If <em>s</em> contains only a date and no time, this method assumes the time is 12:00 midnight. If <em>s</em> includes a date component with a two-digit year, it is converted to a year in the current culture's current calendar based on the value of the <xref href=\"System.Globalization.Calendar.TwoDigitYearMax\" data-throw-if-not-resolved=\"false\"></xref> property. Any leading, inner, or trailing white space character in <em>s</em> is ignored. The date and time can be bracketed with a pair of leading and trailing NUMBER SIGN characters ('#', U+0023), and can be trailed with one or more NULL characters (U+0000).</p>\n<p>Because the <xref href=\"System.DateTime.TryParse(System.String,System.DateTime@)\" data-throw-if-not-resolved=\"false\"></xref> method tries to parse the string representation of a date and time using the formatting rules of the current culture, trying to parse a particular string across different cultures can either fail or return different results. If a specific date and time format will be parsed across different locales, use the <xref href=\"System.DateTime.TryParse(System.String,System.IFormatProvider,System.Globalization.DateTimeStyles,System.DateTime@)\" data-throw-if-not-resolved=\"false\"></xref> method or one of the overloads of the <see cref=\"Overload:System.DateTime.TryParseExact\"></see> method and provide a format specifier.</p>\n<p>If <em>s</em> is the string representation of a leap day in a leap year in the current calendar, the method parses <em>s</em> successfully. If <em>s</em> is the string representation of a leap day in a non-leap year in the current culture's current calendar, the parse operation fails and the method returns <strong>false</strong>. </p>\n<p>If <em>s</em> contains no time zone information, <em>result</em> contains a <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> value whose <xref href=\"System.DateTime.Kind\" data-throw-if-not-resolved=\"false\"></xref> property is <xref href=\"System.DateTimeKind.Unspecified\" data-throw-if-not-resolved=\"false\"></xref> when the method returns. If the string to be parsed contains time zone information, <em>result</em> contains a <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> value whose <xref href=\"System.DateTime.Kind\" data-throw-if-not-resolved=\"false\"></xref> property is <xref href=\"System.DateTimeKind.Local\" data-throw-if-not-resolved=\"false\"></xref> when the method returns.</p>\n"
  example:
  - "\n<p>The following example passes a number of date and time strings to the <xref href=\"System.DateTime.TryParse(System.String,System.DateTime@)\" data-throw-if-not-resolved=\"false\"></xref> method.</p>System.DateTime.TryParse#1"
  syntax:
    content: public static bool TryParse(string s, out DateTime result)
    content.vb: Public Shared Function TryParse(s As String, ByRef result As Date) As Boolean
    parameters:
    - id: s
      type: System.String
      description: "\n<p>A string containing a date and time to convert. </p>\n"
    - id: result
      type: System.DateTime
      description: "\n<p>When this method returns, contains the <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> value equivalent to the date and time contained in <em>s</em>, if the conversion succeeded, or <xref href=\"System.DateTime.MinValue\" data-throw-if-not-resolved=\"false\"></xref> if the conversion failed. The conversion fails if the <em>s</em> parameter is <strong>null</strong>, is an empty string (\"\"), or does not contain a valid string representation of a date and time. This parameter is passed uninitialized. </p>\n"
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if the <em>s</em> parameter was converted successfully; otherwise, <strong>false</strong>.</p>\n"
  seealso:
  - type: System.Globalization.CultureInfo
    commentId: T:System.Globalization.CultureInfo
  - type: System.Globalization.DateTimeFormatInfo
    commentId: T:System.Globalization.DateTimeFormatInfo
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.DateTime.TryParse(System.String, ByRef System.DateTime)
  name.vb: TryParse(String, ByRef DateTime)
- uid: System.DateTime.TryParse(System.String,System.IFormatProvider,System.Globalization.DateTimeStyles,System.DateTime@)
  commentId: M:System.DateTime.TryParse(System.String,System.IFormatProvider,System.Globalization.DateTimeStyles,System.DateTime@)
  id: TryParse(System.String,System.IFormatProvider,System.Globalization.DateTimeStyles,System.DateTime@)
  parent: System.DateTime
  langs:
  - csharp
  - vb
  name: TryParse(String, IFormatProvider, DateTimeStyles, out DateTime)
  fullName: System.DateTime.TryParse(System.String, System.IFormatProvider, System.Globalization.DateTimeStyles, out System.DateTime)
  type: Method
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: TryParse
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 495
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Converts the specified string representation of a date and time to its <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> equivalent using the specified culture-specific format information and formatting style, and returns a value that indicates whether the conversion succeeded.</p>\n"
  remarks: "\n<p>The <xref href=\"System.DateTime.TryParse(System.String,System.IFormatProvider,System.Globalization.DateTimeStyles,System.DateTime@)\" data-throw-if-not-resolved=\"false\"></xref> method parses a string that can contain date, time, and time zone information. It is similar to the <xref href=\"System.DateTime.Parse(System.String,System.IFormatProvider,System.Globalization.DateTimeStyles)\" data-throw-if-not-resolved=\"false\"></xref> method, except that the <xref href=\"System.DateTime.TryParse(System.String,System.DateTime@)\" data-throw-if-not-resolved=\"false\"></xref> method does not throw an exception if the conversion fails.</p>\n<p>This method attempts to ignore unrecognized data and parse <em>s</em> completely. If <em>s</em> contains a time but no date, the method by default substitutes the current date or, if <em>styles</em> includes the <xref href=\"System.Globalization.DateTimeStyles.NoCurrentDateDefault\" data-throw-if-not-resolved=\"false\"></xref> flag, it substitutes <strong>DateTime.Date.MinValue</strong>. If <em>s</em> contains a date but no time, 12:00 midnight is used as the default time. If a date is present but its year component consists of only two digits, it is converted to a year in the <em>provider</em> parameter's current calendar based on the value of the <xref href=\"System.Globalization.Calendar.TwoDigitYearMax\" data-throw-if-not-resolved=\"false\"></xref> property. Any leading, inner, or trailing white space characters in <em>s</em> are ignored. The date and time can be bracketed with a pair of leading and trailing NUMBER SIGN characters ('#', U+0023), and can be trailed with one or more NULL characters (U+0000).</p>\n<p>Specific valid formats for date and time elements, as well as the names and symbols used in dates and times, are defined by the <em>provider</em> parameter, which can be any of the following:</p>\n<ul><li>\n<p>A <xref href=\"System.Globalization.CultureInfo\" data-throw-if-not-resolved=\"false\"></xref> object that represents the culture whose formatting is used in the <em>s</em> parameter. The <xref href=\"System.Globalization.DateTimeFormatInfo\" data-throw-if-not-resolved=\"false\"></xref> object returned by the <xref href=\"System.Globalization.CultureInfo.DateTimeFormat\" data-throw-if-not-resolved=\"false\"></xref> property defines the formatting used in <em>s</em>.</p>\n</li><li>\n<p>A <xref href=\"System.Globalization.DateTimeFormatInfo\" data-throw-if-not-resolved=\"false\"></xref> object that defines the formatting used in <em>s</em>.</p>\n</li><li>\n<p>A custom <xref href=\"System.IFormatProvider\" data-throw-if-not-resolved=\"false\"></xref> implementation. Its <xref href=\"System.IFormatProvider.GetFormat(System.Type)\" data-throw-if-not-resolved=\"false\"></xref> method returns a <xref href=\"System.Globalization.DateTimeFormatInfo\" data-throw-if-not-resolved=\"false\"></xref> object that defines the formatting used in <em>s</em>.</p>\n</li></ul>\n<p>If <em>provider</em> is <strong>null</strong>, the current culture is used.</p>\n<p>If <em>s</em> is the string representation of a leap day in a leap year in the current calendar, the method parses <em>s</em> successfully. If <em>s</em> is the string representation of a leap day in a non-leap year in the current calendar of <em>provider</em>, the parse operation fails and the method returns <strong>false</strong>. </p>\n<p>The <em>styles</em> parameter defines the precise interpretation of the parsed string and how the parse operation should handle it. It can be one or more members of the <xref href=\"System.Globalization.DateTimeStyles\" data-throw-if-not-resolved=\"false\"></xref> enumeration, as described in the following table.</p>\n<p>DateTimeStyles member</p>\n<p>Description</p>\n<table><tbody><tr><td>\n<p>\n<xref href=\"System.Globalization.DateTimeStyles.AdjustToUniversal\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td><td>\n<p>Parses <em>s</em> and, if necessary, converts it to UTC. If <em>s</em> includes a time zone offset, or if <em>s</em> contains no time zone information but <em>styles</em> includes the <xref href=\"System.Globalization.DateTimeStyles.AssumeLocal\" data-throw-if-not-resolved=\"false\"></xref> flag, the method parses the string, calls <xref href=\"System.DateTime.ToUniversalTime\" data-throw-if-not-resolved=\"false\"></xref> to convert the returned <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> value to UTC, and sets the <xref href=\"System.DateTime.Kind\" data-throw-if-not-resolved=\"false\"></xref> property to <xref href=\"System.DateTimeKind.Utc\" data-throw-if-not-resolved=\"false\"></xref>. If <em>s</em> indicates that it represents UTC, or if <em>s</em> does not contain time zone information but <em>styles</em> includes the <xref href=\"System.Globalization.DateTimeStyles.AssumeUniversal\" data-throw-if-not-resolved=\"false\"></xref> flag, the method parses the string, performs no time zone conversion on the returned <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> value, and sets the <xref href=\"System.DateTime.Kind\" data-throw-if-not-resolved=\"false\"></xref> property to <xref href=\"System.DateTimeKind.Utc\" data-throw-if-not-resolved=\"false\"></xref>. In all other cases, the flag has no effect.</p>\n</td></tr><tr><td>\n<p>\n<xref href=\"System.Globalization.DateTimeStyles.AllowInnerWhite\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td><td>\n<p>Although valid, this value is ignored. Inner white space is permitted in the date and time elements of <em>s</em>.</p>\n</td></tr><tr><td>\n<p>\n<xref href=\"System.Globalization.DateTimeStyles.AllowLeadingWhite\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td><td>\n<p>Although valid, this value is ignored. Leading white space is permitted in the date and time elements of <em>s</em>.</p>\n</td></tr><tr><td>\n<p>\n<xref href=\"System.Globalization.DateTimeStyles.AllowTrailingWhite\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td><td>\n<p>Although valid, this value is ignored. Trailing white space is permitted in the date and time elements of <em>s</em>.</p>\n</td></tr><tr><td>\n<p>\n<xref href=\"System.Globalization.DateTimeStyles.AllowWhiteSpaces\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td><td>\n<p>Specifies that <em>s</em> may contain leading, inner, and trailing white spaces. This is the default behavior. It cannot be overridden by supplying a more restrictive <xref href=\"System.Globalization.DateTimeStyles\" data-throw-if-not-resolved=\"false\"></xref> enumeration value such as <xref href=\"System.Globalization.DateTimeStyles.None\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n</td></tr><tr><td>\n<p>\n<xref href=\"System.Globalization.DateTimeStyles.AssumeLocal\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td><td>\n<p>Specifies that if <em>s</em> lacks any time zone information, it is assumed to represent a local time. Unless the <xref href=\"System.Globalization.DateTimeStyles.AdjustToUniversal\" data-throw-if-not-resolved=\"false\"></xref> flag is present, the <xref href=\"System.DateTime.Kind\" data-throw-if-not-resolved=\"false\"></xref> property of the returned <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> value is set to <xref href=\"System.DateTimeKind.Local\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n</td></tr><tr><td>\n<p>\n<xref href=\"System.Globalization.DateTimeStyles.AssumeUniversal\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td><td>\n<p>Specifies that if <em>s</em> lacks any time zone information, it is assumed to represent UTC. Unless the <xref href=\"System.Globalization.DateTimeStyles.AdjustToUniversal\" data-throw-if-not-resolved=\"false\"></xref> flag is present, the method converts the returned <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> value from UTC to local time and sets its <xref href=\"System.DateTime.Kind\" data-throw-if-not-resolved=\"false\"></xref> property to <xref href=\"System.DateTimeKind.Local\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n</td></tr><tr><td>\n<p>\n<xref href=\"System.Globalization.DateTimeStyles.None\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td><td>\n<p>Although valid, this value is ignored.</p>\n</td></tr><tr><td>\n<p>\n<xref href=\"System.Globalization.DateTimeStyles.RoundtripKind\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td><td>\n<p>For strings that contain time zone information, tries to prevent the conversion of a date and time string to a <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> value with its <xref href=\"System.DateTime.Kind\" data-throw-if-not-resolved=\"false\"></xref> property set to <xref href=\"System.DateTimeKind.Local\" data-throw-if-not-resolved=\"false\"></xref>. Typically, such a string is created by calling the <xref href=\"System.DateTime.ToString(System.String)\" data-throw-if-not-resolved=\"false\"></xref> method using either the \"o\", \"r\", or \"u\" standard format specifiers.</p>\n</td></tr></tbody></table>\n<p>If <em>s</em> contains no time zone information, the <xref href=\"System.DateTime.TryParse(System.String,System.IFormatProvider,System.Globalization.DateTimeStyles,System.DateTime@)\" data-throw-if-not-resolved=\"false\"></xref> method returns a <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> value whose <xref href=\"System.DateTime.Kind\" data-throw-if-not-resolved=\"false\"></xref> property is <xref href=\"System.DateTimeKind.Unspecified\" data-throw-if-not-resolved=\"false\"></xref> unless a <em>styles</em> flag indicates otherwise. If <em>s</em> includes time zone or time zone offset information, the <xref href=\"System.DateTime.TryParse(System.String,System.IFormatProvider,System.Globalization.DateTimeStyles,System.DateTime@)\" data-throw-if-not-resolved=\"false\"></xref> method performs any necessary time conversion and returns one of the following:</p>\n<ul><li>\n<p>A <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> value whose date and time reflect the local time and whose <xref href=\"System.DateTime.Kind\" data-throw-if-not-resolved=\"false\"></xref> property is <xref href=\"System.DateTimeKind.Local\" data-throw-if-not-resolved=\"false\"></xref>. </p>\n</li><li>\n<p>Or, if <em>styles</em> includes the <xref href=\"System.Globalization.DateTimeStyles.AdjustToUniversal\" data-throw-if-not-resolved=\"false\"></xref> flag, a <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> value whose date and time reflect UTC and whose <xref href=\"System.DateTime.Kind\" data-throw-if-not-resolved=\"false\"></xref> property is <xref href=\"System.DateTimeKind.Utc\" data-throw-if-not-resolved=\"false\"></xref>. </p>\n</li></ul>\n<p>This behavior can be overridden by using the <xref href=\"System.Globalization.DateTimeStyles.RoundtripKind\" data-throw-if-not-resolved=\"false\"></xref> flag.  </p>\n"
  example:
  - <p>The following example illustrates the <xref href="System.DateTime.TryParse(System.String,System.IFormatProvider,System.Globalization.DateTimeStyles,System.DateTime@)" data-throw-if-not-resolved="false"></xref> method.</p>System.DateTime.TryParse#2
  syntax:
    content: public static bool TryParse(string s, IFormatProvider provider, DateTimeStyles styles, out DateTime result)
    content.vb: Public Shared Function TryParse(s As String, provider As IFormatProvider, styles As DateTimeStyles, ByRef result As Date) As Boolean
    parameters:
    - id: s
      type: System.String
      description: "\n<p>A string containing a date and time to convert. </p>\n"
    - id: provider
      type: System.IFormatProvider
      description: "\n<p>An object that supplies culture-specific formatting information about <em>s</em>.</p>\n"
    - id: styles
      type: System.Globalization.DateTimeStyles
      description: "\n<p>A bitwise combination of enumeration values that defines how to interpret the parsed date in relation to the current time zone or the current date. A typical value to specify is <xref href=\"System.Globalization.DateTimeStyles.None\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
    - id: result
      type: System.DateTime
      description: "\n<p>When this method returns, contains the <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> value equivalent to the date and time contained in <em>s</em>, if the conversion succeeded, or <xref href=\"System.DateTime.MinValue\" data-throw-if-not-resolved=\"false\"></xref> if the conversion failed. The conversion fails if the <em>s</em> parameter is <strong>null</strong>, is an empty string (\"\"), or does not contain a valid string representation of a date and time. This parameter is passed uninitialized. </p>\n"
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if the <em>s</em> parameter was converted successfully; otherwise, <strong>false</strong>.</p>\n"
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<p>\n<em>styles</em> is not a valid <xref href=\"System.Globalization.DateTimeStyles\" data-throw-if-not-resolved=\"false\"></xref> value.</p>\n<p>-or-</p>\n<p>\n<em>styles</em> contains an invalid combination of <xref href=\"System.Globalization.DateTimeStyles\" data-throw-if-not-resolved=\"false\"></xref> values (for example, both <xref href=\"System.Globalization.DateTimeStyles.AssumeLocal\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"System.Globalization.DateTimeStyles.AssumeUniversal\" data-throw-if-not-resolved=\"false\"></xref>).</p>\n"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "\n<p>\n<em>provider</em> is a neutral culture and cannot be used in a parsing operation.</p>\n"
  seealso:
  - type: System.Globalization.CultureInfo
    commentId: T:System.Globalization.CultureInfo
  - type: System.Globalization.DateTimeFormatInfo
    commentId: T:System.Globalization.DateTimeFormatInfo
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.DateTime.TryParse(System.String, System.IFormatProvider, System.Globalization.DateTimeStyles, ByRef System.DateTime)
  name.vb: TryParse(String, IFormatProvider, DateTimeStyles, ByRef DateTime)
- uid: System.DateTime.TryParseExact(System.String,System.String,System.IFormatProvider,System.Globalization.DateTimeStyles,System.DateTime@)
  commentId: M:System.DateTime.TryParseExact(System.String,System.String,System.IFormatProvider,System.Globalization.DateTimeStyles,System.DateTime@)
  id: TryParseExact(System.String,System.String,System.IFormatProvider,System.Globalization.DateTimeStyles,System.DateTime@)
  parent: System.DateTime
  langs:
  - csharp
  - vb
  name: TryParseExact(String, String, IFormatProvider, DateTimeStyles, out DateTime)
  fullName: System.DateTime.TryParseExact(System.String, System.String, System.IFormatProvider, System.Globalization.DateTimeStyles, out System.DateTime)
  type: Method
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: TryParseExact
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 496
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Converts the specified string representation of a date and time to its <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> equivalent using the specified format, culture-specific format information, and style. The format of the string representation must match the specified format exactly. The method returns a value that indicates whether the conversion succeeded.</p>\n"
  remarks: "\n<p>The <xref href=\"System.DateTime.TryParseExact(System.String,System.String,System.IFormatProvider,System.Globalization.DateTimeStyles,System.DateTime@)\" data-throw-if-not-resolved=\"false\"></xref> method parses the string representation of a date, which must be in the format defined by the <em>format</em> parameter. It is similar to the <xref href=\"System.DateTime.ParseExact(System.String,System.String,System.IFormatProvider,System.Globalization.DateTimeStyles)\" data-throw-if-not-resolved=\"false\"></xref> method, except that the <xref href=\"System.DateTime.TryParseExact(System.String,System.String,System.IFormatProvider,System.Globalization.DateTimeStyles,System.DateTime@)\" data-throw-if-not-resolved=\"false\"></xref> method does not throw an exception if the conversion fails.</p>\n<p>The <em>s</em> parameter contains the date and time to parse and must be in a format defined by the <em>format</em> parameter. If date, time, and time zone elements are present in <em>s</em>, they must also appear in the order specified by <em>format</em>. If <em>format</em> defines a date with no time element and the parse operation succeeds, the resulting <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> value has a time of midnight (00:00:00). If <em>format</em> defines a time with no date element and the parse operation succeeds, the resulting <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> value by default has a date of <strong>DateTime.Now.Date</strong>, or it has a date of <strong>DateTime.MinValue.Date</strong> if <em>styles</em> includes the <xref href=\"System.Globalization.DateTimeStyles.NoCurrentDateDefault\" data-throw-if-not-resolved=\"false\"></xref> flag. The <em>style</em> parameter determines whether the <em>s</em> parameter can contain leading, inner, or trailing white space characters.</p>\n<p>If <em>s</em> contains no time zone information, the <xref href=\"System.DateTime.Kind\" data-throw-if-not-resolved=\"false\"></xref> property of the returned <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> object is <xref href=\"System.DateTimeKind.Unspecified\" data-throw-if-not-resolved=\"false\"></xref>. This behavior can be changed by using the <xref href=\"System.Globalization.DateTimeStyles.AssumeLocal\" data-throw-if-not-resolved=\"false\"></xref> flag, which returns a <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> value whose <xref href=\"System.DateTime.Kind\" data-throw-if-not-resolved=\"false\"></xref> property is <xref href=\"System.DateTimeKind.Local\" data-throw-if-not-resolved=\"false\"></xref>, or by using the <xref href=\"System.Globalization.DateTimeStyles.AssumeUniversal\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"System.Globalization.DateTimeStyles.AdjustToUniversal\" data-throw-if-not-resolved=\"false\"></xref> flags, which returns a <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> value whose <xref href=\"System.DateTime.Kind\" data-throw-if-not-resolved=\"false\"></xref> property is <xref href=\"System.DateTimeKind.Utc\" data-throw-if-not-resolved=\"false\"></xref>. If s contains time zone information, the time is converted to local time, if necessary, and the <xref href=\"System.DateTime.Kind\" data-throw-if-not-resolved=\"false\"></xref> property of the returned <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> object is set to <xref href=\"System.DateTimeKind.Local\" data-throw-if-not-resolved=\"false\"></xref>. This behavior can be changed by using the <xref href=\"System.Globalization.DateTimeStyles.RoundtripKind\" data-throw-if-not-resolved=\"false\"></xref> flag to not convert Coordinated Universal Time (UTC) to a local time and set the <xref href=\"System.DateTime.Kind\" data-throw-if-not-resolved=\"false\"></xref> property to <xref href=\"System.DateTimeKind.Utc\" data-throw-if-not-resolved=\"false\"></xref>. </p>\n<p>The <em>format</em> parameter contains a pattern that corresponds to the expected format of the <em>s</em> parameter. The pattern in the <em>format</em> parameter consists of one or more custom format specifiers from the Custom Date and Time Format Strings table, or a single standard format specifier, which identifies a predefined pattern, from the Standard Date and Time Format Strings table. </p>\n<p>If you do not use date or time separators in a custom format pattern, use the invariant culture for the <em>provider</em> parameter and the widest form of each custom format specifier. For example, if you want to specify hours in the pattern, specify the wider form, \"HH\", instead of the narrower form, \"H\".</p>\n<p>Rather than requiring that <em>s</em> conform to a single format for the parse operation to succeed, you can call the <xref href=\"System.DateTime.TryParseExact(System.String,System.String[],System.IFormatProvider,System.Globalization.DateTimeStyles,System.DateTime@)\" data-throw-if-not-resolved=\"false\"></xref> method and specify multiple permitted formats. This makes the parse operation more likely to succeed.</p>\n<p>The particular date and time symbols and strings (such as the names of the days of the week in a particular language) used in <em>s</em> are defined by the <em>provider</em> parameter, as is the precise format of <em>s</em> if <em>format</em> is a standard format specifier string. The <em>provider</em> parameter can be any of the following:</p>\n<ul><li>\n<p>A <xref href=\"System.Globalization.CultureInfo\" data-throw-if-not-resolved=\"false\"></xref> object that represents the culture used to interpret <em>s</em>. The <xref href=\"System.Globalization.DateTimeFormatInfo\" data-throw-if-not-resolved=\"false\"></xref> object returned by its <xref href=\"System.Globalization.CultureInfo.DateTimeFormat\" data-throw-if-not-resolved=\"false\"></xref> property defines the symbols and formatting in <em>s</em>.</p>\n</li><li>\n<p>A <xref href=\"System.Globalization.DateTimeFormatInfo\" data-throw-if-not-resolved=\"false\"></xref> object that defines the format of date and time data.</p>\n</li><li>\n<p>A custom <xref href=\"System.IFormatProvider\" data-throw-if-not-resolved=\"false\"></xref> implementation whose <xref href=\"System.IFormatProvider.GetFormat(System.Type)\" data-throw-if-not-resolved=\"false\"></xref> method returns either the <xref href=\"System.Globalization.CultureInfo\" data-throw-if-not-resolved=\"false\"></xref> object or the <xref href=\"System.Globalization.DateTimeFormatInfo\" data-throw-if-not-resolved=\"false\"></xref> object that provides formatting information. </p>\n</li></ul>\n<p>If <em>provider</em> is <strong>null</strong>, the <xref href=\"System.Globalization.CultureInfo\" data-throw-if-not-resolved=\"false\"></xref> object that corresponds to the current culture is used.</p>\n<p>The <em>styles</em> parameter includes one or more members of the <xref href=\"System.Globalization.DateTimeStyles\" data-throw-if-not-resolved=\"false\"></xref> enumeration that determine whether and where white space not defined by <em>format</em> can appear in <em>s</em> and that control the precise behavior of the parse operation. The following table describes how each member of the <xref href=\"System.Globalization.DateTimeStyles\" data-throw-if-not-resolved=\"false\"></xref> enumeration affects the operation of the <xref href=\"System.DateTime.TryParseExact(System.String,System.String,System.IFormatProvider,System.Globalization.DateTimeStyles,System.DateTime@)\" data-throw-if-not-resolved=\"false\"></xref> method.</p>\n<p>DateTimeStyles member</p>\n<p>Description</p>\n<table><tbody><tr><td>\n<p>\n<xref href=\"System.Globalization.DateTimeStyles.AdjustToUniversal\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td><td>\n<p>Parses <em>s</em> and, if necessary, converts it to UTC. If <em>s</em> includes a time zone offset, or if <em>s</em> contains no time zone information but <em>styles</em> includes the <xref href=\"System.Globalization.DateTimeStyles.AssumeLocal\" data-throw-if-not-resolved=\"false\"></xref> flag, the method parses the string, calls <xref href=\"System.DateTime.ToUniversalTime\" data-throw-if-not-resolved=\"false\"></xref> to convert the returned <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> value to UTC, and sets the <xref href=\"System.DateTime.Kind\" data-throw-if-not-resolved=\"false\"></xref> property to <xref href=\"System.DateTimeKind.Utc\" data-throw-if-not-resolved=\"false\"></xref>. If <em>s</em> indicates that it represents UTC, or if <em>s</em> does not contain time zone information but <em>styles</em> includes the <xref href=\"System.Globalization.DateTimeStyles.AssumeUniversal\" data-throw-if-not-resolved=\"false\"></xref> flag, the method parses the string, performs no time zone conversion on the returned <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> value, and sets the <xref href=\"System.DateTime.Kind\" data-throw-if-not-resolved=\"false\"></xref> property to <xref href=\"System.DateTimeKind.Utc\" data-throw-if-not-resolved=\"false\"></xref>. In all other cases, the flag has no effect.</p>\n</td></tr><tr><td>\n<p>\n<xref href=\"System.Globalization.DateTimeStyles.AllowInnerWhite\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td><td>\n<p>Specifies that white space not defined by <em>format</em> can appear between any individual date or time element.</p>\n</td></tr><tr><td>\n<p>\n<xref href=\"System.Globalization.DateTimeStyles.AllowLeadingWhite\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td><td>\n<p>Specifies that white space not defined by <em>format</em> can appear at the beginning of <em>s</em>.</p>\n</td></tr><tr><td>\n<p>\n<xref href=\"System.Globalization.DateTimeStyles.AllowTrailingWhite\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td><td>\n<p>Specifies that white space not defined by <em>format</em> can appear at the end of <em>s</em>. </p>\n</td></tr><tr><td>\n<p>\n<xref href=\"System.Globalization.DateTimeStyles.AllowWhiteSpaces\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td><td>\n<p>Specifies that <em>s</em> may contain leading, inner, and trailing white spaces not defined by <em>format</em>.</p>\n</td></tr><tr><td>\n<p>\n<xref href=\"System.Globalization.DateTimeStyles.AssumeLocal\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td><td>\n<p>Specifies that if <em>s</em> lacks any time zone information, it is assumed to represent a local time. Unless the <xref href=\"System.Globalization.DateTimeStyles.AdjustToUniversal\" data-throw-if-not-resolved=\"false\"></xref> flag is present, the <xref href=\"System.DateTime.Kind\" data-throw-if-not-resolved=\"false\"></xref> property of the returned <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref>value is set to <xref href=\"System.DateTimeKind.Local\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n</td></tr><tr><td>\n<p>\n<xref href=\"System.Globalization.DateTimeStyles.AssumeUniversal\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td><td>\n<p>Specifies that if <em>s</em> lacks any time zone information, it is assumed to represent UTC. Unless the <xref href=\"System.Globalization.DateTimeStyles.AdjustToUniversal\" data-throw-if-not-resolved=\"false\"></xref> flag is present, the method converts the returned <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> value from UTC to local time and sets its <xref href=\"System.DateTime.Kind\" data-throw-if-not-resolved=\"false\"></xref> property to <xref href=\"System.DateTimeKind.Local\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n</td></tr><tr><td>\n<p>\n<xref href=\"System.Globalization.DateTimeStyles.NoCurrentDateDefault\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td><td>\n<p>If <em>s</em> contains time without date information, the date of the return value is set to <strong>DateTime.MinValue.Date</strong>.</p>\n</td></tr><tr><td>\n<p>\n<xref href=\"System.Globalization.DateTimeStyles.None\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td><td>\n<p>The <em>s</em> parameter is parsed using default values. No white space other than that present in <em>format</em> is allowed. If <em>s</em> lacks a date component, the date of the returned <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> value is set to 1/1/0001. If <em>s</em> contains no time zone information, the <xref href=\"System.DateTime.Kind\" data-throw-if-not-resolved=\"false\"></xref> property of the returned <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> object is set to <xref href=\"System.DateTimeKind.Unspecified\" data-throw-if-not-resolved=\"false\"></xref>. If time zone information is present in <em>s</em>, the time is converted to local time and the <xref href=\"System.DateTime.Kind\" data-throw-if-not-resolved=\"false\"></xref> property of the returned <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> object is set to <xref href=\"System.DateTimeKind.Local\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n</td></tr><tr><td>\n<p>\n<xref href=\"System.Globalization.DateTimeStyles.RoundtripKind\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td><td>\n<p>For strings that contain time zone information, tries to prevent the conversion to a <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> value with its <xref href=\"System.DateTime.Kind\" data-throw-if-not-resolved=\"false\"></xref> property set to <xref href=\"System.DateTimeKind.Local\" data-throw-if-not-resolved=\"false\"></xref>. This flag primarily prevents the conversion of UTC times to local times.</p>\n</td></tr></tbody></table>\n"
  example:
  - "\n<p>The following example demonstrates the <xref href=\"System.DateTime.TryParseExact(System.String,System.String,System.IFormatProvider,System.Globalization.DateTimeStyles,System.DateTime@)\" data-throw-if-not-resolved=\"false\"></xref> method. Note that the string \" 5/01/2009 8:30 AM\" cannot be parsed successfully when the <em>styles</em> parameter equals <xref href=\"System.Globalization.DateTimeStyles.None\" data-throw-if-not-resolved=\"false\"></xref> because leading spaces are not allowed by <em>format</em>. Additionally, the string \"5/01/2009 09:00\" cannot be parsed successfully with a <em>format</em> of \"MM/dd/yyyyhh:mm\" because the date string does not precede the month number with a leading zero, as <em>format</em> requires.</p>System.DateTime.TryParseExact#1"
  syntax:
    content: public static bool TryParseExact(string s, string format, IFormatProvider provider, DateTimeStyles style, out DateTime result)
    content.vb: Public Shared Function TryParseExact(s As String, format As String, provider As IFormatProvider, style As DateTimeStyles, ByRef result As Date) As Boolean
    parameters:
    - id: s
      type: System.String
      description: "\n<p>A string containing a date and time to convert. </p>\n"
    - id: format
      type: System.String
      description: "\n<p>The required format of <em>s</em>. See the Remarks section for more information. </p>\n"
    - id: provider
      type: System.IFormatProvider
      description: "\n<p>An object that supplies culture-specific formatting information about <em>s</em>. </p>\n"
    - id: style
      type: System.Globalization.DateTimeStyles
      description: "\n<p>A bitwise combination of one or more enumeration values that indicate the permitted format of <em>s</em>. </p>\n"
    - id: result
      type: System.DateTime
      description: "\n<p>When this method returns, contains the <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> value equivalent to the date and time contained in <em>s</em>, if the conversion succeeded, or <xref href=\"System.DateTime.MinValue\" data-throw-if-not-resolved=\"false\"></xref> if the conversion failed. The conversion fails if either the <em>s</em> or <em>format</em> parameter is <strong>null</strong>, is an empty string, or does not contain a date and time that correspond to the pattern specified in <em>format</em>. This parameter is passed uninitialized. </p>\n"
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if <em>s</em> was converted successfully; otherwise, <strong>false</strong>.</p>\n"
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<p>\n<em>styles</em> is not a valid <xref href=\"System.Globalization.DateTimeStyles\" data-throw-if-not-resolved=\"false\"></xref> value.</p>\n<p>-or-</p>\n<p>\n<em>styles</em> contains an invalid combination of <xref href=\"System.Globalization.DateTimeStyles\" data-throw-if-not-resolved=\"false\"></xref> values (for example, both <xref href=\"System.Globalization.DateTimeStyles.AssumeLocal\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"System.Globalization.DateTimeStyles.AssumeUniversal\" data-throw-if-not-resolved=\"false\"></xref>).</p>\n"
  seealso:
  - type: System.Globalization.CultureInfo
    commentId: T:System.Globalization.CultureInfo
  - type: System.Globalization.DateTimeFormatInfo
    commentId: T:System.Globalization.DateTimeFormatInfo
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.DateTime.TryParseExact(System.String, System.String, System.IFormatProvider, System.Globalization.DateTimeStyles, ByRef System.DateTime)
  name.vb: TryParseExact(String, String, IFormatProvider, DateTimeStyles, ByRef DateTime)
- uid: System.DateTime.TryParseExact(System.String,System.String[],System.IFormatProvider,System.Globalization.DateTimeStyles,System.DateTime@)
  commentId: M:System.DateTime.TryParseExact(System.String,System.String[],System.IFormatProvider,System.Globalization.DateTimeStyles,System.DateTime@)
  id: TryParseExact(System.String,System.String[],System.IFormatProvider,System.Globalization.DateTimeStyles,System.DateTime@)
  parent: System.DateTime
  langs:
  - csharp
  - vb
  name: TryParseExact(String, String[], IFormatProvider, DateTimeStyles, out DateTime)
  fullName: System.DateTime.TryParseExact(System.String, System.String[], System.IFormatProvider, System.Globalization.DateTimeStyles, out System.DateTime)
  type: Method
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: TryParseExact
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 497
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Converts the specified string representation of a date and time to its <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> equivalent using the specified array of formats, culture-specific format information, and style. The format of the string representation must match at least one of the specified formats exactly. The method returns a value that indicates whether the conversion succeeded.</p>\n"
  remarks: "\n<p>The <xref href=\"System.DateTime.TryParseExact(System.String,System.String[],System.IFormatProvider,System.Globalization.DateTimeStyles,System.DateTime@)\" data-throw-if-not-resolved=\"false\"></xref> method parses the string representation of a date that matches any one of the patterns assigned to the <em>formats</em> parameter. It is like the <xref href=\"System.DateTime.ParseExact(System.String,System.String[],System.IFormatProvider,System.Globalization.DateTimeStyles)\" data-throw-if-not-resolved=\"false\"></xref> method, except the <xref href=\"System.DateTime.TryParseExact(System.String,System.String[],System.IFormatProvider,System.Globalization.DateTimeStyles,System.DateTime@)\" data-throw-if-not-resolved=\"false\"></xref> method does not throw an exception if the conversion fails.</p>\n<p>The <em>s</em> parameter contains the date and time to parse. If the <em>s</em> parameter contains only a time and no date, the current date is used unless the <em>style</em> parameter includes the <xref href=\"System.Globalization.DateTimeStyles.NoCurrentDateDefault\" data-throw-if-not-resolved=\"false\"></xref> flag, in which case the default date (<strong>DateTime.Date.MinValue</strong>) is used. If the <em>s</em> parameter contains only a date and no time, midnight (00:00:00) is used. The <em>style</em> parameter also determines whether the <em>s</em> parameter can contain leading, inner, or trailing white space characters other than those permitted by one of the format strings in <em>formats</em>.</p>\n<p>If <em>s</em> contains no time zone information, the <xref href=\"System.DateTime.Kind\" data-throw-if-not-resolved=\"false\"></xref> property of the returned <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> object is <xref href=\"System.DateTimeKind.Unspecified\" data-throw-if-not-resolved=\"false\"></xref>. This behavior can be changed by using the <xref href=\"System.Globalization.DateTimeStyles.AssumeLocal\" data-throw-if-not-resolved=\"false\"></xref> flag, which returns a <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> value whose <xref href=\"System.DateTime.Kind\" data-throw-if-not-resolved=\"false\"></xref> property is <xref href=\"System.DateTimeKind.Local\" data-throw-if-not-resolved=\"false\"></xref>, or by using the <xref href=\"System.Globalization.DateTimeStyles.AssumeUniversal\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"System.Globalization.DateTimeStyles.AdjustToUniversal\" data-throw-if-not-resolved=\"false\"></xref> flags, which returns a <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> value whose <xref href=\"System.DateTime.Kind\" data-throw-if-not-resolved=\"false\"></xref> property is <xref href=\"System.DateTimeKind.Utc\" data-throw-if-not-resolved=\"false\"></xref>. If s contains time zone information, the time is converted to local time, if necessary, and the <xref href=\"System.DateTime.Kind\" data-throw-if-not-resolved=\"false\"></xref> property of the returned <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> object is set to <xref href=\"System.DateTimeKind.Local\" data-throw-if-not-resolved=\"false\"></xref>. This behavior can be changed by using the <xref href=\"System.Globalization.DateTimeStyles.RoundtripKind\" data-throw-if-not-resolved=\"false\"></xref> flag to not convert Coordinated Universal Time (UTC) to a local time and set the <xref href=\"System.DateTime.Kind\" data-throw-if-not-resolved=\"false\"></xref> property to <xref href=\"System.DateTimeKind.Utc\" data-throw-if-not-resolved=\"false\"></xref>. </p>\n<p>The <em>formats</em> parameter contains an array of patterns, one of which <em>s</em> must match exactly if the parse operation is to succeed. The patterns in the <em>formats</em> parameter consist of one or more custom format specifiers from the Custom Date and Time Format Strings table, or a single standard format specifier, which identifies a predefined pattern, from the Standard Date and Time Format Strings table. </p>\n<p>If you do not use date or time separators in a custom format pattern, use the invariant culture for the <em>provider</em> parameter and the widest form of each custom format specifier. For example, if you want to specify hours in the pattern, specify the wider form, \"HH\", instead of the narrower form, \"H\".</p>\n<p>The particular date and time symbols and strings (such as the names of the days of the week in a particular language) used in <em>s</em> are defined by the <em>provider</em> parameter, as is the precise format of <em>s</em> if <em>format</em> is a standard format specifier string. The <em>provider</em> parameter can be any of the following:</p>\n<ul><li>\n<p>A <xref href=\"System.Globalization.CultureInfo\" data-throw-if-not-resolved=\"false\"></xref> object that represents the culture used to interpret <em>s</em>. The <xref href=\"System.Globalization.DateTimeFormatInfo\" data-throw-if-not-resolved=\"false\"></xref> object returned by its <xref href=\"System.Globalization.CultureInfo.DateTimeFormat\" data-throw-if-not-resolved=\"false\"></xref> property defines the symbols and formatting in <em>s</em>.</p>\n</li><li>\n<p>A <xref href=\"System.Globalization.DateTimeFormatInfo\" data-throw-if-not-resolved=\"false\"></xref> object that defines the format of date and time data.</p>\n</li><li>\n<p>A custom <xref href=\"System.IFormatProvider\" data-throw-if-not-resolved=\"false\"></xref> implementation whose <xref href=\"System.IFormatProvider.GetFormat(System.Type)\" data-throw-if-not-resolved=\"false\"></xref> method returns either the <xref href=\"System.Globalization.CultureInfo\" data-throw-if-not-resolved=\"false\"></xref>object or the <xref href=\"System.Globalization.DateTimeFormatInfo\" data-throw-if-not-resolved=\"false\"></xref> object that provides formatting information. </p>\n</li></ul>\n<p>If <em>provider</em> is <strong>null</strong>, the <xref href=\"System.Globalization.CultureInfo\" data-throw-if-not-resolved=\"false\"></xref> object that corresponds to the current culture is used.</p>\n<p>The <em>styles</em> parameter includes one or more members of the <xref href=\"System.Globalization.DateTimeStyles\" data-throw-if-not-resolved=\"false\"></xref> enumeration that determine whether and where white space not defined by <em>format</em> can appear in <em>s</em> and that control the precise behavior of the parse operation. The following table describes how each member of the <xref href=\"System.Globalization.DateTimeStyles\" data-throw-if-not-resolved=\"false\"></xref> enumeration affects the operation of the <xref href=\"System.DateTime.TryParseExact(System.String,System.String[],System.IFormatProvider,System.Globalization.DateTimeStyles,System.DateTime@)\" data-throw-if-not-resolved=\"false\"></xref> method.</p>\n<p>DateTimeStyles member</p>\n<p>Description</p>\n<table><tbody><tr><td>\n<p>\n<xref href=\"System.Globalization.DateTimeStyles.AdjustToUniversal\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td><td>\n<p>Parses <em>s</em> and, if necessary, converts it to UTC. If <em>s</em> includes a time zone offset, or if <em>s</em> contains no time zone information but <em>styles</em> includes the <xref href=\"System.Globalization.DateTimeStyles.AssumeLocal\" data-throw-if-not-resolved=\"false\"></xref> flag, the method parses the string, calls <xref href=\"System.DateTime.ToUniversalTime\" data-throw-if-not-resolved=\"false\"></xref> to convert the returned <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> value to UTC, and sets the <xref href=\"System.DateTime.Kind\" data-throw-if-not-resolved=\"false\"></xref> property to <xref href=\"System.DateTimeKind.Utc\" data-throw-if-not-resolved=\"false\"></xref>. If <em>s</em> indicates that it represents UTC, or if <em>s</em> does not contain time zone information but <em>styles</em> includes the <xref href=\"System.Globalization.DateTimeStyles.AssumeUniversal\" data-throw-if-not-resolved=\"false\"></xref> flag, the method parses the string, performs no time zone conversion on the returned <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> value, and sets the <xref href=\"System.DateTime.Kind\" data-throw-if-not-resolved=\"false\"></xref> property to <xref href=\"System.DateTimeKind.Utc\" data-throw-if-not-resolved=\"false\"></xref>. In all other cases, the flag has no effect.</p>\n</td></tr><tr><td>\n<p>\n<xref href=\"System.Globalization.DateTimeStyles.AllowInnerWhite\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td><td>\n<p>Specifies that white space not defined by <em>format</em> can appear between any individual date or time element.</p>\n</td></tr><tr><td>\n<p>\n<xref href=\"System.Globalization.DateTimeStyles.AllowLeadingWhite\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td><td>\n<p>Specifies that white space not defined by <em>format</em> can appear at the beginning of <em>s</em>.</p>\n</td></tr><tr><td>\n<p>\n<xref href=\"System.Globalization.DateTimeStyles.AllowTrailingWhite\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td><td>\n<p>Specifies that white space not defined by <em>format</em> can appear at the end of <em>s</em>. </p>\n</td></tr><tr><td>\n<p>\n<xref href=\"System.Globalization.DateTimeStyles.AllowWhiteSpaces\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td><td>\n<p>Specifies that <em>s</em> may contain leading, inner, and trailing white spaces not defined by <em>format</em>.</p>\n</td></tr><tr><td>\n<p>\n<xref href=\"System.Globalization.DateTimeStyles.AssumeLocal\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td><td>\n<p>Specifies that if <em>s</em> lacks any time zone information, it is assumed to represent a local time. Unless the <xref href=\"System.Globalization.DateTimeStyles.AdjustToUniversal\" data-throw-if-not-resolved=\"false\"></xref> flag is present, the <xref href=\"System.DateTime.Kind\" data-throw-if-not-resolved=\"false\"></xref> property of the returned <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> value is set to <xref href=\"System.DateTimeKind.Local\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n</td></tr><tr><td>\n<p>\n<xref href=\"System.Globalization.DateTimeStyles.AssumeUniversal\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td><td>\n<p>Specifies that if <em>s</em> lacks any time zone information, it is assumed to represent UTC. Unless the <xref href=\"System.Globalization.DateTimeStyles.AdjustToUniversal\" data-throw-if-not-resolved=\"false\"></xref> flag is present, the method converts the returned <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> value from UTC to local time and sets its <xref href=\"System.DateTime.Kind\" data-throw-if-not-resolved=\"false\"></xref> property to <xref href=\"System.DateTimeKind.Local\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n</td></tr><tr><td>\n<p>\n<xref href=\"System.Globalization.DateTimeStyles.NoCurrentDateDefault\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td><td>\n<p>If <em>s</em> contains time without date information, the date of the return value is set to <strong>DateTime.MinValue.Date</strong>.</p>\n</td></tr><tr><td>\n<p>\n<xref href=\"System.Globalization.DateTimeStyles.None\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td><td>\n<p>The <em>s</em> parameter is parsed using default values. No white space other than that present in <em>format</em> is allowed. If <em>s</em> lacks a date component, the date of the returned <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> value is set to 1/1/0001. If <em>s</em> contains no time zone information, the <xref href=\"System.DateTime.Kind\" data-throw-if-not-resolved=\"false\"></xref> property of the returned <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> object is set to <xref href=\"System.DateTimeKind.Unspecified\" data-throw-if-not-resolved=\"false\"></xref>. If time zone information is present in <em>s</em>, the time is converted to local time and the<xref href=\"System.DateTime.Kind\" data-throw-if-not-resolved=\"false\"></xref> property of the returned <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> object is set to <xref href=\"System.DateTimeKind.Local\" data-throw-if-not-resolved=\"false\"></xref>. </p>\n</td></tr><tr><td>\n<p>\n<xref href=\"System.Globalization.DateTimeStyles.RoundtripKind\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td><td>\n<p>For strings that contain time zone information, tries to prevent the conversion to a <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> value with its <xref href=\"System.DateTime.Kind\" data-throw-if-not-resolved=\"false\"></xref> property set to <xref href=\"System.DateTimeKind.Local\" data-throw-if-not-resolved=\"false\"></xref>. This flag primarily prevents the conversion of UTC times to local times.</p>\n</td></tr></tbody></table>\n"
  example:
  - "\n<p>The following example uses the <xref href=\"System.DateTime.TryParseExact(System.String,System.String,System.IFormatProvider,System.Globalization.DateTimeStyles,System.DateTime@)\" data-throw-if-not-resolved=\"false\"></xref> method to ensure that a string in a number of possible formats can be successfully parsed .</p>System.Datetime.TryParseExact#2"
  syntax:
    content: public static bool TryParseExact(string s, string[] formats, IFormatProvider provider, DateTimeStyles style, out DateTime result)
    content.vb: Public Shared Function TryParseExact(s As String, formats As String(), provider As IFormatProvider, style As DateTimeStyles, ByRef result As Date) As Boolean
    parameters:
    - id: s
      type: System.String
      description: "\n<p>A string that contains a date and time to convert. </p>\n"
    - id: formats
      type: System.String[]
      description: "\n<p>An array of allowable formats of <em>s</em>. See the Remarks section for more information. </p>\n"
    - id: provider
      type: System.IFormatProvider
      description: "\n<p>An object that supplies culture-specific format information about <em>s</em>. </p>\n"
    - id: style
      type: System.Globalization.DateTimeStyles
      description: "\n<p>A bitwise combination of enumeration values that indicates the permitted format of <em>s</em>. A typical value to specify is <xref href=\"System.Globalization.DateTimeStyles.None\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
    - id: result
      type: System.DateTime
      description: "\n<p>When this method returns, contains the <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> value equivalent to the date and time contained in <em>s</em>, if the conversion succeeded, or <xref href=\"System.DateTime.MinValue\" data-throw-if-not-resolved=\"false\"></xref> if the conversion failed. The conversion fails if <em>s</em> or <em>formats</em> is <strong>null</strong>, <em>s</em> or an element of <em>formats</em> is an empty string, or the format of <em>s</em> is not exactly as specified by at least one of the format patterns in <em>formats</em>. This parameter is passed uninitialized. </p>\n"
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if the <em>s</em> parameter was converted successfully; otherwise, <strong>false</strong>.</p>\n"
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<p>\n<em>styles</em> is not a valid <xref href=\"System.Globalization.DateTimeStyles\" data-throw-if-not-resolved=\"false\"></xref> value.</p>\n<p>-or-</p>\n<p>\n<em>styles</em> contains an invalid combination of <xref href=\"System.Globalization.DateTimeStyles\" data-throw-if-not-resolved=\"false\"></xref> values (for example, both <xref href=\"System.Globalization.DateTimeStyles.AssumeLocal\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"System.Globalization.DateTimeStyles.AssumeUniversal\" data-throw-if-not-resolved=\"false\"></xref>).</p>\n"
  seealso:
  - type: System.Globalization.CultureInfo
    commentId: T:System.Globalization.CultureInfo
  - type: System.Globalization.DateTimeFormatInfo
    commentId: T:System.Globalization.DateTimeFormatInfo
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.DateTime.TryParseExact(System.String, System.String(), System.IFormatProvider, System.Globalization.DateTimeStyles, ByRef System.DateTime)
  name.vb: TryParseExact(String, String(), IFormatProvider, DateTimeStyles, ByRef DateTime)
references:
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.IComparable
  parent: System
  isExternal: false
  name: IComparable
  fullName: System.IComparable
- uid: System.IComparable{System.DateTime}
  parent: System
  definition: System.IComparable`1
  name: IComparable<DateTime>
  fullName: System.IComparable<System.DateTime>
  fullname.vb: System.IComparable(Of System.DateTime)
  name.vb: IComparable(Of DateTime)
  spec.csharp:
  - uid: System.IComparable`1
    name: IComparable
    fullName: System.IComparable
  - name: <
    fullName: <
  - uid: System.DateTime
    name: DateTime
    fullName: System.DateTime
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IComparable`1
    name: IComparable
    fullName: System.IComparable
  - name: '(Of '
    fullName: '(Of '
  - uid: System.DateTime
    name: DateTime
    fullName: System.DateTime
  - name: )
    fullName: )
- uid: System.IConvertible
  parent: System
  isExternal: false
  name: IConvertible
  fullName: System.IConvertible
- uid: System.IEquatable{System.DateTime}
  parent: System
  definition: System.IEquatable`1
  name: IEquatable<DateTime>
  fullName: System.IEquatable<System.DateTime>
  fullname.vb: System.IEquatable(Of System.DateTime)
  name.vb: IEquatable(Of DateTime)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    fullName: System.IEquatable
  - name: <
    fullName: <
  - uid: System.DateTime
    name: DateTime
    fullName: System.DateTime
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    fullName: System.IEquatable
  - name: '(Of '
    fullName: '(Of '
  - uid: System.DateTime
    name: DateTime
    fullName: System.DateTime
  - name: )
    fullName: )
- uid: System.IFormattable
  parent: System
  isExternal: false
  name: IFormattable
  fullName: System.IFormattable
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: false
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
  - name: )
    fullName: )
- uid: System.IComparable`1
  parent: System
  isExternal: false
  name: IComparable<T>
  fullName: System.IComparable<T>
  fullname.vb: System.IComparable(Of T)
  name.vb: IComparable(Of T)
  spec.csharp:
  - uid: System.IComparable`1
    name: IComparable
    fullName: System.IComparable
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IComparable`1
    name: IComparable
    fullName: System.IComparable
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.IEquatable`1
  parent: System
  isExternal: false
  name: IEquatable<>
  fullName: System.IEquatable<>
  fullname.vb: System.IEquatable(Of )
  name.vb: IEquatable(Of )
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    fullName: System.IEquatable
  - name: <
    fullName: <
  - {}
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    fullName: System.IEquatable
  - name: '(Of '
    fullName: '(Of '
  - {}
  - name: )
    fullName: )
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System.DateTime
  parent: System
  isExternal: false
  name: DateTime
  fullName: System.DateTime
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  fullName: System.Int32
- uid: System.DateTimeKind
  parent: System
  isExternal: false
  name: DateTimeKind
  fullName: System.DateTimeKind
- uid: System.Int64
  parent: System
  isExternal: false
  name: Int64
  fullName: System.Int64
- uid: System.DayOfWeek
  parent: System
  isExternal: false
  name: DayOfWeek
  fullName: System.DayOfWeek
- uid: System.TimeSpan
  parent: System
  isExternal: false
  name: TimeSpan
  fullName: System.TimeSpan
- uid: System.Double
  parent: System
  isExternal: false
  name: Double
  fullName: System.Double
- uid: System.IComparable{System.DateTime}.CompareTo(System.DateTime)
  parent: System.IComparable{System.DateTime}
  definition: System.IComparable`1.CompareTo(`0)
  name: CompareTo(DateTime)
  fullName: System.IComparable<System.DateTime>.CompareTo(System.DateTime)
  fullname.vb: System.IComparable(Of System.DateTime).CompareTo(System.DateTime)
  spec.csharp:
  - uid: System.IComparable`1.CompareTo(`0)
    name: CompareTo
    fullName: System.IComparable<System.DateTime>.CompareTo
  - name: (
    fullName: (
  - uid: System.DateTime
    name: DateTime
    fullName: System.DateTime
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IComparable`1.CompareTo(`0)
    name: CompareTo
    fullName: System.IComparable(Of System.DateTime).CompareTo
  - name: (
    fullName: (
  - uid: System.DateTime
    name: DateTime
    fullName: System.DateTime
  - name: )
    fullName: )
- uid: System.IComparable`1.CompareTo(`0)
  parent: System.IComparable`1
  isExternal: false
  name: CompareTo(T)
  fullName: System.IComparable<T>.CompareTo(T)
  fullname.vb: System.IComparable(Of T).CompareTo(T)
  spec.csharp:
  - uid: System.IComparable`1.CompareTo(`0)
    name: CompareTo
    fullName: System.IComparable<T>.CompareTo
  - name: (
    fullName: (
  - name: T
    fullName: T
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IComparable`1.CompareTo(`0)
    name: CompareTo
    fullName: System.IComparable(Of T).CompareTo
  - name: (
    fullName: (
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.IEquatable{System.DateTime}.Equals(System.DateTime)
  parent: System.IEquatable{System.DateTime}
  definition: System.IEquatable`1.Equals(`0)
  name: Equals(DateTime)
  fullName: System.IEquatable<System.DateTime>.Equals(System.DateTime)
  fullname.vb: System.IEquatable(Of System.DateTime).Equals(System.DateTime)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    fullName: System.IEquatable<System.DateTime>.Equals
  - name: (
    fullName: (
  - uid: System.DateTime
    name: DateTime
    fullName: System.DateTime
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    fullName: System.IEquatable(Of System.DateTime).Equals
  - name: (
    fullName: (
  - uid: System.DateTime
    name: DateTime
    fullName: System.DateTime
  - name: )
    fullName: )
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  fullName: System.Boolean
- uid: System.IEquatable`1.Equals(`0)
  parent: System.IEquatable`1
  isExternal: false
  name: Equals(T)
  fullName: System.IEquatable<T>.Equals(T)
  fullname.vb: System.IEquatable(Of T).Equals(T)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    fullName: System.IEquatable<T>.Equals
  - name: (
    fullName: (
  - name: T
    fullName: T
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    fullName: System.IEquatable(Of T).Equals
  - name: (
    fullName: (
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: false
  name: Equals(Object)
  fullName: System.ValueType.Equals(System.Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    fullName: System.ValueType.Equals
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    fullName: System.ValueType.Equals
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
  - name: )
    fullName: )
- uid: System.ValueType
  parent: System
  isExternal: false
  name: ValueType
  fullName: System.ValueType
- uid: System.String[]
  isExternal: false
  name: String[]
  fullName: System.String[]
  fullname.vb: System.String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: String
    fullName: System.String
  - name: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.String
    name: String
    fullName: System.String
  - name: ()
    fullName: ()
- uid: System.Char
  parent: System
  isExternal: false
  name: Char
  fullName: System.Char
- uid: System.IFormatProvider
  parent: System
  isExternal: false
  name: IFormatProvider
  fullName: System.IFormatProvider
- uid: System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: false
  name: GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    fullName: System.ValueType.GetHashCode
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    fullName: System.ValueType.GetHashCode
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.String
  parent: System
  isExternal: false
  name: String
  fullName: System.String
- uid: System.Globalization.DateTimeStyles
  parent: System.Globalization
  isExternal: false
  name: Globalization.DateTimeStyles
  fullName: System.Globalization.DateTimeStyles
- uid: System.Globalization
  isExternal: false
  name: System.Globalization
  fullName: System.Globalization
- uid: System.IComparable.CompareTo(System.Object)
  parent: System.IComparable
  isExternal: false
  name: CompareTo(Object)
  fullName: System.IComparable.CompareTo(System.Object)
  spec.csharp:
  - uid: System.IComparable.CompareTo(System.Object)
    name: CompareTo
    fullName: System.IComparable.CompareTo
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IComparable.CompareTo(System.Object)
    name: CompareTo
    fullName: System.IComparable.CompareTo
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
  - name: )
    fullName: )
- uid: System.IConvertible.GetTypeCode
  parent: System.IConvertible
  isExternal: false
  name: GetTypeCode()
  fullName: System.IConvertible.GetTypeCode()
  spec.csharp:
  - uid: System.IConvertible.GetTypeCode
    name: GetTypeCode
    fullName: System.IConvertible.GetTypeCode
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IConvertible.GetTypeCode
    name: GetTypeCode
    fullName: System.IConvertible.GetTypeCode
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.TypeCode
  parent: System
  isExternal: false
  name: TypeCode
  fullName: System.TypeCode
- uid: System.IConvertible.ToBoolean(System.IFormatProvider)
  parent: System.IConvertible
  isExternal: false
  name: ToBoolean(IFormatProvider)
  fullName: System.IConvertible.ToBoolean(System.IFormatProvider)
  spec.csharp:
  - uid: System.IConvertible.ToBoolean(System.IFormatProvider)
    name: ToBoolean
    fullName: System.IConvertible.ToBoolean
  - name: (
    fullName: (
  - uid: System.IFormatProvider
    name: IFormatProvider
    fullName: System.IFormatProvider
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IConvertible.ToBoolean(System.IFormatProvider)
    name: ToBoolean
    fullName: System.IConvertible.ToBoolean
  - name: (
    fullName: (
  - uid: System.IFormatProvider
    name: IFormatProvider
    fullName: System.IFormatProvider
  - name: )
    fullName: )
- uid: System.IConvertible.ToByte(System.IFormatProvider)
  parent: System.IConvertible
  isExternal: false
  name: ToByte(IFormatProvider)
  fullName: System.IConvertible.ToByte(System.IFormatProvider)
  spec.csharp:
  - uid: System.IConvertible.ToByte(System.IFormatProvider)
    name: ToByte
    fullName: System.IConvertible.ToByte
  - name: (
    fullName: (
  - uid: System.IFormatProvider
    name: IFormatProvider
    fullName: System.IFormatProvider
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IConvertible.ToByte(System.IFormatProvider)
    name: ToByte
    fullName: System.IConvertible.ToByte
  - name: (
    fullName: (
  - uid: System.IFormatProvider
    name: IFormatProvider
    fullName: System.IFormatProvider
  - name: )
    fullName: )
- uid: System.Byte
  parent: System
  isExternal: false
  name: Byte
  fullName: System.Byte
- uid: System.IConvertible.ToChar(System.IFormatProvider)
  parent: System.IConvertible
  isExternal: false
  name: ToChar(IFormatProvider)
  fullName: System.IConvertible.ToChar(System.IFormatProvider)
  spec.csharp:
  - uid: System.IConvertible.ToChar(System.IFormatProvider)
    name: ToChar
    fullName: System.IConvertible.ToChar
  - name: (
    fullName: (
  - uid: System.IFormatProvider
    name: IFormatProvider
    fullName: System.IFormatProvider
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IConvertible.ToChar(System.IFormatProvider)
    name: ToChar
    fullName: System.IConvertible.ToChar
  - name: (
    fullName: (
  - uid: System.IFormatProvider
    name: IFormatProvider
    fullName: System.IFormatProvider
  - name: )
    fullName: )
- uid: System.IConvertible.ToDateTime(System.IFormatProvider)
  parent: System.IConvertible
  isExternal: false
  name: ToDateTime(IFormatProvider)
  fullName: System.IConvertible.ToDateTime(System.IFormatProvider)
  spec.csharp:
  - uid: System.IConvertible.ToDateTime(System.IFormatProvider)
    name: ToDateTime
    fullName: System.IConvertible.ToDateTime
  - name: (
    fullName: (
  - uid: System.IFormatProvider
    name: IFormatProvider
    fullName: System.IFormatProvider
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IConvertible.ToDateTime(System.IFormatProvider)
    name: ToDateTime
    fullName: System.IConvertible.ToDateTime
  - name: (
    fullName: (
  - uid: System.IFormatProvider
    name: IFormatProvider
    fullName: System.IFormatProvider
  - name: )
    fullName: )
- uid: System.IConvertible.ToDecimal(System.IFormatProvider)
  parent: System.IConvertible
  isExternal: false
  name: ToDecimal(IFormatProvider)
  fullName: System.IConvertible.ToDecimal(System.IFormatProvider)
  spec.csharp:
  - uid: System.IConvertible.ToDecimal(System.IFormatProvider)
    name: ToDecimal
    fullName: System.IConvertible.ToDecimal
  - name: (
    fullName: (
  - uid: System.IFormatProvider
    name: IFormatProvider
    fullName: System.IFormatProvider
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IConvertible.ToDecimal(System.IFormatProvider)
    name: ToDecimal
    fullName: System.IConvertible.ToDecimal
  - name: (
    fullName: (
  - uid: System.IFormatProvider
    name: IFormatProvider
    fullName: System.IFormatProvider
  - name: )
    fullName: )
- uid: System.Decimal
  parent: System
  isExternal: false
  name: Decimal
  fullName: System.Decimal
- uid: System.IConvertible.ToDouble(System.IFormatProvider)
  parent: System.IConvertible
  isExternal: false
  name: ToDouble(IFormatProvider)
  fullName: System.IConvertible.ToDouble(System.IFormatProvider)
  spec.csharp:
  - uid: System.IConvertible.ToDouble(System.IFormatProvider)
    name: ToDouble
    fullName: System.IConvertible.ToDouble
  - name: (
    fullName: (
  - uid: System.IFormatProvider
    name: IFormatProvider
    fullName: System.IFormatProvider
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IConvertible.ToDouble(System.IFormatProvider)
    name: ToDouble
    fullName: System.IConvertible.ToDouble
  - name: (
    fullName: (
  - uid: System.IFormatProvider
    name: IFormatProvider
    fullName: System.IFormatProvider
  - name: )
    fullName: )
- uid: System.IConvertible.ToInt16(System.IFormatProvider)
  parent: System.IConvertible
  isExternal: false
  name: ToInt16(IFormatProvider)
  fullName: System.IConvertible.ToInt16(System.IFormatProvider)
  spec.csharp:
  - uid: System.IConvertible.ToInt16(System.IFormatProvider)
    name: ToInt16
    fullName: System.IConvertible.ToInt16
  - name: (
    fullName: (
  - uid: System.IFormatProvider
    name: IFormatProvider
    fullName: System.IFormatProvider
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IConvertible.ToInt16(System.IFormatProvider)
    name: ToInt16
    fullName: System.IConvertible.ToInt16
  - name: (
    fullName: (
  - uid: System.IFormatProvider
    name: IFormatProvider
    fullName: System.IFormatProvider
  - name: )
    fullName: )
- uid: System.Int16
  parent: System
  isExternal: false
  name: Int16
  fullName: System.Int16
- uid: System.IConvertible.ToInt32(System.IFormatProvider)
  parent: System.IConvertible
  isExternal: false
  name: ToInt32(IFormatProvider)
  fullName: System.IConvertible.ToInt32(System.IFormatProvider)
  spec.csharp:
  - uid: System.IConvertible.ToInt32(System.IFormatProvider)
    name: ToInt32
    fullName: System.IConvertible.ToInt32
  - name: (
    fullName: (
  - uid: System.IFormatProvider
    name: IFormatProvider
    fullName: System.IFormatProvider
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IConvertible.ToInt32(System.IFormatProvider)
    name: ToInt32
    fullName: System.IConvertible.ToInt32
  - name: (
    fullName: (
  - uid: System.IFormatProvider
    name: IFormatProvider
    fullName: System.IFormatProvider
  - name: )
    fullName: )
- uid: System.IConvertible.ToInt64(System.IFormatProvider)
  parent: System.IConvertible
  isExternal: false
  name: ToInt64(IFormatProvider)
  fullName: System.IConvertible.ToInt64(System.IFormatProvider)
  spec.csharp:
  - uid: System.IConvertible.ToInt64(System.IFormatProvider)
    name: ToInt64
    fullName: System.IConvertible.ToInt64
  - name: (
    fullName: (
  - uid: System.IFormatProvider
    name: IFormatProvider
    fullName: System.IFormatProvider
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IConvertible.ToInt64(System.IFormatProvider)
    name: ToInt64
    fullName: System.IConvertible.ToInt64
  - name: (
    fullName: (
  - uid: System.IFormatProvider
    name: IFormatProvider
    fullName: System.IFormatProvider
  - name: )
    fullName: )
- uid: System.IConvertible.ToSByte(System.IFormatProvider)
  parent: System.IConvertible
  isExternal: false
  name: ToSByte(IFormatProvider)
  fullName: System.IConvertible.ToSByte(System.IFormatProvider)
  spec.csharp:
  - uid: System.IConvertible.ToSByte(System.IFormatProvider)
    name: ToSByte
    fullName: System.IConvertible.ToSByte
  - name: (
    fullName: (
  - uid: System.IFormatProvider
    name: IFormatProvider
    fullName: System.IFormatProvider
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IConvertible.ToSByte(System.IFormatProvider)
    name: ToSByte
    fullName: System.IConvertible.ToSByte
  - name: (
    fullName: (
  - uid: System.IFormatProvider
    name: IFormatProvider
    fullName: System.IFormatProvider
  - name: )
    fullName: )
- uid: System.SByte
  parent: System
  isExternal: false
  name: SByte
  fullName: System.SByte
- uid: System.IConvertible.ToSingle(System.IFormatProvider)
  parent: System.IConvertible
  isExternal: false
  name: ToSingle(IFormatProvider)
  fullName: System.IConvertible.ToSingle(System.IFormatProvider)
  spec.csharp:
  - uid: System.IConvertible.ToSingle(System.IFormatProvider)
    name: ToSingle
    fullName: System.IConvertible.ToSingle
  - name: (
    fullName: (
  - uid: System.IFormatProvider
    name: IFormatProvider
    fullName: System.IFormatProvider
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IConvertible.ToSingle(System.IFormatProvider)
    name: ToSingle
    fullName: System.IConvertible.ToSingle
  - name: (
    fullName: (
  - uid: System.IFormatProvider
    name: IFormatProvider
    fullName: System.IFormatProvider
  - name: )
    fullName: )
- uid: System.Single
  parent: System
  isExternal: false
  name: Single
  fullName: System.Single
- uid: System.IConvertible.ToType(System.Type,System.IFormatProvider)
  parent: System.IConvertible
  isExternal: false
  name: ToType(Type, IFormatProvider)
  fullName: System.IConvertible.ToType(System.Type, System.IFormatProvider)
  spec.csharp:
  - uid: System.IConvertible.ToType(System.Type,System.IFormatProvider)
    name: ToType
    fullName: System.IConvertible.ToType
  - name: (
    fullName: (
  - uid: System.Type
    name: Type
    fullName: System.Type
  - name: ', '
    fullName: ', '
  - uid: System.IFormatProvider
    name: IFormatProvider
    fullName: System.IFormatProvider
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IConvertible.ToType(System.Type,System.IFormatProvider)
    name: ToType
    fullName: System.IConvertible.ToType
  - name: (
    fullName: (
  - uid: System.Type
    name: Type
    fullName: System.Type
  - name: ', '
    fullName: ', '
  - uid: System.IFormatProvider
    name: IFormatProvider
    fullName: System.IFormatProvider
  - name: )
    fullName: )
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  fullName: System.Type
- uid: System.IConvertible.ToUInt16(System.IFormatProvider)
  parent: System.IConvertible
  isExternal: false
  name: ToUInt16(IFormatProvider)
  fullName: System.IConvertible.ToUInt16(System.IFormatProvider)
  spec.csharp:
  - uid: System.IConvertible.ToUInt16(System.IFormatProvider)
    name: ToUInt16
    fullName: System.IConvertible.ToUInt16
  - name: (
    fullName: (
  - uid: System.IFormatProvider
    name: IFormatProvider
    fullName: System.IFormatProvider
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IConvertible.ToUInt16(System.IFormatProvider)
    name: ToUInt16
    fullName: System.IConvertible.ToUInt16
  - name: (
    fullName: (
  - uid: System.IFormatProvider
    name: IFormatProvider
    fullName: System.IFormatProvider
  - name: )
    fullName: )
- uid: System.UInt16
  parent: System
  isExternal: false
  name: UInt16
  fullName: System.UInt16
- uid: System.IConvertible.ToUInt32(System.IFormatProvider)
  parent: System.IConvertible
  isExternal: false
  name: ToUInt32(IFormatProvider)
  fullName: System.IConvertible.ToUInt32(System.IFormatProvider)
  spec.csharp:
  - uid: System.IConvertible.ToUInt32(System.IFormatProvider)
    name: ToUInt32
    fullName: System.IConvertible.ToUInt32
  - name: (
    fullName: (
  - uid: System.IFormatProvider
    name: IFormatProvider
    fullName: System.IFormatProvider
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IConvertible.ToUInt32(System.IFormatProvider)
    name: ToUInt32
    fullName: System.IConvertible.ToUInt32
  - name: (
    fullName: (
  - uid: System.IFormatProvider
    name: IFormatProvider
    fullName: System.IFormatProvider
  - name: )
    fullName: )
- uid: System.UInt32
  parent: System
  isExternal: false
  name: UInt32
  fullName: System.UInt32
- uid: System.IConvertible.ToUInt64(System.IFormatProvider)
  parent: System.IConvertible
  isExternal: false
  name: ToUInt64(IFormatProvider)
  fullName: System.IConvertible.ToUInt64(System.IFormatProvider)
  spec.csharp:
  - uid: System.IConvertible.ToUInt64(System.IFormatProvider)
    name: ToUInt64
    fullName: System.IConvertible.ToUInt64
  - name: (
    fullName: (
  - uid: System.IFormatProvider
    name: IFormatProvider
    fullName: System.IFormatProvider
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IConvertible.ToUInt64(System.IFormatProvider)
    name: ToUInt64
    fullName: System.IConvertible.ToUInt64
  - name: (
    fullName: (
  - uid: System.IFormatProvider
    name: IFormatProvider
    fullName: System.IFormatProvider
  - name: )
    fullName: )
- uid: System.UInt64
  parent: System
  isExternal: false
  name: UInt64
  fullName: System.UInt64
- uid: System.ValueType.ToString
  parent: System.ValueType
  isExternal: false
  name: ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    fullName: System.ValueType.ToString
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    fullName: System.ValueType.ToString
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.IConvertible.ToString(System.IFormatProvider)
  parent: System.IConvertible
  isExternal: false
  name: ToString(IFormatProvider)
  fullName: System.IConvertible.ToString(System.IFormatProvider)
  spec.csharp:
  - uid: System.IConvertible.ToString(System.IFormatProvider)
    name: ToString
    fullName: System.IConvertible.ToString
  - name: (
    fullName: (
  - uid: System.IFormatProvider
    name: IFormatProvider
    fullName: System.IFormatProvider
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IConvertible.ToString(System.IFormatProvider)
    name: ToString
    fullName: System.IConvertible.ToString
  - name: (
    fullName: (
  - uid: System.IFormatProvider
    name: IFormatProvider
    fullName: System.IFormatProvider
  - name: )
    fullName: )
- uid: System.IFormattable.ToString(System.String,System.IFormatProvider)
  parent: System.IFormattable
  isExternal: false
  name: ToString(String, IFormatProvider)
  fullName: System.IFormattable.ToString(System.String, System.IFormatProvider)
  spec.csharp:
  - uid: System.IFormattable.ToString(System.String,System.IFormatProvider)
    name: ToString
    fullName: System.IFormattable.ToString
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
  - name: ', '
    fullName: ', '
  - uid: System.IFormatProvider
    name: IFormatProvider
    fullName: System.IFormatProvider
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IFormattable.ToString(System.String,System.IFormatProvider)
    name: ToString
    fullName: System.IFormattable.ToString
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
  - name: ', '
    fullName: ', '
  - uid: System.IFormatProvider
    name: IFormatProvider
    fullName: System.IFormatProvider
  - name: )
    fullName: )
- uid: System.ArgumentOutOfRangeException
  isExternal: false
  name: ArgumentOutOfRangeException
  fullName: System.ArgumentOutOfRangeException
- uid: System.ArgumentException
  parent: System
  isExternal: false
  name: ArgumentException
  fullName: System.ArgumentException
- uid: System.FormatException
  parent: System
  isExternal: false
  name: FormatException
  fullName: System.FormatException
- uid: System.ArgumentNullException
  isExternal: false
  name: ArgumentNullException
  fullName: System.ArgumentNullException
- uid: System.InvalidCastException
  isExternal: false
  name: InvalidCastException
  fullName: System.InvalidCastException
- uid: System.NotSupportedException
  parent: System
  isExternal: false
  name: NotSupportedException
  fullName: System.NotSupportedException
