items:
- uid: System.Security.AccessControl.SemaphoreAuditRule
  commentId: T:System.Security.AccessControl.SemaphoreAuditRule
  id: SemaphoreAuditRule
  parent: System.Security.AccessControl
  children:
  - System.Security.AccessControl.SemaphoreAuditRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.SemaphoreRights,System.Security.AccessControl.AuditFlags)
  - System.Security.AccessControl.SemaphoreAuditRule.SemaphoreRights
  langs:
  - csharp
  - vb
  name: SemaphoreAuditRule
  fullName: System.Security.AccessControl.SemaphoreAuditRule
  type: Class
  source:
    remote:
      path: src/System.Threading.AccessControl/ref/System.Threading.AccessControl.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: SemaphoreAuditRule
    path: src/System.Threading.AccessControl/ref/System.Threading.AccessControl.cs
    startLine: 77
  assemblies:
  - System.Threading.AccessControl
  namespace: System.Security.AccessControl
  syntax:
    content: 'public sealed class SemaphoreAuditRule : AuditRule'
    content.vb: >-
      Public NotInheritable Class SemaphoreAuditRule
          Inherits AuditRule
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: System.Security.AccessControl.SemaphoreAuditRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.SemaphoreRights,System.Security.AccessControl.AuditFlags)
  commentId: M:System.Security.AccessControl.SemaphoreAuditRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.SemaphoreRights,System.Security.AccessControl.AuditFlags)
  id: '#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.SemaphoreRights,System.Security.AccessControl.AuditFlags)'
  parent: System.Security.AccessControl.SemaphoreAuditRule
  langs:
  - csharp
  - vb
  name: SemaphoreAuditRule(Principal.IdentityReference, SemaphoreRights, AuditFlags)
  fullName: System.Security.AccessControl.SemaphoreAuditRule.SemaphoreAuditRule(System.Security.Principal.IdentityReference, System.Security.AccessControl.SemaphoreRights, System.Security.AccessControl.AuditFlags)
  type: Constructor
  source:
    remote:
      path: src/System.Threading.AccessControl/ref/System.Threading.AccessControl.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Threading.AccessControl/ref/System.Threading.AccessControl.cs
    startLine: 80
  assemblies:
  - System.Threading.AccessControl
  namespace: System.Security.AccessControl
  syntax:
    content: public SemaphoreAuditRule(Principal.IdentityReference identity, SemaphoreRights eventRights, AuditFlags flags)
    content.vb: Public Sub New(identity As Principal.IdentityReference, eventRights As SemaphoreRights, flags As AuditFlags)
    parameters:
    - id: identity
      type: System.Security.Principal.IdentityReference
    - id: eventRights
      type: System.Security.AccessControl.SemaphoreRights
    - id: flags
      type: System.Security.AccessControl.AuditFlags
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Security.AccessControl.SemaphoreAuditRule.SemaphoreRights
  commentId: P:System.Security.AccessControl.SemaphoreAuditRule.SemaphoreRights
  id: SemaphoreRights
  parent: System.Security.AccessControl.SemaphoreAuditRule
  langs:
  - csharp
  - vb
  name: SemaphoreRights
  fullName: System.Security.AccessControl.SemaphoreAuditRule.SemaphoreRights
  type: Property
  source:
    remote:
      path: src/System.Threading.AccessControl/ref/System.Threading.AccessControl.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: SemaphoreRights
    path: src/System.Threading.AccessControl/ref/System.Threading.AccessControl.cs
    startLine: 81
  assemblies:
  - System.Threading.AccessControl
  namespace: System.Security.AccessControl
  syntax:
    content: public SemaphoreRights SemaphoreRights { get; }
    content.vb: Public ReadOnly Property SemaphoreRights As SemaphoreRights
    parameters: []
    return:
      type: System.Security.AccessControl.SemaphoreRights
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: System.Security.AccessControl
  isExternal: false
  name: System.Security.AccessControl
  fullName: System.Security.AccessControl
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Security.Principal.IdentityReference
  parent: System.Security.Principal
  isExternal: false
  name: Principal.IdentityReference
  fullName: System.Security.Principal.IdentityReference
- uid: System.Security.AccessControl.SemaphoreRights
  parent: System.Security.AccessControl
  isExternal: false
  name: SemaphoreRights
  fullName: System.Security.AccessControl.SemaphoreRights
- uid: System.Security.AccessControl.AuditFlags
  parent: System.Security.AccessControl
  isExternal: false
  name: AuditFlags
  fullName: System.Security.AccessControl.AuditFlags
- uid: System.Security.Principal
  isExternal: false
  name: System.Security.Principal
  fullName: System.Security.Principal
