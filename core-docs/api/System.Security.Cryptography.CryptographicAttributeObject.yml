items:
- uid: System.Security.Cryptography.CryptographicAttributeObject
  commentId: T:System.Security.Cryptography.CryptographicAttributeObject
  id: CryptographicAttributeObject
  parent: System.Security.Cryptography
  children:
  - System.Security.Cryptography.CryptographicAttributeObject.#ctor(System.Security.Cryptography.Oid)
  - System.Security.Cryptography.CryptographicAttributeObject.#ctor(System.Security.Cryptography.Oid,System.Security.Cryptography.AsnEncodedDataCollection)
  - System.Security.Cryptography.CryptographicAttributeObject.Oid
  - System.Security.Cryptography.CryptographicAttributeObject.Values
  langs:
  - csharp
  - vb
  name: CryptographicAttributeObject
  fullName: System.Security.Cryptography.CryptographicAttributeObject
  type: Class
  source:
    remote:
      path: src/System.Security.Cryptography.Pkcs/ref/System.Security.Cryptography.Pkcs.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CryptographicAttributeObject
    path: src/System.Security.Cryptography.Pkcs/ref/System.Security.Cryptography.Pkcs.cs
    startLine: 9
  assemblies:
  - System.Security.Cryptography.Pkcs
  namespace: System.Security.Cryptography
  summary: "\n<p>Contains a type and a collection of values associated with that type.</p>\n"
  remarks: "\n<p>This class corresponds to an ASN.1 structure defined in the Cryptographic Message Syntax standards specification.</p>\n"
  example:
  - 
  syntax:
    content: public sealed class CryptographicAttributeObject
    content.vb: Public NotInheritable Class CryptographicAttributeObject
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: System.Security.Cryptography.CryptographicAttributeObject.#ctor(System.Security.Cryptography.Oid)
  commentId: M:System.Security.Cryptography.CryptographicAttributeObject.#ctor(System.Security.Cryptography.Oid)
  id: '#ctor(System.Security.Cryptography.Oid)'
  parent: System.Security.Cryptography.CryptographicAttributeObject
  langs:
  - csharp
  - vb
  name: CryptographicAttributeObject(Oid)
  fullName: System.Security.Cryptography.CryptographicAttributeObject.CryptographicAttributeObject(System.Security.Cryptography.Oid)
  type: Constructor
  source:
    remote:
      path: src/System.Security.Cryptography.Pkcs/ref/System.Security.Cryptography.Pkcs.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Security.Cryptography.Pkcs/ref/System.Security.Cryptography.Pkcs.cs
    startLine: 11
  assemblies:
  - System.Security.Cryptography.Pkcs
  namespace: System.Security.Cryptography
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Security.Cryptography.CryptographicAttributeObject\" data-throw-if-not-resolved=\"false\"></xref> class using an attribute represented by the specified <xref href=\"System.Security.Cryptography.Oid\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  example:
  - 
  syntax:
    content: public CryptographicAttributeObject(Oid oid)
    content.vb: Public Sub New(oid As Oid)
    parameters:
    - id: oid
      type: System.Security.Cryptography.Oid
      description: "\n<p>The attribute to store in this <xref href=\"System.Security.Cryptography.CryptographicAttributeObject\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  seealso:
  - type: System.Security.Cryptography.Oid
    commentId: T:System.Security.Cryptography.Oid
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Security.Cryptography.CryptographicAttributeObject.#ctor(System.Security.Cryptography.Oid,System.Security.Cryptography.AsnEncodedDataCollection)
  commentId: M:System.Security.Cryptography.CryptographicAttributeObject.#ctor(System.Security.Cryptography.Oid,System.Security.Cryptography.AsnEncodedDataCollection)
  id: '#ctor(System.Security.Cryptography.Oid,System.Security.Cryptography.AsnEncodedDataCollection)'
  parent: System.Security.Cryptography.CryptographicAttributeObject
  langs:
  - csharp
  - vb
  name: CryptographicAttributeObject(Oid, AsnEncodedDataCollection)
  fullName: System.Security.Cryptography.CryptographicAttributeObject.CryptographicAttributeObject(System.Security.Cryptography.Oid, System.Security.Cryptography.AsnEncodedDataCollection)
  type: Constructor
  source:
    remote:
      path: src/System.Security.Cryptography.Pkcs/ref/System.Security.Cryptography.Pkcs.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Security.Cryptography.Pkcs/ref/System.Security.Cryptography.Pkcs.cs
    startLine: 12
  assemblies:
  - System.Security.Cryptography.Pkcs
  namespace: System.Security.Cryptography
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Security.Cryptography.CryptographicAttributeObject\" data-throw-if-not-resolved=\"false\"></xref> class using an attribute represented by the specified <xref href=\"System.Security.Cryptography.Oid\" data-throw-if-not-resolved=\"false\"></xref> object and the set of values associated with that attribute represented by the specified <xref href=\"System.Security.Cryptography.AsnEncodedDataCollection\" data-throw-if-not-resolved=\"false\"></xref> collection.</p>\n"
  example:
  - 
  syntax:
    content: public CryptographicAttributeObject(Oid oid, AsnEncodedDataCollection values)
    content.vb: Public Sub New(oid As Oid, values As AsnEncodedDataCollection)
    parameters:
    - id: oid
      type: System.Security.Cryptography.Oid
      description: "\n<p>The attribute to store in this <xref href=\"System.Security.Cryptography.CryptographicAttributeObject\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
    - id: values
      type: System.Security.Cryptography.AsnEncodedDataCollection
      description: "\n<p>The set of values associated with the attribute represented by the <em>oid</em> parameter.</p>\n"
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "\n<p>The collection contains duplicate items.</p>\n"
  seealso:
  - type: System.Security.Cryptography.Oid
    commentId: T:System.Security.Cryptography.Oid
  - type: System.Security.Cryptography.AsnEncodedDataCollection
    commentId: T:System.Security.Cryptography.AsnEncodedDataCollection
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Security.Cryptography.CryptographicAttributeObject.Oid
  commentId: P:System.Security.Cryptography.CryptographicAttributeObject.Oid
  id: Oid
  parent: System.Security.Cryptography.CryptographicAttributeObject
  langs:
  - csharp
  - vb
  name: Oid
  fullName: System.Security.Cryptography.CryptographicAttributeObject.Oid
  type: Property
  source:
    remote:
      path: src/System.Security.Cryptography.Pkcs/ref/System.Security.Cryptography.Pkcs.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Oid
    path: src/System.Security.Cryptography.Pkcs/ref/System.Security.Cryptography.Pkcs.cs
    startLine: 13
  assemblies:
  - System.Security.Cryptography.Pkcs
  namespace: System.Security.Cryptography
  summary: "\n<p>Gets the <xref href=\"System.Security.Cryptography.Oid\" data-throw-if-not-resolved=\"false\"></xref> object that specifies the object identifier for the attribute.</p>\n"
  example:
  - 
  syntax:
    content: public Oid Oid { get; }
    content.vb: Public ReadOnly Property Oid As Oid
    parameters: []
    return:
      type: System.Security.Cryptography.Oid
      description: "\n<p>The object identifier for the attribute.</p>\n"
  seealso:
  - type: System.Security.Cryptography.Oid
    commentId: T:System.Security.Cryptography.Oid
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Security.Cryptography.CryptographicAttributeObject.Values
  commentId: P:System.Security.Cryptography.CryptographicAttributeObject.Values
  id: Values
  parent: System.Security.Cryptography.CryptographicAttributeObject
  langs:
  - csharp
  - vb
  name: Values
  fullName: System.Security.Cryptography.CryptographicAttributeObject.Values
  type: Property
  source:
    remote:
      path: src/System.Security.Cryptography.Pkcs/ref/System.Security.Cryptography.Pkcs.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Values
    path: src/System.Security.Cryptography.Pkcs/ref/System.Security.Cryptography.Pkcs.cs
    startLine: 14
  assemblies:
  - System.Security.Cryptography.Pkcs
  namespace: System.Security.Cryptography
  summary: "\n<p>Gets the <xref href=\"System.Security.Cryptography.AsnEncodedDataCollection\" data-throw-if-not-resolved=\"false\"></xref> collection that contains the set of values that are associated with the attribute.</p>\n"
  example:
  - 
  syntax:
    content: >-
      public AsnEncodedDataCollection Values

      {
          [CompilerGenerated]
          get;
      }
    content.vb: Public ReadOnly Property Values As AsnEncodedDataCollection
    parameters: []
    return:
      type: System.Security.Cryptography.AsnEncodedDataCollection
      description: "\n<p>The set of values that is associated with the attribute.</p>\n"
  seealso:
  - type: System.Security.Cryptography.AsnEncodedDataCollection
    commentId: T:System.Security.Cryptography.AsnEncodedDataCollection
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: System.Security.Cryptography
  isExternal: false
  name: System.Security.Cryptography
  fullName: System.Security.Cryptography
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Security.Cryptography.Oid
  parent: System.Security.Cryptography
  isExternal: false
  name: Oid
  fullName: System.Security.Cryptography.Oid
- uid: System.Security.Cryptography.AsnEncodedDataCollection
  isExternal: false
  name: AsnEncodedDataCollection
  fullName: System.Security.Cryptography.AsnEncodedDataCollection
- uid: System.InvalidOperationException
  parent: System
  isExternal: false
  name: InvalidOperationException
  fullName: System.InvalidOperationException
