items:
- uid: System.MTAThreadAttribute
  commentId: T:System.MTAThreadAttribute
  id: MTAThreadAttribute
  parent: System
  children:
  - System.MTAThreadAttribute.#ctor
  langs:
  - csharp
  - vb
  name: MTAThreadAttribute
  fullName: System.MTAThreadAttribute
  type: Class
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: MTAThreadAttribute
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 1256
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Indicates that the COM threading model for an application is multithreaded apartment (MTA). </p>\n"
  remarks: "\n<p>Apply this attribute to the entry point method (the <code>Main()</code> method in C# and Visual Basic). It has no effect on other methods. To set the apartment state of threads you start in your code, use the <xref href=\"System.Threading.Thread.SetApartmentState(System.Threading.ApartmentState)\" data-throw-if-not-resolved=\"false\"></xref> or <xref href=\"System.Threading.Thread.TrySetApartmentState(System.Threading.ApartmentState)\" data-throw-if-not-resolved=\"false\"></xref> method before starting the thread.</p>\n<p>For an overview of COM threading models, see <see href=\"http://msdn.microsoft.com/library/ms809971.aspx\">Understanding and Using COM Threading Models</see>. </p>\n<p>COM threading models only apply to applications that use COM interop. The COM threading model can be set to single-threaded apartment or multithreaded apartment. The application thread is only initialized for COM interop if the thread actually makes a call to a COM component. If COM interop is not used, then the thread is not initialized, and the <xref href=\"System.MTAThreadAttribute\" data-throw-if-not-resolved=\"false\"></xref> attribute, if it is present, has no effect. </p>\n<p>Starting with the .NET Framework version 2.0, the default threading model for COM interop depends on the language in which you are developing your application, as the following table shows. </p>\n<p>Language</p>\n<p>COM apartment model</p>\n<table><tbody><tr><td>\n<p>C#</p>\n</td><td>\n<p>Multithreaded apartment </p>\n</td></tr><tr><td>\n<p>C++</p>\n</td><td>\n<p>Multithreaded apartment </p>\n</td></tr><tr><td>\n<p>Visual Basic</p>\n</td><td>\n<p>Single-threaded apartment </p>\n</td></tr></tbody></table>\n<p>To change these defaults, you use the <xref href=\"System.MTAThreadAttribute\" data-throw-if-not-resolved=\"false\"></xref> attribute to set the threading model for the application, or call the <xref href=\"System.Threading.Thread.SetApartmentState(System.Threading.ApartmentState)\" data-throw-if-not-resolved=\"false\"></xref> or <xref href=\"System.Threading.Thread.TrySetApartmentState(System.Threading.ApartmentState)\" data-throw-if-not-resolved=\"false\"></xref> method before starting the thread to set the threading model for a particular thread. In C++, you can also use the /CLRTHREADATTRIBUTE (Set CLR Thread Attribute) linker option to specify the apartment model. </p>\n<p>Some of the cases in which you want to use the <xref href=\"System.MTAThreadAttribute\" data-throw-if-not-resolved=\"false\"></xref> attribute to explicitly set the threading model to multithreaded apartment include the following: </p>\n<ul><li>\n<p>You're developing a Visual Basic app that calls to a C# library that in turn relies on COM interop. Because the multithreaded apartment model is the default for C#, you should change your app's threading model to multithreaded by using the <xref href=\"System.MTAThreadAttribute\" data-throw-if-not-resolved=\"false\"></xref> attribute. </p>\n</li><li>\n<p>Your application makes calls to COM components that use the multithreaded apartment model. </p>\n</li></ul>\n"
  syntax:
    content: >-
      [AttributeUsage(AttributeTargets.Method)]

      public sealed class MTAThreadAttribute : Attribute
    content.vb: >-
      <AttributeUsage(AttributeTargets.Method)>

      Public NotInheritable Class MTAThreadAttribute
          Inherits Attribute
  seealso:
  - type: System.STAThreadAttribute
    commentId: T:System.STAThreadAttribute
  inheritance:
  - System.Object
  - System.Attribute
  inheritedMembers:
  - System.Attribute.Equals(System.Object)
  - System.Attribute.GetHashCode
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  attributes:
  - type: System.AttributeUsageAttribute
    ctor: System.AttributeUsageAttribute.#ctor(System.AttributeTargets)
    arguments:
    - type: System.AttributeTargets
      value: 64
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: System.MTAThreadAttribute.#ctor
  commentId: M:System.MTAThreadAttribute.#ctor
  id: '#ctor'
  parent: System.MTAThreadAttribute
  langs:
  - csharp
  - vb
  name: MTAThreadAttribute()
  fullName: System.MTAThreadAttribute.MTAThreadAttribute()
  type: Constructor
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 1259
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.MTAThreadAttribute\" data-throw-if-not-resolved=\"false\"></xref> class.</p>\n"
  syntax:
    content: public MTAThreadAttribute()
    content.vb: Public Sub New
  seealso:
  - type: System.STAThreadAttribute
    commentId: T:System.STAThreadAttribute
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System.Attribute
  parent: System
  isExternal: false
  name: Attribute
  fullName: System.Attribute
- uid: System.Attribute.Equals(System.Object)
  parent: System.Attribute
  isExternal: false
  name: Equals(Object)
  fullName: System.Attribute.Equals(System.Object)
  spec.csharp:
  - uid: System.Attribute.Equals(System.Object)
    name: Equals
    fullName: System.Attribute.Equals
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Attribute.Equals(System.Object)
    name: Equals
    fullName: System.Attribute.Equals
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
  - name: )
    fullName: )
- uid: System.Attribute.GetHashCode
  parent: System.Attribute
  isExternal: false
  name: GetHashCode()
  fullName: System.Attribute.GetHashCode()
  spec.csharp:
  - uid: System.Attribute.GetHashCode
    name: GetHashCode
    fullName: System.Attribute.GetHashCode
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Attribute.GetHashCode
    name: GetHashCode
    fullName: System.Attribute.GetHashCode
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: false
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: false
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
  - name: )
    fullName: )
- uid: System.Object.ToString
  parent: System.Object
  isExternal: false
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
  - name: (
    fullName: (
  - name: )
    fullName: )
