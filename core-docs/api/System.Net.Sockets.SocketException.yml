items:
- uid: System.Net.Sockets.SocketException
  commentId: T:System.Net.Sockets.SocketException
  id: SocketException
  parent: System.Net.Sockets
  children:
  - System.Net.Sockets.SocketException.#ctor
  - System.Net.Sockets.SocketException.#ctor(System.Int32)
  - System.Net.Sockets.SocketException.Message
  - System.Net.Sockets.SocketException.SocketErrorCode
  langs:
  - csharp
  - vb
  name: SocketException
  fullName: System.Net.Sockets.SocketException
  type: Class
  source:
    remote:
      path: src/System.Net.Primitives/ref/System.Net.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: SocketException
    path: src/System.Net.Primitives/ref/System.Net.Primitives.cs
    startLine: 376
  assemblies:
  - System.Net.Primitives
  namespace: System.Net.Sockets
  summary: "\n<p>The exception that is thrown when a socket error occurs.</p>\n"
  remarks: "\n<p>A <xref href=\"System.Net.Sockets.SocketException\" data-throw-if-not-resolved=\"false\"></xref> is thrown by the <xref href=\"System.Net.Sockets.Socket\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"System.Net.Dns\" data-throw-if-not-resolved=\"false\"></xref> classes when an error occurs with the network.</p>\n<p>The default constructor for the <xref href=\"System.Net.Sockets.SocketException.#ctor\" data-throw-if-not-resolved=\"false\"></xref> class sets the <xref href=\"System.Net.Sockets.SocketException.ErrorCode\" data-throw-if-not-resolved=\"false\"></xref> property to the last operating system socket error that occurred. For more information about socket error codes, see the Windows Sockets version 2 API error code documentation on MSDN.</p>\n"
  syntax:
    content: 'public class SocketException : Exception, ISerializable, _Exception'
    content.vb: >-
      Public Class SocketException
          Inherits Exception
          Implements ISerializable, _Exception
  seealso:
  - type: System.Exception
    commentId: T:System.Exception
  inheritance:
  - System.Object
  - System.Exception
  implements:
  - System.Runtime.Serialization.ISerializable
  - System.Runtime.InteropServices._Exception
  inheritedMembers:
  - System.Exception.GetBaseException
  - System.Exception.ToString
  - System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Exception.GetType
  - System.Exception.Data
  - System.Exception.InnerException
  - System.Exception.TargetSite
  - System.Exception.StackTrace
  - System.Exception.HelpLink
  - System.Exception.Source
  - System.Exception.HResult
  - System.Exception.SerializeObjectState
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: System.Net.Sockets.SocketException.#ctor
  commentId: M:System.Net.Sockets.SocketException.#ctor
  id: '#ctor'
  parent: System.Net.Sockets.SocketException
  langs:
  - csharp
  - vb
  name: SocketException()
  fullName: System.Net.Sockets.SocketException.SocketException()
  type: Constructor
  source:
    remote:
      path: src/System.Net.Primitives/ref/System.Net.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Net.Primitives/ref/System.Net.Primitives.cs
    startLine: 378
  assemblies:
  - System.Net.Primitives
  namespace: System.Net.Sockets
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Net.Sockets.SocketException\" data-throw-if-not-resolved=\"false\"></xref> class with the last operating system error code.</p>\n"
  remarks: "\n<p>The <xref href=\"System.Net.Sockets.SocketException.#ctor\" data-throw-if-not-resolved=\"false\"></xref> constructor sets the <xref href=\"System.Net.Sockets.SocketException.ErrorCode\" data-throw-if-not-resolved=\"false\"></xref> property to the last operating system socket error that occurred. For more information about socket error codes, see the Windows Sockets version 2 API error code documentation (http://msdn.microsoft.com/library/default.asp?url=/library/winsock/winsock/windows_sockets_error_codes_2.asp).</p>\n"
  syntax:
    content: public SocketException()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Net.Sockets.SocketException.#ctor(System.Int32)
  commentId: M:System.Net.Sockets.SocketException.#ctor(System.Int32)
  id: '#ctor(System.Int32)'
  parent: System.Net.Sockets.SocketException
  langs:
  - csharp
  - vb
  name: SocketException(Int32)
  fullName: System.Net.Sockets.SocketException.SocketException(System.Int32)
  type: Constructor
  source:
    remote:
      path: src/System.Net.Primitives/ref/System.Net.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Net.Primitives/ref/System.Net.Primitives.cs
    startLine: 379
  assemblies:
  - System.Net.Primitives
  namespace: System.Net.Sockets
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Net.Sockets.SocketException\" data-throw-if-not-resolved=\"false\"></xref> class with the specified error code.</p>\n"
  remarks: "\n<p>The <xref href=\"System.Net.Sockets.SocketException.#ctor\" data-throw-if-not-resolved=\"false\"></xref> constructor sets the <xref href=\"System.Net.Sockets.SocketException.ErrorCode\" data-throw-if-not-resolved=\"false\"></xref> property to <em>errorCode</em>.</p>\n"
  syntax:
    content: public SocketException(int errorCode)
    content.vb: Public Sub New(errorCode As Integer)
    parameters:
    - id: errorCode
      type: System.Int32
      description: "\n<p>The error code that indicates the error that occurred. </p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Net.Sockets.SocketException.Message
  commentId: P:System.Net.Sockets.SocketException.Message
  id: Message
  parent: System.Net.Sockets.SocketException
  langs:
  - csharp
  - vb
  name: Message
  fullName: System.Net.Sockets.SocketException.Message
  type: Property
  source:
    remote:
      path: src/System.Net.Primitives/ref/System.Net.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Message
    path: src/System.Net.Primitives/ref/System.Net.Primitives.cs
    startLine: 380
  assemblies:
  - System.Net.Primitives
  namespace: System.Net.Sockets
  summary: "\n<p>Gets the error message that is associated with this exception.</p>\n"
  example:
  - 
  syntax:
    content: public override string Message { get; }
    content.vb: Public Overrides ReadOnly Property Message As String
    parameters: []
    return:
      type: System.String
      description: "\n<p>A string that contains the error message. </p>\n"
  overridden: System.Exception.Message
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: System.Net.Sockets.SocketException.SocketErrorCode
  commentId: P:System.Net.Sockets.SocketException.SocketErrorCode
  id: SocketErrorCode
  parent: System.Net.Sockets.SocketException
  langs:
  - csharp
  - vb
  name: SocketErrorCode
  fullName: System.Net.Sockets.SocketException.SocketErrorCode
  type: Property
  source:
    remote:
      path: src/System.Net.Primitives/ref/System.Net.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: SocketErrorCode
    path: src/System.Net.Primitives/ref/System.Net.Primitives.cs
    startLine: 381
  assemblies:
  - System.Net.Primitives
  namespace: System.Net.Sockets
  summary: "\n<p>Gets the error code that is associated with this exception.</p>\n"
  remarks: "\n<p>The <xref href=\"System.Net.Sockets.SocketException.SocketErrorCode\" data-throw-if-not-resolved=\"false\"></xref> property contains the error code that is associated with the error that caused the exception.</p>\n<p>The default constructor for <xref href=\"System.Net.Sockets.SocketException\" data-throw-if-not-resolved=\"false\"></xref> sets the <xref href=\"System.Net.Sockets.SocketException.ErrorCode\" data-throw-if-not-resolved=\"false\"></xref> property to the last operating system error that occurred. For more information about socket error codes, see the Windows Sockets version 2 API error code documentation in MSDN.</p>\n"
  syntax:
    content: public SocketError SocketErrorCode { get; }
    content.vb: Public ReadOnly Property SocketErrorCode As SocketError
    parameters: []
    return:
      type: System.Net.Sockets.SocketError
      description: "\n<p>An integer error code that is associated with this exception.</p>\n"
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: System.Net.Sockets
  isExternal: false
  name: System.Net.Sockets
  fullName: System.Net.Sockets
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System.Exception
  parent: System
  isExternal: false
  name: Exception
  fullName: System.Exception
- uid: System.Runtime.Serialization.ISerializable
  parent: System.Runtime.Serialization
  isExternal: false
  name: ISerializable
  fullName: System.Runtime.Serialization.ISerializable
- uid: System.Runtime.InteropServices._Exception
  parent: System.Runtime.InteropServices
  isExternal: true
  name: _Exception
  fullName: System.Runtime.InteropServices._Exception
- uid: System.Exception.GetBaseException
  parent: System.Exception
  isExternal: false
  name: GetBaseException()
  fullName: System.Exception.GetBaseException()
  spec.csharp:
  - uid: System.Exception.GetBaseException
    name: GetBaseException
    fullName: System.Exception.GetBaseException
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Exception.GetBaseException
    name: GetBaseException
    fullName: System.Exception.GetBaseException
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Exception.ToString
  parent: System.Exception
  isExternal: false
  name: ToString()
  fullName: System.Exception.ToString()
  spec.csharp:
  - uid: System.Exception.ToString
    name: ToString
    fullName: System.Exception.ToString
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Exception.ToString
    name: ToString
    fullName: System.Exception.ToString
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Exception
  isExternal: true
  name: GetObjectData(SerializationInfo, StreamingContext)
  fullName: System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)
  spec.csharp:
  - uid: System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
    name: GetObjectData
    fullName: System.Exception.GetObjectData
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Runtime.Serialization.SerializationInfo
    name: SerializationInfo
    fullName: System.Runtime.Serialization.SerializationInfo
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Runtime.Serialization.StreamingContext
    name: StreamingContext
    fullName: System.Runtime.Serialization.StreamingContext
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
    name: GetObjectData
    fullName: System.Exception.GetObjectData
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Runtime.Serialization.SerializationInfo
    name: SerializationInfo
    fullName: System.Runtime.Serialization.SerializationInfo
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Runtime.Serialization.StreamingContext
    name: StreamingContext
    fullName: System.Runtime.Serialization.StreamingContext
    isExternal: true
  - name: )
    fullName: )
- uid: System.Exception.GetType
  parent: System.Exception
  isExternal: true
  name: GetType()
  fullName: System.Exception.GetType()
  spec.csharp:
  - uid: System.Exception.GetType
    name: GetType
    fullName: System.Exception.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Exception.GetType
    name: GetType
    fullName: System.Exception.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Exception.Data
  parent: System.Exception
  isExternal: false
  name: Data
  fullName: System.Exception.Data
- uid: System.Exception.InnerException
  parent: System.Exception
  isExternal: false
  name: InnerException
  fullName: System.Exception.InnerException
- uid: System.Exception.TargetSite
  parent: System.Exception
  isExternal: true
  name: TargetSite
  fullName: System.Exception.TargetSite
- uid: System.Exception.StackTrace
  parent: System.Exception
  isExternal: false
  name: StackTrace
  fullName: System.Exception.StackTrace
- uid: System.Exception.HelpLink
  parent: System.Exception
  isExternal: false
  name: HelpLink
  fullName: System.Exception.HelpLink
- uid: System.Exception.Source
  parent: System.Exception
  isExternal: false
  name: Source
  fullName: System.Exception.Source
- uid: System.Exception.HResult
  parent: System.Exception
  isExternal: false
  name: HResult
  fullName: System.Exception.HResult
- uid: System.Exception.SerializeObjectState
  parent: System.Exception
  isExternal: true
  name: SerializeObjectState
  fullName: System.Exception.SerializeObjectState
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Runtime.Serialization
  isExternal: false
  name: System.Runtime.Serialization
  fullName: System.Runtime.Serialization
- uid: System.Runtime.InteropServices
  isExternal: false
  name: System.Runtime.InteropServices
  fullName: System.Runtime.InteropServices
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  fullName: System.Int32
- uid: System.Exception.Message
  parent: System.Exception
  isExternal: false
  name: Message
  fullName: System.Exception.Message
- uid: System.String
  parent: System
  isExternal: false
  name: String
  fullName: System.String
- uid: System.Net.Sockets.SocketError
  parent: System.Net.Sockets
  isExternal: false
  name: SocketError
  fullName: System.Net.Sockets.SocketError
