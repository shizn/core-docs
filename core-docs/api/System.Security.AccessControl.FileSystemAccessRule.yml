items:
- uid: System.Security.AccessControl.FileSystemAccessRule
  commentId: T:System.Security.AccessControl.FileSystemAccessRule
  id: FileSystemAccessRule
  parent: System.Security.AccessControl
  children:
  - System.Security.AccessControl.FileSystemAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.FileSystemRights,System.Security.AccessControl.AccessControlType)
  - System.Security.AccessControl.FileSystemAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.FileSystemRights,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)
  - System.Security.AccessControl.FileSystemAccessRule.#ctor(System.String,System.Security.AccessControl.FileSystemRights,System.Security.AccessControl.AccessControlType)
  - System.Security.AccessControl.FileSystemAccessRule.#ctor(System.String,System.Security.AccessControl.FileSystemRights,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)
  - System.Security.AccessControl.FileSystemAccessRule.FileSystemRights
  langs:
  - csharp
  - vb
  name: FileSystemAccessRule
  fullName: System.Security.AccessControl.FileSystemAccessRule
  type: Class
  source:
    remote:
      path: src/System.IO.FileSystem.AccessControl/ref/System.IO.FileSystem.AccessControl.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: FileSystemAccessRule
    path: src/System.IO.FileSystem.AccessControl/ref/System.IO.FileSystem.AccessControl.cs
    startLine: 60
  assemblies:
  - System.IO.FileSystem.AccessControl
  namespace: System.Security.AccessControl
  summary: Represents an abstraction of an access control entry (ACE) that defines an access rule for a file or directory. This class cannot be inherited.
  syntax:
    content: 'public sealed class FileSystemAccessRule : AccessRule'
    content.vb: >-
      Public NotInheritable Class FileSystemAccessRule
          Inherits AccessRule
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: System.Security.AccessControl.FileSystemAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.FileSystemRights,System.Security.AccessControl.AccessControlType)
  commentId: M:System.Security.AccessControl.FileSystemAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.FileSystemRights,System.Security.AccessControl.AccessControlType)
  id: '#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.FileSystemRights,System.Security.AccessControl.AccessControlType)'
  parent: System.Security.AccessControl.FileSystemAccessRule
  langs:
  - csharp
  - vb
  name: FileSystemAccessRule(Principal.IdentityReference, FileSystemRights, AccessControlType)
  fullName: System.Security.AccessControl.FileSystemAccessRule.FileSystemAccessRule(System.Security.Principal.IdentityReference, System.Security.AccessControl.FileSystemRights, System.Security.AccessControl.AccessControlType)
  type: Constructor
  source:
    remote:
      path: src/System.IO.FileSystem.AccessControl/ref/System.IO.FileSystem.AccessControl.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.IO.FileSystem.AccessControl/ref/System.IO.FileSystem.AccessControl.cs
    startLine: 63
  assemblies:
  - System.IO.FileSystem.AccessControl
  namespace: System.Security.AccessControl
  summary: 'Initializes a new instance of the <xref href="System.Security.AccessControl.FileSystemAccessRule" data-throw-if-not-resolved="false"></xref> class using a reference to a user account, a value that specifies the type of operation associated with the access rule, and a value that specifies whether to allow or deny the operation. '
  syntax:
    content: public FileSystemAccessRule(Principal.IdentityReference identity, FileSystemRights fileSystemRights, AccessControlType type)
    content.vb: Public Sub New(identity As Principal.IdentityReference, fileSystemRights As FileSystemRights, type As AccessControlType)
    parameters:
    - id: identity
      type: System.Security.Principal.IdentityReference
      description: An <xref href="System.Security.Principal.IdentityReference" data-throw-if-not-resolved="false"></xref> object that encapsulates a reference to a user account.
    - id: fileSystemRights
      type: System.Security.AccessControl.FileSystemRights
      description: 'One of the <xref href="System.Security.AccessControl.FileSystemRights" data-throw-if-not-resolved="false"></xref> values that specifies the type of operation associated with the access rule. '
    - id: type
      type: System.Security.AccessControl.AccessControlType
      description: One of the <xref href="System.Security.AccessControl.AccessControlType" data-throw-if-not-resolved="false"></xref> values that specifies whether to allow or deny the operation.
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: The <em>identity</em> parameter is not an <xref href="System.Security.Principal.IdentityReference" data-throw-if-not-resolved="false"></xref> object.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <em>identity</em> parameter is null.
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: An incorrect enumeration was passed to the <em>type </em>parameter.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Security.AccessControl.FileSystemAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.FileSystemRights,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)
  commentId: M:System.Security.AccessControl.FileSystemAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.FileSystemRights,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)
  id: '#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.FileSystemRights,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)'
  parent: System.Security.AccessControl.FileSystemAccessRule
  langs:
  - csharp
  - vb
  name: FileSystemAccessRule(Principal.IdentityReference, FileSystemRights, InheritanceFlags, PropagationFlags, AccessControlType)
  fullName: System.Security.AccessControl.FileSystemAccessRule.FileSystemAccessRule(System.Security.Principal.IdentityReference, System.Security.AccessControl.FileSystemRights, System.Security.AccessControl.InheritanceFlags, System.Security.AccessControl.PropagationFlags, System.Security.AccessControl.AccessControlType)
  type: Constructor
  source:
    remote:
      path: src/System.IO.FileSystem.AccessControl/ref/System.IO.FileSystem.AccessControl.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.IO.FileSystem.AccessControl/ref/System.IO.FileSystem.AccessControl.cs
    startLine: 64
  assemblies:
  - System.IO.FileSystem.AccessControl
  namespace: System.Security.AccessControl
  summary: Initializes a new instance of the <xref href="System.Security.AccessControl.FileSystemAccessRule" data-throw-if-not-resolved="false"></xref> class using a reference to a user account, a value that specifies the type of operation associated with the access rule, a value that determines how rights are inherited, a value that determines how rights are propagated, and a value that specifies whether to allow or deny the operation.
  syntax:
    content: public FileSystemAccessRule(Principal.IdentityReference identity, FileSystemRights fileSystemRights, InheritanceFlags inheritanceFlags, PropagationFlags propagationFlags, AccessControlType type)
    content.vb: Public Sub New(identity As Principal.IdentityReference, fileSystemRights As FileSystemRights, inheritanceFlags As InheritanceFlags, propagationFlags As PropagationFlags, type As AccessControlType)
    parameters:
    - id: identity
      type: System.Security.Principal.IdentityReference
      description: An <xref href="System.Security.Principal.IdentityReference" data-throw-if-not-resolved="false"></xref> object that encapsulates a reference to a user account.
    - id: fileSystemRights
      type: System.Security.AccessControl.FileSystemRights
      description: One of the <xref href="System.Security.AccessControl.FileSystemRights" data-throw-if-not-resolved="false"></xref> values that specifies the type of operation associated with the access rule.
    - id: inheritanceFlags
      type: System.Security.AccessControl.InheritanceFlags
      description: One of the <xref href="System.Security.AccessControl.InheritanceFlags" data-throw-if-not-resolved="false"></xref> values that specifies how access masks are propagated to child objects.
    - id: propagationFlags
      type: System.Security.AccessControl.PropagationFlags
      description: One of the <xref href="System.Security.AccessControl.PropagationFlags" data-throw-if-not-resolved="false"></xref> values that specifies how Access Control Entries (ACEs) are propagated to child objects.
    - id: type
      type: System.Security.AccessControl.AccessControlType
      description: One of the <xref href="System.Security.AccessControl.AccessControlType" data-throw-if-not-resolved="false"></xref> values that specifies whether to allow or deny the operation.
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: The <em>identity</em> parameter is not an <xref href="System.Security.Principal.IdentityReference" data-throw-if-not-resolved="false"></xref> object.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <em>identity</em> parameter is null.
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: An incorrect enumeration was passed to the <em>type </em>parameter.-or-An incorrect enumeration was passed to the <em>inheritanceFlags </em>parameter.-or-An incorrect enumeration was passed to the <em>propagationFlags </em>parameter.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Security.AccessControl.FileSystemAccessRule.#ctor(System.String,System.Security.AccessControl.FileSystemRights,System.Security.AccessControl.AccessControlType)
  commentId: M:System.Security.AccessControl.FileSystemAccessRule.#ctor(System.String,System.Security.AccessControl.FileSystemRights,System.Security.AccessControl.AccessControlType)
  id: '#ctor(System.String,System.Security.AccessControl.FileSystemRights,System.Security.AccessControl.AccessControlType)'
  parent: System.Security.AccessControl.FileSystemAccessRule
  langs:
  - csharp
  - vb
  name: FileSystemAccessRule(String, FileSystemRights, AccessControlType)
  fullName: System.Security.AccessControl.FileSystemAccessRule.FileSystemAccessRule(System.String, System.Security.AccessControl.FileSystemRights, System.Security.AccessControl.AccessControlType)
  type: Constructor
  source:
    remote:
      path: src/System.IO.FileSystem.AccessControl/ref/System.IO.FileSystem.AccessControl.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.IO.FileSystem.AccessControl/ref/System.IO.FileSystem.AccessControl.cs
    startLine: 65
  assemblies:
  - System.IO.FileSystem.AccessControl
  namespace: System.Security.AccessControl
  summary: 'Initializes a new instance of the <xref href="System.Security.AccessControl.FileSystemAccessRule" data-throw-if-not-resolved="false"></xref> class using the name of a user account, a value that specifies the type of operation associated with the access rule, and a value that describes whether to allow or deny the operation. '
  syntax:
    content: public FileSystemAccessRule(string identity, FileSystemRights fileSystemRights, AccessControlType type)
    content.vb: Public Sub New(identity As String, fileSystemRights As FileSystemRights, type As AccessControlType)
    parameters:
    - id: identity
      type: System.String
      description: The name of a user account.
    - id: fileSystemRights
      type: System.Security.AccessControl.FileSystemRights
      description: 'One of the <xref href="System.Security.AccessControl.FileSystemRights" data-throw-if-not-resolved="false"></xref> values that specifies the type of operation associated with the access rule. '
    - id: type
      type: System.Security.AccessControl.AccessControlType
      description: One of the <xref href="System.Security.AccessControl.AccessControlType" data-throw-if-not-resolved="false"></xref> values that specifies whether to allow or deny the operation.
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <em>identity</em> parameter is null.
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: An incorrect enumeration was passed to the <em>type </em>parameter.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Security.AccessControl.FileSystemAccessRule.#ctor(System.String,System.Security.AccessControl.FileSystemRights,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)
  commentId: M:System.Security.AccessControl.FileSystemAccessRule.#ctor(System.String,System.Security.AccessControl.FileSystemRights,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)
  id: '#ctor(System.String,System.Security.AccessControl.FileSystemRights,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)'
  parent: System.Security.AccessControl.FileSystemAccessRule
  langs:
  - csharp
  - vb
  name: FileSystemAccessRule(String, FileSystemRights, InheritanceFlags, PropagationFlags, AccessControlType)
  fullName: System.Security.AccessControl.FileSystemAccessRule.FileSystemAccessRule(System.String, System.Security.AccessControl.FileSystemRights, System.Security.AccessControl.InheritanceFlags, System.Security.AccessControl.PropagationFlags, System.Security.AccessControl.AccessControlType)
  type: Constructor
  source:
    remote:
      path: src/System.IO.FileSystem.AccessControl/ref/System.IO.FileSystem.AccessControl.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.IO.FileSystem.AccessControl/ref/System.IO.FileSystem.AccessControl.cs
    startLine: 66
  assemblies:
  - System.IO.FileSystem.AccessControl
  namespace: System.Security.AccessControl
  summary: Initializes a new instance of the <xref href="System.Security.AccessControl.FileSystemAccessRule" data-throw-if-not-resolved="false"></xref> class using the name of a user account, a value that specifies the type of operation associated with the access rule, a value that determines how rights are inherited, a value that determines how rights are propagated, and a value that specifies whether to allow or deny the operation.
  syntax:
    content: public FileSystemAccessRule(string identity, FileSystemRights fileSystemRights, InheritanceFlags inheritanceFlags, PropagationFlags propagationFlags, AccessControlType type)
    content.vb: Public Sub New(identity As String, fileSystemRights As FileSystemRights, inheritanceFlags As InheritanceFlags, propagationFlags As PropagationFlags, type As AccessControlType)
    parameters:
    - id: identity
      type: System.String
      description: The name of a user account.
    - id: fileSystemRights
      type: System.Security.AccessControl.FileSystemRights
      description: One of the <xref href="System.Security.AccessControl.FileSystemRights" data-throw-if-not-resolved="false"></xref> values that specifies the type of operation associated with the access rule.
    - id: inheritanceFlags
      type: System.Security.AccessControl.InheritanceFlags
      description: One of the <xref href="System.Security.AccessControl.InheritanceFlags" data-throw-if-not-resolved="false"></xref> values that specifies how access masks are propagated to child objects.
    - id: propagationFlags
      type: System.Security.AccessControl.PropagationFlags
      description: One of the <xref href="System.Security.AccessControl.PropagationFlags" data-throw-if-not-resolved="false"></xref> values that specifies how Access Control Entries (ACEs) are propagated to child objects.
    - id: type
      type: System.Security.AccessControl.AccessControlType
      description: One of the <xref href="System.Security.AccessControl.AccessControlType" data-throw-if-not-resolved="false"></xref> values that specifies whether to allow or deny the operation.
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <em>identity</em> parameter is null.
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: An incorrect enumeration was passed to the <em>type </em>parameter.-or-An incorrect enumeration was passed to the <em>inheritanceFlags </em>parameter.-or-An incorrect enumeration was passed to the <em>propagationFlags </em>parameter.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Security.AccessControl.FileSystemAccessRule.FileSystemRights
  commentId: P:System.Security.AccessControl.FileSystemAccessRule.FileSystemRights
  id: FileSystemRights
  parent: System.Security.AccessControl.FileSystemAccessRule
  langs:
  - csharp
  - vb
  name: FileSystemRights
  fullName: System.Security.AccessControl.FileSystemAccessRule.FileSystemRights
  type: Property
  source:
    remote:
      path: src/System.IO.FileSystem.AccessControl/ref/System.IO.FileSystem.AccessControl.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: FileSystemRights
    path: src/System.IO.FileSystem.AccessControl/ref/System.IO.FileSystem.AccessControl.cs
    startLine: 67
  assemblies:
  - System.IO.FileSystem.AccessControl
  namespace: System.Security.AccessControl
  summary: Gets the <xref href="System.Security.AccessControl.FileSystemRights" data-throw-if-not-resolved="false"></xref> flags associated with the current <xref href="System.Security.AccessControl.FileSystemAccessRule" data-throw-if-not-resolved="false"></xref> object.
  syntax:
    content: public FileSystemRights FileSystemRights { get; }
    content.vb: Public ReadOnly Property FileSystemRights As FileSystemRights
    parameters: []
    return:
      type: System.Security.AccessControl.FileSystemRights
      description: The <xref href="System.Security.AccessControl.FileSystemRights" data-throw-if-not-resolved="false"></xref> flags associated with the current <xref href="System.Security.AccessControl.FileSystemAccessRule" data-throw-if-not-resolved="false"></xref> object.
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: System.Security.AccessControl
  isExternal: false
  name: System.Security.AccessControl
  fullName: System.Security.AccessControl
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Security.Principal.IdentityReference
  parent: System.Security.Principal
  isExternal: false
  name: Principal.IdentityReference
  fullName: System.Security.Principal.IdentityReference
- uid: System.Security.AccessControl.FileSystemRights
  parent: System.Security.AccessControl
  isExternal: false
  name: FileSystemRights
  fullName: System.Security.AccessControl.FileSystemRights
- uid: System.Security.AccessControl.AccessControlType
  parent: System.Security.AccessControl
  isExternal: false
  name: AccessControlType
  fullName: System.Security.AccessControl.AccessControlType
- uid: System.Security.Principal
  isExternal: false
  name: System.Security.Principal
  fullName: System.Security.Principal
- uid: System.Security.AccessControl.InheritanceFlags
  parent: System.Security.AccessControl
  isExternal: false
  name: InheritanceFlags
  fullName: System.Security.AccessControl.InheritanceFlags
- uid: System.Security.AccessControl.PropagationFlags
  parent: System.Security.AccessControl
  isExternal: false
  name: PropagationFlags
  fullName: System.Security.AccessControl.PropagationFlags
- uid: System.String
  parent: System
  isExternal: false
  name: String
  fullName: System.String
- uid: System.ArgumentException
  parent: System
  isExternal: false
  name: ArgumentException
  fullName: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: false
  name: ArgumentNullException
  fullName: System.ArgumentNullException
- uid: System.ArgumentOutOfRangeException
  isExternal: false
  name: ArgumentOutOfRangeException
  fullName: System.ArgumentOutOfRangeException
