items:
- uid: System.Diagnostics.Tracing.EventSource.EventData
  commentId: T:System.Diagnostics.Tracing.EventSource.EventData
  id: EventSource.EventData
  parent: System.Diagnostics.Tracing
  children:
  - System.Diagnostics.Tracing.EventSource.EventData.DataPointer
  - System.Diagnostics.Tracing.EventSource.EventData.Size
  langs:
  - csharp
  - vb
  name: EventSource.EventData
  fullName: System.Diagnostics.Tracing.EventSource.EventData
  type: Struct
  source:
    remote:
      path: src/System.Diagnostics.Tracing/ref/System.Diagnostics.Tracing.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: EventData
    path: src/System.Diagnostics.Tracing/ref/System.Diagnostics.Tracing.cs
    startLine: 213
  assemblies:
  - System.Diagnostics.Tracing
  namespace: System.Diagnostics.Tracing
  summary: "\n<p>Provides the event data for creating fast <see cref=\"Overload:System.Diagnostics.Tracing.EventSource.WriteEvent\"></see> overloads by using the <xref href=\"System.Diagnostics.Tracing.EventSource.WriteEventCore(System.Int32,System.Int32,System.Diagnostics.Tracing.EventSource.EventData*)\" data-throw-if-not-resolved=\"false\"></xref> method.</p>\n"
  remarks: "\n<p>The following example shows how to use the <xref href=\"System.Diagnostics.Tracing.EventSource.EventData\" data-throw-if-not-resolved=\"false\"></xref> structure.</p>\n<pre><code>        \n[NonEvent]\npublic unsafe void WriteEvent(int eventId, int arg1, int arg2, int arg3, int arg4) {\n    EventData* dataDesc = stackalloc EventProvider.EventData[4];\n\n    dataDesc[0].DataPointer = (IntPtr)(&arg1);\n    dataDesc[0].Size = 4;\n    dataDesc[1].DataPointer = (IntPtr)(&arg2);\n    dataDesc[1].Size = 4;\n    dataDesc[2].DataPointer = (IntPtr)(&arg3);\n    dataDesc[2].Size = 4;\n    dataDesc[3].DataPointer = (IntPtr)(&arg4);\n    dataDesc[3].Size = 4;\n\n    WriteEventCore(eventId, 4, (IntPtr)dataDesc);\n}</code></pre>\n"
  syntax:
    content: protected struct EventData
    content.vb: Protected Structure EventData
  modifiers.csharp:
  - protected
  - struct
  modifiers.vb:
  - Protected
  - Structure
- uid: System.Diagnostics.Tracing.EventSource.EventData.DataPointer
  commentId: P:System.Diagnostics.Tracing.EventSource.EventData.DataPointer
  id: DataPointer
  parent: System.Diagnostics.Tracing.EventSource.EventData
  langs:
  - csharp
  - vb
  name: DataPointer
  fullName: System.Diagnostics.Tracing.EventSource.EventData.DataPointer
  type: Property
  source:
    remote:
      path: src/System.Diagnostics.Tracing/ref/System.Diagnostics.Tracing.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: DataPointer
    path: src/System.Diagnostics.Tracing/ref/System.Diagnostics.Tracing.cs
    startLine: 216
  assemblies:
  - System.Diagnostics.Tracing
  namespace: System.Diagnostics.Tracing
  summary: "\n<p>Gets or sets the pointer to the data for the new <see cref=\"Overload:System.Diagnostics.Tracing.EventSource.WriteEvent\"></see> overload.</p>\n"
  syntax:
    content: public IntPtr DataPointer { get; set; }
    content.vb: Public Property DataPointer As IntPtr
    parameters: []
    return:
      type: System.IntPtr
      description: "\n<p>The pointer to the data.</p>\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Diagnostics.Tracing.EventSource.EventData.Size
  commentId: P:System.Diagnostics.Tracing.EventSource.EventData.Size
  id: Size
  parent: System.Diagnostics.Tracing.EventSource.EventData
  langs:
  - csharp
  - vb
  name: Size
  fullName: System.Diagnostics.Tracing.EventSource.EventData.Size
  type: Property
  source:
    remote:
      path: src/System.Diagnostics.Tracing/ref/System.Diagnostics.Tracing.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Size
    path: src/System.Diagnostics.Tracing/ref/System.Diagnostics.Tracing.cs
    startLine: 217
  assemblies:
  - System.Diagnostics.Tracing
  namespace: System.Diagnostics.Tracing
  summary: "\n<p>Gets or sets the number of payload items in the new <see cref=\"Overload:System.Diagnostics.Tracing.EventSource.WriteEvent\"></see> overload.</p>\n"
  syntax:
    content: public int Size { get; set; }
    content.vb: Public Property Size As Integer
    parameters: []
    return:
      type: System.Int32
      description: "\n<p>The number of payload items in the new overload.</p>\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: System.Diagnostics.Tracing
  isExternal: false
  name: System.Diagnostics.Tracing
  fullName: System.Diagnostics.Tracing
- uid: System.IntPtr
  parent: System
  isExternal: false
  name: IntPtr
  fullName: System.IntPtr
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  fullName: System.Int32
