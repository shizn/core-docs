items:
- uid: System.ComponentModel.IComponent
  commentId: T:System.ComponentModel.IComponent
  id: IComponent
  parent: System.ComponentModel
  children:
  - System.ComponentModel.IComponent.Disposed
  - System.ComponentModel.IComponent.Site
  langs:
  - csharp
  - vb
  name: IComponent
  fullName: System.ComponentModel.IComponent
  type: Interface
  source:
    remote:
      path: src/System.ComponentModel.Primitives/src/System/ComponentModel/IComponent.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IComponent
    path: src/System.ComponentModel.Primitives/src/System/ComponentModel/IComponent.cs
    startLine: 25
  assemblies:
  - System.ComponentModel.Primitives
  namespace: System.ComponentModel
  summary: "\n<p>Provides functionality required by all components. </p>\n"
  remarks: "\n<p>\n<xref href=\"System.ComponentModel.Component\" data-throw-if-not-resolved=\"false\"></xref> is the default implementation of <xref href=\"System.ComponentModel.IComponent\" data-throw-if-not-resolved=\"false\"></xref> and serves as the base class for all components in the common language runtime.</p>\n<p>You can contain components in a container. In this context, containment refers to logical containment, not visual containment. You can use components and containers in a variety of scenarios, both visual and non visual.</p>\n<p>\n<xref href=\"System.Windows.Forms.Control\" data-throw-if-not-resolved=\"false\"></xref> inherits from <xref href=\"System.ComponentModel.Component\" data-throw-if-not-resolved=\"false\"></xref>, the default implementation of <xref href=\"System.ComponentModel.IComponent\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>A component interacts with its container primarily through a container-provided <xref href=\"System.ComponentModel.ISite\" data-throw-if-not-resolved=\"false\"></xref>, which is a repository of container-specific per-component information.</p>\n"
  example:
  - "\n<p>The following code example demonstrates how to implement the <xref href=\"System.ComponentModel.IComponent\" data-throw-if-not-resolved=\"false\"></xref>, <xref href=\"System.ComponentModel.ISite\" data-throw-if-not-resolved=\"false\"></xref>, and <xref href=\"System.ComponentModel.IContainer\" data-throw-if-not-resolved=\"false\"></xref> interfaces.</p>ContainerExmpl#1"
  syntax:
    content: 'public interface IComponent : IDisposable'
    content.vb: >-
      Public Interface IComponent
          Inherits IDisposable
  seealso:
  - type: System.ComponentModel.Container
    commentId: T:System.ComponentModel.Container
  - type: System.ComponentModel.IContainer
    commentId: T:System.ComponentModel.IContainer
  - type: System.ComponentModel.ISite
    commentId: T:System.ComponentModel.ISite
  - type: System.Windows.Forms.Control
    commentId: T:System.Windows.Forms.Control
  inheritedMembers:
  - System.IDisposable.Dispose
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: System.ComponentModel.IComponent.Site
  commentId: P:System.ComponentModel.IComponent.Site
  id: Site
  parent: System.ComponentModel.IComponent
  langs:
  - csharp
  - vb
  name: Site
  fullName: System.ComponentModel.IComponent.Site
  type: Property
  source:
    remote:
      path: src/System.ComponentModel.Primitives/src/System/ComponentModel/IComponent.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Site
    path: src/System.ComponentModel.Primitives/src/System/ComponentModel/IComponent.cs
    startLine: 33
  assemblies:
  - System.ComponentModel.Primitives
  namespace: System.ComponentModel
  summary: "\n<p>Gets or sets the <xref href=\"System.ComponentModel.ISite\" data-throw-if-not-resolved=\"false\"></xref> associated with the <xref href=\"System.ComponentModel.IComponent\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  remarks: "\n<p>Sites can also serve as a repository for container-specific, per-component information, such as the component name.</p>\n"
  syntax:
    content: ISite Site { get; set; }
    content.vb: Property Site As ISite
    parameters: []
    return:
      type: System.ComponentModel.ISite
  seealso:
  - type: System.ComponentModel.ISite
    commentId: T:System.ComponentModel.ISite
  modifiers.csharp:
  - get
  - set
- uid: System.ComponentModel.IComponent.Disposed
  commentId: E:System.ComponentModel.IComponent.Disposed
  id: Disposed
  parent: System.ComponentModel.IComponent
  langs:
  - csharp
  - vb
  name: Disposed
  fullName: System.ComponentModel.IComponent.Disposed
  type: Event
  source:
    remote:
      path: src/System.ComponentModel.Primitives/src/System/ComponentModel/IComponent.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Disposed
    path: src/System.ComponentModel.Primitives/src/System/ComponentModel/IComponent.cs
    startLine: 42
  assemblies:
  - System.ComponentModel.Primitives
  namespace: System.ComponentModel
  summary: "\n<p>Represents the method that handles the <xref href=\"System.ComponentModel.IComponent.Disposed\" data-throw-if-not-resolved=\"false\"></xref> event of a component.</p>\n"
  remarks: "\n<p>When you create a <xref href=\"System.ComponentModel.IComponent.Disposed\" data-throw-if-not-resolved=\"false\"></xref> delegate, you identify the method that handles the event. To associate the event with your event handler, add an instance of the delegate to the event. The event handler is called whenever the event occurs, unless you remove the delegate. For more information about event handler delegates, see NIB: Events and Delegates.</p>\n"
  syntax:
    content: event EventHandler Disposed
    content.vb: Event Disposed As EventHandler
    return:
      type: System.EventHandler
  seealso:
  - type: System.EventHandler
    commentId: T:System.EventHandler
references:
- uid: System.ComponentModel
  isExternal: false
  name: System.ComponentModel
  fullName: System.ComponentModel
- uid: System.IDisposable.Dispose
  parent: System.IDisposable
  isExternal: false
  name: Dispose()
  fullName: System.IDisposable.Dispose()
  spec.csharp:
  - uid: System.IDisposable.Dispose
    name: Dispose
    fullName: System.IDisposable.Dispose
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IDisposable.Dispose
    name: Dispose
    fullName: System.IDisposable.Dispose
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.IDisposable
  parent: System
  isExternal: false
  name: IDisposable
  fullName: System.IDisposable
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.ComponentModel.ISite
  parent: System.ComponentModel
  isExternal: false
  name: ISite
  fullName: System.ComponentModel.ISite
- uid: System.EventHandler
  parent: System
  isExternal: false
  name: EventHandler
  fullName: System.EventHandler
