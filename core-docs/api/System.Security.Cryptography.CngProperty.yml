items:
- uid: System.Security.Cryptography.CngProperty
  commentId: T:System.Security.Cryptography.CngProperty
  id: CngProperty
  parent: System.Security.Cryptography
  children:
  - System.Security.Cryptography.CngProperty.#ctor(System.String,System.Byte[],System.Security.Cryptography.CngPropertyOptions)
  - System.Security.Cryptography.CngProperty.Equals(System.Object)
  - System.Security.Cryptography.CngProperty.Equals(System.Security.Cryptography.CngProperty)
  - System.Security.Cryptography.CngProperty.GetHashCode
  - System.Security.Cryptography.CngProperty.GetValue
  - System.Security.Cryptography.CngProperty.Name
  - System.Security.Cryptography.CngProperty.op_Equality(System.Security.Cryptography.CngProperty,System.Security.Cryptography.CngProperty)
  - System.Security.Cryptography.CngProperty.op_Inequality(System.Security.Cryptography.CngProperty,System.Security.Cryptography.CngProperty)
  - System.Security.Cryptography.CngProperty.Options
  langs:
  - csharp
  - vb
  name: CngProperty
  fullName: System.Security.Cryptography.CngProperty
  type: Struct
  source:
    remote:
      path: src/System.Security.Cryptography.Cng/src/System/Security/Cryptography/CngProperty.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CngProperty
    path: src/System.Security.Cryptography.Cng/src/System/Security/Cryptography/CngProperty.cs
    startLine: 15
  assemblies:
  - System.Security.Cryptography.Cng
  namespace: System.Security.Cryptography
  syntax:
    content: 'public struct CngProperty : IEquatable<CngProperty>'
    content.vb: >-
      Public Structure CngProperty
          Implements IEquatable(Of CngProperty)
  implements:
  - System.IEquatable{System.Security.Cryptography.CngProperty}
  modifiers.csharp:
  - public
  - struct
  modifiers.vb:
  - Public
  - Structure
- uid: System.Security.Cryptography.CngProperty.#ctor(System.String,System.Byte[],System.Security.Cryptography.CngPropertyOptions)
  commentId: M:System.Security.Cryptography.CngProperty.#ctor(System.String,System.Byte[],System.Security.Cryptography.CngPropertyOptions)
  id: '#ctor(System.String,System.Byte[],System.Security.Cryptography.CngPropertyOptions)'
  parent: System.Security.Cryptography.CngProperty
  langs:
  - csharp
  - vb
  name: CngProperty(String, Byte[], CngPropertyOptions)
  fullName: System.Security.Cryptography.CngProperty.CngProperty(System.String, System.Byte[], System.Security.Cryptography.CngPropertyOptions)
  type: Constructor
  source:
    remote:
      path: src/System.Security.Cryptography.Cng/src/System/Security/Cryptography/CngProperty.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Security.Cryptography.Cng/src/System/Security/Cryptography/CngProperty.cs
    startLine: 18
  assemblies:
  - System.Security.Cryptography.Cng
  namespace: System.Security.Cryptography
  syntax:
    content: public CngProperty(string name, byte[] value, CngPropertyOptions options)
    content.vb: Public Sub New(name As String, value As Byte(), options As CngPropertyOptions)
    parameters:
    - id: name
      type: System.String
    - id: value
      type: System.Byte[]
    - id: options
      type: System.Security.Cryptography.CngPropertyOptions
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Security.Cryptography.CngProperty.CngProperty(System.String, System.Byte(), System.Security.Cryptography.CngPropertyOptions)
  name.vb: CngProperty(String, Byte(), CngPropertyOptions)
- uid: System.Security.Cryptography.CngProperty.Name
  commentId: P:System.Security.Cryptography.CngProperty.Name
  id: Name
  parent: System.Security.Cryptography.CngProperty
  langs:
  - csharp
  - vb
  name: Name
  fullName: System.Security.Cryptography.CngProperty.Name
  type: Property
  source:
    remote:
      path: src/System.Security.Cryptography.Cng/src/System/Security/Cryptography/CngProperty.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Name
    path: src/System.Security.Cryptography.Cng/src/System/Security/Cryptography/CngProperty.cs
    startLine: 33
  assemblies:
  - System.Security.Cryptography.Cng
  namespace: System.Security.Cryptography
  syntax:
    content: public string Name { get; }
    content.vb: Public ReadOnly Property Name As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Security.Cryptography.CngProperty.Options
  commentId: P:System.Security.Cryptography.CngProperty.Options
  id: Options
  parent: System.Security.Cryptography.CngProperty
  langs:
  - csharp
  - vb
  name: Options
  fullName: System.Security.Cryptography.CngProperty.Options
  type: Property
  source:
    remote:
      path: src/System.Security.Cryptography.Cng/src/System/Security/Cryptography/CngProperty.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Options
    path: src/System.Security.Cryptography.Cng/src/System/Security/Cryptography/CngProperty.cs
    startLine: 47
  assemblies:
  - System.Security.Cryptography.Cng
  namespace: System.Security.Cryptography
  syntax:
    content: public CngPropertyOptions Options { get; }
    content.vb: Public ReadOnly Property Options As CngPropertyOptions
    parameters: []
    return:
      type: System.Security.Cryptography.CngPropertyOptions
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Security.Cryptography.CngProperty.Equals(System.Object)
  commentId: M:System.Security.Cryptography.CngProperty.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Security.Cryptography.CngProperty
  langs:
  - csharp
  - vb
  name: Equals(Object)
  fullName: System.Security.Cryptography.CngProperty.Equals(System.Object)
  type: Method
  source:
    remote:
      path: src/System.Security.Cryptography.Cng/src/System/Security/Cryptography/CngProperty.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Equals
    path: src/System.Security.Cryptography.Cng/src/System/Security/Cryptography/CngProperty.cs
    startLine: 49
  assemblies:
  - System.Security.Cryptography.Cng
  namespace: System.Security.Cryptography
  syntax:
    content: public override bool Equals(object obj)
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
    parameters:
    - id: obj
      type: System.Object
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Security.Cryptography.CngProperty.Equals(System.Security.Cryptography.CngProperty)
  commentId: M:System.Security.Cryptography.CngProperty.Equals(System.Security.Cryptography.CngProperty)
  id: Equals(System.Security.Cryptography.CngProperty)
  parent: System.Security.Cryptography.CngProperty
  langs:
  - csharp
  - vb
  name: Equals(CngProperty)
  fullName: System.Security.Cryptography.CngProperty.Equals(System.Security.Cryptography.CngProperty)
  type: Method
  source:
    remote:
      path: src/System.Security.Cryptography.Cng/src/System/Security/Cryptography/CngProperty.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Equals
    path: src/System.Security.Cryptography.Cng/src/System/Security/Cryptography/CngProperty.cs
    startLine: 54
  assemblies:
  - System.Security.Cryptography.Cng
  namespace: System.Security.Cryptography
  syntax:
    content: public bool Equals(CngProperty other)
    content.vb: Public Function Equals(other As CngProperty) As Boolean
    parameters:
    - id: other
      type: System.Security.Cryptography.CngProperty
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Security.Cryptography.CngProperty.GetHashCode
  commentId: M:System.Security.Cryptography.CngProperty.GetHashCode
  id: GetHashCode
  parent: System.Security.Cryptography.CngProperty
  langs:
  - csharp
  - vb
  name: GetHashCode()
  fullName: System.Security.Cryptography.CngProperty.GetHashCode()
  type: Method
  source:
    remote:
      path: src/System.Security.Cryptography.Cng/src/System/Security/Cryptography/CngProperty.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetHashCode
    path: src/System.Security.Cryptography.Cng/src/System/Security/Cryptography/CngProperty.cs
    startLine: 84
  assemblies:
  - System.Security.Cryptography.Cng
  namespace: System.Security.Cryptography
  syntax:
    content: public override int GetHashCode()
    content.vb: Public Overrides Function GetHashCode As Integer
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Security.Cryptography.CngProperty.GetValue
  commentId: M:System.Security.Cryptography.CngProperty.GetValue
  id: GetValue
  parent: System.Security.Cryptography.CngProperty
  langs:
  - csharp
  - vb
  name: GetValue()
  fullName: System.Security.Cryptography.CngProperty.GetValue()
  type: Method
  source:
    remote:
      path: src/System.Security.Cryptography.Cng/src/System/Security/Cryptography/CngProperty.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetValue
    path: src/System.Security.Cryptography.Cng/src/System/Security/Cryptography/CngProperty.cs
    startLine: 39
  assemblies:
  - System.Security.Cryptography.Cng
  namespace: System.Security.Cryptography
  syntax:
    content: public byte[] GetValue()
    content.vb: Public Function GetValue As Byte()
    return:
      type: System.Byte[]
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Security.Cryptography.CngProperty.op_Equality(System.Security.Cryptography.CngProperty,System.Security.Cryptography.CngProperty)
  commentId: M:System.Security.Cryptography.CngProperty.op_Equality(System.Security.Cryptography.CngProperty,System.Security.Cryptography.CngProperty)
  id: op_Equality(System.Security.Cryptography.CngProperty,System.Security.Cryptography.CngProperty)
  parent: System.Security.Cryptography.CngProperty
  langs:
  - csharp
  - vb
  name: Equality(CngProperty, CngProperty)
  fullName: System.Security.Cryptography.CngProperty.Equality(System.Security.Cryptography.CngProperty, System.Security.Cryptography.CngProperty)
  type: Operator
  source:
    remote:
      path: src/System.Security.Cryptography.Cng/src/System/Security/Cryptography/CngProperty.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_Equality
    path: src/System.Security.Cryptography.Cng/src/System/Security/Cryptography/CngProperty.cs
    startLine: 109
  assemblies:
  - System.Security.Cryptography.Cng
  namespace: System.Security.Cryptography
  syntax:
    content: public static bool operator ==(CngProperty left, CngProperty right)
    content.vb: Public Shared Operator =(left As CngProperty, right As CngProperty) As Boolean
    parameters:
    - id: left
      type: System.Security.Cryptography.CngProperty
    - id: right
      type: System.Security.Cryptography.CngProperty
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Security.Cryptography.CngProperty.op_Inequality(System.Security.Cryptography.CngProperty,System.Security.Cryptography.CngProperty)
  commentId: M:System.Security.Cryptography.CngProperty.op_Inequality(System.Security.Cryptography.CngProperty,System.Security.Cryptography.CngProperty)
  id: op_Inequality(System.Security.Cryptography.CngProperty,System.Security.Cryptography.CngProperty)
  parent: System.Security.Cryptography.CngProperty
  langs:
  - csharp
  - vb
  name: Inequality(CngProperty, CngProperty)
  fullName: System.Security.Cryptography.CngProperty.Inequality(System.Security.Cryptography.CngProperty, System.Security.Cryptography.CngProperty)
  type: Operator
  source:
    remote:
      path: src/System.Security.Cryptography.Cng/src/System/Security/Cryptography/CngProperty.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_Inequality
    path: src/System.Security.Cryptography.Cng/src/System/Security/Cryptography/CngProperty.cs
    startLine: 114
  assemblies:
  - System.Security.Cryptography.Cng
  namespace: System.Security.Cryptography
  syntax:
    content: public static bool operator !=(CngProperty left, CngProperty right)
    content.vb: Public Shared Operator <>(left As CngProperty, right As CngProperty) As Boolean
    parameters:
    - id: left
      type: System.Security.Cryptography.CngProperty
    - id: right
      type: System.Security.Cryptography.CngProperty
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: System.Security.Cryptography
  isExternal: false
  name: System.Security.Cryptography
  fullName: System.Security.Cryptography
- uid: System.IEquatable{System.Security.Cryptography.CngProperty}
  definition: System.IEquatable`1
  name: IEquatable<CngProperty>
  fullName: System.IEquatable<System.Security.Cryptography.CngProperty>
  fullname.vb: System.IEquatable(Of System.Security.Cryptography.CngProperty)
  name.vb: IEquatable(Of CngProperty)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Security.Cryptography.CngProperty
    name: CngProperty
    fullName: System.Security.Cryptography.CngProperty
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Security.Cryptography.CngProperty
    name: CngProperty
    fullName: System.Security.Cryptography.CngProperty
  - name: )
    fullName: )
- uid: System.IEquatable`1
  parent: System
  isExternal: false
  name: IEquatable<>
  fullName: System.IEquatable<>
  fullname.vb: System.IEquatable(Of )
  name.vb: IEquatable(Of )
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    fullName: System.IEquatable
  - name: <
    fullName: <
  - {}
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    fullName: System.IEquatable
  - name: '(Of '
    fullName: '(Of '
  - {}
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.String
  parent: System
  isExternal: false
  name: String
  fullName: System.String
- uid: System.Byte[]
  isExternal: false
  name: Byte[]
  fullName: System.Byte[]
  fullname.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
  - name: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
  - name: ()
    fullName: ()
- uid: System.Security.Cryptography.CngPropertyOptions
  parent: System.Security.Cryptography
  isExternal: false
  name: CngPropertyOptions
  fullName: System.Security.Cryptography.CngPropertyOptions
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  fullName: System.Boolean
- uid: System.Security.Cryptography.CngProperty
  parent: System.Security.Cryptography
  isExternal: false
  name: CngProperty
  fullName: System.Security.Cryptography.CngProperty
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  fullName: System.Int32
