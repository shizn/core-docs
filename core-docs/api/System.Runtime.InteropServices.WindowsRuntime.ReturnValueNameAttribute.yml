items:
- uid: System.Runtime.InteropServices.WindowsRuntime.ReturnValueNameAttribute
  commentId: T:System.Runtime.InteropServices.WindowsRuntime.ReturnValueNameAttribute
  id: ReturnValueNameAttribute
  parent: System.Runtime.InteropServices.WindowsRuntime
  children:
  - System.Runtime.InteropServices.WindowsRuntime.ReturnValueNameAttribute.#ctor(System.String)
  - System.Runtime.InteropServices.WindowsRuntime.ReturnValueNameAttribute.Name
  langs:
  - csharp
  - vb
  name: ReturnValueNameAttribute
  fullName: System.Runtime.InteropServices.WindowsRuntime.ReturnValueNameAttribute
  type: Class
  source:
    remote:
      path: src/System.Runtime.InteropServices.WindowsRuntime/ref/System.Runtime.InteropServices.WindowsRuntime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ReturnValueNameAttribute
    path: src/System.Runtime.InteropServices.WindowsRuntime/ref/System.Runtime.InteropServices.WindowsRuntime.cs
    startLine: 52
  assemblies:
  - System.Runtime.InteropServices.WindowsRuntime
  namespace: System.Runtime.InteropServices.WindowsRuntime
  summary: "\n<p>Specifies the name of the return value of a method in a Windows Runtime component.</p>\n"
  remarks: "\n<p>In a Windows Runtime component, all the parameters of a method and the return value must have names. By default, Winmdexp.exe (Windows Runtime Metadata Export Tool) gives the return value the name \"value\". When you use a component in a Windows 8.x Store app written in JavaScript, you can use this name to retrieve the return value. For example, suppose a component defines a method that has a return value and two <strong>out</strong> parameters (<strong>ByRef</strong> parameters with the <xref href=\"System.Runtime.InteropServices.OutAttribute\" data-throw-if-not-resolved=\"false\"></xref> attribute in Visual Basic):</p>\n<pre><code class=\"c#\">public static int ComputeAverage([ReadOnlyArray()] int[] input,\nout int minValue, out int maxValue)\n{\n…\n}</code></pre>\n<pre><code class=\"vb\">Public Shared Function ComputeAverage( _\n<ReadOnlyArray()> ByVal input As Integer, _\n<Out()> ByRef minValue As Integer, _\n<Out()> ByRef maxValue As Integer) As Integer\n…\nEnd Function</code></pre>\n<p>When you call the function from JavaScript, you can access the return value by its default name (<code>value</code>): </p>\n<pre><code class=\"javascript\">    var data = [5, 13, 23, 37];\nvar results = SampleComponent.TestStuff.computeAverage(data);\nvar formattedResults = \"Min=\" + results.minValue + \", Avg=\" + \nresults.value + \", Max=\" + results.maxValue;</code></pre>\n<p>You must give the return value a different name if you already have a parameter named \"value\". Or you might simply want to use a more meaningful name (such as \"average\" in this example). Apply the <xref href=\"System.Runtime.InteropServices.WindowsRuntime.ReturnValueNameAttribute\" data-throw-if-not-resolved=\"false\"></xref> attribute to your method and specify a new name.</p>\n<pre><code class=\"c#\">[return: ReturnValueName(\"average\")]\npublic static int ComputeAverage([ReadOnlyArray()] int[] input,\nout int minValue, out int maxValue)\n{\n…\n}</code></pre>\n<pre><code class=\"vb\">Public Shared Function ComputeAverage( _\n<ReadOnlyArray()> ByVal input As Integer, _\n<Out()> ByRef minValue As Integer, _\n<Out()> ByRef maxValue As Integer) _\n    As <ReturnValueName(\"average\")> Integer\n…\nEnd Function</code></pre>\n"
  syntax:
    content: 'public sealed class ReturnValueNameAttribute : Attribute'
    content.vb: >-
      Public NotInheritable Class ReturnValueNameAttribute
          Inherits Attribute
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: System.Runtime.InteropServices.WindowsRuntime.ReturnValueNameAttribute.#ctor(System.String)
  commentId: M:System.Runtime.InteropServices.WindowsRuntime.ReturnValueNameAttribute.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Runtime.InteropServices.WindowsRuntime.ReturnValueNameAttribute
  langs:
  - csharp
  - vb
  name: ReturnValueNameAttribute(String)
  fullName: System.Runtime.InteropServices.WindowsRuntime.ReturnValueNameAttribute.ReturnValueNameAttribute(System.String)
  type: Constructor
  source:
    remote:
      path: src/System.Runtime.InteropServices.WindowsRuntime/ref/System.Runtime.InteropServices.WindowsRuntime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Runtime.InteropServices.WindowsRuntime/ref/System.Runtime.InteropServices.WindowsRuntime.cs
    startLine: 55
  assemblies:
  - System.Runtime.InteropServices.WindowsRuntime
  namespace: System.Runtime.InteropServices.WindowsRuntime
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Runtime.InteropServices.WindowsRuntime.ReturnValueNameAttribute\" data-throw-if-not-resolved=\"false\"></xref> class, and specifies the name of the return value.</p>\n"
  syntax:
    content: public ReturnValueNameAttribute(string name)
    content.vb: Public Sub New(name As String)
    parameters:
    - id: name
      type: System.String
      description: "\n<p>The name of the return value. </p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Runtime.InteropServices.WindowsRuntime.ReturnValueNameAttribute.Name
  commentId: P:System.Runtime.InteropServices.WindowsRuntime.ReturnValueNameAttribute.Name
  id: Name
  parent: System.Runtime.InteropServices.WindowsRuntime.ReturnValueNameAttribute
  langs:
  - csharp
  - vb
  name: Name
  fullName: System.Runtime.InteropServices.WindowsRuntime.ReturnValueNameAttribute.Name
  type: Property
  source:
    remote:
      path: src/System.Runtime.InteropServices.WindowsRuntime/ref/System.Runtime.InteropServices.WindowsRuntime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Name
    path: src/System.Runtime.InteropServices.WindowsRuntime/ref/System.Runtime.InteropServices.WindowsRuntime.cs
    startLine: 56
  assemblies:
  - System.Runtime.InteropServices.WindowsRuntime
  namespace: System.Runtime.InteropServices.WindowsRuntime
  summary: "\n<p>Gets the name that was specified for the return value of a method in a Windows Runtime component.</p>\n"
  syntax:
    content: public string Name { get; }
    content.vb: Public ReadOnly Property Name As String
    parameters: []
    return:
      type: System.String
      description: "\n<p>The name of the method's return value. </p>\n"
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: System.Runtime.InteropServices.WindowsRuntime
  isExternal: false
  name: System.Runtime.InteropServices.WindowsRuntime
  fullName: System.Runtime.InteropServices.WindowsRuntime
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.String
  parent: System
  isExternal: false
  name: String
  fullName: System.String
