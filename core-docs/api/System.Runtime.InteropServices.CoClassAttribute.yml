items:
- uid: System.Runtime.InteropServices.CoClassAttribute
  commentId: T:System.Runtime.InteropServices.CoClassAttribute
  id: CoClassAttribute
  parent: System.Runtime.InteropServices
  children:
  - System.Runtime.InteropServices.CoClassAttribute.#ctor(System.Type)
  - System.Runtime.InteropServices.CoClassAttribute.CoClass
  langs:
  - csharp
  - vb
  name: CoClassAttribute
  fullName: System.Runtime.InteropServices.CoClassAttribute
  type: Class
  source:
    remote:
      path: src/System.Runtime.InteropServices/ref/System.Runtime.InteropServices.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CoClassAttribute
    path: src/System.Runtime.InteropServices/ref/System.Runtime.InteropServices.cs
    startLine: 87
  assemblies:
  - System.Runtime.InteropServices
  namespace: System.Runtime.InteropServices
  summary: "\n<p>Specifies the class identifier of a coclass imported from a type library.</p>\n"
  remarks: "\n<p>You can apply this attribute to coclass interfaces, although the Tlbimp.exe (Type Library Importer) typically applies it for you when it imports a type library.</p>\n<p>When Tlbimp.exe imports a coclass, it produces a managed class and an interface to represent the coclass. The coclass interface has the same interface identifier (IID) as the default interface of the original coclass. The imported coclass interface also retains the name of the coclass. Tlbimp.exe appends the original coclass name with \"class\" to identify the imported class.</p>\n<p>You rarely apply this attribute. However, if plan to write source code that produces metadata that closely simulates metadata produced by Tlbimp.exe, you should create a coclass interface for each coclass. Use the name of the original coclass to name the coclass interface and derive it from the default interface. In addition to the <xref href=\"System.Runtime.InteropServices.CoClassAttribute\" data-throw-if-not-resolved=\"false\"></xref>, you must also apply the <xref href=\"System.Runtime.InteropServices.ComImportAttribute\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"System.Runtime.InteropServices.GuidAttribute\" data-throw-if-not-resolved=\"false\"></xref> to the coclass interface. For additional information about how Tlbimp.exe imports interfaces and coclasses from a type library, see Imported Type Conversion.</p>\n"
  syntax:
    content: 'public sealed class CoClassAttribute : Attribute'
    content.vb: >-
      Public NotInheritable Class CoClassAttribute
          Inherits Attribute
  seealso:
  - type: System.Runtime.InteropServices.ComImportAttribute
    commentId: T:System.Runtime.InteropServices.ComImportAttribute
  - type: System.Runtime.InteropServices.GuidAttribute
    commentId: T:System.Runtime.InteropServices.GuidAttribute
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: System.Runtime.InteropServices.CoClassAttribute.#ctor(System.Type)
  commentId: M:System.Runtime.InteropServices.CoClassAttribute.#ctor(System.Type)
  id: '#ctor(System.Type)'
  parent: System.Runtime.InteropServices.CoClassAttribute
  langs:
  - csharp
  - vb
  name: CoClassAttribute(Type)
  fullName: System.Runtime.InteropServices.CoClassAttribute.CoClassAttribute(System.Type)
  type: Constructor
  source:
    remote:
      path: src/System.Runtime.InteropServices/ref/System.Runtime.InteropServices.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Runtime.InteropServices/ref/System.Runtime.InteropServices.cs
    startLine: 90
  assemblies:
  - System.Runtime.InteropServices
  namespace: System.Runtime.InteropServices
  summary: "\n<p>Initializes new instance of the <xref href=\"System.Runtime.InteropServices.CoClassAttribute\" data-throw-if-not-resolved=\"false\"></xref> with the class identifier of the original coclass.</p>\n"
  syntax:
    content: public CoClassAttribute(Type coClass)
    content.vb: Public Sub New(coClass As Type)
    parameters:
    - id: coClass
      type: System.Type
      description: "\n<p>A <xref href=\"System.Type\" data-throw-if-not-resolved=\"false\"></xref> that contains the class identifier of the original coclass. </p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Runtime.InteropServices.CoClassAttribute.CoClass
  commentId: P:System.Runtime.InteropServices.CoClassAttribute.CoClass
  id: CoClass
  parent: System.Runtime.InteropServices.CoClassAttribute
  langs:
  - csharp
  - vb
  name: CoClass
  fullName: System.Runtime.InteropServices.CoClassAttribute.CoClass
  type: Property
  source:
    remote:
      path: src/System.Runtime.InteropServices/ref/System.Runtime.InteropServices.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CoClass
    path: src/System.Runtime.InteropServices/ref/System.Runtime.InteropServices.cs
    startLine: 91
  assemblies:
  - System.Runtime.InteropServices
  namespace: System.Runtime.InteropServices
  summary: "\n<p>Gets the class identifier of the original coclass.</p>\n"
  syntax:
    content: public Type CoClass { get; }
    content.vb: Public ReadOnly Property CoClass As Type
    parameters: []
    return:
      type: System.Type
      description: "\n<p>A <xref href=\"System.Type\" data-throw-if-not-resolved=\"false\"></xref> containing the class identifier of the original coclass.</p>\n"
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: System.Runtime.InteropServices
  isExternal: false
  name: System.Runtime.InteropServices
  fullName: System.Runtime.InteropServices
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  fullName: System.Type
