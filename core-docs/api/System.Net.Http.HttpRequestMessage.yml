items:
- uid: System.Net.Http.HttpRequestMessage
  commentId: T:System.Net.Http.HttpRequestMessage
  id: HttpRequestMessage
  parent: System.Net.Http
  children:
  - System.Net.Http.HttpRequestMessage.#ctor
  - System.Net.Http.HttpRequestMessage.#ctor(System.Net.Http.HttpMethod,System.String)
  - System.Net.Http.HttpRequestMessage.#ctor(System.Net.Http.HttpMethod,System.Uri)
  - System.Net.Http.HttpRequestMessage.Content
  - System.Net.Http.HttpRequestMessage.Dispose
  - System.Net.Http.HttpRequestMessage.Dispose(System.Boolean)
  - System.Net.Http.HttpRequestMessage.Headers
  - System.Net.Http.HttpRequestMessage.Method
  - System.Net.Http.HttpRequestMessage.Properties
  - System.Net.Http.HttpRequestMessage.RequestUri
  - System.Net.Http.HttpRequestMessage.ToString
  - System.Net.Http.HttpRequestMessage.Version
  langs:
  - csharp
  - vb
  name: HttpRequestMessage
  fullName: System.Net.Http.HttpRequestMessage
  type: Class
  source:
    remote:
      path: src/System.Net.Http/ref/System.Net.Http.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: HttpRequestMessage
    path: src/System.Net.Http/ref/System.Net.Http.cs
    startLine: 167
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  summary: "\n<p>Represents a HTTP request message.</p>\n"
  remarks: "\n<p>The <xref href=\"System.Net.Http.HttpRequestMessage\" data-throw-if-not-resolved=\"false\"></xref> class contains headers, the HTTP verb, and potentially data.</p>\n"
  syntax:
    content: 'public class HttpRequestMessage : IDisposable'
    content.vb: >-
      Public Class HttpRequestMessage
          Implements IDisposable
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: System.Net.Http.HttpRequestMessage.#ctor
  commentId: M:System.Net.Http.HttpRequestMessage.#ctor
  id: '#ctor'
  parent: System.Net.Http.HttpRequestMessage
  langs:
  - csharp
  - vb
  name: HttpRequestMessage()
  fullName: System.Net.Http.HttpRequestMessage.HttpRequestMessage()
  type: Constructor
  source:
    remote:
      path: src/System.Net.Http/ref/System.Net.Http.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Net.Http/ref/System.Net.Http.cs
    startLine: 169
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Net.Http.HttpRequestMessage\" data-throw-if-not-resolved=\"false\"></xref> class.</p>\n"
  syntax:
    content: public HttpRequestMessage()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Net.Http.HttpRequestMessage.#ctor(System.Net.Http.HttpMethod,System.String)
  commentId: M:System.Net.Http.HttpRequestMessage.#ctor(System.Net.Http.HttpMethod,System.String)
  id: '#ctor(System.Net.Http.HttpMethod,System.String)'
  parent: System.Net.Http.HttpRequestMessage
  langs:
  - csharp
  - vb
  name: HttpRequestMessage(HttpMethod, String)
  fullName: System.Net.Http.HttpRequestMessage.HttpRequestMessage(System.Net.Http.HttpMethod, System.String)
  type: Constructor
  source:
    remote:
      path: src/System.Net.Http/ref/System.Net.Http.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Net.Http/ref/System.Net.Http.cs
    startLine: 170
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Net.Http.HttpRequestMessage\" data-throw-if-not-resolved=\"false\"></xref> class with an HTTP method and a request <xref href=\"System.Uri\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: public HttpRequestMessage(HttpMethod method, string requestUri)
    content.vb: Public Sub New(method As HttpMethod, requestUri As String)
    parameters:
    - id: method
      type: System.Net.Http.HttpMethod
      description: "\n<p>The HTTP method.</p>\n"
    - id: requestUri
      type: System.String
      description: "\n<p>A string that represents the request  <xref href=\"System.Uri\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Net.Http.HttpRequestMessage.#ctor(System.Net.Http.HttpMethod,System.Uri)
  commentId: M:System.Net.Http.HttpRequestMessage.#ctor(System.Net.Http.HttpMethod,System.Uri)
  id: '#ctor(System.Net.Http.HttpMethod,System.Uri)'
  parent: System.Net.Http.HttpRequestMessage
  langs:
  - csharp
  - vb
  name: HttpRequestMessage(HttpMethod, Uri)
  fullName: System.Net.Http.HttpRequestMessage.HttpRequestMessage(System.Net.Http.HttpMethod, System.Uri)
  type: Constructor
  source:
    remote:
      path: src/System.Net.Http/ref/System.Net.Http.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Net.Http/ref/System.Net.Http.cs
    startLine: 171
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Net.Http.HttpRequestMessage\" data-throw-if-not-resolved=\"false\"></xref> class with an HTTP method and a request <xref href=\"System.Uri\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: public HttpRequestMessage(HttpMethod method, Uri requestUri)
    content.vb: Public Sub New(method As HttpMethod, requestUri As Uri)
    parameters:
    - id: method
      type: System.Net.Http.HttpMethod
      description: "\n<p>The HTTP method.</p>\n"
    - id: requestUri
      type: System.Uri
      description: "\n<p>The <xref href=\"System.Uri\" data-throw-if-not-resolved=\"false\"></xref> to request.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Net.Http.HttpRequestMessage.Content
  commentId: P:System.Net.Http.HttpRequestMessage.Content
  id: Content
  parent: System.Net.Http.HttpRequestMessage
  langs:
  - csharp
  - vb
  name: Content
  fullName: System.Net.Http.HttpRequestMessage.Content
  type: Property
  source:
    remote:
      path: src/System.Net.Http/ref/System.Net.Http.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Content
    path: src/System.Net.Http/ref/System.Net.Http.cs
    startLine: 172
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  summary: "\n<p>Gets or sets the contents of the HTTP message. </p>\n"
  remarks: "\n<p>The contents of an HTTP message corresponds to the entity body defined in RFC 2616.</p>\n<p>A number of classes can be used for HTTP content. These include the following.</p>\n<ol><li>\n<p>\n<xref href=\"System.Net.Http.ByteArrayContent\" data-throw-if-not-resolved=\"false\"></xref> - HTTP content based on a byte array.</p>\n</li><li>\n<p>\n<xref href=\"System.Net.Http.FormUrlEncodedContent\" data-throw-if-not-resolved=\"false\"></xref> - HTTP content of name/value tuples encoded using application/x-www-form-urlencoded MIME type.</p>\n</li><li>\n<p>\n<xref href=\"System.Net.Http.MultipartContent\" data-throw-if-not-resolved=\"false\"></xref> - HTTP content that gets serialized using the multipart/* content type specification. </p>\n</li><li>\n<p>\n<xref href=\"System.Net.Http.MultipartFormDataContent\" data-throw-if-not-resolved=\"false\"></xref> - HTTP content encoded using the multipart/form-data MIME type.</p>\n</li><li>\n<p>\n<xref href=\"System.Net.Http.StreamContent\" data-throw-if-not-resolved=\"false\"></xref> - HTTP content based on a stream. </p>\n</li><li>\n<p>\n<xref href=\"System.Net.Http.StringContent\" data-throw-if-not-resolved=\"false\"></xref> - HTTP content based on a string.</p>\n</li></ol>\n"
  syntax:
    content: public HttpContent Content { get; set; }
    content.vb: Public Property Content As HttpContent
    parameters: []
    return:
      type: System.Net.Http.HttpContent
      description: "\n<p>Returns <xref href=\"System.Net.Http.HttpContent\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>The content of a message</p>\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Net.Http.HttpRequestMessage.Headers
  commentId: P:System.Net.Http.HttpRequestMessage.Headers
  id: Headers
  parent: System.Net.Http.HttpRequestMessage
  langs:
  - csharp
  - vb
  name: Headers
  fullName: System.Net.Http.HttpRequestMessage.Headers
  type: Property
  source:
    remote:
      path: src/System.Net.Http/ref/System.Net.Http.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Headers
    path: src/System.Net.Http/ref/System.Net.Http.cs
    startLine: 173
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  summary: "\n<p>Gets the collection of HTTP request headers.</p>\n"
  syntax:
    content: public HttpRequestHeaders Headers { get; }
    content.vb: Public ReadOnly Property Headers As HttpRequestHeaders
    parameters: []
    return:
      type: System.Net.Http.Headers.HttpRequestHeaders
      description: "\n<p>Returns <xref href=\"System.Net.Http.Headers.HttpRequestHeaders\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>The collection of HTTP request headers.</p>\n"
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Net.Http.HttpRequestMessage.Method
  commentId: P:System.Net.Http.HttpRequestMessage.Method
  id: Method
  parent: System.Net.Http.HttpRequestMessage
  langs:
  - csharp
  - vb
  name: Method
  fullName: System.Net.Http.HttpRequestMessage.Method
  type: Property
  source:
    remote:
      path: src/System.Net.Http/ref/System.Net.Http.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Method
    path: src/System.Net.Http/ref/System.Net.Http.cs
    startLine: 174
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  summary: "\n<p>Gets or sets the HTTP method used by the HTTP request message.</p>\n"
  syntax:
    content: public HttpMethod Method { get; set; }
    content.vb: Public Property Method As HttpMethod
    parameters: []
    return:
      type: System.Net.Http.HttpMethod
      description: "\n<p>Returns <xref href=\"System.Net.Http.HttpMethod\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>The HTTP method used by the request message. The default is the GET method.</p>\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Net.Http.HttpRequestMessage.Properties
  commentId: P:System.Net.Http.HttpRequestMessage.Properties
  id: Properties
  parent: System.Net.Http.HttpRequestMessage
  langs:
  - csharp
  - vb
  name: Properties
  fullName: System.Net.Http.HttpRequestMessage.Properties
  type: Property
  source:
    remote:
      path: src/System.Net.Http/ref/System.Net.Http.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Properties
    path: src/System.Net.Http/ref/System.Net.Http.cs
    startLine: 175
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  summary: "\n<p>Gets a set of properties for the HTTP request.</p>\n"
  syntax:
    content: public IDictionary<string, object> Properties { get; }
    content.vb: Public ReadOnly Property Properties As IDictionary(Of String, Object)
    parameters: []
    return:
      type: System.Collections.Generic.IDictionary{System.String,System.Object}
      description: "\n<p>Returns <xref href=\"System.Collections.Generic.IDictionary`2\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Net.Http.HttpRequestMessage.RequestUri
  commentId: P:System.Net.Http.HttpRequestMessage.RequestUri
  id: RequestUri
  parent: System.Net.Http.HttpRequestMessage
  langs:
  - csharp
  - vb
  name: RequestUri
  fullName: System.Net.Http.HttpRequestMessage.RequestUri
  type: Property
  source:
    remote:
      path: src/System.Net.Http/ref/System.Net.Http.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: RequestUri
    path: src/System.Net.Http/ref/System.Net.Http.cs
    startLine: 176
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  summary: "\n<p>Gets or sets the <xref href=\"System.Uri\" data-throw-if-not-resolved=\"false\"></xref> used for the HTTP request.</p>\n"
  remarks: "\n<p>If the request <xref href=\"System.Uri\" data-throw-if-not-resolved=\"false\"></xref> is a relative Uri, it will be combined with the  <xref href=\"System.Net.Http.HttpClient.BaseAddress\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: public Uri RequestUri { get; set; }
    content.vb: Public Property RequestUri As Uri
    parameters: []
    return:
      type: System.Uri
      description: "\n<p>Returns <xref href=\"System.Uri\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>The <xref href=\"System.Uri\" data-throw-if-not-resolved=\"false\"></xref> used for the HTTP request.</p>\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Net.Http.HttpRequestMessage.Version
  commentId: P:System.Net.Http.HttpRequestMessage.Version
  id: Version
  parent: System.Net.Http.HttpRequestMessage
  langs:
  - csharp
  - vb
  name: Version
  fullName: System.Net.Http.HttpRequestMessage.Version
  type: Property
  source:
    remote:
      path: src/System.Net.Http/ref/System.Net.Http.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Version
    path: src/System.Net.Http/ref/System.Net.Http.cs
    startLine: 177
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  summary: "\n<p>Gets or sets the HTTP message version.</p>\n"
  syntax:
    content: public Version Version { get; set; }
    content.vb: Public Property Version As Version
    parameters: []
    return:
      type: System.Version
      description: "\n<p>Returns <xref href=\"System.Version\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>The HTTP message version. The default is 1.1.</p>\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Net.Http.HttpRequestMessage.Dispose
  commentId: M:System.Net.Http.HttpRequestMessage.Dispose
  id: Dispose
  parent: System.Net.Http.HttpRequestMessage
  langs:
  - csharp
  - vb
  name: Dispose()
  fullName: System.Net.Http.HttpRequestMessage.Dispose()
  type: Method
  source:
    remote:
      path: src/System.Net.Http/ref/System.Net.Http.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Dispose
    path: src/System.Net.Http/ref/System.Net.Http.cs
    startLine: 178
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  summary: "\n<p>Releases the unmanaged resources and disposes of the managed resources used by the <xref href=\"System.Net.Http.HttpRequestMessage\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: public void Dispose()
    content.vb: Public Sub Dispose
  implements:
  - System.IDisposable.Dispose
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Net.Http.HttpRequestMessage.Dispose(System.Boolean)
  commentId: M:System.Net.Http.HttpRequestMessage.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Net.Http.HttpRequestMessage
  langs:
  - csharp
  - vb
  name: Dispose(Boolean)
  fullName: System.Net.Http.HttpRequestMessage.Dispose(System.Boolean)
  type: Method
  source:
    remote:
      path: src/System.Net.Http/ref/System.Net.Http.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Dispose
    path: src/System.Net.Http/ref/System.Net.Http.cs
    startLine: 179
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  summary: "\n<p>Releases the unmanaged resources used by the <xref href=\"System.Net.Http.HttpRequestMessage\" data-throw-if-not-resolved=\"false\"></xref> and optionally disposes of the managed resources.</p>\n"
  remarks: "\n<p>This method is called by the public <strong>Dispose()</strong> method and the <xref href=\"System.Object.Finalize\" data-throw-if-not-resolved=\"false\"></xref> method. <strong>Dispose()</strong> invokes the protected <strong>Dispose(Boolean)</strong> method with the <em>disposing</em> parameter set to <strong>true</strong>. <xref href=\"System.Object.Finalize\" data-throw-if-not-resolved=\"false\"></xref> invokes <strong>Dispose</strong> with <em>disposing</em> set to <strong>false</strong>.When the <em>disposing</em> parameter is <strong>true</strong>, this method releases all resources held by any managed objects that this <xref href=\"System.Net.Http.HttpRequestMessage\" data-throw-if-not-resolved=\"false\"></xref> references. This method invokes the <strong>Dispose()</strong> method of each referenced object.</p>\n"
  syntax:
    content: protected virtual void Dispose(bool disposing)
    content.vb: Protected Overridable Sub Dispose(disposing As Boolean)
    parameters:
    - id: disposing
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> to release both managed and unmanaged resources; <strong>false</strong> to releases only unmanaged resources.</p>\n"
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: System.Net.Http.HttpRequestMessage.ToString
  commentId: M:System.Net.Http.HttpRequestMessage.ToString
  id: ToString
  parent: System.Net.Http.HttpRequestMessage
  langs:
  - csharp
  - vb
  name: ToString()
  fullName: System.Net.Http.HttpRequestMessage.ToString()
  type: Method
  source:
    remote:
      path: src/System.Net.Http/ref/System.Net.Http.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ToString
    path: src/System.Net.Http/ref/System.Net.Http.cs
    startLine: 180
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  summary: "\n<p>Returns a string that represents the current object.</p>\n"
  syntax:
    content: public override string ToString()
    content.vb: Public Overrides Function ToString As String
    return:
      type: System.String
      description: "\n<p>Returns <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>A string representation of the current object.</p>\n"
  overridden: System.Object.ToString
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: System.Net.Http
  isExternal: false
  name: System.Net.Http
  fullName: System.Net.Http
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System.IDisposable
  parent: System
  isExternal: false
  name: IDisposable
  fullName: System.IDisposable
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Net.Http.HttpMethod
  parent: System.Net.Http
  isExternal: false
  name: HttpMethod
  fullName: System.Net.Http.HttpMethod
- uid: System.String
  parent: System
  isExternal: false
  name: String
  fullName: System.String
- uid: System.Uri
  parent: System
  isExternal: false
  name: Uri
  fullName: System.Uri
- uid: System.Net.Http.HttpContent
  parent: System.Net.Http
  isExternal: false
  name: HttpContent
  fullName: System.Net.Http.HttpContent
- uid: System.Net.Http.Headers.HttpRequestHeaders
  parent: System.Net.Http.Headers
  isExternal: false
  name: HttpRequestHeaders
  fullName: System.Net.Http.Headers.HttpRequestHeaders
- uid: System.Net.Http.Headers
  isExternal: false
  name: System.Net.Http.Headers
  fullName: System.Net.Http.Headers
- uid: System.Collections.Generic.IDictionary{System.String,System.Object}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  name: IDictionary<String, Object>
  fullName: System.Collections.Generic.IDictionary<System.String, System.Object>
  fullname.vb: System.Collections.Generic.IDictionary(Of System.String, System.Object)
  name.vb: IDictionary(Of String, Object)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    fullName: <
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Collections.Generic.IDictionary`2
  parent: System.Collections.Generic
  isExternal: false
  name: IDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>
  fullname.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)
  name.vb: IDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    fullName: System.Collections.Generic.IDictionary
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    fullName: System.Collections.Generic.IDictionary
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: )
    fullName: )
- uid: System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Version
  parent: System
  isExternal: false
  name: Version
  fullName: System.Version
- uid: System.IDisposable.Dispose
  parent: System.IDisposable
  isExternal: false
  name: Dispose()
  fullName: System.IDisposable.Dispose()
  spec.csharp:
  - uid: System.IDisposable.Dispose
    name: Dispose
    fullName: System.IDisposable.Dispose
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IDisposable.Dispose
    name: Dispose
    fullName: System.IDisposable.Dispose
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  fullName: System.Boolean
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
