items:
- uid: System.Threading.Timer
  commentId: T:System.Threading.Timer
  id: Timer
  parent: System.Threading
  children:
  - System.Threading.Timer.#ctor(System.Threading.TimerCallback,System.Object,System.Int32,System.Int32)
  - System.Threading.Timer.#ctor(System.Threading.TimerCallback,System.Object,System.TimeSpan,System.TimeSpan)
  - System.Threading.Timer.Change(System.Int32,System.Int32)
  - System.Threading.Timer.Change(System.TimeSpan,System.TimeSpan)
  - System.Threading.Timer.Dispose
  langs:
  - csharp
  - vb
  name: Timer
  fullName: System.Threading.Timer
  type: Class
  source:
    remote:
      path: src/mscorlib/src/System/Threading/Timer.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Timer
    path: src/mscorlib/src/System/Threading/Timer.cs
    startLine: 774
  assemblies:
  - System.Threading.Timer
  namespace: System.Threading
  summary: Provides a mechanism for executing a method at specified intervals. This class cannot be inherited.To browse the .NET Framework source code for this type, see the Reference Source.
  syntax:
    content: 'public sealed class Timer : IDisposable'
    content.vb: >-
      Public NotInheritable Class Timer
          Inherits IDisposable
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: System.Threading.Timer.#ctor(System.Threading.TimerCallback,System.Object,System.Int32,System.Int32)
  commentId: M:System.Threading.Timer.#ctor(System.Threading.TimerCallback,System.Object,System.Int32,System.Int32)
  id: '#ctor(System.Threading.TimerCallback,System.Object,System.Int32,System.Int32)'
  parent: System.Threading.Timer
  langs:
  - csharp
  - vb
  name: Timer(TimerCallback, Object, Int32, Int32)
  fullName: System.Threading.Timer.Timer(System.Threading.TimerCallback, System.Object, System.Int32, System.Int32)
  type: Constructor
  source:
    remote:
      path: src/mscorlib/src/System/Threading/Timer.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: .ctor
    path: src/mscorlib/src/System/Threading/Timer.cs
    startLine: 786
  assemblies:
  - System.Threading.Timer
  namespace: System.Threading
  summary: Initializes a new instance of the Timer class, using a 32-bit signed integer to specify the time interval.
  syntax:
    content: public Timer(TimerCallback callback, object state, int dueTime, int period)
    content.vb: Public Sub New(callback As TimerCallback, state As Object, dueTime As Integer, period As Integer)
    parameters:
    - id: callback
      type: System.Threading.TimerCallback
      description: 'A <xref href="System.Threading.TimerCallback" data-throw-if-not-resolved="false"></xref> delegate representing a method to be executed. '
    - id: state
      type: System.Object
      description: 'An object containing information to be used by the callback method, or null. '
    - id: dueTime
      type: System.Int32
      description: 'The amount of time to delay before <em>callback</em> is invoked, in milliseconds. Specify <xref href="System.Threading.Timeout.Infinite" data-throw-if-not-resolved="false"></xref> to prevent the timer from starting. Specify zero (0) to start the timer immediately. '
    - id: period
      type: System.Int32
      description: 'The time interval between invocations of <em>callback</em>, in milliseconds. Specify <xref href="System.Threading.Timeout.Infinite" data-throw-if-not-resolved="false"></xref> to disable periodic signaling. '
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: 'The <em>dueTime</em> or <em>period</em> parameter is negative and is not equal to <xref href="System.Threading.Timeout.Infinite" data-throw-if-not-resolved="false"></xref>. '
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: 'The <em>callback</em> parameter is null. '
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Threading.Timer.#ctor(System.Threading.TimerCallback,System.Object,System.TimeSpan,System.TimeSpan)
  commentId: M:System.Threading.Timer.#ctor(System.Threading.TimerCallback,System.Object,System.TimeSpan,System.TimeSpan)
  id: '#ctor(System.Threading.TimerCallback,System.Object,System.TimeSpan,System.TimeSpan)'
  parent: System.Threading.Timer
  langs:
  - csharp
  - vb
  name: Timer(TimerCallback, Object, TimeSpan, TimeSpan)
  fullName: System.Threading.Timer.Timer(System.Threading.TimerCallback, System.Object, System.TimeSpan, System.TimeSpan)
  type: Constructor
  source:
    remote:
      path: src/mscorlib/src/System/Threading/Timer.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: .ctor
    path: src/mscorlib/src/System/Threading/Timer.cs
    startLine: 803
  assemblies:
  - System.Threading.Timer
  namespace: System.Threading
  summary: Initializes a new instance of the Timer class, using <xref href="System.TimeSpan" data-throw-if-not-resolved="false"></xref> values to measure time intervals.
  syntax:
    content: public Timer(TimerCallback callback, object state, TimeSpan dueTime, TimeSpan period)
    content.vb: Public Sub New(callback As TimerCallback, state As Object, dueTime As TimeSpan, period As TimeSpan)
    parameters:
    - id: callback
      type: System.Threading.TimerCallback
      description: 'A delegate representing a method to be executed. '
    - id: state
      type: System.Object
      description: 'An object containing information to be used by the callback method, or null. '
    - id: dueTime
      type: System.TimeSpan
      description: 'The amount of time to delay before the <em>callback</em> parameter invokes its methods. Specify negative one (-1) milliseconds to prevent the timer from starting. Specify zero (0) to start the timer immediately. '
    - id: period
      type: System.TimeSpan
      description: 'The time interval between invocations of the methods referenced by <em>callback</em>. Specify negative one (-1) milliseconds to disable periodic signaling. '
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: 'The number of milliseconds in the value of <em>dueTime</em> or <em>period</em> is negative and not equal to <xref href="System.Threading.Timeout.Infinite" data-throw-if-not-resolved="false"></xref>, or is greater than <xref href="System.Int32.MaxValue" data-throw-if-not-resolved="false"></xref>. '
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: 'The <em>callback</em> parameter is null. '
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Threading.Timer.Change(System.Int32,System.Int32)
  commentId: M:System.Threading.Timer.Change(System.Int32,System.Int32)
  id: Change(System.Int32,System.Int32)
  parent: System.Threading.Timer
  langs:
  - csharp
  - vb
  name: Change(Int32, Int32)
  fullName: System.Threading.Timer.Change(System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Threading/Timer.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Change
    path: src/mscorlib/src/System/Threading/Timer.cs
    startLine: 897
  assemblies:
  - System.Threading.Timer
  namespace: System.Threading
  summary: Changes the start time and the interval between method invocations for a timer, using 32-bit signed integers to measure time intervals.
  syntax:
    content: public bool Change(int dueTime, int period)
    content.vb: Public Function Change(dueTime As Integer, period As Integer) As Boolean
    parameters:
    - id: dueTime
      type: System.Int32
      description: 'The amount of time to delay before the invoking the callback method specified when the <xref href="System.Threading.Timer" data-throw-if-not-resolved="false"></xref> was constructed, in milliseconds. Specify <xref href="System.Threading.Timeout.Infinite" data-throw-if-not-resolved="false"></xref> to prevent the timer from restarting. Specify zero (0) to restart the timer immediately. '
    - id: period
      type: System.Int32
      description: 'The time interval between invocations of the callback method specified when the <xref href="System.Threading.Timer" data-throw-if-not-resolved="false"></xref> was constructed, in milliseconds. Specify <xref href="System.Threading.Timeout.Infinite" data-throw-if-not-resolved="false"></xref> to disable periodic signaling. '
    return:
      type: System.Boolean
      description: true if the timer was successfully updated; otherwise, false.
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: 'The <xref href="System.Threading.Timer" data-throw-if-not-resolved="false"></xref> has already been disposed. '
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: 'The <em>dueTime</em> or <em>period</em> parameter is negative and is not equal to <xref href="System.Threading.Timeout.Infinite" data-throw-if-not-resolved="false"></xref>. '
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Threading.Timer.Change(System.TimeSpan,System.TimeSpan)
  commentId: M:System.Threading.Timer.Change(System.TimeSpan,System.TimeSpan)
  id: Change(System.TimeSpan,System.TimeSpan)
  parent: System.Threading.Timer
  langs:
  - csharp
  - vb
  name: Change(TimeSpan, TimeSpan)
  fullName: System.Threading.Timer.Change(System.TimeSpan, System.TimeSpan)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Threading/Timer.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Change
    path: src/mscorlib/src/System/Threading/Timer.cs
    startLine: 908
  assemblies:
  - System.Threading.Timer
  namespace: System.Threading
  summary: Changes the start time and the interval between method invocations for a timer, using <xref href="System.TimeSpan" data-throw-if-not-resolved="false"></xref> values to measure time intervals.
  syntax:
    content: public bool Change(TimeSpan dueTime, TimeSpan period)
    content.vb: Public Function Change(dueTime As TimeSpan, period As TimeSpan) As Boolean
    parameters:
    - id: dueTime
      type: System.TimeSpan
      description: 'A <xref href="System.TimeSpan" data-throw-if-not-resolved="false"></xref> representing the amount of time to delay before invoking the callback method specified when the <xref href="System.Threading.Timer" data-throw-if-not-resolved="false"></xref> was constructed. Specify negative one (-1) milliseconds to prevent the timer from restarting. Specify zero (0) to restart the timer immediately. '
    - id: period
      type: System.TimeSpan
      description: 'The time interval between invocations of the callback method specified when the <xref href="System.Threading.Timer" data-throw-if-not-resolved="false"></xref> was constructed. Specify negative one (-1) milliseconds to disable periodic signaling. '
    return:
      type: System.Boolean
      description: true if the timer was successfully updated; otherwise, false.
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: 'The <xref href="System.Threading.Timer" data-throw-if-not-resolved="false"></xref> has already been disposed. '
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: 'The <em>dueTime</em> or <em>period</em> parameter, in milliseconds, is less than -1. '
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: 'The <em>dueTime</em> or <em>period</em> parameter, in milliseconds, is greater than 4294967294. '
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Threading.Timer.Dispose
  commentId: M:System.Threading.Timer.Dispose
  id: Dispose
  parent: System.Threading.Timer
  langs:
  - csharp
  - vb
  name: Dispose()
  fullName: System.Threading.Timer.Dispose()
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Threading/Timer.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Dispose
    path: src/mscorlib/src/System/Threading/Timer.cs
    startLine: 943
  assemblies:
  - System.Threading.Timer
  namespace: System.Threading
  summary: Releases all resources used by the current instance of <xref href="System.Threading.Timer" data-throw-if-not-resolved="false"></xref>.
  syntax:
    content: public void Dispose()
    content.vb: Public Sub Dispose
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: System.Threading
  isExternal: false
  name: System.Threading
  fullName: System.Threading
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Threading.TimerCallback
  parent: System.Threading
  isExternal: false
  name: TimerCallback
  fullName: System.Threading.TimerCallback
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  fullName: System.Int32
- uid: System.TimeSpan
  parent: System
  isExternal: false
  name: TimeSpan
  fullName: System.TimeSpan
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  fullName: System.Boolean
- uid: System.ArgumentOutOfRangeException
  isExternal: false
  name: ArgumentOutOfRangeException
  fullName: System.ArgumentOutOfRangeException
- uid: System.ArgumentNullException
  isExternal: false
  name: ArgumentNullException
  fullName: System.ArgumentNullException
- uid: System.ObjectDisposedException
  isExternal: false
  name: ObjectDisposedException
  fullName: System.ObjectDisposedException
- uid: System.NotSupportedException
  parent: System
  isExternal: false
  name: NotSupportedException
  fullName: System.NotSupportedException
