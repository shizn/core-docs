items:
- uid: System.Globalization.HijriCalendar
  commentId: T:System.Globalization.HijriCalendar
  id: HijriCalendar
  parent: System.Globalization
  children:
  - System.Globalization.HijriCalendar.#ctor
  - System.Globalization.HijriCalendar.AddMonths(System.DateTime,System.Int32)
  - System.Globalization.HijriCalendar.AddYears(System.DateTime,System.Int32)
  - System.Globalization.HijriCalendar.Eras
  - System.Globalization.HijriCalendar.GetDayOfMonth(System.DateTime)
  - System.Globalization.HijriCalendar.GetDayOfWeek(System.DateTime)
  - System.Globalization.HijriCalendar.GetDayOfYear(System.DateTime)
  - System.Globalization.HijriCalendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)
  - System.Globalization.HijriCalendar.GetDaysInYear(System.Int32,System.Int32)
  - System.Globalization.HijriCalendar.GetEra(System.DateTime)
  - System.Globalization.HijriCalendar.GetLeapMonth(System.Int32,System.Int32)
  - System.Globalization.HijriCalendar.GetMonth(System.DateTime)
  - System.Globalization.HijriCalendar.GetMonthsInYear(System.Int32,System.Int32)
  - System.Globalization.HijriCalendar.GetYear(System.DateTime)
  - System.Globalization.HijriCalendar.HijriAdjustment
  - System.Globalization.HijriCalendar.IsLeapDay(System.Int32,System.Int32,System.Int32,System.Int32)
  - System.Globalization.HijriCalendar.IsLeapMonth(System.Int32,System.Int32,System.Int32)
  - System.Globalization.HijriCalendar.IsLeapYear(System.Int32,System.Int32)
  - System.Globalization.HijriCalendar.MaxSupportedDateTime
  - System.Globalization.HijriCalendar.MinSupportedDateTime
  - System.Globalization.HijriCalendar.ToDateTime(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  - System.Globalization.HijriCalendar.ToFourDigitYear(System.Int32)
  - System.Globalization.HijriCalendar.TwoDigitYearMax
  langs:
  - csharp
  - vb
  name: HijriCalendar
  fullName: System.Globalization.HijriCalendar
  type: Class
  source:
    remote:
      path: src/System.Globalization.Calendars/ref/System.Globalization.Calendars.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: HijriCalendar
    path: src/System.Globalization.Calendars/ref/System.Globalization.Calendars.cs
    startLine: 103
  assemblies:
  - System.Globalization.Calendars
  namespace: System.Globalization
  summary: "\n<p>Represents the Hijri calendar.</p>\n"
  remarks: "\n<p>The Hijri calendar recognizes one era: A.H. (Latin \"Anno Hegirae\", which means \"the year of the migration,\" in reference to the migration of Muhammad (PBUH) from Mecca).</p>\n<p>For information about using the <xref href=\"System.Globalization.HijriCalendar\" data-throw-if-not-resolved=\"false\"></xref> class and the other calendar classes in the .NET Framework, see Working with Calendars.</p>\n<p>In every 30-year cycle that ends with a year that is evenly divisible by 30, the 2nd, 5th, 7th, 10th, 13th, 16th, 18th, 21st, 24th, 26th, and 29th years are leap years. A common year has 354 days and a leap year has 355 days.</p>\n<p>The Hijri calendar has 12 months with 29 to 30 days each: </p>\n<p>GetMonth value </p>\n<p>Month </p>\n<p>Days in common years </p>\n<p>Days in leap years </p>\n<p>Ramadan, the month of fasting in the Muslim world, officially starts and ends according to a decree that is based on the observation of the new moon. Therefore, the number of days in Shaban and the number of days in Ramadan vary.</p>\n<p>The date January 1, 2001 A.D. in the Gregorian calendar is roughly equivalent to the sixth day of Shawwal in the year 1421 A.H. in the Hijri calendar.</p>\n<p>This implementation of the <xref href=\"System.Globalization.HijriCalendar\" data-throw-if-not-resolved=\"false\"></xref> class adjusts the calendar date by adding or subtracting a value from zero to two days to accommodate the variances in the start and the end of Ramadan and to accommodate the date difference between countries/regions. That value is stored in the <xref href=\"System.Globalization.HijriCalendar.HijriAdjustment\" data-throw-if-not-resolved=\"false\"></xref> property. If <xref href=\"System.Globalization.HijriCalendar.HijriAdjustment\" data-throw-if-not-resolved=\"false\"></xref> is not set explicitly, it derives its value from the settings in the regional and language options portion of Control Panel and is stored in the registry value HKEY_CURRENT_USER\\Control Panel\\International\\AddHijriDate. However, that information can change during the life of the <xref href=\"System.AppDomain\" data-throw-if-not-resolved=\"false\"></xref>. The <xref href=\"System.Globalization.HijriCalendar\" data-throw-if-not-resolved=\"false\"></xref> class does not detect changes in the system settings automatically.</p>\n<p>Each <xref href=\"System.Globalization.CultureInfo\" data-throw-if-not-resolved=\"false\"></xref> supports a set of calendars. The <xref href=\"System.Globalization.CultureInfo.Calendar\" data-throw-if-not-resolved=\"false\"></xref> property returns the default calendar for the culture, and the <xref href=\"System.Globalization.CultureInfo.OptionalCalendars\" data-throw-if-not-resolved=\"false\"></xref> property returns an array containing all the calendars supported by the culture. To change the calendar used by a <xref href=\"System.Globalization.CultureInfo\" data-throw-if-not-resolved=\"false\"></xref>, the application should set the <xref href=\"System.Globalization.DateTimeFormatInfo.Calendar\" data-throw-if-not-resolved=\"false\"></xref> property of <xref href=\"System.Globalization.CultureInfo.DateTimeFormat\" data-throw-if-not-resolved=\"false\"></xref> to a new <xref href=\"System.Globalization.Calendar\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: 'public class HijriCalendar : Calendar'
    content.vb: >-
      Public Class HijriCalendar
          Inherits Calendar
  seealso:
  - type: System.Globalization.Calendar
    commentId: T:System.Globalization.Calendar
  - type: System.Globalization.CultureInfo.Calendar
    commentId: P:System.Globalization.CultureInfo.Calendar
  - type: System.Globalization.CultureInfo.OptionalCalendars
    commentId: P:System.Globalization.CultureInfo.OptionalCalendars
  - type: System.Globalization.UmAlQuraCalendar
    commentId: T:System.Globalization.UmAlQuraCalendar
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: System.Globalization.HijriCalendar.#ctor
  commentId: M:System.Globalization.HijriCalendar.#ctor
  id: '#ctor'
  parent: System.Globalization.HijriCalendar
  langs:
  - csharp
  - vb
  name: HijriCalendar()
  fullName: System.Globalization.HijriCalendar.HijriCalendar()
  type: Constructor
  source:
    remote:
      path: src/System.Globalization.Calendars/ref/System.Globalization.Calendars.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Globalization.Calendars/ref/System.Globalization.Calendars.cs
    startLine: 105
  assemblies:
  - System.Globalization.Calendars
  namespace: System.Globalization
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Globalization.HijriCalendar\" data-throw-if-not-resolved=\"false\"></xref> class.</p>\n"
  syntax:
    content: public HijriCalendar()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Globalization.HijriCalendar.Eras
  commentId: P:System.Globalization.HijriCalendar.Eras
  id: Eras
  parent: System.Globalization.HijriCalendar
  langs:
  - csharp
  - vb
  name: Eras
  fullName: System.Globalization.HijriCalendar.Eras
  type: Property
  source:
    remote:
      path: src/System.Globalization.Calendars/ref/System.Globalization.Calendars.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Eras
    path: src/System.Globalization.Calendars/ref/System.Globalization.Calendars.cs
    startLine: 106
  assemblies:
  - System.Globalization.Calendars
  namespace: System.Globalization
  summary: "\n<p>Gets the list of eras in the <xref href=\"System.Globalization.HijriCalendar\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  remarks: "\n<p>The Hijri calendar recognizes one era: A.H. (Latin \"Anno Hegirae\", which means \"the year of the migration,\" in reference to the migration of Muhammad (PBUH) from Mecca). This property always returns an array with only one element.</p>\n"
  syntax:
    content: public override int[] Eras { get; }
    content.vb: Public Overrides ReadOnly Property Eras As Integer()
    parameters: []
    return:
      type: System.Int32[]
      description: "\n<p>An array of integers that represents the eras in the <xref href=\"System.Globalization.HijriCalendar\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  seealso:
  - type: System.Globalization.Calendar.CurrentEra
    commentId: F:System.Globalization.Calendar.CurrentEra
  - type: System.Globalization.HijriCalendar.HijriEra
    commentId: F:System.Globalization.HijriCalendar.HijriEra
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: System.Globalization.HijriCalendar.HijriAdjustment
  commentId: P:System.Globalization.HijriCalendar.HijriAdjustment
  id: HijriAdjustment
  parent: System.Globalization.HijriCalendar
  langs:
  - csharp
  - vb
  name: HijriAdjustment
  fullName: System.Globalization.HijriCalendar.HijriAdjustment
  type: Property
  source:
    remote:
      path: src/System.Globalization.Calendars/ref/System.Globalization.Calendars.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: HijriAdjustment
    path: src/System.Globalization.Calendars/ref/System.Globalization.Calendars.cs
    startLine: 107
  assemblies:
  - System.Globalization.Calendars
  namespace: System.Globalization
  summary: "\n<p>Gets or sets the number of days to add or subtract from the calendar to accommodate the variances in the start and the end of Ramadan and to accommodate the date difference between countries/regions.</p>\n"
  remarks: "\n<p>This implementation of the <xref href=\"System.Globalization.HijriCalendar\" data-throw-if-not-resolved=\"false\"></xref> class adjusts the calendar date by adding or subtracting a value from zero to two days to accommodate the variances in the start and the end of Ramadan and to accommodate the date difference between countries/regions. That value is stored in the <xref href=\"System.Globalization.HijriCalendar.HijriAdjustment\" data-throw-if-not-resolved=\"false\"></xref> property. If <xref href=\"System.Globalization.HijriCalendar.HijriAdjustment\" data-throw-if-not-resolved=\"false\"></xref> is not set explicitly, it derives its value from the settings in the regional and language options portion of Control Panel and is stored in the registry value HKEY_CURRENT_USER\\Control Panel\\International\\AddHijriDate. However, that information can change during the life of the <xref href=\"System.AppDomain\" data-throw-if-not-resolved=\"false\"></xref>. The <xref href=\"System.Globalization.HijriCalendar\" data-throw-if-not-resolved=\"false\"></xref> class does not detect changes in the system settings automatically.</p>\n"
  example:
  - "\n<p>The following code example shows how <xref href=\"System.Globalization.HijriCalendar.HijriAdjustment\" data-throw-if-not-resolved=\"false\"></xref> affects the date.</p>System.Globalization.HijriCalendar.HijriAdjustment#1"
  syntax:
    content: public int HijriAdjustment { get; set; }
    content.vb: Public Property HijriAdjustment As Integer
    parameters: []
    return:
      type: System.Int32
      description: "\n<p>An integer from -2 to 2 that represents the number of days to add or subtract from the calendar.</p>\n"
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>The property is being set to an invalid value. </p>\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Globalization.HijriCalendar.MaxSupportedDateTime
  commentId: P:System.Globalization.HijriCalendar.MaxSupportedDateTime
  id: MaxSupportedDateTime
  parent: System.Globalization.HijriCalendar
  langs:
  - csharp
  - vb
  name: MaxSupportedDateTime
  fullName: System.Globalization.HijriCalendar.MaxSupportedDateTime
  type: Property
  source:
    remote:
      path: src/System.Globalization.Calendars/ref/System.Globalization.Calendars.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: MaxSupportedDateTime
    path: src/System.Globalization.Calendars/ref/System.Globalization.Calendars.cs
    startLine: 108
  assemblies:
  - System.Globalization.Calendars
  namespace: System.Globalization
  summary: "\n<p>Gets the latest date and time supported by this calendar.</p>\n"
  remarks: "\n<p>December 31, 9999 C.E. is equivalent to the 3rd day of the 4th month of the year 9666 in the Hijri calendar.</p>\n"
  example:
  - "\n<p>The following code example gets the minimum value and the maximum value of the calendar.</p>System.Globalization.HijriCalendar_MinMax#1"
  syntax:
    content: public override DateTime MaxSupportedDateTime { get; }
    content.vb: Public Overrides ReadOnly Property MaxSupportedDateTime As DateTime
    parameters: []
    return:
      type: System.DateTime
      description: "\n<p>The latest date and time supported by the <xref href=\"System.Globalization.HijriCalendar\" data-throw-if-not-resolved=\"false\"></xref> type, which is equivalent to the last moment of December 31, 9999 C.E. in the Gregorian calendar.</p>\n"
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: System.Globalization.HijriCalendar.MinSupportedDateTime
  commentId: P:System.Globalization.HijriCalendar.MinSupportedDateTime
  id: MinSupportedDateTime
  parent: System.Globalization.HijriCalendar
  langs:
  - csharp
  - vb
  name: MinSupportedDateTime
  fullName: System.Globalization.HijriCalendar.MinSupportedDateTime
  type: Property
  source:
    remote:
      path: src/System.Globalization.Calendars/ref/System.Globalization.Calendars.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: MinSupportedDateTime
    path: src/System.Globalization.Calendars/ref/System.Globalization.Calendars.cs
    startLine: 109
  assemblies:
  - System.Globalization.Calendars
  namespace: System.Globalization
  summary: "\n<p>Gets the earliest date and time supported by this calendar.</p>\n"
  remarks: "\n<p>Microsoft Visual Basic represents time of day as the specified time on the minimum date  supported by the <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> type, which is January 1, 0001 C.E. However, the <xref href=\"System.Globalization.HijriCalendar\" data-throw-if-not-resolved=\"false\"></xref> type does not support that minimum date. Consequently, if you call a method to format the time of day using the current calendar but you do not specify a format specifier, formatting uses the ISO 8601 sortable (\"s\") date/time pattern format specifier instead of the default general (\"G\") date/time pattern format specifier. For more information, see Standard Date and Time Format Strings.</p>\n"
  example:
  - "\n<p>The following code example gets the minimum value and the maximum value of the calendar.</p>System.Globalization.HijriCalendar_MinMax#1"
  syntax:
    content: public override DateTime MinSupportedDateTime { get; }
    content.vb: Public Overrides ReadOnly Property MinSupportedDateTime As DateTime
    parameters: []
    return:
      type: System.DateTime
      description: "\n<p>The earliest date and time supported by the <xref href=\"System.Globalization.HijriCalendar\" data-throw-if-not-resolved=\"false\"></xref> type, which is equivalent to the first moment of July 18, 622 C.E. in the Gregorian calendar.</p>\n"
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: System.Globalization.HijriCalendar.TwoDigitYearMax
  commentId: P:System.Globalization.HijriCalendar.TwoDigitYearMax
  id: TwoDigitYearMax
  parent: System.Globalization.HijriCalendar
  langs:
  - csharp
  - vb
  name: TwoDigitYearMax
  fullName: System.Globalization.HijriCalendar.TwoDigitYearMax
  type: Property
  source:
    remote:
      path: src/System.Globalization.Calendars/ref/System.Globalization.Calendars.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: TwoDigitYearMax
    path: src/System.Globalization.Calendars/ref/System.Globalization.Calendars.cs
    startLine: 110
  assemblies:
  - System.Globalization.Calendars
  namespace: System.Globalization
  summary: "\n<p>Gets or sets the last year of a 100-year range that can be represented by a 2-digit year.</p>\n"
  remarks: "\n<p>This property allows a 2-digit year to be properly translated to a 4-digit year. For example, if this property is set to 1429, the 100-year range is from 1330 to 1429. Therefore, a 2-digit value of 30 is interpreted as 1330, while a 2-digit value of 29 is interpreted as 1429.</p>\n<p>The initial value of this property is derived from the settings in the regional and language options portion of Control Panel. However, that information can change during the life of the <xref href=\"System.AppDomain\" data-throw-if-not-resolved=\"false\"></xref>. The <xref href=\"System.Globalization.HijriCalendar\" data-throw-if-not-resolved=\"false\"></xref> class does not detect changes in the system settings automatically.</p>\n<p>The application should set this value to 99 to indicate that 2-digit years are to be taken literally. For example, if this property is set to 99, the 100-year range is from 0 (not a valid value for most calendars) to 99. Therefore, a 2-digit value of 30 is interpreted as 30.</p>\n"
  syntax:
    content: public override int TwoDigitYearMax { get; set; }
    content.vb: Public Overrides Property TwoDigitYearMax As Integer
    parameters: []
    return:
      type: System.Int32
      description: "\n<p>The last year of a 100-year range that can be represented by a 2-digit year.</p>\n"
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "\n<p>This calendar is read-only.</p>\n"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>The value in a set operation is less than 100 or greater than 9666.</p>\n"
  seealso:
  - type: System.Globalization.HijriCalendar.ToFourDigitYear(System.Int32)
    commentId: M:System.Globalization.HijriCalendar.ToFourDigitYear(System.Int32)
  modifiers.csharp:
  - public
  - override
  - get
  - set
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Globalization.HijriCalendar.AddMonths(System.DateTime,System.Int32)
  commentId: M:System.Globalization.HijriCalendar.AddMonths(System.DateTime,System.Int32)
  id: AddMonths(System.DateTime,System.Int32)
  parent: System.Globalization.HijriCalendar
  langs:
  - csharp
  - vb
  name: AddMonths(DateTime, Int32)
  fullName: System.Globalization.HijriCalendar.AddMonths(System.DateTime, System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Globalization.Calendars/ref/System.Globalization.Calendars.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: AddMonths
    path: src/System.Globalization.Calendars/ref/System.Globalization.Calendars.cs
    startLine: 111
  assemblies:
  - System.Globalization.Calendars
  namespace: System.Globalization
  summary: "\n<p>Returns a <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> that is the specified number of months away from the specified <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  remarks: "\n<p>The day part of the resulting <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> is affected if the resulting day is not a valid day in the resulting month of the resulting year. It is changed to the last valid day in the resulting month of the resulting year. The year part of the resulting <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> is affected if the resulting month is outside the year of the specified <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref>. This implementation supports only the current era. Therefore, <xref href=\"System.ArgumentException\" data-throw-if-not-resolved=\"false\"></xref> is thrown if the resulting year is outside the era of the specified <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref>. The time-of-day part of the resulting <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> remains the same as the specified <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>For example, if the specified month is Zulkadah, which has 30 days, the specified day is the 30th day of that month, and the value of the <em>months</em> parameter is 3, the resulting year is one more than the specified year, the resulting month is Safar, and the resulting day is the 29th day, which is the last day in Safar.</p>\n<p>If the value of the <em>months</em> parameter is negative, the resulting <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> is earlier than the specified <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>The<xref href=\"System.DateTime.Kind\" data-throw-if-not-resolved=\"false\"></xref> property of the returned <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> value always equals <xref href=\"System.DateTimeKind.Unspecified\" data-throw-if-not-resolved=\"false\"></xref>. You can preserve the <xref href=\"System.DateTime.Kind\" data-throw-if-not-resolved=\"false\"></xref> property of the <em>time</em> parameter by calling the <xref href=\"System.DateTime.SpecifyKind(System.DateTime,System.DateTimeKind)\" data-throw-if-not-resolved=\"false\"></xref> method, as the following example shows.</p>System.Globalization.Calendar.AddMethods#5"
  example:
  - "\n<p>The following code example displays the values of several components of a <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> in terms of the Hijri calendar.</p>System.Globalization.HijriCalendar_AddGet#1"
  syntax:
    content: public override DateTime AddMonths(DateTime time, int months)
    content.vb: Public Overrides Function AddMonths(time As DateTime, months As Integer) As DateTime
    parameters:
    - id: time
      type: System.DateTime
      description: "\n<p>The <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> to add months to. </p>\n"
    - id: months
      type: System.Int32
      description: "\n<p>The number of months to add. </p>\n"
    return:
      type: System.DateTime
      description: "\n<p>The <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> that results from adding the specified number of months to the specified <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<p>The resulting <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>\n<em>months</em> is less than -120000.</p>\n<p>-or- </p>\n<p>\n<em>months</em> is greater than 120000. </p>\n"
  seealso:
  - type: System.DateTime
    commentId: T:System.DateTime
  - type: System.Globalization.HijriCalendar.AddYears(System.DateTime,System.Int32)
    commentId: M:System.Globalization.HijriCalendar.AddYears(System.DateTime,System.Int32)
  - type: System.Globalization.Calendar.AddWeeks(System.DateTime,System.Int32)
    commentId: M:System.Globalization.Calendar.AddWeeks(System.DateTime,System.Int32)
  - type: System.Globalization.Calendar.AddDays(System.DateTime,System.Int32)
    commentId: M:System.Globalization.Calendar.AddDays(System.DateTime,System.Int32)
  - type: System.Globalization.Calendar.AddHours(System.DateTime,System.Int32)
    commentId: M:System.Globalization.Calendar.AddHours(System.DateTime,System.Int32)
  - type: System.Globalization.Calendar.AddMinutes(System.DateTime,System.Int32)
    commentId: M:System.Globalization.Calendar.AddMinutes(System.DateTime,System.Int32)
  - type: System.Globalization.Calendar.AddSeconds(System.DateTime,System.Int32)
    commentId: M:System.Globalization.Calendar.AddSeconds(System.DateTime,System.Int32)
  - type: System.Globalization.Calendar.AddMilliseconds(System.DateTime,System.Double)
    commentId: M:System.Globalization.Calendar.AddMilliseconds(System.DateTime,System.Double)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Globalization.HijriCalendar.AddYears(System.DateTime,System.Int32)
  commentId: M:System.Globalization.HijriCalendar.AddYears(System.DateTime,System.Int32)
  id: AddYears(System.DateTime,System.Int32)
  parent: System.Globalization.HijriCalendar
  langs:
  - csharp
  - vb
  name: AddYears(DateTime, Int32)
  fullName: System.Globalization.HijriCalendar.AddYears(System.DateTime, System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Globalization.Calendars/ref/System.Globalization.Calendars.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: AddYears
    path: src/System.Globalization.Calendars/ref/System.Globalization.Calendars.cs
    startLine: 112
  assemblies:
  - System.Globalization.Calendars
  namespace: System.Globalization
  summary: "\n<p>Returns a <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> that is the specified number of years away from the specified <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  remarks: "\n<p>The day part of the resulting <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> is affected if the resulting day is not a valid day in the resulting month of the resulting year. It is changed to the last valid day in the resulting month of the resulting year. The month part of the resulting <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> remains the same as the specified <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref>. This implementation supports only the current era. Therefore, <xref href=\"System.ArgumentException\" data-throw-if-not-resolved=\"false\"></xref> is thrown if the resulting year is outside the era of the specified <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref>. The time-of-day part of the resulting <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> remains the same as the specified <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>For example, Zulhijjah has 29 days, except during leap years when it has 30 days. If the specified date is the 30th day of Zulhijjah in a leap year and the value of <em>years</em> is 1, the resulting date will be the 29th day of Zulhijjah in the following year.</p>\n<p>If <em>years</em> is negative, the resulting <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> is earlier than the specified <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>The<xref href=\"System.DateTime.Kind\" data-throw-if-not-resolved=\"false\"></xref> property of the returned <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> value always equals <xref href=\"System.DateTimeKind.Unspecified\" data-throw-if-not-resolved=\"false\"></xref>. You can preserve the <xref href=\"System.DateTime.Kind\" data-throw-if-not-resolved=\"false\"></xref> property of the <em>time</em> parameter by calling the <xref href=\"System.DateTime.SpecifyKind(System.DateTime,System.DateTimeKind)\" data-throw-if-not-resolved=\"false\"></xref> method, as the following example shows.</p>System.Globalization.Calendar.AddMethods#8"
  example:
  - "\n<p>The following code example displays the values of several components of a <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> in terms of the Hijri calendar.</p>System.Globalization.HijriCalendar_AddGet#1"
  syntax:
    content: public override DateTime AddYears(DateTime time, int years)
    content.vb: Public Overrides Function AddYears(time As DateTime, years As Integer) As DateTime
    parameters:
    - id: time
      type: System.DateTime
      description: "\n<p>The <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> to add years to. </p>\n"
    - id: years
      type: System.Int32
      description: "\n<p>The number of years to add. </p>\n"
    return:
      type: System.DateTime
      description: "\n<p>The <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> that results from adding the specified number of years to the specified <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<p>The resulting <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> is outside the supported range. </p>\n"
  seealso:
  - type: System.DateTime
    commentId: T:System.DateTime
  - type: System.Globalization.HijriCalendar.AddMonths(System.DateTime,System.Int32)
    commentId: M:System.Globalization.HijriCalendar.AddMonths(System.DateTime,System.Int32)
  - type: System.Globalization.Calendar.AddWeeks(System.DateTime,System.Int32)
    commentId: M:System.Globalization.Calendar.AddWeeks(System.DateTime,System.Int32)
  - type: System.Globalization.Calendar.AddDays(System.DateTime,System.Int32)
    commentId: M:System.Globalization.Calendar.AddDays(System.DateTime,System.Int32)
  - type: System.Globalization.Calendar.AddHours(System.DateTime,System.Int32)
    commentId: M:System.Globalization.Calendar.AddHours(System.DateTime,System.Int32)
  - type: System.Globalization.Calendar.AddMinutes(System.DateTime,System.Int32)
    commentId: M:System.Globalization.Calendar.AddMinutes(System.DateTime,System.Int32)
  - type: System.Globalization.Calendar.AddSeconds(System.DateTime,System.Int32)
    commentId: M:System.Globalization.Calendar.AddSeconds(System.DateTime,System.Int32)
  - type: System.Globalization.Calendar.AddMilliseconds(System.DateTime,System.Double)
    commentId: M:System.Globalization.Calendar.AddMilliseconds(System.DateTime,System.Double)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Globalization.HijriCalendar.GetDayOfMonth(System.DateTime)
  commentId: M:System.Globalization.HijriCalendar.GetDayOfMonth(System.DateTime)
  id: GetDayOfMonth(System.DateTime)
  parent: System.Globalization.HijriCalendar
  langs:
  - csharp
  - vb
  name: GetDayOfMonth(DateTime)
  fullName: System.Globalization.HijriCalendar.GetDayOfMonth(System.DateTime)
  type: Method
  source:
    remote:
      path: src/System.Globalization.Calendars/ref/System.Globalization.Calendars.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetDayOfMonth
    path: src/System.Globalization.Calendars/ref/System.Globalization.Calendars.cs
    startLine: 113
  assemblies:
  - System.Globalization.Calendars
  namespace: System.Globalization
  summary: "\n<p>Returns the day of the month in the specified <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  example:
  - "\n<p>The following code example displays the values of several components of a <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> in terms of the Hijri calendar.</p>System.Globalization.HijriCalendar_AddGet#1"
  syntax:
    content: public override int GetDayOfMonth(DateTime time)
    content.vb: Public Overrides Function GetDayOfMonth(time As DateTime) As Integer
    parameters:
    - id: time
      type: System.DateTime
      description: "\n<p>The <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> to read. </p>\n"
    return:
      type: System.Int32
      description: "\n<p>An integer from 1 to 30 that represents the day of the month in the specified <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  seealso:
  - type: System.DateTime.Day
    commentId: P:System.DateTime.Day
  - type: System.Globalization.HijriCalendar.GetEra(System.DateTime)
    commentId: M:System.Globalization.HijriCalendar.GetEra(System.DateTime)
  - type: System.Globalization.HijriCalendar.GetYear(System.DateTime)
    commentId: M:System.Globalization.HijriCalendar.GetYear(System.DateTime)
  - type: System.Globalization.HijriCalendar.GetMonth(System.DateTime)
    commentId: M:System.Globalization.HijriCalendar.GetMonth(System.DateTime)
  - type: System.Globalization.HijriCalendar.GetDayOfYear(System.DateTime)
    commentId: M:System.Globalization.HijriCalendar.GetDayOfYear(System.DateTime)
  - type: System.Globalization.HijriCalendar.GetDayOfWeek(System.DateTime)
    commentId: M:System.Globalization.HijriCalendar.GetDayOfWeek(System.DateTime)
  - type: System.Globalization.Calendar.GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)
    commentId: M:System.Globalization.Calendar.GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Globalization.HijriCalendar.GetDayOfWeek(System.DateTime)
  commentId: M:System.Globalization.HijriCalendar.GetDayOfWeek(System.DateTime)
  id: GetDayOfWeek(System.DateTime)
  parent: System.Globalization.HijriCalendar
  langs:
  - csharp
  - vb
  name: GetDayOfWeek(DateTime)
  fullName: System.Globalization.HijriCalendar.GetDayOfWeek(System.DateTime)
  type: Method
  source:
    remote:
      path: src/System.Globalization.Calendars/ref/System.Globalization.Calendars.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetDayOfWeek
    path: src/System.Globalization.Calendars/ref/System.Globalization.Calendars.cs
    startLine: 114
  assemblies:
  - System.Globalization.Calendars
  namespace: System.Globalization
  summary: "\n<p>Returns the day of the week in the specified <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  remarks: "\n<p>The <xref href=\"System.DayOfWeek\" data-throw-if-not-resolved=\"false\"></xref> values are as follows: </p>\n<p>DayOfWeek value </p>\n<p>which indicates </p>\n<table><tbody><tr><td>\n<p>Sunday </p>\n</td><td>\n<p>الاحد (Al-Ahad) </p>\n</td></tr><tr><td>\n<p>Monday </p>\n</td><td>\n<p>الاثنين (Al-Ithnayn) </p>\n</td></tr><tr><td>\n<p>Tuesday </p>\n</td><td>\n<p>الثلاثاء (At-Thulaathaa') </p>\n</td></tr><tr><td>\n<p>Wednesday </p>\n</td><td>\n<p>الاربعاء (Al-Arbi'aa') </p>\n</td></tr><tr><td>\n<p>Thursday </p>\n</td><td>\n<p>الخميس (Al-Khamiis) </p>\n</td></tr><tr><td>\n<p>Friday </p>\n</td><td>\n<p>الجمعة (Al-Jumu'ah) </p>\n</td></tr><tr><td>\n<p>Saturday </p>\n</td><td>\n<p>السبت (As-Sabt) </p>\n</td></tr></tbody></table>\n"
  example:
  - "\n<p>The following code example displays the values of several components of a <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> in terms of the Hijri calendar.</p>System.Globalization.HijriCalendar_AddGet#1"
  syntax:
    content: public override DayOfWeek GetDayOfWeek(DateTime time)
    content.vb: Public Overrides Function GetDayOfWeek(time As DateTime) As DayOfWeek
    parameters:
    - id: time
      type: System.DateTime
      description: "\n<p>The <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> to read. </p>\n"
    return:
      type: System.DayOfWeek
      description: "\n<p>A <xref href=\"System.DayOfWeek\" data-throw-if-not-resolved=\"false\"></xref> value that represents the day of the week in the specified <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  seealso:
  - type: System.DateTime.DayOfWeek
    commentId: P:System.DateTime.DayOfWeek
  - type: System.DayOfWeek
    commentId: T:System.DayOfWeek
  - type: System.Globalization.HijriCalendar.GetEra(System.DateTime)
    commentId: M:System.Globalization.HijriCalendar.GetEra(System.DateTime)
  - type: System.Globalization.HijriCalendar.GetYear(System.DateTime)
    commentId: M:System.Globalization.HijriCalendar.GetYear(System.DateTime)
  - type: System.Globalization.HijriCalendar.GetMonth(System.DateTime)
    commentId: M:System.Globalization.HijriCalendar.GetMonth(System.DateTime)
  - type: System.Globalization.HijriCalendar.GetDayOfYear(System.DateTime)
    commentId: M:System.Globalization.HijriCalendar.GetDayOfYear(System.DateTime)
  - type: System.Globalization.HijriCalendar.GetDayOfMonth(System.DateTime)
    commentId: M:System.Globalization.HijriCalendar.GetDayOfMonth(System.DateTime)
  - type: System.Globalization.Calendar.GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)
    commentId: M:System.Globalization.Calendar.GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Globalization.HijriCalendar.GetDayOfYear(System.DateTime)
  commentId: M:System.Globalization.HijriCalendar.GetDayOfYear(System.DateTime)
  id: GetDayOfYear(System.DateTime)
  parent: System.Globalization.HijriCalendar
  langs:
  - csharp
  - vb
  name: GetDayOfYear(DateTime)
  fullName: System.Globalization.HijriCalendar.GetDayOfYear(System.DateTime)
  type: Method
  source:
    remote:
      path: src/System.Globalization.Calendars/ref/System.Globalization.Calendars.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetDayOfYear
    path: src/System.Globalization.Calendars/ref/System.Globalization.Calendars.cs
    startLine: 115
  assemblies:
  - System.Globalization.Calendars
  namespace: System.Globalization
  summary: "\n<p>Returns the day of the year in the specified <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  remarks: "\n<p>The day of the year is defined as the number of days from the first day of the year. For example, <xref href=\"System.Globalization.HijriCalendar.GetDayOfYear(System.DateTime)\" data-throw-if-not-resolved=\"false\"></xref> for the first day of the first month returns 1, and <xref href=\"System.Globalization.HijriCalendar.GetDayOfYear(System.DateTime)\" data-throw-if-not-resolved=\"false\"></xref> for the last day of the last month returns the total number of days in that year, which is the same value returned by <xref href=\"System.Globalization.HijriCalendar.GetDaysInYear(System.Int32,System.Int32)\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  example:
  - "\n<p>The following code example displays the values of several components of a <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> in terms of the Hijri calendar.</p>System.Globalization.HijriCalendar_AddGet#1"
  syntax:
    content: public override int GetDayOfYear(DateTime time)
    content.vb: Public Overrides Function GetDayOfYear(time As DateTime) As Integer
    parameters:
    - id: time
      type: System.DateTime
      description: "\n<p>The <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> to read. </p>\n"
    return:
      type: System.Int32
      description: "\n<p>An integer from 1 to 355 that represents the day of the year in the specified <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  seealso:
  - type: System.DateTime.DayOfYear
    commentId: P:System.DateTime.DayOfYear
  - type: System.Globalization.HijriCalendar.GetEra(System.DateTime)
    commentId: M:System.Globalization.HijriCalendar.GetEra(System.DateTime)
  - type: System.Globalization.HijriCalendar.GetYear(System.DateTime)
    commentId: M:System.Globalization.HijriCalendar.GetYear(System.DateTime)
  - type: System.Globalization.HijriCalendar.GetMonth(System.DateTime)
    commentId: M:System.Globalization.HijriCalendar.GetMonth(System.DateTime)
  - type: System.Globalization.HijriCalendar.GetDayOfMonth(System.DateTime)
    commentId: M:System.Globalization.HijriCalendar.GetDayOfMonth(System.DateTime)
  - type: System.Globalization.HijriCalendar.GetDayOfWeek(System.DateTime)
    commentId: M:System.Globalization.HijriCalendar.GetDayOfWeek(System.DateTime)
  - type: System.Globalization.Calendar.GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)
    commentId: M:System.Globalization.Calendar.GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Globalization.HijriCalendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)
  commentId: M:System.Globalization.HijriCalendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)
  id: GetDaysInMonth(System.Int32,System.Int32,System.Int32)
  parent: System.Globalization.HijriCalendar
  langs:
  - csharp
  - vb
  name: GetDaysInMonth(Int32, Int32, Int32)
  fullName: System.Globalization.HijriCalendar.GetDaysInMonth(System.Int32, System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Globalization.Calendars/ref/System.Globalization.Calendars.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetDaysInMonth
    path: src/System.Globalization.Calendars/ref/System.Globalization.Calendars.cs
    startLine: 116
  assemblies:
  - System.Globalization.Calendars
  namespace: System.Globalization
  summary: "\n<p>Returns the number of days in the specified month of the specified year and era.</p>\n"
  remarks: "\n<p>For example, this method returns 29 or 30 for Zulhijjah (<em>month</em> = 12), depending on whether <em>year</em> is a leap year.</p>\n"
  example:
  - "\n<p>The following code example calls <code>GetDaysInMonth</code> for the twelfth month in each of five years in each era.</p>System.Globalization.HijriCalendar.GetDaysInMonth#1"
  syntax:
    content: public override int GetDaysInMonth(int year, int month, int era)
    content.vb: Public Overrides Function GetDaysInMonth(year As Integer, month As Integer, era As Integer) As Integer
    parameters:
    - id: year
      type: System.Int32
      description: "\n<p>An integer that represents the year. </p>\n"
    - id: month
      type: System.Int32
      description: "\n<p>An integer from 1 to 12 that represents the month. </p>\n"
    - id: era
      type: System.Int32
      description: "\n<p>An integer that represents the era. </p>\n"
    return:
      type: System.Int32
      description: "\n<p>The number of days in the specified month in the specified year in the specified era.</p>\n"
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>\n<em>era</em> is outside the range supported by this calendar. </p>\n<p>-or- </p>\n<p>\n<em>year</em> is outside the range supported by this calendar.</p>\n<p>-or- </p>\n<p>\n<em>month</em> is outside the range supported by this calendar. </p>\n"
  seealso:
  - type: System.Globalization.Calendar.CurrentEra
    commentId: F:System.Globalization.Calendar.CurrentEra
  - type: System.Globalization.HijriCalendar.HijriEra
    commentId: F:System.Globalization.HijriCalendar.HijriEra
  - type: System.Globalization.HijriCalendar.Eras
    commentId: P:System.Globalization.HijriCalendar.Eras
  - type: System.Globalization.HijriCalendar.GetMonthsInYear(System.Int32,System.Int32)
    commentId: M:System.Globalization.HijriCalendar.GetMonthsInYear(System.Int32,System.Int32)
  - type: System.Globalization.HijriCalendar.GetDaysInYear(System.Int32,System.Int32)
    commentId: M:System.Globalization.HijriCalendar.GetDaysInYear(System.Int32,System.Int32)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Globalization.HijriCalendar.GetDaysInYear(System.Int32,System.Int32)
  commentId: M:System.Globalization.HijriCalendar.GetDaysInYear(System.Int32,System.Int32)
  id: GetDaysInYear(System.Int32,System.Int32)
  parent: System.Globalization.HijriCalendar
  langs:
  - csharp
  - vb
  name: GetDaysInYear(Int32, Int32)
  fullName: System.Globalization.HijriCalendar.GetDaysInYear(System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Globalization.Calendars/ref/System.Globalization.Calendars.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetDaysInYear
    path: src/System.Globalization.Calendars/ref/System.Globalization.Calendars.cs
    startLine: 117
  assemblies:
  - System.Globalization.Calendars
  namespace: System.Globalization
  summary: "\n<p>Returns the number of days in the specified year and era.</p>\n"
  example:
  - "\n<p>The following code example calls <code>GetDaysInYear</code> for five years in each era.</p>System.Globalization.HijriCalendar.GetDaysInYear#1"
  syntax:
    content: public override int GetDaysInYear(int year, int era)
    content.vb: Public Overrides Function GetDaysInYear(year As Integer, era As Integer) As Integer
    parameters:
    - id: year
      type: System.Int32
      description: "\n<p>An integer that represents the year. </p>\n"
    - id: era
      type: System.Int32
      description: "\n<p>An integer that represents the era. </p>\n"
    return:
      type: System.Int32
      description: "\n<p>The number of days in the specified year and era. The number of days is 354 in a common year or 355 in a leap year.</p>\n"
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>\n<em>year</em> or <em>era</em> is outside the range supported by this calendar. </p>\n"
  seealso:
  - type: System.Globalization.Calendar.CurrentEra
    commentId: F:System.Globalization.Calendar.CurrentEra
  - type: System.Globalization.HijriCalendar.HijriEra
    commentId: F:System.Globalization.HijriCalendar.HijriEra
  - type: System.Globalization.HijriCalendar.Eras
    commentId: P:System.Globalization.HijriCalendar.Eras
  - type: System.Globalization.HijriCalendar.GetMonthsInYear(System.Int32,System.Int32)
    commentId: M:System.Globalization.HijriCalendar.GetMonthsInYear(System.Int32,System.Int32)
  - type: System.Globalization.HijriCalendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)
    commentId: M:System.Globalization.HijriCalendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Globalization.HijriCalendar.GetEra(System.DateTime)
  commentId: M:System.Globalization.HijriCalendar.GetEra(System.DateTime)
  id: GetEra(System.DateTime)
  parent: System.Globalization.HijriCalendar
  langs:
  - csharp
  - vb
  name: GetEra(DateTime)
  fullName: System.Globalization.HijriCalendar.GetEra(System.DateTime)
  type: Method
  source:
    remote:
      path: src/System.Globalization.Calendars/ref/System.Globalization.Calendars.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetEra
    path: src/System.Globalization.Calendars/ref/System.Globalization.Calendars.cs
    startLine: 118
  assemblies:
  - System.Globalization.Calendars
  namespace: System.Globalization
  summary: "\n<p>Returns the era in the specified <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  remarks: "\n<p>The Hijri calendar recognizes one era: A.H. (Latin \"Anno Hegirae\", which means \"the year of the migration,\" in reference to the migration of Muhammad (PBUH) from Mecca).</p>\n"
  example:
  - "\n<p>The following code example displays the values of several components of a <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> in terms of the Hijri calendar.</p>System.Globalization.HijriCalendar_AddGet#1"
  syntax:
    content: public override int GetEra(DateTime time)
    content.vb: Public Overrides Function GetEra(time As DateTime) As Integer
    parameters:
    - id: time
      type: System.DateTime
      description: "\n<p>The <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> to read. </p>\n"
    return:
      type: System.Int32
      description: "\n<p>An integer that represents the era in the specified <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  seealso:
  - type: System.DateTime
    commentId: T:System.DateTime
  - type: System.Globalization.Calendar.CurrentEra
    commentId: F:System.Globalization.Calendar.CurrentEra
  - type: System.Globalization.HijriCalendar.HijriEra
    commentId: F:System.Globalization.HijriCalendar.HijriEra
  - type: System.Globalization.HijriCalendar.Eras
    commentId: P:System.Globalization.HijriCalendar.Eras
  - type: System.Globalization.HijriCalendar.GetYear(System.DateTime)
    commentId: M:System.Globalization.HijriCalendar.GetYear(System.DateTime)
  - type: System.Globalization.HijriCalendar.GetMonth(System.DateTime)
    commentId: M:System.Globalization.HijriCalendar.GetMonth(System.DateTime)
  - type: System.Globalization.HijriCalendar.GetDayOfYear(System.DateTime)
    commentId: M:System.Globalization.HijriCalendar.GetDayOfYear(System.DateTime)
  - type: System.Globalization.HijriCalendar.GetDayOfMonth(System.DateTime)
    commentId: M:System.Globalization.HijriCalendar.GetDayOfMonth(System.DateTime)
  - type: System.Globalization.HijriCalendar.GetDayOfWeek(System.DateTime)
    commentId: M:System.Globalization.HijriCalendar.GetDayOfWeek(System.DateTime)
  - type: System.Globalization.Calendar.GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)
    commentId: M:System.Globalization.Calendar.GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)
  - type: System.Globalization.Calendar.GetHour(System.DateTime)
    commentId: M:System.Globalization.Calendar.GetHour(System.DateTime)
  - type: System.Globalization.Calendar.GetMinute(System.DateTime)
    commentId: M:System.Globalization.Calendar.GetMinute(System.DateTime)
  - type: System.Globalization.Calendar.GetSecond(System.DateTime)
    commentId: M:System.Globalization.Calendar.GetSecond(System.DateTime)
  - type: System.Globalization.Calendar.GetMilliseconds(System.DateTime)
    commentId: M:System.Globalization.Calendar.GetMilliseconds(System.DateTime)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Globalization.HijriCalendar.GetLeapMonth(System.Int32,System.Int32)
  commentId: M:System.Globalization.HijriCalendar.GetLeapMonth(System.Int32,System.Int32)
  id: GetLeapMonth(System.Int32,System.Int32)
  parent: System.Globalization.HijriCalendar
  langs:
  - csharp
  - vb
  name: GetLeapMonth(Int32, Int32)
  fullName: System.Globalization.HijriCalendar.GetLeapMonth(System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Globalization.Calendars/ref/System.Globalization.Calendars.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetLeapMonth
    path: src/System.Globalization.Calendars/ref/System.Globalization.Calendars.cs
    startLine: 119
  assemblies:
  - System.Globalization.Calendars
  namespace: System.Globalization
  summary: "\n<p>Calculates the leap month for a specified year and era.</p>\n"
  remarks: "\n<p>In a calendar that supports the notion of a leap month, the leap month can occur either after a particular month or after any month in a year. For example, the <xref href=\"System.Globalization.EastAsianLunisolarCalendar.GetMonth(System.DateTime)\" data-throw-if-not-resolved=\"false\"></xref> method returns a number between 1 and 13 that indicates the month associated with a specified date. If there is a leap month between the eighth and ninth months of the year, the <xref href=\"System.Globalization.EastAsianLunisolarCalendar.GetMonth(System.DateTime)\" data-throw-if-not-resolved=\"false\"></xref> method returns 8 for the eighth month, 9 for the leap eighth month, and 10 for the ninth month.</p>\n"
  example:
  - 
  syntax:
    content: public override int GetLeapMonth(int year, int era)
    content.vb: Public Overrides Function GetLeapMonth(year As Integer, era As Integer) As Integer
    parameters:
    - id: year
      type: System.Int32
      description: "\n<p>A year.</p>\n"
    - id: era
      type: System.Int32
      description: "\n<p>An era. Specify <xref href=\"System.Globalization.Calendar.CurrentEra\" data-throw-if-not-resolved=\"false\"></xref> or <xref href=\"System.Globalization.HijriCalendar.HijriEra\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
    return:
      type: System.Int32
      description: "\n<p>Always 0 because the <xref href=\"System.Globalization.HijriCalendar\" data-throw-if-not-resolved=\"false\"></xref> type does not support the notion of a leap month.</p>\n"
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>\n<em>year</em> is less than the Hijri calendar year 1 or greater than the year 9666.</p>\n<p>-or-</p>\n<p>\n<em>era</em> is not <xref href=\"System.Globalization.Calendar.CurrentEra\" data-throw-if-not-resolved=\"false\"></xref> or <xref href=\"System.Globalization.HijriCalendar.HijriEra\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Globalization.HijriCalendar.GetMonth(System.DateTime)
  commentId: M:System.Globalization.HijriCalendar.GetMonth(System.DateTime)
  id: GetMonth(System.DateTime)
  parent: System.Globalization.HijriCalendar
  langs:
  - csharp
  - vb
  name: GetMonth(DateTime)
  fullName: System.Globalization.HijriCalendar.GetMonth(System.DateTime)
  type: Method
  source:
    remote:
      path: src/System.Globalization.Calendars/ref/System.Globalization.Calendars.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetMonth
    path: src/System.Globalization.Calendars/ref/System.Globalization.Calendars.cs
    startLine: 120
  assemblies:
  - System.Globalization.Calendars
  namespace: System.Globalization
  summary: "\n<p>Returns the month in the specified <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  example:
  - "\n<p>The following code example displays the values of several components of a <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> in terms of the Hijri calendar.</p>System.Globalization.HijriCalendar_AddGet#1"
  syntax:
    content: public override int GetMonth(DateTime time)
    content.vb: Public Overrides Function GetMonth(time As DateTime) As Integer
    parameters:
    - id: time
      type: System.DateTime
      description: "\n<p>The <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> to read. </p>\n"
    return:
      type: System.Int32
      description: "\n<p>An integer from 1 to 12 that represents the month in the specified <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  seealso:
  - type: System.DateTime.Month
    commentId: P:System.DateTime.Month
  - type: System.Globalization.HijriCalendar.GetEra(System.DateTime)
    commentId: M:System.Globalization.HijriCalendar.GetEra(System.DateTime)
  - type: System.Globalization.HijriCalendar.GetYear(System.DateTime)
    commentId: M:System.Globalization.HijriCalendar.GetYear(System.DateTime)
  - type: System.Globalization.HijriCalendar.GetDayOfYear(System.DateTime)
    commentId: M:System.Globalization.HijriCalendar.GetDayOfYear(System.DateTime)
  - type: System.Globalization.HijriCalendar.GetDayOfMonth(System.DateTime)
    commentId: M:System.Globalization.HijriCalendar.GetDayOfMonth(System.DateTime)
  - type: System.Globalization.HijriCalendar.GetDayOfWeek(System.DateTime)
    commentId: M:System.Globalization.HijriCalendar.GetDayOfWeek(System.DateTime)
  - type: System.Globalization.Calendar.GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)
    commentId: M:System.Globalization.Calendar.GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)
  - type: System.Globalization.Calendar.GetHour(System.DateTime)
    commentId: M:System.Globalization.Calendar.GetHour(System.DateTime)
  - type: System.Globalization.Calendar.GetMinute(System.DateTime)
    commentId: M:System.Globalization.Calendar.GetMinute(System.DateTime)
  - type: System.Globalization.Calendar.GetSecond(System.DateTime)
    commentId: M:System.Globalization.Calendar.GetSecond(System.DateTime)
  - type: System.Globalization.Calendar.GetMilliseconds(System.DateTime)
    commentId: M:System.Globalization.Calendar.GetMilliseconds(System.DateTime)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Globalization.HijriCalendar.GetMonthsInYear(System.Int32,System.Int32)
  commentId: M:System.Globalization.HijriCalendar.GetMonthsInYear(System.Int32,System.Int32)
  id: GetMonthsInYear(System.Int32,System.Int32)
  parent: System.Globalization.HijriCalendar
  langs:
  - csharp
  - vb
  name: GetMonthsInYear(Int32, Int32)
  fullName: System.Globalization.HijriCalendar.GetMonthsInYear(System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Globalization.Calendars/ref/System.Globalization.Calendars.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetMonthsInYear
    path: src/System.Globalization.Calendars/ref/System.Globalization.Calendars.cs
    startLine: 121
  assemblies:
  - System.Globalization.Calendars
  namespace: System.Globalization
  summary: "\n<p>Returns the number of months in the specified year and era.</p>\n"
  example:
  - "\n<p>The following code example calls the GetMonthsInYear method for five years in each era.</p>System.Globalization.HijriCalendar.GetMonthsInYear#1"
  syntax:
    content: public override int GetMonthsInYear(int year, int era)
    content.vb: Public Overrides Function GetMonthsInYear(year As Integer, era As Integer) As Integer
    parameters:
    - id: year
      type: System.Int32
      description: "\n<p>An integer that represents the year. </p>\n"
    - id: era
      type: System.Int32
      description: "\n<p>An integer that represents the era. </p>\n"
    return:
      type: System.Int32
      description: "\n<p>The number of months in the specified year and era.</p>\n"
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>\n<em>era</em> is outside the range supported by this calendar. </p>\n<p>-or- </p>\n<p>\n<em>year</em> is outside the range supported by this calendar. </p>\n"
  seealso:
  - type: System.Globalization.Calendar.CurrentEra
    commentId: F:System.Globalization.Calendar.CurrentEra
  - type: System.Globalization.HijriCalendar.HijriEra
    commentId: F:System.Globalization.HijriCalendar.HijriEra
  - type: System.Globalization.HijriCalendar.Eras
    commentId: P:System.Globalization.HijriCalendar.Eras
  - type: System.Globalization.HijriCalendar.GetDaysInYear(System.Int32,System.Int32)
    commentId: M:System.Globalization.HijriCalendar.GetDaysInYear(System.Int32,System.Int32)
  - type: System.Globalization.HijriCalendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)
    commentId: M:System.Globalization.HijriCalendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Globalization.HijriCalendar.GetYear(System.DateTime)
  commentId: M:System.Globalization.HijriCalendar.GetYear(System.DateTime)
  id: GetYear(System.DateTime)
  parent: System.Globalization.HijriCalendar
  langs:
  - csharp
  - vb
  name: GetYear(DateTime)
  fullName: System.Globalization.HijriCalendar.GetYear(System.DateTime)
  type: Method
  source:
    remote:
      path: src/System.Globalization.Calendars/ref/System.Globalization.Calendars.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetYear
    path: src/System.Globalization.Calendars/ref/System.Globalization.Calendars.cs
    startLine: 122
  assemblies:
  - System.Globalization.Calendars
  namespace: System.Globalization
  summary: "\n<p>Returns the year in the specified <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  example:
  - "\n<p>The following code example displays the values of several components of a <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> in terms of the Hijri calendar.</p>System.Globalization.HijriCalendar_AddGet#1"
  syntax:
    content: public override int GetYear(DateTime time)
    content.vb: Public Overrides Function GetYear(time As DateTime) As Integer
    parameters:
    - id: time
      type: System.DateTime
      description: "\n<p>The <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> to read. </p>\n"
    return:
      type: System.Int32
      description: "\n<p>An integer that represents the year in the specified <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  seealso:
  - type: System.DateTime.Year
    commentId: P:System.DateTime.Year
  - type: System.Globalization.HijriCalendar.GetEra(System.DateTime)
    commentId: M:System.Globalization.HijriCalendar.GetEra(System.DateTime)
  - type: System.Globalization.HijriCalendar.GetMonth(System.DateTime)
    commentId: M:System.Globalization.HijriCalendar.GetMonth(System.DateTime)
  - type: System.Globalization.HijriCalendar.GetDayOfYear(System.DateTime)
    commentId: M:System.Globalization.HijriCalendar.GetDayOfYear(System.DateTime)
  - type: System.Globalization.HijriCalendar.GetDayOfMonth(System.DateTime)
    commentId: M:System.Globalization.HijriCalendar.GetDayOfMonth(System.DateTime)
  - type: System.Globalization.HijriCalendar.GetDayOfWeek(System.DateTime)
    commentId: M:System.Globalization.HijriCalendar.GetDayOfWeek(System.DateTime)
  - type: System.Globalization.Calendar.GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)
    commentId: M:System.Globalization.Calendar.GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)
  - type: System.Globalization.Calendar.GetHour(System.DateTime)
    commentId: M:System.Globalization.Calendar.GetHour(System.DateTime)
  - type: System.Globalization.Calendar.GetMinute(System.DateTime)
    commentId: M:System.Globalization.Calendar.GetMinute(System.DateTime)
  - type: System.Globalization.Calendar.GetSecond(System.DateTime)
    commentId: M:System.Globalization.Calendar.GetSecond(System.DateTime)
  - type: System.Globalization.Calendar.GetMilliseconds(System.DateTime)
    commentId: M:System.Globalization.Calendar.GetMilliseconds(System.DateTime)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Globalization.HijriCalendar.IsLeapDay(System.Int32,System.Int32,System.Int32,System.Int32)
  commentId: M:System.Globalization.HijriCalendar.IsLeapDay(System.Int32,System.Int32,System.Int32,System.Int32)
  id: IsLeapDay(System.Int32,System.Int32,System.Int32,System.Int32)
  parent: System.Globalization.HijriCalendar
  langs:
  - csharp
  - vb
  name: IsLeapDay(Int32, Int32, Int32, Int32)
  fullName: System.Globalization.HijriCalendar.IsLeapDay(System.Int32, System.Int32, System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Globalization.Calendars/ref/System.Globalization.Calendars.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IsLeapDay
    path: src/System.Globalization.Calendars/ref/System.Globalization.Calendars.cs
    startLine: 123
  assemblies:
  - System.Globalization.Calendars
  namespace: System.Globalization
  summary: "\n<p>Determines whether the specified date is a leap day.</p>\n"
  remarks: "\n<p>In every 30-year cycle that ends with a year that is evenly divisible by 30, the 2nd, 5th, 7th, 10th, 13th, 16th, 18th, 21st, 24th, 26th, and 29th years are leap years. A common year has 354 days and a leap year has 355 days.</p>\n<p>A leap day is a day that occurs only in a leap year. In the Hijri calendar, the 30th day of Zulhijjah is the only leap day.</p>\n"
  example:
  - "\n<p>The following code example calls the <code>IsLeapDay</code> method for the last day of the second month (February) for five years in each of the eras.</p>System.Globalization.HijriCalendar.IsLeapDay#1"
  syntax:
    content: public override bool IsLeapDay(int year, int month, int day, int era)
    content.vb: Public Overrides Function IsLeapDay(year As Integer, month As Integer, day As Integer, era As Integer) As Boolean
    parameters:
    - id: year
      type: System.Int32
      description: "\n<p>An integer that represents the year. </p>\n"
    - id: month
      type: System.Int32
      description: "\n<p>An integer from 1 to 12 that represents the month. </p>\n"
    - id: day
      type: System.Int32
      description: "\n<p>An integer from 1 to 30 that represents the day. </p>\n"
    - id: era
      type: System.Int32
      description: "\n<p>An integer that represents the era. </p>\n"
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if the specified day is a leap day; otherwise, <strong>false</strong>.</p>\n"
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>\n<em>era</em> is outside the range supported by this calendar. </p>\n<p>-or- </p>\n<p>\n<em>year</em> is outside the range supported by this calendar.</p>\n<p>-or- </p>\n<p>\n<em>month</em> is outside the range supported by this calendar.</p>\n<p>-or- </p>\n<p>\n<em>day</em> is outside the range supported by this calendar. </p>\n"
  seealso:
  - type: System.Globalization.Calendar.CurrentEra
    commentId: F:System.Globalization.Calendar.CurrentEra
  - type: System.Globalization.HijriCalendar.HijriEra
    commentId: F:System.Globalization.HijriCalendar.HijriEra
  - type: System.Globalization.HijriCalendar.Eras
    commentId: P:System.Globalization.HijriCalendar.Eras
  - type: System.Globalization.HijriCalendar.GetMonthsInYear(System.Int32,System.Int32)
    commentId: M:System.Globalization.HijriCalendar.GetMonthsInYear(System.Int32,System.Int32)
  - type: System.Globalization.HijriCalendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)
    commentId: M:System.Globalization.HijriCalendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)
  - type: System.Globalization.HijriCalendar.IsLeapYear(System.Int32,System.Int32)
    commentId: M:System.Globalization.HijriCalendar.IsLeapYear(System.Int32,System.Int32)
  - type: System.Globalization.HijriCalendar.IsLeapMonth(System.Int32,System.Int32,System.Int32)
    commentId: M:System.Globalization.HijriCalendar.IsLeapMonth(System.Int32,System.Int32,System.Int32)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Globalization.HijriCalendar.IsLeapMonth(System.Int32,System.Int32,System.Int32)
  commentId: M:System.Globalization.HijriCalendar.IsLeapMonth(System.Int32,System.Int32,System.Int32)
  id: IsLeapMonth(System.Int32,System.Int32,System.Int32)
  parent: System.Globalization.HijriCalendar
  langs:
  - csharp
  - vb
  name: IsLeapMonth(Int32, Int32, Int32)
  fullName: System.Globalization.HijriCalendar.IsLeapMonth(System.Int32, System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Globalization.Calendars/ref/System.Globalization.Calendars.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IsLeapMonth
    path: src/System.Globalization.Calendars/ref/System.Globalization.Calendars.cs
    startLine: 124
  assemblies:
  - System.Globalization.Calendars
  namespace: System.Globalization
  summary: "\n<p>Determines whether the specified month in the specified year and era is a leap month.</p>\n"
  remarks: "\n<p>In every 30-year cycle that ends with a year that is evenly divisible by 30, the 2nd, 5th, 7th, 10th, 13th, 16th, 18th, 21st, 24th, 26th, and 29th years are leap years. A common year has 354 days and a leap year has 355 days.</p>\n<p>A leap month is an entire month that occurs only in a leap year. The Hijri calendar does not have any leap months.</p>\n"
  example:
  - "\n<p>The following code example calls <code>IsLeapMonth</code> for all the months in five years in the current era.</p>System.Globalization.HijriCalendar.IsLeapMonth#1"
  syntax:
    content: public override bool IsLeapMonth(int year, int month, int era)
    content.vb: Public Overrides Function IsLeapMonth(year As Integer, month As Integer, era As Integer) As Boolean
    parameters:
    - id: year
      type: System.Int32
      description: "\n<p>An integer that represents the year. </p>\n"
    - id: month
      type: System.Int32
      description: "\n<p>An integer from 1 to 12 that represents the month. </p>\n"
    - id: era
      type: System.Int32
      description: "\n<p>An integer that represents the era. </p>\n"
    return:
      type: System.Boolean
      description: "\n<p>This method always returns <strong>false</strong>.</p>\n"
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>\n<em>era</em> is outside the range supported by this calendar. </p>\n<p>-or- </p>\n<p>\n<em>year</em> is outside the range supported by this calendar.</p>\n<p>-or- </p>\n<p>\n<em>month</em> is outside the range supported by this calendar. </p>\n"
  seealso:
  - type: System.Globalization.Calendar.CurrentEra
    commentId: F:System.Globalization.Calendar.CurrentEra
  - type: System.Globalization.HijriCalendar.HijriEra
    commentId: F:System.Globalization.HijriCalendar.HijriEra
  - type: System.Globalization.HijriCalendar.Eras
    commentId: P:System.Globalization.HijriCalendar.Eras
  - type: System.Globalization.HijriCalendar.GetMonthsInYear(System.Int32,System.Int32)
    commentId: M:System.Globalization.HijriCalendar.GetMonthsInYear(System.Int32,System.Int32)
  - type: System.Globalization.HijriCalendar.IsLeapYear(System.Int32,System.Int32)
    commentId: M:System.Globalization.HijriCalendar.IsLeapYear(System.Int32,System.Int32)
  - type: System.Globalization.HijriCalendar.IsLeapDay(System.Int32,System.Int32,System.Int32,System.Int32)
    commentId: M:System.Globalization.HijriCalendar.IsLeapDay(System.Int32,System.Int32,System.Int32,System.Int32)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Globalization.HijriCalendar.IsLeapYear(System.Int32,System.Int32)
  commentId: M:System.Globalization.HijriCalendar.IsLeapYear(System.Int32,System.Int32)
  id: IsLeapYear(System.Int32,System.Int32)
  parent: System.Globalization.HijriCalendar
  langs:
  - csharp
  - vb
  name: IsLeapYear(Int32, Int32)
  fullName: System.Globalization.HijriCalendar.IsLeapYear(System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Globalization.Calendars/ref/System.Globalization.Calendars.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IsLeapYear
    path: src/System.Globalization.Calendars/ref/System.Globalization.Calendars.cs
    startLine: 125
  assemblies:
  - System.Globalization.Calendars
  namespace: System.Globalization
  summary: "\n<p>Determines whether the specified year in the specified era is a leap year.</p>\n"
  remarks: "\n<p>In every 30-year cycle that ends with a year that is evenly divisible by 30, the 2nd, 5th, 7th, 10th, 13th, 16th, 18th, 21st, 24th, 26th, and 29th years are leap years. A common year has 354 days and a leap year has 355 days.</p>\n"
  example:
  - "\n<p>The following code example calls the <code>IsLeapYear</code> method for five years in each of the eras.</p>System.Globalization.HijriCalendar.IsLeapYear#1"
  syntax:
    content: public override bool IsLeapYear(int year, int era)
    content.vb: Public Overrides Function IsLeapYear(year As Integer, era As Integer) As Boolean
    parameters:
    - id: year
      type: System.Int32
      description: "\n<p>An integer that represents the year. </p>\n"
    - id: era
      type: System.Int32
      description: "\n<p>An integer that represents the era. </p>\n"
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if the specified year is a leap year; otherwise, <strong>false</strong>.</p>\n"
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>\n<em>era</em> is outside the range supported by this calendar. </p>\n<p>-or- </p>\n<p>\n<em>year</em> is outside the range supported by this calendar. </p>\n"
  seealso:
  - type: System.Globalization.Calendar.CurrentEra
    commentId: F:System.Globalization.Calendar.CurrentEra
  - type: System.Globalization.HijriCalendar.HijriEra
    commentId: F:System.Globalization.HijriCalendar.HijriEra
  - type: System.Globalization.HijriCalendar.Eras
    commentId: P:System.Globalization.HijriCalendar.Eras
  - type: System.Globalization.HijriCalendar.IsLeapMonth(System.Int32,System.Int32,System.Int32)
    commentId: M:System.Globalization.HijriCalendar.IsLeapMonth(System.Int32,System.Int32,System.Int32)
  - type: System.Globalization.HijriCalendar.IsLeapDay(System.Int32,System.Int32,System.Int32,System.Int32)
    commentId: M:System.Globalization.HijriCalendar.IsLeapDay(System.Int32,System.Int32,System.Int32,System.Int32)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Globalization.HijriCalendar.ToDateTime(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  commentId: M:System.Globalization.HijriCalendar.ToDateTime(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  id: ToDateTime(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  parent: System.Globalization.HijriCalendar
  langs:
  - csharp
  - vb
  name: ToDateTime(Int32, Int32, Int32, Int32, Int32, Int32, Int32, Int32)
  fullName: System.Globalization.HijriCalendar.ToDateTime(System.Int32, System.Int32, System.Int32, System.Int32, System.Int32, System.Int32, System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Globalization.Calendars/ref/System.Globalization.Calendars.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ToDateTime
    path: src/System.Globalization.Calendars/ref/System.Globalization.Calendars.cs
    startLine: 126
  assemblies:
  - System.Globalization.Calendars
  namespace: System.Globalization
  summary: "\n<p>Returns a <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> that is set to the specified date, time, and era.</p>\n"
  syntax:
    content: public override DateTime ToDateTime(int year, int month, int day, int hour, int minute, int second, int millisecond, int era)
    content.vb: Public Overrides Function ToDateTime(year As Integer, month As Integer, day As Integer, hour As Integer, minute As Integer, second As Integer, millisecond As Integer, era As Integer) As DateTime
    parameters:
    - id: year
      type: System.Int32
      description: "\n<p>An integer that represents the year. </p>\n"
    - id: month
      type: System.Int32
      description: "\n<p>An integer from 1 to 12 that represents the month. </p>\n"
    - id: day
      type: System.Int32
      description: "\n<p>An integer from 1 to 30 that represents the day. </p>\n"
    - id: hour
      type: System.Int32
      description: "\n<p>An integer from 0 to 23 that represents the hour. </p>\n"
    - id: minute
      type: System.Int32
      description: "\n<p>An integer from 0 to 59 that represents the minute. </p>\n"
    - id: second
      type: System.Int32
      description: "\n<p>An integer from 0 to 59 that represents the second. </p>\n"
    - id: millisecond
      type: System.Int32
      description: "\n<p>An integer from 0 to 999 that represents the millisecond. </p>\n"
    - id: era
      type: System.Int32
      description: "\n<p>An integer that represents the era. </p>\n"
    return:
      type: System.DateTime
      description: "\n<p>The <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> that is set to the specified date and time in the current era.</p>\n"
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>\n<em>era</em> is outside the range supported by this calendar. </p>\n<p>-or- </p>\n<p>\n<em>year</em> is outside the range supported by this calendar.</p>\n<p>-or- </p>\n<p>\n<em>month</em> is outside the range supported by this calendar.</p>\n<p>-or- </p>\n<p>\n<em>day</em> is outside the range supported by this calendar.</p>\n<p>-or- </p>\n<p>\n<em>hour</em> is less than zero or greater than 23.</p>\n<p>-or- </p>\n<p>\n<em>minute</em> is less than zero or greater than 59.</p>\n<p>-or- </p>\n<p>\n<em>second</em> is less than zero or greater than 59.</p>\n<p>-or- </p>\n<p>\n<em>millisecond</em> is less than zero or greater than 999. </p>\n"
  seealso:
  - type: System.DateTime
    commentId: T:System.DateTime
  - type: System.Globalization.Calendar.CurrentEra
    commentId: F:System.Globalization.Calendar.CurrentEra
  - type: System.Globalization.HijriCalendar.HijriEra
    commentId: F:System.Globalization.HijriCalendar.HijriEra
  - type: System.Globalization.HijriCalendar.Eras
    commentId: P:System.Globalization.HijriCalendar.Eras
  - type: System.Globalization.HijriCalendar.GetMonthsInYear(System.Int32,System.Int32)
    commentId: M:System.Globalization.HijriCalendar.GetMonthsInYear(System.Int32,System.Int32)
  - type: System.Globalization.HijriCalendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)
    commentId: M:System.Globalization.HijriCalendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Globalization.HijriCalendar.ToFourDigitYear(System.Int32)
  commentId: M:System.Globalization.HijriCalendar.ToFourDigitYear(System.Int32)
  id: ToFourDigitYear(System.Int32)
  parent: System.Globalization.HijriCalendar
  langs:
  - csharp
  - vb
  name: ToFourDigitYear(Int32)
  fullName: System.Globalization.HijriCalendar.ToFourDigitYear(System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Globalization.Calendars/ref/System.Globalization.Calendars.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ToFourDigitYear
    path: src/System.Globalization.Calendars/ref/System.Globalization.Calendars.cs
    startLine: 127
  assemblies:
  - System.Globalization.Calendars
  namespace: System.Globalization
  summary: "\n<p>Converts the specified year to a four-digit year by using the <xref href=\"System.Globalization.HijriCalendar.TwoDigitYearMax\" data-throw-if-not-resolved=\"false\"></xref> property to determine the appropriate century.</p>\n"
  remarks: "\n<p>\n<xref href=\"System.Globalization.HijriCalendar.TwoDigitYearMax\" data-throw-if-not-resolved=\"false\"></xref> is the last year in the 100-year range that can be represented by a two-digit year. The century is determined by finding the sole occurrence of the two-digit <em>year</em> within that 100-year range. For example, if <xref href=\"System.Globalization.HijriCalendar.TwoDigitYearMax\" data-throw-if-not-resolved=\"false\"></xref> is set to 1429, the 100-year range is from 1330 to 1429; therefore, a 2-digit value of 30 is interpreted as 1330, while a 2-digit value of 29 is interpreted as 1429.</p>\n<p>\n<xref href=\"System.Globalization.HijriCalendar.ToFourDigitYear(System.Int32)\" data-throw-if-not-resolved=\"false\"></xref> supports either a two-digit year or a four-digit year. Passing a two-digit year value (less than 100) causes the method to convert the value to a four-digit value according to the <xref href=\"System.Globalization.HijriCalendar.TwoDigitYearMax\" data-throw-if-not-resolved=\"false\"></xref> value representing the appropriate century. If the application supplies a four-digit year value that is within the supported calendar range to <xref href=\"System.Globalization.HijriCalendar.ToFourDigitYear(System.Int32)\" data-throw-if-not-resolved=\"false\"></xref>, the method returns the actual input value. If the application supplies a four-digit value that is outside the supported calendar range, or if it supplies a negative value, the method throws an exception.</p>\n"
  syntax:
    content: public override int ToFourDigitYear(int year)
    content.vb: Public Overrides Function ToFourDigitYear(year As Integer) As Integer
    parameters:
    - id: year
      type: System.Int32
      description: "\n<p>A two-digit or four-digit integer that represents the year to convert. </p>\n"
    return:
      type: System.Int32
      description: "\n<p>An integer that contains the four-digit representation of <em>year</em>.</p>\n"
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>\n<em>year</em> is outside the range supported by this calendar. </p>\n"
  seealso:
  - type: System.Globalization.HijriCalendar.TwoDigitYearMax
    commentId: P:System.Globalization.HijriCalendar.TwoDigitYearMax
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: System.Globalization
  isExternal: false
  name: System.Globalization
  fullName: System.Globalization
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Int32[]
  isExternal: false
  name: Int32[]
  fullName: System.Int32[]
  fullname.vb: System.Int32()
  name.vb: Int32()
  spec.csharp:
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
  - name: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
  - name: ()
    fullName: ()
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  fullName: System.Int32
- uid: System.DateTime
  parent: System
  isExternal: false
  name: DateTime
  fullName: System.DateTime
- uid: System.DayOfWeek
  parent: System
  isExternal: false
  name: DayOfWeek
  fullName: System.DayOfWeek
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  fullName: System.Boolean
- uid: System.ArgumentOutOfRangeException
  isExternal: false
  name: ArgumentOutOfRangeException
  fullName: System.ArgumentOutOfRangeException
- uid: System.InvalidOperationException
  parent: System
  isExternal: false
  name: InvalidOperationException
  fullName: System.InvalidOperationException
- uid: System.ArgumentException
  parent: System
  isExternal: false
  name: ArgumentException
  fullName: System.ArgumentException
