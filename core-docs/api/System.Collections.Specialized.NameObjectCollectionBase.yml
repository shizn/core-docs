items:
- uid: System.Collections.Specialized.NameObjectCollectionBase
  commentId: T:System.Collections.Specialized.NameObjectCollectionBase
  id: NameObjectCollectionBase
  parent: System.Collections.Specialized
  children:
  - System.Collections.Specialized.NameObjectCollectionBase.#ctor
  - System.Collections.Specialized.NameObjectCollectionBase.#ctor(System.Collections.IEqualityComparer)
  - System.Collections.Specialized.NameObjectCollectionBase.#ctor(System.Int32)
  - System.Collections.Specialized.NameObjectCollectionBase.#ctor(System.Int32,System.Collections.IEqualityComparer)
  - System.Collections.Specialized.NameObjectCollectionBase.BaseAdd(System.String,System.Object)
  - System.Collections.Specialized.NameObjectCollectionBase.BaseClear
  - System.Collections.Specialized.NameObjectCollectionBase.BaseGet(System.Int32)
  - System.Collections.Specialized.NameObjectCollectionBase.BaseGet(System.String)
  - System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllKeys
  - System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllValues
  - System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllValues(System.Type)
  - System.Collections.Specialized.NameObjectCollectionBase.BaseGetKey(System.Int32)
  - System.Collections.Specialized.NameObjectCollectionBase.BaseHasKeys
  - System.Collections.Specialized.NameObjectCollectionBase.BaseRemove(System.String)
  - System.Collections.Specialized.NameObjectCollectionBase.BaseRemoveAt(System.Int32)
  - System.Collections.Specialized.NameObjectCollectionBase.BaseSet(System.Int32,System.Object)
  - System.Collections.Specialized.NameObjectCollectionBase.BaseSet(System.String,System.Object)
  - System.Collections.Specialized.NameObjectCollectionBase.Count
  - System.Collections.Specialized.NameObjectCollectionBase.GetEnumerator
  - System.Collections.Specialized.NameObjectCollectionBase.IsReadOnly
  - System.Collections.Specialized.NameObjectCollectionBase.Keys
  langs:
  - csharp
  - vb
  name: NameObjectCollectionBase
  fullName: System.Collections.Specialized.NameObjectCollectionBase
  type: Class
  source:
    remote:
      path: src/System.Collections.Specialized/src/System/Collections/Specialized/NameObjectCollectionBase.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: NameObjectCollectionBase
    path: src/System.Collections.Specialized/src/System/Collections/Specialized/NameObjectCollectionBase.cs
    startLine: 20
  assemblies:
  - System.Collections.Specialized
  namespace: System.Collections.Specialized
  summary: Provides the abstract base class for a collection of associated <xref href="System.String" data-throw-if-not-resolved="false"></xref> keys and <xref href="System.Object" data-throw-if-not-resolved="false"></xref> values that can be accessed either with the key or with the index.
  syntax:
    content: 'public abstract class NameObjectCollectionBase : ICollection, IEnumerable'
    content.vb: >-
      Public MustInherit Class NameObjectCollectionBase
          Inherits ICollection
          Implements IEnumerable
  inheritance:
  - System.Object
  implements:
  - System.Collections.IEnumerable
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: System.Collections.Specialized.NameObjectCollectionBase.#ctor
  commentId: M:System.Collections.Specialized.NameObjectCollectionBase.#ctor
  id: '#ctor'
  parent: System.Collections.Specialized.NameObjectCollectionBase
  langs:
  - csharp
  - vb
  name: NameObjectCollectionBase()
  fullName: System.Collections.Specialized.NameObjectCollectionBase.NameObjectCollectionBase()
  type: Constructor
  source:
    remote:
      path: src/System.Collections.Specialized/src/System/Collections/Specialized/NameObjectCollectionBase.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Collections.Specialized/src/System/Collections/Specialized/NameObjectCollectionBase.cs
    startLine: 37
  assemblies:
  - System.Collections.Specialized
  namespace: System.Collections.Specialized
  summary: Initializes a new instance of the <xref href="System.Collections.Specialized.NameObjectCollectionBase" data-throw-if-not-resolved="false"></xref> class that is empty.
  syntax:
    content: protected NameObjectCollectionBase()
    content.vb: Protected Sub New
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: System.Collections.Specialized.NameObjectCollectionBase.#ctor(System.Collections.IEqualityComparer)
  commentId: M:System.Collections.Specialized.NameObjectCollectionBase.#ctor(System.Collections.IEqualityComparer)
  id: '#ctor(System.Collections.IEqualityComparer)'
  parent: System.Collections.Specialized.NameObjectCollectionBase
  langs:
  - csharp
  - vb
  name: NameObjectCollectionBase(IEqualityComparer)
  fullName: System.Collections.Specialized.NameObjectCollectionBase.NameObjectCollectionBase(System.Collections.IEqualityComparer)
  type: Constructor
  source:
    remote:
      path: src/System.Collections.Specialized/ref/System.Collections.Specialized.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Collections.Specialized/ref/System.Collections.Specialized.cs
    startLine: 92
  assemblies:
  - System.Collections.Specialized
  namespace: System.Collections.Specialized
  summary: Initializes a new instance of the <xref href="System.Collections.Specialized.NameObjectCollectionBase" data-throw-if-not-resolved="false"></xref> class that is empty, has the default initial capacity, and uses the specified <xref href="System.Collections.IEqualityComparer" data-throw-if-not-resolved="false"></xref> object.
  syntax:
    content: protected NameObjectCollectionBase(IEqualityComparer equalityComparer)
    content.vb: Protected Sub New(equalityComparer As IEqualityComparer)
    parameters:
    - id: equalityComparer
      type: System.Collections.IEqualityComparer
      description: The <xref href="System.Collections.IEqualityComparer" data-throw-if-not-resolved="false"></xref> object to use to determine whether two keys are equal and to generate hash codes for the keys in the collection.
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: System.Collections.Specialized.NameObjectCollectionBase.#ctor(System.Int32)
  commentId: M:System.Collections.Specialized.NameObjectCollectionBase.#ctor(System.Int32)
  id: '#ctor(System.Int32)'
  parent: System.Collections.Specialized.NameObjectCollectionBase
  langs:
  - csharp
  - vb
  name: NameObjectCollectionBase(Int32)
  fullName: System.Collections.Specialized.NameObjectCollectionBase.NameObjectCollectionBase(System.Int32)
  type: Constructor
  source:
    remote:
      path: src/System.Collections.Specialized/src/System/Collections/Specialized/NameObjectCollectionBase.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Collections.Specialized/src/System/Collections/Specialized/NameObjectCollectionBase.cs
    startLine: 57
  assemblies:
  - System.Collections.Specialized
  namespace: System.Collections.Specialized
  summary: Initializes a new instance of the <xref href="System.Collections.Specialized.NameObjectCollectionBase" data-throw-if-not-resolved="false"></xref> class that is empty, has the specified initial capacity, and uses the default hash code provider and the default comparer.
  syntax:
    content: protected NameObjectCollectionBase(int capacity)
    content.vb: Protected Sub New(capacity As Integer)
    parameters:
    - id: capacity
      type: System.Int32
      description: The approximate number of entries that the <xref href="System.Collections.Specialized.NameObjectCollectionBase" data-throw-if-not-resolved="false"></xref> instance can initially contain.
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<em>capacity</em> is less than zero. "
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: System.Collections.Specialized.NameObjectCollectionBase.#ctor(System.Int32,System.Collections.IEqualityComparer)
  commentId: M:System.Collections.Specialized.NameObjectCollectionBase.#ctor(System.Int32,System.Collections.IEqualityComparer)
  id: '#ctor(System.Int32,System.Collections.IEqualityComparer)'
  parent: System.Collections.Specialized.NameObjectCollectionBase
  langs:
  - csharp
  - vb
  name: NameObjectCollectionBase(Int32, IEqualityComparer)
  fullName: System.Collections.Specialized.NameObjectCollectionBase.NameObjectCollectionBase(System.Int32, System.Collections.IEqualityComparer)
  type: Constructor
  source:
    remote:
      path: src/System.Collections.Specialized/ref/System.Collections.Specialized.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Collections.Specialized/ref/System.Collections.Specialized.cs
    startLine: 94
  assemblies:
  - System.Collections.Specialized
  namespace: System.Collections.Specialized
  summary: Initializes a new instance of the <xref href="System.Collections.Specialized.NameObjectCollectionBase" data-throw-if-not-resolved="false"></xref> class that is empty, has the specified initial capacity, and uses the specified <xref href="System.Collections.IEqualityComparer" data-throw-if-not-resolved="false"></xref> object.
  syntax:
    content: protected NameObjectCollectionBase(int capacity, IEqualityComparer equalityComparer)
    content.vb: Protected Sub New(capacity As Integer, equalityComparer As IEqualityComparer)
    parameters:
    - id: capacity
      type: System.Int32
      description: The approximate number of entries that the <xref href="System.Collections.Specialized.NameObjectCollectionBase" data-throw-if-not-resolved="false"></xref> object can initially contain.
    - id: equalityComparer
      type: System.Collections.IEqualityComparer
      description: The <xref href="System.Collections.IEqualityComparer" data-throw-if-not-resolved="false"></xref> object to use to determine whether two keys are equal and to generate hash codes for the keys in the collection.
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<em>capacity</em> is less than zero."
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: System.Collections.Specialized.NameObjectCollectionBase.Count
  commentId: P:System.Collections.Specialized.NameObjectCollectionBase.Count
  id: Count
  parent: System.Collections.Specialized.NameObjectCollectionBase
  langs:
  - csharp
  - vb
  name: Count
  fullName: System.Collections.Specialized.NameObjectCollectionBase.Count
  type: Property
  source:
    remote:
      path: src/System.Collections.Specialized/src/System/Collections/Specialized/NameObjectCollectionBase.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Count
    path: src/System.Collections.Specialized/src/System/Collections/Specialized/NameObjectCollectionBase.cs
    startLine: 322
  assemblies:
  - System.Collections.Specialized
  namespace: System.Collections.Specialized
  summary: Gets the number of key/value pairs contained in the <xref href="System.Collections.Specialized.NameObjectCollectionBase" data-throw-if-not-resolved="false"></xref> instance.
  syntax:
    content: public virtual int Count { get; }
    content.vb: Public Overridable ReadOnly Property Count As Integer
    parameters: []
    return:
      type: System.Int32
      description: The number of key/value pairs contained in the <xref href="System.Collections.Specialized.NameObjectCollectionBase" data-throw-if-not-resolved="false"></xref> instance.
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: System.Collections.Specialized.NameObjectCollectionBase.IsReadOnly
  commentId: P:System.Collections.Specialized.NameObjectCollectionBase.IsReadOnly
  id: IsReadOnly
  parent: System.Collections.Specialized.NameObjectCollectionBase
  langs:
  - csharp
  - vb
  name: IsReadOnly
  fullName: System.Collections.Specialized.NameObjectCollectionBase.IsReadOnly
  type: Property
  source:
    remote:
      path: src/System.Collections.Specialized/src/System/Collections/Specialized/NameObjectCollectionBase.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IsReadOnly
    path: src/System.Collections.Specialized/src/System/Collections/Specialized/NameObjectCollectionBase.cs
    startLine: 107
  assemblies:
  - System.Collections.Specialized
  namespace: System.Collections.Specialized
  summary: Gets or sets a value indicating whether the <xref href="System.Collections.Specialized.NameObjectCollectionBase" data-throw-if-not-resolved="false"></xref> instance is read-only.
  syntax:
    content: protected bool IsReadOnly { get; set; }
    content.vb: Protected Property IsReadOnly As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: true if the <xref href="System.Collections.Specialized.NameObjectCollectionBase" data-throw-if-not-resolved="false"></xref> instance is read-only; otherwise, false.
  modifiers.csharp:
  - protected
  - get
  - set
  modifiers.vb:
  - Protected
- uid: System.Collections.Specialized.NameObjectCollectionBase.Keys
  commentId: P:System.Collections.Specialized.NameObjectCollectionBase.Keys
  id: Keys
  parent: System.Collections.Specialized.NameObjectCollectionBase
  langs:
  - csharp
  - vb
  name: Keys
  fullName: System.Collections.Specialized.NameObjectCollectionBase.Keys
  type: Property
  source:
    remote:
      path: src/System.Collections.Specialized/src/System/Collections/Specialized/NameObjectCollectionBase.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Keys
    path: src/System.Collections.Specialized/src/System/Collections/Specialized/NameObjectCollectionBase.cs
    startLine: 436
  assemblies:
  - System.Collections.Specialized
  namespace: System.Collections.Specialized
  summary: Gets a <xref href="System.Collections.Specialized.NameObjectCollectionBase.KeysCollection" data-throw-if-not-resolved="false"></xref> instance that contains all the keys in the <xref href="System.Collections.Specialized.NameObjectCollectionBase" data-throw-if-not-resolved="false"></xref> instance.
  syntax:
    content: public virtual NameObjectCollectionBase.KeysCollection Keys { get; }
    content.vb: Public Overridable ReadOnly Property Keys As NameObjectCollectionBase.KeysCollection
    parameters: []
    return:
      type: System.Collections.Specialized.NameObjectCollectionBase.KeysCollection
      description: A <xref href="System.Collections.Specialized.NameObjectCollectionBase.KeysCollection" data-throw-if-not-resolved="false"></xref> instance that contains all the keys in the <xref href="System.Collections.Specialized.NameObjectCollectionBase" data-throw-if-not-resolved="false"></xref> instance.
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: System.Collections.Specialized.NameObjectCollectionBase.BaseAdd(System.String,System.Object)
  commentId: M:System.Collections.Specialized.NameObjectCollectionBase.BaseAdd(System.String,System.Object)
  id: BaseAdd(System.String,System.Object)
  parent: System.Collections.Specialized.NameObjectCollectionBase
  langs:
  - csharp
  - vb
  name: BaseAdd(String, Object)
  fullName: System.Collections.Specialized.NameObjectCollectionBase.BaseAdd(System.String, System.Object)
  type: Method
  source:
    remote:
      path: src/System.Collections.Specialized/ref/System.Collections.Specialized.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: BaseAdd
    path: src/System.Collections.Specialized/ref/System.Collections.Specialized.cs
    startLine: 100
  assemblies:
  - System.Collections.Specialized
  namespace: System.Collections.Specialized
  summary: Adds an entry with the specified key and value into the <xref href="System.Collections.Specialized.NameObjectCollectionBase" data-throw-if-not-resolved="false"></xref> instance.
  syntax:
    content: protected void BaseAdd(string name, object value)
    content.vb: Protected Sub BaseAdd(name As String, value As Object)
    parameters:
    - id: name
      type: System.String
      description: The <xref href="System.String" data-throw-if-not-resolved="false"></xref> key of the entry to add. The key can be null.
    - id: value
      type: System.Object
      description: The <xref href="System.Object" data-throw-if-not-resolved="false"></xref> value of the entry to add. The value can be null.
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: 'The collection is read-only. '
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: System.Collections.Specialized.NameObjectCollectionBase.BaseClear
  commentId: M:System.Collections.Specialized.NameObjectCollectionBase.BaseClear
  id: BaseClear
  parent: System.Collections.Specialized.NameObjectCollectionBase
  langs:
  - csharp
  - vb
  name: BaseClear()
  fullName: System.Collections.Specialized.NameObjectCollectionBase.BaseClear()
  type: Method
  source:
    remote:
      path: src/System.Collections.Specialized/src/System/Collections/Specialized/NameObjectCollectionBase.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: BaseClear
    path: src/System.Collections.Specialized/src/System/Collections/Specialized/NameObjectCollectionBase.cs
    startLine: 223
  assemblies:
  - System.Collections.Specialized
  namespace: System.Collections.Specialized
  summary: Removes all entries from the <xref href="System.Collections.Specialized.NameObjectCollectionBase" data-throw-if-not-resolved="false"></xref> instance.
  syntax:
    content: protected void BaseClear()
    content.vb: Protected Sub BaseClear
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: The collection is read-only.
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: System.Collections.Specialized.NameObjectCollectionBase.BaseGet(System.Int32)
  commentId: M:System.Collections.Specialized.NameObjectCollectionBase.BaseGet(System.Int32)
  id: BaseGet(System.Int32)
  parent: System.Collections.Specialized.NameObjectCollectionBase
  langs:
  - csharp
  - vb
  name: BaseGet(Int32)
  fullName: System.Collections.Specialized.NameObjectCollectionBase.BaseGet(System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Collections.Specialized/src/System/Collections/Specialized/NameObjectCollectionBase.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: BaseGet
    path: src/System.Collections.Specialized/src/System/Collections/Specialized/NameObjectCollectionBase.cs
    startLine: 276
  assemblies:
  - System.Collections.Specialized
  namespace: System.Collections.Specialized
  summary: Gets the value of the entry at the specified index of the <xref href="System.Collections.Specialized.NameObjectCollectionBase" data-throw-if-not-resolved="false"></xref> instance.
  syntax:
    content: protected object BaseGet(int index)
    content.vb: Protected Function BaseGet(index As Integer) As Object
    parameters:
    - id: index
      type: System.Int32
      description: The zero-based index of the value to get.
    return:
      type: System.Object
      description: An <xref href="System.Object" data-throw-if-not-resolved="false"></xref> that represents the value of the entry at the specified index.
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<em>index</em> is outside the valid range of indexes for the collection. "
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: System.Collections.Specialized.NameObjectCollectionBase.BaseGet(System.String)
  commentId: M:System.Collections.Specialized.NameObjectCollectionBase.BaseGet(System.String)
  id: BaseGet(System.String)
  parent: System.Collections.Specialized.NameObjectCollectionBase
  langs:
  - csharp
  - vb
  name: BaseGet(String)
  fullName: System.Collections.Specialized.NameObjectCollectionBase.BaseGet(System.String)
  type: Method
  source:
    remote:
      path: src/System.Collections.Specialized/ref/System.Collections.Specialized.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: BaseGet
    path: src/System.Collections.Specialized/ref/System.Collections.Specialized.cs
    startLine: 103
  assemblies:
  - System.Collections.Specialized
  namespace: System.Collections.Specialized
  summary: Gets the value of the first entry with the specified key from the <xref href="System.Collections.Specialized.NameObjectCollectionBase" data-throw-if-not-resolved="false"></xref> instance.
  syntax:
    content: protected object BaseGet(string name)
    content.vb: Protected Function BaseGet(name As String) As Object
    parameters:
    - id: name
      type: System.String
      description: The <xref href="System.String" data-throw-if-not-resolved="false"></xref> key of the entry to get. The key can be null.
    return:
      type: System.Object
      description: An <xref href="System.Object" data-throw-if-not-resolved="false"></xref> that represents the value of the first entry with the specified key, if found; otherwise, null.
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllKeys
  commentId: M:System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllKeys
  id: BaseGetAllKeys
  parent: System.Collections.Specialized.NameObjectCollectionBase
  langs:
  - csharp
  - vb
  name: BaseGetAllKeys()
  fullName: System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllKeys()
  type: Method
  source:
    remote:
      path: src/System.Collections.Specialized/src/System/Collections/Specialized/NameObjectCollectionBase.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: BaseGetAllKeys
    path: src/System.Collections.Specialized/src/System/Collections/Specialized/NameObjectCollectionBase.cs
    startLine: 381
  assemblies:
  - System.Collections.Specialized
  namespace: System.Collections.Specialized
  summary: Returns a <xref href="System.String" data-throw-if-not-resolved="false"></xref> array that contains all the keys in the <xref href="System.Collections.Specialized.NameObjectCollectionBase" data-throw-if-not-resolved="false"></xref> instance.
  syntax:
    content: protected string[] BaseGetAllKeys()
    content.vb: Protected Function BaseGetAllKeys As String()
    return:
      type: System.String[]
      description: A <xref href="System.String" data-throw-if-not-resolved="false"></xref> array that contains all the keys in the <xref href="System.Collections.Specialized.NameObjectCollectionBase" data-throw-if-not-resolved="false"></xref> instance.
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllValues
  commentId: M:System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllValues
  id: BaseGetAllValues
  parent: System.Collections.Specialized.NameObjectCollectionBase
  langs:
  - csharp
  - vb
  name: BaseGetAllValues()
  fullName: System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllValues()
  type: Method
  source:
    remote:
      path: src/System.Collections.Specialized/src/System/Collections/Specialized/NameObjectCollectionBase.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: BaseGetAllValues
    path: src/System.Collections.Specialized/src/System/Collections/Specialized/NameObjectCollectionBase.cs
    startLine: 396
  assemblies:
  - System.Collections.Specialized
  namespace: System.Collections.Specialized
  summary: Returns an <xref href="System.Object" data-throw-if-not-resolved="false"></xref> array that contains all the values in the <xref href="System.Collections.Specialized.NameObjectCollectionBase" data-throw-if-not-resolved="false"></xref> instance.
  syntax:
    content: protected object[] BaseGetAllValues()
    content.vb: Protected Function BaseGetAllValues As Object()
    return:
      type: System.Object[]
      description: An <xref href="System.Object" data-throw-if-not-resolved="false"></xref> array that contains all the values in the <xref href="System.Collections.Specialized.NameObjectCollectionBase" data-throw-if-not-resolved="false"></xref> instance.
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllValues(System.Type)
  commentId: M:System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllValues(System.Type)
  id: BaseGetAllValues(System.Type)
  parent: System.Collections.Specialized.NameObjectCollectionBase
  langs:
  - csharp
  - vb
  name: BaseGetAllValues(Type)
  fullName: System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllValues(System.Type)
  type: Method
  source:
    remote:
      path: src/System.Collections.Specialized/ref/System.Collections.Specialized.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: BaseGetAllValues
    path: src/System.Collections.Specialized/ref/System.Collections.Specialized.cs
    startLine: 106
  assemblies:
  - System.Collections.Specialized
  namespace: System.Collections.Specialized
  summary: Returns an array of the specified type that contains all the values in the <xref href="System.Collections.Specialized.NameObjectCollectionBase" data-throw-if-not-resolved="false"></xref> instance.
  syntax:
    content: protected object[] BaseGetAllValues(Type type)
    content.vb: Protected Function BaseGetAllValues(type As Type) As Object()
    parameters:
    - id: type
      type: System.Type
      description: A <xref href="System.Type" data-throw-if-not-resolved="false"></xref> that represents the type of array to return.
    return:
      type: System.Object[]
      description: An array of the specified type that contains all the values in the <xref href="System.Collections.Specialized.NameObjectCollectionBase" data-throw-if-not-resolved="false"></xref> instance.
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>type</em> is null. "
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<em>type</em> is not a valid <xref href=\"System.Type\" data-throw-if-not-resolved=\"false\"></xref>. "
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: System.Collections.Specialized.NameObjectCollectionBase.BaseGetKey(System.Int32)
  commentId: M:System.Collections.Specialized.NameObjectCollectionBase.BaseGetKey(System.Int32)
  id: BaseGetKey(System.Int32)
  parent: System.Collections.Specialized.NameObjectCollectionBase
  langs:
  - csharp
  - vb
  name: BaseGetKey(Int32)
  fullName: System.Collections.Specialized.NameObjectCollectionBase.BaseGetKey(System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Collections.Specialized/src/System/Collections/Specialized/NameObjectCollectionBase.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: BaseGetKey
    path: src/System.Collections.Specialized/src/System/Collections/Specialized/NameObjectCollectionBase.cs
    startLine: 287
  assemblies:
  - System.Collections.Specialized
  namespace: System.Collections.Specialized
  summary: Gets the key of the entry at the specified index of the <xref href="System.Collections.Specialized.NameObjectCollectionBase" data-throw-if-not-resolved="false"></xref> instance.
  syntax:
    content: protected string BaseGetKey(int index)
    content.vb: Protected Function BaseGetKey(index As Integer) As String
    parameters:
    - id: index
      type: System.Int32
      description: The zero-based index of the key to get.
    return:
      type: System.String
      description: A <xref href="System.String" data-throw-if-not-resolved="false"></xref> that represents the key of the entry at the specified index.
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<em>index</em> is outside the valid range of indexes for the collection. "
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: System.Collections.Specialized.NameObjectCollectionBase.BaseHasKeys
  commentId: M:System.Collections.Specialized.NameObjectCollectionBase.BaseHasKeys
  id: BaseHasKeys
  parent: System.Collections.Specialized.NameObjectCollectionBase
  langs:
  - csharp
  - vb
  name: BaseHasKeys()
  fullName: System.Collections.Specialized.NameObjectCollectionBase.BaseHasKeys()
  type: Method
  source:
    remote:
      path: src/System.Collections.Specialized/src/System/Collections/Specialized/NameObjectCollectionBase.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: BaseHasKeys
    path: src/System.Collections.Specialized/src/System/Collections/Specialized/NameObjectCollectionBase.cs
    startLine: 117
  assemblies:
  - System.Collections.Specialized
  namespace: System.Collections.Specialized
  summary: Gets a value indicating whether the <xref href="System.Collections.Specialized.NameObjectCollectionBase" data-throw-if-not-resolved="false"></xref> instance contains entries whose keys are not null.
  syntax:
    content: protected bool BaseHasKeys()
    content.vb: Protected Function BaseHasKeys As Boolean
    return:
      type: System.Boolean
      description: true if the <xref href="System.Collections.Specialized.NameObjectCollectionBase" data-throw-if-not-resolved="false"></xref> instance contains entries whose keys are not null; otherwise, false.
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: System.Collections.Specialized.NameObjectCollectionBase.BaseRemove(System.String)
  commentId: M:System.Collections.Specialized.NameObjectCollectionBase.BaseRemove(System.String)
  id: BaseRemove(System.String)
  parent: System.Collections.Specialized.NameObjectCollectionBase
  langs:
  - csharp
  - vb
  name: BaseRemove(String)
  fullName: System.Collections.Specialized.NameObjectCollectionBase.BaseRemove(System.String)
  type: Method
  source:
    remote:
      path: src/System.Collections.Specialized/ref/System.Collections.Specialized.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: BaseRemove
    path: src/System.Collections.Specialized/ref/System.Collections.Specialized.cs
    startLine: 109
  assemblies:
  - System.Collections.Specialized
  namespace: System.Collections.Specialized
  summary: Removes the entries with the specified key from the <xref href="System.Collections.Specialized.NameObjectCollectionBase" data-throw-if-not-resolved="false"></xref> instance.
  syntax:
    content: protected void BaseRemove(string name)
    content.vb: Protected Sub BaseRemove(name As String)
    parameters:
    - id: name
      type: System.String
      description: The <xref href="System.String" data-throw-if-not-resolved="false"></xref> key of the entries to remove. The key can be null.
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: 'The collection is read-only. '
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: System.Collections.Specialized.NameObjectCollectionBase.BaseRemoveAt(System.Int32)
  commentId: M:System.Collections.Specialized.NameObjectCollectionBase.BaseRemoveAt(System.Int32)
  id: BaseRemoveAt(System.Int32)
  parent: System.Collections.Specialized.NameObjectCollectionBase
  langs:
  - csharp
  - vb
  name: BaseRemoveAt(Int32)
  fullName: System.Collections.Specialized.NameObjectCollectionBase.BaseRemoveAt(System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Collections.Specialized/src/System/Collections/Specialized/NameObjectCollectionBase.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: BaseRemoveAt
    path: src/System.Collections.Specialized/src/System/Collections/Specialized/NameObjectCollectionBase.cs
    startLine: 196
  assemblies:
  - System.Collections.Specialized
  namespace: System.Collections.Specialized
  summary: Removes the entry at the specified index of the <xref href="System.Collections.Specialized.NameObjectCollectionBase" data-throw-if-not-resolved="false"></xref> instance.
  syntax:
    content: protected void BaseRemoveAt(int index)
    content.vb: Protected Sub BaseRemoveAt(index As Integer)
    parameters:
    - id: index
      type: System.Int32
      description: The zero-based index of the entry to remove.
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<em>index</em> is outside the valid range of indexes for the collection."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: The collection is read-only.
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: System.Collections.Specialized.NameObjectCollectionBase.BaseSet(System.Int32,System.Object)
  commentId: M:System.Collections.Specialized.NameObjectCollectionBase.BaseSet(System.Int32,System.Object)
  id: BaseSet(System.Int32,System.Object)
  parent: System.Collections.Specialized.NameObjectCollectionBase
  langs:
  - csharp
  - vb
  name: BaseSet(Int32, Object)
  fullName: System.Collections.Specialized.NameObjectCollectionBase.BaseSet(System.Int32, System.Object)
  type: Method
  source:
    remote:
      path: src/System.Collections.Specialized/ref/System.Collections.Specialized.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: BaseSet
    path: src/System.Collections.Specialized/ref/System.Collections.Specialized.cs
    startLine: 111
  assemblies:
  - System.Collections.Specialized
  namespace: System.Collections.Specialized
  summary: Sets the value of the entry at the specified index of the <xref href="System.Collections.Specialized.NameObjectCollectionBase" data-throw-if-not-resolved="false"></xref> instance.
  syntax:
    content: protected void BaseSet(int index, object value)
    content.vb: Protected Sub BaseSet(index As Integer, value As Object)
    parameters:
    - id: index
      type: System.Int32
      description: The zero-based index of the entry to set.
    - id: value
      type: System.Object
      description: The <xref href="System.Object" data-throw-if-not-resolved="false"></xref> that represents the new value of the entry to set. The value can be null.
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: The collection is read-only.
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<em>index</em> is outside the valid range of indexes for the collection."
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: System.Collections.Specialized.NameObjectCollectionBase.BaseSet(System.String,System.Object)
  commentId: M:System.Collections.Specialized.NameObjectCollectionBase.BaseSet(System.String,System.Object)
  id: BaseSet(System.String,System.Object)
  parent: System.Collections.Specialized.NameObjectCollectionBase
  langs:
  - csharp
  - vb
  name: BaseSet(String, Object)
  fullName: System.Collections.Specialized.NameObjectCollectionBase.BaseSet(System.String, System.Object)
  type: Method
  source:
    remote:
      path: src/System.Collections.Specialized/ref/System.Collections.Specialized.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: BaseSet
    path: src/System.Collections.Specialized/ref/System.Collections.Specialized.cs
    startLine: 112
  assemblies:
  - System.Collections.Specialized
  namespace: System.Collections.Specialized
  summary: Sets the value of the first entry with the specified key in the <xref href="System.Collections.Specialized.NameObjectCollectionBase" data-throw-if-not-resolved="false"></xref> instance, if found; otherwise, adds an entry with the specified key and value into the <xref href="System.Collections.Specialized.NameObjectCollectionBase" data-throw-if-not-resolved="false"></xref> instance.
  syntax:
    content: protected void BaseSet(string name, object value)
    content.vb: Protected Sub BaseSet(name As String, value As Object)
    parameters:
    - id: name
      type: System.String
      description: The <xref href="System.String" data-throw-if-not-resolved="false"></xref> key of the entry to set. The key can be null.
    - id: value
      type: System.Object
      description: The <xref href="System.Object" data-throw-if-not-resolved="false"></xref> that represents the new value of the entry to set. The value can be null.
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: 'The collection is read-only. '
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: System.Collections.Specialized.NameObjectCollectionBase.GetEnumerator
  commentId: M:System.Collections.Specialized.NameObjectCollectionBase.GetEnumerator
  id: GetEnumerator
  parent: System.Collections.Specialized.NameObjectCollectionBase
  langs:
  - csharp
  - vb
  name: GetEnumerator()
  fullName: System.Collections.Specialized.NameObjectCollectionBase.GetEnumerator()
  type: Method
  source:
    remote:
      path: src/System.Collections.Specialized/src/System/Collections/Specialized/NameObjectCollectionBase.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetEnumerator
    path: src/System.Collections.Specialized/src/System/Collections/Specialized/NameObjectCollectionBase.cs
    startLine: 314
  assemblies:
  - System.Collections.Specialized
  namespace: System.Collections.Specialized
  summary: Returns an enumerator that iterates through the <xref href="System.Collections.Specialized.NameObjectCollectionBase" data-throw-if-not-resolved="false"></xref>.
  syntax:
    content: public virtual IEnumerator GetEnumerator()
    content.vb: Public Overridable Function GetEnumerator As IEnumerator
    return:
      type: System.Collections.IEnumerator
      description: An <xref href="System.Collections.IEnumerator" data-throw-if-not-resolved="false"></xref> for the <xref href="System.Collections.Specialized.NameObjectCollectionBase" data-throw-if-not-resolved="false"></xref> instance.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
references:
- uid: System.Collections.Specialized
  isExternal: false
  name: System.Collections.Specialized
  fullName: System.Collections.Specialized
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System.Collections.IEnumerable
  parent: System.Collections
  isExternal: false
  name: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Collections
  isExternal: false
  name: System.Collections
  fullName: System.Collections
- uid: System.Collections.IEqualityComparer
  parent: System.Collections
  isExternal: false
  name: IEqualityComparer
  fullName: System.Collections.IEqualityComparer
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  fullName: System.Int32
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  fullName: System.Boolean
- uid: System.Collections.Specialized.NameObjectCollectionBase.KeysCollection
  parent: System.Collections.Specialized
  isExternal: false
  name: NameObjectCollectionBase.KeysCollection
  fullName: System.Collections.Specialized.NameObjectCollectionBase.KeysCollection
- uid: System.String
  parent: System
  isExternal: false
  name: String
  fullName: System.String
- uid: System.String[]
  isExternal: false
  name: String[]
  fullName: System.String[]
  fullname.vb: System.String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: String
    fullName: System.String
  - name: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.String
    name: String
    fullName: System.String
  - name: ()
    fullName: ()
- uid: System.Object[]
  isExternal: false
  name: Object[]
  fullName: System.Object[]
  fullname.vb: System.Object()
  name.vb: Object()
  spec.csharp:
  - uid: System.Object
    name: Object
    fullName: System.Object
  - name: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Object
    name: Object
    fullName: System.Object
  - name: ()
    fullName: ()
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  fullName: System.Type
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: false
  name: Collections.IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.ArgumentOutOfRangeException
  isExternal: false
  name: ArgumentOutOfRangeException
  fullName: System.ArgumentOutOfRangeException
- uid: System.NotSupportedException
  parent: System
  isExternal: false
  name: NotSupportedException
  fullName: System.NotSupportedException
- uid: System.ArgumentNullException
  isExternal: false
  name: ArgumentNullException
  fullName: System.ArgumentNullException
- uid: System.ArgumentException
  parent: System
  isExternal: false
  name: ArgumentException
  fullName: System.ArgumentException
