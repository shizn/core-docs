items:
- uid: System.Security.Principal.IdentityReference
  commentId: T:System.Security.Principal.IdentityReference
  id: IdentityReference
  parent: System.Security.Principal
  children:
  - System.Security.Principal.IdentityReference.Equals(System.Object)
  - System.Security.Principal.IdentityReference.GetHashCode
  - System.Security.Principal.IdentityReference.IsValidTargetType(System.Type)
  - System.Security.Principal.IdentityReference.op_Equality(System.Security.Principal.IdentityReference,System.Security.Principal.IdentityReference)
  - System.Security.Principal.IdentityReference.op_Inequality(System.Security.Principal.IdentityReference,System.Security.Principal.IdentityReference)
  - System.Security.Principal.IdentityReference.ToString
  - System.Security.Principal.IdentityReference.Translate(System.Type)
  - System.Security.Principal.IdentityReference.Value
  langs:
  - csharp
  - vb
  name: IdentityReference
  fullName: System.Security.Principal.IdentityReference
  type: Class
  source:
    remote:
      path: src/System.Security.Principal.Windows/src/System/Security/Principal/IdentityReference.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IdentityReference
    path: src/System.Security.Principal.Windows/src/System/Security/Principal/IdentityReference.cs
    startLine: 6
  assemblies:
  - System.Security.Principal.Windows
  namespace: System.Security.Principal
  summary: "\n<p>Represents an identity and is the base class for the <xref href=\"System.Security.Principal.NTAccount\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"System.Security.Principal.SecurityIdentifier\" data-throw-if-not-resolved=\"false\"></xref> classes. This class does not provide a public constructor, and therefore cannot be inherited.</p>\n"
  example:
  - 
  syntax:
    content: 'public abstract class IdentityReference : object'
    content.vb: >-
      Public MustInherit Class IdentityReference
          Inherits Object
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: System.Security.Principal.IdentityReference.Value
  commentId: P:System.Security.Principal.IdentityReference.Value
  id: Value
  parent: System.Security.Principal.IdentityReference
  langs:
  - csharp
  - vb
  name: Value
  fullName: System.Security.Principal.IdentityReference.Value
  type: Property
  source:
    remote:
      path: src/System.Security.Principal.Windows/src/System/Security/Principal/IdentityReference.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Value
    path: src/System.Security.Principal.Windows/src/System/Security/Principal/IdentityReference.cs
    startLine: 13
  assemblies:
  - System.Security.Principal.Windows
  namespace: System.Security.Principal
  summary: "\n<p>Gets the string value of the identity represented by the <xref href=\"System.Security.Principal.IdentityReference\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  example:
  - 
  syntax:
    content: public abstract string Value { get; }
    content.vb: Public MustOverride ReadOnly Property Value As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
- uid: System.Security.Principal.IdentityReference.Equals(System.Object)
  commentId: M:System.Security.Principal.IdentityReference.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Security.Principal.IdentityReference
  langs:
  - csharp
  - vb
  name: Equals(Object)
  fullName: System.Security.Principal.IdentityReference.Equals(System.Object)
  type: Method
  source:
    remote:
      path: src/System.Security.Principal.Windows/src/System/Security/Principal/IdentityReference.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Equals
    path: src/System.Security.Principal.Windows/src/System/Security/Principal/IdentityReference.cs
    startLine: 19
  assemblies:
  - System.Security.Principal.Windows
  namespace: System.Security.Principal
  summary: "\n<p>Returns a value that indicates whether the specified object equals this instance of the <xref href=\"System.Security.Principal.IdentityReference\" data-throw-if-not-resolved=\"false\"></xref> class.</p>\n"
  example:
  - 
  syntax:
    content: public abstract override bool Equals(object o)
    content.vb: Public MustOverride Overrides Function Equals(o As Object) As Boolean
    parameters:
    - id: o
      type: System.Object
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - abstract
  - override
  modifiers.vb:
  - Public
  - MustOverride
  - Overrides
- uid: System.Security.Principal.IdentityReference.GetHashCode
  commentId: M:System.Security.Principal.IdentityReference.GetHashCode
  id: GetHashCode
  parent: System.Security.Principal.IdentityReference
  langs:
  - csharp
  - vb
  name: GetHashCode()
  fullName: System.Security.Principal.IdentityReference.GetHashCode()
  type: Method
  source:
    remote:
      path: src/System.Security.Principal.Windows/src/System/Security/Principal/IdentityReference.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetHashCode
    path: src/System.Security.Principal.Windows/src/System/Security/Principal/IdentityReference.cs
    startLine: 21
  assemblies:
  - System.Security.Principal.Windows
  namespace: System.Security.Principal
  summary: "\n<p>Serves as a hash function for <xref href=\"System.Security.Principal.IdentityReference\" data-throw-if-not-resolved=\"false\"></xref>. <xref href=\"System.Security.Principal.IdentityReference.GetHashCode\" data-throw-if-not-resolved=\"false\"></xref> is suitable for use in hashing algorithms and data structures like a hash table.</p>\n"
  example:
  - 
  syntax:
    content: public abstract override int GetHashCode()
    content.vb: Public MustOverride Overrides Function GetHashCode As Integer
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  - abstract
  - override
  modifiers.vb:
  - Public
  - MustOverride
  - Overrides
- uid: System.Security.Principal.IdentityReference.IsValidTargetType(System.Type)
  commentId: M:System.Security.Principal.IdentityReference.IsValidTargetType(System.Type)
  id: IsValidTargetType(System.Type)
  parent: System.Security.Principal.IdentityReference
  langs:
  - csharp
  - vb
  name: IsValidTargetType(Type)
  fullName: System.Security.Principal.IdentityReference.IsValidTargetType(System.Type)
  type: Method
  source:
    remote:
      path: src/System.Security.Principal.Windows/ref/System.Security.Principal.Windows.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IsValidTargetType
    path: src/System.Security.Principal.Windows/ref/System.Security.Principal.Windows.cs
    startLine: 35
  assemblies:
  - System.Security.Principal.Windows
  namespace: System.Security.Principal
  summary: "\n<p>Returns a value that indicates whether the specified type is a valid translation type for the <xref href=\"System.Security.Principal.IdentityReference\" data-throw-if-not-resolved=\"false\"></xref> class.</p>\n"
  example:
  - 
  syntax:
    content: public abstract bool IsValidTargetType(Type targetType)
    content.vb: Public MustOverride Function IsValidTargetType(targetType As Type) As Boolean
    parameters:
    - id: targetType
      type: System.Type
      description: "\n<p>The type being queried for validity to serve as a conversion from <xref href=\"System.Security.Principal.IdentityReference\" data-throw-if-not-resolved=\"false\"></xref>. The following target types are valid:</p>\n<p>\n<xref href=\"System.Security.Principal.NTAccount\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n<p>\n<xref href=\"System.Security.Principal.SecurityIdentifier\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n"
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if <em>targetType</em> is a valid translation type for the <xref href=\"System.Security.Principal.IdentityReference\" data-throw-if-not-resolved=\"false\"></xref> class; otherwise, <strong>false</strong>.</p>\n"
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: System.Security.Principal.IdentityReference.op_Equality(System.Security.Principal.IdentityReference,System.Security.Principal.IdentityReference)
  commentId: M:System.Security.Principal.IdentityReference.op_Equality(System.Security.Principal.IdentityReference,System.Security.Principal.IdentityReference)
  id: op_Equality(System.Security.Principal.IdentityReference,System.Security.Principal.IdentityReference)
  parent: System.Security.Principal.IdentityReference
  langs:
  - csharp
  - vb
  name: Equality(IdentityReference, IdentityReference)
  fullName: System.Security.Principal.IdentityReference.Equality(System.Security.Principal.IdentityReference, System.Security.Principal.IdentityReference)
  type: Operator
  source:
    remote:
      path: src/System.Security.Principal.Windows/src/System/Security/Principal/IdentityReference.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_Equality
    path: src/System.Security.Principal.Windows/src/System/Security/Principal/IdentityReference.cs
    startLine: 25
  assemblies:
  - System.Security.Principal.Windows
  namespace: System.Security.Principal
  summary: "\n<p>Compares two <xref href=\"System.Security.Principal.IdentityReference\" data-throw-if-not-resolved=\"false\"></xref> objects to determine whether they are equal. They are considered equal if they have the same canonical name representation as the one returned by the <xref href=\"System.Security.Principal.IdentityReference.Value\" data-throw-if-not-resolved=\"false\"></xref> property or if they are both <strong>null</strong>.</p>\n"
  example:
  - 
  syntax:
    content: public static bool operator ==(IdentityReference left, IdentityReference right)
    content.vb: Public Shared Operator =(left As IdentityReference, right As IdentityReference) As Boolean
    parameters:
    - id: left
      type: System.Security.Principal.IdentityReference
    - id: right
      type: System.Security.Principal.IdentityReference
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Security.Principal.IdentityReference.op_Inequality(System.Security.Principal.IdentityReference,System.Security.Principal.IdentityReference)
  commentId: M:System.Security.Principal.IdentityReference.op_Inequality(System.Security.Principal.IdentityReference,System.Security.Principal.IdentityReference)
  id: op_Inequality(System.Security.Principal.IdentityReference,System.Security.Principal.IdentityReference)
  parent: System.Security.Principal.IdentityReference
  langs:
  - csharp
  - vb
  name: Inequality(IdentityReference, IdentityReference)
  fullName: System.Security.Principal.IdentityReference.Inequality(System.Security.Principal.IdentityReference, System.Security.Principal.IdentityReference)
  type: Operator
  source:
    remote:
      path: src/System.Security.Principal.Windows/src/System/Security/Principal/IdentityReference.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_Inequality
    path: src/System.Security.Principal.Windows/src/System/Security/Principal/IdentityReference.cs
    startLine: 44
  assemblies:
  - System.Security.Principal.Windows
  namespace: System.Security.Principal
  summary: "\n<p>Compares two <xref href=\"System.Security.Principal.IdentityReference\" data-throw-if-not-resolved=\"false\"></xref> objects to determine whether they are not equal. They are considered not equal if they have different canonical name representations than the one returned by the <xref href=\"System.Security.Principal.IdentityReference.Value\" data-throw-if-not-resolved=\"false\"></xref> property or if one of the objects is <strong>null</strong> and the other is not.</p>\n"
  example:
  - 
  syntax:
    content: public static bool operator !=(IdentityReference left, IdentityReference right)
    content.vb: Public Shared Operator <>(left As IdentityReference, right As IdentityReference) As Boolean
    parameters:
    - id: left
      type: System.Security.Principal.IdentityReference
    - id: right
      type: System.Security.Principal.IdentityReference
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Security.Principal.IdentityReference.ToString
  commentId: M:System.Security.Principal.IdentityReference.ToString
  id: ToString
  parent: System.Security.Principal.IdentityReference
  langs:
  - csharp
  - vb
  name: ToString()
  fullName: System.Security.Principal.IdentityReference.ToString()
  type: Method
  source:
    remote:
      path: src/System.Security.Principal.Windows/src/System/Security/Principal/IdentityReference.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ToString
    path: src/System.Security.Principal.Windows/src/System/Security/Principal/IdentityReference.cs
    startLine: 23
  assemblies:
  - System.Security.Principal.Windows
  namespace: System.Security.Principal
  summary: "\n<p>Returns the string representation of the identity represented by the <xref href=\"System.Security.Principal.IdentityReference\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  example:
  - 
  syntax:
    content: public abstract override string ToString()
    content.vb: Public MustOverride Overrides Function ToString As String
    return:
      type: System.String
  modifiers.csharp:
  - public
  - abstract
  - override
  modifiers.vb:
  - Public
  - MustOverride
  - Overrides
- uid: System.Security.Principal.IdentityReference.Translate(System.Type)
  commentId: M:System.Security.Principal.IdentityReference.Translate(System.Type)
  id: Translate(System.Type)
  parent: System.Security.Principal.IdentityReference
  langs:
  - csharp
  - vb
  name: Translate(Type)
  fullName: System.Security.Principal.IdentityReference.Translate(System.Type)
  type: Method
  source:
    remote:
      path: src/System.Security.Principal.Windows/ref/System.Security.Principal.Windows.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Translate
    path: src/System.Security.Principal.Windows/ref/System.Security.Principal.Windows.cs
    startLine: 39
  assemblies:
  - System.Security.Principal.Windows
  namespace: System.Security.Principal
  summary: "\n<p>Translates the account name represented by the <xref href=\"System.Security.Principal.IdentityReference\" data-throw-if-not-resolved=\"false\"></xref> object into another <xref href=\"System.Security.Principal.IdentityReference\" data-throw-if-not-resolved=\"false\"></xref>-derived type.</p>\n"
  example:
  - 
  syntax:
    content: public abstract IdentityReference Translate(Type targetType)
    content.vb: Public MustOverride Function Translate(targetType As Type) As IdentityReference
    parameters:
    - id: targetType
      type: System.Type
      description: "\n<p>The target type for the conversion from <xref href=\"System.Security.Principal.IdentityReference\" data-throw-if-not-resolved=\"false\"></xref>. </p>\n"
    return:
      type: System.Security.Principal.IdentityReference
      description: "\n<p>The converted identity.</p>\n"
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
references:
- uid: System.Security.Principal
  isExternal: false
  name: System.Security.Principal
  fullName: System.Security.Principal
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.String
  parent: System
  isExternal: false
  name: String
  fullName: System.String
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  fullName: System.Boolean
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  fullName: System.Int32
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  fullName: System.Type
- uid: System.Security.Principal.IdentityReference
  parent: System.Security.Principal
  isExternal: false
  name: Principal.IdentityReference
  fullName: System.Security.Principal.IdentityReference
