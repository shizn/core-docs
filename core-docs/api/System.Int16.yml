items:
- uid: System.Int16
  commentId: T:System.Int16
  id: Int16
  parent: System
  children:
  - System.Int16.CompareTo(System.Int16)
  - System.Int16.Equals(System.Int16)
  - System.Int16.Equals(System.Object)
  - System.Int16.GetHashCode
  - System.Int16.MaxValue
  - System.Int16.MinValue
  - System.Int16.Parse(System.String)
  - System.Int16.Parse(System.String,System.Globalization.NumberStyles)
  - System.Int16.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)
  - System.Int16.Parse(System.String,System.IFormatProvider)
  - System.Int16.System#IComparable#CompareTo(System.Object)
  - System.Int16.System#IConvertible#GetTypeCode
  - System.Int16.System#IConvertible#ToBoolean(System.IFormatProvider)
  - System.Int16.System#IConvertible#ToByte(System.IFormatProvider)
  - System.Int16.System#IConvertible#ToChar(System.IFormatProvider)
  - System.Int16.System#IConvertible#ToDateTime(System.IFormatProvider)
  - System.Int16.System#IConvertible#ToDecimal(System.IFormatProvider)
  - System.Int16.System#IConvertible#ToDouble(System.IFormatProvider)
  - System.Int16.System#IConvertible#ToInt16(System.IFormatProvider)
  - System.Int16.System#IConvertible#ToInt32(System.IFormatProvider)
  - System.Int16.System#IConvertible#ToInt64(System.IFormatProvider)
  - System.Int16.System#IConvertible#ToSByte(System.IFormatProvider)
  - System.Int16.System#IConvertible#ToSingle(System.IFormatProvider)
  - System.Int16.System#IConvertible#ToType(System.Type,System.IFormatProvider)
  - System.Int16.System#IConvertible#ToUInt16(System.IFormatProvider)
  - System.Int16.System#IConvertible#ToUInt32(System.IFormatProvider)
  - System.Int16.System#IConvertible#ToUInt64(System.IFormatProvider)
  - System.Int16.ToString
  - System.Int16.ToString(System.IFormatProvider)
  - System.Int16.ToString(System.String)
  - System.Int16.ToString(System.String,System.IFormatProvider)
  - System.Int16.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Int16@)
  - System.Int16.TryParse(System.String,System.Int16@)
  langs:
  - csharp
  - vb
  name: Int16
  fullName: System.Int16
  type: Struct
  source:
    remote:
      path: src/mscorlib/src/System/Int16.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Int16
    path: src/mscorlib/src/System/Int16.cs
    startLine: 21
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Represents a 16-bit signed integer.</p>\n"
  remarks: "\n<p>The <xref href=\"System.Int16\" data-throw-if-not-resolved=\"false\"></xref> value type represents signed integers with values ranging from negative 32768 through positive 32767.</p>\n<p>This type provides methods to convert the value of an instance of this type to its string representation, to convert the string representation of a number to an instance of this type, and to compare instances of this type.</p>\n<p>You can also call the members of the <xref href=\"System.Math\" data-throw-if-not-resolved=\"false\"></xref> class to perform a wide range of numeric operations, including getting the absolute value of a number, calculating the quotient and remainder from integral division, determining the maximum or minimum value of two integers, getting the sign of a number, and rounding a number.  </p>\n<p>For information about how format specification codes control the string representation of value types, see Formatting Types in the .NET Framework.</p>\n"
  syntax:
    content: >-
      [ComVisible(true)]

      [Serializable]

      [StructLayout(LayoutKind.Sequential)]

      public struct Int16 : IComparable, IFormattable, IConvertible, IComparable<short>, IEquatable<short>
    content.vb: >-
      <ComVisible(True)>

      <Serializable>

      <StructLayout(LayoutKind.Sequential)>

      Public Structure Int16
          Implements IComparable, IFormattable, IConvertible, IComparable(Of Short), IEquatable(Of Short)
  seealso:
  - type: System.UInt16
    commentId: T:System.UInt16
  implements:
  - System.IComparable
  - System.IComparable{System.Int16}
  - System.IConvertible
  - System.IEquatable{System.Int16}
  - System.IFormattable
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetType
  attributes:
  - type: System.Runtime.InteropServices.StructLayoutAttribute
    ctor: System.Runtime.InteropServices.StructLayoutAttribute.#ctor(System.Runtime.InteropServices.LayoutKind)
    arguments:
    - type: System.Runtime.InteropServices.LayoutKind
      value: 0
  modifiers.csharp:
  - public
  - struct
  modifiers.vb:
  - Public
  - Structure
- uid: System.Int16.MaxValue
  commentId: F:System.Int16.MaxValue
  id: MaxValue
  parent: System.Int16
  langs:
  - csharp
  - vb
  name: MaxValue
  fullName: System.Int16.MaxValue
  type: Field
  source:
    remote:
      path: src/mscorlib/src/System/Int16.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: MaxValue
    path: src/mscorlib/src/System/Int16.cs
    startLine: 29
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Represents the largest possible value of an <xref href=\"System.Int16\" data-throw-if-not-resolved=\"false\"></xref>. This field is constant.</p>\n"
  remarks: "\n<p>The value of this constant is 32767; that is, hexadecimal 0x7FFF.</p>\n<p>The <xref href=\"System.Int16.MaxValue\" data-throw-if-not-resolved=\"false\"></xref> property is typically used to prevent an <xref href=\"System.OverflowException\" data-throw-if-not-resolved=\"false\"></xref> when converting from a numeric type with a greater upper range (such as a <xref href=\"System.UInt16\" data-throw-if-not-resolved=\"false\"></xref> or a <xref href=\"System.Int32\" data-throw-if-not-resolved=\"false\"></xref>) to an <xref href=\"System.Int16\" data-throw-if-not-resolved=\"false\"></xref>. The example illustrates this usage.</p>\n"
  example:
  - "\n<p>The following example uses the <xref href=\"System.Int16.MaxValue\" data-throw-if-not-resolved=\"false\"></xref> property to prevent an <xref href=\"System.OverflowException\" data-throw-if-not-resolved=\"false\"></xref> when converting to an <xref href=\"System.Int16\" data-throw-if-not-resolved=\"false\"></xref> value.</p>System.Int16.MaxValue#1"
  syntax:
    content: public const short MaxValue = 32767
    content.vb: Public Const MaxValue As Short = 32767
    return:
      type: System.Int16
  seealso:
  - type: System.Int16.MinValue
    commentId: F:System.Int16.MinValue
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Int16.MinValue
  commentId: F:System.Int16.MinValue
  id: MinValue
  parent: System.Int16
  langs:
  - csharp
  - vb
  name: MinValue
  fullName: System.Int16.MinValue
  type: Field
  source:
    remote:
      path: src/mscorlib/src/System/Int16.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: MinValue
    path: src/mscorlib/src/System/Int16.cs
    startLine: 30
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Represents the smallest possible value of <xref href=\"System.Int16\" data-throw-if-not-resolved=\"false\"></xref>. This field is constant.</p>\n"
  remarks: "\n<p>The value of this constant is -32768; that is, hexadecimal 0x8000.</p>\n<p>The <xref href=\"System.Int16.MinValue\" data-throw-if-not-resolved=\"false\"></xref> property is typically used to prevent an <xref href=\"System.OverflowException\" data-throw-if-not-resolved=\"false\"></xref> when converting from a numeric type with a greater lower range (such as an <xref href=\"System.Int32\" data-throw-if-not-resolved=\"false\"></xref> or an <xref href=\"System.Int64\" data-throw-if-not-resolved=\"false\"></xref>) to an <xref href=\"System.Int16\" data-throw-if-not-resolved=\"false\"></xref>. The example illustrates this usage.</p>\n"
  example:
  - "\n<p>The following example uses the <xref href=\"System.Int16.MinValue\" data-throw-if-not-resolved=\"false\"></xref> property to prevent an <xref href=\"System.OverflowException\" data-throw-if-not-resolved=\"false\"></xref> when converting to an <xref href=\"System.Int16\" data-throw-if-not-resolved=\"false\"></xref> value.</p>System.Int16.MaxValue#1"
  syntax:
    content: public const short MinValue = -32768
    content.vb: Public Const MinValue As Short = -32768
    return:
      type: System.Int16
  seealso:
  - type: System.Int16.MaxValue
    commentId: F:System.Int16.MaxValue
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Int16.CompareTo(System.Int16)
  commentId: M:System.Int16.CompareTo(System.Int16)
  id: CompareTo(System.Int16)
  parent: System.Int16
  langs:
  - csharp
  - vb
  name: CompareTo(Int16)
  fullName: System.Int16.CompareTo(System.Int16)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Int16.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: CompareTo
    path: src/mscorlib/src/System/Int16.cs
    startLine: 50
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Compares this instance to a specified 16-bit signed integer and returns an integer that indicates whether the value of this instance is less than, equal to, or greater than the value of the specified 16-bit signed integer.</p>\n"
  remarks: "\n<p>This method implements the <xref href=\"System.IComparable`1\" data-throw-if-not-resolved=\"false\"></xref> interface and performs slightly better than the <xref href=\"System.Int16.CompareTo(System.Object)\" data-throw-if-not-resolved=\"false\"></xref> method because it does not have to convert the <em>value</em> parameter to an object.</p>\n<p>Depending on your programming language, it might be possible to code a <see cref=\"Overload:System.Int16.CompareTo\"></see> method where the parameter type has fewer bits (is narrower) than the instance type. This is possible because some programming languages perform an implicit widening conversion that represents the parameter as a type with as many bits as the instance.</p>\n<p>For example, suppose the instance type is <xref href=\"System.Int32\" data-throw-if-not-resolved=\"false\"></xref> and the parameter type is <xref href=\"System.Byte\" data-throw-if-not-resolved=\"false\"></xref>. The Microsoft C# compiler generates instructions to represent the value of the parameter as an <xref href=\"System.Int32\" data-throw-if-not-resolved=\"false\"></xref> object, then generates a <xref href=\"System.Int32.CompareTo(System.Object)\" data-throw-if-not-resolved=\"false\"></xref> method that compares the values of the <xref href=\"System.Int32\" data-throw-if-not-resolved=\"false\"></xref> instance and the <xref href=\"System.Int32\" data-throw-if-not-resolved=\"false\"></xref> parameter representation.</p>\n<p>Consult your programming language's documentation to determine whether its compiler performs implicit widening conversions on numeric types.</p>\n"
  example:
  - "\n<p>The following code example demonstrates generic and nongeneric versions of the <see cref=\"Overload:System.Int16.CompareTo\"></see> method for several value and reference types.</p>T.CompareTo#1"
  syntax:
    content: public int CompareTo(short value)
    content.vb: Public Function CompareTo(value As Short) As Integer
    parameters:
    - id: value
      type: System.Int16
    return:
      type: System.Int32
  seealso:
  - type: System.UInt16
    commentId: T:System.UInt16
  - type: System.Int16.Equals(System.Object)
    commentId: M:System.Int16.Equals(System.Object)
  implements:
  - System.IComparable{System.Int16}.CompareTo(System.Int16)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Int16.Equals(System.Int16)
  commentId: M:System.Int16.Equals(System.Int16)
  id: Equals(System.Int16)
  parent: System.Int16
  langs:
  - csharp
  - vb
  name: Equals(Int16)
  fullName: System.Int16.Equals(System.Int16)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Int16.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Equals
    path: src/mscorlib/src/System/Int16.cs
    startLine: 61
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Returns a value indicating whether this instance is equal to a specified <xref href=\"System.Int16\" data-throw-if-not-resolved=\"false\"></xref> value.</p>\n"
  remarks: "\n<p>This method implements the <xref href=\"System.IEquatable`1\" data-throw-if-not-resolved=\"false\"></xref> interface, and performs slightly better than <xref href=\"System.Int16.Equals(System.Object)\" data-throw-if-not-resolved=\"false\"></xref> because it does not have to convert the <em>obj</em> parameter to an object.</p>\n"
  example:
  - 
  syntax:
    content: >-
      [NonVersionable]

      public bool Equals(short obj)
    content.vb: >-
      <NonVersionable>

      Public Function Equals(obj As Short) As Boolean
    parameters:
    - id: obj
      type: System.Int16
    return:
      type: System.Boolean
  seealso:
  - type: System.Int16.Equals(System.Object)
    commentId: M:System.Int16.Equals(System.Object)
  implements:
  - System.IEquatable{System.Int16}.Equals(System.Int16)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Int16.Equals(System.Object)
  commentId: M:System.Int16.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Int16
  langs:
  - csharp
  - vb
  name: Equals(Object)
  fullName: System.Int16.Equals(System.Object)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Int16.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Equals
    path: src/mscorlib/src/System/Int16.cs
    startLine: 54
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Returns a value indicating whether this instance is equal to a specified object.</p>\n"
  example:
  - "\n<p>The following code example illustrates the use of <strong>Equals</strong> in the context of <strong>Int16</strong>, comparing two short values and returning <strong>true</strong> if they represent the same number, or <strong>false</strong> if they do not.</p>Int16_Equals#1"
  syntax:
    content: public override bool Equals(object obj)
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
    parameters:
    - id: obj
      type: System.Object
    return:
      type: System.Boolean
  overridden: System.ValueType.Equals(System.Object)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Int16.GetHashCode
  commentId: M:System.Int16.GetHashCode
  id: GetHashCode
  parent: System.Int16
  langs:
  - csharp
  - vb
  name: GetHashCode()
  fullName: System.Int16.GetHashCode()
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Int16.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: GetHashCode
    path: src/mscorlib/src/System/Int16.cs
    startLine: 68
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Returns the hash code for this instance.</p>\n"
  syntax:
    content: public override int GetHashCode()
    content.vb: Public Overrides Function GetHashCode As Integer
    return:
      type: System.Int32
  overridden: System.ValueType.GetHashCode
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Int16.Parse(System.String)
  commentId: M:System.Int16.Parse(System.String)
  id: Parse(System.String)
  parent: System.Int16
  langs:
  - csharp
  - vb
  name: Parse(String)
  fullName: System.Int16.Parse(System.String)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Int16.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Parse
    path: src/mscorlib/src/System/Int16.cs
    startLine: 106
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Converts the string representation of a number to its 16-bit signed integer equivalent.</p>\n"
  remarks: "\n<p>The <em>s</em> parameter contains a number of the form: </p>\n<p>[ws][sign]digits[ws] </p>\n<p>Elements in square brackets ([ and ]) are optional. The following table describes each element.</p>\n<p>Element</p>\n<p>Description</p>\n<table><tbody><tr><td>\n<p>ws</p>\n</td><td>\n<p>Optional white space. </p>\n</td></tr><tr><td>\n<p>sign</p>\n</td><td>\n<p>An optional sign. </p>\n</td></tr><tr><td>\n<p>digits</p>\n</td><td>\n<p>A sequence of digits ranging from 0 to 9. </p>\n</td></tr></tbody></table>\n<p>The <em>s</em> parameter is interpreted using the <xref href=\"System.Globalization.NumberStyles.Integer\" data-throw-if-not-resolved=\"false\"></xref> style. In addition to the integer value's decimal digits, only leading and trailing spaces together with a leading sign are allowed. To explicitly define the style elements that can be present in <em>s</em>, use either the <xref href=\"System.Int16.Parse(System.String,System.Globalization.NumberStyles)\" data-throw-if-not-resolved=\"false\"></xref> or the <xref href=\"System.Int16.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)\" data-throw-if-not-resolved=\"false\"></xref> method.</p>\n<p>The <em>s</em> parameter is parsed using the formatting information in a <xref href=\"System.Globalization.NumberFormatInfo\" data-throw-if-not-resolved=\"false\"></xref> object that is initialized for the current system culture. For more information, see <xref href=\"System.Globalization.NumberFormatInfo.CurrentInfo\" data-throw-if-not-resolved=\"false\"></xref>. To parse a string using the formatting information of some other culture, use the <xref href=\"System.Int16.Parse(System.String,System.IFormatProvider)\" data-throw-if-not-resolved=\"false\"></xref> or the <xref href=\"System.Int16.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)\" data-throw-if-not-resolved=\"false\"></xref> method.</p>\n"
  example:
  - "\n<p>The following example demonstrates how to convert a string value into a 16-bit signed integer value using the <xref href=\"System.Int16.Parse(System.String)\" data-throw-if-not-resolved=\"false\"></xref> method. The resulting integer value is then displayed to the console.</p>System.Int16.Parse#1"
  syntax:
    content: public static short Parse(string s)
    content.vb: Public Shared Function Parse(s As String) As Short
    parameters:
    - id: s
      type: System.String
    return:
      type: System.Int16
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>s</em> is <strong>null</strong>. </p>\n"
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "\n<p>\n<em>s</em> is not in the correct format. </p>\n"
  - type: System.OverflowException
    commentId: T:System.OverflowException
    description: "\n<p>\n<em>s</em> represents a number less than <xref href=\"System.Int16.MinValue\" data-throw-if-not-resolved=\"false\"></xref> or greater than <xref href=\"System.Int16.MaxValue\" data-throw-if-not-resolved=\"false\"></xref>. </p>\n"
  seealso:
  - type: System.Int16.ToString
    commentId: M:System.Int16.ToString
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Int16.Parse(System.String,System.Globalization.NumberStyles)
  commentId: M:System.Int16.Parse(System.String,System.Globalization.NumberStyles)
  id: Parse(System.String,System.Globalization.NumberStyles)
  parent: System.Int16
  langs:
  - csharp
  - vb
  name: Parse(String, NumberStyles)
  fullName: System.Int16.Parse(System.String, System.Globalization.NumberStyles)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Int16.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Parse
    path: src/mscorlib/src/System/Int16.cs
    startLine: 110
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Converts the string representation of a number in a specified style to its 16-bit signed integer equivalent.</p>\n"
  remarks: "\n<p>The <em>style</em> parameter defines the style elements (such as white space or a sign symbol) that are allowed in the <em>s</em> parameter for the parse operation to succeed. It must be a combination of bit flags from the <xref href=\"System.Globalization.NumberStyles\" data-throw-if-not-resolved=\"false\"></xref> enumeration. Depending on the value of <em>style</em>, the <em>s</em> parameter may include the following elements: </p>\n<p>[ws][$][sign][digits,]digits[.fractional_digits][e[sign]digits][ws] </p>\n<p>Or, if <em>style</em> includes <xref href=\"System.Globalization.NumberStyles.AllowHexSpecifier\" data-throw-if-not-resolved=\"false\"></xref>:</p>\n<p>[ws]hexdigits[ws]</p>\n<p>Items in square brackets ([ and ]) are optional. The following table describes each element.</p>\n<p>Element</p>\n<p>Description</p>\n<table><tbody><tr><td>\n<p>ws</p>\n</td><td>\n<p>Optional white space. White space can appear at the beginning of <em>s</em> if <em>style</em> includes the <xref href=\"System.Globalization.NumberStyles.AllowLeadingWhite\" data-throw-if-not-resolved=\"false\"></xref> flag, or at the end of <em>s</em> if <em>style</em> includes the <xref href=\"System.Globalization.NumberStyles.AllowTrailingWhite\" data-throw-if-not-resolved=\"false\"></xref> flag. </p>\n</td></tr><tr><td>\n<p>$</p>\n</td><td>\n<p>A culture-specific currency symbol. Its position in the string is defined by the <xref href=\"System.Globalization.NumberFormatInfo.CurrencyPositivePattern\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"System.Globalization.NumberFormatInfo.CurrencyNegativePattern\" data-throw-if-not-resolved=\"false\"></xref> property of the current culture. The current culture's currency symbol can appear in <em>s</em> if <em>style</em> includes the <xref href=\"System.Globalization.NumberStyles.AllowCurrencySymbol\" data-throw-if-not-resolved=\"false\"></xref> flag. </p>\n</td></tr><tr><td>\n<p>sign</p>\n</td><td>\n<p>An optional sign. The sign can appear at the beginning of <em>s</em> if <em>style</em> includes the <xref href=\"System.Globalization.NumberStyles.AllowLeadingSign\" data-throw-if-not-resolved=\"false\"></xref> flag, and it can appear at the end of <em>s</em> if <em>style</em> includes the <xref href=\"System.Globalization.NumberStyles.AllowTrailingSign\" data-throw-if-not-resolved=\"false\"></xref> flag. Parentheses can be used in <em>s</em> to indicate a negative value if <em>style</em> includes the <xref href=\"System.Globalization.NumberStyles.AllowParentheses\" data-throw-if-not-resolved=\"false\"></xref> flag. </p>\n</td></tr><tr><td>\n<p>digits</p>\n</td><td>\n<p>A sequence of digits from 0 through 9. </p>\n</td></tr><tr><td>\n<p>,</p>\n</td><td>\n<p>A culture-specific thousands separator symbol. The current culture's thousands separator symbol can appear in <em>s</em> if <em>style</em> includes the <xref href=\"System.Globalization.NumberStyles.AllowThousands\" data-throw-if-not-resolved=\"false\"></xref> flag.</p>\n</td></tr><tr><td>\n<p>.</p>\n</td><td>\n<p>A culture-specific decimal point symbol. The current culture's decimal point symbol can appear in <em>s</em> if <em>style</em> includes the <xref href=\"System.Globalization.NumberStyles.AllowDecimalPoint\" data-throw-if-not-resolved=\"false\"></xref> flag. </p>\n</td></tr><tr><td>\n<p>fractional_digits</p>\n</td><td>\n<p>A sequence of the 0 digit. Fractional digits can appear in <em>s</em> if <em>style</em> includes the <xref href=\"System.Globalization.NumberStyles.AllowDecimalPoint\" data-throw-if-not-resolved=\"false\"></xref> flag. If any digit other than 0 appears in fractional_digits, the method throws an <xref href=\"System.OverflowException\" data-throw-if-not-resolved=\"false\"></xref>. </p>\n</td></tr><tr><td>\n<p>e</p>\n</td><td>\n<p>The 'e' or 'E' character, which indicates that <em>s</em> can be represented in exponential notation. The <em>s</em> parameter can represent a number in exponential notation if <em>style</em> includes the <xref href=\"System.Globalization.NumberStyles.AllowExponent\" data-throw-if-not-resolved=\"false\"></xref> flag. However, the <em>s</em> parameter must represent a number in the range of the <xref href=\"System.Int16\" data-throw-if-not-resolved=\"false\"></xref> data type and cannot have a non-zero fractional component. </p>\n</td></tr><tr><td>\n<p>hexdigits</p>\n</td><td>\n<p>A sequence of hexadecimal digits from 0 through f, or 0 through F. </p>\n</td></tr></tbody></table>\n<p>A string with digits only (which corresponds to the <xref href=\"System.Globalization.NumberStyles.None\" data-throw-if-not-resolved=\"false\"></xref> style) always parses successfully. Most of the remaining <xref href=\"System.Globalization.NumberStyles\" data-throw-if-not-resolved=\"false\"></xref> members control elements that may be but are not required to be present in this input string. The following table indicates how individual <xref href=\"System.Globalization.NumberStyles\" data-throw-if-not-resolved=\"false\"></xref> members affect the elements that may be present in <em>s</em>.</p>\n<p>Non-composite NumberStyles values</p>\n<p>Elements permitted in s in addition to digits</p>\n<table><tbody><tr><td>\n<p>\n<xref href=\"System.Globalization.NumberStyles.None\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td><td>\n<p>Decimal digits only.</p>\n</td></tr><tr><td>\n<p>\n<xref href=\"System.Globalization.NumberStyles.AllowDecimalPoint\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td><td>\n<p>The . and fractional_digits elements. However, fractional_digits must consist of only one or more 0 digits or an <xref href=\"System.OverflowException\" data-throw-if-not-resolved=\"false\"></xref> is thrown.</p>\n</td></tr><tr><td>\n<p>\n<xref href=\"System.Globalization.NumberStyles.AllowExponent\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td><td>\n<p>The <em>s</em> parameter can also use exponential notation. </p>\n</td></tr><tr><td>\n<p>\n<xref href=\"System.Globalization.NumberStyles.AllowLeadingWhite\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td><td>\n<p>The ws element at the beginning of <em>s</em>.</p>\n</td></tr><tr><td>\n<p>\n<xref href=\"System.Globalization.NumberStyles.AllowTrailingWhite\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td><td>\n<p>The ws element at the end of <em>s</em>.</p>\n</td></tr><tr><td>\n<p>\n<xref href=\"System.Globalization.NumberStyles.AllowLeadingSign\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td><td>\n<p>A sign can appear before digits.</p>\n</td></tr><tr><td>\n<p>\n<xref href=\"System.Globalization.NumberStyles.AllowTrailingSign\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td><td>\n<p>A sign can appear after digits.</p>\n</td></tr><tr><td>\n<p>\n<xref href=\"System.Globalization.NumberStyles.AllowParentheses\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td><td>\n<p>The sign element in the form of parentheses enclosing the numeric value.</p>\n</td></tr><tr><td>\n<p>\n<xref href=\"System.Globalization.NumberStyles.AllowThousands\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td><td>\n<p>The , element.</p>\n</td></tr><tr><td>\n<p>\n<xref href=\"System.Globalization.NumberStyles.AllowCurrencySymbol\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td><td>\n<p>The $ element.</p>\n</td></tr></tbody></table>\n<p>If the <xref href=\"System.Globalization.NumberStyles.AllowHexSpecifier\" data-throw-if-not-resolved=\"false\"></xref> flag is used, <em>s</em> must be the string representation of a hexadecimal value without a prefix. For example, \"9AF3\" parses successfully, but \"0x9AF3\" does not. The only other flags that can be present in <em>style</em> are <xref href=\"System.Globalization.NumberStyles.AllowLeadingWhite\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"System.Globalization.NumberStyles.AllowTrailingWhite\" data-throw-if-not-resolved=\"false\"></xref>. (The <xref href=\"System.Globalization.NumberStyles\" data-throw-if-not-resolved=\"false\"></xref> enumeration has a composite number style, <xref href=\"System.Globalization.NumberStyles.HexNumber\" data-throw-if-not-resolved=\"false\"></xref>, that includes both white space flags.) </p>\n<p>The <em>s</em> parameter is parsed using the formatting information in a <xref href=\"System.Globalization.NumberFormatInfo\" data-throw-if-not-resolved=\"false\"></xref> object that is initialized for the current system culture. For more information, see <xref href=\"System.Globalization.NumberFormatInfo.CurrentInfo\" data-throw-if-not-resolved=\"false\"></xref>. To parse <em>s</em> using the formatting information of a specific culture, call the <xref href=\"System.Int16.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)\" data-throw-if-not-resolved=\"false\"></xref> method.  </p>\n"
  example:
  - "\n<p>The following example uses the <xref href=\"System.Int16.Parse(System.String,System.Globalization.NumberStyles)\" data-throw-if-not-resolved=\"false\"></xref> method to parse the string representations of <xref href=\"System.Int16\" data-throw-if-not-resolved=\"false\"></xref> values using the en-US culture.</p>System.Int16.Parse#2"
  syntax:
    content: public static short Parse(string s, NumberStyles style)
    content.vb: Public Shared Function Parse(s As String, style As NumberStyles) As Short
    parameters:
    - id: s
      type: System.String
    - id: style
      type: System.Globalization.NumberStyles
    return:
      type: System.Int16
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>s</em> is <strong>null</strong>. </p>\n"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<p>\n<em>style</em> is not a <xref href=\"System.Globalization.NumberStyles\" data-throw-if-not-resolved=\"false\"></xref> value. </p>\n<p>-or-</p>\n<p>\n<em>style</em> is not a combination of <xref href=\"System.Globalization.NumberStyles.AllowHexSpecifier\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"System.Globalization.NumberStyles.HexNumber\" data-throw-if-not-resolved=\"false\"></xref> values.</p>\n"
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "\n<p>\n<em>s</em> is not in a format compliant with <em>style</em>. </p>\n"
  - type: System.OverflowException
    commentId: T:System.OverflowException
    description: "\n<p>\n<em>s</em> represents a number less than <xref href=\"System.Int16.MinValue\" data-throw-if-not-resolved=\"false\"></xref> or greater than <xref href=\"System.Int16.MaxValue\" data-throw-if-not-resolved=\"false\"></xref>. </p>\n<p>-or-</p>\n<p>\n<em>s</em> includes non-zero fractional digits.</p>\n"
  seealso:
  - type: System.Globalization.NumberStyles
    commentId: T:System.Globalization.NumberStyles
  - type: System.Int16.ToString
    commentId: M:System.Int16.ToString
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Int16.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)
  commentId: M:System.Int16.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)
  id: Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)
  parent: System.Int16
  langs:
  - csharp
  - vb
  name: Parse(String, NumberStyles, IFormatProvider)
  fullName: System.Int16.Parse(System.String, System.Globalization.NumberStyles, System.IFormatProvider)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Int16.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Parse
    path: src/mscorlib/src/System/Int16.cs
    startLine: 119
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Converts the string representation of a number in a specified style and culture-specific format to its 16-bit signed integer equivalent.</p>\n"
  remarks: "\n<p>The <em>style</em> parameter defines the style elements (such as white space or the positive sign) that are allowed in the <em>s</em> parameter for the parse operation to succeed. It must be a combination of bit flags from the <xref href=\"System.Globalization.NumberStyles\" data-throw-if-not-resolved=\"false\"></xref> enumeration. Depending on the value of <em>style</em>, the <em>s</em> parameter may include the following elements: </p>\n<p>[ws][$][sign][digits,]digits[.fractional_digits][e[sign]digits][ws] </p>\n<p>Or, if <em>style</em> includes <xref href=\"System.Globalization.NumberStyles.AllowHexSpecifier\" data-throw-if-not-resolved=\"false\"></xref>:</p>\n<p>[ws]hexdigits[ws]</p>\n<p>Elements in square brackets ([ and ]) are optional. The following table describes each element.</p>\n<p>Element</p>\n<p>Description</p>\n<table><tbody><tr><td>\n<p>ws</p>\n</td><td>\n<p>Optional white space. White space can appear at the beginning of <em>s</em> if <em>style</em> includes the <xref href=\"System.Globalization.NumberStyles.AllowLeadingWhite\" data-throw-if-not-resolved=\"false\"></xref> flag, or at the end of <em>s</em> if <em>style</em> includes the <xref href=\"System.Globalization.NumberStyles.AllowTrailingWhite\" data-throw-if-not-resolved=\"false\"></xref> flag. </p>\n</td></tr><tr><td>\n<p>$</p>\n</td><td>\n<p>A culture-specific currency symbol. Its position in the string is defined by the <xref href=\"System.Globalization.NumberFormatInfo.CurrencyPositivePattern\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"System.Globalization.NumberFormatInfo.CurrencyNegativePattern\" data-throw-if-not-resolved=\"false\"></xref> property of the current culture. The current culture's currency symbol can appear in <em>s</em> if <em>style</em> includes the <xref href=\"System.Globalization.NumberStyles.AllowCurrencySymbol\" data-throw-if-not-resolved=\"false\"></xref> flag. </p>\n</td></tr><tr><td>\n<p>sign</p>\n</td><td>\n<p>An optional sign. The sign can appear at the beginning of <em>s</em> if <em>style</em> includes the <xref href=\"System.Globalization.NumberStyles.AllowLeadingSign\" data-throw-if-not-resolved=\"false\"></xref> flag, and it can appear at the end of <em>s</em> if <em>style</em> includes the <xref href=\"System.Globalization.NumberStyles.AllowTrailingSign\" data-throw-if-not-resolved=\"false\"></xref> flag. Parentheses can be used in <em>s</em> to indicate a negative value if <em>style</em> includes the <xref href=\"System.Globalization.NumberStyles.AllowParentheses\" data-throw-if-not-resolved=\"false\"></xref> flag.</p>\n</td></tr><tr><td>\n<p>digits</p>\n</td><td>\n<p>A sequence of digits from 0 through 9. </p>\n</td></tr><tr><td>\n<p>,</p>\n</td><td>\n<p>A culture-specific thousands separator symbol. The current culture's thousands separator symbol can appear in <em>s</em> if <em>style</em> includes the <xref href=\"System.Globalization.NumberStyles.AllowThousands\" data-throw-if-not-resolved=\"false\"></xref> flag.</p>\n</td></tr><tr><td>\n<p>.</p>\n</td><td>\n<p>A culture-specific decimal point symbol. The current culture's decimal point symbol can appear in <em>s</em> if <em>style</em> includes the <xref href=\"System.Globalization.NumberStyles.AllowDecimalPoint\" data-throw-if-not-resolved=\"false\"></xref> flag. </p>\n</td></tr><tr><td>\n<p>fractional_digits</p>\n</td><td>\n<p>A sequence of the 0 digit. Fractional digits can appear in <em>s</em> if <em>style</em> includes the <xref href=\"System.Globalization.NumberStyles.AllowDecimalPoint\" data-throw-if-not-resolved=\"false\"></xref> flag. If any digit other than 0 appears in fractional_digits, the method throws an <xref href=\"System.OverflowException\" data-throw-if-not-resolved=\"false\"></xref>. </p>\n</td></tr><tr><td>\n<p>e</p>\n</td><td>\n<p>The 'e' or 'E' character, which indicates that <em>s</em> can be represented in exponential notation. The <em>s</em> parameter can represent a number in exponential notation if <em>style</em> includes the <xref href=\"System.Globalization.NumberStyles.AllowExponent\" data-throw-if-not-resolved=\"false\"></xref> flag. However, the <em>s</em> parameter must represent a number in the range of the <xref href=\"System.Int16\" data-throw-if-not-resolved=\"false\"></xref> data type and cannot have a non-zero fractional component.</p>\n</td></tr><tr><td>\n<p>hexdigits</p>\n</td><td>\n<p>A sequence of hexadecimal digits from 0 through f, or 0 through F. </p>\n</td></tr></tbody></table>\n<p>A string with digits only (which corresponds to the <xref href=\"System.Globalization.NumberStyles.None\" data-throw-if-not-resolved=\"false\"></xref> style) always parses successfully. Most of the remaining <xref href=\"System.Globalization.NumberStyles\" data-throw-if-not-resolved=\"false\"></xref> members control elements that may be but are not required to be present in this input string. The following table indicates how individual <xref href=\"System.Globalization.NumberStyles\" data-throw-if-not-resolved=\"false\"></xref> members affect the elements that may be present in <em>s</em>.</p>\n<p>Non-composite NumberStyles values</p>\n<p>Elements permitted in s in addition to digits</p>\n<table><tbody><tr><td>\n<p>\n<xref href=\"System.Globalization.NumberStyles.None\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td><td>\n<p>Decimal digits only.</p>\n</td></tr><tr><td>\n<p>\n<xref href=\"System.Globalization.NumberStyles.AllowDecimalPoint\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td><td>\n<p>The . and fractional_digits elements. However, fractional_digits must consist of only one or more 0 digits or an <xref href=\"System.OverflowException\" data-throw-if-not-resolved=\"false\"></xref> is thrown.</p>\n</td></tr><tr><td>\n<p>\n<xref href=\"System.Globalization.NumberStyles.AllowExponent\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td><td>\n<p>The <em>s</em> parameter can also use exponential notation. </p>\n</td></tr><tr><td>\n<p>\n<xref href=\"System.Globalization.NumberStyles.AllowLeadingWhite\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td><td>\n<p>The ws element at the beginning of <em>s</em>.</p>\n</td></tr><tr><td>\n<p>\n<xref href=\"System.Globalization.NumberStyles.AllowTrailingWhite\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td><td>\n<p>The ws element at the end of <em>s</em>.</p>\n</td></tr><tr><td>\n<p>\n<xref href=\"System.Globalization.NumberStyles.AllowLeadingSign\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td><td>\n<p>A sign can appear before digits.</p>\n</td></tr><tr><td>\n<p>\n<xref href=\"System.Globalization.NumberStyles.AllowTrailingSign\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td><td>\n<p>A sign can appear after digits.</p>\n</td></tr><tr><td>\n<p>\n<xref href=\"System.Globalization.NumberStyles.AllowParentheses\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td><td>\n<p>The sign element in the form of parentheses enclosing the numeric value.</p>\n</td></tr><tr><td>\n<p>\n<xref href=\"System.Globalization.NumberStyles.AllowThousands\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td><td>\n<p>The , element.</p>\n</td></tr><tr><td>\n<p>\n<xref href=\"System.Globalization.NumberStyles.AllowCurrencySymbol\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td><td>\n<p>The $ element.</p>\n</td></tr></tbody></table>\n<p>If the <xref href=\"System.Globalization.NumberStyles.AllowHexSpecifier\" data-throw-if-not-resolved=\"false\"></xref> flag is used, <em>s</em> must be the string representation of a hexadecimal value without a prefix. For example, \"9AF3\" parses successfully, but \"0x9AF3\" does not.. The only other flags that can be present in <em>style</em> are <xref href=\"System.Globalization.NumberStyles.AllowLeadingWhite\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"System.Globalization.NumberStyles.AllowTrailingWhite\" data-throw-if-not-resolved=\"false\"></xref>. (The <xref href=\"System.Globalization.NumberStyles\" data-throw-if-not-resolved=\"false\"></xref> enumeration has a composite number style, <xref href=\"System.Globalization.NumberStyles.HexNumber\" data-throw-if-not-resolved=\"false\"></xref>, that includes both white space flags.) </p>\n<p>The <em>provider</em> parameter is an <xref href=\"System.IFormatProvider\" data-throw-if-not-resolved=\"false\"></xref> implementation whose <xref href=\"System.IFormatProvider.GetFormat(System.Type)\" data-throw-if-not-resolved=\"false\"></xref> method obtains a <xref href=\"System.Globalization.NumberFormatInfo\" data-throw-if-not-resolved=\"false\"></xref> object. The <xref href=\"System.Globalization.NumberFormatInfo\" data-throw-if-not-resolved=\"false\"></xref> object provides culture-specific information about the format of <em>s</em>. If <em>provider</em> is <strong>null</strong>, the <xref href=\"System.Globalization.NumberFormatInfo\" data-throw-if-not-resolved=\"false\"></xref> object for the current culture is used.</p>\n"
  example:
  - "\n<p>The following example uses a variety of <em>style</em> and <em>provider</em> parameters to parse the string representations of <xref href=\"System.Int16\" data-throw-if-not-resolved=\"false\"></xref> values.</p>System.Int16.Parse#3"
  syntax:
    content: public static short Parse(string s, NumberStyles style, IFormatProvider provider)
    content.vb: Public Shared Function Parse(s As String, style As NumberStyles, provider As IFormatProvider) As Short
    parameters:
    - id: s
      type: System.String
    - id: style
      type: System.Globalization.NumberStyles
    - id: provider
      type: System.IFormatProvider
    return:
      type: System.Int16
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>s</em> is <strong>null</strong>. </p>\n"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<p>\n<em>style</em> is not a <xref href=\"System.Globalization.NumberStyles\" data-throw-if-not-resolved=\"false\"></xref> value. </p>\n<p>-or-</p>\n<p>\n<em>style</em> is not a combination of <xref href=\"System.Globalization.NumberStyles.AllowHexSpecifier\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"System.Globalization.NumberStyles.HexNumber\" data-throw-if-not-resolved=\"false\"></xref> values.</p>\n"
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "\n<p>\n<em>s</em> is not in a format compliant with <em>style</em>. </p>\n"
  - type: System.OverflowException
    commentId: T:System.OverflowException
    description: "\n<p>\n<em>s</em> represents a number less than <xref href=\"System.Int16.MinValue\" data-throw-if-not-resolved=\"false\"></xref> or greater than <xref href=\"System.Int16.MaxValue\" data-throw-if-not-resolved=\"false\"></xref>. </p>\n<p>-or-</p>\n<p>\n<em>s</em> includes non-zero fractional digits.</p>\n"
  seealso:
  - type: System.Globalization.NumberStyles
    commentId: T:System.Globalization.NumberStyles
  - type: System.Int16.ToString
    commentId: M:System.Int16.ToString
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Int16.Parse(System.String,System.IFormatProvider)
  commentId: M:System.Int16.Parse(System.String,System.IFormatProvider)
  id: Parse(System.String,System.IFormatProvider)
  parent: System.Int16
  langs:
  - csharp
  - vb
  name: Parse(String, IFormatProvider)
  fullName: System.Int16.Parse(System.String, System.IFormatProvider)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Int16.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Parse
    path: src/mscorlib/src/System/Int16.cs
    startLine: 115
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Converts the string representation of a number in a specified culture-specific format to its 16-bit signed integer equivalent.</p>\n"
  remarks: "\n<p>The <em>s</em> parameter contains a number of the form: </p>\n<p>[ws][sign]digits[ws] </p>\n<p>Elements in square brackets ([ and ]) are optional. The following table describes each element.</p>\n<p>Element</p>\n<p>Description</p>\n<table><tbody><tr><td>\n<p> ws</p>\n</td><td>\n<p>An optional white space. </p>\n</td></tr><tr><td>\n<p> sign</p>\n</td><td>\n<p>An optional sign. </p>\n</td></tr><tr><td>\n<p> digits</p>\n</td><td>\n<p>A sequence of digits ranging from 0 to 9. </p>\n</td></tr></tbody></table>\n<p>The <em>s</em> parameter is interpreted using the <xref href=\"System.Globalization.NumberStyles.Integer\" data-throw-if-not-resolved=\"false\"></xref> style. In addition to decimal digits, only leading and trailing spaces together with a leading sign are allowed in <em>s</em>. To explicitly define the style elements together with the culture-specific formatting information that can be present in <em>s</em>, use the <xref href=\"System.Int16.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)\" data-throw-if-not-resolved=\"false\"></xref> method.</p>\n<p>The <em>provider</em> parameter is an <xref href=\"System.IFormatProvider\" data-throw-if-not-resolved=\"false\"></xref> implementation that obtains a <xref href=\"System.Globalization.NumberFormatInfo\" data-throw-if-not-resolved=\"false\"></xref> object. The <xref href=\"System.Globalization.NumberFormatInfo\" data-throw-if-not-resolved=\"false\"></xref> provides culture-specific information about the format of <em>s</em>. If <em>provider</em> is <strong>null</strong>, the <xref href=\"System.Globalization.NumberFormatInfo\" data-throw-if-not-resolved=\"false\"></xref> for the current culture is used.</p>\n"
  example:
  - "\n<p>The following example parses string representations of <xref href=\"System.Int16\" data-throw-if-not-resolved=\"false\"></xref> values with the <xref href=\"System.Int16.Parse(System.String,System.IFormatProvider)\" data-throw-if-not-resolved=\"false\"></xref> method.</p>System.Int16.Parse#4"
  syntax:
    content: public static short Parse(string s, IFormatProvider provider)
    content.vb: Public Shared Function Parse(s As String, provider As IFormatProvider) As Short
    parameters:
    - id: s
      type: System.String
    - id: provider
      type: System.IFormatProvider
    return:
      type: System.Int16
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>s</em> is <strong>null</strong>. </p>\n"
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "\n<p>\n<em>s</em> is not in the correct format. </p>\n"
  - type: System.OverflowException
    commentId: T:System.OverflowException
    description: "\n<p>\n<em>s</em> represents a number less than <xref href=\"System.Int16.MinValue\" data-throw-if-not-resolved=\"false\"></xref> or greater than <xref href=\"System.Int16.MaxValue\" data-throw-if-not-resolved=\"false\"></xref>. </p>\n"
  seealso:
  - type: System.Int16.ToString
    commentId: M:System.Int16.ToString
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Int16.System#IComparable#CompareTo(System.Object)
  commentId: M:System.Int16.System#IComparable#CompareTo(System.Object)
  id: System#IComparable#CompareTo(System.Object)
  isEii: true
  parent: System.Int16
  langs:
  - csharp
  - vb
  name: IComparable.CompareTo(Object)
  fullName: System.Int16.System.IComparable.CompareTo(System.Object)
  type: Method
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: System.IComparable.CompareTo
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 1030
  assemblies:
  - System.Runtime
  namespace: System
  syntax:
    content: int IComparable.CompareTo(object value)
    content.vb: Function System.IComparable.CompareTo(value As Object) As Integer Implements IComparable.CompareTo
    parameters:
    - id: value
      type: System.Object
    return:
      type: System.Int32
  implements:
  - System.IComparable.CompareTo(System.Object)
  name.vb: System.IComparable.CompareTo(Object)
- uid: System.Int16.System#IConvertible#GetTypeCode
  commentId: M:System.Int16.System#IConvertible#GetTypeCode
  id: System#IConvertible#GetTypeCode
  isEii: true
  parent: System.Int16
  langs:
  - csharp
  - vb
  name: IConvertible.GetTypeCode()
  fullName: System.Int16.System.IConvertible.GetTypeCode()
  type: Method
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: System.IConvertible.GetTypeCode
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 1031
  assemblies:
  - System.Runtime
  namespace: System
  syntax:
    content: TypeCode IConvertible.GetTypeCode()
    content.vb: Function System.IConvertible.GetTypeCode As TypeCode Implements IConvertible.GetTypeCode
    return:
      type: System.TypeCode
  implements:
  - System.IConvertible.GetTypeCode
  name.vb: System.IConvertible.GetTypeCode()
- uid: System.Int16.System#IConvertible#ToBoolean(System.IFormatProvider)
  commentId: M:System.Int16.System#IConvertible#ToBoolean(System.IFormatProvider)
  id: System#IConvertible#ToBoolean(System.IFormatProvider)
  isEii: true
  parent: System.Int16
  langs:
  - csharp
  - vb
  name: IConvertible.ToBoolean(IFormatProvider)
  fullName: System.Int16.System.IConvertible.ToBoolean(System.IFormatProvider)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Int16.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: System.IConvertible.ToBoolean
    path: src/mscorlib/src/System/Int16.cs
    startLine: 191
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>For a description of this member, see <xref href=\"System.IConvertible.ToBoolean(System.IFormatProvider)\" data-throw-if-not-resolved=\"false\"></xref>. </p>\n"
  remarks: "\n<p>This member is an explicit interface member implementation. It can be used only when the <xref href=\"System.Int16\" data-throw-if-not-resolved=\"false\"></xref> instance is cast to an <xref href=\"System.IConvertible\" data-throw-if-not-resolved=\"false\"></xref> interface. The recommended alternative is to call the <xref href=\"System.Convert.ToBoolean(System.Int16)\" data-throw-if-not-resolved=\"false\"></xref> method.</p>\n"
  syntax:
    content: bool IConvertible.ToBoolean(IFormatProvider provider)
    content.vb: Function System.IConvertible.ToBoolean(provider As IFormatProvider) As Boolean Implements IConvertible.ToBoolean
    parameters:
    - id: provider
      type: System.IFormatProvider
    return:
      type: System.Boolean
  implements:
  - System.IConvertible.ToBoolean(System.IFormatProvider)
  name.vb: System.IConvertible.ToBoolean(IFormatProvider)
- uid: System.Int16.System#IConvertible#ToByte(System.IFormatProvider)
  commentId: M:System.Int16.System#IConvertible#ToByte(System.IFormatProvider)
  id: System#IConvertible#ToByte(System.IFormatProvider)
  isEii: true
  parent: System.Int16
  langs:
  - csharp
  - vb
  name: IConvertible.ToByte(IFormatProvider)
  fullName: System.Int16.System.IConvertible.ToByte(System.IFormatProvider)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Int16.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: System.IConvertible.ToByte
    path: src/mscorlib/src/System/Int16.cs
    startLine: 206
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>For a description of this member, see <xref href=\"System.IConvertible.ToByte(System.IFormatProvider)\" data-throw-if-not-resolved=\"false\"></xref>. </p>\n"
  remarks: "\n<p>This member is an explicit interface member implementation. It can be used only when the <xref href=\"System.Int16\" data-throw-if-not-resolved=\"false\"></xref> instance is cast to an <xref href=\"System.IConvertible\" data-throw-if-not-resolved=\"false\"></xref> interface. The recommended alternative is to call the <xref href=\"System.Convert.ToByte(System.Int16)\" data-throw-if-not-resolved=\"false\"></xref> method</p>\n"
  syntax:
    content: byte IConvertible.ToByte(IFormatProvider provider)
    content.vb: Function System.IConvertible.ToByte(provider As IFormatProvider) As Byte Implements IConvertible.ToByte
    parameters:
    - id: provider
      type: System.IFormatProvider
    return:
      type: System.Byte
  implements:
  - System.IConvertible.ToByte(System.IFormatProvider)
  name.vb: System.IConvertible.ToByte(IFormatProvider)
- uid: System.Int16.System#IConvertible#ToChar(System.IFormatProvider)
  commentId: M:System.Int16.System#IConvertible#ToChar(System.IFormatProvider)
  id: System#IConvertible#ToChar(System.IFormatProvider)
  isEii: true
  parent: System.Int16
  langs:
  - csharp
  - vb
  name: IConvertible.ToChar(IFormatProvider)
  fullName: System.Int16.System.IConvertible.ToChar(System.IFormatProvider)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Int16.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: System.IConvertible.ToChar
    path: src/mscorlib/src/System/Int16.cs
    startLine: 196
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>For a description of this member, see <xref href=\"System.IConvertible.ToChar(System.IFormatProvider)\" data-throw-if-not-resolved=\"false\"></xref>. </p>\n"
  remarks: "\n<p>This member is an explicit interface member implementation. It can be used only when the <xref href=\"System.Int16\" data-throw-if-not-resolved=\"false\"></xref> instance is cast to an <xref href=\"System.IConvertible\" data-throw-if-not-resolved=\"false\"></xref> interface. The recommended alternative is to call the <xref href=\"System.Convert.ToChar(System.Int16)\" data-throw-if-not-resolved=\"false\"></xref> method.</p>\n"
  syntax:
    content: char IConvertible.ToChar(IFormatProvider provider)
    content.vb: Function System.IConvertible.ToChar(provider As IFormatProvider) As Char Implements IConvertible.ToChar
    parameters:
    - id: provider
      type: System.IFormatProvider
    return:
      type: System.Char
  implements:
  - System.IConvertible.ToChar(System.IFormatProvider)
  name.vb: System.IConvertible.ToChar(IFormatProvider)
- uid: System.Int16.System#IConvertible#ToDateTime(System.IFormatProvider)
  commentId: M:System.Int16.System#IConvertible#ToDateTime(System.IFormatProvider)
  id: System#IConvertible#ToDateTime(System.IFormatProvider)
  isEii: true
  parent: System.Int16
  langs:
  - csharp
  - vb
  name: IConvertible.ToDateTime(IFormatProvider)
  fullName: System.Int16.System.IConvertible.ToDateTime(System.IFormatProvider)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Int16.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: System.IConvertible.ToDateTime
    path: src/mscorlib/src/System/Int16.cs
    startLine: 256
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>This conversion is not supported. Attempting to use this method throws an <xref href=\"System.InvalidCastException\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: DateTime IConvertible.ToDateTime(IFormatProvider provider)
    content.vb: Function System.IConvertible.ToDateTime(provider As IFormatProvider) As Date Implements IConvertible.ToDateTime
    parameters:
    - id: provider
      type: System.IFormatProvider
    return:
      type: System.DateTime
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "\n<p>In all cases.</p>\n"
  implements:
  - System.IConvertible.ToDateTime(System.IFormatProvider)
  name.vb: System.IConvertible.ToDateTime(IFormatProvider)
- uid: System.Int16.System#IConvertible#ToDecimal(System.IFormatProvider)
  commentId: M:System.Int16.System#IConvertible#ToDecimal(System.IFormatProvider)
  id: System#IConvertible#ToDecimal(System.IFormatProvider)
  isEii: true
  parent: System.Int16
  langs:
  - csharp
  - vb
  name: IConvertible.ToDecimal(IFormatProvider)
  fullName: System.Int16.System.IConvertible.ToDecimal(System.IFormatProvider)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Int16.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: System.IConvertible.ToDecimal
    path: src/mscorlib/src/System/Int16.cs
    startLine: 251
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>For a description of this member, see <xref href=\"System.IConvertible.ToDecimal(System.IFormatProvider)\" data-throw-if-not-resolved=\"false\"></xref>. </p>\n"
  remarks: "\n<p>This member is an explicit interface member implementation. It can be used only when the <xref href=\"System.Int16\" data-throw-if-not-resolved=\"false\"></xref> instance is cast to an <xref href=\"System.IConvertible\" data-throw-if-not-resolved=\"false\"></xref> interface. The recommended alternative is to call the <xref href=\"System.Convert.ToDecimal(System.Int16)\" data-throw-if-not-resolved=\"false\"></xref> method.</p>\n"
  syntax:
    content: decimal IConvertible.ToDecimal(IFormatProvider provider)
    content.vb: Function System.IConvertible.ToDecimal(provider As IFormatProvider) As Decimal Implements IConvertible.ToDecimal
    parameters:
    - id: provider
      type: System.IFormatProvider
    return:
      type: System.Decimal
  implements:
  - System.IConvertible.ToDecimal(System.IFormatProvider)
  name.vb: System.IConvertible.ToDecimal(IFormatProvider)
- uid: System.Int16.System#IConvertible#ToDouble(System.IFormatProvider)
  commentId: M:System.Int16.System#IConvertible#ToDouble(System.IFormatProvider)
  id: System#IConvertible#ToDouble(System.IFormatProvider)
  isEii: true
  parent: System.Int16
  langs:
  - csharp
  - vb
  name: IConvertible.ToDouble(IFormatProvider)
  fullName: System.Int16.System.IConvertible.ToDouble(System.IFormatProvider)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Int16.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: System.IConvertible.ToDouble
    path: src/mscorlib/src/System/Int16.cs
    startLine: 246
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>For a description of this member, see <xref href=\"System.IConvertible.ToDouble(System.IFormatProvider)\" data-throw-if-not-resolved=\"false\"></xref>. </p>\n"
  remarks: "\n<p>This member is an explicit interface member implementation. It can be used only when the <xref href=\"System.Int16\" data-throw-if-not-resolved=\"false\"></xref> instance is cast to an <xref href=\"System.IConvertible\" data-throw-if-not-resolved=\"false\"></xref> interface. The recommended alternative is to call the <xref href=\"System.Convert.ToDouble(System.Int16)\" data-throw-if-not-resolved=\"false\"></xref> method.</p>\n"
  syntax:
    content: double IConvertible.ToDouble(IFormatProvider provider)
    content.vb: Function System.IConvertible.ToDouble(provider As IFormatProvider) As Double Implements IConvertible.ToDouble
    parameters:
    - id: provider
      type: System.IFormatProvider
    return:
      type: System.Double
  implements:
  - System.IConvertible.ToDouble(System.IFormatProvider)
  name.vb: System.IConvertible.ToDouble(IFormatProvider)
- uid: System.Int16.System#IConvertible#ToInt16(System.IFormatProvider)
  commentId: M:System.Int16.System#IConvertible#ToInt16(System.IFormatProvider)
  id: System#IConvertible#ToInt16(System.IFormatProvider)
  isEii: true
  parent: System.Int16
  langs:
  - csharp
  - vb
  name: IConvertible.ToInt16(IFormatProvider)
  fullName: System.Int16.System.IConvertible.ToInt16(System.IFormatProvider)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Int16.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: System.IConvertible.ToInt16
    path: src/mscorlib/src/System/Int16.cs
    startLine: 211
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>For a description of this member, see <xref href=\"System.IConvertible.ToInt16(System.IFormatProvider)\" data-throw-if-not-resolved=\"false\"></xref>. </p>\n"
  remarks: "\n<p>This member is an explicit interface member implementation. It can be used only when the <xref href=\"System.Int16\" data-throw-if-not-resolved=\"false\"></xref> instance is cast to an <xref href=\"System.IConvertible\" data-throw-if-not-resolved=\"false\"></xref> interface. </p>\n"
  syntax:
    content: short IConvertible.ToInt16(IFormatProvider provider)
    content.vb: Function System.IConvertible.ToInt16(provider As IFormatProvider) As Short Implements IConvertible.ToInt16
    parameters:
    - id: provider
      type: System.IFormatProvider
    return:
      type: System.Int16
  implements:
  - System.IConvertible.ToInt16(System.IFormatProvider)
  name.vb: System.IConvertible.ToInt16(IFormatProvider)
- uid: System.Int16.System#IConvertible#ToInt32(System.IFormatProvider)
  commentId: M:System.Int16.System#IConvertible#ToInt32(System.IFormatProvider)
  id: System#IConvertible#ToInt32(System.IFormatProvider)
  isEii: true
  parent: System.Int16
  langs:
  - csharp
  - vb
  name: IConvertible.ToInt32(IFormatProvider)
  fullName: System.Int16.System.IConvertible.ToInt32(System.IFormatProvider)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Int16.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: System.IConvertible.ToInt32
    path: src/mscorlib/src/System/Int16.cs
    startLine: 221
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>For a description of this member, see <xref href=\"System.IConvertible.ToInt32(System.IFormatProvider)\" data-throw-if-not-resolved=\"false\"></xref>. </p>\n"
  remarks: "\n<p>This member is an explicit interface member implementation. It can be used only when the <xref href=\"System.Int16\" data-throw-if-not-resolved=\"false\"></xref> instance is cast to an <xref href=\"System.IConvertible\" data-throw-if-not-resolved=\"false\"></xref> interface. The recommended alternative is to call the <xref href=\"System.Convert.ToInt32(System.Int16)\" data-throw-if-not-resolved=\"false\"></xref> method.</p>\n"
  syntax:
    content: int IConvertible.ToInt32(IFormatProvider provider)
    content.vb: Function System.IConvertible.ToInt32(provider As IFormatProvider) As Integer Implements IConvertible.ToInt32
    parameters:
    - id: provider
      type: System.IFormatProvider
    return:
      type: System.Int32
  implements:
  - System.IConvertible.ToInt32(System.IFormatProvider)
  name.vb: System.IConvertible.ToInt32(IFormatProvider)
- uid: System.Int16.System#IConvertible#ToInt64(System.IFormatProvider)
  commentId: M:System.Int16.System#IConvertible#ToInt64(System.IFormatProvider)
  id: System#IConvertible#ToInt64(System.IFormatProvider)
  isEii: true
  parent: System.Int16
  langs:
  - csharp
  - vb
  name: IConvertible.ToInt64(IFormatProvider)
  fullName: System.Int16.System.IConvertible.ToInt64(System.IFormatProvider)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Int16.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: System.IConvertible.ToInt64
    path: src/mscorlib/src/System/Int16.cs
    startLine: 231
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>For a description of this member, see <xref href=\"System.IConvertible.ToInt64(System.IFormatProvider)\" data-throw-if-not-resolved=\"false\"></xref>. </p>\n"
  remarks: "\n<p>This member is an explicit interface member implementation. It can be used only when the <xref href=\"System.Int16\" data-throw-if-not-resolved=\"false\"></xref> instance is cast to an <xref href=\"System.IConvertible\" data-throw-if-not-resolved=\"false\"></xref> interface. The recommended alternative is to call the <xref href=\"System.Convert.ToInt64(System.Int16)\" data-throw-if-not-resolved=\"false\"></xref> method.</p>\n"
  syntax:
    content: long IConvertible.ToInt64(IFormatProvider provider)
    content.vb: Function System.IConvertible.ToInt64(provider As IFormatProvider) As Long Implements IConvertible.ToInt64
    parameters:
    - id: provider
      type: System.IFormatProvider
    return:
      type: System.Int64
  implements:
  - System.IConvertible.ToInt64(System.IFormatProvider)
  name.vb: System.IConvertible.ToInt64(IFormatProvider)
- uid: System.Int16.System#IConvertible#ToSByte(System.IFormatProvider)
  commentId: M:System.Int16.System#IConvertible#ToSByte(System.IFormatProvider)
  id: System#IConvertible#ToSByte(System.IFormatProvider)
  isEii: true
  parent: System.Int16
  langs:
  - csharp
  - vb
  name: IConvertible.ToSByte(IFormatProvider)
  fullName: System.Int16.System.IConvertible.ToSByte(System.IFormatProvider)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Int16.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: System.IConvertible.ToSByte
    path: src/mscorlib/src/System/Int16.cs
    startLine: 201
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>For a description of this member, see <xref href=\"System.IConvertible.ToSByte(System.IFormatProvider)\" data-throw-if-not-resolved=\"false\"></xref>. </p>\n"
  remarks: "\n<p>This member is an explicit interface member implementation. It can be used only when the <xref href=\"System.Int16\" data-throw-if-not-resolved=\"false\"></xref> instance is cast to an <xref href=\"System.IConvertible\" data-throw-if-not-resolved=\"false\"></xref> interface. The recommended alternative is to call the <xref href=\"System.Convert.ToSByte(System.Int16)\" data-throw-if-not-resolved=\"false\"></xref> method.</p>\n"
  syntax:
    content: sbyte IConvertible.ToSByte(IFormatProvider provider)
    content.vb: Function System.IConvertible.ToSByte(provider As IFormatProvider) As SByte Implements IConvertible.ToSByte
    parameters:
    - id: provider
      type: System.IFormatProvider
    return:
      type: System.SByte
  implements:
  - System.IConvertible.ToSByte(System.IFormatProvider)
  name.vb: System.IConvertible.ToSByte(IFormatProvider)
- uid: System.Int16.System#IConvertible#ToSingle(System.IFormatProvider)
  commentId: M:System.Int16.System#IConvertible#ToSingle(System.IFormatProvider)
  id: System#IConvertible#ToSingle(System.IFormatProvider)
  isEii: true
  parent: System.Int16
  langs:
  - csharp
  - vb
  name: IConvertible.ToSingle(IFormatProvider)
  fullName: System.Int16.System.IConvertible.ToSingle(System.IFormatProvider)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Int16.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: System.IConvertible.ToSingle
    path: src/mscorlib/src/System/Int16.cs
    startLine: 241
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>For a description of this member, see <xref href=\"System.IConvertible.ToSingle(System.IFormatProvider)\" data-throw-if-not-resolved=\"false\"></xref>. </p>\n"
  remarks: "\n<p>This member is an explicit interface member implementation. It can be used only when the <xref href=\"System.Int16\" data-throw-if-not-resolved=\"false\"></xref> instance is cast to an <xref href=\"System.IConvertible\" data-throw-if-not-resolved=\"false\"></xref> interface. The recommended alternative is to call the <xref href=\"System.Convert.ToSingle(System.Int16)\" data-throw-if-not-resolved=\"false\"></xref> method.</p>\n"
  syntax:
    content: float IConvertible.ToSingle(IFormatProvider provider)
    content.vb: Function System.IConvertible.ToSingle(provider As IFormatProvider) As Single Implements IConvertible.ToSingle
    parameters:
    - id: provider
      type: System.IFormatProvider
    return:
      type: System.Single
  implements:
  - System.IConvertible.ToSingle(System.IFormatProvider)
  name.vb: System.IConvertible.ToSingle(IFormatProvider)
- uid: System.Int16.System#IConvertible#ToType(System.Type,System.IFormatProvider)
  commentId: M:System.Int16.System#IConvertible#ToType(System.Type,System.IFormatProvider)
  id: System#IConvertible#ToType(System.Type,System.IFormatProvider)
  isEii: true
  parent: System.Int16
  langs:
  - csharp
  - vb
  name: IConvertible.ToType(Type, IFormatProvider)
  fullName: System.Int16.System.IConvertible.ToType(System.Type, System.IFormatProvider)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Int16.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: System.IConvertible.ToType
    path: src/mscorlib/src/System/Int16.cs
    startLine: 261
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>For a description of this member, see <xref href=\"System.IConvertible.ToType(System.Type,System.IFormatProvider)\" data-throw-if-not-resolved=\"false\"></xref>. </p>\n"
  remarks: "\n<p>This member is an explicit interface member implementation. It can be used only when the <xref href=\"System.Int16\" data-throw-if-not-resolved=\"false\"></xref> instance is cast to an <xref href=\"System.IConvertible\" data-throw-if-not-resolved=\"false\"></xref> interface. The recommended alternative is to call the <strong>static</strong> (<strong>Shared</strong> in Visual Basic) <xref href=\"System.Convert.ChangeType(System.Object,System.Type,System.IFormatProvider)\" data-throw-if-not-resolved=\"false\"></xref> method.</p>\n"
  syntax:
    content: object IConvertible.ToType(Type type, IFormatProvider provider)
    content.vb: Function System.IConvertible.ToType(type As Type, provider As IFormatProvider) As Object Implements IConvertible.ToType
    parameters:
    - id: type
      type: System.Type
    - id: provider
      type: System.IFormatProvider
    return:
      type: System.Object
  implements:
  - System.IConvertible.ToType(System.Type,System.IFormatProvider)
  name.vb: System.IConvertible.ToType(Type, IFormatProvider)
- uid: System.Int16.System#IConvertible#ToUInt16(System.IFormatProvider)
  commentId: M:System.Int16.System#IConvertible#ToUInt16(System.IFormatProvider)
  id: System#IConvertible#ToUInt16(System.IFormatProvider)
  isEii: true
  parent: System.Int16
  langs:
  - csharp
  - vb
  name: IConvertible.ToUInt16(IFormatProvider)
  fullName: System.Int16.System.IConvertible.ToUInt16(System.IFormatProvider)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Int16.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: System.IConvertible.ToUInt16
    path: src/mscorlib/src/System/Int16.cs
    startLine: 216
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>For a description of this member, see <xref href=\"System.IConvertible.ToUInt16(System.IFormatProvider)\" data-throw-if-not-resolved=\"false\"></xref>. </p>\n"
  remarks: "\n<p>This member is an explicit interface member implementation. It can be used only when the <xref href=\"System.Int16\" data-throw-if-not-resolved=\"false\"></xref> instance is cast to an <xref href=\"System.IConvertible\" data-throw-if-not-resolved=\"false\"></xref> interface. The recommended alternative is to call the <xref href=\"System.Convert.ToUInt16(System.Int16)\" data-throw-if-not-resolved=\"false\"></xref> method.</p>\n"
  syntax:
    content: ushort IConvertible.ToUInt16(IFormatProvider provider)
    content.vb: Function System.IConvertible.ToUInt16(provider As IFormatProvider) As UShort Implements IConvertible.ToUInt16
    parameters:
    - id: provider
      type: System.IFormatProvider
    return:
      type: System.UInt16
  implements:
  - System.IConvertible.ToUInt16(System.IFormatProvider)
  name.vb: System.IConvertible.ToUInt16(IFormatProvider)
- uid: System.Int16.System#IConvertible#ToUInt32(System.IFormatProvider)
  commentId: M:System.Int16.System#IConvertible#ToUInt32(System.IFormatProvider)
  id: System#IConvertible#ToUInt32(System.IFormatProvider)
  isEii: true
  parent: System.Int16
  langs:
  - csharp
  - vb
  name: IConvertible.ToUInt32(IFormatProvider)
  fullName: System.Int16.System.IConvertible.ToUInt32(System.IFormatProvider)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Int16.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: System.IConvertible.ToUInt32
    path: src/mscorlib/src/System/Int16.cs
    startLine: 226
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>For a description of this member, see <xref href=\"System.IConvertible.ToUInt32(System.IFormatProvider)\" data-throw-if-not-resolved=\"false\"></xref>. </p>\n"
  remarks: "\n<p>This member is an explicit interface member implementation. It can be used only when the <xref href=\"System.Int16\" data-throw-if-not-resolved=\"false\"></xref> instance is cast to an <xref href=\"System.IConvertible\" data-throw-if-not-resolved=\"false\"></xref> interface. The recommended alternative is to call the <xref href=\"System.Convert.ToUInt32(System.Int16)\" data-throw-if-not-resolved=\"false\"></xref> method.</p>\n"
  syntax:
    content: uint IConvertible.ToUInt32(IFormatProvider provider)
    content.vb: Function System.IConvertible.ToUInt32(provider As IFormatProvider) As UInteger Implements IConvertible.ToUInt32
    parameters:
    - id: provider
      type: System.IFormatProvider
    return:
      type: System.UInt32
  implements:
  - System.IConvertible.ToUInt32(System.IFormatProvider)
  name.vb: System.IConvertible.ToUInt32(IFormatProvider)
- uid: System.Int16.System#IConvertible#ToUInt64(System.IFormatProvider)
  commentId: M:System.Int16.System#IConvertible#ToUInt64(System.IFormatProvider)
  id: System#IConvertible#ToUInt64(System.IFormatProvider)
  isEii: true
  parent: System.Int16
  langs:
  - csharp
  - vb
  name: IConvertible.ToUInt64(IFormatProvider)
  fullName: System.Int16.System.IConvertible.ToUInt64(System.IFormatProvider)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Int16.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: System.IConvertible.ToUInt64
    path: src/mscorlib/src/System/Int16.cs
    startLine: 236
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>For a description of this member, see <xref href=\"System.IConvertible.ToUInt64(System.IFormatProvider)\" data-throw-if-not-resolved=\"false\"></xref>. </p>\n"
  remarks: "\n<p>This member is an explicit interface member implementation. It can be used only when the <xref href=\"System.Int16\" data-throw-if-not-resolved=\"false\"></xref> instance is cast to an <xref href=\"System.IConvertible\" data-throw-if-not-resolved=\"false\"></xref> interface. The recommended alternative is to call the <xref href=\"System.Convert.ToUInt64(System.Int16)\" data-throw-if-not-resolved=\"false\"></xref> method.</p>\n"
  syntax:
    content: ulong IConvertible.ToUInt64(IFormatProvider provider)
    content.vb: Function System.IConvertible.ToUInt64(provider As IFormatProvider) As ULong Implements IConvertible.ToUInt64
    parameters:
    - id: provider
      type: System.IFormatProvider
    return:
      type: System.UInt64
  implements:
  - System.IConvertible.ToUInt64(System.IFormatProvider)
  name.vb: System.IConvertible.ToUInt64(IFormatProvider)
- uid: System.Int16.ToString
  commentId: M:System.Int16.ToString
  id: ToString
  parent: System.Int16
  langs:
  - csharp
  - vb
  name: ToString()
  fullName: System.Int16.ToString()
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Int16.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToString
    path: src/mscorlib/src/System/Int16.cs
    startLine: 73
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Converts the numeric value of this instance to its equivalent string representation.</p>\n"
  remarks: "\n<p>The <xref href=\"System.Int16.ToString\" data-throw-if-not-resolved=\"false\"></xref> method formats an <xref href=\"System.Int16\" data-throw-if-not-resolved=\"false\"></xref> value in the default (\"G\", or general) format by using the <xref href=\"System.Globalization.NumberFormatInfo\" data-throw-if-not-resolved=\"false\"></xref> object of the current culture. If you want to specify a different format or culture, use the other overloads of the <xref href=\"System.Int16.ToString(System.String)\" data-throw-if-not-resolved=\"false\"></xref> method, as follows: </p>\n<p>To use format</p>\n<p>For culture</p>\n<p>Use the overload</p>\n<p></p>\n<p>The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics:</p>\n<ul><li>\n<p>For more information about numeric format specifiers, see Standard Numeric Format Strings and Custom Numeric Format Strings. </p>\n</li><li>\n<p>For more information about formatting, see Formatting Types in the .NET Framework. </p>\n</li></ul>\n"
  example:
  - "\n<p>The following example uses the <xref href=\"System.Int16.ToString\" data-throw-if-not-resolved=\"false\"></xref> method to display an array of <xref href=\"System.Int16\" data-throw-if-not-resolved=\"false\"></xref> values to the console.</p>System.Int16.ToString#1"
  syntax:
    content: >-
      [SecuritySafeCritical]

      public override string ToString()
    content.vb: >-
      <SecuritySafeCritical>

      Public Overrides Function ToString As String
    return:
      type: System.String
  overridden: System.ValueType.ToString
  seealso:
  - type: System.Int16.Parse(System.String)
    commentId: M:System.Int16.Parse(System.String)
  - type: System.String
    commentId: T:System.String
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Int16.ToString(System.IFormatProvider)
  commentId: M:System.Int16.ToString(System.IFormatProvider)
  id: ToString(System.IFormatProvider)
  parent: System.Int16
  langs:
  - csharp
  - vb
  name: ToString(IFormatProvider)
  fullName: System.Int16.ToString(System.IFormatProvider)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Int16.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToString
    path: src/mscorlib/src/System/Int16.cs
    startLine: 79
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Converts the numeric value of this instance to its equivalent string representation using the specified culture-specific format information.</p>\n"
  remarks: "\n<p>The <xref href=\"System.Int16.ToString(System.IFormatProvider)\" data-throw-if-not-resolved=\"false\"></xref> method formats an <xref href=\"System.Int16\" data-throw-if-not-resolved=\"false\"></xref> value in the default (\"G\", or general) format by using the <xref href=\"System.Globalization.NumberFormatInfo\" data-throw-if-not-resolved=\"false\"></xref> object of a specified culture. If you want to specify a different format or the current culture, use the other overloads of the <xref href=\"System.Int16.ToString(System.String)\" data-throw-if-not-resolved=\"false\"></xref> method, as follows:</p>\n<p>To use format</p>\n<p>For culture</p>\n<p>Use the overload</p>\n<p>The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics:</p>\n<ul><li>\n<p>For more information about numeric format specifiers, see Standard Numeric Format Strings and Custom Numeric Format Strings. </p>\n</li><li>\n<p>For more information about formatting, see Formatting Types in the .NET Framework. </p>\n</li></ul>\n<p>The <em>provider</em> parameter is an <xref href=\"System.IFormatProvider\" data-throw-if-not-resolved=\"false\"></xref> implementation whose <xref href=\"System.IFormatProvider.GetFormat(System.Type)\" data-throw-if-not-resolved=\"false\"></xref> method returns a <xref href=\"System.Globalization.NumberFormatInfo\" data-throw-if-not-resolved=\"false\"></xref> object. Typically, <em>provider</em> is a <xref href=\"System.Globalization.NumberFormatInfo\" data-throw-if-not-resolved=\"false\"></xref> object or a <xref href=\"System.Globalization.CultureInfo\" data-throw-if-not-resolved=\"false\"></xref> object. The <xref href=\"System.Globalization.NumberFormatInfo\" data-throw-if-not-resolved=\"false\"></xref> object provides culture-specific information about the format of the string returned by this method. If <em>provider</em> is <strong>null</strong>, this instance is formatted with the <xref href=\"System.Globalization.NumberFormatInfo\" data-throw-if-not-resolved=\"false\"></xref> object for the current culture.</p>\n"
  example:
  - "\n<p>The following example iterates an array of <xref href=\"System.Int16\" data-throw-if-not-resolved=\"false\"></xref> values and displays each of them to the console by calling the <xref href=\"System.Int16.ToString(System.IFormatProvider)\" data-throw-if-not-resolved=\"false\"></xref> method with different format providers. Because of the simple formatting defined by the default \"G\" format specifier, the formatted strings produced for each <xref href=\"System.Int16\" data-throw-if-not-resolved=\"false\"></xref> value are identical regardless of the value of the <em>provider</em> parameter. </p>System.Int16.ToString#2"
  syntax:
    content: >-
      [SecuritySafeCritical]

      public string ToString(IFormatProvider provider)
    content.vb: >-
      <SecuritySafeCritical>

      Public Function ToString(provider As IFormatProvider) As String
    parameters:
    - id: provider
      type: System.IFormatProvider
    return:
      type: System.String
  seealso:
  - type: System.Int16.Parse(System.String)
    commentId: M:System.Int16.Parse(System.String)
  - type: System.String
    commentId: T:System.String
  implements:
  - System.IConvertible.ToString(System.IFormatProvider)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Int16.ToString(System.String)
  commentId: M:System.Int16.ToString(System.String)
  id: ToString(System.String)
  parent: System.Int16
  langs:
  - csharp
  - vb
  name: ToString(String)
  fullName: System.Int16.ToString(System.String)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Int16.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToString
    path: src/mscorlib/src/System/Int16.cs
    startLine: 85
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Converts the numeric value of this instance to its equivalent string representation, using the specified format.</p>\n"
  remarks: "\n<p>The <xref href=\"System.Int16.ToString(System.String)\" data-throw-if-not-resolved=\"false\"></xref> method formats an <xref href=\"System.Int16\" data-throw-if-not-resolved=\"false\"></xref> value in a specified format by using a <xref href=\"System.Globalization.NumberFormatInfo\" data-throw-if-not-resolved=\"false\"></xref> object that represents the conventions of the current culture. If you want to use the default (\"G\", or general) format or specify a different culture, use the other overloads of the <xref href=\"System.Int16.ToString(System.String)\" data-throw-if-not-resolved=\"false\"></xref> method, as follows:</p>\n<p>To use format</p>\n<p>For culture</p>\n<p>Use the overload</p>\n<p>The <em>format</em> parameter can be either a standard or a custom numeric format string. All standard numeric format strings other than \"R\" (or \"r\") are supported, as are all custom numeric format characters. If <em>format</em> is <strong>null</strong> or an empty string, the return value of this instance is formatted with the general numeric format specifier (\"G\").</p>\n<p>The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics:</p>\n<ul><li>\n<p>For more information about numeric format specifiers, see Standard Numeric Format Strings and Custom Numeric Format Strings. </p>\n</li><li>\n<p>For more information about formatting, see Formatting Types in the .NET Framework. </p>\n</li></ul>\n<p>The return value of this instance is formatted with the <xref href=\"System.Globalization.NumberFormatInfo\" data-throw-if-not-resolved=\"false\"></xref> for the current culture.</p>\n"
  example:
  - "\n<p>The following example initializes two <xref href=\"System.Int16\" data-throw-if-not-resolved=\"false\"></xref> values and displays them to the console using each of the supported standard format strings and several custom format strings. The example is run with en-US as the current culture.</p>System.Int16.ToString#3"
  syntax:
    content: public string ToString(string format)
    content.vb: Public Function ToString(format As String) As String
    parameters:
    - id: format
      type: System.String
    return:
      type: System.String
  seealso:
  - type: System.Int16.Parse(System.String)
    commentId: M:System.Int16.Parse(System.String)
  - type: System.String
    commentId: T:System.String
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Int16.ToString(System.String,System.IFormatProvider)
  commentId: M:System.Int16.ToString(System.String,System.IFormatProvider)
  id: ToString(System.String,System.IFormatProvider)
  parent: System.Int16
  langs:
  - csharp
  - vb
  name: ToString(String, IFormatProvider)
  fullName: System.Int16.ToString(System.String, System.IFormatProvider)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Int16.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToString
    path: src/mscorlib/src/System/Int16.cs
    startLine: 90
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Converts the numeric value of this instance to its equivalent string representation using the specified format and culture-specific formatting information.</p>\n"
  remarks: "\n<p>The <xref href=\"System.Int16.ToString(System.String,System.IFormatProvider)\" data-throw-if-not-resolved=\"false\"></xref> method formats an <xref href=\"System.Int16\" data-throw-if-not-resolved=\"false\"></xref> value in a specified format by using the <xref href=\"System.Globalization.NumberFormatInfo\" data-throw-if-not-resolved=\"false\"></xref> object of a specified culture. If you want to use default format or culture settings, use the other overloads of the <xref href=\"System.Int16.ToString(System.String)\" data-throw-if-not-resolved=\"false\"></xref> method, as follows:</p>\n<p>To use format</p>\n<p>For culture</p>\n<p>Use the overload</p>\n<p>The <em>format</em> parameter can be either a standard or a custom numeric format string. All standard numeric format strings other than \"R\" (or \"r\") are supported, as are all custom numeric format characters. If <em>format</em> is <strong>null</strong> or an empty string (\"\"), the string returned by this method is formatted with the general numeric format specifier (\"G\").</p>\n<p>The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics:</p>\n<ul><li>\n<p>For more information about numeric format specifiers, see Standard Numeric Format Strings and Custom Numeric Format Strings. </p>\n</li><li>\n<p>For more information about formatting, see Formatting Types in the .NET Framework. </p>\n</li></ul>\n<p>The <em>provider</em> parameter is an <xref href=\"System.IFormatProvider\" data-throw-if-not-resolved=\"false\"></xref> implementation. Its <xref href=\"System.IFormatProvider.GetFormat(System.Type)\" data-throw-if-not-resolved=\"false\"></xref> method returns a <xref href=\"System.Globalization.NumberFormatInfo\" data-throw-if-not-resolved=\"false\"></xref> object that provides culture-specific information about the format of the string that is returned by this method. The object that implements <xref href=\"System.IFormatProvider\" data-throw-if-not-resolved=\"false\"></xref> can be any of the following:</p>\n<ul><li>\n<p>A <xref href=\"System.Globalization.CultureInfo\" data-throw-if-not-resolved=\"false\"></xref> object that represents the culture whose formatting rules are to be used.</p>\n</li><li>\n<p>A <xref href=\"System.Globalization.NumberFormatInfo\" data-throw-if-not-resolved=\"false\"></xref> object that contains specific numeric formatting information for this value.</p>\n</li><li>\n<p>A custom object that implements <xref href=\"System.IFormatProvider\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n</li></ul>\n<p>If <em>provider</em> is <strong>null</strong>, or a <xref href=\"System.Globalization.NumberFormatInfo\" data-throw-if-not-resolved=\"false\"></xref> object cannot be obtained from <em>provider</em>, the return value is formatted with the <xref href=\"System.Globalization.NumberFormatInfo\" data-throw-if-not-resolved=\"false\"></xref> for the current culture.</p>\n"
  example:
  - "\n<p>The following example displays an <xref href=\"System.Int16\" data-throw-if-not-resolved=\"false\"></xref> value using each of the supported standard format strings in four different cultures. </p>System.Int16.ToString#4"
  syntax:
    content: public string ToString(string format, IFormatProvider provider)
    content.vb: Public Function ToString(format As String, provider As IFormatProvider) As String
    parameters:
    - id: format
      type: System.String
    - id: provider
      type: System.IFormatProvider
    return:
      type: System.String
  seealso:
  - type: System.Int16.Parse(System.String)
    commentId: M:System.Int16.Parse(System.String)
  implements:
  - System.IFormattable.ToString(System.String,System.IFormatProvider)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Int16.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Int16@)
  commentId: M:System.Int16.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Int16@)
  id: TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Int16@)
  parent: System.Int16
  langs:
  - csharp
  - vb
  name: TryParse(String, NumberStyles, IFormatProvider, out Int16)
  fullName: System.Int16.TryParse(System.String, System.Globalization.NumberStyles, System.IFormatProvider, out System.Int16)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Int16.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: TryParse
    path: src/mscorlib/src/System/Int16.cs
    startLine: 151
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Converts the string representation of a number in a specified style and culture-specific format to its 16-bit signed integer equivalent. A return value indicates whether the conversion succeeded or failed.</p>\n"
  remarks: "\n<p>The <xref href=\"System.Int16.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Int16@)\" data-throw-if-not-resolved=\"false\"></xref> method differs from the <xref href=\"System.Int16.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)\" data-throw-if-not-resolved=\"false\"></xref> method by returning a Boolean value that indicates whether the parse operation succeeded instead of returning the parsed <xref href=\"System.Int16\" data-throw-if-not-resolved=\"false\"></xref> value. It eliminates the need to use exception handling to test for a <xref href=\"System.FormatException\" data-throw-if-not-resolved=\"false\"></xref> in the event that <em>s</em> is invalid and cannot be successfully parsed.</p>\n<p>The <em>style</em> parameter defines the style elements (such as white space or a positive or negative sign) that are allowed in the <em>s</em> parameter for the parse operation to succeed. It must be a combination of bit flags from the <xref href=\"System.Globalization.NumberStyles\" data-throw-if-not-resolved=\"false\"></xref> enumeration. Depending on the value of style, the <em>s</em> parameter may include the following elements:</p>\n<p>[ws][$][sign][digits,]digits[.fractional_digits][e[sign]digits][ws] </p>\n<p>Or, if the <em>style</em> parameter includes <xref href=\"System.Globalization.NumberStyles.AllowHexSpecifier\" data-throw-if-not-resolved=\"false\"></xref>:</p>\n<p>[ws]hexdigits[ws]</p>\n<p>Items in square brackets ([ and ]) are optional. The following table describes each element.</p>\n<p>Element</p>\n<p>Description</p>\n<table><tbody><tr><td>\n<p>ws</p>\n</td><td>\n<p>Optional white space. White space can appear at the beginning of <em>s</em> if <em>style</em> includes the <xref href=\"System.Globalization.NumberStyles.AllowLeadingWhite\" data-throw-if-not-resolved=\"false\"></xref> flag, or at the end of <em>s</em> if <em>style</em> includes the <xref href=\"System.Globalization.NumberStyles.AllowTrailingWhite\" data-throw-if-not-resolved=\"false\"></xref> flag.</p>\n</td></tr><tr><td>\n<p>$</p>\n</td><td>\n<p>A culture-specific currency symbol. Its position in the string is defined by the <xref href=\"System.Globalization.NumberFormatInfo.CurrencyPositivePattern\" data-throw-if-not-resolved=\"false\"></xref> property of the <xref href=\"System.Globalization.NumberFormatInfo\" data-throw-if-not-resolved=\"false\"></xref> object returned by the <xref href=\"System.IFormatProvider.GetFormat(System.Type)\" data-throw-if-not-resolved=\"false\"></xref> method of the <em>provider</em> parameter. The currency symbol can appear in <em>s</em> if <em>style</em> includes the <xref href=\"System.Globalization.NumberStyles.AllowCurrencySymbol\" data-throw-if-not-resolved=\"false\"></xref> flag.</p>\n</td></tr><tr><td>\n<p>sign</p>\n</td><td>\n<p>An optional sign. </p>\n</td></tr><tr><td>\n<p>digits</p>\n</td><td>\n<p>A sequence of digits from 0 through 9. </p>\n</td></tr><tr><td>\n<p>,</p>\n</td><td>\n<p>A culture-specific thousands separator. The thousands separator of the culture specified by <em>provider</em> can appear in <em>s</em> if <em>style</em> includes the <xref href=\"System.Globalization.NumberStyles.AllowThousands\" data-throw-if-not-resolved=\"false\"></xref> flag.</p>\n</td></tr><tr><td>\n<p>.</p>\n</td><td>\n<p>A culture-specific decimal point symbol. The decimal point symbol of the culture specified by <em>provider</em> can appear in <em>s</em> if <em>style</em> includes the <xref href=\"System.Globalization.NumberStyles.AllowDecimalPoint\" data-throw-if-not-resolved=\"false\"></xref> flag.</p>\n</td></tr><tr><td>\n<p>fractional_digits</p>\n</td><td>\n<p>One or more occurrences of the digit 0. Fractional digits can appear in <em>s</em> only if <em>style</em> includes the <xref href=\"System.Globalization.NumberStyles.AllowDecimalPoint\" data-throw-if-not-resolved=\"false\"></xref> flag.</p>\n</td></tr><tr><td>\n<p>e</p>\n</td><td>\n<p>The 'e' or 'E' character, which indicates that the value is represented in exponential notation. The <em>s</em> parameter can represent a number in exponential notation if <em>style</em> includes the <xref href=\"System.Globalization.NumberStyles.AllowExponent\" data-throw-if-not-resolved=\"false\"></xref> flag.</p>\n</td></tr><tr><td>\n<p>hexdigits</p>\n</td><td>\n<p>A sequence of hexadecimal digits from 0 through f, or 0 through F. </p>\n</td></tr></tbody></table>\n<p>A string with decimal digits only (which corresponds to the <xref href=\"System.Globalization.NumberStyles.None\" data-throw-if-not-resolved=\"false\"></xref> flag) always parses successfully. Most of the remaining <xref href=\"System.Globalization.NumberStyles\" data-throw-if-not-resolved=\"false\"></xref> members control elements that may be but are not required to be present in this input string. The following table indicates how individual <xref href=\"System.Globalization.NumberStyles\" data-throw-if-not-resolved=\"false\"></xref> members affect the elements that may be present in <em>s</em>.</p>\n<p>Non-composite NumberStyles values</p>\n<p>Elements permitted in s in addition to digits</p>\n<table><tbody><tr><td>\n<p>\n<xref href=\"System.Globalization.NumberStyles.None\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td><td>\n<p>Decimal digits only.</p>\n</td></tr><tr><td>\n<p>\n<xref href=\"System.Globalization.NumberStyles.AllowDecimalPoint\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td><td>\n<p>The . and fractional_digits elements. However, fractional_digits must consist of only one or more 0 digits or the method returns <strong>false</strong>.</p>\n</td></tr><tr><td>\n<p>\n<xref href=\"System.Globalization.NumberStyles.AllowExponent\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td><td>\n<p>The <em>s</em> parameter can also use exponential notation. If <em>s</em> represents a number in exponential notation, it must represent an integer within the range of the <xref href=\"System.Int16\" data-throw-if-not-resolved=\"false\"></xref> data type without a non-zero fractional component.</p>\n</td></tr><tr><td>\n<p>\n<xref href=\"System.Globalization.NumberStyles.AllowLeadingWhite\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td><td>\n<p>The ws element at the beginning of s.</p>\n</td></tr><tr><td>\n<p>\n<xref href=\"System.Globalization.NumberStyles.AllowTrailingWhite\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td><td>\n<p>The ws element at the end of s.</p>\n</td></tr><tr><td>\n<p>\n<xref href=\"System.Globalization.NumberStyles.AllowLeadingSign\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td><td>\n<p>A sign can appear before digits.</p>\n</td></tr><tr><td>\n<p>\n<xref href=\"System.Globalization.NumberStyles.AllowTrailingSign\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td><td>\n<p>A sign can appear after digits.</p>\n</td></tr><tr><td>\n<p>\n<xref href=\"System.Globalization.NumberStyles.AllowParentheses\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td><td>\n<p>The sign element in the form of parentheses enclosing the numeric value.</p>\n</td></tr><tr><td>\n<p>\n<xref href=\"System.Globalization.NumberStyles.AllowThousands\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td><td>\n<p>The , element.</p>\n</td></tr><tr><td>\n<p>\n<xref href=\"System.Globalization.NumberStyles.AllowCurrencySymbol\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td><td>\n<p>The $ element.</p>\n</td></tr><tr><td>\n<p>\n<xref href=\"System.Globalization.NumberStyles.Currency\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td><td>\n<p>All elements. The s parameter cannot represent a hexadecimal number or a number in exponential notation.</p>\n</td></tr><tr><td>\n<p>\n<xref href=\"System.Globalization.NumberStyles.Float\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td><td>\n<p>The ws element at the beginning or end of <em>s</em>, sign at the beginning of <em>s</em>, and the . symbol. The <em>s</em> parameter can also use exponential notation.</p>\n</td></tr><tr><td>\n<p>\n<xref href=\"System.Globalization.NumberStyles.Number\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td><td>\n<p>The ws, sign, thousands separator (,), and decimal point (.) elements.</p>\n</td></tr><tr><td>\n<p>\n<xref href=\"System.Globalization.NumberStyles.Any\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td><td>\n<p>All styles, except <em>s</em> cannot represent a hexadecimal number.</p>\n</td></tr></tbody></table>\n<p>If the <xref href=\"System.Globalization.NumberStyles.AllowHexSpecifier\" data-throw-if-not-resolved=\"false\"></xref> flag is used, <em>s</em> must be a hexadecimal value without a prefix. For example, \"9AF3\" parses successfully, but \"0x9AF3\" does not. The only other flags that can be present in <em>style</em> are <xref href=\"System.Globalization.NumberStyles.AllowLeadingWhite\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"System.Globalization.NumberStyles.AllowTrailingWhite\" data-throw-if-not-resolved=\"false\"></xref>. (The <xref href=\"System.Globalization.NumberStyles\" data-throw-if-not-resolved=\"false\"></xref> enumeration has a composite style, <xref href=\"System.Globalization.NumberStyles.HexNumber\" data-throw-if-not-resolved=\"false\"></xref>, that includes both white space flags.) </p>\n<p>The <em>provider</em> parameter is an <xref href=\"System.IFormatProvider\" data-throw-if-not-resolved=\"false\"></xref> implementation, such as a <xref href=\"System.Globalization.CultureInfo\" data-throw-if-not-resolved=\"false\"></xref> object or a <xref href=\"System.Globalization.NumberFormatInfo\" data-throw-if-not-resolved=\"false\"></xref> object, whose <xref href=\"System.IFormatProvider.GetFormat(System.Type)\" data-throw-if-not-resolved=\"false\"></xref> method returns a <xref href=\"System.Globalization.NumberFormatInfo\" data-throw-if-not-resolved=\"false\"></xref> object. The <xref href=\"System.Globalization.NumberFormatInfo\" data-throw-if-not-resolved=\"false\"></xref> object provides culture-specific information about the format of <em>s</em>. If <em>provider</em> is <strong>null</strong>, the <xref href=\"System.Globalization.NumberFormatInfo\" data-throw-if-not-resolved=\"false\"></xref> object for the current culture is used.</p>\n"
  example:
  - "\n<p>The following example calls the <xref href=\"System.Int16.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Int16@)\" data-throw-if-not-resolved=\"false\"></xref> method with a number of different string values.</p>System.Int16.TryParse#2"
  syntax:
    content: public static bool TryParse(string s, NumberStyles style, IFormatProvider provider, out short result)
    content.vb: Public Shared Function TryParse(s As String, style As NumberStyles, provider As IFormatProvider, ByRef result As Short) As Boolean
    parameters:
    - id: s
      type: System.String
    - id: style
      type: System.Globalization.NumberStyles
    - id: provider
      type: System.IFormatProvider
    - id: result
      type: System.Int16
    return:
      type: System.Boolean
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<p>\n<em>style</em> is not a <xref href=\"System.Globalization.NumberStyles\" data-throw-if-not-resolved=\"false\"></xref> value. </p>\n<p>-or-</p>\n<p>\n<em>style</em> is not a combination of <xref href=\"System.Globalization.NumberStyles.AllowHexSpecifier\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"System.Globalization.NumberStyles.HexNumber\" data-throw-if-not-resolved=\"false\"></xref> values.</p>\n"
  seealso:
  - type: System.Globalization.NumberStyles
    commentId: T:System.Globalization.NumberStyles
  - type: System.Int16.ToString
    commentId: M:System.Int16.ToString
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Int16.TryParse(System.String, System.Globalization.NumberStyles, System.IFormatProvider, ByRef System.Int16)
  name.vb: TryParse(String, NumberStyles, IFormatProvider, ByRef Int16)
- uid: System.Int16.TryParse(System.String,System.Int16@)
  commentId: M:System.Int16.TryParse(System.String,System.Int16@)
  id: TryParse(System.String,System.Int16@)
  parent: System.Int16
  langs:
  - csharp
  - vb
  name: TryParse(String, out Int16)
  fullName: System.Int16.TryParse(System.String, out System.Int16)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Int16.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: TryParse
    path: src/mscorlib/src/System/Int16.cs
    startLine: 147
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Converts the string representation of a number to its 16-bit signed integer equivalent. A return value indicates whether the conversion succeeded or failed.</p>\n"
  remarks: "\n<p>The <xref href=\"System.Int16.TryParse(System.String,System.Int16@)\" data-throw-if-not-resolved=\"false\"></xref> method differs from the <xref href=\"System.Int16.Parse(System.String)\" data-throw-if-not-resolved=\"false\"></xref> method by returning a Boolean value that indicates whether the parse operation succeeded instead of returning the parsed <xref href=\"System.Int16\" data-throw-if-not-resolved=\"false\"></xref> value. It eliminates the need to use exception handling to test for a <xref href=\"System.FormatException\" data-throw-if-not-resolved=\"false\"></xref> in the event that <em>s</em> is invalid and cannot be successfully parsed.</p>\n<p>The <em>s</em> parameter should be the string representation of a number in the form: </p>\n<p>[ws][sign]digits[ws] </p>\n<p>Items in square brackets ([ and ]) are optional. The following table describes each element.</p>\n<p>Element</p>\n<p>Description</p>\n<table><tbody><tr><td>\n<p>ws</p>\n</td><td>\n<p>Optional white space. </p>\n</td></tr><tr><td>\n<p>sign</p>\n</td><td>\n<p>An optional sign. </p>\n</td></tr><tr><td>\n<p>digits</p>\n</td><td>\n<p>A sequence of digits ranging from 0 to 9. </p>\n</td></tr></tbody></table>\n<p>The <em>s</em> parameter is interpreted using the <xref href=\"System.Globalization.NumberStyles.Integer\" data-throw-if-not-resolved=\"false\"></xref> style. In addition to the decimal digits, only leading and trailing spaces together with a leading sign are allowed. To explicitly define the style elements together with the culture-specific formatting information that can be present in <em>s</em>, use the <xref href=\"System.Int16.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Int16@)\" data-throw-if-not-resolved=\"false\"></xref> method.</p>\n<p>The <em>s</em> parameter is parsed using the formatting information in a <xref href=\"System.Globalization.NumberFormatInfo\" data-throw-if-not-resolved=\"false\"></xref> object that is initialized for the current system culture. For more information, see <xref href=\"System.Globalization.NumberFormatInfo.CurrentInfo\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>This overload of the <see cref=\"Overload:System.Int16.TryParse\"></see> method interprets all digits in the <em>s</em> parameter as decimal digits. To parse the string representation of a hexadecimal number, call the <xref href=\"System.Int16.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Int16@)\" data-throw-if-not-resolved=\"false\"></xref> overload.</p>\n"
  example:
  - "\n<p>The following example calls the <xref href=\"System.Int16.TryParse(System.String,System.Int16@)\" data-throw-if-not-resolved=\"false\"></xref>method with a number of different string values.</p>System.Int16.TryParse#1<p>Some of the strings that the <xref href=\"System.Int16.TryParse(System.String,System.Int16@)\" data-throw-if-not-resolved=\"false\"></xref> method is unable to convert in this example are: </p><ul><li><p>\"9432.0\". The conversion fails because the string cannot contain a decimal separator; it must contain integral digits only. </p></li><li><p>\"16,667\". The conversion fails because the string cannot contain group separators; it must contain integral digits only. </p></li><li><p>\"(100)\". The conversion fails because the string cannot contain a negative sign other than the one defined by the current culture's <xref href=\"System.Globalization.NumberFormatInfo.NegativeSign\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"System.Globalization.NumberFormatInfo.NumberNegativePattern\" data-throw-if-not-resolved=\"false\"></xref> properties. </p></li><li><p>\"01FA\". The conversion fails because the string cannot contain hexadecimal digits; it must contain decimal digits only. </p></li></ul>"
  syntax:
    content: public static bool TryParse(string s, out short result)
    content.vb: Public Shared Function TryParse(s As String, ByRef result As Short) As Boolean
    parameters:
    - id: s
      type: System.String
    - id: result
      type: System.Int16
    return:
      type: System.Boolean
  seealso:
  - type: System.Int16.Parse(System.String)
    commentId: M:System.Int16.Parse(System.String)
  - type: System.Int16.ToString
    commentId: M:System.Int16.ToString
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Int16.TryParse(System.String, ByRef System.Int16)
  name.vb: TryParse(String, ByRef Int16)
references:
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.IComparable
  parent: System
  isExternal: false
  name: IComparable
  fullName: System.IComparable
- uid: System.IComparable{System.Int16}
  parent: System
  definition: System.IComparable`1
  name: IComparable<Int16>
  fullName: System.IComparable<System.Int16>
  fullname.vb: System.IComparable(Of System.Int16)
  name.vb: IComparable(Of Int16)
  spec.csharp:
  - uid: System.IComparable`1
    name: IComparable
    fullName: System.IComparable
  - name: <
    fullName: <
  - uid: System.Int16
    name: Int16
    fullName: System.Int16
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IComparable`1
    name: IComparable
    fullName: System.IComparable
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Int16
    name: Int16
    fullName: System.Int16
    isExternal: true
  - name: )
    fullName: )
- uid: System.IConvertible
  parent: System
  isExternal: false
  name: IConvertible
  fullName: System.IConvertible
- uid: System.IEquatable{System.Int16}
  parent: System
  definition: System.IEquatable`1
  name: IEquatable<Int16>
  fullName: System.IEquatable<System.Int16>
  fullname.vb: System.IEquatable(Of System.Int16)
  name.vb: IEquatable(Of Int16)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    fullName: System.IEquatable
  - name: <
    fullName: <
  - uid: System.Int16
    name: Int16
    fullName: System.Int16
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    fullName: System.IEquatable
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Int16
    name: Int16
    fullName: System.Int16
    isExternal: true
  - name: )
    fullName: )
- uid: System.IFormattable
  parent: System
  isExternal: false
  name: IFormattable
  fullName: System.IFormattable
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.IComparable`1
  parent: System
  isExternal: false
  name: IComparable<T>
  fullName: System.IComparable<T>
  fullname.vb: System.IComparable(Of T)
  name.vb: IComparable(Of T)
  spec.csharp:
  - uid: System.IComparable`1
    name: IComparable
    fullName: System.IComparable
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IComparable`1
    name: IComparable
    fullName: System.IComparable
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.IEquatable`1
  parent: System
  isExternal: false
  name: IEquatable<T>
  fullName: System.IEquatable<T>
  fullname.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    fullName: System.IEquatable
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    fullName: System.IEquatable
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System.Int16
  parent: System
  isExternal: false
  name: Int16
  fullName: System.Int16
- uid: System.IComparable{System.Int16}.CompareTo(System.Int16)
  parent: System.IComparable{System.Int16}
  definition: System.IComparable`1.CompareTo(`0)
  name: CompareTo(Int16)
  fullName: System.IComparable<System.Int16>.CompareTo(System.Int16)
  fullname.vb: System.IComparable(Of System.Int16).CompareTo(System.Int16)
  spec.csharp:
  - uid: System.IComparable`1.CompareTo(`0)
    name: CompareTo
    fullName: System.IComparable<System.Int16>.CompareTo
  - name: (
    fullName: (
  - uid: System.Int16
    name: Int16
    fullName: System.Int16
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IComparable`1.CompareTo(`0)
    name: CompareTo
    fullName: System.IComparable(Of System.Int16).CompareTo
  - name: (
    fullName: (
  - uid: System.Int16
    name: Int16
    fullName: System.Int16
    isExternal: true
  - name: )
    fullName: )
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  fullName: System.Int32
- uid: System.IComparable`1.CompareTo(`0)
  parent: System.IComparable`1
  isExternal: false
  name: CompareTo(T)
  fullName: System.IComparable<T>.CompareTo(T)
  fullname.vb: System.IComparable(Of T).CompareTo(T)
  spec.csharp:
  - uid: System.IComparable`1.CompareTo(`0)
    name: CompareTo
    fullName: System.IComparable<T>.CompareTo
  - name: (
    fullName: (
  - name: T
    fullName: T
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IComparable`1.CompareTo(`0)
    name: CompareTo
    fullName: System.IComparable(Of T).CompareTo
  - name: (
    fullName: (
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.IEquatable{System.Int16}.Equals(System.Int16)
  parent: System.IEquatable{System.Int16}
  definition: System.IEquatable`1.Equals(`0)
  name: Equals(Int16)
  fullName: System.IEquatable<System.Int16>.Equals(System.Int16)
  fullname.vb: System.IEquatable(Of System.Int16).Equals(System.Int16)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    fullName: System.IEquatable<System.Int16>.Equals
  - name: (
    fullName: (
  - uid: System.Int16
    name: Int16
    fullName: System.Int16
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    fullName: System.IEquatable(Of System.Int16).Equals
  - name: (
    fullName: (
  - uid: System.Int16
    name: Int16
    fullName: System.Int16
    isExternal: true
  - name: )
    fullName: )
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  fullName: System.Boolean
- uid: System.IEquatable`1.Equals(`0)
  parent: System.IEquatable`1
  isExternal: false
  name: Equals(T)
  fullName: System.IEquatable<T>.Equals(T)
  fullname.vb: System.IEquatable(Of T).Equals(T)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    fullName: System.IEquatable<T>.Equals
  - name: (
    fullName: (
  - name: T
    fullName: T
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    fullName: System.IEquatable(Of T).Equals
  - name: (
    fullName: (
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  name: Equals(Object)
  fullName: System.ValueType.Equals(System.Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    fullName: System.ValueType.Equals
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    fullName: System.ValueType.Equals
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.ValueType
  parent: System
  isExternal: false
  name: ValueType
  fullName: System.ValueType
- uid: System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: false
  name: GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    fullName: System.ValueType.GetHashCode
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    fullName: System.ValueType.GetHashCode
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.String
  parent: System
  isExternal: false
  name: String
  fullName: System.String
- uid: System.Globalization.NumberStyles
  parent: System.Globalization
  isExternal: false
  name: NumberStyles
  fullName: System.Globalization.NumberStyles
- uid: System.Globalization
  isExternal: false
  name: System.Globalization
  fullName: System.Globalization
- uid: System.IFormatProvider
  parent: System
  isExternal: false
  name: IFormatProvider
  fullName: System.IFormatProvider
- uid: System.IComparable.CompareTo(System.Object)
  parent: System.IComparable
  isExternal: true
  name: CompareTo(Object)
  fullName: System.IComparable.CompareTo(System.Object)
  spec.csharp:
  - uid: System.IComparable.CompareTo(System.Object)
    name: CompareTo
    fullName: System.IComparable.CompareTo
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IComparable.CompareTo(System.Object)
    name: CompareTo
    fullName: System.IComparable.CompareTo
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.IConvertible.GetTypeCode
  parent: System.IConvertible
  isExternal: false
  name: GetTypeCode()
  fullName: System.IConvertible.GetTypeCode()
  spec.csharp:
  - uid: System.IConvertible.GetTypeCode
    name: GetTypeCode
    fullName: System.IConvertible.GetTypeCode
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IConvertible.GetTypeCode
    name: GetTypeCode
    fullName: System.IConvertible.GetTypeCode
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.TypeCode
  parent: System
  isExternal: false
  name: TypeCode
  fullName: System.TypeCode
- uid: System.IConvertible.ToBoolean(System.IFormatProvider)
  parent: System.IConvertible
  isExternal: false
  name: ToBoolean(IFormatProvider)
  fullName: System.IConvertible.ToBoolean(System.IFormatProvider)
  spec.csharp:
  - uid: System.IConvertible.ToBoolean(System.IFormatProvider)
    name: ToBoolean
    fullName: System.IConvertible.ToBoolean
  - name: (
    fullName: (
  - uid: System.IFormatProvider
    name: IFormatProvider
    fullName: System.IFormatProvider
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IConvertible.ToBoolean(System.IFormatProvider)
    name: ToBoolean
    fullName: System.IConvertible.ToBoolean
  - name: (
    fullName: (
  - uid: System.IFormatProvider
    name: IFormatProvider
    fullName: System.IFormatProvider
  - name: )
    fullName: )
- uid: System.IConvertible.ToByte(System.IFormatProvider)
  parent: System.IConvertible
  isExternal: false
  name: ToByte(IFormatProvider)
  fullName: System.IConvertible.ToByte(System.IFormatProvider)
  spec.csharp:
  - uid: System.IConvertible.ToByte(System.IFormatProvider)
    name: ToByte
    fullName: System.IConvertible.ToByte
  - name: (
    fullName: (
  - uid: System.IFormatProvider
    name: IFormatProvider
    fullName: System.IFormatProvider
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IConvertible.ToByte(System.IFormatProvider)
    name: ToByte
    fullName: System.IConvertible.ToByte
  - name: (
    fullName: (
  - uid: System.IFormatProvider
    name: IFormatProvider
    fullName: System.IFormatProvider
  - name: )
    fullName: )
- uid: System.Byte
  parent: System
  isExternal: false
  name: Byte
  fullName: System.Byte
- uid: System.IConvertible.ToChar(System.IFormatProvider)
  parent: System.IConvertible
  isExternal: false
  name: ToChar(IFormatProvider)
  fullName: System.IConvertible.ToChar(System.IFormatProvider)
  spec.csharp:
  - uid: System.IConvertible.ToChar(System.IFormatProvider)
    name: ToChar
    fullName: System.IConvertible.ToChar
  - name: (
    fullName: (
  - uid: System.IFormatProvider
    name: IFormatProvider
    fullName: System.IFormatProvider
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IConvertible.ToChar(System.IFormatProvider)
    name: ToChar
    fullName: System.IConvertible.ToChar
  - name: (
    fullName: (
  - uid: System.IFormatProvider
    name: IFormatProvider
    fullName: System.IFormatProvider
  - name: )
    fullName: )
- uid: System.Char
  parent: System
  isExternal: false
  name: Char
  fullName: System.Char
- uid: System.IConvertible.ToDateTime(System.IFormatProvider)
  parent: System.IConvertible
  isExternal: false
  name: ToDateTime(IFormatProvider)
  fullName: System.IConvertible.ToDateTime(System.IFormatProvider)
  spec.csharp:
  - uid: System.IConvertible.ToDateTime(System.IFormatProvider)
    name: ToDateTime
    fullName: System.IConvertible.ToDateTime
  - name: (
    fullName: (
  - uid: System.IFormatProvider
    name: IFormatProvider
    fullName: System.IFormatProvider
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IConvertible.ToDateTime(System.IFormatProvider)
    name: ToDateTime
    fullName: System.IConvertible.ToDateTime
  - name: (
    fullName: (
  - uid: System.IFormatProvider
    name: IFormatProvider
    fullName: System.IFormatProvider
  - name: )
    fullName: )
- uid: System.DateTime
  parent: System
  isExternal: false
  name: DateTime
  fullName: System.DateTime
- uid: System.IConvertible.ToDecimal(System.IFormatProvider)
  parent: System.IConvertible
  isExternal: false
  name: ToDecimal(IFormatProvider)
  fullName: System.IConvertible.ToDecimal(System.IFormatProvider)
  spec.csharp:
  - uid: System.IConvertible.ToDecimal(System.IFormatProvider)
    name: ToDecimal
    fullName: System.IConvertible.ToDecimal
  - name: (
    fullName: (
  - uid: System.IFormatProvider
    name: IFormatProvider
    fullName: System.IFormatProvider
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IConvertible.ToDecimal(System.IFormatProvider)
    name: ToDecimal
    fullName: System.IConvertible.ToDecimal
  - name: (
    fullName: (
  - uid: System.IFormatProvider
    name: IFormatProvider
    fullName: System.IFormatProvider
  - name: )
    fullName: )
- uid: System.Decimal
  parent: System
  isExternal: false
  name: Decimal
  fullName: System.Decimal
- uid: System.IConvertible.ToDouble(System.IFormatProvider)
  parent: System.IConvertible
  isExternal: false
  name: ToDouble(IFormatProvider)
  fullName: System.IConvertible.ToDouble(System.IFormatProvider)
  spec.csharp:
  - uid: System.IConvertible.ToDouble(System.IFormatProvider)
    name: ToDouble
    fullName: System.IConvertible.ToDouble
  - name: (
    fullName: (
  - uid: System.IFormatProvider
    name: IFormatProvider
    fullName: System.IFormatProvider
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IConvertible.ToDouble(System.IFormatProvider)
    name: ToDouble
    fullName: System.IConvertible.ToDouble
  - name: (
    fullName: (
  - uid: System.IFormatProvider
    name: IFormatProvider
    fullName: System.IFormatProvider
  - name: )
    fullName: )
- uid: System.Double
  parent: System
  isExternal: false
  name: Double
  fullName: System.Double
- uid: System.IConvertible.ToInt16(System.IFormatProvider)
  parent: System.IConvertible
  isExternal: false
  name: ToInt16(IFormatProvider)
  fullName: System.IConvertible.ToInt16(System.IFormatProvider)
  spec.csharp:
  - uid: System.IConvertible.ToInt16(System.IFormatProvider)
    name: ToInt16
    fullName: System.IConvertible.ToInt16
  - name: (
    fullName: (
  - uid: System.IFormatProvider
    name: IFormatProvider
    fullName: System.IFormatProvider
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IConvertible.ToInt16(System.IFormatProvider)
    name: ToInt16
    fullName: System.IConvertible.ToInt16
  - name: (
    fullName: (
  - uid: System.IFormatProvider
    name: IFormatProvider
    fullName: System.IFormatProvider
  - name: )
    fullName: )
- uid: System.IConvertible.ToInt32(System.IFormatProvider)
  parent: System.IConvertible
  isExternal: false
  name: ToInt32(IFormatProvider)
  fullName: System.IConvertible.ToInt32(System.IFormatProvider)
  spec.csharp:
  - uid: System.IConvertible.ToInt32(System.IFormatProvider)
    name: ToInt32
    fullName: System.IConvertible.ToInt32
  - name: (
    fullName: (
  - uid: System.IFormatProvider
    name: IFormatProvider
    fullName: System.IFormatProvider
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IConvertible.ToInt32(System.IFormatProvider)
    name: ToInt32
    fullName: System.IConvertible.ToInt32
  - name: (
    fullName: (
  - uid: System.IFormatProvider
    name: IFormatProvider
    fullName: System.IFormatProvider
  - name: )
    fullName: )
- uid: System.IConvertible.ToInt64(System.IFormatProvider)
  parent: System.IConvertible
  isExternal: false
  name: ToInt64(IFormatProvider)
  fullName: System.IConvertible.ToInt64(System.IFormatProvider)
  spec.csharp:
  - uid: System.IConvertible.ToInt64(System.IFormatProvider)
    name: ToInt64
    fullName: System.IConvertible.ToInt64
  - name: (
    fullName: (
  - uid: System.IFormatProvider
    name: IFormatProvider
    fullName: System.IFormatProvider
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IConvertible.ToInt64(System.IFormatProvider)
    name: ToInt64
    fullName: System.IConvertible.ToInt64
  - name: (
    fullName: (
  - uid: System.IFormatProvider
    name: IFormatProvider
    fullName: System.IFormatProvider
  - name: )
    fullName: )
- uid: System.Int64
  parent: System
  isExternal: false
  name: Int64
  fullName: System.Int64
- uid: System.IConvertible.ToSByte(System.IFormatProvider)
  parent: System.IConvertible
  isExternal: false
  name: ToSByte(IFormatProvider)
  fullName: System.IConvertible.ToSByte(System.IFormatProvider)
  spec.csharp:
  - uid: System.IConvertible.ToSByte(System.IFormatProvider)
    name: ToSByte
    fullName: System.IConvertible.ToSByte
  - name: (
    fullName: (
  - uid: System.IFormatProvider
    name: IFormatProvider
    fullName: System.IFormatProvider
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IConvertible.ToSByte(System.IFormatProvider)
    name: ToSByte
    fullName: System.IConvertible.ToSByte
  - name: (
    fullName: (
  - uid: System.IFormatProvider
    name: IFormatProvider
    fullName: System.IFormatProvider
  - name: )
    fullName: )
- uid: System.SByte
  parent: System
  isExternal: false
  name: SByte
  fullName: System.SByte
- uid: System.IConvertible.ToSingle(System.IFormatProvider)
  parent: System.IConvertible
  isExternal: false
  name: ToSingle(IFormatProvider)
  fullName: System.IConvertible.ToSingle(System.IFormatProvider)
  spec.csharp:
  - uid: System.IConvertible.ToSingle(System.IFormatProvider)
    name: ToSingle
    fullName: System.IConvertible.ToSingle
  - name: (
    fullName: (
  - uid: System.IFormatProvider
    name: IFormatProvider
    fullName: System.IFormatProvider
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IConvertible.ToSingle(System.IFormatProvider)
    name: ToSingle
    fullName: System.IConvertible.ToSingle
  - name: (
    fullName: (
  - uid: System.IFormatProvider
    name: IFormatProvider
    fullName: System.IFormatProvider
  - name: )
    fullName: )
- uid: System.Single
  parent: System
  isExternal: false
  name: Single
  fullName: System.Single
- uid: System.IConvertible.ToType(System.Type,System.IFormatProvider)
  parent: System.IConvertible
  isExternal: false
  name: ToType(Type, IFormatProvider)
  fullName: System.IConvertible.ToType(System.Type, System.IFormatProvider)
  spec.csharp:
  - uid: System.IConvertible.ToType(System.Type,System.IFormatProvider)
    name: ToType
    fullName: System.IConvertible.ToType
  - name: (
    fullName: (
  - uid: System.Type
    name: Type
    fullName: System.Type
  - name: ', '
    fullName: ', '
  - uid: System.IFormatProvider
    name: IFormatProvider
    fullName: System.IFormatProvider
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IConvertible.ToType(System.Type,System.IFormatProvider)
    name: ToType
    fullName: System.IConvertible.ToType
  - name: (
    fullName: (
  - uid: System.Type
    name: Type
    fullName: System.Type
  - name: ', '
    fullName: ', '
  - uid: System.IFormatProvider
    name: IFormatProvider
    fullName: System.IFormatProvider
  - name: )
    fullName: )
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  fullName: System.Type
- uid: System.IConvertible.ToUInt16(System.IFormatProvider)
  parent: System.IConvertible
  isExternal: false
  name: ToUInt16(IFormatProvider)
  fullName: System.IConvertible.ToUInt16(System.IFormatProvider)
  spec.csharp:
  - uid: System.IConvertible.ToUInt16(System.IFormatProvider)
    name: ToUInt16
    fullName: System.IConvertible.ToUInt16
  - name: (
    fullName: (
  - uid: System.IFormatProvider
    name: IFormatProvider
    fullName: System.IFormatProvider
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IConvertible.ToUInt16(System.IFormatProvider)
    name: ToUInt16
    fullName: System.IConvertible.ToUInt16
  - name: (
    fullName: (
  - uid: System.IFormatProvider
    name: IFormatProvider
    fullName: System.IFormatProvider
  - name: )
    fullName: )
- uid: System.UInt16
  parent: System
  isExternal: false
  name: UInt16
  fullName: System.UInt16
- uid: System.IConvertible.ToUInt32(System.IFormatProvider)
  parent: System.IConvertible
  isExternal: false
  name: ToUInt32(IFormatProvider)
  fullName: System.IConvertible.ToUInt32(System.IFormatProvider)
  spec.csharp:
  - uid: System.IConvertible.ToUInt32(System.IFormatProvider)
    name: ToUInt32
    fullName: System.IConvertible.ToUInt32
  - name: (
    fullName: (
  - uid: System.IFormatProvider
    name: IFormatProvider
    fullName: System.IFormatProvider
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IConvertible.ToUInt32(System.IFormatProvider)
    name: ToUInt32
    fullName: System.IConvertible.ToUInt32
  - name: (
    fullName: (
  - uid: System.IFormatProvider
    name: IFormatProvider
    fullName: System.IFormatProvider
  - name: )
    fullName: )
- uid: System.UInt32
  parent: System
  isExternal: false
  name: UInt32
  fullName: System.UInt32
- uid: System.IConvertible.ToUInt64(System.IFormatProvider)
  parent: System.IConvertible
  isExternal: false
  name: ToUInt64(IFormatProvider)
  fullName: System.IConvertible.ToUInt64(System.IFormatProvider)
  spec.csharp:
  - uid: System.IConvertible.ToUInt64(System.IFormatProvider)
    name: ToUInt64
    fullName: System.IConvertible.ToUInt64
  - name: (
    fullName: (
  - uid: System.IFormatProvider
    name: IFormatProvider
    fullName: System.IFormatProvider
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IConvertible.ToUInt64(System.IFormatProvider)
    name: ToUInt64
    fullName: System.IConvertible.ToUInt64
  - name: (
    fullName: (
  - uid: System.IFormatProvider
    name: IFormatProvider
    fullName: System.IFormatProvider
  - name: )
    fullName: )
- uid: System.UInt64
  parent: System
  isExternal: false
  name: UInt64
  fullName: System.UInt64
- uid: System.ValueType.ToString
  parent: System.ValueType
  isExternal: false
  name: ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    fullName: System.ValueType.ToString
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    fullName: System.ValueType.ToString
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.IConvertible.ToString(System.IFormatProvider)
  parent: System.IConvertible
  isExternal: false
  name: ToString(IFormatProvider)
  fullName: System.IConvertible.ToString(System.IFormatProvider)
  spec.csharp:
  - uid: System.IConvertible.ToString(System.IFormatProvider)
    name: ToString
    fullName: System.IConvertible.ToString
  - name: (
    fullName: (
  - uid: System.IFormatProvider
    name: IFormatProvider
    fullName: System.IFormatProvider
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IConvertible.ToString(System.IFormatProvider)
    name: ToString
    fullName: System.IConvertible.ToString
  - name: (
    fullName: (
  - uid: System.IFormatProvider
    name: IFormatProvider
    fullName: System.IFormatProvider
  - name: )
    fullName: )
- uid: System.IFormattable.ToString(System.String,System.IFormatProvider)
  parent: System.IFormattable
  isExternal: true
  name: ToString(String, IFormatProvider)
  fullName: System.IFormattable.ToString(System.String, System.IFormatProvider)
  spec.csharp:
  - uid: System.IFormattable.ToString(System.String,System.IFormatProvider)
    name: ToString
    fullName: System.IFormattable.ToString
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.IFormatProvider
    name: IFormatProvider
    fullName: System.IFormatProvider
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IFormattable.ToString(System.String,System.IFormatProvider)
    name: ToString
    fullName: System.IFormattable.ToString
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.IFormatProvider
    name: IFormatProvider
    fullName: System.IFormatProvider
  - name: )
    fullName: )
- uid: System.ArgumentNullException
  isExternal: false
  name: ArgumentNullException
  fullName: System.ArgumentNullException
- uid: System.FormatException
  parent: System
  isExternal: false
  name: FormatException
  fullName: System.FormatException
- uid: System.OverflowException
  isExternal: false
  name: OverflowException
  fullName: System.OverflowException
- uid: System.ArgumentException
  parent: System
  isExternal: false
  name: ArgumentException
  fullName: System.ArgumentException
- uid: System.InvalidCastException
  isExternal: false
  name: InvalidCastException
  fullName: System.InvalidCastException
