items:
- uid: System.Xml.Serialization.XmlAttributeOverrides
  commentId: T:System.Xml.Serialization.XmlAttributeOverrides
  id: XmlAttributeOverrides
  parent: System.Xml.Serialization
  children:
  - System.Xml.Serialization.XmlAttributeOverrides.#ctor
  - System.Xml.Serialization.XmlAttributeOverrides.Add(System.Type,System.String,System.Xml.Serialization.XmlAttributes)
  - System.Xml.Serialization.XmlAttributeOverrides.Add(System.Type,System.Xml.Serialization.XmlAttributes)
  - System.Xml.Serialization.XmlAttributeOverrides.Item(System.Type)
  - System.Xml.Serialization.XmlAttributeOverrides.Item(System.Type,System.String)
  langs:
  - csharp
  - vb
  name: XmlAttributeOverrides
  fullName: System.Xml.Serialization.XmlAttributeOverrides
  type: Class
  source:
    remote:
      path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: XmlAttributeOverrides
    path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.cs
    startLine: 86
  assemblies:
  - System.Xml.XmlSerializer
  namespace: System.Xml.Serialization
  summary: "\n<p>Allows you to override property, field, and class attributes when you use the <xref href=\"System.Xml.Serialization.XmlSerializer\" data-throw-if-not-resolved=\"false\"></xref> to serialize or deserialize an object.</p>\n"
  remarks: "\n<p>The <xref href=\"System.Xml.Serialization.XmlAttributeOverrides\" data-throw-if-not-resolved=\"false\"></xref> enables the <xref href=\"System.Xml.Serialization.XmlSerializer\" data-throw-if-not-resolved=\"false\"></xref> to override the default way of serializing a set of objects. Overriding serialization in this way has two uses: first, you can control and augment the serialization of objects found in a DLL--even if you do not have access to the source; second, you can create one set of serializable classes, but serialize the objects in multiple ways. For example, instead of serializing members of a class instance as XML elements, you can serialize them as XML attributes, resulting in a more efficient document to transport.</p>\n<p>After you create an <xref href=\"System.Xml.Serialization.XmlAttributeOverrides\" data-throw-if-not-resolved=\"false\"></xref> object, you pass it as an argument to the <xref href=\"System.Xml.Serialization.XmlSerializer.#ctor\" data-throw-if-not-resolved=\"false\"></xref> constructor. The resulting <xref href=\"System.Xml.Serialization.XmlSerializer\" data-throw-if-not-resolved=\"false\"></xref> uses the data contained by the <xref href=\"System.Xml.Serialization.XmlAttributeOverrides\" data-throw-if-not-resolved=\"false\"></xref> to override attributes that control how objects are serialized. To accomplish this, the <xref href=\"System.Xml.Serialization.XmlAttributeOverrides\" data-throw-if-not-resolved=\"false\"></xref> contains a collection of the object types that are overridden, as well as an <xref href=\"System.Xml.Serialization.XmlAttributes\" data-throw-if-not-resolved=\"false\"></xref> object associated with each overridden object type. The <xref href=\"System.Xml.Serialization.XmlAttributes\" data-throw-if-not-resolved=\"false\"></xref> object itself contains an appropriate set of attribute objects that control how each field, property, or class is serialized.</p>\n<p>The process for creating and using an <xref href=\"System.Xml.Serialization.XmlAttributeOverrides\" data-throw-if-not-resolved=\"false\"></xref> object is as follows: </p>\n<ol><li>\n<p>Create an <xref href=\"System.Xml.Serialization.XmlAttributes\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n</li><li>\n<p>Create an attribute object that is appropriate to the object being overridden. For example, to override a field or property, create an <xref href=\"System.Xml.Serialization.XmlElementAttribute\" data-throw-if-not-resolved=\"false\"></xref>, using the new, derived type. You can optionally assign a new <xref href=\"System.Xml.Serialization.XmlElementAttribute.ElementName\" data-throw-if-not-resolved=\"false\"></xref>, or <xref href=\"System.Xml.Serialization.XmlElementAttribute.Namespace\" data-throw-if-not-resolved=\"false\"></xref> that overrides the base class's attribute name or namespace.</p>\n</li><li>\n<p>Add the attribute object to the appropriate <xref href=\"System.Xml.Serialization.XmlAttributes\" data-throw-if-not-resolved=\"false\"></xref> property or collection. For example, you would add the <xref href=\"System.Xml.Serialization.XmlElementAttribute\" data-throw-if-not-resolved=\"false\"></xref> to the <xref href=\"System.Xml.Serialization.XmlAttributes.XmlElements\" data-throw-if-not-resolved=\"false\"></xref> collection of the <xref href=\"System.Xml.Serialization.XmlAttributes\" data-throw-if-not-resolved=\"false\"></xref> object, specifying the member name that is being overridden.</p>\n</li><li>\n<p>Create an <xref href=\"System.Xml.Serialization.XmlAttributeOverrides\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n</li><li>\n<p>Using the <xref href=\"System.Xml.Serialization.XmlAttributeOverrides.Add(System.Type,System.Xml.Serialization.XmlAttributes)\" data-throw-if-not-resolved=\"false\"></xref> method, add the <xref href=\"System.Xml.Serialization.XmlAttributes\" data-throw-if-not-resolved=\"false\"></xref> object to the <xref href=\"System.Xml.Serialization.XmlAttributeOverrides\" data-throw-if-not-resolved=\"false\"></xref> object. If the object being overridden is an <xref href=\"System.Xml.Serialization.XmlRootAttribute\" data-throw-if-not-resolved=\"false\"></xref> or <xref href=\"System.Xml.Serialization.XmlTypeAttribute\" data-throw-if-not-resolved=\"false\"></xref>, you need only to specify the type of the overridden object. But if you are overriding a field or property, you must also specify the name of the overridden member.</p>\n</li><li>\n<p>When constructing the <xref href=\"System.Xml.Serialization.XmlSerializer\" data-throw-if-not-resolved=\"false\"></xref>, pass the <xref href=\"System.Xml.Serialization.XmlAttributeOverrides\" data-throw-if-not-resolved=\"false\"></xref> to the <xref href=\"System.Xml.Serialization.XmlSerializer.#ctor\" data-throw-if-not-resolved=\"false\"></xref> constructor.</p>\n</li><li>\n<p>Use the resulting <xref href=\"System.Xml.Serialization.XmlSerializer\" data-throw-if-not-resolved=\"false\"></xref> to serialize or deserialize the derived class objects.</p>\n</li></ol>\n"
  example:
  - "\n<p>The following example serializes a class named <strong>Orchestra</strong>, which contains a single field named <strong>Instruments</strong> that returns an array of <strong>Instrument</strong> objects. A second class named <strong>Brass</strong> inherits from the <strong>Instrument</strong> class. The example uses an instance of the <xref href=\"System.Xml.Serialization.XmlAttributeOverrides\" data-throw-if-not-resolved=\"false\"></xref> class to override the <strong>Instrument</strong> field, allowing the field to accept <strong>Brass</strong> objects.</p>Classic XmlAttributeOverrides Example#1"
  syntax:
    content: public class XmlAttributeOverrides
    content.vb: Public Class XmlAttributeOverrides
  seealso:
  - type: System.Xml.Serialization.XmlSerializer.Deserialize(System.IO.Stream)
    commentId: M:System.Xml.Serialization.XmlSerializer.Deserialize(System.IO.Stream)
  - type: System.Xml.Serialization.XmlSerializer.Serialize(System.IO.TextWriter,System.Object)
    commentId: M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.TextWriter,System.Object)
  - type: System.Xml.Serialization.XmlSerializer
    commentId: T:System.Xml.Serialization.XmlSerializer
  - type: System.Xml.Serialization.XmlAttributes
    commentId: T:System.Xml.Serialization.XmlAttributes
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: System.Xml.Serialization.XmlAttributeOverrides.#ctor
  commentId: M:System.Xml.Serialization.XmlAttributeOverrides.#ctor
  id: '#ctor'
  parent: System.Xml.Serialization.XmlAttributeOverrides
  langs:
  - csharp
  - vb
  name: XmlAttributeOverrides()
  fullName: System.Xml.Serialization.XmlAttributeOverrides.XmlAttributeOverrides()
  type: Constructor
  source:
    remote:
      path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.cs
    startLine: 88
  assemblies:
  - System.Xml.XmlSerializer
  namespace: System.Xml.Serialization
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Xml.Serialization.XmlAttributeOverrides\" data-throw-if-not-resolved=\"false\"></xref> class. </p>\n"
  syntax:
    content: public XmlAttributeOverrides()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Xml.Serialization.XmlAttributeOverrides.Item(System.Type)
  commentId: P:System.Xml.Serialization.XmlAttributeOverrides.Item(System.Type)
  id: Item(System.Type)
  parent: System.Xml.Serialization.XmlAttributeOverrides
  langs:
  - csharp
  - vb
  name: Item[Type]
  fullName: System.Xml.Serialization.XmlAttributeOverrides.Item[System.Type]
  type: Property
  source:
    remote:
      path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: this[]
    path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.cs
    startLine: 89
  assemblies:
  - System.Xml.XmlSerializer
  namespace: System.Xml.Serialization
  summary: "\n<p>Gets the object associated with the specified, base-class, type.</p>\n"
  remarks: "\n<p>Use this overload to return an <xref href=\"System.Xml.Serialization.XmlAttributes\" data-throw-if-not-resolved=\"false\"></xref> object that contains attributes for an <xref href=\"System.Xml.Serialization.XmlRootAttribute\" data-throw-if-not-resolved=\"false\"></xref> or <xref href=\"System.Xml.Serialization.XmlTypeAttribute\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n<p>If the <xref href=\"System.Xml.Serialization.XmlAttributes\" data-throw-if-not-resolved=\"false\"></xref> object contains objects that override an <xref href=\"System.Xml.Serialization.XmlArrayAttribute\" data-throw-if-not-resolved=\"false\"></xref>, <xref href=\"System.Xml.Serialization.XmlArrayItemAttribute\" data-throw-if-not-resolved=\"false\"></xref>, <xref href=\"System.Xml.Serialization.XmlElementAttribute\" data-throw-if-not-resolved=\"false\"></xref>, <xref href=\"System.Xml.Serialization.XmlEnumAttribute\" data-throw-if-not-resolved=\"false\"></xref>, or <xref href=\"System.Xml.Serialization.XmlAttributeAttribute\" data-throw-if-not-resolved=\"false\"></xref>, you must use the overload that specifies the overridden member as well as the type.</p>\n"
  example:
  - "\n<p>The following example creates an <xref href=\"System.Xml.Serialization.XmlAttributeOverrides\" data-throw-if-not-resolved=\"false\"></xref> object, an <xref href=\"System.Xml.Serialization.XmlAttributes\" data-throw-if-not-resolved=\"false\"></xref> object, and an <xref href=\"System.Xml.Serialization.XmlRootAttribute\" data-throw-if-not-resolved=\"false\"></xref> object. The example assigns the <xref href=\"System.Xml.Serialization.XmlRootAttribute\" data-throw-if-not-resolved=\"false\"></xref> to the <xref href=\"System.Xml.Serialization.XmlAttributes.XmlRoot\" data-throw-if-not-resolved=\"false\"></xref> property of the <xref href=\"System.Xml.Serialization.XmlAttributes\" data-throw-if-not-resolved=\"false\"></xref> object, and adds the <xref href=\"System.Xml.Serialization.XmlAttributes\" data-throw-if-not-resolved=\"false\"></xref> object to the <xref href=\"System.Xml.Serialization.XmlAttributeOverrides\" data-throw-if-not-resolved=\"false\"></xref> object. Lastly, the example gets the <xref href=\"System.Xml.Serialization.XmlAttributes\" data-throw-if-not-resolved=\"false\"></xref> object by passing the <xref href=\"System.Type\" data-throw-if-not-resolved=\"false\"></xref> of the serialized class to the <xref href=\"System.Xml.Serialization.XmlAttributeOverrides\" data-throw-if-not-resolved=\"false\"></xref> object. In this example, the <xref href=\"System.Type\" data-throw-if-not-resolved=\"false\"></xref> is <strong>Group</strong>. </p>Classic XmlAttributeOverrides.this Example#1"
  syntax:
    content: public XmlAttributes this[Type type] { get; }
    content.vb: Public ReadOnly Property Item(type As Type) As XmlAttributes
    parameters:
    - id: type
      type: System.Type
      description: "\n<p>The base class <xref href=\"System.Type\" data-throw-if-not-resolved=\"false\"></xref> that is associated with the collection of attributes you want to retrieve. </p>\n"
    return:
      type: System.Xml.Serialization.XmlAttributes
      description: "\n<p>An <xref href=\"System.Xml.Serialization.XmlAttributes\" data-throw-if-not-resolved=\"false\"></xref> that represents the collection of overriding attributes.</p>\n"
  seealso:
  - type: System.Xml.Serialization.XmlAttributes
    commentId: T:System.Xml.Serialization.XmlAttributes
  - type: System.Xml.Serialization.XmlSerializer
    commentId: T:System.Xml.Serialization.XmlSerializer
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: System.Xml.Serialization.XmlAttributeOverrides.Item(System.Type)
  name.vb: Item(Type)
- uid: System.Xml.Serialization.XmlAttributeOverrides.Item(System.Type,System.String)
  commentId: P:System.Xml.Serialization.XmlAttributeOverrides.Item(System.Type,System.String)
  id: Item(System.Type,System.String)
  parent: System.Xml.Serialization.XmlAttributeOverrides
  langs:
  - csharp
  - vb
  name: Item[Type, String]
  fullName: System.Xml.Serialization.XmlAttributeOverrides.Item[System.Type, System.String]
  type: Property
  source:
    remote:
      path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: this[]
    path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.cs
    startLine: 90
  assemblies:
  - System.Xml.XmlSerializer
  namespace: System.Xml.Serialization
  summary: "\n<p>Gets the object associated with the specified (base-class) type. The member parameter specifies the base-class member that is overridden.</p>\n"
  remarks: "\n<p>Use this overload to return an <xref href=\"System.Xml.Serialization.XmlAttributes\" data-throw-if-not-resolved=\"false\"></xref> object that contains objects that override an <xref href=\"System.Xml.Serialization.XmlArrayAttribute\" data-throw-if-not-resolved=\"false\"></xref>, <xref href=\"System.Xml.Serialization.XmlArrayItemAttribute\" data-throw-if-not-resolved=\"false\"></xref>, <xref href=\"System.Xml.Serialization.XmlAttributeAttribute\" data-throw-if-not-resolved=\"false\"></xref>, <xref href=\"System.Xml.Serialization.XmlElementAttribute\" data-throw-if-not-resolved=\"false\"></xref>, or <xref href=\"System.Xml.Serialization.XmlEnumAttribute\" data-throw-if-not-resolved=\"false\"></xref>. If the <xref href=\"System.Xml.Serialization.XmlAttributes\" data-throw-if-not-resolved=\"false\"></xref> object contains an <xref href=\"System.Xml.Serialization.XmlRootAttribute\" data-throw-if-not-resolved=\"false\"></xref> or <xref href=\"System.Xml.Serialization.XmlTypeAttribute\" data-throw-if-not-resolved=\"false\"></xref>, you must use the overload that specifies only the overridden type.</p>\n"
  example:
  - "\n<p>The following example creates an <xref href=\"System.Xml.Serialization.XmlAttributeOverrides\" data-throw-if-not-resolved=\"false\"></xref> object, an <xref href=\"System.Xml.Serialization.XmlAttributes\" data-throw-if-not-resolved=\"false\"></xref>, and an <xref href=\"System.Xml.Serialization.XmlAttributeAttribute\" data-throw-if-not-resolved=\"false\"></xref> object. The example assigns the <xref href=\"System.Xml.Serialization.XmlAttributeAttribute\" data-throw-if-not-resolved=\"false\"></xref> to the <xref href=\"System.Xml.Serialization.XmlAttributes.XmlAttribute\" data-throw-if-not-resolved=\"false\"></xref> property of the <xref href=\"System.Xml.Serialization.XmlAttributes\" data-throw-if-not-resolved=\"false\"></xref> object and adds the <xref href=\"System.Xml.Serialization.XmlAttributes\" data-throw-if-not-resolved=\"false\"></xref> object to the <xref href=\"System.Xml.Serialization.XmlAttributeOverrides\" data-throw-if-not-resolved=\"false\"></xref> object. Lastly, the example gets the <xref href=\"System.Xml.Serialization.XmlAttributes\" data-throw-if-not-resolved=\"false\"></xref> object by passing the <xref href=\"System.Type\" data-throw-if-not-resolved=\"false\"></xref> of the serialized class and member name to the <xref href=\"System.Xml.Serialization.XmlAttributeOverrides\" data-throw-if-not-resolved=\"false\"></xref> object.</p>Classic XmlAttributeOverrides.this1 Example#1"
  syntax:
    content: public XmlAttributes this[Type type, string member] { get; }
    content.vb: Public ReadOnly Property Item(type As Type, member As String) As XmlAttributes
    parameters:
    - id: type
      type: System.Type
      description: "\n<p>The base class <xref href=\"System.Type\" data-throw-if-not-resolved=\"false\"></xref> that is associated with the collection of attributes you want. </p>\n"
    - id: member
      type: System.String
      description: "\n<p>The name of the overridden member that specifies the <xref href=\"System.Xml.Serialization.XmlAttributes\" data-throw-if-not-resolved=\"false\"></xref> to return. </p>\n"
    return:
      type: System.Xml.Serialization.XmlAttributes
      description: "\n<p>An <xref href=\"System.Xml.Serialization.XmlAttributes\" data-throw-if-not-resolved=\"false\"></xref> that represents the collection of overriding attributes.</p>\n"
  seealso:
  - type: System.Xml.Serialization.XmlAttributes
    commentId: T:System.Xml.Serialization.XmlAttributes
  - type: System.Xml.Serialization.XmlSerializer
    commentId: T:System.Xml.Serialization.XmlSerializer
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: System.Xml.Serialization.XmlAttributeOverrides.Item(System.Type, System.String)
  name.vb: Item(Type, String)
- uid: System.Xml.Serialization.XmlAttributeOverrides.Add(System.Type,System.String,System.Xml.Serialization.XmlAttributes)
  commentId: M:System.Xml.Serialization.XmlAttributeOverrides.Add(System.Type,System.String,System.Xml.Serialization.XmlAttributes)
  id: Add(System.Type,System.String,System.Xml.Serialization.XmlAttributes)
  parent: System.Xml.Serialization.XmlAttributeOverrides
  langs:
  - csharp
  - vb
  name: Add(Type, String, XmlAttributes)
  fullName: System.Xml.Serialization.XmlAttributeOverrides.Add(System.Type, System.String, System.Xml.Serialization.XmlAttributes)
  type: Method
  source:
    remote:
      path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Add
    path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.cs
    startLine: 91
  assemblies:
  - System.Xml.XmlSerializer
  namespace: System.Xml.Serialization
  summary: "\n<p>Adds an <xref href=\"System.Xml.Serialization.XmlAttributes\" data-throw-if-not-resolved=\"false\"></xref> object to the collection of <xref href=\"System.Xml.Serialization.XmlAttributes\" data-throw-if-not-resolved=\"false\"></xref> objects. The <em>type</em> parameter specifies an object to be overridden. The <em>member</em> parameter specifies the name of a member that is overridden.</p>\n"
  remarks: "\n<p>The <xref href=\"System.Xml.Serialization.XmlAttributes\" data-throw-if-not-resolved=\"false\"></xref> object contains a union of attribute objects that cause the <xref href=\"System.Xml.Serialization.XmlSerializer\" data-throw-if-not-resolved=\"false\"></xref> to override its default serialization behavior for a set of objects. You choose the attribute objects to place in the <xref href=\"System.Xml.Serialization.XmlAttributes\" data-throw-if-not-resolved=\"false\"></xref> object, depending on the particular behaviors you want to override. For example, the <xref href=\"System.Xml.Serialization.XmlSerializer\" data-throw-if-not-resolved=\"false\"></xref> serializes a class member as an XML element by default. If you want the member to be serialized as an XML attribute instead, you would create an <xref href=\"System.Xml.Serialization.XmlAttributeAttribute\" data-throw-if-not-resolved=\"false\"></xref>, assign it to the <xref href=\"System.Xml.Serialization.XmlAttributes.XmlAttribute\" data-throw-if-not-resolved=\"false\"></xref> property of an <xref href=\"System.Xml.Serialization.XmlAttributes\" data-throw-if-not-resolved=\"false\"></xref>, and add the <xref href=\"System.Xml.Serialization.XmlAttributes\" data-throw-if-not-resolved=\"false\"></xref> object to the <xref href=\"System.Xml.Serialization.XmlAttributeOverrides\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n<p>Use this method when attempting to override an <xref href=\"System.Xml.Serialization.XmlElementAttribute\" data-throw-if-not-resolved=\"false\"></xref>, <xref href=\"System.Xml.Serialization.XmlAttributeAttribute\" data-throw-if-not-resolved=\"false\"></xref>, <xref href=\"System.Xml.Serialization.XmlArrayAttribute\" data-throw-if-not-resolved=\"false\"></xref>, <xref href=\"System.Xml.Serialization.XmlArrayItemAttribute\" data-throw-if-not-resolved=\"false\"></xref>, or <xref href=\"System.Xml.Serialization.XmlIgnoreAttribute\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  example:
  - "\n<p>The following example creates an <xref href=\"System.Xml.Serialization.XmlAttributeAttribute\" data-throw-if-not-resolved=\"false\"></xref> object, and assigns it to the <xref href=\"System.Xml.Serialization.XmlAttributes.XmlAttribute\" data-throw-if-not-resolved=\"false\"></xref> property of an <xref href=\"System.Xml.Serialization.XmlAttributes\" data-throw-if-not-resolved=\"false\"></xref> object. The example then adds the <xref href=\"System.Xml.Serialization.XmlAttributes\" data-throw-if-not-resolved=\"false\"></xref> object to an <xref href=\"System.Xml.Serialization.XmlAttributeOverrides\" data-throw-if-not-resolved=\"false\"></xref> object, before creating an <xref href=\"System.Xml.Serialization.XmlSerializer\" data-throw-if-not-resolved=\"false\"></xref>.</p>Classic XmlAttributeOverrides.Add1 Example#1"
  syntax:
    content: public void Add(Type type, string member, XmlAttributes attributes)
    content.vb: Public Sub Add(type As Type, member As String, attributes As XmlAttributes)
    parameters:
    - id: type
      type: System.Type
      description: "\n<p>The <xref href=\"System.Type\" data-throw-if-not-resolved=\"false\"></xref> of the object to override. </p>\n"
    - id: member
      type: System.String
      description: "\n<p>The name of the member to override. </p>\n"
    - id: attributes
      type: System.Xml.Serialization.XmlAttributes
      description: "\n<p>An <xref href=\"System.Xml.Serialization.XmlAttributes\" data-throw-if-not-resolved=\"false\"></xref> object that represents the overriding attributes. </p>\n"
  seealso:
  - type: System.Xml.Serialization.XmlAttributes
    commentId: T:System.Xml.Serialization.XmlAttributes
  - type: System.Xml.Serialization.XmlSerializer
    commentId: T:System.Xml.Serialization.XmlSerializer
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Xml.Serialization.XmlAttributeOverrides.Add(System.Type,System.Xml.Serialization.XmlAttributes)
  commentId: M:System.Xml.Serialization.XmlAttributeOverrides.Add(System.Type,System.Xml.Serialization.XmlAttributes)
  id: Add(System.Type,System.Xml.Serialization.XmlAttributes)
  parent: System.Xml.Serialization.XmlAttributeOverrides
  langs:
  - csharp
  - vb
  name: Add(Type, XmlAttributes)
  fullName: System.Xml.Serialization.XmlAttributeOverrides.Add(System.Type, System.Xml.Serialization.XmlAttributes)
  type: Method
  source:
    remote:
      path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Add
    path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.cs
    startLine: 92
  assemblies:
  - System.Xml.XmlSerializer
  namespace: System.Xml.Serialization
  summary: "\n<p>Adds an <xref href=\"System.Xml.Serialization.XmlAttributes\" data-throw-if-not-resolved=\"false\"></xref> object to the collection of <xref href=\"System.Xml.Serialization.XmlAttributes\" data-throw-if-not-resolved=\"false\"></xref> objects. The <em>type</em> parameter specifies an object to be overridden by the <xref href=\"System.Xml.Serialization.XmlAttributes\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  remarks: "\n<p>The <xref href=\"System.Xml.Serialization.XmlAttributes\" data-throw-if-not-resolved=\"false\"></xref> object contains a union of attribute objects that cause the <xref href=\"System.Xml.Serialization.XmlSerializer\" data-throw-if-not-resolved=\"false\"></xref> to override its default serialization behavior for a set of objects. You choose the attribute objects to place in the <xref href=\"System.Xml.Serialization.XmlAttributes\" data-throw-if-not-resolved=\"false\"></xref> object, depending on the particular behaviors you want to override. For example, the <xref href=\"System.Xml.Serialization.XmlSerializer\" data-throw-if-not-resolved=\"false\"></xref> serializes a class member as an XML element by default. If you want the member to be serialized as an XM attribute instead, you would create an <xref href=\"System.Xml.Serialization.XmlAttributeAttribute\" data-throw-if-not-resolved=\"false\"></xref>, assign it to the <xref href=\"System.Xml.Serialization.XmlAttributes.XmlAttribute\" data-throw-if-not-resolved=\"false\"></xref> property of an <xref href=\"System.Xml.Serialization.XmlAttributes\" data-throw-if-not-resolved=\"false\"></xref>, and add the <xref href=\"System.Xml.Serialization.XmlAttributes\" data-throw-if-not-resolved=\"false\"></xref> object to the <xref href=\"System.Xml.Serialization.XmlAttributeOverrides\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n<p>Use this overload to override an <xref href=\"System.Xml.Serialization.XmlRootAttribute\" data-throw-if-not-resolved=\"false\"></xref> or <xref href=\"System.Xml.Serialization.XmlTypeAttribute\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  example:
  - "\n<p>The following example serializes a class named <strong>Band</strong> which is derived from a class named <strong>Orchestra</strong>. The example creates an <xref href=\"System.Xml.Serialization.XmlRootAttribute\" data-throw-if-not-resolved=\"false\"></xref> object, and assigns it to the <xref href=\"System.Xml.Serialization.XmlAttributes.XmlRoot\" data-throw-if-not-resolved=\"false\"></xref> property of an <xref href=\"System.Xml.Serialization.XmlAttributes\" data-throw-if-not-resolved=\"false\"></xref> object. The example then calls the <xref href=\"System.Xml.Serialization.XmlAttributeOverrides.Add(System.Type,System.Xml.Serialization.XmlAttributes)\" data-throw-if-not-resolved=\"false\"></xref> method to add the <xref href=\"System.Xml.Serialization.XmlAttributes\" data-throw-if-not-resolved=\"false\"></xref> object to the <xref href=\"System.Xml.Serialization.XmlAttributeOverrides\" data-throw-if-not-resolved=\"false\"></xref> object.</p>Classic XmlAttributeOverrides.Add Example#1"
  syntax:
    content: public void Add(Type type, XmlAttributes attributes)
    content.vb: Public Sub Add(type As Type, attributes As XmlAttributes)
    parameters:
    - id: type
      type: System.Type
      description: "\n<p>The <xref href=\"System.Type\" data-throw-if-not-resolved=\"false\"></xref> of the object that is overridden. </p>\n"
    - id: attributes
      type: System.Xml.Serialization.XmlAttributes
      description: "\n<p>An <xref href=\"System.Xml.Serialization.XmlAttributes\" data-throw-if-not-resolved=\"false\"></xref> object that represents the overriding attributes. </p>\n"
  seealso:
  - type: System.Xml.Serialization.XmlAttributes
    commentId: T:System.Xml.Serialization.XmlAttributes
  - type: System.Xml.Serialization.XmlSerializer
    commentId: T:System.Xml.Serialization.XmlSerializer
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: System.Xml.Serialization
  isExternal: false
  name: System.Xml.Serialization
  fullName: System.Xml.Serialization
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  fullName: System.Type
- uid: System.Xml.Serialization.XmlAttributes
  parent: System.Xml.Serialization
  isExternal: false
  name: XmlAttributes
  fullName: System.Xml.Serialization.XmlAttributes
- uid: System.String
  parent: System
  isExternal: false
  name: String
  fullName: System.String
