items:
- uid: System.Linq.Expressions.BinaryExpression
  commentId: T:System.Linq.Expressions.BinaryExpression
  id: BinaryExpression
  parent: System.Linq.Expressions
  children:
  - System.Linq.Expressions.BinaryExpression.Accept(System.Linq.Expressions.ExpressionVisitor)
  - System.Linq.Expressions.BinaryExpression.CanReduce
  - System.Linq.Expressions.BinaryExpression.Conversion
  - System.Linq.Expressions.BinaryExpression.IsLifted
  - System.Linq.Expressions.BinaryExpression.IsLiftedToNull
  - System.Linq.Expressions.BinaryExpression.Left
  - System.Linq.Expressions.BinaryExpression.Method
  - System.Linq.Expressions.BinaryExpression.Reduce
  - System.Linq.Expressions.BinaryExpression.Right
  - System.Linq.Expressions.BinaryExpression.Update(System.Linq.Expressions.Expression,System.Linq.Expressions.LambdaExpression,System.Linq.Expressions.Expression)
  langs:
  - csharp
  - vb
  name: BinaryExpression
  fullName: System.Linq.Expressions.BinaryExpression
  type: Class
  source:
    remote:
      path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: BinaryExpression
    path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs
    startLine: 35
  assemblies:
  - System.Linq.Expressions
  namespace: System.Linq.Expressions
  summary: "\n<p>Represents an expression that has a binary operator.</p>\n"
  remarks: "\n<p>The following tables summarize the factory methods that can be used to create a <xref href=\"System.Linq.Expressions.BinaryExpression\" data-throw-if-not-resolved=\"false\"></xref> that has a specific node type, represented by the <xref href=\"System.Linq.Expressions.Expression.NodeType\" data-throw-if-not-resolved=\"false\"></xref> property. Each table contains information for a specific class of operations such as arithmetic or bitwise.</p>\n"
  example:
  - <p>The following example creates a <xref href="System.Linq.Expressions.BinaryExpression" data-throw-if-not-resolved="false"></xref> object that represents the subtraction of one number from another.</p>System.Linq.Expressions.Expression#8
  syntax:
    content: 'public class BinaryExpression : Expression'
    content.vb: >-
      Public Class BinaryExpression
          Inherits Expression
  inheritance:
  - System.Object
  - System.Linq.Expressions.Expression
  inheritedMembers:
  - System.Linq.Expressions.Expression.NodeType
  - System.Linq.Expressions.Expression.Type
  - System.Linq.Expressions.Expression.Add(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.Add(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.AddAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.AddAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.AddAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
  - System.Linq.Expressions.Expression.AddAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.AddAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.AddAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
  - System.Linq.Expressions.Expression.AddChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.AddChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.And(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.And(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.AndAlso(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.AndAlso(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.AndAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.AndAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.AndAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
  - System.Linq.Expressions.Expression.ArrayAccess(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  - System.Linq.Expressions.Expression.ArrayAccess(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression[])
  - System.Linq.Expressions.Expression.ArrayIndex(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  - System.Linq.Expressions.Expression.ArrayIndex(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.ArrayIndex(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression[])
  - System.Linq.Expressions.Expression.ArrayLength(System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.Assign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.Bind(System.Reflection.MemberInfo,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.Bind(System.Reflection.MethodInfo,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.Block(System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  - System.Linq.Expressions.Expression.Block(System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression},System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  - System.Linq.Expressions.Expression.Block(System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression},System.Linq.Expressions.Expression[])
  - System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression[])
  - System.Linq.Expressions.Expression.Block(System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  - System.Linq.Expressions.Expression.Block(System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression},System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  - System.Linq.Expressions.Expression.Block(System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression},System.Linq.Expressions.Expression[])
  - System.Linq.Expressions.Expression.Block(System.Type,System.Linq.Expressions.Expression[])
  - System.Linq.Expressions.Expression.Break(System.Linq.Expressions.LabelTarget)
  - System.Linq.Expressions.Expression.Break(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.Break(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression,System.Type)
  - System.Linq.Expressions.Expression.Break(System.Linq.Expressions.LabelTarget,System.Type)
  - System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  - System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.Expression[])
  - System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.String,System.Type[],System.Linq.Expressions.Expression[])
  - System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  - System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression[])
  - System.Linq.Expressions.Expression.Call(System.Type,System.String,System.Type[],System.Linq.Expressions.Expression[])
  - System.Linq.Expressions.Expression.Catch(System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.Catch(System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.Catch(System.Type,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.Catch(System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.ClearDebugInfo(System.Linq.Expressions.SymbolDocumentInfo)
  - System.Linq.Expressions.Expression.Coalesce(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.Coalesce(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.LambdaExpression)
  - System.Linq.Expressions.Expression.Condition(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.Condition(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Type)
  - System.Linq.Expressions.Expression.Constant(System.Object)
  - System.Linq.Expressions.Expression.Constant(System.Object,System.Type)
  - System.Linq.Expressions.Expression.Continue(System.Linq.Expressions.LabelTarget)
  - System.Linq.Expressions.Expression.Continue(System.Linq.Expressions.LabelTarget,System.Type)
  - System.Linq.Expressions.Expression.Convert(System.Linq.Expressions.Expression,System.Type)
  - System.Linq.Expressions.Expression.Convert(System.Linq.Expressions.Expression,System.Type,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.ConvertChecked(System.Linq.Expressions.Expression,System.Type)
  - System.Linq.Expressions.Expression.ConvertChecked(System.Linq.Expressions.Expression,System.Type,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.DebugInfo(System.Linq.Expressions.SymbolDocumentInfo,System.Int32,System.Int32,System.Int32,System.Int32)
  - System.Linq.Expressions.Expression.Decrement(System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.Decrement(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.Default(System.Type)
  - System.Linq.Expressions.Expression.Divide(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.Divide(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.DivideAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.DivideAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.DivideAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
  - System.Linq.Expressions.Expression.ElementInit(System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  - System.Linq.Expressions.Expression.ElementInit(System.Reflection.MethodInfo,System.Linq.Expressions.Expression[])
  - System.Linq.Expressions.Expression.Empty
  - System.Linq.Expressions.Expression.Equal(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.Equal(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.ExclusiveOr(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.ExclusiveOr(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.ExclusiveOrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.ExclusiveOrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.ExclusiveOrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
  - System.Linq.Expressions.Expression.Field(System.Linq.Expressions.Expression,System.Reflection.FieldInfo)
  - System.Linq.Expressions.Expression.Field(System.Linq.Expressions.Expression,System.String)
  - System.Linq.Expressions.Expression.Field(System.Linq.Expressions.Expression,System.Type,System.String)
  - System.Linq.Expressions.Expression.GetActionType(System.Type[])
  - System.Linq.Expressions.Expression.GetDelegateType(System.Type[])
  - System.Linq.Expressions.Expression.GetFuncType(System.Type[])
  - System.Linq.Expressions.Expression.Goto(System.Linq.Expressions.LabelTarget)
  - System.Linq.Expressions.Expression.Goto(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.Goto(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression,System.Type)
  - System.Linq.Expressions.Expression.Goto(System.Linq.Expressions.LabelTarget,System.Type)
  - System.Linq.Expressions.Expression.GreaterThan(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.GreaterThan(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.GreaterThanOrEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.GreaterThanOrEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.IfThen(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.IfThenElse(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.Increment(System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.Increment(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.Invoke(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  - System.Linq.Expressions.Expression.Invoke(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression[])
  - System.Linq.Expressions.Expression.IsFalse(System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.IsFalse(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.IsTrue(System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.IsTrue(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.Label
  - System.Linq.Expressions.Expression.Label(System.Linq.Expressions.LabelTarget)
  - System.Linq.Expressions.Expression.Label(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.Label(System.String)
  - System.Linq.Expressions.Expression.Label(System.Type)
  - System.Linq.Expressions.Expression.Label(System.Type,System.String)
  - System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})
  - System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.Boolean,System.Linq.Expressions.ParameterExpression[])
  - System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})
  - System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression[])
  - System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.String,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})
  - System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.String,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})
  - System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})
  - System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.Boolean,System.Linq.Expressions.ParameterExpression[])
  - System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})
  - System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression[])
  - System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.String,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})
  - System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.String,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})
  - System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})
  - System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.Boolean,System.Linq.Expressions.ParameterExpression[])
  - System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})
  - System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression[])
  - System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.String,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})
  - System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.String,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})
  - System.Linq.Expressions.Expression.LeftShift(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.LeftShift(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.LeftShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.LeftShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.LeftShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
  - System.Linq.Expressions.Expression.LessThan(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.LessThan(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.LessThanOrEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.LessThanOrEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.ListBind(System.Reflection.MemberInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ElementInit})
  - System.Linq.Expressions.Expression.ListBind(System.Reflection.MemberInfo,System.Linq.Expressions.ElementInit[])
  - System.Linq.Expressions.Expression.ListBind(System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ElementInit})
  - System.Linq.Expressions.Expression.ListBind(System.Reflection.MethodInfo,System.Linq.Expressions.ElementInit[])
  - System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ElementInit})
  - System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  - System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Linq.Expressions.ElementInit[])
  - System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Linq.Expressions.Expression[])
  - System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  - System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Reflection.MethodInfo,System.Linq.Expressions.Expression[])
  - System.Linq.Expressions.Expression.Loop(System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.Loop(System.Linq.Expressions.Expression,System.Linq.Expressions.LabelTarget)
  - System.Linq.Expressions.Expression.Loop(System.Linq.Expressions.Expression,System.Linq.Expressions.LabelTarget,System.Linq.Expressions.LabelTarget)
  - System.Linq.Expressions.Expression.MakeBinary(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.MakeBinary(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.MakeBinary(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
  - System.Linq.Expressions.Expression.MakeCatchBlock(System.Type,System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.MakeGoto(System.Linq.Expressions.GotoExpressionKind,System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression,System.Type)
  - System.Linq.Expressions.Expression.MakeIndex(System.Linq.Expressions.Expression,System.Reflection.PropertyInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  - System.Linq.Expressions.Expression.MakeMemberAccess(System.Linq.Expressions.Expression,System.Reflection.MemberInfo)
  - System.Linq.Expressions.Expression.MakeTry(System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.CatchBlock})
  - System.Linq.Expressions.Expression.MakeUnary(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Type)
  - System.Linq.Expressions.Expression.MakeUnary(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Type,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.MemberBind(System.Reflection.MemberInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.MemberBinding})
  - System.Linq.Expressions.Expression.MemberBind(System.Reflection.MemberInfo,System.Linq.Expressions.MemberBinding[])
  - System.Linq.Expressions.Expression.MemberBind(System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.MemberBinding})
  - System.Linq.Expressions.Expression.MemberBind(System.Reflection.MethodInfo,System.Linq.Expressions.MemberBinding[])
  - System.Linq.Expressions.Expression.MemberInit(System.Linq.Expressions.NewExpression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.MemberBinding})
  - System.Linq.Expressions.Expression.MemberInit(System.Linq.Expressions.NewExpression,System.Linq.Expressions.MemberBinding[])
  - System.Linq.Expressions.Expression.Modulo(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.Modulo(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.ModuloAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.ModuloAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.ModuloAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
  - System.Linq.Expressions.Expression.Multiply(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.Multiply(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.MultiplyAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.MultiplyAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.MultiplyAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
  - System.Linq.Expressions.Expression.MultiplyAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.MultiplyAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.MultiplyAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
  - System.Linq.Expressions.Expression.MultiplyChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.MultiplyChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.Negate(System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.Negate(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.NegateChecked(System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.NegateChecked(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo)
  - System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  - System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression},System.Collections.Generic.IEnumerable{System.Reflection.MemberInfo})
  - System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression},System.Reflection.MemberInfo[])
  - System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo,System.Linq.Expressions.Expression[])
  - System.Linq.Expressions.Expression.New(System.Type)
  - System.Linq.Expressions.Expression.NewArrayBounds(System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  - System.Linq.Expressions.Expression.NewArrayBounds(System.Type,System.Linq.Expressions.Expression[])
  - System.Linq.Expressions.Expression.NewArrayInit(System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  - System.Linq.Expressions.Expression.NewArrayInit(System.Type,System.Linq.Expressions.Expression[])
  - System.Linq.Expressions.Expression.Not(System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.Not(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.NotEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.NotEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.OnesComplement(System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.OnesComplement(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.Or(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.Or(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.OrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.OrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.OrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
  - System.Linq.Expressions.Expression.OrElse(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.OrElse(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.Parameter(System.Type)
  - System.Linq.Expressions.Expression.Parameter(System.Type,System.String)
  - System.Linq.Expressions.Expression.PostDecrementAssign(System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.PostDecrementAssign(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.PostIncrementAssign(System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.PostIncrementAssign(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.Power(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.Power(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.PowerAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.PowerAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.PowerAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
  - System.Linq.Expressions.Expression.PreDecrementAssign(System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.PreDecrementAssign(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.PreIncrementAssign(System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.PreIncrementAssign(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.Reflection.PropertyInfo)
  - System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.Reflection.PropertyInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  - System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.Reflection.PropertyInfo,System.Linq.Expressions.Expression[])
  - System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.String)
  - System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.String,System.Linq.Expressions.Expression[])
  - System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.Type,System.String)
  - System.Linq.Expressions.Expression.PropertyOrField(System.Linq.Expressions.Expression,System.String)
  - System.Linq.Expressions.Expression.Quote(System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.ReduceAndCheck
  - System.Linq.Expressions.Expression.ReduceExtensions
  - System.Linq.Expressions.Expression.ReferenceEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.ReferenceNotEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.Rethrow
  - System.Linq.Expressions.Expression.Rethrow(System.Type)
  - System.Linq.Expressions.Expression.Return(System.Linq.Expressions.LabelTarget)
  - System.Linq.Expressions.Expression.Return(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.Return(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression,System.Type)
  - System.Linq.Expressions.Expression.Return(System.Linq.Expressions.LabelTarget,System.Type)
  - System.Linq.Expressions.Expression.RightShift(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.RightShift(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.RightShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.RightShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.RightShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
  - System.Linq.Expressions.Expression.RuntimeVariables(System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})
  - System.Linq.Expressions.Expression.RuntimeVariables(System.Linq.Expressions.ParameterExpression[])
  - System.Linq.Expressions.Expression.Subtract(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.Subtract(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.SubtractAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.SubtractAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.SubtractAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
  - System.Linq.Expressions.Expression.SubtractAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.SubtractAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.SubtractAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
  - System.Linq.Expressions.Expression.SubtractChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.SubtractChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.Switch(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.SwitchCase[])
  - System.Linq.Expressions.Expression.Switch(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.SwitchCase})
  - System.Linq.Expressions.Expression.Switch(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.SwitchCase[])
  - System.Linq.Expressions.Expression.Switch(System.Linq.Expressions.Expression,System.Linq.Expressions.SwitchCase[])
  - System.Linq.Expressions.Expression.Switch(System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.SwitchCase})
  - System.Linq.Expressions.Expression.Switch(System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.SwitchCase[])
  - System.Linq.Expressions.Expression.SwitchCase(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  - System.Linq.Expressions.Expression.SwitchCase(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression[])
  - System.Linq.Expressions.Expression.SymbolDocument(System.String)
  - System.Linq.Expressions.Expression.SymbolDocument(System.String,System.Guid)
  - System.Linq.Expressions.Expression.SymbolDocument(System.String,System.Guid,System.Guid)
  - System.Linq.Expressions.Expression.SymbolDocument(System.String,System.Guid,System.Guid,System.Guid)
  - System.Linq.Expressions.Expression.Throw(System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.Throw(System.Linq.Expressions.Expression,System.Type)
  - System.Linq.Expressions.Expression.ToString
  - System.Linq.Expressions.Expression.TryCatch(System.Linq.Expressions.Expression,System.Linq.Expressions.CatchBlock[])
  - System.Linq.Expressions.Expression.TryCatchFinally(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.CatchBlock[])
  - System.Linq.Expressions.Expression.TryFault(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.TryFinally(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.TryGetActionType(System.Type[],System.Type@)
  - System.Linq.Expressions.Expression.TryGetFuncType(System.Type[],System.Type@)
  - System.Linq.Expressions.Expression.TypeAs(System.Linq.Expressions.Expression,System.Type)
  - System.Linq.Expressions.Expression.TypeEqual(System.Linq.Expressions.Expression,System.Type)
  - System.Linq.Expressions.Expression.TypeIs(System.Linq.Expressions.Expression,System.Type)
  - System.Linq.Expressions.Expression.UnaryPlus(System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.UnaryPlus(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.Unbox(System.Linq.Expressions.Expression,System.Type)
  - System.Linq.Expressions.Expression.Variable(System.Type)
  - System.Linq.Expressions.Expression.Variable(System.Type,System.String)
  - System.Linq.Expressions.Expression.VisitChildren(System.Linq.Expressions.ExpressionVisitor)
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: System.Linq.Expressions.BinaryExpression.CanReduce
  commentId: P:System.Linq.Expressions.BinaryExpression.CanReduce
  id: CanReduce
  parent: System.Linq.Expressions.BinaryExpression
  langs:
  - csharp
  - vb
  name: CanReduce
  fullName: System.Linq.Expressions.BinaryExpression.CanReduce
  type: Property
  source:
    remote:
      path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CanReduce
    path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs
    startLine: 38
  assemblies:
  - System.Linq.Expressions
  namespace: System.Linq.Expressions
  summary: "\n<p>Gets a value that indicates whether the expression tree node can be reduced.</p>\n"
  example:
  - 
  syntax:
    content: public override bool CanReduce { get; }
    content.vb: Public Overrides ReadOnly Property CanReduce As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: "\n<p>True if the expression tree node can be reduced, otherwise false.</p>\n"
  overridden: System.Linq.Expressions.Expression.CanReduce
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: System.Linq.Expressions.BinaryExpression.Conversion
  commentId: P:System.Linq.Expressions.BinaryExpression.Conversion
  id: Conversion
  parent: System.Linq.Expressions.BinaryExpression
  langs:
  - csharp
  - vb
  name: Conversion
  fullName: System.Linq.Expressions.BinaryExpression.Conversion
  type: Property
  source:
    remote:
      path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Conversion
    path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs
    startLine: 39
  assemblies:
  - System.Linq.Expressions
  namespace: System.Linq.Expressions
  summary: "\n<p>Gets the type conversion function that is used by a coalescing or compound assignment operation.</p>\n"
  remarks: "\n<p>The <xref href=\"System.Linq.Expressions.BinaryExpression.Conversion\" data-throw-if-not-resolved=\"false\"></xref> property is <strong>null</strong> for any <xref href=\"System.Linq.Expressions.BinaryExpression\" data-throw-if-not-resolved=\"false\"></xref> whose <xref href=\"System.Linq.Expressions.Expression.NodeType\" data-throw-if-not-resolved=\"false\"></xref> property is not <xref href=\"System.Linq.Expressions.ExpressionType.Coalesce\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  example:
  - 
  syntax:
    content: public LambdaExpression Conversion { get; }
    content.vb: Public ReadOnly Property Conversion As LambdaExpression
    parameters: []
    return:
      type: System.Linq.Expressions.LambdaExpression
      description: "\n<p>A <xref href=\"System.Linq.Expressions.LambdaExpression\" data-throw-if-not-resolved=\"false\"></xref> that represents a type conversion function.</p>\n"
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Linq.Expressions.BinaryExpression.IsLifted
  commentId: P:System.Linq.Expressions.BinaryExpression.IsLifted
  id: IsLifted
  parent: System.Linq.Expressions.BinaryExpression
  langs:
  - csharp
  - vb
  name: IsLifted
  fullName: System.Linq.Expressions.BinaryExpression.IsLifted
  type: Property
  source:
    remote:
      path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IsLifted
    path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs
    startLine: 40
  assemblies:
  - System.Linq.Expressions
  namespace: System.Linq.Expressions
  summary: "\n<p>Gets a value that indicates whether the expression tree node represents a lifted call to an operator.</p>\n"
  remarks: "\n<p>An operator call is lifted if the operator expects non-nullable operands but nullable operands are passed to it.</p>\n"
  example:
  - 
  syntax:
    content: public bool IsLifted { get; }
    content.vb: Public ReadOnly Property IsLifted As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if the node represents a lifted call; otherwise, <strong>false</strong>.</p>\n"
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Linq.Expressions.BinaryExpression.IsLiftedToNull
  commentId: P:System.Linq.Expressions.BinaryExpression.IsLiftedToNull
  id: IsLiftedToNull
  parent: System.Linq.Expressions.BinaryExpression
  langs:
  - csharp
  - vb
  name: IsLiftedToNull
  fullName: System.Linq.Expressions.BinaryExpression.IsLiftedToNull
  type: Property
  source:
    remote:
      path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IsLiftedToNull
    path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs
    startLine: 41
  assemblies:
  - System.Linq.Expressions
  namespace: System.Linq.Expressions
  summary: "\n<p>Gets a value that indicates whether the expression tree node represents a lifted call to an operator whose return type is lifted to a nullable type.</p>\n"
  remarks: "\n<p>An operator call is lifted if the operator expects non-nullable operands but nullable operands are passed to it. If the value of <xref href=\"System.Linq.Expressions.BinaryExpression.IsLiftedToNull\" data-throw-if-not-resolved=\"false\"></xref> is <strong>true</strong>, the operator returns a nullable type, and if a nullable operand evaluates to <strong>null</strong>, the operator returns <strong>null</strong>.</p>\n"
  example:
  - 
  syntax:
    content: public bool IsLiftedToNull { get; }
    content.vb: Public ReadOnly Property IsLiftedToNull As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if the operator's return type is lifted to a nullable type; otherwise, <strong>false</strong>.</p>\n"
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Linq.Expressions.BinaryExpression.Left
  commentId: P:System.Linq.Expressions.BinaryExpression.Left
  id: Left
  parent: System.Linq.Expressions.BinaryExpression
  langs:
  - csharp
  - vb
  name: Left
  fullName: System.Linq.Expressions.BinaryExpression.Left
  type: Property
  source:
    remote:
      path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Left
    path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs
    startLine: 42
  assemblies:
  - System.Linq.Expressions
  namespace: System.Linq.Expressions
  summary: "\n<p>Gets the left operand of the binary operation.</p>\n"
  example:
  - 
  syntax:
    content: public Expression Left { get; }
    content.vb: Public ReadOnly Property Left As Expression
    parameters: []
    return:
      type: System.Linq.Expressions.Expression
      description: "\n<p>An <xref href=\"System.Linq.Expressions.Expression\" data-throw-if-not-resolved=\"false\"></xref> that represents the left operand of the binary operation.</p>\n"
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Linq.Expressions.BinaryExpression.Method
  commentId: P:System.Linq.Expressions.BinaryExpression.Method
  id: Method
  parent: System.Linq.Expressions.BinaryExpression
  langs:
  - csharp
  - vb
  name: Method
  fullName: System.Linq.Expressions.BinaryExpression.Method
  type: Property
  source:
    remote:
      path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Method
    path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs
    startLine: 43
  assemblies:
  - System.Linq.Expressions
  namespace: System.Linq.Expressions
  summary: "\n<p>Gets the implementing method for the binary operation.</p>\n"
  remarks: "\n<p>If a <xref href=\"System.Linq.Expressions.BinaryExpression\" data-throw-if-not-resolved=\"false\"></xref> represents an operation that uses a predefined operator, the <xref href=\"System.Linq.Expressions.BinaryExpression.Method\" data-throw-if-not-resolved=\"false\"></xref> property is <strong>null</strong>.</p>\n"
  example:
  - 
  syntax:
    content: public MethodInfo Method { get; }
    content.vb: Public ReadOnly Property Method As MethodInfo
    parameters: []
    return:
      type: System.Reflection.MethodInfo
      description: "\n<p>The <xref href=\"System.Reflection.MethodInfo\" data-throw-if-not-resolved=\"false\"></xref> that represents the implementing method.</p>\n"
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Linq.Expressions.BinaryExpression.Right
  commentId: P:System.Linq.Expressions.BinaryExpression.Right
  id: Right
  parent: System.Linq.Expressions.BinaryExpression
  langs:
  - csharp
  - vb
  name: Right
  fullName: System.Linq.Expressions.BinaryExpression.Right
  type: Property
  source:
    remote:
      path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Right
    path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs
    startLine: 44
  assemblies:
  - System.Linq.Expressions
  namespace: System.Linq.Expressions
  summary: "\n<p>Gets the right operand of the binary operation.</p>\n"
  example:
  - 
  syntax:
    content: public Expression Right { get; }
    content.vb: Public ReadOnly Property Right As Expression
    parameters: []
    return:
      type: System.Linq.Expressions.Expression
      description: "\n<p>An <xref href=\"System.Linq.Expressions.Expression\" data-throw-if-not-resolved=\"false\"></xref> that represents the right operand of the binary operation.</p>\n"
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Linq.Expressions.BinaryExpression.Accept(System.Linq.Expressions.ExpressionVisitor)
  commentId: M:System.Linq.Expressions.BinaryExpression.Accept(System.Linq.Expressions.ExpressionVisitor)
  id: Accept(System.Linq.Expressions.ExpressionVisitor)
  parent: System.Linq.Expressions.BinaryExpression
  langs:
  - csharp
  - vb
  name: Accept(ExpressionVisitor)
  fullName: System.Linq.Expressions.BinaryExpression.Accept(System.Linq.Expressions.ExpressionVisitor)
  type: Method
  source:
    remote:
      path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Accept
    path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs
    startLine: 45
  assemblies:
  - System.Linq.Expressions
  namespace: System.Linq.Expressions
  summary: "\n<p>Dispatches to the specific visit method for this node type. For example, <xref href=\"System.Linq.Expressions.MethodCallExpression\" data-throw-if-not-resolved=\"false\"></xref> calls the <xref href=\"System.Linq.Expressions.ExpressionVisitor.VisitMethodCall(System.Linq.Expressions.MethodCallExpression)\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  remarks: "\n<p>This default implementation for <xref href=\"System.Linq.Expressions.ExpressionType.Extension\" data-throw-if-not-resolved=\"false\"></xref> nodes calls <xref href=\"System.Linq.Expressions.ExpressionVisitor.VisitExtension(System.Linq.Expressions.Expression)\" data-throw-if-not-resolved=\"false\"></xref>. Override this method to call into a more specific method on a derived visitor class of the <xref href=\"System.Linq.Expressions.ExpressionVisitor\" data-throw-if-not-resolved=\"false\"></xref> class. However, it should still support unknown visitors by calling <xref href=\"System.Linq.Expressions.ExpressionVisitor.VisitExtension(System.Linq.Expressions.Expression)\" data-throw-if-not-resolved=\"false\"></xref>. </p>\n"
  example:
  - 
  syntax:
    content: protected override Expression Accept(ExpressionVisitor visitor)
    content.vb: Protected Overrides Function Accept(visitor As ExpressionVisitor) As Expression
    parameters:
    - id: visitor
      type: System.Linq.Expressions.ExpressionVisitor
      description: "\n<p>The visitor to visit this node with.</p>\n"
    return:
      type: System.Linq.Expressions.Expression
      description: "\n<p>The result of visiting this node.</p>\n"
  overridden: System.Linq.Expressions.Expression.Accept(System.Linq.Expressions.ExpressionVisitor)
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: System.Linq.Expressions.BinaryExpression.Reduce
  commentId: M:System.Linq.Expressions.BinaryExpression.Reduce
  id: Reduce
  parent: System.Linq.Expressions.BinaryExpression
  langs:
  - csharp
  - vb
  name: Reduce()
  fullName: System.Linq.Expressions.BinaryExpression.Reduce()
  type: Method
  source:
    remote:
      path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Reduce
    path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs
    startLine: 46
  assemblies:
  - System.Linq.Expressions
  namespace: System.Linq.Expressions
  summary: "\n<p>Reduces the binary expression node to a simpler expression.</p>\n"
  remarks: "\n<p>If CanReduce returns true, this should return a valid expression.</p>\n<p>This method can return another node which itself must be reduced.</p>\n"
  example:
  - 
  syntax:
    content: public override Expression Reduce()
    content.vb: Public Overrides Function Reduce As Expression
    return:
      type: System.Linq.Expressions.Expression
      description: "\n<p>The reduced expression.</p>\n"
  overridden: System.Linq.Expressions.Expression.Reduce
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Linq.Expressions.BinaryExpression.Update(System.Linq.Expressions.Expression,System.Linq.Expressions.LambdaExpression,System.Linq.Expressions.Expression)
  commentId: M:System.Linq.Expressions.BinaryExpression.Update(System.Linq.Expressions.Expression,System.Linq.Expressions.LambdaExpression,System.Linq.Expressions.Expression)
  id: Update(System.Linq.Expressions.Expression,System.Linq.Expressions.LambdaExpression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.BinaryExpression
  langs:
  - csharp
  - vb
  name: Update(Expression, LambdaExpression, Expression)
  fullName: System.Linq.Expressions.BinaryExpression.Update(System.Linq.Expressions.Expression, System.Linq.Expressions.LambdaExpression, System.Linq.Expressions.Expression)
  type: Method
  source:
    remote:
      path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Update
    path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs
    startLine: 47
  assemblies:
  - System.Linq.Expressions
  namespace: System.Linq.Expressions
  summary: "\n<p>Creates a new expression that is like this one, but using the supplied children. If all of the children are the same, it will return this expression.</p>\n"
  example:
  - 
  syntax:
    content: public BinaryExpression Update(Expression left, LambdaExpression conversion, Expression right)
    content.vb: Public Function Update(left As Expression, conversion As LambdaExpression, right As Expression) As BinaryExpression
    parameters:
    - id: left
      type: System.Linq.Expressions.Expression
      description: "\n<p>The <xref href=\"System.Linq.Expressions.BinaryExpression.Left\" data-throw-if-not-resolved=\"false\"></xref> property of the result. </p>\n"
    - id: conversion
      type: System.Linq.Expressions.LambdaExpression
      description: "\n<p>The <xref href=\"System.Linq.Expressions.BinaryExpression.Conversion\" data-throw-if-not-resolved=\"false\"></xref> property of the result.</p>\n"
    - id: right
      type: System.Linq.Expressions.Expression
      description: "\n<p>The <xref href=\"System.Linq.Expressions.BinaryExpression.Right\" data-throw-if-not-resolved=\"false\"></xref> property of the result. </p>\n"
    return:
      type: System.Linq.Expressions.BinaryExpression
      description: "\n<p>This expression if no children are changed or an expression with the updated children.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: System.Linq.Expressions
  isExternal: false
  name: System.Linq.Expressions
  fullName: System.Linq.Expressions
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression.NodeType
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: NodeType
  fullName: System.Linq.Expressions.Expression.NodeType
- uid: System.Linq.Expressions.Expression.Type
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Type
  fullName: System.Linq.Expressions.Expression.Type
- uid: System.Linq.Expressions.Expression.Add(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Add(Expression, Expression)
  fullName: System.Linq.Expressions.Expression.Add(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.Add(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
    name: Add
    fullName: System.Linq.Expressions.Expression.Add
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.Add(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
    name: Add
    fullName: System.Linq.Expressions.Expression.Add
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: )
    fullName: )
- uid: System.Linq.Expressions.Expression.Add(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: Add(Expression, Expression, MethodInfo)
  fullName: System.Linq.Expressions.Expression.Add(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.Add(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
    name: Add
    fullName: System.Linq.Expressions.Expression.Add
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: MethodInfo
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.Add(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
    name: Add
    fullName: System.Linq.Expressions.Expression.Add
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: MethodInfo
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: )
    fullName: )
- uid: System.Linq.Expressions.Expression.AddAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: AddAssign(Expression, Expression)
  fullName: System.Linq.Expressions.Expression.AddAssign(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.AddAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
    name: AddAssign
    fullName: System.Linq.Expressions.Expression.AddAssign
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.AddAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
    name: AddAssign
    fullName: System.Linq.Expressions.Expression.AddAssign
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: )
    fullName: )
- uid: System.Linq.Expressions.Expression.AddAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: AddAssign(Expression, Expression, MethodInfo)
  fullName: System.Linq.Expressions.Expression.AddAssign(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.AddAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
    name: AddAssign
    fullName: System.Linq.Expressions.Expression.AddAssign
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: MethodInfo
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.AddAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
    name: AddAssign
    fullName: System.Linq.Expressions.Expression.AddAssign
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: MethodInfo
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: )
    fullName: )
- uid: System.Linq.Expressions.Expression.AddAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: AddAssign(Expression, Expression, MethodInfo, LambdaExpression)
  fullName: System.Linq.Expressions.Expression.AddAssign(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo, System.Linq.Expressions.LambdaExpression)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.AddAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
    name: AddAssign
    fullName: System.Linq.Expressions.Expression.AddAssign
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: MethodInfo
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.LambdaExpression
    name: LambdaExpression
    fullName: System.Linq.Expressions.LambdaExpression
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.AddAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
    name: AddAssign
    fullName: System.Linq.Expressions.Expression.AddAssign
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: MethodInfo
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.LambdaExpression
    name: LambdaExpression
    fullName: System.Linq.Expressions.LambdaExpression
  - name: )
    fullName: )
- uid: System.Linq.Expressions.Expression.AddAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: AddAssignChecked(Expression, Expression)
  fullName: System.Linq.Expressions.Expression.AddAssignChecked(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.AddAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
    name: AddAssignChecked
    fullName: System.Linq.Expressions.Expression.AddAssignChecked
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.AddAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
    name: AddAssignChecked
    fullName: System.Linq.Expressions.Expression.AddAssignChecked
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: )
    fullName: )
- uid: System.Linq.Expressions.Expression.AddAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: AddAssignChecked(Expression, Expression, MethodInfo)
  fullName: System.Linq.Expressions.Expression.AddAssignChecked(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.AddAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
    name: AddAssignChecked
    fullName: System.Linq.Expressions.Expression.AddAssignChecked
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: MethodInfo
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.AddAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
    name: AddAssignChecked
    fullName: System.Linq.Expressions.Expression.AddAssignChecked
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: MethodInfo
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: )
    fullName: )
- uid: System.Linq.Expressions.Expression.AddAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: AddAssignChecked(Expression, Expression, MethodInfo, LambdaExpression)
  fullName: System.Linq.Expressions.Expression.AddAssignChecked(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo, System.Linq.Expressions.LambdaExpression)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.AddAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
    name: AddAssignChecked
    fullName: System.Linq.Expressions.Expression.AddAssignChecked
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: MethodInfo
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.LambdaExpression
    name: LambdaExpression
    fullName: System.Linq.Expressions.LambdaExpression
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.AddAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
    name: AddAssignChecked
    fullName: System.Linq.Expressions.Expression.AddAssignChecked
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: MethodInfo
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.LambdaExpression
    name: LambdaExpression
    fullName: System.Linq.Expressions.LambdaExpression
  - name: )
    fullName: )
- uid: System.Linq.Expressions.Expression.AddChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: AddChecked(Expression, Expression)
  fullName: System.Linq.Expressions.Expression.AddChecked(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.AddChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
    name: AddChecked
    fullName: System.Linq.Expressions.Expression.AddChecked
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.AddChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
    name: AddChecked
    fullName: System.Linq.Expressions.Expression.AddChecked
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: )
    fullName: )
- uid: System.Linq.Expressions.Expression.AddChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: AddChecked(Expression, Expression, MethodInfo)
  fullName: System.Linq.Expressions.Expression.AddChecked(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.AddChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
    name: AddChecked
    fullName: System.Linq.Expressions.Expression.AddChecked
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: MethodInfo
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.AddChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
    name: AddChecked
    fullName: System.Linq.Expressions.Expression.AddChecked
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: MethodInfo
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: )
    fullName: )
- uid: System.Linq.Expressions.Expression.And(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: And(Expression, Expression)
  fullName: System.Linq.Expressions.Expression.And(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.And(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
    name: And
    fullName: System.Linq.Expressions.Expression.And
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.And(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
    name: And
    fullName: System.Linq.Expressions.Expression.And
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: )
    fullName: )
- uid: System.Linq.Expressions.Expression.And(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: And(Expression, Expression, MethodInfo)
  fullName: System.Linq.Expressions.Expression.And(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.And(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
    name: And
    fullName: System.Linq.Expressions.Expression.And
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: MethodInfo
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.And(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
    name: And
    fullName: System.Linq.Expressions.Expression.And
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: MethodInfo
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: )
    fullName: )
- uid: System.Linq.Expressions.Expression.AndAlso(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: AndAlso(Expression, Expression)
  fullName: System.Linq.Expressions.Expression.AndAlso(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.AndAlso(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
    name: AndAlso
    fullName: System.Linq.Expressions.Expression.AndAlso
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.AndAlso(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
    name: AndAlso
    fullName: System.Linq.Expressions.Expression.AndAlso
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: )
    fullName: )
- uid: System.Linq.Expressions.Expression.AndAlso(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: AndAlso(Expression, Expression, MethodInfo)
  fullName: System.Linq.Expressions.Expression.AndAlso(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.AndAlso(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
    name: AndAlso
    fullName: System.Linq.Expressions.Expression.AndAlso
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: MethodInfo
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.AndAlso(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
    name: AndAlso
    fullName: System.Linq.Expressions.Expression.AndAlso
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: MethodInfo
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: )
    fullName: )
- uid: System.Linq.Expressions.Expression.AndAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: AndAssign(Expression, Expression)
  fullName: System.Linq.Expressions.Expression.AndAssign(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.AndAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
    name: AndAssign
    fullName: System.Linq.Expressions.Expression.AndAssign
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.AndAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
    name: AndAssign
    fullName: System.Linq.Expressions.Expression.AndAssign
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: )
    fullName: )
- uid: System.Linq.Expressions.Expression.AndAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: AndAssign(Expression, Expression, MethodInfo)
  fullName: System.Linq.Expressions.Expression.AndAssign(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.AndAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
    name: AndAssign
    fullName: System.Linq.Expressions.Expression.AndAssign
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: MethodInfo
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.AndAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
    name: AndAssign
    fullName: System.Linq.Expressions.Expression.AndAssign
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: MethodInfo
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: )
    fullName: )
- uid: System.Linq.Expressions.Expression.AndAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: AndAssign(Expression, Expression, MethodInfo, LambdaExpression)
  fullName: System.Linq.Expressions.Expression.AndAssign(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo, System.Linq.Expressions.LambdaExpression)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.AndAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
    name: AndAssign
    fullName: System.Linq.Expressions.Expression.AndAssign
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: MethodInfo
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.LambdaExpression
    name: LambdaExpression
    fullName: System.Linq.Expressions.LambdaExpression
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.AndAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
    name: AndAssign
    fullName: System.Linq.Expressions.Expression.AndAssign
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: MethodInfo
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.LambdaExpression
    name: LambdaExpression
    fullName: System.Linq.Expressions.LambdaExpression
  - name: )
    fullName: )
- uid: System.Linq.Expressions.Expression.ArrayAccess(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: ArrayAccess(Expression, IEnumerable<Expression>)
  fullName: System.Linq.Expressions.Expression.ArrayAccess(System.Linq.Expressions.Expression, System.Collections.Generic.IEnumerable<System.Linq.Expressions.Expression>)
  fullname.vb: System.Linq.Expressions.Expression.ArrayAccess(System.Linq.Expressions.Expression, System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.Expression))
  name.vb: ArrayAccess(Expression, IEnumerable(Of Expression))
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.ArrayAccess(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
    name: ArrayAccess
    fullName: System.Linq.Expressions.Expression.ArrayAccess
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.ArrayAccess(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
    name: ArrayAccess
    fullName: System.Linq.Expressions.Expression.ArrayAccess
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: )
    fullName: )
  - name: )
    fullName: )
- uid: System.Linq.Expressions.Expression.ArrayAccess(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression[])
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: ArrayAccess(Expression, Expression[])
  fullName: System.Linq.Expressions.Expression.ArrayAccess(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression[])
  fullname.vb: System.Linq.Expressions.Expression.ArrayAccess(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression())
  name.vb: ArrayAccess(Expression, Expression())
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.ArrayAccess(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression[])
    name: ArrayAccess
    fullName: System.Linq.Expressions.Expression.ArrayAccess
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: '[]'
    fullName: '[]'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.ArrayAccess(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression[])
    name: ArrayAccess
    fullName: System.Linq.Expressions.Expression.ArrayAccess
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ()
    fullName: ()
  - name: )
    fullName: )
- uid: System.Linq.Expressions.Expression.ArrayIndex(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: ArrayIndex(Expression, IEnumerable<Expression>)
  fullName: System.Linq.Expressions.Expression.ArrayIndex(System.Linq.Expressions.Expression, System.Collections.Generic.IEnumerable<System.Linq.Expressions.Expression>)
  fullname.vb: System.Linq.Expressions.Expression.ArrayIndex(System.Linq.Expressions.Expression, System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.Expression))
  name.vb: ArrayIndex(Expression, IEnumerable(Of Expression))
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.ArrayIndex(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
    name: ArrayIndex
    fullName: System.Linq.Expressions.Expression.ArrayIndex
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.ArrayIndex(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
    name: ArrayIndex
    fullName: System.Linq.Expressions.Expression.ArrayIndex
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: )
    fullName: )
  - name: )
    fullName: )
- uid: System.Linq.Expressions.Expression.ArrayIndex(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: ArrayIndex(Expression, Expression)
  fullName: System.Linq.Expressions.Expression.ArrayIndex(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.ArrayIndex(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
    name: ArrayIndex
    fullName: System.Linq.Expressions.Expression.ArrayIndex
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.ArrayIndex(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
    name: ArrayIndex
    fullName: System.Linq.Expressions.Expression.ArrayIndex
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: )
    fullName: )
- uid: System.Linq.Expressions.Expression.ArrayIndex(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression[])
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: ArrayIndex(Expression, Expression[])
  fullName: System.Linq.Expressions.Expression.ArrayIndex(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression[])
  fullname.vb: System.Linq.Expressions.Expression.ArrayIndex(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression())
  name.vb: ArrayIndex(Expression, Expression())
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.ArrayIndex(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression[])
    name: ArrayIndex
    fullName: System.Linq.Expressions.Expression.ArrayIndex
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: '[]'
    fullName: '[]'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.ArrayIndex(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression[])
    name: ArrayIndex
    fullName: System.Linq.Expressions.Expression.ArrayIndex
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ()
    fullName: ()
  - name: )
    fullName: )
- uid: System.Linq.Expressions.Expression.ArrayLength(System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: ArrayLength(Expression)
  fullName: System.Linq.Expressions.Expression.ArrayLength(System.Linq.Expressions.Expression)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.ArrayLength(System.Linq.Expressions.Expression)
    name: ArrayLength
    fullName: System.Linq.Expressions.Expression.ArrayLength
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.ArrayLength(System.Linq.Expressions.Expression)
    name: ArrayLength
    fullName: System.Linq.Expressions.Expression.ArrayLength
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: )
    fullName: )
- uid: System.Linq.Expressions.Expression.Assign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Assign(Expression, Expression)
  fullName: System.Linq.Expressions.Expression.Assign(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.Assign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
    name: Assign
    fullName: System.Linq.Expressions.Expression.Assign
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.Assign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
    name: Assign
    fullName: System.Linq.Expressions.Expression.Assign
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: )
    fullName: )
- uid: System.Linq.Expressions.Expression.Bind(System.Reflection.MemberInfo,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: Bind(MemberInfo, Expression)
  fullName: System.Linq.Expressions.Expression.Bind(System.Reflection.MemberInfo, System.Linq.Expressions.Expression)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.Bind(System.Reflection.MemberInfo,System.Linq.Expressions.Expression)
    name: Bind
    fullName: System.Linq.Expressions.Expression.Bind
  - name: (
    fullName: (
  - uid: System.Reflection.MemberInfo
    name: MemberInfo
    fullName: System.Reflection.MemberInfo
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.Bind(System.Reflection.MemberInfo,System.Linq.Expressions.Expression)
    name: Bind
    fullName: System.Linq.Expressions.Expression.Bind
  - name: (
    fullName: (
  - uid: System.Reflection.MemberInfo
    name: MemberInfo
    fullName: System.Reflection.MemberInfo
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: )
    fullName: )
- uid: System.Linq.Expressions.Expression.Bind(System.Reflection.MethodInfo,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: Bind(MethodInfo, Expression)
  fullName: System.Linq.Expressions.Expression.Bind(System.Reflection.MethodInfo, System.Linq.Expressions.Expression)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.Bind(System.Reflection.MethodInfo,System.Linq.Expressions.Expression)
    name: Bind
    fullName: System.Linq.Expressions.Expression.Bind
  - name: (
    fullName: (
  - uid: System.Reflection.MethodInfo
    name: MethodInfo
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.Bind(System.Reflection.MethodInfo,System.Linq.Expressions.Expression)
    name: Bind
    fullName: System.Linq.Expressions.Expression.Bind
  - name: (
    fullName: (
  - uid: System.Reflection.MethodInfo
    name: MethodInfo
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: )
    fullName: )
- uid: System.Linq.Expressions.Expression.Block(System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: Block(IEnumerable<Expression>)
  fullName: System.Linq.Expressions.Expression.Block(System.Collections.Generic.IEnumerable<System.Linq.Expressions.Expression>)
  fullname.vb: System.Linq.Expressions.Expression.Block(System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.Expression))
  name.vb: Block(IEnumerable(Of Expression))
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.Block(System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
    name: Block
    fullName: System.Linq.Expressions.Expression.Block
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.Block(System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
    name: Block
    fullName: System.Linq.Expressions.Expression.Block
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: )
    fullName: )
  - name: )
    fullName: )
- uid: System.Linq.Expressions.Expression.Block(System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression},System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: Block(IEnumerable<ParameterExpression>, IEnumerable<Expression>)
  fullName: System.Linq.Expressions.Expression.Block(System.Collections.Generic.IEnumerable<System.Linq.Expressions.ParameterExpression>, System.Collections.Generic.IEnumerable<System.Linq.Expressions.Expression>)
  fullname.vb: System.Linq.Expressions.Expression.Block(System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.ParameterExpression), System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.Expression))
  name.vb: Block(IEnumerable(Of ParameterExpression), IEnumerable(Of Expression))
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.Block(System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression},System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
    name: Block
    fullName: System.Linq.Expressions.Expression.Block
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Linq.Expressions.ParameterExpression
    name: ParameterExpression
    fullName: System.Linq.Expressions.ParameterExpression
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.Block(System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression},System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
    name: Block
    fullName: System.Linq.Expressions.Expression.Block
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Linq.Expressions.ParameterExpression
    name: ParameterExpression
    fullName: System.Linq.Expressions.ParameterExpression
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: )
    fullName: )
  - name: )
    fullName: )
- uid: System.Linq.Expressions.Expression.Block(System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression},System.Linq.Expressions.Expression[])
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: Block(IEnumerable<ParameterExpression>, Expression[])
  fullName: System.Linq.Expressions.Expression.Block(System.Collections.Generic.IEnumerable<System.Linq.Expressions.ParameterExpression>, System.Linq.Expressions.Expression[])
  fullname.vb: System.Linq.Expressions.Expression.Block(System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.ParameterExpression), System.Linq.Expressions.Expression())
  name.vb: Block(IEnumerable(Of ParameterExpression), Expression())
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.Block(System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression},System.Linq.Expressions.Expression[])
    name: Block
    fullName: System.Linq.Expressions.Expression.Block
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Linq.Expressions.ParameterExpression
    name: ParameterExpression
    fullName: System.Linq.Expressions.ParameterExpression
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: '[]'
    fullName: '[]'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.Block(System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression},System.Linq.Expressions.Expression[])
    name: Block
    fullName: System.Linq.Expressions.Expression.Block
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Linq.Expressions.ParameterExpression
    name: ParameterExpression
    fullName: System.Linq.Expressions.ParameterExpression
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ()
    fullName: ()
  - name: )
    fullName: )
- uid: System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Block(Expression, Expression)
  fullName: System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
    name: Block
    fullName: System.Linq.Expressions.Expression.Block
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
    name: Block
    fullName: System.Linq.Expressions.Expression.Block
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: )
    fullName: )
- uid: System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Block(Expression, Expression, Expression)
  fullName: System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
    name: Block
    fullName: System.Linq.Expressions.Expression.Block
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
    name: Block
    fullName: System.Linq.Expressions.Expression.Block
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: )
    fullName: )
- uid: System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Block(Expression, Expression, Expression, Expression)
  fullName: System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
    name: Block
    fullName: System.Linq.Expressions.Expression.Block
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
    name: Block
    fullName: System.Linq.Expressions.Expression.Block
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: )
    fullName: )
- uid: System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Block(Expression, Expression, Expression, Expression, Expression)
  fullName: System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
    name: Block
    fullName: System.Linq.Expressions.Expression.Block
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
    name: Block
    fullName: System.Linq.Expressions.Expression.Block
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: )
    fullName: )
- uid: System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression[])
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Block(Expression[])
  fullName: System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression[])
  fullname.vb: System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression())
  name.vb: Block(Expression())
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression[])
    name: Block
    fullName: System.Linq.Expressions.Expression.Block
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: '[]'
    fullName: '[]'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression[])
    name: Block
    fullName: System.Linq.Expressions.Expression.Block
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ()
    fullName: ()
  - name: )
    fullName: )
- uid: System.Linq.Expressions.Expression.Block(System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: Block(Type, IEnumerable<Expression>)
  fullName: System.Linq.Expressions.Expression.Block(System.Type, System.Collections.Generic.IEnumerable<System.Linq.Expressions.Expression>)
  fullname.vb: System.Linq.Expressions.Expression.Block(System.Type, System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.Expression))
  name.vb: Block(Type, IEnumerable(Of Expression))
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.Block(System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
    name: Block
    fullName: System.Linq.Expressions.Expression.Block
  - name: (
    fullName: (
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.Block(System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
    name: Block
    fullName: System.Linq.Expressions.Expression.Block
  - name: (
    fullName: (
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: )
    fullName: )
  - name: )
    fullName: )
- uid: System.Linq.Expressions.Expression.Block(System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression},System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: Block(Type, IEnumerable<ParameterExpression>, IEnumerable<Expression>)
  fullName: System.Linq.Expressions.Expression.Block(System.Type, System.Collections.Generic.IEnumerable<System.Linq.Expressions.ParameterExpression>, System.Collections.Generic.IEnumerable<System.Linq.Expressions.Expression>)
  fullname.vb: System.Linq.Expressions.Expression.Block(System.Type, System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.ParameterExpression), System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.Expression))
  name.vb: Block(Type, IEnumerable(Of ParameterExpression), IEnumerable(Of Expression))
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.Block(System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression},System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
    name: Block
    fullName: System.Linq.Expressions.Expression.Block
  - name: (
    fullName: (
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Linq.Expressions.ParameterExpression
    name: ParameterExpression
    fullName: System.Linq.Expressions.ParameterExpression
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.Block(System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression},System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
    name: Block
    fullName: System.Linq.Expressions.Expression.Block
  - name: (
    fullName: (
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Linq.Expressions.ParameterExpression
    name: ParameterExpression
    fullName: System.Linq.Expressions.ParameterExpression
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: )
    fullName: )
  - name: )
    fullName: )
- uid: System.Linq.Expressions.Expression.Block(System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression},System.Linq.Expressions.Expression[])
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: Block(Type, IEnumerable<ParameterExpression>, Expression[])
  fullName: System.Linq.Expressions.Expression.Block(System.Type, System.Collections.Generic.IEnumerable<System.Linq.Expressions.ParameterExpression>, System.Linq.Expressions.Expression[])
  fullname.vb: System.Linq.Expressions.Expression.Block(System.Type, System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.ParameterExpression), System.Linq.Expressions.Expression())
  name.vb: Block(Type, IEnumerable(Of ParameterExpression), Expression())
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.Block(System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression},System.Linq.Expressions.Expression[])
    name: Block
    fullName: System.Linq.Expressions.Expression.Block
  - name: (
    fullName: (
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Linq.Expressions.ParameterExpression
    name: ParameterExpression
    fullName: System.Linq.Expressions.ParameterExpression
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: '[]'
    fullName: '[]'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.Block(System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression},System.Linq.Expressions.Expression[])
    name: Block
    fullName: System.Linq.Expressions.Expression.Block
  - name: (
    fullName: (
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Linq.Expressions.ParameterExpression
    name: ParameterExpression
    fullName: System.Linq.Expressions.ParameterExpression
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ()
    fullName: ()
  - name: )
    fullName: )
- uid: System.Linq.Expressions.Expression.Block(System.Type,System.Linq.Expressions.Expression[])
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: Block(Type, Expression[])
  fullName: System.Linq.Expressions.Expression.Block(System.Type, System.Linq.Expressions.Expression[])
  fullname.vb: System.Linq.Expressions.Expression.Block(System.Type, System.Linq.Expressions.Expression())
  name.vb: Block(Type, Expression())
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.Block(System.Type,System.Linq.Expressions.Expression[])
    name: Block
    fullName: System.Linq.Expressions.Expression.Block
  - name: (
    fullName: (
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: '[]'
    fullName: '[]'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.Block(System.Type,System.Linq.Expressions.Expression[])
    name: Block
    fullName: System.Linq.Expressions.Expression.Block
  - name: (
    fullName: (
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ()
    fullName: ()
  - name: )
    fullName: )
- uid: System.Linq.Expressions.Expression.Break(System.Linq.Expressions.LabelTarget)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Break(LabelTarget)
  fullName: System.Linq.Expressions.Expression.Break(System.Linq.Expressions.LabelTarget)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.Break(System.Linq.Expressions.LabelTarget)
    name: Break
    fullName: System.Linq.Expressions.Expression.Break
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.LabelTarget
    name: LabelTarget
    fullName: System.Linq.Expressions.LabelTarget
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.Break(System.Linq.Expressions.LabelTarget)
    name: Break
    fullName: System.Linq.Expressions.Expression.Break
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.LabelTarget
    name: LabelTarget
    fullName: System.Linq.Expressions.LabelTarget
  - name: )
    fullName: )
- uid: System.Linq.Expressions.Expression.Break(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Break(LabelTarget, Expression)
  fullName: System.Linq.Expressions.Expression.Break(System.Linq.Expressions.LabelTarget, System.Linq.Expressions.Expression)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.Break(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression)
    name: Break
    fullName: System.Linq.Expressions.Expression.Break
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.LabelTarget
    name: LabelTarget
    fullName: System.Linq.Expressions.LabelTarget
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.Break(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression)
    name: Break
    fullName: System.Linq.Expressions.Expression.Break
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.LabelTarget
    name: LabelTarget
    fullName: System.Linq.Expressions.LabelTarget
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: )
    fullName: )
- uid: System.Linq.Expressions.Expression.Break(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression,System.Type)
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: Break(LabelTarget, Expression, Type)
  fullName: System.Linq.Expressions.Expression.Break(System.Linq.Expressions.LabelTarget, System.Linq.Expressions.Expression, System.Type)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.Break(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression,System.Type)
    name: Break
    fullName: System.Linq.Expressions.Expression.Break
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.LabelTarget
    name: LabelTarget
    fullName: System.Linq.Expressions.LabelTarget
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.Break(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression,System.Type)
    name: Break
    fullName: System.Linq.Expressions.Expression.Break
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.LabelTarget
    name: LabelTarget
    fullName: System.Linq.Expressions.LabelTarget
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: )
    fullName: )
- uid: System.Linq.Expressions.Expression.Break(System.Linq.Expressions.LabelTarget,System.Type)
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: Break(LabelTarget, Type)
  fullName: System.Linq.Expressions.Expression.Break(System.Linq.Expressions.LabelTarget, System.Type)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.Break(System.Linq.Expressions.LabelTarget,System.Type)
    name: Break
    fullName: System.Linq.Expressions.Expression.Break
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.LabelTarget
    name: LabelTarget
    fullName: System.Linq.Expressions.LabelTarget
  - name: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.Break(System.Linq.Expressions.LabelTarget,System.Type)
    name: Break
    fullName: System.Linq.Expressions.Expression.Break
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.LabelTarget
    name: LabelTarget
    fullName: System.Linq.Expressions.LabelTarget
  - name: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: )
    fullName: )
- uid: System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: Call(Expression, MethodInfo)
  fullName: System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression, System.Reflection.MethodInfo)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
    name: Call
    fullName: System.Linq.Expressions.Expression.Call
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: MethodInfo
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
    name: Call
    fullName: System.Linq.Expressions.Expression.Call
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: MethodInfo
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: )
    fullName: )
- uid: System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: Call(Expression, MethodInfo, IEnumerable<Expression>)
  fullName: System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression, System.Reflection.MethodInfo, System.Collections.Generic.IEnumerable<System.Linq.Expressions.Expression>)
  fullname.vb: System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression, System.Reflection.MethodInfo, System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.Expression))
  name.vb: Call(Expression, MethodInfo, IEnumerable(Of Expression))
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
    name: Call
    fullName: System.Linq.Expressions.Expression.Call
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: MethodInfo
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
    name: Call
    fullName: System.Linq.Expressions.Expression.Call
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: MethodInfo
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: )
    fullName: )
  - name: )
    fullName: )
- uid: System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: Call(Expression, MethodInfo, Expression, Expression)
  fullName: System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression, System.Reflection.MethodInfo, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
    name: Call
    fullName: System.Linq.Expressions.Expression.Call
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: MethodInfo
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
    name: Call
    fullName: System.Linq.Expressions.Expression.Call
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: MethodInfo
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: )
    fullName: )
- uid: System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: Call(Expression, MethodInfo, Expression, Expression, Expression)
  fullName: System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression, System.Reflection.MethodInfo, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
    name: Call
    fullName: System.Linq.Expressions.Expression.Call
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: MethodInfo
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
    name: Call
    fullName: System.Linq.Expressions.Expression.Call
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: MethodInfo
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: )
    fullName: )
- uid: System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.Expression[])
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: Call(Expression, MethodInfo, Expression[])
  fullName: System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression, System.Reflection.MethodInfo, System.Linq.Expressions.Expression[])
  fullname.vb: System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression, System.Reflection.MethodInfo, System.Linq.Expressions.Expression())
  name.vb: Call(Expression, MethodInfo, Expression())
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.Expression[])
    name: Call
    fullName: System.Linq.Expressions.Expression.Call
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: MethodInfo
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: '[]'
    fullName: '[]'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.Expression[])
    name: Call
    fullName: System.Linq.Expressions.Expression.Call
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: MethodInfo
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ()
    fullName: ()
  - name: )
    fullName: )
- uid: System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.String,System.Type[],System.Linq.Expressions.Expression[])
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: Call(Expression, String, Type[], Expression[])
  fullName: System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression, System.String, System.Type[], System.Linq.Expressions.Expression[])
  fullname.vb: System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression, System.String, System.Type(), System.Linq.Expressions.Expression())
  name.vb: Call(Expression, String, Type(), Expression())
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.String,System.Type[],System.Linq.Expressions.Expression[])
    name: Call
    fullName: System.Linq.Expressions.Expression.Call
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: '[]'
    fullName: '[]'
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: '[]'
    fullName: '[]'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.String,System.Type[],System.Linq.Expressions.Expression[])
    name: Call
    fullName: System.Linq.Expressions.Expression.Call
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: ()
    fullName: ()
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ()
    fullName: ()
  - name: )
    fullName: )
- uid: System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: Call(MethodInfo, IEnumerable<Expression>)
  fullName: System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo, System.Collections.Generic.IEnumerable<System.Linq.Expressions.Expression>)
  fullname.vb: System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo, System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.Expression))
  name.vb: Call(MethodInfo, IEnumerable(Of Expression))
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
    name: Call
    fullName: System.Linq.Expressions.Expression.Call
  - name: (
    fullName: (
  - uid: System.Reflection.MethodInfo
    name: MethodInfo
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
    name: Call
    fullName: System.Linq.Expressions.Expression.Call
  - name: (
    fullName: (
  - uid: System.Reflection.MethodInfo
    name: MethodInfo
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: )
    fullName: )
  - name: )
    fullName: )
- uid: System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: Call(MethodInfo, Expression)
  fullName: System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo, System.Linq.Expressions.Expression)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression)
    name: Call
    fullName: System.Linq.Expressions.Expression.Call
  - name: (
    fullName: (
  - uid: System.Reflection.MethodInfo
    name: MethodInfo
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression)
    name: Call
    fullName: System.Linq.Expressions.Expression.Call
  - name: (
    fullName: (
  - uid: System.Reflection.MethodInfo
    name: MethodInfo
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: )
    fullName: )
- uid: System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: Call(MethodInfo, Expression, Expression)
  fullName: System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
    name: Call
    fullName: System.Linq.Expressions.Expression.Call
  - name: (
    fullName: (
  - uid: System.Reflection.MethodInfo
    name: MethodInfo
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
    name: Call
    fullName: System.Linq.Expressions.Expression.Call
  - name: (
    fullName: (
  - uid: System.Reflection.MethodInfo
    name: MethodInfo
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: )
    fullName: )
- uid: System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: Call(MethodInfo, Expression, Expression, Expression)
  fullName: System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
    name: Call
    fullName: System.Linq.Expressions.Expression.Call
  - name: (
    fullName: (
  - uid: System.Reflection.MethodInfo
    name: MethodInfo
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
    name: Call
    fullName: System.Linq.Expressions.Expression.Call
  - name: (
    fullName: (
  - uid: System.Reflection.MethodInfo
    name: MethodInfo
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: )
    fullName: )
- uid: System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: Call(MethodInfo, Expression, Expression, Expression, Expression)
  fullName: System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
    name: Call
    fullName: System.Linq.Expressions.Expression.Call
  - name: (
    fullName: (
  - uid: System.Reflection.MethodInfo
    name: MethodInfo
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
    name: Call
    fullName: System.Linq.Expressions.Expression.Call
  - name: (
    fullName: (
  - uid: System.Reflection.MethodInfo
    name: MethodInfo
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: )
    fullName: )
- uid: System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: Call(MethodInfo, Expression, Expression, Expression, Expression, Expression)
  fullName: System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
    name: Call
    fullName: System.Linq.Expressions.Expression.Call
  - name: (
    fullName: (
  - uid: System.Reflection.MethodInfo
    name: MethodInfo
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
    name: Call
    fullName: System.Linq.Expressions.Expression.Call
  - name: (
    fullName: (
  - uid: System.Reflection.MethodInfo
    name: MethodInfo
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: )
    fullName: )
- uid: System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression[])
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: Call(MethodInfo, Expression[])
  fullName: System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo, System.Linq.Expressions.Expression[])
  fullname.vb: System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo, System.Linq.Expressions.Expression())
  name.vb: Call(MethodInfo, Expression())
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression[])
    name: Call
    fullName: System.Linq.Expressions.Expression.Call
  - name: (
    fullName: (
  - uid: System.Reflection.MethodInfo
    name: MethodInfo
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: '[]'
    fullName: '[]'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression[])
    name: Call
    fullName: System.Linq.Expressions.Expression.Call
  - name: (
    fullName: (
  - uid: System.Reflection.MethodInfo
    name: MethodInfo
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ()
    fullName: ()
  - name: )
    fullName: )
- uid: System.Linq.Expressions.Expression.Call(System.Type,System.String,System.Type[],System.Linq.Expressions.Expression[])
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: Call(Type, String, Type[], Expression[])
  fullName: System.Linq.Expressions.Expression.Call(System.Type, System.String, System.Type[], System.Linq.Expressions.Expression[])
  fullname.vb: System.Linq.Expressions.Expression.Call(System.Type, System.String, System.Type(), System.Linq.Expressions.Expression())
  name.vb: Call(Type, String, Type(), Expression())
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.Call(System.Type,System.String,System.Type[],System.Linq.Expressions.Expression[])
    name: Call
    fullName: System.Linq.Expressions.Expression.Call
  - name: (
    fullName: (
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: '[]'
    fullName: '[]'
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: '[]'
    fullName: '[]'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.Call(System.Type,System.String,System.Type[],System.Linq.Expressions.Expression[])
    name: Call
    fullName: System.Linq.Expressions.Expression.Call
  - name: (
    fullName: (
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: ()
    fullName: ()
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ()
    fullName: ()
  - name: )
    fullName: )
- uid: System.Linq.Expressions.Expression.Catch(System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Catch(ParameterExpression, Expression)
  fullName: System.Linq.Expressions.Expression.Catch(System.Linq.Expressions.ParameterExpression, System.Linq.Expressions.Expression)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.Catch(System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression)
    name: Catch
    fullName: System.Linq.Expressions.Expression.Catch
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.ParameterExpression
    name: ParameterExpression
    fullName: System.Linq.Expressions.ParameterExpression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.Catch(System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression)
    name: Catch
    fullName: System.Linq.Expressions.Expression.Catch
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.ParameterExpression
    name: ParameterExpression
    fullName: System.Linq.Expressions.ParameterExpression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: )
    fullName: )
- uid: System.Linq.Expressions.Expression.Catch(System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Catch(ParameterExpression, Expression, Expression)
  fullName: System.Linq.Expressions.Expression.Catch(System.Linq.Expressions.ParameterExpression, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.Catch(System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
    name: Catch
    fullName: System.Linq.Expressions.Expression.Catch
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.ParameterExpression
    name: ParameterExpression
    fullName: System.Linq.Expressions.ParameterExpression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.Catch(System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
    name: Catch
    fullName: System.Linq.Expressions.Expression.Catch
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.ParameterExpression
    name: ParameterExpression
    fullName: System.Linq.Expressions.ParameterExpression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: )
    fullName: )
- uid: System.Linq.Expressions.Expression.Catch(System.Type,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: Catch(Type, Expression)
  fullName: System.Linq.Expressions.Expression.Catch(System.Type, System.Linq.Expressions.Expression)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.Catch(System.Type,System.Linq.Expressions.Expression)
    name: Catch
    fullName: System.Linq.Expressions.Expression.Catch
  - name: (
    fullName: (
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.Catch(System.Type,System.Linq.Expressions.Expression)
    name: Catch
    fullName: System.Linq.Expressions.Expression.Catch
  - name: (
    fullName: (
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: )
    fullName: )
- uid: System.Linq.Expressions.Expression.Catch(System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: Catch(Type, Expression, Expression)
  fullName: System.Linq.Expressions.Expression.Catch(System.Type, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.Catch(System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
    name: Catch
    fullName: System.Linq.Expressions.Expression.Catch
  - name: (
    fullName: (
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.Catch(System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
    name: Catch
    fullName: System.Linq.Expressions.Expression.Catch
  - name: (
    fullName: (
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: )
    fullName: )
- uid: System.Linq.Expressions.Expression.ClearDebugInfo(System.Linq.Expressions.SymbolDocumentInfo)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: ClearDebugInfo(SymbolDocumentInfo)
  fullName: System.Linq.Expressions.Expression.ClearDebugInfo(System.Linq.Expressions.SymbolDocumentInfo)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.ClearDebugInfo(System.Linq.Expressions.SymbolDocumentInfo)
    name: ClearDebugInfo
    fullName: System.Linq.Expressions.Expression.ClearDebugInfo
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.SymbolDocumentInfo
    name: SymbolDocumentInfo
    fullName: System.Linq.Expressions.SymbolDocumentInfo
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.ClearDebugInfo(System.Linq.Expressions.SymbolDocumentInfo)
    name: ClearDebugInfo
    fullName: System.Linq.Expressions.Expression.ClearDebugInfo
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.SymbolDocumentInfo
    name: SymbolDocumentInfo
    fullName: System.Linq.Expressions.SymbolDocumentInfo
  - name: )
    fullName: )
- uid: System.Linq.Expressions.Expression.Coalesce(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Coalesce(Expression, Expression)
  fullName: System.Linq.Expressions.Expression.Coalesce(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.Coalesce(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
    name: Coalesce
    fullName: System.Linq.Expressions.Expression.Coalesce
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.Coalesce(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
    name: Coalesce
    fullName: System.Linq.Expressions.Expression.Coalesce
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: )
    fullName: )
- uid: System.Linq.Expressions.Expression.Coalesce(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.LambdaExpression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Coalesce(Expression, Expression, LambdaExpression)
  fullName: System.Linq.Expressions.Expression.Coalesce(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Linq.Expressions.LambdaExpression)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.Coalesce(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.LambdaExpression)
    name: Coalesce
    fullName: System.Linq.Expressions.Expression.Coalesce
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.LambdaExpression
    name: LambdaExpression
    fullName: System.Linq.Expressions.LambdaExpression
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.Coalesce(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.LambdaExpression)
    name: Coalesce
    fullName: System.Linq.Expressions.Expression.Coalesce
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.LambdaExpression
    name: LambdaExpression
    fullName: System.Linq.Expressions.LambdaExpression
  - name: )
    fullName: )
- uid: System.Linq.Expressions.Expression.Condition(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Condition(Expression, Expression, Expression)
  fullName: System.Linq.Expressions.Expression.Condition(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.Condition(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
    name: Condition
    fullName: System.Linq.Expressions.Expression.Condition
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.Condition(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
    name: Condition
    fullName: System.Linq.Expressions.Expression.Condition
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: )
    fullName: )
- uid: System.Linq.Expressions.Expression.Condition(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Type)
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: Condition(Expression, Expression, Expression, Type)
  fullName: System.Linq.Expressions.Expression.Condition(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Type)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.Condition(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Type)
    name: Condition
    fullName: System.Linq.Expressions.Expression.Condition
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.Condition(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Type)
    name: Condition
    fullName: System.Linq.Expressions.Expression.Condition
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: )
    fullName: )
- uid: System.Linq.Expressions.Expression.Constant(System.Object)
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: Constant(Object)
  fullName: System.Linq.Expressions.Expression.Constant(System.Object)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.Constant(System.Object)
    name: Constant
    fullName: System.Linq.Expressions.Expression.Constant
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.Constant(System.Object)
    name: Constant
    fullName: System.Linq.Expressions.Expression.Constant
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Linq.Expressions.Expression.Constant(System.Object,System.Type)
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: Constant(Object, Type)
  fullName: System.Linq.Expressions.Expression.Constant(System.Object, System.Type)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.Constant(System.Object,System.Type)
    name: Constant
    fullName: System.Linq.Expressions.Expression.Constant
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.Constant(System.Object,System.Type)
    name: Constant
    fullName: System.Linq.Expressions.Expression.Constant
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: )
    fullName: )
- uid: System.Linq.Expressions.Expression.Continue(System.Linq.Expressions.LabelTarget)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Continue(LabelTarget)
  fullName: System.Linq.Expressions.Expression.Continue(System.Linq.Expressions.LabelTarget)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.Continue(System.Linq.Expressions.LabelTarget)
    name: Continue
    fullName: System.Linq.Expressions.Expression.Continue
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.LabelTarget
    name: LabelTarget
    fullName: System.Linq.Expressions.LabelTarget
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.Continue(System.Linq.Expressions.LabelTarget)
    name: Continue
    fullName: System.Linq.Expressions.Expression.Continue
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.LabelTarget
    name: LabelTarget
    fullName: System.Linq.Expressions.LabelTarget
  - name: )
    fullName: )
- uid: System.Linq.Expressions.Expression.Continue(System.Linq.Expressions.LabelTarget,System.Type)
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: Continue(LabelTarget, Type)
  fullName: System.Linq.Expressions.Expression.Continue(System.Linq.Expressions.LabelTarget, System.Type)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.Continue(System.Linq.Expressions.LabelTarget,System.Type)
    name: Continue
    fullName: System.Linq.Expressions.Expression.Continue
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.LabelTarget
    name: LabelTarget
    fullName: System.Linq.Expressions.LabelTarget
  - name: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.Continue(System.Linq.Expressions.LabelTarget,System.Type)
    name: Continue
    fullName: System.Linq.Expressions.Expression.Continue
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.LabelTarget
    name: LabelTarget
    fullName: System.Linq.Expressions.LabelTarget
  - name: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: )
    fullName: )
- uid: System.Linq.Expressions.Expression.Convert(System.Linq.Expressions.Expression,System.Type)
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: Convert(Expression, Type)
  fullName: System.Linq.Expressions.Expression.Convert(System.Linq.Expressions.Expression, System.Type)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.Convert(System.Linq.Expressions.Expression,System.Type)
    name: Convert
    fullName: System.Linq.Expressions.Expression.Convert
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.Convert(System.Linq.Expressions.Expression,System.Type)
    name: Convert
    fullName: System.Linq.Expressions.Expression.Convert
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: )
    fullName: )
- uid: System.Linq.Expressions.Expression.Convert(System.Linq.Expressions.Expression,System.Type,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: Convert(Expression, Type, MethodInfo)
  fullName: System.Linq.Expressions.Expression.Convert(System.Linq.Expressions.Expression, System.Type, System.Reflection.MethodInfo)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.Convert(System.Linq.Expressions.Expression,System.Type,System.Reflection.MethodInfo)
    name: Convert
    fullName: System.Linq.Expressions.Expression.Convert
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: MethodInfo
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.Convert(System.Linq.Expressions.Expression,System.Type,System.Reflection.MethodInfo)
    name: Convert
    fullName: System.Linq.Expressions.Expression.Convert
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: MethodInfo
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: )
    fullName: )
- uid: System.Linq.Expressions.Expression.ConvertChecked(System.Linq.Expressions.Expression,System.Type)
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: ConvertChecked(Expression, Type)
  fullName: System.Linq.Expressions.Expression.ConvertChecked(System.Linq.Expressions.Expression, System.Type)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.ConvertChecked(System.Linq.Expressions.Expression,System.Type)
    name: ConvertChecked
    fullName: System.Linq.Expressions.Expression.ConvertChecked
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.ConvertChecked(System.Linq.Expressions.Expression,System.Type)
    name: ConvertChecked
    fullName: System.Linq.Expressions.Expression.ConvertChecked
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: )
    fullName: )
- uid: System.Linq.Expressions.Expression.ConvertChecked(System.Linq.Expressions.Expression,System.Type,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: ConvertChecked(Expression, Type, MethodInfo)
  fullName: System.Linq.Expressions.Expression.ConvertChecked(System.Linq.Expressions.Expression, System.Type, System.Reflection.MethodInfo)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.ConvertChecked(System.Linq.Expressions.Expression,System.Type,System.Reflection.MethodInfo)
    name: ConvertChecked
    fullName: System.Linq.Expressions.Expression.ConvertChecked
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: MethodInfo
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.ConvertChecked(System.Linq.Expressions.Expression,System.Type,System.Reflection.MethodInfo)
    name: ConvertChecked
    fullName: System.Linq.Expressions.Expression.ConvertChecked
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: MethodInfo
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: )
    fullName: )
- uid: System.Linq.Expressions.Expression.DebugInfo(System.Linq.Expressions.SymbolDocumentInfo,System.Int32,System.Int32,System.Int32,System.Int32)
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: DebugInfo(SymbolDocumentInfo, Int32, Int32, Int32, Int32)
  fullName: System.Linq.Expressions.Expression.DebugInfo(System.Linq.Expressions.SymbolDocumentInfo, System.Int32, System.Int32, System.Int32, System.Int32)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.DebugInfo(System.Linq.Expressions.SymbolDocumentInfo,System.Int32,System.Int32,System.Int32,System.Int32)
    name: DebugInfo
    fullName: System.Linq.Expressions.Expression.DebugInfo
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.SymbolDocumentInfo
    name: SymbolDocumentInfo
    fullName: System.Linq.Expressions.SymbolDocumentInfo
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.DebugInfo(System.Linq.Expressions.SymbolDocumentInfo,System.Int32,System.Int32,System.Int32,System.Int32)
    name: DebugInfo
    fullName: System.Linq.Expressions.Expression.DebugInfo
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.SymbolDocumentInfo
    name: SymbolDocumentInfo
    fullName: System.Linq.Expressions.SymbolDocumentInfo
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
- uid: System.Linq.Expressions.Expression.Decrement(System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Decrement(Expression)
  fullName: System.Linq.Expressions.Expression.Decrement(System.Linq.Expressions.Expression)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.Decrement(System.Linq.Expressions.Expression)
    name: Decrement
    fullName: System.Linq.Expressions.Expression.Decrement
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.Decrement(System.Linq.Expressions.Expression)
    name: Decrement
    fullName: System.Linq.Expressions.Expression.Decrement
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: )
    fullName: )
- uid: System.Linq.Expressions.Expression.Decrement(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: Decrement(Expression, MethodInfo)
  fullName: System.Linq.Expressions.Expression.Decrement(System.Linq.Expressions.Expression, System.Reflection.MethodInfo)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.Decrement(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
    name: Decrement
    fullName: System.Linq.Expressions.Expression.Decrement
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: MethodInfo
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.Decrement(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
    name: Decrement
    fullName: System.Linq.Expressions.Expression.Decrement
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: MethodInfo
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: )
    fullName: )
- uid: System.Linq.Expressions.Expression.Default(System.Type)
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: Default(Type)
  fullName: System.Linq.Expressions.Expression.Default(System.Type)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.Default(System.Type)
    name: Default
    fullName: System.Linq.Expressions.Expression.Default
  - name: (
    fullName: (
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.Default(System.Type)
    name: Default
    fullName: System.Linq.Expressions.Expression.Default
  - name: (
    fullName: (
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: )
    fullName: )
- uid: System.Linq.Expressions.Expression.Divide(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Divide(Expression, Expression)
  fullName: System.Linq.Expressions.Expression.Divide(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.Divide(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
    name: Divide
    fullName: System.Linq.Expressions.Expression.Divide
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.Divide(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
    name: Divide
    fullName: System.Linq.Expressions.Expression.Divide
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: )
    fullName: )
- uid: System.Linq.Expressions.Expression.Divide(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: Divide(Expression, Expression, MethodInfo)
  fullName: System.Linq.Expressions.Expression.Divide(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.Divide(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
    name: Divide
    fullName: System.Linq.Expressions.Expression.Divide
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: MethodInfo
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.Divide(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
    name: Divide
    fullName: System.Linq.Expressions.Expression.Divide
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: MethodInfo
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: )
    fullName: )
- uid: System.Linq.Expressions.Expression.DivideAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: DivideAssign(Expression, Expression)
  fullName: System.Linq.Expressions.Expression.DivideAssign(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.DivideAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
    name: DivideAssign
    fullName: System.Linq.Expressions.Expression.DivideAssign
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.DivideAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
    name: DivideAssign
    fullName: System.Linq.Expressions.Expression.DivideAssign
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: )
    fullName: )
- uid: System.Linq.Expressions.Expression.DivideAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: DivideAssign(Expression, Expression, MethodInfo)
  fullName: System.Linq.Expressions.Expression.DivideAssign(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.DivideAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
    name: DivideAssign
    fullName: System.Linq.Expressions.Expression.DivideAssign
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: MethodInfo
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.DivideAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
    name: DivideAssign
    fullName: System.Linq.Expressions.Expression.DivideAssign
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: MethodInfo
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: )
    fullName: )
- uid: System.Linq.Expressions.Expression.DivideAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: DivideAssign(Expression, Expression, MethodInfo, LambdaExpression)
  fullName: System.Linq.Expressions.Expression.DivideAssign(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo, System.Linq.Expressions.LambdaExpression)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.DivideAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
    name: DivideAssign
    fullName: System.Linq.Expressions.Expression.DivideAssign
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: MethodInfo
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.LambdaExpression
    name: LambdaExpression
    fullName: System.Linq.Expressions.LambdaExpression
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.DivideAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
    name: DivideAssign
    fullName: System.Linq.Expressions.Expression.DivideAssign
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: MethodInfo
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.LambdaExpression
    name: LambdaExpression
    fullName: System.Linq.Expressions.LambdaExpression
  - name: )
    fullName: )
- uid: System.Linq.Expressions.Expression.ElementInit(System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: ElementInit(MethodInfo, IEnumerable<Expression>)
  fullName: System.Linq.Expressions.Expression.ElementInit(System.Reflection.MethodInfo, System.Collections.Generic.IEnumerable<System.Linq.Expressions.Expression>)
  fullname.vb: System.Linq.Expressions.Expression.ElementInit(System.Reflection.MethodInfo, System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.Expression))
  name.vb: ElementInit(MethodInfo, IEnumerable(Of Expression))
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.ElementInit(System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
    name: ElementInit
    fullName: System.Linq.Expressions.Expression.ElementInit
  - name: (
    fullName: (
  - uid: System.Reflection.MethodInfo
    name: MethodInfo
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.ElementInit(System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
    name: ElementInit
    fullName: System.Linq.Expressions.Expression.ElementInit
  - name: (
    fullName: (
  - uid: System.Reflection.MethodInfo
    name: MethodInfo
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: )
    fullName: )
  - name: )
    fullName: )
- uid: System.Linq.Expressions.Expression.ElementInit(System.Reflection.MethodInfo,System.Linq.Expressions.Expression[])
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: ElementInit(MethodInfo, Expression[])
  fullName: System.Linq.Expressions.Expression.ElementInit(System.Reflection.MethodInfo, System.Linq.Expressions.Expression[])
  fullname.vb: System.Linq.Expressions.Expression.ElementInit(System.Reflection.MethodInfo, System.Linq.Expressions.Expression())
  name.vb: ElementInit(MethodInfo, Expression())
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.ElementInit(System.Reflection.MethodInfo,System.Linq.Expressions.Expression[])
    name: ElementInit
    fullName: System.Linq.Expressions.Expression.ElementInit
  - name: (
    fullName: (
  - uid: System.Reflection.MethodInfo
    name: MethodInfo
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: '[]'
    fullName: '[]'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.ElementInit(System.Reflection.MethodInfo,System.Linq.Expressions.Expression[])
    name: ElementInit
    fullName: System.Linq.Expressions.Expression.ElementInit
  - name: (
    fullName: (
  - uid: System.Reflection.MethodInfo
    name: MethodInfo
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ()
    fullName: ()
  - name: )
    fullName: )
- uid: System.Linq.Expressions.Expression.Empty
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Empty()
  fullName: System.Linq.Expressions.Expression.Empty()
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.Empty
    name: Empty
    fullName: System.Linq.Expressions.Expression.Empty
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.Empty
    name: Empty
    fullName: System.Linq.Expressions.Expression.Empty
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Linq.Expressions.Expression.Equal(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Equal(Expression, Expression)
  fullName: System.Linq.Expressions.Expression.Equal(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.Equal(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
    name: Equal
    fullName: System.Linq.Expressions.Expression.Equal
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.Equal(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
    name: Equal
    fullName: System.Linq.Expressions.Expression.Equal
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: )
    fullName: )
- uid: System.Linq.Expressions.Expression.Equal(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: Equal(Expression, Expression, Boolean, MethodInfo)
  fullName: System.Linq.Expressions.Expression.Equal(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Boolean, System.Reflection.MethodInfo)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.Equal(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)
    name: Equal
    fullName: System.Linq.Expressions.Expression.Equal
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: MethodInfo
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.Equal(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)
    name: Equal
    fullName: System.Linq.Expressions.Expression.Equal
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: MethodInfo
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: )
    fullName: )
- uid: System.Linq.Expressions.Expression.ExclusiveOr(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: ExclusiveOr(Expression, Expression)
  fullName: System.Linq.Expressions.Expression.ExclusiveOr(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.ExclusiveOr(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
    name: ExclusiveOr
    fullName: System.Linq.Expressions.Expression.ExclusiveOr
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.ExclusiveOr(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
    name: ExclusiveOr
    fullName: System.Linq.Expressions.Expression.ExclusiveOr
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: )
    fullName: )
- uid: System.Linq.Expressions.Expression.ExclusiveOr(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: ExclusiveOr(Expression, Expression, MethodInfo)
  fullName: System.Linq.Expressions.Expression.ExclusiveOr(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.ExclusiveOr(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
    name: ExclusiveOr
    fullName: System.Linq.Expressions.Expression.ExclusiveOr
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: MethodInfo
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.ExclusiveOr(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
    name: ExclusiveOr
    fullName: System.Linq.Expressions.Expression.ExclusiveOr
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: MethodInfo
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: )
    fullName: )
- uid: System.Linq.Expressions.Expression.ExclusiveOrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: ExclusiveOrAssign(Expression, Expression)
  fullName: System.Linq.Expressions.Expression.ExclusiveOrAssign(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.ExclusiveOrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
    name: ExclusiveOrAssign
    fullName: System.Linq.Expressions.Expression.ExclusiveOrAssign
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.ExclusiveOrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
    name: ExclusiveOrAssign
    fullName: System.Linq.Expressions.Expression.ExclusiveOrAssign
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: )
    fullName: )
- uid: System.Linq.Expressions.Expression.ExclusiveOrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: ExclusiveOrAssign(Expression, Expression, MethodInfo)
  fullName: System.Linq.Expressions.Expression.ExclusiveOrAssign(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.ExclusiveOrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
    name: ExclusiveOrAssign
    fullName: System.Linq.Expressions.Expression.ExclusiveOrAssign
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: MethodInfo
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.ExclusiveOrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
    name: ExclusiveOrAssign
    fullName: System.Linq.Expressions.Expression.ExclusiveOrAssign
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: MethodInfo
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: )
    fullName: )
- uid: System.Linq.Expressions.Expression.ExclusiveOrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: ExclusiveOrAssign(Expression, Expression, MethodInfo, LambdaExpression)
  fullName: System.Linq.Expressions.Expression.ExclusiveOrAssign(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo, System.Linq.Expressions.LambdaExpression)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.ExclusiveOrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
    name: ExclusiveOrAssign
    fullName: System.Linq.Expressions.Expression.ExclusiveOrAssign
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: MethodInfo
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.LambdaExpression
    name: LambdaExpression
    fullName: System.Linq.Expressions.LambdaExpression
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.ExclusiveOrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
    name: ExclusiveOrAssign
    fullName: System.Linq.Expressions.Expression.ExclusiveOrAssign
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: MethodInfo
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.LambdaExpression
    name: LambdaExpression
    fullName: System.Linq.Expressions.LambdaExpression
  - name: )
    fullName: )
- uid: System.Linq.Expressions.Expression.Field(System.Linq.Expressions.Expression,System.Reflection.FieldInfo)
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: Field(Expression, FieldInfo)
  fullName: System.Linq.Expressions.Expression.Field(System.Linq.Expressions.Expression, System.Reflection.FieldInfo)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.Field(System.Linq.Expressions.Expression,System.Reflection.FieldInfo)
    name: Field
    fullName: System.Linq.Expressions.Expression.Field
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.FieldInfo
    name: FieldInfo
    fullName: System.Reflection.FieldInfo
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.Field(System.Linq.Expressions.Expression,System.Reflection.FieldInfo)
    name: Field
    fullName: System.Linq.Expressions.Expression.Field
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.FieldInfo
    name: FieldInfo
    fullName: System.Reflection.FieldInfo
    isExternal: true
  - name: )
    fullName: )
- uid: System.Linq.Expressions.Expression.Field(System.Linq.Expressions.Expression,System.String)
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: Field(Expression, String)
  fullName: System.Linq.Expressions.Expression.Field(System.Linq.Expressions.Expression, System.String)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.Field(System.Linq.Expressions.Expression,System.String)
    name: Field
    fullName: System.Linq.Expressions.Expression.Field
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.Field(System.Linq.Expressions.Expression,System.String)
    name: Field
    fullName: System.Linq.Expressions.Expression.Field
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: System.Linq.Expressions.Expression.Field(System.Linq.Expressions.Expression,System.Type,System.String)
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: Field(Expression, Type, String)
  fullName: System.Linq.Expressions.Expression.Field(System.Linq.Expressions.Expression, System.Type, System.String)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.Field(System.Linq.Expressions.Expression,System.Type,System.String)
    name: Field
    fullName: System.Linq.Expressions.Expression.Field
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.Field(System.Linq.Expressions.Expression,System.Type,System.String)
    name: Field
    fullName: System.Linq.Expressions.Expression.Field
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: System.Linq.Expressions.Expression.GetActionType(System.Type[])
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: GetActionType(Type[])
  fullName: System.Linq.Expressions.Expression.GetActionType(System.Type[])
  fullname.vb: System.Linq.Expressions.Expression.GetActionType(System.Type())
  name.vb: GetActionType(Type())
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.GetActionType(System.Type[])
    name: GetActionType
    fullName: System.Linq.Expressions.Expression.GetActionType
  - name: (
    fullName: (
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: '[]'
    fullName: '[]'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.GetActionType(System.Type[])
    name: GetActionType
    fullName: System.Linq.Expressions.Expression.GetActionType
  - name: (
    fullName: (
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: ()
    fullName: ()
  - name: )
    fullName: )
- uid: System.Linq.Expressions.Expression.GetDelegateType(System.Type[])
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: GetDelegateType(Type[])
  fullName: System.Linq.Expressions.Expression.GetDelegateType(System.Type[])
  fullname.vb: System.Linq.Expressions.Expression.GetDelegateType(System.Type())
  name.vb: GetDelegateType(Type())
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.GetDelegateType(System.Type[])
    name: GetDelegateType
    fullName: System.Linq.Expressions.Expression.GetDelegateType
  - name: (
    fullName: (
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: '[]'
    fullName: '[]'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.GetDelegateType(System.Type[])
    name: GetDelegateType
    fullName: System.Linq.Expressions.Expression.GetDelegateType
  - name: (
    fullName: (
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: ()
    fullName: ()
  - name: )
    fullName: )
- uid: System.Linq.Expressions.Expression.GetFuncType(System.Type[])
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: GetFuncType(Type[])
  fullName: System.Linq.Expressions.Expression.GetFuncType(System.Type[])
  fullname.vb: System.Linq.Expressions.Expression.GetFuncType(System.Type())
  name.vb: GetFuncType(Type())
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.GetFuncType(System.Type[])
    name: GetFuncType
    fullName: System.Linq.Expressions.Expression.GetFuncType
  - name: (
    fullName: (
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: '[]'
    fullName: '[]'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.GetFuncType(System.Type[])
    name: GetFuncType
    fullName: System.Linq.Expressions.Expression.GetFuncType
  - name: (
    fullName: (
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: ()
    fullName: ()
  - name: )
    fullName: )
- uid: System.Linq.Expressions.Expression.Goto(System.Linq.Expressions.LabelTarget)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Goto(LabelTarget)
  fullName: System.Linq.Expressions.Expression.Goto(System.Linq.Expressions.LabelTarget)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.Goto(System.Linq.Expressions.LabelTarget)
    name: Goto
    fullName: System.Linq.Expressions.Expression.Goto
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.LabelTarget
    name: LabelTarget
    fullName: System.Linq.Expressions.LabelTarget
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.Goto(System.Linq.Expressions.LabelTarget)
    name: Goto
    fullName: System.Linq.Expressions.Expression.Goto
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.LabelTarget
    name: LabelTarget
    fullName: System.Linq.Expressions.LabelTarget
  - name: )
    fullName: )
- uid: System.Linq.Expressions.Expression.Goto(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Goto(LabelTarget, Expression)
  fullName: System.Linq.Expressions.Expression.Goto(System.Linq.Expressions.LabelTarget, System.Linq.Expressions.Expression)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.Goto(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression)
    name: Goto
    fullName: System.Linq.Expressions.Expression.Goto
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.LabelTarget
    name: LabelTarget
    fullName: System.Linq.Expressions.LabelTarget
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.Goto(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression)
    name: Goto
    fullName: System.Linq.Expressions.Expression.Goto
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.LabelTarget
    name: LabelTarget
    fullName: System.Linq.Expressions.LabelTarget
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: )
    fullName: )
- uid: System.Linq.Expressions.Expression.Goto(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression,System.Type)
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: Goto(LabelTarget, Expression, Type)
  fullName: System.Linq.Expressions.Expression.Goto(System.Linq.Expressions.LabelTarget, System.Linq.Expressions.Expression, System.Type)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.Goto(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression,System.Type)
    name: Goto
    fullName: System.Linq.Expressions.Expression.Goto
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.LabelTarget
    name: LabelTarget
    fullName: System.Linq.Expressions.LabelTarget
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.Goto(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression,System.Type)
    name: Goto
    fullName: System.Linq.Expressions.Expression.Goto
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.LabelTarget
    name: LabelTarget
    fullName: System.Linq.Expressions.LabelTarget
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: )
    fullName: )
- uid: System.Linq.Expressions.Expression.Goto(System.Linq.Expressions.LabelTarget,System.Type)
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: Goto(LabelTarget, Type)
  fullName: System.Linq.Expressions.Expression.Goto(System.Linq.Expressions.LabelTarget, System.Type)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.Goto(System.Linq.Expressions.LabelTarget,System.Type)
    name: Goto
    fullName: System.Linq.Expressions.Expression.Goto
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.LabelTarget
    name: LabelTarget
    fullName: System.Linq.Expressions.LabelTarget
  - name: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.Goto(System.Linq.Expressions.LabelTarget,System.Type)
    name: Goto
    fullName: System.Linq.Expressions.Expression.Goto
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.LabelTarget
    name: LabelTarget
    fullName: System.Linq.Expressions.LabelTarget
  - name: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: )
    fullName: )
- uid: System.Linq.Expressions.Expression.GreaterThan(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: GreaterThan(Expression, Expression)
  fullName: System.Linq.Expressions.Expression.GreaterThan(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.GreaterThan(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
    name: GreaterThan
    fullName: System.Linq.Expressions.Expression.GreaterThan
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.GreaterThan(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
    name: GreaterThan
    fullName: System.Linq.Expressions.Expression.GreaterThan
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: )
    fullName: )
- uid: System.Linq.Expressions.Expression.GreaterThan(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: GreaterThan(Expression, Expression, Boolean, MethodInfo)
  fullName: System.Linq.Expressions.Expression.GreaterThan(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Boolean, System.Reflection.MethodInfo)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.GreaterThan(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)
    name: GreaterThan
    fullName: System.Linq.Expressions.Expression.GreaterThan
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: MethodInfo
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.GreaterThan(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)
    name: GreaterThan
    fullName: System.Linq.Expressions.Expression.GreaterThan
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: MethodInfo
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: )
    fullName: )
- uid: System.Linq.Expressions.Expression.GreaterThanOrEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: GreaterThanOrEqual(Expression, Expression)
  fullName: System.Linq.Expressions.Expression.GreaterThanOrEqual(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.GreaterThanOrEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
    name: GreaterThanOrEqual
    fullName: System.Linq.Expressions.Expression.GreaterThanOrEqual
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.GreaterThanOrEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
    name: GreaterThanOrEqual
    fullName: System.Linq.Expressions.Expression.GreaterThanOrEqual
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: )
    fullName: )
- uid: System.Linq.Expressions.Expression.GreaterThanOrEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: GreaterThanOrEqual(Expression, Expression, Boolean, MethodInfo)
  fullName: System.Linq.Expressions.Expression.GreaterThanOrEqual(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Boolean, System.Reflection.MethodInfo)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.GreaterThanOrEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)
    name: GreaterThanOrEqual
    fullName: System.Linq.Expressions.Expression.GreaterThanOrEqual
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: MethodInfo
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.GreaterThanOrEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)
    name: GreaterThanOrEqual
    fullName: System.Linq.Expressions.Expression.GreaterThanOrEqual
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: MethodInfo
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: )
    fullName: )
- uid: System.Linq.Expressions.Expression.IfThen(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: IfThen(Expression, Expression)
  fullName: System.Linq.Expressions.Expression.IfThen(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.IfThen(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
    name: IfThen
    fullName: System.Linq.Expressions.Expression.IfThen
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.IfThen(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
    name: IfThen
    fullName: System.Linq.Expressions.Expression.IfThen
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: )
    fullName: )
- uid: System.Linq.Expressions.Expression.IfThenElse(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: IfThenElse(Expression, Expression, Expression)
  fullName: System.Linq.Expressions.Expression.IfThenElse(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.IfThenElse(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
    name: IfThenElse
    fullName: System.Linq.Expressions.Expression.IfThenElse
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.IfThenElse(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
    name: IfThenElse
    fullName: System.Linq.Expressions.Expression.IfThenElse
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: )
    fullName: )
- uid: System.Linq.Expressions.Expression.Increment(System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Increment(Expression)
  fullName: System.Linq.Expressions.Expression.Increment(System.Linq.Expressions.Expression)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.Increment(System.Linq.Expressions.Expression)
    name: Increment
    fullName: System.Linq.Expressions.Expression.Increment
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.Increment(System.Linq.Expressions.Expression)
    name: Increment
    fullName: System.Linq.Expressions.Expression.Increment
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: )
    fullName: )
- uid: System.Linq.Expressions.Expression.Increment(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: Increment(Expression, MethodInfo)
  fullName: System.Linq.Expressions.Expression.Increment(System.Linq.Expressions.Expression, System.Reflection.MethodInfo)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.Increment(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
    name: Increment
    fullName: System.Linq.Expressions.Expression.Increment
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: MethodInfo
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.Increment(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
    name: Increment
    fullName: System.Linq.Expressions.Expression.Increment
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: MethodInfo
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: )
    fullName: )
- uid: System.Linq.Expressions.Expression.Invoke(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: Invoke(Expression, IEnumerable<Expression>)
  fullName: System.Linq.Expressions.Expression.Invoke(System.Linq.Expressions.Expression, System.Collections.Generic.IEnumerable<System.Linq.Expressions.Expression>)
  fullname.vb: System.Linq.Expressions.Expression.Invoke(System.Linq.Expressions.Expression, System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.Expression))
  name.vb: Invoke(Expression, IEnumerable(Of Expression))
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.Invoke(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
    name: Invoke
    fullName: System.Linq.Expressions.Expression.Invoke
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.Invoke(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
    name: Invoke
    fullName: System.Linq.Expressions.Expression.Invoke
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: )
    fullName: )
  - name: )
    fullName: )
- uid: System.Linq.Expressions.Expression.Invoke(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression[])
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Invoke(Expression, Expression[])
  fullName: System.Linq.Expressions.Expression.Invoke(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression[])
  fullname.vb: System.Linq.Expressions.Expression.Invoke(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression())
  name.vb: Invoke(Expression, Expression())
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.Invoke(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression[])
    name: Invoke
    fullName: System.Linq.Expressions.Expression.Invoke
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: '[]'
    fullName: '[]'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.Invoke(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression[])
    name: Invoke
    fullName: System.Linq.Expressions.Expression.Invoke
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ()
    fullName: ()
  - name: )
    fullName: )
- uid: System.Linq.Expressions.Expression.IsFalse(System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: IsFalse(Expression)
  fullName: System.Linq.Expressions.Expression.IsFalse(System.Linq.Expressions.Expression)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.IsFalse(System.Linq.Expressions.Expression)
    name: IsFalse
    fullName: System.Linq.Expressions.Expression.IsFalse
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.IsFalse(System.Linq.Expressions.Expression)
    name: IsFalse
    fullName: System.Linq.Expressions.Expression.IsFalse
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: )
    fullName: )
- uid: System.Linq.Expressions.Expression.IsFalse(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: IsFalse(Expression, MethodInfo)
  fullName: System.Linq.Expressions.Expression.IsFalse(System.Linq.Expressions.Expression, System.Reflection.MethodInfo)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.IsFalse(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
    name: IsFalse
    fullName: System.Linq.Expressions.Expression.IsFalse
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: MethodInfo
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.IsFalse(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
    name: IsFalse
    fullName: System.Linq.Expressions.Expression.IsFalse
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: MethodInfo
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: )
    fullName: )
- uid: System.Linq.Expressions.Expression.IsTrue(System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: IsTrue(Expression)
  fullName: System.Linq.Expressions.Expression.IsTrue(System.Linq.Expressions.Expression)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.IsTrue(System.Linq.Expressions.Expression)
    name: IsTrue
    fullName: System.Linq.Expressions.Expression.IsTrue
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.IsTrue(System.Linq.Expressions.Expression)
    name: IsTrue
    fullName: System.Linq.Expressions.Expression.IsTrue
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: )
    fullName: )
- uid: System.Linq.Expressions.Expression.IsTrue(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: IsTrue(Expression, MethodInfo)
  fullName: System.Linq.Expressions.Expression.IsTrue(System.Linq.Expressions.Expression, System.Reflection.MethodInfo)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.IsTrue(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
    name: IsTrue
    fullName: System.Linq.Expressions.Expression.IsTrue
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: MethodInfo
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.IsTrue(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
    name: IsTrue
    fullName: System.Linq.Expressions.Expression.IsTrue
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: MethodInfo
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: )
    fullName: )
- uid: System.Linq.Expressions.Expression.Label
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Label()
  fullName: System.Linq.Expressions.Expression.Label()
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.Label
    name: Label
    fullName: System.Linq.Expressions.Expression.Label
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.Label
    name: Label
    fullName: System.Linq.Expressions.Expression.Label
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Linq.Expressions.Expression.Label(System.Linq.Expressions.LabelTarget)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Label(LabelTarget)
  fullName: System.Linq.Expressions.Expression.Label(System.Linq.Expressions.LabelTarget)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.Label(System.Linq.Expressions.LabelTarget)
    name: Label
    fullName: System.Linq.Expressions.Expression.Label
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.LabelTarget
    name: LabelTarget
    fullName: System.Linq.Expressions.LabelTarget
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.Label(System.Linq.Expressions.LabelTarget)
    name: Label
    fullName: System.Linq.Expressions.Expression.Label
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.LabelTarget
    name: LabelTarget
    fullName: System.Linq.Expressions.LabelTarget
  - name: )
    fullName: )
- uid: System.Linq.Expressions.Expression.Label(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Label(LabelTarget, Expression)
  fullName: System.Linq.Expressions.Expression.Label(System.Linq.Expressions.LabelTarget, System.Linq.Expressions.Expression)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.Label(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression)
    name: Label
    fullName: System.Linq.Expressions.Expression.Label
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.LabelTarget
    name: LabelTarget
    fullName: System.Linq.Expressions.LabelTarget
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.Label(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression)
    name: Label
    fullName: System.Linq.Expressions.Expression.Label
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.LabelTarget
    name: LabelTarget
    fullName: System.Linq.Expressions.LabelTarget
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: )
    fullName: )
- uid: System.Linq.Expressions.Expression.Label(System.String)
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: Label(String)
  fullName: System.Linq.Expressions.Expression.Label(System.String)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.Label(System.String)
    name: Label
    fullName: System.Linq.Expressions.Expression.Label
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.Label(System.String)
    name: Label
    fullName: System.Linq.Expressions.Expression.Label
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: System.Linq.Expressions.Expression.Label(System.Type)
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: Label(Type)
  fullName: System.Linq.Expressions.Expression.Label(System.Type)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.Label(System.Type)
    name: Label
    fullName: System.Linq.Expressions.Expression.Label
  - name: (
    fullName: (
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.Label(System.Type)
    name: Label
    fullName: System.Linq.Expressions.Expression.Label
  - name: (
    fullName: (
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: )
    fullName: )
- uid: System.Linq.Expressions.Expression.Label(System.Type,System.String)
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: Label(Type, String)
  fullName: System.Linq.Expressions.Expression.Label(System.Type, System.String)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.Label(System.Type,System.String)
    name: Label
    fullName: System.Linq.Expressions.Expression.Label
  - name: (
    fullName: (
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.Label(System.Type,System.String)
    name: Label
    fullName: System.Linq.Expressions.Expression.Label
  - name: (
    fullName: (
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: Lambda(Expression, Boolean, IEnumerable<ParameterExpression>)
  fullName: System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression, System.Boolean, System.Collections.Generic.IEnumerable<System.Linq.Expressions.ParameterExpression>)
  fullname.vb: System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression, System.Boolean, System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.ParameterExpression))
  name.vb: Lambda(Expression, Boolean, IEnumerable(Of ParameterExpression))
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})
    name: Lambda
    fullName: System.Linq.Expressions.Expression.Lambda
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Linq.Expressions.ParameterExpression
    name: ParameterExpression
    fullName: System.Linq.Expressions.ParameterExpression
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})
    name: Lambda
    fullName: System.Linq.Expressions.Expression.Lambda
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Linq.Expressions.ParameterExpression
    name: ParameterExpression
    fullName: System.Linq.Expressions.ParameterExpression
  - name: )
    fullName: )
  - name: )
    fullName: )
- uid: System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.Boolean,System.Linq.Expressions.ParameterExpression[])
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: Lambda(Expression, Boolean, ParameterExpression[])
  fullName: System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression, System.Boolean, System.Linq.Expressions.ParameterExpression[])
  fullname.vb: System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression, System.Boolean, System.Linq.Expressions.ParameterExpression())
  name.vb: Lambda(Expression, Boolean, ParameterExpression())
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.Boolean,System.Linq.Expressions.ParameterExpression[])
    name: Lambda
    fullName: System.Linq.Expressions.Expression.Lambda
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.ParameterExpression
    name: ParameterExpression
    fullName: System.Linq.Expressions.ParameterExpression
  - name: '[]'
    fullName: '[]'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.Boolean,System.Linq.Expressions.ParameterExpression[])
    name: Lambda
    fullName: System.Linq.Expressions.Expression.Lambda
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.ParameterExpression
    name: ParameterExpression
    fullName: System.Linq.Expressions.ParameterExpression
  - name: ()
    fullName: ()
  - name: )
    fullName: )
- uid: System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: Lambda(Expression, IEnumerable<ParameterExpression>)
  fullName: System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression, System.Collections.Generic.IEnumerable<System.Linq.Expressions.ParameterExpression>)
  fullname.vb: System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression, System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.ParameterExpression))
  name.vb: Lambda(Expression, IEnumerable(Of ParameterExpression))
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})
    name: Lambda
    fullName: System.Linq.Expressions.Expression.Lambda
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Linq.Expressions.ParameterExpression
    name: ParameterExpression
    fullName: System.Linq.Expressions.ParameterExpression
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})
    name: Lambda
    fullName: System.Linq.Expressions.Expression.Lambda
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Linq.Expressions.ParameterExpression
    name: ParameterExpression
    fullName: System.Linq.Expressions.ParameterExpression
  - name: )
    fullName: )
  - name: )
    fullName: )
- uid: System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression[])
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Lambda(Expression, ParameterExpression[])
  fullName: System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression, System.Linq.Expressions.ParameterExpression[])
  fullname.vb: System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression, System.Linq.Expressions.ParameterExpression())
  name.vb: Lambda(Expression, ParameterExpression())
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression[])
    name: Lambda
    fullName: System.Linq.Expressions.Expression.Lambda
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.ParameterExpression
    name: ParameterExpression
    fullName: System.Linq.Expressions.ParameterExpression
  - name: '[]'
    fullName: '[]'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression[])
    name: Lambda
    fullName: System.Linq.Expressions.Expression.Lambda
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.ParameterExpression
    name: ParameterExpression
    fullName: System.Linq.Expressions.ParameterExpression
  - name: ()
    fullName: ()
  - name: )
    fullName: )
- uid: System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.String,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: Lambda(Expression, String, Boolean, IEnumerable<ParameterExpression>)
  fullName: System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression, System.String, System.Boolean, System.Collections.Generic.IEnumerable<System.Linq.Expressions.ParameterExpression>)
  fullname.vb: System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression, System.String, System.Boolean, System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.ParameterExpression))
  name.vb: Lambda(Expression, String, Boolean, IEnumerable(Of ParameterExpression))
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.String,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})
    name: Lambda
    fullName: System.Linq.Expressions.Expression.Lambda
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Linq.Expressions.ParameterExpression
    name: ParameterExpression
    fullName: System.Linq.Expressions.ParameterExpression
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.String,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})
    name: Lambda
    fullName: System.Linq.Expressions.Expression.Lambda
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Linq.Expressions.ParameterExpression
    name: ParameterExpression
    fullName: System.Linq.Expressions.ParameterExpression
  - name: )
    fullName: )
  - name: )
    fullName: )
- uid: System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.String,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: Lambda(Expression, String, IEnumerable<ParameterExpression>)
  fullName: System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression, System.String, System.Collections.Generic.IEnumerable<System.Linq.Expressions.ParameterExpression>)
  fullname.vb: System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression, System.String, System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.ParameterExpression))
  name.vb: Lambda(Expression, String, IEnumerable(Of ParameterExpression))
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.String,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})
    name: Lambda
    fullName: System.Linq.Expressions.Expression.Lambda
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Linq.Expressions.ParameterExpression
    name: ParameterExpression
    fullName: System.Linq.Expressions.ParameterExpression
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.String,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})
    name: Lambda
    fullName: System.Linq.Expressions.Expression.Lambda
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Linq.Expressions.ParameterExpression
    name: ParameterExpression
    fullName: System.Linq.Expressions.ParameterExpression
  - name: )
    fullName: )
  - name: )
    fullName: )
- uid: System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: Lambda(Type, Expression, Boolean, IEnumerable<ParameterExpression>)
  fullName: System.Linq.Expressions.Expression.Lambda(System.Type, System.Linq.Expressions.Expression, System.Boolean, System.Collections.Generic.IEnumerable<System.Linq.Expressions.ParameterExpression>)
  fullname.vb: System.Linq.Expressions.Expression.Lambda(System.Type, System.Linq.Expressions.Expression, System.Boolean, System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.ParameterExpression))
  name.vb: Lambda(Type, Expression, Boolean, IEnumerable(Of ParameterExpression))
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})
    name: Lambda
    fullName: System.Linq.Expressions.Expression.Lambda
  - name: (
    fullName: (
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Linq.Expressions.ParameterExpression
    name: ParameterExpression
    fullName: System.Linq.Expressions.ParameterExpression
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})
    name: Lambda
    fullName: System.Linq.Expressions.Expression.Lambda
  - name: (
    fullName: (
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Linq.Expressions.ParameterExpression
    name: ParameterExpression
    fullName: System.Linq.Expressions.ParameterExpression
  - name: )
    fullName: )
  - name: )
    fullName: )
- uid: System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.Boolean,System.Linq.Expressions.ParameterExpression[])
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: Lambda(Type, Expression, Boolean, ParameterExpression[])
  fullName: System.Linq.Expressions.Expression.Lambda(System.Type, System.Linq.Expressions.Expression, System.Boolean, System.Linq.Expressions.ParameterExpression[])
  fullname.vb: System.Linq.Expressions.Expression.Lambda(System.Type, System.Linq.Expressions.Expression, System.Boolean, System.Linq.Expressions.ParameterExpression())
  name.vb: Lambda(Type, Expression, Boolean, ParameterExpression())
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.Boolean,System.Linq.Expressions.ParameterExpression[])
    name: Lambda
    fullName: System.Linq.Expressions.Expression.Lambda
  - name: (
    fullName: (
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.ParameterExpression
    name: ParameterExpression
    fullName: System.Linq.Expressions.ParameterExpression
  - name: '[]'
    fullName: '[]'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.Boolean,System.Linq.Expressions.ParameterExpression[])
    name: Lambda
    fullName: System.Linq.Expressions.Expression.Lambda
  - name: (
    fullName: (
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.ParameterExpression
    name: ParameterExpression
    fullName: System.Linq.Expressions.ParameterExpression
  - name: ()
    fullName: ()
  - name: )
    fullName: )
- uid: System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: Lambda(Type, Expression, IEnumerable<ParameterExpression>)
  fullName: System.Linq.Expressions.Expression.Lambda(System.Type, System.Linq.Expressions.Expression, System.Collections.Generic.IEnumerable<System.Linq.Expressions.ParameterExpression>)
  fullname.vb: System.Linq.Expressions.Expression.Lambda(System.Type, System.Linq.Expressions.Expression, System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.ParameterExpression))
  name.vb: Lambda(Type, Expression, IEnumerable(Of ParameterExpression))
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})
    name: Lambda
    fullName: System.Linq.Expressions.Expression.Lambda
  - name: (
    fullName: (
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Linq.Expressions.ParameterExpression
    name: ParameterExpression
    fullName: System.Linq.Expressions.ParameterExpression
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})
    name: Lambda
    fullName: System.Linq.Expressions.Expression.Lambda
  - name: (
    fullName: (
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Linq.Expressions.ParameterExpression
    name: ParameterExpression
    fullName: System.Linq.Expressions.ParameterExpression
  - name: )
    fullName: )
  - name: )
    fullName: )
- uid: System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression[])
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: Lambda(Type, Expression, ParameterExpression[])
  fullName: System.Linq.Expressions.Expression.Lambda(System.Type, System.Linq.Expressions.Expression, System.Linq.Expressions.ParameterExpression[])
  fullname.vb: System.Linq.Expressions.Expression.Lambda(System.Type, System.Linq.Expressions.Expression, System.Linq.Expressions.ParameterExpression())
  name.vb: Lambda(Type, Expression, ParameterExpression())
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression[])
    name: Lambda
    fullName: System.Linq.Expressions.Expression.Lambda
  - name: (
    fullName: (
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.ParameterExpression
    name: ParameterExpression
    fullName: System.Linq.Expressions.ParameterExpression
  - name: '[]'
    fullName: '[]'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression[])
    name: Lambda
    fullName: System.Linq.Expressions.Expression.Lambda
  - name: (
    fullName: (
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.ParameterExpression
    name: ParameterExpression
    fullName: System.Linq.Expressions.ParameterExpression
  - name: ()
    fullName: ()
  - name: )
    fullName: )
- uid: System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.String,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: Lambda(Type, Expression, String, Boolean, IEnumerable<ParameterExpression>)
  fullName: System.Linq.Expressions.Expression.Lambda(System.Type, System.Linq.Expressions.Expression, System.String, System.Boolean, System.Collections.Generic.IEnumerable<System.Linq.Expressions.ParameterExpression>)
  fullname.vb: System.Linq.Expressions.Expression.Lambda(System.Type, System.Linq.Expressions.Expression, System.String, System.Boolean, System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.ParameterExpression))
  name.vb: Lambda(Type, Expression, String, Boolean, IEnumerable(Of ParameterExpression))
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.String,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})
    name: Lambda
    fullName: System.Linq.Expressions.Expression.Lambda
  - name: (
    fullName: (
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Linq.Expressions.ParameterExpression
    name: ParameterExpression
    fullName: System.Linq.Expressions.ParameterExpression
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.String,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})
    name: Lambda
    fullName: System.Linq.Expressions.Expression.Lambda
  - name: (
    fullName: (
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Linq.Expressions.ParameterExpression
    name: ParameterExpression
    fullName: System.Linq.Expressions.ParameterExpression
  - name: )
    fullName: )
  - name: )
    fullName: )
- uid: System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.String,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: Lambda(Type, Expression, String, IEnumerable<ParameterExpression>)
  fullName: System.Linq.Expressions.Expression.Lambda(System.Type, System.Linq.Expressions.Expression, System.String, System.Collections.Generic.IEnumerable<System.Linq.Expressions.ParameterExpression>)
  fullname.vb: System.Linq.Expressions.Expression.Lambda(System.Type, System.Linq.Expressions.Expression, System.String, System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.ParameterExpression))
  name.vb: Lambda(Type, Expression, String, IEnumerable(Of ParameterExpression))
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.String,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})
    name: Lambda
    fullName: System.Linq.Expressions.Expression.Lambda
  - name: (
    fullName: (
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Linq.Expressions.ParameterExpression
    name: ParameterExpression
    fullName: System.Linq.Expressions.ParameterExpression
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.String,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})
    name: Lambda
    fullName: System.Linq.Expressions.Expression.Lambda
  - name: (
    fullName: (
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Linq.Expressions.ParameterExpression
    name: ParameterExpression
    fullName: System.Linq.Expressions.ParameterExpression
  - name: )
    fullName: )
  - name: )
    fullName: )
- uid: System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: Lambda<TDelegate>(Expression, Boolean, IEnumerable<ParameterExpression>)
  fullName: System.Linq.Expressions.Expression.Lambda<TDelegate>(System.Linq.Expressions.Expression, System.Boolean, System.Collections.Generic.IEnumerable<System.Linq.Expressions.ParameterExpression>)
  fullname.vb: System.Linq.Expressions.Expression.Lambda(Of TDelegate)(System.Linq.Expressions.Expression, System.Boolean, System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.ParameterExpression))
  name.vb: Lambda(Of TDelegate)(Expression, Boolean, IEnumerable(Of ParameterExpression))
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})
    name: Lambda<TDelegate>
    fullName: System.Linq.Expressions.Expression.Lambda<TDelegate>
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Linq.Expressions.ParameterExpression
    name: ParameterExpression
    fullName: System.Linq.Expressions.ParameterExpression
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})
    name: Lambda(Of TDelegate)
    fullName: System.Linq.Expressions.Expression.Lambda(Of TDelegate)
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Linq.Expressions.ParameterExpression
    name: ParameterExpression
    fullName: System.Linq.Expressions.ParameterExpression
  - name: )
    fullName: )
  - name: )
    fullName: )
- uid: System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.Boolean,System.Linq.Expressions.ParameterExpression[])
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: Lambda<TDelegate>(Expression, Boolean, ParameterExpression[])
  fullName: System.Linq.Expressions.Expression.Lambda<TDelegate>(System.Linq.Expressions.Expression, System.Boolean, System.Linq.Expressions.ParameterExpression[])
  fullname.vb: System.Linq.Expressions.Expression.Lambda(Of TDelegate)(System.Linq.Expressions.Expression, System.Boolean, System.Linq.Expressions.ParameterExpression())
  name.vb: Lambda(Of TDelegate)(Expression, Boolean, ParameterExpression())
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.Boolean,System.Linq.Expressions.ParameterExpression[])
    name: Lambda<TDelegate>
    fullName: System.Linq.Expressions.Expression.Lambda<TDelegate>
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.ParameterExpression
    name: ParameterExpression
    fullName: System.Linq.Expressions.ParameterExpression
  - name: '[]'
    fullName: '[]'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.Boolean,System.Linq.Expressions.ParameterExpression[])
    name: Lambda(Of TDelegate)
    fullName: System.Linq.Expressions.Expression.Lambda(Of TDelegate)
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.ParameterExpression
    name: ParameterExpression
    fullName: System.Linq.Expressions.ParameterExpression
  - name: ()
    fullName: ()
  - name: )
    fullName: )
- uid: System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: Lambda<TDelegate>(Expression, IEnumerable<ParameterExpression>)
  fullName: System.Linq.Expressions.Expression.Lambda<TDelegate>(System.Linq.Expressions.Expression, System.Collections.Generic.IEnumerable<System.Linq.Expressions.ParameterExpression>)
  fullname.vb: System.Linq.Expressions.Expression.Lambda(Of TDelegate)(System.Linq.Expressions.Expression, System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.ParameterExpression))
  name.vb: Lambda(Of TDelegate)(Expression, IEnumerable(Of ParameterExpression))
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})
    name: Lambda<TDelegate>
    fullName: System.Linq.Expressions.Expression.Lambda<TDelegate>
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Linq.Expressions.ParameterExpression
    name: ParameterExpression
    fullName: System.Linq.Expressions.ParameterExpression
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})
    name: Lambda(Of TDelegate)
    fullName: System.Linq.Expressions.Expression.Lambda(Of TDelegate)
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Linq.Expressions.ParameterExpression
    name: ParameterExpression
    fullName: System.Linq.Expressions.ParameterExpression
  - name: )
    fullName: )
  - name: )
    fullName: )
- uid: System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression[])
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Lambda<TDelegate>(Expression, ParameterExpression[])
  fullName: System.Linq.Expressions.Expression.Lambda<TDelegate>(System.Linq.Expressions.Expression, System.Linq.Expressions.ParameterExpression[])
  fullname.vb: System.Linq.Expressions.Expression.Lambda(Of TDelegate)(System.Linq.Expressions.Expression, System.Linq.Expressions.ParameterExpression())
  name.vb: Lambda(Of TDelegate)(Expression, ParameterExpression())
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression[])
    name: Lambda<TDelegate>
    fullName: System.Linq.Expressions.Expression.Lambda<TDelegate>
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.ParameterExpression
    name: ParameterExpression
    fullName: System.Linq.Expressions.ParameterExpression
  - name: '[]'
    fullName: '[]'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression[])
    name: Lambda(Of TDelegate)
    fullName: System.Linq.Expressions.Expression.Lambda(Of TDelegate)
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.ParameterExpression
    name: ParameterExpression
    fullName: System.Linq.Expressions.ParameterExpression
  - name: ()
    fullName: ()
  - name: )
    fullName: )
- uid: System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.String,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: Lambda<TDelegate>(Expression, String, Boolean, IEnumerable<ParameterExpression>)
  fullName: System.Linq.Expressions.Expression.Lambda<TDelegate>(System.Linq.Expressions.Expression, System.String, System.Boolean, System.Collections.Generic.IEnumerable<System.Linq.Expressions.ParameterExpression>)
  fullname.vb: System.Linq.Expressions.Expression.Lambda(Of TDelegate)(System.Linq.Expressions.Expression, System.String, System.Boolean, System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.ParameterExpression))
  name.vb: Lambda(Of TDelegate)(Expression, String, Boolean, IEnumerable(Of ParameterExpression))
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.String,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})
    name: Lambda<TDelegate>
    fullName: System.Linq.Expressions.Expression.Lambda<TDelegate>
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Linq.Expressions.ParameterExpression
    name: ParameterExpression
    fullName: System.Linq.Expressions.ParameterExpression
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.String,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})
    name: Lambda(Of TDelegate)
    fullName: System.Linq.Expressions.Expression.Lambda(Of TDelegate)
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Linq.Expressions.ParameterExpression
    name: ParameterExpression
    fullName: System.Linq.Expressions.ParameterExpression
  - name: )
    fullName: )
  - name: )
    fullName: )
- uid: System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.String,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: Lambda<TDelegate>(Expression, String, IEnumerable<ParameterExpression>)
  fullName: System.Linq.Expressions.Expression.Lambda<TDelegate>(System.Linq.Expressions.Expression, System.String, System.Collections.Generic.IEnumerable<System.Linq.Expressions.ParameterExpression>)
  fullname.vb: System.Linq.Expressions.Expression.Lambda(Of TDelegate)(System.Linq.Expressions.Expression, System.String, System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.ParameterExpression))
  name.vb: Lambda(Of TDelegate)(Expression, String, IEnumerable(Of ParameterExpression))
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.String,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})
    name: Lambda<TDelegate>
    fullName: System.Linq.Expressions.Expression.Lambda<TDelegate>
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Linq.Expressions.ParameterExpression
    name: ParameterExpression
    fullName: System.Linq.Expressions.ParameterExpression
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.String,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})
    name: Lambda(Of TDelegate)
    fullName: System.Linq.Expressions.Expression.Lambda(Of TDelegate)
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Linq.Expressions.ParameterExpression
    name: ParameterExpression
    fullName: System.Linq.Expressions.ParameterExpression
  - name: )
    fullName: )
  - name: )
    fullName: )
- uid: System.Linq.Expressions.Expression.LeftShift(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: LeftShift(Expression, Expression)
  fullName: System.Linq.Expressions.Expression.LeftShift(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.LeftShift(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
    name: LeftShift
    fullName: System.Linq.Expressions.Expression.LeftShift
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.LeftShift(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
    name: LeftShift
    fullName: System.Linq.Expressions.Expression.LeftShift
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: )
    fullName: )
- uid: System.Linq.Expressions.Expression.LeftShift(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: LeftShift(Expression, Expression, MethodInfo)
  fullName: System.Linq.Expressions.Expression.LeftShift(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.LeftShift(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
    name: LeftShift
    fullName: System.Linq.Expressions.Expression.LeftShift
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: MethodInfo
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.LeftShift(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
    name: LeftShift
    fullName: System.Linq.Expressions.Expression.LeftShift
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: MethodInfo
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: )
    fullName: )
- uid: System.Linq.Expressions.Expression.LeftShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: LeftShiftAssign(Expression, Expression)
  fullName: System.Linq.Expressions.Expression.LeftShiftAssign(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.LeftShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
    name: LeftShiftAssign
    fullName: System.Linq.Expressions.Expression.LeftShiftAssign
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.LeftShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
    name: LeftShiftAssign
    fullName: System.Linq.Expressions.Expression.LeftShiftAssign
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: )
    fullName: )
- uid: System.Linq.Expressions.Expression.LeftShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: LeftShiftAssign(Expression, Expression, MethodInfo)
  fullName: System.Linq.Expressions.Expression.LeftShiftAssign(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.LeftShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
    name: LeftShiftAssign
    fullName: System.Linq.Expressions.Expression.LeftShiftAssign
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: MethodInfo
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.LeftShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
    name: LeftShiftAssign
    fullName: System.Linq.Expressions.Expression.LeftShiftAssign
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: MethodInfo
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: )
    fullName: )
- uid: System.Linq.Expressions.Expression.LeftShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: LeftShiftAssign(Expression, Expression, MethodInfo, LambdaExpression)
  fullName: System.Linq.Expressions.Expression.LeftShiftAssign(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo, System.Linq.Expressions.LambdaExpression)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.LeftShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
    name: LeftShiftAssign
    fullName: System.Linq.Expressions.Expression.LeftShiftAssign
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: MethodInfo
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.LambdaExpression
    name: LambdaExpression
    fullName: System.Linq.Expressions.LambdaExpression
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.LeftShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
    name: LeftShiftAssign
    fullName: System.Linq.Expressions.Expression.LeftShiftAssign
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: MethodInfo
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.LambdaExpression
    name: LambdaExpression
    fullName: System.Linq.Expressions.LambdaExpression
  - name: )
    fullName: )
- uid: System.Linq.Expressions.Expression.LessThan(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: LessThan(Expression, Expression)
  fullName: System.Linq.Expressions.Expression.LessThan(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.LessThan(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
    name: LessThan
    fullName: System.Linq.Expressions.Expression.LessThan
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.LessThan(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
    name: LessThan
    fullName: System.Linq.Expressions.Expression.LessThan
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: )
    fullName: )
- uid: System.Linq.Expressions.Expression.LessThan(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: LessThan(Expression, Expression, Boolean, MethodInfo)
  fullName: System.Linq.Expressions.Expression.LessThan(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Boolean, System.Reflection.MethodInfo)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.LessThan(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)
    name: LessThan
    fullName: System.Linq.Expressions.Expression.LessThan
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: MethodInfo
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.LessThan(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)
    name: LessThan
    fullName: System.Linq.Expressions.Expression.LessThan
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: MethodInfo
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: )
    fullName: )
- uid: System.Linq.Expressions.Expression.LessThanOrEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: LessThanOrEqual(Expression, Expression)
  fullName: System.Linq.Expressions.Expression.LessThanOrEqual(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.LessThanOrEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
    name: LessThanOrEqual
    fullName: System.Linq.Expressions.Expression.LessThanOrEqual
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.LessThanOrEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
    name: LessThanOrEqual
    fullName: System.Linq.Expressions.Expression.LessThanOrEqual
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: )
    fullName: )
- uid: System.Linq.Expressions.Expression.LessThanOrEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: LessThanOrEqual(Expression, Expression, Boolean, MethodInfo)
  fullName: System.Linq.Expressions.Expression.LessThanOrEqual(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Boolean, System.Reflection.MethodInfo)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.LessThanOrEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)
    name: LessThanOrEqual
    fullName: System.Linq.Expressions.Expression.LessThanOrEqual
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: MethodInfo
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.LessThanOrEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)
    name: LessThanOrEqual
    fullName: System.Linq.Expressions.Expression.LessThanOrEqual
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: MethodInfo
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: )
    fullName: )
- uid: System.Linq.Expressions.Expression.ListBind(System.Reflection.MemberInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ElementInit})
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: ListBind(MemberInfo, IEnumerable<ElementInit>)
  fullName: System.Linq.Expressions.Expression.ListBind(System.Reflection.MemberInfo, System.Collections.Generic.IEnumerable<System.Linq.Expressions.ElementInit>)
  fullname.vb: System.Linq.Expressions.Expression.ListBind(System.Reflection.MemberInfo, System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.ElementInit))
  name.vb: ListBind(MemberInfo, IEnumerable(Of ElementInit))
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.ListBind(System.Reflection.MemberInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ElementInit})
    name: ListBind
    fullName: System.Linq.Expressions.Expression.ListBind
  - name: (
    fullName: (
  - uid: System.Reflection.MemberInfo
    name: MemberInfo
    fullName: System.Reflection.MemberInfo
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Linq.Expressions.ElementInit
    name: ElementInit
    fullName: System.Linq.Expressions.ElementInit
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.ListBind(System.Reflection.MemberInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ElementInit})
    name: ListBind
    fullName: System.Linq.Expressions.Expression.ListBind
  - name: (
    fullName: (
  - uid: System.Reflection.MemberInfo
    name: MemberInfo
    fullName: System.Reflection.MemberInfo
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Linq.Expressions.ElementInit
    name: ElementInit
    fullName: System.Linq.Expressions.ElementInit
  - name: )
    fullName: )
  - name: )
    fullName: )
- uid: System.Linq.Expressions.Expression.ListBind(System.Reflection.MemberInfo,System.Linq.Expressions.ElementInit[])
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: ListBind(MemberInfo, ElementInit[])
  fullName: System.Linq.Expressions.Expression.ListBind(System.Reflection.MemberInfo, System.Linq.Expressions.ElementInit[])
  fullname.vb: System.Linq.Expressions.Expression.ListBind(System.Reflection.MemberInfo, System.Linq.Expressions.ElementInit())
  name.vb: ListBind(MemberInfo, ElementInit())
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.ListBind(System.Reflection.MemberInfo,System.Linq.Expressions.ElementInit[])
    name: ListBind
    fullName: System.Linq.Expressions.Expression.ListBind
  - name: (
    fullName: (
  - uid: System.Reflection.MemberInfo
    name: MemberInfo
    fullName: System.Reflection.MemberInfo
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.ElementInit
    name: ElementInit
    fullName: System.Linq.Expressions.ElementInit
  - name: '[]'
    fullName: '[]'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.ListBind(System.Reflection.MemberInfo,System.Linq.Expressions.ElementInit[])
    name: ListBind
    fullName: System.Linq.Expressions.Expression.ListBind
  - name: (
    fullName: (
  - uid: System.Reflection.MemberInfo
    name: MemberInfo
    fullName: System.Reflection.MemberInfo
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.ElementInit
    name: ElementInit
    fullName: System.Linq.Expressions.ElementInit
  - name: ()
    fullName: ()
  - name: )
    fullName: )
- uid: System.Linq.Expressions.Expression.ListBind(System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ElementInit})
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: ListBind(MethodInfo, IEnumerable<ElementInit>)
  fullName: System.Linq.Expressions.Expression.ListBind(System.Reflection.MethodInfo, System.Collections.Generic.IEnumerable<System.Linq.Expressions.ElementInit>)
  fullname.vb: System.Linq.Expressions.Expression.ListBind(System.Reflection.MethodInfo, System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.ElementInit))
  name.vb: ListBind(MethodInfo, IEnumerable(Of ElementInit))
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.ListBind(System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ElementInit})
    name: ListBind
    fullName: System.Linq.Expressions.Expression.ListBind
  - name: (
    fullName: (
  - uid: System.Reflection.MethodInfo
    name: MethodInfo
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Linq.Expressions.ElementInit
    name: ElementInit
    fullName: System.Linq.Expressions.ElementInit
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.ListBind(System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ElementInit})
    name: ListBind
    fullName: System.Linq.Expressions.Expression.ListBind
  - name: (
    fullName: (
  - uid: System.Reflection.MethodInfo
    name: MethodInfo
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Linq.Expressions.ElementInit
    name: ElementInit
    fullName: System.Linq.Expressions.ElementInit
  - name: )
    fullName: )
  - name: )
    fullName: )
- uid: System.Linq.Expressions.Expression.ListBind(System.Reflection.MethodInfo,System.Linq.Expressions.ElementInit[])
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: ListBind(MethodInfo, ElementInit[])
  fullName: System.Linq.Expressions.Expression.ListBind(System.Reflection.MethodInfo, System.Linq.Expressions.ElementInit[])
  fullname.vb: System.Linq.Expressions.Expression.ListBind(System.Reflection.MethodInfo, System.Linq.Expressions.ElementInit())
  name.vb: ListBind(MethodInfo, ElementInit())
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.ListBind(System.Reflection.MethodInfo,System.Linq.Expressions.ElementInit[])
    name: ListBind
    fullName: System.Linq.Expressions.Expression.ListBind
  - name: (
    fullName: (
  - uid: System.Reflection.MethodInfo
    name: MethodInfo
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.ElementInit
    name: ElementInit
    fullName: System.Linq.Expressions.ElementInit
  - name: '[]'
    fullName: '[]'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.ListBind(System.Reflection.MethodInfo,System.Linq.Expressions.ElementInit[])
    name: ListBind
    fullName: System.Linq.Expressions.Expression.ListBind
  - name: (
    fullName: (
  - uid: System.Reflection.MethodInfo
    name: MethodInfo
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.ElementInit
    name: ElementInit
    fullName: System.Linq.Expressions.ElementInit
  - name: ()
    fullName: ()
  - name: )
    fullName: )
- uid: System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ElementInit})
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: ListInit(NewExpression, IEnumerable<ElementInit>)
  fullName: System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression, System.Collections.Generic.IEnumerable<System.Linq.Expressions.ElementInit>)
  fullname.vb: System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression, System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.ElementInit))
  name.vb: ListInit(NewExpression, IEnumerable(Of ElementInit))
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ElementInit})
    name: ListInit
    fullName: System.Linq.Expressions.Expression.ListInit
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.NewExpression
    name: NewExpression
    fullName: System.Linq.Expressions.NewExpression
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Linq.Expressions.ElementInit
    name: ElementInit
    fullName: System.Linq.Expressions.ElementInit
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ElementInit})
    name: ListInit
    fullName: System.Linq.Expressions.Expression.ListInit
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.NewExpression
    name: NewExpression
    fullName: System.Linq.Expressions.NewExpression
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Linq.Expressions.ElementInit
    name: ElementInit
    fullName: System.Linq.Expressions.ElementInit
  - name: )
    fullName: )
  - name: )
    fullName: )
- uid: System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: ListInit(NewExpression, IEnumerable<Expression>)
  fullName: System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression, System.Collections.Generic.IEnumerable<System.Linq.Expressions.Expression>)
  fullname.vb: System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression, System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.Expression))
  name.vb: ListInit(NewExpression, IEnumerable(Of Expression))
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
    name: ListInit
    fullName: System.Linq.Expressions.Expression.ListInit
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.NewExpression
    name: NewExpression
    fullName: System.Linq.Expressions.NewExpression
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
    name: ListInit
    fullName: System.Linq.Expressions.Expression.ListInit
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.NewExpression
    name: NewExpression
    fullName: System.Linq.Expressions.NewExpression
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: )
    fullName: )
  - name: )
    fullName: )
- uid: System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Linq.Expressions.ElementInit[])
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: ListInit(NewExpression, ElementInit[])
  fullName: System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression, System.Linq.Expressions.ElementInit[])
  fullname.vb: System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression, System.Linq.Expressions.ElementInit())
  name.vb: ListInit(NewExpression, ElementInit())
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Linq.Expressions.ElementInit[])
    name: ListInit
    fullName: System.Linq.Expressions.Expression.ListInit
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.NewExpression
    name: NewExpression
    fullName: System.Linq.Expressions.NewExpression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.ElementInit
    name: ElementInit
    fullName: System.Linq.Expressions.ElementInit
  - name: '[]'
    fullName: '[]'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Linq.Expressions.ElementInit[])
    name: ListInit
    fullName: System.Linq.Expressions.Expression.ListInit
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.NewExpression
    name: NewExpression
    fullName: System.Linq.Expressions.NewExpression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.ElementInit
    name: ElementInit
    fullName: System.Linq.Expressions.ElementInit
  - name: ()
    fullName: ()
  - name: )
    fullName: )
- uid: System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Linq.Expressions.Expression[])
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: ListInit(NewExpression, Expression[])
  fullName: System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression, System.Linq.Expressions.Expression[])
  fullname.vb: System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression, System.Linq.Expressions.Expression())
  name.vb: ListInit(NewExpression, Expression())
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Linq.Expressions.Expression[])
    name: ListInit
    fullName: System.Linq.Expressions.Expression.ListInit
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.NewExpression
    name: NewExpression
    fullName: System.Linq.Expressions.NewExpression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: '[]'
    fullName: '[]'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Linq.Expressions.Expression[])
    name: ListInit
    fullName: System.Linq.Expressions.Expression.ListInit
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.NewExpression
    name: NewExpression
    fullName: System.Linq.Expressions.NewExpression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ()
    fullName: ()
  - name: )
    fullName: )
- uid: System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: ListInit(NewExpression, MethodInfo, IEnumerable<Expression>)
  fullName: System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression, System.Reflection.MethodInfo, System.Collections.Generic.IEnumerable<System.Linq.Expressions.Expression>)
  fullname.vb: System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression, System.Reflection.MethodInfo, System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.Expression))
  name.vb: ListInit(NewExpression, MethodInfo, IEnumerable(Of Expression))
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
    name: ListInit
    fullName: System.Linq.Expressions.Expression.ListInit
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.NewExpression
    name: NewExpression
    fullName: System.Linq.Expressions.NewExpression
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: MethodInfo
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
    name: ListInit
    fullName: System.Linq.Expressions.Expression.ListInit
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.NewExpression
    name: NewExpression
    fullName: System.Linq.Expressions.NewExpression
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: MethodInfo
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: )
    fullName: )
  - name: )
    fullName: )
- uid: System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Reflection.MethodInfo,System.Linq.Expressions.Expression[])
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: ListInit(NewExpression, MethodInfo, Expression[])
  fullName: System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression, System.Reflection.MethodInfo, System.Linq.Expressions.Expression[])
  fullname.vb: System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression, System.Reflection.MethodInfo, System.Linq.Expressions.Expression())
  name.vb: ListInit(NewExpression, MethodInfo, Expression())
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Reflection.MethodInfo,System.Linq.Expressions.Expression[])
    name: ListInit
    fullName: System.Linq.Expressions.Expression.ListInit
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.NewExpression
    name: NewExpression
    fullName: System.Linq.Expressions.NewExpression
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: MethodInfo
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: '[]'
    fullName: '[]'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Reflection.MethodInfo,System.Linq.Expressions.Expression[])
    name: ListInit
    fullName: System.Linq.Expressions.Expression.ListInit
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.NewExpression
    name: NewExpression
    fullName: System.Linq.Expressions.NewExpression
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: MethodInfo
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ()
    fullName: ()
  - name: )
    fullName: )
- uid: System.Linq.Expressions.Expression.Loop(System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Loop(Expression)
  fullName: System.Linq.Expressions.Expression.Loop(System.Linq.Expressions.Expression)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.Loop(System.Linq.Expressions.Expression)
    name: Loop
    fullName: System.Linq.Expressions.Expression.Loop
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.Loop(System.Linq.Expressions.Expression)
    name: Loop
    fullName: System.Linq.Expressions.Expression.Loop
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: )
    fullName: )
- uid: System.Linq.Expressions.Expression.Loop(System.Linq.Expressions.Expression,System.Linq.Expressions.LabelTarget)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Loop(Expression, LabelTarget)
  fullName: System.Linq.Expressions.Expression.Loop(System.Linq.Expressions.Expression, System.Linq.Expressions.LabelTarget)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.Loop(System.Linq.Expressions.Expression,System.Linq.Expressions.LabelTarget)
    name: Loop
    fullName: System.Linq.Expressions.Expression.Loop
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.LabelTarget
    name: LabelTarget
    fullName: System.Linq.Expressions.LabelTarget
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.Loop(System.Linq.Expressions.Expression,System.Linq.Expressions.LabelTarget)
    name: Loop
    fullName: System.Linq.Expressions.Expression.Loop
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.LabelTarget
    name: LabelTarget
    fullName: System.Linq.Expressions.LabelTarget
  - name: )
    fullName: )
- uid: System.Linq.Expressions.Expression.Loop(System.Linq.Expressions.Expression,System.Linq.Expressions.LabelTarget,System.Linq.Expressions.LabelTarget)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Loop(Expression, LabelTarget, LabelTarget)
  fullName: System.Linq.Expressions.Expression.Loop(System.Linq.Expressions.Expression, System.Linq.Expressions.LabelTarget, System.Linq.Expressions.LabelTarget)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.Loop(System.Linq.Expressions.Expression,System.Linq.Expressions.LabelTarget,System.Linq.Expressions.LabelTarget)
    name: Loop
    fullName: System.Linq.Expressions.Expression.Loop
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.LabelTarget
    name: LabelTarget
    fullName: System.Linq.Expressions.LabelTarget
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.LabelTarget
    name: LabelTarget
    fullName: System.Linq.Expressions.LabelTarget
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.Loop(System.Linq.Expressions.Expression,System.Linq.Expressions.LabelTarget,System.Linq.Expressions.LabelTarget)
    name: Loop
    fullName: System.Linq.Expressions.Expression.Loop
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.LabelTarget
    name: LabelTarget
    fullName: System.Linq.Expressions.LabelTarget
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.LabelTarget
    name: LabelTarget
    fullName: System.Linq.Expressions.LabelTarget
  - name: )
    fullName: )
- uid: System.Linq.Expressions.Expression.MakeBinary(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: MakeBinary(ExpressionType, Expression, Expression)
  fullName: System.Linq.Expressions.Expression.MakeBinary(System.Linq.Expressions.ExpressionType, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.MakeBinary(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
    name: MakeBinary
    fullName: System.Linq.Expressions.Expression.MakeBinary
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.ExpressionType
    name: ExpressionType
    fullName: System.Linq.Expressions.ExpressionType
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.MakeBinary(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
    name: MakeBinary
    fullName: System.Linq.Expressions.Expression.MakeBinary
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.ExpressionType
    name: ExpressionType
    fullName: System.Linq.Expressions.ExpressionType
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: )
    fullName: )
- uid: System.Linq.Expressions.Expression.MakeBinary(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: MakeBinary(ExpressionType, Expression, Expression, Boolean, MethodInfo)
  fullName: System.Linq.Expressions.Expression.MakeBinary(System.Linq.Expressions.ExpressionType, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Boolean, System.Reflection.MethodInfo)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.MakeBinary(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)
    name: MakeBinary
    fullName: System.Linq.Expressions.Expression.MakeBinary
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.ExpressionType
    name: ExpressionType
    fullName: System.Linq.Expressions.ExpressionType
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: MethodInfo
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.MakeBinary(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)
    name: MakeBinary
    fullName: System.Linq.Expressions.Expression.MakeBinary
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.ExpressionType
    name: ExpressionType
    fullName: System.Linq.Expressions.ExpressionType
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: MethodInfo
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: )
    fullName: )
- uid: System.Linq.Expressions.Expression.MakeBinary(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: MakeBinary(ExpressionType, Expression, Expression, Boolean, MethodInfo, LambdaExpression)
  fullName: System.Linq.Expressions.Expression.MakeBinary(System.Linq.Expressions.ExpressionType, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Boolean, System.Reflection.MethodInfo, System.Linq.Expressions.LambdaExpression)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.MakeBinary(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
    name: MakeBinary
    fullName: System.Linq.Expressions.Expression.MakeBinary
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.ExpressionType
    name: ExpressionType
    fullName: System.Linq.Expressions.ExpressionType
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: MethodInfo
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.LambdaExpression
    name: LambdaExpression
    fullName: System.Linq.Expressions.LambdaExpression
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.MakeBinary(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
    name: MakeBinary
    fullName: System.Linq.Expressions.Expression.MakeBinary
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.ExpressionType
    name: ExpressionType
    fullName: System.Linq.Expressions.ExpressionType
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: MethodInfo
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.LambdaExpression
    name: LambdaExpression
    fullName: System.Linq.Expressions.LambdaExpression
  - name: )
    fullName: )
- uid: System.Linq.Expressions.Expression.MakeCatchBlock(System.Type,System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: MakeCatchBlock(Type, ParameterExpression, Expression, Expression)
  fullName: System.Linq.Expressions.Expression.MakeCatchBlock(System.Type, System.Linq.Expressions.ParameterExpression, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.MakeCatchBlock(System.Type,System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
    name: MakeCatchBlock
    fullName: System.Linq.Expressions.Expression.MakeCatchBlock
  - name: (
    fullName: (
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.ParameterExpression
    name: ParameterExpression
    fullName: System.Linq.Expressions.ParameterExpression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.MakeCatchBlock(System.Type,System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
    name: MakeCatchBlock
    fullName: System.Linq.Expressions.Expression.MakeCatchBlock
  - name: (
    fullName: (
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.ParameterExpression
    name: ParameterExpression
    fullName: System.Linq.Expressions.ParameterExpression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: )
    fullName: )
- uid: System.Linq.Expressions.Expression.MakeGoto(System.Linq.Expressions.GotoExpressionKind,System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression,System.Type)
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: MakeGoto(GotoExpressionKind, LabelTarget, Expression, Type)
  fullName: System.Linq.Expressions.Expression.MakeGoto(System.Linq.Expressions.GotoExpressionKind, System.Linq.Expressions.LabelTarget, System.Linq.Expressions.Expression, System.Type)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.MakeGoto(System.Linq.Expressions.GotoExpressionKind,System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression,System.Type)
    name: MakeGoto
    fullName: System.Linq.Expressions.Expression.MakeGoto
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.GotoExpressionKind
    name: GotoExpressionKind
    fullName: System.Linq.Expressions.GotoExpressionKind
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.LabelTarget
    name: LabelTarget
    fullName: System.Linq.Expressions.LabelTarget
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.MakeGoto(System.Linq.Expressions.GotoExpressionKind,System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression,System.Type)
    name: MakeGoto
    fullName: System.Linq.Expressions.Expression.MakeGoto
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.GotoExpressionKind
    name: GotoExpressionKind
    fullName: System.Linq.Expressions.GotoExpressionKind
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.LabelTarget
    name: LabelTarget
    fullName: System.Linq.Expressions.LabelTarget
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: )
    fullName: )
- uid: System.Linq.Expressions.Expression.MakeIndex(System.Linq.Expressions.Expression,System.Reflection.PropertyInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: MakeIndex(Expression, PropertyInfo, IEnumerable<Expression>)
  fullName: System.Linq.Expressions.Expression.MakeIndex(System.Linq.Expressions.Expression, System.Reflection.PropertyInfo, System.Collections.Generic.IEnumerable<System.Linq.Expressions.Expression>)
  fullname.vb: System.Linq.Expressions.Expression.MakeIndex(System.Linq.Expressions.Expression, System.Reflection.PropertyInfo, System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.Expression))
  name.vb: MakeIndex(Expression, PropertyInfo, IEnumerable(Of Expression))
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.MakeIndex(System.Linq.Expressions.Expression,System.Reflection.PropertyInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
    name: MakeIndex
    fullName: System.Linq.Expressions.Expression.MakeIndex
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.PropertyInfo
    name: PropertyInfo
    fullName: System.Reflection.PropertyInfo
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.MakeIndex(System.Linq.Expressions.Expression,System.Reflection.PropertyInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
    name: MakeIndex
    fullName: System.Linq.Expressions.Expression.MakeIndex
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.PropertyInfo
    name: PropertyInfo
    fullName: System.Reflection.PropertyInfo
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: )
    fullName: )
  - name: )
    fullName: )
- uid: System.Linq.Expressions.Expression.MakeMemberAccess(System.Linq.Expressions.Expression,System.Reflection.MemberInfo)
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: MakeMemberAccess(Expression, MemberInfo)
  fullName: System.Linq.Expressions.Expression.MakeMemberAccess(System.Linq.Expressions.Expression, System.Reflection.MemberInfo)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.MakeMemberAccess(System.Linq.Expressions.Expression,System.Reflection.MemberInfo)
    name: MakeMemberAccess
    fullName: System.Linq.Expressions.Expression.MakeMemberAccess
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.MemberInfo
    name: MemberInfo
    fullName: System.Reflection.MemberInfo
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.MakeMemberAccess(System.Linq.Expressions.Expression,System.Reflection.MemberInfo)
    name: MakeMemberAccess
    fullName: System.Linq.Expressions.Expression.MakeMemberAccess
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.MemberInfo
    name: MemberInfo
    fullName: System.Reflection.MemberInfo
    isExternal: true
  - name: )
    fullName: )
- uid: System.Linq.Expressions.Expression.MakeTry(System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.CatchBlock})
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: MakeTry(Type, Expression, Expression, Expression, IEnumerable<CatchBlock>)
  fullName: System.Linq.Expressions.Expression.MakeTry(System.Type, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Collections.Generic.IEnumerable<System.Linq.Expressions.CatchBlock>)
  fullname.vb: System.Linq.Expressions.Expression.MakeTry(System.Type, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.CatchBlock))
  name.vb: MakeTry(Type, Expression, Expression, Expression, IEnumerable(Of CatchBlock))
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.MakeTry(System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.CatchBlock})
    name: MakeTry
    fullName: System.Linq.Expressions.Expression.MakeTry
  - name: (
    fullName: (
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Linq.Expressions.CatchBlock
    name: CatchBlock
    fullName: System.Linq.Expressions.CatchBlock
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.MakeTry(System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.CatchBlock})
    name: MakeTry
    fullName: System.Linq.Expressions.Expression.MakeTry
  - name: (
    fullName: (
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Linq.Expressions.CatchBlock
    name: CatchBlock
    fullName: System.Linq.Expressions.CatchBlock
  - name: )
    fullName: )
  - name: )
    fullName: )
- uid: System.Linq.Expressions.Expression.MakeUnary(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Type)
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: MakeUnary(ExpressionType, Expression, Type)
  fullName: System.Linq.Expressions.Expression.MakeUnary(System.Linq.Expressions.ExpressionType, System.Linq.Expressions.Expression, System.Type)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.MakeUnary(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Type)
    name: MakeUnary
    fullName: System.Linq.Expressions.Expression.MakeUnary
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.ExpressionType
    name: ExpressionType
    fullName: System.Linq.Expressions.ExpressionType
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.MakeUnary(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Type)
    name: MakeUnary
    fullName: System.Linq.Expressions.Expression.MakeUnary
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.ExpressionType
    name: ExpressionType
    fullName: System.Linq.Expressions.ExpressionType
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: )
    fullName: )
- uid: System.Linq.Expressions.Expression.MakeUnary(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Type,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: MakeUnary(ExpressionType, Expression, Type, MethodInfo)
  fullName: System.Linq.Expressions.Expression.MakeUnary(System.Linq.Expressions.ExpressionType, System.Linq.Expressions.Expression, System.Type, System.Reflection.MethodInfo)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.MakeUnary(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Type,System.Reflection.MethodInfo)
    name: MakeUnary
    fullName: System.Linq.Expressions.Expression.MakeUnary
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.ExpressionType
    name: ExpressionType
    fullName: System.Linq.Expressions.ExpressionType
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: MethodInfo
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.MakeUnary(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Type,System.Reflection.MethodInfo)
    name: MakeUnary
    fullName: System.Linq.Expressions.Expression.MakeUnary
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.ExpressionType
    name: ExpressionType
    fullName: System.Linq.Expressions.ExpressionType
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: MethodInfo
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: )
    fullName: )
- uid: System.Linq.Expressions.Expression.MemberBind(System.Reflection.MemberInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.MemberBinding})
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: MemberBind(MemberInfo, IEnumerable<MemberBinding>)
  fullName: System.Linq.Expressions.Expression.MemberBind(System.Reflection.MemberInfo, System.Collections.Generic.IEnumerable<System.Linq.Expressions.MemberBinding>)
  fullname.vb: System.Linq.Expressions.Expression.MemberBind(System.Reflection.MemberInfo, System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.MemberBinding))
  name.vb: MemberBind(MemberInfo, IEnumerable(Of MemberBinding))
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.MemberBind(System.Reflection.MemberInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.MemberBinding})
    name: MemberBind
    fullName: System.Linq.Expressions.Expression.MemberBind
  - name: (
    fullName: (
  - uid: System.Reflection.MemberInfo
    name: MemberInfo
    fullName: System.Reflection.MemberInfo
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Linq.Expressions.MemberBinding
    name: MemberBinding
    fullName: System.Linq.Expressions.MemberBinding
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.MemberBind(System.Reflection.MemberInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.MemberBinding})
    name: MemberBind
    fullName: System.Linq.Expressions.Expression.MemberBind
  - name: (
    fullName: (
  - uid: System.Reflection.MemberInfo
    name: MemberInfo
    fullName: System.Reflection.MemberInfo
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Linq.Expressions.MemberBinding
    name: MemberBinding
    fullName: System.Linq.Expressions.MemberBinding
  - name: )
    fullName: )
  - name: )
    fullName: )
- uid: System.Linq.Expressions.Expression.MemberBind(System.Reflection.MemberInfo,System.Linq.Expressions.MemberBinding[])
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: MemberBind(MemberInfo, MemberBinding[])
  fullName: System.Linq.Expressions.Expression.MemberBind(System.Reflection.MemberInfo, System.Linq.Expressions.MemberBinding[])
  fullname.vb: System.Linq.Expressions.Expression.MemberBind(System.Reflection.MemberInfo, System.Linq.Expressions.MemberBinding())
  name.vb: MemberBind(MemberInfo, MemberBinding())
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.MemberBind(System.Reflection.MemberInfo,System.Linq.Expressions.MemberBinding[])
    name: MemberBind
    fullName: System.Linq.Expressions.Expression.MemberBind
  - name: (
    fullName: (
  - uid: System.Reflection.MemberInfo
    name: MemberInfo
    fullName: System.Reflection.MemberInfo
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.MemberBinding
    name: MemberBinding
    fullName: System.Linq.Expressions.MemberBinding
  - name: '[]'
    fullName: '[]'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.MemberBind(System.Reflection.MemberInfo,System.Linq.Expressions.MemberBinding[])
    name: MemberBind
    fullName: System.Linq.Expressions.Expression.MemberBind
  - name: (
    fullName: (
  - uid: System.Reflection.MemberInfo
    name: MemberInfo
    fullName: System.Reflection.MemberInfo
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.MemberBinding
    name: MemberBinding
    fullName: System.Linq.Expressions.MemberBinding
  - name: ()
    fullName: ()
  - name: )
    fullName: )
- uid: System.Linq.Expressions.Expression.MemberBind(System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.MemberBinding})
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: MemberBind(MethodInfo, IEnumerable<MemberBinding>)
  fullName: System.Linq.Expressions.Expression.MemberBind(System.Reflection.MethodInfo, System.Collections.Generic.IEnumerable<System.Linq.Expressions.MemberBinding>)
  fullname.vb: System.Linq.Expressions.Expression.MemberBind(System.Reflection.MethodInfo, System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.MemberBinding))
  name.vb: MemberBind(MethodInfo, IEnumerable(Of MemberBinding))
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.MemberBind(System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.MemberBinding})
    name: MemberBind
    fullName: System.Linq.Expressions.Expression.MemberBind
  - name: (
    fullName: (
  - uid: System.Reflection.MethodInfo
    name: MethodInfo
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Linq.Expressions.MemberBinding
    name: MemberBinding
    fullName: System.Linq.Expressions.MemberBinding
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.MemberBind(System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.MemberBinding})
    name: MemberBind
    fullName: System.Linq.Expressions.Expression.MemberBind
  - name: (
    fullName: (
  - uid: System.Reflection.MethodInfo
    name: MethodInfo
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Linq.Expressions.MemberBinding
    name: MemberBinding
    fullName: System.Linq.Expressions.MemberBinding
  - name: )
    fullName: )
  - name: )
    fullName: )
- uid: System.Linq.Expressions.Expression.MemberBind(System.Reflection.MethodInfo,System.Linq.Expressions.MemberBinding[])
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: MemberBind(MethodInfo, MemberBinding[])
  fullName: System.Linq.Expressions.Expression.MemberBind(System.Reflection.MethodInfo, System.Linq.Expressions.MemberBinding[])
  fullname.vb: System.Linq.Expressions.Expression.MemberBind(System.Reflection.MethodInfo, System.Linq.Expressions.MemberBinding())
  name.vb: MemberBind(MethodInfo, MemberBinding())
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.MemberBind(System.Reflection.MethodInfo,System.Linq.Expressions.MemberBinding[])
    name: MemberBind
    fullName: System.Linq.Expressions.Expression.MemberBind
  - name: (
    fullName: (
  - uid: System.Reflection.MethodInfo
    name: MethodInfo
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.MemberBinding
    name: MemberBinding
    fullName: System.Linq.Expressions.MemberBinding
  - name: '[]'
    fullName: '[]'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.MemberBind(System.Reflection.MethodInfo,System.Linq.Expressions.MemberBinding[])
    name: MemberBind
    fullName: System.Linq.Expressions.Expression.MemberBind
  - name: (
    fullName: (
  - uid: System.Reflection.MethodInfo
    name: MethodInfo
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.MemberBinding
    name: MemberBinding
    fullName: System.Linq.Expressions.MemberBinding
  - name: ()
    fullName: ()
  - name: )
    fullName: )
- uid: System.Linq.Expressions.Expression.MemberInit(System.Linq.Expressions.NewExpression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.MemberBinding})
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: MemberInit(NewExpression, IEnumerable<MemberBinding>)
  fullName: System.Linq.Expressions.Expression.MemberInit(System.Linq.Expressions.NewExpression, System.Collections.Generic.IEnumerable<System.Linq.Expressions.MemberBinding>)
  fullname.vb: System.Linq.Expressions.Expression.MemberInit(System.Linq.Expressions.NewExpression, System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.MemberBinding))
  name.vb: MemberInit(NewExpression, IEnumerable(Of MemberBinding))
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.MemberInit(System.Linq.Expressions.NewExpression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.MemberBinding})
    name: MemberInit
    fullName: System.Linq.Expressions.Expression.MemberInit
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.NewExpression
    name: NewExpression
    fullName: System.Linq.Expressions.NewExpression
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Linq.Expressions.MemberBinding
    name: MemberBinding
    fullName: System.Linq.Expressions.MemberBinding
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.MemberInit(System.Linq.Expressions.NewExpression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.MemberBinding})
    name: MemberInit
    fullName: System.Linq.Expressions.Expression.MemberInit
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.NewExpression
    name: NewExpression
    fullName: System.Linq.Expressions.NewExpression
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Linq.Expressions.MemberBinding
    name: MemberBinding
    fullName: System.Linq.Expressions.MemberBinding
  - name: )
    fullName: )
  - name: )
    fullName: )
- uid: System.Linq.Expressions.Expression.MemberInit(System.Linq.Expressions.NewExpression,System.Linq.Expressions.MemberBinding[])
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: MemberInit(NewExpression, MemberBinding[])
  fullName: System.Linq.Expressions.Expression.MemberInit(System.Linq.Expressions.NewExpression, System.Linq.Expressions.MemberBinding[])
  fullname.vb: System.Linq.Expressions.Expression.MemberInit(System.Linq.Expressions.NewExpression, System.Linq.Expressions.MemberBinding())
  name.vb: MemberInit(NewExpression, MemberBinding())
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.MemberInit(System.Linq.Expressions.NewExpression,System.Linq.Expressions.MemberBinding[])
    name: MemberInit
    fullName: System.Linq.Expressions.Expression.MemberInit
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.NewExpression
    name: NewExpression
    fullName: System.Linq.Expressions.NewExpression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.MemberBinding
    name: MemberBinding
    fullName: System.Linq.Expressions.MemberBinding
  - name: '[]'
    fullName: '[]'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.MemberInit(System.Linq.Expressions.NewExpression,System.Linq.Expressions.MemberBinding[])
    name: MemberInit
    fullName: System.Linq.Expressions.Expression.MemberInit
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.NewExpression
    name: NewExpression
    fullName: System.Linq.Expressions.NewExpression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.MemberBinding
    name: MemberBinding
    fullName: System.Linq.Expressions.MemberBinding
  - name: ()
    fullName: ()
  - name: )
    fullName: )
- uid: System.Linq.Expressions.Expression.Modulo(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Modulo(Expression, Expression)
  fullName: System.Linq.Expressions.Expression.Modulo(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.Modulo(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
    name: Modulo
    fullName: System.Linq.Expressions.Expression.Modulo
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.Modulo(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
    name: Modulo
    fullName: System.Linq.Expressions.Expression.Modulo
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: )
    fullName: )
- uid: System.Linq.Expressions.Expression.Modulo(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: Modulo(Expression, Expression, MethodInfo)
  fullName: System.Linq.Expressions.Expression.Modulo(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.Modulo(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
    name: Modulo
    fullName: System.Linq.Expressions.Expression.Modulo
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: MethodInfo
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.Modulo(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
    name: Modulo
    fullName: System.Linq.Expressions.Expression.Modulo
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: MethodInfo
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: )
    fullName: )
- uid: System.Linq.Expressions.Expression.ModuloAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: ModuloAssign(Expression, Expression)
  fullName: System.Linq.Expressions.Expression.ModuloAssign(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.ModuloAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
    name: ModuloAssign
    fullName: System.Linq.Expressions.Expression.ModuloAssign
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.ModuloAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
    name: ModuloAssign
    fullName: System.Linq.Expressions.Expression.ModuloAssign
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: )
    fullName: )
- uid: System.Linq.Expressions.Expression.ModuloAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: ModuloAssign(Expression, Expression, MethodInfo)
  fullName: System.Linq.Expressions.Expression.ModuloAssign(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.ModuloAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
    name: ModuloAssign
    fullName: System.Linq.Expressions.Expression.ModuloAssign
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: MethodInfo
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.ModuloAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
    name: ModuloAssign
    fullName: System.Linq.Expressions.Expression.ModuloAssign
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: MethodInfo
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: )
    fullName: )
- uid: System.Linq.Expressions.Expression.ModuloAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: ModuloAssign(Expression, Expression, MethodInfo, LambdaExpression)
  fullName: System.Linq.Expressions.Expression.ModuloAssign(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo, System.Linq.Expressions.LambdaExpression)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.ModuloAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
    name: ModuloAssign
    fullName: System.Linq.Expressions.Expression.ModuloAssign
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: MethodInfo
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.LambdaExpression
    name: LambdaExpression
    fullName: System.Linq.Expressions.LambdaExpression
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.ModuloAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
    name: ModuloAssign
    fullName: System.Linq.Expressions.Expression.ModuloAssign
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: MethodInfo
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.LambdaExpression
    name: LambdaExpression
    fullName: System.Linq.Expressions.LambdaExpression
  - name: )
    fullName: )
- uid: System.Linq.Expressions.Expression.Multiply(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Multiply(Expression, Expression)
  fullName: System.Linq.Expressions.Expression.Multiply(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.Multiply(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
    name: Multiply
    fullName: System.Linq.Expressions.Expression.Multiply
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.Multiply(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
    name: Multiply
    fullName: System.Linq.Expressions.Expression.Multiply
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: )
    fullName: )
- uid: System.Linq.Expressions.Expression.Multiply(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: Multiply(Expression, Expression, MethodInfo)
  fullName: System.Linq.Expressions.Expression.Multiply(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.Multiply(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
    name: Multiply
    fullName: System.Linq.Expressions.Expression.Multiply
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: MethodInfo
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.Multiply(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
    name: Multiply
    fullName: System.Linq.Expressions.Expression.Multiply
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: MethodInfo
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: )
    fullName: )
- uid: System.Linq.Expressions.Expression.MultiplyAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: MultiplyAssign(Expression, Expression)
  fullName: System.Linq.Expressions.Expression.MultiplyAssign(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.MultiplyAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
    name: MultiplyAssign
    fullName: System.Linq.Expressions.Expression.MultiplyAssign
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.MultiplyAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
    name: MultiplyAssign
    fullName: System.Linq.Expressions.Expression.MultiplyAssign
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: )
    fullName: )
- uid: System.Linq.Expressions.Expression.MultiplyAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: MultiplyAssign(Expression, Expression, MethodInfo)
  fullName: System.Linq.Expressions.Expression.MultiplyAssign(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.MultiplyAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
    name: MultiplyAssign
    fullName: System.Linq.Expressions.Expression.MultiplyAssign
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: MethodInfo
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.MultiplyAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
    name: MultiplyAssign
    fullName: System.Linq.Expressions.Expression.MultiplyAssign
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: MethodInfo
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: )
    fullName: )
- uid: System.Linq.Expressions.Expression.MultiplyAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: MultiplyAssign(Expression, Expression, MethodInfo, LambdaExpression)
  fullName: System.Linq.Expressions.Expression.MultiplyAssign(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo, System.Linq.Expressions.LambdaExpression)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.MultiplyAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
    name: MultiplyAssign
    fullName: System.Linq.Expressions.Expression.MultiplyAssign
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: MethodInfo
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.LambdaExpression
    name: LambdaExpression
    fullName: System.Linq.Expressions.LambdaExpression
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.MultiplyAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
    name: MultiplyAssign
    fullName: System.Linq.Expressions.Expression.MultiplyAssign
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: MethodInfo
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.LambdaExpression
    name: LambdaExpression
    fullName: System.Linq.Expressions.LambdaExpression
  - name: )
    fullName: )
- uid: System.Linq.Expressions.Expression.MultiplyAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: MultiplyAssignChecked(Expression, Expression)
  fullName: System.Linq.Expressions.Expression.MultiplyAssignChecked(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.MultiplyAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
    name: MultiplyAssignChecked
    fullName: System.Linq.Expressions.Expression.MultiplyAssignChecked
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.MultiplyAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
    name: MultiplyAssignChecked
    fullName: System.Linq.Expressions.Expression.MultiplyAssignChecked
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: )
    fullName: )
- uid: System.Linq.Expressions.Expression.MultiplyAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: MultiplyAssignChecked(Expression, Expression, MethodInfo)
  fullName: System.Linq.Expressions.Expression.MultiplyAssignChecked(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.MultiplyAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
    name: MultiplyAssignChecked
    fullName: System.Linq.Expressions.Expression.MultiplyAssignChecked
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: MethodInfo
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.MultiplyAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
    name: MultiplyAssignChecked
    fullName: System.Linq.Expressions.Expression.MultiplyAssignChecked
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: MethodInfo
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: )
    fullName: )
- uid: System.Linq.Expressions.Expression.MultiplyAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: MultiplyAssignChecked(Expression, Expression, MethodInfo, LambdaExpression)
  fullName: System.Linq.Expressions.Expression.MultiplyAssignChecked(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo, System.Linq.Expressions.LambdaExpression)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.MultiplyAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
    name: MultiplyAssignChecked
    fullName: System.Linq.Expressions.Expression.MultiplyAssignChecked
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: MethodInfo
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.LambdaExpression
    name: LambdaExpression
    fullName: System.Linq.Expressions.LambdaExpression
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.MultiplyAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
    name: MultiplyAssignChecked
    fullName: System.Linq.Expressions.Expression.MultiplyAssignChecked
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: MethodInfo
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.LambdaExpression
    name: LambdaExpression
    fullName: System.Linq.Expressions.LambdaExpression
  - name: )
    fullName: )
- uid: System.Linq.Expressions.Expression.MultiplyChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: MultiplyChecked(Expression, Expression)
  fullName: System.Linq.Expressions.Expression.MultiplyChecked(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.MultiplyChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
    name: MultiplyChecked
    fullName: System.Linq.Expressions.Expression.MultiplyChecked
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.MultiplyChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
    name: MultiplyChecked
    fullName: System.Linq.Expressions.Expression.MultiplyChecked
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: )
    fullName: )
- uid: System.Linq.Expressions.Expression.MultiplyChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: MultiplyChecked(Expression, Expression, MethodInfo)
  fullName: System.Linq.Expressions.Expression.MultiplyChecked(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.MultiplyChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
    name: MultiplyChecked
    fullName: System.Linq.Expressions.Expression.MultiplyChecked
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: MethodInfo
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.MultiplyChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
    name: MultiplyChecked
    fullName: System.Linq.Expressions.Expression.MultiplyChecked
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: MethodInfo
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: )
    fullName: )
- uid: System.Linq.Expressions.Expression.Negate(System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Negate(Expression)
  fullName: System.Linq.Expressions.Expression.Negate(System.Linq.Expressions.Expression)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.Negate(System.Linq.Expressions.Expression)
    name: Negate
    fullName: System.Linq.Expressions.Expression.Negate
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.Negate(System.Linq.Expressions.Expression)
    name: Negate
    fullName: System.Linq.Expressions.Expression.Negate
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: )
    fullName: )
- uid: System.Linq.Expressions.Expression.Negate(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: Negate(Expression, MethodInfo)
  fullName: System.Linq.Expressions.Expression.Negate(System.Linq.Expressions.Expression, System.Reflection.MethodInfo)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.Negate(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
    name: Negate
    fullName: System.Linq.Expressions.Expression.Negate
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: MethodInfo
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.Negate(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
    name: Negate
    fullName: System.Linq.Expressions.Expression.Negate
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: MethodInfo
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: )
    fullName: )
- uid: System.Linq.Expressions.Expression.NegateChecked(System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: NegateChecked(Expression)
  fullName: System.Linq.Expressions.Expression.NegateChecked(System.Linq.Expressions.Expression)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.NegateChecked(System.Linq.Expressions.Expression)
    name: NegateChecked
    fullName: System.Linq.Expressions.Expression.NegateChecked
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.NegateChecked(System.Linq.Expressions.Expression)
    name: NegateChecked
    fullName: System.Linq.Expressions.Expression.NegateChecked
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: )
    fullName: )
- uid: System.Linq.Expressions.Expression.NegateChecked(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: NegateChecked(Expression, MethodInfo)
  fullName: System.Linq.Expressions.Expression.NegateChecked(System.Linq.Expressions.Expression, System.Reflection.MethodInfo)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.NegateChecked(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
    name: NegateChecked
    fullName: System.Linq.Expressions.Expression.NegateChecked
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: MethodInfo
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.NegateChecked(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
    name: NegateChecked
    fullName: System.Linq.Expressions.Expression.NegateChecked
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: MethodInfo
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: )
    fullName: )
- uid: System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo)
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: New(ConstructorInfo)
  fullName: System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo)
    name: New
    fullName: System.Linq.Expressions.Expression.New
  - name: (
    fullName: (
  - uid: System.Reflection.ConstructorInfo
    name: ConstructorInfo
    fullName: System.Reflection.ConstructorInfo
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo)
    name: New
    fullName: System.Linq.Expressions.Expression.New
  - name: (
    fullName: (
  - uid: System.Reflection.ConstructorInfo
    name: ConstructorInfo
    fullName: System.Reflection.ConstructorInfo
    isExternal: true
  - name: )
    fullName: )
- uid: System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: New(ConstructorInfo, IEnumerable<Expression>)
  fullName: System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo, System.Collections.Generic.IEnumerable<System.Linq.Expressions.Expression>)
  fullname.vb: System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo, System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.Expression))
  name.vb: New(ConstructorInfo, IEnumerable(Of Expression))
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
    name: New
    fullName: System.Linq.Expressions.Expression.New
  - name: (
    fullName: (
  - uid: System.Reflection.ConstructorInfo
    name: ConstructorInfo
    fullName: System.Reflection.ConstructorInfo
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
    name: New
    fullName: System.Linq.Expressions.Expression.New
  - name: (
    fullName: (
  - uid: System.Reflection.ConstructorInfo
    name: ConstructorInfo
    fullName: System.Reflection.ConstructorInfo
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: )
    fullName: )
  - name: )
    fullName: )
- uid: System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression},System.Collections.Generic.IEnumerable{System.Reflection.MemberInfo})
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: New(ConstructorInfo, IEnumerable<Expression>, IEnumerable<MemberInfo>)
  fullName: System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo, System.Collections.Generic.IEnumerable<System.Linq.Expressions.Expression>, System.Collections.Generic.IEnumerable<System.Reflection.MemberInfo>)
  fullname.vb: System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo, System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.Expression), System.Collections.Generic.IEnumerable(Of System.Reflection.MemberInfo))
  name.vb: New(ConstructorInfo, IEnumerable(Of Expression), IEnumerable(Of MemberInfo))
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression},System.Collections.Generic.IEnumerable{System.Reflection.MemberInfo})
    name: New
    fullName: System.Linq.Expressions.Expression.New
  - name: (
    fullName: (
  - uid: System.Reflection.ConstructorInfo
    name: ConstructorInfo
    fullName: System.Reflection.ConstructorInfo
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Reflection.MemberInfo
    name: MemberInfo
    fullName: System.Reflection.MemberInfo
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression},System.Collections.Generic.IEnumerable{System.Reflection.MemberInfo})
    name: New
    fullName: System.Linq.Expressions.Expression.New
  - name: (
    fullName: (
  - uid: System.Reflection.ConstructorInfo
    name: ConstructorInfo
    fullName: System.Reflection.ConstructorInfo
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Reflection.MemberInfo
    name: MemberInfo
    fullName: System.Reflection.MemberInfo
    isExternal: true
  - name: )
    fullName: )
  - name: )
    fullName: )
- uid: System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression},System.Reflection.MemberInfo[])
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: New(ConstructorInfo, IEnumerable<Expression>, MemberInfo[])
  fullName: System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo, System.Collections.Generic.IEnumerable<System.Linq.Expressions.Expression>, System.Reflection.MemberInfo[])
  fullname.vb: System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo, System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.Expression), System.Reflection.MemberInfo())
  name.vb: New(ConstructorInfo, IEnumerable(Of Expression), MemberInfo())
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression},System.Reflection.MemberInfo[])
    name: New
    fullName: System.Linq.Expressions.Expression.New
  - name: (
    fullName: (
  - uid: System.Reflection.ConstructorInfo
    name: ConstructorInfo
    fullName: System.Reflection.ConstructorInfo
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.MemberInfo
    name: MemberInfo
    fullName: System.Reflection.MemberInfo
    isExternal: true
  - name: '[]'
    fullName: '[]'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression},System.Reflection.MemberInfo[])
    name: New
    fullName: System.Linq.Expressions.Expression.New
  - name: (
    fullName: (
  - uid: System.Reflection.ConstructorInfo
    name: ConstructorInfo
    fullName: System.Reflection.ConstructorInfo
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.MemberInfo
    name: MemberInfo
    fullName: System.Reflection.MemberInfo
    isExternal: true
  - name: ()
    fullName: ()
  - name: )
    fullName: )
- uid: System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo,System.Linq.Expressions.Expression[])
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: New(ConstructorInfo, Expression[])
  fullName: System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo, System.Linq.Expressions.Expression[])
  fullname.vb: System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo, System.Linq.Expressions.Expression())
  name.vb: New(ConstructorInfo, Expression())
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo,System.Linq.Expressions.Expression[])
    name: New
    fullName: System.Linq.Expressions.Expression.New
  - name: (
    fullName: (
  - uid: System.Reflection.ConstructorInfo
    name: ConstructorInfo
    fullName: System.Reflection.ConstructorInfo
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: '[]'
    fullName: '[]'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo,System.Linq.Expressions.Expression[])
    name: New
    fullName: System.Linq.Expressions.Expression.New
  - name: (
    fullName: (
  - uid: System.Reflection.ConstructorInfo
    name: ConstructorInfo
    fullName: System.Reflection.ConstructorInfo
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ()
    fullName: ()
  - name: )
    fullName: )
- uid: System.Linq.Expressions.Expression.New(System.Type)
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: New(Type)
  fullName: System.Linq.Expressions.Expression.New(System.Type)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.New(System.Type)
    name: New
    fullName: System.Linq.Expressions.Expression.New
  - name: (
    fullName: (
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.New(System.Type)
    name: New
    fullName: System.Linq.Expressions.Expression.New
  - name: (
    fullName: (
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: )
    fullName: )
- uid: System.Linq.Expressions.Expression.NewArrayBounds(System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: NewArrayBounds(Type, IEnumerable<Expression>)
  fullName: System.Linq.Expressions.Expression.NewArrayBounds(System.Type, System.Collections.Generic.IEnumerable<System.Linq.Expressions.Expression>)
  fullname.vb: System.Linq.Expressions.Expression.NewArrayBounds(System.Type, System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.Expression))
  name.vb: NewArrayBounds(Type, IEnumerable(Of Expression))
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.NewArrayBounds(System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
    name: NewArrayBounds
    fullName: System.Linq.Expressions.Expression.NewArrayBounds
  - name: (
    fullName: (
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.NewArrayBounds(System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
    name: NewArrayBounds
    fullName: System.Linq.Expressions.Expression.NewArrayBounds
  - name: (
    fullName: (
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: )
    fullName: )
  - name: )
    fullName: )
- uid: System.Linq.Expressions.Expression.NewArrayBounds(System.Type,System.Linq.Expressions.Expression[])
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: NewArrayBounds(Type, Expression[])
  fullName: System.Linq.Expressions.Expression.NewArrayBounds(System.Type, System.Linq.Expressions.Expression[])
  fullname.vb: System.Linq.Expressions.Expression.NewArrayBounds(System.Type, System.Linq.Expressions.Expression())
  name.vb: NewArrayBounds(Type, Expression())
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.NewArrayBounds(System.Type,System.Linq.Expressions.Expression[])
    name: NewArrayBounds
    fullName: System.Linq.Expressions.Expression.NewArrayBounds
  - name: (
    fullName: (
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: '[]'
    fullName: '[]'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.NewArrayBounds(System.Type,System.Linq.Expressions.Expression[])
    name: NewArrayBounds
    fullName: System.Linq.Expressions.Expression.NewArrayBounds
  - name: (
    fullName: (
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ()
    fullName: ()
  - name: )
    fullName: )
- uid: System.Linq.Expressions.Expression.NewArrayInit(System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: NewArrayInit(Type, IEnumerable<Expression>)
  fullName: System.Linq.Expressions.Expression.NewArrayInit(System.Type, System.Collections.Generic.IEnumerable<System.Linq.Expressions.Expression>)
  fullname.vb: System.Linq.Expressions.Expression.NewArrayInit(System.Type, System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.Expression))
  name.vb: NewArrayInit(Type, IEnumerable(Of Expression))
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.NewArrayInit(System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
    name: NewArrayInit
    fullName: System.Linq.Expressions.Expression.NewArrayInit
  - name: (
    fullName: (
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.NewArrayInit(System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
    name: NewArrayInit
    fullName: System.Linq.Expressions.Expression.NewArrayInit
  - name: (
    fullName: (
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: )
    fullName: )
  - name: )
    fullName: )
- uid: System.Linq.Expressions.Expression.NewArrayInit(System.Type,System.Linq.Expressions.Expression[])
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: NewArrayInit(Type, Expression[])
  fullName: System.Linq.Expressions.Expression.NewArrayInit(System.Type, System.Linq.Expressions.Expression[])
  fullname.vb: System.Linq.Expressions.Expression.NewArrayInit(System.Type, System.Linq.Expressions.Expression())
  name.vb: NewArrayInit(Type, Expression())
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.NewArrayInit(System.Type,System.Linq.Expressions.Expression[])
    name: NewArrayInit
    fullName: System.Linq.Expressions.Expression.NewArrayInit
  - name: (
    fullName: (
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: '[]'
    fullName: '[]'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.NewArrayInit(System.Type,System.Linq.Expressions.Expression[])
    name: NewArrayInit
    fullName: System.Linq.Expressions.Expression.NewArrayInit
  - name: (
    fullName: (
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ()
    fullName: ()
  - name: )
    fullName: )
- uid: System.Linq.Expressions.Expression.Not(System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Not(Expression)
  fullName: System.Linq.Expressions.Expression.Not(System.Linq.Expressions.Expression)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.Not(System.Linq.Expressions.Expression)
    name: Not
    fullName: System.Linq.Expressions.Expression.Not
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.Not(System.Linq.Expressions.Expression)
    name: Not
    fullName: System.Linq.Expressions.Expression.Not
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: )
    fullName: )
- uid: System.Linq.Expressions.Expression.Not(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: Not(Expression, MethodInfo)
  fullName: System.Linq.Expressions.Expression.Not(System.Linq.Expressions.Expression, System.Reflection.MethodInfo)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.Not(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
    name: Not
    fullName: System.Linq.Expressions.Expression.Not
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: MethodInfo
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.Not(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
    name: Not
    fullName: System.Linq.Expressions.Expression.Not
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: MethodInfo
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: )
    fullName: )
- uid: System.Linq.Expressions.Expression.NotEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: NotEqual(Expression, Expression)
  fullName: System.Linq.Expressions.Expression.NotEqual(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.NotEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
    name: NotEqual
    fullName: System.Linq.Expressions.Expression.NotEqual
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.NotEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
    name: NotEqual
    fullName: System.Linq.Expressions.Expression.NotEqual
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: )
    fullName: )
- uid: System.Linq.Expressions.Expression.NotEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: NotEqual(Expression, Expression, Boolean, MethodInfo)
  fullName: System.Linq.Expressions.Expression.NotEqual(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Boolean, System.Reflection.MethodInfo)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.NotEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)
    name: NotEqual
    fullName: System.Linq.Expressions.Expression.NotEqual
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: MethodInfo
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.NotEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)
    name: NotEqual
    fullName: System.Linq.Expressions.Expression.NotEqual
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: MethodInfo
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: )
    fullName: )
- uid: System.Linq.Expressions.Expression.OnesComplement(System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: OnesComplement(Expression)
  fullName: System.Linq.Expressions.Expression.OnesComplement(System.Linq.Expressions.Expression)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.OnesComplement(System.Linq.Expressions.Expression)
    name: OnesComplement
    fullName: System.Linq.Expressions.Expression.OnesComplement
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.OnesComplement(System.Linq.Expressions.Expression)
    name: OnesComplement
    fullName: System.Linq.Expressions.Expression.OnesComplement
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: )
    fullName: )
- uid: System.Linq.Expressions.Expression.OnesComplement(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: OnesComplement(Expression, MethodInfo)
  fullName: System.Linq.Expressions.Expression.OnesComplement(System.Linq.Expressions.Expression, System.Reflection.MethodInfo)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.OnesComplement(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
    name: OnesComplement
    fullName: System.Linq.Expressions.Expression.OnesComplement
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: MethodInfo
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.OnesComplement(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
    name: OnesComplement
    fullName: System.Linq.Expressions.Expression.OnesComplement
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: MethodInfo
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: )
    fullName: )
- uid: System.Linq.Expressions.Expression.Or(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Or(Expression, Expression)
  fullName: System.Linq.Expressions.Expression.Or(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.Or(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
    name: Or
    fullName: System.Linq.Expressions.Expression.Or
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.Or(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
    name: Or
    fullName: System.Linq.Expressions.Expression.Or
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: )
    fullName: )
- uid: System.Linq.Expressions.Expression.Or(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: Or(Expression, Expression, MethodInfo)
  fullName: System.Linq.Expressions.Expression.Or(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.Or(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
    name: Or
    fullName: System.Linq.Expressions.Expression.Or
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: MethodInfo
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.Or(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
    name: Or
    fullName: System.Linq.Expressions.Expression.Or
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: MethodInfo
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: )
    fullName: )
- uid: System.Linq.Expressions.Expression.OrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: OrAssign(Expression, Expression)
  fullName: System.Linq.Expressions.Expression.OrAssign(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.OrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
    name: OrAssign
    fullName: System.Linq.Expressions.Expression.OrAssign
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.OrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
    name: OrAssign
    fullName: System.Linq.Expressions.Expression.OrAssign
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: )
    fullName: )
- uid: System.Linq.Expressions.Expression.OrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: OrAssign(Expression, Expression, MethodInfo)
  fullName: System.Linq.Expressions.Expression.OrAssign(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.OrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
    name: OrAssign
    fullName: System.Linq.Expressions.Expression.OrAssign
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: MethodInfo
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.OrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
    name: OrAssign
    fullName: System.Linq.Expressions.Expression.OrAssign
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: MethodInfo
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: )
    fullName: )
- uid: System.Linq.Expressions.Expression.OrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: OrAssign(Expression, Expression, MethodInfo, LambdaExpression)
  fullName: System.Linq.Expressions.Expression.OrAssign(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo, System.Linq.Expressions.LambdaExpression)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.OrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
    name: OrAssign
    fullName: System.Linq.Expressions.Expression.OrAssign
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: MethodInfo
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.LambdaExpression
    name: LambdaExpression
    fullName: System.Linq.Expressions.LambdaExpression
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.OrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
    name: OrAssign
    fullName: System.Linq.Expressions.Expression.OrAssign
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: MethodInfo
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.LambdaExpression
    name: LambdaExpression
    fullName: System.Linq.Expressions.LambdaExpression
  - name: )
    fullName: )
- uid: System.Linq.Expressions.Expression.OrElse(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: OrElse(Expression, Expression)
  fullName: System.Linq.Expressions.Expression.OrElse(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.OrElse(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
    name: OrElse
    fullName: System.Linq.Expressions.Expression.OrElse
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.OrElse(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
    name: OrElse
    fullName: System.Linq.Expressions.Expression.OrElse
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: )
    fullName: )
- uid: System.Linq.Expressions.Expression.OrElse(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: OrElse(Expression, Expression, MethodInfo)
  fullName: System.Linq.Expressions.Expression.OrElse(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.OrElse(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
    name: OrElse
    fullName: System.Linq.Expressions.Expression.OrElse
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: MethodInfo
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.OrElse(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
    name: OrElse
    fullName: System.Linq.Expressions.Expression.OrElse
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: MethodInfo
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: )
    fullName: )
- uid: System.Linq.Expressions.Expression.Parameter(System.Type)
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: Parameter(Type)
  fullName: System.Linq.Expressions.Expression.Parameter(System.Type)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.Parameter(System.Type)
    name: Parameter
    fullName: System.Linq.Expressions.Expression.Parameter
  - name: (
    fullName: (
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.Parameter(System.Type)
    name: Parameter
    fullName: System.Linq.Expressions.Expression.Parameter
  - name: (
    fullName: (
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: )
    fullName: )
- uid: System.Linq.Expressions.Expression.Parameter(System.Type,System.String)
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: Parameter(Type, String)
  fullName: System.Linq.Expressions.Expression.Parameter(System.Type, System.String)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.Parameter(System.Type,System.String)
    name: Parameter
    fullName: System.Linq.Expressions.Expression.Parameter
  - name: (
    fullName: (
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.Parameter(System.Type,System.String)
    name: Parameter
    fullName: System.Linq.Expressions.Expression.Parameter
  - name: (
    fullName: (
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: System.Linq.Expressions.Expression.PostDecrementAssign(System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: PostDecrementAssign(Expression)
  fullName: System.Linq.Expressions.Expression.PostDecrementAssign(System.Linq.Expressions.Expression)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.PostDecrementAssign(System.Linq.Expressions.Expression)
    name: PostDecrementAssign
    fullName: System.Linq.Expressions.Expression.PostDecrementAssign
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.PostDecrementAssign(System.Linq.Expressions.Expression)
    name: PostDecrementAssign
    fullName: System.Linq.Expressions.Expression.PostDecrementAssign
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: )
    fullName: )
- uid: System.Linq.Expressions.Expression.PostDecrementAssign(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: PostDecrementAssign(Expression, MethodInfo)
  fullName: System.Linq.Expressions.Expression.PostDecrementAssign(System.Linq.Expressions.Expression, System.Reflection.MethodInfo)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.PostDecrementAssign(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
    name: PostDecrementAssign
    fullName: System.Linq.Expressions.Expression.PostDecrementAssign
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: MethodInfo
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.PostDecrementAssign(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
    name: PostDecrementAssign
    fullName: System.Linq.Expressions.Expression.PostDecrementAssign
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: MethodInfo
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: )
    fullName: )
- uid: System.Linq.Expressions.Expression.PostIncrementAssign(System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: PostIncrementAssign(Expression)
  fullName: System.Linq.Expressions.Expression.PostIncrementAssign(System.Linq.Expressions.Expression)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.PostIncrementAssign(System.Linq.Expressions.Expression)
    name: PostIncrementAssign
    fullName: System.Linq.Expressions.Expression.PostIncrementAssign
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.PostIncrementAssign(System.Linq.Expressions.Expression)
    name: PostIncrementAssign
    fullName: System.Linq.Expressions.Expression.PostIncrementAssign
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: )
    fullName: )
- uid: System.Linq.Expressions.Expression.PostIncrementAssign(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: PostIncrementAssign(Expression, MethodInfo)
  fullName: System.Linq.Expressions.Expression.PostIncrementAssign(System.Linq.Expressions.Expression, System.Reflection.MethodInfo)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.PostIncrementAssign(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
    name: PostIncrementAssign
    fullName: System.Linq.Expressions.Expression.PostIncrementAssign
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: MethodInfo
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.PostIncrementAssign(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
    name: PostIncrementAssign
    fullName: System.Linq.Expressions.Expression.PostIncrementAssign
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: MethodInfo
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: )
    fullName: )
- uid: System.Linq.Expressions.Expression.Power(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Power(Expression, Expression)
  fullName: System.Linq.Expressions.Expression.Power(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.Power(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
    name: Power
    fullName: System.Linq.Expressions.Expression.Power
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.Power(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
    name: Power
    fullName: System.Linq.Expressions.Expression.Power
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: )
    fullName: )
- uid: System.Linq.Expressions.Expression.Power(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: Power(Expression, Expression, MethodInfo)
  fullName: System.Linq.Expressions.Expression.Power(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.Power(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
    name: Power
    fullName: System.Linq.Expressions.Expression.Power
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: MethodInfo
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.Power(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
    name: Power
    fullName: System.Linq.Expressions.Expression.Power
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: MethodInfo
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: )
    fullName: )
- uid: System.Linq.Expressions.Expression.PowerAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: PowerAssign(Expression, Expression)
  fullName: System.Linq.Expressions.Expression.PowerAssign(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.PowerAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
    name: PowerAssign
    fullName: System.Linq.Expressions.Expression.PowerAssign
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.PowerAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
    name: PowerAssign
    fullName: System.Linq.Expressions.Expression.PowerAssign
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: )
    fullName: )
- uid: System.Linq.Expressions.Expression.PowerAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: PowerAssign(Expression, Expression, MethodInfo)
  fullName: System.Linq.Expressions.Expression.PowerAssign(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.PowerAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
    name: PowerAssign
    fullName: System.Linq.Expressions.Expression.PowerAssign
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: MethodInfo
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.PowerAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
    name: PowerAssign
    fullName: System.Linq.Expressions.Expression.PowerAssign
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: MethodInfo
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: )
    fullName: )
- uid: System.Linq.Expressions.Expression.PowerAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: PowerAssign(Expression, Expression, MethodInfo, LambdaExpression)
  fullName: System.Linq.Expressions.Expression.PowerAssign(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo, System.Linq.Expressions.LambdaExpression)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.PowerAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
    name: PowerAssign
    fullName: System.Linq.Expressions.Expression.PowerAssign
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: MethodInfo
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.LambdaExpression
    name: LambdaExpression
    fullName: System.Linq.Expressions.LambdaExpression
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.PowerAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
    name: PowerAssign
    fullName: System.Linq.Expressions.Expression.PowerAssign
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: MethodInfo
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.LambdaExpression
    name: LambdaExpression
    fullName: System.Linq.Expressions.LambdaExpression
  - name: )
    fullName: )
- uid: System.Linq.Expressions.Expression.PreDecrementAssign(System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: PreDecrementAssign(Expression)
  fullName: System.Linq.Expressions.Expression.PreDecrementAssign(System.Linq.Expressions.Expression)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.PreDecrementAssign(System.Linq.Expressions.Expression)
    name: PreDecrementAssign
    fullName: System.Linq.Expressions.Expression.PreDecrementAssign
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.PreDecrementAssign(System.Linq.Expressions.Expression)
    name: PreDecrementAssign
    fullName: System.Linq.Expressions.Expression.PreDecrementAssign
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: )
    fullName: )
- uid: System.Linq.Expressions.Expression.PreDecrementAssign(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: PreDecrementAssign(Expression, MethodInfo)
  fullName: System.Linq.Expressions.Expression.PreDecrementAssign(System.Linq.Expressions.Expression, System.Reflection.MethodInfo)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.PreDecrementAssign(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
    name: PreDecrementAssign
    fullName: System.Linq.Expressions.Expression.PreDecrementAssign
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: MethodInfo
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.PreDecrementAssign(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
    name: PreDecrementAssign
    fullName: System.Linq.Expressions.Expression.PreDecrementAssign
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: MethodInfo
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: )
    fullName: )
- uid: System.Linq.Expressions.Expression.PreIncrementAssign(System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: PreIncrementAssign(Expression)
  fullName: System.Linq.Expressions.Expression.PreIncrementAssign(System.Linq.Expressions.Expression)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.PreIncrementAssign(System.Linq.Expressions.Expression)
    name: PreIncrementAssign
    fullName: System.Linq.Expressions.Expression.PreIncrementAssign
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.PreIncrementAssign(System.Linq.Expressions.Expression)
    name: PreIncrementAssign
    fullName: System.Linq.Expressions.Expression.PreIncrementAssign
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: )
    fullName: )
- uid: System.Linq.Expressions.Expression.PreIncrementAssign(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: PreIncrementAssign(Expression, MethodInfo)
  fullName: System.Linq.Expressions.Expression.PreIncrementAssign(System.Linq.Expressions.Expression, System.Reflection.MethodInfo)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.PreIncrementAssign(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
    name: PreIncrementAssign
    fullName: System.Linq.Expressions.Expression.PreIncrementAssign
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: MethodInfo
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.PreIncrementAssign(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
    name: PreIncrementAssign
    fullName: System.Linq.Expressions.Expression.PreIncrementAssign
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: MethodInfo
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: )
    fullName: )
- uid: System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: Property(Expression, MethodInfo)
  fullName: System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression, System.Reflection.MethodInfo)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
    name: Property
    fullName: System.Linq.Expressions.Expression.Property
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: MethodInfo
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
    name: Property
    fullName: System.Linq.Expressions.Expression.Property
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: MethodInfo
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: )
    fullName: )
- uid: System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.Reflection.PropertyInfo)
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: Property(Expression, PropertyInfo)
  fullName: System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression, System.Reflection.PropertyInfo)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.Reflection.PropertyInfo)
    name: Property
    fullName: System.Linq.Expressions.Expression.Property
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.PropertyInfo
    name: PropertyInfo
    fullName: System.Reflection.PropertyInfo
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.Reflection.PropertyInfo)
    name: Property
    fullName: System.Linq.Expressions.Expression.Property
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.PropertyInfo
    name: PropertyInfo
    fullName: System.Reflection.PropertyInfo
    isExternal: true
  - name: )
    fullName: )
- uid: System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.Reflection.PropertyInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: Property(Expression, PropertyInfo, IEnumerable<Expression>)
  fullName: System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression, System.Reflection.PropertyInfo, System.Collections.Generic.IEnumerable<System.Linq.Expressions.Expression>)
  fullname.vb: System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression, System.Reflection.PropertyInfo, System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.Expression))
  name.vb: Property(Expression, PropertyInfo, IEnumerable(Of Expression))
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.Reflection.PropertyInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
    name: Property
    fullName: System.Linq.Expressions.Expression.Property
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.PropertyInfo
    name: PropertyInfo
    fullName: System.Reflection.PropertyInfo
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.Reflection.PropertyInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
    name: Property
    fullName: System.Linq.Expressions.Expression.Property
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.PropertyInfo
    name: PropertyInfo
    fullName: System.Reflection.PropertyInfo
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: )
    fullName: )
  - name: )
    fullName: )
- uid: System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.Reflection.PropertyInfo,System.Linq.Expressions.Expression[])
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: Property(Expression, PropertyInfo, Expression[])
  fullName: System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression, System.Reflection.PropertyInfo, System.Linq.Expressions.Expression[])
  fullname.vb: System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression, System.Reflection.PropertyInfo, System.Linq.Expressions.Expression())
  name.vb: Property(Expression, PropertyInfo, Expression())
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.Reflection.PropertyInfo,System.Linq.Expressions.Expression[])
    name: Property
    fullName: System.Linq.Expressions.Expression.Property
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.PropertyInfo
    name: PropertyInfo
    fullName: System.Reflection.PropertyInfo
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: '[]'
    fullName: '[]'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.Reflection.PropertyInfo,System.Linq.Expressions.Expression[])
    name: Property
    fullName: System.Linq.Expressions.Expression.Property
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.PropertyInfo
    name: PropertyInfo
    fullName: System.Reflection.PropertyInfo
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ()
    fullName: ()
  - name: )
    fullName: )
- uid: System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.String)
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: Property(Expression, String)
  fullName: System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression, System.String)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.String)
    name: Property
    fullName: System.Linq.Expressions.Expression.Property
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.String)
    name: Property
    fullName: System.Linq.Expressions.Expression.Property
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.String,System.Linq.Expressions.Expression[])
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: Property(Expression, String, Expression[])
  fullName: System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression, System.String, System.Linq.Expressions.Expression[])
  fullname.vb: System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression, System.String, System.Linq.Expressions.Expression())
  name.vb: Property(Expression, String, Expression())
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.String,System.Linq.Expressions.Expression[])
    name: Property
    fullName: System.Linq.Expressions.Expression.Property
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: '[]'
    fullName: '[]'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.String,System.Linq.Expressions.Expression[])
    name: Property
    fullName: System.Linq.Expressions.Expression.Property
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ()
    fullName: ()
  - name: )
    fullName: )
- uid: System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.Type,System.String)
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: Property(Expression, Type, String)
  fullName: System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression, System.Type, System.String)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.Type,System.String)
    name: Property
    fullName: System.Linq.Expressions.Expression.Property
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.Type,System.String)
    name: Property
    fullName: System.Linq.Expressions.Expression.Property
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: System.Linq.Expressions.Expression.PropertyOrField(System.Linq.Expressions.Expression,System.String)
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: PropertyOrField(Expression, String)
  fullName: System.Linq.Expressions.Expression.PropertyOrField(System.Linq.Expressions.Expression, System.String)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.PropertyOrField(System.Linq.Expressions.Expression,System.String)
    name: PropertyOrField
    fullName: System.Linq.Expressions.Expression.PropertyOrField
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.PropertyOrField(System.Linq.Expressions.Expression,System.String)
    name: PropertyOrField
    fullName: System.Linq.Expressions.Expression.PropertyOrField
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: System.Linq.Expressions.Expression.Quote(System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Quote(Expression)
  fullName: System.Linq.Expressions.Expression.Quote(System.Linq.Expressions.Expression)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.Quote(System.Linq.Expressions.Expression)
    name: Quote
    fullName: System.Linq.Expressions.Expression.Quote
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.Quote(System.Linq.Expressions.Expression)
    name: Quote
    fullName: System.Linq.Expressions.Expression.Quote
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: )
    fullName: )
- uid: System.Linq.Expressions.Expression.ReduceAndCheck
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: ReduceAndCheck()
  fullName: System.Linq.Expressions.Expression.ReduceAndCheck()
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.ReduceAndCheck
    name: ReduceAndCheck
    fullName: System.Linq.Expressions.Expression.ReduceAndCheck
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.ReduceAndCheck
    name: ReduceAndCheck
    fullName: System.Linq.Expressions.Expression.ReduceAndCheck
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Linq.Expressions.Expression.ReduceExtensions
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: ReduceExtensions()
  fullName: System.Linq.Expressions.Expression.ReduceExtensions()
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.ReduceExtensions
    name: ReduceExtensions
    fullName: System.Linq.Expressions.Expression.ReduceExtensions
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.ReduceExtensions
    name: ReduceExtensions
    fullName: System.Linq.Expressions.Expression.ReduceExtensions
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Linq.Expressions.Expression.ReferenceEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: ReferenceEqual(Expression, Expression)
  fullName: System.Linq.Expressions.Expression.ReferenceEqual(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.ReferenceEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
    name: ReferenceEqual
    fullName: System.Linq.Expressions.Expression.ReferenceEqual
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.ReferenceEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
    name: ReferenceEqual
    fullName: System.Linq.Expressions.Expression.ReferenceEqual
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: )
    fullName: )
- uid: System.Linq.Expressions.Expression.ReferenceNotEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: ReferenceNotEqual(Expression, Expression)
  fullName: System.Linq.Expressions.Expression.ReferenceNotEqual(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.ReferenceNotEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
    name: ReferenceNotEqual
    fullName: System.Linq.Expressions.Expression.ReferenceNotEqual
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.ReferenceNotEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
    name: ReferenceNotEqual
    fullName: System.Linq.Expressions.Expression.ReferenceNotEqual
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: )
    fullName: )
- uid: System.Linq.Expressions.Expression.Rethrow
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Rethrow()
  fullName: System.Linq.Expressions.Expression.Rethrow()
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.Rethrow
    name: Rethrow
    fullName: System.Linq.Expressions.Expression.Rethrow
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.Rethrow
    name: Rethrow
    fullName: System.Linq.Expressions.Expression.Rethrow
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Linq.Expressions.Expression.Rethrow(System.Type)
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: Rethrow(Type)
  fullName: System.Linq.Expressions.Expression.Rethrow(System.Type)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.Rethrow(System.Type)
    name: Rethrow
    fullName: System.Linq.Expressions.Expression.Rethrow
  - name: (
    fullName: (
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.Rethrow(System.Type)
    name: Rethrow
    fullName: System.Linq.Expressions.Expression.Rethrow
  - name: (
    fullName: (
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: )
    fullName: )
- uid: System.Linq.Expressions.Expression.Return(System.Linq.Expressions.LabelTarget)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Return(LabelTarget)
  fullName: System.Linq.Expressions.Expression.Return(System.Linq.Expressions.LabelTarget)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.Return(System.Linq.Expressions.LabelTarget)
    name: Return
    fullName: System.Linq.Expressions.Expression.Return
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.LabelTarget
    name: LabelTarget
    fullName: System.Linq.Expressions.LabelTarget
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.Return(System.Linq.Expressions.LabelTarget)
    name: Return
    fullName: System.Linq.Expressions.Expression.Return
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.LabelTarget
    name: LabelTarget
    fullName: System.Linq.Expressions.LabelTarget
  - name: )
    fullName: )
- uid: System.Linq.Expressions.Expression.Return(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Return(LabelTarget, Expression)
  fullName: System.Linq.Expressions.Expression.Return(System.Linq.Expressions.LabelTarget, System.Linq.Expressions.Expression)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.Return(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression)
    name: Return
    fullName: System.Linq.Expressions.Expression.Return
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.LabelTarget
    name: LabelTarget
    fullName: System.Linq.Expressions.LabelTarget
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.Return(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression)
    name: Return
    fullName: System.Linq.Expressions.Expression.Return
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.LabelTarget
    name: LabelTarget
    fullName: System.Linq.Expressions.LabelTarget
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: )
    fullName: )
- uid: System.Linq.Expressions.Expression.Return(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression,System.Type)
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: Return(LabelTarget, Expression, Type)
  fullName: System.Linq.Expressions.Expression.Return(System.Linq.Expressions.LabelTarget, System.Linq.Expressions.Expression, System.Type)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.Return(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression,System.Type)
    name: Return
    fullName: System.Linq.Expressions.Expression.Return
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.LabelTarget
    name: LabelTarget
    fullName: System.Linq.Expressions.LabelTarget
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.Return(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression,System.Type)
    name: Return
    fullName: System.Linq.Expressions.Expression.Return
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.LabelTarget
    name: LabelTarget
    fullName: System.Linq.Expressions.LabelTarget
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: )
    fullName: )
- uid: System.Linq.Expressions.Expression.Return(System.Linq.Expressions.LabelTarget,System.Type)
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: Return(LabelTarget, Type)
  fullName: System.Linq.Expressions.Expression.Return(System.Linq.Expressions.LabelTarget, System.Type)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.Return(System.Linq.Expressions.LabelTarget,System.Type)
    name: Return
    fullName: System.Linq.Expressions.Expression.Return
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.LabelTarget
    name: LabelTarget
    fullName: System.Linq.Expressions.LabelTarget
  - name: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.Return(System.Linq.Expressions.LabelTarget,System.Type)
    name: Return
    fullName: System.Linq.Expressions.Expression.Return
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.LabelTarget
    name: LabelTarget
    fullName: System.Linq.Expressions.LabelTarget
  - name: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: )
    fullName: )
- uid: System.Linq.Expressions.Expression.RightShift(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: RightShift(Expression, Expression)
  fullName: System.Linq.Expressions.Expression.RightShift(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.RightShift(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
    name: RightShift
    fullName: System.Linq.Expressions.Expression.RightShift
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.RightShift(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
    name: RightShift
    fullName: System.Linq.Expressions.Expression.RightShift
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: )
    fullName: )
- uid: System.Linq.Expressions.Expression.RightShift(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: RightShift(Expression, Expression, MethodInfo)
  fullName: System.Linq.Expressions.Expression.RightShift(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.RightShift(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
    name: RightShift
    fullName: System.Linq.Expressions.Expression.RightShift
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: MethodInfo
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.RightShift(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
    name: RightShift
    fullName: System.Linq.Expressions.Expression.RightShift
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: MethodInfo
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: )
    fullName: )
- uid: System.Linq.Expressions.Expression.RightShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: RightShiftAssign(Expression, Expression)
  fullName: System.Linq.Expressions.Expression.RightShiftAssign(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.RightShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
    name: RightShiftAssign
    fullName: System.Linq.Expressions.Expression.RightShiftAssign
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.RightShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
    name: RightShiftAssign
    fullName: System.Linq.Expressions.Expression.RightShiftAssign
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: )
    fullName: )
- uid: System.Linq.Expressions.Expression.RightShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: RightShiftAssign(Expression, Expression, MethodInfo)
  fullName: System.Linq.Expressions.Expression.RightShiftAssign(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.RightShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
    name: RightShiftAssign
    fullName: System.Linq.Expressions.Expression.RightShiftAssign
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: MethodInfo
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.RightShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
    name: RightShiftAssign
    fullName: System.Linq.Expressions.Expression.RightShiftAssign
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: MethodInfo
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: )
    fullName: )
- uid: System.Linq.Expressions.Expression.RightShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: RightShiftAssign(Expression, Expression, MethodInfo, LambdaExpression)
  fullName: System.Linq.Expressions.Expression.RightShiftAssign(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo, System.Linq.Expressions.LambdaExpression)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.RightShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
    name: RightShiftAssign
    fullName: System.Linq.Expressions.Expression.RightShiftAssign
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: MethodInfo
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.LambdaExpression
    name: LambdaExpression
    fullName: System.Linq.Expressions.LambdaExpression
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.RightShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
    name: RightShiftAssign
    fullName: System.Linq.Expressions.Expression.RightShiftAssign
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: MethodInfo
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.LambdaExpression
    name: LambdaExpression
    fullName: System.Linq.Expressions.LambdaExpression
  - name: )
    fullName: )
- uid: System.Linq.Expressions.Expression.RuntimeVariables(System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: RuntimeVariables(IEnumerable<ParameterExpression>)
  fullName: System.Linq.Expressions.Expression.RuntimeVariables(System.Collections.Generic.IEnumerable<System.Linq.Expressions.ParameterExpression>)
  fullname.vb: System.Linq.Expressions.Expression.RuntimeVariables(System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.ParameterExpression))
  name.vb: RuntimeVariables(IEnumerable(Of ParameterExpression))
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.RuntimeVariables(System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})
    name: RuntimeVariables
    fullName: System.Linq.Expressions.Expression.RuntimeVariables
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Linq.Expressions.ParameterExpression
    name: ParameterExpression
    fullName: System.Linq.Expressions.ParameterExpression
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.RuntimeVariables(System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})
    name: RuntimeVariables
    fullName: System.Linq.Expressions.Expression.RuntimeVariables
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Linq.Expressions.ParameterExpression
    name: ParameterExpression
    fullName: System.Linq.Expressions.ParameterExpression
  - name: )
    fullName: )
  - name: )
    fullName: )
- uid: System.Linq.Expressions.Expression.RuntimeVariables(System.Linq.Expressions.ParameterExpression[])
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: RuntimeVariables(ParameterExpression[])
  fullName: System.Linq.Expressions.Expression.RuntimeVariables(System.Linq.Expressions.ParameterExpression[])
  fullname.vb: System.Linq.Expressions.Expression.RuntimeVariables(System.Linq.Expressions.ParameterExpression())
  name.vb: RuntimeVariables(ParameterExpression())
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.RuntimeVariables(System.Linq.Expressions.ParameterExpression[])
    name: RuntimeVariables
    fullName: System.Linq.Expressions.Expression.RuntimeVariables
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.ParameterExpression
    name: ParameterExpression
    fullName: System.Linq.Expressions.ParameterExpression
  - name: '[]'
    fullName: '[]'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.RuntimeVariables(System.Linq.Expressions.ParameterExpression[])
    name: RuntimeVariables
    fullName: System.Linq.Expressions.Expression.RuntimeVariables
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.ParameterExpression
    name: ParameterExpression
    fullName: System.Linq.Expressions.ParameterExpression
  - name: ()
    fullName: ()
  - name: )
    fullName: )
- uid: System.Linq.Expressions.Expression.Subtract(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Subtract(Expression, Expression)
  fullName: System.Linq.Expressions.Expression.Subtract(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.Subtract(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
    name: Subtract
    fullName: System.Linq.Expressions.Expression.Subtract
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.Subtract(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
    name: Subtract
    fullName: System.Linq.Expressions.Expression.Subtract
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: )
    fullName: )
- uid: System.Linq.Expressions.Expression.Subtract(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: Subtract(Expression, Expression, MethodInfo)
  fullName: System.Linq.Expressions.Expression.Subtract(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.Subtract(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
    name: Subtract
    fullName: System.Linq.Expressions.Expression.Subtract
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: MethodInfo
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.Subtract(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
    name: Subtract
    fullName: System.Linq.Expressions.Expression.Subtract
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: MethodInfo
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: )
    fullName: )
- uid: System.Linq.Expressions.Expression.SubtractAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: SubtractAssign(Expression, Expression)
  fullName: System.Linq.Expressions.Expression.SubtractAssign(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.SubtractAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
    name: SubtractAssign
    fullName: System.Linq.Expressions.Expression.SubtractAssign
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.SubtractAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
    name: SubtractAssign
    fullName: System.Linq.Expressions.Expression.SubtractAssign
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: )
    fullName: )
- uid: System.Linq.Expressions.Expression.SubtractAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: SubtractAssign(Expression, Expression, MethodInfo)
  fullName: System.Linq.Expressions.Expression.SubtractAssign(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.SubtractAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
    name: SubtractAssign
    fullName: System.Linq.Expressions.Expression.SubtractAssign
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: MethodInfo
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.SubtractAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
    name: SubtractAssign
    fullName: System.Linq.Expressions.Expression.SubtractAssign
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: MethodInfo
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: )
    fullName: )
- uid: System.Linq.Expressions.Expression.SubtractAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: SubtractAssign(Expression, Expression, MethodInfo, LambdaExpression)
  fullName: System.Linq.Expressions.Expression.SubtractAssign(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo, System.Linq.Expressions.LambdaExpression)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.SubtractAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
    name: SubtractAssign
    fullName: System.Linq.Expressions.Expression.SubtractAssign
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: MethodInfo
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.LambdaExpression
    name: LambdaExpression
    fullName: System.Linq.Expressions.LambdaExpression
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.SubtractAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
    name: SubtractAssign
    fullName: System.Linq.Expressions.Expression.SubtractAssign
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: MethodInfo
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.LambdaExpression
    name: LambdaExpression
    fullName: System.Linq.Expressions.LambdaExpression
  - name: )
    fullName: )
- uid: System.Linq.Expressions.Expression.SubtractAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: SubtractAssignChecked(Expression, Expression)
  fullName: System.Linq.Expressions.Expression.SubtractAssignChecked(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.SubtractAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
    name: SubtractAssignChecked
    fullName: System.Linq.Expressions.Expression.SubtractAssignChecked
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.SubtractAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
    name: SubtractAssignChecked
    fullName: System.Linq.Expressions.Expression.SubtractAssignChecked
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: )
    fullName: )
- uid: System.Linq.Expressions.Expression.SubtractAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: SubtractAssignChecked(Expression, Expression, MethodInfo)
  fullName: System.Linq.Expressions.Expression.SubtractAssignChecked(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.SubtractAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
    name: SubtractAssignChecked
    fullName: System.Linq.Expressions.Expression.SubtractAssignChecked
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: MethodInfo
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.SubtractAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
    name: SubtractAssignChecked
    fullName: System.Linq.Expressions.Expression.SubtractAssignChecked
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: MethodInfo
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: )
    fullName: )
- uid: System.Linq.Expressions.Expression.SubtractAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: SubtractAssignChecked(Expression, Expression, MethodInfo, LambdaExpression)
  fullName: System.Linq.Expressions.Expression.SubtractAssignChecked(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo, System.Linq.Expressions.LambdaExpression)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.SubtractAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
    name: SubtractAssignChecked
    fullName: System.Linq.Expressions.Expression.SubtractAssignChecked
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: MethodInfo
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.LambdaExpression
    name: LambdaExpression
    fullName: System.Linq.Expressions.LambdaExpression
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.SubtractAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
    name: SubtractAssignChecked
    fullName: System.Linq.Expressions.Expression.SubtractAssignChecked
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: MethodInfo
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.LambdaExpression
    name: LambdaExpression
    fullName: System.Linq.Expressions.LambdaExpression
  - name: )
    fullName: )
- uid: System.Linq.Expressions.Expression.SubtractChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: SubtractChecked(Expression, Expression)
  fullName: System.Linq.Expressions.Expression.SubtractChecked(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.SubtractChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
    name: SubtractChecked
    fullName: System.Linq.Expressions.Expression.SubtractChecked
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.SubtractChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
    name: SubtractChecked
    fullName: System.Linq.Expressions.Expression.SubtractChecked
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: )
    fullName: )
- uid: System.Linq.Expressions.Expression.SubtractChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: SubtractChecked(Expression, Expression, MethodInfo)
  fullName: System.Linq.Expressions.Expression.SubtractChecked(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.SubtractChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
    name: SubtractChecked
    fullName: System.Linq.Expressions.Expression.SubtractChecked
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: MethodInfo
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.SubtractChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
    name: SubtractChecked
    fullName: System.Linq.Expressions.Expression.SubtractChecked
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: MethodInfo
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: )
    fullName: )
- uid: System.Linq.Expressions.Expression.Switch(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.SwitchCase[])
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Switch(Expression, Expression, SwitchCase[])
  fullName: System.Linq.Expressions.Expression.Switch(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Linq.Expressions.SwitchCase[])
  fullname.vb: System.Linq.Expressions.Expression.Switch(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Linq.Expressions.SwitchCase())
  name.vb: Switch(Expression, Expression, SwitchCase())
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.Switch(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.SwitchCase[])
    name: Switch
    fullName: System.Linq.Expressions.Expression.Switch
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.SwitchCase
    name: SwitchCase
    fullName: System.Linq.Expressions.SwitchCase
  - name: '[]'
    fullName: '[]'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.Switch(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.SwitchCase[])
    name: Switch
    fullName: System.Linq.Expressions.Expression.Switch
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.SwitchCase
    name: SwitchCase
    fullName: System.Linq.Expressions.SwitchCase
  - name: ()
    fullName: ()
  - name: )
    fullName: )
- uid: System.Linq.Expressions.Expression.Switch(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.SwitchCase})
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: Switch(Expression, Expression, MethodInfo, IEnumerable<SwitchCase>)
  fullName: System.Linq.Expressions.Expression.Switch(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo, System.Collections.Generic.IEnumerable<System.Linq.Expressions.SwitchCase>)
  fullname.vb: System.Linq.Expressions.Expression.Switch(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo, System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.SwitchCase))
  name.vb: Switch(Expression, Expression, MethodInfo, IEnumerable(Of SwitchCase))
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.Switch(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.SwitchCase})
    name: Switch
    fullName: System.Linq.Expressions.Expression.Switch
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: MethodInfo
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Linq.Expressions.SwitchCase
    name: SwitchCase
    fullName: System.Linq.Expressions.SwitchCase
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.Switch(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.SwitchCase})
    name: Switch
    fullName: System.Linq.Expressions.Expression.Switch
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: MethodInfo
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Linq.Expressions.SwitchCase
    name: SwitchCase
    fullName: System.Linq.Expressions.SwitchCase
  - name: )
    fullName: )
  - name: )
    fullName: )
- uid: System.Linq.Expressions.Expression.Switch(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.SwitchCase[])
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: Switch(Expression, Expression, MethodInfo, SwitchCase[])
  fullName: System.Linq.Expressions.Expression.Switch(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo, System.Linq.Expressions.SwitchCase[])
  fullname.vb: System.Linq.Expressions.Expression.Switch(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo, System.Linq.Expressions.SwitchCase())
  name.vb: Switch(Expression, Expression, MethodInfo, SwitchCase())
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.Switch(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.SwitchCase[])
    name: Switch
    fullName: System.Linq.Expressions.Expression.Switch
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: MethodInfo
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.SwitchCase
    name: SwitchCase
    fullName: System.Linq.Expressions.SwitchCase
  - name: '[]'
    fullName: '[]'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.Switch(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.SwitchCase[])
    name: Switch
    fullName: System.Linq.Expressions.Expression.Switch
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: MethodInfo
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.SwitchCase
    name: SwitchCase
    fullName: System.Linq.Expressions.SwitchCase
  - name: ()
    fullName: ()
  - name: )
    fullName: )
- uid: System.Linq.Expressions.Expression.Switch(System.Linq.Expressions.Expression,System.Linq.Expressions.SwitchCase[])
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Switch(Expression, SwitchCase[])
  fullName: System.Linq.Expressions.Expression.Switch(System.Linq.Expressions.Expression, System.Linq.Expressions.SwitchCase[])
  fullname.vb: System.Linq.Expressions.Expression.Switch(System.Linq.Expressions.Expression, System.Linq.Expressions.SwitchCase())
  name.vb: Switch(Expression, SwitchCase())
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.Switch(System.Linq.Expressions.Expression,System.Linq.Expressions.SwitchCase[])
    name: Switch
    fullName: System.Linq.Expressions.Expression.Switch
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.SwitchCase
    name: SwitchCase
    fullName: System.Linq.Expressions.SwitchCase
  - name: '[]'
    fullName: '[]'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.Switch(System.Linq.Expressions.Expression,System.Linq.Expressions.SwitchCase[])
    name: Switch
    fullName: System.Linq.Expressions.Expression.Switch
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.SwitchCase
    name: SwitchCase
    fullName: System.Linq.Expressions.SwitchCase
  - name: ()
    fullName: ()
  - name: )
    fullName: )
- uid: System.Linq.Expressions.Expression.Switch(System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.SwitchCase})
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: Switch(Type, Expression, Expression, MethodInfo, IEnumerable<SwitchCase>)
  fullName: System.Linq.Expressions.Expression.Switch(System.Type, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo, System.Collections.Generic.IEnumerable<System.Linq.Expressions.SwitchCase>)
  fullname.vb: System.Linq.Expressions.Expression.Switch(System.Type, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo, System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.SwitchCase))
  name.vb: Switch(Type, Expression, Expression, MethodInfo, IEnumerable(Of SwitchCase))
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.Switch(System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.SwitchCase})
    name: Switch
    fullName: System.Linq.Expressions.Expression.Switch
  - name: (
    fullName: (
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: MethodInfo
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Linq.Expressions.SwitchCase
    name: SwitchCase
    fullName: System.Linq.Expressions.SwitchCase
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.Switch(System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.SwitchCase})
    name: Switch
    fullName: System.Linq.Expressions.Expression.Switch
  - name: (
    fullName: (
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: MethodInfo
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Linq.Expressions.SwitchCase
    name: SwitchCase
    fullName: System.Linq.Expressions.SwitchCase
  - name: )
    fullName: )
  - name: )
    fullName: )
- uid: System.Linq.Expressions.Expression.Switch(System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.SwitchCase[])
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: Switch(Type, Expression, Expression, MethodInfo, SwitchCase[])
  fullName: System.Linq.Expressions.Expression.Switch(System.Type, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo, System.Linq.Expressions.SwitchCase[])
  fullname.vb: System.Linq.Expressions.Expression.Switch(System.Type, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo, System.Linq.Expressions.SwitchCase())
  name.vb: Switch(Type, Expression, Expression, MethodInfo, SwitchCase())
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.Switch(System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.SwitchCase[])
    name: Switch
    fullName: System.Linq.Expressions.Expression.Switch
  - name: (
    fullName: (
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: MethodInfo
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.SwitchCase
    name: SwitchCase
    fullName: System.Linq.Expressions.SwitchCase
  - name: '[]'
    fullName: '[]'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.Switch(System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.SwitchCase[])
    name: Switch
    fullName: System.Linq.Expressions.Expression.Switch
  - name: (
    fullName: (
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: MethodInfo
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.SwitchCase
    name: SwitchCase
    fullName: System.Linq.Expressions.SwitchCase
  - name: ()
    fullName: ()
  - name: )
    fullName: )
- uid: System.Linq.Expressions.Expression.SwitchCase(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: SwitchCase(Expression, IEnumerable<Expression>)
  fullName: System.Linq.Expressions.Expression.SwitchCase(System.Linq.Expressions.Expression, System.Collections.Generic.IEnumerable<System.Linq.Expressions.Expression>)
  fullname.vb: System.Linq.Expressions.Expression.SwitchCase(System.Linq.Expressions.Expression, System.Collections.Generic.IEnumerable(Of System.Linq.Expressions.Expression))
  name.vb: SwitchCase(Expression, IEnumerable(Of Expression))
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.SwitchCase(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
    name: SwitchCase
    fullName: System.Linq.Expressions.Expression.SwitchCase
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.SwitchCase(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
    name: SwitchCase
    fullName: System.Linq.Expressions.Expression.SwitchCase
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: )
    fullName: )
  - name: )
    fullName: )
- uid: System.Linq.Expressions.Expression.SwitchCase(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression[])
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: SwitchCase(Expression, Expression[])
  fullName: System.Linq.Expressions.Expression.SwitchCase(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression[])
  fullname.vb: System.Linq.Expressions.Expression.SwitchCase(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression())
  name.vb: SwitchCase(Expression, Expression())
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.SwitchCase(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression[])
    name: SwitchCase
    fullName: System.Linq.Expressions.Expression.SwitchCase
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: '[]'
    fullName: '[]'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.SwitchCase(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression[])
    name: SwitchCase
    fullName: System.Linq.Expressions.Expression.SwitchCase
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ()
    fullName: ()
  - name: )
    fullName: )
- uid: System.Linq.Expressions.Expression.SymbolDocument(System.String)
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: SymbolDocument(String)
  fullName: System.Linq.Expressions.Expression.SymbolDocument(System.String)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.SymbolDocument(System.String)
    name: SymbolDocument
    fullName: System.Linq.Expressions.Expression.SymbolDocument
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.SymbolDocument(System.String)
    name: SymbolDocument
    fullName: System.Linq.Expressions.Expression.SymbolDocument
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: System.Linq.Expressions.Expression.SymbolDocument(System.String,System.Guid)
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: SymbolDocument(String, Guid)
  fullName: System.Linq.Expressions.Expression.SymbolDocument(System.String, System.Guid)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.SymbolDocument(System.String,System.Guid)
    name: SymbolDocument
    fullName: System.Linq.Expressions.Expression.SymbolDocument
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Guid
    name: Guid
    fullName: System.Guid
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.SymbolDocument(System.String,System.Guid)
    name: SymbolDocument
    fullName: System.Linq.Expressions.Expression.SymbolDocument
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Guid
    name: Guid
    fullName: System.Guid
    isExternal: true
  - name: )
    fullName: )
- uid: System.Linq.Expressions.Expression.SymbolDocument(System.String,System.Guid,System.Guid)
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: SymbolDocument(String, Guid, Guid)
  fullName: System.Linq.Expressions.Expression.SymbolDocument(System.String, System.Guid, System.Guid)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.SymbolDocument(System.String,System.Guid,System.Guid)
    name: SymbolDocument
    fullName: System.Linq.Expressions.Expression.SymbolDocument
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Guid
    name: Guid
    fullName: System.Guid
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Guid
    name: Guid
    fullName: System.Guid
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.SymbolDocument(System.String,System.Guid,System.Guid)
    name: SymbolDocument
    fullName: System.Linq.Expressions.Expression.SymbolDocument
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Guid
    name: Guid
    fullName: System.Guid
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Guid
    name: Guid
    fullName: System.Guid
    isExternal: true
  - name: )
    fullName: )
- uid: System.Linq.Expressions.Expression.SymbolDocument(System.String,System.Guid,System.Guid,System.Guid)
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: SymbolDocument(String, Guid, Guid, Guid)
  fullName: System.Linq.Expressions.Expression.SymbolDocument(System.String, System.Guid, System.Guid, System.Guid)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.SymbolDocument(System.String,System.Guid,System.Guid,System.Guid)
    name: SymbolDocument
    fullName: System.Linq.Expressions.Expression.SymbolDocument
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Guid
    name: Guid
    fullName: System.Guid
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Guid
    name: Guid
    fullName: System.Guid
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Guid
    name: Guid
    fullName: System.Guid
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.SymbolDocument(System.String,System.Guid,System.Guid,System.Guid)
    name: SymbolDocument
    fullName: System.Linq.Expressions.Expression.SymbolDocument
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Guid
    name: Guid
    fullName: System.Guid
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Guid
    name: Guid
    fullName: System.Guid
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Guid
    name: Guid
    fullName: System.Guid
    isExternal: true
  - name: )
    fullName: )
- uid: System.Linq.Expressions.Expression.Throw(System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Throw(Expression)
  fullName: System.Linq.Expressions.Expression.Throw(System.Linq.Expressions.Expression)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.Throw(System.Linq.Expressions.Expression)
    name: Throw
    fullName: System.Linq.Expressions.Expression.Throw
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.Throw(System.Linq.Expressions.Expression)
    name: Throw
    fullName: System.Linq.Expressions.Expression.Throw
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: )
    fullName: )
- uid: System.Linq.Expressions.Expression.Throw(System.Linq.Expressions.Expression,System.Type)
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: Throw(Expression, Type)
  fullName: System.Linq.Expressions.Expression.Throw(System.Linq.Expressions.Expression, System.Type)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.Throw(System.Linq.Expressions.Expression,System.Type)
    name: Throw
    fullName: System.Linq.Expressions.Expression.Throw
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.Throw(System.Linq.Expressions.Expression,System.Type)
    name: Throw
    fullName: System.Linq.Expressions.Expression.Throw
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: )
    fullName: )
- uid: System.Linq.Expressions.Expression.ToString
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: ToString()
  fullName: System.Linq.Expressions.Expression.ToString()
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.ToString
    name: ToString
    fullName: System.Linq.Expressions.Expression.ToString
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.ToString
    name: ToString
    fullName: System.Linq.Expressions.Expression.ToString
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Linq.Expressions.Expression.TryCatch(System.Linq.Expressions.Expression,System.Linq.Expressions.CatchBlock[])
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: TryCatch(Expression, CatchBlock[])
  fullName: System.Linq.Expressions.Expression.TryCatch(System.Linq.Expressions.Expression, System.Linq.Expressions.CatchBlock[])
  fullname.vb: System.Linq.Expressions.Expression.TryCatch(System.Linq.Expressions.Expression, System.Linq.Expressions.CatchBlock())
  name.vb: TryCatch(Expression, CatchBlock())
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.TryCatch(System.Linq.Expressions.Expression,System.Linq.Expressions.CatchBlock[])
    name: TryCatch
    fullName: System.Linq.Expressions.Expression.TryCatch
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.CatchBlock
    name: CatchBlock
    fullName: System.Linq.Expressions.CatchBlock
  - name: '[]'
    fullName: '[]'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.TryCatch(System.Linq.Expressions.Expression,System.Linq.Expressions.CatchBlock[])
    name: TryCatch
    fullName: System.Linq.Expressions.Expression.TryCatch
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.CatchBlock
    name: CatchBlock
    fullName: System.Linq.Expressions.CatchBlock
  - name: ()
    fullName: ()
  - name: )
    fullName: )
- uid: System.Linq.Expressions.Expression.TryCatchFinally(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.CatchBlock[])
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: TryCatchFinally(Expression, Expression, CatchBlock[])
  fullName: System.Linq.Expressions.Expression.TryCatchFinally(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Linq.Expressions.CatchBlock[])
  fullname.vb: System.Linq.Expressions.Expression.TryCatchFinally(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Linq.Expressions.CatchBlock())
  name.vb: TryCatchFinally(Expression, Expression, CatchBlock())
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.TryCatchFinally(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.CatchBlock[])
    name: TryCatchFinally
    fullName: System.Linq.Expressions.Expression.TryCatchFinally
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.CatchBlock
    name: CatchBlock
    fullName: System.Linq.Expressions.CatchBlock
  - name: '[]'
    fullName: '[]'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.TryCatchFinally(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.CatchBlock[])
    name: TryCatchFinally
    fullName: System.Linq.Expressions.Expression.TryCatchFinally
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.CatchBlock
    name: CatchBlock
    fullName: System.Linq.Expressions.CatchBlock
  - name: ()
    fullName: ()
  - name: )
    fullName: )
- uid: System.Linq.Expressions.Expression.TryFault(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: TryFault(Expression, Expression)
  fullName: System.Linq.Expressions.Expression.TryFault(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.TryFault(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
    name: TryFault
    fullName: System.Linq.Expressions.Expression.TryFault
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.TryFault(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
    name: TryFault
    fullName: System.Linq.Expressions.Expression.TryFault
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: )
    fullName: )
- uid: System.Linq.Expressions.Expression.TryFinally(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: TryFinally(Expression, Expression)
  fullName: System.Linq.Expressions.Expression.TryFinally(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.TryFinally(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
    name: TryFinally
    fullName: System.Linq.Expressions.Expression.TryFinally
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.TryFinally(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
    name: TryFinally
    fullName: System.Linq.Expressions.Expression.TryFinally
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: )
    fullName: )
- uid: System.Linq.Expressions.Expression.TryGetActionType(System.Type[],System.Type@)
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: TryGetActionType(Type[], Type)
  fullName: System.Linq.Expressions.Expression.TryGetActionType(System.Type[], System.Type)
  fullname.vb: System.Linq.Expressions.Expression.TryGetActionType(System.Type(), System.Type)
  name.vb: TryGetActionType(Type(), Type)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.TryGetActionType(System.Type[],System.Type@)
    name: TryGetActionType
    fullName: System.Linq.Expressions.Expression.TryGetActionType
  - name: (
    fullName: (
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: '[]'
    fullName: '[]'
  - name: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.TryGetActionType(System.Type[],System.Type@)
    name: TryGetActionType
    fullName: System.Linq.Expressions.Expression.TryGetActionType
  - name: (
    fullName: (
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: ()
    fullName: ()
  - name: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: )
    fullName: )
- uid: System.Linq.Expressions.Expression.TryGetFuncType(System.Type[],System.Type@)
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: TryGetFuncType(Type[], Type)
  fullName: System.Linq.Expressions.Expression.TryGetFuncType(System.Type[], System.Type)
  fullname.vb: System.Linq.Expressions.Expression.TryGetFuncType(System.Type(), System.Type)
  name.vb: TryGetFuncType(Type(), Type)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.TryGetFuncType(System.Type[],System.Type@)
    name: TryGetFuncType
    fullName: System.Linq.Expressions.Expression.TryGetFuncType
  - name: (
    fullName: (
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: '[]'
    fullName: '[]'
  - name: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.TryGetFuncType(System.Type[],System.Type@)
    name: TryGetFuncType
    fullName: System.Linq.Expressions.Expression.TryGetFuncType
  - name: (
    fullName: (
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: ()
    fullName: ()
  - name: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: )
    fullName: )
- uid: System.Linq.Expressions.Expression.TypeAs(System.Linq.Expressions.Expression,System.Type)
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: TypeAs(Expression, Type)
  fullName: System.Linq.Expressions.Expression.TypeAs(System.Linq.Expressions.Expression, System.Type)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.TypeAs(System.Linq.Expressions.Expression,System.Type)
    name: TypeAs
    fullName: System.Linq.Expressions.Expression.TypeAs
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.TypeAs(System.Linq.Expressions.Expression,System.Type)
    name: TypeAs
    fullName: System.Linq.Expressions.Expression.TypeAs
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: )
    fullName: )
- uid: System.Linq.Expressions.Expression.TypeEqual(System.Linq.Expressions.Expression,System.Type)
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: TypeEqual(Expression, Type)
  fullName: System.Linq.Expressions.Expression.TypeEqual(System.Linq.Expressions.Expression, System.Type)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.TypeEqual(System.Linq.Expressions.Expression,System.Type)
    name: TypeEqual
    fullName: System.Linq.Expressions.Expression.TypeEqual
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.TypeEqual(System.Linq.Expressions.Expression,System.Type)
    name: TypeEqual
    fullName: System.Linq.Expressions.Expression.TypeEqual
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: )
    fullName: )
- uid: System.Linq.Expressions.Expression.TypeIs(System.Linq.Expressions.Expression,System.Type)
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: TypeIs(Expression, Type)
  fullName: System.Linq.Expressions.Expression.TypeIs(System.Linq.Expressions.Expression, System.Type)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.TypeIs(System.Linq.Expressions.Expression,System.Type)
    name: TypeIs
    fullName: System.Linq.Expressions.Expression.TypeIs
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.TypeIs(System.Linq.Expressions.Expression,System.Type)
    name: TypeIs
    fullName: System.Linq.Expressions.Expression.TypeIs
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: )
    fullName: )
- uid: System.Linq.Expressions.Expression.UnaryPlus(System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: UnaryPlus(Expression)
  fullName: System.Linq.Expressions.Expression.UnaryPlus(System.Linq.Expressions.Expression)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.UnaryPlus(System.Linq.Expressions.Expression)
    name: UnaryPlus
    fullName: System.Linq.Expressions.Expression.UnaryPlus
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.UnaryPlus(System.Linq.Expressions.Expression)
    name: UnaryPlus
    fullName: System.Linq.Expressions.Expression.UnaryPlus
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: )
    fullName: )
- uid: System.Linq.Expressions.Expression.UnaryPlus(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: UnaryPlus(Expression, MethodInfo)
  fullName: System.Linq.Expressions.Expression.UnaryPlus(System.Linq.Expressions.Expression, System.Reflection.MethodInfo)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.UnaryPlus(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
    name: UnaryPlus
    fullName: System.Linq.Expressions.Expression.UnaryPlus
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: MethodInfo
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.UnaryPlus(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
    name: UnaryPlus
    fullName: System.Linq.Expressions.Expression.UnaryPlus
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: MethodInfo
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: )
    fullName: )
- uid: System.Linq.Expressions.Expression.Unbox(System.Linq.Expressions.Expression,System.Type)
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: Unbox(Expression, Type)
  fullName: System.Linq.Expressions.Expression.Unbox(System.Linq.Expressions.Expression, System.Type)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.Unbox(System.Linq.Expressions.Expression,System.Type)
    name: Unbox
    fullName: System.Linq.Expressions.Expression.Unbox
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.Unbox(System.Linq.Expressions.Expression,System.Type)
    name: Unbox
    fullName: System.Linq.Expressions.Expression.Unbox
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
  - name: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: )
    fullName: )
- uid: System.Linq.Expressions.Expression.Variable(System.Type)
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: Variable(Type)
  fullName: System.Linq.Expressions.Expression.Variable(System.Type)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.Variable(System.Type)
    name: Variable
    fullName: System.Linq.Expressions.Expression.Variable
  - name: (
    fullName: (
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.Variable(System.Type)
    name: Variable
    fullName: System.Linq.Expressions.Expression.Variable
  - name: (
    fullName: (
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: )
    fullName: )
- uid: System.Linq.Expressions.Expression.Variable(System.Type,System.String)
  parent: System.Linq.Expressions.Expression
  isExternal: true
  name: Variable(Type, String)
  fullName: System.Linq.Expressions.Expression.Variable(System.Type, System.String)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.Variable(System.Type,System.String)
    name: Variable
    fullName: System.Linq.Expressions.Expression.Variable
  - name: (
    fullName: (
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.Variable(System.Type,System.String)
    name: Variable
    fullName: System.Linq.Expressions.Expression.Variable
  - name: (
    fullName: (
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: System.Linq.Expressions.Expression.VisitChildren(System.Linq.Expressions.ExpressionVisitor)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: VisitChildren(ExpressionVisitor)
  fullName: System.Linq.Expressions.Expression.VisitChildren(System.Linq.Expressions.ExpressionVisitor)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.VisitChildren(System.Linq.Expressions.ExpressionVisitor)
    name: VisitChildren
    fullName: System.Linq.Expressions.Expression.VisitChildren
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.ExpressionVisitor
    name: ExpressionVisitor
    fullName: System.Linq.Expressions.ExpressionVisitor
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.VisitChildren(System.Linq.Expressions.ExpressionVisitor)
    name: VisitChildren
    fullName: System.Linq.Expressions.Expression.VisitChildren
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.ExpressionVisitor
    name: ExpressionVisitor
    fullName: System.Linq.Expressions.ExpressionVisitor
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Linq.Expressions.Expression.CanReduce
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: CanReduce
  fullName: System.Linq.Expressions.Expression.CanReduce
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  fullName: System.Boolean
- uid: System.Linq.Expressions.LambdaExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: LambdaExpression
  fullName: System.Linq.Expressions.LambdaExpression
- uid: System.Reflection.MethodInfo
  parent: System.Reflection
  isExternal: false
  name: MethodInfo
  fullName: System.Reflection.MethodInfo
- uid: System.Reflection
  isExternal: false
  name: System.Reflection
  fullName: System.Reflection
- uid: System.Linq.Expressions.Expression.Accept(System.Linq.Expressions.ExpressionVisitor)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Accept(ExpressionVisitor)
  fullName: System.Linq.Expressions.Expression.Accept(System.Linq.Expressions.ExpressionVisitor)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.Accept(System.Linq.Expressions.ExpressionVisitor)
    name: Accept
    fullName: System.Linq.Expressions.Expression.Accept
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.ExpressionVisitor
    name: ExpressionVisitor
    fullName: System.Linq.Expressions.ExpressionVisitor
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.Accept(System.Linq.Expressions.ExpressionVisitor)
    name: Accept
    fullName: System.Linq.Expressions.Expression.Accept
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.ExpressionVisitor
    name: ExpressionVisitor
    fullName: System.Linq.Expressions.ExpressionVisitor
  - name: )
    fullName: )
- uid: System.Linq.Expressions.ExpressionVisitor
  parent: System.Linq.Expressions
  isExternal: false
  name: ExpressionVisitor
  fullName: System.Linq.Expressions.ExpressionVisitor
- uid: System.Linq.Expressions.Expression.Reduce
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Reduce()
  fullName: System.Linq.Expressions.Expression.Reduce()
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.Reduce
    name: Reduce
    fullName: System.Linq.Expressions.Expression.Reduce
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.Reduce
    name: Reduce
    fullName: System.Linq.Expressions.Expression.Reduce
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Linq.Expressions.BinaryExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: BinaryExpression
  fullName: System.Linq.Expressions.BinaryExpression
