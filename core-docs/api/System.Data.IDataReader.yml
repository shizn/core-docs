items:
- uid: System.Data.IDataReader
  commentId: T:System.Data.IDataReader
  id: IDataReader
  parent: System.Data
  children:
  - System.Data.IDataReader.Close
  - System.Data.IDataReader.Depth
  - System.Data.IDataReader.GetSchemaTable
  - System.Data.IDataReader.IsClosed
  - System.Data.IDataReader.NextResult
  - System.Data.IDataReader.Read
  - System.Data.IDataReader.RecordsAffected
  langs:
  - csharp
  - vb
  name: IDataReader
  fullName: System.Data.IDataReader
  type: Interface
  source:
    remote:
      path: src/System.Data.Common/src/System/Data/IDataReader.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IDataReader
    path: src/System.Data.Common/src/System/Data/IDataReader.cs
    startLine: 8
  assemblies:
  - System.Data.Common
  namespace: System.Data
  summary: "\n<p>Provides a means of reading one or more forward-only streams of result sets obtained by executing a command at a data source, and is implemented by .NET Framework data providers that access relational databases.</p>\n"
  remarks: "\n<p>The <xref href=\"System.Data.IDataReader\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"System.Data.IDataRecord\" data-throw-if-not-resolved=\"false\"></xref> interfaces allow an inheriting class to implement a <strong>DataReader</strong> class, which provides a means of reading one or more forward-only streams of result sets. For more information about <strong>DataReader</strong> classes, see Retrieving Data Using a DataReader. </p>\n<p>An application does not create an instance of the <xref href=\"System.Data.IDataReader\" data-throw-if-not-resolved=\"false\"></xref> interface directly, but creates an instance of a class that inherits <xref href=\"System.Data.IDataReader\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>Classes that inherit <xref href=\"System.Data.IDataReader\" data-throw-if-not-resolved=\"false\"></xref> must implement the inherited members, and typically define additional members to add provider-specific functionality.</p>\n<p>Changes made to a result set by another process or thread while data is being read may be visible to the user of a class that implements an <strong>IDataReader</strong>. However, the precise behavior is both provider and timing dependent.</p>\n"
  example:
  - "\n<p>The following example creates instances of the derived classes, <xref href=\"System.Data.SqlClient.SqlConnection\" data-throw-if-not-resolved=\"false\"></xref>, <xref href=\"System.Data.SqlClient.SqlCommand\" data-throw-if-not-resolved=\"false\"></xref>, and <xref href=\"System.Data.SqlClient.SqlDataReader\" data-throw-if-not-resolved=\"false\"></xref>. The example reads through the data, writing it out to the console. Finally, the example closes the <xref href=\"System.Data.SqlClient.SqlDataReader\" data-throw-if-not-resolved=\"false\"></xref>, then the <xref href=\"System.Data.SqlClient.SqlConnection\" data-throw-if-not-resolved=\"false\"></xref>.</p>Classic WebData SqlDataReader.Read Example#1"
  syntax:
    content: 'public interface IDataReader : IDisposable, IDataRecord'
    content.vb: >-
      Public Interface IDataReader
          Inherits IDisposable, IDataRecord
  inheritedMembers:
  - System.Data.IDataRecord.FieldCount
  - System.Data.IDataRecord.Item(System.Int32)
  - System.Data.IDataRecord.Item(System.String)
  - System.Data.IDataRecord.GetBoolean(System.Int32)
  - System.Data.IDataRecord.GetByte(System.Int32)
  - System.Data.IDataRecord.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)
  - System.Data.IDataRecord.GetChar(System.Int32)
  - System.Data.IDataRecord.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)
  - System.Data.IDataRecord.GetData(System.Int32)
  - System.Data.IDataRecord.GetDataTypeName(System.Int32)
  - System.Data.IDataRecord.GetDateTime(System.Int32)
  - System.Data.IDataRecord.GetDecimal(System.Int32)
  - System.Data.IDataRecord.GetDouble(System.Int32)
  - System.Data.IDataRecord.GetFieldType(System.Int32)
  - System.Data.IDataRecord.GetFloat(System.Int32)
  - System.Data.IDataRecord.GetGuid(System.Int32)
  - System.Data.IDataRecord.GetInt16(System.Int32)
  - System.Data.IDataRecord.GetInt32(System.Int32)
  - System.Data.IDataRecord.GetInt64(System.Int32)
  - System.Data.IDataRecord.GetName(System.Int32)
  - System.Data.IDataRecord.GetOrdinal(System.String)
  - System.Data.IDataRecord.GetString(System.Int32)
  - System.Data.IDataRecord.GetValue(System.Int32)
  - System.Data.IDataRecord.GetValues(System.Object[])
  - System.Data.IDataRecord.IsDBNull(System.Int32)
  - System.IDisposable.Dispose
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: System.Data.IDataReader.Depth
  commentId: P:System.Data.IDataReader.Depth
  id: Depth
  parent: System.Data.IDataReader
  langs:
  - csharp
  - vb
  name: Depth
  fullName: System.Data.IDataReader.Depth
  type: Property
  source:
    remote:
      path: src/System.Data.Common/src/System/Data/IDataReader.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Depth
    path: src/System.Data.Common/src/System/Data/IDataReader.cs
    startLine: 11
  assemblies:
  - System.Data.Common
  namespace: System.Data
  summary: "\n<p>Gets a value indicating the depth of nesting for the current row.</p>\n"
  remarks: "\n<p>The outermost table has a depth of zero.</p>\n"
  syntax:
    content: int Depth { get; }
    content.vb: ReadOnly Property Depth As Integer
    parameters: []
    return:
      type: System.Int32
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: System.Data.IDataReader.IsClosed
  commentId: P:System.Data.IDataReader.IsClosed
  id: IsClosed
  parent: System.Data.IDataReader
  langs:
  - csharp
  - vb
  name: IsClosed
  fullName: System.Data.IDataReader.IsClosed
  type: Property
  source:
    remote:
      path: src/System.Data.Common/src/System/Data/IDataReader.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IsClosed
    path: src/System.Data.Common/src/System/Data/IDataReader.cs
    startLine: 16
  assemblies:
  - System.Data.Common
  namespace: System.Data
  summary: "\n<p>Gets a value indicating whether the data reader is closed.</p>\n"
  remarks: "\n<p>\n<xref href=\"System.Data.IDataReader.IsClosed\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"System.Data.IDataReader.RecordsAffected\" data-throw-if-not-resolved=\"false\"></xref> are the only properties that you can call after the <xref href=\"System.Data.IDataReader\" data-throw-if-not-resolved=\"false\"></xref> is closed.</p>\n"
  syntax:
    content: bool IsClosed { get; }
    content.vb: ReadOnly Property IsClosed As Boolean
    parameters: []
    return:
      type: System.Boolean
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: System.Data.IDataReader.RecordsAffected
  commentId: P:System.Data.IDataReader.RecordsAffected
  id: RecordsAffected
  parent: System.Data.IDataReader
  langs:
  - csharp
  - vb
  name: RecordsAffected
  fullName: System.Data.IDataReader.RecordsAffected
  type: Property
  source:
    remote:
      path: src/System.Data.Common/src/System/Data/IDataReader.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: RecordsAffected
    path: src/System.Data.Common/src/System/Data/IDataReader.cs
    startLine: 21
  assemblies:
  - System.Data.Common
  namespace: System.Data
  summary: "\n<p>Gets the number of rows changed, inserted, or deleted by execution of the SQL statement.</p>\n"
  remarks: "\n<p>The <xref href=\"System.Data.IDataReader.RecordsAffected\" data-throw-if-not-resolved=\"false\"></xref> property is not set until all rows are read and you close the <xref href=\"System.Data.IDataReader\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>\n<xref href=\"System.Data.IDataReader.IsClosed\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"System.Data.IDataReader.RecordsAffected\" data-throw-if-not-resolved=\"false\"></xref> are the only properties that you can call after the <xref href=\"System.Data.IDataReader\" data-throw-if-not-resolved=\"false\"></xref> is closed.</p>\n"
  syntax:
    content: int RecordsAffected { get; }
    content.vb: ReadOnly Property RecordsAffected As Integer
    parameters: []
    return:
      type: System.Int32
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: System.Data.IDataReader.Close
  commentId: M:System.Data.IDataReader.Close
  id: Close
  parent: System.Data.IDataReader
  langs:
  - csharp
  - vb
  name: Close()
  fullName: System.Data.IDataReader.Close()
  type: Method
  source:
    remote:
      path: src/System.Data.Common/src/System/Data/IDataReader.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Close
    path: src/System.Data.Common/src/System/Data/IDataReader.cs
    startLine: 26
  assemblies:
  - System.Data.Common
  namespace: System.Data
  summary: "\n<p>Closes the <xref href=\"System.Data.IDataReader\" data-throw-if-not-resolved=\"false\"></xref> Object.</p>\n"
  remarks: "\n<p>You must explicitly call the <xref href=\"System.Data.IDataReader.Close\" data-throw-if-not-resolved=\"false\"></xref> method when you are through using the <xref href=\"System.Data.IDataReader\" data-throw-if-not-resolved=\"false\"></xref> to use the associated <xref href=\"System.Data.IDbConnection\" data-throw-if-not-resolved=\"false\"></xref> for any other purpose.</p>\n"
  syntax:
    content: void Close()
    content.vb: Sub Close
- uid: System.Data.IDataReader.GetSchemaTable
  commentId: M:System.Data.IDataReader.GetSchemaTable
  id: GetSchemaTable
  parent: System.Data.IDataReader
  langs:
  - csharp
  - vb
  name: GetSchemaTable()
  fullName: System.Data.IDataReader.GetSchemaTable()
  type: Method
  source:
    remote:
      path: src/System.Data.Common/src/System/Data/IDataReader.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetSchemaTable
    path: src/System.Data.Common/src/System/Data/IDataReader.cs
    startLine: 28
  assemblies:
  - System.Data.Common
  namespace: System.Data
  summary: "\n<p>Returns a <xref href=\"System.Data.DataTable\" data-throw-if-not-resolved=\"false\"></xref> that describes the column metadata of the <xref href=\"System.Data.IDataReader\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  remarks: "\n<p>The implementation of <xref href=\"System.Data.IDataReader.GetSchemaTable\" data-throw-if-not-resolved=\"false\"></xref> method for the .NET Framework Data Provider for OLE DB maps to the OLE DB IColumnsRowset::GetColumnsRowset method, while implementations for other .NET Framework data providers do not use an OLE DB provider layer. The order in which <xref href=\"System.Data.IDataReader.GetSchemaTable\" data-throw-if-not-resolved=\"false\"></xref> returns metadata about each column in a table, and the DataReader columns that are returned, vary depending on which data provider you use. The following table lists data providers and members that implement <xref href=\"System.Data.IDataReader.GetSchemaTable\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>Data Provider </p>\n<p>Member </p>\n<table><tbody><tr><td>\n<p>.NET Data Provider for ODBC </p>\n</td><td>\n<p>\n<xref href=\"System.Data.Odbc.OdbcDataReader.GetSchemaTable\" data-throw-if-not-resolved=\"false\"></xref>. </p>\n</td></tr><tr><td>\n<p>.NET Data Provider for OLE DB </p>\n</td><td>\n<p>\n<xref href=\"System.Data.OleDb.OleDbDataReader.GetSchemaTable\" data-throw-if-not-resolved=\"false\"></xref>. </p>\n</td></tr><tr><td>\n<p>.NET Data Provider for Oracle </p>\n</td><td>\n<p>\n<xref href=\"System.Data.OracleClient.OracleDataReader.GetSchemaTable\" data-throw-if-not-resolved=\"false\"></xref>. </p>\n</td></tr><tr><td>\n<p>.NET Data Provider for SQL Server </p>\n</td><td>\n<p>\n<xref href=\"System.Data.SqlClient.SqlDataReader.GetSchemaTable\" data-throw-if-not-resolved=\"false\"></xref>. </p>\n</td></tr></tbody></table>\n"
  syntax:
    content: DataTable GetSchemaTable()
    content.vb: Function GetSchemaTable As DataTable
    return:
      type: System.Data.DataTable
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "\n<p>The <xref href=\"System.Data.IDataReader\" data-throw-if-not-resolved=\"false\"></xref> is closed. </p>\n"
- uid: System.Data.IDataReader.NextResult
  commentId: M:System.Data.IDataReader.NextResult
  id: NextResult
  parent: System.Data.IDataReader
  langs:
  - csharp
  - vb
  name: NextResult()
  fullName: System.Data.IDataReader.NextResult()
  type: Method
  source:
    remote:
      path: src/System.Data.Common/src/System/Data/IDataReader.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: NextResult
    path: src/System.Data.Common/src/System/Data/IDataReader.cs
    startLine: 30
  assemblies:
  - System.Data.Common
  namespace: System.Data
  summary: "\n<p>Advances the data reader to the next result, when reading the results of batch SQL statements.</p>\n"
  remarks: "\n<p>Used to process multiple results, which can be obtained by executing batch SQL statements.</p>\n<p>By default, the data reader is positioned on the first result.</p>IDataReader_NextResult#1"
  syntax:
    content: bool NextResult()
    content.vb: Function NextResult As Boolean
    return:
      type: System.Boolean
- uid: System.Data.IDataReader.Read
  commentId: M:System.Data.IDataReader.Read
  id: Read
  parent: System.Data.IDataReader
  langs:
  - csharp
  - vb
  name: Read()
  fullName: System.Data.IDataReader.Read()
  type: Method
  source:
    remote:
      path: src/System.Data.Common/src/System/Data/IDataReader.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Read
    path: src/System.Data.Common/src/System/Data/IDataReader.cs
    startLine: 32
  assemblies:
  - System.Data.Common
  namespace: System.Data
  summary: "\n<p>Advances the <xref href=\"System.Data.IDataReader\" data-throw-if-not-resolved=\"false\"></xref> to the next record.</p>\n"
  remarks: "\n<p>The default position of the <xref href=\"System.Data.IDataReader\" data-throw-if-not-resolved=\"false\"></xref> is prior to the first record. Therefore you must call <xref href=\"System.Data.IDataReader.Read\" data-throw-if-not-resolved=\"false\"></xref> to begin accessing any data.</p>\n<p>While the data reader is in use, the associated connection is busy serving the <xref href=\"System.Data.IDataReader\" data-throw-if-not-resolved=\"false\"></xref>. This is the case until <xref href=\"System.Data.IDataReader.Close\" data-throw-if-not-resolved=\"false\"></xref> is called.</p>\n"
  example:
  - "\n<p>The following example creates instances of three derived classes <xref href=\"System.Data.OleDb.OleDbConnection\" data-throw-if-not-resolved=\"false\"></xref>, an <xref href=\"System.Data.OleDb.OleDbCommand\" data-throw-if-not-resolved=\"false\"></xref>, and an <xref href=\"System.Data.OleDb.OleDbDataReader\" data-throw-if-not-resolved=\"false\"></xref>. The example reads through the data, writing it out to the console. Finally, the example closes the <xref href=\"System.Data.OleDb.OleDbDataReader\" data-throw-if-not-resolved=\"false\"></xref>, then the <xref href=\"System.Data.OleDb.OleDbConnection\" data-throw-if-not-resolved=\"false\"></xref>.</p>Classic WebData IDataReader.Read Example#1"
  syntax:
    content: bool Read()
    content.vb: Function Read As Boolean
    return:
      type: System.Boolean
references:
- uid: System.Data
  isExternal: false
  name: System.Data
  fullName: System.Data
- uid: System.Data.IDataRecord.FieldCount
  parent: System.Data.IDataRecord
  isExternal: false
  name: FieldCount
  fullName: System.Data.IDataRecord.FieldCount
- uid: System.Data.IDataRecord.Item(System.Int32)
  parent: System.Data.IDataRecord
  isExternal: true
  name: Item[Int32]
  fullName: System.Data.IDataRecord.Item[System.Int32]
  fullname.vb: System.Data.IDataRecord.Item(System.Int32)
  name.vb: Item(Int32)
  spec.csharp:
  - uid: System.Data.IDataRecord.Item(System.Int32)
    name: Item
    fullName: System.Data.IDataRecord.Item
  - name: '['
    fullName: '['
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ']'
    fullName: ']'
  spec.vb:
  - uid: System.Data.IDataRecord.Item(System.Int32)
    name: Item
    fullName: System.Data.IDataRecord.Item
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
- uid: System.Data.IDataRecord.Item(System.String)
  parent: System.Data.IDataRecord
  isExternal: true
  name: Item[String]
  fullName: System.Data.IDataRecord.Item[System.String]
  fullname.vb: System.Data.IDataRecord.Item(System.String)
  name.vb: Item(String)
  spec.csharp:
  - uid: System.Data.IDataRecord.Item(System.String)
    name: Item
    fullName: System.Data.IDataRecord.Item
  - name: '['
    fullName: '['
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ']'
    fullName: ']'
  spec.vb:
  - uid: System.Data.IDataRecord.Item(System.String)
    name: Item
    fullName: System.Data.IDataRecord.Item
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: System.Data.IDataRecord.GetBoolean(System.Int32)
  parent: System.Data.IDataRecord
  isExternal: true
  name: GetBoolean(Int32)
  fullName: System.Data.IDataRecord.GetBoolean(System.Int32)
  spec.csharp:
  - uid: System.Data.IDataRecord.GetBoolean(System.Int32)
    name: GetBoolean
    fullName: System.Data.IDataRecord.GetBoolean
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Data.IDataRecord.GetBoolean(System.Int32)
    name: GetBoolean
    fullName: System.Data.IDataRecord.GetBoolean
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
- uid: System.Data.IDataRecord.GetByte(System.Int32)
  parent: System.Data.IDataRecord
  isExternal: true
  name: GetByte(Int32)
  fullName: System.Data.IDataRecord.GetByte(System.Int32)
  spec.csharp:
  - uid: System.Data.IDataRecord.GetByte(System.Int32)
    name: GetByte
    fullName: System.Data.IDataRecord.GetByte
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Data.IDataRecord.GetByte(System.Int32)
    name: GetByte
    fullName: System.Data.IDataRecord.GetByte
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
- uid: System.Data.IDataRecord.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)
  parent: System.Data.IDataRecord
  isExternal: true
  name: GetBytes(Int32, Int64, Byte[], Int32, Int32)
  fullName: System.Data.IDataRecord.GetBytes(System.Int32, System.Int64, System.Byte[], System.Int32, System.Int32)
  fullname.vb: System.Data.IDataRecord.GetBytes(System.Int32, System.Int64, System.Byte(), System.Int32, System.Int32)
  name.vb: GetBytes(Int32, Int64, Byte(), Int32, Int32)
  spec.csharp:
  - uid: System.Data.IDataRecord.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)
    name: GetBytes
    fullName: System.Data.IDataRecord.GetBytes
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Int64
    name: Int64
    fullName: System.Int64
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    fullName: '[]'
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Data.IDataRecord.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)
    name: GetBytes
    fullName: System.Data.IDataRecord.GetBytes
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Int64
    name: Int64
    fullName: System.Int64
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    fullName: ()
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
- uid: System.Data.IDataRecord.GetChar(System.Int32)
  parent: System.Data.IDataRecord
  isExternal: true
  name: GetChar(Int32)
  fullName: System.Data.IDataRecord.GetChar(System.Int32)
  spec.csharp:
  - uid: System.Data.IDataRecord.GetChar(System.Int32)
    name: GetChar
    fullName: System.Data.IDataRecord.GetChar
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Data.IDataRecord.GetChar(System.Int32)
    name: GetChar
    fullName: System.Data.IDataRecord.GetChar
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
- uid: System.Data.IDataRecord.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)
  parent: System.Data.IDataRecord
  isExternal: true
  name: GetChars(Int32, Int64, Char[], Int32, Int32)
  fullName: System.Data.IDataRecord.GetChars(System.Int32, System.Int64, System.Char[], System.Int32, System.Int32)
  fullname.vb: System.Data.IDataRecord.GetChars(System.Int32, System.Int64, System.Char(), System.Int32, System.Int32)
  name.vb: GetChars(Int32, Int64, Char(), Int32, Int32)
  spec.csharp:
  - uid: System.Data.IDataRecord.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)
    name: GetChars
    fullName: System.Data.IDataRecord.GetChars
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Int64
    name: Int64
    fullName: System.Int64
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Char
    name: Char
    fullName: System.Char
    isExternal: true
  - name: '[]'
    fullName: '[]'
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Data.IDataRecord.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)
    name: GetChars
    fullName: System.Data.IDataRecord.GetChars
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Int64
    name: Int64
    fullName: System.Int64
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Char
    name: Char
    fullName: System.Char
    isExternal: true
  - name: ()
    fullName: ()
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
- uid: System.Data.IDataRecord.GetData(System.Int32)
  parent: System.Data.IDataRecord
  isExternal: true
  name: GetData(Int32)
  fullName: System.Data.IDataRecord.GetData(System.Int32)
  spec.csharp:
  - uid: System.Data.IDataRecord.GetData(System.Int32)
    name: GetData
    fullName: System.Data.IDataRecord.GetData
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Data.IDataRecord.GetData(System.Int32)
    name: GetData
    fullName: System.Data.IDataRecord.GetData
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
- uid: System.Data.IDataRecord.GetDataTypeName(System.Int32)
  parent: System.Data.IDataRecord
  isExternal: true
  name: GetDataTypeName(Int32)
  fullName: System.Data.IDataRecord.GetDataTypeName(System.Int32)
  spec.csharp:
  - uid: System.Data.IDataRecord.GetDataTypeName(System.Int32)
    name: GetDataTypeName
    fullName: System.Data.IDataRecord.GetDataTypeName
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Data.IDataRecord.GetDataTypeName(System.Int32)
    name: GetDataTypeName
    fullName: System.Data.IDataRecord.GetDataTypeName
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
- uid: System.Data.IDataRecord.GetDateTime(System.Int32)
  parent: System.Data.IDataRecord
  isExternal: true
  name: GetDateTime(Int32)
  fullName: System.Data.IDataRecord.GetDateTime(System.Int32)
  spec.csharp:
  - uid: System.Data.IDataRecord.GetDateTime(System.Int32)
    name: GetDateTime
    fullName: System.Data.IDataRecord.GetDateTime
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Data.IDataRecord.GetDateTime(System.Int32)
    name: GetDateTime
    fullName: System.Data.IDataRecord.GetDateTime
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
- uid: System.Data.IDataRecord.GetDecimal(System.Int32)
  parent: System.Data.IDataRecord
  isExternal: true
  name: GetDecimal(Int32)
  fullName: System.Data.IDataRecord.GetDecimal(System.Int32)
  spec.csharp:
  - uid: System.Data.IDataRecord.GetDecimal(System.Int32)
    name: GetDecimal
    fullName: System.Data.IDataRecord.GetDecimal
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Data.IDataRecord.GetDecimal(System.Int32)
    name: GetDecimal
    fullName: System.Data.IDataRecord.GetDecimal
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
- uid: System.Data.IDataRecord.GetDouble(System.Int32)
  parent: System.Data.IDataRecord
  isExternal: true
  name: GetDouble(Int32)
  fullName: System.Data.IDataRecord.GetDouble(System.Int32)
  spec.csharp:
  - uid: System.Data.IDataRecord.GetDouble(System.Int32)
    name: GetDouble
    fullName: System.Data.IDataRecord.GetDouble
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Data.IDataRecord.GetDouble(System.Int32)
    name: GetDouble
    fullName: System.Data.IDataRecord.GetDouble
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
- uid: System.Data.IDataRecord.GetFieldType(System.Int32)
  parent: System.Data.IDataRecord
  isExternal: true
  name: GetFieldType(Int32)
  fullName: System.Data.IDataRecord.GetFieldType(System.Int32)
  spec.csharp:
  - uid: System.Data.IDataRecord.GetFieldType(System.Int32)
    name: GetFieldType
    fullName: System.Data.IDataRecord.GetFieldType
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Data.IDataRecord.GetFieldType(System.Int32)
    name: GetFieldType
    fullName: System.Data.IDataRecord.GetFieldType
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
- uid: System.Data.IDataRecord.GetFloat(System.Int32)
  parent: System.Data.IDataRecord
  isExternal: true
  name: GetFloat(Int32)
  fullName: System.Data.IDataRecord.GetFloat(System.Int32)
  spec.csharp:
  - uid: System.Data.IDataRecord.GetFloat(System.Int32)
    name: GetFloat
    fullName: System.Data.IDataRecord.GetFloat
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Data.IDataRecord.GetFloat(System.Int32)
    name: GetFloat
    fullName: System.Data.IDataRecord.GetFloat
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
- uid: System.Data.IDataRecord.GetGuid(System.Int32)
  parent: System.Data.IDataRecord
  isExternal: true
  name: GetGuid(Int32)
  fullName: System.Data.IDataRecord.GetGuid(System.Int32)
  spec.csharp:
  - uid: System.Data.IDataRecord.GetGuid(System.Int32)
    name: GetGuid
    fullName: System.Data.IDataRecord.GetGuid
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Data.IDataRecord.GetGuid(System.Int32)
    name: GetGuid
    fullName: System.Data.IDataRecord.GetGuid
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
- uid: System.Data.IDataRecord.GetInt16(System.Int32)
  parent: System.Data.IDataRecord
  isExternal: true
  name: GetInt16(Int32)
  fullName: System.Data.IDataRecord.GetInt16(System.Int32)
  spec.csharp:
  - uid: System.Data.IDataRecord.GetInt16(System.Int32)
    name: GetInt16
    fullName: System.Data.IDataRecord.GetInt16
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Data.IDataRecord.GetInt16(System.Int32)
    name: GetInt16
    fullName: System.Data.IDataRecord.GetInt16
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
- uid: System.Data.IDataRecord.GetInt32(System.Int32)
  parent: System.Data.IDataRecord
  isExternal: true
  name: GetInt32(Int32)
  fullName: System.Data.IDataRecord.GetInt32(System.Int32)
  spec.csharp:
  - uid: System.Data.IDataRecord.GetInt32(System.Int32)
    name: GetInt32
    fullName: System.Data.IDataRecord.GetInt32
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Data.IDataRecord.GetInt32(System.Int32)
    name: GetInt32
    fullName: System.Data.IDataRecord.GetInt32
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
- uid: System.Data.IDataRecord.GetInt64(System.Int32)
  parent: System.Data.IDataRecord
  isExternal: true
  name: GetInt64(Int32)
  fullName: System.Data.IDataRecord.GetInt64(System.Int32)
  spec.csharp:
  - uid: System.Data.IDataRecord.GetInt64(System.Int32)
    name: GetInt64
    fullName: System.Data.IDataRecord.GetInt64
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Data.IDataRecord.GetInt64(System.Int32)
    name: GetInt64
    fullName: System.Data.IDataRecord.GetInt64
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
- uid: System.Data.IDataRecord.GetName(System.Int32)
  parent: System.Data.IDataRecord
  isExternal: true
  name: GetName(Int32)
  fullName: System.Data.IDataRecord.GetName(System.Int32)
  spec.csharp:
  - uid: System.Data.IDataRecord.GetName(System.Int32)
    name: GetName
    fullName: System.Data.IDataRecord.GetName
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Data.IDataRecord.GetName(System.Int32)
    name: GetName
    fullName: System.Data.IDataRecord.GetName
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
- uid: System.Data.IDataRecord.GetOrdinal(System.String)
  parent: System.Data.IDataRecord
  isExternal: true
  name: GetOrdinal(String)
  fullName: System.Data.IDataRecord.GetOrdinal(System.String)
  spec.csharp:
  - uid: System.Data.IDataRecord.GetOrdinal(System.String)
    name: GetOrdinal
    fullName: System.Data.IDataRecord.GetOrdinal
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Data.IDataRecord.GetOrdinal(System.String)
    name: GetOrdinal
    fullName: System.Data.IDataRecord.GetOrdinal
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: System.Data.IDataRecord.GetString(System.Int32)
  parent: System.Data.IDataRecord
  isExternal: true
  name: GetString(Int32)
  fullName: System.Data.IDataRecord.GetString(System.Int32)
  spec.csharp:
  - uid: System.Data.IDataRecord.GetString(System.Int32)
    name: GetString
    fullName: System.Data.IDataRecord.GetString
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Data.IDataRecord.GetString(System.Int32)
    name: GetString
    fullName: System.Data.IDataRecord.GetString
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
- uid: System.Data.IDataRecord.GetValue(System.Int32)
  parent: System.Data.IDataRecord
  isExternal: true
  name: GetValue(Int32)
  fullName: System.Data.IDataRecord.GetValue(System.Int32)
  spec.csharp:
  - uid: System.Data.IDataRecord.GetValue(System.Int32)
    name: GetValue
    fullName: System.Data.IDataRecord.GetValue
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Data.IDataRecord.GetValue(System.Int32)
    name: GetValue
    fullName: System.Data.IDataRecord.GetValue
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
- uid: System.Data.IDataRecord.GetValues(System.Object[])
  parent: System.Data.IDataRecord
  isExternal: true
  name: GetValues(Object[])
  fullName: System.Data.IDataRecord.GetValues(System.Object[])
  fullname.vb: System.Data.IDataRecord.GetValues(System.Object())
  name.vb: GetValues(Object())
  spec.csharp:
  - uid: System.Data.IDataRecord.GetValues(System.Object[])
    name: GetValues
    fullName: System.Data.IDataRecord.GetValues
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    fullName: '[]'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Data.IDataRecord.GetValues(System.Object[])
    name: GetValues
    fullName: System.Data.IDataRecord.GetValues
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    fullName: ()
  - name: )
    fullName: )
- uid: System.Data.IDataRecord.IsDBNull(System.Int32)
  parent: System.Data.IDataRecord
  isExternal: true
  name: IsDBNull(Int32)
  fullName: System.Data.IDataRecord.IsDBNull(System.Int32)
  spec.csharp:
  - uid: System.Data.IDataRecord.IsDBNull(System.Int32)
    name: IsDBNull
    fullName: System.Data.IDataRecord.IsDBNull
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Data.IDataRecord.IsDBNull(System.Int32)
    name: IsDBNull
    fullName: System.Data.IDataRecord.IsDBNull
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
- uid: System.IDisposable.Dispose
  parent: System.IDisposable
  isExternal: false
  name: Dispose()
  fullName: System.IDisposable.Dispose()
  spec.csharp:
  - uid: System.IDisposable.Dispose
    name: Dispose
    fullName: System.IDisposable.Dispose
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IDisposable.Dispose
    name: Dispose
    fullName: System.IDisposable.Dispose
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Data.IDataRecord
  parent: System.Data
  isExternal: false
  name: IDataRecord
  fullName: System.Data.IDataRecord
- uid: System.IDisposable
  parent: System
  isExternal: false
  name: IDisposable
  fullName: System.IDisposable
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  fullName: System.Int32
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  fullName: System.Boolean
- uid: System.Data.DataTable
  parent: System.Data
  isExternal: false
  name: DataTable
  fullName: System.Data.DataTable
- uid: System.InvalidOperationException
  parent: System
  isExternal: false
  name: InvalidOperationException
  fullName: System.InvalidOperationException
