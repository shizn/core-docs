items:
- uid: System.Data.SqlTypes.SqlBytes
  commentId: T:System.Data.SqlTypes.SqlBytes
  id: SqlBytes
  parent: System.Data.SqlTypes
  children:
  - System.Data.SqlTypes.SqlBytes.#ctor
  - System.Data.SqlTypes.SqlBytes.#ctor(System.Byte[])
  - System.Data.SqlTypes.SqlBytes.#ctor(System.Data.SqlTypes.SqlBinary)
  - System.Data.SqlTypes.SqlBytes.#ctor(System.IO.Stream)
  - System.Data.SqlTypes.SqlBytes.Buffer
  - System.Data.SqlTypes.SqlBytes.IsNull
  - System.Data.SqlTypes.SqlBytes.Item(System.Int64)
  - System.Data.SqlTypes.SqlBytes.Length
  - System.Data.SqlTypes.SqlBytes.MaxLength
  - System.Data.SqlTypes.SqlBytes.Null
  - System.Data.SqlTypes.SqlBytes.op_Explicit(System.Data.SqlTypes.SqlBinary)~System.Data.SqlTypes.SqlBytes
  - System.Data.SqlTypes.SqlBytes.op_Explicit(System.Data.SqlTypes.SqlBytes)~System.Data.SqlTypes.SqlBinary
  - System.Data.SqlTypes.SqlBytes.Read(System.Int64,System.Byte[],System.Int32,System.Int32)
  - System.Data.SqlTypes.SqlBytes.SetLength(System.Int64)
  - System.Data.SqlTypes.SqlBytes.SetNull
  - System.Data.SqlTypes.SqlBytes.Stream
  - System.Data.SqlTypes.SqlBytes.ToSqlBinary
  - System.Data.SqlTypes.SqlBytes.Value
  - System.Data.SqlTypes.SqlBytes.Write(System.Int64,System.Byte[],System.Int32,System.Int32)
  langs:
  - csharp
  - vb
  name: SqlBytes
  fullName: System.Data.SqlTypes.SqlBytes
  type: Class
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLBytes.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: SqlBytes
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLBytes.cs
    startLine: 24
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: "\n<p>Represents a mutable reference type that wraps either a <xref href=\"System.Data.SqlTypes.SqlBytes.Buffer\" data-throw-if-not-resolved=\"false\"></xref> or a <xref href=\"System.Data.SqlTypes.SqlBytes.Stream\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: 'public sealed class SqlBytes : INullable'
    content.vb: >-
      Public NotInheritable Class SqlBytes
          Implements INullable
  inheritance:
  - System.Object
  implements:
  - System.Data.SqlTypes.INullable
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: System.Data.SqlTypes.SqlBytes.#ctor
  commentId: M:System.Data.SqlTypes.SqlBytes.#ctor
  id: '#ctor'
  parent: System.Data.SqlTypes.SqlBytes
  langs:
  - csharp
  - vb
  name: SqlBytes()
  fullName: System.Data.SqlTypes.SqlBytes.SqlBytes()
  type: Constructor
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLBytes.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLBytes.cs
    startLine: 62
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Data.SqlTypes.SqlBytes\" data-throw-if-not-resolved=\"false\"></xref> class.</p>\n"
  syntax:
    content: public SqlBytes()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Data.SqlTypes.SqlBytes.#ctor(System.Byte[])
  commentId: M:System.Data.SqlTypes.SqlBytes.#ctor(System.Byte[])
  id: '#ctor(System.Byte[])'
  parent: System.Data.SqlTypes.SqlBytes
  langs:
  - csharp
  - vb
  name: SqlBytes(Byte[])
  fullName: System.Data.SqlTypes.SqlBytes.SqlBytes(System.Byte[])
  type: Constructor
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLBytes.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLBytes.cs
    startLine: 68
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Data.SqlTypes.SqlBytes\" data-throw-if-not-resolved=\"false\"></xref> class based on the specified byte array.</p>\n"
  remarks: "\n<p>If a null reference is passed in, the instance is set to null.</p>\n"
  syntax:
    content: public SqlBytes(byte[] buffer)
    content.vb: Public Sub New(buffer As Byte())
    parameters:
    - id: buffer
      type: System.Byte[]
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Data.SqlTypes.SqlBytes.SqlBytes(System.Byte())
  name.vb: SqlBytes(Byte())
- uid: System.Data.SqlTypes.SqlBytes.#ctor(System.Data.SqlTypes.SqlBinary)
  commentId: M:System.Data.SqlTypes.SqlBytes.#ctor(System.Data.SqlTypes.SqlBinary)
  id: '#ctor(System.Data.SqlTypes.SqlBinary)'
  parent: System.Data.SqlTypes.SqlBytes
  langs:
  - csharp
  - vb
  name: SqlBytes(SqlBinary)
  fullName: System.Data.SqlTypes.SqlBytes.SqlBytes(System.Data.SqlTypes.SqlBinary)
  type: Constructor
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLBytes.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLBytes.cs
    startLine: 89
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Data.SqlTypes.SqlBytes\" data-throw-if-not-resolved=\"false\"></xref> class based on the specified <xref href=\"System.Data.SqlTypes.SqlBinary\" data-throw-if-not-resolved=\"false\"></xref> value.</p>\n"
  remarks: "\n<p>If a null reference is passed in, the instance is set to null.</p>\n"
  syntax:
    content: public SqlBytes(SqlBinary value)
    content.vb: Public Sub New(value As SqlBinary)
    parameters:
    - id: value
      type: System.Data.SqlTypes.SqlBinary
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Data.SqlTypes.SqlBytes.#ctor(System.IO.Stream)
  commentId: M:System.Data.SqlTypes.SqlBytes.#ctor(System.IO.Stream)
  id: '#ctor(System.IO.Stream)'
  parent: System.Data.SqlTypes.SqlBytes
  langs:
  - csharp
  - vb
  name: SqlBytes(Stream)
  fullName: System.Data.SqlTypes.SqlBytes.SqlBytes(System.IO.Stream)
  type: Constructor
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLBytes.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLBytes.cs
    startLine: 93
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Data.SqlTypes.SqlBytes\" data-throw-if-not-resolved=\"false\"></xref> class based on the specified <xref href=\"System.IO.Stream\" data-throw-if-not-resolved=\"false\"></xref> value.</p>\n"
  remarks: "\n<p>If a null reference is passed in, the instance is set to null.</p>\n"
  syntax:
    content: public SqlBytes(Stream s)
    content.vb: Public Sub New(s As Stream)
    parameters:
    - id: s
      type: System.IO.Stream
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Data.SqlTypes.SqlBytes.Buffer
  commentId: P:System.Data.SqlTypes.SqlBytes.Buffer
  id: Buffer
  parent: System.Data.SqlTypes.SqlBytes
  langs:
  - csharp
  - vb
  name: Buffer
  fullName: System.Data.SqlTypes.SqlBytes.Buffer
  type: Property
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLBytes.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Buffer
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLBytes.cs
    startLine: 123
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: "\n<p>Returns a reference to the internal buffer. </p>\n"
  remarks: "\n<p>Returns a null reference for null value <xref href=\"System.Data.SqlTypes.SqlBytes\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>Throws an <xref href=\"System.InvalidOperationException\" data-throw-if-not-resolved=\"false\"></xref> for stream-wrapped instances of <xref href=\"System.Data.SqlTypes.SqlBytes\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: public byte[] Buffer { get; }
    content.vb: Public ReadOnly Property Buffer As Byte()
    parameters: []
    return:
      type: System.Byte[]
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Data.SqlTypes.SqlBytes.IsNull
  commentId: P:System.Data.SqlTypes.SqlBytes.IsNull
  id: IsNull
  parent: System.Data.SqlTypes.SqlBytes
  langs:
  - csharp
  - vb
  name: IsNull
  fullName: System.Data.SqlTypes.SqlBytes.IsNull
  type: Property
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLBytes.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IsNull
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLBytes.cs
    startLine: 113
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: "\n<p>Gets a Boolean value that indicates whether this <xref href=\"System.Data.SqlTypes.SqlBytes\" data-throw-if-not-resolved=\"false\"></xref> is null.</p>\n"
  remarks: "\n<p>The default value is <strong>false</strong>.</p>\n"
  syntax:
    content: public bool IsNull { get; }
    content.vb: Public ReadOnly Property IsNull As Boolean
    parameters: []
    return:
      type: System.Boolean
  implements:
  - System.Data.SqlTypes.INullable.IsNull
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Data.SqlTypes.SqlBytes.Item(System.Int64)
  commentId: P:System.Data.SqlTypes.SqlBytes.Item(System.Int64)
  id: Item(System.Int64)
  parent: System.Data.SqlTypes.SqlBytes
  langs:
  - csharp
  - vb
  name: Item[Int64]
  fullName: System.Data.SqlTypes.SqlBytes.Item[System.Int64]
  type: Property
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLBytes.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: this[]
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLBytes.cs
    startLine: 205
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: "\n<p>Gets or sets the <xref href=\"System.Data.SqlTypes.SqlBytes\" data-throw-if-not-resolved=\"false\"></xref> instance at the specified index.</p>\n"
  syntax:
    content: public byte this[long offset] { get; set; }
    content.vb: Public Property Item(offset As Long) As Byte
    parameters:
    - id: offset
      type: System.Int64
    return:
      type: System.Byte
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: System.Data.SqlTypes.SqlBytes.Item(System.Int64)
  name.vb: Item(Int64)
- uid: System.Data.SqlTypes.SqlBytes.Length
  commentId: P:System.Data.SqlTypes.SqlBytes.Length
  id: Length
  parent: System.Data.SqlTypes.SqlBytes
  langs:
  - csharp
  - vb
  name: Length
  fullName: System.Data.SqlTypes.SqlBytes.Length
  type: Property
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLBytes.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Length
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLBytes.cs
    startLine: 136
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: "\n<p>Gets the length of the value that is contained in the <xref href=\"System.Data.SqlTypes.SqlBytes\" data-throw-if-not-resolved=\"false\"></xref> instance.</p>\n"
  remarks: "\n<p>The default value is 0.</p>\n"
  syntax:
    content: public long Length { get; }
    content.vb: Public ReadOnly Property Length As Long
    parameters: []
    return:
      type: System.Int64
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Data.SqlTypes.SqlBytes.MaxLength
  commentId: P:System.Data.SqlTypes.SqlBytes.MaxLength
  id: MaxLength
  parent: System.Data.SqlTypes.SqlBytes
  langs:
  - csharp
  - vb
  name: MaxLength
  fullName: System.Data.SqlTypes.SqlBytes.MaxLength
  type: Property
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLBytes.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: MaxLength
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLBytes.cs
    startLine: 158
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: "\n<p>Gets the maximum length of the value of the internal buffer of this <xref href=\"System.Data.SqlTypes.SqlBytes\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  remarks: "\n<p>The default value is 0.</p>\n"
  syntax:
    content: public long MaxLength { get; }
    content.vb: Public ReadOnly Property MaxLength As Long
    parameters: []
    return:
      type: System.Int64
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Data.SqlTypes.SqlBytes.Null
  commentId: P:System.Data.SqlTypes.SqlBytes.Null
  parent: System.Data.SqlTypes.SqlBytes
  langs:
  - csharp
  - vb
  fullName: System.Data.SqlTypes.SqlBytes.Null
  type: Property
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLBytes.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLBytes.cs
    startLine: 503
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: "\n<p>Returns a null instance of this <xref href=\"System.Data.SqlTypes.SqlBytes\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: public static SqlBytes Null { get; }
    content.vb: Public Shared ReadOnly Property Null As SqlBytes
    parameters: []
    return:
      type: System.Data.SqlTypes.SqlBytes
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: System.Data.SqlTypes.SqlBytes.Stream
  commentId: P:System.Data.SqlTypes.SqlBytes.Stream
  id: Stream
  parent: System.Data.SqlTypes.SqlBytes
  langs:
  - csharp
  - vb
  name: Stream
  fullName: System.Data.SqlTypes.SqlBytes.Stream
  type: Property
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLBytes.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Stream
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLBytes.cs
    startLine: 247
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: "\n<p>Gets or sets the data of this <xref href=\"System.Data.SqlTypes.SqlBytes\" data-throw-if-not-resolved=\"false\"></xref> as a stream.</p>\n"
  remarks: "\n<p>Getting or setting the <xref href=\"System.Data.SqlTypes.SqlBytes.Stream\" data-throw-if-not-resolved=\"false\"></xref> property loads all the data into memory. Using it with large value data can cause an <xref href=\"System.OutOfMemoryException\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: public Stream Stream { get; set; }
    content.vb: Public Property Stream As Stream
    parameters: []
    return:
      type: System.IO.Stream
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Data.SqlTypes.SqlBytes.Value
  commentId: P:System.Data.SqlTypes.SqlBytes.Value
  id: Value
  parent: System.Data.SqlTypes.SqlBytes
  langs:
  - csharp
  - vb
  name: Value
  fullName: System.Data.SqlTypes.SqlBytes.Value
  type: Property
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLBytes.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Value
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLBytes.cs
    startLine: 174
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: "\n<p>Returns a managed copy of the value held by this <xref href=\"System.Data.SqlTypes.SqlBytes\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  remarks: "\n<p>Returns a null reference for null value <xref href=\"System.Data.SqlTypes.SqlBytes\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: public byte[] Value { get; }
    content.vb: Public ReadOnly Property Value As Byte()
    parameters: []
    return:
      type: System.Byte[]
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Data.SqlTypes.SqlBytes.op_Explicit(System.Data.SqlTypes.SqlBinary)~System.Data.SqlTypes.SqlBytes
  commentId: M:System.Data.SqlTypes.SqlBytes.op_Explicit(System.Data.SqlTypes.SqlBinary)~System.Data.SqlTypes.SqlBytes
  id: op_Explicit(System.Data.SqlTypes.SqlBinary)~System.Data.SqlTypes.SqlBytes
  parent: System.Data.SqlTypes.SqlBytes
  langs:
  - csharp
  - vb
  name: Explicit(SqlBinary to SqlBytes)
  fullName: System.Data.SqlTypes.SqlBytes.Explicit(System.Data.SqlTypes.SqlBinary to System.Data.SqlTypes.SqlBytes)
  type: Operator
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLBytes.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_Explicit
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLBytes.cs
    startLine: 439
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: "\n<p>Converts a <xref href=\"System.Data.SqlTypes.SqlBinary\" data-throw-if-not-resolved=\"false\"></xref> structure to a <xref href=\"System.Data.SqlTypes.SqlBytes\" data-throw-if-not-resolved=\"false\"></xref> structure.</p>\n"
  syntax:
    content: public static explicit operator SqlBytes(SqlBinary value)
    content.vb: Public Shared Narrowing Operator CType(value As SqlBinary) As SqlBytes
    parameters:
    - id: value
      type: System.Data.SqlTypes.SqlBinary
    return:
      type: System.Data.SqlTypes.SqlBytes
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Data.SqlTypes.SqlBytes.Narrowing(System.Data.SqlTypes.SqlBinary to System.Data.SqlTypes.SqlBytes)
  name.vb: Narrowing(SqlBinary to SqlBytes)
- uid: System.Data.SqlTypes.SqlBytes.op_Explicit(System.Data.SqlTypes.SqlBytes)~System.Data.SqlTypes.SqlBinary
  commentId: M:System.Data.SqlTypes.SqlBytes.op_Explicit(System.Data.SqlTypes.SqlBytes)~System.Data.SqlTypes.SqlBinary
  id: op_Explicit(System.Data.SqlTypes.SqlBytes)~System.Data.SqlTypes.SqlBinary
  parent: System.Data.SqlTypes.SqlBytes
  langs:
  - csharp
  - vb
  name: Explicit(SqlBytes to SqlBinary)
  fullName: System.Data.SqlTypes.SqlBytes.Explicit(System.Data.SqlTypes.SqlBytes to System.Data.SqlTypes.SqlBinary)
  type: Operator
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLBytes.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_Explicit
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLBytes.cs
    startLine: 433
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: "\n<p>Converts a <xref href=\"System.Data.SqlTypes.SqlBytes\" data-throw-if-not-resolved=\"false\"></xref> structure to a <xref href=\"System.Data.SqlTypes.SqlBinary\" data-throw-if-not-resolved=\"false\"></xref> structure.</p>\n"
  syntax:
    content: public static explicit operator SqlBinary(SqlBytes value)
    content.vb: Public Shared Narrowing Operator CType(value As SqlBytes) As SqlBinary
    parameters:
    - id: value
      type: System.Data.SqlTypes.SqlBytes
    return:
      type: System.Data.SqlTypes.SqlBinary
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Data.SqlTypes.SqlBytes.Narrowing(System.Data.SqlTypes.SqlBytes to System.Data.SqlTypes.SqlBinary)
  name.vb: Narrowing(SqlBytes to SqlBinary)
- uid: System.Data.SqlTypes.SqlBytes.Read(System.Int64,System.Byte[],System.Int32,System.Int32)
  commentId: M:System.Data.SqlTypes.SqlBytes.Read(System.Int64,System.Byte[],System.Int32,System.Int32)
  id: Read(System.Int64,System.Byte[],System.Int32,System.Int32)
  parent: System.Data.SqlTypes.SqlBytes
  langs:
  - csharp
  - vb
  name: Read(Int64, Byte[], Int32, Int32)
  fullName: System.Data.SqlTypes.SqlBytes.Read(System.Int64, System.Byte[], System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLBytes.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Read
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLBytes.cs
    startLine: 310
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: "\n<p>Copies bytes from this <xref href=\"System.Data.SqlTypes.SqlBytes\" data-throw-if-not-resolved=\"false\"></xref> instance to the passed-in buffer and returns the number of copied bytes.</p>\n"
  remarks: "\n<p>If an attempt is made to read beyond <xref href=\"System.Data.SqlTypes.SqlBytes.MaxLength\" data-throw-if-not-resolved=\"false\"></xref>, an exception is thrown.</p>\n<p>If <em>count</em> specifies more bytes to be copied than are available from the <em>offset</em> to the end of the value, only the available bytes are copied.</p>\n<p>An exception is thrown if the destination buffer is a null reference.</p>\n<p>An exception is thrown if the destination buffer cannot receive as many characters as requested.</p>\n"
  syntax:
    content: public long Read(long offset, byte[] buffer, int offsetInBuffer, int count)
    content.vb: Public Function Read(offset As Long, buffer As Byte(), offsetInBuffer As Integer, count As Integer) As Long
    parameters:
    - id: offset
      type: System.Int64
    - id: buffer
      type: System.Byte[]
    - id: offsetInBuffer
      type: System.Int32
    - id: count
      type: System.Int32
    return:
      type: System.Int64
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Data.SqlTypes.SqlBytes.Read(System.Int64, System.Byte(), System.Int32, System.Int32)
  name.vb: Read(Int64, Byte(), Int32, Int32)
- uid: System.Data.SqlTypes.SqlBytes.SetLength(System.Int64)
  commentId: M:System.Data.SqlTypes.SqlBytes.SetLength(System.Int64)
  id: SetLength(System.Int64)
  parent: System.Data.SqlTypes.SqlBytes
  langs:
  - csharp
  - vb
  name: SetLength(Int64)
  fullName: System.Data.SqlTypes.SqlBytes.SetLength(System.Int64)
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLBytes.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: SetLength
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLBytes.cs
    startLine: 277
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: "\n<p>Sets the length of this <xref href=\"System.Data.SqlTypes.SqlBytes\" data-throw-if-not-resolved=\"false\"></xref> instance.</p>\n"
  remarks: "\n<p>This method will trigger an internal conversion to a managed buffer for an instance built on top of an unmanaged buffer.</p>\n"
  syntax:
    content: public void SetLength(long value)
    content.vb: Public Sub SetLength(value As Long)
    parameters:
    - id: value
      type: System.Int64
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Data.SqlTypes.SqlBytes.SetNull
  commentId: M:System.Data.SqlTypes.SqlBytes.SetNull
  id: SetNull
  parent: System.Data.SqlTypes.SqlBytes
  langs:
  - csharp
  - vb
  name: SetNull()
  fullName: System.Data.SqlTypes.SqlBytes.SetNull()
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLBytes.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: SetNull
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLBytes.cs
    startLine: 266
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: "\n<p>Sets this <xref href=\"System.Data.SqlTypes.SqlBytes\" data-throw-if-not-resolved=\"false\"></xref> instance to null.</p>\n"
  syntax:
    content: public void SetNull()
    content.vb: Public Sub SetNull
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Data.SqlTypes.SqlBytes.ToSqlBinary
  commentId: M:System.Data.SqlTypes.SqlBytes.ToSqlBinary
  id: ToSqlBinary
  parent: System.Data.SqlTypes.SqlBytes
  langs:
  - csharp
  - vb
  name: ToSqlBinary()
  fullName: System.Data.SqlTypes.SqlBytes.ToSqlBinary()
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLBytes.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ToSqlBinary
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLBytes.cs
    startLine: 423
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: "\n<p>Constructs and returns a <xref href=\"System.Data.SqlTypes.SqlBinary\" data-throw-if-not-resolved=\"false\"></xref> from this <xref href=\"System.Data.SqlTypes.SqlBytes\" data-throw-if-not-resolved=\"false\"></xref> instance.</p>\n"
  syntax:
    content: public SqlBinary ToSqlBinary()
    content.vb: Public Function ToSqlBinary As SqlBinary
    return:
      type: System.Data.SqlTypes.SqlBinary
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Data.SqlTypes.SqlBytes.Write(System.Int64,System.Byte[],System.Int32,System.Int32)
  commentId: M:System.Data.SqlTypes.SqlBytes.Write(System.Int64,System.Byte[],System.Int32,System.Int32)
  id: Write(System.Int64,System.Byte[],System.Int32,System.Int32)
  parent: System.Data.SqlTypes.SqlBytes
  langs:
  - csharp
  - vb
  name: Write(Int64, Byte[], Int32, Int32)
  fullName: System.Data.SqlTypes.SqlBytes.Write(System.Int64, System.Byte[], System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLBytes.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Write
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLBytes.cs
    startLine: 353
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: "\n<p>Copies bytes from the passed-in buffer to this <xref href=\"System.Data.SqlTypes.SqlBytes\" data-throw-if-not-resolved=\"false\"></xref> instance.</p>\n"
  remarks: "\n<p>If this operation writes to a position beyond <xref href=\"System.Data.SqlTypes.SqlBytes.Length\" data-throw-if-not-resolved=\"false\"></xref> but within <xref href=\"System.Data.SqlTypes.SqlBytes.MaxLength\" data-throw-if-not-resolved=\"false\"></xref>, <xref href=\"System.Data.SqlTypes.SqlBytes.Length\" data-throw-if-not-resolved=\"false\"></xref> is updated to reflect the new ending position.</p>\n<p>The value of <em>offsetInBuffer</em> must be less than or equal to <xref href=\"System.Data.SqlTypes.SqlBytes.Length\" data-throw-if-not-resolved=\"false\"></xref>. An exception is thrown otherwise. Only a value of 0 can be specified when writing to a null value instance.</p>\n<p>If an attempt is made to write beyond <xref href=\"System.Data.SqlTypes.SqlBytes.MaxLength\" data-throw-if-not-resolved=\"false\"></xref>, an exception is thrown.</p>\n"
  syntax:
    content: public void Write(long offset, byte[] buffer, int offsetInBuffer, int count)
    content.vb: Public Sub Write(offset As Long, buffer As Byte(), offsetInBuffer As Integer, count As Integer)
    parameters:
    - id: offset
      type: System.Int64
    - id: buffer
      type: System.Byte[]
    - id: offsetInBuffer
      type: System.Int32
    - id: count
      type: System.Int32
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Data.SqlTypes.SqlBytes.Write(System.Int64, System.Byte(), System.Int32, System.Int32)
  name.vb: Write(Int64, Byte(), Int32, Int32)
references:
- uid: System.Data.SqlTypes
  isExternal: false
  name: System.Data.SqlTypes
  fullName: System.Data.SqlTypes
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System.Data.SqlTypes.INullable
  parent: System.Data.SqlTypes
  isExternal: false
  name: INullable
  fullName: System.Data.SqlTypes.INullable
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Byte[]
  isExternal: true
  name: Byte[]
  fullName: System.Byte[]
  fullname.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    fullName: ()
- uid: System.Data.SqlTypes.SqlBinary
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlBinary
  fullName: System.Data.SqlTypes.SqlBinary
- uid: System.IO.Stream
  parent: System.IO
  isExternal: false
  name: Stream
  fullName: System.IO.Stream
- uid: System.IO
  isExternal: false
  name: System.IO
  fullName: System.IO
- uid: System.Data.SqlTypes.INullable.IsNull
  parent: System.Data.SqlTypes.INullable
  isExternal: false
  name: IsNull
  fullName: System.Data.SqlTypes.INullable.IsNull
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  fullName: System.Boolean
- uid: System.Int64
  parent: System
  isExternal: false
  name: Int64
  fullName: System.Int64
- uid: System.Byte
  parent: System
  isExternal: false
  name: Byte
  fullName: System.Byte
- uid: System.Data.SqlTypes.SqlBytes
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlBytes
  fullName: System.Data.SqlTypes.SqlBytes
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  fullName: System.Int32
