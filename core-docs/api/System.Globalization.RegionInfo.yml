items:
- uid: System.Globalization.RegionInfo
  commentId: T:System.Globalization.RegionInfo
  id: RegionInfo
  parent: System.Globalization
  children:
  - System.Globalization.RegionInfo.#ctor(System.String)
  - System.Globalization.RegionInfo.CurrencySymbol
  - System.Globalization.RegionInfo.CurrentRegion
  - System.Globalization.RegionInfo.DisplayName
  - System.Globalization.RegionInfo.EnglishName
  - System.Globalization.RegionInfo.Equals(System.Object)
  - System.Globalization.RegionInfo.GetHashCode
  - System.Globalization.RegionInfo.IsMetric
  - System.Globalization.RegionInfo.ISOCurrencySymbol
  - System.Globalization.RegionInfo.Name
  - System.Globalization.RegionInfo.NativeName
  - System.Globalization.RegionInfo.ToString
  - System.Globalization.RegionInfo.TwoLetterISORegionName
  langs:
  - csharp
  - vb
  name: RegionInfo
  fullName: System.Globalization.RegionInfo
  type: Class
  source:
    remote:
      path: src/System.Globalization/ref/System.Globalization.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: RegionInfo
    path: src/System.Globalization/ref/System.Globalization.cs
    startLine: 237
  assemblies:
  - System.Globalization
  namespace: System.Globalization
  summary: "\n<p>Contains information about the country/region.</p>\n"
  remarks: "\n<p>Unlike the <xref href=\"System.Globalization.CultureInfo\" data-throw-if-not-resolved=\"false\"></xref> class, the <xref href=\"System.Globalization.RegionInfo\" data-throw-if-not-resolved=\"false\"></xref> class does not represent user preferences and does not depend on the user's language or culture.</p>\n"
  example:
  - <p>The following example demonstrates several members of the <xref href="System.Globalization.RegionInfo" data-throw-if-not-resolved="false"></xref> class.</p>System.Globalization.RegionInfo#1
  syntax:
    content: 'public class RegionInfo : object'
    content.vb: >-
      Public Class RegionInfo
          Inherits Object
  seealso:
  - type: System.Globalization.CultureInfo
    commentId: T:System.Globalization.CultureInfo
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: System.Globalization.RegionInfo.#ctor(System.String)
  commentId: M:System.Globalization.RegionInfo.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Globalization.RegionInfo
  langs:
  - csharp
  - vb
  name: RegionInfo(String)
  fullName: System.Globalization.RegionInfo.RegionInfo(System.String)
  type: Constructor
  source:
    remote:
      path: src/System.Globalization/ref/System.Globalization.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Globalization/ref/System.Globalization.cs
    startLine: 239
  assemblies:
  - System.Globalization
  namespace: System.Globalization
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Globalization.RegionInfo\" data-throw-if-not-resolved=\"false\"></xref> class based on the country/region or specific culture, specified by name.</p>\n"
  remarks: "\n<p>The <em>name</em> parameter is either one of the codes defined for country/region, or a specific, custom, or Windows-only culture name. Case is not significant. However, the <xref href=\"System.Globalization.RegionInfo.Name\" data-throw-if-not-resolved=\"false\"></xref>, the <xref href=\"System.Globalization.RegionInfo.TwoLetterISORegionName\" data-throw-if-not-resolved=\"false\"></xref>, and the <xref href=\"System.Globalization.RegionInfo.ThreeLetterISORegionName\" data-throw-if-not-resolved=\"false\"></xref> properties return the specified code or culture name in uppercase. </p>\n<p>The predefined <xref href=\"System.Globalization.RegionInfo\" data-throw-if-not-resolved=\"false\"></xref> names are listed in <see href=\"http://go.microsoft.com/fwlink/?LinkId=190591\">Country names and code elements</see> on the ISO website. </p>\n<p>You should provide the name of a specific culture rather than just a country/region name in the <em>name</em> parameter. For example, en-US for English (United States) or es-US for Spanish (United States) is preferable to US because properties such as <xref href=\"System.Globalization.RegionInfo.NativeName\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"System.Globalization.RegionInfo.CurrencyNativeName\" data-throw-if-not-resolved=\"false\"></xref> reflect a specific language. az-Latn-AZ or az-Cyrl-AZ is preferable to AZ because properties such as <xref href=\"System.Globalization.RegionInfo.NativeName\" data-throw-if-not-resolved=\"false\"></xref>, <xref href=\"System.Globalization.RegionInfo.CurrencyNativeName\" data-throw-if-not-resolved=\"false\"></xref>, and <xref href=\"System.Globalization.RegionInfo.CurrencySymbol\" data-throw-if-not-resolved=\"false\"></xref> reflect a specific script.  The predefined culture names are listed in the <see href=\"http://go.microsoft.com/fwlink/?LinkId=200048\">National Language Support (NLS) API Reference</see> at the Go Global Developer Center. Note that a call to this constructor throws an <xref href=\"System.ArgumentException\" data-throw-if-not-resolved=\"false\"></xref> if <em>name</em> is a neutral culture (such as en for English). </p>\n"
  example:
  - "\n<p>The following code example compares two instances of <xref href=\"System.Globalization.RegionInfo\" data-throw-if-not-resolved=\"false\"></xref> that were created differently.</p>System.Globalization.RegionInfo_Equals#1<p>The following code example creates instances of <xref href=\"System.Globalization.RegionInfo\" data-throw-if-not-resolved=\"false\"></xref> using culture names.</p>System.Globalization.RegionInfo.ctorCultureName#1"
  syntax:
    content: public RegionInfo(string name)
    content.vb: Public Sub New(name As String)
    parameters:
    - id: name
      type: System.String
      description: "\n<p>A string that contains a two-letter code defined in ISO 3166 for country/region.</p>\n<p>-or-</p>\n<p>A string that contains the culture name for a specific culture, custom culture, or Windows-only culture. If the culture name is not in RFC 4646 format, your application should specify the entire culture name instead of just the country/region. </p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>name</em> is <strong>null</strong>.</p>\n"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<p>\n<em>name</em> is not a valid country/region name or specific culture name.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Globalization.RegionInfo.CurrencySymbol
  commentId: P:System.Globalization.RegionInfo.CurrencySymbol
  id: CurrencySymbol
  parent: System.Globalization.RegionInfo
  langs:
  - csharp
  - vb
  name: CurrencySymbol
  fullName: System.Globalization.RegionInfo.CurrencySymbol
  type: Property
  source:
    remote:
      path: src/System.Globalization/ref/System.Globalization.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CurrencySymbol
    path: src/System.Globalization/ref/System.Globalization.cs
    startLine: 240
  assemblies:
  - System.Globalization
  namespace: System.Globalization
  summary: "\n<p>Gets the currency symbol associated with the country/region.</p>\n"
  remarks: "\n<p>For example, the currency symbol for the United States is \"$\".</p>\n<p>If the current <xref href=\"System.Globalization.RegionInfo\" data-throw-if-not-resolved=\"false\"></xref> object is created with a specific culture and more than one language is used in the corresponding country/region, the <xref href=\"System.Globalization.RegionInfo.CurrencySymbol\" data-throw-if-not-resolved=\"false\"></xref> property returns the currency symbol associated with the specific culture.</p>\n"
  example:
  - "\n<p>The following code example displays the properties of the <xref href=\"System.Globalization.RegionInfo\" data-throw-if-not-resolved=\"false\"></xref> class.</p>System.Globalization.RegionInfo_Properties#1"
  syntax:
    content: public virtual string CurrencySymbol { get; }
    content.vb: Public Overridable ReadOnly Property CurrencySymbol As String
    parameters: []
    return:
      type: System.String
      description: "\n<p>The currency symbol associated with the country/region.</p>\n"
  seealso:
  - type: System.Globalization.RegionInfo.ISOCurrencySymbol
    commentId: P:System.Globalization.RegionInfo.ISOCurrencySymbol
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: System.Globalization.RegionInfo.CurrentRegion
  commentId: P:System.Globalization.RegionInfo.CurrentRegion
  id: CurrentRegion
  parent: System.Globalization.RegionInfo
  langs:
  - csharp
  - vb
  name: CurrentRegion
  fullName: System.Globalization.RegionInfo.CurrentRegion
  type: Property
  source:
    remote:
      path: src/System.Globalization/ref/System.Globalization.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CurrentRegion
    path: src/System.Globalization/ref/System.Globalization.cs
    startLine: 241
  assemblies:
  - System.Globalization
  namespace: System.Globalization
  summary: "\n<p>Gets the <xref href=\"System.Globalization.RegionInfo\" data-throw-if-not-resolved=\"false\"></xref> that represents the country/region used by the current thread.</p>\n"
  remarks: "\n<p>The value of this property is based on the culture selected through the regional and language options portion of Control Panel. However, that information can change during the life of the <xref href=\"System.AppDomain\" data-throw-if-not-resolved=\"false\"></xref>. The <xref href=\"System.Globalization.RegionInfo\" data-throw-if-not-resolved=\"false\"></xref> class does not automatically detect changes in the system settings, but the <xref href=\"System.Globalization.RegionInfo.CurrentRegion\" data-throw-if-not-resolved=\"false\"></xref> property is updated when you call the <xref href=\"System.Globalization.CultureInfo.ClearCachedData\" data-throw-if-not-resolved=\"false\"></xref> method.</p>\n"
  syntax:
    content: public static RegionInfo CurrentRegion { get; }
    content.vb: Public Shared ReadOnly Property CurrentRegion As RegionInfo
    parameters: []
    return:
      type: System.Globalization.RegionInfo
      description: "\n<p>The <xref href=\"System.Globalization.RegionInfo\" data-throw-if-not-resolved=\"false\"></xref> that represents the country/region used by the current thread.</p>\n"
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: System.Globalization.RegionInfo.DisplayName
  commentId: P:System.Globalization.RegionInfo.DisplayName
  id: DisplayName
  parent: System.Globalization.RegionInfo
  langs:
  - csharp
  - vb
  name: DisplayName
  fullName: System.Globalization.RegionInfo.DisplayName
  type: Property
  source:
    remote:
      path: src/System.Globalization/ref/System.Globalization.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: DisplayName
    path: src/System.Globalization/ref/System.Globalization.cs
    startLine: 242
  assemblies:
  - System.Globalization
  namespace: System.Globalization
  summary: "\n<p>Gets the full name of the country/region in the language of the localized version of .NET Framework.</p>\n"
  remarks: "\n<p>The <xref href=\"System.Globalization.RegionInfo.DisplayName\" data-throw-if-not-resolved=\"false\"></xref> property displays the country/region name in the language of the localized version of .NET Framework. For example, the <xref href=\"System.Globalization.RegionInfo.DisplayName\" data-throw-if-not-resolved=\"false\"></xref> property displays the country/region in English on the English version of the .NET Framework, and in Spanish on the Spanish version of the .NET Framework.</p>\n<p>The value of the <xref href=\"System.Globalization.RegionInfo.DisplayName\" data-throw-if-not-resolved=\"false\"></xref> property is taken from the resource files in the language of the current user interface culture, represented by <xref href=\"System.Globalization.CultureInfo.CurrentUICulture\" data-throw-if-not-resolved=\"false\"></xref>. Custom regions or those synthesized from the operating system might not have resource information, in which case the value for <xref href=\"System.Globalization.RegionInfo.DisplayName\" data-throw-if-not-resolved=\"false\"></xref> is the same as the value of the <xref href=\"System.Globalization.RegionInfo.NativeName\" data-throw-if-not-resolved=\"false\"></xref> property.</p>\n"
  example:
  - "\n<p>The following code example displays the properties of the <xref href=\"System.Globalization.RegionInfo\" data-throw-if-not-resolved=\"false\"></xref> class.</p>System.Globalization.RegionInfo_Properties#1"
  syntax:
    content: public virtual string DisplayName { get; }
    content.vb: Public Overridable ReadOnly Property DisplayName As String
    parameters: []
    return:
      type: System.String
      description: "\n<p>The full name of the country/region in the language of the localized version of .NET Framework.</p>\n"
  seealso:
  - type: System.Globalization.RegionInfo.Name
    commentId: P:System.Globalization.RegionInfo.Name
  - type: System.Globalization.RegionInfo.EnglishName
    commentId: P:System.Globalization.RegionInfo.EnglishName
  - type: System.Globalization.RegionInfo.TwoLetterISORegionName
    commentId: P:System.Globalization.RegionInfo.TwoLetterISORegionName
  - type: System.Globalization.RegionInfo.ThreeLetterISORegionName
    commentId: P:System.Globalization.RegionInfo.ThreeLetterISORegionName
  - type: System.Globalization.RegionInfo.ThreeLetterWindowsRegionName
    commentId: P:System.Globalization.RegionInfo.ThreeLetterWindowsRegionName
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: System.Globalization.RegionInfo.EnglishName
  commentId: P:System.Globalization.RegionInfo.EnglishName
  id: EnglishName
  parent: System.Globalization.RegionInfo
  langs:
  - csharp
  - vb
  name: EnglishName
  fullName: System.Globalization.RegionInfo.EnglishName
  type: Property
  source:
    remote:
      path: src/System.Globalization/ref/System.Globalization.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: EnglishName
    path: src/System.Globalization/ref/System.Globalization.cs
    startLine: 243
  assemblies:
  - System.Globalization
  namespace: System.Globalization
  summary: "\n<p>Gets the full name of the country/region in English.</p>\n"
  remarks: "\n<p>For example, a <xref href=\"System.Globalization.RegionInfo\" data-throw-if-not-resolved=\"false\"></xref> object created for the English (United States) culture displays \"United States\".</p>\n"
  example:
  - "\n<p>The following code example displays the properties of the <xref href=\"System.Globalization.RegionInfo\" data-throw-if-not-resolved=\"false\"></xref> class.</p>System.Globalization.RegionInfo_Properties#1"
  syntax:
    content: public virtual string EnglishName { get; }
    content.vb: Public Overridable ReadOnly Property EnglishName As String
    parameters: []
    return:
      type: System.String
      description: "\n<p>The full name of the country/region in English.</p>\n"
  seealso:
  - type: System.Globalization.RegionInfo.Name
    commentId: P:System.Globalization.RegionInfo.Name
  - type: System.Globalization.RegionInfo.DisplayName
    commentId: P:System.Globalization.RegionInfo.DisplayName
  - type: System.Globalization.RegionInfo.TwoLetterISORegionName
    commentId: P:System.Globalization.RegionInfo.TwoLetterISORegionName
  - type: System.Globalization.RegionInfo.ThreeLetterISORegionName
    commentId: P:System.Globalization.RegionInfo.ThreeLetterISORegionName
  - type: System.Globalization.RegionInfo.ThreeLetterWindowsRegionName
    commentId: P:System.Globalization.RegionInfo.ThreeLetterWindowsRegionName
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: System.Globalization.RegionInfo.IsMetric
  commentId: P:System.Globalization.RegionInfo.IsMetric
  id: IsMetric
  parent: System.Globalization.RegionInfo
  langs:
  - csharp
  - vb
  name: IsMetric
  fullName: System.Globalization.RegionInfo.IsMetric
  type: Property
  source:
    remote:
      path: src/System.Globalization/ref/System.Globalization.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IsMetric
    path: src/System.Globalization/ref/System.Globalization.cs
    startLine: 244
  assemblies:
  - System.Globalization
  namespace: System.Globalization
  summary: "\n<p>Gets a value indicating whether the country/region uses the metric system for measurements.</p>\n"
  example:
  - "\n<p>The following code example displays the properties of the <xref href=\"System.Globalization.RegionInfo\" data-throw-if-not-resolved=\"false\"></xref> class.</p>System.Globalization.RegionInfo_Properties#1"
  syntax:
    content: public virtual bool IsMetric { get; }
    content.vb: Public Overridable ReadOnly Property IsMetric As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if the country/region uses the metric system for measurements; otherwise, <strong>false</strong>.</p>\n"
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: System.Globalization.RegionInfo.ISOCurrencySymbol
  commentId: P:System.Globalization.RegionInfo.ISOCurrencySymbol
  id: ISOCurrencySymbol
  parent: System.Globalization.RegionInfo
  langs:
  - csharp
  - vb
  name: ISOCurrencySymbol
  fullName: System.Globalization.RegionInfo.ISOCurrencySymbol
  type: Property
  source:
    remote:
      path: src/System.Globalization/ref/System.Globalization.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ISOCurrencySymbol
    path: src/System.Globalization/ref/System.Globalization.cs
    startLine: 245
  assemblies:
  - System.Globalization
  namespace: System.Globalization
  summary: "\n<p>Gets the three-character ISO 4217 currency symbol associated with the country/region.</p>\n"
  remarks: "\n<p>The following example lists some of the ISO 4217 currency symbols returned by the <xref href=\"System.Globalization.RegionInfo.ISOCurrencySymbol\" data-throw-if-not-resolved=\"false\"></xref> property.</p>\n<p>Country/region </p>\n<p>Currency name </p>\n<p>ISO 4217 currency symbol </p>\n"
  example:
  - "\n<p>The following code example displays the properties of the <xref href=\"System.Globalization.RegionInfo\" data-throw-if-not-resolved=\"false\"></xref> class.</p>System.Globalization.RegionInfo_Properties#1"
  syntax:
    content: public virtual string ISOCurrencySymbol { get; }
    content.vb: Public Overridable ReadOnly Property ISOCurrencySymbol As String
    parameters: []
    return:
      type: System.String
      description: "\n<p>The three-character ISO 4217 currency symbol associated with the country/region.</p>\n"
  seealso:
  - type: System.Globalization.RegionInfo.CurrencySymbol
    commentId: P:System.Globalization.RegionInfo.CurrencySymbol
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: System.Globalization.RegionInfo.Name
  commentId: P:System.Globalization.RegionInfo.Name
  id: Name
  parent: System.Globalization.RegionInfo
  langs:
  - csharp
  - vb
  name: Name
  fullName: System.Globalization.RegionInfo.Name
  type: Property
  source:
    remote:
      path: src/System.Globalization/ref/System.Globalization.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Name
    path: src/System.Globalization/ref/System.Globalization.cs
    startLine: 246
  assemblies:
  - System.Globalization
  namespace: System.Globalization
  summary: "\n<p>Gets the name or ISO 3166 two-letter country/region code for the current <xref href=\"System.Globalization.RegionInfo\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  remarks: "\n<p>If the current <xref href=\"System.Globalization.RegionInfo\" data-throw-if-not-resolved=\"false\"></xref> object is created with the <xref href=\"System.Globalization.RegionInfo.#ctor(System.Int32)\" data-throw-if-not-resolved=\"false\"></xref> constructor that takes a culture identifier parameter, the <xref href=\"System.Globalization.RegionInfo.Name\" data-throw-if-not-resolved=\"false\"></xref> property value is one of the two-letter codes defined in ISO 3166 for the country/region and is formatted in uppercase. For example, the two-letter code for the United States is \"US\".</p>\n<p>If the current <xref href=\"System.Globalization.RegionInfo\" data-throw-if-not-resolved=\"false\"></xref> object is created with the <xref href=\"System.Globalization.RegionInfo.#ctor(System.String)\" data-throw-if-not-resolved=\"false\"></xref> constructor and is passed a full culture name such as \"en-US\", the <xref href=\"System.Globalization.RegionInfo.Name\" data-throw-if-not-resolved=\"false\"></xref> property value is a full culture name and not just the region name.</p>\n"
  example:
  - "\n<p>The following code example displays the properties of the <xref href=\"System.Globalization.RegionInfo\" data-throw-if-not-resolved=\"false\"></xref> class.</p>System.Globalization.RegionInfo_Properties#1"
  syntax:
    content: public virtual string Name { get; }
    content.vb: Public Overridable ReadOnly Property Name As String
    parameters: []
    return:
      type: System.String
      description: "\n<p>The value specified by the <em>name</em> parameter of the <xref href=\"System.Globalization.RegionInfo.#ctor(System.String)\" data-throw-if-not-resolved=\"false\"></xref> constructor. The return value is in uppercase.</p>\n<p>-or-</p>\n<p>The two-letter code defined in ISO 3166 for the country/region specified by the <em>culture</em> parameter of the <xref href=\"System.Globalization.RegionInfo.#ctor(System.Int32)\" data-throw-if-not-resolved=\"false\"></xref> constructor. The return value is in uppercase.</p>\n"
  seealso:
  - type: System.Globalization.RegionInfo.EnglishName
    commentId: P:System.Globalization.RegionInfo.EnglishName
  - type: System.Globalization.RegionInfo.DisplayName
    commentId: P:System.Globalization.RegionInfo.DisplayName
  - type: System.Globalization.RegionInfo.TwoLetterISORegionName
    commentId: P:System.Globalization.RegionInfo.TwoLetterISORegionName
  - type: System.Globalization.RegionInfo.ThreeLetterISORegionName
    commentId: P:System.Globalization.RegionInfo.ThreeLetterISORegionName
  - type: System.Globalization.RegionInfo.ThreeLetterWindowsRegionName
    commentId: P:System.Globalization.RegionInfo.ThreeLetterWindowsRegionName
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: System.Globalization.RegionInfo.NativeName
  commentId: P:System.Globalization.RegionInfo.NativeName
  id: NativeName
  parent: System.Globalization.RegionInfo
  langs:
  - csharp
  - vb
  name: NativeName
  fullName: System.Globalization.RegionInfo.NativeName
  type: Property
  source:
    remote:
      path: src/System.Globalization/ref/System.Globalization.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: NativeName
    path: src/System.Globalization/ref/System.Globalization.cs
    startLine: 247
  assemblies:
  - System.Globalization
  namespace: System.Globalization
  summary: "\n<p>Gets the name of a country/region formatted in the native language of the country/region.</p>\n"
  remarks: "\n<p>The <xref href=\"System.Globalization.RegionInfo.NativeName\" data-throw-if-not-resolved=\"false\"></xref> property retrieves a full culture name if the <strong>RegionInfo</strong> object is constructed using a full culture name.</p>\n<p>We recommend that you use the culture name—for example, \"en-US\" for English (United States)—to access the <xref href=\"System.Globalization.RegionInfo.NativeName\" data-throw-if-not-resolved=\"false\"></xref> property. The string used for this property depends on the language associated with the country/region. For example, the culture names en-US for English (United States) and es-US for Spanish (United States) can retrieve different values on Windows Vista. Therefore, creating the <strong>RegionInfo</strong> object with only a country/region name of US is not specific enough to distinguish the appropriate string.</p>\n"
  example:
  - "\n<p>The following code example demonstrates the <xref href=\"System.Globalization.RegionInfo.NativeName\" data-throw-if-not-resolved=\"false\"></xref> property.</p>sys.glob.regioninfo.rgn5props#1"
  syntax:
    content: public virtual string NativeName { get; }
    content.vb: Public Overridable ReadOnly Property NativeName As String
    parameters: []
    return:
      type: System.String
      description: "\n<p>The native name of the country/region formatted in the language associated with the ISO 3166 country/region code. </p>\n"
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: System.Globalization.RegionInfo.TwoLetterISORegionName
  commentId: P:System.Globalization.RegionInfo.TwoLetterISORegionName
  id: TwoLetterISORegionName
  parent: System.Globalization.RegionInfo
  langs:
  - csharp
  - vb
  name: TwoLetterISORegionName
  fullName: System.Globalization.RegionInfo.TwoLetterISORegionName
  type: Property
  source:
    remote:
      path: src/System.Globalization/ref/System.Globalization.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: TwoLetterISORegionName
    path: src/System.Globalization/ref/System.Globalization.cs
    startLine: 248
  assemblies:
  - System.Globalization
  namespace: System.Globalization
  summary: "\n<p>Gets the two-letter code defined in ISO 3166 for the country/region.</p>\n"
  remarks: "\n<p>The <xref href=\"System.Globalization.RegionInfo\" data-throw-if-not-resolved=\"false\"></xref> name is one of the two-letter codes defined in ISO 3166 for country/region. For example, the two-letter code for United States is \"US\".</p>\n<p>In some cases, the <xref href=\"System.Globalization.RegionInfo.TwoLetterISORegionName\" data-throw-if-not-resolved=\"false\"></xref> property may have more than two characters. For example, the value of the <xref href=\"System.Globalization.RegionInfo.TwoLetterISORegionName\" data-throw-if-not-resolved=\"false\"></xref> property for the Caribbean region is \"029\". </p>\n<p>Case is not significant. However, the <xref href=\"System.Globalization.RegionInfo.Name\" data-throw-if-not-resolved=\"false\"></xref>, the <xref href=\"System.Globalization.RegionInfo.TwoLetterISORegionName\" data-throw-if-not-resolved=\"false\"></xref>, and the <xref href=\"System.Globalization.RegionInfo.ThreeLetterISORegionName\" data-throw-if-not-resolved=\"false\"></xref> properties return the appropriate code in uppercase.</p>\n<p>If you want to persist a <xref href=\"System.Globalization.RegionInfo\" data-throw-if-not-resolved=\"false\"></xref> object or communicate it between processes, you should instantiate it by using a full culture name rather than a two-letter ISO region code. Because <xref href=\"System.Globalization.RegionInfo\" data-throw-if-not-resolved=\"false\"></xref> properties depend on script and language, instantiating a <xref href=\"System.Globalization.RegionInfo\" data-throw-if-not-resolved=\"false\"></xref> object by using only a region code loses context and data.</p>\n<p>The predefined <xref href=\"System.Globalization.RegionInfo\" data-throw-if-not-resolved=\"false\"></xref> names are listed in <see href=\"http://go.microsoft.com/fwlink/?LinkId=190591\">English country names and code elements</see> on the ISO website.</p>\n"
  example:
  - "\n<p>The following code example displays the properties of the <xref href=\"System.Globalization.RegionInfo\" data-throw-if-not-resolved=\"false\"></xref> class.</p>System.Globalization.RegionInfo_Properties#1"
  syntax:
    content: public virtual string TwoLetterISORegionName { get; }
    content.vb: Public Overridable ReadOnly Property TwoLetterISORegionName As String
    parameters: []
    return:
      type: System.String
      description: "\n<p>The two-letter code defined in ISO 3166 for the country/region.</p>\n"
  seealso:
  - type: System.Globalization.RegionInfo.Name
    commentId: P:System.Globalization.RegionInfo.Name
  - type: System.Globalization.RegionInfo.EnglishName
    commentId: P:System.Globalization.RegionInfo.EnglishName
  - type: System.Globalization.RegionInfo.DisplayName
    commentId: P:System.Globalization.RegionInfo.DisplayName
  - type: System.Globalization.RegionInfo.ThreeLetterISORegionName
    commentId: P:System.Globalization.RegionInfo.ThreeLetterISORegionName
  - type: System.Globalization.RegionInfo.ThreeLetterWindowsRegionName
    commentId: P:System.Globalization.RegionInfo.ThreeLetterWindowsRegionName
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: System.Globalization.RegionInfo.Equals(System.Object)
  commentId: M:System.Globalization.RegionInfo.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Globalization.RegionInfo
  langs:
  - csharp
  - vb
  name: Equals(Object)
  fullName: System.Globalization.RegionInfo.Equals(System.Object)
  type: Method
  source:
    remote:
      path: src/System.Globalization/ref/System.Globalization.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Equals
    path: src/System.Globalization/ref/System.Globalization.cs
    startLine: 249
  assemblies:
  - System.Globalization
  namespace: System.Globalization
  summary: "\n<p>Determines whether the specified object is the same instance as the current <xref href=\"System.Globalization.RegionInfo\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  remarks: "\n<p>This method overrides <xref href=\"System.Object.Equals(System.Object)\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  example:
  - "\n<p>The following code example compares two instances of <xref href=\"System.Globalization.RegionInfo\" data-throw-if-not-resolved=\"false\"></xref> that were created differently.</p>System.Globalization.RegionInfo_Equals#1"
  syntax:
    content: public override bool Equals(object value)
    content.vb: Public Overrides Function Equals(value As Object) As Boolean
    parameters:
    - id: value
      type: System.Object
      description: "\n<p>The object to compare with the current <xref href=\"System.Globalization.RegionInfo\" data-throw-if-not-resolved=\"false\"></xref>. </p>\n"
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if the <em>value</em> parameter is a <xref href=\"System.Globalization.RegionInfo\" data-throw-if-not-resolved=\"false\"></xref> object and its <xref href=\"System.Globalization.RegionInfo.Name\" data-throw-if-not-resolved=\"false\"></xref> property is the same as the <xref href=\"System.Globalization.RegionInfo.Name\" data-throw-if-not-resolved=\"false\"></xref> property of the current <xref href=\"System.Globalization.RegionInfo\" data-throw-if-not-resolved=\"false\"></xref> object; otherwise, <strong>false</strong>.</p>\n"
  seealso:
  - type: System.Object.Equals(System.Object)
    commentId: M:System.Object.Equals(System.Object)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Globalization.RegionInfo.GetHashCode
  commentId: M:System.Globalization.RegionInfo.GetHashCode
  id: GetHashCode
  parent: System.Globalization.RegionInfo
  langs:
  - csharp
  - vb
  name: GetHashCode()
  fullName: System.Globalization.RegionInfo.GetHashCode()
  type: Method
  source:
    remote:
      path: src/System.Globalization/ref/System.Globalization.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetHashCode
    path: src/System.Globalization/ref/System.Globalization.cs
    startLine: 250
  assemblies:
  - System.Globalization
  namespace: System.Globalization
  summary: "\n<p>Serves as a hash function for the current <xref href=\"System.Globalization.RegionInfo\" data-throw-if-not-resolved=\"false\"></xref>, suitable for hashing algorithms and data structures, such as a hash table.</p>\n"
  remarks: "\n<p>This method overrides <xref href=\"System.Object.GetHashCode\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>This method generates the same hash code for two objects that are equal according to the <xref href=\"System.Globalization.RegionInfo.Equals(System.Object)\" data-throw-if-not-resolved=\"false\"></xref> method.</p>\n"
  syntax:
    content: public override int GetHashCode()
    content.vb: Public Overrides Function GetHashCode As Integer
    return:
      type: System.Int32
      description: "\n<p>A hash code for the current <xref href=\"System.Globalization.RegionInfo\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  seealso:
  - type: System.Object.GetHashCode
    commentId: M:System.Object.GetHashCode
  - type: System.Collections.Hashtable
    commentId: T:System.Collections.Hashtable
  - type: System.Globalization.RegionInfo.Equals(System.Object)
    commentId: M:System.Globalization.RegionInfo.Equals(System.Object)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Globalization.RegionInfo.ToString
  commentId: M:System.Globalization.RegionInfo.ToString
  id: ToString
  parent: System.Globalization.RegionInfo
  langs:
  - csharp
  - vb
  name: ToString()
  fullName: System.Globalization.RegionInfo.ToString()
  type: Method
  source:
    remote:
      path: src/System.Globalization/ref/System.Globalization.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ToString
    path: src/System.Globalization/ref/System.Globalization.cs
    startLine: 251
  assemblies:
  - System.Globalization
  namespace: System.Globalization
  summary: "\n<p>Returns a string containing the culture name or ISO 3166 two-letter country/region codes specified for the current <xref href=\"System.Globalization.RegionInfo\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  remarks: "\n<p>This method overrides <xref href=\"System.Object.ToString\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>This method returns the value of the <xref href=\"System.Globalization.RegionInfo.Name\" data-throw-if-not-resolved=\"false\"></xref> property.</p>\n<p>Case is not significant. However, the <xref href=\"System.Globalization.RegionInfo.Name\" data-throw-if-not-resolved=\"false\"></xref>, the <xref href=\"System.Globalization.RegionInfo.TwoLetterISORegionName\" data-throw-if-not-resolved=\"false\"></xref>, and the <xref href=\"System.Globalization.RegionInfo.ThreeLetterISORegionName\" data-throw-if-not-resolved=\"false\"></xref> properties return the appropriate code in uppercase.</p>\n<p>The predefined <xref href=\"System.Globalization.RegionInfo\" data-throw-if-not-resolved=\"false\"></xref> names are listed in the <xref href=\"System.Globalization.RegionInfo\" data-throw-if-not-resolved=\"false\"></xref> class topic.</p>\n"
  syntax:
    content: public override string ToString()
    content.vb: Public Overrides Function ToString As String
    return:
      type: System.String
      description: "\n<p>A string containing the culture name or ISO 3166 two-letter country/region codes defined for the current <xref href=\"System.Globalization.RegionInfo\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  seealso:
  - type: System.Object.ToString
    commentId: M:System.Object.ToString
  - type: System.Globalization.RegionInfo.Name
    commentId: P:System.Globalization.RegionInfo.Name
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: System.Globalization
  isExternal: false
  name: System.Globalization
  fullName: System.Globalization
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.String
  parent: System
  isExternal: false
  name: String
  fullName: System.String
- uid: System.Globalization.RegionInfo
  parent: System.Globalization
  isExternal: false
  name: RegionInfo
  fullName: System.Globalization.RegionInfo
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  fullName: System.Boolean
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  fullName: System.Int32
- uid: System.ArgumentNullException
  isExternal: false
  name: ArgumentNullException
  fullName: System.ArgumentNullException
- uid: System.ArgumentException
  parent: System
  isExternal: false
  name: ArgumentException
  fullName: System.ArgumentException
