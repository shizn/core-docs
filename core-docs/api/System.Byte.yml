items:
- uid: System.Byte
  commentId: T:System.Byte
  id: Byte
  parent: System
  children:
  - System.Byte.CompareTo(System.Byte)
  - System.Byte.Equals(System.Byte)
  - System.Byte.Equals(System.Object)
  - System.Byte.GetHashCode
  - System.Byte.MaxValue
  - System.Byte.MinValue
  - System.Byte.Parse(System.String)
  - System.Byte.Parse(System.String,System.Globalization.NumberStyles)
  - System.Byte.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)
  - System.Byte.Parse(System.String,System.IFormatProvider)
  - System.Byte.System#IComparable#CompareTo(System.Object)
  - System.Byte.System#IConvertible#GetTypeCode
  - System.Byte.System#IConvertible#ToBoolean(System.IFormatProvider)
  - System.Byte.System#IConvertible#ToByte(System.IFormatProvider)
  - System.Byte.System#IConvertible#ToChar(System.IFormatProvider)
  - System.Byte.System#IConvertible#ToDateTime(System.IFormatProvider)
  - System.Byte.System#IConvertible#ToDecimal(System.IFormatProvider)
  - System.Byte.System#IConvertible#ToDouble(System.IFormatProvider)
  - System.Byte.System#IConvertible#ToInt16(System.IFormatProvider)
  - System.Byte.System#IConvertible#ToInt32(System.IFormatProvider)
  - System.Byte.System#IConvertible#ToInt64(System.IFormatProvider)
  - System.Byte.System#IConvertible#ToSByte(System.IFormatProvider)
  - System.Byte.System#IConvertible#ToSingle(System.IFormatProvider)
  - System.Byte.System#IConvertible#ToType(System.Type,System.IFormatProvider)
  - System.Byte.System#IConvertible#ToUInt16(System.IFormatProvider)
  - System.Byte.System#IConvertible#ToUInt32(System.IFormatProvider)
  - System.Byte.System#IConvertible#ToUInt64(System.IFormatProvider)
  - System.Byte.ToString
  - System.Byte.ToString(System.IFormatProvider)
  - System.Byte.ToString(System.String)
  - System.Byte.ToString(System.String,System.IFormatProvider)
  - System.Byte.TryParse(System.String,System.Byte@)
  - System.Byte.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Byte@)
  langs:
  - csharp
  - vb
  name: Byte
  fullName: System.Byte
  type: Struct
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Byte
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 283
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Represents an 8-bit unsigned integer.</p>\n"
  remarks: "\n<p>\n<xref href=\"System.Byte\" data-throw-if-not-resolved=\"false\"></xref> is an immutable value type that represents unsigned integers with values that range from 0 (which is represented by the <xref href=\"System.Byte.MinValue\" data-throw-if-not-resolved=\"false\"></xref> constant) to 255 (which is represented by the <xref href=\"System.Byte.MaxValue\" data-throw-if-not-resolved=\"false\"></xref> constant). The .NET Framework also includes a signed 8-bit integer value type, <xref href=\"System.SByte\" data-throw-if-not-resolved=\"false\"></xref>, which represents values that range from -128 to 127.</p>\n"
  example:
  - 
  syntax:
    content: >-
      [StructLayout(LayoutKind.Sequential)]

      public struct Byte : IComparable, IComparable<byte>, IConvertible, IEquatable<byte>, IFormattable
    content.vb: >-
      <StructLayout(LayoutKind.Sequential)>

      Public Structure Byte
          Implements IComparable, IComparable(Of Byte), IConvertible, IEquatable(Of Byte), IFormattable
  seealso:
  - type: System.SByte
    commentId: T:System.SByte
  - type: System.IComparable
    commentId: T:System.IComparable
  - type: System.IFormattable
    commentId: T:System.IFormattable
  - type: System.IConvertible
    commentId: T:System.IConvertible
  implements:
  - System.IComparable
  - System.IComparable{System.Byte}
  - System.IConvertible
  - System.IEquatable{System.Byte}
  - System.IFormattable
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.ReferenceEquals(System.Object,System.Object)
  attributes:
  - type: System.Runtime.InteropServices.StructLayoutAttribute
    ctor: System.Runtime.InteropServices.StructLayoutAttribute.#ctor(System.Runtime.InteropServices.LayoutKind)
    arguments:
    - type: System.Runtime.InteropServices.LayoutKind
      value: 0
  modifiers.csharp:
  - public
  - struct
  modifiers.vb:
  - Public
  - Structure
- uid: System.Byte.MaxValue
  commentId: F:System.Byte.MaxValue
  id: MaxValue
  parent: System.Byte
  langs:
  - csharp
  - vb
  name: MaxValue
  fullName: System.Byte.MaxValue
  type: Field
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: MaxValue
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 286
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Represents the largest possible value of a <xref href=\"System.Byte\" data-throw-if-not-resolved=\"false\"></xref>. This field is constant.</p>\n"
  remarks: "\n<p>The value of this constant is 255 (hexadecimal 0xFF).</p>\n"
  example:
  - "\n<p>The following example demonstrates how to use the <xref href=\"System.Byte.MaxValue\" data-throw-if-not-resolved=\"false\"></xref> field to screen variable inputs for values that are outside the range of possible byte values.</p>System.Byte Examples#1"
  syntax:
    content: public const byte MaxValue = 255
    content.vb: Public Const MaxValue As Byte = 255
    return:
      type: System.Byte
  seealso:
  - type: System.Byte.MinValue
    commentId: F:System.Byte.MinValue
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Byte.MinValue
  commentId: F:System.Byte.MinValue
  id: MinValue
  parent: System.Byte
  langs:
  - csharp
  - vb
  name: MinValue
  fullName: System.Byte.MinValue
  type: Field
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: MinValue
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 287
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Represents the smallest possible value of a <xref href=\"System.Byte\" data-throw-if-not-resolved=\"false\"></xref>. This field is constant.</p>\n"
  remarks: "\n<p>The value of this constant is 0.</p>\n"
  example:
  - "\n<p>The following example demonstrates how to use the <xref href=\"System.Byte.MinValue\" data-throw-if-not-resolved=\"false\"></xref> field to screen variable inputs for values that are outside the range of possible byte values.</p>System.Byte Examples#1"
  syntax:
    content: public const byte MinValue = 0
    content.vb: Public Const MinValue As Byte = 0
    return:
      type: System.Byte
  seealso:
  - type: System.Byte.MaxValue
    commentId: F:System.Byte.MaxValue
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Byte.CompareTo(System.Byte)
  commentId: M:System.Byte.CompareTo(System.Byte)
  id: CompareTo(System.Byte)
  parent: System.Byte
  langs:
  - csharp
  - vb
  name: CompareTo(Byte)
  fullName: System.Byte.CompareTo(System.Byte)
  type: Method
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CompareTo
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 288
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Compares this instance to a specified 8-bit unsigned integer and returns an indication of their relative values.</p>\n"
  remarks: "\n<p>This method implements the <xref href=\"System.IComparable`1\" data-throw-if-not-resolved=\"false\"></xref> interface and performs slightly better than the <xref href=\"System.Byte.CompareTo(System.Object)\" data-throw-if-not-resolved=\"false\"></xref> method because it does not have to convert the <em>value</em> parameter to an object.</p>\n<p>Depending on your programming language, it might be possible to code a <see cref=\"Overload:System.Byte.CompareTo\"></see> method where the parameter type has fewer bits (is narrower) than the instance type. This is possible because some programming languages perform an implicit widening conversion that represents the parameter as a type with as many bits as the instance.</p>\n<p>For example, suppose the instance type is <xref href=\"System.Int32\" data-throw-if-not-resolved=\"false\"></xref> and the parameter type is <xref href=\"System.Byte\" data-throw-if-not-resolved=\"false\"></xref>. The Microsoft C# compiler generates instructions to represent the value of the parameter as an <xref href=\"System.Int32\" data-throw-if-not-resolved=\"false\"></xref>, then generates a <xref href=\"System.Int32.CompareTo(System.Int32)\" data-throw-if-not-resolved=\"false\"></xref> method that compares the values of the <xref href=\"System.Int32\" data-throw-if-not-resolved=\"false\"></xref> instance and the <xref href=\"System.Int32\" data-throw-if-not-resolved=\"false\"></xref> parameter representation.</p>\n<p>Consult your programming language's documentation to determine whether its compiler performs implicit widening conversions on numeric types.</p>\n"
  example:
  - "\n<p>The following code example demonstrates generic and non-generic versions of the <strong>CompareTo</strong> method for several value and reference types.</p>T.CompareTo#1"
  syntax:
    content: public int CompareTo(byte value)
    content.vb: Public Function CompareTo(value As Byte) As Integer
    parameters:
    - id: value
      type: System.Byte
      description: "\n<p>An 8-bit unsigned integer to compare. </p>\n"
    return:
      type: System.Int32
      description: "\n<p>A signed integer that indicates the relative order of this instance and <em>value</em>.</p>\n<p>Return Value </p>\n<p>Description </p>\n<table><tbody><tr><td>\n<p>Less than zero </p>\n</td><td>\n<p>This instance is less than <em>value</em>. </p>\n</td></tr><tr><td>\n<p>Zero </p>\n</td><td>\n<p>This instance is equal to <em>value</em>. </p>\n</td></tr><tr><td>\n<p>Greater than zero </p>\n</td><td>\n<p>This instance is greater than <em>value</em>. </p>\n</td></tr></tbody></table>\n"
  seealso:
  - type: System.IComparable
    commentId: T:System.IComparable
  - type: System.Byte.Equals(System.Object)
    commentId: M:System.Byte.Equals(System.Object)
  implements:
  - System.IComparable{System.Byte}.CompareTo(System.Byte)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Byte.Equals(System.Byte)
  commentId: M:System.Byte.Equals(System.Byte)
  id: Equals(System.Byte)
  parent: System.Byte
  langs:
  - csharp
  - vb
  name: Equals(Byte)
  fullName: System.Byte.Equals(System.Byte)
  type: Method
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Equals
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 289
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Returns a value indicating whether this instance and a specified <xref href=\"System.Byte\" data-throw-if-not-resolved=\"false\"></xref> object represent the same value.</p>\n"
  remarks: "\n<p>This method implements the <xref href=\"System.IEquatable`1\" data-throw-if-not-resolved=\"false\"></xref> interface, and performs slightly better than <xref href=\"System.Byte.Equals(System.Object)\" data-throw-if-not-resolved=\"false\"></xref> because it does not have to convert the <em>obj</em> parameter to an object.</p>\n"
  example:
  - "\n<p>The following code example determines whether the first <xref href=\"System.Byte\" data-throw-if-not-resolved=\"false\"></xref> value is equal to the second <xref href=\"System.Byte\" data-throw-if-not-resolved=\"false\"></xref> value, and whether the first <xref href=\"System.Byte\" data-throw-if-not-resolved=\"false\"></xref> value is equal to the boxed version of the second <xref href=\"System.Byte\" data-throw-if-not-resolved=\"false\"></xref> value.</p>system.byte.equals#1"
  syntax:
    content: public bool Equals(byte obj)
    content.vb: Public Function Equals(obj As Byte) As Boolean
    parameters:
    - id: obj
      type: System.Byte
      description: "\n<p>An object to compare to this instance.</p>\n"
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if <em>obj</em> is equal to this instance; otherwise, <strong>false</strong>.</p>\n"
  seealso:
  - type: System.Byte.Equals(System.Object)
    commentId: M:System.Byte.Equals(System.Object)
  implements:
  - System.IEquatable{System.Byte}.Equals(System.Byte)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Byte.Equals(System.Object)
  commentId: M:System.Byte.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Byte
  langs:
  - csharp
  - vb
  name: Equals(Object)
  fullName: System.Byte.Equals(System.Object)
  type: Method
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Equals
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 290
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Returns a value indicating whether this instance is equal to a specified object.</p>\n"
  example:
  - "\n<p>The following code example determines whether the first <xref href=\"System.Byte\" data-throw-if-not-resolved=\"false\"></xref> value is equal to the second <xref href=\"System.Byte\" data-throw-if-not-resolved=\"false\"></xref> value, and whether the first <xref href=\"System.Byte\" data-throw-if-not-resolved=\"false\"></xref> value is equal to the boxed version of the second <xref href=\"System.Byte\" data-throw-if-not-resolved=\"false\"></xref> value.</p>system.byte.equals#1"
  syntax:
    content: public override bool Equals(object obj)
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
    parameters:
    - id: obj
      type: System.Object
      description: "\n<p>An object to compare with this instance, or <strong>null</strong>. </p>\n"
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if <em>obj</em> is an instance of <xref href=\"System.Byte\" data-throw-if-not-resolved=\"false\"></xref> and equals the value of this instance; otherwise, <strong>false</strong>.</p>\n"
  overridden: System.ValueType.Equals(System.Object)
  seealso:
  - type: System.Byte.CompareTo(System.Object)
    commentId: M:System.Byte.CompareTo(System.Object)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Byte.GetHashCode
  commentId: M:System.Byte.GetHashCode
  id: GetHashCode
  parent: System.Byte
  langs:
  - csharp
  - vb
  name: GetHashCode()
  fullName: System.Byte.GetHashCode()
  type: Method
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetHashCode
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 291
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Returns the hash code for this instance.</p>\n"
  syntax:
    content: public override int GetHashCode()
    content.vb: Public Overrides Function GetHashCode As Integer
    return:
      type: System.Int32
      description: "\n<p>A hash code for the current <xref href=\"System.Byte\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  overridden: System.ValueType.GetHashCode
  seealso:
  - type: System.Object.GetHashCode
    commentId: M:System.Object.GetHashCode
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Byte.Parse(System.String)
  commentId: M:System.Byte.Parse(System.String)
  id: Parse(System.String)
  parent: System.Byte
  langs:
  - csharp
  - vb
  name: Parse(String)
  fullName: System.Byte.Parse(System.String)
  type: Method
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Parse
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 292
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Converts the string representation of a number to its <xref href=\"System.Byte\" data-throw-if-not-resolved=\"false\"></xref> equivalent.</p>\n"
  remarks: "\n<p>The <em>s</em> parameter contains a number of the form: </p>\n<p>[ws][sign]digits[ws] </p>\n<p>Elements in square brackets ([ and ]) are optional. The following table describes each element.</p>\n<p>Element</p>\n<p>Description</p>\n<table><tbody><tr><td>\n<p>ws</p>\n</td><td>\n<p>Optional white space. </p>\n</td></tr><tr><td>\n<p>sign</p>\n</td><td>\n<p>An optional positive or negative sign. </p>\n</td></tr><tr><td>\n<p>digits</p>\n</td><td>\n<p>A sequence of digits ranging from 0 to 9. </p>\n</td></tr></tbody></table>\n<p>The <em>s</em> parameter is interpreted using the <xref href=\"System.Globalization.NumberStyles.Integer\" data-throw-if-not-resolved=\"false\"></xref> style. In addition to the byte value's decimal digits, only leading and trailing spaces together with a leading sign are allowed. (If the sign is present, it must be a positive sign or the method throws an <xref href=\"System.OverflowException\" data-throw-if-not-resolved=\"false\"></xref>.) To explicitly define the style elements that can be present in <em>s</em>, use either the <xref href=\"System.Byte.Parse(System.String,System.Globalization.NumberStyles)\" data-throw-if-not-resolved=\"false\"></xref> or the <xref href=\"System.Byte.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)\" data-throw-if-not-resolved=\"false\"></xref> method.</p>\n<p>The <em>s</em> parameter is parsed using the formatting information in a <xref href=\"System.Globalization.NumberFormatInfo\" data-throw-if-not-resolved=\"false\"></xref> object that is initialized for the current system culture. For more information, see <xref href=\"System.Globalization.NumberFormatInfo.CurrentInfo\" data-throw-if-not-resolved=\"false\"></xref>. To parse a string using the formatting information of some other culture, use the <xref href=\"System.Byte.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)\" data-throw-if-not-resolved=\"false\"></xref> method. </p>\n"
  example:
  - "\n<p>The following example demonstrates how to convert a string value into a byte value using the <xref href=\"System.Byte.Parse(System.String)\" data-throw-if-not-resolved=\"false\"></xref> method. The resulting byte value is then displayed to the console.</p>System.Byte.Parse#1"
  syntax:
    content: public static byte Parse(string s)
    content.vb: Public Shared Function Parse(s As String) As Byte
    parameters:
    - id: s
      type: System.String
      description: "\n<p>A string that contains a number to convert. The string is interpreted using the <xref href=\"System.Globalization.NumberStyles.Integer\" data-throw-if-not-resolved=\"false\"></xref> style. </p>\n"
    return:
      type: System.Byte
      description: "\n<p>A byte value that is equivalent to the number contained in <em>s</em>.</p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>s</em> is <strong>null</strong>. </p>\n"
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "\n<p>\n<em>s</em> is not of the correct format. </p>\n"
  - type: System.OverflowException
    commentId: T:System.OverflowException
    description: "\n<p>\n<em>s</em> represents a number less than <xref href=\"System.Byte.MinValue\" data-throw-if-not-resolved=\"false\"></xref> or greater than <xref href=\"System.Byte.MaxValue\" data-throw-if-not-resolved=\"false\"></xref>. </p>\n"
  seealso:
  - type: System.Byte.ToString
    commentId: M:System.Byte.ToString
  - type: System.Byte.MaxValue
    commentId: F:System.Byte.MaxValue
  - type: System.Byte.MinValue
    commentId: F:System.Byte.MinValue
  - type: System.Globalization.NumberStyles
    commentId: T:System.Globalization.NumberStyles
  - type: System.Globalization.NumberFormatInfo
    commentId: T:System.Globalization.NumberFormatInfo
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Byte.Parse(System.String,System.Globalization.NumberStyles)
  commentId: M:System.Byte.Parse(System.String,System.Globalization.NumberStyles)
  id: Parse(System.String,System.Globalization.NumberStyles)
  parent: System.Byte
  langs:
  - csharp
  - vb
  name: Parse(String, NumberStyles)
  fullName: System.Byte.Parse(System.String, System.Globalization.NumberStyles)
  type: Method
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Parse
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 293
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Converts the string representation of a number in a specified style to its <xref href=\"System.Byte\" data-throw-if-not-resolved=\"false\"></xref> equivalent.</p>\n"
  remarks: "\n<p>The <em>style</em> parameter defines the style elements (such as white space or the positive sign) that are allowed in the <em>s</em> parameter for the parse operation to succeed. It must be a combination of bit flags from the <xref href=\"System.Globalization.NumberStyles\" data-throw-if-not-resolved=\"false\"></xref> enumeration. Depending on the value of <em>style</em>, the <em>s</em> parameter may include the following elements: </p>\n<p>[ws][$][sign]digits[.fractional_digits][e[sign]digits][ws] </p>\n<p>Or, if <em>style</em> includes <xref href=\"System.Globalization.NumberStyles.AllowHexSpecifier\" data-throw-if-not-resolved=\"false\"></xref>:</p>\n<p>[ws]hexdigits[ws]</p>\n<p>Elements in square brackets ([ and ]) are optional. The following table describes each element.</p>\n<p>Element</p>\n<p>Description</p>\n<table><tbody><tr><td>\n<p>ws</p>\n</td><td>\n<p>Optional white space. White space can appear at the beginning of <em>s</em> if <em>style</em> includes the <xref href=\"System.Globalization.NumberStyles.AllowLeadingWhite\" data-throw-if-not-resolved=\"false\"></xref> flag, or at the end of s if style includes the <xref href=\"System.Globalization.NumberStyles.AllowTrailingWhite\" data-throw-if-not-resolved=\"false\"></xref> flag. </p>\n</td></tr><tr><td>\n<p>$</p>\n</td><td>\n<p>A culture-specific currency symbol. Its position in the string is defined by the <xref href=\"System.Globalization.NumberFormatInfo.CurrencyPositivePattern\" data-throw-if-not-resolved=\"false\"></xref> property of the current culture. The current culture's currency symbol can appear in <em>s</em> if <em>style</em> includes the <xref href=\"System.Globalization.NumberStyles.AllowCurrencySymbol\" data-throw-if-not-resolved=\"false\"></xref> flag.</p>\n</td></tr><tr><td>\n<p>sign</p>\n</td><td>\n<p>An optional positive sign. (The method throws an <xref href=\"System.OverflowException\" data-throw-if-not-resolved=\"false\"></xref> if a negative sign is present in <em>s</em>.) The sign can appear at the beginning of <em>s</em> if <em>style</em> includes the <xref href=\"System.Globalization.NumberStyles.AllowLeadingSign\" data-throw-if-not-resolved=\"false\"></xref> flag, or at the end of <em>s</em> if <em>style</em> includes the <xref href=\"System.Globalization.NumberStyles.AllowTrailingSign\" data-throw-if-not-resolved=\"false\"></xref> flag.</p>\n</td></tr><tr><td>\n<p>digits</p>\n</td><td>\n<p>A sequence of digits from 0 through 9. </p>\n</td></tr><tr><td>\n<p>.</p>\n</td><td>\n<p>A culture-specific decimal point symbol. The current culture's decimal point symbol can appear in <em>s</em> if <em>style</em> includes the <xref href=\"System.Globalization.NumberStyles.AllowDecimalPoint\" data-throw-if-not-resolved=\"false\"></xref> flag.</p>\n</td></tr><tr><td>\n<p>fractional_digits</p>\n</td><td>\n<p>One or more occurrences of the digit 0. Fractional digits can appear in <em>s</em> only if <em>style</em> includes the <xref href=\"System.Globalization.NumberStyles.AllowDecimalPoint\" data-throw-if-not-resolved=\"false\"></xref> flag.</p>\n</td></tr><tr><td>\n<p>e</p>\n</td><td>\n<p>The e or E character, which indicates that the value is represented in exponential notation. The <em>s</em> parameter can represent a number in exponential notation if <em>style</em> includes the <xref href=\"System.Globalization.NumberStyles.AllowExponent\" data-throw-if-not-resolved=\"false\"></xref> flag.</p>\n</td></tr><tr><td>\n<p>hexdigits</p>\n</td><td>\n<p>A sequence of hexadecimal digits from 0 through f, or 0 through F. </p>\n</td></tr></tbody></table>\n<p>A string with decimal digits only (which corresponds to the <xref href=\"System.Globalization.NumberStyles.None\" data-throw-if-not-resolved=\"false\"></xref> style) always parses successfully. Most of the remaining <xref href=\"System.Globalization.NumberStyles\" data-throw-if-not-resolved=\"false\"></xref> members control elements that may be but are not required to be present in this input string. The following table indicates how individual <xref href=\"System.Globalization.NumberStyles\" data-throw-if-not-resolved=\"false\"></xref> members affect the elements that may be present in <em>s</em>.</p>\n<p>Non-composite NumberStyles values</p>\n<p>Elements permitted in s in addition to digits</p>\n<table><tbody><tr><td>\n<p>\n<xref href=\"System.Globalization.NumberStyles.None\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td><td>\n<p>Decimal digits only.</p>\n</td></tr><tr><td>\n<p>\n<xref href=\"System.Globalization.NumberStyles.AllowDecimalPoint\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td><td>\n<p>The . and fractional_digits elements. However, fractional_digits must consist of only one or more 0 digits or an <xref href=\"System.OverflowException\" data-throw-if-not-resolved=\"false\"></xref> is thrown. </p>\n</td></tr><tr><td>\n<p>\n<xref href=\"System.Globalization.NumberStyles.AllowExponent\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td><td>\n<p>The <em>s</em> parameter can also use exponential notation. </p>\n</td></tr><tr><td>\n<p>\n<xref href=\"System.Globalization.NumberStyles.AllowLeadingWhite\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td><td>\n<p>The ws element at the beginning of <em>s</em>.</p>\n</td></tr><tr><td>\n<p>\n<xref href=\"System.Globalization.NumberStyles.AllowTrailingWhite\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td><td>\n<p>The ws element at the end of <em>s</em>.</p>\n</td></tr><tr><td>\n<p>\n<xref href=\"System.Globalization.NumberStyles.AllowLeadingSign\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td><td>\n<p>A positive sign can appear before digits.</p>\n</td></tr><tr><td>\n<p>\n<xref href=\"System.Globalization.NumberStyles.AllowTrailingSign\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td><td>\n<p>A positive sign can appear after digits.</p>\n</td></tr><tr><td>\n<p>\n<xref href=\"System.Globalization.NumberStyles.AllowParentheses\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td><td>\n<p>Although this flag is supported, the use of parentheses in <em>s</em> results in an <xref href=\"System.OverflowException\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n</td></tr><tr><td>\n<p>\n<xref href=\"System.Globalization.NumberStyles.AllowThousands\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td><td>\n<p>Although the group separator symbol can appear in <em>s</em>, it can be preceded by only one or more 0 digits. </p>\n</td></tr><tr><td>\n<p>\n<xref href=\"System.Globalization.NumberStyles.AllowCurrencySymbol\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td><td>\n<p>The $ element.</p>\n</td></tr></tbody></table>\n<p>If the <xref href=\"System.Globalization.NumberStyles.AllowHexSpecifier\" data-throw-if-not-resolved=\"false\"></xref> flag is used, <em>s</em> must be a hexadecimal value without a prefix. For example, \"F3\" parses successfully, but \"0xF3\" does not. The only other flags that can be combined with it are <xref href=\"System.Globalization.NumberStyles.AllowLeadingWhite\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"System.Globalization.NumberStyles.AllowTrailingWhite\" data-throw-if-not-resolved=\"false\"></xref>. (The <xref href=\"System.Globalization.NumberStyles\" data-throw-if-not-resolved=\"false\"></xref> enumeration includes a composite number style, <xref href=\"System.Globalization.NumberStyles.HexNumber\" data-throw-if-not-resolved=\"false\"></xref>, that includes both white space flags.)  </p>\n<p>The <em>s</em> parameter is parsed using the formatting information in a <xref href=\"System.Globalization.NumberFormatInfo\" data-throw-if-not-resolved=\"false\"></xref> object that is initialized for the current system culture. To use the formatting information of some other culture, call the <xref href=\"System.Byte.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)\" data-throw-if-not-resolved=\"false\"></xref> overload.</p>\n"
  example:
  - "\n<p>The following example parses string representations of <strong>Byte</strong> values with the <xref href=\"System.Byte.Parse(System.String,System.Globalization.NumberStyles)\" data-throw-if-not-resolved=\"false\"></xref> method. The current culture for the example is en-US.</p>System.Byte.Parse#3"
  syntax:
    content: public static byte Parse(string s, NumberStyles style)
    content.vb: Public Shared Function Parse(s As String, style As NumberStyles) As Byte
    parameters:
    - id: s
      type: System.String
      description: "\n<p>A string that contains a number to convert. The string is interpreted using the style specified by <em>style</em>. </p>\n"
    - id: style
      type: System.Globalization.NumberStyles
      description: "\n<p>A bitwise combination of enumeration values that indicates the style elements that can be present in <em>s</em>. A typical value to specify is <xref href=\"System.Globalization.NumberStyles.Integer\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
    return:
      type: System.Byte
      description: "\n<p>A byte value that is equivalent to the number contained in <em>s</em>.</p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>s</em> is <strong>null</strong>. </p>\n"
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "\n<p>\n<em>s</em> is not of the correct format. </p>\n"
  - type: System.OverflowException
    commentId: T:System.OverflowException
    description: "\n<p>\n<em>s</em> represents a number less than <xref href=\"System.Byte.MinValue\" data-throw-if-not-resolved=\"false\"></xref> or greater than <xref href=\"System.Byte.MaxValue\" data-throw-if-not-resolved=\"false\"></xref>. </p>\n<p>-or-</p>\n<p>\n<em>s</em> includes non-zero, fractional digits.</p>\n"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<p>\n<em>style</em> is not a <xref href=\"System.Globalization.NumberStyles\" data-throw-if-not-resolved=\"false\"></xref> value. </p>\n<p>-or-</p>\n<p>\n<em>style</em> is not a combination of <xref href=\"System.Globalization.NumberStyles.AllowHexSpecifier\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"System.Globalization.NumberStyles.HexNumber\" data-throw-if-not-resolved=\"false\"></xref> values.</p>\n"
  seealso:
  - type: System.Byte.ToString
    commentId: M:System.Byte.ToString
  - type: System.Byte.MaxValue
    commentId: F:System.Byte.MaxValue
  - type: System.Byte.MinValue
    commentId: F:System.Byte.MinValue
  - type: System.Globalization.NumberStyles
    commentId: T:System.Globalization.NumberStyles
  - type: System.Globalization.NumberFormatInfo
    commentId: T:System.Globalization.NumberFormatInfo
  - type: System.IFormatProvider
    commentId: T:System.IFormatProvider
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Byte.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)
  commentId: M:System.Byte.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)
  id: Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)
  parent: System.Byte
  langs:
  - csharp
  - vb
  name: Parse(String, NumberStyles, IFormatProvider)
  fullName: System.Byte.Parse(System.String, System.Globalization.NumberStyles, System.IFormatProvider)
  type: Method
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Parse
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 294
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Converts the string representation of a number in a specified style and culture-specific format to its <xref href=\"System.Byte\" data-throw-if-not-resolved=\"false\"></xref> equivalent.</p>\n"
  remarks: "\n<p>The <em>style</em> parameter defines the style elements (such as white space or the positive sign) that are allowed in the <em>s</em> parameter for the parse operation to succeed. It must be a combination of bit flags from the <xref href=\"System.Globalization.NumberStyles\" data-throw-if-not-resolved=\"false\"></xref> enumeration. Depending on the value of <em>style</em>, the <em>s</em> parameter may include the following elements: </p>\n<p>[ws][$][sign]digits[.fractional_digits][e[sign]digits][ws] </p>\n<p>Or, if the <em>style</em> parameter includes <xref href=\"System.Globalization.NumberStyles.AllowHexSpecifier\" data-throw-if-not-resolved=\"false\"></xref>:</p>\n<p>[ws]hexdigits[ws]</p>\n<p>Elements in square brackets ([ and ]) are optional. The following table describes each element.</p>\n<p>Element</p>\n<p>Description</p>\n<table><tbody><tr><td>\n<p>ws</p>\n</td><td>\n<p>Optional white space. White space can appear at the beginning of <em>s</em> if <em>style</em> includes the <xref href=\"System.Globalization.NumberStyles.AllowLeadingWhite\" data-throw-if-not-resolved=\"false\"></xref> flag, or at the end of <em>s</em> if <em>style</em> includes the <xref href=\"System.Globalization.NumberStyles.AllowTrailingWhite\" data-throw-if-not-resolved=\"false\"></xref> flag.</p>\n</td></tr><tr><td>\n<p>$</p>\n</td><td>\n<p>A culture-specific currency symbol. Its position in the string is defined by the <xref href=\"System.Globalization.NumberFormatInfo.CurrencyPositivePattern\" data-throw-if-not-resolved=\"false\"></xref> property of the <xref href=\"System.Globalization.NumberFormatInfo\" data-throw-if-not-resolved=\"false\"></xref> object returned by the <xref href=\"System.IFormatProvider.GetFormat(System.Type)\" data-throw-if-not-resolved=\"false\"></xref> method of the <em>provider</em> parameter. The currency symbol can appear in <em>s</em> if <em>style</em> includes the <xref href=\"System.Globalization.NumberStyles.AllowCurrencySymbol\" data-throw-if-not-resolved=\"false\"></xref> flag.</p>\n</td></tr><tr><td>\n<p>sign</p>\n</td><td>\n<p>An optional positive sign. (The method throws an <xref href=\"System.OverflowException\" data-throw-if-not-resolved=\"false\"></xref> if a negative sign is present in <em>s</em>.) The sign can appear at the beginning of <em>s</em> if <em>style</em> includes the <xref href=\"System.Globalization.NumberStyles.AllowLeadingSign\" data-throw-if-not-resolved=\"false\"></xref> flag, or at the end of <em>s</em> if <em>style</em> includes the <xref href=\"System.Globalization.NumberStyles.AllowTrailingSign\" data-throw-if-not-resolved=\"false\"></xref> flag. </p>\n</td></tr><tr><td>\n<p>digits</p>\n</td><td>\n<p>A sequence of digits from 0 through 9. </p>\n</td></tr><tr><td>\n<p>.</p>\n</td><td>\n<p>A culture-specific decimal point symbol. The decimal point symbol of the culture specified by <em>provider</em> can appear in <em>s</em> if <em>style</em> includes the <xref href=\"System.Globalization.NumberStyles.AllowDecimalPoint\" data-throw-if-not-resolved=\"false\"></xref> flag.</p>\n</td></tr><tr><td>\n<p>fractional_digits</p>\n</td><td>\n<p>One or more occurrences of the digit 0. Fractional digits can appear in <em>s</em> only if <em>style</em> includes the <xref href=\"System.Globalization.NumberStyles.AllowDecimalPoint\" data-throw-if-not-resolved=\"false\"></xref> flag.</p>\n</td></tr><tr><td>\n<p>e</p>\n</td><td>\n<p>The e or E character, which indicates that the value is represented in exponential notation. The s parameter can represent a number in exponential notation if <em>style</em> includes the <xref href=\"System.Globalization.NumberStyles.AllowExponent\" data-throw-if-not-resolved=\"false\"></xref> flag.</p>\n</td></tr><tr><td>\n<p>hexdigits</p>\n</td><td>\n<p>A sequence of hexadecimal digits from 0 through f, or 0 through F. </p>\n</td></tr></tbody></table>\n<p>A string with decimal digits only (which corresponds to the <xref href=\"System.Globalization.NumberStyles.None\" data-throw-if-not-resolved=\"false\"></xref> style) always parses successfully. Most of the remaining <xref href=\"System.Globalization.NumberStyles\" data-throw-if-not-resolved=\"false\"></xref> members control elements that may be but are not required to be present in this input string. The following table indicates how individual <xref href=\"System.Globalization.NumberStyles\" data-throw-if-not-resolved=\"false\"></xref> members affect the elements that may be present in <em>s</em>.</p>\n<p>Non-composite NumberStyles values</p>\n<p>Elements permitted in s in addition to digits</p>\n<table><tbody><tr><td>\n<p>\n<xref href=\"System.Globalization.NumberStyles.None\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td><td>\n<p>Decimal digits only.</p>\n</td></tr><tr><td>\n<p>\n<xref href=\"System.Globalization.NumberStyles.AllowDecimalPoint\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td><td>\n<p>The . and fractional_digits elements. However, fractional_digits must consist of only one or more 0 digits or an <xref href=\"System.OverflowException\" data-throw-if-not-resolved=\"false\"></xref> is thrown. </p>\n</td></tr><tr><td>\n<p>\n<xref href=\"System.Globalization.NumberStyles.AllowExponent\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td><td>\n<p>The <em>s</em> parameter can also use exponential notation.</p>\n</td></tr><tr><td>\n<p>\n<xref href=\"System.Globalization.NumberStyles.AllowLeadingWhite\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td><td>\n<p>The ws element at the beginning of <em>s</em>.</p>\n</td></tr><tr><td>\n<p>\n<xref href=\"System.Globalization.NumberStyles.AllowTrailingWhite\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td><td>\n<p>The ws element at the end of <em>s</em>.</p>\n</td></tr><tr><td>\n<p>\n<xref href=\"System.Globalization.NumberStyles.AllowLeadingSign\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td><td>\n<p>A positive sign can appear before digits.</p>\n</td></tr><tr><td>\n<p>\n<xref href=\"System.Globalization.NumberStyles.AllowTrailingSign\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td><td>\n<p>A positive sign can appear after digits.</p>\n</td></tr><tr><td>\n<p>\n<xref href=\"System.Globalization.NumberStyles.AllowParentheses\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td><td>\n<p>Although this flag is supported, the use of parentheses in <em>s</em> results in an <xref href=\"System.OverflowException\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n</td></tr><tr><td>\n<p>\n<xref href=\"System.Globalization.NumberStyles.AllowThousands\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td><td>\n<p>Although the group separator symbol can appear in <em>s</em>, it can be preceded by only one or more 0 digits. </p>\n</td></tr><tr><td>\n<p>\n<xref href=\"System.Globalization.NumberStyles.AllowCurrencySymbol\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td><td>\n<p>The $ element.</p>\n</td></tr></tbody></table>\n<p>If the <xref href=\"System.Globalization.NumberStyles.AllowHexSpecifier\" data-throw-if-not-resolved=\"false\"></xref> flag is used, <em>s</em> must be a hexadecimal value without a prefix. For example, \"F3\" parses successfully, but \"0xF3\" does not. The only other flags that can be present in <em>style</em> are <xref href=\"System.Globalization.NumberStyles.AllowLeadingWhite\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"System.Globalization.NumberStyles.AllowTrailingWhite\" data-throw-if-not-resolved=\"false\"></xref>. (The <xref href=\"System.Globalization.NumberStyles\" data-throw-if-not-resolved=\"false\"></xref> enumeration has a composite number style, <xref href=\"System.Globalization.NumberStyles.HexNumber\" data-throw-if-not-resolved=\"false\"></xref>, that includes both white space flags.)</p>\n<p>The <em>provider</em> parameter is an <xref href=\"System.IFormatProvider\" data-throw-if-not-resolved=\"false\"></xref> implementation, such as a <xref href=\"System.Globalization.NumberFormatInfo\" data-throw-if-not-resolved=\"false\"></xref> or <xref href=\"System.Globalization.CultureInfo\" data-throw-if-not-resolved=\"false\"></xref> object. The <em>provider</em> parameter supplies culture-specific information used in parsing. If <em>provider</em> is <strong>null</strong>, the thread current culture is used.</p>\n"
  example:
  - "\n<p>The following code example parses string representations of <strong>Byte</strong> values with this overload of the <xref href=\"System.Byte.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)\" data-throw-if-not-resolved=\"false\"></xref> method.</p>System.Byte.Parse#4"
  syntax:
    content: public static byte Parse(string s, NumberStyles style, IFormatProvider provider)
    content.vb: Public Shared Function Parse(s As String, style As NumberStyles, provider As IFormatProvider) As Byte
    parameters:
    - id: s
      type: System.String
      description: "\n<p>A string that contains a number to convert. The string is interpreted using the style specified by <em>style</em>. </p>\n"
    - id: style
      type: System.Globalization.NumberStyles
      description: "\n<p>A bitwise combination of enumeration values that indicates the style elements that can be present in <em>s</em>. A typical value to specify is <xref href=\"System.Globalization.NumberStyles.Integer\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
    - id: provider
      type: System.IFormatProvider
      description: "\n<p>An object that supplies culture-specific information about the format of <em>s</em>. If <em>provider</em> is <strong>null</strong>, the thread current culture is used. </p>\n"
    return:
      type: System.Byte
      description: "\n<p>A byte value that is equivalent to the number contained in <em>s</em>.</p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>s</em> is <strong>null</strong>. </p>\n"
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "\n<p>\n<em>s</em> is not of the correct format. </p>\n"
  - type: System.OverflowException
    commentId: T:System.OverflowException
    description: "\n<p>\n<em>s</em> represents a number less than <xref href=\"System.Byte.MinValue\" data-throw-if-not-resolved=\"false\"></xref> or greater than <xref href=\"System.Byte.MaxValue\" data-throw-if-not-resolved=\"false\"></xref>. </p>\n<p>-or-</p>\n<p>\n<em>s</em> includes non-zero, fractional digits.</p>\n"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<p>\n<em>style</em> is not a <xref href=\"System.Globalization.NumberStyles\" data-throw-if-not-resolved=\"false\"></xref> value. </p>\n<p>-or-</p>\n<p>\n<em>style</em> is not a combination of <xref href=\"System.Globalization.NumberStyles.AllowHexSpecifier\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"System.Globalization.NumberStyles.HexNumber\" data-throw-if-not-resolved=\"false\"></xref> values.</p>\n"
  seealso:
  - type: System.Byte.ToString
    commentId: M:System.Byte.ToString
  - type: System.Byte.MaxValue
    commentId: F:System.Byte.MaxValue
  - type: System.Byte.MinValue
    commentId: F:System.Byte.MinValue
  - type: System.Globalization.NumberStyles
    commentId: T:System.Globalization.NumberStyles
  - type: System.Globalization.NumberFormatInfo
    commentId: T:System.Globalization.NumberFormatInfo
  - type: System.IFormatProvider
    commentId: T:System.IFormatProvider
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Byte.Parse(System.String,System.IFormatProvider)
  commentId: M:System.Byte.Parse(System.String,System.IFormatProvider)
  id: Parse(System.String,System.IFormatProvider)
  parent: System.Byte
  langs:
  - csharp
  - vb
  name: Parse(String, IFormatProvider)
  fullName: System.Byte.Parse(System.String, System.IFormatProvider)
  type: Method
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Parse
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 295
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Converts the string representation of a number in a specified culture-specific format to its <xref href=\"System.Byte\" data-throw-if-not-resolved=\"false\"></xref> equivalent.</p>\n"
  remarks: "\n<p>The <em>s</em> parameter contains a number of the form: </p>\n<p>[ws][sign]digits[ws] </p>\n<p>Elements in square brackets ([ and ]) are optional. The following table describes each element.</p>\n<p>Element</p>\n<p>Description</p>\n<table><tbody><tr><td>\n<p>ws</p>\n</td><td>\n<p>Optional white space. </p>\n</td></tr><tr><td>\n<p>sign</p>\n</td><td>\n<p>An optional positive sign. </p>\n</td></tr><tr><td>\n<p>digits</p>\n</td><td>\n<p>A sequence of digits ranging from 0 to 9. </p>\n</td></tr></tbody></table>\n<p>The <em>s</em> parameter is interpreted using the <xref href=\"System.Globalization.NumberStyles.Integer\" data-throw-if-not-resolved=\"false\"></xref> style. In addition to the byte value's decimal digits, only leading and trailing spaces together with a leading sign are allowed. (If the sign is present, it must be a positive sign or the method throws an <xref href=\"System.OverflowException\" data-throw-if-not-resolved=\"false\"></xref>.) To explicitly define the style elements together with the culture-specific formatting information that can be present in <em>s</em>, use the <xref href=\"System.Byte.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)\" data-throw-if-not-resolved=\"false\"></xref> method.</p>\n<p>The <em>s</em> parameter is parsed using the formatting information in a <xref href=\"System.Globalization.NumberFormatInfo\" data-throw-if-not-resolved=\"false\"></xref> object supplied by <em>provider</em>. The <em>provider</em> parameter is an <xref href=\"System.IFormatProvider\" data-throw-if-not-resolved=\"false\"></xref> implementation such as a <xref href=\"System.Globalization.NumberFormatInfo\" data-throw-if-not-resolved=\"false\"></xref> or <xref href=\"System.Globalization.CultureInfo\" data-throw-if-not-resolved=\"false\"></xref> object. The <em>provider</em> parameter supplies culture-specific information used in parsing. If <em>provider</em> is <strong>null</strong>, the thread current culture is used.</p>\n"
  example:
  - "\n<p>The following example parses string representations of <strong>Byte</strong> values with the <xref href=\"System.Byte.Parse(System.String,System.IFormatProvider)\" data-throw-if-not-resolved=\"false\"></xref> method.</p>System.Byte.Parse#2"
  syntax:
    content: public static byte Parse(string s, IFormatProvider provider)
    content.vb: Public Shared Function Parse(s As String, provider As IFormatProvider) As Byte
    parameters:
    - id: s
      type: System.String
      description: "\n<p>A string that contains a number to convert. The string is interpreted using the <xref href=\"System.Globalization.NumberStyles.Integer\" data-throw-if-not-resolved=\"false\"></xref> style. </p>\n"
    - id: provider
      type: System.IFormatProvider
      description: "\n<p>An object that supplies culture-specific parsing information about <em>s</em>. If <em>provider</em> is <strong>null</strong>, the thread current culture is used. </p>\n"
    return:
      type: System.Byte
      description: "\n<p>A byte value that is equivalent to the number contained in <em>s</em>.</p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>s</em> is <strong>null</strong>. </p>\n"
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "\n<p>\n<em>s</em> is not of the correct format. </p>\n"
  - type: System.OverflowException
    commentId: T:System.OverflowException
    description: "\n<p>\n<em>s</em> represents a number less than <xref href=\"System.Byte.MinValue\" data-throw-if-not-resolved=\"false\"></xref> or greater than <xref href=\"System.Byte.MaxValue\" data-throw-if-not-resolved=\"false\"></xref>. </p>\n"
  seealso:
  - type: System.Byte.ToString
    commentId: M:System.Byte.ToString
  - type: System.Byte.MaxValue
    commentId: F:System.Byte.MaxValue
  - type: System.Byte.MinValue
    commentId: F:System.Byte.MinValue
  - type: System.Globalization.NumberStyles
    commentId: T:System.Globalization.NumberStyles
  - type: System.Globalization.NumberFormatInfo
    commentId: T:System.Globalization.NumberFormatInfo
  - type: System.IFormatProvider
    commentId: T:System.IFormatProvider
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Byte.System#IComparable#CompareTo(System.Object)
  commentId: M:System.Byte.System#IComparable#CompareTo(System.Object)
  id: System#IComparable#CompareTo(System.Object)
  isEii: true
  parent: System.Byte
  langs:
  - csharp
  - vb
  name: IComparable.CompareTo(Object)
  fullName: System.Byte.System.IComparable.CompareTo(System.Object)
  type: Method
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: System.IComparable.CompareTo
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 296
  assemblies:
  - System.Runtime
  namespace: System
  syntax:
    content: int IComparable.CompareTo(object value)
    content.vb: Function System.IComparable.CompareTo(value As Object) As Integer Implements IComparable.CompareTo
    parameters:
    - id: value
      type: System.Object
    return:
      type: System.Int32
  implements:
  - System.IComparable.CompareTo(System.Object)
  name.vb: System.IComparable.CompareTo(Object)
- uid: System.Byte.System#IConvertible#GetTypeCode
  commentId: M:System.Byte.System#IConvertible#GetTypeCode
  id: System#IConvertible#GetTypeCode
  isEii: true
  parent: System.Byte
  langs:
  - csharp
  - vb
  name: IConvertible.GetTypeCode()
  fullName: System.Byte.System.IConvertible.GetTypeCode()
  type: Method
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: System.IConvertible.GetTypeCode
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 297
  assemblies:
  - System.Runtime
  namespace: System
  syntax:
    content: TypeCode IConvertible.GetTypeCode()
    content.vb: Function System.IConvertible.GetTypeCode As TypeCode Implements IConvertible.GetTypeCode
    return:
      type: System.TypeCode
  implements:
  - System.IConvertible.GetTypeCode
  name.vb: System.IConvertible.GetTypeCode()
- uid: System.Byte.System#IConvertible#ToBoolean(System.IFormatProvider)
  commentId: M:System.Byte.System#IConvertible#ToBoolean(System.IFormatProvider)
  id: System#IConvertible#ToBoolean(System.IFormatProvider)
  isEii: true
  parent: System.Byte
  langs:
  - csharp
  - vb
  name: IConvertible.ToBoolean(IFormatProvider)
  fullName: System.Byte.System.IConvertible.ToBoolean(System.IFormatProvider)
  type: Method
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: System.IConvertible.ToBoolean
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 298
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>For a description of this member, see <xref href=\"System.IConvertible.ToBoolean(System.IFormatProvider)\" data-throw-if-not-resolved=\"false\"></xref>. </p>\n"
  remarks: "\n<p>This member is an explicit interface member implementation. It can be used only when the <xref href=\"System.Byte\" data-throw-if-not-resolved=\"false\"></xref> instance is cast to an <xref href=\"System.IConvertible\" data-throw-if-not-resolved=\"false\"></xref> interface. The recommended alternative is to call the <xref href=\"System.Convert.ToBoolean(System.Byte)\" data-throw-if-not-resolved=\"false\"></xref> method.</p>\n"
  syntax:
    content: bool IConvertible.ToBoolean(IFormatProvider provider)
    content.vb: Function System.IConvertible.ToBoolean(provider As IFormatProvider) As Boolean Implements IConvertible.ToBoolean
    parameters:
    - id: provider
      type: System.IFormatProvider
      description: "\n<p>This parameter is ignored.</p>\n"
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if the value of the current instance is not zero; otherwise, <strong>false</strong>.</p>\n"
  implements:
  - System.IConvertible.ToBoolean(System.IFormatProvider)
  name.vb: System.IConvertible.ToBoolean(IFormatProvider)
- uid: System.Byte.System#IConvertible#ToByte(System.IFormatProvider)
  commentId: M:System.Byte.System#IConvertible#ToByte(System.IFormatProvider)
  id: System#IConvertible#ToByte(System.IFormatProvider)
  isEii: true
  parent: System.Byte
  langs:
  - csharp
  - vb
  name: IConvertible.ToByte(IFormatProvider)
  fullName: System.Byte.System.IConvertible.ToByte(System.IFormatProvider)
  type: Method
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: System.IConvertible.ToByte
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 299
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>For a description of this member, see <xref href=\"System.IConvertible.ToByte(System.IFormatProvider)\" data-throw-if-not-resolved=\"false\"></xref>. </p>\n"
  remarks: "\n<p>This member is an explicit interface member implementation. It can be used only when the <xref href=\"System.Byte\" data-throw-if-not-resolved=\"false\"></xref> instance is cast to an <xref href=\"System.IConvertible\" data-throw-if-not-resolved=\"false\"></xref> interface. </p>\n"
  syntax:
    content: byte IConvertible.ToByte(IFormatProvider provider)
    content.vb: Function System.IConvertible.ToByte(provider As IFormatProvider) As Byte Implements IConvertible.ToByte
    parameters:
    - id: provider
      type: System.IFormatProvider
      description: "\n<p>This parameter is ignored.</p>\n"
    return:
      type: System.Byte
      description: "\n<p>The value of the current instance, unchanged.</p>\n"
  implements:
  - System.IConvertible.ToByte(System.IFormatProvider)
  name.vb: System.IConvertible.ToByte(IFormatProvider)
- uid: System.Byte.System#IConvertible#ToChar(System.IFormatProvider)
  commentId: M:System.Byte.System#IConvertible#ToChar(System.IFormatProvider)
  id: System#IConvertible#ToChar(System.IFormatProvider)
  isEii: true
  parent: System.Byte
  langs:
  - csharp
  - vb
  name: IConvertible.ToChar(IFormatProvider)
  fullName: System.Byte.System.IConvertible.ToChar(System.IFormatProvider)
  type: Method
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: System.IConvertible.ToChar
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 300
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>For a description of this member, see <xref href=\"System.IConvertible.ToChar(System.IFormatProvider)\" data-throw-if-not-resolved=\"false\"></xref>. </p>\n"
  remarks: "\n<p>This member is an explicit interface member implementation. It can be used only when the <xref href=\"System.Byte\" data-throw-if-not-resolved=\"false\"></xref> instance is cast to an <xref href=\"System.IConvertible\" data-throw-if-not-resolved=\"false\"></xref> interface. The recommended alternative is to call the <xref href=\"System.Convert.ToChar(System.Byte)\" data-throw-if-not-resolved=\"false\"></xref> method.</p>\n"
  syntax:
    content: char IConvertible.ToChar(IFormatProvider provider)
    content.vb: Function System.IConvertible.ToChar(provider As IFormatProvider) As Char Implements IConvertible.ToChar
    parameters:
    - id: provider
      type: System.IFormatProvider
      description: "\n<p>This parameter is ignored.</p>\n"
    return:
      type: System.Char
      description: "\n<p>The value of the current instance, converted to a <xref href=\"System.Char\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  implements:
  - System.IConvertible.ToChar(System.IFormatProvider)
  name.vb: System.IConvertible.ToChar(IFormatProvider)
- uid: System.Byte.System#IConvertible#ToDateTime(System.IFormatProvider)
  commentId: M:System.Byte.System#IConvertible#ToDateTime(System.IFormatProvider)
  id: System#IConvertible#ToDateTime(System.IFormatProvider)
  isEii: true
  parent: System.Byte
  langs:
  - csharp
  - vb
  name: IConvertible.ToDateTime(IFormatProvider)
  fullName: System.Byte.System.IConvertible.ToDateTime(System.IFormatProvider)
  type: Method
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: System.IConvertible.ToDateTime
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 301
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>This conversion is not supported. Attempting to use this method throws an <xref href=\"System.InvalidCastException\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: DateTime IConvertible.ToDateTime(IFormatProvider provider)
    content.vb: Function System.IConvertible.ToDateTime(provider As IFormatProvider) As Date Implements IConvertible.ToDateTime
    parameters:
    - id: provider
      type: System.IFormatProvider
      description: "\n<p>This parameter is ignored.</p>\n"
    return:
      type: System.DateTime
      description: "\n<p>This conversion is not supported. No value is returned.</p>\n"
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "\n<p>In all cases.</p>\n"
  implements:
  - System.IConvertible.ToDateTime(System.IFormatProvider)
  name.vb: System.IConvertible.ToDateTime(IFormatProvider)
- uid: System.Byte.System#IConvertible#ToDecimal(System.IFormatProvider)
  commentId: M:System.Byte.System#IConvertible#ToDecimal(System.IFormatProvider)
  id: System#IConvertible#ToDecimal(System.IFormatProvider)
  isEii: true
  parent: System.Byte
  langs:
  - csharp
  - vb
  name: IConvertible.ToDecimal(IFormatProvider)
  fullName: System.Byte.System.IConvertible.ToDecimal(System.IFormatProvider)
  type: Method
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: System.IConvertible.ToDecimal
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 302
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>For a description of this member, see <xref href=\"System.IConvertible.ToDecimal(System.IFormatProvider)\" data-throw-if-not-resolved=\"false\"></xref>. </p>\n"
  remarks: "\n<p>This member is an explicit interface member implementation. It can be used only when the <xref href=\"System.Byte\" data-throw-if-not-resolved=\"false\"></xref> instance is cast to an <xref href=\"System.IConvertible\" data-throw-if-not-resolved=\"false\"></xref> interface. The recommended alternative is to call the <xref href=\"System.Convert.ToDecimal(System.Byte)\" data-throw-if-not-resolved=\"false\"></xref> method.</p>\n"
  syntax:
    content: decimal IConvertible.ToDecimal(IFormatProvider provider)
    content.vb: Function System.IConvertible.ToDecimal(provider As IFormatProvider) As Decimal Implements IConvertible.ToDecimal
    parameters:
    - id: provider
      type: System.IFormatProvider
      description: "\n<p>This parameter is ignored.</p>\n"
    return:
      type: System.Decimal
      description: "\n<p>The value of the current instance, converted to a <xref href=\"System.Decimal\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  implements:
  - System.IConvertible.ToDecimal(System.IFormatProvider)
  name.vb: System.IConvertible.ToDecimal(IFormatProvider)
- uid: System.Byte.System#IConvertible#ToDouble(System.IFormatProvider)
  commentId: M:System.Byte.System#IConvertible#ToDouble(System.IFormatProvider)
  id: System#IConvertible#ToDouble(System.IFormatProvider)
  isEii: true
  parent: System.Byte
  langs:
  - csharp
  - vb
  name: IConvertible.ToDouble(IFormatProvider)
  fullName: System.Byte.System.IConvertible.ToDouble(System.IFormatProvider)
  type: Method
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: System.IConvertible.ToDouble
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 303
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>For a description of this member, see <xref href=\"System.IConvertible.ToDouble(System.IFormatProvider)\" data-throw-if-not-resolved=\"false\"></xref>. </p>\n"
  remarks: "\n<p>This member is an explicit interface member implementation. It can be used only when the <xref href=\"System.Byte\" data-throw-if-not-resolved=\"false\"></xref> instance is cast to an <xref href=\"System.IConvertible\" data-throw-if-not-resolved=\"false\"></xref> interface. The recommended alternative is to call the <xref href=\"System.Convert.ToDouble(System.Byte)\" data-throw-if-not-resolved=\"false\"></xref> method.</p>\n"
  syntax:
    content: double IConvertible.ToDouble(IFormatProvider provider)
    content.vb: Function System.IConvertible.ToDouble(provider As IFormatProvider) As Double Implements IConvertible.ToDouble
    parameters:
    - id: provider
      type: System.IFormatProvider
      description: "\n<p>This parameter is ignored.</p>\n"
    return:
      type: System.Double
      description: "\n<p>The value of the current instance, converted to a <xref href=\"System.Double\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  implements:
  - System.IConvertible.ToDouble(System.IFormatProvider)
  name.vb: System.IConvertible.ToDouble(IFormatProvider)
- uid: System.Byte.System#IConvertible#ToInt16(System.IFormatProvider)
  commentId: M:System.Byte.System#IConvertible#ToInt16(System.IFormatProvider)
  id: System#IConvertible#ToInt16(System.IFormatProvider)
  isEii: true
  parent: System.Byte
  langs:
  - csharp
  - vb
  name: IConvertible.ToInt16(IFormatProvider)
  fullName: System.Byte.System.IConvertible.ToInt16(System.IFormatProvider)
  type: Method
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: System.IConvertible.ToInt16
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 304
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>For a description of this member, see <xref href=\"System.IConvertible.ToInt16(System.IFormatProvider)\" data-throw-if-not-resolved=\"false\"></xref>. </p>\n"
  remarks: "\n<p>This member is an explicit interface member implementation. It can be used only when the <xref href=\"System.Byte\" data-throw-if-not-resolved=\"false\"></xref> instance is cast to an <xref href=\"System.IConvertible\" data-throw-if-not-resolved=\"false\"></xref> interface. The recommended alternative is to call the <xref href=\"System.Convert.ToInt16(System.Byte)\" data-throw-if-not-resolved=\"false\"></xref> method.</p>\n"
  syntax:
    content: short IConvertible.ToInt16(IFormatProvider provider)
    content.vb: Function System.IConvertible.ToInt16(provider As IFormatProvider) As Short Implements IConvertible.ToInt16
    parameters:
    - id: provider
      type: System.IFormatProvider
      description: "\n<p>This parameter is ignored.</p>\n"
    return:
      type: System.Int16
      description: "\n<p>The value of the current instance, converted to an <xref href=\"System.Int16\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  implements:
  - System.IConvertible.ToInt16(System.IFormatProvider)
  name.vb: System.IConvertible.ToInt16(IFormatProvider)
- uid: System.Byte.System#IConvertible#ToInt32(System.IFormatProvider)
  commentId: M:System.Byte.System#IConvertible#ToInt32(System.IFormatProvider)
  id: System#IConvertible#ToInt32(System.IFormatProvider)
  isEii: true
  parent: System.Byte
  langs:
  - csharp
  - vb
  name: IConvertible.ToInt32(IFormatProvider)
  fullName: System.Byte.System.IConvertible.ToInt32(System.IFormatProvider)
  type: Method
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: System.IConvertible.ToInt32
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 305
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>For a description of this member, see <xref href=\"System.IConvertible.ToInt32(System.IFormatProvider)\" data-throw-if-not-resolved=\"false\"></xref>. </p>\n"
  remarks: "\n<p>This member is an explicit interface member implementation. It can be used only when the <xref href=\"System.Byte\" data-throw-if-not-resolved=\"false\"></xref> instance is cast to an <xref href=\"System.IConvertible\" data-throw-if-not-resolved=\"false\"></xref> interface. The recommended alternative is to call the <xref href=\"System.Convert.ToInt32(System.Byte)\" data-throw-if-not-resolved=\"false\"></xref> method.</p>\n"
  syntax:
    content: int IConvertible.ToInt32(IFormatProvider provider)
    content.vb: Function System.IConvertible.ToInt32(provider As IFormatProvider) As Integer Implements IConvertible.ToInt32
    parameters:
    - id: provider
      type: System.IFormatProvider
      description: "\n<p>This parameter is ignored.</p>\n"
    return:
      type: System.Int32
      description: "\n<p>The value of the current instance, converted to an <xref href=\"System.Int32\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  implements:
  - System.IConvertible.ToInt32(System.IFormatProvider)
  name.vb: System.IConvertible.ToInt32(IFormatProvider)
- uid: System.Byte.System#IConvertible#ToInt64(System.IFormatProvider)
  commentId: M:System.Byte.System#IConvertible#ToInt64(System.IFormatProvider)
  id: System#IConvertible#ToInt64(System.IFormatProvider)
  isEii: true
  parent: System.Byte
  langs:
  - csharp
  - vb
  name: IConvertible.ToInt64(IFormatProvider)
  fullName: System.Byte.System.IConvertible.ToInt64(System.IFormatProvider)
  type: Method
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: System.IConvertible.ToInt64
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 306
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>For a description of this member, see <xref href=\"System.IConvertible.ToInt64(System.IFormatProvider)\" data-throw-if-not-resolved=\"false\"></xref>. </p>\n"
  remarks: "\n<p>This member is an explicit interface member implementation. It can be used only when the <xref href=\"System.Byte\" data-throw-if-not-resolved=\"false\"></xref> instance is cast to an <xref href=\"System.IConvertible\" data-throw-if-not-resolved=\"false\"></xref> interface. The recommended alternative is to call the <xref href=\"System.Convert.ToInt64(System.Byte)\" data-throw-if-not-resolved=\"false\"></xref> method.</p>\n"
  syntax:
    content: long IConvertible.ToInt64(IFormatProvider provider)
    content.vb: Function System.IConvertible.ToInt64(provider As IFormatProvider) As Long Implements IConvertible.ToInt64
    parameters:
    - id: provider
      type: System.IFormatProvider
      description: "\n<p>This parameter is ignored.</p>\n"
    return:
      type: System.Int64
      description: "\n<p>The value of the current instance, converted to an <xref href=\"System.Int64\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  implements:
  - System.IConvertible.ToInt64(System.IFormatProvider)
  name.vb: System.IConvertible.ToInt64(IFormatProvider)
- uid: System.Byte.System#IConvertible#ToSByte(System.IFormatProvider)
  commentId: M:System.Byte.System#IConvertible#ToSByte(System.IFormatProvider)
  id: System#IConvertible#ToSByte(System.IFormatProvider)
  isEii: true
  parent: System.Byte
  langs:
  - csharp
  - vb
  name: IConvertible.ToSByte(IFormatProvider)
  fullName: System.Byte.System.IConvertible.ToSByte(System.IFormatProvider)
  type: Method
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: System.IConvertible.ToSByte
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 307
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>For a description of this member, see <xref href=\"System.IConvertible.ToSByte(System.IFormatProvider)\" data-throw-if-not-resolved=\"false\"></xref>. </p>\n"
  remarks: "\n<p>This member is an explicit interface member implementation. It can be used only when the <xref href=\"System.Byte\" data-throw-if-not-resolved=\"false\"></xref> instance is cast to an <xref href=\"System.IConvertible\" data-throw-if-not-resolved=\"false\"></xref> interface. The recommended alternative is to call the <xref href=\"System.Convert.ToSByte(System.Byte)\" data-throw-if-not-resolved=\"false\"></xref> method.</p>\n"
  syntax:
    content: sbyte IConvertible.ToSByte(IFormatProvider provider)
    content.vb: Function System.IConvertible.ToSByte(provider As IFormatProvider) As SByte Implements IConvertible.ToSByte
    parameters:
    - id: provider
      type: System.IFormatProvider
      description: "\n<p>This parameter is ignored.</p>\n"
    return:
      type: System.SByte
      description: "\n<p>The value of the current instance, converted to an <xref href=\"System.SByte\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  implements:
  - System.IConvertible.ToSByte(System.IFormatProvider)
  name.vb: System.IConvertible.ToSByte(IFormatProvider)
- uid: System.Byte.System#IConvertible#ToSingle(System.IFormatProvider)
  commentId: M:System.Byte.System#IConvertible#ToSingle(System.IFormatProvider)
  id: System#IConvertible#ToSingle(System.IFormatProvider)
  isEii: true
  parent: System.Byte
  langs:
  - csharp
  - vb
  name: IConvertible.ToSingle(IFormatProvider)
  fullName: System.Byte.System.IConvertible.ToSingle(System.IFormatProvider)
  type: Method
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: System.IConvertible.ToSingle
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 308
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>For a description of this member, see <xref href=\"System.IConvertible.ToSingle(System.IFormatProvider)\" data-throw-if-not-resolved=\"false\"></xref>. </p>\n"
  remarks: "\n<p>This member is an explicit interface member implementation. It can be used only when the <xref href=\"System.Byte\" data-throw-if-not-resolved=\"false\"></xref> instance is cast to an <xref href=\"System.IConvertible\" data-throw-if-not-resolved=\"false\"></xref> interface. The recommended alternative is to call the <xref href=\"System.Convert.ToSingle(System.Byte)\" data-throw-if-not-resolved=\"false\"></xref> method.</p>\n"
  syntax:
    content: float IConvertible.ToSingle(IFormatProvider provider)
    content.vb: Function System.IConvertible.ToSingle(provider As IFormatProvider) As Single Implements IConvertible.ToSingle
    parameters:
    - id: provider
      type: System.IFormatProvider
      description: "\n<p>This parameter is ignored.</p>\n"
    return:
      type: System.Single
      description: "\n<p>The value of the current instance, converted to a <xref href=\"System.Single\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  implements:
  - System.IConvertible.ToSingle(System.IFormatProvider)
  name.vb: System.IConvertible.ToSingle(IFormatProvider)
- uid: System.Byte.System#IConvertible#ToType(System.Type,System.IFormatProvider)
  commentId: M:System.Byte.System#IConvertible#ToType(System.Type,System.IFormatProvider)
  id: System#IConvertible#ToType(System.Type,System.IFormatProvider)
  isEii: true
  parent: System.Byte
  langs:
  - csharp
  - vb
  name: IConvertible.ToType(Type, IFormatProvider)
  fullName: System.Byte.System.IConvertible.ToType(System.Type, System.IFormatProvider)
  type: Method
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: System.IConvertible.ToType
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 309
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>For a description of this member, see <xref href=\"System.IConvertible.ToType(System.Type,System.IFormatProvider)\" data-throw-if-not-resolved=\"false\"></xref>. </p>\n"
  remarks: "\n<p>This member is an explicit interface member implementation. It can be used only when the <xref href=\"System.Byte\" data-throw-if-not-resolved=\"false\"></xref> instance is cast to an <xref href=\"System.IConvertible\" data-throw-if-not-resolved=\"false\"></xref> interface. The recommended alternative is to call the <strong>static</strong> (<strong>Shared</strong> in Visual Basic) <xref href=\"System.Convert.ChangeType(System.Object,System.Type,System.IFormatProvider)\" data-throw-if-not-resolved=\"false\"></xref> method instead.</p>\n"
  syntax:
    content: object IConvertible.ToType(Type type, IFormatProvider provider)
    content.vb: Function System.IConvertible.ToType(type As Type, provider As IFormatProvider) As Object Implements IConvertible.ToType
    parameters:
    - id: type
      type: System.Type
      description: "\n<p>The type to which to convert this <xref href=\"System.Byte\" data-throw-if-not-resolved=\"false\"></xref> value. </p>\n"
    - id: provider
      type: System.IFormatProvider
      description: "\n<p>An <xref href=\"System.IFormatProvider\" data-throw-if-not-resolved=\"false\"></xref> implementation that supplies information about the format of the returned value.</p>\n"
    return:
      type: System.Object
      description: "\n<p>The value of the current instance, converted to <em>type</em>.</p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>type</em> is <strong>null</strong>. </p>\n"
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "\n<p>The requested type conversion is not supported. </p>\n"
  implements:
  - System.IConvertible.ToType(System.Type,System.IFormatProvider)
  name.vb: System.IConvertible.ToType(Type, IFormatProvider)
- uid: System.Byte.System#IConvertible#ToUInt16(System.IFormatProvider)
  commentId: M:System.Byte.System#IConvertible#ToUInt16(System.IFormatProvider)
  id: System#IConvertible#ToUInt16(System.IFormatProvider)
  isEii: true
  parent: System.Byte
  langs:
  - csharp
  - vb
  name: IConvertible.ToUInt16(IFormatProvider)
  fullName: System.Byte.System.IConvertible.ToUInt16(System.IFormatProvider)
  type: Method
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: System.IConvertible.ToUInt16
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 310
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>For a description of this member, see <xref href=\"System.IConvertible.ToUInt16(System.IFormatProvider)\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  remarks: "\n<p>This member is an explicit interface member implementation. It can be used only when the <xref href=\"System.Byte\" data-throw-if-not-resolved=\"false\"></xref> instance is cast to an <xref href=\"System.IConvertible\" data-throw-if-not-resolved=\"false\"></xref> interface. The recommended alternative is to call the <xref href=\"System.Convert.ToUInt16(System.Byte)\" data-throw-if-not-resolved=\"false\"></xref> method.</p>\n"
  syntax:
    content: ushort IConvertible.ToUInt16(IFormatProvider provider)
    content.vb: Function System.IConvertible.ToUInt16(provider As IFormatProvider) As UShort Implements IConvertible.ToUInt16
    parameters:
    - id: provider
      type: System.IFormatProvider
      description: "\n<p>This parameter is ignored.</p>\n"
    return:
      type: System.UInt16
      description: "\n<p>The value of the current instance, converted to a <xref href=\"System.UInt16\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  implements:
  - System.IConvertible.ToUInt16(System.IFormatProvider)
  name.vb: System.IConvertible.ToUInt16(IFormatProvider)
- uid: System.Byte.System#IConvertible#ToUInt32(System.IFormatProvider)
  commentId: M:System.Byte.System#IConvertible#ToUInt32(System.IFormatProvider)
  id: System#IConvertible#ToUInt32(System.IFormatProvider)
  isEii: true
  parent: System.Byte
  langs:
  - csharp
  - vb
  name: IConvertible.ToUInt32(IFormatProvider)
  fullName: System.Byte.System.IConvertible.ToUInt32(System.IFormatProvider)
  type: Method
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: System.IConvertible.ToUInt32
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 311
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>For a description of this member, see <xref href=\"System.IConvertible.ToUInt32(System.IFormatProvider)\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  remarks: "\n<p>This member is an explicit interface member implementation. It can be used only when the <xref href=\"System.Byte\" data-throw-if-not-resolved=\"false\"></xref> instance is cast to an <xref href=\"System.IConvertible\" data-throw-if-not-resolved=\"false\"></xref> interface. The recommended alternative is to call the <xref href=\"System.Convert.ToUInt32(System.Byte)\" data-throw-if-not-resolved=\"false\"></xref> method.</p>\n"
  syntax:
    content: uint IConvertible.ToUInt32(IFormatProvider provider)
    content.vb: Function System.IConvertible.ToUInt32(provider As IFormatProvider) As UInteger Implements IConvertible.ToUInt32
    parameters:
    - id: provider
      type: System.IFormatProvider
      description: "\n<p>This parameter is ignored.</p>\n"
    return:
      type: System.UInt32
      description: "\n<p>The value of the current instance, converted to a <xref href=\"System.UInt32\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  implements:
  - System.IConvertible.ToUInt32(System.IFormatProvider)
  name.vb: System.IConvertible.ToUInt32(IFormatProvider)
- uid: System.Byte.System#IConvertible#ToUInt64(System.IFormatProvider)
  commentId: M:System.Byte.System#IConvertible#ToUInt64(System.IFormatProvider)
  id: System#IConvertible#ToUInt64(System.IFormatProvider)
  isEii: true
  parent: System.Byte
  langs:
  - csharp
  - vb
  name: IConvertible.ToUInt64(IFormatProvider)
  fullName: System.Byte.System.IConvertible.ToUInt64(System.IFormatProvider)
  type: Method
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: System.IConvertible.ToUInt64
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 312
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>For a description of this member, see <xref href=\"System.IConvertible.ToUInt64(System.IFormatProvider)\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  remarks: "\n<p>This member is an explicit interface member implementation. It can be used only when the <xref href=\"System.Byte\" data-throw-if-not-resolved=\"false\"></xref> instance is cast to an <xref href=\"System.IConvertible\" data-throw-if-not-resolved=\"false\"></xref> interface. The recommended alternative is to call the <xref href=\"System.Convert.ToUInt64(System.Byte)\" data-throw-if-not-resolved=\"false\"></xref> method.</p>\n"
  syntax:
    content: ulong IConvertible.ToUInt64(IFormatProvider provider)
    content.vb: Function System.IConvertible.ToUInt64(provider As IFormatProvider) As ULong Implements IConvertible.ToUInt64
    parameters:
    - id: provider
      type: System.IFormatProvider
      description: "\n<p>This parameter is ignored.</p>\n"
    return:
      type: System.UInt64
      description: "\n<p>The value of the current instance, converted to a <xref href=\"System.UInt64\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  implements:
  - System.IConvertible.ToUInt64(System.IFormatProvider)
  name.vb: System.IConvertible.ToUInt64(IFormatProvider)
- uid: System.Byte.ToString
  commentId: M:System.Byte.ToString
  id: ToString
  parent: System.Byte
  langs:
  - csharp
  - vb
  name: ToString()
  fullName: System.Byte.ToString()
  type: Method
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ToString
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 313
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Converts the value of the current <xref href=\"System.Byte\" data-throw-if-not-resolved=\"false\"></xref> object to its equivalent string representation.</p>\n"
  remarks: "\n<p>The return value is formatted with the general numeric format specifier (\"G\") and the <xref href=\"System.Globalization.NumberFormatInfo\" data-throw-if-not-resolved=\"false\"></xref> object for the thread current culture. To define the formatting of the <xref href=\"System.Byte\" data-throw-if-not-resolved=\"false\"></xref> value's string representation, call the <xref href=\"System.Byte.ToString(System.String)\" data-throw-if-not-resolved=\"false\"></xref> method. To define both the format specifiers and culture used to create the string representation of a <xref href=\"System.Byte\" data-throw-if-not-resolved=\"false\"></xref> value, call the <xref href=\"System.Byte.ToString(System.String,System.IFormatProvider)\" data-throw-if-not-resolved=\"false\"></xref> method.</p>\n<p>The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics:</p>\n<ul><li>\n<p>For more information about numeric format specifiers, see Standard Numeric Format Strings and Custom Numeric Format Strings.</p>\n</li><li>\n<p>For more information about formatting, see Formatting Types in the .NET Framework.</p>\n</li></ul>\n<p>For information about the thread current culture, see <xref href=\"System.Threading.Thread.CurrentCulture\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  example:
  - "\n<p>The following example displays an array of byte values. Note that the <xref href=\"System.Byte.ToString\" data-throw-if-not-resolved=\"false\"></xref> method is not called explicitly in the example. Instead, it is called implicitly, because of the use of the composite formatting feature. </p>System.Byte.ToString#2"
  syntax:
    content: public override string ToString()
    content.vb: Public Overrides Function ToString As String
    return:
      type: System.String
      description: "\n<p>The string representation of the value of this object, which consists of a sequence of digits that range from 0 to 9 with no leading zeroes.</p>\n"
  overridden: System.ValueType.ToString
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Byte.ToString(System.IFormatProvider)
  commentId: M:System.Byte.ToString(System.IFormatProvider)
  id: ToString(System.IFormatProvider)
  parent: System.Byte
  langs:
  - csharp
  - vb
  name: ToString(IFormatProvider)
  fullName: System.Byte.ToString(System.IFormatProvider)
  type: Method
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ToString
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 314
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Converts the numeric value of the current <xref href=\"System.Byte\" data-throw-if-not-resolved=\"false\"></xref> object to its equivalent string representation using the specified culture-specific formatting information.</p>\n"
  remarks: "\n<p>The return value is formatted with the general numeric format specifier (\"G\").</p>\n<p>The <em>provider</em> parameter is an object that implements the <xref href=\"System.IFormatProvider\" data-throw-if-not-resolved=\"false\"></xref> interface. Its <xref href=\"System.IFormatProvider.GetFormat(System.Type)\" data-throw-if-not-resolved=\"false\"></xref> method returns a <xref href=\"System.Globalization.NumberFormatInfo\" data-throw-if-not-resolved=\"false\"></xref> object that provides culture-specific information about the format of the string that is returned by this method. The object that implements <xref href=\"System.IFormatProvider\" data-throw-if-not-resolved=\"false\"></xref> can be any of the following:</p>\n<ul><li>\n<p>A <xref href=\"System.Globalization.CultureInfo\" data-throw-if-not-resolved=\"false\"></xref> object that represents the culture whose formatting rules are to be used.</p>\n</li><li>\n<p>A <xref href=\"System.Globalization.NumberFormatInfo\" data-throw-if-not-resolved=\"false\"></xref> object that contains specific numeric formatting information for this value.</p>\n</li><li>\n<p>A custom object that implements <xref href=\"System.IFormatProvider\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n</li></ul>\n<p>If <em>provider</em> is <strong>null</strong> or a <xref href=\"System.Globalization.NumberFormatInfo\" data-throw-if-not-resolved=\"false\"></xref> object cannot be obtained from <em>provider</em>, the return value is formatted using the <xref href=\"System.Globalization.NumberFormatInfo\" data-throw-if-not-resolved=\"false\"></xref> object for the thread current culture. For information about the thread current culture, see <xref href=\"System.Threading.Thread.CurrentCulture\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics:</p>\n<ul><li>\n<p>For more information about numeric format specifiers, see Standard Numeric Format Strings and Custom Numeric Format Strings.</p>\n</li><li>\n<p>For more information about formatting, see Formatting Types in the .NET Framework.</p>\n</li></ul>\n"
  example:
  - "\n<p>The following example iterates an array of byte values and displays each of them to the console by calling the <xref href=\"System.Byte.ToString(System.IFormatProvider)\" data-throw-if-not-resolved=\"false\"></xref> method with different format providers. </p>System.Byte.ToString#3"
  syntax:
    content: public string ToString(IFormatProvider provider)
    content.vb: Public Function ToString(provider As IFormatProvider) As String
    parameters:
    - id: provider
      type: System.IFormatProvider
      description: "\n<p>An object that supplies culture-specific formatting information.</p>\n"
    return:
      type: System.String
      description: "\n<p>The string representation of the value of this object in the format specified by the <em>provider</em> parameter.</p>\n"
  seealso:
  - type: System.Byte.Parse(System.String)
    commentId: M:System.Byte.Parse(System.String)
  - type: System.String
    commentId: T:System.String
  - type: System.Globalization.NumberFormatInfo
    commentId: T:System.Globalization.NumberFormatInfo
  implements:
  - System.IConvertible.ToString(System.IFormatProvider)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Byte.ToString(System.String)
  commentId: M:System.Byte.ToString(System.String)
  id: ToString(System.String)
  parent: System.Byte
  langs:
  - csharp
  - vb
  name: ToString(String)
  fullName: System.Byte.ToString(System.String)
  type: Method
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ToString
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 315
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Converts the value of the current <xref href=\"System.Byte\" data-throw-if-not-resolved=\"false\"></xref> object to its equivalent string representation using the specified format.</p>\n"
  remarks: "\n<p>The <em>format</em> parameter can be either a standard or a custom numeric format string. All standard numeric format strings other than \"R\" (or \"r\") are supported, as are all custom numeric format characters. If <em>format</em> is <strong>null</strong> or an empty string (\"\"), the return value is formatted with the general numeric format specifier (\"G\").</p>\n<p>The return value of this function is formatted using the <xref href=\"System.Globalization.NumberFormatInfo\" data-throw-if-not-resolved=\"false\"></xref> object for the thread current culture. For information about the thread current culture, see <xref href=\"System.Threading.Thread.CurrentCulture\" data-throw-if-not-resolved=\"false\"></xref>. To provide formatting information for cultures other than the current culture, call the <xref href=\"System.Byte.ToString(System.String,System.IFormatProvider)\" data-throw-if-not-resolved=\"false\"></xref> method.</p>\n<p>The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics:</p>\n<ul><li>\n<p>For more information about numeric format specifiers, see Standard Numeric Format Strings and Custom Numeric Format Strings.</p>\n</li><li>\n<p>For more information about formatting, see Formatting Types in the .NET Framework.</p>\n</li></ul>\n"
  example:
  - "\n<p>The following example initializes a <xref href=\"System.Byte\" data-throw-if-not-resolved=\"false\"></xref> value and displays it to the console using each of the supported standard format strings and a custom format string. The example is run with en-US as the current culture. </p>System.Byte.ToString#4"
  syntax:
    content: public string ToString(string format)
    content.vb: Public Function ToString(format As String) As String
    parameters:
    - id: format
      type: System.String
      description: "\n<p>A numeric format string.</p>\n"
    return:
      type: System.String
      description: "\n<p>The string representation of the current <xref href=\"System.Byte\" data-throw-if-not-resolved=\"false\"></xref> object, formatted as specified by the <em>format</em> parameter.</p>\n"
  exceptions:
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "\n<p>\n<em>format</em> includes an unsupported specifier. Supported format specifiers are listed in the Remarks section.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Byte.ToString(System.String,System.IFormatProvider)
  commentId: M:System.Byte.ToString(System.String,System.IFormatProvider)
  id: ToString(System.String,System.IFormatProvider)
  parent: System.Byte
  langs:
  - csharp
  - vb
  name: ToString(String, IFormatProvider)
  fullName: System.Byte.ToString(System.String, System.IFormatProvider)
  type: Method
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ToString
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 316
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Converts the value of the current <xref href=\"System.Byte\" data-throw-if-not-resolved=\"false\"></xref> object to its equivalent string representation using the specified format and culture-specific formatting information.</p>\n"
  remarks: "\n<p>The <xref href=\"System.Byte.ToString(System.String,System.IFormatProvider)\" data-throw-if-not-resolved=\"false\"></xref> method formats a <xref href=\"System.Byte\" data-throw-if-not-resolved=\"false\"></xref> value in a specified format of a specified culture. To format a number by using the default (\"G\") format of the current culture, call the <xref href=\"System.Byte.ToString\" data-throw-if-not-resolved=\"false\"></xref> method. To format a number by using a specified format of the current culture, call the <xref href=\"System.Byte.ToString(System.String)\" data-throw-if-not-resolved=\"false\"></xref> method. </p>\n<p>The <em>format</em> parameter can be either a standard or a custom numeric format string. All standard numeric format strings other than \"R\" (or \"r\") are supported, as are all custom numeric format characters. If <em>format</em> is <strong>null</strong> or an empty string (\"\"), the return value of this method is formatted with the general numeric format specifier (\"G\").</p>\n<p>The <em>provider</em> parameter is an object that implements the <xref href=\"System.IFormatProvider\" data-throw-if-not-resolved=\"false\"></xref> interface. Its <xref href=\"System.IFormatProvider.GetFormat(System.Type)\" data-throw-if-not-resolved=\"false\"></xref> method returns a <xref href=\"System.Globalization.NumberFormatInfo\" data-throw-if-not-resolved=\"false\"></xref> object that provides culture-specific information about the format of the string that is returned by this method. The object that implements <xref href=\"System.IFormatProvider\" data-throw-if-not-resolved=\"false\"></xref> can be any of the following:</p>\n<ul><li>\n<p>A <xref href=\"System.Globalization.CultureInfo\" data-throw-if-not-resolved=\"false\"></xref> object that represents the culture whose formatting rules are to be used.</p>\n</li><li>\n<p>A <xref href=\"System.Globalization.NumberFormatInfo\" data-throw-if-not-resolved=\"false\"></xref> object that contains specific numeric formatting information for this value.</p>\n</li><li>\n<p>A custom object that implements <xref href=\"System.IFormatProvider\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n</li></ul>\n<p>If <em>provider</em> is <strong>null</strong> or a <xref href=\"System.Globalization.NumberFormatInfo\" data-throw-if-not-resolved=\"false\"></xref> object cannot be obtained from <em>provider</em>, the return value is formatted using the <xref href=\"System.Globalization.NumberFormatInfo\" data-throw-if-not-resolved=\"false\"></xref> object for the thread current culture. For information about the thread current culture, see <xref href=\"System.Threading.Thread.CurrentCulture\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics:</p>\n<ul><li>\n<p>For more information about numeric format specifiers, see Standard Numeric Format Strings and Custom Numeric Format Strings.</p>\n</li><li>\n<p>For more information about formatting, see Formatting Types in the .NET Framework.</p>\n</li></ul>\n"
  example:
  - "\n<p>The following example uses the standard \"N\" format string and four different <xref href=\"System.Globalization.CultureInfo\" data-throw-if-not-resolved=\"false\"></xref> objects to display the string representation of a byte value to the console. </p>System.Byte.ToString#5"
  syntax:
    content: public string ToString(string format, IFormatProvider provider)
    content.vb: Public Function ToString(format As String, provider As IFormatProvider) As String
    parameters:
    - id: format
      type: System.String
      description: "\n<p>A standard or custom numeric format string.</p>\n"
    - id: provider
      type: System.IFormatProvider
      description: "\n<p>An object that supplies culture-specific formatting information.</p>\n"
    return:
      type: System.String
      description: "\n<p>The string representation of the current <xref href=\"System.Byte\" data-throw-if-not-resolved=\"false\"></xref> object, formatted as specified by the <em>format</em> and <em>provider</em> parameters.</p>\n"
  exceptions:
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "\n<p>\n<em>format</em> includes an unsupported specifier. Supported format specifiers are listed in the Remarks section.</p>\n"
  seealso:
  - type: System.Byte.Parse(System.String)
    commentId: M:System.Byte.Parse(System.String)
  - type: System.String
    commentId: T:System.String
  - type: System.Globalization.NumberFormatInfo
    commentId: T:System.Globalization.NumberFormatInfo
  - type: System.IFormattable
    commentId: T:System.IFormattable
  - type: System.IFormatProvider
    commentId: T:System.IFormatProvider
  implements:
  - System.IFormattable.ToString(System.String,System.IFormatProvider)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Byte.TryParse(System.String,System.Byte@)
  commentId: M:System.Byte.TryParse(System.String,System.Byte@)
  id: TryParse(System.String,System.Byte@)
  parent: System.Byte
  langs:
  - csharp
  - vb
  name: TryParse(String, out Byte)
  fullName: System.Byte.TryParse(System.String, out System.Byte)
  type: Method
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: TryParse
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 317
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Tries to convert the string representation of a number to its <xref href=\"System.Byte\" data-throw-if-not-resolved=\"false\"></xref> equivalent, and returns a value that indicates whether the conversion succeeded.</p>\n"
  remarks: "\n<p>The conversion fails and the method returns <strong>false</strong> if the <em>s</em> parameter is not in the correct format, if it is <strong>null</strong> or <xref href=\"System.String.Empty\" data-throw-if-not-resolved=\"false\"></xref>, or if it represents a number less than <xref href=\"System.Byte.MinValue\" data-throw-if-not-resolved=\"false\"></xref> or greater than <xref href=\"System.Byte.MaxValue\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>The <xref href=\"System.Byte.TryParse(System.String,System.Byte@)\" data-throw-if-not-resolved=\"false\"></xref> method is similar to the <xref href=\"System.Byte.Parse(System.String)\" data-throw-if-not-resolved=\"false\"></xref> method, except that <xref href=\"System.Byte.TryParse(System.String,System.Byte@)\" data-throw-if-not-resolved=\"false\"></xref> does not throw an exception if the conversion fails.</p>\n<p>The <em>s</em> parameter should be the string representation of a number in the following form: </p>\n<pre><code>[ws][sign]digits[ws]</code></pre>\n<p>Elements in square brackets ([ and ]) are optional. The following table describes each element.</p>\n<p>Element</p>\n<p>Description</p>\n<table><tbody><tr><td>\n<p>ws</p>\n</td><td>\n<p>Optional white space.</p>\n</td></tr><tr><td>\n<p>sign</p>\n</td><td>\n<p>An optional positive sign, as specified by the <xref href=\"System.Globalization.NumberFormatInfo.PositiveSign\" data-throw-if-not-resolved=\"false\"></xref> property of the current culture.</p>\n</td></tr><tr><td>\n<p>digits</p>\n</td><td>\n<p>A sequence of decimal digits that range from 0 to 9.</p>\n</td></tr></tbody></table>\n<p>The <em>s</em> parameter is interpreted using the <xref href=\"System.Globalization.NumberStyles.Integer\" data-throw-if-not-resolved=\"false\"></xref> style. In addition to the byte value's decimal digits, only leading and trailing spaces together with a leading sign are allowed. (If the sign is present, it must be a positive sign or the method throws an <xref href=\"System.OverflowException\" data-throw-if-not-resolved=\"false\"></xref>.) To explicitly define the style elements together with the culture-specific formatting information that can be present in <em>s</em>, use the <xref href=\"System.Byte.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)\" data-throw-if-not-resolved=\"false\"></xref> method.</p>\n<p>The <em>s</em> parameter is parsed using the formatting information in a <xref href=\"System.Globalization.NumberFormatInfo\" data-throw-if-not-resolved=\"false\"></xref> object for the current culture. For more information, see <xref href=\"System.Globalization.NumberFormatInfo.CurrentInfo\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>This overload of the <xref href=\"System.Byte.TryParse(System.String,System.Byte@)\" data-throw-if-not-resolved=\"false\"></xref> method interprets all digits in the <em>s</em> parameter as decimal digits. To parse the string representation of a hexadecimal number, call the <xref href=\"System.Byte.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Byte@)\" data-throw-if-not-resolved=\"false\"></xref> overload. </p>\n"
  example:
  - "\n<p>The following example calls the <xref href=\"System.Byte.TryParse(System.String,System.Byte@)\" data-throw-if-not-resolved=\"false\"></xref> method with a number of different string values.</p>System.Byte.TryParse#1"
  syntax:
    content: public static bool TryParse(string s, out byte result)
    content.vb: Public Shared Function TryParse(s As String, ByRef result As Byte) As Boolean
    parameters:
    - id: s
      type: System.String
      description: "\n<p>A string that contains a number to convert. The string is interpreted using the <xref href=\"System.Globalization.NumberStyles.Integer\" data-throw-if-not-resolved=\"false\"></xref> style.</p>\n"
    - id: result
      type: System.Byte
      description: "\n<p>When this method returns, contains the <xref href=\"System.Byte\" data-throw-if-not-resolved=\"false\"></xref> value equivalent to the number contained in <em>s</em> if the conversion succeeded, or zero if the conversion failed. This parameter is passed uninitialized; any value originally supplied in <em>result</em> will be overwritten. </p>\n"
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if <em>s</em> was converted successfully; otherwise, <strong>false</strong>. </p>\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Byte.TryParse(System.String, ByRef System.Byte)
  name.vb: TryParse(String, ByRef Byte)
- uid: System.Byte.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Byte@)
  commentId: M:System.Byte.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Byte@)
  id: TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Byte@)
  parent: System.Byte
  langs:
  - csharp
  - vb
  name: TryParse(String, NumberStyles, IFormatProvider, out Byte)
  fullName: System.Byte.TryParse(System.String, System.Globalization.NumberStyles, System.IFormatProvider, out System.Byte)
  type: Method
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: TryParse
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 318
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Converts the string representation of a number in a specified style and culture-specific format to its <xref href=\"System.Byte\" data-throw-if-not-resolved=\"false\"></xref> equivalent. A return value indicates whether the conversion succeeded or failed.</p>\n"
  remarks: "\n<p>The <xref href=\"System.Byte.TryParse(System.String,System.Byte@)\" data-throw-if-not-resolved=\"false\"></xref> method is like the <xref href=\"System.Byte.Parse(System.String)\" data-throw-if-not-resolved=\"false\"></xref> method, except the <xref href=\"System.Byte.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Byte@)\" data-throw-if-not-resolved=\"false\"></xref> method does not throw an exception if the conversion fails.</p>\n<p>The <em>s</em> parameter is parsed using the formatting information in a <xref href=\"System.Globalization.NumberFormatInfo\" data-throw-if-not-resolved=\"false\"></xref> object supplied by the <em>provider</em> parameter.</p>\n<p>The style parameter defines the style elements (such as white space or the positive sign) that are allowed in the <em>s</em> parameter for the parse operation to succeed. It must be a combination of bit flags from the <xref href=\"System.Globalization.NumberStyles\" data-throw-if-not-resolved=\"false\"></xref> enumeration. Depending on the value of <em>style</em>, the <em>s</em> parameter may include the following elements: </p>\n<p>[ws][$][sign]digits[.fractional_digits][e[sign]digits][ws] </p>\n<p>Or, if the <em>style</em> parameter includes <xref href=\"System.Globalization.NumberStyles.AllowHexSpecifier\" data-throw-if-not-resolved=\"false\"></xref>:</p>\n<p>[ws]hexdigits[ws]</p>\n<p>Elements in square brackets ( [ and ] ) are optional. The following table describes each element.</p>\n<p>Element</p>\n<p>Description</p>\n<table><tbody><tr><td>\n<p>ws</p>\n</td><td>\n<p>Optional white space. White space can appear at the beginning of <em>s</em> if <em>style</em> includes the <xref href=\"System.Globalization.NumberStyles.AllowLeadingWhite\" data-throw-if-not-resolved=\"false\"></xref> flag, or at the end of s if style includes the <xref href=\"System.Globalization.NumberStyles.AllowTrailingWhite\" data-throw-if-not-resolved=\"false\"></xref> flag.</p>\n</td></tr><tr><td>\n<p>$</p>\n</td><td>\n<p>A culture-specific currency symbol. Its position in the string is defined by the <xref href=\"System.Globalization.NumberFormatInfo.CurrencyPositivePattern\" data-throw-if-not-resolved=\"false\"></xref> property of the <xref href=\"System.Globalization.NumberFormatInfo\" data-throw-if-not-resolved=\"false\"></xref> object returned by the <xref href=\"System.IFormatProvider.GetFormat(System.Type)\" data-throw-if-not-resolved=\"false\"></xref> method of the <em>provider</em> parameter. The currency symbol can appear in <em>s</em> if <em>style</em> includes the <xref href=\"System.Globalization.NumberStyles.AllowCurrencySymbol\" data-throw-if-not-resolved=\"false\"></xref> flag.</p>\n</td></tr><tr><td>\n<p>sign</p>\n</td><td>\n<p>An optional positive sign. (The parse operation fails if a negative sign is present in <em>s</em>.) The sign can appear at the beginning of <em>s</em> if <em>style</em> includes the <xref href=\"System.Globalization.NumberStyles.AllowLeadingSign\" data-throw-if-not-resolved=\"false\"></xref> flag, or at the end of <em>s</em> if <em>style</em> includes the <xref href=\"System.Globalization.NumberStyles.AllowTrailingSign\" data-throw-if-not-resolved=\"false\"></xref> flag.</p>\n</td></tr><tr><td>\n<p>digits</p>\n</td><td>\n<p>A sequence of digits from 0 through 9. </p>\n</td></tr><tr><td>\n<p>.</p>\n</td><td>\n<p>A culture-specific decimal point symbol. The decimal point symbol of the culture specified by <em>provider</em> can appear in <em>s</em> if <em>style</em> includes the <xref href=\"System.Globalization.NumberStyles.AllowDecimalPoint\" data-throw-if-not-resolved=\"false\"></xref> flag.</p>\n</td></tr><tr><td>\n<p>fractional_digits</p>\n</td><td>\n<p>One or more occurrences of the digit 0. Fractional digits can appear in <em>s</em> only if <em>style</em> includes the <xref href=\"System.Globalization.NumberStyles.AllowDecimalPoint\" data-throw-if-not-resolved=\"false\"></xref> flag.</p>\n</td></tr><tr><td>\n<p>e</p>\n</td><td>\n<p>The e or E character, which indicates that the value is represented in exponential notation. The <em>s</em> parameter can represent a number in exponential notation if <em>style</em> includes the <xref href=\"System.Globalization.NumberStyles.AllowExponent\" data-throw-if-not-resolved=\"false\"></xref> flag.</p>\n</td></tr><tr><td>\n<p>hexdigits</p>\n</td><td>\n<p>A sequence of hexadecimal digits from 0 through f, or 0 through F. </p>\n</td></tr></tbody></table>\n<p>A string with decimal digits only (which corresponds to the <xref href=\"System.Globalization.NumberStyles.None\" data-throw-if-not-resolved=\"false\"></xref> style) always parses successfully. Most of the remaining <xref href=\"System.Globalization.NumberStyles\" data-throw-if-not-resolved=\"false\"></xref> members control elements that may be but are not required to be present in this input string. The following table indicates how individual <xref href=\"System.Globalization.NumberStyles\" data-throw-if-not-resolved=\"false\"></xref> members affect the elements that may be present in <em>s</em>.</p>\n<p>Non-composite NumberStyles values</p>\n<p>Elements permitted in s in addition to digits</p>\n<table><tbody><tr><td>\n<p>\n<xref href=\"System.Globalization.NumberStyles.None\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td><td>\n<p>Decimal digits only.</p>\n</td></tr><tr><td>\n<p>\n<xref href=\"System.Globalization.NumberStyles.AllowDecimalPoint\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td><td>\n<p>The . and fractional_digits elements. However, fractional_digits must consist of only one or more 0 digits or the method returns <strong>false</strong>.</p>\n</td></tr><tr><td>\n<p>\n<xref href=\"System.Globalization.NumberStyles.AllowExponent\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td><td>\n<p>The <em>s</em> parameter can also use exponential notation. If <em>s</em> represents a number in exponential notation, it must represent an integer within the range of the <xref href=\"System.Byte\" data-throw-if-not-resolved=\"false\"></xref> data type without a non-zero, fractional component. </p>\n</td></tr><tr><td>\n<p>\n<xref href=\"System.Globalization.NumberStyles.AllowLeadingWhite\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td><td>\n<p>The ws element at the beginning of <em>s</em>.</p>\n</td></tr><tr><td>\n<p>\n<xref href=\"System.Globalization.NumberStyles.AllowTrailingWhite\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td><td>\n<p>The ws element at the end of <em>s</em>.</p>\n</td></tr><tr><td>\n<p>\n<xref href=\"System.Globalization.NumberStyles.AllowLeadingSign\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td><td>\n<p>A positive sign can appear before digits.</p>\n</td></tr><tr><td>\n<p>\n<xref href=\"System.Globalization.NumberStyles.AllowTrailingSign\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td><td>\n<p>A positive sign can appear after digits.</p>\n</td></tr><tr><td>\n<p>\n<xref href=\"System.Globalization.NumberStyles.AllowParentheses\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td><td>\n<p>Although this flag is supported, the method returns <strong>false</strong> if parentheses are present in <em>s</em>.</p>\n</td></tr><tr><td>\n<p>\n<xref href=\"System.Globalization.NumberStyles.AllowThousands\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td><td>\n<p>Although the group separator symbol can appear in <em>s</em>, it can be preceded by only one or more 0 digits. </p>\n</td></tr><tr><td>\n<p>\n<xref href=\"System.Globalization.NumberStyles.AllowCurrencySymbol\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td><td>\n<p>The $ element.</p>\n</td></tr></tbody></table>\n<p>If the <xref href=\"System.Globalization.NumberStyles.AllowHexSpecifier\" data-throw-if-not-resolved=\"false\"></xref> flag is used, <em>s</em> must be a hexadecimal value without a prefix. For example, \"F3\" parses successfully, but \"0xF3\" does not. The only other flags that can be present in <em>style</em> are <xref href=\"System.Globalization.NumberStyles.AllowLeadingWhite\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"System.Globalization.NumberStyles.AllowTrailingWhite\" data-throw-if-not-resolved=\"false\"></xref>. (The <xref href=\"System.Globalization.NumberStyles\" data-throw-if-not-resolved=\"false\"></xref> enumeration has a composite number style, <xref href=\"System.Globalization.NumberStyles.HexNumber\" data-throw-if-not-resolved=\"false\"></xref>, that includes both white space flags.)</p>\n<p>The <em>provider</em> parameter is an <xref href=\"System.IFormatProvider\" data-throw-if-not-resolved=\"false\"></xref> implementation, such as a <xref href=\"System.Globalization.CultureInfo\" data-throw-if-not-resolved=\"false\"></xref> object or a <xref href=\"System.Globalization.NumberFormatInfo\" data-throw-if-not-resolved=\"false\"></xref> object, whose <xref href=\"System.IFormatProvider.GetFormat(System.Type)\" data-throw-if-not-resolved=\"false\"></xref> method returns a <xref href=\"System.Globalization.NumberFormatInfo\" data-throw-if-not-resolved=\"false\"></xref> object. The <xref href=\"System.Globalization.NumberFormatInfo\" data-throw-if-not-resolved=\"false\"></xref> object provides culture-specific information about the format of <em>s</em>.</p>\n"
  example:
  - "\n<p>The following example calls the <xref href=\"System.Byte.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Byte@)\" data-throw-if-not-resolved=\"false\"></xref> method with a number of different string values.</p>System.Byte.TryParse#2"
  syntax:
    content: public static bool TryParse(string s, NumberStyles style, IFormatProvider provider, out byte result)
    content.vb: Public Shared Function TryParse(s As String, style As NumberStyles, provider As IFormatProvider, ByRef result As Byte) As Boolean
    parameters:
    - id: s
      type: System.String
      description: "\n<p>A string containing a number to convert. The string is interpreted using the style specified by <em>style</em>. </p>\n"
    - id: style
      type: System.Globalization.NumberStyles
      description: "\n<p>A bitwise combination of enumeration values that indicates the style elements that can be present in <em>s</em>. A typical value to specify is <xref href=\"System.Globalization.NumberStyles.Integer\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
    - id: provider
      type: System.IFormatProvider
      description: "\n<p>An object that supplies culture-specific formatting information about <em>s</em>. If <em>provider</em> is <strong>null</strong>, the thread current culture is used. </p>\n"
    - id: result
      type: System.Byte
      description: "\n<p>When this method returns, contains the 8-bit unsigned integer value equivalent to the number contained in <em>s</em> if the conversion succeeded, or zero if the conversion failed. The conversion fails if the <em>s</em> parameter is <strong>null</strong>  or <xref href=\"System.String.Empty\" data-throw-if-not-resolved=\"false\"></xref>, is not of the correct format, or represents a number less than <xref href=\"System.Byte.MinValue\" data-throw-if-not-resolved=\"false\"></xref> or greater than <xref href=\"System.Byte.MaxValue\" data-throw-if-not-resolved=\"false\"></xref>. This parameter is passed uninitialized; any value originally supplied in <em>result</em> will be overwritten. </p>\n"
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if <em>s</em> was converted successfully; otherwise, <strong>false</strong>.</p>\n"
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<p>\n<em>style</em> is not a <xref href=\"System.Globalization.NumberStyles\" data-throw-if-not-resolved=\"false\"></xref> value. </p>\n<p>-or-</p>\n<p>\n<em>style</em> is not a combination of <xref href=\"System.Globalization.NumberStyles.AllowHexSpecifier\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"System.Globalization.NumberStyles.HexNumber\" data-throw-if-not-resolved=\"false\"></xref> values.</p>\n"
  seealso:
  - type: System.Byte.ToString
    commentId: M:System.Byte.ToString
  - type: System.Byte.MaxValue
    commentId: F:System.Byte.MaxValue
  - type: System.Byte.MinValue
    commentId: F:System.Byte.MinValue
  - type: System.Globalization.NumberStyles
    commentId: T:System.Globalization.NumberStyles
  - type: System.Globalization.NumberFormatInfo
    commentId: T:System.Globalization.NumberFormatInfo
  - type: System.IFormatProvider
    commentId: T:System.IFormatProvider
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Byte.TryParse(System.String, System.Globalization.NumberStyles, System.IFormatProvider, ByRef System.Byte)
  name.vb: TryParse(String, NumberStyles, IFormatProvider, ByRef Byte)
references:
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.IComparable
  parent: System
  isExternal: false
  name: IComparable
  fullName: System.IComparable
- uid: System.IComparable{System.Byte}
  parent: System
  definition: System.IComparable`1
  name: IComparable<Byte>
  fullName: System.IComparable<System.Byte>
  fullname.vb: System.IComparable(Of System.Byte)
  name.vb: IComparable(Of Byte)
  spec.csharp:
  - uid: System.IComparable`1
    name: IComparable
    fullName: System.IComparable
  - name: <
    fullName: <
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IComparable`1
    name: IComparable
    fullName: System.IComparable
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
  - name: )
    fullName: )
- uid: System.IConvertible
  parent: System
  isExternal: false
  name: IConvertible
  fullName: System.IConvertible
- uid: System.IEquatable{System.Byte}
  parent: System
  definition: System.IEquatable`1
  name: IEquatable<Byte>
  fullName: System.IEquatable<System.Byte>
  fullname.vb: System.IEquatable(Of System.Byte)
  name.vb: IEquatable(Of Byte)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    fullName: System.IEquatable
  - name: <
    fullName: <
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    fullName: System.IEquatable
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
  - name: )
    fullName: )
- uid: System.IFormattable
  parent: System
  isExternal: false
  name: IFormattable
  fullName: System.IFormattable
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: false
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
  - name: )
    fullName: )
- uid: System.IComparable`1
  parent: System
  isExternal: false
  name: IComparable<T>
  fullName: System.IComparable<T>
  fullname.vb: System.IComparable(Of T)
  name.vb: IComparable(Of T)
  spec.csharp:
  - uid: System.IComparable`1
    name: IComparable
    fullName: System.IComparable
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IComparable`1
    name: IComparable
    fullName: System.IComparable
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.IEquatable`1
  parent: System
  isExternal: false
  name: IEquatable<>
  fullName: System.IEquatable<>
  fullname.vb: System.IEquatable(Of )
  name.vb: IEquatable(Of )
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    fullName: System.IEquatable
  - name: <
    fullName: <
  - {}
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    fullName: System.IEquatable
  - name: '(Of '
    fullName: '(Of '
  - {}
  - name: )
    fullName: )
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System.Byte
  parent: System
  isExternal: false
  name: Byte
  fullName: System.Byte
- uid: System.IComparable{System.Byte}.CompareTo(System.Byte)
  parent: System.IComparable{System.Byte}
  definition: System.IComparable`1.CompareTo(`0)
  name: CompareTo(Byte)
  fullName: System.IComparable<System.Byte>.CompareTo(System.Byte)
  fullname.vb: System.IComparable(Of System.Byte).CompareTo(System.Byte)
  spec.csharp:
  - uid: System.IComparable`1.CompareTo(`0)
    name: CompareTo
    fullName: System.IComparable<System.Byte>.CompareTo
  - name: (
    fullName: (
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IComparable`1.CompareTo(`0)
    name: CompareTo
    fullName: System.IComparable(Of System.Byte).CompareTo
  - name: (
    fullName: (
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
  - name: )
    fullName: )
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  fullName: System.Int32
- uid: System.IComparable`1.CompareTo(`0)
  parent: System.IComparable`1
  isExternal: false
  name: CompareTo(T)
  fullName: System.IComparable<T>.CompareTo(T)
  fullname.vb: System.IComparable(Of T).CompareTo(T)
  spec.csharp:
  - uid: System.IComparable`1.CompareTo(`0)
    name: CompareTo
    fullName: System.IComparable<T>.CompareTo
  - name: (
    fullName: (
  - name: T
    fullName: T
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IComparable`1.CompareTo(`0)
    name: CompareTo
    fullName: System.IComparable(Of T).CompareTo
  - name: (
    fullName: (
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.IEquatable{System.Byte}.Equals(System.Byte)
  parent: System.IEquatable{System.Byte}
  definition: System.IEquatable`1.Equals(`0)
  name: Equals(Byte)
  fullName: System.IEquatable<System.Byte>.Equals(System.Byte)
  fullname.vb: System.IEquatable(Of System.Byte).Equals(System.Byte)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    fullName: System.IEquatable<System.Byte>.Equals
  - name: (
    fullName: (
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    fullName: System.IEquatable(Of System.Byte).Equals
  - name: (
    fullName: (
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
  - name: )
    fullName: )
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  fullName: System.Boolean
- uid: System.IEquatable`1.Equals(`0)
  parent: System.IEquatable`1
  isExternal: false
  name: Equals(T)
  fullName: System.IEquatable<T>.Equals(T)
  fullname.vb: System.IEquatable(Of T).Equals(T)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    fullName: System.IEquatable<T>.Equals
  - name: (
    fullName: (
  - name: T
    fullName: T
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    fullName: System.IEquatable(Of T).Equals
  - name: (
    fullName: (
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: false
  name: Equals(Object)
  fullName: System.ValueType.Equals(System.Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    fullName: System.ValueType.Equals
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    fullName: System.ValueType.Equals
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
  - name: )
    fullName: )
- uid: System.ValueType
  parent: System
  isExternal: false
  name: ValueType
  fullName: System.ValueType
- uid: System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: false
  name: GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    fullName: System.ValueType.GetHashCode
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    fullName: System.ValueType.GetHashCode
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.String
  parent: System
  isExternal: false
  name: String
  fullName: System.String
- uid: System.Globalization.NumberStyles
  parent: System.Globalization
  isExternal: false
  name: NumberStyles
  fullName: System.Globalization.NumberStyles
- uid: System.Globalization
  isExternal: false
  name: System.Globalization
  fullName: System.Globalization
- uid: System.IFormatProvider
  parent: System
  isExternal: false
  name: IFormatProvider
  fullName: System.IFormatProvider
- uid: System.IComparable.CompareTo(System.Object)
  parent: System.IComparable
  isExternal: false
  name: CompareTo(Object)
  fullName: System.IComparable.CompareTo(System.Object)
  spec.csharp:
  - uid: System.IComparable.CompareTo(System.Object)
    name: CompareTo
    fullName: System.IComparable.CompareTo
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IComparable.CompareTo(System.Object)
    name: CompareTo
    fullName: System.IComparable.CompareTo
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
  - name: )
    fullName: )
- uid: System.IConvertible.GetTypeCode
  parent: System.IConvertible
  isExternal: false
  name: GetTypeCode()
  fullName: System.IConvertible.GetTypeCode()
  spec.csharp:
  - uid: System.IConvertible.GetTypeCode
    name: GetTypeCode
    fullName: System.IConvertible.GetTypeCode
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IConvertible.GetTypeCode
    name: GetTypeCode
    fullName: System.IConvertible.GetTypeCode
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.TypeCode
  parent: System
  isExternal: false
  name: TypeCode
  fullName: System.TypeCode
- uid: System.IConvertible.ToBoolean(System.IFormatProvider)
  parent: System.IConvertible
  isExternal: false
  name: ToBoolean(IFormatProvider)
  fullName: System.IConvertible.ToBoolean(System.IFormatProvider)
  spec.csharp:
  - uid: System.IConvertible.ToBoolean(System.IFormatProvider)
    name: ToBoolean
    fullName: System.IConvertible.ToBoolean
  - name: (
    fullName: (
  - uid: System.IFormatProvider
    name: IFormatProvider
    fullName: System.IFormatProvider
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IConvertible.ToBoolean(System.IFormatProvider)
    name: ToBoolean
    fullName: System.IConvertible.ToBoolean
  - name: (
    fullName: (
  - uid: System.IFormatProvider
    name: IFormatProvider
    fullName: System.IFormatProvider
  - name: )
    fullName: )
- uid: System.IConvertible.ToByte(System.IFormatProvider)
  parent: System.IConvertible
  isExternal: false
  name: ToByte(IFormatProvider)
  fullName: System.IConvertible.ToByte(System.IFormatProvider)
  spec.csharp:
  - uid: System.IConvertible.ToByte(System.IFormatProvider)
    name: ToByte
    fullName: System.IConvertible.ToByte
  - name: (
    fullName: (
  - uid: System.IFormatProvider
    name: IFormatProvider
    fullName: System.IFormatProvider
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IConvertible.ToByte(System.IFormatProvider)
    name: ToByte
    fullName: System.IConvertible.ToByte
  - name: (
    fullName: (
  - uid: System.IFormatProvider
    name: IFormatProvider
    fullName: System.IFormatProvider
  - name: )
    fullName: )
- uid: System.IConvertible.ToChar(System.IFormatProvider)
  parent: System.IConvertible
  isExternal: false
  name: ToChar(IFormatProvider)
  fullName: System.IConvertible.ToChar(System.IFormatProvider)
  spec.csharp:
  - uid: System.IConvertible.ToChar(System.IFormatProvider)
    name: ToChar
    fullName: System.IConvertible.ToChar
  - name: (
    fullName: (
  - uid: System.IFormatProvider
    name: IFormatProvider
    fullName: System.IFormatProvider
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IConvertible.ToChar(System.IFormatProvider)
    name: ToChar
    fullName: System.IConvertible.ToChar
  - name: (
    fullName: (
  - uid: System.IFormatProvider
    name: IFormatProvider
    fullName: System.IFormatProvider
  - name: )
    fullName: )
- uid: System.Char
  parent: System
  isExternal: false
  name: Char
  fullName: System.Char
- uid: System.IConvertible.ToDateTime(System.IFormatProvider)
  parent: System.IConvertible
  isExternal: false
  name: ToDateTime(IFormatProvider)
  fullName: System.IConvertible.ToDateTime(System.IFormatProvider)
  spec.csharp:
  - uid: System.IConvertible.ToDateTime(System.IFormatProvider)
    name: ToDateTime
    fullName: System.IConvertible.ToDateTime
  - name: (
    fullName: (
  - uid: System.IFormatProvider
    name: IFormatProvider
    fullName: System.IFormatProvider
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IConvertible.ToDateTime(System.IFormatProvider)
    name: ToDateTime
    fullName: System.IConvertible.ToDateTime
  - name: (
    fullName: (
  - uid: System.IFormatProvider
    name: IFormatProvider
    fullName: System.IFormatProvider
  - name: )
    fullName: )
- uid: System.DateTime
  parent: System
  isExternal: false
  name: DateTime
  fullName: System.DateTime
- uid: System.IConvertible.ToDecimal(System.IFormatProvider)
  parent: System.IConvertible
  isExternal: false
  name: ToDecimal(IFormatProvider)
  fullName: System.IConvertible.ToDecimal(System.IFormatProvider)
  spec.csharp:
  - uid: System.IConvertible.ToDecimal(System.IFormatProvider)
    name: ToDecimal
    fullName: System.IConvertible.ToDecimal
  - name: (
    fullName: (
  - uid: System.IFormatProvider
    name: IFormatProvider
    fullName: System.IFormatProvider
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IConvertible.ToDecimal(System.IFormatProvider)
    name: ToDecimal
    fullName: System.IConvertible.ToDecimal
  - name: (
    fullName: (
  - uid: System.IFormatProvider
    name: IFormatProvider
    fullName: System.IFormatProvider
  - name: )
    fullName: )
- uid: System.Decimal
  parent: System
  isExternal: false
  name: Decimal
  fullName: System.Decimal
- uid: System.IConvertible.ToDouble(System.IFormatProvider)
  parent: System.IConvertible
  isExternal: false
  name: ToDouble(IFormatProvider)
  fullName: System.IConvertible.ToDouble(System.IFormatProvider)
  spec.csharp:
  - uid: System.IConvertible.ToDouble(System.IFormatProvider)
    name: ToDouble
    fullName: System.IConvertible.ToDouble
  - name: (
    fullName: (
  - uid: System.IFormatProvider
    name: IFormatProvider
    fullName: System.IFormatProvider
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IConvertible.ToDouble(System.IFormatProvider)
    name: ToDouble
    fullName: System.IConvertible.ToDouble
  - name: (
    fullName: (
  - uid: System.IFormatProvider
    name: IFormatProvider
    fullName: System.IFormatProvider
  - name: )
    fullName: )
- uid: System.Double
  parent: System
  isExternal: false
  name: Double
  fullName: System.Double
- uid: System.IConvertible.ToInt16(System.IFormatProvider)
  parent: System.IConvertible
  isExternal: false
  name: ToInt16(IFormatProvider)
  fullName: System.IConvertible.ToInt16(System.IFormatProvider)
  spec.csharp:
  - uid: System.IConvertible.ToInt16(System.IFormatProvider)
    name: ToInt16
    fullName: System.IConvertible.ToInt16
  - name: (
    fullName: (
  - uid: System.IFormatProvider
    name: IFormatProvider
    fullName: System.IFormatProvider
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IConvertible.ToInt16(System.IFormatProvider)
    name: ToInt16
    fullName: System.IConvertible.ToInt16
  - name: (
    fullName: (
  - uid: System.IFormatProvider
    name: IFormatProvider
    fullName: System.IFormatProvider
  - name: )
    fullName: )
- uid: System.Int16
  parent: System
  isExternal: false
  name: Int16
  fullName: System.Int16
- uid: System.IConvertible.ToInt32(System.IFormatProvider)
  parent: System.IConvertible
  isExternal: false
  name: ToInt32(IFormatProvider)
  fullName: System.IConvertible.ToInt32(System.IFormatProvider)
  spec.csharp:
  - uid: System.IConvertible.ToInt32(System.IFormatProvider)
    name: ToInt32
    fullName: System.IConvertible.ToInt32
  - name: (
    fullName: (
  - uid: System.IFormatProvider
    name: IFormatProvider
    fullName: System.IFormatProvider
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IConvertible.ToInt32(System.IFormatProvider)
    name: ToInt32
    fullName: System.IConvertible.ToInt32
  - name: (
    fullName: (
  - uid: System.IFormatProvider
    name: IFormatProvider
    fullName: System.IFormatProvider
  - name: )
    fullName: )
- uid: System.IConvertible.ToInt64(System.IFormatProvider)
  parent: System.IConvertible
  isExternal: false
  name: ToInt64(IFormatProvider)
  fullName: System.IConvertible.ToInt64(System.IFormatProvider)
  spec.csharp:
  - uid: System.IConvertible.ToInt64(System.IFormatProvider)
    name: ToInt64
    fullName: System.IConvertible.ToInt64
  - name: (
    fullName: (
  - uid: System.IFormatProvider
    name: IFormatProvider
    fullName: System.IFormatProvider
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IConvertible.ToInt64(System.IFormatProvider)
    name: ToInt64
    fullName: System.IConvertible.ToInt64
  - name: (
    fullName: (
  - uid: System.IFormatProvider
    name: IFormatProvider
    fullName: System.IFormatProvider
  - name: )
    fullName: )
- uid: System.Int64
  parent: System
  isExternal: false
  name: Int64
  fullName: System.Int64
- uid: System.IConvertible.ToSByte(System.IFormatProvider)
  parent: System.IConvertible
  isExternal: false
  name: ToSByte(IFormatProvider)
  fullName: System.IConvertible.ToSByte(System.IFormatProvider)
  spec.csharp:
  - uid: System.IConvertible.ToSByte(System.IFormatProvider)
    name: ToSByte
    fullName: System.IConvertible.ToSByte
  - name: (
    fullName: (
  - uid: System.IFormatProvider
    name: IFormatProvider
    fullName: System.IFormatProvider
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IConvertible.ToSByte(System.IFormatProvider)
    name: ToSByte
    fullName: System.IConvertible.ToSByte
  - name: (
    fullName: (
  - uid: System.IFormatProvider
    name: IFormatProvider
    fullName: System.IFormatProvider
  - name: )
    fullName: )
- uid: System.SByte
  parent: System
  isExternal: false
  name: SByte
  fullName: System.SByte
- uid: System.IConvertible.ToSingle(System.IFormatProvider)
  parent: System.IConvertible
  isExternal: false
  name: ToSingle(IFormatProvider)
  fullName: System.IConvertible.ToSingle(System.IFormatProvider)
  spec.csharp:
  - uid: System.IConvertible.ToSingle(System.IFormatProvider)
    name: ToSingle
    fullName: System.IConvertible.ToSingle
  - name: (
    fullName: (
  - uid: System.IFormatProvider
    name: IFormatProvider
    fullName: System.IFormatProvider
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IConvertible.ToSingle(System.IFormatProvider)
    name: ToSingle
    fullName: System.IConvertible.ToSingle
  - name: (
    fullName: (
  - uid: System.IFormatProvider
    name: IFormatProvider
    fullName: System.IFormatProvider
  - name: )
    fullName: )
- uid: System.Single
  parent: System
  isExternal: false
  name: Single
  fullName: System.Single
- uid: System.IConvertible.ToType(System.Type,System.IFormatProvider)
  parent: System.IConvertible
  isExternal: false
  name: ToType(Type, IFormatProvider)
  fullName: System.IConvertible.ToType(System.Type, System.IFormatProvider)
  spec.csharp:
  - uid: System.IConvertible.ToType(System.Type,System.IFormatProvider)
    name: ToType
    fullName: System.IConvertible.ToType
  - name: (
    fullName: (
  - uid: System.Type
    name: Type
    fullName: System.Type
  - name: ', '
    fullName: ', '
  - uid: System.IFormatProvider
    name: IFormatProvider
    fullName: System.IFormatProvider
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IConvertible.ToType(System.Type,System.IFormatProvider)
    name: ToType
    fullName: System.IConvertible.ToType
  - name: (
    fullName: (
  - uid: System.Type
    name: Type
    fullName: System.Type
  - name: ', '
    fullName: ', '
  - uid: System.IFormatProvider
    name: IFormatProvider
    fullName: System.IFormatProvider
  - name: )
    fullName: )
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  fullName: System.Type
- uid: System.IConvertible.ToUInt16(System.IFormatProvider)
  parent: System.IConvertible
  isExternal: false
  name: ToUInt16(IFormatProvider)
  fullName: System.IConvertible.ToUInt16(System.IFormatProvider)
  spec.csharp:
  - uid: System.IConvertible.ToUInt16(System.IFormatProvider)
    name: ToUInt16
    fullName: System.IConvertible.ToUInt16
  - name: (
    fullName: (
  - uid: System.IFormatProvider
    name: IFormatProvider
    fullName: System.IFormatProvider
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IConvertible.ToUInt16(System.IFormatProvider)
    name: ToUInt16
    fullName: System.IConvertible.ToUInt16
  - name: (
    fullName: (
  - uid: System.IFormatProvider
    name: IFormatProvider
    fullName: System.IFormatProvider
  - name: )
    fullName: )
- uid: System.UInt16
  parent: System
  isExternal: false
  name: UInt16
  fullName: System.UInt16
- uid: System.IConvertible.ToUInt32(System.IFormatProvider)
  parent: System.IConvertible
  isExternal: false
  name: ToUInt32(IFormatProvider)
  fullName: System.IConvertible.ToUInt32(System.IFormatProvider)
  spec.csharp:
  - uid: System.IConvertible.ToUInt32(System.IFormatProvider)
    name: ToUInt32
    fullName: System.IConvertible.ToUInt32
  - name: (
    fullName: (
  - uid: System.IFormatProvider
    name: IFormatProvider
    fullName: System.IFormatProvider
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IConvertible.ToUInt32(System.IFormatProvider)
    name: ToUInt32
    fullName: System.IConvertible.ToUInt32
  - name: (
    fullName: (
  - uid: System.IFormatProvider
    name: IFormatProvider
    fullName: System.IFormatProvider
  - name: )
    fullName: )
- uid: System.UInt32
  parent: System
  isExternal: false
  name: UInt32
  fullName: System.UInt32
- uid: System.IConvertible.ToUInt64(System.IFormatProvider)
  parent: System.IConvertible
  isExternal: false
  name: ToUInt64(IFormatProvider)
  fullName: System.IConvertible.ToUInt64(System.IFormatProvider)
  spec.csharp:
  - uid: System.IConvertible.ToUInt64(System.IFormatProvider)
    name: ToUInt64
    fullName: System.IConvertible.ToUInt64
  - name: (
    fullName: (
  - uid: System.IFormatProvider
    name: IFormatProvider
    fullName: System.IFormatProvider
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IConvertible.ToUInt64(System.IFormatProvider)
    name: ToUInt64
    fullName: System.IConvertible.ToUInt64
  - name: (
    fullName: (
  - uid: System.IFormatProvider
    name: IFormatProvider
    fullName: System.IFormatProvider
  - name: )
    fullName: )
- uid: System.UInt64
  parent: System
  isExternal: false
  name: UInt64
  fullName: System.UInt64
- uid: System.ValueType.ToString
  parent: System.ValueType
  isExternal: false
  name: ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    fullName: System.ValueType.ToString
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    fullName: System.ValueType.ToString
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.IConvertible.ToString(System.IFormatProvider)
  parent: System.IConvertible
  isExternal: false
  name: ToString(IFormatProvider)
  fullName: System.IConvertible.ToString(System.IFormatProvider)
  spec.csharp:
  - uid: System.IConvertible.ToString(System.IFormatProvider)
    name: ToString
    fullName: System.IConvertible.ToString
  - name: (
    fullName: (
  - uid: System.IFormatProvider
    name: IFormatProvider
    fullName: System.IFormatProvider
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IConvertible.ToString(System.IFormatProvider)
    name: ToString
    fullName: System.IConvertible.ToString
  - name: (
    fullName: (
  - uid: System.IFormatProvider
    name: IFormatProvider
    fullName: System.IFormatProvider
  - name: )
    fullName: )
- uid: System.IFormattable.ToString(System.String,System.IFormatProvider)
  parent: System.IFormattable
  isExternal: false
  name: ToString(String, IFormatProvider)
  fullName: System.IFormattable.ToString(System.String, System.IFormatProvider)
  spec.csharp:
  - uid: System.IFormattable.ToString(System.String,System.IFormatProvider)
    name: ToString
    fullName: System.IFormattable.ToString
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
  - name: ', '
    fullName: ', '
  - uid: System.IFormatProvider
    name: IFormatProvider
    fullName: System.IFormatProvider
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IFormattable.ToString(System.String,System.IFormatProvider)
    name: ToString
    fullName: System.IFormattable.ToString
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
  - name: ', '
    fullName: ', '
  - uid: System.IFormatProvider
    name: IFormatProvider
    fullName: System.IFormatProvider
  - name: )
    fullName: )
- uid: System.ArgumentNullException
  isExternal: false
  name: ArgumentNullException
  fullName: System.ArgumentNullException
- uid: System.FormatException
  parent: System
  isExternal: false
  name: FormatException
  fullName: System.FormatException
- uid: System.OverflowException
  isExternal: false
  name: OverflowException
  fullName: System.OverflowException
- uid: System.ArgumentException
  parent: System
  isExternal: false
  name: ArgumentException
  fullName: System.ArgumentException
- uid: System.InvalidCastException
  isExternal: false
  name: InvalidCastException
  fullName: System.InvalidCastException
