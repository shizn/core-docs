items:
- uid: System.ComponentModel.AttributeCollection
  commentId: T:System.ComponentModel.AttributeCollection
  id: AttributeCollection
  parent: System.ComponentModel
  children:
  - System.ComponentModel.AttributeCollection.#ctor
  - System.ComponentModel.AttributeCollection.#ctor(System.Attribute[])
  - System.ComponentModel.AttributeCollection.Attributes
  - System.ComponentModel.AttributeCollection.Contains(System.Attribute)
  - System.ComponentModel.AttributeCollection.Contains(System.Attribute[])
  - System.ComponentModel.AttributeCollection.CopyTo(System.Array,System.Int32)
  - System.ComponentModel.AttributeCollection.Count
  - System.ComponentModel.AttributeCollection.Empty
  - System.ComponentModel.AttributeCollection.FromExisting(System.ComponentModel.AttributeCollection,System.Attribute[])
  - System.ComponentModel.AttributeCollection.GetDefaultAttribute(System.Type)
  - System.ComponentModel.AttributeCollection.GetEnumerator
  - System.ComponentModel.AttributeCollection.Item(System.Int32)
  - System.ComponentModel.AttributeCollection.Item(System.Type)
  - System.ComponentModel.AttributeCollection.Matches(System.Attribute)
  - System.ComponentModel.AttributeCollection.Matches(System.Attribute[])
  langs:
  - csharp
  - vb
  name: AttributeCollection
  fullName: System.ComponentModel.AttributeCollection
  type: Class
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/AttributeCollection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: AttributeCollection
    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/AttributeCollection.cs
    startLine: 14
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: Represents a collection of attributes.
  syntax:
    content: 'public class AttributeCollection : Collections.ICollection, Collections.IEnumerable'
    content.vb: >-
      Public Class AttributeCollection
          Inherits Collections.ICollection
          Implements Collections.IEnumerable
  inheritance:
  - System.Object
  implements:
  - System.Collections.IEnumerable
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: System.ComponentModel.AttributeCollection.Empty
  commentId: F:System.ComponentModel.AttributeCollection.Empty
  id: Empty
  parent: System.ComponentModel.AttributeCollection
  langs:
  - csharp
  - vb
  name: Empty
  fullName: System.ComponentModel.AttributeCollection.Empty
  type: Field
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/AttributeCollection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Empty
    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/AttributeCollection.cs
    startLine: 19
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: Specifies an empty collection that you can use, rather than creating a new one. This field is read-only.
  syntax:
    content: public static readonly AttributeCollection Empty
    content.vb: Public Shared ReadOnly Empty As AttributeCollection
    return:
      type: System.ComponentModel.AttributeCollection
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: System.ComponentModel.AttributeCollection.#ctor
  commentId: M:System.ComponentModel.AttributeCollection.#ctor
  id: '#ctor'
  parent: System.ComponentModel.AttributeCollection
  langs:
  - csharp
  - vb
  name: AttributeCollection()
  fullName: System.ComponentModel.AttributeCollection.AttributeCollection()
  type: Constructor
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/AttributeCollection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/AttributeCollection.cs
    startLine: 54
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: 'Initializes a new instance of the <xref href="System.ComponentModel.AttributeCollection" data-throw-if-not-resolved="false"></xref> class. '
  syntax:
    content: protected AttributeCollection()
    content.vb: Protected Sub New
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: System.ComponentModel.AttributeCollection.#ctor(System.Attribute[])
  commentId: M:System.ComponentModel.AttributeCollection.#ctor(System.Attribute[])
  id: '#ctor(System.Attribute[])'
  parent: System.ComponentModel.AttributeCollection
  langs:
  - csharp
  - vb
  name: AttributeCollection(Attribute[])
  fullName: System.ComponentModel.AttributeCollection.AttributeCollection(System.Attribute[])
  type: Constructor
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/ref/System.ComponentModel.TypeConverter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.ComponentModel.TypeConverter/ref/System.ComponentModel.TypeConverter.cs
    startLine: 21
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: Initializes a new instance of the <xref href="System.ComponentModel.AttributeCollection" data-throw-if-not-resolved="false"></xref> class.
  syntax:
    content: public AttributeCollection(params Attribute[] attributes)
    content.vb: Public Sub New(ParamArray attributes As Attribute())
    parameters:
    - id: attributes
      type: System.Attribute[]
      description: 'An array of type <xref href="System.Attribute" data-throw-if-not-resolved="false"></xref> that provides the attributes for this collection. '
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>attributes</em> is null."
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.ComponentModel.AttributeCollection.AttributeCollection(System.Attribute())
  name.vb: AttributeCollection(Attribute())
- uid: System.ComponentModel.AttributeCollection.Attributes
  commentId: P:System.ComponentModel.AttributeCollection.Attributes
  id: Attributes
  parent: System.ComponentModel.AttributeCollection
  langs:
  - csharp
  - vb
  name: Attributes
  fullName: System.ComponentModel.AttributeCollection.Attributes
  type: Property
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/AttributeCollection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Attributes
    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/AttributeCollection.cs
    startLine: 126
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: Gets the attribute collection.
  syntax:
    content: protected virtual Attribute[] Attributes { get; }
    content.vb: Protected Overridable ReadOnly Property Attributes As Attribute()
    parameters: []
    return:
      type: System.Attribute[]
      description: The attribute collection.
  modifiers.csharp:
  - protected
  - virtual
  - get
  modifiers.vb:
  - Protected
  - Overridable
  - ReadOnly
- uid: System.ComponentModel.AttributeCollection.Contains(System.Attribute)
  commentId: M:System.ComponentModel.AttributeCollection.Contains(System.Attribute)
  id: Contains(System.Attribute)
  parent: System.ComponentModel.AttributeCollection
  langs:
  - csharp
  - vb
  name: Contains(Attribute)
  fullName: System.ComponentModel.AttributeCollection.Contains(System.Attribute)
  type: Method
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/ref/System.ComponentModel.TypeConverter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Contains
    path: src/System.ComponentModel.TypeConverter/ref/System.ComponentModel.TypeConverter.cs
    startLine: 23
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: Determines whether this collection of attributes has the specified attribute.
  syntax:
    content: public bool Contains(Attribute attribute)
    content.vb: Public Function Contains(attribute As Attribute) As Boolean
    parameters:
    - id: attribute
      type: System.Attribute
      description: 'An <xref href="System.Attribute" data-throw-if-not-resolved="false"></xref> to find in the collection. '
    return:
      type: System.Boolean
      description: true if the collection contains the attribute or is the default attribute for the type of attribute; otherwise, false.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.ComponentModel.AttributeCollection.Contains(System.Attribute[])
  commentId: M:System.ComponentModel.AttributeCollection.Contains(System.Attribute[])
  id: Contains(System.Attribute[])
  parent: System.ComponentModel.AttributeCollection
  langs:
  - csharp
  - vb
  name: Contains(Attribute[])
  fullName: System.ComponentModel.AttributeCollection.Contains(System.Attribute[])
  type: Method
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/ref/System.ComponentModel.TypeConverter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Contains
    path: src/System.ComponentModel.TypeConverter/ref/System.ComponentModel.TypeConverter.cs
    startLine: 24
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: Determines whether this attribute collection contains all the specified attributes in the attribute array.
  syntax:
    content: public bool Contains(Attribute[] attributes)
    content.vb: Public Function Contains(attributes As Attribute()) As Boolean
    parameters:
    - id: attributes
      type: System.Attribute[]
      description: 'An array of type <xref href="System.Attribute" data-throw-if-not-resolved="false"></xref> to find in the collection. '
    return:
      type: System.Boolean
      description: true if the collection contains all the attributes; otherwise, false.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.ComponentModel.AttributeCollection.Contains(System.Attribute())
  name.vb: Contains(Attribute())
- uid: System.ComponentModel.AttributeCollection.CopyTo(System.Array,System.Int32)
  commentId: M:System.ComponentModel.AttributeCollection.CopyTo(System.Array,System.Int32)
  id: CopyTo(System.Array,System.Int32)
  parent: System.ComponentModel.AttributeCollection
  langs:
  - csharp
  - vb
  name: CopyTo(Array, Int32)
  fullName: System.ComponentModel.AttributeCollection.CopyTo(System.Array, System.Int32)
  type: Method
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/ref/System.ComponentModel.TypeConverter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CopyTo
    path: src/System.ComponentModel.TypeConverter/ref/System.ComponentModel.TypeConverter.cs
    startLine: 25
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: Copies the collection to an array, starting at the specified index.
  syntax:
    content: public void CopyTo(Array array, int index)
    content.vb: Public Sub CopyTo(array As Array, index As Integer)
    parameters:
    - id: array
      type: System.Array
      description: 'The <xref href="System.Array" data-throw-if-not-resolved="false"></xref> to copy the collection to. '
    - id: index
      type: System.Int32
      description: 'The index to start from. '
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.ComponentModel.AttributeCollection.Count
  commentId: P:System.ComponentModel.AttributeCollection.Count
  id: Count
  parent: System.ComponentModel.AttributeCollection
  langs:
  - csharp
  - vb
  name: Count
  fullName: System.ComponentModel.AttributeCollection.Count
  type: Property
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/AttributeCollection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Count
    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/AttributeCollection.cs
    startLine: 138
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: Gets the number of attributes.
  syntax:
    content: public int Count { get; }
    content.vb: Public ReadOnly Property Count As Integer
    parameters: []
    return:
      type: System.Int32
      description: The number of attributes.
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.ComponentModel.AttributeCollection.FromExisting(System.ComponentModel.AttributeCollection,System.Attribute[])
  commentId: M:System.ComponentModel.AttributeCollection.FromExisting(System.ComponentModel.AttributeCollection,System.Attribute[])
  id: FromExisting(System.ComponentModel.AttributeCollection,System.Attribute[])
  parent: System.ComponentModel.AttributeCollection
  langs:
  - csharp
  - vb
  name: FromExisting(AttributeCollection, Attribute[])
  fullName: System.ComponentModel.AttributeCollection.FromExisting(System.ComponentModel.AttributeCollection, System.Attribute[])
  type: Method
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/ref/System.ComponentModel.TypeConverter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: FromExisting
    path: src/System.ComponentModel.TypeConverter/ref/System.ComponentModel.TypeConverter.cs
    startLine: 27
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: Creates a new <xref href="System.ComponentModel.AttributeCollection" data-throw-if-not-resolved="false"></xref> from an existing <xref href="System.ComponentModel.AttributeCollection" data-throw-if-not-resolved="false"></xref>.
  syntax:
    content: public static AttributeCollection FromExisting(AttributeCollection existing, params Attribute[] newAttributes)
    content.vb: Public Shared Function FromExisting(existing As AttributeCollection, ParamArray newAttributes As Attribute()) As AttributeCollection
    parameters:
    - id: existing
      type: System.ComponentModel.AttributeCollection
      description: An <xref href="System.ComponentModel.AttributeCollection" data-throw-if-not-resolved="false"></xref> from which to create the copy.
    - id: newAttributes
      type: System.Attribute[]
      description: An array of type <xref href="System.Attribute" data-throw-if-not-resolved="false"></xref> that provides the attributes for this collection. Can be null.
    return:
      type: System.ComponentModel.AttributeCollection
      description: A new <xref href="System.ComponentModel.AttributeCollection" data-throw-if-not-resolved="false"></xref> that is a copy of <em>existing</em>.
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>existing</em> is null."
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.ComponentModel.AttributeCollection.FromExisting(System.ComponentModel.AttributeCollection, System.Attribute())
  name.vb: FromExisting(AttributeCollection, Attribute())
- uid: System.ComponentModel.AttributeCollection.GetDefaultAttribute(System.Type)
  commentId: M:System.ComponentModel.AttributeCollection.GetDefaultAttribute(System.Type)
  id: GetDefaultAttribute(System.Type)
  parent: System.ComponentModel.AttributeCollection
  langs:
  - csharp
  - vb
  name: GetDefaultAttribute(Type)
  fullName: System.ComponentModel.AttributeCollection.GetDefaultAttribute(System.Type)
  type: Method
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/ref/System.ComponentModel.TypeConverter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetDefaultAttribute
    path: src/System.ComponentModel.TypeConverter/ref/System.ComponentModel.TypeConverter.cs
    startLine: 28
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: Returns the default <xref href="System.Attribute" data-throw-if-not-resolved="false"></xref> of a given <xref href="System.Type" data-throw-if-not-resolved="false"></xref>.
  syntax:
    content: protected Attribute GetDefaultAttribute(Type attributeType)
    content.vb: Protected Function GetDefaultAttribute(attributeType As Type) As Attribute
    parameters:
    - id: attributeType
      type: System.Type
      description: 'The <xref href="System.Type" data-throw-if-not-resolved="false"></xref> of the attribute to retrieve. '
    return:
      type: System.Attribute
      description: The default <xref href="System.Attribute" data-throw-if-not-resolved="false"></xref> of a given <em>attributeType</em>.
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: System.ComponentModel.AttributeCollection.GetEnumerator
  commentId: M:System.ComponentModel.AttributeCollection.GetEnumerator
  id: GetEnumerator
  parent: System.ComponentModel.AttributeCollection
  langs:
  - csharp
  - vb
  name: GetEnumerator()
  fullName: System.ComponentModel.AttributeCollection.GetEnumerator()
  type: Method
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/AttributeCollection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetEnumerator
    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/AttributeCollection.cs
    startLine: 324
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: Gets an enumerator for this collection.
  syntax:
    content: public Collections.IEnumerator GetEnumerator()
    content.vb: Public Function GetEnumerator As Collections.IEnumerator
    return:
      type: System.Collections.IEnumerator
      description: An enumerator of type <xref href="System.Collections.IEnumerator" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.ComponentModel.AttributeCollection.Matches(System.Attribute)
  commentId: M:System.ComponentModel.AttributeCollection.Matches(System.Attribute)
  id: Matches(System.Attribute)
  parent: System.ComponentModel.AttributeCollection
  langs:
  - csharp
  - vb
  name: Matches(Attribute)
  fullName: System.ComponentModel.AttributeCollection.Matches(System.Attribute)
  type: Method
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/ref/System.ComponentModel.TypeConverter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Matches
    path: src/System.ComponentModel.TypeConverter/ref/System.ComponentModel.TypeConverter.cs
    startLine: 31
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: Determines whether a specified attribute is the same as an attribute in the collection.
  syntax:
    content: public bool Matches(Attribute attribute)
    content.vb: Public Function Matches(attribute As Attribute) As Boolean
    parameters:
    - id: attribute
      type: System.Attribute
      description: 'An instance of <xref href="System.Attribute" data-throw-if-not-resolved="false"></xref> to compare with the attributes in this collection. '
    return:
      type: System.Boolean
      description: true if the attribute is contained within the collection and has the same value as the attribute in the collection; otherwise, false.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.ComponentModel.AttributeCollection.Matches(System.Attribute[])
  commentId: M:System.ComponentModel.AttributeCollection.Matches(System.Attribute[])
  id: Matches(System.Attribute[])
  parent: System.ComponentModel.AttributeCollection
  langs:
  - csharp
  - vb
  name: Matches(Attribute[])
  fullName: System.ComponentModel.AttributeCollection.Matches(System.Attribute[])
  type: Method
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/ref/System.ComponentModel.TypeConverter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Matches
    path: src/System.ComponentModel.TypeConverter/ref/System.ComponentModel.TypeConverter.cs
    startLine: 32
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: Determines whether the attributes in the specified array are the same as the attributes in the collection.
  syntax:
    content: public bool Matches(Attribute[] attributes)
    content.vb: Public Function Matches(attributes As Attribute()) As Boolean
    parameters:
    - id: attributes
      type: System.Attribute[]
      description: 'An array of <xref href="System.CodeDom.MemberAttributes" data-throw-if-not-resolved="false"></xref> to compare with the attributes in this collection. '
    return:
      type: System.Boolean
      description: true if all the attributes in the array are contained in the collection and have the same values as the attributes in the collection; otherwise, false.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.ComponentModel.AttributeCollection.Matches(System.Attribute())
  name.vb: Matches(Attribute())
- uid: System.ComponentModel.AttributeCollection.Item(System.Int32)
  commentId: P:System.ComponentModel.AttributeCollection.Item(System.Int32)
  id: Item(System.Int32)
  parent: System.ComponentModel.AttributeCollection
  langs:
  - csharp
  - vb
  name: Item[Int32]
  fullName: System.ComponentModel.AttributeCollection.Item[System.Int32]
  type: Property
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/AttributeCollection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: this[]
    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/AttributeCollection.cs
    startLine: 149
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: Gets the attribute with the specified index number.
  syntax:
    content: public virtual Attribute this[int index] { get; }
    content.vb: Public Overridable ReadOnly Property Item(index As Integer) As Attribute
    parameters:
    - id: index
      type: System.Int32
      description: 'The zero-based index of <xref href="System.ComponentModel.AttributeCollection" data-throw-if-not-resolved="false"></xref>. '
    return:
      type: System.Attribute
      description: The <xref href="System.Attribute" data-throw-if-not-resolved="false"></xref> with the specified index number.
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
  fullName.vb: System.ComponentModel.AttributeCollection.Item(System.Int32)
  name.vb: Item(Int32)
- uid: System.ComponentModel.AttributeCollection.Item(System.Type)
  commentId: P:System.ComponentModel.AttributeCollection.Item(System.Type)
  id: Item(System.Type)
  parent: System.ComponentModel.AttributeCollection
  langs:
  - csharp
  - vb
  name: Item[Type]
  fullName: System.ComponentModel.AttributeCollection.Item[System.Type]
  type: Property
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/ref/System.ComponentModel.TypeConverter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: this[]
    path: src/System.ComponentModel.TypeConverter/ref/System.ComponentModel.TypeConverter.cs
    startLine: 35
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: Gets the attribute with the specified type.
  syntax:
    content: public virtual Attribute this[Type attributeType] { get; }
    content.vb: Public Overridable ReadOnly Property Item(attributeType As Type) As Attribute
    parameters:
    - id: attributeType
      type: System.Type
      description: 'The <xref href="System.Type" data-throw-if-not-resolved="false"></xref> of the <xref href="System.Attribute" data-throw-if-not-resolved="false"></xref> to get from the collection. '
    return:
      type: System.Attribute
      description: The <xref href="System.Attribute" data-throw-if-not-resolved="false"></xref> with the specified type or, if the attribute does not exist, the default value for the attribute type.
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
  fullName.vb: System.ComponentModel.AttributeCollection.Item(System.Type)
  name.vb: Item(Type)
references:
- uid: System.ComponentModel
  isExternal: false
  name: System.ComponentModel
  fullName: System.ComponentModel
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System.Collections.IEnumerable
  parent: System.Collections
  isExternal: false
  name: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Collections
  isExternal: false
  name: System.Collections
  fullName: System.Collections
- uid: System.ComponentModel.AttributeCollection
  parent: System.ComponentModel
  isExternal: false
  name: AttributeCollection
  fullName: System.ComponentModel.AttributeCollection
- uid: System.Attribute[]
  isExternal: true
  name: Attribute[]
  fullName: System.Attribute[]
  fullname.vb: System.Attribute()
  name.vb: Attribute()
  spec.csharp:
  - uid: System.Attribute
    name: Attribute
    fullName: System.Attribute
    isExternal: true
  - name: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Attribute
    name: Attribute
    fullName: System.Attribute
    isExternal: true
  - name: ()
    fullName: ()
- uid: System.Attribute
  parent: System
  isExternal: false
  name: Attribute
  fullName: System.Attribute
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  fullName: System.Boolean
- uid: System.Array
  parent: System
  isExternal: false
  name: Array
  fullName: System.Array
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  fullName: System.Int32
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  fullName: System.Type
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: false
  name: Collections.IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.ArgumentNullException
  isExternal: false
  name: ArgumentNullException
  fullName: System.ArgumentNullException
