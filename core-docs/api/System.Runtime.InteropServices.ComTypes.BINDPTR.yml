items:
- uid: System.Runtime.InteropServices.ComTypes.BINDPTR
  commentId: T:System.Runtime.InteropServices.ComTypes.BINDPTR
  id: BINDPTR
  parent: System.Runtime.InteropServices.ComTypes
  children:
  - System.Runtime.InteropServices.ComTypes.BINDPTR.lpfuncdesc
  - System.Runtime.InteropServices.ComTypes.BINDPTR.lptcomp
  - System.Runtime.InteropServices.ComTypes.BINDPTR.lpvardesc
  langs:
  - csharp
  - vb
  name: BINDPTR
  fullName: System.Runtime.InteropServices.ComTypes.BINDPTR
  type: Struct
  source:
    remote:
      path: src/mscorlib/src/System/Runtime/InteropServices/ComTypes/ITypeComp.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: BINDPTR
    path: src/mscorlib/src/System/Runtime/InteropServices/ComTypes/ITypeComp.cs
    startLine: 28
  assemblies:
  - System.Runtime.InteropServices
  namespace: System.Runtime.InteropServices.ComTypes
  summary: "\n<p>Contains a pointer to a bound-to <xref href=\"System.Runtime.InteropServices.FUNCDESC\" data-throw-if-not-resolved=\"false\"></xref> structure, <xref href=\"System.Runtime.InteropServices.VARDESC\" data-throw-if-not-resolved=\"false\"></xref> structure, or an <strong>ITypeComp</strong> interface.</p>\n"
  remarks: "\n<p>For more information about the <strong>BINDPTR</strong> type, see the MSDN Library.</p>\n<p>The common language runtime throws an exception when a COM method in native code returns an HRESULT. For more information, see How to: Map HRESULTs and Exceptions.</p>\n"
  syntax:
    content: >-
      [StructLayout(LayoutKind.Explicit, CharSet = CharSet.Unicode)]

      public struct BINDPTR
    content.vb: >-
      <StructLayout(LayoutKind.Explicit, CharSet:=CharSet.Unicode)>

      Public Structure BINDPTR
  inheritedMembers:
  - System.ValueType.Equals(System.Object)
  - System.ValueType.GetHashCode
  - System.ValueType.ToString
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetType
  attributes:
  - type: System.Runtime.InteropServices.StructLayoutAttribute
    ctor: System.Runtime.InteropServices.StructLayoutAttribute.#ctor(System.Runtime.InteropServices.LayoutKind)
    arguments:
    - type: System.Runtime.InteropServices.LayoutKind
      value: 2
  modifiers.csharp:
  - public
  - struct
  modifiers.vb:
  - Public
  - Structure
- uid: System.Runtime.InteropServices.ComTypes.BINDPTR.lpfuncdesc
  commentId: F:System.Runtime.InteropServices.ComTypes.BINDPTR.lpfuncdesc
  id: lpfuncdesc
  parent: System.Runtime.InteropServices.ComTypes.BINDPTR
  langs:
  - csharp
  - vb
  name: lpfuncdesc
  fullName: System.Runtime.InteropServices.ComTypes.BINDPTR.lpfuncdesc
  type: Field
  source:
    remote:
      path: src/mscorlib/src/System/Runtime/InteropServices/ComTypes/ITypeComp.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: lpfuncdesc
    path: src/mscorlib/src/System/Runtime/InteropServices/ComTypes/ITypeComp.cs
    startLine: 33
  assemblies:
  - System.Runtime.InteropServices
  namespace: System.Runtime.InteropServices.ComTypes
  summary: "\n<p>Represents a pointer to a <xref href=\"System.Runtime.InteropServices.FUNCDESC\" data-throw-if-not-resolved=\"false\"></xref> structure.</p>\n"
  syntax:
    content: >-
      [FieldOffset(0)]

      public IntPtr lpfuncdesc
    content.vb: >-
      <FieldOffset(0)>

      Public lpfuncdesc As IntPtr
    return:
      type: System.IntPtr
  attributes:
  - type: System.Runtime.InteropServices.FieldOffsetAttribute
    ctor: System.Runtime.InteropServices.FieldOffsetAttribute.#ctor(System.Int32)
    arguments:
    - type: System.Int32
      value: 0
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Runtime.InteropServices.ComTypes.BINDPTR.lptcomp
  commentId: F:System.Runtime.InteropServices.ComTypes.BINDPTR.lptcomp
  id: lptcomp
  parent: System.Runtime.InteropServices.ComTypes.BINDPTR
  langs:
  - csharp
  - vb
  name: lptcomp
  fullName: System.Runtime.InteropServices.ComTypes.BINDPTR.lptcomp
  type: Field
  source:
    remote:
      path: src/mscorlib/src/System/Runtime/InteropServices/ComTypes/ITypeComp.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: lptcomp
    path: src/mscorlib/src/System/Runtime/InteropServices/ComTypes/ITypeComp.cs
    startLine: 37
  assemblies:
  - System.Runtime.InteropServices
  namespace: System.Runtime.InteropServices.ComTypes
  summary: "\n<p>Represents a pointer to an <xref href=\"System.Runtime.InteropServices.ComTypes.ITypeComp\" data-throw-if-not-resolved=\"false\"></xref> interface.</p>\n"
  syntax:
    content: >-
      [FieldOffset(0)]

      public IntPtr lptcomp
    content.vb: >-
      <FieldOffset(0)>

      Public lptcomp As IntPtr
    return:
      type: System.IntPtr
  attributes:
  - type: System.Runtime.InteropServices.FieldOffsetAttribute
    ctor: System.Runtime.InteropServices.FieldOffsetAttribute.#ctor(System.Int32)
    arguments:
    - type: System.Int32
      value: 0
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Runtime.InteropServices.ComTypes.BINDPTR.lpvardesc
  commentId: F:System.Runtime.InteropServices.ComTypes.BINDPTR.lpvardesc
  id: lpvardesc
  parent: System.Runtime.InteropServices.ComTypes.BINDPTR
  langs:
  - csharp
  - vb
  name: lpvardesc
  fullName: System.Runtime.InteropServices.ComTypes.BINDPTR.lpvardesc
  type: Field
  source:
    remote:
      path: src/mscorlib/src/System/Runtime/InteropServices/ComTypes/ITypeComp.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: lpvardesc
    path: src/mscorlib/src/System/Runtime/InteropServices/ComTypes/ITypeComp.cs
    startLine: 35
  assemblies:
  - System.Runtime.InteropServices
  namespace: System.Runtime.InteropServices.ComTypes
  summary: "\n<p>Represents a pointer to a <xref href=\"System.Runtime.InteropServices.VARDESC\" data-throw-if-not-resolved=\"false\"></xref> structure.</p>\n"
  syntax:
    content: >-
      [FieldOffset(0)]

      public IntPtr lpvardesc
    content.vb: >-
      <FieldOffset(0)>

      Public lpvardesc As IntPtr
    return:
      type: System.IntPtr
  attributes:
  - type: System.Runtime.InteropServices.FieldOffsetAttribute
    ctor: System.Runtime.InteropServices.FieldOffsetAttribute.#ctor(System.Int32)
    arguments:
    - type: System.Int32
      value: 0
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: System.Runtime.InteropServices.ComTypes
  isExternal: false
  name: System.Runtime.InteropServices.ComTypes
  fullName: System.Runtime.InteropServices.ComTypes
- uid: System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  name: Equals(Object)
  fullName: System.ValueType.Equals(System.Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    fullName: System.ValueType.Equals
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    fullName: System.ValueType.Equals
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: false
  name: GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    fullName: System.ValueType.GetHashCode
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    fullName: System.ValueType.GetHashCode
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.ValueType.ToString
  parent: System.ValueType
  isExternal: false
  name: ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    fullName: System.ValueType.ToString
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    fullName: System.ValueType.ToString
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.ValueType
  parent: System
  isExternal: false
  name: ValueType
  fullName: System.ValueType
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.IntPtr
  parent: System
  isExternal: false
  name: IntPtr
  fullName: System.IntPtr
