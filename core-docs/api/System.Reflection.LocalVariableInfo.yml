items:
- uid: System.Reflection.LocalVariableInfo
  commentId: T:System.Reflection.LocalVariableInfo
  id: LocalVariableInfo
  parent: System.Reflection
  children:
  - System.Reflection.LocalVariableInfo.#ctor
  - System.Reflection.LocalVariableInfo.IsPinned
  - System.Reflection.LocalVariableInfo.LocalIndex
  - System.Reflection.LocalVariableInfo.LocalType
  - System.Reflection.LocalVariableInfo.ToString
  langs:
  - csharp
  - vb
  name: LocalVariableInfo
  fullName: System.Reflection.LocalVariableInfo
  type: Class
  source:
    remote:
      path: src/System.Reflection/ref/4.0/System.Reflection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: LocalVariableInfo
    path: src/System.Reflection/ref/4.0/System.Reflection.cs
    startLine: 132
  assemblies:
  - System.Reflection
  namespace: System.Reflection
  summary: "\n<p>Discovers the attributes of a local variable and provides access to local variable metadata.</p>\n"
  remarks: "\n<p>To get a list of local variables in a method, use the <xref href=\"System.Reflection.MethodBody.LocalVariables\" data-throw-if-not-resolved=\"false\"></xref> property. Use the <xref href=\"System.Reflection.MethodBase.GetMethodBody\" data-throw-if-not-resolved=\"false\"></xref> method to obtain the <xref href=\"System.Reflection.MethodBody\" data-throw-if-not-resolved=\"false\"></xref> for a <xref href=\"System.Reflection.MethodInfo\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n<p>Local variable names are not persisted in metadata. In Microsoft intermediate language (MSIL), local variables are accessed by their position in the local variable signature.</p>\n"
  example:
  - "\n<p>The following example defines a test method named <code>MethodBodyExample</code>, and displays its local variable information. The <xref href=\"System.Reflection.MethodBase.GetMethodBody\" data-throw-if-not-resolved=\"false\"></xref> method is used to obtain a <xref href=\"System.Reflection.MethodBody\" data-throw-if-not-resolved=\"false\"></xref> object for the test method. The <xref href=\"System.Reflection.MethodBody.LocalVariables\" data-throw-if-not-resolved=\"false\"></xref> property is then used to obtain a list of <xref href=\"System.Reflection.LocalVariableInfo\" data-throw-if-not-resolved=\"false\"></xref> objects and to display their types and index order.</p>\n<p>This code example is part of a larger example provided for the <xref href=\"System.Reflection.MethodBody\" data-throw-if-not-resolved=\"false\"></xref> class.</p>MethodBody#2,3,5,6"
  syntax:
    content: 'public class LocalVariableInfo : object'
    content.vb: >-
      Public Class LocalVariableInfo
          Inherits Object
  seealso:
  - type: System.Reflection.MethodBody.LocalVariables
    commentId: P:System.Reflection.MethodBody.LocalVariables
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: System.Reflection.LocalVariableInfo.#ctor
  commentId: M:System.Reflection.LocalVariableInfo.#ctor
  id: '#ctor'
  parent: System.Reflection.LocalVariableInfo
  langs:
  - csharp
  - vb
  name: LocalVariableInfo()
  fullName: System.Reflection.LocalVariableInfo.LocalVariableInfo()
  type: Constructor
  source:
    remote:
      path: src/System.Reflection/ref/4.0/System.Reflection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Reflection/ref/4.0/System.Reflection.cs
    startLine: 134
  assemblies:
  - System.Reflection
  namespace: System.Reflection
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Reflection.LocalVariableInfo\" data-throw-if-not-resolved=\"false\"></xref> class.</p>\n"
  remarks: "\n<p>This constructor is invoked by derived classes during the construction of <xref href=\"System.Reflection.LocalVariableInfo\" data-throw-if-not-resolved=\"false\"></xref> objects.</p>\n"
  syntax:
    content: protected LocalVariableInfo()
    content.vb: Protected Sub New
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: System.Reflection.LocalVariableInfo.IsPinned
  commentId: P:System.Reflection.LocalVariableInfo.IsPinned
  id: IsPinned
  parent: System.Reflection.LocalVariableInfo
  langs:
  - csharp
  - vb
  name: IsPinned
  fullName: System.Reflection.LocalVariableInfo.IsPinned
  type: Property
  source:
    remote:
      path: src/System.Reflection/ref/4.0/System.Reflection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IsPinned
    path: src/System.Reflection/ref/4.0/System.Reflection.cs
    startLine: 135
  assemblies:
  - System.Reflection
  namespace: System.Reflection
  summary: "\n<p>Gets a <xref href=\"System.Boolean\" data-throw-if-not-resolved=\"false\"></xref> value that indicates whether the object referred to by the local variable is pinned in memory.</p>\n"
  remarks: "\n<p>In unsafe code, an object must be pinned before it can be referred to by an unmanaged pointer. While the referenced object is pinned, it cannot be moved by garbage collection.</p>\n"
  example:
  - 
  syntax:
    content: public virtual bool IsPinned { get; }
    content.vb: Public Overridable ReadOnly Property IsPinned As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if the object referred to by the variable is pinned in memory; otherwise, <strong>false</strong>.</p>\n"
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: System.Reflection.LocalVariableInfo.LocalIndex
  commentId: P:System.Reflection.LocalVariableInfo.LocalIndex
  id: LocalIndex
  parent: System.Reflection.LocalVariableInfo
  langs:
  - csharp
  - vb
  name: LocalIndex
  fullName: System.Reflection.LocalVariableInfo.LocalIndex
  type: Property
  source:
    remote:
      path: src/System.Reflection/ref/4.0/System.Reflection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: LocalIndex
    path: src/System.Reflection/ref/4.0/System.Reflection.cs
    startLine: 136
  assemblies:
  - System.Reflection
  namespace: System.Reflection
  summary: "\n<p>Gets the index of the local variable within the method body.</p>\n"
  remarks: "\n<p>Index numbers are assigned to local variables in the order in which they are declared.</p>\n"
  example:
  - 
  syntax:
    content: public virtual int LocalIndex { get; }
    content.vb: Public Overridable ReadOnly Property LocalIndex As Integer
    parameters: []
    return:
      type: System.Int32
      description: "\n<p>An integer value that represents the order of declaration of the local variable within the method body.</p>\n"
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: System.Reflection.LocalVariableInfo.LocalType
  commentId: P:System.Reflection.LocalVariableInfo.LocalType
  id: LocalType
  parent: System.Reflection.LocalVariableInfo
  langs:
  - csharp
  - vb
  name: LocalType
  fullName: System.Reflection.LocalVariableInfo.LocalType
  type: Property
  source:
    remote:
      path: src/System.Reflection/ref/4.0/System.Reflection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: LocalType
    path: src/System.Reflection/ref/4.0/System.Reflection.cs
    startLine: 137
  assemblies:
  - System.Reflection
  namespace: System.Reflection
  summary: "\n<p>Gets the type of the local variable.</p>\n"
  syntax:
    content: public virtual Type LocalType { get; }
    content.vb: Public Overridable ReadOnly Property LocalType As Type
    parameters: []
    return:
      type: System.Type
      description: "\n<p>The type of the local variable.</p>\n"
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: System.Reflection.LocalVariableInfo.ToString
  commentId: M:System.Reflection.LocalVariableInfo.ToString
  id: ToString
  parent: System.Reflection.LocalVariableInfo
  langs:
  - csharp
  - vb
  name: ToString()
  fullName: System.Reflection.LocalVariableInfo.ToString()
  type: Method
  source:
    remote:
      path: src/System.Reflection/ref/4.0/System.Reflection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ToString
    path: src/System.Reflection/ref/4.0/System.Reflection.cs
    startLine: 138
  assemblies:
  - System.Reflection
  namespace: System.Reflection
  summary: "\n<p>Returns a user-readable string that describes the local variable.</p>\n"
  syntax:
    content: public override string ToString()
    content.vb: Public Overrides Function ToString As String
    return:
      type: System.String
      description: "\n<p>A string that displays information about the local variable, including the type name, index, and pinned status.</p>\n"
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: System.Reflection
  isExternal: false
  name: System.Reflection
  fullName: System.Reflection
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  fullName: System.Boolean
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  fullName: System.Int32
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  fullName: System.Type
- uid: System.String
  parent: System
  isExternal: false
  name: String
  fullName: System.String
