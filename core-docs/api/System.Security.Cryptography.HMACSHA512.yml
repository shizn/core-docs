items:
- uid: System.Security.Cryptography.HMACSHA512
  commentId: T:System.Security.Cryptography.HMACSHA512
  id: HMACSHA512
  parent: System.Security.Cryptography
  children:
  - System.Security.Cryptography.HMACSHA512.#ctor
  - System.Security.Cryptography.HMACSHA512.#ctor(System.Byte[])
  - System.Security.Cryptography.HMACSHA512.Dispose(System.Boolean)
  - System.Security.Cryptography.HMACSHA512.HashCore(System.Byte[],System.Int32,System.Int32)
  - System.Security.Cryptography.HMACSHA512.HashFinal
  - System.Security.Cryptography.HMACSHA512.HashSize
  - System.Security.Cryptography.HMACSHA512.Initialize
  - System.Security.Cryptography.HMACSHA512.Key
  langs:
  - csharp
  - vb
  name: HMACSHA512
  fullName: System.Security.Cryptography.HMACSHA512
  type: Class
  source:
    remote:
      path: src/System.Security.Cryptography.Algorithms/src/System/Security/Cryptography/HMACSHA512.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: HMACSHA512
    path: src/System.Security.Cryptography.Algorithms/src/System/Security/Cryptography/HMACSHA512.cs
    startLine: 17
  assemblies:
  - System.Security.Cryptography.Algorithms
  namespace: System.Security.Cryptography
  summary: "\n<p>Computes a Hash-based Message Authentication Code (HMAC) using the <xref href=\"System.Security.Cryptography.SHA512\" data-throw-if-not-resolved=\"false\"></xref> hash function.</p>\n"
  remarks: "\n<p>\n<xref href=\"System.Security.Cryptography.HMACSHA512\" data-throw-if-not-resolved=\"false\"></xref> is a type of keyed hash algorithm that is constructed from the SHA-512 hash function and used as a Hash-based Message Authentication Code (HMAC). The HMAC process mixes a secret key with the message data and hashes the result. The hash value is mixed with the secret key again, and then hashed a second time. The output hash is 512 bits in length.</p>\n<p>An HMAC can be used to determine whether a message sent over a nonsecure channel has been tampered with, provided that the sender and receiver share a secret key. The sender computes the hash value for the original data and sends both the original data and hash value as a single message. The receiver recalculates the hash value on the received message and checks that the computed HMAC matches the transmitted HMAC.</p>\n<p>If the original and computed hash values match, the message is authenticated. If they do not match, either the data or the hash value has been changed. HMACs provide security against tampering because knowledge of the secret key is required to change the message and reproduce the correct hash value.</p>\n<p>\n<xref href=\"System.Security.Cryptography.HMACSHA512\" data-throw-if-not-resolved=\"false\"></xref> accepts keys of any size, and produces a hash sequence of length 512 bits.</p>\n"
  example:
  - "\n<p>The following example shows how to sign a file by using the <xref href=\"System.Security.Cryptography.HMACSHA512\" data-throw-if-not-resolved=\"false\"></xref> object and then how to verify the file.</p>HMACSHA512#1"
  syntax:
    content: 'public class HMACSHA512 : HMAC'
    content.vb: >-
      Public Class HMACSHA512
          Inherits HMAC
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: System.Security.Cryptography.HMACSHA512.#ctor
  commentId: M:System.Security.Cryptography.HMACSHA512.#ctor
  id: '#ctor'
  parent: System.Security.Cryptography.HMACSHA512
  langs:
  - csharp
  - vb
  name: HMACSHA512()
  fullName: System.Security.Cryptography.HMACSHA512.HMACSHA512()
  type: Constructor
  source:
    remote:
      path: src/System.Security.Cryptography.Algorithms/src/System/Security/Cryptography/HMACSHA512.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Security.Cryptography.Algorithms/src/System/Security/Cryptography/HMACSHA512.cs
    startLine: 19
  assemblies:
  - System.Security.Cryptography.Algorithms
  namespace: System.Security.Cryptography
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Security.Cryptography.HMACSHA512\" data-throw-if-not-resolved=\"false\"></xref> class with a randomly generated key.</p>\n"
  remarks: "\n<p>With this constructor, a 64-byte, randomly generated key is used.</p>\n"
  syntax:
    content: public HMACSHA512()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Security.Cryptography.HMACSHA512.#ctor(System.Byte[])
  commentId: M:System.Security.Cryptography.HMACSHA512.#ctor(System.Byte[])
  id: '#ctor(System.Byte[])'
  parent: System.Security.Cryptography.HMACSHA512
  langs:
  - csharp
  - vb
  name: HMACSHA512(Byte[])
  fullName: System.Security.Cryptography.HMACSHA512.HMACSHA512(System.Byte[])
  type: Constructor
  source:
    remote:
      path: src/System.Security.Cryptography.Algorithms/src/System/Security/Cryptography/HMACSHA512.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Security.Cryptography.Algorithms/src/System/Security/Cryptography/HMACSHA512.cs
    startLine: 24
  assemblies:
  - System.Security.Cryptography.Algorithms
  namespace: System.Security.Cryptography
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Security.Cryptography.HMACSHA512\" data-throw-if-not-resolved=\"false\"></xref> class with the specified key data.</p>\n"
  example:
  - "\n<p>For an example of how to use this constructor, see the <xref href=\"System.Security.Cryptography.HMACSHA512\" data-throw-if-not-resolved=\"false\"></xref> class. </p>\n"
  syntax:
    content: public HMACSHA512(byte[] key)
    content.vb: Public Sub New(key As Byte())
    parameters:
    - id: key
      type: System.Byte[]
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>The <em>key</em> parameter is <strong>null</strong>. </p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Security.Cryptography.HMACSHA512.HMACSHA512(System.Byte())
  name.vb: HMACSHA512(Byte())
- uid: System.Security.Cryptography.HMACSHA512.HashSize
  commentId: P:System.Security.Cryptography.HMACSHA512.HashSize
  id: HashSize
  parent: System.Security.Cryptography.HMACSHA512
  langs:
  - csharp
  - vb
  name: HashSize
  fullName: System.Security.Cryptography.HMACSHA512.HashSize
  type: Property
  source:
    remote:
      path: src/System.Security.Cryptography.Algorithms/src/System/Security/Cryptography/HMACSHA512.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: HashSize
    path: src/System.Security.Cryptography.Algorithms/src/System/Security/Cryptography/HMACSHA512.cs
    startLine: 31
  assemblies:
  - System.Security.Cryptography.Algorithms
  namespace: System.Security.Cryptography
  syntax:
    content: public override int HashSize { get; }
    content.vb: Public Overrides ReadOnly Property HashSize As Integer
    parameters: []
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: System.Security.Cryptography.HMACSHA512.Key
  commentId: P:System.Security.Cryptography.HMACSHA512.Key
  id: Key
  parent: System.Security.Cryptography.HMACSHA512
  langs:
  - csharp
  - vb
  name: Key
  fullName: System.Security.Cryptography.HMACSHA512.Key
  type: Property
  source:
    remote:
      path: src/System.Security.Cryptography.Algorithms/src/System/Security/Cryptography/HMACSHA512.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Key
    path: src/System.Security.Cryptography.Algorithms/src/System/Security/Cryptography/HMACSHA512.cs
    startLine: 39
  assemblies:
  - System.Security.Cryptography.Algorithms
  namespace: System.Security.Cryptography
  syntax:
    content: public override byte[] Key { get; set; }
    content.vb: Public Overrides Property Key As Byte()
    parameters: []
    return:
      type: System.Byte[]
  modifiers.csharp:
  - public
  - override
  - get
  - set
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Security.Cryptography.HMACSHA512.Dispose(System.Boolean)
  commentId: M:System.Security.Cryptography.HMACSHA512.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Security.Cryptography.HMACSHA512
  langs:
  - csharp
  - vb
  name: Dispose(Boolean)
  fullName: System.Security.Cryptography.HMACSHA512.Dispose(System.Boolean)
  type: Method
  source:
    remote:
      path: src/System.Security.Cryptography.Algorithms/src/System/Security/Cryptography/HMACSHA512.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Dispose
    path: src/System.Security.Cryptography.Algorithms/src/System/Security/Cryptography/HMACSHA512.cs
    startLine: 69
  assemblies:
  - System.Security.Cryptography.Algorithms
  namespace: System.Security.Cryptography
  syntax:
    content: protected override void Dispose(bool disposing)
    content.vb: Protected Overrides Sub Dispose(disposing As Boolean)
    parameters:
    - id: disposing
      type: System.Boolean
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: System.Security.Cryptography.HMACSHA512.HashCore(System.Byte[],System.Int32,System.Int32)
  commentId: M:System.Security.Cryptography.HMACSHA512.HashCore(System.Byte[],System.Int32,System.Int32)
  id: HashCore(System.Byte[],System.Int32,System.Int32)
  parent: System.Security.Cryptography.HMACSHA512
  langs:
  - csharp
  - vb
  name: HashCore(Byte[], Int32, Int32)
  fullName: System.Security.Cryptography.HMACSHA512.HashCore(System.Byte[], System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Security.Cryptography.Algorithms/src/System/Security/Cryptography/HMACSHA512.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: HashCore
    path: src/System.Security.Cryptography.Algorithms/src/System/Security/Cryptography/HMACSHA512.cs
    startLine: 52
  assemblies:
  - System.Security.Cryptography.Algorithms
  namespace: System.Security.Cryptography
  syntax:
    content: protected override void HashCore(byte[] rgb, int ib, int cb)
    content.vb: Protected Overrides Sub HashCore(rgb As Byte(), ib As Integer, cb As Integer)
    parameters:
    - id: rgb
      type: System.Byte[]
    - id: ib
      type: System.Int32
    - id: cb
      type: System.Int32
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
  fullName.vb: System.Security.Cryptography.HMACSHA512.HashCore(System.Byte(), System.Int32, System.Int32)
  name.vb: HashCore(Byte(), Int32, Int32)
- uid: System.Security.Cryptography.HMACSHA512.HashFinal
  commentId: M:System.Security.Cryptography.HMACSHA512.HashFinal
  id: HashFinal
  parent: System.Security.Cryptography.HMACSHA512
  langs:
  - csharp
  - vb
  name: HashFinal()
  fullName: System.Security.Cryptography.HMACSHA512.HashFinal()
  type: Method
  source:
    remote:
      path: src/System.Security.Cryptography.Algorithms/src/System/Security/Cryptography/HMACSHA512.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: HashFinal
    path: src/System.Security.Cryptography.Algorithms/src/System/Security/Cryptography/HMACSHA512.cs
    startLine: 57
  assemblies:
  - System.Security.Cryptography.Algorithms
  namespace: System.Security.Cryptography
  syntax:
    content: protected override byte[] HashFinal()
    content.vb: Protected Overrides Function HashFinal As Byte()
    return:
      type: System.Byte[]
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: System.Security.Cryptography.HMACSHA512.Initialize
  commentId: M:System.Security.Cryptography.HMACSHA512.Initialize
  id: Initialize
  parent: System.Security.Cryptography.HMACSHA512
  langs:
  - csharp
  - vb
  name: Initialize()
  fullName: System.Security.Cryptography.HMACSHA512.Initialize()
  type: Method
  source:
    remote:
      path: src/System.Security.Cryptography.Algorithms/src/System/Security/Cryptography/HMACSHA512.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Initialize
    path: src/System.Security.Cryptography.Algorithms/src/System/Security/Cryptography/HMACSHA512.cs
    startLine: 62
  assemblies:
  - System.Security.Cryptography.Algorithms
  namespace: System.Security.Cryptography
  syntax:
    content: public override void Initialize()
    content.vb: Public Overrides Sub Initialize
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: System.Security.Cryptography
  isExternal: false
  name: System.Security.Cryptography
  fullName: System.Security.Cryptography
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Byte[]
  isExternal: false
  name: Byte[]
  fullName: System.Byte[]
  fullname.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
  - name: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
  - name: ()
    fullName: ()
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  fullName: System.Int32
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  fullName: System.Boolean
- uid: System.ArgumentNullException
  isExternal: false
  name: ArgumentNullException
  fullName: System.ArgumentNullException
