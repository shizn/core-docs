items:
- uid: Microsoft.VisualBasic.Constants
  commentId: T:Microsoft.VisualBasic.Constants
  id: Constants
  parent: Microsoft.VisualBasic
  children:
  - Microsoft.VisualBasic.Constants.vbBack
  - Microsoft.VisualBasic.Constants.vbCr
  - Microsoft.VisualBasic.Constants.vbCrLf
  - Microsoft.VisualBasic.Constants.vbFormFeed
  - Microsoft.VisualBasic.Constants.vbLf
  - Microsoft.VisualBasic.Constants.vbNewLine
  - Microsoft.VisualBasic.Constants.vbNullChar
  - Microsoft.VisualBasic.Constants.vbNullString
  - Microsoft.VisualBasic.Constants.vbTab
  - Microsoft.VisualBasic.Constants.vbVerticalTab
  langs:
  - csharp
  - vb
  name: Constants
  fullName: Microsoft.VisualBasic.Constants
  type: Class
  source:
    remote:
      path: src/Microsoft.VisualBasic/ref/Microsoft.VisualBasic.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Constants
    path: src/Microsoft.VisualBasic/ref/Microsoft.VisualBasic.cs
    startLine: 17
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "\n<p>The <strong>Constants</strong> module contains miscellaneous constants. These constants can be used anywhere in your code.</p>\n"
  remarks: "\n<p>This module supports the Visual Basic language constants that correspond to the members of many Visual Basic enumerations:</p>\n"
  syntax:
    content: >-
      [StandardModule]

      public sealed class Constants
    content.vb: >-
      <StandardModule>

      Public NotInheritable Class Constants
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  attributes:
  - type: Microsoft.VisualBasic.CompilerServices.StandardModuleAttribute
    ctor: Microsoft.VisualBasic.CompilerServices.StandardModuleAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: Microsoft.VisualBasic.Constants.vbBack
  commentId: F:Microsoft.VisualBasic.Constants.vbBack
  id: vbBack
  parent: Microsoft.VisualBasic.Constants
  langs:
  - csharp
  - vb
  name: vbBack
  fullName: Microsoft.VisualBasic.Constants.vbBack
  type: Field
  source:
    remote:
      path: src/Microsoft.VisualBasic/ref/Microsoft.VisualBasic.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: vbBack
    path: src/Microsoft.VisualBasic/ref/Microsoft.VisualBasic.cs
    startLine: 21
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "\n<p>Represents a backspace character for print and display functions.</p>\n"
  syntax:
    content: public const string vbBack = "\b"
    content.vb: Public Const vbBack As String = vbBack
    return:
      type: System.String
  seealso:
  - type: Microsoft.VisualBasic.FileSystem.Print(System.Int32,System.Object[])
    commentId: M:Microsoft.VisualBasic.FileSystem.Print(System.Int32,System.Object[])
  - type: Microsoft.VisualBasic.FileSystem.PrintLine(System.Int32,System.Object[])
    commentId: M:Microsoft.VisualBasic.FileSystem.PrintLine(System.Int32,System.Object[])
  - type: Microsoft.VisualBasic.FileSystem.Write(System.Int32,System.Object[])
    commentId: M:Microsoft.VisualBasic.FileSystem.Write(System.Int32,System.Object[])
  - type: Microsoft.VisualBasic.FileSystem.WriteLine(System.Int32,System.Object[])
    commentId: M:Microsoft.VisualBasic.FileSystem.WriteLine(System.Int32,System.Object[])
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Microsoft.VisualBasic.Constants.vbCr
  commentId: F:Microsoft.VisualBasic.Constants.vbCr
  id: vbCr
  parent: Microsoft.VisualBasic.Constants
  langs:
  - csharp
  - vb
  name: vbCr
  fullName: Microsoft.VisualBasic.Constants.vbCr
  type: Field
  source:
    remote:
      path: src/Microsoft.VisualBasic/ref/Microsoft.VisualBasic.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: vbCr
    path: src/Microsoft.VisualBasic/ref/Microsoft.VisualBasic.cs
    startLine: 22
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "\n<p>Represents a carriage-return character for print and display functions.</p>\n"
  syntax:
    content: public const string vbCr = "\r"
    content.vb: Public Const vbCr As String = vbCr
    return:
      type: System.String
  seealso:
  - type: Microsoft.VisualBasic.FileSystem.Print(System.Int32,System.Object[])
    commentId: M:Microsoft.VisualBasic.FileSystem.Print(System.Int32,System.Object[])
  - type: Microsoft.VisualBasic.FileSystem.PrintLine(System.Int32,System.Object[])
    commentId: M:Microsoft.VisualBasic.FileSystem.PrintLine(System.Int32,System.Object[])
  - type: Microsoft.VisualBasic.FileSystem.Write(System.Int32,System.Object[])
    commentId: M:Microsoft.VisualBasic.FileSystem.Write(System.Int32,System.Object[])
  - type: Microsoft.VisualBasic.FileSystem.WriteLine(System.Int32,System.Object[])
    commentId: M:Microsoft.VisualBasic.FileSystem.WriteLine(System.Int32,System.Object[])
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Microsoft.VisualBasic.Constants.vbCrLf
  commentId: F:Microsoft.VisualBasic.Constants.vbCrLf
  id: vbCrLf
  parent: Microsoft.VisualBasic.Constants
  langs:
  - csharp
  - vb
  name: vbCrLf
  fullName: Microsoft.VisualBasic.Constants.vbCrLf
  type: Field
  source:
    remote:
      path: src/Microsoft.VisualBasic/ref/Microsoft.VisualBasic.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: vbCrLf
    path: src/Microsoft.VisualBasic/ref/Microsoft.VisualBasic.cs
    startLine: 23
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "\n<p>Represents a carriage-return character combined with a linefeed character for print and display functions.</p>\n"
  syntax:
    content: public const string vbCrLf = "\r\n"
    content.vb: Public Const vbCrLf As String = vbCrLf
    return:
      type: System.String
  seealso:
  - type: Microsoft.VisualBasic.FileSystem.Print(System.Int32,System.Object[])
    commentId: M:Microsoft.VisualBasic.FileSystem.Print(System.Int32,System.Object[])
  - type: Microsoft.VisualBasic.FileSystem.PrintLine(System.Int32,System.Object[])
    commentId: M:Microsoft.VisualBasic.FileSystem.PrintLine(System.Int32,System.Object[])
  - type: Microsoft.VisualBasic.FileSystem.Write(System.Int32,System.Object[])
    commentId: M:Microsoft.VisualBasic.FileSystem.Write(System.Int32,System.Object[])
  - type: Microsoft.VisualBasic.FileSystem.WriteLine(System.Int32,System.Object[])
    commentId: M:Microsoft.VisualBasic.FileSystem.WriteLine(System.Int32,System.Object[])
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Microsoft.VisualBasic.Constants.vbFormFeed
  commentId: F:Microsoft.VisualBasic.Constants.vbFormFeed
  id: vbFormFeed
  parent: Microsoft.VisualBasic.Constants
  langs:
  - csharp
  - vb
  name: vbFormFeed
  fullName: Microsoft.VisualBasic.Constants.vbFormFeed
  type: Field
  source:
    remote:
      path: src/Microsoft.VisualBasic/ref/Microsoft.VisualBasic.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: vbFormFeed
    path: src/Microsoft.VisualBasic/ref/Microsoft.VisualBasic.cs
    startLine: 24
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "\n<p>Represents a form-feed character for print functions.</p>\n"
  syntax:
    content: public const string vbFormFeed = "\f"
    content.vb: Public Const vbFormFeed As String = vbFormFeed
    return:
      type: System.String
  seealso:
  - type: Microsoft.VisualBasic.FileSystem.Print(System.Int32,System.Object[])
    commentId: M:Microsoft.VisualBasic.FileSystem.Print(System.Int32,System.Object[])
  - type: Microsoft.VisualBasic.FileSystem.PrintLine(System.Int32,System.Object[])
    commentId: M:Microsoft.VisualBasic.FileSystem.PrintLine(System.Int32,System.Object[])
  - type: Microsoft.VisualBasic.FileSystem.Write(System.Int32,System.Object[])
    commentId: M:Microsoft.VisualBasic.FileSystem.Write(System.Int32,System.Object[])
  - type: Microsoft.VisualBasic.FileSystem.WriteLine(System.Int32,System.Object[])
    commentId: M:Microsoft.VisualBasic.FileSystem.WriteLine(System.Int32,System.Object[])
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Microsoft.VisualBasic.Constants.vbLf
  commentId: F:Microsoft.VisualBasic.Constants.vbLf
  id: vbLf
  parent: Microsoft.VisualBasic.Constants
  langs:
  - csharp
  - vb
  name: vbLf
  fullName: Microsoft.VisualBasic.Constants.vbLf
  type: Field
  source:
    remote:
      path: src/Microsoft.VisualBasic/ref/Microsoft.VisualBasic.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: vbLf
    path: src/Microsoft.VisualBasic/ref/Microsoft.VisualBasic.cs
    startLine: 25
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "\n<p>Represents a linefeed character for print and display functions.</p>\n"
  syntax:
    content: public const string vbLf = "\n"
    content.vb: Public Const vbLf As String = vbLf
    return:
      type: System.String
  seealso:
  - type: Microsoft.VisualBasic.FileSystem.Print(System.Int32,System.Object[])
    commentId: M:Microsoft.VisualBasic.FileSystem.Print(System.Int32,System.Object[])
  - type: Microsoft.VisualBasic.FileSystem.PrintLine(System.Int32,System.Object[])
    commentId: M:Microsoft.VisualBasic.FileSystem.PrintLine(System.Int32,System.Object[])
  - type: Microsoft.VisualBasic.FileSystem.Write(System.Int32,System.Object[])
    commentId: M:Microsoft.VisualBasic.FileSystem.Write(System.Int32,System.Object[])
  - type: Microsoft.VisualBasic.FileSystem.WriteLine(System.Int32,System.Object[])
    commentId: M:Microsoft.VisualBasic.FileSystem.WriteLine(System.Int32,System.Object[])
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Microsoft.VisualBasic.Constants.vbNewLine
  commentId: F:Microsoft.VisualBasic.Constants.vbNewLine
  id: vbNewLine
  parent: Microsoft.VisualBasic.Constants
  langs:
  - csharp
  - vb
  name: vbNewLine
  fullName: Microsoft.VisualBasic.Constants.vbNewLine
  type: Field
  source:
    remote:
      path: src/Microsoft.VisualBasic/ref/Microsoft.VisualBasic.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: vbNewLine
    path: src/Microsoft.VisualBasic/ref/Microsoft.VisualBasic.cs
    startLine: 27
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "\n<p>Represents a newline character for print and display functions.</p>\n"
  syntax:
    content: >-
      [Obsolete("For a carriage return and line feed, use vbCrLf.  For the current platform's newline, use System.Environment.NewLine.")]

      public const string vbNewLine = "\r\n"
    content.vb: >-
      <Obsolete("For a carriage return and line feed, use vbCrLf.  For the current platform's newline, use System.Environment.NewLine.")>

      Public Const vbNewLine As String = vbCrLf
    return:
      type: System.String
  seealso:
  - type: Microsoft.VisualBasic.FileSystem.Print(System.Int32,System.Object[])
    commentId: M:Microsoft.VisualBasic.FileSystem.Print(System.Int32,System.Object[])
  - type: Microsoft.VisualBasic.FileSystem.PrintLine(System.Int32,System.Object[])
    commentId: M:Microsoft.VisualBasic.FileSystem.PrintLine(System.Int32,System.Object[])
  - type: Microsoft.VisualBasic.FileSystem.Write(System.Int32,System.Object[])
    commentId: M:Microsoft.VisualBasic.FileSystem.Write(System.Int32,System.Object[])
  - type: Microsoft.VisualBasic.FileSystem.WriteLine(System.Int32,System.Object[])
    commentId: M:Microsoft.VisualBasic.FileSystem.WriteLine(System.Int32,System.Object[])
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: For a carriage return and line feed, use vbCrLf.  For the current platform's newline, use System.Environment.NewLine.
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Microsoft.VisualBasic.Constants.vbNullChar
  commentId: F:Microsoft.VisualBasic.Constants.vbNullChar
  id: vbNullChar
  parent: Microsoft.VisualBasic.Constants
  langs:
  - csharp
  - vb
  name: vbNullChar
  fullName: Microsoft.VisualBasic.Constants.vbNullChar
  type: Field
  source:
    remote:
      path: src/Microsoft.VisualBasic/ref/Microsoft.VisualBasic.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: vbNullChar
    path: src/Microsoft.VisualBasic/ref/Microsoft.VisualBasic.cs
    startLine: 28
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "\n<p>Represents a null character for print and display functions.</p>\n"
  syntax:
    content: public const string vbNullChar = "\0"
    content.vb: Public Const vbNullChar As String = vbNullChar
    return:
      type: System.String
  seealso:
  - type: Microsoft.VisualBasic.FileSystem.Print(System.Int32,System.Object[])
    commentId: M:Microsoft.VisualBasic.FileSystem.Print(System.Int32,System.Object[])
  - type: Microsoft.VisualBasic.FileSystem.PrintLine(System.Int32,System.Object[])
    commentId: M:Microsoft.VisualBasic.FileSystem.PrintLine(System.Int32,System.Object[])
  - type: Microsoft.VisualBasic.FileSystem.Write(System.Int32,System.Object[])
    commentId: M:Microsoft.VisualBasic.FileSystem.Write(System.Int32,System.Object[])
  - type: Microsoft.VisualBasic.FileSystem.WriteLine(System.Int32,System.Object[])
    commentId: M:Microsoft.VisualBasic.FileSystem.WriteLine(System.Int32,System.Object[])
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Microsoft.VisualBasic.Constants.vbNullString
  commentId: F:Microsoft.VisualBasic.Constants.vbNullString
  id: vbNullString
  parent: Microsoft.VisualBasic.Constants
  langs:
  - csharp
  - vb
  name: vbNullString
  fullName: Microsoft.VisualBasic.Constants.vbNullString
  type: Field
  source:
    remote:
      path: src/Microsoft.VisualBasic/ref/Microsoft.VisualBasic.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: vbNullString
    path: src/Microsoft.VisualBasic/ref/Microsoft.VisualBasic.cs
    startLine: 29
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "\n<p>Represents a zero-length string for print and display functions, and for calling external procedures.</p>\n"
  syntax:
    content: public const string vbNullString = null
    content.vb: Public Const vbNullString As String = Nothing
    return:
      type: System.String
  seealso:
  - type: Microsoft.VisualBasic.FileSystem.Print(System.Int32,System.Object[])
    commentId: M:Microsoft.VisualBasic.FileSystem.Print(System.Int32,System.Object[])
  - type: Microsoft.VisualBasic.FileSystem.PrintLine(System.Int32,System.Object[])
    commentId: M:Microsoft.VisualBasic.FileSystem.PrintLine(System.Int32,System.Object[])
  - type: Microsoft.VisualBasic.FileSystem.Write(System.Int32,System.Object[])
    commentId: M:Microsoft.VisualBasic.FileSystem.Write(System.Int32,System.Object[])
  - type: Microsoft.VisualBasic.FileSystem.WriteLine(System.Int32,System.Object[])
    commentId: M:Microsoft.VisualBasic.FileSystem.WriteLine(System.Int32,System.Object[])
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Microsoft.VisualBasic.Constants.vbTab
  commentId: F:Microsoft.VisualBasic.Constants.vbTab
  id: vbTab
  parent: Microsoft.VisualBasic.Constants
  langs:
  - csharp
  - vb
  name: vbTab
  fullName: Microsoft.VisualBasic.Constants.vbTab
  type: Field
  source:
    remote:
      path: src/Microsoft.VisualBasic/ref/Microsoft.VisualBasic.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: vbTab
    path: src/Microsoft.VisualBasic/ref/Microsoft.VisualBasic.cs
    startLine: 30
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "\n<p>Represents a tab character for print and display functions.</p>\n"
  syntax:
    content: public const string vbTab = "\t"
    content.vb: Public Const vbTab As String = vbTab
    return:
      type: System.String
  seealso:
  - type: Microsoft.VisualBasic.FileSystem.Print(System.Int32,System.Object[])
    commentId: M:Microsoft.VisualBasic.FileSystem.Print(System.Int32,System.Object[])
  - type: Microsoft.VisualBasic.FileSystem.PrintLine(System.Int32,System.Object[])
    commentId: M:Microsoft.VisualBasic.FileSystem.PrintLine(System.Int32,System.Object[])
  - type: Microsoft.VisualBasic.FileSystem.Write(System.Int32,System.Object[])
    commentId: M:Microsoft.VisualBasic.FileSystem.Write(System.Int32,System.Object[])
  - type: Microsoft.VisualBasic.FileSystem.WriteLine(System.Int32,System.Object[])
    commentId: M:Microsoft.VisualBasic.FileSystem.WriteLine(System.Int32,System.Object[])
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Microsoft.VisualBasic.Constants.vbVerticalTab
  commentId: F:Microsoft.VisualBasic.Constants.vbVerticalTab
  id: vbVerticalTab
  parent: Microsoft.VisualBasic.Constants
  langs:
  - csharp
  - vb
  name: vbVerticalTab
  fullName: Microsoft.VisualBasic.Constants.vbVerticalTab
  type: Field
  source:
    remote:
      path: src/Microsoft.VisualBasic/ref/Microsoft.VisualBasic.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: vbVerticalTab
    path: src/Microsoft.VisualBasic/ref/Microsoft.VisualBasic.cs
    startLine: 31
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "\n<p>Represents a carriage-return character for print functions.</p>\n"
  syntax:
    content: public const string vbVerticalTab = "\v"
    content.vb: Public Const vbVerticalTab As String = vbVerticalTab
    return:
      type: System.String
  seealso:
  - type: Microsoft.VisualBasic.FileSystem.Print(System.Int32,System.Object[])
    commentId: M:Microsoft.VisualBasic.FileSystem.Print(System.Int32,System.Object[])
  - type: Microsoft.VisualBasic.FileSystem.PrintLine(System.Int32,System.Object[])
    commentId: M:Microsoft.VisualBasic.FileSystem.PrintLine(System.Int32,System.Object[])
  - type: Microsoft.VisualBasic.FileSystem.Write(System.Int32,System.Object[])
    commentId: M:Microsoft.VisualBasic.FileSystem.Write(System.Int32,System.Object[])
  - type: Microsoft.VisualBasic.FileSystem.WriteLine(System.Int32,System.Object[])
    commentId: M:Microsoft.VisualBasic.FileSystem.WriteLine(System.Int32,System.Object[])
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
references:
- uid: Microsoft.VisualBasic
  isExternal: false
  name: Microsoft.VisualBasic
  fullName: Microsoft.VisualBasic
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.String
  parent: System
  isExternal: false
  name: String
  fullName: System.String
