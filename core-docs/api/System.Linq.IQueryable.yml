items:
- uid: System.Linq.IQueryable
  commentId: T:System.Linq.IQueryable
  id: IQueryable
  parent: System.Linq
  children:
  - System.Linq.IQueryable.ElementType
  - System.Linq.IQueryable.Expression
  - System.Linq.IQueryable.Provider
  langs:
  - csharp
  - vb
  name: IQueryable
  fullName: System.Linq.IQueryable
  type: Interface
  source:
    remote:
      path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IQueryable
    path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs
    startLine: 16
  assemblies:
  - System.Linq.Expressions
  namespace: System.Linq
  summary: "\n<p>Provides functionality to evaluate queries against a specific data source wherein the type of the data is not specified.</p>\n"
  remarks: "\n<p>The <xref href=\"System.Linq.IQueryable\" data-throw-if-not-resolved=\"false\"></xref> interface is intended for implementation by query providers. It is only supposed to be implemented by providers that also implement <xref href=\"System.Linq.IQueryable`1\" data-throw-if-not-resolved=\"false\"></xref>. If the provider does not also implement <xref href=\"System.Linq.IQueryable`1\" data-throw-if-not-resolved=\"false\"></xref>, the standard query operators cannot be used on the provider's data source.</p>\n<p>The <xref href=\"System.Linq.IQueryable\" data-throw-if-not-resolved=\"false\"></xref> interface inherits the <xref href=\"System.Collections.IEnumerable\" data-throw-if-not-resolved=\"false\"></xref> interface so that if it represents a query, the results of that query can be enumerated. Enumeration causes the expression tree associated with an <xref href=\"System.Linq.IQueryable\" data-throw-if-not-resolved=\"false\"></xref> object to be executed. The definition of \"executing an expression tree\" is specific to a query provider. For example, it may involve translating the expression tree to an appropriate query language for the underlying data source. Queries that do not return enumerable results are executed when the <xref href=\"System.Linq.IQueryProvider.Execute(System.Linq.Expressions.Expression)\" data-throw-if-not-resolved=\"false\"></xref> method is called.</p>\n<p>For more information about how to create your own LINQ provider, see <see href=\"http://go.microsoft.com/fwlink/?LinkID=112370\">LINQ: Building an IQueryable Provider</see> on MSDN Blogs.</p>\n"
  example:
  - 
  syntax:
    content: 'public interface IQueryable : IEnumerable'
    content.vb: >-
      Public Interface IQueryable
          Inherits IEnumerable
  seealso:
  - type: System.Linq.Queryable
    commentId: T:System.Linq.Queryable
  - type: System.Linq.IQueryable`1
    commentId: T:System.Linq.IQueryable`1
  inheritedMembers:
  - System.Collections.IEnumerable.GetEnumerator
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: System.Linq.IQueryable.ElementType
  commentId: P:System.Linq.IQueryable.ElementType
  id: ElementType
  parent: System.Linq.IQueryable
  langs:
  - csharp
  - vb
  name: ElementType
  fullName: System.Linq.IQueryable.ElementType
  type: Property
  source:
    remote:
      path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ElementType
    path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs
    startLine: 18
  assemblies:
  - System.Linq.Expressions
  namespace: System.Linq
  summary: "\n<p>Gets the type of the element(s) that are returned when the expression tree associated with this instance of <xref href=\"System.Linq.IQueryable\" data-throw-if-not-resolved=\"false\"></xref> is executed.</p>\n"
  remarks: "\n<p>The <xref href=\"System.Linq.IQueryable.ElementType\" data-throw-if-not-resolved=\"false\"></xref> property represents the \"T\" in <code>IQueryable<T></code> or <code>IQueryable(Of T)</code>.</p>\n"
  example:
  - 
  syntax:
    content: Type ElementType { get; }
    content.vb: ReadOnly Property ElementType As Type
    parameters: []
    return:
      type: System.Type
      description: "\n<p>A <xref href=\"System.Type\" data-throw-if-not-resolved=\"false\"></xref> that represents the type of the element(s) that are returned when the expression tree associated with this object is executed.</p>\n"
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: System.Linq.IQueryable.Expression
  commentId: P:System.Linq.IQueryable.Expression
  id: Expression
  parent: System.Linq.IQueryable
  langs:
  - csharp
  - vb
  name: Expression
  fullName: System.Linq.IQueryable.Expression
  type: Property
  source:
    remote:
      path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Expression
    path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs
    startLine: 19
  assemblies:
  - System.Linq.Expressions
  namespace: System.Linq
  summary: "\n<p>Gets the expression tree that is associated with the instance of <xref href=\"System.Linq.IQueryable\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  remarks: "\n<p>If an instance of <xref href=\"System.Linq.IQueryable\" data-throw-if-not-resolved=\"false\"></xref> represents a LINQ query against a data source, the associated expression tree represents that query.</p>\n"
  example:
  - 
  syntax:
    content: Expression Expression { get; }
    content.vb: ReadOnly Property Expression As Expression
    parameters: []
    return:
      type: System.Linq.Expressions.Expression
      description: "\n<p>The <xref href=\"System.Linq.Expressions.Expression\" data-throw-if-not-resolved=\"false\"></xref> that is associated with this instance of <xref href=\"System.Linq.IQueryable\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: System.Linq.IQueryable.Provider
  commentId: P:System.Linq.IQueryable.Provider
  id: Provider
  parent: System.Linq.IQueryable
  langs:
  - csharp
  - vb
  name: Provider
  fullName: System.Linq.IQueryable.Provider
  type: Property
  source:
    remote:
      path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Provider
    path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs
    startLine: 20
  assemblies:
  - System.Linq.Expressions
  namespace: System.Linq
  summary: "\n<p>Gets the query provider that is associated with this data source.</p>\n"
  remarks: "\n<p>If an instance of <xref href=\"System.Linq.IQueryable\" data-throw-if-not-resolved=\"false\"></xref> represents a LINQ query against a data source, the associated query provider is the provider that created the <xref href=\"System.Linq.IQueryable\" data-throw-if-not-resolved=\"false\"></xref> instance.</p>\n"
  example:
  - 
  syntax:
    content: IQueryProvider Provider { get; }
    content.vb: ReadOnly Property Provider As IQueryProvider
    parameters: []
    return:
      type: System.Linq.IQueryProvider
      description: "\n<p>The <xref href=\"System.Linq.IQueryProvider\" data-throw-if-not-resolved=\"false\"></xref> that is associated with this data source.</p>\n"
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
references:
- uid: System.Linq
  isExternal: false
  name: System.Linq
  fullName: System.Linq
- uid: System.Collections.IEnumerable.GetEnumerator
  parent: System.Collections.IEnumerable
  isExternal: false
  name: GetEnumerator()
  fullName: System.Collections.IEnumerable.GetEnumerator()
  spec.csharp:
  - uid: System.Collections.IEnumerable.GetEnumerator
    name: GetEnumerator
    fullName: System.Collections.IEnumerable.GetEnumerator
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Collections.IEnumerable.GetEnumerator
    name: GetEnumerator
    fullName: System.Collections.IEnumerable.GetEnumerator
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Collections.IEnumerable
  parent: System.Collections
  isExternal: false
  name: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: System.Collections
  isExternal: false
  name: System.Collections
  fullName: System.Collections
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  fullName: System.Type
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions
  isExternal: false
  name: System.Linq.Expressions
  fullName: System.Linq.Expressions
- uid: System.Linq.IQueryProvider
  parent: System.Linq
  isExternal: false
  name: IQueryProvider
  fullName: System.Linq.IQueryProvider
