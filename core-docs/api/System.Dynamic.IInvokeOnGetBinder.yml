items:
- uid: System.Dynamic.IInvokeOnGetBinder
  commentId: T:System.Dynamic.IInvokeOnGetBinder
  id: IInvokeOnGetBinder
  parent: System.Dynamic
  children:
  - System.Dynamic.IInvokeOnGetBinder.InvokeOnGet
  langs:
  - csharp
  - vb
  name: IInvokeOnGetBinder
  fullName: System.Dynamic.IInvokeOnGetBinder
  type: Interface
  source:
    remote:
      path: src/System.Dynamic.Runtime/src/System/Dynamic/IInvokeOnGetBinder.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IInvokeOnGetBinder
    path: src/System.Dynamic.Runtime/src/System/Dynamic/IInvokeOnGetBinder.cs
    startLine: 10
  assemblies:
  - System.Dynamic.Runtime
  namespace: System.Dynamic
  summary: "\n<p>Represents information about a dynamic get member operation that indicates if the get member should invoke properties when they perform the get operation.</p>\n"
  example:
  - 
  syntax:
    content: public interface IInvokeOnGetBinder
    content.vb: Public Interface IInvokeOnGetBinder
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: System.Dynamic.IInvokeOnGetBinder.InvokeOnGet
  commentId: P:System.Dynamic.IInvokeOnGetBinder.InvokeOnGet
  id: InvokeOnGet
  parent: System.Dynamic.IInvokeOnGetBinder
  langs:
  - csharp
  - vb
  name: InvokeOnGet
  fullName: System.Dynamic.IInvokeOnGetBinder.InvokeOnGet
  type: Property
  source:
    remote:
      path: src/System.Dynamic.Runtime/src/System/Dynamic/IInvokeOnGetBinder.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: InvokeOnGet
    path: src/System.Dynamic.Runtime/src/System/Dynamic/IInvokeOnGetBinder.cs
    startLine: 24
  assemblies:
  - System.Dynamic.Runtime
  namespace: System.Dynamic
  summary: "\n<p>Gets the value indicating if this get member operation should invoke properties when they perform the get operation. The default value when this interface is not present is true.</p>\n"
  remarks: "\n<p>This property is used by some languages to get a better COM interoperation experience.</p>\n<p>When the value is set to false, the dynamic COM object will not invoke the object but will instead bind to the name, and return an object that can be invoked or indexed later. This is useful for indexed properties and languages that do not produce InvokeMember call sites.</p>\n"
  example:
  - 
  syntax:
    content: bool InvokeOnGet { get; }
    content.vb: ReadOnly Property InvokeOnGet As Boolean
    parameters: []
    return:
      type: System.Boolean
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
references:
- uid: System.Dynamic
  isExternal: false
  name: System.Dynamic
  fullName: System.Dynamic
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  fullName: System.Boolean
- uid: System
  isExternal: false
  name: System
  fullName: System
