items:
- uid: System.Net.NetworkInformation.IcmpV6Statistics
  commentId: T:System.Net.NetworkInformation.IcmpV6Statistics
  id: IcmpV6Statistics
  parent: System.Net.NetworkInformation
  children:
  - System.Net.NetworkInformation.IcmpV6Statistics.#ctor
  - System.Net.NetworkInformation.IcmpV6Statistics.DestinationUnreachableMessagesReceived
  - System.Net.NetworkInformation.IcmpV6Statistics.DestinationUnreachableMessagesSent
  - System.Net.NetworkInformation.IcmpV6Statistics.EchoRepliesReceived
  - System.Net.NetworkInformation.IcmpV6Statistics.EchoRepliesSent
  - System.Net.NetworkInformation.IcmpV6Statistics.EchoRequestsReceived
  - System.Net.NetworkInformation.IcmpV6Statistics.EchoRequestsSent
  - System.Net.NetworkInformation.IcmpV6Statistics.ErrorsReceived
  - System.Net.NetworkInformation.IcmpV6Statistics.ErrorsSent
  - System.Net.NetworkInformation.IcmpV6Statistics.MembershipQueriesReceived
  - System.Net.NetworkInformation.IcmpV6Statistics.MembershipQueriesSent
  - System.Net.NetworkInformation.IcmpV6Statistics.MembershipReductionsReceived
  - System.Net.NetworkInformation.IcmpV6Statistics.MembershipReductionsSent
  - System.Net.NetworkInformation.IcmpV6Statistics.MembershipReportsReceived
  - System.Net.NetworkInformation.IcmpV6Statistics.MembershipReportsSent
  - System.Net.NetworkInformation.IcmpV6Statistics.MessagesReceived
  - System.Net.NetworkInformation.IcmpV6Statistics.MessagesSent
  - System.Net.NetworkInformation.IcmpV6Statistics.NeighborAdvertisementsReceived
  - System.Net.NetworkInformation.IcmpV6Statistics.NeighborAdvertisementsSent
  - System.Net.NetworkInformation.IcmpV6Statistics.NeighborSolicitsReceived
  - System.Net.NetworkInformation.IcmpV6Statistics.NeighborSolicitsSent
  - System.Net.NetworkInformation.IcmpV6Statistics.PacketTooBigMessagesReceived
  - System.Net.NetworkInformation.IcmpV6Statistics.PacketTooBigMessagesSent
  - System.Net.NetworkInformation.IcmpV6Statistics.ParameterProblemsReceived
  - System.Net.NetworkInformation.IcmpV6Statistics.ParameterProblemsSent
  - System.Net.NetworkInformation.IcmpV6Statistics.RedirectsReceived
  - System.Net.NetworkInformation.IcmpV6Statistics.RedirectsSent
  - System.Net.NetworkInformation.IcmpV6Statistics.RouterAdvertisementsReceived
  - System.Net.NetworkInformation.IcmpV6Statistics.RouterAdvertisementsSent
  - System.Net.NetworkInformation.IcmpV6Statistics.RouterSolicitsReceived
  - System.Net.NetworkInformation.IcmpV6Statistics.RouterSolicitsSent
  - System.Net.NetworkInformation.IcmpV6Statistics.TimeExceededMessagesReceived
  - System.Net.NetworkInformation.IcmpV6Statistics.TimeExceededMessagesSent
  langs:
  - csharp
  - vb
  name: IcmpV6Statistics
  fullName: System.Net.NetworkInformation.IcmpV6Statistics
  type: Class
  source:
    remote:
      path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IcmpV6Statistics
    path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs
    startLine: 67
  assemblies:
  - System.Net.NetworkInformation
  namespace: System.Net.NetworkInformation
  summary: "\n<p>Provides Internet Control Message Protocol for Internet Protocol version 6 (ICMPv6) statistical data for the local computer.</p>\n"
  remarks: "\n<p>ICMPV6 is a set of error and informational messages for use with Internet Protocol version 6 (IPv6). This class is used by the <xref href=\"System.Net.NetworkInformation.IPGlobalProperties.GetIcmpV6Statistics\" data-throw-if-not-resolved=\"false\"></xref> method to return ICMPV6 traffic information.</p>\n<p>The properties in this class correlate to the Management Information Base objects for ICMPv6 defined in IETF RFC 2466. ICMPv6 is defined in RFC 2463.</p>\n"
  example:
  - "\n<p>The following example displays the current ICMPv6 statistics.</p>NCLNetInfoReport#7"
  syntax:
    content: public abstract class IcmpV6Statistics
    content.vb: Public MustInherit Class IcmpV6Statistics
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: System.Net.NetworkInformation.IcmpV6Statistics.#ctor
  commentId: M:System.Net.NetworkInformation.IcmpV6Statistics.#ctor
  id: '#ctor'
  parent: System.Net.NetworkInformation.IcmpV6Statistics
  langs:
  - csharp
  - vb
  name: IcmpV6Statistics()
  fullName: System.Net.NetworkInformation.IcmpV6Statistics.IcmpV6Statistics()
  type: Constructor
  source:
    remote:
      path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs
    startLine: 69
  assemblies:
  - System.Net.NetworkInformation
  namespace: System.Net.NetworkInformation
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Net.NetworkInformation.IcmpV6Statistics\" data-throw-if-not-resolved=\"false\"></xref> class.</p>\n"
  remarks: "\n<p>This constructor can be called only by classes that derive from <xref href=\"System.Net.NetworkInformation.IcmpV6Statistics\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: protected IcmpV6Statistics()
    content.vb: Protected Sub New
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: System.Net.NetworkInformation.IcmpV6Statistics.DestinationUnreachableMessagesReceived
  commentId: P:System.Net.NetworkInformation.IcmpV6Statistics.DestinationUnreachableMessagesReceived
  id: DestinationUnreachableMessagesReceived
  parent: System.Net.NetworkInformation.IcmpV6Statistics
  langs:
  - csharp
  - vb
  name: DestinationUnreachableMessagesReceived
  fullName: System.Net.NetworkInformation.IcmpV6Statistics.DestinationUnreachableMessagesReceived
  type: Property
  source:
    remote:
      path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: DestinationUnreachableMessagesReceived
    path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs
    startLine: 70
  assemblies:
  - System.Net.NetworkInformation
  namespace: System.Net.NetworkInformation
  summary: "\n<p>Gets the number of Internet Control Message Protocol version 6 (ICMPv6) messages received because of a packet having an unreachable address in its destination.</p>\n"
  remarks: "\n<p>A Destination Unreachable message can be sent to the computer that is the source of a packet for any of the following reasons: </p>\n<ul><li>\n<p>The computer cannot find a route to the destination address.</p>\n</li><li>\n<p>Communication with the destination address is administratively prohibited. For example, a firewall prevents delivery of packets to the destination.</p>\n</li><li>\n<p>The destination address is unreachable.</p>\n</li><li>\n<p>The destination port is unreachable. For example, there is no listener available for the packet's protocol.</p>\n</li></ul>\n"
  example:
  - "\n<p>The following example displays the value of this property.</p>NCLNetInfo2#32"
  syntax:
    content: public abstract long DestinationUnreachableMessagesReceived { get; }
    content.vb: Public MustOverride ReadOnly Property DestinationUnreachableMessagesReceived As Long
    parameters: []
    return:
      type: System.Int64
      description: "\n<p>An <xref href=\"System.Int64\" data-throw-if-not-resolved=\"false\"></xref> value that specifies the total number of Destination Unreachable messages received.</p>\n"
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
- uid: System.Net.NetworkInformation.IcmpV6Statistics.DestinationUnreachableMessagesSent
  commentId: P:System.Net.NetworkInformation.IcmpV6Statistics.DestinationUnreachableMessagesSent
  id: DestinationUnreachableMessagesSent
  parent: System.Net.NetworkInformation.IcmpV6Statistics
  langs:
  - csharp
  - vb
  name: DestinationUnreachableMessagesSent
  fullName: System.Net.NetworkInformation.IcmpV6Statistics.DestinationUnreachableMessagesSent
  type: Property
  source:
    remote:
      path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: DestinationUnreachableMessagesSent
    path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs
    startLine: 71
  assemblies:
  - System.Net.NetworkInformation
  namespace: System.Net.NetworkInformation
  summary: "\n<p>Gets the number of Internet Control Message Protocol version 6 (ICMPv6) messages sent because of a packet having an unreachable address in its destination.</p>\n"
  remarks: "\n<p>A Destination Unreachable message can be sent to the computer that is the source of a packet for any of the following reasons: </p>\n<ul><li>\n<p>The computer cannot find a route to the destination address.</p>\n</li><li>\n<p>Communication with the destination address is administratively prohibited. For example, a firewall prevents delivery of packets to the destination.</p>\n</li><li>\n<p>The destination address is unreachable.</p>\n</li><li>\n<p>The destination port is unreachable. For example, there is no listener available for the packet's protocol.</p>\n</li></ul>\n"
  example:
  - "\n<p>The following example displays the value of this property.</p>NCLNetInfo2#32"
  syntax:
    content: public abstract long DestinationUnreachableMessagesSent { get; }
    content.vb: Public MustOverride ReadOnly Property DestinationUnreachableMessagesSent As Long
    parameters: []
    return:
      type: System.Int64
      description: "\n<p>An <xref href=\"System.Int64\" data-throw-if-not-resolved=\"false\"></xref> value that specifies the total number of Destination Unreachable messages sent.</p>\n"
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
- uid: System.Net.NetworkInformation.IcmpV6Statistics.EchoRepliesReceived
  commentId: P:System.Net.NetworkInformation.IcmpV6Statistics.EchoRepliesReceived
  id: EchoRepliesReceived
  parent: System.Net.NetworkInformation.IcmpV6Statistics
  langs:
  - csharp
  - vb
  name: EchoRepliesReceived
  fullName: System.Net.NetworkInformation.IcmpV6Statistics.EchoRepliesReceived
  type: Property
  source:
    remote:
      path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: EchoRepliesReceived
    path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs
    startLine: 72
  assemblies:
  - System.Net.NetworkInformation
  namespace: System.Net.NetworkInformation
  summary: "\n<p>Gets the number of Internet Control Message Protocol version 6 (ICMPv6) Echo Reply messages received.</p>\n"
  remarks: "\n<p>Echo Request and Echo Reply messages allow a computer to request an ICMP response from a remote computer on a network. This functionality is often used to determine the validity of remote addresses.</p>\n"
  example:
  - "\n<p>The following example displays the value of this property.</p>NCLNetInfo2#30"
  syntax:
    content: public abstract long EchoRepliesReceived { get; }
    content.vb: Public MustOverride ReadOnly Property EchoRepliesReceived As Long
    parameters: []
    return:
      type: System.Int64
      description: "\n<p>An <xref href=\"System.Int64\" data-throw-if-not-resolved=\"false\"></xref> value that specifies the total number of number of ICMP Echo Reply messages received.</p>\n"
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
- uid: System.Net.NetworkInformation.IcmpV6Statistics.EchoRepliesSent
  commentId: P:System.Net.NetworkInformation.IcmpV6Statistics.EchoRepliesSent
  id: EchoRepliesSent
  parent: System.Net.NetworkInformation.IcmpV6Statistics
  langs:
  - csharp
  - vb
  name: EchoRepliesSent
  fullName: System.Net.NetworkInformation.IcmpV6Statistics.EchoRepliesSent
  type: Property
  source:
    remote:
      path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: EchoRepliesSent
    path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs
    startLine: 73
  assemblies:
  - System.Net.NetworkInformation
  namespace: System.Net.NetworkInformation
  summary: "\n<p>Gets the number of Internet Control Message Protocol version 6 (ICMPv6) Echo Reply messages sent.</p>\n"
  remarks: "\n<p>Echo Request and Echo Reply messages allow a computer to request an ICMP response from a remote computer on a network. This functionality is often used to determine the validity of remote addresses.</p>\n"
  example:
  - "\n<p>The following example displays the value of this property.</p>NCLNetInfo2#30"
  syntax:
    content: public abstract long EchoRepliesSent { get; }
    content.vb: Public MustOverride ReadOnly Property EchoRepliesSent As Long
    parameters: []
    return:
      type: System.Int64
      description: "\n<p>An <xref href=\"System.Int64\" data-throw-if-not-resolved=\"false\"></xref> value that specifies the total number of number of ICMP Echo Reply messages sent.</p>\n"
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
- uid: System.Net.NetworkInformation.IcmpV6Statistics.EchoRequestsReceived
  commentId: P:System.Net.NetworkInformation.IcmpV6Statistics.EchoRequestsReceived
  id: EchoRequestsReceived
  parent: System.Net.NetworkInformation.IcmpV6Statistics
  langs:
  - csharp
  - vb
  name: EchoRequestsReceived
  fullName: System.Net.NetworkInformation.IcmpV6Statistics.EchoRequestsReceived
  type: Property
  source:
    remote:
      path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: EchoRequestsReceived
    path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs
    startLine: 74
  assemblies:
  - System.Net.NetworkInformation
  namespace: System.Net.NetworkInformation
  summary: "\n<p>Gets the number of Internet Control Message Protocol version 6 (ICMPv6) Echo Request messages received.</p>\n"
  remarks: "\n<p>Echo Request and Echo Reply messages allow a computer to request an ICMP response from a remote computer on a network. This functionality is often used to determine the validity of remote addresses.</p>\n"
  example:
  - "\n<p>The following example displays the value of this property.</p>NCLNetInfo2#30"
  syntax:
    content: public abstract long EchoRequestsReceived { get; }
    content.vb: Public MustOverride ReadOnly Property EchoRequestsReceived As Long
    parameters: []
    return:
      type: System.Int64
      description: "\n<p>An <xref href=\"System.Int64\" data-throw-if-not-resolved=\"false\"></xref> value that specifies the total number of number of ICMP Echo Request messages received.</p>\n"
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
- uid: System.Net.NetworkInformation.IcmpV6Statistics.EchoRequestsSent
  commentId: P:System.Net.NetworkInformation.IcmpV6Statistics.EchoRequestsSent
  id: EchoRequestsSent
  parent: System.Net.NetworkInformation.IcmpV6Statistics
  langs:
  - csharp
  - vb
  name: EchoRequestsSent
  fullName: System.Net.NetworkInformation.IcmpV6Statistics.EchoRequestsSent
  type: Property
  source:
    remote:
      path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: EchoRequestsSent
    path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs
    startLine: 75
  assemblies:
  - System.Net.NetworkInformation
  namespace: System.Net.NetworkInformation
  summary: "\n<p>Gets the number of Internet Control Message Protocol version 6 (ICMPv6) Echo Request messages sent.</p>\n"
  remarks: "\n<p>Echo Request and Echo Reply messages allow a computer to request an ICMP response from a remote computer on a network. This functionality is often used to determine the validity of remote addresses.</p>\n"
  example:
  - "\n<p>The following example displays the value of this property.</p>NCLNetInfo2#30"
  syntax:
    content: public abstract long EchoRequestsSent { get; }
    content.vb: Public MustOverride ReadOnly Property EchoRequestsSent As Long
    parameters: []
    return:
      type: System.Int64
      description: "\n<p>An <xref href=\"System.Int64\" data-throw-if-not-resolved=\"false\"></xref> value that specifies the total number of number of ICMP Echo Request messages sent.</p>\n"
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
- uid: System.Net.NetworkInformation.IcmpV6Statistics.ErrorsReceived
  commentId: P:System.Net.NetworkInformation.IcmpV6Statistics.ErrorsReceived
  id: ErrorsReceived
  parent: System.Net.NetworkInformation.IcmpV6Statistics
  langs:
  - csharp
  - vb
  name: ErrorsReceived
  fullName: System.Net.NetworkInformation.IcmpV6Statistics.ErrorsReceived
  type: Property
  source:
    remote:
      path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ErrorsReceived
    path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs
    startLine: 76
  assemblies:
  - System.Net.NetworkInformation
  namespace: System.Net.NetworkInformation
  summary: "\n<p>Gets the number of Internet Control Message Protocol version 6 (ICMPv6) error messages received.</p>\n"
  example:
  - "\n<p>The following example displays the value of this property.</p>NCLNetInfo2#31"
  syntax:
    content: public abstract long ErrorsReceived { get; }
    content.vb: Public MustOverride ReadOnly Property ErrorsReceived As Long
    parameters: []
    return:
      type: System.Int64
      description: "\n<p>An <xref href=\"System.Int64\" data-throw-if-not-resolved=\"false\"></xref> value that specifies the total number of ICMP error messages received.</p>\n"
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
- uid: System.Net.NetworkInformation.IcmpV6Statistics.ErrorsSent
  commentId: P:System.Net.NetworkInformation.IcmpV6Statistics.ErrorsSent
  id: ErrorsSent
  parent: System.Net.NetworkInformation.IcmpV6Statistics
  langs:
  - csharp
  - vb
  name: ErrorsSent
  fullName: System.Net.NetworkInformation.IcmpV6Statistics.ErrorsSent
  type: Property
  source:
    remote:
      path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ErrorsSent
    path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs
    startLine: 77
  assemblies:
  - System.Net.NetworkInformation
  namespace: System.Net.NetworkInformation
  summary: "\n<p>Gets the number of Internet Control Message Protocol version 6 (ICMPv6) error messages sent.</p>\n"
  example:
  - "\n<p>The following example displays the value of this property.</p>NCLNetInfo2#31"
  syntax:
    content: public abstract long ErrorsSent { get; }
    content.vb: Public MustOverride ReadOnly Property ErrorsSent As Long
    parameters: []
    return:
      type: System.Int64
      description: "\n<p>An <xref href=\"System.Int64\" data-throw-if-not-resolved=\"false\"></xref> value that specifies the total number of ICMP error messages sent.</p>\n"
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
- uid: System.Net.NetworkInformation.IcmpV6Statistics.MembershipQueriesReceived
  commentId: P:System.Net.NetworkInformation.IcmpV6Statistics.MembershipQueriesReceived
  id: MembershipQueriesReceived
  parent: System.Net.NetworkInformation.IcmpV6Statistics
  langs:
  - csharp
  - vb
  name: MembershipQueriesReceived
  fullName: System.Net.NetworkInformation.IcmpV6Statistics.MembershipQueriesReceived
  type: Property
  source:
    remote:
      path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: MembershipQueriesReceived
    path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs
    startLine: 78
  assemblies:
  - System.Net.NetworkInformation
  namespace: System.Net.NetworkInformation
  summary: "\n<p>Gets the number of Internet Group management Protocol (IGMP) Group Membership Query messages received.</p>\n"
  remarks: "\n<p>Multicast routers send Group Membership Query messages to learn which groups have members on each of their attached physical networks. Host computers respond to a Group Membership Query message by sending a Group Membership Report for each multicast group joined by the host. A host computer can also send a Group Membership Report when it joins a new multicast group. Group Membership Reduction messages are sent when a host computer leaves a multicast group.</p>\n"
  example:
  - "\n<p>The following example displays the value of this property.</p>NCLNetInfo2#34"
  syntax:
    content: public abstract long MembershipQueriesReceived { get; }
    content.vb: Public MustOverride ReadOnly Property MembershipQueriesReceived As Long
    parameters: []
    return:
      type: System.Int64
      description: "\n<p>An <xref href=\"System.Int64\" data-throw-if-not-resolved=\"false\"></xref> value that specifies the total number of Group Membership Query messages received.</p>\n"
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
- uid: System.Net.NetworkInformation.IcmpV6Statistics.MembershipQueriesSent
  commentId: P:System.Net.NetworkInformation.IcmpV6Statistics.MembershipQueriesSent
  id: MembershipQueriesSent
  parent: System.Net.NetworkInformation.IcmpV6Statistics
  langs:
  - csharp
  - vb
  name: MembershipQueriesSent
  fullName: System.Net.NetworkInformation.IcmpV6Statistics.MembershipQueriesSent
  type: Property
  source:
    remote:
      path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: MembershipQueriesSent
    path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs
    startLine: 79
  assemblies:
  - System.Net.NetworkInformation
  namespace: System.Net.NetworkInformation
  summary: "\n<p>Gets the number of Internet Group management Protocol (IGMP) Group Membership Query messages sent.</p>\n"
  remarks: "\n<p>Multicast routers send Group Membership Query messages to learn which groups have members on each of their attached physical networks. Host computers respond to a Group Membership Query message by sending a Group Membership Report for each multicast group joined by the host. A host computer can also send a Group Membership Report when it joins a new multicast group. Group Membership Reduction messages are sent when a host computer leaves a multicast group.</p>\n"
  example:
  - "\n<p>The following example displays the value of this property.</p>NCLNetInfo2#34"
  syntax:
    content: public abstract long MembershipQueriesSent { get; }
    content.vb: Public MustOverride ReadOnly Property MembershipQueriesSent As Long
    parameters: []
    return:
      type: System.Int64
      description: "\n<p>An <xref href=\"System.Int64\" data-throw-if-not-resolved=\"false\"></xref> value that specifies the total number of Group Membership Query messages sent.</p>\n"
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
- uid: System.Net.NetworkInformation.IcmpV6Statistics.MembershipReductionsReceived
  commentId: P:System.Net.NetworkInformation.IcmpV6Statistics.MembershipReductionsReceived
  id: MembershipReductionsReceived
  parent: System.Net.NetworkInformation.IcmpV6Statistics
  langs:
  - csharp
  - vb
  name: MembershipReductionsReceived
  fullName: System.Net.NetworkInformation.IcmpV6Statistics.MembershipReductionsReceived
  type: Property
  source:
    remote:
      path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: MembershipReductionsReceived
    path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs
    startLine: 80
  assemblies:
  - System.Net.NetworkInformation
  namespace: System.Net.NetworkInformation
  summary: "\n<p>Gets the number of Internet Group Management Protocol (IGMP) Group Membership Reduction messages received.</p>\n"
  remarks: "\n<p>Multicast routers send Group Membership Query messages to learn which groups have members on each of their attached physical networks. Host computers respond to a Group Membership Query message by sending a Group Membership Report for each multicast group joined by the host. A host computer can also send a Group Membership Report when it joins a new multicast group. Group Membership Reduction messages are sent when a host computer leaves a multicast group.</p>\n"
  example:
  - "\n<p>The following example displays the value of this property.</p>NCLNetInfo2#34"
  syntax:
    content: public abstract long MembershipReductionsReceived { get; }
    content.vb: Public MustOverride ReadOnly Property MembershipReductionsReceived As Long
    parameters: []
    return:
      type: System.Int64
      description: "\n<p>An <xref href=\"System.Int64\" data-throw-if-not-resolved=\"false\"></xref> value that specifies the total number of Group Membership Reduction messages received.</p>\n"
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
- uid: System.Net.NetworkInformation.IcmpV6Statistics.MembershipReductionsSent
  commentId: P:System.Net.NetworkInformation.IcmpV6Statistics.MembershipReductionsSent
  id: MembershipReductionsSent
  parent: System.Net.NetworkInformation.IcmpV6Statistics
  langs:
  - csharp
  - vb
  name: MembershipReductionsSent
  fullName: System.Net.NetworkInformation.IcmpV6Statistics.MembershipReductionsSent
  type: Property
  source:
    remote:
      path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: MembershipReductionsSent
    path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs
    startLine: 81
  assemblies:
  - System.Net.NetworkInformation
  namespace: System.Net.NetworkInformation
  summary: "\n<p>Gets the number of Internet Group Management Protocol (IGMP) Group Membership Reduction messages sent.</p>\n"
  remarks: "\n<p>Multicast routers send Group Membership Query messages to learn which groups have members on each of their attached physical networks. Host computers respond to a Group Membership Query message by sending a Group Membership Report for each multicast group joined by the host. A host computer can also send a Group Membership Report when it joins a new multicast group. Group Membership Reduction messages are sent when a host computer leaves a multicast group.</p>\n"
  example:
  - "\n<p>The following example displays the value of this property.</p>NCLNetInfo2#34"
  syntax:
    content: public abstract long MembershipReductionsSent { get; }
    content.vb: Public MustOverride ReadOnly Property MembershipReductionsSent As Long
    parameters: []
    return:
      type: System.Int64
      description: "\n<p>An <xref href=\"System.Int64\" data-throw-if-not-resolved=\"false\"></xref> value that specifies the total number of Group Membership Reduction messages sent.</p>\n"
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
- uid: System.Net.NetworkInformation.IcmpV6Statistics.MembershipReportsReceived
  commentId: P:System.Net.NetworkInformation.IcmpV6Statistics.MembershipReportsReceived
  id: MembershipReportsReceived
  parent: System.Net.NetworkInformation.IcmpV6Statistics
  langs:
  - csharp
  - vb
  name: MembershipReportsReceived
  fullName: System.Net.NetworkInformation.IcmpV6Statistics.MembershipReportsReceived
  type: Property
  source:
    remote:
      path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: MembershipReportsReceived
    path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs
    startLine: 82
  assemblies:
  - System.Net.NetworkInformation
  namespace: System.Net.NetworkInformation
  summary: "\n<p>Gets the number of Internet Group Management Protocol (IGMP) Group Membership Report messages received.</p>\n"
  remarks: "\n<p>Multicast routers send Group Membership Query messages to learn which groups have members on each of their attached physical networks. Host computers respond to a Group Membership Query message by sending a Group Membership Report for each multicast group joined by the host. A host computer can also send a Group Membership Report when it joins a new multicast group. Group Membership Reduction messages are sent when a host computer leaves a multicast group.</p>\n"
  example:
  - "\n<p>The following example displays the value of this property.</p>NCLNetInfo2#34"
  syntax:
    content: public abstract long MembershipReportsReceived { get; }
    content.vb: Public MustOverride ReadOnly Property MembershipReportsReceived As Long
    parameters: []
    return:
      type: System.Int64
      description: "\n<p>An <xref href=\"System.Int64\" data-throw-if-not-resolved=\"false\"></xref> value that specifies the total number of Group Membership Report messages received.</p>\n"
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
- uid: System.Net.NetworkInformation.IcmpV6Statistics.MembershipReportsSent
  commentId: P:System.Net.NetworkInformation.IcmpV6Statistics.MembershipReportsSent
  id: MembershipReportsSent
  parent: System.Net.NetworkInformation.IcmpV6Statistics
  langs:
  - csharp
  - vb
  name: MembershipReportsSent
  fullName: System.Net.NetworkInformation.IcmpV6Statistics.MembershipReportsSent
  type: Property
  source:
    remote:
      path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: MembershipReportsSent
    path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs
    startLine: 83
  assemblies:
  - System.Net.NetworkInformation
  namespace: System.Net.NetworkInformation
  summary: "\n<p>Gets the number of Internet Group Management Protocol (IGMP) Group Membership Report messages sent.</p>\n"
  remarks: "\n<p>Multicast routers send Group Membership Query messages to learn which groups have members on each of their attached physical networks. Host computers respond to a Group Membership Query message by sending a Group Membership Report for each multicast group joined by the host. A host computer can also send a Group Membership Report when it joins a new multicast group. Group Membership Reduction messages are sent when a host computer leaves a multicast group.</p>\n"
  example:
  - "\n<p>The following example displays the value of this property.</p>NCLNetInfo2#34"
  syntax:
    content: public abstract long MembershipReportsSent { get; }
    content.vb: Public MustOverride ReadOnly Property MembershipReportsSent As Long
    parameters: []
    return:
      type: System.Int64
      description: "\n<p>An <xref href=\"System.Int64\" data-throw-if-not-resolved=\"false\"></xref> value that specifies the total number of Group Membership Report messages sent.</p>\n"
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
- uid: System.Net.NetworkInformation.IcmpV6Statistics.MessagesReceived
  commentId: P:System.Net.NetworkInformation.IcmpV6Statistics.MessagesReceived
  id: MessagesReceived
  parent: System.Net.NetworkInformation.IcmpV6Statistics
  langs:
  - csharp
  - vb
  name: MessagesReceived
  fullName: System.Net.NetworkInformation.IcmpV6Statistics.MessagesReceived
  type: Property
  source:
    remote:
      path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: MessagesReceived
    path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs
    startLine: 84
  assemblies:
  - System.Net.NetworkInformation
  namespace: System.Net.NetworkInformation
  summary: "\n<p>Gets the number of Internet Control Message Protocol version 6 (ICMPv6) messages received.</p>\n"
  remarks: "\n<p>ICMPv6 messages are sent to communicate errors and information about packets sent using Internet Protocol version 6 (IPv6).</p>\n"
  example:
  - "\n<p>The following example displays the value of this property.</p>NCLNetInfo2#33"
  syntax:
    content: public abstract long MessagesReceived { get; }
    content.vb: Public MustOverride ReadOnly Property MessagesReceived As Long
    parameters: []
    return:
      type: System.Int64
      description: "\n<p>An <xref href=\"System.Int64\" data-throw-if-not-resolved=\"false\"></xref> value that specifies the total number of ICMPv6 messages received.</p>\n"
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
- uid: System.Net.NetworkInformation.IcmpV6Statistics.MessagesSent
  commentId: P:System.Net.NetworkInformation.IcmpV6Statistics.MessagesSent
  id: MessagesSent
  parent: System.Net.NetworkInformation.IcmpV6Statistics
  langs:
  - csharp
  - vb
  name: MessagesSent
  fullName: System.Net.NetworkInformation.IcmpV6Statistics.MessagesSent
  type: Property
  source:
    remote:
      path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: MessagesSent
    path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs
    startLine: 85
  assemblies:
  - System.Net.NetworkInformation
  namespace: System.Net.NetworkInformation
  summary: "\n<p>Gets the number of Internet Control Message Protocol version 6 (ICMPv6) messages sent.</p>\n"
  remarks: "\n<p>ICMPv6 messages are sent to communicate errors and information about packets sent using Internet Protocol version 6 (IPv6).</p>\n"
  example:
  - "\n<p>The following example displays the value of this property.</p>NCLNetInfo2#33"
  syntax:
    content: public abstract long MessagesSent { get; }
    content.vb: Public MustOverride ReadOnly Property MessagesSent As Long
    parameters: []
    return:
      type: System.Int64
      description: "\n<p>An <xref href=\"System.Int64\" data-throw-if-not-resolved=\"false\"></xref> value that specifies the total number of ICMPv6 messages sent.</p>\n"
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
- uid: System.Net.NetworkInformation.IcmpV6Statistics.NeighborAdvertisementsReceived
  commentId: P:System.Net.NetworkInformation.IcmpV6Statistics.NeighborAdvertisementsReceived
  id: NeighborAdvertisementsReceived
  parent: System.Net.NetworkInformation.IcmpV6Statistics
  langs:
  - csharp
  - vb
  name: NeighborAdvertisementsReceived
  fullName: System.Net.NetworkInformation.IcmpV6Statistics.NeighborAdvertisementsReceived
  type: Property
  source:
    remote:
      path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: NeighborAdvertisementsReceived
    path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs
    startLine: 86
  assemblies:
  - System.Net.NetworkInformation
  namespace: System.Net.NetworkInformation
  summary: "\n<p>Gets the number of Internet Control Message Protocol version 6 (ICMPv6) Neighbor Advertisement messages received.</p>\n"
  remarks: "\n<p>Neighbor Discovery is a process whereby host computers and routers can determine the addresses for neighbors known to reside on shared links. Part of this discovery process is accomplished using ICMP messages called Neighbor Solicitations and Neighbor Advertisements. Neighbor Solicitation messages are sent to discover the link-layer address of a neighbor or to verify that a neighbor is still reachable via a cached link-layer address. A Neighbor Advertisement that contains address information is sent in response to a solicitation or to announce an address change.</p>\n"
  example:
  - "\n<p>The following example displays the value of this property.</p>NCLNetInfo2#35"
  syntax:
    content: public abstract long NeighborAdvertisementsReceived { get; }
    content.vb: Public MustOverride ReadOnly Property NeighborAdvertisementsReceived As Long
    parameters: []
    return:
      type: System.Int64
      description: "\n<p>An <xref href=\"System.Int64\" data-throw-if-not-resolved=\"false\"></xref> value that specifies the total number of ICMP Neighbor Advertisement messages received.</p>\n"
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
- uid: System.Net.NetworkInformation.IcmpV6Statistics.NeighborAdvertisementsSent
  commentId: P:System.Net.NetworkInformation.IcmpV6Statistics.NeighborAdvertisementsSent
  id: NeighborAdvertisementsSent
  parent: System.Net.NetworkInformation.IcmpV6Statistics
  langs:
  - csharp
  - vb
  name: NeighborAdvertisementsSent
  fullName: System.Net.NetworkInformation.IcmpV6Statistics.NeighborAdvertisementsSent
  type: Property
  source:
    remote:
      path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: NeighborAdvertisementsSent
    path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs
    startLine: 87
  assemblies:
  - System.Net.NetworkInformation
  namespace: System.Net.NetworkInformation
  summary: "\n<p>Gets the number of Internet Control Message Protocol version 6 (ICMPv6) Neighbor Advertisement messages sent.</p>\n"
  remarks: "\n<p>Neighbor Discovery is a process whereby host computers and routers can determine the addresses for neighbors known to reside on shared links. Part of this discovery process is accomplished using ICMP messages called Neighbor Solicitations and Neighbor Advertisements. Neighbor Solicitation messages are sent to discover the link-layer address of a neighbor or to verify that a neighbor is still reachable via a cached link-layer address. A Neighbor Advertisement that contains address information is sent in response to a solicitation or to announce an address change.</p>\n"
  example:
  - "\n<p>The following example displays the value of this property.</p>NCLNetInfo2#35"
  syntax:
    content: public abstract long NeighborAdvertisementsSent { get; }
    content.vb: Public MustOverride ReadOnly Property NeighborAdvertisementsSent As Long
    parameters: []
    return:
      type: System.Int64
      description: "\n<p>An <xref href=\"System.Int64\" data-throw-if-not-resolved=\"false\"></xref> value that specifies the total number of Neighbor Advertisement messages sent.</p>\n"
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
- uid: System.Net.NetworkInformation.IcmpV6Statistics.NeighborSolicitsReceived
  commentId: P:System.Net.NetworkInformation.IcmpV6Statistics.NeighborSolicitsReceived
  id: NeighborSolicitsReceived
  parent: System.Net.NetworkInformation.IcmpV6Statistics
  langs:
  - csharp
  - vb
  name: NeighborSolicitsReceived
  fullName: System.Net.NetworkInformation.IcmpV6Statistics.NeighborSolicitsReceived
  type: Property
  source:
    remote:
      path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: NeighborSolicitsReceived
    path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs
    startLine: 88
  assemblies:
  - System.Net.NetworkInformation
  namespace: System.Net.NetworkInformation
  summary: "\n<p>Gets the number of Internet Control Message Protocol version 6 (ICMPv6) Neighbor Solicitation messages received.</p>\n"
  remarks: "\n<p>Neighbor Discovery is a process whereby host computers and routers can determine the addresses for neighbors known to reside on shared links. Part of this discovery process is accomplished using ICMP messages called Neighbor Solicitations and Neighbor Advertisements. Neighbor Solicitation messages are sent to discover the link-layer address of a neighbor or to verify that a neighbor is still reachable via a cached link-layer address. A Neighbor Advertisement that contains address information is sent in response to a solicitation or to announce an address change.</p>\n"
  example:
  - "\n<p>The following example displays the value of this property.</p>NCLNetInfo2#35"
  syntax:
    content: public abstract long NeighborSolicitsReceived { get; }
    content.vb: Public MustOverride ReadOnly Property NeighborSolicitsReceived As Long
    parameters: []
    return:
      type: System.Int64
      description: "\n<p>An <xref href=\"System.Int64\" data-throw-if-not-resolved=\"false\"></xref> value that specifies the total number of Neighbor Solicitation messages received.</p>\n"
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
- uid: System.Net.NetworkInformation.IcmpV6Statistics.NeighborSolicitsSent
  commentId: P:System.Net.NetworkInformation.IcmpV6Statistics.NeighborSolicitsSent
  id: NeighborSolicitsSent
  parent: System.Net.NetworkInformation.IcmpV6Statistics
  langs:
  - csharp
  - vb
  name: NeighborSolicitsSent
  fullName: System.Net.NetworkInformation.IcmpV6Statistics.NeighborSolicitsSent
  type: Property
  source:
    remote:
      path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: NeighborSolicitsSent
    path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs
    startLine: 89
  assemblies:
  - System.Net.NetworkInformation
  namespace: System.Net.NetworkInformation
  summary: "\n<p>Gets the number of Internet Control Message Protocol version 6 (ICMPv6) Neighbor Solicitation messages sent.</p>\n"
  remarks: "\n<p>Neighbor Discovery is a process whereby host computers and routers can determine the addresses for neighbors known to reside on shared links. Part of this discovery process is accomplished using ICMP messages called Neighbor Solicitations and Neighbor Advertisements. Neighbor Solicitation messages are sent to discover the link-layer address of a neighbor or to verify that a neighbor is still reachable via a cached link-layer address. A Neighbor Advertisement that contains address information is sent in response to a solicitation or to announce an address change.</p>\n"
  example:
  - "\n<p>The following example displays the value of this property.</p>NCLNetInfo2#35"
  syntax:
    content: public abstract long NeighborSolicitsSent { get; }
    content.vb: Public MustOverride ReadOnly Property NeighborSolicitsSent As Long
    parameters: []
    return:
      type: System.Int64
      description: "\n<p>An <xref href=\"System.Int64\" data-throw-if-not-resolved=\"false\"></xref> value that specifies the total number of Neighbor Solicitation messages sent.</p>\n"
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
- uid: System.Net.NetworkInformation.IcmpV6Statistics.PacketTooBigMessagesReceived
  commentId: P:System.Net.NetworkInformation.IcmpV6Statistics.PacketTooBigMessagesReceived
  id: PacketTooBigMessagesReceived
  parent: System.Net.NetworkInformation.IcmpV6Statistics
  langs:
  - csharp
  - vb
  name: PacketTooBigMessagesReceived
  fullName: System.Net.NetworkInformation.IcmpV6Statistics.PacketTooBigMessagesReceived
  type: Property
  source:
    remote:
      path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: PacketTooBigMessagesReceived
    path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs
    startLine: 90
  assemblies:
  - System.Net.NetworkInformation
  namespace: System.Net.NetworkInformation
  summary: "\n<p>Gets the number of Internet Control Message Protocol version 6 (ICMPv6) Packet Too Big messages received.</p>\n"
  remarks: "\n<p>A router sends a Packet Too Big message when a packet cannot be forwarded because it is larger than the maximum transmission unit (MTU) of the outgoing link.</p>\n"
  example:
  - "\n<p>The following example displays the value of this property.</p>NCLNetInfo2#36"
  syntax:
    content: public abstract long PacketTooBigMessagesReceived { get; }
    content.vb: Public MustOverride ReadOnly Property PacketTooBigMessagesReceived As Long
    parameters: []
    return:
      type: System.Int64
      description: "\n<p>An <xref href=\"System.Int64\" data-throw-if-not-resolved=\"false\"></xref> value that specifies the total number of ICMP Packet Too Big messages received.</p>\n"
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
- uid: System.Net.NetworkInformation.IcmpV6Statistics.PacketTooBigMessagesSent
  commentId: P:System.Net.NetworkInformation.IcmpV6Statistics.PacketTooBigMessagesSent
  id: PacketTooBigMessagesSent
  parent: System.Net.NetworkInformation.IcmpV6Statistics
  langs:
  - csharp
  - vb
  name: PacketTooBigMessagesSent
  fullName: System.Net.NetworkInformation.IcmpV6Statistics.PacketTooBigMessagesSent
  type: Property
  source:
    remote:
      path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: PacketTooBigMessagesSent
    path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs
    startLine: 91
  assemblies:
  - System.Net.NetworkInformation
  namespace: System.Net.NetworkInformation
  summary: "\n<p>Gets the number of Internet Control Message Protocol version 6 (ICMPv6) Packet Too Big messages sent.</p>\n"
  remarks: "\n<p>A router sends a Packet Too Big message when a packet cannot be forwarded because it is larger than the maximum transmission unit (MTU) of the outgoing link.</p>\n"
  example:
  - "\n<p>The following example displays the value of this property.</p>NCLNetInfo2#36"
  syntax:
    content: public abstract long PacketTooBigMessagesSent { get; }
    content.vb: Public MustOverride ReadOnly Property PacketTooBigMessagesSent As Long
    parameters: []
    return:
      type: System.Int64
      description: "\n<p>An <xref href=\"System.Int64\" data-throw-if-not-resolved=\"false\"></xref> value that specifies the total number of ICMP Packet Too Big messages sent.</p>\n"
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
- uid: System.Net.NetworkInformation.IcmpV6Statistics.ParameterProblemsReceived
  commentId: P:System.Net.NetworkInformation.IcmpV6Statistics.ParameterProblemsReceived
  id: ParameterProblemsReceived
  parent: System.Net.NetworkInformation.IcmpV6Statistics
  langs:
  - csharp
  - vb
  name: ParameterProblemsReceived
  fullName: System.Net.NetworkInformation.IcmpV6Statistics.ParameterProblemsReceived
  type: Property
  source:
    remote:
      path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ParameterProblemsReceived
    path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs
    startLine: 92
  assemblies:
  - System.Net.NetworkInformation
  namespace: System.Net.NetworkInformation
  summary: "\n<p>Gets the number of Internet Control Message Protocol version 6 (ICMPv6) Parameter Problem messages received.</p>\n"
  remarks: "\n<p>Parameter Problem messages are sent when a host computer or router encounters problems while processing the contents of a packet header, such as encountering a invalid IPv6 option or a invalid Next Header type.</p>\n"
  example:
  - "\n<p>The following example displays the value of this property.</p>NCLNetInfo2#39"
  syntax:
    content: public abstract long ParameterProblemsReceived { get; }
    content.vb: Public MustOverride ReadOnly Property ParameterProblemsReceived As Long
    parameters: []
    return:
      type: System.Int64
      description: "\n<p>An <xref href=\"System.Int64\" data-throw-if-not-resolved=\"false\"></xref> value that specifies the total number of ICMP Parameter Problem messages received.</p>\n"
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
- uid: System.Net.NetworkInformation.IcmpV6Statistics.ParameterProblemsSent
  commentId: P:System.Net.NetworkInformation.IcmpV6Statistics.ParameterProblemsSent
  id: ParameterProblemsSent
  parent: System.Net.NetworkInformation.IcmpV6Statistics
  langs:
  - csharp
  - vb
  name: ParameterProblemsSent
  fullName: System.Net.NetworkInformation.IcmpV6Statistics.ParameterProblemsSent
  type: Property
  source:
    remote:
      path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ParameterProblemsSent
    path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs
    startLine: 93
  assemblies:
  - System.Net.NetworkInformation
  namespace: System.Net.NetworkInformation
  summary: "\n<p>Gets the number of Internet Control Message Protocol version 6 (ICMPv6) Parameter Problem messages sent.</p>\n"
  remarks: "\n<p>Parameter Problem messages are sent when a host computer or router encounters problems while processing the contents of a packet header, such as encountering an invalid IPv6 option or an invalid Next Header type.</p>\n"
  example:
  - "\n<p>The following example displays the value of this property.</p>NCLNetInfo2#39"
  syntax:
    content: public abstract long ParameterProblemsSent { get; }
    content.vb: Public MustOverride ReadOnly Property ParameterProblemsSent As Long
    parameters: []
    return:
      type: System.Int64
      description: "\n<p>An <xref href=\"System.Int64\" data-throw-if-not-resolved=\"false\"></xref> value that specifies the total number of ICMP Parameter Problem messages sent.</p>\n"
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
- uid: System.Net.NetworkInformation.IcmpV6Statistics.RedirectsReceived
  commentId: P:System.Net.NetworkInformation.IcmpV6Statistics.RedirectsReceived
  id: RedirectsReceived
  parent: System.Net.NetworkInformation.IcmpV6Statistics
  langs:
  - csharp
  - vb
  name: RedirectsReceived
  fullName: System.Net.NetworkInformation.IcmpV6Statistics.RedirectsReceived
  type: Property
  source:
    remote:
      path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: RedirectsReceived
    path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs
    startLine: 94
  assemblies:
  - System.Net.NetworkInformation
  namespace: System.Net.NetworkInformation
  summary: "\n<p>Gets the number of Internet Control Message Protocol version 6 (ICMPv6) Redirect messages received.</p>\n"
  remarks: "\n<p>Redirect messages are sent by routers to inform a host computer of a better route for a destination address.</p>\n"
  example:
  - "\n<p>The following example displays the value of this property.</p>NCLNetInfo2#37"
  syntax:
    content: public abstract long RedirectsReceived { get; }
    content.vb: Public MustOverride ReadOnly Property RedirectsReceived As Long
    parameters: []
    return:
      type: System.Int64
      description: "\n<p>An <xref href=\"System.Int64\" data-throw-if-not-resolved=\"false\"></xref> value that specifies the total number of ICMP Redirect messages received.</p>\n"
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
- uid: System.Net.NetworkInformation.IcmpV6Statistics.RedirectsSent
  commentId: P:System.Net.NetworkInformation.IcmpV6Statistics.RedirectsSent
  id: RedirectsSent
  parent: System.Net.NetworkInformation.IcmpV6Statistics
  langs:
  - csharp
  - vb
  name: RedirectsSent
  fullName: System.Net.NetworkInformation.IcmpV6Statistics.RedirectsSent
  type: Property
  source:
    remote:
      path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: RedirectsSent
    path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs
    startLine: 95
  assemblies:
  - System.Net.NetworkInformation
  namespace: System.Net.NetworkInformation
  summary: "\n<p>Gets the number of Internet Control Message Protocol version 6 (ICMPv6) Redirect messages sent.</p>\n"
  remarks: "\n<p>Redirect messages are sent by routers to inform a host computer of a better route for a destination address.</p>\n"
  example:
  - "\n<p>The following example displays the value of this property.</p>NCLNetInfo2#37"
  syntax:
    content: public abstract long RedirectsSent { get; }
    content.vb: Public MustOverride ReadOnly Property RedirectsSent As Long
    parameters: []
    return:
      type: System.Int64
      description: "\n<p>An <xref href=\"System.Int64\" data-throw-if-not-resolved=\"false\"></xref> value that specifies the total number of ICMP Redirect messages sent.</p>\n"
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
- uid: System.Net.NetworkInformation.IcmpV6Statistics.RouterAdvertisementsReceived
  commentId: P:System.Net.NetworkInformation.IcmpV6Statistics.RouterAdvertisementsReceived
  id: RouterAdvertisementsReceived
  parent: System.Net.NetworkInformation.IcmpV6Statistics
  langs:
  - csharp
  - vb
  name: RouterAdvertisementsReceived
  fullName: System.Net.NetworkInformation.IcmpV6Statistics.RouterAdvertisementsReceived
  type: Property
  source:
    remote:
      path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: RouterAdvertisementsReceived
    path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs
    startLine: 96
  assemblies:
  - System.Net.NetworkInformation
  namespace: System.Net.NetworkInformation
  summary: "\n<p>Gets the number of Internet Control Message Protocol version 6 (ICMPv6) Router Advertisement messages received.</p>\n"
  remarks: "\n<p>Before a host computer can send IP datagrams beyond its directly attached subnet, it must discover the address of at least one router on that subnet. This discovery can be accomplished using ICMP messages called Router Advertisements and Router Solicitations. An Advertisement message is sent by a router periodically to announce its presence and the addresses of its interfaces. When a computer connects to a network, rather than waiting to receive Router Advertisements, it can send Router Solicitations to request that routers send their advertisements immediately.</p>\n"
  example:
  - "\n<p>The following example displays the value of this property.</p>NCLNetInfo2#40"
  syntax:
    content: public abstract long RouterAdvertisementsReceived { get; }
    content.vb: Public MustOverride ReadOnly Property RouterAdvertisementsReceived As Long
    parameters: []
    return:
      type: System.Int64
      description: "\n<p>An <xref href=\"System.Int64\" data-throw-if-not-resolved=\"false\"></xref> value that specifies the total number of Router Advertisement messages received.</p>\n"
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
- uid: System.Net.NetworkInformation.IcmpV6Statistics.RouterAdvertisementsSent
  commentId: P:System.Net.NetworkInformation.IcmpV6Statistics.RouterAdvertisementsSent
  id: RouterAdvertisementsSent
  parent: System.Net.NetworkInformation.IcmpV6Statistics
  langs:
  - csharp
  - vb
  name: RouterAdvertisementsSent
  fullName: System.Net.NetworkInformation.IcmpV6Statistics.RouterAdvertisementsSent
  type: Property
  source:
    remote:
      path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: RouterAdvertisementsSent
    path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs
    startLine: 97
  assemblies:
  - System.Net.NetworkInformation
  namespace: System.Net.NetworkInformation
  summary: "\n<p>Gets the number of Internet Control Message Protocol version 6 (ICMPv6) Router Advertisement messages sent.</p>\n"
  remarks: "\n<p>Before a host computer can send IP datagrams beyond its directly attached subnet, it must discover the address of at least one router on that subnet. This discovery can be accomplished using ICMP messages called Router Advertisements and Router Solicitations. An Advertisement message is sent by a router periodically to announce its presence and the addresses of its interfaces. When a computer connects to a network, rather than waiting to receive Router Advertisements, it can send Router Solicitations to request that routers send their advertisements immediately.</p>\n"
  example:
  - "\n<p>The following example displays the value of this property.</p>NCLNetInfo2#40"
  syntax:
    content: public abstract long RouterAdvertisementsSent { get; }
    content.vb: Public MustOverride ReadOnly Property RouterAdvertisementsSent As Long
    parameters: []
    return:
      type: System.Int64
      description: "\n<p>An <xref href=\"System.Int64\" data-throw-if-not-resolved=\"false\"></xref> value that specifies the total number of Router Advertisement messages sent.</p>\n"
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
- uid: System.Net.NetworkInformation.IcmpV6Statistics.RouterSolicitsReceived
  commentId: P:System.Net.NetworkInformation.IcmpV6Statistics.RouterSolicitsReceived
  id: RouterSolicitsReceived
  parent: System.Net.NetworkInformation.IcmpV6Statistics
  langs:
  - csharp
  - vb
  name: RouterSolicitsReceived
  fullName: System.Net.NetworkInformation.IcmpV6Statistics.RouterSolicitsReceived
  type: Property
  source:
    remote:
      path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: RouterSolicitsReceived
    path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs
    startLine: 98
  assemblies:
  - System.Net.NetworkInformation
  namespace: System.Net.NetworkInformation
  summary: "\n<p>Gets the number of Internet Control Message Protocol version 6 (ICMPv6) Router Solicitation messages received.</p>\n"
  remarks: "\n<p>Before a host computer can send IP datagrams beyond its directly attached subnet, it must discover the address of at least one router on that subnet. This discovery can be accomplished using ICMP messages called Router Advertisements and Router Solicitations. An Advertisement message is sent by a router periodically to announce its presence and the addresses of its interfaces. When a computer connects to a network, rather than waiting to receive Router Advertisements, it can send Router Solicitations to request that routers send their advertisements immediately.</p>\n"
  example:
  - "\n<p>The following example displays the value of this property.</p>NCLNetInfo2#40"
  syntax:
    content: public abstract long RouterSolicitsReceived { get; }
    content.vb: Public MustOverride ReadOnly Property RouterSolicitsReceived As Long
    parameters: []
    return:
      type: System.Int64
      description: "\n<p>An <xref href=\"System.Int64\" data-throw-if-not-resolved=\"false\"></xref> value that specifies the total number of Router Solicitation messages received.</p>\n"
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
- uid: System.Net.NetworkInformation.IcmpV6Statistics.RouterSolicitsSent
  commentId: P:System.Net.NetworkInformation.IcmpV6Statistics.RouterSolicitsSent
  id: RouterSolicitsSent
  parent: System.Net.NetworkInformation.IcmpV6Statistics
  langs:
  - csharp
  - vb
  name: RouterSolicitsSent
  fullName: System.Net.NetworkInformation.IcmpV6Statistics.RouterSolicitsSent
  type: Property
  source:
    remote:
      path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: RouterSolicitsSent
    path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs
    startLine: 99
  assemblies:
  - System.Net.NetworkInformation
  namespace: System.Net.NetworkInformation
  summary: "\n<p>Gets the number of Internet Control Message Protocol version 6 (ICMPv6) Router Solicitation messages sent.</p>\n"
  remarks: "\n<p>Before a host computer can send IP datagrams beyond its directly attached subnet, it must discover the address of at least one router on that subnet. This discovery can be accomplished using ICMP messages called Router Advertisements and Router Solicitations. An Advertisement message is sent by a router periodically to announce its presence and the addresses of its interfaces. When a computer connects to a network, rather than waiting to receive Router Advertisements, it can send Router Solicitations to request that routers send their advertisements immediately.</p>\n"
  example:
  - "\n<p>The following example displays the value of this property.</p>NCLNetInfo2#40"
  syntax:
    content: public abstract long RouterSolicitsSent { get; }
    content.vb: Public MustOverride ReadOnly Property RouterSolicitsSent As Long
    parameters: []
    return:
      type: System.Int64
      description: "\n<p>An <xref href=\"System.Int64\" data-throw-if-not-resolved=\"false\"></xref> value that specifies the total number of Router Solicitation messages sent.</p>\n"
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
- uid: System.Net.NetworkInformation.IcmpV6Statistics.TimeExceededMessagesReceived
  commentId: P:System.Net.NetworkInformation.IcmpV6Statistics.TimeExceededMessagesReceived
  id: TimeExceededMessagesReceived
  parent: System.Net.NetworkInformation.IcmpV6Statistics
  langs:
  - csharp
  - vb
  name: TimeExceededMessagesReceived
  fullName: System.Net.NetworkInformation.IcmpV6Statistics.TimeExceededMessagesReceived
  type: Property
  source:
    remote:
      path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: TimeExceededMessagesReceived
    path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs
    startLine: 100
  assemblies:
  - System.Net.NetworkInformation
  namespace: System.Net.NetworkInformation
  summary: "\n<p>Gets the number of Internet Control Message Protocol version 6 (ICMPv6) Time Exceeded messages received.</p>\n"
  remarks: "\n<p>A packet's Hop Limit determines how many times it can be forwarded before it is discarded. Each time a packet is forwarded, its Hop Limit value is decremented by one. When the Hop Limit reaches zero or when a router receives a packet with its Hop Limit set to zero, the packet is discarded and the source of the packet receives a Time Exceeded message indicating that the initial Hop Limit was too small or that the packet was caught in a routing loop.</p>\n"
  example:
  - "\n<p>The following example displays the value of this property.</p>NCLNetInfo2#38"
  syntax:
    content: public abstract long TimeExceededMessagesReceived { get; }
    content.vb: Public MustOverride ReadOnly Property TimeExceededMessagesReceived As Long
    parameters: []
    return:
      type: System.Int64
      description: "\n<p>An <xref href=\"System.Int64\" data-throw-if-not-resolved=\"false\"></xref> value that specifies the total number of ICMP Time Exceeded messages received.</p>\n"
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
- uid: System.Net.NetworkInformation.IcmpV6Statistics.TimeExceededMessagesSent
  commentId: P:System.Net.NetworkInformation.IcmpV6Statistics.TimeExceededMessagesSent
  id: TimeExceededMessagesSent
  parent: System.Net.NetworkInformation.IcmpV6Statistics
  langs:
  - csharp
  - vb
  name: TimeExceededMessagesSent
  fullName: System.Net.NetworkInformation.IcmpV6Statistics.TimeExceededMessagesSent
  type: Property
  source:
    remote:
      path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: TimeExceededMessagesSent
    path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs
    startLine: 101
  assemblies:
  - System.Net.NetworkInformation
  namespace: System.Net.NetworkInformation
  summary: "\n<p>Gets the number of Internet Control Message Protocol version 6 (ICMPv6) Time Exceeded messages sent.</p>\n"
  remarks: "\n<p>A packet's Hop Limit determines how many times it can be forwarded before it is discarded. Each time a packet is forwarded, its Hop Limit value is decremented by one. When the Hop Limit reaches zero or when a router receives a packet with its Hop Limit set to zero, the packet is discarded and the source of the packet receives a Time Exceeded message indicating that the initial Hop Limit was too small or that the packet was caught in a routing loop.</p>\n"
  example:
  - "\n<p>The following example displays the value of this property.</p>NCLNetInfo2#38"
  syntax:
    content: public abstract long TimeExceededMessagesSent { get; }
    content.vb: Public MustOverride ReadOnly Property TimeExceededMessagesSent As Long
    parameters: []
    return:
      type: System.Int64
      description: "\n<p>An <xref href=\"System.Int64\" data-throw-if-not-resolved=\"false\"></xref> value that specifies the total number of ICMP Time Exceeded messages sent.</p>\n"
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
references:
- uid: System.Net.NetworkInformation
  isExternal: false
  name: System.Net.NetworkInformation
  fullName: System.Net.NetworkInformation
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Int64
  parent: System
  isExternal: false
  name: Int64
  fullName: System.Int64
