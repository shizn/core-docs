items:
- uid: System.Net.Http.HttpMessageInvoker
  commentId: T:System.Net.Http.HttpMessageInvoker
  id: HttpMessageInvoker
  parent: System.Net.Http
  children:
  - System.Net.Http.HttpMessageInvoker.#ctor(System.Net.Http.HttpMessageHandler)
  - System.Net.Http.HttpMessageInvoker.#ctor(System.Net.Http.HttpMessageHandler,System.Boolean)
  - System.Net.Http.HttpMessageInvoker.Dispose
  - System.Net.Http.HttpMessageInvoker.Dispose(System.Boolean)
  - System.Net.Http.HttpMessageInvoker.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)
  langs:
  - csharp
  - vb
  name: HttpMessageInvoker
  fullName: System.Net.Http.HttpMessageInvoker
  type: Class
  source:
    remote:
      path: src/System.Net.Http/src/System/Net/Http/HttpMessageInvoker.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: HttpMessageInvoker
    path: src/System.Net.Http/src/System/Net/Http/HttpMessageInvoker.cs
    startLine: 12
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  syntax:
    content: 'public class HttpMessageInvoker : IDisposable'
    content.vb: >-
      Public Class HttpMessageInvoker
          Inherits IDisposable
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: System.Net.Http.HttpMessageInvoker.#ctor(System.Net.Http.HttpMessageHandler)
  commentId: M:System.Net.Http.HttpMessageInvoker.#ctor(System.Net.Http.HttpMessageHandler)
  id: '#ctor(System.Net.Http.HttpMessageHandler)'
  parent: System.Net.Http.HttpMessageInvoker
  langs:
  - csharp
  - vb
  name: HttpMessageInvoker(HttpMessageHandler)
  fullName: System.Net.Http.HttpMessageInvoker.HttpMessageInvoker(System.Net.Http.HttpMessageHandler)
  type: Constructor
  source:
    remote:
      path: src/System.Net.Http/src/System/Net/Http/HttpMessageInvoker.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Net.Http/src/System/Net/Http/HttpMessageInvoker.cs
    startLine: 18
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  syntax:
    content: public HttpMessageInvoker(HttpMessageHandler handler)
    content.vb: Public Sub New(handler As HttpMessageHandler)
    parameters:
    - id: handler
      type: System.Net.Http.HttpMessageHandler
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Net.Http.HttpMessageInvoker.#ctor(System.Net.Http.HttpMessageHandler,System.Boolean)
  commentId: M:System.Net.Http.HttpMessageInvoker.#ctor(System.Net.Http.HttpMessageHandler,System.Boolean)
  id: '#ctor(System.Net.Http.HttpMessageHandler,System.Boolean)'
  parent: System.Net.Http.HttpMessageInvoker
  langs:
  - csharp
  - vb
  name: HttpMessageInvoker(HttpMessageHandler, Boolean)
  fullName: System.Net.Http.HttpMessageInvoker.HttpMessageInvoker(System.Net.Http.HttpMessageHandler, System.Boolean)
  type: Constructor
  source:
    remote:
      path: src/System.Net.Http/src/System/Net/Http/HttpMessageInvoker.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Net.Http/src/System/Net/Http/HttpMessageInvoker.cs
    startLine: 23
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  syntax:
    content: public HttpMessageInvoker(HttpMessageHandler handler, bool disposeHandler)
    content.vb: Public Sub New(handler As HttpMessageHandler, disposeHandler As Boolean)
    parameters:
    - id: handler
      type: System.Net.Http.HttpMessageHandler
    - id: disposeHandler
      type: System.Boolean
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Net.Http.HttpMessageInvoker.Dispose
  commentId: M:System.Net.Http.HttpMessageInvoker.Dispose
  id: Dispose
  parent: System.Net.Http.HttpMessageInvoker
  langs:
  - csharp
  - vb
  name: Dispose()
  fullName: System.Net.Http.HttpMessageInvoker.Dispose()
  type: Method
  source:
    remote:
      path: src/System.Net.Http/src/System/Net/Http/HttpMessageInvoker.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Dispose
    path: src/System.Net.Http/src/System/Net/Http/HttpMessageInvoker.cs
    startLine: 60
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  syntax:
    content: public void Dispose()
    content.vb: Public Sub Dispose
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Net.Http.HttpMessageInvoker.Dispose(System.Boolean)
  commentId: M:System.Net.Http.HttpMessageInvoker.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Net.Http.HttpMessageInvoker
  langs:
  - csharp
  - vb
  name: Dispose(Boolean)
  fullName: System.Net.Http.HttpMessageInvoker.Dispose(System.Boolean)
  type: Method
  source:
    remote:
      path: src/System.Net.Http/src/System/Net/Http/HttpMessageInvoker.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Dispose
    path: src/System.Net.Http/src/System/Net/Http/HttpMessageInvoker.cs
    startLine: 66
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  syntax:
    content: protected virtual void Dispose(bool disposing)
    content.vb: Protected Overridable Sub Dispose(disposing As Boolean)
    parameters:
    - id: disposing
      type: System.Boolean
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: System.Net.Http.HttpMessageInvoker.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)
  commentId: M:System.Net.Http.HttpMessageInvoker.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)
  id: SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)
  parent: System.Net.Http.HttpMessageInvoker
  langs:
  - csharp
  - vb
  name: SendAsync(HttpRequestMessage, Threading.CancellationToken)
  fullName: System.Net.Http.HttpMessageInvoker.SendAsync(System.Net.Http.HttpRequestMessage, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/System.Net.Http/ref/System.Net.Http.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: SendAsync
    path: src/System.Net.Http/ref/System.Net.Http.cs
    startLine: 141
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  syntax:
    content: public virtual Threading.Tasks.Task<HttpResponseMessage> SendAsync(HttpRequestMessage request, Threading.CancellationToken cancellationToken)
    content.vb: Public Overridable Function SendAsync(request As HttpRequestMessage, cancellationToken As Threading.CancellationToken) As Threading.Tasks.Task(Of HttpResponseMessage)
    parameters:
    - id: request
      type: System.Net.Http.HttpRequestMessage
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.Net.Http.HttpResponseMessage}
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
references:
- uid: System.Net.Http
  isExternal: false
  name: System.Net.Http
  fullName: System.Net.Http
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Net.Http.HttpMessageHandler
  parent: System.Net.Http
  isExternal: false
  name: HttpMessageHandler
  fullName: System.Net.Http.HttpMessageHandler
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  fullName: System.Boolean
- uid: System.Net.Http.HttpRequestMessage
  parent: System.Net.Http
  isExternal: false
  name: HttpRequestMessage
  fullName: System.Net.Http.HttpRequestMessage
- uid: System.Threading.CancellationToken
  parent: System.Threading
  isExternal: false
  name: Threading.CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task{System.Net.Http.HttpResponseMessage}
  definition: System.Threading.Tasks.Task`1
  name: Threading.Tasks.Task<HttpResponseMessage>
  fullName: System.Threading.Tasks.Task<System.Net.Http.HttpResponseMessage>
  fullname.vb: System.Threading.Tasks.Task(Of System.Net.Http.HttpResponseMessage)
  name.vb: Threading.Tasks.Task(Of HttpResponseMessage)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Threading.Tasks.Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Net.Http.HttpResponseMessage
    name: HttpResponseMessage
    fullName: System.Net.Http.HttpResponseMessage
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Threading.Tasks.Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Net.Http.HttpResponseMessage
    name: HttpResponseMessage
    fullName: System.Net.Http.HttpResponseMessage
  - name: )
    fullName: )
- uid: System.Threading
  isExternal: false
  name: System.Threading
  fullName: System.Threading
- uid: System.Threading.Tasks.Task`1
  parent: System.Threading.Tasks
  isExternal: false
  name: Threading.Tasks.Task<>
  fullName: System.Threading.Tasks.Task<>
  fullname.vb: System.Threading.Tasks.Task(Of )
  name.vb: Threading.Tasks.Task(Of )
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Threading.Tasks.Task
    fullName: System.Threading.Tasks.Task
  - name: <
    fullName: <
  - {}
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Threading.Tasks.Task
    fullName: System.Threading.Tasks.Task
  - name: '(Of '
    fullName: '(Of '
  - {}
  - name: )
    fullName: )
- uid: System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  fullName: System.Threading.Tasks
