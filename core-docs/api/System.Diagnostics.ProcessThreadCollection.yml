items:
- uid: System.Diagnostics.ProcessThreadCollection
  commentId: T:System.Diagnostics.ProcessThreadCollection
  id: ProcessThreadCollection
  parent: System.Diagnostics
  children:
  - System.Diagnostics.ProcessThreadCollection.#ctor
  - System.Diagnostics.ProcessThreadCollection.#ctor(System.Diagnostics.ProcessThread[])
  - System.Diagnostics.ProcessThreadCollection.Add(System.Diagnostics.ProcessThread)
  - System.Diagnostics.ProcessThreadCollection.Contains(System.Diagnostics.ProcessThread)
  - System.Diagnostics.ProcessThreadCollection.CopyTo(System.Diagnostics.ProcessThread[],System.Int32)
  - System.Diagnostics.ProcessThreadCollection.Count
  - System.Diagnostics.ProcessThreadCollection.GetEnumerator
  - System.Diagnostics.ProcessThreadCollection.IndexOf(System.Diagnostics.ProcessThread)
  - System.Diagnostics.ProcessThreadCollection.Insert(System.Int32,System.Diagnostics.ProcessThread)
  - System.Diagnostics.ProcessThreadCollection.Item(System.Int32)
  - System.Diagnostics.ProcessThreadCollection.Remove(System.Diagnostics.ProcessThread)
  langs:
  - csharp
  - vb
  name: ProcessThreadCollection
  fullName: System.Diagnostics.ProcessThreadCollection
  type: Class
  source:
    remote:
      path: src/System.Diagnostics.Process/src/System/Diagnostics/ProcessThreadCollection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ProcessThreadCollection
    path: src/System.Diagnostics.Process/src/System/Diagnostics/ProcessThreadCollection.cs
    startLine: 12
  assemblies:
  - System.Diagnostics.Process
  namespace: System.Diagnostics
  syntax:
    content: 'public class ProcessThreadCollection : ICollection'
    content.vb: >-
      Public Class ProcessThreadCollection
          Inherits ICollection
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: System.Diagnostics.ProcessThreadCollection.#ctor
  commentId: M:System.Diagnostics.ProcessThreadCollection.#ctor
  id: '#ctor'
  parent: System.Diagnostics.ProcessThreadCollection
  langs:
  - csharp
  - vb
  name: ProcessThreadCollection()
  fullName: System.Diagnostics.ProcessThreadCollection.ProcessThreadCollection()
  type: Constructor
  source:
    remote:
      path: src/System.Diagnostics.Process/src/System/Diagnostics/ProcessThreadCollection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Diagnostics.Process/src/System/Diagnostics/ProcessThreadCollection.cs
    startLine: 19
  assemblies:
  - System.Diagnostics.Process
  namespace: System.Diagnostics
  syntax:
    content: protected ProcessThreadCollection()
    content.vb: Protected Sub New
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: System.Diagnostics.ProcessThreadCollection.#ctor(System.Diagnostics.ProcessThread[])
  commentId: M:System.Diagnostics.ProcessThreadCollection.#ctor(System.Diagnostics.ProcessThread[])
  id: '#ctor(System.Diagnostics.ProcessThread[])'
  parent: System.Diagnostics.ProcessThreadCollection
  langs:
  - csharp
  - vb
  name: ProcessThreadCollection(ProcessThread[])
  fullName: System.Diagnostics.ProcessThreadCollection.ProcessThreadCollection(System.Diagnostics.ProcessThread[])
  type: Constructor
  source:
    remote:
      path: src/System.Diagnostics.Process/src/System/Diagnostics/ProcessThreadCollection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Diagnostics.Process/src/System/Diagnostics/ProcessThreadCollection.cs
    startLine: 26
  assemblies:
  - System.Diagnostics.Process
  namespace: System.Diagnostics
  syntax:
    content: public ProcessThreadCollection(ProcessThread[] processThreads)
    content.vb: Public Sub New(processThreads As ProcessThread())
    parameters:
    - id: processThreads
      type: System.Diagnostics.ProcessThread[]
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Diagnostics.ProcessThreadCollection.ProcessThreadCollection(System.Diagnostics.ProcessThread())
  name.vb: ProcessThreadCollection(ProcessThread())
- uid: System.Diagnostics.ProcessThreadCollection.Item(System.Int32)
  commentId: P:System.Diagnostics.ProcessThreadCollection.Item(System.Int32)
  id: Item(System.Int32)
  parent: System.Diagnostics.ProcessThreadCollection
  langs:
  - csharp
  - vb
  name: Item[Int32]
  fullName: System.Diagnostics.ProcessThreadCollection.Item[System.Int32]
  type: Property
  source:
    remote:
      path: src/System.Diagnostics.Process/src/System/Diagnostics/ProcessThreadCollection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: this[]
    path: src/System.Diagnostics.Process/src/System/Diagnostics/ProcessThreadCollection.cs
    startLine: 69
  assemblies:
  - System.Diagnostics.Process
  namespace: System.Diagnostics
  syntax:
    content: public ProcessThread this[int index] { get; }
    content.vb: Public ReadOnly Property Item(index As Integer) As ProcessThread
    parameters:
    - id: index
      type: System.Int32
    return:
      type: System.Diagnostics.ProcessThread
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: System.Diagnostics.ProcessThreadCollection.Item(System.Int32)
  name.vb: Item(Int32)
- uid: System.Diagnostics.ProcessThreadCollection.Add(System.Diagnostics.ProcessThread)
  commentId: M:System.Diagnostics.ProcessThreadCollection.Add(System.Diagnostics.ProcessThread)
  id: Add(System.Diagnostics.ProcessThread)
  parent: System.Diagnostics.ProcessThreadCollection
  langs:
  - csharp
  - vb
  name: Add(ProcessThread)
  fullName: System.Diagnostics.ProcessThreadCollection.Add(System.Diagnostics.ProcessThread)
  type: Method
  source:
    remote:
      path: src/System.Diagnostics.Process/src/System/Diagnostics/ProcessThreadCollection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Add
    path: src/System.Diagnostics.Process/src/System/Diagnostics/ProcessThreadCollection.cs
    startLine: 77
  assemblies:
  - System.Diagnostics.Process
  namespace: System.Diagnostics
  syntax:
    content: public int Add(ProcessThread thread)
    content.vb: Public Function Add(thread As ProcessThread) As Integer
    parameters:
    - id: thread
      type: System.Diagnostics.ProcessThread
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Diagnostics.ProcessThreadCollection.Contains(System.Diagnostics.ProcessThread)
  commentId: M:System.Diagnostics.ProcessThreadCollection.Contains(System.Diagnostics.ProcessThread)
  id: Contains(System.Diagnostics.ProcessThread)
  parent: System.Diagnostics.ProcessThreadCollection
  langs:
  - csharp
  - vb
  name: Contains(ProcessThread)
  fullName: System.Diagnostics.ProcessThreadCollection.Contains(System.Diagnostics.ProcessThread)
  type: Method
  source:
    remote:
      path: src/System.Diagnostics.Process/src/System/Diagnostics/ProcessThreadCollection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Contains
    path: src/System.Diagnostics.Process/src/System/Diagnostics/ProcessThreadCollection.cs
    startLine: 101
  assemblies:
  - System.Diagnostics.Process
  namespace: System.Diagnostics
  syntax:
    content: public bool Contains(ProcessThread thread)
    content.vb: Public Function Contains(thread As ProcessThread) As Boolean
    parameters:
    - id: thread
      type: System.Diagnostics.ProcessThread
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Diagnostics.ProcessThreadCollection.CopyTo(System.Diagnostics.ProcessThread[],System.Int32)
  commentId: M:System.Diagnostics.ProcessThreadCollection.CopyTo(System.Diagnostics.ProcessThread[],System.Int32)
  id: CopyTo(System.Diagnostics.ProcessThread[],System.Int32)
  parent: System.Diagnostics.ProcessThreadCollection
  langs:
  - csharp
  - vb
  name: CopyTo(ProcessThread[], Int32)
  fullName: System.Diagnostics.ProcessThreadCollection.CopyTo(System.Diagnostics.ProcessThread[], System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Diagnostics.Process/src/System/Diagnostics/ProcessThreadCollection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CopyTo
    path: src/System.Diagnostics.Process/src/System/Diagnostics/ProcessThreadCollection.cs
    startLine: 117
  assemblies:
  - System.Diagnostics.Process
  namespace: System.Diagnostics
  syntax:
    content: public void CopyTo(ProcessThread[] array, int index)
    content.vb: Public Sub CopyTo(array As ProcessThread(), index As Integer)
    parameters:
    - id: array
      type: System.Diagnostics.ProcessThread[]
    - id: index
      type: System.Int32
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Diagnostics.ProcessThreadCollection.CopyTo(System.Diagnostics.ProcessThread(), System.Int32)
  name.vb: CopyTo(ProcessThread(), Int32)
- uid: System.Diagnostics.ProcessThreadCollection.IndexOf(System.Diagnostics.ProcessThread)
  commentId: M:System.Diagnostics.ProcessThreadCollection.IndexOf(System.Diagnostics.ProcessThread)
  id: IndexOf(System.Diagnostics.ProcessThread)
  parent: System.Diagnostics.ProcessThreadCollection
  langs:
  - csharp
  - vb
  name: IndexOf(ProcessThread)
  fullName: System.Diagnostics.ProcessThreadCollection.IndexOf(System.Diagnostics.ProcessThread)
  type: Method
  source:
    remote:
      path: src/System.Diagnostics.Process/src/System/Diagnostics/ProcessThreadCollection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IndexOf
    path: src/System.Diagnostics.Process/src/System/Diagnostics/ProcessThreadCollection.cs
    startLine: 93
  assemblies:
  - System.Diagnostics.Process
  namespace: System.Diagnostics
  syntax:
    content: public int IndexOf(ProcessThread thread)
    content.vb: Public Function IndexOf(thread As ProcessThread) As Integer
    parameters:
    - id: thread
      type: System.Diagnostics.ProcessThread
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Diagnostics.ProcessThreadCollection.Insert(System.Int32,System.Diagnostics.ProcessThread)
  commentId: M:System.Diagnostics.ProcessThreadCollection.Insert(System.Int32,System.Diagnostics.ProcessThread)
  id: Insert(System.Int32,System.Diagnostics.ProcessThread)
  parent: System.Diagnostics.ProcessThreadCollection
  langs:
  - csharp
  - vb
  name: Insert(Int32, ProcessThread)
  fullName: System.Diagnostics.ProcessThreadCollection.Insert(System.Int32, System.Diagnostics.ProcessThread)
  type: Method
  source:
    remote:
      path: src/System.Diagnostics.Process/src/System/Diagnostics/ProcessThreadCollection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Insert
    path: src/System.Diagnostics.Process/src/System/Diagnostics/ProcessThreadCollection.cs
    startLine: 85
  assemblies:
  - System.Diagnostics.Process
  namespace: System.Diagnostics
  syntax:
    content: public void Insert(int index, ProcessThread thread)
    content.vb: Public Sub Insert(index As Integer, thread As ProcessThread)
    parameters:
    - id: index
      type: System.Int32
    - id: thread
      type: System.Diagnostics.ProcessThread
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Diagnostics.ProcessThreadCollection.Remove(System.Diagnostics.ProcessThread)
  commentId: M:System.Diagnostics.ProcessThreadCollection.Remove(System.Diagnostics.ProcessThread)
  id: Remove(System.Diagnostics.ProcessThread)
  parent: System.Diagnostics.ProcessThreadCollection
  langs:
  - csharp
  - vb
  name: Remove(ProcessThread)
  fullName: System.Diagnostics.ProcessThreadCollection.Remove(System.Diagnostics.ProcessThread)
  type: Method
  source:
    remote:
      path: src/System.Diagnostics.Process/src/System/Diagnostics/ProcessThreadCollection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Remove
    path: src/System.Diagnostics.Process/src/System/Diagnostics/ProcessThreadCollection.cs
    startLine: 109
  assemblies:
  - System.Diagnostics.Process
  namespace: System.Diagnostics
  syntax:
    content: public void Remove(ProcessThread thread)
    content.vb: Public Sub Remove(thread As ProcessThread)
    parameters:
    - id: thread
      type: System.Diagnostics.ProcessThread
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Diagnostics.ProcessThreadCollection.Count
  commentId: P:System.Diagnostics.ProcessThreadCollection.Count
  id: Count
  parent: System.Diagnostics.ProcessThreadCollection
  langs:
  - csharp
  - vb
  name: Count
  fullName: System.Diagnostics.ProcessThreadCollection.Count
  type: Property
  source:
    remote:
      path: src/System.Diagnostics.Process/src/System/Diagnostics/ProcessThreadCollection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Count
    path: src/System.Diagnostics.Process/src/System/Diagnostics/ProcessThreadCollection.cs
    startLine: 41
  assemblies:
  - System.Diagnostics.Process
  namespace: System.Diagnostics
  syntax:
    content: public virtual int Count { get; }
    content.vb: Public Overridable ReadOnly Property Count As Integer
    parameters: []
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Diagnostics.ProcessThreadCollection.GetEnumerator
  commentId: M:System.Diagnostics.ProcessThreadCollection.GetEnumerator
  id: GetEnumerator
  parent: System.Diagnostics.ProcessThreadCollection
  langs:
  - csharp
  - vb
  name: GetEnumerator()
  fullName: System.Diagnostics.ProcessThreadCollection.GetEnumerator()
  type: Method
  source:
    remote:
      path: src/System.Diagnostics.Process/src/System/Diagnostics/ProcessThreadCollection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetEnumerator
    path: src/System.Diagnostics.Process/src/System/Diagnostics/ProcessThreadCollection.cs
    startLine: 61
  assemblies:
  - System.Diagnostics.Process
  namespace: System.Diagnostics
  syntax:
    content: public virtual IEnumerator GetEnumerator()
    content.vb: Public Overridable Function GetEnumerator As IEnumerator
    return:
      type: IEnumerator
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: System.Diagnostics
  isExternal: false
  name: System.Diagnostics
  fullName: System.Diagnostics
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Diagnostics.ProcessThread[]
  isExternal: false
  name: ProcessThread[]
  fullName: System.Diagnostics.ProcessThread[]
  fullname.vb: System.Diagnostics.ProcessThread()
  name.vb: ProcessThread()
  spec.csharp:
  - uid: System.Diagnostics.ProcessThread
    name: ProcessThread
    fullName: System.Diagnostics.ProcessThread
  - name: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Diagnostics.ProcessThread
    name: ProcessThread
    fullName: System.Diagnostics.ProcessThread
  - name: ()
    fullName: ()
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  fullName: System.Int32
- uid: System.Diagnostics.ProcessThread
  parent: System.Diagnostics
  isExternal: false
  name: ProcessThread
  fullName: System.Diagnostics.ProcessThread
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  fullName: System.Boolean
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: false
  name: Collections.IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Collections
  isExternal: false
  name: System.Collections
  fullName: System.Collections
