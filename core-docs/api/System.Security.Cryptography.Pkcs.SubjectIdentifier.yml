items:
- uid: System.Security.Cryptography.Pkcs.SubjectIdentifier
  commentId: T:System.Security.Cryptography.Pkcs.SubjectIdentifier
  id: SubjectIdentifier
  parent: System.Security.Cryptography.Pkcs
  children:
  - System.Security.Cryptography.Pkcs.SubjectIdentifier.Type
  - System.Security.Cryptography.Pkcs.SubjectIdentifier.Value
  langs:
  - csharp
  - vb
  name: SubjectIdentifier
  fullName: System.Security.Cryptography.Pkcs.SubjectIdentifier
  type: Class
  source:
    remote:
      path: src/System.Security.Cryptography.Pkcs/ref/System.Security.Cryptography.Pkcs.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: SubjectIdentifier
    path: src/System.Security.Cryptography.Pkcs/ref/System.Security.Cryptography.Pkcs.cs
    startLine: 215
  assemblies:
  - System.Security.Cryptography.Pkcs
  namespace: System.Security.Cryptography.Pkcs
  summary: "\n<p>The <xref href=\"System.Security.Cryptography.Pkcs.SubjectIdentifier\" data-throw-if-not-resolved=\"false\"></xref> class defines the type of the identifier of a subject, such as a <xref href=\"System.Security.Cryptography.Pkcs.CmsSigner\" data-throw-if-not-resolved=\"false\"></xref> or a <xref href=\"System.Security.Cryptography.Pkcs.CmsRecipient\" data-throw-if-not-resolved=\"false\"></xref>.  The subject can be identified by the certificate issuer and serial number or the subject key.</p>\n"
  syntax:
    content: public sealed class SubjectIdentifier
    content.vb: Public NotInheritable Class SubjectIdentifier
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: System.Security.Cryptography.Pkcs.SubjectIdentifier.Type
  commentId: P:System.Security.Cryptography.Pkcs.SubjectIdentifier.Type
  id: Type
  parent: System.Security.Cryptography.Pkcs.SubjectIdentifier
  langs:
  - csharp
  - vb
  name: Type
  fullName: System.Security.Cryptography.Pkcs.SubjectIdentifier.Type
  type: Property
  source:
    remote:
      path: src/System.Security.Cryptography.Pkcs/ref/System.Security.Cryptography.Pkcs.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Type
    path: src/System.Security.Cryptography.Pkcs/ref/System.Security.Cryptography.Pkcs.cs
    startLine: 218
  assemblies:
  - System.Security.Cryptography.Pkcs
  namespace: System.Security.Cryptography.Pkcs
  summary: "\n<p>The <xref href=\"System.Security.Cryptography.Pkcs.SubjectIdentifier.Type\" data-throw-if-not-resolved=\"false\"></xref> property retrieves the type of subject identifier. The subject can be identified by the certificate issuer and serial number or the subject key.</p>\n"
  syntax:
    content: >-
      public SubjectIdentifierType Type

      {
          [CompilerGenerated]
          get;
      }
    content.vb: Public ReadOnly Property Type As SubjectIdentifierType
    parameters: []
    return:
      type: System.Security.Cryptography.Pkcs.SubjectIdentifierType
      description: "\n<p>A member of the <xref href=\"System.Security.Cryptography.Pkcs.SubjectIdentifierType\" data-throw-if-not-resolved=\"false\"></xref>  enumeration that identifies the type of subject.</p>\n"
  seealso:
  - type: System.Security.Cryptography.Pkcs.SubjectIdentifier.Value
    commentId: P:System.Security.Cryptography.Pkcs.SubjectIdentifier.Value
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Security.Cryptography.Pkcs.SubjectIdentifier.Value
  commentId: P:System.Security.Cryptography.Pkcs.SubjectIdentifier.Value
  id: Value
  parent: System.Security.Cryptography.Pkcs.SubjectIdentifier
  langs:
  - csharp
  - vb
  name: Value
  fullName: System.Security.Cryptography.Pkcs.SubjectIdentifier.Value
  type: Property
  source:
    remote:
      path: src/System.Security.Cryptography.Pkcs/ref/System.Security.Cryptography.Pkcs.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Value
    path: src/System.Security.Cryptography.Pkcs/ref/System.Security.Cryptography.Pkcs.cs
    startLine: 219
  assemblies:
  - System.Security.Cryptography.Pkcs
  namespace: System.Security.Cryptography.Pkcs
  summary: "\n<p>The <xref href=\"System.Security.Cryptography.Pkcs.SubjectIdentifier.Value\" data-throw-if-not-resolved=\"false\"></xref> property retrieves the value of the subject identifier. Use the <xref href=\"System.Security.Cryptography.Pkcs.SubjectIdentifier.Type\" data-throw-if-not-resolved=\"false\"></xref> property to determine the type of subject identifier, and use the <xref href=\"System.Security.Cryptography.Pkcs.SubjectIdentifier.Value\" data-throw-if-not-resolved=\"false\"></xref> property to retrieve the corresponding value.</p>\n"
  syntax:
    content: >-
      public object Value

      {
          [CompilerGenerated]
          get;
      }
    content.vb: Public ReadOnly Property Value As Object
    parameters: []
    return:
      type: System.Object
      description: "\n<p>An <xref href=\"System.Object\" data-throw-if-not-resolved=\"false\"></xref> object that represents the value of the subject identifier. This <xref href=\"System.Object\" data-throw-if-not-resolved=\"false\"></xref> can be one of the following objects as determined by the <xref href=\"System.Security.Cryptography.Pkcs.SubjectIdentifier.Type\" data-throw-if-not-resolved=\"false\"></xref> property.</p>\n<p>\n<xref href=\"System.Security.Cryptography.Pkcs.SubjectIdentifier.Type\" data-throw-if-not-resolved=\"false\"></xref> property</p>\n<p>Object</p>\n<table><tbody><tr><td>\n<p>IssuerAndSerialNumber</p>\n</td><td>\n<p>\n<xref href=\"System.Security.Cryptography.Xml.X509IssuerSerial\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td></tr><tr><td>\n<p>SubjectKeyIdentifier</p>\n</td><td>\n<p>\n<xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td></tr></tbody></table>\n"
  seealso:
  - type: System.Security.Cryptography.Pkcs.SubjectIdentifier.Type
    commentId: P:System.Security.Cryptography.Pkcs.SubjectIdentifier.Type
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: System.Security.Cryptography.Pkcs
  isExternal: false
  name: System.Security.Cryptography.Pkcs
  fullName: System.Security.Cryptography.Pkcs
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Security.Cryptography.Pkcs.SubjectIdentifierType
  parent: System.Security.Cryptography.Pkcs
  isExternal: false
  name: SubjectIdentifierType
  fullName: System.Security.Cryptography.Pkcs.SubjectIdentifierType
