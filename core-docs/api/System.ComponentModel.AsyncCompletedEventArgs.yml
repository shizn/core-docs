items:
- uid: System.ComponentModel.AsyncCompletedEventArgs
  commentId: T:System.ComponentModel.AsyncCompletedEventArgs
  id: AsyncCompletedEventArgs
  parent: System.ComponentModel
  children:
  - System.ComponentModel.AsyncCompletedEventArgs.#ctor(System.Exception,System.Boolean,System.Object)
  - System.ComponentModel.AsyncCompletedEventArgs.Cancelled
  - System.ComponentModel.AsyncCompletedEventArgs.Error
  - System.ComponentModel.AsyncCompletedEventArgs.RaiseExceptionIfNecessary
  - System.ComponentModel.AsyncCompletedEventArgs.UserState
  langs:
  - csharp
  - vb
  name: AsyncCompletedEventArgs
  fullName: System.ComponentModel.AsyncCompletedEventArgs
  type: Class
  source:
    remote:
      path: src/System.ComponentModel.EventBasedAsync/src/System/ComponentModel/AsyncCompletedEvent.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: AsyncCompletedEventArgs
    path: src/System.ComponentModel.EventBasedAsync/src/System/ComponentModel/AsyncCompletedEvent.cs
    startLine: 11
  assemblies:
  - System.ComponentModel.EventBasedAsync
  namespace: System.ComponentModel
  syntax:
    content: 'public class AsyncCompletedEventArgs : EventArgs'
    content.vb: >-
      Public Class AsyncCompletedEventArgs
          Inherits EventArgs
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: System.ComponentModel.AsyncCompletedEventArgs.#ctor(System.Exception,System.Boolean,System.Object)
  commentId: M:System.ComponentModel.AsyncCompletedEventArgs.#ctor(System.Exception,System.Boolean,System.Object)
  id: '#ctor(System.Exception,System.Boolean,System.Object)'
  parent: System.ComponentModel.AsyncCompletedEventArgs
  langs:
  - csharp
  - vb
  name: AsyncCompletedEventArgs(Exception, Boolean, Object)
  fullName: System.ComponentModel.AsyncCompletedEventArgs.AsyncCompletedEventArgs(System.Exception, System.Boolean, System.Object)
  type: Constructor
  source:
    remote:
      path: src/System.ComponentModel.EventBasedAsync/ref/System.ComponentModel.EventBasedAsync.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.ComponentModel.EventBasedAsync/ref/System.ComponentModel.EventBasedAsync.cs
    startLine: 12
  assemblies:
  - System.ComponentModel.EventBasedAsync
  namespace: System.ComponentModel
  syntax:
    content: public AsyncCompletedEventArgs(Exception error, bool cancelled, object userState)
    content.vb: Public Sub New(error As Exception, cancelled As Boolean, userState As Object)
    parameters:
    - id: error
      type: System.Exception
    - id: cancelled
      type: System.Boolean
    - id: userState
      type: System.Object
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.ComponentModel.AsyncCompletedEventArgs.Cancelled
  commentId: P:System.ComponentModel.AsyncCompletedEventArgs.Cancelled
  id: Cancelled
  parent: System.ComponentModel.AsyncCompletedEventArgs
  langs:
  - csharp
  - vb
  name: Cancelled
  fullName: System.ComponentModel.AsyncCompletedEventArgs.Cancelled
  type: Property
  source:
    remote:
      path: src/System.ComponentModel.EventBasedAsync/src/System/ComponentModel/AsyncCompletedEvent.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Cancelled
    path: src/System.ComponentModel.EventBasedAsync/src/System/ComponentModel/AsyncCompletedEvent.cs
    startLine: 38
  assemblies:
  - System.ComponentModel.EventBasedAsync
  namespace: System.ComponentModel
  syntax:
    content: public bool Cancelled { get; }
    content.vb: Public ReadOnly Property Cancelled As Boolean
    parameters: []
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.ComponentModel.AsyncCompletedEventArgs.Error
  commentId: P:System.ComponentModel.AsyncCompletedEventArgs.Error
  id: Error
  parent: System.ComponentModel.AsyncCompletedEventArgs
  langs:
  - csharp
  - vb
  name: Error
  fullName: System.ComponentModel.AsyncCompletedEventArgs.Error
  type: Property
  source:
    remote:
      path: src/System.ComponentModel.EventBasedAsync/src/System/ComponentModel/AsyncCompletedEvent.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Error
    path: src/System.ComponentModel.EventBasedAsync/src/System/ComponentModel/AsyncCompletedEvent.cs
    startLine: 39
  assemblies:
  - System.ComponentModel.EventBasedAsync
  namespace: System.ComponentModel
  syntax:
    content: public Exception Error { get; }
    content.vb: Public ReadOnly Property Error As Exception
    parameters: []
    return:
      type: Exception
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.ComponentModel.AsyncCompletedEventArgs.UserState
  commentId: P:System.ComponentModel.AsyncCompletedEventArgs.UserState
  id: UserState
  parent: System.ComponentModel.AsyncCompletedEventArgs
  langs:
  - csharp
  - vb
  name: UserState
  fullName: System.ComponentModel.AsyncCompletedEventArgs.UserState
  type: Property
  source:
    remote:
      path: src/System.ComponentModel.EventBasedAsync/src/System/ComponentModel/AsyncCompletedEvent.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: UserState
    path: src/System.ComponentModel.EventBasedAsync/src/System/ComponentModel/AsyncCompletedEvent.cs
    startLine: 40
  assemblies:
  - System.ComponentModel.EventBasedAsync
  namespace: System.ComponentModel
  syntax:
    content: public Object UserState { get; }
    content.vb: Public ReadOnly Property UserState As Object
    parameters: []
    return:
      type: Object
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.ComponentModel.AsyncCompletedEventArgs.RaiseExceptionIfNecessary
  commentId: M:System.ComponentModel.AsyncCompletedEventArgs.RaiseExceptionIfNecessary
  id: RaiseExceptionIfNecessary
  parent: System.ComponentModel.AsyncCompletedEventArgs
  langs:
  - csharp
  - vb
  name: RaiseExceptionIfNecessary()
  fullName: System.ComponentModel.AsyncCompletedEventArgs.RaiseExceptionIfNecessary()
  type: Method
  source:
    remote:
      path: src/System.ComponentModel.EventBasedAsync/src/System/ComponentModel/AsyncCompletedEvent.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: RaiseExceptionIfNecessary
    path: src/System.ComponentModel.EventBasedAsync/src/System/ComponentModel/AsyncCompletedEvent.cs
    startLine: 25
  assemblies:
  - System.ComponentModel.EventBasedAsync
  namespace: System.ComponentModel
  syntax:
    content: protected void RaiseExceptionIfNecessary()
    content.vb: Protected Sub RaiseExceptionIfNecessary
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
references:
- uid: System.ComponentModel
  isExternal: false
  name: System.ComponentModel
  fullName: System.ComponentModel
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Exception
  parent: System
  isExternal: false
  name: Exception
  fullName: System.Exception
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  fullName: System.Boolean
