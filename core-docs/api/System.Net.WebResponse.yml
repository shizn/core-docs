items:
- uid: System.Net.WebResponse
  commentId: T:System.Net.WebResponse
  id: WebResponse
  parent: System.Net
  children:
  - System.Net.WebResponse.#ctor
  - System.Net.WebResponse.ContentLength
  - System.Net.WebResponse.ContentType
  - System.Net.WebResponse.Dispose
  - System.Net.WebResponse.Dispose(System.Boolean)
  - System.Net.WebResponse.GetResponseStream
  - System.Net.WebResponse.Headers
  - System.Net.WebResponse.ResponseUri
  - System.Net.WebResponse.SupportsHeaders
  langs:
  - csharp
  - vb
  name: WebResponse
  fullName: System.Net.WebResponse
  type: Class
  source:
    remote:
      path: src/System.Net.Requests/ref/System.Net.Requests.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: WebResponse
    path: src/System.Net.Requests/ref/System.Net.Requests.cs
    startLine: 113
  assemblies:
  - System.Net.Requests
  namespace: System.Net
  summary: "\n<p>Provides a response from a Uniform Resource Identifier (URI). This is an <strong>abstract</strong> class.</p>\n"
  remarks: "\n<p>The <xref href=\"System.Net.WebResponse\" data-throw-if-not-resolved=\"false\"></xref> class is the <strong>abstract</strong> base class from which protocol-specific response classes are derived. Applications can participate in request and response transactions in a protocol-agnostic manner using instances of the <xref href=\"System.Net.WebResponse\" data-throw-if-not-resolved=\"false\"></xref> class while protocol-specific classes derived from <xref href=\"System.Net.WebResponse\" data-throw-if-not-resolved=\"false\"></xref> carry out the details of the request.</p>\n<p>Client applications do not create <xref href=\"System.Net.WebResponse\" data-throw-if-not-resolved=\"false\"></xref> objects directly; they are created by calling the <xref href=\"System.Net.WebRequest.GetResponse\" data-throw-if-not-resolved=\"false\"></xref> method on a <xref href=\"System.Net.WebRequest\" data-throw-if-not-resolved=\"false\"></xref> instance.</p>\n"
  example:
  - "\n<p>The following example creates a <xref href=\"System.Net.WebResponse\" data-throw-if-not-resolved=\"false\"></xref> instance from a <xref href=\"System.Net.WebRequest\" data-throw-if-not-resolved=\"false\"></xref>.</p>Classic WebRequest Example#1"
  syntax:
    content: 'public abstract class WebResponse : IDisposable'
    content.vb: >-
      Public MustInherit Class WebResponse
          Implements IDisposable
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: System.Net.WebResponse.#ctor
  commentId: M:System.Net.WebResponse.#ctor
  id: '#ctor'
  parent: System.Net.WebResponse
  langs:
  - csharp
  - vb
  name: WebResponse()
  fullName: System.Net.WebResponse.WebResponse()
  type: Constructor
  source:
    remote:
      path: src/System.Net.Requests/ref/System.Net.Requests.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Net.Requests/ref/System.Net.Requests.cs
    startLine: 115
  assemblies:
  - System.Net.Requests
  namespace: System.Net
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Net.WebResponse\" data-throw-if-not-resolved=\"false\"></xref> class.</p>\n"
  remarks: "\n<p>Applications do not call the <xref href=\"System.Net.WebResponse\" data-throw-if-not-resolved=\"false\"></xref> constructor directly; use the <xref href=\"System.Net.WebRequest.GetResponse\" data-throw-if-not-resolved=\"false\"></xref> method on a <xref href=\"System.Net.WebRequest\" data-throw-if-not-resolved=\"false\"></xref> instance.</p>\n"
  syntax:
    content: protected WebResponse()
    content.vb: Protected Sub New
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: System.Net.WebResponse.ContentLength
  commentId: P:System.Net.WebResponse.ContentLength
  id: ContentLength
  parent: System.Net.WebResponse
  langs:
  - csharp
  - vb
  name: ContentLength
  fullName: System.Net.WebResponse.ContentLength
  type: Property
  source:
    remote:
      path: src/System.Net.Requests/ref/System.Net.Requests.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ContentLength
    path: src/System.Net.Requests/ref/System.Net.Requests.cs
    startLine: 116
  assemblies:
  - System.Net.Requests
  namespace: System.Net
  summary: "\n<p>When overridden in a descendant class, gets or sets the content length of data being received.</p>\n"
  remarks: "\n<p>The <xref href=\"System.Net.WebResponse.ContentLength\" data-throw-if-not-resolved=\"false\"></xref> property contains the length, in bytes, of the response from the Internet resource. For request methods that contain header information, the <xref href=\"System.Net.WebResponse.ContentLength\" data-throw-if-not-resolved=\"false\"></xref> does not include the length of the header information.</p>\n<p>The <xref href=\"System.Net.WebResponse\" data-throw-if-not-resolved=\"false\"></xref> class is an <strong>abstract</strong> class. The actual behavior of <xref href=\"System.Net.WebResponse\" data-throw-if-not-resolved=\"false\"></xref> instances at run time is determined by the descendant class returned by <xref href=\"System.Net.WebRequest.GetResponse\" data-throw-if-not-resolved=\"false\"></xref>. For more information about default values and exceptions, please see the documentation for the descendant classes, such as <xref href=\"System.Net.HttpWebResponse\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"System.Net.FileWebResponse\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  example:
  - "\n<p>The following example uses the <xref href=\"System.Net.WebResponse.ContentLength\" data-throw-if-not-resolved=\"false\"></xref> property to obtain the Length of the resource returned.</p>WebResponse_ContentLength_Type#1"
  syntax:
    content: public abstract long ContentLength { get; }
    content.vb: Public MustOverride ReadOnly Property ContentLength As Long
    parameters: []
    return:
      type: System.Int64
      description: "\n<p>The number of bytes returned from the Internet resource.</p>\n"
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "\n<p>Any attempt is made to get or set the property, when the property is not overridden in a descendant class. </p>\n"
  seealso:
  - type: System.Net.HttpWebResponse.ContentLength
    commentId: P:System.Net.HttpWebResponse.ContentLength
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
- uid: System.Net.WebResponse.ContentType
  commentId: P:System.Net.WebResponse.ContentType
  id: ContentType
  parent: System.Net.WebResponse
  langs:
  - csharp
  - vb
  name: ContentType
  fullName: System.Net.WebResponse.ContentType
  type: Property
  source:
    remote:
      path: src/System.Net.Requests/ref/System.Net.Requests.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ContentType
    path: src/System.Net.Requests/ref/System.Net.Requests.cs
    startLine: 117
  assemblies:
  - System.Net.Requests
  namespace: System.Net
  summary: "\n<p>When overridden in a derived class, gets or sets the content type of the data being received.</p>\n"
  remarks: "\n<p>The <xref href=\"System.Net.WebResponse.ContentType\" data-throw-if-not-resolved=\"false\"></xref> property contains the MIME content type of the response from the Internet resource, if known.</p>\n<p>The <xref href=\"System.Net.WebResponse\" data-throw-if-not-resolved=\"false\"></xref> class is an <strong>abstract</strong> class. The actual behavior of <xref href=\"System.Net.WebResponse\" data-throw-if-not-resolved=\"false\"></xref> instances at run time is determined by the descendant class returned by <xref href=\"System.Net.WebRequest.GetResponse\" data-throw-if-not-resolved=\"false\"></xref>. For more information about default values and exceptions, please see the documentation for the descendant classes, such as <xref href=\"System.Net.HttpWebResponse\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"System.Net.FileWebResponse\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  example:
  - "\n<p>The following example uses the <xref href=\"System.Net.WebResponse.ContentType\" data-throw-if-not-resolved=\"false\"></xref> property to obtain the content type of the response.</p>WebResponse_ContentLength_Type#1"
  syntax:
    content: public abstract string ContentType { get; }
    content.vb: Public MustOverride ReadOnly Property ContentType As String
    parameters: []
    return:
      type: System.String
      description: "\n<p>A string that contains the content type of the response.</p>\n"
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "\n<p>Any attempt is made to get or set the property, when the property is not overridden in a descendant class. </p>\n"
  seealso:
  - type: System.Net.HttpWebResponse.ContentType
    commentId: P:System.Net.HttpWebResponse.ContentType
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
- uid: System.Net.WebResponse.Headers
  commentId: P:System.Net.WebResponse.Headers
  id: Headers
  parent: System.Net.WebResponse
  langs:
  - csharp
  - vb
  name: Headers
  fullName: System.Net.WebResponse.Headers
  type: Property
  source:
    remote:
      path: src/System.Net.Requests/ref/System.Net.Requests.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Headers
    path: src/System.Net.Requests/ref/System.Net.Requests.cs
    startLine: 118
  assemblies:
  - System.Net.Requests
  namespace: System.Net
  summary: "\n<p>When overridden in a derived class, gets a collection of header name-value pairs associated with this request.</p>\n"
  remarks: "\n<p>The <xref href=\"System.Net.WebResponse.Headers\" data-throw-if-not-resolved=\"false\"></xref> property contains the name-value header pairs returned in the response.</p>\n<p>The <xref href=\"System.Net.WebResponse\" data-throw-if-not-resolved=\"false\"></xref> class is an <strong>abstract</strong> class. The actual behavior of <xref href=\"System.Net.WebResponse\" data-throw-if-not-resolved=\"false\"></xref> instances at run time is determined by the descendant class returned by <xref href=\"System.Net.WebRequest.GetResponse\" data-throw-if-not-resolved=\"false\"></xref>. For more information about default values and exceptions, please see the documentation for the descendant classes, such as <xref href=\"System.Net.HttpWebResponse\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"System.Net.FileWebResponse\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  example:
  - "\n<p>The following example displays all of the header name-value pairs returned in the <xref href=\"System.Net.WebResponse\" data-throw-if-not-resolved=\"false\"></xref>.</p>WebResponse_Headers#1"
  syntax:
    content: public virtual WebHeaderCollection Headers { get; }
    content.vb: Public Overridable ReadOnly Property Headers As WebHeaderCollection
    parameters: []
    return:
      type: System.Net.WebHeaderCollection
      description: "\n<p>An instance of the <xref href=\"System.Net.WebHeaderCollection\" data-throw-if-not-resolved=\"false\"></xref> class that contains header values associated with this response.</p>\n"
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "\n<p>Any attempt is made to get or set the property, when the property is not overridden in a descendant class. </p>\n"
  seealso:
  - type: System.Net.WebHeaderCollection
    commentId: T:System.Net.WebHeaderCollection
  - type: System.Net.HttpWebResponse.Headers
    commentId: P:System.Net.HttpWebResponse.Headers
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: System.Net.WebResponse.ResponseUri
  commentId: P:System.Net.WebResponse.ResponseUri
  id: ResponseUri
  parent: System.Net.WebResponse
  langs:
  - csharp
  - vb
  name: ResponseUri
  fullName: System.Net.WebResponse.ResponseUri
  type: Property
  source:
    remote:
      path: src/System.Net.Requests/ref/System.Net.Requests.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ResponseUri
    path: src/System.Net.Requests/ref/System.Net.Requests.cs
    startLine: 119
  assemblies:
  - System.Net.Requests
  namespace: System.Net
  summary: "\n<p>When overridden in a derived class, gets the URI of the Internet resource that actually responded to the request.</p>\n"
  remarks: "\n<p>The <xref href=\"System.Net.WebResponse.ResponseUri\" data-throw-if-not-resolved=\"false\"></xref> property contains the URI of the Internet resource that actually provided the response data. This resource might not be the originally requested URI if the underlying protocol allows redirection of the request.</p>\n<p>The <xref href=\"System.Net.WebResponse\" data-throw-if-not-resolved=\"false\"></xref> class is an <strong>abstract</strong> class. The actual behavior of <xref href=\"System.Net.WebResponse\" data-throw-if-not-resolved=\"false\"></xref> instances at run time is determined by the descendant class returned by <xref href=\"System.Net.WebRequest.GetResponse\" data-throw-if-not-resolved=\"false\"></xref>. For more information about default values and exceptions, please see the documentation for the descendant classes, such as <xref href=\"System.Net.HttpWebResponse\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"System.Net.FileWebResponse\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  example:
  - "\n<p>The following example uses the <xref href=\"System.Net.WebResponse.ResponseUri\" data-throw-if-not-resolved=\"false\"></xref> property to determine the location from which the <xref href=\"System.Net.WebResponse\" data-throw-if-not-resolved=\"false\"></xref> originated.</p>WebResponse_ResponseUri#1"
  syntax:
    content: public abstract Uri ResponseUri { get; }
    content.vb: Public MustOverride ReadOnly Property ResponseUri As Uri
    parameters: []
    return:
      type: System.Uri
      description: "\n<p>An instance of the <xref href=\"System.Uri\" data-throw-if-not-resolved=\"false\"></xref> class that contains the URI of the Internet resource that actually responded to the request.</p>\n"
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "\n<p>Any attempt is made to get or set the property, when the property is not overridden in a descendant class. </p>\n"
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
- uid: System.Net.WebResponse.SupportsHeaders
  commentId: P:System.Net.WebResponse.SupportsHeaders
  id: SupportsHeaders
  parent: System.Net.WebResponse
  langs:
  - csharp
  - vb
  name: SupportsHeaders
  fullName: System.Net.WebResponse.SupportsHeaders
  type: Property
  source:
    remote:
      path: src/System.Net.Requests/ref/System.Net.Requests.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: SupportsHeaders
    path: src/System.Net.Requests/ref/System.Net.Requests.cs
    startLine: 120
  assemblies:
  - System.Net.Requests
  namespace: System.Net
  summary: "\n<p>Gets a value that indicates if headers are supported.</p>\n"
  remarks: "\n<p>This property is always true for .NET Framework 4.5.</p>\n"
  syntax:
    content: public virtual bool SupportsHeaders { get; }
    content.vb: Public Overridable ReadOnly Property SupportsHeaders As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: "\n<p>Returns <xref href=\"System.Boolean\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>\n<strong>true</strong> if headers are supported; otherwise, <strong>false</strong>.</p>\n"
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: System.Net.WebResponse.Dispose
  commentId: M:System.Net.WebResponse.Dispose
  id: Dispose
  parent: System.Net.WebResponse
  langs:
  - csharp
  - vb
  name: Dispose()
  fullName: System.Net.WebResponse.Dispose()
  type: Method
  source:
    remote:
      path: src/System.Net.Requests/ref/System.Net.Requests.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Dispose
    path: src/System.Net.Requests/ref/System.Net.Requests.cs
    startLine: 121
  assemblies:
  - System.Net.Requests
  namespace: System.Net
  summary: "\n<p>Releases the unmanaged resources used by the <xref href=\"System.Net.WebResponse\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  syntax:
    content: public void Dispose()
    content.vb: Public Sub Dispose
  implements:
  - System.IDisposable.Dispose
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Net.WebResponse.Dispose(System.Boolean)
  commentId: M:System.Net.WebResponse.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Net.WebResponse
  langs:
  - csharp
  - vb
  name: Dispose(Boolean)
  fullName: System.Net.WebResponse.Dispose(System.Boolean)
  type: Method
  source:
    remote:
      path: src/System.Net.Requests/ref/System.Net.Requests.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Dispose
    path: src/System.Net.Requests/ref/System.Net.Requests.cs
    startLine: 122
  assemblies:
  - System.Net.Requests
  namespace: System.Net
  summary: "\n<p>Releases the unmanaged resources used by the <xref href=\"System.Net.WebResponse\" data-throw-if-not-resolved=\"false\"></xref> object, and optionally disposes of the managed resources.</p>\n"
  remarks: "\n<p>This method is called by the public <strong>Dispose()</strong> method and the <xref href=\"System.Object.Finalize\" data-throw-if-not-resolved=\"false\"></xref> method. <strong>Dispose()</strong> invokes the protected <strong>Dispose(Boolean)</strong> method with the <em>disposing</em> parameter set to <strong>true</strong>. <xref href=\"System.Object.Finalize\" data-throw-if-not-resolved=\"false\"></xref> invokes <strong>Dispose</strong> with <em>disposing</em> set to <strong>false</strong>.</p>\n<p>When the <em>disposing</em> parameter is <strong>true</strong>, this method releases all resources held by any managed objects that this <xref href=\"System.Net.WebResponse\" data-throw-if-not-resolved=\"false\"></xref> references. This method invokes the <strong>Dispose()</strong> method of each referenced object.</p>\n<p>This member outputs trace information when you enable network tracing in your application. For more information, see Network Tracing in the .NET Framework.</p>\n"
  syntax:
    content: protected virtual void Dispose(bool disposing)
    content.vb: Protected Overridable Sub Dispose(disposing As Boolean)
    parameters:
    - id: disposing
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> to release both managed and unmanaged resources; <strong>false</strong> to releases only unmanaged resources. </p>\n"
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: System.Net.WebResponse.GetResponseStream
  commentId: M:System.Net.WebResponse.GetResponseStream
  id: GetResponseStream
  parent: System.Net.WebResponse
  langs:
  - csharp
  - vb
  name: GetResponseStream()
  fullName: System.Net.WebResponse.GetResponseStream()
  type: Method
  source:
    remote:
      path: src/System.Net.Requests/ref/System.Net.Requests.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetResponseStream
    path: src/System.Net.Requests/ref/System.Net.Requests.cs
    startLine: 123
  assemblies:
  - System.Net.Requests
  namespace: System.Net
  summary: "\n<p>When overridden in a descendant class, returns the data stream from the Internet resource.</p>\n"
  remarks: "\n<p>The <xref href=\"System.Net.WebResponse.GetResponseStream\" data-throw-if-not-resolved=\"false\"></xref> method returns the data stream from the Internet resource.</p>\n<p>The response stream must be closed to avoid running out of system resources. The response stream can be closed by calling <xref href=\"System.IO.Stream.Close\" data-throw-if-not-resolved=\"false\"></xref> or <xref href=\"System.Net.WebResponse.Close\" data-throw-if-not-resolved=\"false\"></xref></p>\n"
  example:
  - "\n<p>The following example uses <xref href=\"System.Net.WebResponse.GetResponseStream\" data-throw-if-not-resolved=\"false\"></xref> to return a <xref href=\"System.IO.StreamReader\" data-throw-if-not-resolved=\"false\"></xref> instance. A small local buffer is used to read data from the <xref href=\"System.IO.StreamReader\" data-throw-if-not-resolved=\"false\"></xref> and output it to the console.</p>WebResponse_GetResponseStream#1"
  syntax:
    content: public abstract Stream GetResponseStream()
    content.vb: Public MustOverride Function GetResponseStream As Stream
    return:
      type: System.IO.Stream
      description: "\n<p>An instance of the <xref href=\"System.IO.Stream\" data-throw-if-not-resolved=\"false\"></xref> class for reading data from the Internet resource.</p>\n"
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "\n<p>Any attempt is made to access the method, when the method is not overridden in a descendant class. </p>\n"
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
references:
- uid: System.Net
  isExternal: false
  name: System.Net
  fullName: System.Net
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System.IDisposable
  parent: System
  isExternal: false
  name: IDisposable
  fullName: System.IDisposable
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Int64
  parent: System
  isExternal: false
  name: Int64
  fullName: System.Int64
- uid: System.String
  parent: System
  isExternal: false
  name: String
  fullName: System.String
- uid: System.Net.WebHeaderCollection
  isExternal: false
  name: WebHeaderCollection
  fullName: System.Net.WebHeaderCollection
- uid: System.Uri
  parent: System
  isExternal: false
  name: Uri
  fullName: System.Uri
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  fullName: System.Boolean
- uid: System.IDisposable.Dispose
  parent: System.IDisposable
  isExternal: false
  name: Dispose()
  fullName: System.IDisposable.Dispose()
  spec.csharp:
  - uid: System.IDisposable.Dispose
    name: Dispose
    fullName: System.IDisposable.Dispose
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IDisposable.Dispose
    name: Dispose
    fullName: System.IDisposable.Dispose
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.IO.Stream
  parent: System.IO
  isExternal: false
  name: Stream
  fullName: System.IO.Stream
- uid: System.IO
  isExternal: false
  name: System.IO
  fullName: System.IO
- uid: System.NotSupportedException
  parent: System
  isExternal: false
  name: NotSupportedException
  fullName: System.NotSupportedException
