items:
- uid: System.Runtime.CompilerServices.DecimalConstantAttribute
  commentId: T:System.Runtime.CompilerServices.DecimalConstantAttribute
  id: DecimalConstantAttribute
  parent: System.Runtime.CompilerServices
  children:
  - System.Runtime.CompilerServices.DecimalConstantAttribute.#ctor(System.Byte,System.Byte,System.Int32,System.Int32,System.Int32)
  - System.Runtime.CompilerServices.DecimalConstantAttribute.#ctor(System.Byte,System.Byte,System.UInt32,System.UInt32,System.UInt32)
  - System.Runtime.CompilerServices.DecimalConstantAttribute.Value
  langs:
  - csharp
  - vb
  name: DecimalConstantAttribute
  fullName: System.Runtime.CompilerServices.DecimalConstantAttribute
  type: Class
  source:
    remote:
      path: src/mscorlib/src/System/Runtime/CompilerServices/DecimalConstantAttribute.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: DecimalConstantAttribute
    path: src/mscorlib/src/System/Runtime/CompilerServices/DecimalConstantAttribute.cs
    startLine: 13
  assemblies:
  - System.Runtime
  namespace: System.Runtime.CompilerServices
  summary: "\n<p>Stores the value of a <xref href=\"System.Decimal\" data-throw-if-not-resolved=\"false\"></xref> constant in metadata. This class cannot be inherited.</p>\n"
  remarks: "\n<p>Use this attribute to specify at compile time that a decimal value is a constant value. </p>\n<p>You can apply this attribute to fields or parameters.</p>\n<p>For more information about constant attributes, see the <xref href=\"System.Runtime.CompilerServices.CustomConstantAttribute\" data-throw-if-not-resolved=\"false\"></xref> class.</p>\n<p>The classes in <xref href=\"System.Runtime.CompilerServices\" data-throw-if-not-resolved=\"false\"></xref> are for compiler writers use only.</p>\n"
  syntax:
    content: >-
      [Serializable]

      [AttributeUsage(AttributeTargets.Field | AttributeTargets.Parameter, Inherited = false)]

      [ComVisible(true)]

      public sealed class DecimalConstantAttribute : Attribute, _Attribute
    content.vb: >-
      <Serializable>

      <AttributeUsage(AttributeTargets.Field Or AttributeTargets.Parameter, Inherited:=False)>

      <ComVisible(True)>

      Public NotInheritable Class DecimalConstantAttribute
          Inherits Attribute
          Implements _Attribute
  inheritance:
  - System.Object
  - System.Attribute
  inheritedMembers:
  - System.Attribute.Equals(System.Object)
  - System.Attribute.GetHashCode
  - System.Object.ToString
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  attributes:
  - type: System.AttributeUsageAttribute
    ctor: System.AttributeUsageAttribute.#ctor(System.AttributeTargets)
    arguments:
    - type: System.AttributeTargets
      value: 2304
    namedArguments:
    - name: Inherited
      type: System.Boolean
      value: false
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: System.Runtime.CompilerServices.DecimalConstantAttribute.#ctor(System.Byte,System.Byte,System.Int32,System.Int32,System.Int32)
  commentId: M:System.Runtime.CompilerServices.DecimalConstantAttribute.#ctor(System.Byte,System.Byte,System.Int32,System.Int32,System.Int32)
  id: '#ctor(System.Byte,System.Byte,System.Int32,System.Int32,System.Int32)'
  parent: System.Runtime.CompilerServices.DecimalConstantAttribute
  langs:
  - csharp
  - vb
  name: DecimalConstantAttribute(Byte, Byte, Int32, Int32, Int32)
  fullName: System.Runtime.CompilerServices.DecimalConstantAttribute.DecimalConstantAttribute(System.Byte, System.Byte, System.Int32, System.Int32, System.Int32)
  type: Constructor
  source:
    remote:
      path: src/mscorlib/src/System/Runtime/CompilerServices/DecimalConstantAttribute.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: .ctor
    path: src/mscorlib/src/System/Runtime/CompilerServices/DecimalConstantAttribute.cs
    startLine: 30
  assemblies:
  - System.Runtime
  namespace: System.Runtime.CompilerServices
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Runtime.CompilerServices.DecimalConstantAttribute\" data-throw-if-not-resolved=\"false\"></xref> class with the specified signed integer values. </p>\n"
  syntax:
    content: public DecimalConstantAttribute(byte scale, byte sign, int hi, int mid, int low)
    content.vb: Public Sub New(scale As Byte, sign As Byte, hi As Integer, mid As Integer, low As Integer)
    parameters:
    - id: scale
      type: System.Byte
    - id: sign
      type: System.Byte
    - id: hi
      type: System.Int32
    - id: mid
      type: System.Int32
    - id: low
      type: System.Int32
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Runtime.CompilerServices.DecimalConstantAttribute.#ctor(System.Byte,System.Byte,System.UInt32,System.UInt32,System.UInt32)
  commentId: M:System.Runtime.CompilerServices.DecimalConstantAttribute.#ctor(System.Byte,System.Byte,System.UInt32,System.UInt32,System.UInt32)
  id: '#ctor(System.Byte,System.Byte,System.UInt32,System.UInt32,System.UInt32)'
  parent: System.Runtime.CompilerServices.DecimalConstantAttribute
  langs:
  - csharp
  - vb
  name: DecimalConstantAttribute(Byte, Byte, UInt32, UInt32, UInt32)
  fullName: System.Runtime.CompilerServices.DecimalConstantAttribute.DecimalConstantAttribute(System.Byte, System.Byte, System.UInt32, System.UInt32, System.UInt32)
  type: Constructor
  source:
    remote:
      path: src/mscorlib/src/System/Runtime/CompilerServices/DecimalConstantAttribute.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: .ctor
    path: src/mscorlib/src/System/Runtime/CompilerServices/DecimalConstantAttribute.cs
    startLine: 18
  assemblies:
  - System.Runtime
  namespace: System.Runtime.CompilerServices
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Runtime.CompilerServices.DecimalConstantAttribute\" data-throw-if-not-resolved=\"false\"></xref> class with the specified unsigned integer values.</p>\n"
  syntax:
    content: >-
      [CLSCompliant(false)]

      public DecimalConstantAttribute(byte scale, byte sign, uint hi, uint mid, uint low)
    content.vb: >-
      <CLSCompliant(False)>

      Public Sub New(scale As Byte, sign As Byte, hi As UInteger, mid As UInteger, low As UInteger)
    parameters:
    - id: scale
      type: System.Byte
    - id: sign
      type: System.Byte
    - id: hi
      type: System.UInt32
    - id: mid
      type: System.UInt32
    - id: low
      type: System.UInt32
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>\n<em>scale</em> > 28. </p>\n"
  attributes:
  - type: System.CLSCompliantAttribute
    ctor: System.CLSCompliantAttribute.#ctor(System.Boolean)
    arguments:
    - type: System.Boolean
      value: false
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Runtime.CompilerServices.DecimalConstantAttribute.Value
  commentId: P:System.Runtime.CompilerServices.DecimalConstantAttribute.Value
  id: Value
  parent: System.Runtime.CompilerServices.DecimalConstantAttribute
  langs:
  - csharp
  - vb
  name: Value
  fullName: System.Runtime.CompilerServices.DecimalConstantAttribute.Value
  type: Property
  source:
    remote:
      path: src/mscorlib/src/System/Runtime/CompilerServices/DecimalConstantAttribute.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Value
    path: src/mscorlib/src/System/Runtime/CompilerServices/DecimalConstantAttribute.cs
    startLine: 42
  assemblies:
  - System.Runtime
  namespace: System.Runtime.CompilerServices
  summary: "\n<p>Gets the decimal constant stored in this attribute.</p>\n"
  syntax:
    content: public decimal Value { get; }
    content.vb: Public ReadOnly Property Value As Decimal
    parameters: []
    return:
      type: System.Decimal
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: System.Runtime.CompilerServices
  isExternal: false
  name: System.Runtime.CompilerServices
  fullName: System.Runtime.CompilerServices
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System.Attribute
  parent: System
  isExternal: false
  name: Attribute
  fullName: System.Attribute
- uid: System.Attribute.Equals(System.Object)
  parent: System.Attribute
  isExternal: true
  name: Equals(Object)
  fullName: System.Attribute.Equals(System.Object)
  spec.csharp:
  - uid: System.Attribute.Equals(System.Object)
    name: Equals
    fullName: System.Attribute.Equals
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Attribute.Equals(System.Object)
    name: Equals
    fullName: System.Attribute.Equals
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Attribute.GetHashCode
  parent: System.Attribute
  isExternal: false
  name: GetHashCode()
  fullName: System.Attribute.GetHashCode()
  spec.csharp:
  - uid: System.Attribute.GetHashCode
    name: GetHashCode
    fullName: System.Attribute.GetHashCode
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Attribute.GetHashCode
    name: GetHashCode
    fullName: System.Attribute.GetHashCode
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Byte
  parent: System
  isExternal: false
  name: Byte
  fullName: System.Byte
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  fullName: System.Int32
- uid: System.UInt32
  parent: System
  isExternal: false
  name: UInt32
  fullName: System.UInt32
- uid: System.Decimal
  parent: System
  isExternal: false
  name: Decimal
  fullName: System.Decimal
- uid: System.ArgumentOutOfRangeException
  isExternal: false
  name: ArgumentOutOfRangeException
  fullName: System.ArgumentOutOfRangeException
