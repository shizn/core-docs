items:
- uid: System.IO.Packaging.Package
  commentId: T:System.IO.Packaging.Package
  id: Package
  parent: System.IO.Packaging
  children:
  - System.IO.Packaging.Package.#ctor(System.IO.FileAccess)
  - System.IO.Packaging.Package.Close
  - System.IO.Packaging.Package.CreatePart(System.Uri,System.String)
  - System.IO.Packaging.Package.CreatePart(System.Uri,System.String,System.IO.Packaging.CompressionOption)
  - System.IO.Packaging.Package.CreatePartCore(System.Uri,System.String,System.IO.Packaging.CompressionOption)
  - System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String)
  - System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String,System.String)
  - System.IO.Packaging.Package.DeletePart(System.Uri)
  - System.IO.Packaging.Package.DeletePartCore(System.Uri)
  - System.IO.Packaging.Package.DeleteRelationship(System.String)
  - System.IO.Packaging.Package.Dispose(System.Boolean)
  - System.IO.Packaging.Package.FileOpenAccess
  - System.IO.Packaging.Package.Flush
  - System.IO.Packaging.Package.FlushCore
  - System.IO.Packaging.Package.GetPart(System.Uri)
  - System.IO.Packaging.Package.GetPartCore(System.Uri)
  - System.IO.Packaging.Package.GetParts
  - System.IO.Packaging.Package.GetPartsCore
  - System.IO.Packaging.Package.GetRelationship(System.String)
  - System.IO.Packaging.Package.GetRelationships
  - System.IO.Packaging.Package.GetRelationshipsByType(System.String)
  - System.IO.Packaging.Package.Open(System.IO.Stream)
  - System.IO.Packaging.Package.Open(System.IO.Stream,System.IO.FileMode)
  - System.IO.Packaging.Package.Open(System.IO.Stream,System.IO.FileMode,System.IO.FileAccess)
  - System.IO.Packaging.Package.Open(System.String)
  - System.IO.Packaging.Package.Open(System.String,System.IO.FileMode)
  - System.IO.Packaging.Package.Open(System.String,System.IO.FileMode,System.IO.FileAccess)
  - System.IO.Packaging.Package.Open(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)
  - System.IO.Packaging.Package.PackageProperties
  - System.IO.Packaging.Package.PartExists(System.Uri)
  - System.IO.Packaging.Package.RelationshipExists(System.String)
  langs:
  - csharp
  - vb
  name: Package
  fullName: System.IO.Packaging.Package
  type: Class
  source:
    remote:
      path: src/System.IO.Packaging/src/System/IO/Packaging/Package.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Package
    path: src/System.IO.Packaging/src/System/IO/Packaging/Package.cs
    startLine: 17
  assemblies:
  - System.IO.Packaging
  namespace: System.IO.Packaging
  syntax:
    content: 'public abstract class Package : IDisposable'
    content.vb: >-
      Public MustInherit Class Package
          Inherits IDisposable
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: System.IO.Packaging.Package.#ctor(System.IO.FileAccess)
  commentId: M:System.IO.Packaging.Package.#ctor(System.IO.FileAccess)
  id: '#ctor(System.IO.FileAccess)'
  parent: System.IO.Packaging.Package
  langs:
  - csharp
  - vb
  name: Package(FileAccess)
  fullName: System.IO.Packaging.Package.Package(System.IO.FileAccess)
  type: Constructor
  source:
    remote:
      path: src/System.IO.Packaging/ref/System.IO.Packaging.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.IO.Packaging/ref/System.IO.Packaging.cs
    startLine: 39
  assemblies:
  - System.IO.Packaging
  namespace: System.IO.Packaging
  syntax:
    content: protected Package(FileAccess openFileAccess)
    content.vb: Protected Sub New(openFileAccess As FileAccess)
    parameters:
    - id: openFileAccess
      type: System.IO.FileAccess
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: System.IO.Packaging.Package.FileOpenAccess
  commentId: P:System.IO.Packaging.Package.FileOpenAccess
  id: FileOpenAccess
  parent: System.IO.Packaging.Package
  langs:
  - csharp
  - vb
  name: FileOpenAccess
  fullName: System.IO.Packaging.Package.FileOpenAccess
  type: Property
  source:
    remote:
      path: src/System.IO.Packaging/src/System/IO/Packaging/Package.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: FileOpenAccess
    path: src/System.IO.Packaging/src/System/IO/Packaging/Package.cs
    startLine: 50
  assemblies:
  - System.IO.Packaging
  namespace: System.IO.Packaging
  syntax:
    content: public FileAccess FileOpenAccess { get; }
    content.vb: Public ReadOnly Property FileOpenAccess As FileAccess
    parameters: []
    return:
      type: FileAccess
      description: FileAccess
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.IO.Packaging.Package.PackageProperties
  commentId: P:System.IO.Packaging.Package.PackageProperties
  id: PackageProperties
  parent: System.IO.Packaging.Package
  langs:
  - csharp
  - vb
  name: PackageProperties
  fullName: System.IO.Packaging.Package.PackageProperties
  type: Property
  source:
    remote:
      path: src/System.IO.Packaging/src/System/IO/Packaging/Package.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: PackageProperties
    path: src/System.IO.Packaging/src/System/IO/Packaging/Package.cs
    startLine: 65
  assemblies:
  - System.IO.Packaging
  namespace: System.IO.Packaging
  syntax:
    content: public PackageProperties PackageProperties { get; }
    content.vb: Public ReadOnly Property PackageProperties As PackageProperties
    parameters: []
    return:
      type: System.IO.Packaging.PackageProperties
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.IO.Packaging.Package.Close
  commentId: M:System.IO.Packaging.Package.Close
  id: Close
  parent: System.IO.Packaging.Package
  langs:
  - csharp
  - vb
  name: Close()
  fullName: System.IO.Packaging.Package.Close()
  type: Method
  source:
    remote:
      path: src/System.IO.Packaging/src/System/IO/Packaging/Package.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Close
    path: src/System.IO.Packaging/src/System/IO/Packaging/Package.cs
    startLine: 484
  assemblies:
  - System.IO.Packaging
  namespace: System.IO.Packaging
  syntax:
    content: public void Close()
    content.vb: Public Sub Close
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.IO.Packaging.Package.CreatePart(System.Uri,System.String)
  commentId: M:System.IO.Packaging.Package.CreatePart(System.Uri,System.String)
  id: CreatePart(System.Uri,System.String)
  parent: System.IO.Packaging.Package
  langs:
  - csharp
  - vb
  name: CreatePart(Uri, String)
  fullName: System.IO.Packaging.Package.CreatePart(System.Uri, System.String)
  type: Method
  source:
    remote:
      path: src/System.IO.Packaging/ref/System.IO.Packaging.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CreatePart
    path: src/System.IO.Packaging/ref/System.IO.Packaging.cs
    startLine: 43
  assemblies:
  - System.IO.Packaging
  namespace: System.IO.Packaging
  syntax:
    content: public PackagePart CreatePart(Uri partUri, string contentType)
    content.vb: Public Function CreatePart(partUri As Uri, contentType As String) As PackagePart
    parameters:
    - id: partUri
      type: System.Uri
    - id: contentType
      type: System.String
    return:
      type: System.IO.Packaging.PackagePart
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.IO.Packaging.Package.CreatePart(System.Uri,System.String,System.IO.Packaging.CompressionOption)
  commentId: M:System.IO.Packaging.Package.CreatePart(System.Uri,System.String,System.IO.Packaging.CompressionOption)
  id: CreatePart(System.Uri,System.String,System.IO.Packaging.CompressionOption)
  parent: System.IO.Packaging.Package
  langs:
  - csharp
  - vb
  name: CreatePart(Uri, String, CompressionOption)
  fullName: System.IO.Packaging.Package.CreatePart(System.Uri, System.String, System.IO.Packaging.CompressionOption)
  type: Method
  source:
    remote:
      path: src/System.IO.Packaging/ref/System.IO.Packaging.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CreatePart
    path: src/System.IO.Packaging/ref/System.IO.Packaging.cs
    startLine: 44
  assemblies:
  - System.IO.Packaging
  namespace: System.IO.Packaging
  syntax:
    content: public PackagePart CreatePart(Uri partUri, string contentType, CompressionOption compressionOption)
    content.vb: Public Function CreatePart(partUri As Uri, contentType As String, compressionOption As CompressionOption) As PackagePart
    parameters:
    - id: partUri
      type: System.Uri
    - id: contentType
      type: System.String
    - id: compressionOption
      type: System.IO.Packaging.CompressionOption
    return:
      type: System.IO.Packaging.PackagePart
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.IO.Packaging.Package.CreatePartCore(System.Uri,System.String,System.IO.Packaging.CompressionOption)
  commentId: M:System.IO.Packaging.Package.CreatePartCore(System.Uri,System.String,System.IO.Packaging.CompressionOption)
  id: CreatePartCore(System.Uri,System.String,System.IO.Packaging.CompressionOption)
  parent: System.IO.Packaging.Package
  langs:
  - csharp
  - vb
  name: CreatePartCore(Uri, String, CompressionOption)
  fullName: System.IO.Packaging.Package.CreatePartCore(System.Uri, System.String, System.IO.Packaging.CompressionOption)
  type: Method
  source:
    remote:
      path: src/System.IO.Packaging/ref/System.IO.Packaging.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CreatePartCore
    path: src/System.IO.Packaging/ref/System.IO.Packaging.cs
    startLine: 45
  assemblies:
  - System.IO.Packaging
  namespace: System.IO.Packaging
  syntax:
    content: protected abstract PackagePart CreatePartCore(Uri partUri, string contentType, CompressionOption compressionOption)
    content.vb: Protected MustOverride Function CreatePartCore(partUri As Uri, contentType As String, compressionOption As CompressionOption) As PackagePart
    parameters:
    - id: partUri
      type: System.Uri
    - id: contentType
      type: System.String
    - id: compressionOption
      type: System.IO.Packaging.CompressionOption
    return:
      type: System.IO.Packaging.PackagePart
  modifiers.csharp:
  - protected
  - abstract
  modifiers.vb:
  - Protected
  - MustOverride
- uid: System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String)
  commentId: M:System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String)
  id: CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String)
  parent: System.IO.Packaging.Package
  langs:
  - csharp
  - vb
  name: CreateRelationship(Uri, TargetMode, String)
  fullName: System.IO.Packaging.Package.CreateRelationship(System.Uri, System.IO.Packaging.TargetMode, System.String)
  type: Method
  source:
    remote:
      path: src/System.IO.Packaging/ref/System.IO.Packaging.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CreateRelationship
    path: src/System.IO.Packaging/ref/System.IO.Packaging.cs
    startLine: 46
  assemblies:
  - System.IO.Packaging
  namespace: System.IO.Packaging
  syntax:
    content: public PackageRelationship CreateRelationship(Uri targetUri, TargetMode targetMode, string relationshipType)
    content.vb: Public Function CreateRelationship(targetUri As Uri, targetMode As TargetMode, relationshipType As String) As PackageRelationship
    parameters:
    - id: targetUri
      type: System.Uri
    - id: targetMode
      type: System.IO.Packaging.TargetMode
    - id: relationshipType
      type: System.String
    return:
      type: System.IO.Packaging.PackageRelationship
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String,System.String)
  commentId: M:System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String,System.String)
  id: CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String,System.String)
  parent: System.IO.Packaging.Package
  langs:
  - csharp
  - vb
  name: CreateRelationship(Uri, TargetMode, String, String)
  fullName: System.IO.Packaging.Package.CreateRelationship(System.Uri, System.IO.Packaging.TargetMode, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/System.IO.Packaging/ref/System.IO.Packaging.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CreateRelationship
    path: src/System.IO.Packaging/ref/System.IO.Packaging.cs
    startLine: 47
  assemblies:
  - System.IO.Packaging
  namespace: System.IO.Packaging
  syntax:
    content: public PackageRelationship CreateRelationship(Uri targetUri, TargetMode targetMode, string relationshipType, string id)
    content.vb: Public Function CreateRelationship(targetUri As Uri, targetMode As TargetMode, relationshipType As String, id As String) As PackageRelationship
    parameters:
    - id: targetUri
      type: System.Uri
    - id: targetMode
      type: System.IO.Packaging.TargetMode
    - id: relationshipType
      type: System.String
    - id: id
      type: System.String
    return:
      type: System.IO.Packaging.PackageRelationship
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.IO.Packaging.Package.DeletePart(System.Uri)
  commentId: M:System.IO.Packaging.Package.DeletePart(System.Uri)
  id: DeletePart(System.Uri)
  parent: System.IO.Packaging.Package
  langs:
  - csharp
  - vb
  name: DeletePart(Uri)
  fullName: System.IO.Packaging.Package.DeletePart(System.Uri)
  type: Method
  source:
    remote:
      path: src/System.IO.Packaging/ref/System.IO.Packaging.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: DeletePart
    path: src/System.IO.Packaging/ref/System.IO.Packaging.cs
    startLine: 48
  assemblies:
  - System.IO.Packaging
  namespace: System.IO.Packaging
  syntax:
    content: public void DeletePart(Uri partUri)
    content.vb: Public Sub DeletePart(partUri As Uri)
    parameters:
    - id: partUri
      type: System.Uri
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.IO.Packaging.Package.DeletePartCore(System.Uri)
  commentId: M:System.IO.Packaging.Package.DeletePartCore(System.Uri)
  id: DeletePartCore(System.Uri)
  parent: System.IO.Packaging.Package
  langs:
  - csharp
  - vb
  name: DeletePartCore(Uri)
  fullName: System.IO.Packaging.Package.DeletePartCore(System.Uri)
  type: Method
  source:
    remote:
      path: src/System.IO.Packaging/ref/System.IO.Packaging.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: DeletePartCore
    path: src/System.IO.Packaging/ref/System.IO.Packaging.cs
    startLine: 49
  assemblies:
  - System.IO.Packaging
  namespace: System.IO.Packaging
  syntax:
    content: protected abstract void DeletePartCore(Uri partUri)
    content.vb: Protected MustOverride Sub DeletePartCore(partUri As Uri)
    parameters:
    - id: partUri
      type: System.Uri
  modifiers.csharp:
  - protected
  - abstract
  modifiers.vb:
  - Protected
  - MustOverride
- uid: System.IO.Packaging.Package.DeleteRelationship(System.String)
  commentId: M:System.IO.Packaging.Package.DeleteRelationship(System.String)
  id: DeleteRelationship(System.String)
  parent: System.IO.Packaging.Package
  langs:
  - csharp
  - vb
  name: DeleteRelationship(String)
  fullName: System.IO.Packaging.Package.DeleteRelationship(System.String)
  type: Method
  source:
    remote:
      path: src/System.IO.Packaging/ref/System.IO.Packaging.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: DeleteRelationship
    path: src/System.IO.Packaging/ref/System.IO.Packaging.cs
    startLine: 50
  assemblies:
  - System.IO.Packaging
  namespace: System.IO.Packaging
  syntax:
    content: public void DeleteRelationship(string id)
    content.vb: Public Sub DeleteRelationship(id As String)
    parameters:
    - id: id
      type: System.String
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.IO.Packaging.Package.Dispose(System.Boolean)
  commentId: M:System.IO.Packaging.Package.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.IO.Packaging.Package
  langs:
  - csharp
  - vb
  name: Dispose(Boolean)
  fullName: System.IO.Packaging.Package.Dispose(System.Boolean)
  type: Method
  source:
    remote:
      path: src/System.IO.Packaging/src/System/IO/Packaging/Package.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Dispose
    path: src/System.IO.Packaging/src/System/IO/Packaging/Package.cs
    startLine: 730
  assemblies:
  - System.IO.Packaging
  namespace: System.IO.Packaging
  syntax:
    content: protected virtual void Dispose(bool disposing)
    content.vb: Protected Overridable Sub Dispose(disposing As Boolean)
    parameters:
    - id: disposing
      type: System.Boolean
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: System.IO.Packaging.Package.Flush
  commentId: M:System.IO.Packaging.Package.Flush
  id: Flush
  parent: System.IO.Packaging.Package
  langs:
  - csharp
  - vb
  name: Flush()
  fullName: System.IO.Packaging.Package.Flush()
  type: Method
  source:
    remote:
      path: src/System.IO.Packaging/src/System/IO/Packaging/Package.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Flush
    path: src/System.IO.Packaging/src/System/IO/Packaging/Package.cs
    startLine: 495
  assemblies:
  - System.IO.Packaging
  namespace: System.IO.Packaging
  syntax:
    content: public void Flush()
    content.vb: Public Sub Flush
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.IO.Packaging.Package.FlushCore
  commentId: M:System.IO.Packaging.Package.FlushCore
  id: FlushCore
  parent: System.IO.Packaging.Package
  langs:
  - csharp
  - vb
  name: FlushCore()
  fullName: System.IO.Packaging.Package.FlushCore()
  type: Method
  source:
    remote:
      path: src/System.IO.Packaging/src/System/IO/Packaging/Package.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: FlushCore
    path: src/System.IO.Packaging/src/System/IO/Packaging/Package.cs
    startLine: 758
  assemblies:
  - System.IO.Packaging
  namespace: System.IO.Packaging
  syntax:
    content: protected abstract void FlushCore()
    content.vb: Protected MustOverride Sub FlushCore
  modifiers.csharp:
  - protected
  - abstract
  modifiers.vb:
  - Protected
  - MustOverride
- uid: System.IO.Packaging.Package.GetPart(System.Uri)
  commentId: M:System.IO.Packaging.Package.GetPart(System.Uri)
  id: GetPart(System.Uri)
  parent: System.IO.Packaging.Package
  langs:
  - csharp
  - vb
  name: GetPart(Uri)
  fullName: System.IO.Packaging.Package.GetPart(System.Uri)
  type: Method
  source:
    remote:
      path: src/System.IO.Packaging/ref/System.IO.Packaging.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetPart
    path: src/System.IO.Packaging/ref/System.IO.Packaging.cs
    startLine: 54
  assemblies:
  - System.IO.Packaging
  namespace: System.IO.Packaging
  syntax:
    content: public PackagePart GetPart(Uri partUri)
    content.vb: Public Function GetPart(partUri As Uri) As PackagePart
    parameters:
    - id: partUri
      type: System.Uri
    return:
      type: System.IO.Packaging.PackagePart
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.IO.Packaging.Package.GetPartCore(System.Uri)
  commentId: M:System.IO.Packaging.Package.GetPartCore(System.Uri)
  id: GetPartCore(System.Uri)
  parent: System.IO.Packaging.Package
  langs:
  - csharp
  - vb
  name: GetPartCore(Uri)
  fullName: System.IO.Packaging.Package.GetPartCore(System.Uri)
  type: Method
  source:
    remote:
      path: src/System.IO.Packaging/ref/System.IO.Packaging.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetPartCore
    path: src/System.IO.Packaging/ref/System.IO.Packaging.cs
    startLine: 55
  assemblies:
  - System.IO.Packaging
  namespace: System.IO.Packaging
  syntax:
    content: protected abstract PackagePart GetPartCore(Uri partUri)
    content.vb: Protected MustOverride Function GetPartCore(partUri As Uri) As PackagePart
    parameters:
    - id: partUri
      type: System.Uri
    return:
      type: System.IO.Packaging.PackagePart
  modifiers.csharp:
  - protected
  - abstract
  modifiers.vb:
  - Protected
  - MustOverride
- uid: System.IO.Packaging.Package.GetParts
  commentId: M:System.IO.Packaging.Package.GetParts
  id: GetParts
  parent: System.IO.Packaging.Package
  langs:
  - csharp
  - vb
  name: GetParts()
  fullName: System.IO.Packaging.Package.GetParts()
  type: Method
  source:
    remote:
      path: src/System.IO.Packaging/src/System/IO/Packaging/Package.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetParts
    path: src/System.IO.Packaging/src/System/IO/Packaging/Package.cs
    startLine: 377
  assemblies:
  - System.IO.Packaging
  namespace: System.IO.Packaging
  syntax:
    content: public PackagePartCollection GetParts()
    content.vb: Public Function GetParts As PackagePartCollection
    return:
      type: System.IO.Packaging.PackagePartCollection
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.IO.Packaging.Package.GetPartsCore
  commentId: M:System.IO.Packaging.Package.GetPartsCore
  id: GetPartsCore
  parent: System.IO.Packaging.Package
  langs:
  - csharp
  - vb
  name: GetPartsCore()
  fullName: System.IO.Packaging.Package.GetPartsCore()
  type: Method
  source:
    remote:
      path: src/System.IO.Packaging/src/System/IO/Packaging/Package.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetPartsCore
    path: src/System.IO.Packaging/src/System/IO/Packaging/Package.cs
    startLine: 721
  assemblies:
  - System.IO.Packaging
  namespace: System.IO.Packaging
  syntax:
    content: protected abstract PackagePart[] GetPartsCore()
    content.vb: Protected MustOverride Function GetPartsCore As PackagePart()
    return:
      type: System.IO.Packaging.PackagePart[]
  modifiers.csharp:
  - protected
  - abstract
  modifiers.vb:
  - Protected
  - MustOverride
- uid: System.IO.Packaging.Package.GetRelationship(System.String)
  commentId: M:System.IO.Packaging.Package.GetRelationship(System.String)
  id: GetRelationship(System.String)
  parent: System.IO.Packaging.Package
  langs:
  - csharp
  - vb
  name: GetRelationship(String)
  fullName: System.IO.Packaging.Package.GetRelationship(System.String)
  type: Method
  source:
    remote:
      path: src/System.IO.Packaging/src/System/IO/Packaging/Package.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetRelationship
    path: src/System.IO.Packaging/src/System/IO/Packaging/Package.cs
    startLine: 648
  assemblies:
  - System.IO.Packaging
  namespace: System.IO.Packaging
  syntax:
    content: public PackageRelationship GetRelationship(string id)
    content.vb: Public Function GetRelationship(id As String) As PackageRelationship
    parameters:
    - id: id
      type: System.String
      description: The relationship ID.
    return:
      type: System.IO.Packaging.PackageRelationship
      description: The relationship with ID 'id' or throw an exception if not found.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.IO.Packaging.Package.GetRelationships
  commentId: M:System.IO.Packaging.Package.GetRelationships
  id: GetRelationships
  parent: System.IO.Packaging.Package
  langs:
  - csharp
  - vb
  name: GetRelationships()
  fullName: System.IO.Packaging.Package.GetRelationships()
  type: Method
  source:
    remote:
      path: src/System.IO.Packaging/src/System/IO/Packaging/Package.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetRelationships
    path: src/System.IO.Packaging/src/System/IO/Packaging/Package.cs
    startLine: 605
  assemblies:
  - System.IO.Packaging
  namespace: System.IO.Packaging
  syntax:
    content: public PackageRelationshipCollection GetRelationships()
    content.vb: Public Function GetRelationships As PackageRelationshipCollection
    return:
      type: System.IO.Packaging.PackageRelationshipCollection
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.IO.Packaging.Package.GetRelationshipsByType(System.String)
  commentId: M:System.IO.Packaging.Package.GetRelationshipsByType(System.String)
  id: GetRelationshipsByType(System.String)
  parent: System.IO.Packaging.Package
  langs:
  - csharp
  - vb
  name: GetRelationshipsByType(String)
  fullName: System.IO.Packaging.Package.GetRelationshipsByType(System.String)
  type: Method
  source:
    remote:
      path: src/System.IO.Packaging/src/System/IO/Packaging/Package.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetRelationshipsByType
    path: src/System.IO.Packaging/src/System/IO/Packaging/Package.cs
    startLine: 623
  assemblies:
  - System.IO.Packaging
  namespace: System.IO.Packaging
  syntax:
    content: public PackageRelationshipCollection GetRelationshipsByType(string relationshipType)
    content.vb: Public Function GetRelationshipsByType(relationshipType As String) As PackageRelationshipCollection
    parameters:
    - id: relationshipType
      type: System.String
    return:
      type: System.IO.Packaging.PackageRelationshipCollection
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.IO.Packaging.Package.Open(System.IO.Stream)
  commentId: M:System.IO.Packaging.Package.Open(System.IO.Stream)
  id: Open(System.IO.Stream)
  parent: System.IO.Packaging.Package
  langs:
  - csharp
  - vb
  name: Open(Stream)
  fullName: System.IO.Packaging.Package.Open(System.IO.Stream)
  type: Method
  source:
    remote:
      path: src/System.IO.Packaging/ref/System.IO.Packaging.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Open
    path: src/System.IO.Packaging/ref/System.IO.Packaging.cs
    startLine: 61
  assemblies:
  - System.IO.Packaging
  namespace: System.IO.Packaging
  syntax:
    content: public static Package Open(Stream stream)
    content.vb: Public Shared Function Open(stream As Stream) As Package
    parameters:
    - id: stream
      type: System.IO.Stream
    return:
      type: System.IO.Packaging.Package
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.IO.Packaging.Package.Open(System.IO.Stream,System.IO.FileMode)
  commentId: M:System.IO.Packaging.Package.Open(System.IO.Stream,System.IO.FileMode)
  id: Open(System.IO.Stream,System.IO.FileMode)
  parent: System.IO.Packaging.Package
  langs:
  - csharp
  - vb
  name: Open(Stream, FileMode)
  fullName: System.IO.Packaging.Package.Open(System.IO.Stream, System.IO.FileMode)
  type: Method
  source:
    remote:
      path: src/System.IO.Packaging/ref/System.IO.Packaging.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Open
    path: src/System.IO.Packaging/ref/System.IO.Packaging.cs
    startLine: 62
  assemblies:
  - System.IO.Packaging
  namespace: System.IO.Packaging
  syntax:
    content: public static Package Open(Stream stream, FileMode packageMode)
    content.vb: Public Shared Function Open(stream As Stream, packageMode As FileMode) As Package
    parameters:
    - id: stream
      type: System.IO.Stream
    - id: packageMode
      type: System.IO.FileMode
    return:
      type: System.IO.Packaging.Package
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.IO.Packaging.Package.Open(System.IO.Stream,System.IO.FileMode,System.IO.FileAccess)
  commentId: M:System.IO.Packaging.Package.Open(System.IO.Stream,System.IO.FileMode,System.IO.FileAccess)
  id: Open(System.IO.Stream,System.IO.FileMode,System.IO.FileAccess)
  parent: System.IO.Packaging.Package
  langs:
  - csharp
  - vb
  name: Open(Stream, FileMode, FileAccess)
  fullName: System.IO.Packaging.Package.Open(System.IO.Stream, System.IO.FileMode, System.IO.FileAccess)
  type: Method
  source:
    remote:
      path: src/System.IO.Packaging/ref/System.IO.Packaging.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Open
    path: src/System.IO.Packaging/ref/System.IO.Packaging.cs
    startLine: 63
  assemblies:
  - System.IO.Packaging
  namespace: System.IO.Packaging
  syntax:
    content: public static Package Open(Stream stream, FileMode packageMode, FileAccess packageAccess)
    content.vb: Public Shared Function Open(stream As Stream, packageMode As FileMode, packageAccess As FileAccess) As Package
    parameters:
    - id: stream
      type: System.IO.Stream
    - id: packageMode
      type: System.IO.FileMode
    - id: packageAccess
      type: System.IO.FileAccess
    return:
      type: System.IO.Packaging.Package
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.IO.Packaging.Package.Open(System.String)
  commentId: M:System.IO.Packaging.Package.Open(System.String)
  id: Open(System.String)
  parent: System.IO.Packaging.Package
  langs:
  - csharp
  - vb
  name: Open(String)
  fullName: System.IO.Packaging.Package.Open(System.String)
  type: Method
  source:
    remote:
      path: src/System.IO.Packaging/src/System/IO/Packaging/Package.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Open
    path: src/System.IO.Packaging/src/System/IO/Packaging/Package.cs
    startLine: 93
  assemblies:
  - System.IO.Packaging
  namespace: System.IO.Packaging
  syntax:
    content: public static Package Open(string path)
    content.vb: Public Shared Function Open(path As String) As Package
    parameters:
    - id: path
      type: System.String
      description: Path to the package
    return:
      type: System.IO.Packaging.Package
      description: Package
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.IO.Packaging.Package.Open(System.String,System.IO.FileMode)
  commentId: M:System.IO.Packaging.Package.Open(System.String,System.IO.FileMode)
  id: Open(System.String,System.IO.FileMode)
  parent: System.IO.Packaging.Package
  langs:
  - csharp
  - vb
  name: Open(String, FileMode)
  fullName: System.IO.Packaging.Package.Open(System.String, System.IO.FileMode)
  type: Method
  source:
    remote:
      path: src/System.IO.Packaging/ref/System.IO.Packaging.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Open
    path: src/System.IO.Packaging/ref/System.IO.Packaging.cs
    startLine: 65
  assemblies:
  - System.IO.Packaging
  namespace: System.IO.Packaging
  syntax:
    content: public static Package Open(string path, FileMode packageMode)
    content.vb: Public Shared Function Open(path As String, packageMode As FileMode) As Package
    parameters:
    - id: path
      type: System.String
    - id: packageMode
      type: System.IO.FileMode
    return:
      type: System.IO.Packaging.Package
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.IO.Packaging.Package.Open(System.String,System.IO.FileMode,System.IO.FileAccess)
  commentId: M:System.IO.Packaging.Package.Open(System.String,System.IO.FileMode,System.IO.FileAccess)
  id: Open(System.String,System.IO.FileMode,System.IO.FileAccess)
  parent: System.IO.Packaging.Package
  langs:
  - csharp
  - vb
  name: Open(String, FileMode, FileAccess)
  fullName: System.IO.Packaging.Package.Open(System.String, System.IO.FileMode, System.IO.FileAccess)
  type: Method
  source:
    remote:
      path: src/System.IO.Packaging/ref/System.IO.Packaging.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Open
    path: src/System.IO.Packaging/ref/System.IO.Packaging.cs
    startLine: 66
  assemblies:
  - System.IO.Packaging
  namespace: System.IO.Packaging
  syntax:
    content: public static Package Open(string path, FileMode packageMode, FileAccess packageAccess)
    content.vb: Public Shared Function Open(path As String, packageMode As FileMode, packageAccess As FileAccess) As Package
    parameters:
    - id: path
      type: System.String
    - id: packageMode
      type: System.IO.FileMode
    - id: packageAccess
      type: System.IO.FileAccess
    return:
      type: System.IO.Packaging.Package
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.IO.Packaging.Package.Open(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)
  commentId: M:System.IO.Packaging.Package.Open(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)
  id: Open(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)
  parent: System.IO.Packaging.Package
  langs:
  - csharp
  - vb
  name: Open(String, FileMode, FileAccess, FileShare)
  fullName: System.IO.Packaging.Package.Open(System.String, System.IO.FileMode, System.IO.FileAccess, System.IO.FileShare)
  type: Method
  source:
    remote:
      path: src/System.IO.Packaging/ref/System.IO.Packaging.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Open
    path: src/System.IO.Packaging/ref/System.IO.Packaging.cs
    startLine: 67
  assemblies:
  - System.IO.Packaging
  namespace: System.IO.Packaging
  syntax:
    content: public static Package Open(string path, FileMode packageMode, FileAccess packageAccess, FileShare packageShare)
    content.vb: Public Shared Function Open(path As String, packageMode As FileMode, packageAccess As FileAccess, packageShare As FileShare) As Package
    parameters:
    - id: path
      type: System.String
    - id: packageMode
      type: System.IO.FileMode
    - id: packageAccess
      type: System.IO.FileAccess
    - id: packageShare
      type: System.IO.FileShare
    return:
      type: System.IO.Packaging.Package
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.IO.Packaging.Package.PartExists(System.Uri)
  commentId: M:System.IO.Packaging.Package.PartExists(System.Uri)
  id: PartExists(System.Uri)
  parent: System.IO.Packaging.Package
  langs:
  - csharp
  - vb
  name: PartExists(Uri)
  fullName: System.IO.Packaging.Package.PartExists(System.Uri)
  type: Method
  source:
    remote:
      path: src/System.IO.Packaging/ref/System.IO.Packaging.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: PartExists
    path: src/System.IO.Packaging/ref/System.IO.Packaging.cs
    startLine: 68
  assemblies:
  - System.IO.Packaging
  namespace: System.IO.Packaging
  syntax:
    content: public virtual bool PartExists(Uri partUri)
    content.vb: Public Overridable Function PartExists(partUri As Uri) As Boolean
    parameters:
    - id: partUri
      type: System.Uri
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.IO.Packaging.Package.RelationshipExists(System.String)
  commentId: M:System.IO.Packaging.Package.RelationshipExists(System.String)
  id: RelationshipExists(System.String)
  parent: System.IO.Packaging.Package
  langs:
  - csharp
  - vb
  name: RelationshipExists(String)
  fullName: System.IO.Packaging.Package.RelationshipExists(System.String)
  type: Method
  source:
    remote:
      path: src/System.IO.Packaging/src/System/IO/Packaging/Package.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: RelationshipExists
    path: src/System.IO.Packaging/src/System/IO/Packaging/Package.cs
    startLine: 669
  assemblies:
  - System.IO.Packaging
  namespace: System.IO.Packaging
  syntax:
    content: public bool RelationshipExists(string id)
    content.vb: Public Function RelationshipExists(id As String) As Boolean
    parameters:
    - id: id
      type: System.String
      description: The relationship ID.
    return:
      type: System.Boolean
      description: true iff a relationship with ID 'id' is defined on this source.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: System.IO.Packaging
  isExternal: false
  name: System.IO.Packaging
  fullName: System.IO.Packaging
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.IO.FileAccess
  parent: System.IO
  isExternal: false
  name: FileAccess
  fullName: System.IO.FileAccess
- uid: System.IO
  isExternal: false
  name: System.IO
  fullName: System.IO
- uid: System.IO.Packaging.PackageProperties
  parent: System.IO.Packaging
  isExternal: false
  name: PackageProperties
  fullName: System.IO.Packaging.PackageProperties
- uid: System.Uri
  parent: System
  isExternal: false
  name: Uri
  fullName: System.Uri
- uid: System.String
  parent: System
  isExternal: false
  name: String
  fullName: System.String
- uid: System.IO.Packaging.PackagePart
  parent: System.IO.Packaging
  isExternal: false
  name: PackagePart
  fullName: System.IO.Packaging.PackagePart
- uid: System.IO.Packaging.CompressionOption
  parent: System.IO.Packaging
  isExternal: false
  name: CompressionOption
  fullName: System.IO.Packaging.CompressionOption
- uid: System.IO.Packaging.TargetMode
  parent: System.IO.Packaging
  isExternal: false
  name: TargetMode
  fullName: System.IO.Packaging.TargetMode
- uid: System.IO.Packaging.PackageRelationship
  parent: System.IO.Packaging
  isExternal: false
  name: PackageRelationship
  fullName: System.IO.Packaging.PackageRelationship
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  fullName: System.Boolean
- uid: System.IO.Packaging.PackagePartCollection
  parent: System.IO.Packaging
  isExternal: false
  name: PackagePartCollection
  fullName: System.IO.Packaging.PackagePartCollection
- uid: System.IO.Packaging.PackagePart[]
  isExternal: false
  name: PackagePart[]
  fullName: System.IO.Packaging.PackagePart[]
  fullname.vb: System.IO.Packaging.PackagePart()
  name.vb: PackagePart()
  spec.csharp:
  - uid: System.IO.Packaging.PackagePart
    name: PackagePart
    fullName: System.IO.Packaging.PackagePart
  - name: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.IO.Packaging.PackagePart
    name: PackagePart
    fullName: System.IO.Packaging.PackagePart
  - name: ()
    fullName: ()
- uid: System.IO.Packaging.PackageRelationshipCollection
  parent: System.IO.Packaging
  isExternal: false
  name: PackageRelationshipCollection
  fullName: System.IO.Packaging.PackageRelationshipCollection
- uid: System.IO.Stream
  parent: System.IO
  isExternal: false
  name: IO.Stream
  fullName: System.IO.Stream
- uid: System.IO.Packaging.Package
  parent: System.IO.Packaging
  isExternal: false
  name: Package
  fullName: System.IO.Packaging.Package
- uid: System.IO.FileMode
  parent: System.IO
  isExternal: false
  name: FileMode
  fullName: System.IO.FileMode
- uid: System.IO.FileShare
  parent: System.IO
  isExternal: false
  name: FileShare
  fullName: System.IO.FileShare
