items:
- uid: System.IO.Compression.ZipArchiveMode
  commentId: T:System.IO.Compression.ZipArchiveMode
  id: ZipArchiveMode
  parent: System.IO.Compression
  children:
  - System.IO.Compression.ZipArchiveMode.Create
  - System.IO.Compression.ZipArchiveMode.Read
  - System.IO.Compression.ZipArchiveMode.Update
  langs:
  - csharp
  - vb
  name: ZipArchiveMode
  fullName: System.IO.Compression.ZipArchiveMode
  type: Enum
  source:
    remote:
      path: src/System.IO.Compression/ref/System.IO.Compression.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ZipArchiveMode
    path: src/System.IO.Compression/ref/System.IO.Compression.cs
    startLine: 90
  assemblies:
  - System.IO.Compression
  namespace: System.IO.Compression
  summary: "\n<p>Specifies values for interacting with zip archive entries.</p>\n"
  remarks: "\n<p>When you set the mode to <xref href=\"System.IO.Compression.ZipArchiveMode.Read\" data-throw-if-not-resolved=\"false\"></xref>, the underlying file or stream must support reading, but does not have to support seeking. If the underlying file or stream supports seeking, the files are read from the archive as they are requested. If the underlying file or stream does not support seeking, the entire archive is held in memory. </p>\n<p>When you set the mode to <xref href=\"System.IO.Compression.ZipArchiveMode.Create\" data-throw-if-not-resolved=\"false\"></xref>, the underlying file or stream must support writing, but does not have to support seeking. Each entry in the archive can be opened only once for writing. If you create a single entry, the data is written to the underlying stream or file as soon as it is available. If you create multiple entries, such as by calling the <xref href=\"System.IO.Compression.ZipFile.CreateFromDirectory(System.String,System.String,System.IO.Compression.CompressionLevel,System.Boolean)\" data-throw-if-not-resolved=\"false\"></xref> method, the data is written to the underlying stream or file after all the entries are created. </p>\n<p>When you set the mode to <xref href=\"System.IO.Compression.ZipArchiveMode.Update\" data-throw-if-not-resolved=\"false\"></xref>, the underlying file or stream must support reading, writing, and seeking. The content of the entire archive is held in memory, and no data is written to the underlying file or stream until the archive is disposed.</p>\n<p>The following methods include a parameter named <em>mode</em> that lets you specify the archive mode:</p>\n<ul><li>\n<p>\n<xref href=\"System.IO.Compression.ZipArchive.#ctor(System.IO.Stream,System.IO.Compression.ZipArchiveMode,System.Boolean)\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</li><li>\n<p>\n<xref href=\"System.IO.Compression.ZipArchive.#ctor(System.IO.Stream,System.IO.Compression.ZipArchiveMode)\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</li><li>\n<p>\n<xref href=\"System.IO.Compression.ZipFile.Open(System.String,System.IO.Compression.ZipArchiveMode)\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</li></ul>\n"
  example:
  - "\n<p>The following example shows how to specify a <xref href=\"System.IO.Compression.ZipArchiveMode\" data-throw-if-not-resolved=\"false\"></xref> value when creating a <xref href=\"System.IO.Compression.ZipArchive\" data-throw-if-not-resolved=\"false\"></xref> object.</p>System.IO.Compression.ZipArchiveMode#1"
  syntax:
    content: public enum ZipArchiveMode
    content.vb: Public Enum ZipArchiveMode
  modifiers.csharp:
  - public
  - enum
  modifiers.vb:
  - Public
  - Enum
- uid: System.IO.Compression.ZipArchiveMode.Create
  commentId: F:System.IO.Compression.ZipArchiveMode.Create
  id: Create
  parent: System.IO.Compression.ZipArchiveMode
  langs:
  - csharp
  - vb
  name: Create
  fullName: System.IO.Compression.ZipArchiveMode.Create
  type: Field
  source:
    remote:
      path: src/System.IO.Compression/ref/System.IO.Compression.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Create
    path: src/System.IO.Compression/ref/System.IO.Compression.cs
    startLine: 92
  assemblies:
  - System.IO.Compression
  namespace: System.IO.Compression
  summary: "\n<p>Only creating new archive entries is permitted.</p>\n"
  syntax:
    content: Create = 1
    return:
      type: System.IO.Compression.ZipArchiveMode
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.IO.Compression.ZipArchiveMode.Read
  commentId: F:System.IO.Compression.ZipArchiveMode.Read
  id: Read
  parent: System.IO.Compression.ZipArchiveMode
  langs:
  - csharp
  - vb
  name: Read
  fullName: System.IO.Compression.ZipArchiveMode.Read
  type: Field
  source:
    remote:
      path: src/System.IO.Compression/ref/System.IO.Compression.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Read
    path: src/System.IO.Compression/ref/System.IO.Compression.cs
    startLine: 93
  assemblies:
  - System.IO.Compression
  namespace: System.IO.Compression
  summary: "\n<p>Only reading archive entries is permitted.</p>\n"
  syntax:
    content: Read = 0
    return:
      type: System.IO.Compression.ZipArchiveMode
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.IO.Compression.ZipArchiveMode.Update
  commentId: F:System.IO.Compression.ZipArchiveMode.Update
  id: Update
  parent: System.IO.Compression.ZipArchiveMode
  langs:
  - csharp
  - vb
  name: Update
  fullName: System.IO.Compression.ZipArchiveMode.Update
  type: Field
  source:
    remote:
      path: src/System.IO.Compression/ref/System.IO.Compression.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Update
    path: src/System.IO.Compression/ref/System.IO.Compression.cs
    startLine: 94
  assemblies:
  - System.IO.Compression
  namespace: System.IO.Compression
  summary: "\n<p>Both read and write operations are permitted for archive entries.</p>\n"
  syntax:
    content: Update = 2
    return:
      type: System.IO.Compression.ZipArchiveMode
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
references:
- uid: System.IO.Compression
  isExternal: false
  name: System.IO.Compression
  fullName: System.IO.Compression
- uid: System.IO.Compression.ZipArchiveMode
  parent: System.IO.Compression
  isExternal: false
  name: ZipArchiveMode
  fullName: System.IO.Compression.ZipArchiveMode
