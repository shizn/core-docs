items:
- uid: System.Collections.Specialized.CollectionsUtil
  commentId: T:System.Collections.Specialized.CollectionsUtil
  id: CollectionsUtil
  parent: System.Collections.Specialized
  children:
  - System.Collections.Specialized.CollectionsUtil.#ctor
  - System.Collections.Specialized.CollectionsUtil.CreateCaseInsensitiveHashtable
  - System.Collections.Specialized.CollectionsUtil.CreateCaseInsensitiveHashtable(System.Collections.IDictionary)
  - System.Collections.Specialized.CollectionsUtil.CreateCaseInsensitiveHashtable(System.Int32)
  - System.Collections.Specialized.CollectionsUtil.CreateCaseInsensitiveSortedList
  langs:
  - csharp
  - vb
  name: CollectionsUtil
  fullName: System.Collections.Specialized.CollectionsUtil
  type: Class
  source:
    remote:
      path: src/System.Collections.NonGeneric/src/System/Collections/Specialized/CollectionsUtil.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CollectionsUtil
    path: src/System.Collections.NonGeneric/src/System/Collections/Specialized/CollectionsUtil.cs
    startLine: 15
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections.Specialized
  summary: "\n<p>Creates collections that ignore the case in strings.</p>\n"
  remarks: "\n<p>These methods generate a case-insensitive instance of the collection using case-insensitive implementations of the hash code provider and the comparer. The resulting instance can be used like any other instances of that class, although it may behave differently.</p>\n<p>For example, suppose two objects with the keys \"hello\" and \"HELLO\" are to be added to a hash table. A case-sensitive hash table would create two different entries; whereas, a case-insensitive hash table would throw an exception when adding the second object.</p>\n"
  example:
  - "\n<p>The following example uses two collections, a hash table and a sorted list, to hold population values for a group of cities. The values are retrieved from the collections by using the city names as keys. The city names are in mixed case to show their use as case-insensitive keys.</p>System.Collections.Specialized.CollectionsUtil#1"
  syntax:
    content: public class CollectionsUtil
    content.vb: Public Class CollectionsUtil
  seealso:
  - type: System.Collections
    commentId: N:System.Collections
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: System.Collections.Specialized.CollectionsUtil.#ctor
  commentId: M:System.Collections.Specialized.CollectionsUtil.#ctor
  id: '#ctor'
  parent: System.Collections.Specialized.CollectionsUtil
  langs:
  - csharp
  - vb
  name: CollectionsUtil()
  fullName: System.Collections.Specialized.CollectionsUtil.CollectionsUtil()
  type: Constructor
  source:
    remote:
      path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
    startLine: 271
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections.Specialized
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Collections.Specialized.CollectionsUtil\" data-throw-if-not-resolved=\"false\"></xref> class. </p>\n"
  syntax:
    content: public CollectionsUtil()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Collections.Specialized.CollectionsUtil.CreateCaseInsensitiveHashtable
  commentId: M:System.Collections.Specialized.CollectionsUtil.CreateCaseInsensitiveHashtable
  id: CreateCaseInsensitiveHashtable
  parent: System.Collections.Specialized.CollectionsUtil
  langs:
  - csharp
  - vb
  name: CreateCaseInsensitiveHashtable()
  fullName: System.Collections.Specialized.CollectionsUtil.CreateCaseInsensitiveHashtable()
  type: Method
  source:
    remote:
      path: src/System.Collections.NonGeneric/src/System/Collections/Specialized/CollectionsUtil.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CreateCaseInsensitiveHashtable
    path: src/System.Collections.NonGeneric/src/System/Collections/Specialized/CollectionsUtil.cs
    startLine: 17
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections.Specialized
  summary: "\n<p>Creates a new case-insensitive instance of the <xref href=\"System.Collections.Hashtable\" data-throw-if-not-resolved=\"false\"></xref> class with the default initial capacity.</p>\n"
  remarks: "\n<p>Instead of using the <xref href=\"System.Collections.Specialized.CollectionsUtil.CreateCaseInsensitiveHashtable\" data-throw-if-not-resolved=\"false\"></xref> method, use the <xref href=\"System.Collections.Hashtable.#ctor(System.Collections.IEqualityComparer)\" data-throw-if-not-resolved=\"false\"></xref> constructor to create a case-insensitive <xref href=\"System.Collections.Hashtable\" data-throw-if-not-resolved=\"false\"></xref> class.</p>\n"
  syntax:
    content: public static Hashtable CreateCaseInsensitiveHashtable()
    content.vb: Public Shared Function CreateCaseInsensitiveHashtable As Hashtable
    return:
      type: System.Collections.Hashtable
  seealso:
  - type: System.Collections.Hashtable
    commentId: T:System.Collections.Hashtable
  - type: System.Collections.CaseInsensitiveHashCodeProvider
    commentId: T:System.Collections.CaseInsensitiveHashCodeProvider
  - type: System.Collections.CaseInsensitiveComparer
    commentId: T:System.Collections.CaseInsensitiveComparer
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Collections.Specialized.CollectionsUtil.CreateCaseInsensitiveHashtable(System.Collections.IDictionary)
  commentId: M:System.Collections.Specialized.CollectionsUtil.CreateCaseInsensitiveHashtable(System.Collections.IDictionary)
  id: CreateCaseInsensitiveHashtable(System.Collections.IDictionary)
  parent: System.Collections.Specialized.CollectionsUtil
  langs:
  - csharp
  - vb
  name: CreateCaseInsensitiveHashtable(IDictionary)
  fullName: System.Collections.Specialized.CollectionsUtil.CreateCaseInsensitiveHashtable(System.Collections.IDictionary)
  type: Method
  source:
    remote:
      path: src/System.Collections.NonGeneric/src/System/Collections/Specialized/CollectionsUtil.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CreateCaseInsensitiveHashtable
    path: src/System.Collections.NonGeneric/src/System/Collections/Specialized/CollectionsUtil.cs
    startLine: 27
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections.Specialized
  summary: "\n<p>Copies the entries from the specified dictionary to a new case-insensitive instance of the <xref href=\"System.Collections.Hashtable\" data-throw-if-not-resolved=\"false\"></xref> class with the same initial capacity as the number of entries copied.</p>\n"
  remarks: "\n<p>Instead of using the <xref href=\"System.Collections.Specialized.CollectionsUtil.CreateCaseInsensitiveHashtable(System.Collections.IDictionary)\" data-throw-if-not-resolved=\"false\"></xref> method, use the <xref href=\"System.Collections.Hashtable.#ctor(System.Collections.IDictionary,System.Collections.IEqualityComparer)\" data-throw-if-not-resolved=\"false\"></xref> constructor to create a case-insensitive <xref href=\"System.Collections.Hashtable\" data-throw-if-not-resolved=\"false\"></xref> class.</p>\n"
  syntax:
    content: public static Hashtable CreateCaseInsensitiveHashtable(IDictionary d)
    content.vb: Public Shared Function CreateCaseInsensitiveHashtable(d As IDictionary) As Hashtable
    parameters:
    - id: d
      type: System.Collections.IDictionary
    return:
      type: System.Collections.Hashtable
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>d</em> is <strong>null</strong>. </p>\n"
  seealso:
  - type: System.Collections.Hashtable
    commentId: T:System.Collections.Hashtable
  - type: System.Collections.IDictionary
    commentId: T:System.Collections.IDictionary
  - type: System.Collections.CaseInsensitiveHashCodeProvider
    commentId: T:System.Collections.CaseInsensitiveHashCodeProvider
  - type: System.Collections.CaseInsensitiveComparer
    commentId: T:System.Collections.CaseInsensitiveComparer
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Collections.Specialized.CollectionsUtil.CreateCaseInsensitiveHashtable(System.Int32)
  commentId: M:System.Collections.Specialized.CollectionsUtil.CreateCaseInsensitiveHashtable(System.Int32)
  id: CreateCaseInsensitiveHashtable(System.Int32)
  parent: System.Collections.Specialized.CollectionsUtil
  langs:
  - csharp
  - vb
  name: CreateCaseInsensitiveHashtable(Int32)
  fullName: System.Collections.Specialized.CollectionsUtil.CreateCaseInsensitiveHashtable(System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Collections.NonGeneric/src/System/Collections/Specialized/CollectionsUtil.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CreateCaseInsensitiveHashtable
    path: src/System.Collections.NonGeneric/src/System/Collections/Specialized/CollectionsUtil.cs
    startLine: 22
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections.Specialized
  summary: "\n<p>Creates a new case-insensitive instance of the <xref href=\"System.Collections.Hashtable\" data-throw-if-not-resolved=\"false\"></xref> class with the specified initial capacity.</p>\n"
  remarks: "\n<p>Instead of using the <xref href=\"System.Collections.Specialized.CollectionsUtil.CreateCaseInsensitiveHashtable(System.Int32)\" data-throw-if-not-resolved=\"false\"></xref> method, use the <xref href=\"System.Collections.Hashtable.#ctor(System.Int32,System.Collections.IEqualityComparer)\" data-throw-if-not-resolved=\"false\"></xref> constructor to create a case-insensitive <xref href=\"System.Collections.Hashtable\" data-throw-if-not-resolved=\"false\"></xref> class.</p>\n"
  syntax:
    content: public static Hashtable CreateCaseInsensitiveHashtable(int capacity)
    content.vb: Public Shared Function CreateCaseInsensitiveHashtable(capacity As Integer) As Hashtable
    parameters:
    - id: capacity
      type: System.Int32
    return:
      type: System.Collections.Hashtable
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>\n<em>capacity</em> is less than zero. </p>\n"
  seealso:
  - type: System.Collections.Hashtable
    commentId: T:System.Collections.Hashtable
  - type: System.Collections.CaseInsensitiveHashCodeProvider
    commentId: T:System.Collections.CaseInsensitiveHashCodeProvider
  - type: System.Collections.CaseInsensitiveComparer
    commentId: T:System.Collections.CaseInsensitiveComparer
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Collections.Specialized.CollectionsUtil.CreateCaseInsensitiveSortedList
  commentId: M:System.Collections.Specialized.CollectionsUtil.CreateCaseInsensitiveSortedList
  id: CreateCaseInsensitiveSortedList
  parent: System.Collections.Specialized.CollectionsUtil
  langs:
  - csharp
  - vb
  name: CreateCaseInsensitiveSortedList()
  fullName: System.Collections.Specialized.CollectionsUtil.CreateCaseInsensitiveSortedList()
  type: Method
  source:
    remote:
      path: src/System.Collections.NonGeneric/src/System/Collections/Specialized/CollectionsUtil.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CreateCaseInsensitiveSortedList
    path: src/System.Collections.NonGeneric/src/System/Collections/Specialized/CollectionsUtil.cs
    startLine: 32
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections.Specialized
  summary: "\n<p>Creates a new instance of the <xref href=\"System.Collections.SortedList\" data-throw-if-not-resolved=\"false\"></xref> class that ignores the case of strings.</p>\n"
  remarks: "\n<p>The new <xref href=\"System.Collections.SortedList\" data-throw-if-not-resolved=\"false\"></xref> instance is sorted according to the <xref href=\"System.Collections.CaseInsensitiveComparer\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: public static SortedList CreateCaseInsensitiveSortedList()
    content.vb: Public Shared Function CreateCaseInsensitiveSortedList As SortedList
    return:
      type: System.Collections.SortedList
  seealso:
  - type: System.Collections.SortedList
    commentId: T:System.Collections.SortedList
  - type: System.Collections.CaseInsensitiveComparer
    commentId: T:System.Collections.CaseInsensitiveComparer
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: System.Collections.Specialized
  isExternal: false
  name: System.Collections.Specialized
  fullName: System.Collections.Specialized
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Collections.Hashtable
  parent: System.Collections
  isExternal: false
  name: Hashtable
  fullName: System.Collections.Hashtable
- uid: System.Collections
  isExternal: false
  name: System.Collections
  fullName: System.Collections
- uid: System.Collections.IDictionary
  parent: System.Collections
  isExternal: false
  name: IDictionary
  fullName: System.Collections.IDictionary
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  fullName: System.Int32
- uid: System.Collections.SortedList
  parent: System.Collections
  isExternal: false
  name: SortedList
  fullName: System.Collections.SortedList
- uid: System.ArgumentNullException
  isExternal: false
  name: ArgumentNullException
  fullName: System.ArgumentNullException
- uid: System.ArgumentOutOfRangeException
  isExternal: false
  name: ArgumentOutOfRangeException
  fullName: System.ArgumentOutOfRangeException
