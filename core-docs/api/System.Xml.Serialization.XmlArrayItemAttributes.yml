items:
- uid: System.Xml.Serialization.XmlArrayItemAttributes
  commentId: T:System.Xml.Serialization.XmlArrayItemAttributes
  id: XmlArrayItemAttributes
  parent: System.Xml.Serialization
  children:
  - System.Xml.Serialization.XmlArrayItemAttributes.#ctor
  - System.Xml.Serialization.XmlArrayItemAttributes.Add(System.Xml.Serialization.XmlArrayItemAttribute)
  - System.Xml.Serialization.XmlArrayItemAttributes.Clear
  - System.Xml.Serialization.XmlArrayItemAttributes.Contains(System.Xml.Serialization.XmlArrayItemAttribute)
  - System.Xml.Serialization.XmlArrayItemAttributes.CopyTo(System.Xml.Serialization.XmlArrayItemAttribute[],System.Int32)
  - System.Xml.Serialization.XmlArrayItemAttributes.Count
  - System.Xml.Serialization.XmlArrayItemAttributes.GetEnumerator
  - System.Xml.Serialization.XmlArrayItemAttributes.IndexOf(System.Xml.Serialization.XmlArrayItemAttribute)
  - System.Xml.Serialization.XmlArrayItemAttributes.Insert(System.Int32,System.Xml.Serialization.XmlArrayItemAttribute)
  - System.Xml.Serialization.XmlArrayItemAttributes.Item(System.Int32)
  - System.Xml.Serialization.XmlArrayItemAttributes.Remove(System.Xml.Serialization.XmlArrayItemAttribute)
  - System.Xml.Serialization.XmlArrayItemAttributes.RemoveAt(System.Int32)
  - System.Xml.Serialization.XmlArrayItemAttributes.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  - System.Xml.Serialization.XmlArrayItemAttributes.System#Collections#ICollection#IsSynchronized
  - System.Xml.Serialization.XmlArrayItemAttributes.System#Collections#ICollection#SyncRoot
  - System.Xml.Serialization.XmlArrayItemAttributes.System#Collections#IList#Add(System.Object)
  - System.Xml.Serialization.XmlArrayItemAttributes.System#Collections#IList#Contains(System.Object)
  - System.Xml.Serialization.XmlArrayItemAttributes.System#Collections#IList#IndexOf(System.Object)
  - System.Xml.Serialization.XmlArrayItemAttributes.System#Collections#IList#Insert(System.Int32,System.Object)
  - System.Xml.Serialization.XmlArrayItemAttributes.System#Collections#IList#IsFixedSize
  - System.Xml.Serialization.XmlArrayItemAttributes.System#Collections#IList#IsReadOnly
  - System.Xml.Serialization.XmlArrayItemAttributes.System#Collections#IList#Item(System.Int32)
  - System.Xml.Serialization.XmlArrayItemAttributes.System#Collections#IList#Remove(System.Object)
  langs:
  - csharp
  - vb
  name: XmlArrayItemAttributes
  fullName: System.Xml.Serialization.XmlArrayItemAttributes
  type: Class
  source:
    remote:
      path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.Manual.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: XmlArrayItemAttributes
    path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.Manual.cs
    startLine: 31
  assemblies:
  - System.Xml.XmlSerializer
  namespace: System.Xml.Serialization
  summary: "\n<p>Represents a collection of <xref href=\"System.Xml.Serialization.XmlArrayItemAttribute\" data-throw-if-not-resolved=\"false\"></xref> objects.</p>\n"
  remarks: "\n<p>The <xref href=\"System.Xml.Serialization.XmlArrayItemAttributes\" data-throw-if-not-resolved=\"false\"></xref> class allows you to specify the derived types that can be inserted into an array returned by a public field or public read/write property.</p>\n<p>An instance of this class is returned by the <xref href=\"System.Xml.Serialization.XmlAttributes.XmlArrayItems\" data-throw-if-not-resolved=\"false\"></xref> property of the <xref href=\"System.Xml.Serialization.XmlAttributes\" data-throw-if-not-resolved=\"false\"></xref> class. The <xref href=\"System.Xml.Serialization.XmlAttributes\" data-throw-if-not-resolved=\"false\"></xref> class is used when overriding the set of <xref href=\"System.Xml.Serialization.XmlArrayItemAttribute\" data-throw-if-not-resolved=\"false\"></xref> objects that can be inserted into an array to which the <xref href=\"System.Xml.Serialization.XmlArrayAttribute\" data-throw-if-not-resolved=\"false\"></xref> has been applied.</p>\n<p>For each new type you want the field or property to accept, create an <xref href=\"System.Xml.Serialization.XmlArrayItemAttribute\" data-throw-if-not-resolved=\"false\"></xref> and use the <xref href=\"System.Xml.Serialization.XmlArrayItemAttributes.Add(System.Xml.Serialization.XmlArrayItemAttribute)\" data-throw-if-not-resolved=\"false\"></xref> to add the object to the <xref href=\"System.Xml.Serialization.XmlArrayItemAttributes\" data-throw-if-not-resolved=\"false\"></xref> collection returned by the <xref href=\"System.Xml.Serialization.XmlAttributes.XmlArrayItems\" data-throw-if-not-resolved=\"false\"></xref> property. <xref href=\"System.Xml.Serialization.XmlAttributeOverrides.Add(System.Type,System.Xml.Serialization.XmlAttributes)\" data-throw-if-not-resolved=\"false\"></xref> the <xref href=\"System.Xml.Serialization.XmlAttributes\" data-throw-if-not-resolved=\"false\"></xref> to an <xref href=\"System.Xml.Serialization.XmlAttributeOverrides\" data-throw-if-not-resolved=\"false\"></xref>, that specifies the type of the object that contains the field or property, and the name of the field or property. Construct an <xref href=\"System.Xml.Serialization.XmlSerializer\" data-throw-if-not-resolved=\"false\"></xref> with the <xref href=\"System.Xml.Serialization.XmlAttributeOverrides\" data-throw-if-not-resolved=\"false\"></xref> before calling the <xref href=\"System.Xml.Serialization.XmlSerializer.Serialize(System.IO.TextWriter,System.Object)\" data-throw-if-not-resolved=\"false\"></xref> or <xref href=\"System.Xml.Serialization.XmlSerializer.Deserialize(System.IO.Stream)\" data-throw-if-not-resolved=\"false\"></xref> method.</p>\n"
  syntax:
    content: 'public class XmlArrayItemAttributes : IList, ICollection, IEnumerable'
    content.vb: >-
      Public Class XmlArrayItemAttributes
          Implements IList, ICollection, IEnumerable
  seealso:
  - type: System.Xml.Serialization.XmlSerializer
    commentId: T:System.Xml.Serialization.XmlSerializer
  - type: System.Xml.Serialization.XmlAttributeOverrides
    commentId: T:System.Xml.Serialization.XmlAttributeOverrides
  inheritance:
  - System.Object
  implements:
  - System.Collections.IList
  - System.Collections.ICollection
  - System.Collections.IEnumerable
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: System.Xml.Serialization.XmlArrayItemAttributes.#ctor
  commentId: M:System.Xml.Serialization.XmlArrayItemAttributes.#ctor
  id: '#ctor'
  parent: System.Xml.Serialization.XmlArrayItemAttributes
  langs:
  - csharp
  - vb
  name: XmlArrayItemAttributes()
  fullName: System.Xml.Serialization.XmlArrayItemAttributes.XmlArrayItemAttributes()
  type: Constructor
  source:
    remote:
      path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.cs
    startLine: 64
  assemblies:
  - System.Xml.XmlSerializer
  namespace: System.Xml.Serialization
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Xml.Serialization.XmlArrayItemAttributes\" data-throw-if-not-resolved=\"false\"></xref> class. </p>\n"
  syntax:
    content: public XmlArrayItemAttributes()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Xml.Serialization.XmlArrayItemAttributes.Item(System.Int32)
  commentId: P:System.Xml.Serialization.XmlArrayItemAttributes.Item(System.Int32)
  id: Item(System.Int32)
  parent: System.Xml.Serialization.XmlArrayItemAttributes
  langs:
  - csharp
  - vb
  name: Item[Int32]
  fullName: System.Xml.Serialization.XmlArrayItemAttributes.Item[System.Int32]
  type: Property
  source:
    remote:
      path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: this[]
    path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.cs
    startLine: 65
  assemblies:
  - System.Xml.XmlSerializer
  namespace: System.Xml.Serialization
  summary: "\n<p>Gets or sets the item at the specified index.</p>\n"
  syntax:
    content: public XmlArrayItemAttribute this[int index] { get; set; }
    content.vb: Public Property Item(index As Integer) As XmlArrayItemAttribute
    parameters:
    - id: index
      type: System.Int32
      description: "\n<p>The zero-based index of the collection member to get or set. </p>\n"
    return:
      type: System.Xml.Serialization.XmlArrayItemAttribute
      description: "\n<p>The <xref href=\"System.Xml.Serialization.XmlArrayItemAttribute\" data-throw-if-not-resolved=\"false\"></xref> at the specified index.</p>\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: System.Xml.Serialization.XmlArrayItemAttributes.Item(System.Int32)
  name.vb: Item(Int32)
- uid: System.Xml.Serialization.XmlArrayItemAttributes.Add(System.Xml.Serialization.XmlArrayItemAttribute)
  commentId: M:System.Xml.Serialization.XmlArrayItemAttributes.Add(System.Xml.Serialization.XmlArrayItemAttribute)
  id: Add(System.Xml.Serialization.XmlArrayItemAttribute)
  parent: System.Xml.Serialization.XmlArrayItemAttributes
  langs:
  - csharp
  - vb
  name: Add(XmlArrayItemAttribute)
  fullName: System.Xml.Serialization.XmlArrayItemAttributes.Add(System.Xml.Serialization.XmlArrayItemAttribute)
  type: Method
  source:
    remote:
      path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Add
    path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.cs
    startLine: 66
  assemblies:
  - System.Xml.XmlSerializer
  namespace: System.Xml.Serialization
  summary: "\n<p>Adds an <xref href=\"System.Xml.Serialization.XmlArrayItemAttribute\" data-throw-if-not-resolved=\"false\"></xref> to the collection.</p>\n"
  syntax:
    content: public int Add(XmlArrayItemAttribute attribute)
    content.vb: Public Function Add(attribute As XmlArrayItemAttribute) As Integer
    parameters:
    - id: attribute
      type: System.Xml.Serialization.XmlArrayItemAttribute
      description: "\n<p>The <xref href=\"System.Xml.Serialization.XmlArrayItemAttribute\" data-throw-if-not-resolved=\"false\"></xref> to add to the collection. </p>\n"
    return:
      type: System.Int32
      description: "\n<p>The index of the added item.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Xml.Serialization.XmlArrayItemAttributes.Contains(System.Xml.Serialization.XmlArrayItemAttribute)
  commentId: M:System.Xml.Serialization.XmlArrayItemAttributes.Contains(System.Xml.Serialization.XmlArrayItemAttribute)
  id: Contains(System.Xml.Serialization.XmlArrayItemAttribute)
  parent: System.Xml.Serialization.XmlArrayItemAttributes
  langs:
  - csharp
  - vb
  name: Contains(XmlArrayItemAttribute)
  fullName: System.Xml.Serialization.XmlArrayItemAttributes.Contains(System.Xml.Serialization.XmlArrayItemAttribute)
  type: Method
  source:
    remote:
      path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Contains
    path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.cs
    startLine: 67
  assemblies:
  - System.Xml.XmlSerializer
  namespace: System.Xml.Serialization
  summary: "\n<p>Determines whether the collection contains the specified <xref href=\"System.Xml.Serialization.XmlArrayItemAttribute\" data-throw-if-not-resolved=\"false\"></xref>. </p>\n"
  syntax:
    content: public bool Contains(XmlArrayItemAttribute attribute)
    content.vb: Public Function Contains(attribute As XmlArrayItemAttribute) As Boolean
    parameters:
    - id: attribute
      type: System.Xml.Serialization.XmlArrayItemAttribute
      description: "\n<p>The <xref href=\"System.Xml.Serialization.XmlArrayItemAttribute\" data-throw-if-not-resolved=\"false\"></xref> to check for.</p>\n"
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if the collection contains the specified <xref href=\"System.Xml.Serialization.XmlArrayItemAttribute\" data-throw-if-not-resolved=\"false\"></xref>; otherwise, <strong>false</strong>.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Xml.Serialization.XmlArrayItemAttributes.CopyTo(System.Xml.Serialization.XmlArrayItemAttribute[],System.Int32)
  commentId: M:System.Xml.Serialization.XmlArrayItemAttributes.CopyTo(System.Xml.Serialization.XmlArrayItemAttribute[],System.Int32)
  id: CopyTo(System.Xml.Serialization.XmlArrayItemAttribute[],System.Int32)
  parent: System.Xml.Serialization.XmlArrayItemAttributes
  langs:
  - csharp
  - vb
  name: CopyTo(XmlArrayItemAttribute[], Int32)
  fullName: System.Xml.Serialization.XmlArrayItemAttributes.CopyTo(System.Xml.Serialization.XmlArrayItemAttribute[], System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CopyTo
    path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.cs
    startLine: 68
  assemblies:
  - System.Xml.XmlSerializer
  namespace: System.Xml.Serialization
  summary: "\n<p>Copies an <xref href=\"System.Xml.Serialization.XmlArrayItemAttribute\" data-throw-if-not-resolved=\"false\"></xref> array to the collection, starting at a specified target index. </p>\n"
  syntax:
    content: public void CopyTo(XmlArrayItemAttribute[] array, int index)
    content.vb: Public Sub CopyTo(array As XmlArrayItemAttribute(), index As Integer)
    parameters:
    - id: array
      type: System.Xml.Serialization.XmlArrayItemAttribute[]
      description: "\n<p>The array of <xref href=\"System.Xml.Serialization.XmlArrayItemAttribute\" data-throw-if-not-resolved=\"false\"></xref> objects to copy to the collection.</p>\n"
    - id: index
      type: System.Int32
      description: "\n<p>The index at which the copied attributes begin.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Xml.Serialization.XmlArrayItemAttributes.CopyTo(System.Xml.Serialization.XmlArrayItemAttribute(), System.Int32)
  name.vb: CopyTo(XmlArrayItemAttribute(), Int32)
- uid: System.Xml.Serialization.XmlArrayItemAttributes.IndexOf(System.Xml.Serialization.XmlArrayItemAttribute)
  commentId: M:System.Xml.Serialization.XmlArrayItemAttributes.IndexOf(System.Xml.Serialization.XmlArrayItemAttribute)
  id: IndexOf(System.Xml.Serialization.XmlArrayItemAttribute)
  parent: System.Xml.Serialization.XmlArrayItemAttributes
  langs:
  - csharp
  - vb
  name: IndexOf(XmlArrayItemAttribute)
  fullName: System.Xml.Serialization.XmlArrayItemAttributes.IndexOf(System.Xml.Serialization.XmlArrayItemAttribute)
  type: Method
  source:
    remote:
      path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IndexOf
    path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.cs
    startLine: 69
  assemblies:
  - System.Xml.XmlSerializer
  namespace: System.Xml.Serialization
  summary: "\n<p>Returns the zero-based index of the first occurrence of the specified <xref href=\"System.Xml.Serialization.XmlArrayItemAttribute\" data-throw-if-not-resolved=\"false\"></xref> in the collection or -1 if the attribute is not found in the collection. </p>\n"
  syntax:
    content: public int IndexOf(XmlArrayItemAttribute attribute)
    content.vb: Public Function IndexOf(attribute As XmlArrayItemAttribute) As Integer
    parameters:
    - id: attribute
      type: System.Xml.Serialization.XmlArrayItemAttribute
      description: "\n<p>The <xref href=\"System.Xml.Serialization.XmlArrayItemAttribute\" data-throw-if-not-resolved=\"false\"></xref> to locate in the collection.</p>\n"
    return:
      type: System.Int32
      description: "\n<p>The first index of the <xref href=\"System.Xml.Serialization.XmlArrayItemAttribute\" data-throw-if-not-resolved=\"false\"></xref> in the collection or -1 if the attribute is not found in the collection.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Xml.Serialization.XmlArrayItemAttributes.Insert(System.Int32,System.Xml.Serialization.XmlArrayItemAttribute)
  commentId: M:System.Xml.Serialization.XmlArrayItemAttributes.Insert(System.Int32,System.Xml.Serialization.XmlArrayItemAttribute)
  id: Insert(System.Int32,System.Xml.Serialization.XmlArrayItemAttribute)
  parent: System.Xml.Serialization.XmlArrayItemAttributes
  langs:
  - csharp
  - vb
  name: Insert(Int32, XmlArrayItemAttribute)
  fullName: System.Xml.Serialization.XmlArrayItemAttributes.Insert(System.Int32, System.Xml.Serialization.XmlArrayItemAttribute)
  type: Method
  source:
    remote:
      path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Insert
    path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.cs
    startLine: 70
  assemblies:
  - System.Xml.XmlSerializer
  namespace: System.Xml.Serialization
  summary: "\n<p>Inserts an <xref href=\"System.Xml.Serialization.XmlArrayItemAttribute\" data-throw-if-not-resolved=\"false\"></xref> into the collection at the specified index. </p>\n"
  syntax:
    content: public void Insert(int index, XmlArrayItemAttribute attribute)
    content.vb: Public Sub Insert(index As Integer, attribute As XmlArrayItemAttribute)
    parameters:
    - id: index
      type: System.Int32
      description: "\n<p>The index at which the attribute is inserted.</p>\n"
    - id: attribute
      type: System.Xml.Serialization.XmlArrayItemAttribute
      description: "\n<p>The <xref href=\"System.Xml.Serialization.XmlArrayItemAttribute\" data-throw-if-not-resolved=\"false\"></xref>  to insert.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Xml.Serialization.XmlArrayItemAttributes.Remove(System.Xml.Serialization.XmlArrayItemAttribute)
  commentId: M:System.Xml.Serialization.XmlArrayItemAttributes.Remove(System.Xml.Serialization.XmlArrayItemAttribute)
  id: Remove(System.Xml.Serialization.XmlArrayItemAttribute)
  parent: System.Xml.Serialization.XmlArrayItemAttributes
  langs:
  - csharp
  - vb
  name: Remove(XmlArrayItemAttribute)
  fullName: System.Xml.Serialization.XmlArrayItemAttributes.Remove(System.Xml.Serialization.XmlArrayItemAttribute)
  type: Method
  source:
    remote:
      path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Remove
    path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.cs
    startLine: 71
  assemblies:
  - System.Xml.XmlSerializer
  namespace: System.Xml.Serialization
  summary: "\n<p>Removes an <xref href=\"System.Xml.Serialization.XmlArrayItemAttribute\" data-throw-if-not-resolved=\"false\"></xref> from the collection, if it is present. </p>\n"
  remarks: "\n<p>The implementation of this is the same as the <xref href=\"System.Collections.ArrayList.Remove(System.Object)\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: public void Remove(XmlArrayItemAttribute attribute)
    content.vb: Public Sub Remove(attribute As XmlArrayItemAttribute)
    parameters:
    - id: attribute
      type: System.Xml.Serialization.XmlArrayItemAttribute
      description: "\n<p>The <xref href=\"System.Xml.Serialization.XmlArrayItemAttribute\" data-throw-if-not-resolved=\"false\"></xref> to remove.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Xml.Serialization.XmlArrayItemAttributes.Count
  commentId: P:System.Xml.Serialization.XmlArrayItemAttributes.Count
  id: Count
  parent: System.Xml.Serialization.XmlArrayItemAttributes
  langs:
  - csharp
  - vb
  name: Count
  fullName: System.Xml.Serialization.XmlArrayItemAttributes.Count
  type: Property
  source:
    remote:
      path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.Manual.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Count
    path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.Manual.cs
    startLine: 33
  assemblies:
  - System.Xml.XmlSerializer
  namespace: System.Xml.Serialization
  syntax:
    content: public int Count { get; }
    content.vb: Public ReadOnly Property Count As Integer
    parameters: []
    return:
      type: System.Int32
  implements:
  - System.Collections.ICollection.Count
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Xml.Serialization.XmlArrayItemAttributes.System#Collections#ICollection#IsSynchronized
  commentId: P:System.Xml.Serialization.XmlArrayItemAttributes.System#Collections#ICollection#IsSynchronized
  id: System#Collections#ICollection#IsSynchronized
  isEii: true
  parent: System.Xml.Serialization.XmlArrayItemAttributes
  langs:
  - csharp
  - vb
  name: ICollection.IsSynchronized
  fullName: System.Xml.Serialization.XmlArrayItemAttributes.System.Collections.ICollection.IsSynchronized
  type: Property
  source:
    remote:
      path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.Manual.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: System.Collections.ICollection.IsSynchronized
    path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.Manual.cs
    startLine: 34
  assemblies:
  - System.Xml.XmlSerializer
  namespace: System.Xml.Serialization
  syntax:
    content: bool ICollection.IsSynchronized { get; }
    content.vb: ReadOnly WriteOnly Property System.Collections.ICollection.IsSynchronized As Boolean Implements ICollection.IsSynchronized
    parameters: []
    return:
      type: System.Boolean
  implements:
  - System.Collections.ICollection.IsSynchronized
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
  name.vb: System.Collections.ICollection.IsSynchronized
- uid: System.Xml.Serialization.XmlArrayItemAttributes.System#Collections#ICollection#SyncRoot
  commentId: P:System.Xml.Serialization.XmlArrayItemAttributes.System#Collections#ICollection#SyncRoot
  id: System#Collections#ICollection#SyncRoot
  isEii: true
  parent: System.Xml.Serialization.XmlArrayItemAttributes
  langs:
  - csharp
  - vb
  name: ICollection.SyncRoot
  fullName: System.Xml.Serialization.XmlArrayItemAttributes.System.Collections.ICollection.SyncRoot
  type: Property
  source:
    remote:
      path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.Manual.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: System.Collections.ICollection.SyncRoot
    path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.Manual.cs
    startLine: 35
  assemblies:
  - System.Xml.XmlSerializer
  namespace: System.Xml.Serialization
  syntax:
    content: object ICollection.SyncRoot { get; }
    content.vb: ReadOnly WriteOnly Property System.Collections.ICollection.SyncRoot As Object Implements ICollection.SyncRoot
    parameters: []
    return:
      type: System.Object
  implements:
  - System.Collections.ICollection.SyncRoot
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
  name.vb: System.Collections.ICollection.SyncRoot
- uid: System.Xml.Serialization.XmlArrayItemAttributes.System#Collections#IList#IsFixedSize
  commentId: P:System.Xml.Serialization.XmlArrayItemAttributes.System#Collections#IList#IsFixedSize
  id: System#Collections#IList#IsFixedSize
  isEii: true
  parent: System.Xml.Serialization.XmlArrayItemAttributes
  langs:
  - csharp
  - vb
  name: IList.IsFixedSize
  fullName: System.Xml.Serialization.XmlArrayItemAttributes.System.Collections.IList.IsFixedSize
  type: Property
  source:
    remote:
      path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.Manual.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: System.Collections.IList.IsFixedSize
    path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.Manual.cs
    startLine: 36
  assemblies:
  - System.Xml.XmlSerializer
  namespace: System.Xml.Serialization
  syntax:
    content: bool IList.IsFixedSize { get; }
    content.vb: ReadOnly WriteOnly Property System.Collections.IList.IsFixedSize As Boolean Implements IList.IsFixedSize
    parameters: []
    return:
      type: System.Boolean
  implements:
  - System.Collections.IList.IsFixedSize
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
  name.vb: System.Collections.IList.IsFixedSize
- uid: System.Xml.Serialization.XmlArrayItemAttributes.System#Collections#IList#IsReadOnly
  commentId: P:System.Xml.Serialization.XmlArrayItemAttributes.System#Collections#IList#IsReadOnly
  id: System#Collections#IList#IsReadOnly
  isEii: true
  parent: System.Xml.Serialization.XmlArrayItemAttributes
  langs:
  - csharp
  - vb
  name: IList.IsReadOnly
  fullName: System.Xml.Serialization.XmlArrayItemAttributes.System.Collections.IList.IsReadOnly
  type: Property
  source:
    remote:
      path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.Manual.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: System.Collections.IList.IsReadOnly
    path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.Manual.cs
    startLine: 37
  assemblies:
  - System.Xml.XmlSerializer
  namespace: System.Xml.Serialization
  syntax:
    content: bool IList.IsReadOnly { get; }
    content.vb: ReadOnly WriteOnly Property System.Collections.IList.IsReadOnly As Boolean Implements IList.IsReadOnly
    parameters: []
    return:
      type: System.Boolean
  implements:
  - System.Collections.IList.IsReadOnly
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
  name.vb: System.Collections.IList.IsReadOnly
- uid: System.Xml.Serialization.XmlArrayItemAttributes.System#Collections#IList#Item(System.Int32)
  commentId: P:System.Xml.Serialization.XmlArrayItemAttributes.System#Collections#IList#Item(System.Int32)
  id: System#Collections#IList#Item(System.Int32)
  isEii: true
  parent: System.Xml.Serialization.XmlArrayItemAttributes
  langs:
  - csharp
  - vb
  name: IList.Item[Int32]
  fullName: System.Xml.Serialization.XmlArrayItemAttributes.System.Collections.IList.Item[System.Int32]
  type: Property
  source:
    remote:
      path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.Manual.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: System.Collections.IList.this[]
    path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.Manual.cs
    startLine: 38
  assemblies:
  - System.Xml.XmlSerializer
  namespace: System.Xml.Serialization
  syntax:
    content: object IList.this[int index] { get; set; }
    content.vb: ReadOnly WriteOnly Property System.Collections.IList.Item(index As Integer) As Object Implements IList.this
    parameters:
    - id: index
      type: System.Int32
    return:
      type: System.Object
  implements:
  - System.Collections.IList.Item(System.Int32)
  modifiers.csharp:
  - get
  - set
  fullName.vb: System.Xml.Serialization.XmlArrayItemAttributes.System.Collections.IList.Item(System.Int32)
  name.vb: System.Collections.IList.Item(Int32)
- uid: System.Xml.Serialization.XmlArrayItemAttributes.Clear
  commentId: M:System.Xml.Serialization.XmlArrayItemAttributes.Clear
  id: Clear
  parent: System.Xml.Serialization.XmlArrayItemAttributes
  langs:
  - csharp
  - vb
  name: Clear()
  fullName: System.Xml.Serialization.XmlArrayItemAttributes.Clear()
  type: Method
  source:
    remote:
      path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.Manual.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Clear
    path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.Manual.cs
    startLine: 39
  assemblies:
  - System.Xml.XmlSerializer
  namespace: System.Xml.Serialization
  syntax:
    content: public void Clear()
    content.vb: Public Sub Clear
  implements:
  - System.Collections.IList.Clear
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Xml.Serialization.XmlArrayItemAttributes.GetEnumerator
  commentId: M:System.Xml.Serialization.XmlArrayItemAttributes.GetEnumerator
  id: GetEnumerator
  parent: System.Xml.Serialization.XmlArrayItemAttributes
  langs:
  - csharp
  - vb
  name: GetEnumerator()
  fullName: System.Xml.Serialization.XmlArrayItemAttributes.GetEnumerator()
  type: Method
  source:
    remote:
      path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.Manual.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetEnumerator
    path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.Manual.cs
    startLine: 40
  assemblies:
  - System.Xml.XmlSerializer
  namespace: System.Xml.Serialization
  syntax:
    content: public IEnumerator GetEnumerator()
    content.vb: Public Function GetEnumerator As IEnumerator
    return:
      type: System.Collections.IEnumerator
  implements:
  - System.Collections.IEnumerable.GetEnumerator
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Xml.Serialization.XmlArrayItemAttributes.RemoveAt(System.Int32)
  commentId: M:System.Xml.Serialization.XmlArrayItemAttributes.RemoveAt(System.Int32)
  id: RemoveAt(System.Int32)
  parent: System.Xml.Serialization.XmlArrayItemAttributes
  langs:
  - csharp
  - vb
  name: RemoveAt(Int32)
  fullName: System.Xml.Serialization.XmlArrayItemAttributes.RemoveAt(System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.Manual.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: RemoveAt
    path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.Manual.cs
    startLine: 41
  assemblies:
  - System.Xml.XmlSerializer
  namespace: System.Xml.Serialization
  syntax:
    content: public void RemoveAt(int index)
    content.vb: Public Sub RemoveAt(index As Integer)
    parameters:
    - id: index
      type: System.Int32
  implements:
  - System.Collections.IList.RemoveAt(System.Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Xml.Serialization.XmlArrayItemAttributes.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  commentId: M:System.Xml.Serialization.XmlArrayItemAttributes.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  id: System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  isEii: true
  parent: System.Xml.Serialization.XmlArrayItemAttributes
  langs:
  - csharp
  - vb
  name: ICollection.CopyTo(Array, Int32)
  fullName: System.Xml.Serialization.XmlArrayItemAttributes.System.Collections.ICollection.CopyTo(System.Array, System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.Manual.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: System.Collections.ICollection.CopyTo
    path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.Manual.cs
    startLine: 42
  assemblies:
  - System.Xml.XmlSerializer
  namespace: System.Xml.Serialization
  syntax:
    content: void ICollection.CopyTo(Array array, int index)
    content.vb: Sub System.Collections.ICollection.CopyTo(array As Array, index As Integer) Implements ICollection.CopyTo
    parameters:
    - id: array
      type: System.Array
    - id: index
      type: System.Int32
  implements:
  - System.Collections.ICollection.CopyTo(System.Array,System.Int32)
  name.vb: System.Collections.ICollection.CopyTo(Array, Int32)
- uid: System.Xml.Serialization.XmlArrayItemAttributes.System#Collections#IList#Add(System.Object)
  commentId: M:System.Xml.Serialization.XmlArrayItemAttributes.System#Collections#IList#Add(System.Object)
  id: System#Collections#IList#Add(System.Object)
  isEii: true
  parent: System.Xml.Serialization.XmlArrayItemAttributes
  langs:
  - csharp
  - vb
  name: IList.Add(Object)
  fullName: System.Xml.Serialization.XmlArrayItemAttributes.System.Collections.IList.Add(System.Object)
  type: Method
  source:
    remote:
      path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.Manual.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: System.Collections.IList.Add
    path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.Manual.cs
    startLine: 43
  assemblies:
  - System.Xml.XmlSerializer
  namespace: System.Xml.Serialization
  syntax:
    content: int IList.Add(object value)
    content.vb: Function System.Collections.IList.Add(value As Object) As Integer Implements IList.Add
    parameters:
    - id: value
      type: System.Object
    return:
      type: System.Int32
  implements:
  - System.Collections.IList.Add(System.Object)
  name.vb: System.Collections.IList.Add(Object)
- uid: System.Xml.Serialization.XmlArrayItemAttributes.System#Collections#IList#Contains(System.Object)
  commentId: M:System.Xml.Serialization.XmlArrayItemAttributes.System#Collections#IList#Contains(System.Object)
  id: System#Collections#IList#Contains(System.Object)
  isEii: true
  parent: System.Xml.Serialization.XmlArrayItemAttributes
  langs:
  - csharp
  - vb
  name: IList.Contains(Object)
  fullName: System.Xml.Serialization.XmlArrayItemAttributes.System.Collections.IList.Contains(System.Object)
  type: Method
  source:
    remote:
      path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.Manual.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: System.Collections.IList.Contains
    path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.Manual.cs
    startLine: 44
  assemblies:
  - System.Xml.XmlSerializer
  namespace: System.Xml.Serialization
  syntax:
    content: bool IList.Contains(object value)
    content.vb: Function System.Collections.IList.Contains(value As Object) As Boolean Implements IList.Contains
    parameters:
    - id: value
      type: System.Object
    return:
      type: System.Boolean
  implements:
  - System.Collections.IList.Contains(System.Object)
  name.vb: System.Collections.IList.Contains(Object)
- uid: System.Xml.Serialization.XmlArrayItemAttributes.System#Collections#IList#IndexOf(System.Object)
  commentId: M:System.Xml.Serialization.XmlArrayItemAttributes.System#Collections#IList#IndexOf(System.Object)
  id: System#Collections#IList#IndexOf(System.Object)
  isEii: true
  parent: System.Xml.Serialization.XmlArrayItemAttributes
  langs:
  - csharp
  - vb
  name: IList.IndexOf(Object)
  fullName: System.Xml.Serialization.XmlArrayItemAttributes.System.Collections.IList.IndexOf(System.Object)
  type: Method
  source:
    remote:
      path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.Manual.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: System.Collections.IList.IndexOf
    path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.Manual.cs
    startLine: 45
  assemblies:
  - System.Xml.XmlSerializer
  namespace: System.Xml.Serialization
  syntax:
    content: int IList.IndexOf(object value)
    content.vb: Function System.Collections.IList.IndexOf(value As Object) As Integer Implements IList.IndexOf
    parameters:
    - id: value
      type: System.Object
    return:
      type: System.Int32
  implements:
  - System.Collections.IList.IndexOf(System.Object)
  name.vb: System.Collections.IList.IndexOf(Object)
- uid: System.Xml.Serialization.XmlArrayItemAttributes.System#Collections#IList#Insert(System.Int32,System.Object)
  commentId: M:System.Xml.Serialization.XmlArrayItemAttributes.System#Collections#IList#Insert(System.Int32,System.Object)
  id: System#Collections#IList#Insert(System.Int32,System.Object)
  isEii: true
  parent: System.Xml.Serialization.XmlArrayItemAttributes
  langs:
  - csharp
  - vb
  name: IList.Insert(Int32, Object)
  fullName: System.Xml.Serialization.XmlArrayItemAttributes.System.Collections.IList.Insert(System.Int32, System.Object)
  type: Method
  source:
    remote:
      path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.Manual.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: System.Collections.IList.Insert
    path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.Manual.cs
    startLine: 46
  assemblies:
  - System.Xml.XmlSerializer
  namespace: System.Xml.Serialization
  syntax:
    content: void IList.Insert(int index, object value)
    content.vb: Sub System.Collections.IList.Insert(index As Integer, value As Object) Implements IList.Insert
    parameters:
    - id: index
      type: System.Int32
    - id: value
      type: System.Object
  implements:
  - System.Collections.IList.Insert(System.Int32,System.Object)
  name.vb: System.Collections.IList.Insert(Int32, Object)
- uid: System.Xml.Serialization.XmlArrayItemAttributes.System#Collections#IList#Remove(System.Object)
  commentId: M:System.Xml.Serialization.XmlArrayItemAttributes.System#Collections#IList#Remove(System.Object)
  id: System#Collections#IList#Remove(System.Object)
  isEii: true
  parent: System.Xml.Serialization.XmlArrayItemAttributes
  langs:
  - csharp
  - vb
  name: IList.Remove(Object)
  fullName: System.Xml.Serialization.XmlArrayItemAttributes.System.Collections.IList.Remove(System.Object)
  type: Method
  source:
    remote:
      path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.Manual.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: System.Collections.IList.Remove
    path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.Manual.cs
    startLine: 47
  assemblies:
  - System.Xml.XmlSerializer
  namespace: System.Xml.Serialization
  syntax:
    content: void IList.Remove(object value)
    content.vb: Sub System.Collections.IList.Remove(value As Object) Implements IList.Remove
    parameters:
    - id: value
      type: System.Object
  implements:
  - System.Collections.IList.Remove(System.Object)
  name.vb: System.Collections.IList.Remove(Object)
references:
- uid: System.Xml.Serialization
  isExternal: false
  name: System.Xml.Serialization
  fullName: System.Xml.Serialization
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System.Collections.IList
  parent: System.Collections
  isExternal: false
  name: IList
  fullName: System.Collections.IList
- uid: System.Collections.ICollection
  parent: System.Collections
  isExternal: false
  name: ICollection
  fullName: System.Collections.ICollection
- uid: System.Collections.IEnumerable
  parent: System.Collections
  isExternal: false
  name: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Collections
  isExternal: false
  name: System.Collections
  fullName: System.Collections
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  fullName: System.Int32
- uid: System.Xml.Serialization.XmlArrayItemAttribute
  parent: System.Xml.Serialization
  isExternal: false
  name: XmlArrayItemAttribute
  fullName: System.Xml.Serialization.XmlArrayItemAttribute
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  fullName: System.Boolean
- uid: System.Xml.Serialization.XmlArrayItemAttribute[]
  isExternal: false
  name: XmlArrayItemAttribute[]
  fullName: System.Xml.Serialization.XmlArrayItemAttribute[]
  fullname.vb: System.Xml.Serialization.XmlArrayItemAttribute()
  name.vb: XmlArrayItemAttribute()
  spec.csharp:
  - uid: System.Xml.Serialization.XmlArrayItemAttribute
    name: XmlArrayItemAttribute
    fullName: System.Xml.Serialization.XmlArrayItemAttribute
  - name: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Xml.Serialization.XmlArrayItemAttribute
    name: XmlArrayItemAttribute
    fullName: System.Xml.Serialization.XmlArrayItemAttribute
  - name: ()
    fullName: ()
- uid: System.Collections.ICollection.Count
  parent: System.Collections.ICollection
  isExternal: false
  name: Count
  fullName: System.Collections.ICollection.Count
- uid: System.Collections.ICollection.IsSynchronized
  parent: System.Collections.ICollection
  isExternal: false
  name: IsSynchronized
  fullName: System.Collections.ICollection.IsSynchronized
- uid: System.Collections.ICollection.SyncRoot
  parent: System.Collections.ICollection
  isExternal: false
  name: SyncRoot
  fullName: System.Collections.ICollection.SyncRoot
- uid: System.Collections.IList.IsFixedSize
  parent: System.Collections.IList
  isExternal: false
  name: IsFixedSize
  fullName: System.Collections.IList.IsFixedSize
- uid: System.Collections.IList.IsReadOnly
  parent: System.Collections.IList
  isExternal: false
  name: IsReadOnly
  fullName: System.Collections.IList.IsReadOnly
- uid: System.Collections.IList.Item(System.Int32)
  parent: System.Collections.IList
  isExternal: true
  name: Item[Int32]
  fullName: System.Collections.IList.Item[System.Int32]
  fullname.vb: System.Collections.IList.Item(System.Int32)
  name.vb: Item(Int32)
  spec.csharp:
  - uid: System.Collections.IList.Item(System.Int32)
    name: Item
    fullName: System.Collections.IList.Item
  - name: '['
    fullName: '['
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ']'
    fullName: ']'
  spec.vb:
  - uid: System.Collections.IList.Item(System.Int32)
    name: Item
    fullName: System.Collections.IList.Item
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
- uid: System.Collections.IList.Clear
  parent: System.Collections.IList
  isExternal: false
  name: Clear()
  fullName: System.Collections.IList.Clear()
  spec.csharp:
  - uid: System.Collections.IList.Clear
    name: Clear
    fullName: System.Collections.IList.Clear
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Collections.IList.Clear
    name: Clear
    fullName: System.Collections.IList.Clear
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Collections.IEnumerable.GetEnumerator
  parent: System.Collections.IEnumerable
  isExternal: false
  name: GetEnumerator()
  fullName: System.Collections.IEnumerable.GetEnumerator()
  spec.csharp:
  - uid: System.Collections.IEnumerable.GetEnumerator
    name: GetEnumerator
    fullName: System.Collections.IEnumerable.GetEnumerator
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Collections.IEnumerable.GetEnumerator
    name: GetEnumerator
    fullName: System.Collections.IEnumerable.GetEnumerator
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: false
  name: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Collections.IList.RemoveAt(System.Int32)
  parent: System.Collections.IList
  isExternal: true
  name: RemoveAt(Int32)
  fullName: System.Collections.IList.RemoveAt(System.Int32)
  spec.csharp:
  - uid: System.Collections.IList.RemoveAt(System.Int32)
    name: RemoveAt
    fullName: System.Collections.IList.RemoveAt
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Collections.IList.RemoveAt(System.Int32)
    name: RemoveAt
    fullName: System.Collections.IList.RemoveAt
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
- uid: System.Collections.ICollection.CopyTo(System.Array,System.Int32)
  parent: System.Collections.ICollection
  isExternal: true
  name: CopyTo(Array, Int32)
  fullName: System.Collections.ICollection.CopyTo(System.Array, System.Int32)
  spec.csharp:
  - uid: System.Collections.ICollection.CopyTo(System.Array,System.Int32)
    name: CopyTo
    fullName: System.Collections.ICollection.CopyTo
  - name: (
    fullName: (
  - uid: System.Array
    name: Array
    fullName: System.Array
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ICollection.CopyTo(System.Array,System.Int32)
    name: CopyTo
    fullName: System.Collections.ICollection.CopyTo
  - name: (
    fullName: (
  - uid: System.Array
    name: Array
    fullName: System.Array
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
- uid: System.Array
  parent: System
  isExternal: false
  name: Array
  fullName: System.Array
- uid: System.Collections.IList.Add(System.Object)
  parent: System.Collections.IList
  isExternal: true
  name: Add(Object)
  fullName: System.Collections.IList.Add(System.Object)
  spec.csharp:
  - uid: System.Collections.IList.Add(System.Object)
    name: Add
    fullName: System.Collections.IList.Add
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Collections.IList.Add(System.Object)
    name: Add
    fullName: System.Collections.IList.Add
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Collections.IList.Contains(System.Object)
  parent: System.Collections.IList
  isExternal: true
  name: Contains(Object)
  fullName: System.Collections.IList.Contains(System.Object)
  spec.csharp:
  - uid: System.Collections.IList.Contains(System.Object)
    name: Contains
    fullName: System.Collections.IList.Contains
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Collections.IList.Contains(System.Object)
    name: Contains
    fullName: System.Collections.IList.Contains
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Collections.IList.IndexOf(System.Object)
  parent: System.Collections.IList
  isExternal: true
  name: IndexOf(Object)
  fullName: System.Collections.IList.IndexOf(System.Object)
  spec.csharp:
  - uid: System.Collections.IList.IndexOf(System.Object)
    name: IndexOf
    fullName: System.Collections.IList.IndexOf
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Collections.IList.IndexOf(System.Object)
    name: IndexOf
    fullName: System.Collections.IList.IndexOf
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Collections.IList.Insert(System.Int32,System.Object)
  parent: System.Collections.IList
  isExternal: true
  name: Insert(Int32, Object)
  fullName: System.Collections.IList.Insert(System.Int32, System.Object)
  spec.csharp:
  - uid: System.Collections.IList.Insert(System.Int32,System.Object)
    name: Insert
    fullName: System.Collections.IList.Insert
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Collections.IList.Insert(System.Int32,System.Object)
    name: Insert
    fullName: System.Collections.IList.Insert
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Collections.IList.Remove(System.Object)
  parent: System.Collections.IList
  isExternal: true
  name: Remove(Object)
  fullName: System.Collections.IList.Remove(System.Object)
  spec.csharp:
  - uid: System.Collections.IList.Remove(System.Object)
    name: Remove
    fullName: System.Collections.IList.Remove
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Collections.IList.Remove(System.Object)
    name: Remove
    fullName: System.Collections.IList.Remove
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
