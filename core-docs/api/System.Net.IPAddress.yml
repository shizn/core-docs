items:
- uid: System.Net.IPAddress
  commentId: T:System.Net.IPAddress
  id: IPAddress
  parent: System.Net
  children:
  - System.Net.IPAddress.#ctor(System.Byte[])
  - System.Net.IPAddress.#ctor(System.Byte[],System.Int64)
  - System.Net.IPAddress.#ctor(System.Int64)
  - System.Net.IPAddress.AddressFamily
  - System.Net.IPAddress.Any
  - System.Net.IPAddress.Broadcast
  - System.Net.IPAddress.Equals(System.Object)
  - System.Net.IPAddress.GetAddressBytes
  - System.Net.IPAddress.GetHashCode
  - System.Net.IPAddress.HostToNetworkOrder(System.Int16)
  - System.Net.IPAddress.HostToNetworkOrder(System.Int32)
  - System.Net.IPAddress.HostToNetworkOrder(System.Int64)
  - System.Net.IPAddress.IPv6Any
  - System.Net.IPAddress.IPv6Loopback
  - System.Net.IPAddress.IPv6None
  - System.Net.IPAddress.IsIPv4MappedToIPv6
  - System.Net.IPAddress.IsIPv6LinkLocal
  - System.Net.IPAddress.IsIPv6Multicast
  - System.Net.IPAddress.IsIPv6SiteLocal
  - System.Net.IPAddress.IsIPv6Teredo
  - System.Net.IPAddress.IsLoopback(System.Net.IPAddress)
  - System.Net.IPAddress.Loopback
  - System.Net.IPAddress.MapToIPv4
  - System.Net.IPAddress.MapToIPv6
  - System.Net.IPAddress.NetworkToHostOrder(System.Int16)
  - System.Net.IPAddress.NetworkToHostOrder(System.Int32)
  - System.Net.IPAddress.NetworkToHostOrder(System.Int64)
  - System.Net.IPAddress.None
  - System.Net.IPAddress.Parse(System.String)
  - System.Net.IPAddress.ScopeId
  - System.Net.IPAddress.ToString
  - System.Net.IPAddress.TryParse(System.String,System.Net.IPAddress@)
  langs:
  - csharp
  - vb
  name: IPAddress
  fullName: System.Net.IPAddress
  type: Class
  source:
    remote:
      path: src/System.Net.Primitives/src/System/Net/IPAddress.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IPAddress
    path: src/System.Net.Primitives/src/System/Net/IPAddress.cs
    startLine: 14
  assemblies:
  - System.Net.Primitives
  namespace: System.Net
  syntax:
    content: 'public class IPAddress : object'
    content.vb: >-
      Public Class IPAddress
          Inherits Object
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: System.Net.IPAddress.Any
  commentId: F:System.Net.IPAddress.Any
  id: Any
  parent: System.Net.IPAddress
  langs:
  - csharp
  - vb
  name: Any
  fullName: System.Net.IPAddress.Any
  type: Field
  source:
    remote:
      path: src/System.Net.Primitives/src/System/Net/IPAddress.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Any
    path: src/System.Net.Primitives/src/System/Net/IPAddress.cs
    startLine: 16
  assemblies:
  - System.Net.Primitives
  namespace: System.Net
  syntax:
    content: public static readonly IPAddress Any
    content.vb: Public Shared ReadOnly Any As IPAddress
    return:
      type: System.Net.IPAddress
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: System.Net.IPAddress.Broadcast
  commentId: F:System.Net.IPAddress.Broadcast
  id: Broadcast
  parent: System.Net.IPAddress
  langs:
  - csharp
  - vb
  name: Broadcast
  fullName: System.Net.IPAddress.Broadcast
  type: Field
  source:
    remote:
      path: src/System.Net.Primitives/src/System/Net/IPAddress.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Broadcast
    path: src/System.Net.Primitives/src/System/Net/IPAddress.cs
    startLine: 18
  assemblies:
  - System.Net.Primitives
  namespace: System.Net
  syntax:
    content: public static readonly IPAddress Broadcast
    content.vb: Public Shared ReadOnly Broadcast As IPAddress
    return:
      type: System.Net.IPAddress
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: System.Net.IPAddress.IPv6Any
  commentId: F:System.Net.IPAddress.IPv6Any
  id: IPv6Any
  parent: System.Net.IPAddress
  langs:
  - csharp
  - vb
  name: IPv6Any
  fullName: System.Net.IPAddress.IPv6Any
  type: Field
  source:
    remote:
      path: src/System.Net.Primitives/src/System/Net/IPAddress.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IPv6Any
    path: src/System.Net.Primitives/src/System/Net/IPAddress.cs
    startLine: 23
  assemblies:
  - System.Net.Primitives
  namespace: System.Net
  syntax:
    content: public static readonly IPAddress IPv6Any
    content.vb: Public Shared ReadOnly IPv6Any As IPAddress
    return:
      type: System.Net.IPAddress
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: System.Net.IPAddress.IPv6Loopback
  commentId: F:System.Net.IPAddress.IPv6Loopback
  id: IPv6Loopback
  parent: System.Net.IPAddress
  langs:
  - csharp
  - vb
  name: IPv6Loopback
  fullName: System.Net.IPAddress.IPv6Loopback
  type: Field
  source:
    remote:
      path: src/System.Net.Primitives/src/System/Net/IPAddress.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IPv6Loopback
    path: src/System.Net.Primitives/src/System/Net/IPAddress.cs
    startLine: 24
  assemblies:
  - System.Net.Primitives
  namespace: System.Net
  syntax:
    content: public static readonly IPAddress IPv6Loopback
    content.vb: Public Shared ReadOnly IPv6Loopback As IPAddress
    return:
      type: System.Net.IPAddress
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: System.Net.IPAddress.IPv6None
  commentId: F:System.Net.IPAddress.IPv6None
  id: IPv6None
  parent: System.Net.IPAddress
  langs:
  - csharp
  - vb
  name: IPv6None
  fullName: System.Net.IPAddress.IPv6None
  type: Field
  source:
    remote:
      path: src/System.Net.Primitives/src/System/Net/IPAddress.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IPv6None
    path: src/System.Net.Primitives/src/System/Net/IPAddress.cs
    startLine: 25
  assemblies:
  - System.Net.Primitives
  namespace: System.Net
  syntax:
    content: public static readonly IPAddress IPv6None
    content.vb: Public Shared ReadOnly IPv6None As IPAddress
    return:
      type: System.Net.IPAddress
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: System.Net.IPAddress.Loopback
  commentId: F:System.Net.IPAddress.Loopback
  id: Loopback
  parent: System.Net.IPAddress
  langs:
  - csharp
  - vb
  name: Loopback
  fullName: System.Net.IPAddress.Loopback
  type: Field
  source:
    remote:
      path: src/System.Net.Primitives/src/System/Net/IPAddress.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Loopback
    path: src/System.Net.Primitives/src/System/Net/IPAddress.cs
    startLine: 17
  assemblies:
  - System.Net.Primitives
  namespace: System.Net
  syntax:
    content: public static readonly IPAddress Loopback
    content.vb: Public Shared ReadOnly Loopback As IPAddress
    return:
      type: System.Net.IPAddress
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: System.Net.IPAddress.None
  commentId: F:System.Net.IPAddress.None
  id: None
  parent: System.Net.IPAddress
  langs:
  - csharp
  - vb
  name: None
  fullName: System.Net.IPAddress.None
  type: Field
  source:
    remote:
      path: src/System.Net.Primitives/src/System/Net/IPAddress.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: None
    path: src/System.Net.Primitives/src/System/Net/IPAddress.cs
    startLine: 19
  assemblies:
  - System.Net.Primitives
  namespace: System.Net
  syntax:
    content: public static readonly IPAddress None
    content.vb: Public Shared ReadOnly None As IPAddress
    return:
      type: System.Net.IPAddress
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: System.Net.IPAddress.#ctor(System.Byte[])
  commentId: M:System.Net.IPAddress.#ctor(System.Byte[])
  id: '#ctor(System.Byte[])'
  parent: System.Net.IPAddress
  langs:
  - csharp
  - vb
  name: IPAddress(Byte[])
  fullName: System.Net.IPAddress.IPAddress(System.Byte[])
  type: Constructor
  source:
    remote:
      path: src/System.Net.Primitives/src/System/Net/IPAddress.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Net.Primitives/src/System/Net/IPAddress.cs
    startLine: 165
  assemblies:
  - System.Net.Primitives
  namespace: System.Net
  syntax:
    content: public IPAddress(byte[] address)
    content.vb: Public Sub New(address As Byte())
    parameters:
    - id: address
      type: System.Byte[]
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Net.IPAddress.IPAddress(System.Byte())
  name.vb: IPAddress(Byte())
- uid: System.Net.IPAddress.#ctor(System.Byte[],System.Int64)
  commentId: M:System.Net.IPAddress.#ctor(System.Byte[],System.Int64)
  id: '#ctor(System.Byte[],System.Int64)'
  parent: System.Net.IPAddress
  langs:
  - csharp
  - vb
  name: IPAddress(Byte[], Int64)
  fullName: System.Net.IPAddress.IPAddress(System.Byte[], System.Int64)
  type: Constructor
  source:
    remote:
      path: src/System.Net.Primitives/src/System/Net/IPAddress.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Net.Primitives/src/System/Net/IPAddress.cs
    startLine: 123
  assemblies:
  - System.Net.Primitives
  namespace: System.Net
  syntax:
    content: public IPAddress(byte[] address, long scopeid)
    content.vb: Public Sub New(address As Byte(), scopeid As Long)
    parameters:
    - id: address
      type: System.Byte[]
    - id: scopeid
      type: System.Int64
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Net.IPAddress.IPAddress(System.Byte(), System.Int64)
  name.vb: IPAddress(Byte(), Int64)
- uid: System.Net.IPAddress.#ctor(System.Int64)
  commentId: M:System.Net.IPAddress.#ctor(System.Int64)
  id: '#ctor(System.Int64)'
  parent: System.Net.IPAddress
  langs:
  - csharp
  - vb
  name: IPAddress(Int64)
  fullName: System.Net.IPAddress.IPAddress(System.Int64)
  type: Constructor
  source:
    remote:
      path: src/System.Net.Primitives/src/System/Net/IPAddress.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Net.Primitives/src/System/Net/IPAddress.cs
    startLine: 108
  assemblies:
  - System.Net.Primitives
  namespace: System.Net
  syntax:
    content: public IPAddress(long newAddress)
    content.vb: Public Sub New(newAddress As Long)
    parameters:
    - id: newAddress
      type: System.Int64
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Net.IPAddress.AddressFamily
  commentId: P:System.Net.IPAddress.AddressFamily
  id: AddressFamily
  parent: System.Net.IPAddress
  langs:
  - csharp
  - vb
  name: AddressFamily
  fullName: System.Net.IPAddress.AddressFamily
  type: Property
  source:
    remote:
      path: src/System.Net.Primitives/src/System/Net/IPAddress.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: AddressFamily
    path: src/System.Net.Primitives/src/System/Net/IPAddress.cs
    startLine: 245
  assemblies:
  - System.Net.Primitives
  namespace: System.Net
  syntax:
    content: public AddressFamily AddressFamily { get; }
    content.vb: Public ReadOnly Property AddressFamily As AddressFamily
    parameters: []
    return:
      type: System.Net.Sockets.AddressFamily
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Net.IPAddress.IsIPv4MappedToIPv6
  commentId: P:System.Net.IPAddress.IsIPv4MappedToIPv6
  id: IsIPv4MappedToIPv6
  parent: System.Net.IPAddress
  langs:
  - csharp
  - vb
  name: IsIPv4MappedToIPv6
  fullName: System.Net.IPAddress.IsIPv4MappedToIPv6
  type: Property
  source:
    remote:
      path: src/System.Net.Primitives/src/System/Net/IPAddress.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IsIPv4MappedToIPv6
    path: src/System.Net.Primitives/src/System/Net/IPAddress.cs
    startLine: 427
  assemblies:
  - System.Net.Primitives
  namespace: System.Net
  syntax:
    content: public bool IsIPv4MappedToIPv6 { get; }
    content.vb: Public ReadOnly Property IsIPv4MappedToIPv6 As Boolean
    parameters: []
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Net.IPAddress.IsIPv6LinkLocal
  commentId: P:System.Net.IPAddress.IsIPv6LinkLocal
  id: IsIPv6LinkLocal
  parent: System.Net.IPAddress
  langs:
  - csharp
  - vb
  name: IsIPv6LinkLocal
  fullName: System.Net.IPAddress.IsIPv6LinkLocal
  type: Property
  source:
    remote:
      path: src/System.Net.Primitives/src/System/Net/IPAddress.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IsIPv6LinkLocal
    path: src/System.Net.Primitives/src/System/Net/IPAddress.cs
    startLine: 395
  assemblies:
  - System.Net.Primitives
  namespace: System.Net
  syntax:
    content: public bool IsIPv6LinkLocal { get; }
    content.vb: Public ReadOnly Property IsIPv6LinkLocal As Boolean
    parameters: []
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Net.IPAddress.IsIPv6Multicast
  commentId: P:System.Net.IPAddress.IsIPv6Multicast
  id: IsIPv6Multicast
  parent: System.Net.IPAddress
  langs:
  - csharp
  - vb
  name: IsIPv6Multicast
  fullName: System.Net.IPAddress.IsIPv6Multicast
  type: Property
  source:
    remote:
      path: src/System.Net.Primitives/src/System/Net/IPAddress.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IsIPv6Multicast
    path: src/System.Net.Primitives/src/System/Net/IPAddress.cs
    startLine: 382
  assemblies:
  - System.Net.Primitives
  namespace: System.Net
  syntax:
    content: public bool IsIPv6Multicast { get; }
    content.vb: Public ReadOnly Property IsIPv6Multicast As Boolean
    parameters: []
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Net.IPAddress.IsIPv6SiteLocal
  commentId: P:System.Net.IPAddress.IsIPv6SiteLocal
  id: IsIPv6SiteLocal
  parent: System.Net.IPAddress
  langs:
  - csharp
  - vb
  name: IsIPv6SiteLocal
  fullName: System.Net.IPAddress.IsIPv6SiteLocal
  type: Property
  source:
    remote:
      path: src/System.Net.Primitives/src/System/Net/IPAddress.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IsIPv6SiteLocal
    path: src/System.Net.Primitives/src/System/Net/IPAddress.cs
    startLine: 408
  assemblies:
  - System.Net.Primitives
  namespace: System.Net
  syntax:
    content: public bool IsIPv6SiteLocal { get; }
    content.vb: Public ReadOnly Property IsIPv6SiteLocal As Boolean
    parameters: []
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Net.IPAddress.IsIPv6Teredo
  commentId: P:System.Net.IPAddress.IsIPv6Teredo
  id: IsIPv6Teredo
  parent: System.Net.IPAddress
  langs:
  - csharp
  - vb
  name: IsIPv6Teredo
  fullName: System.Net.IPAddress.IsIPv6Teredo
  type: Property
  source:
    remote:
      path: src/System.Net.Primitives/src/System/Net/IPAddress.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IsIPv6Teredo
    path: src/System.Net.Primitives/src/System/Net/IPAddress.cs
    startLine: 416
  assemblies:
  - System.Net.Primitives
  namespace: System.Net
  syntax:
    content: public bool IsIPv6Teredo { get; }
    content.vb: Public ReadOnly Property IsIPv6Teredo As Boolean
    parameters: []
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Net.IPAddress.ScopeId
  commentId: P:System.Net.IPAddress.ScopeId
  id: ScopeId
  parent: System.Net.IPAddress
  langs:
  - csharp
  - vb
  name: ScopeId
  fullName: System.Net.IPAddress.ScopeId
  type: Property
  source:
    remote:
      path: src/System.Net.Primitives/src/System/Net/IPAddress.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ScopeId
    path: src/System.Net.Primitives/src/System/Net/IPAddress.cs
    startLine: 266
  assemblies:
  - System.Net.Primitives
  namespace: System.Net
  syntax:
    content: public long ScopeId { get; set; }
    content.vb: Public Property ScopeId As Long
    parameters: []
    return:
      type: System.Int64
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Net.IPAddress.Equals(System.Object)
  commentId: M:System.Net.IPAddress.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Net.IPAddress
  langs:
  - csharp
  - vb
  name: Equals(Object)
  fullName: System.Net.IPAddress.Equals(System.Object)
  type: Method
  source:
    remote:
      path: src/System.Net.Primitives/src/System/Net/IPAddress.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Equals
    path: src/System.Net.Primitives/src/System/Net/IPAddress.cs
    startLine: 486
  assemblies:
  - System.Net.Primitives
  namespace: System.Net
  syntax:
    content: public override bool Equals(object comparand)
    content.vb: Public Overrides Function Equals(comparand As Object) As Boolean
    parameters:
    - id: comparand
      type: System.Object
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Net.IPAddress.GetAddressBytes
  commentId: M:System.Net.IPAddress.GetAddressBytes
  id: GetAddressBytes
  parent: System.Net.IPAddress
  langs:
  - csharp
  - vb
  name: GetAddressBytes()
  fullName: System.Net.IPAddress.GetAddressBytes()
  type: Method
  source:
    remote:
      path: src/System.Net.Primitives/src/System/Net/IPAddress.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetAddressBytes
    path: src/System.Net.Primitives/src/System/Net/IPAddress.cs
    startLine: 219
  assemblies:
  - System.Net.Primitives
  namespace: System.Net
  syntax:
    content: public byte[] GetAddressBytes()
    content.vb: Public Function GetAddressBytes As Byte()
    return:
      type: System.Byte[]
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Net.IPAddress.GetHashCode
  commentId: M:System.Net.IPAddress.GetHashCode
  id: GetHashCode
  parent: System.Net.IPAddress
  langs:
  - csharp
  - vb
  name: GetHashCode()
  fullName: System.Net.IPAddress.GetHashCode()
  type: Method
  source:
    remote:
      path: src/System.Net.Primitives/src/System/Net/IPAddress.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetHashCode
    path: src/System.Net.Primitives/src/System/Net/IPAddress.cs
    startLine: 491
  assemblies:
  - System.Net.Primitives
  namespace: System.Net
  syntax:
    content: public override int GetHashCode()
    content.vb: Public Overrides Function GetHashCode As Integer
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Net.IPAddress.HostToNetworkOrder(System.Int16)
  commentId: M:System.Net.IPAddress.HostToNetworkOrder(System.Int16)
  id: HostToNetworkOrder(System.Int16)
  parent: System.Net.IPAddress
  langs:
  - csharp
  - vb
  name: HostToNetworkOrder(Int16)
  fullName: System.Net.IPAddress.HostToNetworkOrder(System.Int16)
  type: Method
  source:
    remote:
      path: src/System.Net.Primitives/src/System/Net/IPAddress.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: HostToNetworkOrder
    path: src/System.Net.Primitives/src/System/Net/IPAddress.cs
    startLine: 335
  assemblies:
  - System.Net.Primitives
  namespace: System.Net
  syntax:
    content: public static short HostToNetworkOrder(short host)
    content.vb: Public Shared Function HostToNetworkOrder(host As Short) As Short
    parameters:
    - id: host
      type: System.Int16
    return:
      type: System.Int16
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Net.IPAddress.HostToNetworkOrder(System.Int32)
  commentId: M:System.Net.IPAddress.HostToNetworkOrder(System.Int32)
  id: HostToNetworkOrder(System.Int32)
  parent: System.Net.IPAddress
  langs:
  - csharp
  - vb
  name: HostToNetworkOrder(Int32)
  fullName: System.Net.IPAddress.HostToNetworkOrder(System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Net.Primitives/src/System/Net/IPAddress.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: HostToNetworkOrder
    path: src/System.Net.Primitives/src/System/Net/IPAddress.cs
    startLine: 325
  assemblies:
  - System.Net.Primitives
  namespace: System.Net
  syntax:
    content: public static int HostToNetworkOrder(int host)
    content.vb: Public Shared Function HostToNetworkOrder(host As Integer) As Integer
    parameters:
    - id: host
      type: System.Int32
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Net.IPAddress.HostToNetworkOrder(System.Int64)
  commentId: M:System.Net.IPAddress.HostToNetworkOrder(System.Int64)
  id: HostToNetworkOrder(System.Int64)
  parent: System.Net.IPAddress
  langs:
  - csharp
  - vb
  name: HostToNetworkOrder(Int64)
  fullName: System.Net.IPAddress.HostToNetworkOrder(System.Int64)
  type: Method
  source:
    remote:
      path: src/System.Net.Primitives/src/System/Net/IPAddress.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: HostToNetworkOrder
    path: src/System.Net.Primitives/src/System/Net/IPAddress.cs
    startLine: 315
  assemblies:
  - System.Net.Primitives
  namespace: System.Net
  syntax:
    content: public static long HostToNetworkOrder(long host)
    content.vb: Public Shared Function HostToNetworkOrder(host As Long) As Long
    parameters:
    - id: host
      type: System.Int64
    return:
      type: System.Int64
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Net.IPAddress.IsLoopback(System.Net.IPAddress)
  commentId: M:System.Net.IPAddress.IsLoopback(System.Net.IPAddress)
  id: IsLoopback(System.Net.IPAddress)
  parent: System.Net.IPAddress
  langs:
  - csharp
  - vb
  name: IsLoopback(IPAddress)
  fullName: System.Net.IPAddress.IsLoopback(System.Net.IPAddress)
  type: Method
  source:
    remote:
      path: src/System.Net.Primitives/src/System/Net/IPAddress.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IsLoopback
    path: src/System.Net.Primitives/src/System/Net/IPAddress.cs
    startLine: 359
  assemblies:
  - System.Net.Primitives
  namespace: System.Net
  syntax:
    content: public static bool IsLoopback(IPAddress address)
    content.vb: Public Shared Function IsLoopback(address As IPAddress) As Boolean
    parameters:
    - id: address
      type: System.Net.IPAddress
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Net.IPAddress.MapToIPv4
  commentId: M:System.Net.IPAddress.MapToIPv4
  id: MapToIPv4
  parent: System.Net.IPAddress
  langs:
  - csharp
  - vb
  name: MapToIPv4()
  fullName: System.Net.IPAddress.MapToIPv4()
  type: Method
  source:
    remote:
      path: src/System.Net.Primitives/src/System/Net/IPAddress.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: MapToIPv4
    path: src/System.Net.Primitives/src/System/Net/IPAddress.cs
    startLine: 539
  assemblies:
  - System.Net.Primitives
  namespace: System.Net
  syntax:
    content: public IPAddress MapToIPv4()
    content.vb: Public Function MapToIPv4 As IPAddress
    return:
      type: System.Net.IPAddress
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Net.IPAddress.MapToIPv6
  commentId: M:System.Net.IPAddress.MapToIPv6
  id: MapToIPv6
  parent: System.Net.IPAddress
  langs:
  - csharp
  - vb
  name: MapToIPv6()
  fullName: System.Net.IPAddress.MapToIPv6()
  type: Method
  source:
    remote:
      path: src/System.Net.Primitives/src/System/Net/IPAddress.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: MapToIPv6
    path: src/System.Net.Primitives/src/System/Net/IPAddress.cs
    startLine: 521
  assemblies:
  - System.Net.Primitives
  namespace: System.Net
  syntax:
    content: public IPAddress MapToIPv6()
    content.vb: Public Function MapToIPv6 As IPAddress
    return:
      type: System.Net.IPAddress
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Net.IPAddress.NetworkToHostOrder(System.Int16)
  commentId: M:System.Net.IPAddress.NetworkToHostOrder(System.Int16)
  id: NetworkToHostOrder(System.Int16)
  parent: System.Net.IPAddress
  langs:
  - csharp
  - vb
  name: NetworkToHostOrder(Int16)
  fullName: System.Net.IPAddress.NetworkToHostOrder(System.Int16)
  type: Method
  source:
    remote:
      path: src/System.Net.Primitives/src/System/Net/IPAddress.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: NetworkToHostOrder
    path: src/System.Net.Primitives/src/System/Net/IPAddress.cs
    startLine: 354
  assemblies:
  - System.Net.Primitives
  namespace: System.Net
  syntax:
    content: public static short NetworkToHostOrder(short network)
    content.vb: Public Shared Function NetworkToHostOrder(network As Short) As Short
    parameters:
    - id: network
      type: System.Int16
    return:
      type: System.Int16
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Net.IPAddress.NetworkToHostOrder(System.Int32)
  commentId: M:System.Net.IPAddress.NetworkToHostOrder(System.Int32)
  id: NetworkToHostOrder(System.Int32)
  parent: System.Net.IPAddress
  langs:
  - csharp
  - vb
  name: NetworkToHostOrder(Int32)
  fullName: System.Net.IPAddress.NetworkToHostOrder(System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Net.Primitives/src/System/Net/IPAddress.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: NetworkToHostOrder
    path: src/System.Net.Primitives/src/System/Net/IPAddress.cs
    startLine: 349
  assemblies:
  - System.Net.Primitives
  namespace: System.Net
  syntax:
    content: public static int NetworkToHostOrder(int network)
    content.vb: Public Shared Function NetworkToHostOrder(network As Integer) As Integer
    parameters:
    - id: network
      type: System.Int32
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Net.IPAddress.NetworkToHostOrder(System.Int64)
  commentId: M:System.Net.IPAddress.NetworkToHostOrder(System.Int64)
  id: NetworkToHostOrder(System.Int64)
  parent: System.Net.IPAddress
  langs:
  - csharp
  - vb
  name: NetworkToHostOrder(Int64)
  fullName: System.Net.IPAddress.NetworkToHostOrder(System.Int64)
  type: Method
  source:
    remote:
      path: src/System.Net.Primitives/src/System/Net/IPAddress.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: NetworkToHostOrder
    path: src/System.Net.Primitives/src/System/Net/IPAddress.cs
    startLine: 344
  assemblies:
  - System.Net.Primitives
  namespace: System.Net
  syntax:
    content: public static long NetworkToHostOrder(long network)
    content.vb: Public Shared Function NetworkToHostOrder(network As Long) As Long
    parameters:
    - id: network
      type: System.Int64
    return:
      type: System.Int64
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Net.IPAddress.Parse(System.String)
  commentId: M:System.Net.IPAddress.Parse(System.String)
  id: Parse(System.String)
  parent: System.Net.IPAddress
  langs:
  - csharp
  - vb
  name: Parse(String)
  fullName: System.Net.IPAddress.Parse(System.String)
  type: Method
  source:
    remote:
      path: src/System.Net.Primitives/src/System/Net/IPAddress.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Parse
    path: src/System.Net.Primitives/src/System/Net/IPAddress.cs
    startLine: 209
  assemblies:
  - System.Net.Primitives
  namespace: System.Net
  syntax:
    content: public static IPAddress Parse(string ipString)
    content.vb: Public Shared Function Parse(ipString As String) As IPAddress
    parameters:
    - id: ipString
      type: System.String
    return:
      type: System.Net.IPAddress
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Net.IPAddress.ToString
  commentId: M:System.Net.IPAddress.ToString
  id: ToString
  parent: System.Net.IPAddress
  langs:
  - csharp
  - vb
  name: ToString()
  fullName: System.Net.IPAddress.ToString()
  type: Method
  source:
    remote:
      path: src/System.Net.Primitives/src/System/Net/IPAddress.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ToString
    path: src/System.Net.Primitives/src/System/Net/IPAddress.cs
    startLine: 303
  assemblies:
  - System.Net.Primitives
  namespace: System.Net
  syntax:
    content: public override string ToString()
    content.vb: Public Overrides Function ToString As String
    return:
      type: System.String
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Net.IPAddress.TryParse(System.String,System.Net.IPAddress@)
  commentId: M:System.Net.IPAddress.TryParse(System.String,System.Net.IPAddress@)
  id: TryParse(System.String,System.Net.IPAddress@)
  parent: System.Net.IPAddress
  langs:
  - csharp
  - vb
  name: TryParse(String, out IPAddress)
  fullName: System.Net.IPAddress.TryParse(System.String, out System.Net.IPAddress)
  type: Method
  source:
    remote:
      path: src/System.Net.Primitives/src/System/Net/IPAddress.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: TryParse
    path: src/System.Net.Primitives/src/System/Net/IPAddress.cs
    startLine: 203
  assemblies:
  - System.Net.Primitives
  namespace: System.Net
  syntax:
    content: public static bool TryParse(string ipString, out IPAddress address)
    content.vb: Public Shared Function TryParse(ipString As String, ByRef address As IPAddress) As Boolean
    parameters:
    - id: ipString
      type: System.String
    - id: address
      type: System.Net.IPAddress
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Net.IPAddress.TryParse(System.String, ByRef System.Net.IPAddress)
  name.vb: TryParse(String, ByRef IPAddress)
references:
- uid: System.Net
  isExternal: false
  name: System.Net
  fullName: System.Net
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Net.IPAddress
  parent: System.Net
  isExternal: false
  name: IPAddress
  fullName: System.Net.IPAddress
- uid: System.Byte[]
  isExternal: false
  name: Byte[]
  fullName: System.Byte[]
  fullname.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
  - name: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
  - name: ()
    fullName: ()
- uid: System.Int64
  parent: System
  isExternal: false
  name: Int64
  fullName: System.Int64
- uid: System.Net.Sockets.AddressFamily
  parent: System.Net.Sockets
  isExternal: false
  name: AddressFamily
  fullName: System.Net.Sockets.AddressFamily
- uid: System.Net.Sockets
  isExternal: false
  name: System.Net.Sockets
  fullName: System.Net.Sockets
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  fullName: System.Boolean
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  fullName: System.Int32
- uid: System.Int16
  parent: System
  isExternal: false
  name: Int16
  fullName: System.Int16
- uid: System.String
  parent: System
  isExternal: false
  name: String
  fullName: System.String
