items:
- uid: System.Net.Security.AuthenticationLevel
  commentId: T:System.Net.Security.AuthenticationLevel
  id: AuthenticationLevel
  parent: System.Net.Security
  children:
  - System.Net.Security.AuthenticationLevel.MutualAuthRequested
  - System.Net.Security.AuthenticationLevel.MutualAuthRequired
  - System.Net.Security.AuthenticationLevel.None
  langs:
  - csharp
  - vb
  name: AuthenticationLevel
  fullName: System.Net.Security.AuthenticationLevel
  type: Enum
  source:
    remote:
      path: src/System.Net.Primitives/src/System/Net/SecureProtocols/NegotiateEnumTypes.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: AuthenticationLevel
    path: src/System.Net.Primitives/src/System/Net/SecureProtocols/NegotiateEnumTypes.cs
    startLine: 7
  assemblies:
  - System.Net.Primitives
  namespace: System.Net.Security
  summary: Specifies client requirements for authentication and impersonation when using the <xref href="System.Net.WebRequest" data-throw-if-not-resolved="false"></xref> class and derived classes to request a resource.
  syntax:
    content: 'public enum AuthenticationLevel : int'
    content.vb: Public Enum AuthenticationLevel As Integer
  modifiers.csharp:
  - public
  - enum
  modifiers.vb:
  - Public
  - Enum
- uid: System.Net.Security.AuthenticationLevel.MutualAuthRequested
  commentId: F:System.Net.Security.AuthenticationLevel.MutualAuthRequested
  id: MutualAuthRequested
  parent: System.Net.Security.AuthenticationLevel
  langs:
  - csharp
  - vb
  name: MutualAuthRequested
  fullName: System.Net.Security.AuthenticationLevel.MutualAuthRequested
  type: Field
  source:
    remote:
      path: src/System.Net.Primitives/src/System/Net/SecureProtocols/NegotiateEnumTypes.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: MutualAuthRequested
    path: src/System.Net.Primitives/src/System/Net/SecureProtocols/NegotiateEnumTypes.cs
    startLine: 10
  assemblies:
  - System.Net.Primitives
  namespace: System.Net.Security
  summary: The client and server should be authenticated. The request does not fail if the server is not authenticated. To determine whether mutual authentication occurred, check the value of the <xref href="System.Net.WebResponse.IsMutuallyAuthenticated" data-throw-if-not-resolved="false"></xref> property.
  syntax:
    content: MutualAuthRequested = null
    content.vb: MutualAuthRequested = Nothing
    return:
      type: System.Net.Security.AuthenticationLevel
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Net.Security.AuthenticationLevel.MutualAuthRequired
  commentId: F:System.Net.Security.AuthenticationLevel.MutualAuthRequired
  id: MutualAuthRequired
  parent: System.Net.Security.AuthenticationLevel
  langs:
  - csharp
  - vb
  name: MutualAuthRequired
  fullName: System.Net.Security.AuthenticationLevel.MutualAuthRequired
  type: Field
  source:
    remote:
      path: src/System.Net.Primitives/src/System/Net/SecureProtocols/NegotiateEnumTypes.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: MutualAuthRequired
    path: src/System.Net.Primitives/src/System/Net/SecureProtocols/NegotiateEnumTypes.cs
    startLine: 11
  assemblies:
  - System.Net.Primitives
  namespace: System.Net.Security
  summary: The client and server should be authenticated. If the server is not authenticated, your application will receive an <xref href="System.IO.IOException" data-throw-if-not-resolved="false"></xref> with a <xref href="System.Net.ProtocolViolationException" data-throw-if-not-resolved="false"></xref> inner exception that indicates that mutual authentication failed
  syntax:
    content: MutualAuthRequired = null
    content.vb: MutualAuthRequired = Nothing
    return:
      type: System.Net.Security.AuthenticationLevel
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Net.Security.AuthenticationLevel.None
  commentId: F:System.Net.Security.AuthenticationLevel.None
  id: None
  parent: System.Net.Security.AuthenticationLevel
  langs:
  - csharp
  - vb
  name: None
  fullName: System.Net.Security.AuthenticationLevel.None
  type: Field
  source:
    remote:
      path: src/System.Net.Primitives/src/System/Net/SecureProtocols/NegotiateEnumTypes.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: None
    path: src/System.Net.Primitives/src/System/Net/SecureProtocols/NegotiateEnumTypes.cs
    startLine: 9
  assemblies:
  - System.Net.Primitives
  namespace: System.Net.Security
  summary: No authentication is required for the client and server.
  syntax:
    content: None = null
    content.vb: None = Nothing
    return:
      type: System.Net.Security.AuthenticationLevel
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
references:
- uid: System.Net.Security
  isExternal: false
  name: System.Net.Security
  fullName: System.Net.Security
- uid: System.Net.Security.AuthenticationLevel
  parent: System.Net.Security
  isExternal: false
  name: AuthenticationLevel
  fullName: System.Net.Security.AuthenticationLevel
