items:
- uid: System.Security.AccessControl.SystemAcl
  commentId: T:System.Security.AccessControl.SystemAcl
  id: SystemAcl
  parent: System.Security.AccessControl
  children:
  - System.Security.AccessControl.SystemAcl.#ctor(System.Boolean,System.Boolean,System.Byte,System.Int32)
  - System.Security.AccessControl.SystemAcl.#ctor(System.Boolean,System.Boolean,System.Int32)
  - System.Security.AccessControl.SystemAcl.#ctor(System.Boolean,System.Boolean,System.Security.AccessControl.RawAcl)
  - System.Security.AccessControl.SystemAcl.AddAudit(System.Security.AccessControl.AuditFlags,System.Security.Principal.SecurityIdentifier,System.Int32,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags)
  - System.Security.AccessControl.SystemAcl.AddAudit(System.Security.AccessControl.AuditFlags,System.Security.Principal.SecurityIdentifier,System.Int32,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.ObjectAceFlags,System.Guid,System.Guid)
  - System.Security.AccessControl.SystemAcl.AddAudit(System.Security.Principal.SecurityIdentifier,System.Security.AccessControl.ObjectAuditRule)
  - System.Security.AccessControl.SystemAcl.RemoveAudit(System.Security.AccessControl.AuditFlags,System.Security.Principal.SecurityIdentifier,System.Int32,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags)
  - System.Security.AccessControl.SystemAcl.RemoveAudit(System.Security.AccessControl.AuditFlags,System.Security.Principal.SecurityIdentifier,System.Int32,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.ObjectAceFlags,System.Guid,System.Guid)
  - System.Security.AccessControl.SystemAcl.RemoveAudit(System.Security.Principal.SecurityIdentifier,System.Security.AccessControl.ObjectAuditRule)
  - System.Security.AccessControl.SystemAcl.RemoveAuditSpecific(System.Security.AccessControl.AuditFlags,System.Security.Principal.SecurityIdentifier,System.Int32,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags)
  - System.Security.AccessControl.SystemAcl.RemoveAuditSpecific(System.Security.AccessControl.AuditFlags,System.Security.Principal.SecurityIdentifier,System.Int32,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.ObjectAceFlags,System.Guid,System.Guid)
  - System.Security.AccessControl.SystemAcl.RemoveAuditSpecific(System.Security.Principal.SecurityIdentifier,System.Security.AccessControl.ObjectAuditRule)
  - System.Security.AccessControl.SystemAcl.SetAudit(System.Security.AccessControl.AuditFlags,System.Security.Principal.SecurityIdentifier,System.Int32,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags)
  - System.Security.AccessControl.SystemAcl.SetAudit(System.Security.AccessControl.AuditFlags,System.Security.Principal.SecurityIdentifier,System.Int32,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.ObjectAceFlags,System.Guid,System.Guid)
  - System.Security.AccessControl.SystemAcl.SetAudit(System.Security.Principal.SecurityIdentifier,System.Security.AccessControl.ObjectAuditRule)
  langs:
  - csharp
  - vb
  name: SystemAcl
  fullName: System.Security.AccessControl.SystemAcl
  type: Class
  source:
    remote:
      path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: SystemAcl
    path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs
    startLine: 513
  assemblies:
  - System.Security.AccessControl
  namespace: System.Security.AccessControl
  summary: "\n<p>Represents a System Access Control List (SACL).</p>\n"
  example:
  - 
  syntax:
    content: 'public sealed class SystemAcl : CommonAcl, Collections.IEnumerable'
    content.vb: >-
      Public NotInheritable Class SystemAcl
          Inherits CommonAcl
          Implements Collections.IEnumerable
  inheritance:
  - System.Object
  - System.Security.AccessControl.GenericAcl
  - System.Security.AccessControl.CommonAcl
  implements:
  - System.Collections.IEnumerable
  inheritedMembers:
  - System.Security.AccessControl.CommonAcl.BinaryLength
  - System.Security.AccessControl.CommonAcl.Count
  - System.Security.AccessControl.CommonAcl.IsCanonical
  - System.Security.AccessControl.CommonAcl.IsContainer
  - System.Security.AccessControl.CommonAcl.IsDS
  - System.Security.AccessControl.CommonAcl.Item(System.Int32)
  - System.Security.AccessControl.CommonAcl.Revision
  - System.Security.AccessControl.CommonAcl.GetBinaryForm(System.Byte[],System.Int32)
  - System.Security.AccessControl.CommonAcl.Purge(System.Security.Principal.SecurityIdentifier)
  - System.Security.AccessControl.CommonAcl.RemoveInheritedAces
  - System.Security.AccessControl.GenericAcl.AclRevision
  - System.Security.AccessControl.GenericAcl.AclRevisionDS
  - System.Security.AccessControl.GenericAcl.MaxBinaryLength
  - System.Security.AccessControl.GenericAcl.IsSynchronized
  - System.Security.AccessControl.GenericAcl.SyncRoot
  - System.Security.AccessControl.GenericAcl.CopyTo(System.Security.AccessControl.GenericAce[],System.Int32)
  - System.Security.AccessControl.GenericAcl.GetEnumerator
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: System.Security.AccessControl.SystemAcl.#ctor(System.Boolean,System.Boolean,System.Byte,System.Int32)
  commentId: M:System.Security.AccessControl.SystemAcl.#ctor(System.Boolean,System.Boolean,System.Byte,System.Int32)
  id: '#ctor(System.Boolean,System.Boolean,System.Byte,System.Int32)'
  parent: System.Security.AccessControl.SystemAcl
  langs:
  - csharp
  - vb
  name: SystemAcl(Boolean, Boolean, Byte, Int32)
  fullName: System.Security.AccessControl.SystemAcl.SystemAcl(System.Boolean, System.Boolean, System.Byte, System.Int32)
  type: Constructor
  source:
    remote:
      path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs
    startLine: 515
  assemblies:
  - System.Security.AccessControl
  namespace: System.Security.AccessControl
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Security.AccessControl.SystemAcl\" data-throw-if-not-resolved=\"false\"></xref> class with the specified values.</p>\n"
  example:
  - 
  syntax:
    content: public SystemAcl(bool isContainer, bool isDS, byte revision, int capacity)
    content.vb: Public Sub New(isContainer As Boolean, isDS As Boolean, revision As Byte, capacity As Integer)
    parameters:
    - id: isContainer
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if the new <xref href=\"System.Security.AccessControl.SystemAcl\" data-throw-if-not-resolved=\"false\"></xref> object is a container.</p>\n"
    - id: isDS
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if the new <xref href=\"System.Security.AccessControl.SystemAcl\" data-throw-if-not-resolved=\"false\"></xref> object is a directory object Access Control List (ACL).</p>\n"
    - id: revision
      type: System.Byte
      description: "\n<p>The revision level of the new <xref href=\"System.Security.AccessControl.SystemAcl\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
    - id: capacity
      type: System.Int32
      description: "\n<p>The number of Access Control Entries (ACEs) this <xref href=\"System.Security.AccessControl.SystemAcl\" data-throw-if-not-resolved=\"false\"></xref> object can contain. This number is to be used only as a hint.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Security.AccessControl.SystemAcl.#ctor(System.Boolean,System.Boolean,System.Int32)
  commentId: M:System.Security.AccessControl.SystemAcl.#ctor(System.Boolean,System.Boolean,System.Int32)
  id: '#ctor(System.Boolean,System.Boolean,System.Int32)'
  parent: System.Security.AccessControl.SystemAcl
  langs:
  - csharp
  - vb
  name: SystemAcl(Boolean, Boolean, Int32)
  fullName: System.Security.AccessControl.SystemAcl.SystemAcl(System.Boolean, System.Boolean, System.Int32)
  type: Constructor
  source:
    remote:
      path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs
    startLine: 516
  assemblies:
  - System.Security.AccessControl
  namespace: System.Security.AccessControl
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Security.AccessControl.SystemAcl\" data-throw-if-not-resolved=\"false\"></xref> class with the specified values.</p>\n"
  example:
  - 
  syntax:
    content: public SystemAcl(bool isContainer, bool isDS, int capacity)
    content.vb: Public Sub New(isContainer As Boolean, isDS As Boolean, capacity As Integer)
    parameters:
    - id: isContainer
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if the new <xref href=\"System.Security.AccessControl.SystemAcl\" data-throw-if-not-resolved=\"false\"></xref> object is a container.</p>\n"
    - id: isDS
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if the new <xref href=\"System.Security.AccessControl.SystemAcl\" data-throw-if-not-resolved=\"false\"></xref> object is a directory object Access Control List (ACL).</p>\n"
    - id: capacity
      type: System.Int32
      description: "\n<p>The number of Access Control Entries (ACEs) this <xref href=\"System.Security.AccessControl.SystemAcl\" data-throw-if-not-resolved=\"false\"></xref> object can contain. This number is to be used only as a hint.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Security.AccessControl.SystemAcl.#ctor(System.Boolean,System.Boolean,System.Security.AccessControl.RawAcl)
  commentId: M:System.Security.AccessControl.SystemAcl.#ctor(System.Boolean,System.Boolean,System.Security.AccessControl.RawAcl)
  id: '#ctor(System.Boolean,System.Boolean,System.Security.AccessControl.RawAcl)'
  parent: System.Security.AccessControl.SystemAcl
  langs:
  - csharp
  - vb
  name: SystemAcl(Boolean, Boolean, RawAcl)
  fullName: System.Security.AccessControl.SystemAcl.SystemAcl(System.Boolean, System.Boolean, System.Security.AccessControl.RawAcl)
  type: Constructor
  source:
    remote:
      path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs
    startLine: 517
  assemblies:
  - System.Security.AccessControl
  namespace: System.Security.AccessControl
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Security.AccessControl.SystemAcl\" data-throw-if-not-resolved=\"false\"></xref> class with the specified values from the specified <xref href=\"System.Security.AccessControl.RawAcl\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  remarks: "\n<p>The Access Control Entries (ACEs) in the <xref href=\"System.Security.AccessControl.RawAcl\" data-throw-if-not-resolved=\"false\"></xref> object are cloned.</p>\n"
  example:
  - 
  syntax:
    content: public SystemAcl(bool isContainer, bool isDS, RawAcl rawAcl)
    content.vb: Public Sub New(isContainer As Boolean, isDS As Boolean, rawAcl As RawAcl)
    parameters:
    - id: isContainer
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if the new <xref href=\"System.Security.AccessControl.SystemAcl\" data-throw-if-not-resolved=\"false\"></xref> object is a container.</p>\n"
    - id: isDS
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if the new <xref href=\"System.Security.AccessControl.SystemAcl\" data-throw-if-not-resolved=\"false\"></xref> object is a directory object Access Control List (ACL).</p>\n"
    - id: rawAcl
      type: System.Security.AccessControl.RawAcl
      description: "\n<p>The underlying <xref href=\"System.Security.AccessControl.RawAcl\" data-throw-if-not-resolved=\"false\"></xref> object for the new <xref href=\"System.Security.AccessControl.SystemAcl\" data-throw-if-not-resolved=\"false\"></xref> object. Specify <strong>null</strong> to create an empty ACL.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Security.AccessControl.SystemAcl.AddAudit(System.Security.AccessControl.AuditFlags,System.Security.Principal.SecurityIdentifier,System.Int32,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags)
  commentId: M:System.Security.AccessControl.SystemAcl.AddAudit(System.Security.AccessControl.AuditFlags,System.Security.Principal.SecurityIdentifier,System.Int32,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags)
  id: AddAudit(System.Security.AccessControl.AuditFlags,System.Security.Principal.SecurityIdentifier,System.Int32,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags)
  parent: System.Security.AccessControl.SystemAcl
  langs:
  - csharp
  - vb
  name: AddAudit(AuditFlags, Principal.SecurityIdentifier, Int32, InheritanceFlags, PropagationFlags)
  fullName: System.Security.AccessControl.SystemAcl.AddAudit(System.Security.AccessControl.AuditFlags, System.Security.Principal.SecurityIdentifier, System.Int32, System.Security.AccessControl.InheritanceFlags, System.Security.AccessControl.PropagationFlags)
  type: Method
  source:
    remote:
      path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: AddAudit
    path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs
    startLine: 518
  assemblies:
  - System.Security.AccessControl
  namespace: System.Security.AccessControl
  summary: "\n<p>Adds an audit rule to the current <xref href=\"System.Security.AccessControl.SystemAcl\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  remarks: "\n<p>Adding an audit rule might cause one or more existing Access Control Entries (ACEs) to be combined.</p>\n"
  example:
  - 
  syntax:
    content: public void AddAudit(AuditFlags auditFlags, Principal.SecurityIdentifier sid, int accessMask, InheritanceFlags inheritanceFlags, PropagationFlags propagationFlags)
    content.vb: Public Sub AddAudit(auditFlags As AuditFlags, sid As Principal.SecurityIdentifier, accessMask As Integer, inheritanceFlags As InheritanceFlags, propagationFlags As PropagationFlags)
    parameters:
    - id: auditFlags
      type: System.Security.AccessControl.AuditFlags
      description: "\n<p>The type of audit rule to add.</p>\n"
    - id: sid
      type: System.Security.Principal.SecurityIdentifier
      description: "\n<p>The <xref href=\"System.Security.Principal.SecurityIdentifier\" data-throw-if-not-resolved=\"false\"></xref> for which to add an audit rule.</p>\n"
    - id: accessMask
      type: System.Int32
      description: "\n<p>The access mask for the new audit rule.</p>\n"
    - id: inheritanceFlags
      type: System.Security.AccessControl.InheritanceFlags
      description: "\n<p>Flags that specify the inheritance properties of the new audit rule.</p>\n"
    - id: propagationFlags
      type: System.Security.AccessControl.PropagationFlags
      description: "\n<p>Flags that specify the inheritance propagation properties for the new audit rule.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Security.AccessControl.SystemAcl.AddAudit(System.Security.AccessControl.AuditFlags,System.Security.Principal.SecurityIdentifier,System.Int32,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.ObjectAceFlags,System.Guid,System.Guid)
  commentId: M:System.Security.AccessControl.SystemAcl.AddAudit(System.Security.AccessControl.AuditFlags,System.Security.Principal.SecurityIdentifier,System.Int32,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.ObjectAceFlags,System.Guid,System.Guid)
  id: AddAudit(System.Security.AccessControl.AuditFlags,System.Security.Principal.SecurityIdentifier,System.Int32,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.ObjectAceFlags,System.Guid,System.Guid)
  parent: System.Security.AccessControl.SystemAcl
  langs:
  - csharp
  - vb
  name: AddAudit(AuditFlags, Principal.SecurityIdentifier, Int32, InheritanceFlags, PropagationFlags, ObjectAceFlags, Guid, Guid)
  fullName: System.Security.AccessControl.SystemAcl.AddAudit(System.Security.AccessControl.AuditFlags, System.Security.Principal.SecurityIdentifier, System.Int32, System.Security.AccessControl.InheritanceFlags, System.Security.AccessControl.PropagationFlags, System.Security.AccessControl.ObjectAceFlags, System.Guid, System.Guid)
  type: Method
  source:
    remote:
      path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: AddAudit
    path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs
    startLine: 519
  assemblies:
  - System.Security.AccessControl
  namespace: System.Security.AccessControl
  summary: "\n<p>Adds an audit rule with the specified settings to the current <xref href=\"System.Security.AccessControl.SystemAcl\" data-throw-if-not-resolved=\"false\"></xref> object. Use this method for directory object Access Control Lists (ACLs) when specifying the object type or the inherited object type for the new audit rule.</p>\n"
  example:
  - 
  syntax:
    content: public void AddAudit(AuditFlags auditFlags, Principal.SecurityIdentifier sid, int accessMask, InheritanceFlags inheritanceFlags, PropagationFlags propagationFlags, ObjectAceFlags objectFlags, Guid objectType, Guid inheritedObjectType)
    content.vb: Public Sub AddAudit(auditFlags As AuditFlags, sid As Principal.SecurityIdentifier, accessMask As Integer, inheritanceFlags As InheritanceFlags, propagationFlags As PropagationFlags, objectFlags As ObjectAceFlags, objectType As Guid, inheritedObjectType As Guid)
    parameters:
    - id: auditFlags
      type: System.Security.AccessControl.AuditFlags
      description: "\n<p>The type of audit rule to add.</p>\n"
    - id: sid
      type: System.Security.Principal.SecurityIdentifier
      description: "\n<p>The <xref href=\"System.Security.Principal.SecurityIdentifier\" data-throw-if-not-resolved=\"false\"></xref> for which to add an audit rule.</p>\n"
    - id: accessMask
      type: System.Int32
      description: "\n<p>The access mask for the new audit rule.</p>\n"
    - id: inheritanceFlags
      type: System.Security.AccessControl.InheritanceFlags
      description: "\n<p>Flags that specify the inheritance properties of the new audit rule.</p>\n"
    - id: propagationFlags
      type: System.Security.AccessControl.PropagationFlags
      description: "\n<p>Flags that specify the inheritance propagation properties for the new audit rule.</p>\n"
    - id: objectFlags
      type: System.Security.AccessControl.ObjectAceFlags
      description: "\n<p>Flags that specify if the <em>objectType</em> and <em>inheritedObjectType</em> parameters contain non-<strong>null</strong> values.</p>\n"
    - id: objectType
      type: System.Guid
      description: "\n<p>The identity of the class of objects to which the new audit rule applies.</p>\n"
    - id: inheritedObjectType
      type: System.Guid
      description: "\n<p>The identity of the class of child objects which can inherit the new audit rule.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Security.AccessControl.SystemAcl.AddAudit(System.Security.Principal.SecurityIdentifier,System.Security.AccessControl.ObjectAuditRule)
  commentId: M:System.Security.AccessControl.SystemAcl.AddAudit(System.Security.Principal.SecurityIdentifier,System.Security.AccessControl.ObjectAuditRule)
  id: AddAudit(System.Security.Principal.SecurityIdentifier,System.Security.AccessControl.ObjectAuditRule)
  parent: System.Security.AccessControl.SystemAcl
  langs:
  - csharp
  - vb
  name: AddAudit(Principal.SecurityIdentifier, ObjectAuditRule)
  fullName: System.Security.AccessControl.SystemAcl.AddAudit(System.Security.Principal.SecurityIdentifier, System.Security.AccessControl.ObjectAuditRule)
  type: Method
  source:
    remote:
      path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: AddAudit
    path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs
    startLine: 520
  assemblies:
  - System.Security.AccessControl
  namespace: System.Security.AccessControl
  summary: "\n<p>Adds an audit rule to the current <xref href=\"System.Security.AccessControl.SystemAcl\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  remarks: "\n<p>Adding an audit rule might cause one or more existing Access Control Entries (ACEs) to be combined.</p>\n"
  syntax:
    content: public void AddAudit(Principal.SecurityIdentifier sid, ObjectAuditRule rule)
    content.vb: Public Sub AddAudit(sid As Principal.SecurityIdentifier, rule As ObjectAuditRule)
    parameters:
    - id: sid
      type: System.Security.Principal.SecurityIdentifier
      description: "\n<p>The <xref href=\"System.Security.Principal.SecurityIdentifier\" data-throw-if-not-resolved=\"false\"></xref> for which to add an audit rule.</p>\n"
    - id: rule
      type: System.Security.AccessControl.ObjectAuditRule
      description: "\n<p>The <xref href=\"System.Security.AccessControl.ObjectAuditRule\" data-throw-if-not-resolved=\"false\"></xref>for the new audit rule.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Security.AccessControl.SystemAcl.RemoveAudit(System.Security.AccessControl.AuditFlags,System.Security.Principal.SecurityIdentifier,System.Int32,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags)
  commentId: M:System.Security.AccessControl.SystemAcl.RemoveAudit(System.Security.AccessControl.AuditFlags,System.Security.Principal.SecurityIdentifier,System.Int32,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags)
  id: RemoveAudit(System.Security.AccessControl.AuditFlags,System.Security.Principal.SecurityIdentifier,System.Int32,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags)
  parent: System.Security.AccessControl.SystemAcl
  langs:
  - csharp
  - vb
  name: RemoveAudit(AuditFlags, Principal.SecurityIdentifier, Int32, InheritanceFlags, PropagationFlags)
  fullName: System.Security.AccessControl.SystemAcl.RemoveAudit(System.Security.AccessControl.AuditFlags, System.Security.Principal.SecurityIdentifier, System.Int32, System.Security.AccessControl.InheritanceFlags, System.Security.AccessControl.PropagationFlags)
  type: Method
  source:
    remote:
      path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: RemoveAudit
    path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs
    startLine: 521
  assemblies:
  - System.Security.AccessControl
  namespace: System.Security.AccessControl
  summary: "\n<p>Removes the specified audit rule from the current <xref href=\"System.Security.AccessControl.SystemAcl\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  remarks: "\n<p>Audit removal is accomplished by using a complex algorithm that might add ACEs in addition to removing them.</p>\n"
  example:
  - 
  syntax:
    content: public bool RemoveAudit(AuditFlags auditFlags, Principal.SecurityIdentifier sid, int accessMask, InheritanceFlags inheritanceFlags, PropagationFlags propagationFlags)
    content.vb: Public Function RemoveAudit(auditFlags As AuditFlags, sid As Principal.SecurityIdentifier, accessMask As Integer, inheritanceFlags As InheritanceFlags, propagationFlags As PropagationFlags) As Boolean
    parameters:
    - id: auditFlags
      type: System.Security.AccessControl.AuditFlags
      description: "\n<p>The type of audit rule to remove.</p>\n"
    - id: sid
      type: System.Security.Principal.SecurityIdentifier
      description: "\n<p>The <xref href=\"System.Security.Principal.SecurityIdentifier\" data-throw-if-not-resolved=\"false\"></xref> for which to remove an audit rule.</p>\n"
    - id: accessMask
      type: System.Int32
      description: "\n<p>The access mask for the rule to be removed.</p>\n"
    - id: inheritanceFlags
      type: System.Security.AccessControl.InheritanceFlags
      description: "\n<p>Flags that specify the inheritance properties of the rule to be removed.</p>\n"
    - id: propagationFlags
      type: System.Security.AccessControl.PropagationFlags
      description: "\n<p>Flags that specify the inheritance propagation properties for the rule to be removed.</p>\n"
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if this method successfully removes the specified audit rule; otherwise, <strong>false</strong>.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Security.AccessControl.SystemAcl.RemoveAudit(System.Security.AccessControl.AuditFlags,System.Security.Principal.SecurityIdentifier,System.Int32,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.ObjectAceFlags,System.Guid,System.Guid)
  commentId: M:System.Security.AccessControl.SystemAcl.RemoveAudit(System.Security.AccessControl.AuditFlags,System.Security.Principal.SecurityIdentifier,System.Int32,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.ObjectAceFlags,System.Guid,System.Guid)
  id: RemoveAudit(System.Security.AccessControl.AuditFlags,System.Security.Principal.SecurityIdentifier,System.Int32,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.ObjectAceFlags,System.Guid,System.Guid)
  parent: System.Security.AccessControl.SystemAcl
  langs:
  - csharp
  - vb
  name: RemoveAudit(AuditFlags, Principal.SecurityIdentifier, Int32, InheritanceFlags, PropagationFlags, ObjectAceFlags, Guid, Guid)
  fullName: System.Security.AccessControl.SystemAcl.RemoveAudit(System.Security.AccessControl.AuditFlags, System.Security.Principal.SecurityIdentifier, System.Int32, System.Security.AccessControl.InheritanceFlags, System.Security.AccessControl.PropagationFlags, System.Security.AccessControl.ObjectAceFlags, System.Guid, System.Guid)
  type: Method
  source:
    remote:
      path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: RemoveAudit
    path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs
    startLine: 522
  assemblies:
  - System.Security.AccessControl
  namespace: System.Security.AccessControl
  summary: "\n<p>Removes the specified audit rule from the current <xref href=\"System.Security.AccessControl.SystemAcl\" data-throw-if-not-resolved=\"false\"></xref> object. Use this method for directory object Access Control Lists (ACLs) when specifying the object type or the inherited object type.</p>\n"
  remarks: "\n<p>Audit removal is accomplished by using a complex algorithm that might add ACEs in addition to removing them.</p>\n"
  example:
  - 
  syntax:
    content: public bool RemoveAudit(AuditFlags auditFlags, Principal.SecurityIdentifier sid, int accessMask, InheritanceFlags inheritanceFlags, PropagationFlags propagationFlags, ObjectAceFlags objectFlags, Guid objectType, Guid inheritedObjectType)
    content.vb: Public Function RemoveAudit(auditFlags As AuditFlags, sid As Principal.SecurityIdentifier, accessMask As Integer, inheritanceFlags As InheritanceFlags, propagationFlags As PropagationFlags, objectFlags As ObjectAceFlags, objectType As Guid, inheritedObjectType As Guid) As Boolean
    parameters:
    - id: auditFlags
      type: System.Security.AccessControl.AuditFlags
      description: "\n<p>The type of audit rule to remove.</p>\n"
    - id: sid
      type: System.Security.Principal.SecurityIdentifier
      description: "\n<p>The <xref href=\"System.Security.Principal.SecurityIdentifier\" data-throw-if-not-resolved=\"false\"></xref> for which to remove an audit rule.</p>\n"
    - id: accessMask
      type: System.Int32
      description: "\n<p>The access mask for the rule to be removed.</p>\n"
    - id: inheritanceFlags
      type: System.Security.AccessControl.InheritanceFlags
      description: "\n<p>Flags that specify the inheritance properties of the rule to be removed.</p>\n"
    - id: propagationFlags
      type: System.Security.AccessControl.PropagationFlags
      description: "\n<p>Flags that specify the inheritance propagation properties for the rule to be removed.</p>\n"
    - id: objectFlags
      type: System.Security.AccessControl.ObjectAceFlags
      description: "\n<p>Flags that specify if the <em>objectType</em> and <em>inheritedObjectType</em> parameters contain non-<strong>null</strong> values.</p>\n"
    - id: objectType
      type: System.Guid
      description: "\n<p>The identity of the class of objects to which the removed audit control rule applies.</p>\n"
    - id: inheritedObjectType
      type: System.Guid
      description: "\n<p>The identity of the class of child objects which can inherit the removed audit rule.</p>\n"
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if this method successfully removes the specified audit rule; otherwise, <strong>false</strong>.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Security.AccessControl.SystemAcl.RemoveAudit(System.Security.Principal.SecurityIdentifier,System.Security.AccessControl.ObjectAuditRule)
  commentId: M:System.Security.AccessControl.SystemAcl.RemoveAudit(System.Security.Principal.SecurityIdentifier,System.Security.AccessControl.ObjectAuditRule)
  id: RemoveAudit(System.Security.Principal.SecurityIdentifier,System.Security.AccessControl.ObjectAuditRule)
  parent: System.Security.AccessControl.SystemAcl
  langs:
  - csharp
  - vb
  name: RemoveAudit(Principal.SecurityIdentifier, ObjectAuditRule)
  fullName: System.Security.AccessControl.SystemAcl.RemoveAudit(System.Security.Principal.SecurityIdentifier, System.Security.AccessControl.ObjectAuditRule)
  type: Method
  source:
    remote:
      path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: RemoveAudit
    path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs
    startLine: 523
  assemblies:
  - System.Security.AccessControl
  namespace: System.Security.AccessControl
  summary: "\n<p>Removes the specified audit rule from the current <xref href=\"System.Security.AccessControl.SystemAcl\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  remarks: "\n<p>Audit removal is accomplished by using a complex algorithm that might add ACEs in addition to removing them.</p>\n"
  syntax:
    content: public bool RemoveAudit(Principal.SecurityIdentifier sid, ObjectAuditRule rule)
    content.vb: Public Function RemoveAudit(sid As Principal.SecurityIdentifier, rule As ObjectAuditRule) As Boolean
    parameters:
    - id: sid
      type: System.Security.Principal.SecurityIdentifier
      description: "\n<p>The <xref href=\"System.Security.Principal.SecurityIdentifier\" data-throw-if-not-resolved=\"false\"></xref> for which to remove an audit rule.</p>\n"
    - id: rule
      type: System.Security.AccessControl.ObjectAuditRule
      description: "\n<p>The <xref href=\"System.Security.AccessControl.ObjectAuditRule\" data-throw-if-not-resolved=\"false\"></xref> for which to remove an audit rule.</p>\n"
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if this method successfully removes the specified audit rule; otherwise, <strong>false</strong>.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Security.AccessControl.SystemAcl.RemoveAuditSpecific(System.Security.AccessControl.AuditFlags,System.Security.Principal.SecurityIdentifier,System.Int32,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags)
  commentId: M:System.Security.AccessControl.SystemAcl.RemoveAuditSpecific(System.Security.AccessControl.AuditFlags,System.Security.Principal.SecurityIdentifier,System.Int32,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags)
  id: RemoveAuditSpecific(System.Security.AccessControl.AuditFlags,System.Security.Principal.SecurityIdentifier,System.Int32,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags)
  parent: System.Security.AccessControl.SystemAcl
  langs:
  - csharp
  - vb
  name: RemoveAuditSpecific(AuditFlags, Principal.SecurityIdentifier, Int32, InheritanceFlags, PropagationFlags)
  fullName: System.Security.AccessControl.SystemAcl.RemoveAuditSpecific(System.Security.AccessControl.AuditFlags, System.Security.Principal.SecurityIdentifier, System.Int32, System.Security.AccessControl.InheritanceFlags, System.Security.AccessControl.PropagationFlags)
  type: Method
  source:
    remote:
      path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: RemoveAuditSpecific
    path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs
    startLine: 524
  assemblies:
  - System.Security.AccessControl
  namespace: System.Security.AccessControl
  summary: "\n<p>Removes the specified audit rule from the current <xref href=\"System.Security.AccessControl.DiscretionaryAcl\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  example:
  - 
  syntax:
    content: public void RemoveAuditSpecific(AuditFlags auditFlags, Principal.SecurityIdentifier sid, int accessMask, InheritanceFlags inheritanceFlags, PropagationFlags propagationFlags)
    content.vb: Public Sub RemoveAuditSpecific(auditFlags As AuditFlags, sid As Principal.SecurityIdentifier, accessMask As Integer, inheritanceFlags As InheritanceFlags, propagationFlags As PropagationFlags)
    parameters:
    - id: auditFlags
      type: System.Security.AccessControl.AuditFlags
      description: "\n<p>The type of audit rule to remove.</p>\n"
    - id: sid
      type: System.Security.Principal.SecurityIdentifier
      description: "\n<p>The <xref href=\"System.Security.Principal.SecurityIdentifier\" data-throw-if-not-resolved=\"false\"></xref> for which to remove an audit rule.</p>\n"
    - id: accessMask
      type: System.Int32
      description: "\n<p>The access mask for the rule to be removed.</p>\n"
    - id: inheritanceFlags
      type: System.Security.AccessControl.InheritanceFlags
      description: "\n<p>Flags that specify the inheritance properties of the rule to be removed.</p>\n"
    - id: propagationFlags
      type: System.Security.AccessControl.PropagationFlags
      description: "\n<p>Flags that specify the inheritance propagation properties for the rule to be removed.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Security.AccessControl.SystemAcl.RemoveAuditSpecific(System.Security.AccessControl.AuditFlags,System.Security.Principal.SecurityIdentifier,System.Int32,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.ObjectAceFlags,System.Guid,System.Guid)
  commentId: M:System.Security.AccessControl.SystemAcl.RemoveAuditSpecific(System.Security.AccessControl.AuditFlags,System.Security.Principal.SecurityIdentifier,System.Int32,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.ObjectAceFlags,System.Guid,System.Guid)
  id: RemoveAuditSpecific(System.Security.AccessControl.AuditFlags,System.Security.Principal.SecurityIdentifier,System.Int32,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.ObjectAceFlags,System.Guid,System.Guid)
  parent: System.Security.AccessControl.SystemAcl
  langs:
  - csharp
  - vb
  name: RemoveAuditSpecific(AuditFlags, Principal.SecurityIdentifier, Int32, InheritanceFlags, PropagationFlags, ObjectAceFlags, Guid, Guid)
  fullName: System.Security.AccessControl.SystemAcl.RemoveAuditSpecific(System.Security.AccessControl.AuditFlags, System.Security.Principal.SecurityIdentifier, System.Int32, System.Security.AccessControl.InheritanceFlags, System.Security.AccessControl.PropagationFlags, System.Security.AccessControl.ObjectAceFlags, System.Guid, System.Guid)
  type: Method
  source:
    remote:
      path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: RemoveAuditSpecific
    path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs
    startLine: 525
  assemblies:
  - System.Security.AccessControl
  namespace: System.Security.AccessControl
  summary: "\n<p>Removes the specified audit rule from the current <xref href=\"System.Security.AccessControl.DiscretionaryAcl\" data-throw-if-not-resolved=\"false\"></xref> object. Use this method for directory object Access Control Lists (ACLs) when specifying the object type or the inherited object type.</p>\n"
  example:
  - 
  syntax:
    content: public void RemoveAuditSpecific(AuditFlags auditFlags, Principal.SecurityIdentifier sid, int accessMask, InheritanceFlags inheritanceFlags, PropagationFlags propagationFlags, ObjectAceFlags objectFlags, Guid objectType, Guid inheritedObjectType)
    content.vb: Public Sub RemoveAuditSpecific(auditFlags As AuditFlags, sid As Principal.SecurityIdentifier, accessMask As Integer, inheritanceFlags As InheritanceFlags, propagationFlags As PropagationFlags, objectFlags As ObjectAceFlags, objectType As Guid, inheritedObjectType As Guid)
    parameters:
    - id: auditFlags
      type: System.Security.AccessControl.AuditFlags
      description: "\n<p>The type of audit rule to remove.</p>\n"
    - id: sid
      type: System.Security.Principal.SecurityIdentifier
      description: "\n<p>The <xref href=\"System.Security.Principal.SecurityIdentifier\" data-throw-if-not-resolved=\"false\"></xref> for which to remove an audit rule.</p>\n"
    - id: accessMask
      type: System.Int32
      description: "\n<p>The access mask for the rule to be removed.</p>\n"
    - id: inheritanceFlags
      type: System.Security.AccessControl.InheritanceFlags
      description: "\n<p>Flags that specify the inheritance properties of the rule to be removed.</p>\n"
    - id: propagationFlags
      type: System.Security.AccessControl.PropagationFlags
      description: "\n<p>Flags that specify the inheritance propagation properties for the rule to be removed.</p>\n"
    - id: objectFlags
      type: System.Security.AccessControl.ObjectAceFlags
      description: "\n<p>Flags that specify if the <em>objectType</em> and <em>inheritedObjectType</em> parameters contain non-<strong>null</strong> values.</p>\n"
    - id: objectType
      type: System.Guid
      description: "\n<p>The identity of the class of objects to which the removed audit control rule applies.</p>\n"
    - id: inheritedObjectType
      type: System.Guid
      description: "\n<p>The identity of the class of child objects which can inherit the removed audit rule.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Security.AccessControl.SystemAcl.RemoveAuditSpecific(System.Security.Principal.SecurityIdentifier,System.Security.AccessControl.ObjectAuditRule)
  commentId: M:System.Security.AccessControl.SystemAcl.RemoveAuditSpecific(System.Security.Principal.SecurityIdentifier,System.Security.AccessControl.ObjectAuditRule)
  id: RemoveAuditSpecific(System.Security.Principal.SecurityIdentifier,System.Security.AccessControl.ObjectAuditRule)
  parent: System.Security.AccessControl.SystemAcl
  langs:
  - csharp
  - vb
  name: RemoveAuditSpecific(Principal.SecurityIdentifier, ObjectAuditRule)
  fullName: System.Security.AccessControl.SystemAcl.RemoveAuditSpecific(System.Security.Principal.SecurityIdentifier, System.Security.AccessControl.ObjectAuditRule)
  type: Method
  source:
    remote:
      path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: RemoveAuditSpecific
    path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs
    startLine: 526
  assemblies:
  - System.Security.AccessControl
  namespace: System.Security.AccessControl
  summary: "\n<p>Removes the specified audit rule from the current <xref href=\"System.Security.AccessControl.DiscretionaryAcl\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  syntax:
    content: public void RemoveAuditSpecific(Principal.SecurityIdentifier sid, ObjectAuditRule rule)
    content.vb: Public Sub RemoveAuditSpecific(sid As Principal.SecurityIdentifier, rule As ObjectAuditRule)
    parameters:
    - id: sid
      type: System.Security.Principal.SecurityIdentifier
      description: "\n<p>The <xref href=\"System.Security.Principal.SecurityIdentifier\" data-throw-if-not-resolved=\"false\"></xref> for which to remove an audit rule.</p>\n"
    - id: rule
      type: System.Security.AccessControl.ObjectAuditRule
      description: "\n<p>The <xref href=\"System.Security.AccessControl.ObjectAuditRule\" data-throw-if-not-resolved=\"false\"></xref> for the rule to be removed.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Security.AccessControl.SystemAcl.SetAudit(System.Security.AccessControl.AuditFlags,System.Security.Principal.SecurityIdentifier,System.Int32,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags)
  commentId: M:System.Security.AccessControl.SystemAcl.SetAudit(System.Security.AccessControl.AuditFlags,System.Security.Principal.SecurityIdentifier,System.Int32,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags)
  id: SetAudit(System.Security.AccessControl.AuditFlags,System.Security.Principal.SecurityIdentifier,System.Int32,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags)
  parent: System.Security.AccessControl.SystemAcl
  langs:
  - csharp
  - vb
  name: SetAudit(AuditFlags, Principal.SecurityIdentifier, Int32, InheritanceFlags, PropagationFlags)
  fullName: System.Security.AccessControl.SystemAcl.SetAudit(System.Security.AccessControl.AuditFlags, System.Security.Principal.SecurityIdentifier, System.Int32, System.Security.AccessControl.InheritanceFlags, System.Security.AccessControl.PropagationFlags)
  type: Method
  source:
    remote:
      path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: SetAudit
    path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs
    startLine: 527
  assemblies:
  - System.Security.AccessControl
  namespace: System.Security.AccessControl
  summary: "\n<p>Sets the specified audit rule for the specified <xref href=\"System.Security.Principal.SecurityIdentifier\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  remarks: "\n<p>This method removes all existing Access Control Entries (ACEs) that match both specified <xref href=\"System.Security.Principal.SecurityIdentifier\" data-throw-if-not-resolved=\"false\"></xref> object and the specified audit condition.</p>\n"
  example:
  - 
  syntax:
    content: public void SetAudit(AuditFlags auditFlags, Principal.SecurityIdentifier sid, int accessMask, InheritanceFlags inheritanceFlags, PropagationFlags propagationFlags)
    content.vb: Public Sub SetAudit(auditFlags As AuditFlags, sid As Principal.SecurityIdentifier, accessMask As Integer, inheritanceFlags As InheritanceFlags, propagationFlags As PropagationFlags)
    parameters:
    - id: auditFlags
      type: System.Security.AccessControl.AuditFlags
      description: "\n<p>The audit condition to set.</p>\n"
    - id: sid
      type: System.Security.Principal.SecurityIdentifier
      description: "\n<p>The <xref href=\"System.Security.Principal.SecurityIdentifier\" data-throw-if-not-resolved=\"false\"></xref> for which to set an audit rule.</p>\n"
    - id: accessMask
      type: System.Int32
      description: "\n<p>The access mask for the new audit rule.</p>\n"
    - id: inheritanceFlags
      type: System.Security.AccessControl.InheritanceFlags
      description: "\n<p>Flags that specify the inheritance properties of the new audit rule.</p>\n"
    - id: propagationFlags
      type: System.Security.AccessControl.PropagationFlags
      description: "\n<p>Flags that specify the inheritance propagation properties for the new audit rule.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Security.AccessControl.SystemAcl.SetAudit(System.Security.AccessControl.AuditFlags,System.Security.Principal.SecurityIdentifier,System.Int32,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.ObjectAceFlags,System.Guid,System.Guid)
  commentId: M:System.Security.AccessControl.SystemAcl.SetAudit(System.Security.AccessControl.AuditFlags,System.Security.Principal.SecurityIdentifier,System.Int32,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.ObjectAceFlags,System.Guid,System.Guid)
  id: SetAudit(System.Security.AccessControl.AuditFlags,System.Security.Principal.SecurityIdentifier,System.Int32,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.ObjectAceFlags,System.Guid,System.Guid)
  parent: System.Security.AccessControl.SystemAcl
  langs:
  - csharp
  - vb
  name: SetAudit(AuditFlags, Principal.SecurityIdentifier, Int32, InheritanceFlags, PropagationFlags, ObjectAceFlags, Guid, Guid)
  fullName: System.Security.AccessControl.SystemAcl.SetAudit(System.Security.AccessControl.AuditFlags, System.Security.Principal.SecurityIdentifier, System.Int32, System.Security.AccessControl.InheritanceFlags, System.Security.AccessControl.PropagationFlags, System.Security.AccessControl.ObjectAceFlags, System.Guid, System.Guid)
  type: Method
  source:
    remote:
      path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: SetAudit
    path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs
    startLine: 528
  assemblies:
  - System.Security.AccessControl
  namespace: System.Security.AccessControl
  summary: "\n<p>Sets the specified audit rule for the specified <xref href=\"System.Security.Principal.SecurityIdentifier\" data-throw-if-not-resolved=\"false\"></xref> object. Use this method for directory object Access Control Lists (ACLs) when specifying the object type or the inherited object type.</p>\n"
  remarks: "\n<p>This method removes all existing Access Control Entries (ACEs) that match both specified <xref href=\"System.Security.Principal.SecurityIdentifier\" data-throw-if-not-resolved=\"false\"></xref> object and the specified audit condition.</p>\n"
  example:
  - 
  syntax:
    content: public void SetAudit(AuditFlags auditFlags, Principal.SecurityIdentifier sid, int accessMask, InheritanceFlags inheritanceFlags, PropagationFlags propagationFlags, ObjectAceFlags objectFlags, Guid objectType, Guid inheritedObjectType)
    content.vb: Public Sub SetAudit(auditFlags As AuditFlags, sid As Principal.SecurityIdentifier, accessMask As Integer, inheritanceFlags As InheritanceFlags, propagationFlags As PropagationFlags, objectFlags As ObjectAceFlags, objectType As Guid, inheritedObjectType As Guid)
    parameters:
    - id: auditFlags
      type: System.Security.AccessControl.AuditFlags
      description: "\n<p>The audit condition to set.</p>\n"
    - id: sid
      type: System.Security.Principal.SecurityIdentifier
      description: "\n<p>The <xref href=\"System.Security.Principal.SecurityIdentifier\" data-throw-if-not-resolved=\"false\"></xref> for which to set an audit rule.</p>\n"
    - id: accessMask
      type: System.Int32
      description: "\n<p>The access mask for the new audit rule.</p>\n"
    - id: inheritanceFlags
      type: System.Security.AccessControl.InheritanceFlags
      description: "\n<p>Flags that specify the inheritance properties of the new audit rule.</p>\n"
    - id: propagationFlags
      type: System.Security.AccessControl.PropagationFlags
      description: "\n<p>Flags that specify the inheritance propagation properties for the new audit rule.</p>\n"
    - id: objectFlags
      type: System.Security.AccessControl.ObjectAceFlags
      description: "\n<p>Flags that specify if the <em>objectType</em> and <em>inheritedObjectType</em> parameters contain non-<strong>null</strong> values.</p>\n"
    - id: objectType
      type: System.Guid
      description: "\n<p>The identity of the class of objects to which the new audit rule applies.</p>\n"
    - id: inheritedObjectType
      type: System.Guid
      description: "\n<p>The identity of the class of child objects which can inherit the new audit rule.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Security.AccessControl.SystemAcl.SetAudit(System.Security.Principal.SecurityIdentifier,System.Security.AccessControl.ObjectAuditRule)
  commentId: M:System.Security.AccessControl.SystemAcl.SetAudit(System.Security.Principal.SecurityIdentifier,System.Security.AccessControl.ObjectAuditRule)
  id: SetAudit(System.Security.Principal.SecurityIdentifier,System.Security.AccessControl.ObjectAuditRule)
  parent: System.Security.AccessControl.SystemAcl
  langs:
  - csharp
  - vb
  name: SetAudit(Principal.SecurityIdentifier, ObjectAuditRule)
  fullName: System.Security.AccessControl.SystemAcl.SetAudit(System.Security.Principal.SecurityIdentifier, System.Security.AccessControl.ObjectAuditRule)
  type: Method
  source:
    remote:
      path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: SetAudit
    path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs
    startLine: 529
  assemblies:
  - System.Security.AccessControl
  namespace: System.Security.AccessControl
  summary: "\n<p>Sets the specified audit rule for the specified <xref href=\"System.Security.Principal.SecurityIdentifier\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  syntax:
    content: public void SetAudit(Principal.SecurityIdentifier sid, ObjectAuditRule rule)
    content.vb: Public Sub SetAudit(sid As Principal.SecurityIdentifier, rule As ObjectAuditRule)
    parameters:
    - id: sid
      type: System.Security.Principal.SecurityIdentifier
      description: "\n<p>The <xref href=\"System.Security.Principal.SecurityIdentifier\" data-throw-if-not-resolved=\"false\"></xref> for which to set an audit rule.</p>\n"
    - id: rule
      type: System.Security.AccessControl.ObjectAuditRule
      description: "\n<p>The <xref href=\"System.Security.AccessControl.ObjectAuditRule\" data-throw-if-not-resolved=\"false\"></xref>for which to set an audit rule.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: System.Security.AccessControl
  isExternal: false
  name: System.Security.AccessControl
  fullName: System.Security.AccessControl
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System.Security.AccessControl.GenericAcl
  parent: System.Security.AccessControl
  isExternal: false
  name: GenericAcl
  fullName: System.Security.AccessControl.GenericAcl
- uid: System.Security.AccessControl.CommonAcl
  parent: System.Security.AccessControl
  isExternal: false
  name: CommonAcl
  fullName: System.Security.AccessControl.CommonAcl
- uid: System.Collections.IEnumerable
  parent: System.Collections
  isExternal: false
  name: Collections.IEnumerable
  fullName: System.Collections.IEnumerable
- uid: System.Security.AccessControl.CommonAcl.BinaryLength
  parent: System.Security.AccessControl.CommonAcl
  isExternal: false
  name: BinaryLength
  fullName: System.Security.AccessControl.CommonAcl.BinaryLength
- uid: System.Security.AccessControl.CommonAcl.Count
  parent: System.Security.AccessControl.CommonAcl
  isExternal: false
  name: Count
  fullName: System.Security.AccessControl.CommonAcl.Count
- uid: System.Security.AccessControl.CommonAcl.IsCanonical
  parent: System.Security.AccessControl.CommonAcl
  isExternal: false
  name: IsCanonical
  fullName: System.Security.AccessControl.CommonAcl.IsCanonical
- uid: System.Security.AccessControl.CommonAcl.IsContainer
  parent: System.Security.AccessControl.CommonAcl
  isExternal: false
  name: IsContainer
  fullName: System.Security.AccessControl.CommonAcl.IsContainer
- uid: System.Security.AccessControl.CommonAcl.IsDS
  parent: System.Security.AccessControl.CommonAcl
  isExternal: false
  name: IsDS
  fullName: System.Security.AccessControl.CommonAcl.IsDS
- uid: System.Security.AccessControl.CommonAcl.Item(System.Int32)
  parent: System.Security.AccessControl.CommonAcl
  isExternal: true
  name: Item[Int32]
  fullName: System.Security.AccessControl.CommonAcl.Item[System.Int32]
  fullname.vb: System.Security.AccessControl.CommonAcl.Item(System.Int32)
  name.vb: Item(Int32)
  spec.csharp:
  - uid: System.Security.AccessControl.CommonAcl.Item(System.Int32)
    name: Item
    fullName: System.Security.AccessControl.CommonAcl.Item
  - name: '['
    fullName: '['
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ']'
    fullName: ']'
  spec.vb:
  - uid: System.Security.AccessControl.CommonAcl.Item(System.Int32)
    name: Item
    fullName: System.Security.AccessControl.CommonAcl.Item
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
- uid: System.Security.AccessControl.CommonAcl.Revision
  parent: System.Security.AccessControl.CommonAcl
  isExternal: false
  name: Revision
  fullName: System.Security.AccessControl.CommonAcl.Revision
- uid: System.Security.AccessControl.CommonAcl.GetBinaryForm(System.Byte[],System.Int32)
  parent: System.Security.AccessControl.CommonAcl
  isExternal: true
  name: GetBinaryForm(Byte[], Int32)
  fullName: System.Security.AccessControl.CommonAcl.GetBinaryForm(System.Byte[], System.Int32)
  fullname.vb: System.Security.AccessControl.CommonAcl.GetBinaryForm(System.Byte(), System.Int32)
  name.vb: GetBinaryForm(Byte(), Int32)
  spec.csharp:
  - uid: System.Security.AccessControl.CommonAcl.GetBinaryForm(System.Byte[],System.Int32)
    name: GetBinaryForm
    fullName: System.Security.AccessControl.CommonAcl.GetBinaryForm
  - name: (
    fullName: (
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    fullName: '[]'
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Security.AccessControl.CommonAcl.GetBinaryForm(System.Byte[],System.Int32)
    name: GetBinaryForm
    fullName: System.Security.AccessControl.CommonAcl.GetBinaryForm
  - name: (
    fullName: (
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    fullName: ()
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
- uid: System.Security.AccessControl.CommonAcl.Purge(System.Security.Principal.SecurityIdentifier)
  parent: System.Security.AccessControl.CommonAcl
  isExternal: true
  name: Purge(Principal.SecurityIdentifier)
  fullName: System.Security.AccessControl.CommonAcl.Purge(System.Security.Principal.SecurityIdentifier)
  spec.csharp:
  - uid: System.Security.AccessControl.CommonAcl.Purge(System.Security.Principal.SecurityIdentifier)
    name: Purge
    fullName: System.Security.AccessControl.CommonAcl.Purge
  - name: (
    fullName: (
  - uid: System.Security.Principal.SecurityIdentifier
    name: Principal.SecurityIdentifier
    fullName: System.Security.Principal.SecurityIdentifier
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Security.AccessControl.CommonAcl.Purge(System.Security.Principal.SecurityIdentifier)
    name: Purge
    fullName: System.Security.AccessControl.CommonAcl.Purge
  - name: (
    fullName: (
  - uid: System.Security.Principal.SecurityIdentifier
    name: Principal.SecurityIdentifier
    fullName: System.Security.Principal.SecurityIdentifier
    isExternal: true
  - name: )
    fullName: )
- uid: System.Security.AccessControl.CommonAcl.RemoveInheritedAces
  parent: System.Security.AccessControl.CommonAcl
  isExternal: false
  name: RemoveInheritedAces()
  fullName: System.Security.AccessControl.CommonAcl.RemoveInheritedAces()
  spec.csharp:
  - uid: System.Security.AccessControl.CommonAcl.RemoveInheritedAces
    name: RemoveInheritedAces
    fullName: System.Security.AccessControl.CommonAcl.RemoveInheritedAces
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Security.AccessControl.CommonAcl.RemoveInheritedAces
    name: RemoveInheritedAces
    fullName: System.Security.AccessControl.CommonAcl.RemoveInheritedAces
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Security.AccessControl.GenericAcl.AclRevision
  parent: System.Security.AccessControl.GenericAcl
  isExternal: false
  name: AclRevision
  fullName: System.Security.AccessControl.GenericAcl.AclRevision
- uid: System.Security.AccessControl.GenericAcl.AclRevisionDS
  parent: System.Security.AccessControl.GenericAcl
  isExternal: false
  name: AclRevisionDS
  fullName: System.Security.AccessControl.GenericAcl.AclRevisionDS
- uid: System.Security.AccessControl.GenericAcl.MaxBinaryLength
  parent: System.Security.AccessControl.GenericAcl
  isExternal: false
  name: MaxBinaryLength
  fullName: System.Security.AccessControl.GenericAcl.MaxBinaryLength
- uid: System.Security.AccessControl.GenericAcl.IsSynchronized
  parent: System.Security.AccessControl.GenericAcl
  isExternal: false
  name: IsSynchronized
  fullName: System.Security.AccessControl.GenericAcl.IsSynchronized
- uid: System.Security.AccessControl.GenericAcl.SyncRoot
  parent: System.Security.AccessControl.GenericAcl
  isExternal: false
  name: SyncRoot
  fullName: System.Security.AccessControl.GenericAcl.SyncRoot
- uid: System.Security.AccessControl.GenericAcl.CopyTo(System.Security.AccessControl.GenericAce[],System.Int32)
  parent: System.Security.AccessControl.GenericAcl
  isExternal: true
  name: CopyTo(GenericAce[], Int32)
  fullName: System.Security.AccessControl.GenericAcl.CopyTo(System.Security.AccessControl.GenericAce[], System.Int32)
  fullname.vb: System.Security.AccessControl.GenericAcl.CopyTo(System.Security.AccessControl.GenericAce(), System.Int32)
  name.vb: CopyTo(GenericAce(), Int32)
  spec.csharp:
  - uid: System.Security.AccessControl.GenericAcl.CopyTo(System.Security.AccessControl.GenericAce[],System.Int32)
    name: CopyTo
    fullName: System.Security.AccessControl.GenericAcl.CopyTo
  - name: (
    fullName: (
  - uid: System.Security.AccessControl.GenericAce
    name: GenericAce
    fullName: System.Security.AccessControl.GenericAce
  - name: '[]'
    fullName: '[]'
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Security.AccessControl.GenericAcl.CopyTo(System.Security.AccessControl.GenericAce[],System.Int32)
    name: CopyTo
    fullName: System.Security.AccessControl.GenericAcl.CopyTo
  - name: (
    fullName: (
  - uid: System.Security.AccessControl.GenericAce
    name: GenericAce
    fullName: System.Security.AccessControl.GenericAce
  - name: ()
    fullName: ()
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
- uid: System.Security.AccessControl.GenericAcl.GetEnumerator
  parent: System.Security.AccessControl.GenericAcl
  isExternal: false
  name: GetEnumerator()
  fullName: System.Security.AccessControl.GenericAcl.GetEnumerator()
  spec.csharp:
  - uid: System.Security.AccessControl.GenericAcl.GetEnumerator
    name: GetEnumerator
    fullName: System.Security.AccessControl.GenericAcl.GetEnumerator
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Security.AccessControl.GenericAcl.GetEnumerator
    name: GetEnumerator
    fullName: System.Security.AccessControl.GenericAcl.GetEnumerator
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Collections
  isExternal: false
  name: System.Collections
  fullName: System.Collections
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  fullName: System.Boolean
- uid: System.Byte
  parent: System
  isExternal: false
  name: Byte
  fullName: System.Byte
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  fullName: System.Int32
- uid: System.Security.AccessControl.RawAcl
  parent: System.Security.AccessControl
  isExternal: false
  name: RawAcl
  fullName: System.Security.AccessControl.RawAcl
- uid: System.Security.AccessControl.AuditFlags
  parent: System.Security.AccessControl
  isExternal: false
  name: AuditFlags
  fullName: System.Security.AccessControl.AuditFlags
- uid: System.Security.Principal.SecurityIdentifier
  parent: System.Security.Principal
  isExternal: false
  name: SecurityIdentifier
  fullName: System.Security.Principal.SecurityIdentifier
- uid: System.Security.AccessControl.InheritanceFlags
  parent: System.Security.AccessControl
  isExternal: false
  name: InheritanceFlags
  fullName: System.Security.AccessControl.InheritanceFlags
- uid: System.Security.AccessControl.PropagationFlags
  parent: System.Security.AccessControl
  isExternal: false
  name: PropagationFlags
  fullName: System.Security.AccessControl.PropagationFlags
- uid: System.Security.Principal
  isExternal: false
  name: System.Security.Principal
  fullName: System.Security.Principal
- uid: System.Security.AccessControl.ObjectAceFlags
  parent: System.Security.AccessControl
  isExternal: false
  name: ObjectAceFlags
  fullName: System.Security.AccessControl.ObjectAceFlags
- uid: System.Guid
  parent: System
  isExternal: false
  name: Guid
  fullName: System.Guid
- uid: System.Security.AccessControl.ObjectAuditRule
  parent: System.Security.AccessControl
  isExternal: false
  name: ObjectAuditRule
  fullName: System.Security.AccessControl.ObjectAuditRule
