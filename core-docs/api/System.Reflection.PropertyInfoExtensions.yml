items:
- uid: System.Reflection.PropertyInfoExtensions
  commentId: T:System.Reflection.PropertyInfoExtensions
  id: PropertyInfoExtensions
  parent: System.Reflection
  children:
  - System.Reflection.PropertyInfoExtensions.GetAccessors(System.Reflection.PropertyInfo)
  - System.Reflection.PropertyInfoExtensions.GetAccessors(System.Reflection.PropertyInfo,System.Boolean)
  - System.Reflection.PropertyInfoExtensions.GetGetMethod(System.Reflection.PropertyInfo)
  - System.Reflection.PropertyInfoExtensions.GetGetMethod(System.Reflection.PropertyInfo,System.Boolean)
  - System.Reflection.PropertyInfoExtensions.GetSetMethod(System.Reflection.PropertyInfo)
  - System.Reflection.PropertyInfoExtensions.GetSetMethod(System.Reflection.PropertyInfo,System.Boolean)
  langs:
  - csharp
  - vb
  name: PropertyInfoExtensions
  fullName: System.Reflection.PropertyInfoExtensions
  type: Class
  source:
    remote:
      path: src/System.Reflection.TypeExtensions/ref/System.Reflection.TypeExtensions.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: PropertyInfoExtensions
    path: src/System.Reflection.TypeExtensions/ref/System.Reflection.TypeExtensions.cs
    startLine: 40
  assemblies:
  - System.Reflection.TypeExtensions
  namespace: System.Reflection
  syntax:
    content: public class PropertyInfoExtensions
    content.vb: Public Class PropertyInfoExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: System.Reflection.PropertyInfoExtensions.GetAccessors(System.Reflection.PropertyInfo)
  commentId: M:System.Reflection.PropertyInfoExtensions.GetAccessors(System.Reflection.PropertyInfo)
  id: GetAccessors(System.Reflection.PropertyInfo)
  isExtensionMethod: true
  parent: System.Reflection.PropertyInfoExtensions
  langs:
  - csharp
  - vb
  name: GetAccessors(PropertyInfo)
  fullName: System.Reflection.PropertyInfoExtensions.GetAccessors(System.Reflection.PropertyInfo)
  type: Method
  source:
    remote:
      path: src/System.Reflection.TypeExtensions/ref/System.Reflection.TypeExtensions.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetAccessors
    path: src/System.Reflection.TypeExtensions/ref/System.Reflection.TypeExtensions.cs
    startLine: 42
  assemblies:
  - System.Reflection.TypeExtensions
  namespace: System.Reflection
  syntax:
    content: public static MethodInfo[] GetAccessors(this PropertyInfo property)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetAccessors(property As PropertyInfo) As MethodInfo()
    parameters:
    - id: property
      type: System.Reflection.PropertyInfo
    return:
      type: System.Reflection.MethodInfo[]
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Reflection.PropertyInfoExtensions.GetAccessors(System.Reflection.PropertyInfo,System.Boolean)
  commentId: M:System.Reflection.PropertyInfoExtensions.GetAccessors(System.Reflection.PropertyInfo,System.Boolean)
  id: GetAccessors(System.Reflection.PropertyInfo,System.Boolean)
  isExtensionMethod: true
  parent: System.Reflection.PropertyInfoExtensions
  langs:
  - csharp
  - vb
  name: GetAccessors(PropertyInfo, Boolean)
  fullName: System.Reflection.PropertyInfoExtensions.GetAccessors(System.Reflection.PropertyInfo, System.Boolean)
  type: Method
  source:
    remote:
      path: src/System.Reflection.TypeExtensions/ref/System.Reflection.TypeExtensions.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetAccessors
    path: src/System.Reflection.TypeExtensions/ref/System.Reflection.TypeExtensions.cs
    startLine: 43
  assemblies:
  - System.Reflection.TypeExtensions
  namespace: System.Reflection
  syntax:
    content: public static MethodInfo[] GetAccessors(this PropertyInfo property, bool nonPublic)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetAccessors(property As PropertyInfo, nonPublic As Boolean) As MethodInfo()
    parameters:
    - id: property
      type: System.Reflection.PropertyInfo
    - id: nonPublic
      type: System.Boolean
    return:
      type: System.Reflection.MethodInfo[]
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Reflection.PropertyInfoExtensions.GetGetMethod(System.Reflection.PropertyInfo)
  commentId: M:System.Reflection.PropertyInfoExtensions.GetGetMethod(System.Reflection.PropertyInfo)
  id: GetGetMethod(System.Reflection.PropertyInfo)
  isExtensionMethod: true
  parent: System.Reflection.PropertyInfoExtensions
  langs:
  - csharp
  - vb
  name: GetGetMethod(PropertyInfo)
  fullName: System.Reflection.PropertyInfoExtensions.GetGetMethod(System.Reflection.PropertyInfo)
  type: Method
  source:
    remote:
      path: src/System.Reflection.TypeExtensions/ref/System.Reflection.TypeExtensions.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetGetMethod
    path: src/System.Reflection.TypeExtensions/ref/System.Reflection.TypeExtensions.cs
    startLine: 44
  assemblies:
  - System.Reflection.TypeExtensions
  namespace: System.Reflection
  syntax:
    content: public static MethodInfo GetGetMethod(this PropertyInfo property)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetGetMethod(property As PropertyInfo) As MethodInfo
    parameters:
    - id: property
      type: System.Reflection.PropertyInfo
    return:
      type: System.Reflection.MethodInfo
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Reflection.PropertyInfoExtensions.GetGetMethod(System.Reflection.PropertyInfo,System.Boolean)
  commentId: M:System.Reflection.PropertyInfoExtensions.GetGetMethod(System.Reflection.PropertyInfo,System.Boolean)
  id: GetGetMethod(System.Reflection.PropertyInfo,System.Boolean)
  isExtensionMethod: true
  parent: System.Reflection.PropertyInfoExtensions
  langs:
  - csharp
  - vb
  name: GetGetMethod(PropertyInfo, Boolean)
  fullName: System.Reflection.PropertyInfoExtensions.GetGetMethod(System.Reflection.PropertyInfo, System.Boolean)
  type: Method
  source:
    remote:
      path: src/System.Reflection.TypeExtensions/ref/System.Reflection.TypeExtensions.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetGetMethod
    path: src/System.Reflection.TypeExtensions/ref/System.Reflection.TypeExtensions.cs
    startLine: 45
  assemblies:
  - System.Reflection.TypeExtensions
  namespace: System.Reflection
  syntax:
    content: public static MethodInfo GetGetMethod(this PropertyInfo property, bool nonPublic)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetGetMethod(property As PropertyInfo, nonPublic As Boolean) As MethodInfo
    parameters:
    - id: property
      type: System.Reflection.PropertyInfo
    - id: nonPublic
      type: System.Boolean
    return:
      type: System.Reflection.MethodInfo
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Reflection.PropertyInfoExtensions.GetSetMethod(System.Reflection.PropertyInfo)
  commentId: M:System.Reflection.PropertyInfoExtensions.GetSetMethod(System.Reflection.PropertyInfo)
  id: GetSetMethod(System.Reflection.PropertyInfo)
  isExtensionMethod: true
  parent: System.Reflection.PropertyInfoExtensions
  langs:
  - csharp
  - vb
  name: GetSetMethod(PropertyInfo)
  fullName: System.Reflection.PropertyInfoExtensions.GetSetMethod(System.Reflection.PropertyInfo)
  type: Method
  source:
    remote:
      path: src/System.Reflection.TypeExtensions/ref/System.Reflection.TypeExtensions.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetSetMethod
    path: src/System.Reflection.TypeExtensions/ref/System.Reflection.TypeExtensions.cs
    startLine: 46
  assemblies:
  - System.Reflection.TypeExtensions
  namespace: System.Reflection
  syntax:
    content: public static MethodInfo GetSetMethod(this PropertyInfo property)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetSetMethod(property As PropertyInfo) As MethodInfo
    parameters:
    - id: property
      type: System.Reflection.PropertyInfo
    return:
      type: System.Reflection.MethodInfo
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Reflection.PropertyInfoExtensions.GetSetMethod(System.Reflection.PropertyInfo,System.Boolean)
  commentId: M:System.Reflection.PropertyInfoExtensions.GetSetMethod(System.Reflection.PropertyInfo,System.Boolean)
  id: GetSetMethod(System.Reflection.PropertyInfo,System.Boolean)
  isExtensionMethod: true
  parent: System.Reflection.PropertyInfoExtensions
  langs:
  - csharp
  - vb
  name: GetSetMethod(PropertyInfo, Boolean)
  fullName: System.Reflection.PropertyInfoExtensions.GetSetMethod(System.Reflection.PropertyInfo, System.Boolean)
  type: Method
  source:
    remote:
      path: src/System.Reflection.TypeExtensions/ref/System.Reflection.TypeExtensions.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetSetMethod
    path: src/System.Reflection.TypeExtensions/ref/System.Reflection.TypeExtensions.cs
    startLine: 47
  assemblies:
  - System.Reflection.TypeExtensions
  namespace: System.Reflection
  syntax:
    content: public static MethodInfo GetSetMethod(this PropertyInfo property, bool nonPublic)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetSetMethod(property As PropertyInfo, nonPublic As Boolean) As MethodInfo
    parameters:
    - id: property
      type: System.Reflection.PropertyInfo
    - id: nonPublic
      type: System.Boolean
    return:
      type: System.Reflection.MethodInfo
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: System.Reflection
  isExternal: false
  name: System.Reflection
  fullName: System.Reflection
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Reflection.PropertyInfo
  parent: System.Reflection
  isExternal: false
  name: PropertyInfo
  fullName: System.Reflection.PropertyInfo
- uid: System.Reflection.MethodInfo[]
  isExternal: false
  name: MethodInfo[]
  fullName: System.Reflection.MethodInfo[]
  fullname.vb: System.Reflection.MethodInfo()
  name.vb: MethodInfo()
  spec.csharp:
  - uid: System.Reflection.MethodInfo
    name: MethodInfo
    fullName: System.Reflection.MethodInfo
  - name: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Reflection.MethodInfo
    name: MethodInfo
    fullName: System.Reflection.MethodInfo
  - name: ()
    fullName: ()
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  fullName: System.Boolean
- uid: System.Reflection.MethodInfo
  parent: System.Reflection
  isExternal: false
  name: MethodInfo
  fullName: System.Reflection.MethodInfo
