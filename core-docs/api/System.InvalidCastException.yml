items:
- uid: System.InvalidCastException
  commentId: T:System.InvalidCastException
  id: InvalidCastException
  parent: System
  children:
  - System.InvalidCastException.#ctor
  - System.InvalidCastException.#ctor(System.String)
  - System.InvalidCastException.#ctor(System.String,System.Exception)
  - System.InvalidCastException.#ctor(System.String,System.Int32)
  langs:
  - csharp
  - vb
  name: InvalidCastException
  fullName: System.InvalidCastException
  type: Class
  source:
    remote:
      path: src/mscorlib/src/System/InvalidCastException.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: InvalidCastException
    path: src/mscorlib/src/System/InvalidCastException.cs
    startLine: 17
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>The exception that is thrown for invalid casting or explicit conversion.</p>\n"
  remarks: "\n<p>The .NET Framework supports automatic conversion from derived types to their base types and back to the derived type, as well as from types that present interfaces to interface objects and back. It also includes a variety of mechanisms that support custom conversions. For more information, see Type Conversion in the .NET Framework. </p>\n<p>An <xref href=\"System.InvalidCastException\" data-throw-if-not-resolved=\"false\"></xref> exception is thrown when the conversion of an instance of one type to another type is not supported. For example, attempting to convert a <xref href=\"System.Char\" data-throw-if-not-resolved=\"false\"></xref> value to a <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> value throws an <xref href=\"System.InvalidCastException\" data-throw-if-not-resolved=\"false\"></xref> exception. It differs from an <xref href=\"System.OverflowException\" data-throw-if-not-resolved=\"false\"></xref> exception, which is thrown when a conversion of one type to another is supported, but the value of the source type is outside the range of the target type.  An <xref href=\"System.InvalidCastException\" data-throw-if-not-resolved=\"false\"></xref> exception is caused by developer error and should not be handled in a <strong>try/catch</strong> block; instead, the cause of the exception should be eliminated.</p>\n<p>For information about conversions supported by the system, see the <xref href=\"System.Convert\" data-throw-if-not-resolved=\"false\"></xref> class. For errors that occur when the destination type can store source type values, but is not large enough to store a specific source value, see the <xref href=\"System.OverflowException\" data-throw-if-not-resolved=\"false\"></xref> exception.</p>\n<p>In many cases, your language compiler detects that no conversion exists between the source type and the target type and issues a compiler error. </p>\n<p>Some of the conditions under which an attempted conversion throws an <xref href=\"System.InvalidCastException\" data-throw-if-not-resolved=\"false\"></xref> exception are discussed in the following sections:  </p>\n<p>Primitive types and IConvertibleThe Convert.ChangeType methodNarrowing conversions and IConvertible implementationsDowncastingConversion from an interface objectString conversionsVisual Basic 6.0 migration</p>\n<p>For an explicit reference conversion to be successful, the source value must be <strong>null</strong>, or the object type referenced by the source argument must be convertible to the destination type by an implicit reference conversion.</p>\n<p>The following intermediate language (IL) instructions throw an <xref href=\"System.InvalidCastException\" data-throw-if-not-resolved=\"false\"></xref> exception: </p>\n<ul><li>\n<p>\n<em>castclass</em>\n</p>\n</li><li>\n<p>\n<em>refanyval</em>\n</p>\n</li><li>\n<p>\n<em>unbox</em>\n</p>\n</li></ul>\n<p>\n<xref href=\"System.InvalidCastException\" data-throw-if-not-resolved=\"false\"></xref> uses the HRESULT COR_E_INVALIDCAST, which has the value 0x80004002.</p>\n<p>For a list of initial property values for an instance of <xref href=\"System.InvalidCastException\" data-throw-if-not-resolved=\"false\"></xref>, see the <xref href=\"System.InvalidCastException.#ctor\" data-throw-if-not-resolved=\"false\"></xref> constructors.</p>\n"
  syntax:
    content: >-
      [ComVisible(true)]

      [Serializable]

      public class InvalidCastException : SystemException, ISerializable, _Exception
    content.vb: >-
      <ComVisible(True)>

      <Serializable>

      Public Class InvalidCastException
          Inherits SystemException
          Implements ISerializable, _Exception
  seealso:
  - type: System.Exception
    commentId: T:System.Exception
  inheritance:
  - System.Object
  - System.Exception
  inheritedMembers:
  - System.Exception.Data
  - System.Exception.HelpLink
  - System.Exception.HResult
  - System.Exception.InnerException
  - System.Exception.Message
  - System.Exception.Source
  - System.Exception.StackTrace
  - System.Exception.GetBaseException
  - System.Exception.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: System.InvalidCastException.#ctor
  commentId: M:System.InvalidCastException.#ctor
  id: '#ctor'
  parent: System.InvalidCastException
  langs:
  - csharp
  - vb
  name: InvalidCastException()
  fullName: System.InvalidCastException.InvalidCastException()
  type: Constructor
  source:
    remote:
      path: src/mscorlib/src/System/InvalidCastException.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: .ctor
    path: src/mscorlib/src/System/InvalidCastException.cs
    startLine: 20
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.InvalidCastException\" data-throw-if-not-resolved=\"false\"></xref> class.</p>\n"
  remarks: "\n<p>This constructor initializes the <xref href=\"System.Exception.Message\" data-throw-if-not-resolved=\"false\"></xref> property of the new instance to a system-supplied message that describes the error, such as \"Cannot cast from source type to destination type.\" This message takes into account the current system culture.</p>\n<p>The following table shows the initial property values for an instance of <xref href=\"System.InvalidCastException\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>Property </p>\n<p>Value </p>\n<table><tbody><tr><td>\n<p>\n<xref href=\"System.Exception.InnerException\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td><td>\n<p>A null reference (<strong>Nothing</strong> in Visual Basic). </p>\n</td></tr><tr><td>\n<p>\n<xref href=\"System.Exception.Message\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td><td>\n<p>The localized error message string. </p>\n</td></tr></tbody></table>\n"
  syntax:
    content: public InvalidCastException()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.InvalidCastException.#ctor(System.String)
  commentId: M:System.InvalidCastException.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.InvalidCastException
  langs:
  - csharp
  - vb
  name: InvalidCastException(String)
  fullName: System.InvalidCastException.InvalidCastException(System.String)
  type: Constructor
  source:
    remote:
      path: src/mscorlib/src/System/InvalidCastException.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: .ctor
    path: src/mscorlib/src/System/InvalidCastException.cs
    startLine: 25
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.InvalidCastException\" data-throw-if-not-resolved=\"false\"></xref> class with a specified error message.</p>\n"
  remarks: "\n<p>This constructor initializes the <xref href=\"System.Exception.Message\" data-throw-if-not-resolved=\"false\"></xref> property of the new exception using the <em>message</em> parameter. The content of <em>message</em> is intended to be understood by humans. The caller of this constructor is required to ensure that this string has been localized for the current system culture.</p>\n<p>The following table shows the initial property values for an instance of <xref href=\"System.InvalidCastException\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>Property </p>\n<p>Value </p>\n<table><tbody><tr><td>\n<p>\n<xref href=\"System.Exception.InnerException\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td><td>\n<p>A null reference (<strong>Nothing</strong> in Visual Basic). </p>\n</td></tr><tr><td>\n<p>\n<xref href=\"System.Exception.Message\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td><td>\n<p>The error message string. </p>\n</td></tr></tbody></table>\n"
  syntax:
    content: public InvalidCastException(string message)
    content.vb: Public Sub New(message As String)
    parameters:
    - id: message
      type: System.String
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.InvalidCastException.#ctor(System.String,System.Exception)
  commentId: M:System.InvalidCastException.#ctor(System.String,System.Exception)
  id: '#ctor(System.String,System.Exception)'
  parent: System.InvalidCastException
  langs:
  - csharp
  - vb
  name: InvalidCastException(String, Exception)
  fullName: System.InvalidCastException.InvalidCastException(System.String, System.Exception)
  type: Constructor
  source:
    remote:
      path: src/mscorlib/src/System/InvalidCastException.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: .ctor
    path: src/mscorlib/src/System/InvalidCastException.cs
    startLine: 30
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.InvalidCastException\" data-throw-if-not-resolved=\"false\"></xref> class with a specified error message and a reference to the inner exception that is the cause of this exception.</p>\n"
  remarks: "\n<p>An exception that is thrown as a direct result of a previous exception should include a reference to the previous exception in the <xref href=\"System.Exception.InnerException\" data-throw-if-not-resolved=\"false\"></xref> property. The <xref href=\"System.Exception.InnerException\" data-throw-if-not-resolved=\"false\"></xref> property returns the same value that is passed into the constructor, or returns <strong>null</strong> if the <xref href=\"System.Exception.InnerException\" data-throw-if-not-resolved=\"false\"></xref> property does not supply the inner exception value to the constructor.</p>\n<p>The following table shows the initial property values for an instance of <xref href=\"System.InvalidCastException\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>Property </p>\n<p>Value </p>\n<table><tbody><tr><td>\n<p>\n<xref href=\"System.Exception.InnerException\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td><td>\n<p>The inner exception reference. </p>\n</td></tr><tr><td>\n<p>\n<xref href=\"System.Exception.Message\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td><td>\n<p>The error message string. </p>\n</td></tr></tbody></table>\n"
  syntax:
    content: public InvalidCastException(string message, Exception innerException)
    content.vb: Public Sub New(message As String, innerException As Exception)
    parameters:
    - id: message
      type: System.String
    - id: innerException
      type: System.Exception
  seealso:
  - type: System.Exception
    commentId: T:System.Exception
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.InvalidCastException.#ctor(System.String,System.Int32)
  commentId: M:System.InvalidCastException.#ctor(System.String,System.Int32)
  id: '#ctor(System.String,System.Int32)'
  parent: System.InvalidCastException
  langs:
  - csharp
  - vb
  name: InvalidCastException(String, Int32)
  fullName: System.InvalidCastException.InvalidCastException(System.String, System.Int32)
  type: Constructor
  source:
    remote:
      path: src/mscorlib/src/System/InvalidCastException.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: .ctor
    path: src/mscorlib/src/System/InvalidCastException.cs
    startLine: 38
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.InvalidCastException\" data-throw-if-not-resolved=\"false\"></xref> class with a specified message and error code.</p>\n"
  remarks: "\n<p>This constructor initializes the <xref href=\"System.Exception.Message\" data-throw-if-not-resolved=\"false\"></xref> property of the new exception using the <em>message</em> parameter. The content of <em>message</em> is intended to be understood by humans. The caller of this constructor is required to ensure that this string has been localized for the current system culture.</p>\n<p>This constructor supplies an HRESULT value that is accessible to inheritors of the <xref href=\"System.InvalidCastException\" data-throw-if-not-resolved=\"false\"></xref> class, via the protected <xref href=\"System.Exception.HResult\" data-throw-if-not-resolved=\"false\"></xref> property of the <xref href=\"System.Exception\" data-throw-if-not-resolved=\"false\"></xref> class.</p>\n<p>The following table shows the initial property values for an instance of <xref href=\"System.InvalidCastException\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>Property </p>\n<p>Value </p>\n<table><tbody><tr><td>\n<p>\n<xref href=\"System.Exception.InnerException\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td><td>\n<p>A null reference (<strong>Nothing</strong> in Visual Basic). </p>\n</td></tr><tr><td>\n<p>\n<xref href=\"System.Exception.Message\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td><td>\n<p>The error message string. </p>\n</td></tr></tbody></table>\n"
  example:
  - 
  syntax:
    content: public InvalidCastException(string message, int errorCode)
    content.vb: Public Sub New(message As String, errorCode As Integer)
    parameters:
    - id: message
      type: System.String
    - id: errorCode
      type: System.Int32
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System.Exception
  parent: System
  isExternal: false
  name: Exception
  fullName: System.Exception
- uid: System.Exception.Data
  parent: System.Exception
  isExternal: false
  name: Data
  fullName: System.Exception.Data
- uid: System.Exception.HelpLink
  parent: System.Exception
  isExternal: false
  name: HelpLink
  fullName: System.Exception.HelpLink
- uid: System.Exception.HResult
  parent: System.Exception
  isExternal: false
  name: HResult
  fullName: System.Exception.HResult
- uid: System.Exception.InnerException
  parent: System.Exception
  isExternal: false
  name: InnerException
  fullName: System.Exception.InnerException
- uid: System.Exception.Message
  parent: System.Exception
  isExternal: false
  name: Message
  fullName: System.Exception.Message
- uid: System.Exception.Source
  parent: System.Exception
  isExternal: false
  name: Source
  fullName: System.Exception.Source
- uid: System.Exception.StackTrace
  parent: System.Exception
  isExternal: false
  name: StackTrace
  fullName: System.Exception.StackTrace
- uid: System.Exception.GetBaseException
  parent: System.Exception
  isExternal: false
  name: GetBaseException()
  fullName: System.Exception.GetBaseException()
  spec.csharp:
  - uid: System.Exception.GetBaseException
    name: GetBaseException
    fullName: System.Exception.GetBaseException
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Exception.GetBaseException
    name: GetBaseException
    fullName: System.Exception.GetBaseException
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Exception.ToString
  parent: System.Exception
  isExternal: false
  name: ToString()
  fullName: System.Exception.ToString()
  spec.csharp:
  - uid: System.Exception.ToString
    name: ToString
    fullName: System.Exception.ToString
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Exception.ToString
    name: ToString
    fullName: System.Exception.ToString
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.String
  parent: System
  isExternal: false
  name: String
  fullName: System.String
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  fullName: System.Int32
