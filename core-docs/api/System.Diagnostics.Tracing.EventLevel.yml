items:
- uid: System.Diagnostics.Tracing.EventLevel
  commentId: T:System.Diagnostics.Tracing.EventLevel
  id: EventLevel
  parent: System.Diagnostics.Tracing
  children:
  - System.Diagnostics.Tracing.EventLevel.Critical
  - System.Diagnostics.Tracing.EventLevel.Error
  - System.Diagnostics.Tracing.EventLevel.Informational
  - System.Diagnostics.Tracing.EventLevel.LogAlways
  - System.Diagnostics.Tracing.EventLevel.Verbose
  - System.Diagnostics.Tracing.EventLevel.Warning
  langs:
  - csharp
  - vb
  name: EventLevel
  fullName: System.Diagnostics.Tracing.EventLevel
  type: Enum
  source:
    remote:
      path: src/mscorlib/src/System/Diagnostics/Eventing/Winmeta.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: EventLevel
    path: src/mscorlib/src/System/Diagnostics/Eventing/Winmeta.cs
    startLine: 27
  assemblies:
  - System.Diagnostics.Tracing
  namespace: System.Diagnostics.Tracing
  summary: "\n<p>Identifies the level of an event.</p>\n"
  remarks: "\n<p>The level signifies the severity of an event. Lower severity levels encompass higher severity levels. For example, <xref href=\"System.Diagnostics.Tracing.EventLevel.Warning\" data-throw-if-not-resolved=\"false\"></xref> includes the <xref href=\"System.Diagnostics.Tracing.EventLevel.Error\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"System.Diagnostics.Tracing.EventLevel.Critical\" data-throw-if-not-resolved=\"false\"></xref> levels, which are higher in severity.</p>\n"
  example:
  - "\n<p>The following example shows how to use the <xref href=\"System.Diagnostics.Tracing.EventLevel\" data-throw-if-not-resolved=\"false\"></xref> class to specify event levels. This code example is part of a larger example provided for the <xref href=\"System.Diagnostics.Tracing.EventSource\" data-throw-if-not-resolved=\"false\"></xref> class.</p>ETWTrace#5ETWTrace#6ETWTrace#11"
  syntax:
    content: public enum EventLevel
    content.vb: Public Enum EventLevel
  modifiers.csharp:
  - public
  - enum
  modifiers.vb:
  - Public
  - Enum
- uid: System.Diagnostics.Tracing.EventLevel.Critical
  commentId: F:System.Diagnostics.Tracing.EventLevel.Critical
  id: Critical
  parent: System.Diagnostics.Tracing.EventLevel
  langs:
  - csharp
  - vb
  name: Critical
  fullName: System.Diagnostics.Tracing.EventLevel.Critical
  type: Field
  source:
    remote:
      path: src/mscorlib/src/System/Diagnostics/Eventing/Winmeta.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Critical
    path: src/mscorlib/src/System/Diagnostics/Eventing/Winmeta.cs
    startLine: 36
  assemblies:
  - System.Diagnostics.Tracing
  namespace: System.Diagnostics.Tracing
  summary: "\n<p>This level corresponds to a critical error, which is a serious error that has caused a major failure.</p>\n"
  syntax:
    content: Critical = 1
    return:
      type: System.Diagnostics.Tracing.EventLevel
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Diagnostics.Tracing.EventLevel.Error
  commentId: F:System.Diagnostics.Tracing.EventLevel.Error
  id: Error
  parent: System.Diagnostics.Tracing.EventLevel
  langs:
  - csharp
  - vb
  name: Error
  fullName: System.Diagnostics.Tracing.EventLevel.Error
  type: Field
  source:
    remote:
      path: src/mscorlib/src/System/Diagnostics/Eventing/Winmeta.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Error
    path: src/mscorlib/src/System/Diagnostics/Eventing/Winmeta.cs
    startLine: 40
  assemblies:
  - System.Diagnostics.Tracing
  namespace: System.Diagnostics.Tracing
  summary: "\n<p>This level adds standard errors that signify a problem.</p>\n"
  example:
  - "\n<p>The following example shows how to use the <xref href=\"System.Diagnostics.Tracing.EventLevel.Error\" data-throw-if-not-resolved=\"false\"></xref> field to identify an error message. This code example is part of a larger example provided for the <xref href=\"System.Diagnostics.Tracing.EventSource\" data-throw-if-not-resolved=\"false\"></xref> class.</p>ETWTrace#5"
  syntax:
    content: Error = 2
    return:
      type: System.Diagnostics.Tracing.EventLevel
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Diagnostics.Tracing.EventLevel.Informational
  commentId: F:System.Diagnostics.Tracing.EventLevel.Informational
  id: Informational
  parent: System.Diagnostics.Tracing.EventLevel
  langs:
  - csharp
  - vb
  name: Informational
  fullName: System.Diagnostics.Tracing.EventLevel.Informational
  type: Field
  source:
    remote:
      path: src/mscorlib/src/System/Diagnostics/Eventing/Winmeta.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Informational
    path: src/mscorlib/src/System/Diagnostics/Eventing/Winmeta.cs
    startLine: 48
  assemblies:
  - System.Diagnostics.Tracing
  namespace: System.Diagnostics.Tracing
  summary: "\n<p>This level adds informational events or messages that are not errors. These events can help trace the progress or state of an application.</p>\n"
  example:
  - "\n<p>The following example shows how to use the <xref href=\"System.Diagnostics.Tracing.EventLevel.Informational\" data-throw-if-not-resolved=\"false\"></xref> field to identify an informational message. This code example is part of a larger example provided for the <xref href=\"System.Diagnostics.Tracing.EventSource\" data-throw-if-not-resolved=\"false\"></xref> class.</p>ETWTrace#6"
  syntax:
    content: Informational = 4
    return:
      type: System.Diagnostics.Tracing.EventLevel
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Diagnostics.Tracing.EventLevel.LogAlways
  commentId: F:System.Diagnostics.Tracing.EventLevel.LogAlways
  id: LogAlways
  parent: System.Diagnostics.Tracing.EventLevel
  langs:
  - csharp
  - vb
  name: LogAlways
  fullName: System.Diagnostics.Tracing.EventLevel.LogAlways
  type: Field
  source:
    remote:
      path: src/mscorlib/src/System/Diagnostics/Eventing/Winmeta.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: LogAlways
    path: src/mscorlib/src/System/Diagnostics/Eventing/Winmeta.cs
    startLine: 32
  assemblies:
  - System.Diagnostics.Tracing
  namespace: System.Diagnostics.Tracing
  summary: "\n<p>No level filtering is done on the event.</p>\n"
  syntax:
    content: LogAlways = 0
    return:
      type: System.Diagnostics.Tracing.EventLevel
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Diagnostics.Tracing.EventLevel.Verbose
  commentId: F:System.Diagnostics.Tracing.EventLevel.Verbose
  id: Verbose
  parent: System.Diagnostics.Tracing.EventLevel
  langs:
  - csharp
  - vb
  name: Verbose
  fullName: System.Diagnostics.Tracing.EventLevel.Verbose
  type: Field
  source:
    remote:
      path: src/mscorlib/src/System/Diagnostics/Eventing/Winmeta.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Verbose
    path: src/mscorlib/src/System/Diagnostics/Eventing/Winmeta.cs
    startLine: 52
  assemblies:
  - System.Diagnostics.Tracing
  namespace: System.Diagnostics.Tracing
  summary: "\n<p>This level adds lengthy events or messages. It causes all events to be logged.</p>\n"
  example:
  - "\n<p>The following example shows how to use the <xref href=\"System.Diagnostics.Tracing.EventLevel.Verbose\" data-throw-if-not-resolved=\"false\"></xref> field to identify a verbose message. This code example is part of a larger example provided for the <xref href=\"System.Diagnostics.Tracing.EventSource\" data-throw-if-not-resolved=\"false\"></xref> class.</p>ETWTrace#11"
  syntax:
    content: Verbose = 5
    return:
      type: System.Diagnostics.Tracing.EventLevel
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Diagnostics.Tracing.EventLevel.Warning
  commentId: F:System.Diagnostics.Tracing.EventLevel.Warning
  id: Warning
  parent: System.Diagnostics.Tracing.EventLevel
  langs:
  - csharp
  - vb
  name: Warning
  fullName: System.Diagnostics.Tracing.EventLevel.Warning
  type: Field
  source:
    remote:
      path: src/mscorlib/src/System/Diagnostics/Eventing/Winmeta.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Warning
    path: src/mscorlib/src/System/Diagnostics/Eventing/Winmeta.cs
    startLine: 44
  assemblies:
  - System.Diagnostics.Tracing
  namespace: System.Diagnostics.Tracing
  summary: "\n<p>This level adds warning events (for example, events that are published because a disk is nearing full capacity).</p>\n"
  syntax:
    content: Warning = 3
    return:
      type: System.Diagnostics.Tracing.EventLevel
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
references:
- uid: System.Diagnostics.Tracing
  isExternal: false
  name: System.Diagnostics.Tracing
  fullName: System.Diagnostics.Tracing
- uid: System.Diagnostics.Tracing.EventLevel
  parent: System.Diagnostics.Tracing
  isExternal: false
  name: EventLevel
  fullName: System.Diagnostics.Tracing.EventLevel
