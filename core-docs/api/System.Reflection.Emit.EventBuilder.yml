items:
- uid: System.Reflection.Emit.EventBuilder
  commentId: T:System.Reflection.Emit.EventBuilder
  id: EventBuilder
  parent: System.Reflection.Emit
  children:
  - System.Reflection.Emit.EventBuilder.AddOtherMethod(System.Reflection.Emit.MethodBuilder)
  - System.Reflection.Emit.EventBuilder.SetAddOnMethod(System.Reflection.Emit.MethodBuilder)
  - System.Reflection.Emit.EventBuilder.SetCustomAttribute(System.Reflection.ConstructorInfo,System.Byte[])
  - System.Reflection.Emit.EventBuilder.SetCustomAttribute(System.Reflection.Emit.CustomAttributeBuilder)
  - System.Reflection.Emit.EventBuilder.SetRaiseMethod(System.Reflection.Emit.MethodBuilder)
  - System.Reflection.Emit.EventBuilder.SetRemoveOnMethod(System.Reflection.Emit.MethodBuilder)
  langs:
  - csharp
  - vb
  name: EventBuilder
  fullName: System.Reflection.Emit.EventBuilder
  type: Class
  source:
    remote:
      path: src/System.Reflection.Emit/ref/System.Reflection.Emit.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: EventBuilder
    path: src/System.Reflection.Emit/ref/System.Reflection.Emit.cs
    startLine: 68
  assemblies:
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  summary: "\n<p>Defines events for a class.</p>\n"
  remarks: "\n<p>An <strong>EventBuilder</strong> is always associated with a <strong>TypeBuilder</strong>. The TypeBuilder.DefineEvent method will return a new <strong>EventBuilder</strong> to a client.</p>\n"
  example:
  - 
  syntax:
    content: 'public sealed class EventBuilder : object'
    content.vb: >-
      Public NotInheritable Class EventBuilder
          Inherits Object
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: System.Reflection.Emit.EventBuilder.AddOtherMethod(System.Reflection.Emit.MethodBuilder)
  commentId: M:System.Reflection.Emit.EventBuilder.AddOtherMethod(System.Reflection.Emit.MethodBuilder)
  id: AddOtherMethod(System.Reflection.Emit.MethodBuilder)
  parent: System.Reflection.Emit.EventBuilder
  langs:
  - csharp
  - vb
  name: AddOtherMethod(MethodBuilder)
  fullName: System.Reflection.Emit.EventBuilder.AddOtherMethod(System.Reflection.Emit.MethodBuilder)
  type: Method
  source:
    remote:
      path: src/System.Reflection.Emit/ref/System.Reflection.Emit.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: AddOtherMethod
    path: src/System.Reflection.Emit/ref/System.Reflection.Emit.cs
    startLine: 71
  assemblies:
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  summary: "\n<p>Adds one of the \"other\" methods associated with this event. \"Other\" methods are methods other than the \"on\" and \"raise\" methods associated with an event. This function can be called many times to add as many \"other\" methods.</p>\n"
  syntax:
    content: public void AddOtherMethod(MethodBuilder mdBuilder)
    content.vb: Public Sub AddOtherMethod(mdBuilder As MethodBuilder)
    parameters:
    - id: mdBuilder
      type: System.Reflection.Emit.MethodBuilder
      description: "\n<p>A <strong>MethodBuilder</strong> object that represents the other method. </p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>mdBuilder</em> is <strong>null</strong>. </p>\n"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "\n<p>\n<xref href=\"System.Reflection.Emit.TypeBuilder.CreateType\" data-throw-if-not-resolved=\"false\"></xref> has been called on the enclosing type. </p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Reflection.Emit.EventBuilder.SetAddOnMethod(System.Reflection.Emit.MethodBuilder)
  commentId: M:System.Reflection.Emit.EventBuilder.SetAddOnMethod(System.Reflection.Emit.MethodBuilder)
  id: SetAddOnMethod(System.Reflection.Emit.MethodBuilder)
  parent: System.Reflection.Emit.EventBuilder
  langs:
  - csharp
  - vb
  name: SetAddOnMethod(MethodBuilder)
  fullName: System.Reflection.Emit.EventBuilder.SetAddOnMethod(System.Reflection.Emit.MethodBuilder)
  type: Method
  source:
    remote:
      path: src/System.Reflection.Emit/ref/System.Reflection.Emit.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: SetAddOnMethod
    path: src/System.Reflection.Emit/ref/System.Reflection.Emit.cs
    startLine: 72
  assemblies:
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  summary: "\n<p>Sets the method used to subscribe to this event.</p>\n"
  syntax:
    content: public void SetAddOnMethod(MethodBuilder mdBuilder)
    content.vb: Public Sub SetAddOnMethod(mdBuilder As MethodBuilder)
    parameters:
    - id: mdBuilder
      type: System.Reflection.Emit.MethodBuilder
      description: "\n<p>A <strong>MethodBuilder</strong> object that represents the method used to subscribe to this event. </p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>mdBuilder</em> is <strong>null</strong>. </p>\n"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "\n<p>\n<xref href=\"System.Reflection.Emit.TypeBuilder.CreateType\" data-throw-if-not-resolved=\"false\"></xref> has been called on the enclosing type. </p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Reflection.Emit.EventBuilder.SetCustomAttribute(System.Reflection.ConstructorInfo,System.Byte[])
  commentId: M:System.Reflection.Emit.EventBuilder.SetCustomAttribute(System.Reflection.ConstructorInfo,System.Byte[])
  id: SetCustomAttribute(System.Reflection.ConstructorInfo,System.Byte[])
  parent: System.Reflection.Emit.EventBuilder
  langs:
  - csharp
  - vb
  name: SetCustomAttribute(ConstructorInfo, Byte[])
  fullName: System.Reflection.Emit.EventBuilder.SetCustomAttribute(System.Reflection.ConstructorInfo, System.Byte[])
  type: Method
  source:
    remote:
      path: src/System.Reflection.Emit/ref/System.Reflection.Emit.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: SetCustomAttribute
    path: src/System.Reflection.Emit/ref/System.Reflection.Emit.cs
    startLine: 73
  assemblies:
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  summary: "\n<p>Set a custom attribute using a specified custom attribute blob.</p>\n"
  remarks: "\n<p>See the metadata specification in the ECMA Partition II documentation for details on how to format <em>binaryAttribute</em>. The documentation is available online; see <see href=\"http://go.microsoft.com/fwlink/?LinkID=99212\">ECMA C# and Common Language Infrastructure Standards</see> on MSDN and <see href=\"http://go.microsoft.com/fwlink/?LinkID=65552\">Standard ECMA-335 - Common Language Infrastructure (CLI)</see> on the Ecma International Web site.</p>\n"
  syntax:
    content: public void SetCustomAttribute(ConstructorInfo con, byte[] binaryAttribute)
    content.vb: Public Sub SetCustomAttribute(con As ConstructorInfo, binaryAttribute As Byte())
    parameters:
    - id: con
      type: System.Reflection.ConstructorInfo
      description: "\n<p>The constructor for the custom attribute. </p>\n"
    - id: binaryAttribute
      type: System.Byte[]
      description: "\n<p>A byte blob representing the attributes. </p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>con</em> or <em>binaryAttribute</em> is <strong>null</strong>. </p>\n"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "\n<p>\n<xref href=\"System.Reflection.Emit.TypeBuilder.CreateType\" data-throw-if-not-resolved=\"false\"></xref> has been called on the enclosing type. </p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Reflection.Emit.EventBuilder.SetCustomAttribute(System.Reflection.ConstructorInfo, System.Byte())
  name.vb: SetCustomAttribute(ConstructorInfo, Byte())
- uid: System.Reflection.Emit.EventBuilder.SetCustomAttribute(System.Reflection.Emit.CustomAttributeBuilder)
  commentId: M:System.Reflection.Emit.EventBuilder.SetCustomAttribute(System.Reflection.Emit.CustomAttributeBuilder)
  id: SetCustomAttribute(System.Reflection.Emit.CustomAttributeBuilder)
  parent: System.Reflection.Emit.EventBuilder
  langs:
  - csharp
  - vb
  name: SetCustomAttribute(CustomAttributeBuilder)
  fullName: System.Reflection.Emit.EventBuilder.SetCustomAttribute(System.Reflection.Emit.CustomAttributeBuilder)
  type: Method
  source:
    remote:
      path: src/System.Reflection.Emit/ref/System.Reflection.Emit.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: SetCustomAttribute
    path: src/System.Reflection.Emit/ref/System.Reflection.Emit.cs
    startLine: 74
  assemblies:
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  summary: "\n<p>Sets a custom attribute using a custom attribute builder.</p>\n"
  syntax:
    content: public void SetCustomAttribute(CustomAttributeBuilder customBuilder)
    content.vb: Public Sub SetCustomAttribute(customBuilder As CustomAttributeBuilder)
    parameters:
    - id: customBuilder
      type: System.Reflection.Emit.CustomAttributeBuilder
      description: "\n<p>An instance of a helper class to describe the custom attribute. </p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>con</em> is <strong>null</strong>. </p>\n"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "\n<p>\n<xref href=\"System.Reflection.Emit.TypeBuilder.CreateType\" data-throw-if-not-resolved=\"false\"></xref> has been called on the enclosing type. </p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Reflection.Emit.EventBuilder.SetRaiseMethod(System.Reflection.Emit.MethodBuilder)
  commentId: M:System.Reflection.Emit.EventBuilder.SetRaiseMethod(System.Reflection.Emit.MethodBuilder)
  id: SetRaiseMethod(System.Reflection.Emit.MethodBuilder)
  parent: System.Reflection.Emit.EventBuilder
  langs:
  - csharp
  - vb
  name: SetRaiseMethod(MethodBuilder)
  fullName: System.Reflection.Emit.EventBuilder.SetRaiseMethod(System.Reflection.Emit.MethodBuilder)
  type: Method
  source:
    remote:
      path: src/System.Reflection.Emit/ref/System.Reflection.Emit.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: SetRaiseMethod
    path: src/System.Reflection.Emit/ref/System.Reflection.Emit.cs
    startLine: 75
  assemblies:
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  summary: "\n<p>Sets the method used to raise this event.</p>\n"
  syntax:
    content: public void SetRaiseMethod(MethodBuilder mdBuilder)
    content.vb: Public Sub SetRaiseMethod(mdBuilder As MethodBuilder)
    parameters:
    - id: mdBuilder
      type: System.Reflection.Emit.MethodBuilder
      description: "\n<p>A <strong>MethodBuilder</strong> object that represents the method used to raise this event. </p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>mdBuilder</em> is <strong>null</strong>. </p>\n"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "\n<p>\n<xref href=\"System.Reflection.Emit.TypeBuilder.CreateType\" data-throw-if-not-resolved=\"false\"></xref> has been called on the enclosing type. </p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Reflection.Emit.EventBuilder.SetRemoveOnMethod(System.Reflection.Emit.MethodBuilder)
  commentId: M:System.Reflection.Emit.EventBuilder.SetRemoveOnMethod(System.Reflection.Emit.MethodBuilder)
  id: SetRemoveOnMethod(System.Reflection.Emit.MethodBuilder)
  parent: System.Reflection.Emit.EventBuilder
  langs:
  - csharp
  - vb
  name: SetRemoveOnMethod(MethodBuilder)
  fullName: System.Reflection.Emit.EventBuilder.SetRemoveOnMethod(System.Reflection.Emit.MethodBuilder)
  type: Method
  source:
    remote:
      path: src/System.Reflection.Emit/ref/System.Reflection.Emit.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: SetRemoveOnMethod
    path: src/System.Reflection.Emit/ref/System.Reflection.Emit.cs
    startLine: 76
  assemblies:
  - System.Reflection.Emit
  namespace: System.Reflection.Emit
  summary: "\n<p>Sets the method used to unsubscribe to this event.</p>\n"
  syntax:
    content: public void SetRemoveOnMethod(MethodBuilder mdBuilder)
    content.vb: Public Sub SetRemoveOnMethod(mdBuilder As MethodBuilder)
    parameters:
    - id: mdBuilder
      type: System.Reflection.Emit.MethodBuilder
      description: "\n<p>A <strong>MethodBuilder</strong> object that represents the method used to unsubscribe to this event. </p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>mdBuilder</em> is <strong>null</strong>. </p>\n"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "\n<p>\n<xref href=\"System.Reflection.Emit.TypeBuilder.CreateType\" data-throw-if-not-resolved=\"false\"></xref> has been called on the enclosing type. </p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: System.Reflection.Emit
  isExternal: false
  name: System.Reflection.Emit
  fullName: System.Reflection.Emit
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Reflection.Emit.MethodBuilder
  parent: System.Reflection.Emit
  isExternal: false
  name: MethodBuilder
  fullName: System.Reflection.Emit.MethodBuilder
- uid: System.Reflection.ConstructorInfo
  parent: System.Reflection
  isExternal: false
  name: Reflection.ConstructorInfo
  fullName: System.Reflection.ConstructorInfo
- uid: System.Byte[]
  isExternal: false
  name: Byte[]
  fullName: System.Byte[]
  fullname.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
  - name: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
  - name: ()
    fullName: ()
- uid: System.Reflection
  isExternal: false
  name: System.Reflection
  fullName: System.Reflection
- uid: System.Reflection.Emit.CustomAttributeBuilder
  parent: System.Reflection.Emit
  isExternal: false
  name: CustomAttributeBuilder
  fullName: System.Reflection.Emit.CustomAttributeBuilder
- uid: System.ArgumentNullException
  isExternal: false
  name: ArgumentNullException
  fullName: System.ArgumentNullException
- uid: System.InvalidOperationException
  parent: System
  isExternal: false
  name: InvalidOperationException
  fullName: System.InvalidOperationException
