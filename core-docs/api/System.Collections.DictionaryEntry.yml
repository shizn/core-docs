items:
- uid: System.Collections.DictionaryEntry
  commentId: T:System.Collections.DictionaryEntry
  id: DictionaryEntry
  parent: System.Collections
  children:
  - System.Collections.DictionaryEntry.#ctor(System.Object,System.Object)
  - System.Collections.DictionaryEntry.Key
  - System.Collections.DictionaryEntry.Value
  langs:
  - csharp
  - vb
  name: DictionaryEntry
  fullName: System.Collections.DictionaryEntry
  type: Struct
  source:
    remote:
      path: src/mscorlib/src/System/Collections/DictionaryEntry.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: DictionaryEntry
    path: src/mscorlib/src/System/Collections/DictionaryEntry.cs
    startLine: 20
  assemblies:
  - System.Runtime
  namespace: System.Collections
  summary: Defines a dictionary key/value pair that can be set or retrieved.
  syntax:
    content: >-
      [StructLayout(LayoutKind.Sequential)]

      public struct DictionaryEntry
    content.vb: >-
      <StructLayout(LayoutKind.Sequential)>

      Public Structure DictionaryEntry
  inheritedMembers:
  - System.ValueType.Equals(System.Object)
  - System.ValueType.GetHashCode
  - System.ValueType.ToString
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.ReferenceEquals(System.Object,System.Object)
  attributes:
  - type: System.Runtime.InteropServices.StructLayoutAttribute
    ctor: System.Runtime.InteropServices.StructLayoutAttribute.#ctor(System.Runtime.InteropServices.LayoutKind)
    arguments:
    - type: System.Runtime.InteropServices.LayoutKind
      value: 0
  modifiers.csharp:
  - public
  - struct
  modifiers.vb:
  - Public
  - Structure
- uid: System.Collections.DictionaryEntry.#ctor(System.Object,System.Object)
  commentId: M:System.Collections.DictionaryEntry.#ctor(System.Object,System.Object)
  id: '#ctor(System.Object,System.Object)'
  parent: System.Collections.DictionaryEntry
  langs:
  - csharp
  - vb
  name: DictionaryEntry(Object, Object)
  fullName: System.Collections.DictionaryEntry.DictionaryEntry(System.Object, System.Object)
  type: Constructor
  source:
    remote:
      path: src/mscorlib/src/System/Collections/DictionaryEntry.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: .ctor
    path: src/mscorlib/src/System/Collections/DictionaryEntry.cs
    startLine: 29
  assemblies:
  - System.Runtime
  namespace: System.Collections
  summary: Initializes an instance of the <xref href="System.Collections.DictionaryEntry" data-throw-if-not-resolved="false"></xref> type with the specified key and value.
  syntax:
    content: public DictionaryEntry(object key, object value)
    content.vb: Public Sub New(key As Object, value As Object)
    parameters:
    - id: key
      type: System.Object
      description: 'The object defined in each key/value pair. '
    - id: value
      type: System.Object
      description: 'The definition associated with <em>key</em>. '
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>key</em> is null and the .NET Framework version is 1.0 or 1.1. "
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Collections.DictionaryEntry.Key
  commentId: P:System.Collections.DictionaryEntry.Key
  id: Key
  parent: System.Collections.DictionaryEntry
  langs:
  - csharp
  - vb
  name: Key
  fullName: System.Collections.DictionaryEntry.Key
  type: Property
  source:
    remote:
      path: src/mscorlib/src/System/Collections/DictionaryEntry.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Key
    path: src/mscorlib/src/System/Collections/DictionaryEntry.cs
    startLine: 34
  assemblies:
  - System.Runtime
  namespace: System.Collections
  summary: Gets or sets the key in the key/value pair.
  syntax:
    content: public object Key { get; set; }
    content.vb: Public Property Key As Object
    parameters: []
    return:
      type: System.Object
      description: The key in the key/value pair.
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Collections.DictionaryEntry.Value
  commentId: P:System.Collections.DictionaryEntry.Value
  id: Value
  parent: System.Collections.DictionaryEntry
  langs:
  - csharp
  - vb
  name: Value
  fullName: System.Collections.DictionaryEntry.Value
  type: Property
  source:
    remote:
      path: src/mscorlib/src/System/Collections/DictionaryEntry.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Value
    path: src/mscorlib/src/System/Collections/DictionaryEntry.cs
    startLine: 44
  assemblies:
  - System.Runtime
  namespace: System.Collections
  summary: Gets or sets the value in the key/value pair.
  syntax:
    content: public object Value { get; set; }
    content.vb: Public Property Value As Object
    parameters: []
    return:
      type: System.Object
      description: The value in the key/value pair.
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: System.Collections
  isExternal: false
  name: System.Collections
  fullName: System.Collections
- uid: System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: false
  name: Equals(Object)
  fullName: System.ValueType.Equals(System.Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    fullName: System.ValueType.Equals
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    fullName: System.ValueType.Equals
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
  - name: )
    fullName: )
- uid: System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: false
  name: GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    fullName: System.ValueType.GetHashCode
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    fullName: System.ValueType.GetHashCode
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.ValueType.ToString
  parent: System.ValueType
  isExternal: false
  name: ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    fullName: System.ValueType.ToString
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    fullName: System.ValueType.ToString
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: false
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
  - name: )
    fullName: )
- uid: System.ValueType
  parent: System
  isExternal: false
  name: ValueType
  fullName: System.ValueType
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.ArgumentNullException
  isExternal: false
  name: ArgumentNullException
  fullName: System.ArgumentNullException
