items:
- uid: System.Linq.IOrderedQueryable
  commentId: T:System.Linq.IOrderedQueryable
  id: IOrderedQueryable
  parent: System.Linq
  children: []
  langs:
  - csharp
  - vb
  name: IOrderedQueryable
  fullName: System.Linq.IOrderedQueryable
  type: Interface
  source:
    remote:
      path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IOrderedQueryable
    path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs
    startLine: 10
  assemblies:
  - System.Linq.Expressions
  namespace: System.Linq
  summary: "\n<p>Represents the result of a sorting operation.</p>\n"
  remarks: "\n<p>The <xref href=\"System.Linq.IOrderedQueryable\" data-throw-if-not-resolved=\"false\"></xref> interface is intended for implementation by query providers.</p>\n<p>This interface represents the result of a sorting query that calls the method(s) <see cref=\"Overload:System.Linq.Queryable.OrderBy\"></see>, <see cref=\"Overload:System.Linq.Queryable.OrderByDescending\"></see>, <see cref=\"Overload:System.Linq.Queryable.ThenBy\"></see> or <see cref=\"Overload:System.Linq.Queryable.ThenByDescending\"></see>. When <xref href=\"System.Linq.IQueryProvider.CreateQuery(System.Linq.Expressions.Expression)\" data-throw-if-not-resolved=\"false\"></xref> is called and passed an expression tree that represents a sorting query, the resulting <xref href=\"System.Linq.IQueryable\" data-throw-if-not-resolved=\"false\"></xref> object must be of a type that implements <xref href=\"System.Linq.IOrderedQueryable\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>For more information about how to create your own LINQ provider, see <see href=\"http://go.microsoft.com/fwlink/?LinkID=112370\">LINQ: Building an IQueryable Provider</see> on MSDN Blogs.</p>\n"
  example:
  - 
  syntax:
    content: 'public interface IOrderedQueryable : IQueryable, IEnumerable'
    content.vb: >-
      Public Interface IOrderedQueryable
          Inherits IEnumerable, IQueryable
  seealso:
  - type: System.Linq.Queryable
    commentId: T:System.Linq.Queryable
  - type: System.Linq.IQueryable`1
    commentId: T:System.Linq.IQueryable`1
  inheritedMembers:
  - System.Linq.IQueryable.ElementType
  - System.Linq.IQueryable.Expression
  - System.Linq.IQueryable.Provider
  - System.Collections.IEnumerable.GetEnumerator
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
references:
- uid: System.Linq
  isExternal: false
  name: System.Linq
  fullName: System.Linq
- uid: System.Linq.IQueryable.ElementType
  parent: System.Linq.IQueryable
  isExternal: false
  name: ElementType
  fullName: System.Linq.IQueryable.ElementType
- uid: System.Linq.IQueryable.Expression
  parent: System.Linq.IQueryable
  isExternal: false
  name: Expression
  fullName: System.Linq.IQueryable.Expression
- uid: System.Linq.IQueryable.Provider
  parent: System.Linq.IQueryable
  isExternal: false
  name: Provider
  fullName: System.Linq.IQueryable.Provider
- uid: System.Collections.IEnumerable.GetEnumerator
  parent: System.Collections.IEnumerable
  isExternal: false
  name: GetEnumerator()
  fullName: System.Collections.IEnumerable.GetEnumerator()
  spec.csharp:
  - uid: System.Collections.IEnumerable.GetEnumerator
    name: GetEnumerator
    fullName: System.Collections.IEnumerable.GetEnumerator
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Collections.IEnumerable.GetEnumerator
    name: GetEnumerator
    fullName: System.Collections.IEnumerable.GetEnumerator
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Linq.IQueryable
  parent: System.Linq
  isExternal: false
  name: IQueryable
  fullName: System.Linq.IQueryable
- uid: System.Collections.IEnumerable
  parent: System.Collections
  isExternal: false
  name: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: System.Collections
  isExternal: false
  name: System.Collections
  fullName: System.Collections
