items:
- uid: System.Net.Http.HttpClientHandler
  commentId: T:System.Net.Http.HttpClientHandler
  id: HttpClientHandler
  parent: System.Net.Http
  children:
  - System.Net.Http.HttpClientHandler.#ctor
  - System.Net.Http.HttpClientHandler.AllowAutoRedirect
  - System.Net.Http.HttpClientHandler.AutomaticDecompression
  - System.Net.Http.HttpClientHandler.CheckCertificateRevocationList
  - System.Net.Http.HttpClientHandler.ClientCertificateOptions
  - System.Net.Http.HttpClientHandler.ClientCertificates
  - System.Net.Http.HttpClientHandler.CookieContainer
  - System.Net.Http.HttpClientHandler.Credentials
  - System.Net.Http.HttpClientHandler.DefaultProxyCredentials
  - System.Net.Http.HttpClientHandler.Dispose(System.Boolean)
  - System.Net.Http.HttpClientHandler.MaxAutomaticRedirections
  - System.Net.Http.HttpClientHandler.MaxConnectionsPerServer
  - System.Net.Http.HttpClientHandler.MaxRequestContentBufferSize
  - System.Net.Http.HttpClientHandler.MaxResponseHeadersLength
  - System.Net.Http.HttpClientHandler.PreAuthenticate
  - System.Net.Http.HttpClientHandler.Properties
  - System.Net.Http.HttpClientHandler.Proxy
  - System.Net.Http.HttpClientHandler.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)
  - System.Net.Http.HttpClientHandler.ServerCertificateCustomValidationCallback
  - System.Net.Http.HttpClientHandler.SslProtocols
  - System.Net.Http.HttpClientHandler.SupportsAutomaticDecompression
  - System.Net.Http.HttpClientHandler.SupportsProxy
  - System.Net.Http.HttpClientHandler.SupportsRedirectConfiguration
  - System.Net.Http.HttpClientHandler.UseCookies
  - System.Net.Http.HttpClientHandler.UseDefaultCredentials
  - System.Net.Http.HttpClientHandler.UseProxy
  langs:
  - csharp
  - vb
  name: HttpClientHandler
  fullName: System.Net.Http.HttpClientHandler
  type: Class
  source:
    remote:
      path: src/System.Net.Http/src/System/Net/Http/HttpClientHandler.Windows.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: HttpClientHandler
    path: src/System.Net.Http/src/System/Net/Http/HttpClientHandler.Windows.cs
    startLine: 17
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  summary: 'The default message handler used by <xref href="System.Net.Http.HttpClient" data-throw-if-not-resolved="false"></xref>.  '
  syntax:
    content: 'public class HttpClientHandler : HttpMessageHandler'
    content.vb: >-
      Public Class HttpClientHandler
          Inherits HttpMessageHandler
  inheritance:
  - System.Object
  - System.Net.Http.HttpMessageHandler
  inheritedMembers:
  - System.Net.Http.HttpMessageHandler.Dispose
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: System.Net.Http.HttpClientHandler.#ctor
  commentId: M:System.Net.Http.HttpClientHandler.#ctor
  id: '#ctor'
  parent: System.Net.Http.HttpClientHandler
  langs:
  - csharp
  - vb
  name: HttpClientHandler()
  fullName: System.Net.Http.HttpClientHandler.HttpClientHandler()
  type: Constructor
  source:
    remote:
      path: src/System.Net.Http/src/System/Net/Http/HttpClientHandler.Windows.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Net.Http/src/System/Net/Http/HttpClientHandler.Windows.cs
    startLine: 193
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  summary: Creates an instance of a <xref href="System.Net.Http.HttpClientHandler" data-throw-if-not-resolved="false"></xref> class.
  syntax:
    content: public HttpClientHandler()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Net.Http.HttpClientHandler.AllowAutoRedirect
  commentId: P:System.Net.Http.HttpClientHandler.AllowAutoRedirect
  id: AllowAutoRedirect
  parent: System.Net.Http.HttpClientHandler
  langs:
  - csharp
  - vb
  name: AllowAutoRedirect
  fullName: System.Net.Http.HttpClientHandler.AllowAutoRedirect
  type: Property
  source:
    remote:
      path: src/System.Net.Http/src/System/Net/Http/HttpClientHandler.Windows.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: AllowAutoRedirect
    path: src/System.Net.Http/src/System/Net/Http/HttpClientHandler.Windows.cs
    startLine: 116
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  summary: Gets or sets a value that indicates whether the handler should follow redirection responses.
  syntax:
    content: public bool AllowAutoRedirect { get; set; }
    content.vb: Public Property AllowAutoRedirect As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: Returns <xref href="System.Boolean" data-throw-if-not-resolved="false"></xref>.true if the if the handler should follow redirection responses; otherwise false. The default value is true.
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Net.Http.HttpClientHandler.AutomaticDecompression
  commentId: P:System.Net.Http.HttpClientHandler.AutomaticDecompression
  id: AutomaticDecompression
  parent: System.Net.Http.HttpClientHandler
  langs:
  - csharp
  - vb
  name: AutomaticDecompression
  fullName: System.Net.Http.HttpClientHandler.AutomaticDecompression
  type: Property
  source:
    remote:
      path: src/System.Net.Http/src/System/Net/Http/HttpClientHandler.Windows.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: AutomaticDecompression
    path: src/System.Net.Http/src/System/Net/Http/HttpClientHandler.Windows.cs
    startLine: 54
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  summary: Gets or sets the type of decompression method used by the handler for automatic decompression of the HTTP content response.
  syntax:
    content: public DecompressionMethods AutomaticDecompression { get; set; }
    content.vb: Public Property AutomaticDecompression As DecompressionMethods
    parameters: []
    return:
      type: System.Net.DecompressionMethods
      description: Returns <xref href="System.Net.DecompressionMethods" data-throw-if-not-resolved="false"></xref>.The automatic decompression method used by the handler. The default value is <xref href="System.Net.DecompressionMethods.None" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Net.Http.HttpClientHandler.CheckCertificateRevocationList
  commentId: P:System.Net.Http.HttpClientHandler.CheckCertificateRevocationList
  id: CheckCertificateRevocationList
  parent: System.Net.Http.HttpClientHandler
  langs:
  - csharp
  - vb
  name: CheckCertificateRevocationList
  fullName: System.Net.Http.HttpClientHandler.CheckCertificateRevocationList
  type: Property
  source:
    remote:
      path: src/System.Net.Http/src/System/Net/Http/HttpClientHandler.Windows.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CheckCertificateRevocationList
    path: src/System.Net.Http/src/System/Net/Http/HttpClientHandler.Windows.cs
    startLine: 172
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  syntax:
    content: public bool CheckCertificateRevocationList { get; set; }
    content.vb: Public Property CheckCertificateRevocationList As Boolean
    parameters: []
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Net.Http.HttpClientHandler.ClientCertificateOptions
  commentId: P:System.Net.Http.HttpClientHandler.ClientCertificateOptions
  id: ClientCertificateOptions
  parent: System.Net.Http.HttpClientHandler
  langs:
  - csharp
  - vb
  name: ClientCertificateOptions
  fullName: System.Net.Http.HttpClientHandler.ClientCertificateOptions
  type: Property
  source:
    remote:
      path: src/System.Net.Http/src/System/Net/Http/HttpClientHandler.Windows.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ClientCertificateOptions
    path: src/System.Net.Http/src/System/Net/Http/HttpClientHandler.Windows.cs
    startLine: 48
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  summary: Gets or sets a value that indicates if the certificate is automatically picked from the certificate store or if the caller is allowed to pass in a specific client certificate.
  syntax:
    content: public ClientCertificateOption ClientCertificateOptions { get; set; }
    content.vb: Public Property ClientCertificateOptions As ClientCertificateOption
    parameters: []
    return:
      type: System.Net.Http.ClientCertificateOption
      description: Returns <xref href="System.Net.Http.ClientCertificateOption" data-throw-if-not-resolved="false"></xref>.The collection of security certificates associated with this handler.
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Net.Http.HttpClientHandler.ClientCertificates
  commentId: P:System.Net.Http.HttpClientHandler.ClientCertificates
  id: ClientCertificates
  parent: System.Net.Http.HttpClientHandler
  langs:
  - csharp
  - vb
  name: ClientCertificates
  fullName: System.Net.Http.HttpClientHandler.ClientCertificates
  type: Property
  source:
    remote:
      path: src/System.Net.Http/src/System/Net/Http/HttpClientHandler.Windows.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ClientCertificates
    path: src/System.Net.Http/src/System/Net/Http/HttpClientHandler.Windows.cs
    startLine: 161
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  syntax:
    content: public Security.Cryptography.X509Certificates.X509CertificateCollection ClientCertificates { get; }
    content.vb: Public ReadOnly Property ClientCertificates As Security.Cryptography.X509Certificates.X509CertificateCollection
    parameters: []
    return:
      type: System.Security.Cryptography.X509Certificates.X509CertificateCollection
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Net.Http.HttpClientHandler.CookieContainer
  commentId: P:System.Net.Http.HttpClientHandler.CookieContainer
  id: CookieContainer
  parent: System.Net.Http.HttpClientHandler
  langs:
  - csharp
  - vb
  name: CookieContainer
  fullName: System.Net.Http.HttpClientHandler.CookieContainer
  type: Property
  source:
    remote:
      path: src/System.Net.Http/src/System/Net/Http/HttpClientHandler.Windows.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CookieContainer
    path: src/System.Net.Http/src/System/Net/Http/HttpClientHandler.Windows.cs
    startLine: 42
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  summary: Gets or sets the cookie container used to store server cookies by the handler.
  syntax:
    content: public CookieContainer CookieContainer { get; set; }
    content.vb: Public Property CookieContainer As CookieContainer
    parameters: []
    return:
      type: System.Net.CookieContainer
      description: Returns <xref href="System.Net.CookieContainer" data-throw-if-not-resolved="false"></xref>.The cookie container used to store server cookies by the handler.
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Net.Http.HttpClientHandler.Credentials
  commentId: P:System.Net.Http.HttpClientHandler.Credentials
  id: Credentials
  parent: System.Net.Http.HttpClientHandler
  langs:
  - csharp
  - vb
  name: Credentials
  fullName: System.Net.Http.HttpClientHandler.Credentials
  type: Property
  source:
    remote:
      path: src/System.Net.Http/src/System/Net/Http/HttpClientHandler.Windows.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Credentials
    path: src/System.Net.Http/src/System/Net/Http/HttpClientHandler.Windows.cs
    startLine: 110
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  summary: Gets or sets authentication information used by this handler.
  syntax:
    content: public ICredentials Credentials { get; set; }
    content.vb: Public Property Credentials As ICredentials
    parameters: []
    return:
      type: System.Net.ICredentials
      description: Returns <xref href="System.Net.ICredentials" data-throw-if-not-resolved="false"></xref>.The authentication credentials associated with the handler. The default is null.
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Net.Http.HttpClientHandler.DefaultProxyCredentials
  commentId: P:System.Net.Http.HttpClientHandler.DefaultProxyCredentials
  id: DefaultProxyCredentials
  parent: System.Net.Http.HttpClientHandler
  langs:
  - csharp
  - vb
  name: DefaultProxyCredentials
  fullName: System.Net.Http.HttpClientHandler.DefaultProxyCredentials
  type: Property
  source:
    remote:
      path: src/System.Net.Http/src/System/Net/Http/HttpClientHandler.Windows.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: DefaultProxyCredentials
    path: src/System.Net.Http/src/System/Net/Http/HttpClientHandler.Windows.cs
    startLine: 72
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  syntax:
    content: public ICredentials DefaultProxyCredentials { get; set; }
    content.vb: Public Property DefaultProxyCredentials As ICredentials
    parameters: []
    return:
      type: System.Net.ICredentials
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Net.Http.HttpClientHandler.MaxAutomaticRedirections
  commentId: P:System.Net.Http.HttpClientHandler.MaxAutomaticRedirections
  id: MaxAutomaticRedirections
  parent: System.Net.Http.HttpClientHandler
  langs:
  - csharp
  - vb
  name: MaxAutomaticRedirections
  fullName: System.Net.Http.HttpClientHandler.MaxAutomaticRedirections
  type: Property
  source:
    remote:
      path: src/System.Net.Http/src/System/Net/Http/HttpClientHandler.Windows.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: MaxAutomaticRedirections
    path: src/System.Net.Http/src/System/Net/Http/HttpClientHandler.Windows.cs
    startLine: 128
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  summary: Gets or sets the maximum number of redirects that the handler follows.
  syntax:
    content: public int MaxAutomaticRedirections { get; set; }
    content.vb: Public Property MaxAutomaticRedirections As Integer
    parameters: []
    return:
      type: System.Int32
      description: Returns <xref href="System.Int32" data-throw-if-not-resolved="false"></xref>.The maximum number of redirection responses that the handler follows. The default value is 50.
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Net.Http.HttpClientHandler.MaxConnectionsPerServer
  commentId: P:System.Net.Http.HttpClientHandler.MaxConnectionsPerServer
  id: MaxConnectionsPerServer
  parent: System.Net.Http.HttpClientHandler
  langs:
  - csharp
  - vb
  name: MaxConnectionsPerServer
  fullName: System.Net.Http.HttpClientHandler.MaxConnectionsPerServer
  type: Property
  source:
    remote:
      path: src/System.Net.Http/src/System/Net/Http/HttpClientHandler.Windows.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: MaxConnectionsPerServer
    path: src/System.Net.Http/src/System/Net/Http/HttpClientHandler.Windows.cs
    startLine: 134
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  syntax:
    content: public int MaxConnectionsPerServer { get; set; }
    content.vb: Public Property MaxConnectionsPerServer As Integer
    parameters: []
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Net.Http.HttpClientHandler.MaxRequestContentBufferSize
  commentId: P:System.Net.Http.HttpClientHandler.MaxRequestContentBufferSize
  id: MaxRequestContentBufferSize
  parent: System.Net.Http.HttpClientHandler
  langs:
  - csharp
  - vb
  name: MaxRequestContentBufferSize
  fullName: System.Net.Http.HttpClientHandler.MaxRequestContentBufferSize
  type: Property
  source:
    remote:
      path: src/System.Net.Http/src/System/Net/Http/HttpClientHandler.Windows.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: MaxRequestContentBufferSize
    path: src/System.Net.Http/src/System/Net/Http/HttpClientHandler.Windows.cs
    startLine: 140
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  summary: Gets or sets the maximum request content buffer size used by the handler.
  syntax:
    content: public long MaxRequestContentBufferSize { get; set; }
    content.vb: Public Property MaxRequestContentBufferSize As Long
    parameters: []
    return:
      type: System.Int64
      description: Returns <xref href="System.Int32" data-throw-if-not-resolved="false"></xref>.The maximum request content buffer size in bytes. The default value is 2 gigabytes.
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Net.Http.HttpClientHandler.MaxResponseHeadersLength
  commentId: P:System.Net.Http.HttpClientHandler.MaxResponseHeadersLength
  id: MaxResponseHeadersLength
  parent: System.Net.Http.HttpClientHandler
  langs:
  - csharp
  - vb
  name: MaxResponseHeadersLength
  fullName: System.Net.Http.HttpClientHandler.MaxResponseHeadersLength
  type: Property
  source:
    remote:
      path: src/System.Net.Http/src/System/Net/Http/HttpClientHandler.Windows.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: MaxResponseHeadersLength
    path: src/System.Net.Http/src/System/Net/Http/HttpClientHandler.Windows.cs
    startLine: 155
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  syntax:
    content: public int MaxResponseHeadersLength { get; set; }
    content.vb: Public Property MaxResponseHeadersLength As Integer
    parameters: []
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Net.Http.HttpClientHandler.PreAuthenticate
  commentId: P:System.Net.Http.HttpClientHandler.PreAuthenticate
  id: PreAuthenticate
  parent: System.Net.Http.HttpClientHandler
  langs:
  - csharp
  - vb
  name: PreAuthenticate
  fullName: System.Net.Http.HttpClientHandler.PreAuthenticate
  type: Property
  source:
    remote:
      path: src/System.Net.Http/src/System/Net/Http/HttpClientHandler.Windows.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: PreAuthenticate
    path: src/System.Net.Http/src/System/Net/Http/HttpClientHandler.Windows.cs
    startLine: 78
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  summary: Gets or sets a value that indicates whether the handler sends an Authorization header with the request.
  syntax:
    content: public bool PreAuthenticate { get; set; }
    content.vb: Public Property PreAuthenticate As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: Returns <xref href="System.Boolean" data-throw-if-not-resolved="false"></xref>.true for the handler to send an HTTP Authorization header with requests after authentication has taken place; otherwise, false. The default is false.
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Net.Http.HttpClientHandler.Properties
  commentId: P:System.Net.Http.HttpClientHandler.Properties
  id: Properties
  parent: System.Net.Http.HttpClientHandler
  langs:
  - csharp
  - vb
  name: Properties
  fullName: System.Net.Http.HttpClientHandler.Properties
  type: Property
  source:
    remote:
      path: src/System.Net.Http/src/System/Net/Http/HttpClientHandler.Windows.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Properties
    path: src/System.Net.Http/src/System/Net/Http/HttpClientHandler.Windows.cs
    startLine: 184
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  syntax:
    content: public Collections.Generic.IDictionary<string, object> Properties { get; }
    content.vb: Public ReadOnly Property Properties As Collections.Generic.IDictionary(Of String, Object)
    parameters: []
    return:
      type: System.Collections.Generic.IDictionary{System.String,System.Object}
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Net.Http.HttpClientHandler.Proxy
  commentId: P:System.Net.Http.HttpClientHandler.Proxy
  id: Proxy
  parent: System.Net.Http.HttpClientHandler
  langs:
  - csharp
  - vb
  name: Proxy
  fullName: System.Net.Http.HttpClientHandler.Proxy
  type: Property
  source:
    remote:
      path: src/System.Net.Http/src/System/Net/Http/HttpClientHandler.Windows.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Proxy
    path: src/System.Net.Http/src/System/Net/Http/HttpClientHandler.Windows.cs
    startLine: 66
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  summary: Gets or sets proxy information used by the handler.
  syntax:
    content: public IWebProxy Proxy { get; set; }
    content.vb: Public Property Proxy As IWebProxy
    parameters: []
    return:
      type: System.Net.IWebProxy
      description: Returns <xref href="System.Net.IWebProxy" data-throw-if-not-resolved="false"></xref>.The proxy information used by the handler. The default value is null.
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Net.Http.HttpClientHandler.ServerCertificateCustomValidationCallback
  commentId: P:System.Net.Http.HttpClientHandler.ServerCertificateCustomValidationCallback
  id: ServerCertificateCustomValidationCallback
  parent: System.Net.Http.HttpClientHandler
  langs:
  - csharp
  - vb
  name: ServerCertificateCustomValidationCallback
  fullName: System.Net.Http.HttpClientHandler.ServerCertificateCustomValidationCallback
  type: Property
  source:
    remote:
      path: src/System.Net.Http/src/System/Net/Http/HttpClientHandler.Windows.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ServerCertificateCustomValidationCallback
    path: src/System.Net.Http/src/System/Net/Http/HttpClientHandler.Windows.cs
    startLine: 166
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  syntax:
    content: public Func<HttpRequestMessage, Security.Cryptography.X509Certificates.X509Certificate2, Security.Cryptography.X509Certificates.X509Chain, Security.SslPolicyErrors, bool> ServerCertificateCustomValidationCallback { get; set; }
    content.vb: Public Property ServerCertificateCustomValidationCallback As Func(Of HttpRequestMessage, Security.Cryptography.X509Certificates.X509Certificate2, Security.Cryptography.X509Certificates.X509Chain, Security.SslPolicyErrors, Boolean)
    parameters: []
    return:
      type: System.Func{System.Net.Http.HttpRequestMessage,System.Security.Cryptography.X509Certificates.X509Certificate2,System.Security.Cryptography.X509Certificates.X509Chain,System.Net.Security.SslPolicyErrors,System.Boolean}
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Net.Http.HttpClientHandler.SslProtocols
  commentId: P:System.Net.Http.HttpClientHandler.SslProtocols
  id: SslProtocols
  parent: System.Net.Http.HttpClientHandler
  langs:
  - csharp
  - vb
  name: SslProtocols
  fullName: System.Net.Http.HttpClientHandler.SslProtocols
  type: Property
  source:
    remote:
      path: src/System.Net.Http/src/System/Net/Http/HttpClientHandler.Windows.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: SslProtocols
    path: src/System.Net.Http/src/System/Net/Http/HttpClientHandler.Windows.cs
    startLine: 178
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  syntax:
    content: public Security.Authentication.SslProtocols SslProtocols { get; set; }
    content.vb: Public Property SslProtocols As Security.Authentication.SslProtocols
    parameters: []
    return:
      type: System.Security.Authentication.SslProtocols
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Net.Http.HttpClientHandler.SupportsAutomaticDecompression
  commentId: P:System.Net.Http.HttpClientHandler.SupportsAutomaticDecompression
  id: SupportsAutomaticDecompression
  parent: System.Net.Http.HttpClientHandler
  langs:
  - csharp
  - vb
  name: SupportsAutomaticDecompression
  fullName: System.Net.Http.HttpClientHandler.SupportsAutomaticDecompression
  type: Property
  source:
    remote:
      path: src/System.Net.Http/src/System/Net/Http/HttpClientHandler.Windows.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: SupportsAutomaticDecompression
    path: src/System.Net.Http/src/System/Net/Http/HttpClientHandler.Windows.cs
    startLine: 21
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  summary: Gets a value that indicates whether the handler supports automatic response content decompression.
  syntax:
    content: public virtual bool SupportsAutomaticDecompression { get; }
    content.vb: Public Overridable ReadOnly Property SupportsAutomaticDecompression As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: Returns <xref href="System.Boolean" data-throw-if-not-resolved="false"></xref>.true if the if the handler supports automatic response content decompression; otherwise false. The default value is true.
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: System.Net.Http.HttpClientHandler.SupportsProxy
  commentId: P:System.Net.Http.HttpClientHandler.SupportsProxy
  id: SupportsProxy
  parent: System.Net.Http.HttpClientHandler
  langs:
  - csharp
  - vb
  name: SupportsProxy
  fullName: System.Net.Http.HttpClientHandler.SupportsProxy
  type: Property
  source:
    remote:
      path: src/System.Net.Http/src/System/Net/Http/HttpClientHandler.Windows.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: SupportsProxy
    path: src/System.Net.Http/src/System/Net/Http/HttpClientHandler.Windows.cs
    startLine: 26
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  summary: Gets a value that indicates whether the handler supports proxy settings.
  syntax:
    content: public virtual bool SupportsProxy { get; }
    content.vb: Public Overridable ReadOnly Property SupportsProxy As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: Returns <xref href="System.Boolean" data-throw-if-not-resolved="false"></xref>.true if the if the handler supports proxy settings; otherwise false. The default value is true.
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: System.Net.Http.HttpClientHandler.SupportsRedirectConfiguration
  commentId: P:System.Net.Http.HttpClientHandler.SupportsRedirectConfiguration
  id: SupportsRedirectConfiguration
  parent: System.Net.Http.HttpClientHandler
  langs:
  - csharp
  - vb
  name: SupportsRedirectConfiguration
  fullName: System.Net.Http.HttpClientHandler.SupportsRedirectConfiguration
  type: Property
  source:
    remote:
      path: src/System.Net.Http/src/System/Net/Http/HttpClientHandler.Windows.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: SupportsRedirectConfiguration
    path: src/System.Net.Http/src/System/Net/Http/HttpClientHandler.Windows.cs
    startLine: 31
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  summary: Gets a value that indicates whether the handler supports configuration settings for the <xref href="System.Net.Http.HttpClientHandler.AllowAutoRedirect" data-throw-if-not-resolved="false"></xref> and <xref href="System.Net.Http.HttpClientHandler.MaxAutomaticRedirections" data-throw-if-not-resolved="false"></xref> properties.
  syntax:
    content: public virtual bool SupportsRedirectConfiguration { get; }
    content.vb: Public Overridable ReadOnly Property SupportsRedirectConfiguration As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: Returns <xref href="System.Boolean" data-throw-if-not-resolved="false"></xref>.true if the if the handler supports configuration settings for the <xref href="System.Net.Http.HttpClientHandler.AllowAutoRedirect" data-throw-if-not-resolved="false"></xref> and <xref href="System.Net.Http.HttpClientHandler.MaxAutomaticRedirections" data-throw-if-not-resolved="false"></xref> properties; otherwise false. The default value is true.
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: System.Net.Http.HttpClientHandler.UseCookies
  commentId: P:System.Net.Http.HttpClientHandler.UseCookies
  id: UseCookies
  parent: System.Net.Http.HttpClientHandler
  langs:
  - csharp
  - vb
  name: UseCookies
  fullName: System.Net.Http.HttpClientHandler.UseCookies
  type: Property
  source:
    remote:
      path: src/System.Net.Http/src/System/Net/Http/HttpClientHandler.Windows.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: UseCookies
    path: src/System.Net.Http/src/System/Net/Http/HttpClientHandler.Windows.cs
    startLine: 36
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  summary: Gets or sets a value that indicates whether the handler uses the  <xref href="System.Net.Http.HttpClientHandler.CookieContainer" data-throw-if-not-resolved="false"></xref> property  to store server cookies and uses these cookies when sending requests.
  syntax:
    content: public bool UseCookies { get; set; }
    content.vb: Public Property UseCookies As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: Returns <xref href="System.Boolean" data-throw-if-not-resolved="false"></xref>.true if the if the handler supports uses the  <xref href="System.Net.Http.HttpClientHandler.CookieContainer" data-throw-if-not-resolved="false"></xref> property  to store server cookies and uses these cookies when sending requests; otherwise false. The default value is true.
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Net.Http.HttpClientHandler.UseDefaultCredentials
  commentId: P:System.Net.Http.HttpClientHandler.UseDefaultCredentials
  id: UseDefaultCredentials
  parent: System.Net.Http.HttpClientHandler
  langs:
  - csharp
  - vb
  name: UseDefaultCredentials
  fullName: System.Net.Http.HttpClientHandler.UseDefaultCredentials
  type: Property
  source:
    remote:
      path: src/System.Net.Http/src/System/Net/Http/HttpClientHandler.Windows.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: UseDefaultCredentials
    path: src/System.Net.Http/src/System/Net/Http/HttpClientHandler.Windows.cs
    startLine: 84
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  summary: Gets or sets a value that controls whether default credentials are sent with requests by the handler.
  syntax:
    content: public bool UseDefaultCredentials { get; set; }
    content.vb: Public Property UseDefaultCredentials As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: Returns <xref href="System.Boolean" data-throw-if-not-resolved="false"></xref>.true if the default credentials are used; otherwise false. The default value is false.
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Net.Http.HttpClientHandler.UseProxy
  commentId: P:System.Net.Http.HttpClientHandler.UseProxy
  id: UseProxy
  parent: System.Net.Http.HttpClientHandler
  langs:
  - csharp
  - vb
  name: UseProxy
  fullName: System.Net.Http.HttpClientHandler.UseProxy
  type: Property
  source:
    remote:
      path: src/System.Net.Http/src/System/Net/Http/HttpClientHandler.Windows.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: UseProxy
    path: src/System.Net.Http/src/System/Net/Http/HttpClientHandler.Windows.cs
    startLine: 60
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  summary: 'Gets or sets a value that indicates whether the handler uses a proxy for requests. '
  syntax:
    content: public bool UseProxy { get; set; }
    content.vb: Public Property UseProxy As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: Returns <xref href="System.Boolean" data-throw-if-not-resolved="false"></xref>.true if the handler should use a proxy for requests; otherwise false. The default value is true.
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Net.Http.HttpClientHandler.Dispose(System.Boolean)
  commentId: M:System.Net.Http.HttpClientHandler.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Net.Http.HttpClientHandler
  langs:
  - csharp
  - vb
  name: Dispose(Boolean)
  fullName: System.Net.Http.HttpClientHandler.Dispose(System.Boolean)
  type: Method
  source:
    remote:
      path: src/System.Net.Http/src/System/Net/Http/HttpClientHandler.Windows.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Dispose
    path: src/System.Net.Http/src/System/Net/Http/HttpClientHandler.Windows.cs
    startLine: 218
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  summary: Releases the unmanaged resources used by the <xref href="System.Net.Http.HttpClientHandler" data-throw-if-not-resolved="false"></xref> and optionally disposes of the managed resources.
  syntax:
    content: protected override void Dispose(bool disposing)
    content.vb: Protected Overrides Sub Dispose(disposing As Boolean)
    parameters:
    - id: disposing
      type: System.Boolean
      description: true to release both managed and unmanaged resources; false to releases only unmanaged resources.
  overridden: System.Net.Http.HttpMessageHandler.Dispose(System.Boolean)
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: System.Net.Http.HttpClientHandler.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)
  commentId: M:System.Net.Http.HttpClientHandler.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)
  id: SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)
  parent: System.Net.Http.HttpClientHandler
  langs:
  - csharp
  - vb
  name: SendAsync(HttpRequestMessage, Threading.CancellationToken)
  fullName: System.Net.Http.HttpClientHandler.SendAsync(System.Net.Http.HttpRequestMessage, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/System.Net.Http/ref/System.Net.Http.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: SendAsync
    path: src/System.Net.Http/ref/System.Net.Http.cs
    startLine: 104
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  summary: Creates an instance of  <xref href="System.Net.Http.HttpResponseMessage" data-throw-if-not-resolved="false"></xref> based on the information provided in the <xref href="System.Net.Http.HttpRequestMessage" data-throw-if-not-resolved="false"></xref> as an operation that will not block.
  syntax:
    content: protected override Threading.Tasks.Task<HttpResponseMessage> SendAsync(HttpRequestMessage request, Threading.CancellationToken cancellationToken)
    content.vb: Protected Overrides Function SendAsync(request As HttpRequestMessage, cancellationToken As Threading.CancellationToken) As Threading.Tasks.Task(Of HttpResponseMessage)
    parameters:
    - id: request
      type: System.Net.Http.HttpRequestMessage
      description: The HTTP request message.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A cancellation token to cancel the operation.
    return:
      type: System.Threading.Tasks.Task{System.Net.Http.HttpResponseMessage}
      description: Returns <xref href="System.Threading.Tasks.Task`1" data-throw-if-not-resolved="false"></xref>.The task object representing the asynchronous operation.
  overridden: System.Net.Http.HttpMessageHandler.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <em>request</em> was null.
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
references:
- uid: System.Net.Http
  isExternal: false
  name: System.Net.Http
  fullName: System.Net.Http
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System.Net.Http.HttpMessageHandler
  parent: System.Net.Http
  isExternal: false
  name: HttpMessageHandler
  fullName: System.Net.Http.HttpMessageHandler
- uid: System.Net.Http.HttpMessageHandler.Dispose
  parent: System.Net.Http.HttpMessageHandler
  isExternal: false
  name: Dispose()
  fullName: System.Net.Http.HttpMessageHandler.Dispose()
  spec.csharp:
  - uid: System.Net.Http.HttpMessageHandler.Dispose
    name: Dispose
    fullName: System.Net.Http.HttpMessageHandler.Dispose
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Net.Http.HttpMessageHandler.Dispose
    name: Dispose
    fullName: System.Net.Http.HttpMessageHandler.Dispose
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  fullName: System.Boolean
- uid: System.Net.DecompressionMethods
  parent: System.Net
  isExternal: false
  name: DecompressionMethods
  fullName: System.Net.DecompressionMethods
- uid: System.Net
  isExternal: false
  name: System.Net
  fullName: System.Net
- uid: System.Net.Http.ClientCertificateOption
  parent: System.Net.Http
  isExternal: false
  name: ClientCertificateOption
  fullName: System.Net.Http.ClientCertificateOption
- uid: System.Security.Cryptography.X509Certificates.X509CertificateCollection
  parent: System.Security.Cryptography.X509Certificates
  isExternal: false
  name: X509CertificateCollection
  fullName: System.Security.Cryptography.X509Certificates.X509CertificateCollection
- uid: System.Security.Cryptography.X509Certificates
  isExternal: false
  name: System.Security.Cryptography.X509Certificates
  fullName: System.Security.Cryptography.X509Certificates
- uid: System.Net.CookieContainer
  isExternal: false
  name: CookieContainer
  fullName: System.Net.CookieContainer
- uid: System.Net.ICredentials
  parent: System.Net
  isExternal: false
  name: ICredentials
  fullName: System.Net.ICredentials
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  fullName: System.Int32
- uid: System.Int64
  parent: System
  isExternal: false
  name: Int64
  fullName: System.Int64
- uid: System.Collections.Generic.IDictionary{System.String,System.Object}
  definition: System.Collections.Generic.IDictionary`2
  name: Collections.Generic.IDictionary<String, Object>
  fullName: System.Collections.Generic.IDictionary<System.String, System.Object>
  fullname.vb: System.Collections.Generic.IDictionary(Of System.String, System.Object)
  name.vb: Collections.Generic.IDictionary(Of String, Object)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: Collections.Generic.IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    fullName: <
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: Collections.Generic.IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Collections.Generic.IDictionary`2
  isExternal: false
  name: Generic.IDictionary<, >
  fullName: System.Collections.Generic.IDictionary<, >
  fullname.vb: System.Collections.Generic.IDictionary(Of , )
  name.vb: Generic.IDictionary(Of , )
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: Generic.IDictionary
    fullName: System.Collections.Generic.IDictionary
  - name: <
    fullName: <
  - {}
  - name: ', '
    fullName: ', '
  - {}
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: Generic.IDictionary
    fullName: System.Collections.Generic.IDictionary
  - name: '(Of '
    fullName: '(Of '
  - {}
  - name: ', '
    fullName: ', '
  - {}
  - name: )
    fullName: )
- uid: System.Net.IWebProxy
  isExternal: false
  name: IWebProxy
  fullName: System.Net.IWebProxy
- uid: System.Func{System.Net.Http.HttpRequestMessage,System.Security.Cryptography.X509Certificates.X509Certificate2,System.Security.Cryptography.X509Certificates.X509Chain,System.Net.Security.SslPolicyErrors,System.Boolean}
  definition: System.Func`5
  name: Func<HttpRequestMessage, Security.Cryptography.X509Certificates.X509Certificate2, Security.Cryptography.X509Certificates.X509Chain, Security.SslPolicyErrors, Boolean>
  fullName: System.Func<System.Net.Http.HttpRequestMessage, System.Security.Cryptography.X509Certificates.X509Certificate2, System.Security.Cryptography.X509Certificates.X509Chain, System.Net.Security.SslPolicyErrors, System.Boolean>
  fullname.vb: System.Func(Of System.Net.Http.HttpRequestMessage, System.Security.Cryptography.X509Certificates.X509Certificate2, System.Security.Cryptography.X509Certificates.X509Chain, System.Net.Security.SslPolicyErrors, System.Boolean)
  name.vb: Func(Of HttpRequestMessage, Security.Cryptography.X509Certificates.X509Certificate2, Security.Cryptography.X509Certificates.X509Chain, Security.SslPolicyErrors, Boolean)
  spec.csharp:
  - uid: System.Func`5
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Net.Http.HttpRequestMessage
    name: HttpRequestMessage
    fullName: System.Net.Http.HttpRequestMessage
  - name: ', '
    fullName: ', '
  - uid: System.Security.Cryptography.X509Certificates.X509Certificate2
    name: Security.Cryptography.X509Certificates.X509Certificate2
    fullName: System.Security.Cryptography.X509Certificates.X509Certificate2
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Security.Cryptography.X509Certificates.X509Chain
    name: Security.Cryptography.X509Certificates.X509Chain
    fullName: System.Security.Cryptography.X509Certificates.X509Chain
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Net.Security.SslPolicyErrors
    name: Security.SslPolicyErrors
    fullName: System.Net.Security.SslPolicyErrors
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`5
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Net.Http.HttpRequestMessage
    name: HttpRequestMessage
    fullName: System.Net.Http.HttpRequestMessage
  - name: ', '
    fullName: ', '
  - uid: System.Security.Cryptography.X509Certificates.X509Certificate2
    name: Security.Cryptography.X509Certificates.X509Certificate2
    fullName: System.Security.Cryptography.X509Certificates.X509Certificate2
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Security.Cryptography.X509Certificates.X509Chain
    name: Security.Cryptography.X509Certificates.X509Chain
    fullName: System.Security.Cryptography.X509Certificates.X509Chain
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Net.Security.SslPolicyErrors
    name: Security.SslPolicyErrors
    fullName: System.Net.Security.SslPolicyErrors
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
- uid: System.Func`5
  isExternal: false
  name: Func<, , , , >
  fullName: System.Func<, , , , >
  fullname.vb: System.Func(Of , , , , )
  name.vb: Func(Of , , , , )
  spec.csharp:
  - uid: System.Func`5
    name: Func
    fullName: System.Func
  - name: <
    fullName: <
  - {}
  - name: ', '
    fullName: ', '
  - {}
  - name: ', '
    fullName: ', '
  - {}
  - name: ', '
    fullName: ', '
  - {}
  - name: ', '
    fullName: ', '
  - {}
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`5
    name: Func
    fullName: System.Func
  - name: '(Of '
    fullName: '(Of '
  - {}
  - name: ', '
    fullName: ', '
  - {}
  - name: ', '
    fullName: ', '
  - {}
  - name: ', '
    fullName: ', '
  - {}
  - name: ', '
    fullName: ', '
  - {}
  - name: )
    fullName: )
- uid: System.Security.Authentication.SslProtocols
  parent: System.Security.Authentication
  isExternal: false
  name: Security.Authentication.SslProtocols
  fullName: System.Security.Authentication.SslProtocols
- uid: System.Security.Authentication
  isExternal: false
  name: System.Security.Authentication
  fullName: System.Security.Authentication
- uid: System.Net.Http.HttpMessageHandler.Dispose(System.Boolean)
  parent: System.Net.Http.HttpMessageHandler
  isExternal: true
  name: Dispose(Boolean)
  fullName: System.Net.Http.HttpMessageHandler.Dispose(System.Boolean)
  spec.csharp:
  - uid: System.Net.Http.HttpMessageHandler.Dispose(System.Boolean)
    name: Dispose
    fullName: System.Net.Http.HttpMessageHandler.Dispose
  - name: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Net.Http.HttpMessageHandler.Dispose(System.Boolean)
    name: Dispose
    fullName: System.Net.Http.HttpMessageHandler.Dispose
  - name: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
- uid: System.Net.Http.HttpMessageHandler.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)
  parent: System.Net.Http.HttpMessageHandler
  isExternal: true
  name: SendAsync(HttpRequestMessage, Threading.CancellationToken)
  fullName: System.Net.Http.HttpMessageHandler.SendAsync(System.Net.Http.HttpRequestMessage, System.Threading.CancellationToken)
  spec.csharp:
  - uid: System.Net.Http.HttpMessageHandler.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)
    name: SendAsync
    fullName: System.Net.Http.HttpMessageHandler.SendAsync
  - name: (
    fullName: (
  - uid: System.Net.Http.HttpRequestMessage
    name: HttpRequestMessage
    fullName: System.Net.Http.HttpRequestMessage
  - name: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: Threading.CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Net.Http.HttpMessageHandler.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)
    name: SendAsync
    fullName: System.Net.Http.HttpMessageHandler.SendAsync
  - name: (
    fullName: (
  - uid: System.Net.Http.HttpRequestMessage
    name: HttpRequestMessage
    fullName: System.Net.Http.HttpRequestMessage
  - name: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: Threading.CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    fullName: )
- uid: System.Net.Http.HttpRequestMessage
  parent: System.Net.Http
  isExternal: false
  name: HttpRequestMessage
  fullName: System.Net.Http.HttpRequestMessage
- uid: System.Threading.CancellationToken
  parent: System.Threading
  isExternal: false
  name: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task{System.Net.Http.HttpResponseMessage}
  definition: System.Threading.Tasks.Task`1
  name: Threading.Tasks.Task<HttpResponseMessage>
  fullName: System.Threading.Tasks.Task<System.Net.Http.HttpResponseMessage>
  fullname.vb: System.Threading.Tasks.Task(Of System.Net.Http.HttpResponseMessage)
  name.vb: Threading.Tasks.Task(Of HttpResponseMessage)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Threading.Tasks.Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Net.Http.HttpResponseMessage
    name: HttpResponseMessage
    fullName: System.Net.Http.HttpResponseMessage
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Threading.Tasks.Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Net.Http.HttpResponseMessage
    name: HttpResponseMessage
    fullName: System.Net.Http.HttpResponseMessage
  - name: )
    fullName: )
- uid: System.Threading
  isExternal: false
  name: System.Threading
  fullName: System.Threading
- uid: System.Threading.Tasks.Task`1
  parent: System.Threading.Tasks
  isExternal: false
  name: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  fullname.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
  - name: <
    fullName: <
  - name: TResult
    fullName: TResult
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
  - name: '(Of '
    fullName: '(Of '
  - name: TResult
    fullName: TResult
  - name: )
    fullName: )
- uid: System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: System.ArgumentNullException
  isExternal: false
  name: ArgumentNullException
  fullName: System.ArgumentNullException
