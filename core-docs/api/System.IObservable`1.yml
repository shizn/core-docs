items:
- uid: System.IObservable`1
  commentId: T:System.IObservable`1
  id: IObservable`1
  parent: System
  children:
  - System.IObservable`1.Subscribe(System.IObserver{`0})
  langs:
  - csharp
  - vb
  name: IObservable<T>
  fullName: System.IObservable<T>
  type: Interface
  source:
    remote:
      path: src/mscorlib/src/System/IObservable.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: IObservable
    path: src/mscorlib/src/System/IObservable.cs
    startLine: 18
  assemblies:
  - System.Runtime
  namespace: System
  summary: Defines a provider for push-based notification.
  syntax:
    content: public interface IObservable<out T>
    content.vb: Public Interface IObservable(Of Out T)
    typeParameters:
    - id: T
      description: The object that provides notification information.This type parameter is covariant. That is, you can use either the type you specified or any type that is more derived. For more information about covariance and contravariance, see Covariance and Contravariance in Generics.
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
  fullName.vb: System.IObservable(Of T)
  name.vb: IObservable(Of T)
- uid: System.IObservable`1.Subscribe(System.IObserver{`0})
  commentId: M:System.IObservable`1.Subscribe(System.IObserver{`0})
  id: Subscribe(System.IObserver{`0})
  parent: System.IObservable`1
  langs:
  - csharp
  - vb
  name: Subscribe(IObserver<T>)
  fullName: System.IObservable<T>.Subscribe(System.IObserver<T>)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/IObservable.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Subscribe
    path: src/mscorlib/src/System/IObservable.cs
    startLine: 20
  assemblies:
  - System.Runtime
  namespace: System
  summary: Notifies the provider that an observer is to receive notifications.
  syntax:
    content: IDisposable Subscribe(IObserver<T> observer)
    content.vb: Function Subscribe(observer As IObserver(Of T)) As IDisposable
    parameters:
    - id: observer
      type: System.IObserver{{T}}
      description: The object that is to receive notifications.
    return:
      type: System.IDisposable
      description: A reference to an interface that allows observers to stop receiving notifications before the provider has finished sending them.
  fullName.vb: System.IObservable(Of T).Subscribe(System.IObserver(Of T))
  name.vb: Subscribe(IObserver(Of T))
references:
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.IObserver{{T}}
  parent: System
  definition: System.IObserver`1
  name: IObserver<T>
  fullName: System.IObserver<T>
  fullname.vb: System.IObserver(Of T)
  name.vb: IObserver(Of T)
  spec.csharp:
  - uid: System.IObserver`1
    name: IObserver
    fullName: System.IObserver
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IObserver`1
    name: IObserver
    fullName: System.IObserver
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.IDisposable
  parent: System
  isExternal: false
  name: IDisposable
  fullName: System.IDisposable
- uid: System.IObserver`1
  parent: System
  isExternal: false
  name: IObserver<>
  fullName: System.IObserver<>
  fullname.vb: System.IObserver(Of )
  name.vb: IObserver(Of )
  spec.csharp:
  - uid: System.IObserver`1
    name: IObserver
    fullName: System.IObserver
  - name: <
    fullName: <
  - {}
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IObserver`1
    name: IObserver
    fullName: System.IObserver
  - name: '(Of '
    fullName: '(Of '
  - {}
  - name: )
    fullName: )
