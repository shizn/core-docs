items:
- uid: System.Runtime.InteropServices.ComTypes.FORMATETC
  commentId: T:System.Runtime.InteropServices.ComTypes.FORMATETC
  id: FORMATETC
  parent: System.Runtime.InteropServices.ComTypes
  children:
  - System.Runtime.InteropServices.ComTypes.FORMATETC.cfFormat
  - System.Runtime.InteropServices.ComTypes.FORMATETC.dwAspect
  - System.Runtime.InteropServices.ComTypes.FORMATETC.lindex
  - System.Runtime.InteropServices.ComTypes.FORMATETC.ptd
  - System.Runtime.InteropServices.ComTypes.FORMATETC.tymed
  langs:
  - csharp
  - vb
  name: FORMATETC
  fullName: System.Runtime.InteropServices.ComTypes.FORMATETC
  type: Struct
  source:
    remote:
      path: src/System.Runtime.InteropServices/ref/System.Runtime.InteropServices.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: FORMATETC
    path: src/System.Runtime.InteropServices/ref/System.Runtime.InteropServices.cs
    startLine: 996
  assemblies:
  - System.Runtime.InteropServices
  namespace: System.Runtime.InteropServices.ComTypes
  summary: "\n<p>Represents a generalized Clipboard format. </p>\n"
  remarks: "\n<p>The <xref href=\"System.Runtime.InteropServices.ComTypes.FORMATETC\" data-throw-if-not-resolved=\"false\"></xref> structure encompass a target device, the aspect or view of the data, and a storage medium indicator. Instead of a Clipboard format, OLE uses a FORMATETC data structure instead. This structure is used as a parameter in OLE functions and methods that require data format information.</p>\n<p>For more information about the <strong>FORMATETC</strong> structure, see the MSDN Library.</p>\n<p>The common language runtime throws an exception when a COM method in native code returns an HRESULT. For more information, see How to: Map HRESULTs and Exceptions.</p>\n"
  syntax:
    content: >-
      [StructLayout(LayoutKind.Sequential)]

      public struct FORMATETC
    content.vb: >-
      <StructLayout(LayoutKind.Sequential)>

      Public Structure FORMATETC
  inheritedMembers:
  - System.ValueType.Equals(System.Object)
  - System.ValueType.GetHashCode
  - System.ValueType.ToString
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetType
  attributes:
  - type: System.Runtime.InteropServices.StructLayoutAttribute
    ctor: System.Runtime.InteropServices.StructLayoutAttribute.#ctor(System.Runtime.InteropServices.LayoutKind)
    arguments:
    - type: System.Runtime.InteropServices.LayoutKind
      value: 0
  modifiers.csharp:
  - public
  - struct
  modifiers.vb:
  - Public
  - Structure
- uid: System.Runtime.InteropServices.ComTypes.FORMATETC.cfFormat
  commentId: F:System.Runtime.InteropServices.ComTypes.FORMATETC.cfFormat
  id: cfFormat
  parent: System.Runtime.InteropServices.ComTypes.FORMATETC
  langs:
  - csharp
  - vb
  name: cfFormat
  fullName: System.Runtime.InteropServices.ComTypes.FORMATETC.cfFormat
  type: Field
  source:
    remote:
      path: src/System.Runtime.InteropServices/ref/System.Runtime.InteropServices.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: cfFormat
    path: src/System.Runtime.InteropServices/ref/System.Runtime.InteropServices.cs
    startLine: 1000
  assemblies:
  - System.Runtime.InteropServices
  namespace: System.Runtime.InteropServices.ComTypes
  summary: "\n<p>Specifies the particular clipboard format of interest.</p>\n"
  remarks: "\n<p>OLE recognizes three formats: </p>\n<ul><li>\n<p>Standard interchange formats, such as <strong>CF_TEXT</strong>.</p>\n</li><li>\n<p>Private application formats understood only by the application offering the format, or by other applications offering similar features.</p>\n</li><li>\n<p>OLE formats, which are used to create linked or embedded objects.</p>\n</li></ul>\n"
  syntax:
    content: public short cfFormat
    content.vb: Public cfFormat As Short
    return:
      type: System.Int16
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Runtime.InteropServices.ComTypes.FORMATETC.dwAspect
  commentId: F:System.Runtime.InteropServices.ComTypes.FORMATETC.dwAspect
  id: dwAspect
  parent: System.Runtime.InteropServices.ComTypes.FORMATETC
  langs:
  - csharp
  - vb
  name: dwAspect
  fullName: System.Runtime.InteropServices.ComTypes.FORMATETC.dwAspect
  type: Field
  source:
    remote:
      path: src/System.Runtime.InteropServices/ref/System.Runtime.InteropServices.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: dwAspect
    path: src/System.Runtime.InteropServices/ref/System.Runtime.InteropServices.cs
    startLine: 1001
  assemblies:
  - System.Runtime.InteropServices
  namespace: System.Runtime.InteropServices.ComTypes
  summary: "\n<p>Specifies one of the <xref href=\"System.Runtime.InteropServices.ComTypes.DVASPECT\" data-throw-if-not-resolved=\"false\"></xref> enumeration constants that indicates how much detail should be contained in the rendering.</p>\n"
  remarks: "\n<p>A single clipboard format can support multiple aspects or views of the object. Most data and presentation transfer and caching methods pass aspect information. For example, a caller might request an object's iconic picture, using the metafile clipboard format to retrieve it. Note that only one <xref href=\"System.Runtime.InteropServices.ComTypes.DVASPECT\" data-throw-if-not-resolved=\"false\"></xref> value can be used in <xref href=\"System.Runtime.InteropServices.ComTypes.FORMATETC.dwAspect\" data-throw-if-not-resolved=\"false\"></xref>. That is, <xref href=\"System.Runtime.InteropServices.ComTypes.FORMATETC.dwAspect\" data-throw-if-not-resolved=\"false\"></xref> cannot be the result of a <strong>BOOLEAN OR</strong> operation on several <xref href=\"System.Runtime.InteropServices.ComTypes.DVASPECT\" data-throw-if-not-resolved=\"false\"></xref> values.</p>\n"
  syntax:
    content: public DVASPECT dwAspect
    content.vb: Public dwAspect As DVASPECT
    return:
      type: System.Runtime.InteropServices.ComTypes.DVASPECT
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Runtime.InteropServices.ComTypes.FORMATETC.lindex
  commentId: F:System.Runtime.InteropServices.ComTypes.FORMATETC.lindex
  id: lindex
  parent: System.Runtime.InteropServices.ComTypes.FORMATETC
  langs:
  - csharp
  - vb
  name: lindex
  fullName: System.Runtime.InteropServices.ComTypes.FORMATETC.lindex
  type: Field
  source:
    remote:
      path: src/System.Runtime.InteropServices/ref/System.Runtime.InteropServices.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: lindex
    path: src/System.Runtime.InteropServices/ref/System.Runtime.InteropServices.cs
    startLine: 1002
  assemblies:
  - System.Runtime.InteropServices
  namespace: System.Runtime.InteropServices.ComTypes
  summary: "\n<p>Specifies part of the aspect when the data must be split across page boundaries. </p>\n"
  remarks: "\n<p>The most common value is -1, which identifies all of the data. For the aspects <xref href=\"System.Runtime.InteropServices.ComTypes.DVASPECT.DVASPECT_THUMBNAIL\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"System.Runtime.InteropServices.ComTypes.DVASPECT.DVASPECT_ICON\" data-throw-if-not-resolved=\"false\"></xref>, <xref href=\"System.Runtime.InteropServices.ComTypes.FORMATETC.lindex\" data-throw-if-not-resolved=\"false\"></xref> is ignored.</p>\n"
  syntax:
    content: public int lindex
    content.vb: Public lindex As Integer
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Runtime.InteropServices.ComTypes.FORMATETC.ptd
  commentId: F:System.Runtime.InteropServices.ComTypes.FORMATETC.ptd
  id: ptd
  parent: System.Runtime.InteropServices.ComTypes.FORMATETC
  langs:
  - csharp
  - vb
  name: ptd
  fullName: System.Runtime.InteropServices.ComTypes.FORMATETC.ptd
  type: Field
  source:
    remote:
      path: src/System.Runtime.InteropServices/ref/System.Runtime.InteropServices.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ptd
    path: src/System.Runtime.InteropServices/ref/System.Runtime.InteropServices.cs
    startLine: 1003
  assemblies:
  - System.Runtime.InteropServices
  namespace: System.Runtime.InteropServices.ComTypes
  summary: "\n<p>Specifies a pointer to a <strong>DVTARGETDEVICE</strong> structure containing information about the target device that the data is being composed for. </p>\n"
  remarks: "\n<p>A null value is used whenever the specified data format is independent of the target device or when the caller does not care what device is used. In the latter case, if the data requires a target device, the object should pick an appropriate default device (often the display for visual components). Data obtained from an object with a null target device, such as most metafiles, is independent of the target device. The resulting data is usually the same as it would be if the user chose the Save As command from the File menu and selected an interchange format.</p>\n"
  syntax:
    content: public IntPtr ptd
    content.vb: Public ptd As IntPtr
    return:
      type: System.IntPtr
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Runtime.InteropServices.ComTypes.FORMATETC.tymed
  commentId: F:System.Runtime.InteropServices.ComTypes.FORMATETC.tymed
  id: tymed
  parent: System.Runtime.InteropServices.ComTypes.FORMATETC
  langs:
  - csharp
  - vb
  name: tymed
  fullName: System.Runtime.InteropServices.ComTypes.FORMATETC.tymed
  type: Field
  source:
    remote:
      path: src/System.Runtime.InteropServices/ref/System.Runtime.InteropServices.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: tymed
    path: src/System.Runtime.InteropServices/ref/System.Runtime.InteropServices.cs
    startLine: 1004
  assemblies:
  - System.Runtime.InteropServices
  namespace: System.Runtime.InteropServices.ComTypes
  summary: "\n<p>Specifies one of the <xref href=\"System.Runtime.InteropServices.ComTypes.TYMED\" data-throw-if-not-resolved=\"false\"></xref> enumeration constants, which indicates the type of storage medium used to transfer the object's data. </p>\n"
  remarks: "\n<p>Data can be transferred using whatever medium makes sense for the object. For example, data can be passed using global memory, a disk file, or structured storage objects. For more information, see the <xref href=\"System.Runtime.InteropServices.ComTypes.TYMED\" data-throw-if-not-resolved=\"false\"></xref> enumeration.</p>\n"
  syntax:
    content: public TYMED tymed
    content.vb: Public tymed As TYMED
    return:
      type: System.Runtime.InteropServices.ComTypes.TYMED
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: System.Runtime.InteropServices.ComTypes
  isExternal: false
  name: System.Runtime.InteropServices.ComTypes
  fullName: System.Runtime.InteropServices.ComTypes
- uid: System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  name: Equals(Object)
  fullName: System.ValueType.Equals(System.Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    fullName: System.ValueType.Equals
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    fullName: System.ValueType.Equals
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: false
  name: GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    fullName: System.ValueType.GetHashCode
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    fullName: System.ValueType.GetHashCode
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.ValueType.ToString
  parent: System.ValueType
  isExternal: false
  name: ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    fullName: System.ValueType.ToString
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    fullName: System.ValueType.ToString
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.ValueType
  parent: System
  isExternal: false
  name: ValueType
  fullName: System.ValueType
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Int16
  parent: System
  isExternal: false
  name: Int16
  fullName: System.Int16
- uid: System.Runtime.InteropServices.ComTypes.DVASPECT
  parent: System.Runtime.InteropServices.ComTypes
  isExternal: false
  name: DVASPECT
  fullName: System.Runtime.InteropServices.ComTypes.DVASPECT
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  fullName: System.Int32
- uid: System.IntPtr
  parent: System
  isExternal: false
  name: IntPtr
  fullName: System.IntPtr
- uid: System.Runtime.InteropServices.ComTypes.TYMED
  parent: System.Runtime.InteropServices.ComTypes
  isExternal: false
  name: TYMED
  fullName: System.Runtime.InteropServices.ComTypes.TYMED
