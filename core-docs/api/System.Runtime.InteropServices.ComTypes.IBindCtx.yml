items:
- uid: System.Runtime.InteropServices.ComTypes.IBindCtx
  commentId: T:System.Runtime.InteropServices.ComTypes.IBindCtx
  id: IBindCtx
  parent: System.Runtime.InteropServices.ComTypes
  children:
  - System.Runtime.InteropServices.ComTypes.IBindCtx.EnumObjectParam(System.Runtime.InteropServices.ComTypes.IEnumString@)
  - System.Runtime.InteropServices.ComTypes.IBindCtx.GetBindOptions(System.Runtime.InteropServices.ComTypes.BIND_OPTS@)
  - System.Runtime.InteropServices.ComTypes.IBindCtx.GetObjectParam(System.String,System.Object@)
  - System.Runtime.InteropServices.ComTypes.IBindCtx.GetRunningObjectTable(System.Runtime.InteropServices.ComTypes.IRunningObjectTable@)
  - System.Runtime.InteropServices.ComTypes.IBindCtx.RegisterObjectBound(System.Object)
  - System.Runtime.InteropServices.ComTypes.IBindCtx.RegisterObjectParam(System.String,System.Object)
  - System.Runtime.InteropServices.ComTypes.IBindCtx.ReleaseBoundObjects
  - System.Runtime.InteropServices.ComTypes.IBindCtx.RevokeObjectBound(System.Object)
  - System.Runtime.InteropServices.ComTypes.IBindCtx.RevokeObjectParam(System.String)
  - System.Runtime.InteropServices.ComTypes.IBindCtx.SetBindOptions(System.Runtime.InteropServices.ComTypes.BIND_OPTS@)
  langs:
  - csharp
  - vb
  name: IBindCtx
  fullName: System.Runtime.InteropServices.ComTypes.IBindCtx
  type: Interface
  source:
    remote:
      path: src/System.Runtime.InteropServices/ref/System.Runtime.InteropServices.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IBindCtx
    path: src/System.Runtime.InteropServices/ref/System.Runtime.InteropServices.cs
    startLine: 1060
  assemblies:
  - System.Runtime.InteropServices
  namespace: System.Runtime.InteropServices.ComTypes
  summary: "\n<p>Provides the managed definition of the <strong>IBindCtx</strong> interface.</p>\n"
  remarks: "\n<p>For more information, see the existing documentation for <strong>IBindCtx</strong> in the MSDN library.</p>\n<p>The common language runtime throws an exception when a COM method in native code returns an HRESULT. For more information, see How to: Map HRESULTs and Exceptions.</p>\n"
  syntax:
    content: public interface IBindCtx
    content.vb: Public Interface IBindCtx
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: System.Runtime.InteropServices.ComTypes.IBindCtx.EnumObjectParam(System.Runtime.InteropServices.ComTypes.IEnumString@)
  commentId: M:System.Runtime.InteropServices.ComTypes.IBindCtx.EnumObjectParam(System.Runtime.InteropServices.ComTypes.IEnumString@)
  id: EnumObjectParam(System.Runtime.InteropServices.ComTypes.IEnumString@)
  parent: System.Runtime.InteropServices.ComTypes.IBindCtx
  langs:
  - csharp
  - vb
  name: EnumObjectParam(out IEnumString)
  fullName: System.Runtime.InteropServices.ComTypes.IBindCtx.EnumObjectParam(out System.Runtime.InteropServices.ComTypes.IEnumString)
  type: Method
  source:
    remote:
      path: src/System.Runtime.InteropServices/ref/System.Runtime.InteropServices.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: EnumObjectParam
    path: src/System.Runtime.InteropServices/ref/System.Runtime.InteropServices.cs
    startLine: 1064
  assemblies:
  - System.Runtime.InteropServices
  namespace: System.Runtime.InteropServices.ComTypes
  summary: "\n<p>Enumerates the strings that are the keys of the internally maintained table of contextual object parameters.</p>\n"
  remarks: "\n<p>For more information, see the existing documentation for <strong>IBindCtx::EnumObjectParam</strong> in the MSDN library.</p>\n"
  syntax:
    content: void EnumObjectParam(out IEnumString ppenum)
    content.vb: Sub EnumObjectParam(ByRef ppenum As IEnumString)
    parameters:
    - id: ppenum
      type: System.Runtime.InteropServices.ComTypes.IEnumString
      description: "\n<p>When this method returns, contains a reference to the object parameter enumerator. This parameter is passed uninitialized.</p>\n"
  fullName.vb: System.Runtime.InteropServices.ComTypes.IBindCtx.EnumObjectParam(ByRef System.Runtime.InteropServices.ComTypes.IEnumString)
  name.vb: EnumObjectParam(ByRef IEnumString)
- uid: System.Runtime.InteropServices.ComTypes.IBindCtx.GetBindOptions(System.Runtime.InteropServices.ComTypes.BIND_OPTS@)
  commentId: M:System.Runtime.InteropServices.ComTypes.IBindCtx.GetBindOptions(System.Runtime.InteropServices.ComTypes.BIND_OPTS@)
  id: GetBindOptions(System.Runtime.InteropServices.ComTypes.BIND_OPTS@)
  parent: System.Runtime.InteropServices.ComTypes.IBindCtx
  langs:
  - csharp
  - vb
  name: GetBindOptions(ref BIND_OPTS)
  fullName: System.Runtime.InteropServices.ComTypes.IBindCtx.GetBindOptions(ref System.Runtime.InteropServices.ComTypes.BIND_OPTS)
  type: Method
  source:
    remote:
      path: src/System.Runtime.InteropServices/ref/System.Runtime.InteropServices.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetBindOptions
    path: src/System.Runtime.InteropServices/ref/System.Runtime.InteropServices.cs
    startLine: 1065
  assemblies:
  - System.Runtime.InteropServices
  namespace: System.Runtime.InteropServices.ComTypes
  summary: "\n<p>Returns the current binding options stored in the current bind context.</p>\n"
  remarks: "\n<p>For more information, see the existing documentation for <strong>IBindCtx::GetBindOptions</strong> in the MSDN library.</p>\n"
  syntax:
    content: void GetBindOptions(ref BIND_OPTS pbindopts)
    content.vb: Sub GetBindOptions(ByRef pbindopts As BIND_OPTS)
    parameters:
    - id: pbindopts
      type: System.Runtime.InteropServices.ComTypes.BIND_OPTS
      description: "\n<p>A pointer to the structure to receive the binding options. </p>\n"
  fullName.vb: System.Runtime.InteropServices.ComTypes.IBindCtx.GetBindOptions(ByRef System.Runtime.InteropServices.ComTypes.BIND_OPTS)
  name.vb: GetBindOptions(ByRef BIND_OPTS)
- uid: System.Runtime.InteropServices.ComTypes.IBindCtx.GetObjectParam(System.String,System.Object@)
  commentId: M:System.Runtime.InteropServices.ComTypes.IBindCtx.GetObjectParam(System.String,System.Object@)
  id: GetObjectParam(System.String,System.Object@)
  parent: System.Runtime.InteropServices.ComTypes.IBindCtx
  langs:
  - csharp
  - vb
  name: GetObjectParam(String, out Object)
  fullName: System.Runtime.InteropServices.ComTypes.IBindCtx.GetObjectParam(System.String, out System.Object)
  type: Method
  source:
    remote:
      path: src/System.Runtime.InteropServices/ref/System.Runtime.InteropServices.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetObjectParam
    path: src/System.Runtime.InteropServices/ref/System.Runtime.InteropServices.cs
    startLine: 1066
  assemblies:
  - System.Runtime.InteropServices
  namespace: System.Runtime.InteropServices.ComTypes
  summary: "\n<p>Looks up the given key in the internally maintained table of contextual object parameters and returns the corresponding object, if one exists.</p>\n"
  remarks: "\n<p>For more information, see the existing documentation for <strong>IBindCtx::GetObjectParam</strong> in the MSDN library.</p>\n"
  syntax:
    content: void GetObjectParam(string pszKey, out object ppunk)
    content.vb: Sub GetObjectParam(pszKey As String, ByRef ppunk As Object)
    parameters:
    - id: pszKey
      type: System.String
      description: "\n<p>The name of the object to search for. </p>\n"
    - id: ppunk
      type: System.Object
      description: "\n<p>When this method returns, contains the object interface pointer. This parameter is passed uninitialized.</p>\n"
  fullName.vb: System.Runtime.InteropServices.ComTypes.IBindCtx.GetObjectParam(System.String, ByRef System.Object)
  name.vb: GetObjectParam(String, ByRef Object)
- uid: System.Runtime.InteropServices.ComTypes.IBindCtx.GetRunningObjectTable(System.Runtime.InteropServices.ComTypes.IRunningObjectTable@)
  commentId: M:System.Runtime.InteropServices.ComTypes.IBindCtx.GetRunningObjectTable(System.Runtime.InteropServices.ComTypes.IRunningObjectTable@)
  id: GetRunningObjectTable(System.Runtime.InteropServices.ComTypes.IRunningObjectTable@)
  parent: System.Runtime.InteropServices.ComTypes.IBindCtx
  langs:
  - csharp
  - vb
  name: GetRunningObjectTable(out IRunningObjectTable)
  fullName: System.Runtime.InteropServices.ComTypes.IBindCtx.GetRunningObjectTable(out System.Runtime.InteropServices.ComTypes.IRunningObjectTable)
  type: Method
  source:
    remote:
      path: src/System.Runtime.InteropServices/ref/System.Runtime.InteropServices.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetRunningObjectTable
    path: src/System.Runtime.InteropServices/ref/System.Runtime.InteropServices.cs
    startLine: 1067
  assemblies:
  - System.Runtime.InteropServices
  namespace: System.Runtime.InteropServices.ComTypes
  summary: "\n<p>Returns access to the Running Object Table (ROT) relevant to this binding process.</p>\n"
  remarks: "\n<p>For more information, see the existing documentation for <strong>IBindCtx::GetRunningObjectTable</strong> in the MSDN library.</p>\n"
  syntax:
    content: void GetRunningObjectTable(out IRunningObjectTable pprot)
    content.vb: Sub GetRunningObjectTable(ByRef pprot As IRunningObjectTable)
    parameters:
    - id: pprot
      type: System.Runtime.InteropServices.ComTypes.IRunningObjectTable
      description: "\n<p>When this method returns, contains a reference to the Running Object Table (ROT). This parameter is passed uninitialized.</p>\n"
  fullName.vb: System.Runtime.InteropServices.ComTypes.IBindCtx.GetRunningObjectTable(ByRef System.Runtime.InteropServices.ComTypes.IRunningObjectTable)
  name.vb: GetRunningObjectTable(ByRef IRunningObjectTable)
- uid: System.Runtime.InteropServices.ComTypes.IBindCtx.RegisterObjectBound(System.Object)
  commentId: M:System.Runtime.InteropServices.ComTypes.IBindCtx.RegisterObjectBound(System.Object)
  id: RegisterObjectBound(System.Object)
  parent: System.Runtime.InteropServices.ComTypes.IBindCtx
  langs:
  - csharp
  - vb
  name: RegisterObjectBound(Object)
  fullName: System.Runtime.InteropServices.ComTypes.IBindCtx.RegisterObjectBound(System.Object)
  type: Method
  source:
    remote:
      path: src/System.Runtime.InteropServices/ref/System.Runtime.InteropServices.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: RegisterObjectBound
    path: src/System.Runtime.InteropServices/ref/System.Runtime.InteropServices.cs
    startLine: 1068
  assemblies:
  - System.Runtime.InteropServices
  namespace: System.Runtime.InteropServices.ComTypes
  summary: "\n<p>Registers the passed object as one of the objects that has been bound during a moniker operation and that should be released when the operation is complete.</p>\n"
  remarks: "\n<p>For more information, see the existing documentation for <strong>IBindCtx::RegisterObjectBound</strong> in the MSDN library.</p>\n"
  syntax:
    content: void RegisterObjectBound(object punk)
    content.vb: Sub RegisterObjectBound(punk As Object)
    parameters:
    - id: punk
      type: System.Object
      description: "\n<p>The object to register for release. </p>\n"
- uid: System.Runtime.InteropServices.ComTypes.IBindCtx.RegisterObjectParam(System.String,System.Object)
  commentId: M:System.Runtime.InteropServices.ComTypes.IBindCtx.RegisterObjectParam(System.String,System.Object)
  id: RegisterObjectParam(System.String,System.Object)
  parent: System.Runtime.InteropServices.ComTypes.IBindCtx
  langs:
  - csharp
  - vb
  name: RegisterObjectParam(String, Object)
  fullName: System.Runtime.InteropServices.ComTypes.IBindCtx.RegisterObjectParam(System.String, System.Object)
  type: Method
  source:
    remote:
      path: src/System.Runtime.InteropServices/ref/System.Runtime.InteropServices.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: RegisterObjectParam
    path: src/System.Runtime.InteropServices/ref/System.Runtime.InteropServices.cs
    startLine: 1069
  assemblies:
  - System.Runtime.InteropServices
  namespace: System.Runtime.InteropServices.ComTypes
  summary: "\n<p>Registers the specified object pointer under the specified name in the internally maintained table of object pointers.</p>\n"
  remarks: "\n<p>For more information, see the existing documentation for <strong>IBindCtx::RegisterObjectParam</strong> in the MSDN library.</p>\n"
  syntax:
    content: void RegisterObjectParam(string pszKey, object punk)
    content.vb: Sub RegisterObjectParam(pszKey As String, punk As Object)
    parameters:
    - id: pszKey
      type: System.String
      description: "\n<p>The name to register <em>punk</em> with. </p>\n"
    - id: punk
      type: System.Object
      description: "\n<p>The object to register. </p>\n"
- uid: System.Runtime.InteropServices.ComTypes.IBindCtx.ReleaseBoundObjects
  commentId: M:System.Runtime.InteropServices.ComTypes.IBindCtx.ReleaseBoundObjects
  id: ReleaseBoundObjects
  parent: System.Runtime.InteropServices.ComTypes.IBindCtx
  langs:
  - csharp
  - vb
  name: ReleaseBoundObjects()
  fullName: System.Runtime.InteropServices.ComTypes.IBindCtx.ReleaseBoundObjects()
  type: Method
  source:
    remote:
      path: src/System.Runtime.InteropServices/ref/System.Runtime.InteropServices.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ReleaseBoundObjects
    path: src/System.Runtime.InteropServices/ref/System.Runtime.InteropServices.cs
    startLine: 1070
  assemblies:
  - System.Runtime.InteropServices
  namespace: System.Runtime.InteropServices.ComTypes
  summary: "\n<p>Releases all the objects currently registered with the bind context by using the <xref href=\"System.Runtime.InteropServices.ComTypes.IBindCtx.RegisterObjectBound(System.Object)\" data-throw-if-not-resolved=\"false\"></xref> method.</p>\n"
  remarks: "\n<p>For more information, see the existing documentation for <strong>IBindCtx::ReleaseBoundObjects</strong> in the MSDN library.</p>\n"
  syntax:
    content: void ReleaseBoundObjects()
    content.vb: Sub ReleaseBoundObjects
- uid: System.Runtime.InteropServices.ComTypes.IBindCtx.RevokeObjectBound(System.Object)
  commentId: M:System.Runtime.InteropServices.ComTypes.IBindCtx.RevokeObjectBound(System.Object)
  id: RevokeObjectBound(System.Object)
  parent: System.Runtime.InteropServices.ComTypes.IBindCtx
  langs:
  - csharp
  - vb
  name: RevokeObjectBound(Object)
  fullName: System.Runtime.InteropServices.ComTypes.IBindCtx.RevokeObjectBound(System.Object)
  type: Method
  source:
    remote:
      path: src/System.Runtime.InteropServices/ref/System.Runtime.InteropServices.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: RevokeObjectBound
    path: src/System.Runtime.InteropServices/ref/System.Runtime.InteropServices.cs
    startLine: 1071
  assemblies:
  - System.Runtime.InteropServices
  namespace: System.Runtime.InteropServices.ComTypes
  summary: "\n<p>Removes the object from the set of registered objects that need to be released.</p>\n"
  remarks: "\n<p>For more information, see the existing documentation for <strong>IBindCtx::RevokeObjectBound</strong> in the MSDN library.</p>\n"
  syntax:
    content: void RevokeObjectBound(object punk)
    content.vb: Sub RevokeObjectBound(punk As Object)
    parameters:
    - id: punk
      type: System.Object
      description: "\n<p>The object to unregister for release. </p>\n"
- uid: System.Runtime.InteropServices.ComTypes.IBindCtx.RevokeObjectParam(System.String)
  commentId: M:System.Runtime.InteropServices.ComTypes.IBindCtx.RevokeObjectParam(System.String)
  id: RevokeObjectParam(System.String)
  parent: System.Runtime.InteropServices.ComTypes.IBindCtx
  langs:
  - csharp
  - vb
  name: RevokeObjectParam(String)
  fullName: System.Runtime.InteropServices.ComTypes.IBindCtx.RevokeObjectParam(System.String)
  type: Method
  source:
    remote:
      path: src/System.Runtime.InteropServices/ref/System.Runtime.InteropServices.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: RevokeObjectParam
    path: src/System.Runtime.InteropServices/ref/System.Runtime.InteropServices.cs
    startLine: 1072
  assemblies:
  - System.Runtime.InteropServices
  namespace: System.Runtime.InteropServices.ComTypes
  summary: "\n<p>Revokes the registration of the object currently found under the specified key in the internally maintained table of contextual object parameters, if that key is currently registered.</p>\n"
  remarks: "\n<p>For more information, see the existing documentation for <strong>IBindCtx::RevokeObjectParam</strong> in the MSDN library.</p>\n"
  syntax:
    content: int RevokeObjectParam(string pszKey)
    content.vb: Function RevokeObjectParam(pszKey As String) As Integer
    parameters:
    - id: pszKey
      type: System.String
      description: "\n<p>The key to unregister. </p>\n"
    return:
      type: System.Int32
      description: "\n<p>An <strong>S_OK</strong><strong>HRESULT</strong> value if the specified key was successfully removed from the table; otherwise, an <strong>S_FALSE</strong><strong>HRESULT</strong> value.</p>\n"
- uid: System.Runtime.InteropServices.ComTypes.IBindCtx.SetBindOptions(System.Runtime.InteropServices.ComTypes.BIND_OPTS@)
  commentId: M:System.Runtime.InteropServices.ComTypes.IBindCtx.SetBindOptions(System.Runtime.InteropServices.ComTypes.BIND_OPTS@)
  id: SetBindOptions(System.Runtime.InteropServices.ComTypes.BIND_OPTS@)
  parent: System.Runtime.InteropServices.ComTypes.IBindCtx
  langs:
  - csharp
  - vb
  name: SetBindOptions(ref BIND_OPTS)
  fullName: System.Runtime.InteropServices.ComTypes.IBindCtx.SetBindOptions(ref System.Runtime.InteropServices.ComTypes.BIND_OPTS)
  type: Method
  source:
    remote:
      path: src/System.Runtime.InteropServices/ref/System.Runtime.InteropServices.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: SetBindOptions
    path: src/System.Runtime.InteropServices/ref/System.Runtime.InteropServices.cs
    startLine: 1073
  assemblies:
  - System.Runtime.InteropServices
  namespace: System.Runtime.InteropServices.ComTypes
  summary: "\n<p>Stores a block of parameters in the bind context. These parameters will apply to later <strong>UCOMIMoniker</strong> operations that use this bind context.</p>\n"
  remarks: "\n<p>For more information, see the existing documentation for <strong>IBindCtx::SetBindOptions</strong> in the MSDN library.</p>\n"
  syntax:
    content: void SetBindOptions(ref BIND_OPTS pbindopts)
    content.vb: Sub SetBindOptions(ByRef pbindopts As BIND_OPTS)
    parameters:
    - id: pbindopts
      type: System.Runtime.InteropServices.ComTypes.BIND_OPTS
      description: "\n<p>The structure containing the binding options to set. </p>\n"
  fullName.vb: System.Runtime.InteropServices.ComTypes.IBindCtx.SetBindOptions(ByRef System.Runtime.InteropServices.ComTypes.BIND_OPTS)
  name.vb: SetBindOptions(ByRef BIND_OPTS)
references:
- uid: System.Runtime.InteropServices.ComTypes
  isExternal: false
  name: System.Runtime.InteropServices.ComTypes
  fullName: System.Runtime.InteropServices.ComTypes
- uid: System.Runtime.InteropServices.ComTypes.IEnumString
  parent: System.Runtime.InteropServices.ComTypes
  isExternal: false
  name: IEnumString
  fullName: System.Runtime.InteropServices.ComTypes.IEnumString
- uid: System.Runtime.InteropServices.ComTypes.BIND_OPTS
  parent: System.Runtime.InteropServices.ComTypes
  isExternal: false
  name: BIND_OPTS
  fullName: System.Runtime.InteropServices.ComTypes.BIND_OPTS
- uid: System.String
  parent: System
  isExternal: false
  name: String
  fullName: System.String
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Runtime.InteropServices.ComTypes.IRunningObjectTable
  parent: System.Runtime.InteropServices.ComTypes
  isExternal: false
  name: IRunningObjectTable
  fullName: System.Runtime.InteropServices.ComTypes.IRunningObjectTable
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  fullName: System.Int32
