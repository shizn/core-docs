items:
- uid: System.Xml.Linq.XDocumentType
  commentId: T:System.Xml.Linq.XDocumentType
  id: XDocumentType
  parent: System.Xml.Linq
  children:
  - System.Xml.Linq.XDocumentType.#ctor(System.String,System.String,System.String,System.String)
  - System.Xml.Linq.XDocumentType.#ctor(System.Xml.Linq.XDocumentType)
  - System.Xml.Linq.XDocumentType.InternalSubset
  - System.Xml.Linq.XDocumentType.Name
  - System.Xml.Linq.XDocumentType.NodeType
  - System.Xml.Linq.XDocumentType.PublicId
  - System.Xml.Linq.XDocumentType.SystemId
  - System.Xml.Linq.XDocumentType.WriteTo(System.Xml.XmlWriter)
  langs:
  - csharp
  - vb
  name: XDocumentType
  fullName: System.Xml.Linq.XDocumentType
  type: Class
  source:
    remote:
      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: XDocumentType
    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
    startLine: 189
  assemblies:
  - System.Xml.XDocument
  namespace: System.Xml.Linq
  summary: "\n<p>Represents an XML Document Type Definition (DTD). </p>\n"
  remarks: "\n<p>Data Type Definitions (DTD) in XML are a way to do the following:</p>\n<ul><li>\n<p>Validate XML trees to a limited extent.</p>\n</li><li>\n<p>Expand entities, which is a form of text replacement.</p>\n</li><li>\n<p>Supply default attributes.</p>\n</li></ul>\n<p>This class represents the XML concept of a DTD.</p>\n<p>DTD support in LINQ to XML is limited. </p>\n<p>LINQ to XML will expand internal entities by default, but it will not resolve external entity references unless an <xref href=\"System.Xml.XmlReader\" data-throw-if-not-resolved=\"false\"></xref> with an associated <xref href=\"System.Xml.XmlResolver\" data-throw-if-not-resolved=\"false\"></xref> is used to load the XML tree. </p>\n<p>LINQ to XML will not validate a document against a DTD, but you can use a validating <xref href=\"System.Xml.XmlReader\" data-throw-if-not-resolved=\"false\"></xref> to perform DTD validation if necessary.</p>\n<p>To validate an LINQ to XML tree against an XML schema, use the <see cref=\"Overload:System.Xml.Schema.Extensions.Validate\"></see> method.</p>\n<p>When a document contains entity references that are defined in a DTD, the references are expanded upon creation of the XML tree. However, when you serialize or save the XML tree, the content of the expanded entities is preserved; the entity references are not.</p>\n<p>Default attributes from the DTD will be materialized as regular attributes in the XML tree. After a default attribute from the DTD is materialized, there is no way to determine that the attribute was a default attribute from the DTD.</p>\n<p>You can populate an XML tree with an XML document that contains an internal DTD. The XML tree will then contain a <xref href=\"System.Xml.Linq.XDocument.DocumentType\" data-throw-if-not-resolved=\"false\"></xref> node. When you serialize or save the tree, the internal DTD will also be saved as part of the document.</p>\n"
  example:
  - 
  syntax:
    content: 'public class XDocumentType : XNode'
    content.vb: >-
      Public Class XDocumentType
          Inherits XNode
  inheritance:
  - System.Object
  - System.Xml.Linq.XObject
  - System.Xml.Linq.XNode
  inheritedMembers:
  - System.Xml.Linq.XNode.DocumentOrderComparer
  - System.Xml.Linq.XNode.EqualityComparer
  - System.Xml.Linq.XNode.NextNode
  - System.Xml.Linq.XNode.PreviousNode
  - System.Xml.Linq.XNode.AddAfterSelf(System.Object)
  - System.Xml.Linq.XNode.AddAfterSelf(System.Object[])
  - System.Xml.Linq.XNode.AddBeforeSelf(System.Object)
  - System.Xml.Linq.XNode.AddBeforeSelf(System.Object[])
  - System.Xml.Linq.XNode.Ancestors
  - System.Xml.Linq.XNode.Ancestors(System.Xml.Linq.XName)
  - System.Xml.Linq.XNode.CompareDocumentOrder(System.Xml.Linq.XNode,System.Xml.Linq.XNode)
  - System.Xml.Linq.XNode.CreateReader
  - System.Xml.Linq.XNode.CreateReader(System.Xml.Linq.ReaderOptions)
  - System.Xml.Linq.XNode.DeepEquals(System.Xml.Linq.XNode,System.Xml.Linq.XNode)
  - System.Xml.Linq.XNode.ElementsAfterSelf
  - System.Xml.Linq.XNode.ElementsAfterSelf(System.Xml.Linq.XName)
  - System.Xml.Linq.XNode.ElementsBeforeSelf
  - System.Xml.Linq.XNode.ElementsBeforeSelf(System.Xml.Linq.XName)
  - System.Xml.Linq.XNode.IsAfter(System.Xml.Linq.XNode)
  - System.Xml.Linq.XNode.IsBefore(System.Xml.Linq.XNode)
  - System.Xml.Linq.XNode.NodesAfterSelf
  - System.Xml.Linq.XNode.NodesBeforeSelf
  - System.Xml.Linq.XNode.ReadFrom(System.Xml.XmlReader)
  - System.Xml.Linq.XNode.Remove
  - System.Xml.Linq.XNode.ReplaceWith(System.Object)
  - System.Xml.Linq.XNode.ReplaceWith(System.Object[])
  - System.Xml.Linq.XNode.ToString
  - System.Xml.Linq.XNode.ToString(System.Xml.Linq.SaveOptions)
  - System.Xml.Linq.XObject.BaseUri
  - System.Xml.Linq.XObject.Document
  - System.Xml.Linq.XObject.Parent
  - System.Xml.Linq.XObject.Changed
  - System.Xml.Linq.XObject.Changing
  - System.Xml.Linq.XObject.AddAnnotation(System.Object)
  - System.Xml.Linq.XObject.Annotation(System.Type)
  - System.Xml.Linq.XObject.Annotation``1
  - System.Xml.Linq.XObject.Annotations(System.Type)
  - System.Xml.Linq.XObject.Annotations``1
  - System.Xml.Linq.XObject.RemoveAnnotations(System.Type)
  - System.Xml.Linq.XObject.RemoveAnnotations``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: System.Xml.Linq.XDocumentType.#ctor(System.String,System.String,System.String,System.String)
  commentId: M:System.Xml.Linq.XDocumentType.#ctor(System.String,System.String,System.String,System.String)
  id: '#ctor(System.String,System.String,System.String,System.String)'
  parent: System.Xml.Linq.XDocumentType
  langs:
  - csharp
  - vb
  name: XDocumentType(String, String, String, String)
  fullName: System.Xml.Linq.XDocumentType.XDocumentType(System.String, System.String, System.String, System.String)
  type: Constructor
  source:
    remote:
      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
    startLine: 191
  assemblies:
  - System.Xml.XDocument
  namespace: System.Xml.Linq
  summary: "\n<p>Initializes an instance of the <xref href=\"System.Xml.Linq.XDocumentType\" data-throw-if-not-resolved=\"false\"></xref> class. </p>\n"
  example:
  - "\n<p>The following example creates a document with an internal DTD. When it creates the <xref href=\"System.Xml.Linq.XDocumentType\" data-throw-if-not-resolved=\"false\"></xref> object, it specifies the qualified name of the DTD (Pubs), and a string that contains the internal subset. Because the document does not use a public or private external DTD, the <em>publicId</em> and <em>systemId</em> are set to <strong>null</strong>.</p>\n<pre><code class=\"c#\">string internalSubset = @\"<!ELEMENT Pubs (Book+)>\n<!ELEMENT Book (Title, Author)>\n<!ELEMENT Title (#PCDATA)>\n<!ELEMENT Author (#PCDATA)>\";\n\nstring target = \"xml-stylesheet\";\nstring data = \"href=\\\"mystyle.css\\\" title=\\\"Compact\\\" type=\\\"text/css\\\"\";\n\nXDocument doc = new XDocument(\nnew XComment(\"This is a comment.\"),\nnew XProcessingInstruction(target, data),\nnew XDocumentType(\"Pubs\", null, null, internalSubset),\nnew XElement(\"Pubs\", \nnew XElement(\"Book\",\n    new XElement(\"Title\", \"Artifacts of Roman Civilization\"),\n    new XElement(\"Author\", \"Moreno, Jordao\")\n),\nnew XElement(\"Book\",\n    new XElement(\"Title\", \"Midieval Tools and Implements\"),\n    new XElement(\"Author\", \"Gazit, Inbar\")\n)\n),\nnew XComment(\"This is another comment.\")\n);\ndoc.Declaration = new XDeclaration(\"1.0\", \"utf-8\", \"true\");\n\nConsole.WriteLine(doc);</code></pre>\n<pre><code class=\"vb\">Dim internalSubset = _\n\"<!ELEMENT Pubs (Book+)>\" & Environment.NewLine & _\n\"<!ELEMENT Book (Title, Author)>\" & Environment.NewLine & _\n\"<!ELEMENT Title (#PCDATA)>\" & Environment.NewLine & _\n\"<!ELEMENT Author (#PCDATA)>\"\n\nDim doc As XDocument = _\n<?xml version=\"1.0\" encoding=\"utf-8\" standalone=\"yes\"?>\n<!--This is a comment.-->\n<?xml-stylesheet href=\"mystyle.css\" title=\"Compact\" type=\"text/css\"?>\n<Pubs>\n<Book>\n    <Title>Artifacts of Roman Civilization</Title>\n    <Author>Moreno, Jordao</Author>\n</Book>\n<Book>\n    <Title>Midieval Tools and Implements</Title>\n    <Author>Gazit, Inbar</Author>\n</Book>\n</Pubs>\n<!--This is another comment.-->\n\ndoc.FirstNode.NextNode.AddAfterSelf(new XDocumentType(\"Pubs\", Nothing, Nothing, internalSubset))\n\nConsole.WriteLine(doc)</code></pre>\n<p>This example produces the following output:</p>\n<pre><code class=\"xml\"><!--This is a comment.-->\n<?xml-stylesheet href=\"mystyle.css\" title=\"Compact\" type=\"text/css\"?>\n<!DOCTYPE Pubs [<!ELEMENT Pubs (Book+)>\n<!ELEMENT Book (Title, Author)>\n<!ELEMENT Title (#PCDATA)>\n<!ELEMENT Author (#PCDATA)>]>\n<Pubs>\n<Book>\n<Title>Artifacts of Roman Civilization</Title>\n<Author>Moreno, Jordao</Author>\n</Book>\n<Book>\n<Title>Midieval Tools and Implements</Title>\n<Author>Gazit, Inbar</Author>\n</Book>\n</Pubs>\n<!--This is another comment.--></code></pre>\n"
  syntax:
    content: public XDocumentType(string name, string publicId, string systemId, string internalSubset)
    content.vb: Public Sub New(name As String, publicId As String, systemId As String, internalSubset As String)
    parameters:
    - id: name
      type: System.String
      description: "\n<p>A <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref> that contains the qualified name of the DTD, which is the same as the qualified name of the root element of the XML document.</p>\n"
    - id: publicId
      type: System.String
      description: "\n<p>A <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref> that contains the public identifier of an external public DTD.</p>\n"
    - id: systemId
      type: System.String
      description: "\n<p>A <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref> that contains the system identifier of an external private DTD.</p>\n"
    - id: internalSubset
      type: System.String
      description: "\n<p>A <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref> that contains the internal subset for an internal DTD.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Xml.Linq.XDocumentType.#ctor(System.Xml.Linq.XDocumentType)
  commentId: M:System.Xml.Linq.XDocumentType.#ctor(System.Xml.Linq.XDocumentType)
  id: '#ctor(System.Xml.Linq.XDocumentType)'
  parent: System.Xml.Linq.XDocumentType
  langs:
  - csharp
  - vb
  name: XDocumentType(XDocumentType)
  fullName: System.Xml.Linq.XDocumentType.XDocumentType(System.Xml.Linq.XDocumentType)
  type: Constructor
  source:
    remote:
      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
    startLine: 192
  assemblies:
  - System.Xml.XDocument
  namespace: System.Xml.Linq
  summary: "\n<p>Initializes an instance of the <xref href=\"System.Xml.Linq.XDocumentType\" data-throw-if-not-resolved=\"false\"></xref> class from another <xref href=\"System.Xml.Linq.XDocumentType\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  remarks: "\n<p>This constructor is primarily used internally when making a deep copy of an XML tree.</p>\n"
  example:
  - 
  syntax:
    content: public XDocumentType(XDocumentType other)
    content.vb: Public Sub New(other As XDocumentType)
    parameters:
    - id: other
      type: System.Xml.Linq.XDocumentType
      description: "\n<p>An <xref href=\"System.Xml.Linq.XDocumentType\" data-throw-if-not-resolved=\"false\"></xref> object to copy from.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Xml.Linq.XDocumentType.InternalSubset
  commentId: P:System.Xml.Linq.XDocumentType.InternalSubset
  id: InternalSubset
  parent: System.Xml.Linq.XDocumentType
  langs:
  - csharp
  - vb
  name: InternalSubset
  fullName: System.Xml.Linq.XDocumentType.InternalSubset
  type: Property
  source:
    remote:
      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: InternalSubset
    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
    startLine: 193
  assemblies:
  - System.Xml.XDocument
  namespace: System.Xml.Linq
  summary: "\n<p>Gets or sets the internal subset for this Document Type Definition (DTD).</p>\n"
  example:
  - "\n<p>The following example creates a document with a DTD that contains an internal subset.</p>\n<pre><code class=\"c#\">string internalSubset = @\"<!ELEMENT Pubs (Book+)>\n<!ELEMENT Book (Title, Author)>\n<!ELEMENT Title (#PCDATA)>\n<!ELEMENT Author (#PCDATA)>\";\n\nstring target = \"xml-stylesheet\";\nstring data = \"href=\\\"mystyle.css\\\" title=\\\"Compact\\\" type=\\\"text/css\\\"\";\n\nXDocument doc = new XDocument(\nnew XComment(\"This is a comment.\"),\nnew XProcessingInstruction(target, data),\nnew XDocumentType(\"Pubs\", null, null, internalSubset),\nnew XElement(\"Pubs\", \nnew XElement(\"Book\",\n    new XElement(\"Title\", \"Artifacts of Roman Civilization\"),\n    new XElement(\"Author\", \"Moreno, Jordao\")\n),\nnew XElement(\"Book\",\n    new XElement(\"Title\", \"Midieval Tools and Implements\"),\n    new XElement(\"Author\", \"Gazit, Inbar\")\n)\n),\nnew XComment(\"This is another comment.\")\n);\ndoc.Declaration = new XDeclaration(\"1.0\", \"utf-8\", \"true\");\n\nConsole.WriteLine(doc.DocumentType.InternalSubset);</code></pre>\n<pre><code class=\"vb\">Dim internalSubset = _\n\"<!ELEMENT Pubs (Book+)>\" & Environment.NewLine & _\n\"<!ELEMENT Book (Title, Author)>\" & Environment.NewLine & _\n\"<!ELEMENT Title (#PCDATA)>\" & Environment.NewLine & _\n\"<!ELEMENT Author (#PCDATA)>\"\n\nDim doc As XDocument = _\n<?xml version=\"1.0\" encoding=\"utf-8\" standalone=\"yes\"?>\n<!--This is a comment.-->\n<?xml-stylesheet href='mystyle.css' title='Compact' type='text/css'?>\n<Pubs>\n<Book>\n    <Title>Artifacts of Roman Civilization</Title>\n    <Author>Moreno, Jordao</Author>\n</Book>\n<Book>\n    <Title>Midieval Tools and Implements</Title>\n    <Author>Gazit, Inbar</Author>\n</Book>\n</Pubs>\n<!--This is another comment.-->\n\ndoc.FirstNode.AddAfterSelf(new XDocumentType(\"Pubs\", Nothing, Nothing, internalSubset))\n\nConsole.WriteLine(doc.DocumentType.InternalSubset)</code></pre>\n<p>This example produces the following output:</p>\n<pre><code><!ELEMENT Pubs (Book+)>\n<!ELEMENT Book (Title, Author)>\n<!ELEMENT Title (#PCDATA)>\n<!ELEMENT Author (#PCDATA)></code></pre>\n"
  syntax:
    content: public string InternalSubset { get; set; }
    content.vb: Public Property InternalSubset As String
    parameters: []
    return:
      type: System.String
      description: "\n<p>A <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref> that contains the internal subset for this Document Type Definition (DTD).</p>\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Xml.Linq.XDocumentType.Name
  commentId: P:System.Xml.Linq.XDocumentType.Name
  id: Name
  parent: System.Xml.Linq.XDocumentType
  langs:
  - csharp
  - vb
  name: Name
  fullName: System.Xml.Linq.XDocumentType.Name
  type: Property
  source:
    remote:
      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Name
    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
    startLine: 194
  assemblies:
  - System.Xml.XDocument
  namespace: System.Xml.Linq
  summary: "\n<p>Gets or sets the name for this Document Type Definition (DTD).</p>\n"
  example:
  - "\n<p>The following example creates an XML document that contains a DTD. After creating the document, it retrieves the qualified name of the DTD using this property.</p>\n<pre><code class=\"c#\">string internalSubset = @\"<!ELEMENT Pubs (Book+)>\n<!ELEMENT Book (Title, Author)>\n<!ELEMENT Title (#PCDATA)>\n<!ELEMENT Author (#PCDATA)>\";\n\nstring target = \"xml-stylesheet\";\nstring data = \"href=\\\"mystyle.css\\\" title=\\\"Compact\\\" type=\\\"text/css\\\"\";\n\nXDocument doc = new XDocument(\nnew XComment(\"This is a comment.\"),\nnew XProcessingInstruction(target, data),\nnew XDocumentType(\"Pubs\", null, null, internalSubset),\nnew XElement(\"Pubs\", \nnew XElement(\"Book\",\n    new XElement(\"Title\", \"Artifacts of Roman Civilization\"),\n    new XElement(\"Author\", \"Moreno, Jordao\")\n),\nnew XElement(\"Book\",\n    new XElement(\"Title\", \"Midieval Tools and Implements\"),\n    new XElement(\"Author\", \"Gazit, Inbar\")\n)\n),\nnew XComment(\"This is another comment.\")\n);\ndoc.Declaration = new XDeclaration(\"1.0\", \"utf-8\", \"true\");\n\nConsole.WriteLine(doc.DocumentType.Name);</code></pre>\n<pre><code class=\"vb\">Dim internalSubset = _\n\"<!ELEMENT Pubs (Book+)>\" & Environment.NewLine & _\n\"<!ELEMENT Book (Title, Author)>\" & Environment.NewLine & _\n\"<!ELEMENT Title (#PCDATA)>\" & Environment.NewLine & _\n\"<!ELEMENT Author (#PCDATA)>\"\n\nDim doc As XDocument = _\n<?xml version=\"1.0\" encoding=\"utf-8\" standalone=\"yes\"?>\n<!--This is a comment.-->\n<?xml-stylesheet href='mystyle.css' title='Compact' type='text/css'?>\n<Pubs>\n<Book>\n    <Title>Artifacts of Roman Civilization</Title>\n    <Author>Moreno, Jordao</Author>\n    </Book>\n<Book>\n    <Title>Midieval Tools and Implements</Title>\n    <Author>Gazit, Inbar</Author>\n</Book>\n</Pubs>\n<!--This is another comment.-->\n\ndoc.FirstNode.AddAfterSelf(new XDocumentType(\"Pubs\", Nothing, Nothing, internalSubset))\n\nConsole.WriteLine(doc.DocumentType.Name)</code></pre>\n<p>This example produces the following output:</p>\n<pre><code>Pubs</code></pre>\n"
  syntax:
    content: public string Name { get; set; }
    content.vb: Public Property Name As String
    parameters: []
    return:
      type: System.String
      description: "\n<p>A <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref> that contains the name for this Document Type Definition (DTD).</p>\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Xml.Linq.XDocumentType.NodeType
  commentId: P:System.Xml.Linq.XDocumentType.NodeType
  id: NodeType
  parent: System.Xml.Linq.XDocumentType
  langs:
  - csharp
  - vb
  name: NodeType
  fullName: System.Xml.Linq.XDocumentType.NodeType
  type: Property
  source:
    remote:
      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: NodeType
    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
    startLine: 195
  assemblies:
  - System.Xml.XDocument
  namespace: System.Xml.Linq
  summary: "\n<p>Gets the node type for this node.</p>\n"
  remarks: "\n<p>Because all classes that derive from <xref href=\"System.Xml.Linq.XObject\" data-throw-if-not-resolved=\"false\"></xref> contain a <xref href=\"System.Xml.Linq.XObject.NodeType\" data-throw-if-not-resolved=\"false\"></xref> property, you can write code that operates on collections of concrete subclass of <xref href=\"System.Xml.Linq.XObject\" data-throw-if-not-resolved=\"false\"></xref>. Your code can then test for the node type of each node in the collection.</p>\n"
  example:
  - "\n<p>The following example shows the use of this property to retrieve the node type for an <xref href=\"System.Xml.Linq.XDocumentType\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n<pre><code class=\"c#\">string internalSubset = @\"<!ELEMENT Pubs (Book+)>\n<!ELEMENT Book (Title, Author)>\n<!ELEMENT Title (#PCDATA)>\n<!ELEMENT Author (#PCDATA)>\";\n\nstring target = \"xml-stylesheet\";\nstring data = \"href=\\\"mystyle.css\\\" title=\\\"Compact\\\" type=\\\"text/css\\\"\";\n\nXDocument doc = new XDocument(\nnew XComment(\"This is a comment.\"),\nnew XProcessingInstruction(target, data),\nnew XDocumentType(\"Pubs\", null, null, internalSubset),\nnew XElement(\"Pubs\", \nnew XElement(\"Book\",\n    new XElement(\"Title\", \"Artifacts of Roman Civilization\"),\n    new XElement(\"Author\", \"Moreno, Jordao\")\n),\nnew XElement(\"Book\",\n    new XElement(\"Title\", \"Midieval Tools and Implements\"),\n    new XElement(\"Author\", \"Gazit, Inbar\")\n)\n),\nnew XComment(\"This is another comment.\")\n);\ndoc.Declaration = new XDeclaration(\"1.0\", \"utf-8\", \"true\");\n\nConsole.WriteLine(doc.DocumentType.NodeType);</code></pre>\n<pre><code class=\"vb\">Dim internalSubset = _\n\"<!ELEMENT Pubs (Book+)>\" & Environment.NewLine & _\n\"<!ELEMENT Book (Title, Author)>\" & Environment.NewLine & _\n\"<!ELEMENT Title (#PCDATA)>\" & Environment.NewLine & _\n\"<!ELEMENT Author (#PCDATA)>\"\n\nDim doc As XDocument = _ \n<?xml version=\"1.0\" encoding=\"utf-8\" standalone=\"yes\"?>\n<!--This is a comment.-->\n<?xml-stylesheet href='mystyle.css' title='Compact' type='text/css'?>\n<Pubs>\n<Book>\n    <Title>Artifacts of Roman Civilization</Title>\n    <Author>Moreno, Jordao</Author>\n</Book>\n<Book>\n    <Title>Midieval Tools and Implements</Title>\n    <Author>Gazit, Inbar</Author>\n</Book>\n</Pubs>\n<!--This is another comment.-->\n\ndoc.FirstNode.AddAfterSelf(new XDocumentType(\"Pubs\", Nothing, Nothing, internalSubset))\n\nConsole.WriteLine(doc.DocumentType.NodeType.ToString())</code></pre>\n<p>This example produces the following output:</p>\n<pre><code>DocumentType</code></pre>\n"
  syntax:
    content: public override XmlNodeType NodeType { get; }
    content.vb: Public Overrides ReadOnly Property NodeType As XmlNodeType
    parameters: []
    return:
      type: System.Xml.XmlNodeType
      description: "\n<p>The node type. For <xref href=\"System.Xml.Linq.XDocumentType\" data-throw-if-not-resolved=\"false\"></xref> objects, this value is <xref href=\"System.Xml.XmlNodeType.DocumentType\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  overridden: System.Xml.Linq.XObject.NodeType
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: System.Xml.Linq.XDocumentType.PublicId
  commentId: P:System.Xml.Linq.XDocumentType.PublicId
  id: PublicId
  parent: System.Xml.Linq.XDocumentType
  langs:
  - csharp
  - vb
  name: PublicId
  fullName: System.Xml.Linq.XDocumentType.PublicId
  type: Property
  source:
    remote:
      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: PublicId
    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
    startLine: 196
  assemblies:
  - System.Xml.XDocument
  namespace: System.Xml.Linq
  summary: "\n<p>Gets or sets the public identifier for this Document Type Definition (DTD).</p>\n"
  remarks: "\n<p>If an XML document uses an external public DTD, this property will contain the public identifier of the external DTD.</p>\n"
  example:
  - 
  syntax:
    content: public string PublicId { get; set; }
    content.vb: Public Property PublicId As String
    parameters: []
    return:
      type: System.String
      description: "\n<p>A <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref> that contains the public identifier for this Document Type Definition (DTD).</p>\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Xml.Linq.XDocumentType.SystemId
  commentId: P:System.Xml.Linq.XDocumentType.SystemId
  id: SystemId
  parent: System.Xml.Linq.XDocumentType
  langs:
  - csharp
  - vb
  name: SystemId
  fullName: System.Xml.Linq.XDocumentType.SystemId
  type: Property
  source:
    remote:
      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: SystemId
    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
    startLine: 197
  assemblies:
  - System.Xml.XDocument
  namespace: System.Xml.Linq
  summary: "\n<p>Gets or sets the system identifier for this Document Type Definition (DTD).</p>\n"
  remarks: "\n<p>If an XML document uses an external private DTD, this property will contain the private identifier of the external DTD.</p>\n"
  example:
  - "\n<p>The following example creates an XML document that refers to an external private DTD. The DTD does not have an internal subset. The call to the <xref href=\"System.Xml.Linq.XDocumentType\" data-throw-if-not-resolved=\"false\"></xref> constructor reflects the use of the external private DTD. It passes <strong>null</strong> for the internal subset.</p>\n<pre><code class=\"c#\">string pubsDtd =\n@\"<!ELEMENT Pubs (Book+)>\n<!ELEMENT Book (Title, Author)>\n<!ELEMENT Title (#PCDATA)>\n<!ELEMENT Author (#PCDATA)>\";\nFile.WriteAllText(\"Pubs.dtd\", pubsDtd);\n\nstring target = \"xml-stylesheet\";\nstring data = \"href=\\\"mystyle.css\\\" title=\\\"Compact\\\" type=\\\"text/css\\\"\";\n\nXDocument doc = new XDocument(\nnew XDocumentType(\"Pubs\", null, \"Pubs.dtd\", null),\nnew XElement(\"Pubs\", \nnew XElement(\"Book\",\n    new XElement(\"Title\", \"Artifacts of Roman Civilization\"),\n    new XElement(\"Author\", \"Moreno, Jordao\")\n),\nnew XElement(\"Book\",\n    new XElement(\"Title\", \"Midieval Tools and Implements\"),\n    new XElement(\"Author\", \"Gazit, Inbar\")\n)\n),\nnew XComment(\"This is another comment.\")\n);\ndoc.Declaration = new XDeclaration(\"1.0\", \"utf-8\", \"true\");\ndoc.Save(\"Pubs.xml\");\n\n// Validate Pubs.xml against Pubs.dtd.\nXmlReaderSettings xrs = new XmlReaderSettings();\nxrs.ProhibitDtd = false;\nxrs.ValidationType = ValidationType.DTD;\nxrs.ConformanceLevel = ConformanceLevel.Auto;\nXmlReader xr = XmlReader.Create(\"Pubs.xml\", xrs);\nXDocument doc2 = XDocument.Load(xr);\n\nXDocumentType dt = doc2.Document.DocumentType;\nConsole.WriteLine(\"SystemId:{0}\", dt.SystemId);</code></pre>\n<pre><code class=\"vb\">Dim pubsDtd As String = _ \n\"<!ELEMENT Pubs (Book+)>\" & Environment.NewLine & _\n\"<!ELEMENT Book (Title, Author)>\" & Environment.NewLine & _\n\"<!ELEMENT Title (#PCDATA)>\" & Environment.NewLine & _\n\"<!ELEMENT Author (#PCDATA)>\"\nFile.WriteAllText(\"Pubs.dtd\", pubsDtd)\n\nDim target As String = \"xml-stylesheet\"\nDim data As String = \"href='mystyle.css' title='Compact' type='text/css'\"\n\nDim doc As XDocument = _\n<?xml version='1.0'?>\n<Pubs>\n<Book>\n    <Title>Artifacts of Roman Civilization</Title>\n    <Author>Moreno, Jordao</Author>\n</Book>\n<Book>\n    <Title>Midieval Tools and Implements</Title>\n    <Author>Gazit, Inbar</Author>\n</Book>\n</Pubs>\n<!--This is another comment.-->\n\ndoc _\n.FirstNode _\n.AddBeforeSelf(New XDocumentType(\"Pubs\", Nothing, \"Pubs.dtd\", Nothing))\n\ndoc.Declaration = New XDeclaration(\"1.0\", \"utf-8\", \"true\")\ndoc.Save(\"Pubs.xml\")\n\n' Validate Pubs.xml against Pubs.dtd.\nDim xrs As XmlReaderSettings = New XmlReaderSettings()\nxrs.ProhibitDtd = False\nxrs.ValidationType = ValidationType.DTD\nxrs.ConformanceLevel = ConformanceLevel.Auto\nDim xr As XmlReader = XmlReader.Create(\"Pubs.xml\", xrs)\nDim doc2 As XDocument = XDocument.Load(xr)\n\nDim dt As XDocumentType = doc2.Document.DocumentType\nConsole.WriteLine(\"SystemId:{0}\", dt.SystemId)</code></pre>\n<p>This example produces the following output:</p>\n<pre><code>SystemId:Pubs.dtd</code></pre>\n"
  syntax:
    content: public string SystemId { get; set; }
    content.vb: Public Property SystemId As String
    parameters: []
    return:
      type: System.String
      description: "\n<p>A <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref> that contains the system identifier for this Document Type Definition (DTD).</p>\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Xml.Linq.XDocumentType.WriteTo(System.Xml.XmlWriter)
  commentId: M:System.Xml.Linq.XDocumentType.WriteTo(System.Xml.XmlWriter)
  id: WriteTo(System.Xml.XmlWriter)
  parent: System.Xml.Linq.XDocumentType
  langs:
  - csharp
  - vb
  name: WriteTo(XmlWriter)
  fullName: System.Xml.Linq.XDocumentType.WriteTo(System.Xml.XmlWriter)
  type: Method
  source:
    remote:
      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: WriteTo
    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
    startLine: 198
  assemblies:
  - System.Xml.XDocument
  namespace: System.Xml.Linq
  summary: "\n<p>Write this <xref href=\"System.Xml.Linq.XDocumentType\" data-throw-if-not-resolved=\"false\"></xref> to an <xref href=\"System.Xml.XmlWriter\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  remarks: "\n<p>This method is primarily used internally by the methods that write an XML tree to an <xref href=\"System.Xml.XmlWriter\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: public override void WriteTo(XmlWriter writer)
    content.vb: Public Overrides Sub WriteTo(writer As XmlWriter)
    parameters:
    - id: writer
      type: System.Xml.XmlWriter
      description: "\n<p>An <xref href=\"System.Xml.XmlWriter\" data-throw-if-not-resolved=\"false\"></xref> into which this method will write.</p>\n"
  overridden: System.Xml.Linq.XNode.WriteTo(System.Xml.XmlWriter)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: System.Xml.Linq
  isExternal: false
  name: System.Xml.Linq
  fullName: System.Xml.Linq
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System.Xml.Linq.XObject
  parent: System.Xml.Linq
  isExternal: false
  name: XObject
  fullName: System.Xml.Linq.XObject
- uid: System.Xml.Linq.XNode
  parent: System.Xml.Linq
  isExternal: false
  name: XNode
  fullName: System.Xml.Linq.XNode
- uid: System.Xml.Linq.XNode.DocumentOrderComparer
  parent: System.Xml.Linq.XNode
  isExternal: false
  name: DocumentOrderComparer
  fullName: System.Xml.Linq.XNode.DocumentOrderComparer
- uid: System.Xml.Linq.XNode.EqualityComparer
  parent: System.Xml.Linq.XNode
  isExternal: false
  name: EqualityComparer
  fullName: System.Xml.Linq.XNode.EqualityComparer
- uid: System.Xml.Linq.XNode.NextNode
  parent: System.Xml.Linq.XNode
  isExternal: false
  name: NextNode
  fullName: System.Xml.Linq.XNode.NextNode
- uid: System.Xml.Linq.XNode.PreviousNode
  parent: System.Xml.Linq.XNode
  isExternal: false
  name: PreviousNode
  fullName: System.Xml.Linq.XNode.PreviousNode
- uid: System.Xml.Linq.XNode.AddAfterSelf(System.Object)
  parent: System.Xml.Linq.XNode
  isExternal: true
  name: AddAfterSelf(Object)
  fullName: System.Xml.Linq.XNode.AddAfterSelf(System.Object)
  spec.csharp:
  - uid: System.Xml.Linq.XNode.AddAfterSelf(System.Object)
    name: AddAfterSelf
    fullName: System.Xml.Linq.XNode.AddAfterSelf
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Xml.Linq.XNode.AddAfterSelf(System.Object)
    name: AddAfterSelf
    fullName: System.Xml.Linq.XNode.AddAfterSelf
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Xml.Linq.XNode.AddAfterSelf(System.Object[])
  parent: System.Xml.Linq.XNode
  isExternal: true
  name: AddAfterSelf(Object[])
  fullName: System.Xml.Linq.XNode.AddAfterSelf(System.Object[])
  fullname.vb: System.Xml.Linq.XNode.AddAfterSelf(System.Object())
  name.vb: AddAfterSelf(Object())
  spec.csharp:
  - uid: System.Xml.Linq.XNode.AddAfterSelf(System.Object[])
    name: AddAfterSelf
    fullName: System.Xml.Linq.XNode.AddAfterSelf
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    fullName: '[]'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Xml.Linq.XNode.AddAfterSelf(System.Object[])
    name: AddAfterSelf
    fullName: System.Xml.Linq.XNode.AddAfterSelf
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    fullName: ()
  - name: )
    fullName: )
- uid: System.Xml.Linq.XNode.AddBeforeSelf(System.Object)
  parent: System.Xml.Linq.XNode
  isExternal: true
  name: AddBeforeSelf(Object)
  fullName: System.Xml.Linq.XNode.AddBeforeSelf(System.Object)
  spec.csharp:
  - uid: System.Xml.Linq.XNode.AddBeforeSelf(System.Object)
    name: AddBeforeSelf
    fullName: System.Xml.Linq.XNode.AddBeforeSelf
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Xml.Linq.XNode.AddBeforeSelf(System.Object)
    name: AddBeforeSelf
    fullName: System.Xml.Linq.XNode.AddBeforeSelf
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Xml.Linq.XNode.AddBeforeSelf(System.Object[])
  parent: System.Xml.Linq.XNode
  isExternal: true
  name: AddBeforeSelf(Object[])
  fullName: System.Xml.Linq.XNode.AddBeforeSelf(System.Object[])
  fullname.vb: System.Xml.Linq.XNode.AddBeforeSelf(System.Object())
  name.vb: AddBeforeSelf(Object())
  spec.csharp:
  - uid: System.Xml.Linq.XNode.AddBeforeSelf(System.Object[])
    name: AddBeforeSelf
    fullName: System.Xml.Linq.XNode.AddBeforeSelf
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    fullName: '[]'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Xml.Linq.XNode.AddBeforeSelf(System.Object[])
    name: AddBeforeSelf
    fullName: System.Xml.Linq.XNode.AddBeforeSelf
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    fullName: ()
  - name: )
    fullName: )
- uid: System.Xml.Linq.XNode.Ancestors
  parent: System.Xml.Linq.XNode
  isExternal: false
  name: Ancestors()
  fullName: System.Xml.Linq.XNode.Ancestors()
  spec.csharp:
  - uid: System.Xml.Linq.XNode.Ancestors
    name: Ancestors
    fullName: System.Xml.Linq.XNode.Ancestors
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Xml.Linq.XNode.Ancestors
    name: Ancestors
    fullName: System.Xml.Linq.XNode.Ancestors
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Xml.Linq.XNode.Ancestors(System.Xml.Linq.XName)
  parent: System.Xml.Linq.XNode
  isExternal: false
  name: Ancestors(XName)
  fullName: System.Xml.Linq.XNode.Ancestors(System.Xml.Linq.XName)
  spec.csharp:
  - uid: System.Xml.Linq.XNode.Ancestors(System.Xml.Linq.XName)
    name: Ancestors
    fullName: System.Xml.Linq.XNode.Ancestors
  - name: (
    fullName: (
  - uid: System.Xml.Linq.XName
    name: XName
    fullName: System.Xml.Linq.XName
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Xml.Linq.XNode.Ancestors(System.Xml.Linq.XName)
    name: Ancestors
    fullName: System.Xml.Linq.XNode.Ancestors
  - name: (
    fullName: (
  - uid: System.Xml.Linq.XName
    name: XName
    fullName: System.Xml.Linq.XName
  - name: )
    fullName: )
- uid: System.Xml.Linq.XNode.CompareDocumentOrder(System.Xml.Linq.XNode,System.Xml.Linq.XNode)
  parent: System.Xml.Linq.XNode
  isExternal: false
  name: CompareDocumentOrder(XNode, XNode)
  fullName: System.Xml.Linq.XNode.CompareDocumentOrder(System.Xml.Linq.XNode, System.Xml.Linq.XNode)
  spec.csharp:
  - uid: System.Xml.Linq.XNode.CompareDocumentOrder(System.Xml.Linq.XNode,System.Xml.Linq.XNode)
    name: CompareDocumentOrder
    fullName: System.Xml.Linq.XNode.CompareDocumentOrder
  - name: (
    fullName: (
  - uid: System.Xml.Linq.XNode
    name: XNode
    fullName: System.Xml.Linq.XNode
  - name: ', '
    fullName: ', '
  - uid: System.Xml.Linq.XNode
    name: XNode
    fullName: System.Xml.Linq.XNode
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Xml.Linq.XNode.CompareDocumentOrder(System.Xml.Linq.XNode,System.Xml.Linq.XNode)
    name: CompareDocumentOrder
    fullName: System.Xml.Linq.XNode.CompareDocumentOrder
  - name: (
    fullName: (
  - uid: System.Xml.Linq.XNode
    name: XNode
    fullName: System.Xml.Linq.XNode
  - name: ', '
    fullName: ', '
  - uid: System.Xml.Linq.XNode
    name: XNode
    fullName: System.Xml.Linq.XNode
  - name: )
    fullName: )
- uid: System.Xml.Linq.XNode.CreateReader
  parent: System.Xml.Linq.XNode
  isExternal: false
  name: CreateReader()
  fullName: System.Xml.Linq.XNode.CreateReader()
  spec.csharp:
  - uid: System.Xml.Linq.XNode.CreateReader
    name: CreateReader
    fullName: System.Xml.Linq.XNode.CreateReader
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Xml.Linq.XNode.CreateReader
    name: CreateReader
    fullName: System.Xml.Linq.XNode.CreateReader
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Xml.Linq.XNode.CreateReader(System.Xml.Linq.ReaderOptions)
  parent: System.Xml.Linq.XNode
  isExternal: false
  name: CreateReader(ReaderOptions)
  fullName: System.Xml.Linq.XNode.CreateReader(System.Xml.Linq.ReaderOptions)
  spec.csharp:
  - uid: System.Xml.Linq.XNode.CreateReader(System.Xml.Linq.ReaderOptions)
    name: CreateReader
    fullName: System.Xml.Linq.XNode.CreateReader
  - name: (
    fullName: (
  - uid: System.Xml.Linq.ReaderOptions
    name: ReaderOptions
    fullName: System.Xml.Linq.ReaderOptions
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Xml.Linq.XNode.CreateReader(System.Xml.Linq.ReaderOptions)
    name: CreateReader
    fullName: System.Xml.Linq.XNode.CreateReader
  - name: (
    fullName: (
  - uid: System.Xml.Linq.ReaderOptions
    name: ReaderOptions
    fullName: System.Xml.Linq.ReaderOptions
  - name: )
    fullName: )
- uid: System.Xml.Linq.XNode.DeepEquals(System.Xml.Linq.XNode,System.Xml.Linq.XNode)
  parent: System.Xml.Linq.XNode
  isExternal: false
  name: DeepEquals(XNode, XNode)
  fullName: System.Xml.Linq.XNode.DeepEquals(System.Xml.Linq.XNode, System.Xml.Linq.XNode)
  spec.csharp:
  - uid: System.Xml.Linq.XNode.DeepEquals(System.Xml.Linq.XNode,System.Xml.Linq.XNode)
    name: DeepEquals
    fullName: System.Xml.Linq.XNode.DeepEquals
  - name: (
    fullName: (
  - uid: System.Xml.Linq.XNode
    name: XNode
    fullName: System.Xml.Linq.XNode
  - name: ', '
    fullName: ', '
  - uid: System.Xml.Linq.XNode
    name: XNode
    fullName: System.Xml.Linq.XNode
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Xml.Linq.XNode.DeepEquals(System.Xml.Linq.XNode,System.Xml.Linq.XNode)
    name: DeepEquals
    fullName: System.Xml.Linq.XNode.DeepEquals
  - name: (
    fullName: (
  - uid: System.Xml.Linq.XNode
    name: XNode
    fullName: System.Xml.Linq.XNode
  - name: ', '
    fullName: ', '
  - uid: System.Xml.Linq.XNode
    name: XNode
    fullName: System.Xml.Linq.XNode
  - name: )
    fullName: )
- uid: System.Xml.Linq.XNode.ElementsAfterSelf
  parent: System.Xml.Linq.XNode
  isExternal: false
  name: ElementsAfterSelf()
  fullName: System.Xml.Linq.XNode.ElementsAfterSelf()
  spec.csharp:
  - uid: System.Xml.Linq.XNode.ElementsAfterSelf
    name: ElementsAfterSelf
    fullName: System.Xml.Linq.XNode.ElementsAfterSelf
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Xml.Linq.XNode.ElementsAfterSelf
    name: ElementsAfterSelf
    fullName: System.Xml.Linq.XNode.ElementsAfterSelf
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Xml.Linq.XNode.ElementsAfterSelf(System.Xml.Linq.XName)
  parent: System.Xml.Linq.XNode
  isExternal: false
  name: ElementsAfterSelf(XName)
  fullName: System.Xml.Linq.XNode.ElementsAfterSelf(System.Xml.Linq.XName)
  spec.csharp:
  - uid: System.Xml.Linq.XNode.ElementsAfterSelf(System.Xml.Linq.XName)
    name: ElementsAfterSelf
    fullName: System.Xml.Linq.XNode.ElementsAfterSelf
  - name: (
    fullName: (
  - uid: System.Xml.Linq.XName
    name: XName
    fullName: System.Xml.Linq.XName
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Xml.Linq.XNode.ElementsAfterSelf(System.Xml.Linq.XName)
    name: ElementsAfterSelf
    fullName: System.Xml.Linq.XNode.ElementsAfterSelf
  - name: (
    fullName: (
  - uid: System.Xml.Linq.XName
    name: XName
    fullName: System.Xml.Linq.XName
  - name: )
    fullName: )
- uid: System.Xml.Linq.XNode.ElementsBeforeSelf
  parent: System.Xml.Linq.XNode
  isExternal: false
  name: ElementsBeforeSelf()
  fullName: System.Xml.Linq.XNode.ElementsBeforeSelf()
  spec.csharp:
  - uid: System.Xml.Linq.XNode.ElementsBeforeSelf
    name: ElementsBeforeSelf
    fullName: System.Xml.Linq.XNode.ElementsBeforeSelf
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Xml.Linq.XNode.ElementsBeforeSelf
    name: ElementsBeforeSelf
    fullName: System.Xml.Linq.XNode.ElementsBeforeSelf
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Xml.Linq.XNode.ElementsBeforeSelf(System.Xml.Linq.XName)
  parent: System.Xml.Linq.XNode
  isExternal: false
  name: ElementsBeforeSelf(XName)
  fullName: System.Xml.Linq.XNode.ElementsBeforeSelf(System.Xml.Linq.XName)
  spec.csharp:
  - uid: System.Xml.Linq.XNode.ElementsBeforeSelf(System.Xml.Linq.XName)
    name: ElementsBeforeSelf
    fullName: System.Xml.Linq.XNode.ElementsBeforeSelf
  - name: (
    fullName: (
  - uid: System.Xml.Linq.XName
    name: XName
    fullName: System.Xml.Linq.XName
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Xml.Linq.XNode.ElementsBeforeSelf(System.Xml.Linq.XName)
    name: ElementsBeforeSelf
    fullName: System.Xml.Linq.XNode.ElementsBeforeSelf
  - name: (
    fullName: (
  - uid: System.Xml.Linq.XName
    name: XName
    fullName: System.Xml.Linq.XName
  - name: )
    fullName: )
- uid: System.Xml.Linq.XNode.IsAfter(System.Xml.Linq.XNode)
  parent: System.Xml.Linq.XNode
  isExternal: false
  name: IsAfter(XNode)
  fullName: System.Xml.Linq.XNode.IsAfter(System.Xml.Linq.XNode)
  spec.csharp:
  - uid: System.Xml.Linq.XNode.IsAfter(System.Xml.Linq.XNode)
    name: IsAfter
    fullName: System.Xml.Linq.XNode.IsAfter
  - name: (
    fullName: (
  - uid: System.Xml.Linq.XNode
    name: XNode
    fullName: System.Xml.Linq.XNode
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Xml.Linq.XNode.IsAfter(System.Xml.Linq.XNode)
    name: IsAfter
    fullName: System.Xml.Linq.XNode.IsAfter
  - name: (
    fullName: (
  - uid: System.Xml.Linq.XNode
    name: XNode
    fullName: System.Xml.Linq.XNode
  - name: )
    fullName: )
- uid: System.Xml.Linq.XNode.IsBefore(System.Xml.Linq.XNode)
  parent: System.Xml.Linq.XNode
  isExternal: false
  name: IsBefore(XNode)
  fullName: System.Xml.Linq.XNode.IsBefore(System.Xml.Linq.XNode)
  spec.csharp:
  - uid: System.Xml.Linq.XNode.IsBefore(System.Xml.Linq.XNode)
    name: IsBefore
    fullName: System.Xml.Linq.XNode.IsBefore
  - name: (
    fullName: (
  - uid: System.Xml.Linq.XNode
    name: XNode
    fullName: System.Xml.Linq.XNode
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Xml.Linq.XNode.IsBefore(System.Xml.Linq.XNode)
    name: IsBefore
    fullName: System.Xml.Linq.XNode.IsBefore
  - name: (
    fullName: (
  - uid: System.Xml.Linq.XNode
    name: XNode
    fullName: System.Xml.Linq.XNode
  - name: )
    fullName: )
- uid: System.Xml.Linq.XNode.NodesAfterSelf
  parent: System.Xml.Linq.XNode
  isExternal: false
  name: NodesAfterSelf()
  fullName: System.Xml.Linq.XNode.NodesAfterSelf()
  spec.csharp:
  - uid: System.Xml.Linq.XNode.NodesAfterSelf
    name: NodesAfterSelf
    fullName: System.Xml.Linq.XNode.NodesAfterSelf
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Xml.Linq.XNode.NodesAfterSelf
    name: NodesAfterSelf
    fullName: System.Xml.Linq.XNode.NodesAfterSelf
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Xml.Linq.XNode.NodesBeforeSelf
  parent: System.Xml.Linq.XNode
  isExternal: false
  name: NodesBeforeSelf()
  fullName: System.Xml.Linq.XNode.NodesBeforeSelf()
  spec.csharp:
  - uid: System.Xml.Linq.XNode.NodesBeforeSelf
    name: NodesBeforeSelf
    fullName: System.Xml.Linq.XNode.NodesBeforeSelf
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Xml.Linq.XNode.NodesBeforeSelf
    name: NodesBeforeSelf
    fullName: System.Xml.Linq.XNode.NodesBeforeSelf
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Xml.Linq.XNode.ReadFrom(System.Xml.XmlReader)
  parent: System.Xml.Linq.XNode
  isExternal: true
  name: ReadFrom(XmlReader)
  fullName: System.Xml.Linq.XNode.ReadFrom(System.Xml.XmlReader)
  spec.csharp:
  - uid: System.Xml.Linq.XNode.ReadFrom(System.Xml.XmlReader)
    name: ReadFrom
    fullName: System.Xml.Linq.XNode.ReadFrom
  - name: (
    fullName: (
  - uid: System.Xml.XmlReader
    name: XmlReader
    fullName: System.Xml.XmlReader
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Xml.Linq.XNode.ReadFrom(System.Xml.XmlReader)
    name: ReadFrom
    fullName: System.Xml.Linq.XNode.ReadFrom
  - name: (
    fullName: (
  - uid: System.Xml.XmlReader
    name: XmlReader
    fullName: System.Xml.XmlReader
    isExternal: true
  - name: )
    fullName: )
- uid: System.Xml.Linq.XNode.Remove
  parent: System.Xml.Linq.XNode
  isExternal: false
  name: Remove()
  fullName: System.Xml.Linq.XNode.Remove()
  spec.csharp:
  - uid: System.Xml.Linq.XNode.Remove
    name: Remove
    fullName: System.Xml.Linq.XNode.Remove
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Xml.Linq.XNode.Remove
    name: Remove
    fullName: System.Xml.Linq.XNode.Remove
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Xml.Linq.XNode.ReplaceWith(System.Object)
  parent: System.Xml.Linq.XNode
  isExternal: true
  name: ReplaceWith(Object)
  fullName: System.Xml.Linq.XNode.ReplaceWith(System.Object)
  spec.csharp:
  - uid: System.Xml.Linq.XNode.ReplaceWith(System.Object)
    name: ReplaceWith
    fullName: System.Xml.Linq.XNode.ReplaceWith
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Xml.Linq.XNode.ReplaceWith(System.Object)
    name: ReplaceWith
    fullName: System.Xml.Linq.XNode.ReplaceWith
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Xml.Linq.XNode.ReplaceWith(System.Object[])
  parent: System.Xml.Linq.XNode
  isExternal: true
  name: ReplaceWith(Object[])
  fullName: System.Xml.Linq.XNode.ReplaceWith(System.Object[])
  fullname.vb: System.Xml.Linq.XNode.ReplaceWith(System.Object())
  name.vb: ReplaceWith(Object())
  spec.csharp:
  - uid: System.Xml.Linq.XNode.ReplaceWith(System.Object[])
    name: ReplaceWith
    fullName: System.Xml.Linq.XNode.ReplaceWith
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    fullName: '[]'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Xml.Linq.XNode.ReplaceWith(System.Object[])
    name: ReplaceWith
    fullName: System.Xml.Linq.XNode.ReplaceWith
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    fullName: ()
  - name: )
    fullName: )
- uid: System.Xml.Linq.XNode.ToString
  parent: System.Xml.Linq.XNode
  isExternal: false
  name: ToString()
  fullName: System.Xml.Linq.XNode.ToString()
  spec.csharp:
  - uid: System.Xml.Linq.XNode.ToString
    name: ToString
    fullName: System.Xml.Linq.XNode.ToString
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Xml.Linq.XNode.ToString
    name: ToString
    fullName: System.Xml.Linq.XNode.ToString
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Xml.Linq.XNode.ToString(System.Xml.Linq.SaveOptions)
  parent: System.Xml.Linq.XNode
  isExternal: false
  name: ToString(SaveOptions)
  fullName: System.Xml.Linq.XNode.ToString(System.Xml.Linq.SaveOptions)
  spec.csharp:
  - uid: System.Xml.Linq.XNode.ToString(System.Xml.Linq.SaveOptions)
    name: ToString
    fullName: System.Xml.Linq.XNode.ToString
  - name: (
    fullName: (
  - uid: System.Xml.Linq.SaveOptions
    name: SaveOptions
    fullName: System.Xml.Linq.SaveOptions
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Xml.Linq.XNode.ToString(System.Xml.Linq.SaveOptions)
    name: ToString
    fullName: System.Xml.Linq.XNode.ToString
  - name: (
    fullName: (
  - uid: System.Xml.Linq.SaveOptions
    name: SaveOptions
    fullName: System.Xml.Linq.SaveOptions
  - name: )
    fullName: )
- uid: System.Xml.Linq.XObject.BaseUri
  parent: System.Xml.Linq.XObject
  isExternal: false
  name: BaseUri
  fullName: System.Xml.Linq.XObject.BaseUri
- uid: System.Xml.Linq.XObject.Document
  parent: System.Xml.Linq.XObject
  isExternal: false
  name: Document
  fullName: System.Xml.Linq.XObject.Document
- uid: System.Xml.Linq.XObject.Parent
  parent: System.Xml.Linq.XObject
  isExternal: false
  name: Parent
  fullName: System.Xml.Linq.XObject.Parent
- uid: System.Xml.Linq.XObject.Changed
  parent: System.Xml.Linq.XObject
  isExternal: false
  name: Changed
  fullName: System.Xml.Linq.XObject.Changed
- uid: System.Xml.Linq.XObject.Changing
  parent: System.Xml.Linq.XObject
  isExternal: false
  name: Changing
  fullName: System.Xml.Linq.XObject.Changing
- uid: System.Xml.Linq.XObject.AddAnnotation(System.Object)
  parent: System.Xml.Linq.XObject
  isExternal: true
  name: AddAnnotation(Object)
  fullName: System.Xml.Linq.XObject.AddAnnotation(System.Object)
  spec.csharp:
  - uid: System.Xml.Linq.XObject.AddAnnotation(System.Object)
    name: AddAnnotation
    fullName: System.Xml.Linq.XObject.AddAnnotation
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Xml.Linq.XObject.AddAnnotation(System.Object)
    name: AddAnnotation
    fullName: System.Xml.Linq.XObject.AddAnnotation
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Xml.Linq.XObject.Annotation(System.Type)
  parent: System.Xml.Linq.XObject
  isExternal: true
  name: Annotation(Type)
  fullName: System.Xml.Linq.XObject.Annotation(System.Type)
  spec.csharp:
  - uid: System.Xml.Linq.XObject.Annotation(System.Type)
    name: Annotation
    fullName: System.Xml.Linq.XObject.Annotation
  - name: (
    fullName: (
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Xml.Linq.XObject.Annotation(System.Type)
    name: Annotation
    fullName: System.Xml.Linq.XObject.Annotation
  - name: (
    fullName: (
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: )
    fullName: )
- uid: System.Xml.Linq.XObject.Annotation``1
  parent: System.Xml.Linq.XObject
  isExternal: false
  name: Annotation<T>()
  fullName: System.Xml.Linq.XObject.Annotation<T>()
  fullname.vb: System.Xml.Linq.XObject.Annotation(Of T)()
  name.vb: Annotation(Of T)()
  spec.csharp:
  - uid: System.Xml.Linq.XObject.Annotation``1
    name: Annotation<T>
    fullName: System.Xml.Linq.XObject.Annotation<T>
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Xml.Linq.XObject.Annotation``1
    name: Annotation(Of T)
    fullName: System.Xml.Linq.XObject.Annotation(Of T)
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Xml.Linq.XObject.Annotations(System.Type)
  parent: System.Xml.Linq.XObject
  isExternal: true
  name: Annotations(Type)
  fullName: System.Xml.Linq.XObject.Annotations(System.Type)
  spec.csharp:
  - uid: System.Xml.Linq.XObject.Annotations(System.Type)
    name: Annotations
    fullName: System.Xml.Linq.XObject.Annotations
  - name: (
    fullName: (
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Xml.Linq.XObject.Annotations(System.Type)
    name: Annotations
    fullName: System.Xml.Linq.XObject.Annotations
  - name: (
    fullName: (
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: )
    fullName: )
- uid: System.Xml.Linq.XObject.Annotations``1
  parent: System.Xml.Linq.XObject
  isExternal: false
  name: Annotations<T>()
  fullName: System.Xml.Linq.XObject.Annotations<T>()
  fullname.vb: System.Xml.Linq.XObject.Annotations(Of T)()
  name.vb: Annotations(Of T)()
  spec.csharp:
  - uid: System.Xml.Linq.XObject.Annotations``1
    name: Annotations<T>
    fullName: System.Xml.Linq.XObject.Annotations<T>
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Xml.Linq.XObject.Annotations``1
    name: Annotations(Of T)
    fullName: System.Xml.Linq.XObject.Annotations(Of T)
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Xml.Linq.XObject.RemoveAnnotations(System.Type)
  parent: System.Xml.Linq.XObject
  isExternal: true
  name: RemoveAnnotations(Type)
  fullName: System.Xml.Linq.XObject.RemoveAnnotations(System.Type)
  spec.csharp:
  - uid: System.Xml.Linq.XObject.RemoveAnnotations(System.Type)
    name: RemoveAnnotations
    fullName: System.Xml.Linq.XObject.RemoveAnnotations
  - name: (
    fullName: (
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Xml.Linq.XObject.RemoveAnnotations(System.Type)
    name: RemoveAnnotations
    fullName: System.Xml.Linq.XObject.RemoveAnnotations
  - name: (
    fullName: (
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: )
    fullName: )
- uid: System.Xml.Linq.XObject.RemoveAnnotations``1
  parent: System.Xml.Linq.XObject
  isExternal: false
  name: RemoveAnnotations<T>()
  fullName: System.Xml.Linq.XObject.RemoveAnnotations<T>()
  fullname.vb: System.Xml.Linq.XObject.RemoveAnnotations(Of T)()
  name.vb: RemoveAnnotations(Of T)()
  spec.csharp:
  - uid: System.Xml.Linq.XObject.RemoveAnnotations``1
    name: RemoveAnnotations<T>
    fullName: System.Xml.Linq.XObject.RemoveAnnotations<T>
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Xml.Linq.XObject.RemoveAnnotations``1
    name: RemoveAnnotations(Of T)
    fullName: System.Xml.Linq.XObject.RemoveAnnotations(Of T)
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.String
  parent: System
  isExternal: false
  name: String
  fullName: System.String
- uid: System.Xml.Linq.XDocumentType
  parent: System.Xml.Linq
  isExternal: false
  name: XDocumentType
  fullName: System.Xml.Linq.XDocumentType
- uid: System.Xml.Linq.XObject.NodeType
  parent: System.Xml.Linq.XObject
  isExternal: false
  name: NodeType
  fullName: System.Xml.Linq.XObject.NodeType
- uid: System.Xml.XmlNodeType
  parent: System.Xml
  isExternal: false
  name: XmlNodeType
  fullName: System.Xml.XmlNodeType
- uid: System.Xml
  isExternal: false
  name: System.Xml
  fullName: System.Xml
- uid: System.Xml.Linq.XNode.WriteTo(System.Xml.XmlWriter)
  parent: System.Xml.Linq.XNode
  isExternal: true
  name: WriteTo(XmlWriter)
  fullName: System.Xml.Linq.XNode.WriteTo(System.Xml.XmlWriter)
  spec.csharp:
  - uid: System.Xml.Linq.XNode.WriteTo(System.Xml.XmlWriter)
    name: WriteTo
    fullName: System.Xml.Linq.XNode.WriteTo
  - name: (
    fullName: (
  - uid: System.Xml.XmlWriter
    name: XmlWriter
    fullName: System.Xml.XmlWriter
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Xml.Linq.XNode.WriteTo(System.Xml.XmlWriter)
    name: WriteTo
    fullName: System.Xml.Linq.XNode.WriteTo
  - name: (
    fullName: (
  - uid: System.Xml.XmlWriter
    name: XmlWriter
    fullName: System.Xml.XmlWriter
    isExternal: true
  - name: )
    fullName: )
- uid: System.Xml.XmlWriter
  parent: System.Xml
  isExternal: false
  name: XmlWriter
  fullName: System.Xml.XmlWriter
