items:
- uid: System.Security.Principal.GenericPrincipal
  commentId: T:System.Security.Principal.GenericPrincipal
  id: GenericPrincipal
  parent: System.Security.Principal
  children:
  - System.Security.Principal.GenericPrincipal.#ctor(System.Security.Principal.IIdentity,System.String[])
  - System.Security.Principal.GenericPrincipal.Identity
  - System.Security.Principal.GenericPrincipal.IsInRole(System.String)
  langs:
  - csharp
  - vb
  name: GenericPrincipal
  fullName: System.Security.Principal.GenericPrincipal
  type: Class
  source:
    remote:
      path: src/System.Security.Claims/src/System/Security/Claims/GenericPrincipal.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GenericPrincipal
    path: src/System.Security.Claims/src/System/Security/Claims/GenericPrincipal.cs
    startLine: 11
  assemblies:
  - System.Security.Claims
  namespace: System.Security.Principal
  summary: "\n<p>Represents a generic principal.</p>\n"
  remarks: "\n<p>This class represents the roles of the current user.</p>\n"
  example:
  - "\n<p>The following example shows the use of members of the <xref href=\"System.Security.Principal.GenericPrincipal\" data-throw-if-not-resolved=\"false\"></xref> class.</p>System.Security.Principal.GenericPrincipal2#1"
  syntax:
    content: 'public class GenericPrincipal : ClaimsPrincipal'
    content.vb: >-
      Public Class GenericPrincipal
          Inherits ClaimsPrincipal
  inheritance:
  - System.Object
  - System.Security.Claims.ClaimsPrincipal
  inheritedMembers:
  - System.Security.Claims.ClaimsPrincipal.Claims
  - System.Security.Claims.ClaimsPrincipal.ClaimsPrincipalSelector
  - System.Security.Claims.ClaimsPrincipal.Current
  - System.Security.Claims.ClaimsPrincipal.CustomSerializationData
  - System.Security.Claims.ClaimsPrincipal.Identities
  - System.Security.Claims.ClaimsPrincipal.PrimaryIdentitySelector
  - System.Security.Claims.ClaimsPrincipal.AddIdentities(System.Collections.Generic.IEnumerable{System.Security.Claims.ClaimsIdentity})
  - System.Security.Claims.ClaimsPrincipal.AddIdentity(System.Security.Claims.ClaimsIdentity)
  - System.Security.Claims.ClaimsPrincipal.Clone
  - System.Security.Claims.ClaimsPrincipal.CreateClaimsIdentity(System.IO.BinaryReader)
  - System.Security.Claims.ClaimsPrincipal.FindAll(System.Predicate{System.Security.Claims.Claim})
  - System.Security.Claims.ClaimsPrincipal.FindAll(System.String)
  - System.Security.Claims.ClaimsPrincipal.FindFirst(System.Predicate{System.Security.Claims.Claim})
  - System.Security.Claims.ClaimsPrincipal.FindFirst(System.String)
  - System.Security.Claims.ClaimsPrincipal.HasClaim(System.Predicate{System.Security.Claims.Claim})
  - System.Security.Claims.ClaimsPrincipal.HasClaim(System.String,System.String)
  - System.Security.Claims.ClaimsPrincipal.WriteTo(System.IO.BinaryWriter)
  - System.Security.Claims.ClaimsPrincipal.WriteTo(System.IO.BinaryWriter,System.Byte[])
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: System.Security.Principal.GenericPrincipal.#ctor(System.Security.Principal.IIdentity,System.String[])
  commentId: M:System.Security.Principal.GenericPrincipal.#ctor(System.Security.Principal.IIdentity,System.String[])
  id: '#ctor(System.Security.Principal.IIdentity,System.String[])'
  parent: System.Security.Principal.GenericPrincipal
  langs:
  - csharp
  - vb
  name: GenericPrincipal(IIdentity, String[])
  fullName: System.Security.Principal.GenericPrincipal.GenericPrincipal(System.Security.Principal.IIdentity, System.String[])
  type: Constructor
  source:
    remote:
      path: src/System.Security.Claims/ref/System.Security.Claims.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Security.Claims/ref/System.Security.Claims.cs
    startLine: 213
  assemblies:
  - System.Security.Claims
  namespace: System.Security.Principal
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Security.Principal.GenericPrincipal\" data-throw-if-not-resolved=\"false\"></xref> class from a user identity and an array of role names to which the user represented by that identity belongs.</p>\n"
  example:
  - "\n<p>The following code shows the use of the <xref href=\"System.Security.Principal.GenericPrincipal.#ctor(System.Security.Principal.IIdentity,System.String[])\" data-throw-if-not-resolved=\"false\"></xref> constructor. This code example is part of a larger example provided for the <xref href=\"System.Security.Principal.GenericPrincipal\" data-throw-if-not-resolved=\"false\"></xref> class.</p>System.Security.Principal.GenericPrincipal2#2"
  syntax:
    content: public GenericPrincipal(IIdentity identity, string[] roles)
    content.vb: Public Sub New(identity As IIdentity, roles As String())
    parameters:
    - id: identity
      type: System.Security.Principal.IIdentity
      description: "\n<p>A basic implementation of <xref href=\"System.Security.Principal.IIdentity\" data-throw-if-not-resolved=\"false\"></xref> that represents any user. </p>\n"
    - id: roles
      type: System.String[]
      description: "\n<p>An array of role names to which the user represented by the <em>identity</em> parameter belongs. </p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>The <em>identity</em> parameter is <strong>null</strong>. </p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Security.Principal.GenericPrincipal.GenericPrincipal(System.Security.Principal.IIdentity, System.String())
  name.vb: GenericPrincipal(IIdentity, String())
- uid: System.Security.Principal.GenericPrincipal.Identity
  commentId: P:System.Security.Principal.GenericPrincipal.Identity
  id: Identity
  parent: System.Security.Principal.GenericPrincipal
  langs:
  - csharp
  - vb
  name: Identity
  fullName: System.Security.Principal.GenericPrincipal.Identity
  type: Property
  source:
    remote:
      path: src/System.Security.Claims/src/System/Security/Claims/GenericPrincipal.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Identity
    path: src/System.Security.Claims/src/System/Security/Claims/GenericPrincipal.cs
    startLine: 77
  assemblies:
  - System.Security.Claims
  namespace: System.Security.Principal
  summary: "\n<p>Gets the <xref href=\"System.Security.Principal.GenericIdentity\" data-throw-if-not-resolved=\"false\"></xref> of the user represented by the current <xref href=\"System.Security.Principal.GenericPrincipal\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  example:
  - "\n<p>The following code shows the use of the <xref href=\"System.Security.Principal.GenericPrincipal.Identity\" data-throw-if-not-resolved=\"false\"></xref> property. This code example is part of a larger example provided for the <xref href=\"System.Security.Principal.GenericPrincipal\" data-throw-if-not-resolved=\"false\"></xref> class.</p>System.Security.Principal.GenericPrincipal2#3"
  syntax:
    content: public override IIdentity Identity { get; }
    content.vb: Public Overrides ReadOnly Property Identity As IIdentity
    parameters: []
    return:
      type: IIdentity
  overridden: System.Security.Claims.ClaimsPrincipal.Identity
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: System.Security.Principal.GenericPrincipal.IsInRole(System.String)
  commentId: M:System.Security.Principal.GenericPrincipal.IsInRole(System.String)
  id: IsInRole(System.String)
  parent: System.Security.Principal.GenericPrincipal
  langs:
  - csharp
  - vb
  name: IsInRole(String)
  fullName: System.Security.Principal.GenericPrincipal.IsInRole(System.String)
  type: Method
  source:
    remote:
      path: src/System.Security.Claims/src/System/Security/Claims/GenericPrincipal.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IsInRole
    path: src/System.Security.Claims/src/System/Security/Claims/GenericPrincipal.cs
    startLine: 82
  assemblies:
  - System.Security.Claims
  namespace: System.Security.Principal
  summary: "\n<p>Determines whether the current <xref href=\"System.Security.Principal.GenericPrincipal\" data-throw-if-not-resolved=\"false\"></xref> belongs to the specified role.</p>\n"
  example:
  - "\n<p>The following code shows the use of the <xref href=\"System.Security.Principal.GenericPrincipal.IsInRole(System.String)\" data-throw-if-not-resolved=\"false\"></xref> method. This code example is part of a larger example provided for the <xref href=\"System.Security.Principal.GenericPrincipal\" data-throw-if-not-resolved=\"false\"></xref> class.</p>System.Security.Principal.GenericPrincipal2#4"
  syntax:
    content: public override bool IsInRole(string role)
    content.vb: Public Overrides Function IsInRole(role As String) As Boolean
    parameters:
    - id: role
      type: System.String
    return:
      type: System.Boolean
  overridden: System.Security.Claims.ClaimsPrincipal.IsInRole(System.String)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: System.Security.Principal
  isExternal: false
  name: System.Security.Principal
  fullName: System.Security.Principal
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System.Security.Claims.ClaimsPrincipal
  parent: System.Security.Claims
  isExternal: false
  name: ClaimsPrincipal
  fullName: System.Security.Claims.ClaimsPrincipal
- uid: System.Security.Claims.ClaimsPrincipal.Claims
  parent: System.Security.Claims.ClaimsPrincipal
  isExternal: false
  name: Claims
  fullName: System.Security.Claims.ClaimsPrincipal.Claims
- uid: System.Security.Claims.ClaimsPrincipal.ClaimsPrincipalSelector
  parent: System.Security.Claims.ClaimsPrincipal
  isExternal: false
  name: ClaimsPrincipalSelector
  fullName: System.Security.Claims.ClaimsPrincipal.ClaimsPrincipalSelector
- uid: System.Security.Claims.ClaimsPrincipal.Current
  parent: System.Security.Claims.ClaimsPrincipal
  isExternal: false
  name: Current
  fullName: System.Security.Claims.ClaimsPrincipal.Current
- uid: System.Security.Claims.ClaimsPrincipal.CustomSerializationData
  parent: System.Security.Claims.ClaimsPrincipal
  isExternal: false
  name: CustomSerializationData
  fullName: System.Security.Claims.ClaimsPrincipal.CustomSerializationData
- uid: System.Security.Claims.ClaimsPrincipal.Identities
  parent: System.Security.Claims.ClaimsPrincipal
  isExternal: false
  name: Identities
  fullName: System.Security.Claims.ClaimsPrincipal.Identities
- uid: System.Security.Claims.ClaimsPrincipal.PrimaryIdentitySelector
  parent: System.Security.Claims.ClaimsPrincipal
  isExternal: false
  name: PrimaryIdentitySelector
  fullName: System.Security.Claims.ClaimsPrincipal.PrimaryIdentitySelector
- uid: System.Security.Claims.ClaimsPrincipal.AddIdentities(System.Collections.Generic.IEnumerable{System.Security.Claims.ClaimsIdentity})
  parent: System.Security.Claims.ClaimsPrincipal
  isExternal: true
  name: AddIdentities(Collections.Generic.IEnumerable<ClaimsIdentity>)
  fullName: System.Security.Claims.ClaimsPrincipal.AddIdentities(System.Collections.Generic.IEnumerable<System.Security.Claims.ClaimsIdentity>)
  fullname.vb: System.Security.Claims.ClaimsPrincipal.AddIdentities(System.Collections.Generic.IEnumerable(Of System.Security.Claims.ClaimsIdentity))
  name.vb: AddIdentities(Collections.Generic.IEnumerable(Of ClaimsIdentity))
  spec.csharp:
  - uid: System.Security.Claims.ClaimsPrincipal.AddIdentities(System.Collections.Generic.IEnumerable{System.Security.Claims.ClaimsIdentity})
    name: AddIdentities
    fullName: System.Security.Claims.ClaimsPrincipal.AddIdentities
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: Collections.Generic.IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Security.Claims.ClaimsIdentity
    name: ClaimsIdentity
    fullName: System.Security.Claims.ClaimsIdentity
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Security.Claims.ClaimsPrincipal.AddIdentities(System.Collections.Generic.IEnumerable{System.Security.Claims.ClaimsIdentity})
    name: AddIdentities
    fullName: System.Security.Claims.ClaimsPrincipal.AddIdentities
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: Collections.Generic.IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Security.Claims.ClaimsIdentity
    name: ClaimsIdentity
    fullName: System.Security.Claims.ClaimsIdentity
  - name: )
    fullName: )
  - name: )
    fullName: )
- uid: System.Security.Claims.ClaimsPrincipal.AddIdentity(System.Security.Claims.ClaimsIdentity)
  parent: System.Security.Claims.ClaimsPrincipal
  isExternal: false
  name: AddIdentity(ClaimsIdentity)
  fullName: System.Security.Claims.ClaimsPrincipal.AddIdentity(System.Security.Claims.ClaimsIdentity)
  spec.csharp:
  - uid: System.Security.Claims.ClaimsPrincipal.AddIdentity(System.Security.Claims.ClaimsIdentity)
    name: AddIdentity
    fullName: System.Security.Claims.ClaimsPrincipal.AddIdentity
  - name: (
    fullName: (
  - uid: System.Security.Claims.ClaimsIdentity
    name: ClaimsIdentity
    fullName: System.Security.Claims.ClaimsIdentity
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Security.Claims.ClaimsPrincipal.AddIdentity(System.Security.Claims.ClaimsIdentity)
    name: AddIdentity
    fullName: System.Security.Claims.ClaimsPrincipal.AddIdentity
  - name: (
    fullName: (
  - uid: System.Security.Claims.ClaimsIdentity
    name: ClaimsIdentity
    fullName: System.Security.Claims.ClaimsIdentity
  - name: )
    fullName: )
- uid: System.Security.Claims.ClaimsPrincipal.Clone
  parent: System.Security.Claims.ClaimsPrincipal
  isExternal: false
  name: Clone()
  fullName: System.Security.Claims.ClaimsPrincipal.Clone()
  spec.csharp:
  - uid: System.Security.Claims.ClaimsPrincipal.Clone
    name: Clone
    fullName: System.Security.Claims.ClaimsPrincipal.Clone
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Security.Claims.ClaimsPrincipal.Clone
    name: Clone
    fullName: System.Security.Claims.ClaimsPrincipal.Clone
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Security.Claims.ClaimsPrincipal.CreateClaimsIdentity(System.IO.BinaryReader)
  parent: System.Security.Claims.ClaimsPrincipal
  isExternal: true
  name: CreateClaimsIdentity(IO.BinaryReader)
  fullName: System.Security.Claims.ClaimsPrincipal.CreateClaimsIdentity(System.IO.BinaryReader)
  spec.csharp:
  - uid: System.Security.Claims.ClaimsPrincipal.CreateClaimsIdentity(System.IO.BinaryReader)
    name: CreateClaimsIdentity
    fullName: System.Security.Claims.ClaimsPrincipal.CreateClaimsIdentity
  - name: (
    fullName: (
  - uid: System.IO.BinaryReader
    name: IO.BinaryReader
    fullName: System.IO.BinaryReader
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Security.Claims.ClaimsPrincipal.CreateClaimsIdentity(System.IO.BinaryReader)
    name: CreateClaimsIdentity
    fullName: System.Security.Claims.ClaimsPrincipal.CreateClaimsIdentity
  - name: (
    fullName: (
  - uid: System.IO.BinaryReader
    name: IO.BinaryReader
    fullName: System.IO.BinaryReader
    isExternal: true
  - name: )
    fullName: )
- uid: System.Security.Claims.ClaimsPrincipal.FindAll(System.Predicate{System.Security.Claims.Claim})
  parent: System.Security.Claims.ClaimsPrincipal
  isExternal: true
  name: FindAll(Predicate<Claim>)
  fullName: System.Security.Claims.ClaimsPrincipal.FindAll(System.Predicate<System.Security.Claims.Claim>)
  fullname.vb: System.Security.Claims.ClaimsPrincipal.FindAll(System.Predicate(Of System.Security.Claims.Claim))
  name.vb: FindAll(Predicate(Of Claim))
  spec.csharp:
  - uid: System.Security.Claims.ClaimsPrincipal.FindAll(System.Predicate{System.Security.Claims.Claim})
    name: FindAll
    fullName: System.Security.Claims.ClaimsPrincipal.FindAll
  - name: (
    fullName: (
  - uid: System.Predicate`1
    name: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Security.Claims.Claim
    name: Claim
    fullName: System.Security.Claims.Claim
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Security.Claims.ClaimsPrincipal.FindAll(System.Predicate{System.Security.Claims.Claim})
    name: FindAll
    fullName: System.Security.Claims.ClaimsPrincipal.FindAll
  - name: (
    fullName: (
  - uid: System.Predicate`1
    name: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Security.Claims.Claim
    name: Claim
    fullName: System.Security.Claims.Claim
  - name: )
    fullName: )
  - name: )
    fullName: )
- uid: System.Security.Claims.ClaimsPrincipal.FindAll(System.String)
  parent: System.Security.Claims.ClaimsPrincipal
  isExternal: true
  name: FindAll(String)
  fullName: System.Security.Claims.ClaimsPrincipal.FindAll(System.String)
  spec.csharp:
  - uid: System.Security.Claims.ClaimsPrincipal.FindAll(System.String)
    name: FindAll
    fullName: System.Security.Claims.ClaimsPrincipal.FindAll
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Security.Claims.ClaimsPrincipal.FindAll(System.String)
    name: FindAll
    fullName: System.Security.Claims.ClaimsPrincipal.FindAll
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: System.Security.Claims.ClaimsPrincipal.FindFirst(System.Predicate{System.Security.Claims.Claim})
  parent: System.Security.Claims.ClaimsPrincipal
  isExternal: true
  name: FindFirst(Predicate<Claim>)
  fullName: System.Security.Claims.ClaimsPrincipal.FindFirst(System.Predicate<System.Security.Claims.Claim>)
  fullname.vb: System.Security.Claims.ClaimsPrincipal.FindFirst(System.Predicate(Of System.Security.Claims.Claim))
  name.vb: FindFirst(Predicate(Of Claim))
  spec.csharp:
  - uid: System.Security.Claims.ClaimsPrincipal.FindFirst(System.Predicate{System.Security.Claims.Claim})
    name: FindFirst
    fullName: System.Security.Claims.ClaimsPrincipal.FindFirst
  - name: (
    fullName: (
  - uid: System.Predicate`1
    name: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Security.Claims.Claim
    name: Claim
    fullName: System.Security.Claims.Claim
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Security.Claims.ClaimsPrincipal.FindFirst(System.Predicate{System.Security.Claims.Claim})
    name: FindFirst
    fullName: System.Security.Claims.ClaimsPrincipal.FindFirst
  - name: (
    fullName: (
  - uid: System.Predicate`1
    name: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Security.Claims.Claim
    name: Claim
    fullName: System.Security.Claims.Claim
  - name: )
    fullName: )
  - name: )
    fullName: )
- uid: System.Security.Claims.ClaimsPrincipal.FindFirst(System.String)
  parent: System.Security.Claims.ClaimsPrincipal
  isExternal: true
  name: FindFirst(String)
  fullName: System.Security.Claims.ClaimsPrincipal.FindFirst(System.String)
  spec.csharp:
  - uid: System.Security.Claims.ClaimsPrincipal.FindFirst(System.String)
    name: FindFirst
    fullName: System.Security.Claims.ClaimsPrincipal.FindFirst
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Security.Claims.ClaimsPrincipal.FindFirst(System.String)
    name: FindFirst
    fullName: System.Security.Claims.ClaimsPrincipal.FindFirst
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: System.Security.Claims.ClaimsPrincipal.HasClaim(System.Predicate{System.Security.Claims.Claim})
  parent: System.Security.Claims.ClaimsPrincipal
  isExternal: true
  name: HasClaim(Predicate<Claim>)
  fullName: System.Security.Claims.ClaimsPrincipal.HasClaim(System.Predicate<System.Security.Claims.Claim>)
  fullname.vb: System.Security.Claims.ClaimsPrincipal.HasClaim(System.Predicate(Of System.Security.Claims.Claim))
  name.vb: HasClaim(Predicate(Of Claim))
  spec.csharp:
  - uid: System.Security.Claims.ClaimsPrincipal.HasClaim(System.Predicate{System.Security.Claims.Claim})
    name: HasClaim
    fullName: System.Security.Claims.ClaimsPrincipal.HasClaim
  - name: (
    fullName: (
  - uid: System.Predicate`1
    name: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Security.Claims.Claim
    name: Claim
    fullName: System.Security.Claims.Claim
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Security.Claims.ClaimsPrincipal.HasClaim(System.Predicate{System.Security.Claims.Claim})
    name: HasClaim
    fullName: System.Security.Claims.ClaimsPrincipal.HasClaim
  - name: (
    fullName: (
  - uid: System.Predicate`1
    name: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Security.Claims.Claim
    name: Claim
    fullName: System.Security.Claims.Claim
  - name: )
    fullName: )
  - name: )
    fullName: )
- uid: System.Security.Claims.ClaimsPrincipal.HasClaim(System.String,System.String)
  parent: System.Security.Claims.ClaimsPrincipal
  isExternal: true
  name: HasClaim(String, String)
  fullName: System.Security.Claims.ClaimsPrincipal.HasClaim(System.String, System.String)
  spec.csharp:
  - uid: System.Security.Claims.ClaimsPrincipal.HasClaim(System.String,System.String)
    name: HasClaim
    fullName: System.Security.Claims.ClaimsPrincipal.HasClaim
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Security.Claims.ClaimsPrincipal.HasClaim(System.String,System.String)
    name: HasClaim
    fullName: System.Security.Claims.ClaimsPrincipal.HasClaim
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: System.Security.Claims.ClaimsPrincipal.WriteTo(System.IO.BinaryWriter)
  parent: System.Security.Claims.ClaimsPrincipal
  isExternal: true
  name: WriteTo(IO.BinaryWriter)
  fullName: System.Security.Claims.ClaimsPrincipal.WriteTo(System.IO.BinaryWriter)
  spec.csharp:
  - uid: System.Security.Claims.ClaimsPrincipal.WriteTo(System.IO.BinaryWriter)
    name: WriteTo
    fullName: System.Security.Claims.ClaimsPrincipal.WriteTo
  - name: (
    fullName: (
  - uid: System.IO.BinaryWriter
    name: IO.BinaryWriter
    fullName: System.IO.BinaryWriter
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Security.Claims.ClaimsPrincipal.WriteTo(System.IO.BinaryWriter)
    name: WriteTo
    fullName: System.Security.Claims.ClaimsPrincipal.WriteTo
  - name: (
    fullName: (
  - uid: System.IO.BinaryWriter
    name: IO.BinaryWriter
    fullName: System.IO.BinaryWriter
    isExternal: true
  - name: )
    fullName: )
- uid: System.Security.Claims.ClaimsPrincipal.WriteTo(System.IO.BinaryWriter,System.Byte[])
  parent: System.Security.Claims.ClaimsPrincipal
  isExternal: true
  name: WriteTo(IO.BinaryWriter, Byte[])
  fullName: System.Security.Claims.ClaimsPrincipal.WriteTo(System.IO.BinaryWriter, System.Byte[])
  fullname.vb: System.Security.Claims.ClaimsPrincipal.WriteTo(System.IO.BinaryWriter, System.Byte())
  name.vb: WriteTo(IO.BinaryWriter, Byte())
  spec.csharp:
  - uid: System.Security.Claims.ClaimsPrincipal.WriteTo(System.IO.BinaryWriter,System.Byte[])
    name: WriteTo
    fullName: System.Security.Claims.ClaimsPrincipal.WriteTo
  - name: (
    fullName: (
  - uid: System.IO.BinaryWriter
    name: IO.BinaryWriter
    fullName: System.IO.BinaryWriter
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    fullName: '[]'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Security.Claims.ClaimsPrincipal.WriteTo(System.IO.BinaryWriter,System.Byte[])
    name: WriteTo
    fullName: System.Security.Claims.ClaimsPrincipal.WriteTo
  - name: (
    fullName: (
  - uid: System.IO.BinaryWriter
    name: IO.BinaryWriter
    fullName: System.IO.BinaryWriter
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    fullName: ()
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Security.Claims
  isExternal: false
  name: System.Security.Claims
  fullName: System.Security.Claims
- uid: System.Security.Principal.IIdentity
  parent: System.Security.Principal
  isExternal: false
  name: IIdentity
  fullName: System.Security.Principal.IIdentity
- uid: System.String[]
  isExternal: false
  name: String[]
  fullName: System.String[]
  fullname.vb: System.String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: String
    fullName: System.String
  - name: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.String
    name: String
    fullName: System.String
  - name: ()
    fullName: ()
- uid: System.Security.Claims.ClaimsPrincipal.Identity
  parent: System.Security.Claims.ClaimsPrincipal
  isExternal: false
  name: Identity
  fullName: System.Security.Claims.ClaimsPrincipal.Identity
- uid: System.Security.Claims.ClaimsPrincipal.IsInRole(System.String)
  parent: System.Security.Claims.ClaimsPrincipal
  isExternal: true
  name: IsInRole(String)
  fullName: System.Security.Claims.ClaimsPrincipal.IsInRole(System.String)
  spec.csharp:
  - uid: System.Security.Claims.ClaimsPrincipal.IsInRole(System.String)
    name: IsInRole
    fullName: System.Security.Claims.ClaimsPrincipal.IsInRole
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Security.Claims.ClaimsPrincipal.IsInRole(System.String)
    name: IsInRole
    fullName: System.Security.Claims.ClaimsPrincipal.IsInRole
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: System.String
  parent: System
  isExternal: false
  name: String
  fullName: System.String
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  fullName: System.Boolean
- uid: System.ArgumentNullException
  isExternal: false
  name: ArgumentNullException
  fullName: System.ArgumentNullException
