items:
- uid: System.Net.Sockets.SendPacketsElement
  commentId: T:System.Net.Sockets.SendPacketsElement
  id: SendPacketsElement
  parent: System.Net.Sockets
  children:
  - System.Net.Sockets.SendPacketsElement.#ctor(System.Byte[])
  - System.Net.Sockets.SendPacketsElement.#ctor(System.Byte[],System.Int32,System.Int32)
  - System.Net.Sockets.SendPacketsElement.#ctor(System.Byte[],System.Int32,System.Int32,System.Boolean)
  - System.Net.Sockets.SendPacketsElement.#ctor(System.String)
  - System.Net.Sockets.SendPacketsElement.#ctor(System.String,System.Int32,System.Int32)
  - System.Net.Sockets.SendPacketsElement.#ctor(System.String,System.Int32,System.Int32,System.Boolean)
  - System.Net.Sockets.SendPacketsElement.Buffer
  - System.Net.Sockets.SendPacketsElement.Count
  - System.Net.Sockets.SendPacketsElement.EndOfPacket
  - System.Net.Sockets.SendPacketsElement.FilePath
  - System.Net.Sockets.SendPacketsElement.Offset
  langs:
  - csharp
  - vb
  name: SendPacketsElement
  fullName: System.Net.Sockets.SendPacketsElement
  type: Class
  source:
    remote:
      path: src/System.Net.Sockets/ref/System.Net.Sockets.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: SendPacketsElement
    path: src/System.Net.Sockets/ref/System.Net.Sockets.cs
    startLine: 144
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  summary: "\n<p>Represents an element in a <xref href=\"System.Net.Sockets.SendPacketsElement\" data-throw-if-not-resolved=\"false\"></xref> array.</p>\n"
  remarks: "\n<p>The <xref href=\"System.Net.Sockets.SendPacketsElement\" data-throw-if-not-resolved=\"false\"></xref> class is used to enhance the <xref href=\"System.Net.Sockets.Socket\" data-throw-if-not-resolved=\"false\"></xref> class for use by server applications that use asynchronous network I/O to achieve the highest performance. The <xref href=\"System.Net.Sockets.SendPacketsElement\" data-throw-if-not-resolved=\"false\"></xref> class is used with the <xref href=\"System.Net.Sockets.SocketAsyncEventArgs.SendPacketsElements\" data-throw-if-not-resolved=\"false\"></xref> property to get or set a data buffer or file to be sent using the <xref href=\"System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)\" data-throw-if-not-resolved=\"false\"></xref> method.</p>\n"
  example:
  - 
  syntax:
    content: public class SendPacketsElement
    content.vb: Public Class SendPacketsElement
  seealso:
  - type: System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)
    commentId: M:System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)
  - type: System.Net.Sockets.SocketAsyncEventArgs.SendPacketsElements
    commentId: P:System.Net.Sockets.SocketAsyncEventArgs.SendPacketsElements
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: System.Net.Sockets.SendPacketsElement.#ctor(System.Byte[])
  commentId: M:System.Net.Sockets.SendPacketsElement.#ctor(System.Byte[])
  id: '#ctor(System.Byte[])'
  parent: System.Net.Sockets.SendPacketsElement
  langs:
  - csharp
  - vb
  name: SendPacketsElement(Byte[])
  fullName: System.Net.Sockets.SendPacketsElement.SendPacketsElement(System.Byte[])
  type: Constructor
  source:
    remote:
      path: src/System.Net.Sockets/ref/System.Net.Sockets.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Net.Sockets/ref/System.Net.Sockets.cs
    startLine: 146
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Net.Sockets.SendPacketsElement\" data-throw-if-not-resolved=\"false\"></xref> class using the specified buffer.</p>\n"
  remarks: "\n<p>The <xref href=\"System.Net.Sockets.SendPacketsElement.#ctor(System.Byte[])\" data-throw-if-not-resolved=\"false\"></xref> constructor initializes a new instance of the <xref href=\"System.Net.Sockets.SendPacketsElement\" data-throw-if-not-resolved=\"false\"></xref> class with a byte array of data. The <xref href=\"System.Net.Sockets.SendPacketsElement\" data-throw-if-not-resolved=\"false\"></xref> class is used with the <xref href=\"System.Net.Sockets.SocketAsyncEventArgs.SendPacketsElements\" data-throw-if-not-resolved=\"false\"></xref> property to get or set a data buffer or file to be sent using the <xref href=\"System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)\" data-throw-if-not-resolved=\"false\"></xref> method.</p>\n"
  example:
  - 
  syntax:
    content: public SendPacketsElement(byte[] buffer)
    content.vb: Public Sub New(buffer As Byte())
    parameters:
    - id: buffer
      type: System.Byte[]
      description: "\n<p>A byte array of data to send using the <xref href=\"System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)\" data-throw-if-not-resolved=\"false\"></xref> method.</p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>The <em>buffer</em> parameter cannot be null</p>\n"
  seealso:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
  - type: System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)
    commentId: M:System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)
  - type: System.Net.Sockets.SocketAsyncEventArgs.SendPacketsElements
    commentId: P:System.Net.Sockets.SocketAsyncEventArgs.SendPacketsElements
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Net.Sockets.SendPacketsElement.SendPacketsElement(System.Byte())
  name.vb: SendPacketsElement(Byte())
- uid: System.Net.Sockets.SendPacketsElement.#ctor(System.Byte[],System.Int32,System.Int32)
  commentId: M:System.Net.Sockets.SendPacketsElement.#ctor(System.Byte[],System.Int32,System.Int32)
  id: '#ctor(System.Byte[],System.Int32,System.Int32)'
  parent: System.Net.Sockets.SendPacketsElement
  langs:
  - csharp
  - vb
  name: SendPacketsElement(Byte[], Int32, Int32)
  fullName: System.Net.Sockets.SendPacketsElement.SendPacketsElement(System.Byte[], System.Int32, System.Int32)
  type: Constructor
  source:
    remote:
      path: src/System.Net.Sockets/ref/System.Net.Sockets.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Net.Sockets/ref/System.Net.Sockets.cs
    startLine: 147
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Net.Sockets.SendPacketsElement\" data-throw-if-not-resolved=\"false\"></xref> class using the specified buffer, buffer offset, and count.</p>\n"
  remarks: "\n<p>The <xref href=\"System.Net.Sockets.SendPacketsElement.#ctor(System.Byte[],System.Int32,System.Int32)\" data-throw-if-not-resolved=\"false\"></xref> constructor initializes a new instance of the <xref href=\"System.Net.Sockets.SendPacketsElement\" data-throw-if-not-resolved=\"false\"></xref> class with a byte array of data. The <xref href=\"System.Net.Sockets.SendPacketsElement\" data-throw-if-not-resolved=\"false\"></xref> class is used with the <xref href=\"System.Net.Sockets.SocketAsyncEventArgs.SendPacketsElements\" data-throw-if-not-resolved=\"false\"></xref> property to get or set a data buffer or file to be sent using the <xref href=\"System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)\" data-throw-if-not-resolved=\"false\"></xref> method.</p>\n"
  example:
  - 
  syntax:
    content: public SendPacketsElement(byte[] buffer, int offset, int count)
    content.vb: Public Sub New(buffer As Byte(), offset As Integer, count As Integer)
    parameters:
    - id: buffer
      type: System.Byte[]
      description: "\n<p>A byte array of data to send using the <xref href=\"System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)\" data-throw-if-not-resolved=\"false\"></xref> method.</p>\n"
    - id: offset
      type: System.Int32
      description: "\n<p>The offset, in bytes, from the beginning of the <em>buffer</em> to the location in the <em>buffer</em> to start sending the data specified in the <em>buffer</em> parameter.</p>\n"
    - id: count
      type: System.Int32
      description: "\n<p>The number of bytes to send starting from the <em>offset</em> parameter. If <em>count</em> is zero, no bytes are sent.</p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>The <em>buffer</em> parameter cannot be null</p>\n"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>The <em>offset</em> and <em>count</em> parameters must be greater than or equal to zero. </p>\n<p>The <em>offset</em> and <em>count</em> must be less than the size of the buffer</p>\n"
  seealso:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
  - type: System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)
    commentId: M:System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)
  - type: System.Net.Sockets.SocketAsyncEventArgs.SendPacketsElements
    commentId: P:System.Net.Sockets.SocketAsyncEventArgs.SendPacketsElements
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Net.Sockets.SendPacketsElement.SendPacketsElement(System.Byte(), System.Int32, System.Int32)
  name.vb: SendPacketsElement(Byte(), Int32, Int32)
- uid: System.Net.Sockets.SendPacketsElement.#ctor(System.Byte[],System.Int32,System.Int32,System.Boolean)
  commentId: M:System.Net.Sockets.SendPacketsElement.#ctor(System.Byte[],System.Int32,System.Int32,System.Boolean)
  id: '#ctor(System.Byte[],System.Int32,System.Int32,System.Boolean)'
  parent: System.Net.Sockets.SendPacketsElement
  langs:
  - csharp
  - vb
  name: SendPacketsElement(Byte[], Int32, Int32, Boolean)
  fullName: System.Net.Sockets.SendPacketsElement.SendPacketsElement(System.Byte[], System.Int32, System.Int32, System.Boolean)
  type: Constructor
  source:
    remote:
      path: src/System.Net.Sockets/ref/System.Net.Sockets.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Net.Sockets/ref/System.Net.Sockets.cs
    startLine: 148
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Net.Sockets.SendPacketsElement\" data-throw-if-not-resolved=\"false\"></xref> class using the specified buffer, buffer offset, and count with an option to combine this element with the next element in a single send request from the sockets layer to the transport. </p>\n"
  remarks: "\n<p>The <xref href=\"System.Net.Sockets.SendPacketsElement.#ctor(System.Byte[],System.Int32,System.Int32,System.Boolean)\" data-throw-if-not-resolved=\"false\"></xref> constructor initializes a new instance of the <xref href=\"System.Net.Sockets.SendPacketsElement\" data-throw-if-not-resolved=\"false\"></xref> class with a byte array of data. The <xref href=\"System.Net.Sockets.SendPacketsElement\" data-throw-if-not-resolved=\"false\"></xref> class is used with the <xref href=\"System.Net.Sockets.SocketAsyncEventArgs.SendPacketsElements\" data-throw-if-not-resolved=\"false\"></xref> property to get or set a data buffer or file to be sent using the <xref href=\"System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)\" data-throw-if-not-resolved=\"false\"></xref> method.</p>\n"
  example:
  - 
  syntax:
    content: public SendPacketsElement(byte[] buffer, int offset, int count, bool endOfPacket)
    content.vb: Public Sub New(buffer As Byte(), offset As Integer, count As Integer, endOfPacket As Boolean)
    parameters:
    - id: buffer
      type: System.Byte[]
      description: "\n<p>A byte array of data to send using the <xref href=\"System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)\" data-throw-if-not-resolved=\"false\"></xref> method.</p>\n"
    - id: offset
      type: System.Int32
      description: "\n<p>The offset, in bytes, from the beginning of the <em>buffer</em> to the location in the <em>buffer</em> to start sending the data specified in the <em>buffer</em> parameter.</p>\n"
    - id: count
      type: System.Int32
      description: "\n<p>The number bytes to send starting from the <em>offset</em> parameter. If <em>count</em> is zero, no bytes are sent.</p>\n"
    - id: endOfPacket
      type: System.Boolean
      description: "\n<p>A Boolean value that specifies that this element should not be combined with the next element in a single send request from the sockets layer to the transport. This flag is used for granular control of the content of each message on a datagram or message-oriented socket. </p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>The <em>buffer</em> parameter cannot be null</p>\n"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>The <em>offset</em> and <em>count</em> parameters must be greater than or equal to zero. </p>\n<p>The <em>offset</em> and <em>count</em> must be less than the size of the buffer</p>\n"
  seealso:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
  - type: System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)
    commentId: M:System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)
  - type: System.Net.Sockets.SocketAsyncEventArgs.SendPacketsElements
    commentId: P:System.Net.Sockets.SocketAsyncEventArgs.SendPacketsElements
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Net.Sockets.SendPacketsElement.SendPacketsElement(System.Byte(), System.Int32, System.Int32, System.Boolean)
  name.vb: SendPacketsElement(Byte(), Int32, Int32, Boolean)
- uid: System.Net.Sockets.SendPacketsElement.#ctor(System.String)
  commentId: M:System.Net.Sockets.SendPacketsElement.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Net.Sockets.SendPacketsElement
  langs:
  - csharp
  - vb
  name: SendPacketsElement(String)
  fullName: System.Net.Sockets.SendPacketsElement.SendPacketsElement(System.String)
  type: Constructor
  source:
    remote:
      path: src/System.Net.Sockets/ref/System.Net.Sockets.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Net.Sockets/ref/System.Net.Sockets.cs
    startLine: 149
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Net.Sockets.SendPacketsElement\" data-throw-if-not-resolved=\"false\"></xref> class using the specified file.</p>\n"
  remarks: "\n<p>The <xref href=\"System.Net.Sockets.SendPacketsElement.#ctor(System.String)\" data-throw-if-not-resolved=\"false\"></xref> constructor initializes a new instance of the <xref href=\"System.Net.Sockets.SendPacketsElement\" data-throw-if-not-resolved=\"false\"></xref> class with a filename of a file. The <xref href=\"System.Net.Sockets.SendPacketsElement\" data-throw-if-not-resolved=\"false\"></xref> class is used with the <xref href=\"System.Net.Sockets.SocketAsyncEventArgs.SendPacketsElements\" data-throw-if-not-resolved=\"false\"></xref> property to get or set a data buffer or file to be sent using the <xref href=\"System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)\" data-throw-if-not-resolved=\"false\"></xref> method.</p>\n<p>Universal Naming Convention (UNC) paths are supported by the <em>filepath</em> parameter. If the file is in the current working directory, no path information needs to be specified.</p>\n"
  example:
  - 
  syntax:
    content: public SendPacketsElement(string filepath)
    content.vb: Public Sub New(filepath As String)
    parameters:
    - id: filepath
      type: System.String
      description: "\n<p>The filename of the file to be transmitted using the <xref href=\"System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)\" data-throw-if-not-resolved=\"false\"></xref> method.</p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>The <em>filepath</em> parameter cannot be null</p>\n"
  seealso:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
  - type: System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)
    commentId: M:System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)
  - type: System.Net.Sockets.SocketAsyncEventArgs.SendPacketsElements
    commentId: P:System.Net.Sockets.SocketAsyncEventArgs.SendPacketsElements
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Net.Sockets.SendPacketsElement.#ctor(System.String,System.Int32,System.Int32)
  commentId: M:System.Net.Sockets.SendPacketsElement.#ctor(System.String,System.Int32,System.Int32)
  id: '#ctor(System.String,System.Int32,System.Int32)'
  parent: System.Net.Sockets.SendPacketsElement
  langs:
  - csharp
  - vb
  name: SendPacketsElement(String, Int32, Int32)
  fullName: System.Net.Sockets.SendPacketsElement.SendPacketsElement(System.String, System.Int32, System.Int32)
  type: Constructor
  source:
    remote:
      path: src/System.Net.Sockets/ref/System.Net.Sockets.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Net.Sockets/ref/System.Net.Sockets.cs
    startLine: 150
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Net.Sockets.SendPacketsElement\" data-throw-if-not-resolved=\"false\"></xref> class using the specified filename path, offset, and count.</p>\n"
  remarks: "\n<p>The <xref href=\"System.Net.Sockets.SendPacketsElement.#ctor(System.String,System.Int32,System.Int32)\" data-throw-if-not-resolved=\"false\"></xref> constructor initializes a new instance of the <xref href=\"System.Net.Sockets.SendPacketsElement\" data-throw-if-not-resolved=\"false\"></xref> class with a filename of a file. The <xref href=\"System.Net.Sockets.SendPacketsElement\" data-throw-if-not-resolved=\"false\"></xref> class is used with the <xref href=\"System.Net.Sockets.SocketAsyncEventArgs.SendPacketsElements\" data-throw-if-not-resolved=\"false\"></xref> property to get or set a data buffer or file to be sent using the <xref href=\"System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)\" data-throw-if-not-resolved=\"false\"></xref> method.</p>\n<p>Universal Naming Convention (UNC) paths are supported by the <em>filepath</em> parameter. If the file is in the current working directory, no path information needs to be specified.</p>\n"
  example:
  - 
  syntax:
    content: public SendPacketsElement(string filepath, int offset, int count)
    content.vb: Public Sub New(filepath As String, offset As Integer, count As Integer)
    parameters:
    - id: filepath
      type: System.String
      description: "\n<p>The filename of the file to be transmitted using the <xref href=\"System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)\" data-throw-if-not-resolved=\"false\"></xref> method.</p>\n"
    - id: offset
      type: System.Int32
      description: "\n<p>The offset, in bytes, from the beginning of the file to the location in the file to start sending the file specified in the <em>filepath</em> parameter.</p>\n"
    - id: count
      type: System.Int32
      description: "\n<p>The number of bytes to send starting from the <em>offset</em> parameter. If <em>count</em> is zero, the entire file is sent. </p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>The <em>filepath</em> parameter cannot be null</p>\n"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>The <em>offset</em> and <em>count</em> parameters must be greater than or equal to zero. </p>\n<p>The <em>offset</em> and <em>count</em> must be less than the size of the file indicated by the <em>filepath</em> parameter.</p>\n"
  seealso:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
  - type: System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)
    commentId: M:System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)
  - type: System.Net.Sockets.SocketAsyncEventArgs.SendPacketsElements
    commentId: P:System.Net.Sockets.SocketAsyncEventArgs.SendPacketsElements
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Net.Sockets.SendPacketsElement.#ctor(System.String,System.Int32,System.Int32,System.Boolean)
  commentId: M:System.Net.Sockets.SendPacketsElement.#ctor(System.String,System.Int32,System.Int32,System.Boolean)
  id: '#ctor(System.String,System.Int32,System.Int32,System.Boolean)'
  parent: System.Net.Sockets.SendPacketsElement
  langs:
  - csharp
  - vb
  name: SendPacketsElement(String, Int32, Int32, Boolean)
  fullName: System.Net.Sockets.SendPacketsElement.SendPacketsElement(System.String, System.Int32, System.Int32, System.Boolean)
  type: Constructor
  source:
    remote:
      path: src/System.Net.Sockets/ref/System.Net.Sockets.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Net.Sockets/ref/System.Net.Sockets.cs
    startLine: 151
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Net.Sockets.SendPacketsElement\" data-throw-if-not-resolved=\"false\"></xref> class using the specified filename path, buffer offset, and count with an option to combine this element with the next element in a single send request from the sockets layer to the transport. </p>\n"
  remarks: "\n<p>The <xref href=\"System.Net.Sockets.SendPacketsElement.#ctor(System.String,System.Int32,System.Int32,System.Boolean)\" data-throw-if-not-resolved=\"false\"></xref> constructor initializes a new instance of the <xref href=\"System.Net.Sockets.SendPacketsElement\" data-throw-if-not-resolved=\"false\"></xref> class with a filename of a file. The <xref href=\"System.Net.Sockets.SendPacketsElement\" data-throw-if-not-resolved=\"false\"></xref> class is used with the <xref href=\"System.Net.Sockets.SocketAsyncEventArgs.SendPacketsElements\" data-throw-if-not-resolved=\"false\"></xref> property to get or set a data buffer or file to be sent using the <xref href=\"System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)\" data-throw-if-not-resolved=\"false\"></xref> method.</p>\n<p>Universal Naming Convention (UNC) paths are supported by the <em>filepath</em> parameter. If the file is in the current working directory, no path information needs to be specified.</p>\n"
  example:
  - 
  syntax:
    content: public SendPacketsElement(string filepath, int offset, int count, bool endOfPacket)
    content.vb: Public Sub New(filepath As String, offset As Integer, count As Integer, endOfPacket As Boolean)
    parameters:
    - id: filepath
      type: System.String
      description: "\n<p>The filename of the file to be transmitted using the <xref href=\"System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)\" data-throw-if-not-resolved=\"false\"></xref> method.</p>\n"
    - id: offset
      type: System.Int32
      description: "\n<p>The offset, in bytes, from the beginning of the file to the location in the file to start sending the file specified in the <em>filepath</em> parameter.</p>\n"
    - id: count
      type: System.Int32
      description: "\n<p>The number of bytes to send starting from the <em>offset</em> parameter. If <em>count</em> is zero, the entire file is sent.</p>\n"
    - id: endOfPacket
      type: System.Boolean
      description: "\n<p>A Boolean value that specifies that this element should not be combined with the next element in a single send request from the sockets layer to the transport. This flag is used for granular control of the content of each message on a datagram or message-oriented socket.</p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>The <em>filepath</em> parameter cannot be null</p>\n"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>The <em>offset</em> and <em>count</em> parameters must be greater than or equal to zero. </p>\n<p>The <em>offset</em> and <em>count</em> must be less than the size of the file indicated by the <em>filepath</em> parameter.</p>\n"
  seealso:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
  - type: System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)
    commentId: M:System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)
  - type: System.Net.Sockets.SocketAsyncEventArgs.SendPacketsElements
    commentId: P:System.Net.Sockets.SocketAsyncEventArgs.SendPacketsElements
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Net.Sockets.SendPacketsElement.Buffer
  commentId: P:System.Net.Sockets.SendPacketsElement.Buffer
  id: Buffer
  parent: System.Net.Sockets.SendPacketsElement
  langs:
  - csharp
  - vb
  name: Buffer
  fullName: System.Net.Sockets.SendPacketsElement.Buffer
  type: Property
  source:
    remote:
      path: src/System.Net.Sockets/ref/System.Net.Sockets.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Buffer
    path: src/System.Net.Sockets/ref/System.Net.Sockets.cs
    startLine: 152
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  summary: "\n<p>Gets the buffer to be sent if the <xref href=\"System.Net.Sockets.SendPacketsElement\" data-throw-if-not-resolved=\"false\"></xref> class was initialized with a <em>buffer</em> parameter.</p>\n"
  remarks: "\n<p>The default value for the <xref href=\"System.Net.Sockets.SendPacketsElement.Buffer\" data-throw-if-not-resolved=\"false\"></xref> property is a zero-length array if the <xref href=\"System.Net.Sockets.SendPacketsElement\" data-throw-if-not-resolved=\"false\"></xref> class was not initialized with a <em>buffer</em> parameter.</p>\n"
  example:
  - 
  syntax:
    content: public byte[] Buffer { get; }
    content.vb: Public ReadOnly Property Buffer As Byte()
    parameters: []
    return:
      type: System.Byte[]
      description: "\n<p>The byte buffer to send if the <xref href=\"System.Net.Sockets.SendPacketsElement\" data-throw-if-not-resolved=\"false\"></xref> class was initialized with a <em>buffer</em> parameter.</p>\n"
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Net.Sockets.SendPacketsElement.Count
  commentId: P:System.Net.Sockets.SendPacketsElement.Count
  id: Count
  parent: System.Net.Sockets.SendPacketsElement
  langs:
  - csharp
  - vb
  name: Count
  fullName: System.Net.Sockets.SendPacketsElement.Count
  type: Property
  source:
    remote:
      path: src/System.Net.Sockets/ref/System.Net.Sockets.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Count
    path: src/System.Net.Sockets/ref/System.Net.Sockets.cs
    startLine: 153
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  summary: "\n<p>Gets the count of bytes to be sent. </p>\n"
  remarks: "\n<p>The default value for the <xref href=\"System.Net.Sockets.SendPacketsElement.Count\" data-throw-if-not-resolved=\"false\"></xref> property is zero if the <xref href=\"System.Net.Sockets.SendPacketsElement\" data-throw-if-not-resolved=\"false\"></xref> class was not initialized with a <em>count</em> parameter.</p>\n<p>If <xref href=\"System.Net.Sockets.SendPacketsElement.Count\" data-throw-if-not-resolved=\"false\"></xref> is zero for a file, the entire file is sent. If <xref href=\"System.Net.Sockets.SendPacketsElement.Count\" data-throw-if-not-resolved=\"false\"></xref> is zero for a buffer, no bytes are sent.</p>\n"
  example:
  - 
  syntax:
    content: public int Count { get; }
    content.vb: Public ReadOnly Property Count As Integer
    parameters: []
    return:
      type: System.Int32
      description: "\n<p>The count of bytes to send if the <xref href=\"System.Net.Sockets.SendPacketsElement\" data-throw-if-not-resolved=\"false\"></xref> class was initialized with a <em>count</em> parameter.</p>\n"
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Net.Sockets.SendPacketsElement.EndOfPacket
  commentId: P:System.Net.Sockets.SendPacketsElement.EndOfPacket
  id: EndOfPacket
  parent: System.Net.Sockets.SendPacketsElement
  langs:
  - csharp
  - vb
  name: EndOfPacket
  fullName: System.Net.Sockets.SendPacketsElement.EndOfPacket
  type: Property
  source:
    remote:
      path: src/System.Net.Sockets/ref/System.Net.Sockets.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: EndOfPacket
    path: src/System.Net.Sockets/ref/System.Net.Sockets.cs
    startLine: 154
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  summary: "\n<p>Gets a Boolean value that indicates if this element should not be combined with the next element in a single send request from the sockets layer to the transport.</p>\n"
  remarks: "\n<p>The default value for the <xref href=\"System.Net.Sockets.SendPacketsElement.EndOfPacket\" data-throw-if-not-resolved=\"false\"></xref> property is false if the <xref href=\"System.Net.Sockets.SendPacketsElement\" data-throw-if-not-resolved=\"false\"></xref> class was not initialized with an <em>endOfPacket</em> parameter set to true.</p>\n"
  example:
  - 
  syntax:
    content: public bool EndOfPacket { get; }
    content.vb: Public ReadOnly Property EndOfPacket As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: "\n<p>A Boolean value that indicates if this element should not be combined with the next element in a single send request.</p>\n"
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Net.Sockets.SendPacketsElement.FilePath
  commentId: P:System.Net.Sockets.SendPacketsElement.FilePath
  id: FilePath
  parent: System.Net.Sockets.SendPacketsElement
  langs:
  - csharp
  - vb
  name: FilePath
  fullName: System.Net.Sockets.SendPacketsElement.FilePath
  type: Property
  source:
    remote:
      path: src/System.Net.Sockets/ref/System.Net.Sockets.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: FilePath
    path: src/System.Net.Sockets/ref/System.Net.Sockets.cs
    startLine: 155
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  summary: "\n<p>Gets the filename of the file to send if the <xref href=\"System.Net.Sockets.SendPacketsElement\" data-throw-if-not-resolved=\"false\"></xref> class was initialized with a <em>filepath</em> parameter.</p>\n"
  remarks: "\n<p>Universal Naming Convention (UNC) paths are supported by the <xref href=\"System.Net.Sockets.SendPacketsElement.FilePath\" data-throw-if-not-resolved=\"false\"></xref> property. If the file is in the current working directory, no path information needs to be specified.</p>\n<p>The default value for the <xref href=\"System.Net.Sockets.SendPacketsElement.FilePath\" data-throw-if-not-resolved=\"false\"></xref> property is an empty string if the <xref href=\"System.Net.Sockets.SendPacketsElement\" data-throw-if-not-resolved=\"false\"></xref> class was not initialized with a <em>filepath</em> parameter.</p>\n"
  example:
  - 
  syntax:
    content: public string FilePath { get; }
    content.vb: Public ReadOnly Property FilePath As String
    parameters: []
    return:
      type: System.String
      description: "\n<p>The filename of the file to send if the <xref href=\"System.Net.Sockets.SendPacketsElement\" data-throw-if-not-resolved=\"false\"></xref> class was initialized with a <em>filepath</em> parameter.</p>\n"
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Net.Sockets.SendPacketsElement.Offset
  commentId: P:System.Net.Sockets.SendPacketsElement.Offset
  id: Offset
  parent: System.Net.Sockets.SendPacketsElement
  langs:
  - csharp
  - vb
  name: Offset
  fullName: System.Net.Sockets.SendPacketsElement.Offset
  type: Property
  source:
    remote:
      path: src/System.Net.Sockets/ref/System.Net.Sockets.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Offset
    path: src/System.Net.Sockets/ref/System.Net.Sockets.cs
    startLine: 156
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  summary: "\n<p>Gets the offset, in bytes, from the beginning of the data buffer or file to the location in the buffer or file to start sending the data. </p>\n"
  remarks: "\n<p>The default value for the <xref href=\"System.Net.Sockets.SendPacketsElement.Offset\" data-throw-if-not-resolved=\"false\"></xref> property is zero if the <xref href=\"System.Net.Sockets.SendPacketsElement\" data-throw-if-not-resolved=\"false\"></xref> class was not initialized with an <em>offset</em> parameter.</p>\n"
  example:
  - 
  syntax:
    content: public int Offset { get; }
    content.vb: Public ReadOnly Property Offset As Integer
    parameters: []
    return:
      type: System.Int32
      description: "\n<p>The offset, in bytes, from the beginning of the data buffer or file to the location in the buffer or file to start sending the data.</p>\n"
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: System.Net.Sockets
  isExternal: false
  name: System.Net.Sockets
  fullName: System.Net.Sockets
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Byte[]
  isExternal: true
  name: Byte[]
  fullName: System.Byte[]
  fullname.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    fullName: ()
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  fullName: System.Int32
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  fullName: System.Boolean
- uid: System.String
  parent: System
  isExternal: false
  name: String
  fullName: System.String
- uid: System.ArgumentNullException
  isExternal: false
  name: ArgumentNullException
  fullName: System.ArgumentNullException
- uid: System.ArgumentOutOfRangeException
  isExternal: false
  name: ArgumentOutOfRangeException
  fullName: System.ArgumentOutOfRangeException
