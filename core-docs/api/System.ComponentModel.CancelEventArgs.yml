items:
- uid: System.ComponentModel.CancelEventArgs
  commentId: T:System.ComponentModel.CancelEventArgs
  id: CancelEventArgs
  parent: System.ComponentModel
  children:
  - System.ComponentModel.CancelEventArgs.#ctor
  - System.ComponentModel.CancelEventArgs.#ctor(System.Boolean)
  - System.ComponentModel.CancelEventArgs.Cancel
  langs:
  - csharp
  - vb
  name: CancelEventArgs
  fullName: System.ComponentModel.CancelEventArgs
  type: Class
  source:
    remote:
      path: src/System.ComponentModel/src/System/ComponentModel/CancelEventArgs.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CancelEventArgs
    path: src/System.ComponentModel/src/System/ComponentModel/CancelEventArgs.cs
    startLine: 9
  assemblies:
  - System.ComponentModel
  namespace: System.ComponentModel
  summary: "\n<p>Provides data for a cancelable event.</p>\n"
  remarks: "\n<p>A cancelable event is raised by a component when it is about to perform an action that can be canceled, such as the <xref href=\"System.Windows.Forms.Form.Closing\" data-throw-if-not-resolved=\"false\"></xref> event of a <xref href=\"System.Windows.Forms.Form\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>The <xref href=\"System.Windows.Forms.Form.Closing\" data-throw-if-not-resolved=\"false\"></xref> event is deprecated and has been replaced by <xref href=\"System.Windows.Forms.Form.FormClosing\" data-throw-if-not-resolved=\"false\"></xref>. It is offered as an example here only to illustrate the usage of <xref href=\"System.ComponentModel.CancelEventArgs\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>\n<xref href=\"System.ComponentModel.CancelEventArgs\" data-throw-if-not-resolved=\"false\"></xref> provides the <xref href=\"System.ComponentModel.CancelEventArgs.Cancel\" data-throw-if-not-resolved=\"false\"></xref> property to indicate whether the event should be canceled.</p>\n"
  example:
  - "\n<p>The following example uses <xref href=\"System.ComponentModel.CancelEventArgs\" data-throw-if-not-resolved=\"false\"></xref> and a <xref href=\"System.ComponentModel.CancelEventHandler\" data-throw-if-not-resolved=\"false\"></xref> to handle the <xref href=\"System.Windows.Forms.Form.Closing\" data-throw-if-not-resolved=\"false\"></xref> event of a <xref href=\"System.Windows.Forms.Form\" data-throw-if-not-resolved=\"false\"></xref>. This code assumes that you have created a <xref href=\"System.Windows.Forms.Form\" data-throw-if-not-resolved=\"false\"></xref> with a class-level <xref href=\"System.Boolean\" data-throw-if-not-resolved=\"false\"></xref> variable named <code>isDataSaved</code>. It also assumes that you have added a statement to invoke the <code>OtherInitialize</code> method from the form's <xref href=\"System.Windows.Forms.Form.Load\" data-throw-if-not-resolved=\"false\"></xref> method or the constructor (after the call to <code>InitializeComponent</code>).</p>Classic CancelEventArgs Example#1"
  syntax:
    content: 'public class CancelEventArgs : EventArgs'
    content.vb: >-
      Public Class CancelEventArgs
          Inherits EventArgs
  seealso:
  - type: System.ComponentModel.CancelEventHandler
    commentId: T:System.ComponentModel.CancelEventHandler
  inheritance:
  - System.Object
  - System.EventArgs
  inheritedMembers:
  - System.EventArgs.Empty
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: System.ComponentModel.CancelEventArgs.#ctor
  commentId: M:System.ComponentModel.CancelEventArgs.#ctor
  id: '#ctor'
  parent: System.ComponentModel.CancelEventArgs
  langs:
  - csharp
  - vb
  name: CancelEventArgs()
  fullName: System.ComponentModel.CancelEventArgs.CancelEventArgs()
  type: Constructor
  source:
    remote:
      path: src/System.ComponentModel/src/System/ComponentModel/CancelEventArgs.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.ComponentModel/src/System/ComponentModel/CancelEventArgs.cs
    startLine: 19
  assemblies:
  - System.ComponentModel
  namespace: System.ComponentModel
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.ComponentModel.CancelEventArgs\" data-throw-if-not-resolved=\"false\"></xref> class with the <xref href=\"System.ComponentModel.CancelEventArgs.Cancel\" data-throw-if-not-resolved=\"false\"></xref> property set to <strong>false</strong>.</p>\n"
  syntax:
    content: public CancelEventArgs()
    content.vb: Public Sub New
  seealso:
  - type: System.ComponentModel.CancelEventHandler
    commentId: T:System.ComponentModel.CancelEventHandler
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.ComponentModel.CancelEventArgs.#ctor(System.Boolean)
  commentId: M:System.ComponentModel.CancelEventArgs.#ctor(System.Boolean)
  id: '#ctor(System.Boolean)'
  parent: System.ComponentModel.CancelEventArgs
  langs:
  - csharp
  - vb
  name: CancelEventArgs(Boolean)
  fullName: System.ComponentModel.CancelEventArgs.CancelEventArgs(System.Boolean)
  type: Constructor
  source:
    remote:
      path: src/System.ComponentModel/src/System/ComponentModel/CancelEventArgs.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.ComponentModel/src/System/ComponentModel/CancelEventArgs.cs
    startLine: 27
  assemblies:
  - System.ComponentModel
  namespace: System.ComponentModel
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.ComponentModel.CancelEventArgs\" data-throw-if-not-resolved=\"false\"></xref> class with the <xref href=\"System.ComponentModel.CancelEventArgs.Cancel\" data-throw-if-not-resolved=\"false\"></xref> property set to the given value.</p>\n"
  syntax:
    content: public CancelEventArgs(bool cancel)
    content.vb: Public Sub New(cancel As Boolean)
    parameters:
    - id: cancel
      type: System.Boolean
  seealso:
  - type: System.ComponentModel.CancelEventHandler
    commentId: T:System.ComponentModel.CancelEventHandler
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.ComponentModel.CancelEventArgs.Cancel
  commentId: P:System.ComponentModel.CancelEventArgs.Cancel
  id: Cancel
  parent: System.ComponentModel.CancelEventArgs
  langs:
  - csharp
  - vb
  name: Cancel
  fullName: System.ComponentModel.CancelEventArgs.Cancel
  type: Property
  source:
    remote:
      path: src/System.ComponentModel/src/System/ComponentModel/CancelEventArgs.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Cancel
    path: src/System.ComponentModel/src/System/ComponentModel/CancelEventArgs.cs
    startLine: 14
  assemblies:
  - System.ComponentModel
  namespace: System.ComponentModel
  summary: "\n<p>Gets or sets a value indicating whether the event should be canceled.</p>\n"
  example:
  - "\n<p>The following example uses <xref href=\"System.ComponentModel.CancelEventArgs\" data-throw-if-not-resolved=\"false\"></xref> and a <xref href=\"System.ComponentModel.CancelEventHandler\" data-throw-if-not-resolved=\"false\"></xref> to handle the <xref href=\"System.Windows.Forms.Form.FormClosing\" data-throw-if-not-resolved=\"false\"></xref> event of a <xref href=\"System.Windows.Forms.Form\" data-throw-if-not-resolved=\"false\"></xref>. This code assumes that you have created a <xref href=\"System.Windows.Forms.Form\" data-throw-if-not-resolved=\"false\"></xref> with a class-level <xref href=\"System.Boolean\" data-throw-if-not-resolved=\"false\"></xref> variable named <code>isDataSaved</code>. It also assumes that you have added a statement to invoke the <code>OtherInitialize</code> method from the form's <xref href=\"System.Windows.Forms.Form.Load\" data-throw-if-not-resolved=\"false\"></xref> method or the constructor (after the call to <code>InitializeComponent</code>).</p>Classic CancelEventArgs Example#1"
  syntax:
    content: public bool Cancel { get; set; }
    content.vb: Public Property Cancel As Boolean
    parameters: []
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: System.ComponentModel
  isExternal: false
  name: System.ComponentModel
  fullName: System.ComponentModel
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System.EventArgs
  parent: System
  isExternal: false
  name: EventArgs
  fullName: System.EventArgs
- uid: System.EventArgs.Empty
  parent: System.EventArgs
  isExternal: true
  name: Empty
  fullName: System.EventArgs.Empty
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  fullName: System.Boolean
