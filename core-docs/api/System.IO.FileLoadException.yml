items:
- uid: System.IO.FileLoadException
  commentId: T:System.IO.FileLoadException
  id: FileLoadException
  parent: System.IO
  children:
  - System.IO.FileLoadException.#ctor
  - System.IO.FileLoadException.#ctor(System.String)
  - System.IO.FileLoadException.#ctor(System.String,System.Exception)
  - System.IO.FileLoadException.#ctor(System.String,System.String)
  - System.IO.FileLoadException.#ctor(System.String,System.String,System.Exception)
  - System.IO.FileLoadException.FileName
  - System.IO.FileLoadException.Message
  - System.IO.FileLoadException.ToString
  langs:
  - csharp
  - vb
  name: FileLoadException
  fullName: System.IO.FileLoadException
  type: Class
  source:
    remote:
      path: src/mscorlib/src/System/IO/FileLoadException.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: FileLoadException
    path: src/mscorlib/src/System/IO/FileLoadException.cs
    startLine: 28
  assemblies:
  - System.Runtime
  namespace: System.IO
  summary: "\n<p>The exception that is thrown when a managed assembly is found but cannot be loaded.</p>\n"
  remarks: "\n<p>Represents the error that occurs when a <xref href=\"System.Reflection.Assembly\" data-throw-if-not-resolved=\"false\"></xref> file is found but cannot be loaded.</p>\n<p>The <xref href=\"System.IO.FileNotFoundException\" data-throw-if-not-resolved=\"false\"></xref> exception is thrown when the file fails to load because it cannot be located. If the file is located, but cannot be loaded due to insufficient permissions, a <xref href=\"System.Security.SecurityException\" data-throw-if-not-resolved=\"false\"></xref> is thrown.</p>\n<p>\n<strong>FileLoadException</strong> has the default HRESULT of COR_E_FILELOAD, which has the value 0x80131621, but this is not the only possible HRESULT.</p>\n<p>If your code does not have <xref href=\"System.Security.Permissions.FileIOPermissionAttribute.PathDiscovery\" data-throw-if-not-resolved=\"false\"></xref> permission, the error message for this exception may only contain file or directory names instead of fully qualified paths.</p>\n<p>This exception is not included in the <see href=\"http://go.microsoft.com/fwlink/?LinkID=247912\">.NET for Windows Store apps</see> or the , but it is thrown by some members that are. To catch the exception in that case, write a <strong>catch</strong> statement for <xref href=\"System.IO.IOException\" data-throw-if-not-resolved=\"false\"></xref> instead.</p>\n<p>Associated Tips</p>Make sure that the file is a valid .NET Framework assembly.<p>This exception is thrown if the file is not a valid .NET Framework assembly. For more information, see <xref href=\"System.Reflection.Assembly\" data-throw-if-not-resolved=\"false\"></xref>.</p>Check to make sure an assembly or module was not loaded twice with two different evidences.<p>Evidence is the set of information that constitutes input to security policy decisions, such as what permissions can be granted to code. For more information, see <xref href=\"System.EnterpriseServices.Internal.Publish.GacRemove(System.String)\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"System.Reflection.Assembly.Evidence\" data-throw-if-not-resolved=\"false\"></xref></p>If using the RegisterAssembly or UnregisterAssembly methods, check to make sure the assembly name is not longer than MAX_PATH characters.<p>The assembly name's length cannot exceed MAX_PATH. For more information, see <xref href=\"System.EnterpriseServices.Internal.IComSoapPublisher.RegisterAssembly(System.String)\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"System.EnterpriseServices.Internal.IComSoapPublisher.UnRegisterAssembly(System.String)\" data-throw-if-not-resolved=\"false\"></xref>.</p>If loading a satellite assembly, make sure the specified CultureInfo matches the file's CultureInfo.<p>Satellite assemblies contain localized resources which contain non-localizable executable code and resources for a single culture that serve as the default or neutral culture. For more information, see <xref href=\"System.Reflection.Assembly.GetSatelliteAssembly(System.Globalization.CultureInfo)\" data-throw-if-not-resolved=\"false\"></xref>.</p>"
  syntax:
    content: >-
      [Serializable]

      [ComVisible(true)]

      public class FileLoadException : IOException, ISerializable, _Exception
    content.vb: >-
      <Serializable>

      <ComVisible(True)>

      Public Class FileLoadException
          Inherits IOException
          Implements ISerializable, _Exception
  seealso:
  - type: System.Exception
    commentId: T:System.Exception
  inheritance:
  - System.Object
  - System.Exception
  - System.IO.IOException
  inheritedMembers:
  - System.Exception.Data
  - System.Exception.HelpLink
  - System.Exception.HResult
  - System.Exception.InnerException
  - System.Exception.Source
  - System.Exception.StackTrace
  - System.Exception.GetBaseException
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: System.IO.FileLoadException.#ctor
  commentId: M:System.IO.FileLoadException.#ctor
  id: '#ctor'
  parent: System.IO.FileLoadException
  langs:
  - csharp
  - vb
  name: FileLoadException()
  fullName: System.IO.FileLoadException.FileLoadException()
  type: Constructor
  source:
    remote:
      path: src/mscorlib/src/System/IO/FileLoadException.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: .ctor
    path: src/mscorlib/src/System/IO/FileLoadException.cs
    startLine: 35
  assemblies:
  - System.Runtime
  namespace: System.IO
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.IO.FileLoadException\" data-throw-if-not-resolved=\"false\"></xref> class, setting the <xref href=\"System.Exception.Message\" data-throw-if-not-resolved=\"false\"></xref> property of the new instance to a system-supplied message that describes the error, such as \"Could not load the specified file.\" This message takes into account the current system culture.</p>\n"
  remarks: "\n<p>The <xref href=\"System.Exception.InnerException\" data-throw-if-not-resolved=\"false\"></xref> property and <xref href=\"System.IO.FileLoadException.FileName\" data-throw-if-not-resolved=\"false\"></xref> property of the new instance are initialized to <strong>null</strong>.</p>\n"
  syntax:
    content: public FileLoadException()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.IO.FileLoadException.#ctor(System.String)
  commentId: M:System.IO.FileLoadException.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.IO.FileLoadException
  langs:
  - csharp
  - vb
  name: FileLoadException(String)
  fullName: System.IO.FileLoadException.FileLoadException(System.String)
  type: Constructor
  source:
    remote:
      path: src/mscorlib/src/System/IO/FileLoadException.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: .ctor
    path: src/mscorlib/src/System/IO/FileLoadException.cs
    startLine: 40
  assemblies:
  - System.Runtime
  namespace: System.IO
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.IO.FileLoadException\" data-throw-if-not-resolved=\"false\"></xref> class with the specified error message.</p>\n"
  remarks: "\n<p>This constructor initializes the <xref href=\"System.IO.FileLoadException.Message\" data-throw-if-not-resolved=\"false\"></xref> property of the new instance using <em>message</em>. The <xref href=\"System.Exception.InnerException\" data-throw-if-not-resolved=\"false\"></xref> property and <xref href=\"System.IO.FileLoadException.FileName\" data-throw-if-not-resolved=\"false\"></xref> property of the new instance are initialized to <strong>null</strong>.</p>\n"
  syntax:
    content: public FileLoadException(string message)
    content.vb: Public Sub New(message As String)
    parameters:
    - id: message
      type: System.String
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.IO.FileLoadException.#ctor(System.String,System.Exception)
  commentId: M:System.IO.FileLoadException.#ctor(System.String,System.Exception)
  id: '#ctor(System.String,System.Exception)'
  parent: System.IO.FileLoadException
  langs:
  - csharp
  - vb
  name: FileLoadException(String, Exception)
  fullName: System.IO.FileLoadException.FileLoadException(System.String, System.Exception)
  type: Constructor
  source:
    remote:
      path: src/mscorlib/src/System/IO/FileLoadException.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: .ctor
    path: src/mscorlib/src/System/IO/FileLoadException.cs
    startLine: 45
  assemblies:
  - System.Runtime
  namespace: System.IO
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.IO.FileLoadException\" data-throw-if-not-resolved=\"false\"></xref> class with a specified error message and a reference to the inner exception that is the cause of this exception.</p>\n"
  remarks: "\n<p>An exception that is thrown as a direct result of a previous exception should include a reference to the previous exception in the <xref href=\"System.Exception.InnerException\" data-throw-if-not-resolved=\"false\"></xref> property. The <strong>InnerException</strong> property returns the same value that is passed into the constructor, or <strong>null</strong> if the <strong>InnerException</strong> property does not supply the inner exception value to the constructor.</p>\n<p>The following table shows the initial property values for an instance of <xref href=\"System.IO.FileLoadException\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>Property </p>\n<p>Value </p>\n<table><tbody><tr><td>\n<p>\n<xref href=\"System.Exception.InnerException\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td><td>\n<p>The inner exception reference. </p>\n</td></tr><tr><td>\n<p>\n<xref href=\"System.IO.FileLoadException.Message\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td><td>\n<p>The error message string. </p>\n</td></tr></tbody></table>\n<p>For more information on inner exceptions, see <xref href=\"System.Exception.InnerException\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: public FileLoadException(string message, Exception inner)
    content.vb: Public Sub New(message As String, inner As Exception)
    parameters:
    - id: message
      type: System.String
    - id: inner
      type: System.Exception
  seealso:
  - type: System.Exception
    commentId: T:System.Exception
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.IO.FileLoadException.#ctor(System.String,System.String)
  commentId: M:System.IO.FileLoadException.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: System.IO.FileLoadException
  langs:
  - csharp
  - vb
  name: FileLoadException(String, String)
  fullName: System.IO.FileLoadException.FileLoadException(System.String, System.String)
  type: Constructor
  source:
    remote:
      path: src/mscorlib/src/System/IO/FileLoadException.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: .ctor
    path: src/mscorlib/src/System/IO/FileLoadException.cs
    startLine: 50
  assemblies:
  - System.Runtime
  namespace: System.IO
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.IO.FileLoadException\" data-throw-if-not-resolved=\"false\"></xref> class with a specified error message and the name of the file that could not be loaded.</p>\n"
  remarks: "\n<p>This constructor initializes the <xref href=\"System.IO.FileLoadException.Message\" data-throw-if-not-resolved=\"false\"></xref> property of the new instance using <em>message</em> and the <xref href=\"System.IO.FileLoadException.FileName\" data-throw-if-not-resolved=\"false\"></xref> property using <em>fileName</em>. The <xref href=\"System.Exception.InnerException\" data-throw-if-not-resolved=\"false\"></xref> property of the new instance is initialized to <strong>null</strong>.</p>\n<p>\n<xref href=\"System.IO.FileLoadException.FileName\" data-throw-if-not-resolved=\"false\"></xref> is not required to be a file stored on disk; it can be any part of a system that supports access to streams. For example, depending on the system, this class might be able to access a physical device.</p>\n"
  syntax:
    content: public FileLoadException(string message, string fileName)
    content.vb: Public Sub New(message As String, fileName As String)
    parameters:
    - id: message
      type: System.String
    - id: fileName
      type: System.String
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.IO.FileLoadException.#ctor(System.String,System.String,System.Exception)
  commentId: M:System.IO.FileLoadException.#ctor(System.String,System.String,System.Exception)
  id: '#ctor(System.String,System.String,System.Exception)'
  parent: System.IO.FileLoadException
  langs:
  - csharp
  - vb
  name: FileLoadException(String, String, Exception)
  fullName: System.IO.FileLoadException.FileLoadException(System.String, System.String, System.Exception)
  type: Constructor
  source:
    remote:
      path: src/mscorlib/src/System/IO/FileLoadException.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: .ctor
    path: src/mscorlib/src/System/IO/FileLoadException.cs
    startLine: 56
  assemblies:
  - System.Runtime
  namespace: System.IO
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.IO.FileLoadException\" data-throw-if-not-resolved=\"false\"></xref> class with a specified error message, the name of the file that could not be loaded, and a reference to the inner exception that is the cause of this exception.</p>\n"
  remarks: "\n<p>An exception that is thrown as a direct result of a previous exception should include a reference to the previous exception in the <xref href=\"System.Exception.InnerException\" data-throw-if-not-resolved=\"false\"></xref> property. The <strong>InnerException</strong> property returns the same value that is passed into the constructor, or <strong>null</strong> if the <strong>InnerException</strong> property does not supply the inner exception value to the constructor.</p>\n<p>\n<xref href=\"System.IO.FileLoadException.FileName\" data-throw-if-not-resolved=\"false\"></xref> is not required to be a file stored on disk; it can be any part of a system that supports access to streams. For example, depending on the system, this class might be able to access a physical device.</p>\n<p>The following table shows the initial property values for an instance of <xref href=\"System.IO.FileLoadException\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>Property </p>\n<p>Value </p>\n<table><tbody><tr><td>\n<p>\n<xref href=\"System.Exception.InnerException\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td><td>\n<p>The inner exception reference. </p>\n</td></tr><tr><td>\n<p>\n<xref href=\"System.IO.FileLoadException.Message\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td><td>\n<p>The error message string. </p>\n</td></tr></tbody></table>\n<p>For more information on inner exceptions, see <xref href=\"System.Exception.InnerException\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: public FileLoadException(string message, string fileName, Exception inner)
    content.vb: Public Sub New(message As String, fileName As String, inner As Exception)
    parameters:
    - id: message
      type: System.String
    - id: fileName
      type: System.String
    - id: inner
      type: System.Exception
  seealso:
  - type: System.Exception
    commentId: T:System.Exception
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.IO.FileLoadException.FileName
  commentId: P:System.IO.FileLoadException.FileName
  id: FileName
  parent: System.IO.FileLoadException
  langs:
  - csharp
  - vb
  name: FileName
  fullName: System.IO.FileLoadException.FileName
  type: Property
  source:
    remote:
      path: src/mscorlib/src/System/IO/FileLoadException.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: FileName
    path: src/mscorlib/src/System/IO/FileLoadException.cs
    startLine: 76
  assemblies:
  - System.Runtime
  namespace: System.IO
  summary: "\n<p>Gets the name of the file that causes this exception.</p>\n"
  remarks: "\n<p>This property returns the name of the file supplied to the constructor for the current instance, if any. If the file name was not specified or is a null reference, this property returns a null reference.</p>\n<p>This property is read-only.</p>\n"
  syntax:
    content: public string FileName { get; }
    content.vb: Public ReadOnly Property FileName As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.IO.FileLoadException.Message
  commentId: P:System.IO.FileLoadException.Message
  id: Message
  parent: System.IO.FileLoadException
  langs:
  - csharp
  - vb
  name: Message
  fullName: System.IO.FileLoadException.Message
  type: Property
  source:
    remote:
      path: src/mscorlib/src/System/IO/FileLoadException.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Message
    path: src/mscorlib/src/System/IO/FileLoadException.cs
    startLine: 62
  assemblies:
  - System.Runtime
  namespace: System.IO
  summary: "\n<p>Gets the error message and the name of the file that caused this exception.</p>\n"
  remarks: "\n<p>This property overrides <xref href=\"System.Exception.Message\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>If no message was supplied to the constructor for the current exception, this property returns a system-supplied error message. If the <xref href=\"System.IO.FileLoadException.FileName\" data-throw-if-not-resolved=\"false\"></xref> property is not a null reference, the message includes the file name, for example, \"Unable to load file a <em>FileName</em>.\" (a <em>FileName</em> represents the value returned by <xref href=\"System.IO.FileLoadException.FileName\" data-throw-if-not-resolved=\"false\"></xref>.) If <xref href=\"System.IO.FileLoadException.FileName\" data-throw-if-not-resolved=\"false\"></xref> is <strong>null</strong>, this is indicated in the system-supplied message as \"(null)\". The system-supplied message takes into account the current system culture.</p>\n<p>This property is read-only.</p>\n"
  syntax:
    content: public override string Message { get; }
    content.vb: Public Overrides ReadOnly Property Message As String
    parameters: []
    return:
      type: System.String
  overridden: System.Exception.Message
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: System.IO.FileLoadException.ToString
  commentId: M:System.IO.FileLoadException.ToString
  id: ToString
  parent: System.IO.FileLoadException
  langs:
  - csharp
  - vb
  name: ToString()
  fullName: System.IO.FileLoadException.ToString()
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/IO/FileLoadException.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToString
    path: src/mscorlib/src/System/IO/FileLoadException.cs
    startLine: 80
  assemblies:
  - System.Runtime
  namespace: System.IO
  summary: "\n<p>Returns the fully qualified name of the current exception, and possibly the error message, the name of the inner exception, and the stack trace.</p>\n"
  remarks: "\n<p>This method overrides <xref href=\"System.Object.ToString\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>The string representation returned by this method includes the name of the exception, the value of the <xref href=\"System.IO.FileLoadException.Message\" data-throw-if-not-resolved=\"false\"></xref> the value of the <xref href=\"System.IO.FileLoadException.FileName\" data-throw-if-not-resolved=\"false\"></xref> property, and the result of calling <xref href=\"System.Environment.StackTrace\" data-throw-if-not-resolved=\"false\"></xref>. If any of these members is a null reference, its value is not included in the returned string.</p>\n"
  syntax:
    content: public override string ToString()
    content.vb: Public Overrides Function ToString As String
    return:
      type: System.String
  overridden: System.Exception.ToString
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: System.IO
  isExternal: false
  name: System.IO
  fullName: System.IO
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System.Exception
  parent: System
  isExternal: false
  name: Exception
  fullName: System.Exception
- uid: System.IO.IOException
  parent: System.IO
  isExternal: false
  name: IOException
  fullName: System.IO.IOException
- uid: System.Exception.Data
  parent: System.Exception
  isExternal: false
  name: Data
  fullName: System.Exception.Data
- uid: System.Exception.HelpLink
  parent: System.Exception
  isExternal: false
  name: HelpLink
  fullName: System.Exception.HelpLink
- uid: System.Exception.HResult
  parent: System.Exception
  isExternal: false
  name: HResult
  fullName: System.Exception.HResult
- uid: System.Exception.InnerException
  parent: System.Exception
  isExternal: false
  name: InnerException
  fullName: System.Exception.InnerException
- uid: System.Exception.Source
  parent: System.Exception
  isExternal: false
  name: Source
  fullName: System.Exception.Source
- uid: System.Exception.StackTrace
  parent: System.Exception
  isExternal: false
  name: StackTrace
  fullName: System.Exception.StackTrace
- uid: System.Exception.GetBaseException
  parent: System.Exception
  isExternal: false
  name: GetBaseException()
  fullName: System.Exception.GetBaseException()
  spec.csharp:
  - uid: System.Exception.GetBaseException
    name: GetBaseException
    fullName: System.Exception.GetBaseException
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Exception.GetBaseException
    name: GetBaseException
    fullName: System.Exception.GetBaseException
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.String
  parent: System
  isExternal: false
  name: String
  fullName: System.String
- uid: System.Exception.Message
  parent: System.Exception
  isExternal: false
  name: Message
  fullName: System.Exception.Message
- uid: System.Exception.ToString
  parent: System.Exception
  isExternal: false
  name: ToString()
  fullName: System.Exception.ToString()
  spec.csharp:
  - uid: System.Exception.ToString
    name: ToString
    fullName: System.Exception.ToString
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Exception.ToString
    name: ToString
    fullName: System.Exception.ToString
  - name: (
    fullName: (
  - name: )
    fullName: )
