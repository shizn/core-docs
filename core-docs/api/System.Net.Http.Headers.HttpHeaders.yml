items:
- uid: System.Net.Http.Headers.HttpHeaders
  commentId: T:System.Net.Http.Headers.HttpHeaders
  id: HttpHeaders
  parent: System.Net.Http.Headers
  children:
  - System.Net.Http.Headers.HttpHeaders.#ctor
  - System.Net.Http.Headers.HttpHeaders.Add(System.String,System.Collections.Generic.IEnumerable{System.String})
  - System.Net.Http.Headers.HttpHeaders.Add(System.String,System.String)
  - System.Net.Http.Headers.HttpHeaders.Clear
  - System.Net.Http.Headers.HttpHeaders.Contains(System.String)
  - System.Net.Http.Headers.HttpHeaders.GetEnumerator
  - System.Net.Http.Headers.HttpHeaders.GetValues(System.String)
  - System.Net.Http.Headers.HttpHeaders.Remove(System.String)
  - System.Net.Http.Headers.HttpHeaders.ToString
  - System.Net.Http.Headers.HttpHeaders.TryAddWithoutValidation(System.String,System.Collections.Generic.IEnumerable{System.String})
  - System.Net.Http.Headers.HttpHeaders.TryAddWithoutValidation(System.String,System.String)
  - System.Net.Http.Headers.HttpHeaders.TryGetValues(System.String,System.Collections.Generic.IEnumerable{System.String}@)
  langs:
  - csharp
  - vb
  name: HttpHeaders
  fullName: System.Net.Http.Headers.HttpHeaders
  type: Class
  source:
    remote:
      path: src/System.Net.Http/src/System/Net/Http/Headers/HttpHeaders.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: HttpHeaders
    path: src/System.Net.Http/src/System/Net/Http/Headers/HttpHeaders.cs
    startLine: 32
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  syntax:
    content: 'public abstract class HttpHeaders : IEnumerable<KeyValuePair<string, IEnumerable<string>>>'
    content.vb: >-
      Public MustInherit Class HttpHeaders
          Inherits IEnumerable(Of KeyValuePair(Of String, IEnumerable(Of String)))
  inheritance:
  - System.Object
  implements:
  - System.Collections.IEnumerable
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: System.Net.Http.Headers.HttpHeaders.#ctor
  commentId: M:System.Net.Http.Headers.HttpHeaders.#ctor
  id: '#ctor'
  parent: System.Net.Http.Headers.HttpHeaders
  langs:
  - csharp
  - vb
  name: HttpHeaders()
  fullName: System.Net.Http.Headers.HttpHeaders.HttpHeaders()
  type: Constructor
  source:
    remote:
      path: src/System.Net.Http/src/System/Net/Http/Headers/HttpHeaders.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Net.Http/src/System/Net/Http/Headers/HttpHeaders.cs
    startLine: 47
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  syntax:
    content: protected HttpHeaders()
    content.vb: Protected Sub New
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: System.Net.Http.Headers.HttpHeaders.Add(System.String,System.Collections.Generic.IEnumerable{System.String})
  commentId: M:System.Net.Http.Headers.HttpHeaders.Add(System.String,System.Collections.Generic.IEnumerable{System.String})
  id: Add(System.String,System.Collections.Generic.IEnumerable{System.String})
  parent: System.Net.Http.Headers.HttpHeaders
  langs:
  - csharp
  - vb
  name: Add(String, Collections.Generic.IEnumerable<String>)
  fullName: System.Net.Http.Headers.HttpHeaders.Add(System.String, System.Collections.Generic.IEnumerable<System.String>)
  type: Method
  source:
    remote:
      path: src/System.Net.Http/ref/System.Net.Http.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Add
    path: src/System.Net.Http/ref/System.Net.Http.cs
    startLine: 348
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  syntax:
    content: public void Add(string name, Collections.Generic.IEnumerable<string> values)
    content.vb: Public Sub Add(name As String, values As Collections.Generic.IEnumerable(Of String))
    parameters:
    - id: name
      type: System.String
    - id: values
      type: System.Collections.Generic.IEnumerable{System.String}
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Net.Http.Headers.HttpHeaders.Add(System.String, System.Collections.Generic.IEnumerable(Of System.String))
  name.vb: Add(String, Collections.Generic.IEnumerable(Of String))
- uid: System.Net.Http.Headers.HttpHeaders.Add(System.String,System.String)
  commentId: M:System.Net.Http.Headers.HttpHeaders.Add(System.String,System.String)
  id: Add(System.String,System.String)
  parent: System.Net.Http.Headers.HttpHeaders
  langs:
  - csharp
  - vb
  name: Add(String, String)
  fullName: System.Net.Http.Headers.HttpHeaders.Add(System.String, System.String)
  type: Method
  source:
    remote:
      path: src/System.Net.Http/src/System/Net/Http/Headers/HttpHeaders.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Add
    path: src/System.Net.Http/src/System/Net/Http/Headers/HttpHeaders.cs
    startLine: 51
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  syntax:
    content: public void Add(string name, string value)
    content.vb: Public Sub Add(name As String, value As String)
    parameters:
    - id: name
      type: System.String
    - id: value
      type: System.String
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Net.Http.Headers.HttpHeaders.Clear
  commentId: M:System.Net.Http.Headers.HttpHeaders.Clear
  id: Clear
  parent: System.Net.Http.Headers.HttpHeaders
  langs:
  - csharp
  - vb
  name: Clear()
  fullName: System.Net.Http.Headers.HttpHeaders.Clear()
  type: Method
  source:
    remote:
      path: src/System.Net.Http/src/System/Net/Http/Headers/HttpHeaders.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Clear
    path: src/System.Net.Http/src/System/Net/Http/Headers/HttpHeaders.cs
    startLine: 151
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  syntax:
    content: public void Clear()
    content.vb: Public Sub Clear
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Net.Http.Headers.HttpHeaders.Contains(System.String)
  commentId: M:System.Net.Http.Headers.HttpHeaders.Contains(System.String)
  id: Contains(System.String)
  parent: System.Net.Http.Headers.HttpHeaders
  langs:
  - csharp
  - vb
  name: Contains(String)
  fullName: System.Net.Http.Headers.HttpHeaders.Contains(System.String)
  type: Method
  source:
    remote:
      path: src/System.Net.Http/src/System/Net/Http/Headers/HttpHeaders.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Contains
    path: src/System.Net.Http/src/System/Net/Http/Headers/HttpHeaders.cs
    startLine: 209
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  syntax:
    content: public bool Contains(string name)
    content.vb: Public Function Contains(name As String) As Boolean
    parameters:
    - id: name
      type: System.String
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Net.Http.Headers.HttpHeaders.GetEnumerator
  commentId: M:System.Net.Http.Headers.HttpHeaders.GetEnumerator
  id: GetEnumerator
  parent: System.Net.Http.Headers.HttpHeaders
  langs:
  - csharp
  - vb
  name: GetEnumerator()
  fullName: System.Net.Http.Headers.HttpHeaders.GetEnumerator()
  type: Method
  source:
    remote:
      path: src/System.Net.Http/src/System/Net/Http/Headers/HttpHeaders.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetEnumerator
    path: src/System.Net.Http/src/System/Net/Http/Headers/HttpHeaders.cs
    startLine: 308
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  syntax:
    content: public IEnumerator<KeyValuePair<string, IEnumerable<string>>> GetEnumerator()
    content.vb: Public Function GetEnumerator As IEnumerator(Of KeyValuePair(Of String, IEnumerable(Of String)))
    return:
      type: IEnumerator{KeyValuePair{System.String,IEnumerable{System.String}}}
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Net.Http.Headers.HttpHeaders.GetValues(System.String)
  commentId: M:System.Net.Http.Headers.HttpHeaders.GetValues(System.String)
  id: GetValues(System.String)
  parent: System.Net.Http.Headers.HttpHeaders
  langs:
  - csharp
  - vb
  name: GetValues(String)
  fullName: System.Net.Http.Headers.HttpHeaders.GetValues(System.String)
  type: Method
  source:
    remote:
      path: src/System.Net.Http/src/System/Net/Http/Headers/HttpHeaders.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetValues
    path: src/System.Net.Http/src/System/Net/Http/Headers/HttpHeaders.cs
    startLine: 171
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  syntax:
    content: public IEnumerable<string> GetValues(string name)
    content.vb: Public Function GetValues(name As String) As IEnumerable(Of String)
    parameters:
    - id: name
      type: System.String
    return:
      type: IEnumerable{System.String}
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Net.Http.Headers.HttpHeaders.Remove(System.String)
  commentId: M:System.Net.Http.Headers.HttpHeaders.Remove(System.String)
  id: Remove(System.String)
  parent: System.Net.Http.Headers.HttpHeaders
  langs:
  - csharp
  - vb
  name: Remove(String)
  fullName: System.Net.Http.Headers.HttpHeaders.Remove(System.String)
  type: Method
  source:
    remote:
      path: src/System.Net.Http/src/System/Net/Http/Headers/HttpHeaders.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Remove
    path: src/System.Net.Http/src/System/Net/Http/Headers/HttpHeaders.cs
    startLine: 159
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  syntax:
    content: public bool Remove(string name)
    content.vb: Public Function Remove(name As String) As Boolean
    parameters:
    - id: name
      type: System.String
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Net.Http.Headers.HttpHeaders.ToString
  commentId: M:System.Net.Http.Headers.HttpHeaders.ToString
  id: ToString
  parent: System.Net.Http.Headers.HttpHeaders
  langs:
  - csharp
  - vb
  name: ToString()
  fullName: System.Net.Http.Headers.HttpHeaders.ToString()
  type: Method
  source:
    remote:
      path: src/System.Net.Http/src/System/Net/Http/Headers/HttpHeaders.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ToString
    path: src/System.Net.Http/src/System/Net/Http/Headers/HttpHeaders.cs
    startLine: 225
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  syntax:
    content: public override string ToString()
    content.vb: Public Overrides Function ToString As String
    return:
      type: System.String
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Net.Http.Headers.HttpHeaders.TryAddWithoutValidation(System.String,System.Collections.Generic.IEnumerable{System.String})
  commentId: M:System.Net.Http.Headers.HttpHeaders.TryAddWithoutValidation(System.String,System.Collections.Generic.IEnumerable{System.String})
  id: TryAddWithoutValidation(System.String,System.Collections.Generic.IEnumerable{System.String})
  parent: System.Net.Http.Headers.HttpHeaders
  langs:
  - csharp
  - vb
  name: TryAddWithoutValidation(String, Collections.Generic.IEnumerable<String>)
  fullName: System.Net.Http.Headers.HttpHeaders.TryAddWithoutValidation(System.String, System.Collections.Generic.IEnumerable<System.String>)
  type: Method
  source:
    remote:
      path: src/System.Net.Http/ref/System.Net.Http.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: TryAddWithoutValidation
    path: src/System.Net.Http/ref/System.Net.Http.cs
    startLine: 357
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  syntax:
    content: public bool TryAddWithoutValidation(string name, Collections.Generic.IEnumerable<string> values)
    content.vb: Public Function TryAddWithoutValidation(name As String, values As Collections.Generic.IEnumerable(Of String)) As Boolean
    parameters:
    - id: name
      type: System.String
    - id: values
      type: System.Collections.Generic.IEnumerable{System.String}
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Net.Http.Headers.HttpHeaders.TryAddWithoutValidation(System.String, System.Collections.Generic.IEnumerable(Of System.String))
  name.vb: TryAddWithoutValidation(String, Collections.Generic.IEnumerable(Of String))
- uid: System.Net.Http.Headers.HttpHeaders.TryAddWithoutValidation(System.String,System.String)
  commentId: M:System.Net.Http.Headers.HttpHeaders.TryAddWithoutValidation(System.String,System.String)
  id: TryAddWithoutValidation(System.String,System.String)
  parent: System.Net.Http.Headers.HttpHeaders
  langs:
  - csharp
  - vb
  name: TryAddWithoutValidation(String, String)
  fullName: System.Net.Http.Headers.HttpHeaders.TryAddWithoutValidation(System.String, System.String)
  type: Method
  source:
    remote:
      path: src/System.Net.Http/src/System/Net/Http/Headers/HttpHeaders.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: TryAddWithoutValidation
    path: src/System.Net.Http/src/System/Net/Http/Headers/HttpHeaders.cs
    startLine: 107
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  syntax:
    content: public bool TryAddWithoutValidation(string name, string value)
    content.vb: Public Function TryAddWithoutValidation(name As String, value As String) As Boolean
    parameters:
    - id: name
      type: System.String
    - id: value
      type: System.String
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Net.Http.Headers.HttpHeaders.TryGetValues(System.String,System.Collections.Generic.IEnumerable{System.String}@)
  commentId: M:System.Net.Http.Headers.HttpHeaders.TryGetValues(System.String,System.Collections.Generic.IEnumerable{System.String}@)
  id: TryGetValues(System.String,System.Collections.Generic.IEnumerable{System.String}@)
  parent: System.Net.Http.Headers.HttpHeaders
  langs:
  - csharp
  - vb
  name: TryGetValues(String, out Collections.Generic.IEnumerable<String>)
  fullName: System.Net.Http.Headers.HttpHeaders.TryGetValues(System.String, out System.Collections.Generic.IEnumerable<System.String>)
  type: Method
  source:
    remote:
      path: src/System.Net.Http/ref/System.Net.Http.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: TryGetValues
    path: src/System.Net.Http/ref/System.Net.Http.cs
    startLine: 359
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  syntax:
    content: public bool TryGetValues(string name, out Collections.Generic.IEnumerable<string> values)
    content.vb: Public Function TryGetValues(name As String, ByRef values As Collections.Generic.IEnumerable(Of String)) As Boolean
    parameters:
    - id: name
      type: System.String
    - id: values
      type: System.Collections.Generic.IEnumerable{System.String}
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Net.Http.Headers.HttpHeaders.TryGetValues(System.String, ByRef System.Collections.Generic.IEnumerable(Of System.String))
  name.vb: TryGetValues(String, ByRef Collections.Generic.IEnumerable(Of String))
references:
- uid: System.Net.Http.Headers
  isExternal: false
  name: System.Net.Http.Headers
  fullName: System.Net.Http.Headers
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System.Collections.IEnumerable
  parent: System.Collections
  isExternal: false
  name: Collections.IEnumerable
  fullName: System.Collections.IEnumerable
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Collections
  isExternal: false
  name: System.Collections
  fullName: System.Collections
- uid: System.String
  parent: System
  isExternal: false
  name: String
  fullName: System.String
- uid: System.Collections.Generic.IEnumerable{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: Collections.Generic.IEnumerable<String>
  fullName: System.Collections.Generic.IEnumerable<System.String>
  fullname.vb: System.Collections.Generic.IEnumerable(Of System.String)
  name.vb: Collections.Generic.IEnumerable(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: Collections.Generic.IEnumerable
    fullName: System.Collections.Generic.IEnumerable
  - name: <
    fullName: <
  - uid: System.String
    name: String
    fullName: System.String
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: Collections.Generic.IEnumerable
    fullName: System.Collections.Generic.IEnumerable
  - name: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    fullName: System.String
  - name: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  parent: System.Collections.Generic
  isExternal: false
  name: Collections.Generic.IEnumerable<>
  fullName: System.Collections.Generic.IEnumerable<>
  fullname.vb: System.Collections.Generic.IEnumerable(Of )
  name.vb: Collections.Generic.IEnumerable(Of )
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: Collections.Generic.IEnumerable
    fullName: System.Collections.Generic.IEnumerable
  - name: <
    fullName: <
  - {}
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: Collections.Generic.IEnumerable
    fullName: System.Collections.Generic.IEnumerable
  - name: '(Of '
    fullName: '(Of '
  - {}
  - name: )
    fullName: )
- uid: System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  fullName: System.Boolean
- uid: System.Collections.Generic.IEnumerator{System.Collections.Generic.KeyValuePair{System.String,System.Collections.Generic.IEnumerable{System.String}}}
  definition: System.Collections.Generic.IEnumerator`1
  name: Collections.Generic.IEnumerator<Collections.Generic.KeyValuePair<String, Collections.Generic.IEnumerable<String>>>
  fullName: System.Collections.Generic.IEnumerator<System.Collections.Generic.KeyValuePair<System.String, System.Collections.Generic.IEnumerable<System.String>>>
  fullname.vb: System.Collections.Generic.IEnumerator(Of System.Collections.Generic.KeyValuePair(Of System.String, System.Collections.Generic.IEnumerable(Of System.String)))
  name.vb: Collections.Generic.IEnumerator(Of Collections.Generic.KeyValuePair(Of String, Collections.Generic.IEnumerable(Of String)))
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: Collections.Generic.IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: Collections.Generic.KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    fullName: <
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: Collections.Generic.IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: Collections.Generic.IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.KeyValuePair`2
    name: Collections.Generic.KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: Collections.Generic.IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  - name: )
    fullName: )
  - name: )
    fullName: )
- uid: System.Collections.Generic.IEnumerator`1
  parent: System.Collections.Generic
  isExternal: false
  name: Collections.Generic.IEnumerator<>
  fullName: System.Collections.Generic.IEnumerator<>
  fullname.vb: System.Collections.Generic.IEnumerator(Of )
  name.vb: Collections.Generic.IEnumerator(Of )
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: Collections.Generic.IEnumerator
    fullName: System.Collections.Generic.IEnumerator
  - name: <
    fullName: <
  - {}
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: Collections.Generic.IEnumerator
    fullName: System.Collections.Generic.IEnumerator
  - name: '(Of '
    fullName: '(Of '
  - {}
  - name: )
    fullName: )
