items:
- uid: System.Security.AccessControl.MutexAuditRule
  commentId: T:System.Security.AccessControl.MutexAuditRule
  id: MutexAuditRule
  parent: System.Security.AccessControl
  children:
  - System.Security.AccessControl.MutexAuditRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.MutexRights,System.Security.AccessControl.AuditFlags)
  - System.Security.AccessControl.MutexAuditRule.MutexRights
  langs:
  - csharp
  - vb
  name: MutexAuditRule
  fullName: System.Security.AccessControl.MutexAuditRule
  type: Class
  source:
    remote:
      path: src/System.Threading.AccessControl/ref/System.Threading.AccessControl.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: MutexAuditRule
    path: src/System.Threading.AccessControl/ref/System.Threading.AccessControl.cs
    startLine: 30
  assemblies:
  - System.Threading.AccessControl
  namespace: System.Security.AccessControl
  summary: "\n<p>Represents a set of access rights to be audited for a user or group. This class cannot be inherited.</p>\n"
  remarks: "\n<p>The <xref href=\"System.Security.AccessControl.MutexAuditRule\" data-throw-if-not-resolved=\"false\"></xref> class is one of a set of classes that the .NET Framework provides for managing Windows access control security on named system mutexes. For an overview of these classes and their relationship to the underlying Windows access control structures, see <xref href=\"System.Security.AccessControl.MutexSecurity\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>Windows access control security is meaningful only for named system mutexes. If a <xref href=\"System.Threading.Mutex\" data-throw-if-not-resolved=\"false\"></xref> object represents a local mutex, access control is irrelevant.</p>\n<p>To get a list of the audit rules currently applied to a named mutex, use the <xref href=\"System.Threading.Mutex.GetAccessControl\" data-throw-if-not-resolved=\"false\"></xref> method to get a <xref href=\"System.Security.AccessControl.MutexSecurity\" data-throw-if-not-resolved=\"false\"></xref> object, and then use its <xref href=\"System.Security.AccessControl.CommonObjectSecurity.GetAuditRules(System.Boolean,System.Boolean,System.Type)\" data-throw-if-not-resolved=\"false\"></xref> method to obtain a collection of <xref href=\"System.Security.AccessControl.MutexAuditRule\" data-throw-if-not-resolved=\"false\"></xref> objects.</p>\n<p>\n<xref href=\"System.Security.AccessControl.MutexAuditRule\" data-throw-if-not-resolved=\"false\"></xref> objects do not map one-to-one with access control entries in the underlying discretionary access control list (DACL). When you get the set of all audit rules for a mutex, the set contains the minimum number of rules currently required to express all the access control entries. </p>\n<p>The underlying access control entries change as you apply and remove rules. The information in rules is merged if possible, to maintain the smallest number of access control entries. Thus, when you read the current list of rules, it might not look exactly like the list of all the rules you have added.</p>\n<p>Use <xref href=\"System.Security.AccessControl.MutexAuditRule\" data-throw-if-not-resolved=\"false\"></xref> objects to specify access rights to be audited for a user or group. To apply a rule to a named system mutex, use the <xref href=\"System.Threading.Mutex.SetAccessControl(System.Security.AccessControl.MutexSecurity)\" data-throw-if-not-resolved=\"false\"></xref> method to get the <xref href=\"System.Security.AccessControl.MutexSecurity\" data-throw-if-not-resolved=\"false\"></xref> object. Modify the <xref href=\"System.Security.AccessControl.MutexSecurity\" data-throw-if-not-resolved=\"false\"></xref> object by using its methods to add the rule, and then use the <xref href=\"System.Threading.Mutex.SetAccessControl(System.Security.AccessControl.MutexSecurity)\" data-throw-if-not-resolved=\"false\"></xref> method to reattach the security object.</p>\n<p>Changes you make to a <xref href=\"System.Security.AccessControl.MutexSecurity\" data-throw-if-not-resolved=\"false\"></xref> object do not affect the access levels of the named mutex until you call the <xref href=\"System.Threading.Mutex.SetAccessControl(System.Security.AccessControl.MutexSecurity)\" data-throw-if-not-resolved=\"false\"></xref> method to assign the altered security object to the named mutex.</p>\n<p>\n<xref href=\"System.Security.AccessControl.MutexAuditRule\" data-throw-if-not-resolved=\"false\"></xref> objects are immutable. Security for a mutex is modified using the methods of the <xref href=\"System.Security.AccessControl.MutexSecurity\" data-throw-if-not-resolved=\"false\"></xref> class to add or remove rules; as you do this, the underlying access control entries are modified. </p>\n<p>Security on synchronization objects is not supported for Windows 98 or Windows Millennium Edition.</p>\n"
  syntax:
    content: 'public sealed class MutexAuditRule : AuditRule'
    content.vb: >-
      Public NotInheritable Class MutexAuditRule
          Inherits AuditRule
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: System.Security.AccessControl.MutexAuditRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.MutexRights,System.Security.AccessControl.AuditFlags)
  commentId: M:System.Security.AccessControl.MutexAuditRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.MutexRights,System.Security.AccessControl.AuditFlags)
  id: '#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.MutexRights,System.Security.AccessControl.AuditFlags)'
  parent: System.Security.AccessControl.MutexAuditRule
  langs:
  - csharp
  - vb
  name: MutexAuditRule(Principal.IdentityReference, MutexRights, AuditFlags)
  fullName: System.Security.AccessControl.MutexAuditRule.MutexAuditRule(System.Security.Principal.IdentityReference, System.Security.AccessControl.MutexRights, System.Security.AccessControl.AuditFlags)
  type: Constructor
  source:
    remote:
      path: src/System.Threading.AccessControl/ref/System.Threading.AccessControl.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Threading.AccessControl/ref/System.Threading.AccessControl.cs
    startLine: 33
  assemblies:
  - System.Threading.AccessControl
  namespace: System.Security.AccessControl
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Security.AccessControl.MutexAuditRule\" data-throw-if-not-resolved=\"false\"></xref> class, specifying the user or group to audit, the rights to audit, and whether to audit success, failure, or both.</p>\n"
  remarks: "\n<p>To create an <xref href=\"System.Security.Principal.NTAccount\" data-throw-if-not-resolved=\"false\"></xref> object from a string representing a user or group name, use the <xref href=\"System.Security.Principal.NTAccount.#ctor(System.String)\" data-throw-if-not-resolved=\"false\"></xref> constructor.</p>\n"
  syntax:
    content: public MutexAuditRule(Principal.IdentityReference identity, MutexRights eventRights, AuditFlags flags)
    content.vb: Public Sub New(identity As Principal.IdentityReference, eventRights As MutexRights, flags As AuditFlags)
    parameters:
    - id: identity
      type: System.Security.Principal.IdentityReference
      description: "\n<p>The user or group the rule applies to. Must be of type <xref href=\"System.Security.Principal.SecurityIdentifier\" data-throw-if-not-resolved=\"false\"></xref> or a type such as <xref href=\"System.Security.Principal.NTAccount\" data-throw-if-not-resolved=\"false\"></xref> that can be converted to type <xref href=\"System.Security.Principal.SecurityIdentifier\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
    - id: eventRights
      type: System.Security.AccessControl.MutexRights
      description: "\n<p>A bitwise combination of <xref href=\"System.Security.AccessControl.MutexRights\" data-throw-if-not-resolved=\"false\"></xref> values specifying the kinds of access to audit.</p>\n"
    - id: flags
      type: System.Security.AccessControl.AuditFlags
      description: "\n<p>A bitwise combination of <xref href=\"System.Security.AccessControl.AuditFlags\" data-throw-if-not-resolved=\"false\"></xref> values specifying whether to audit success, failure, or both.</p>\n"
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>\n<em>eventRights</em> specifies an invalid value.</p>\n<p>-or-</p>\n<p>\n<em>flags</em> specifies an invalid value.</p>\n"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>identity</em> is <strong>null</strong>. </p>\n<p>-or-</p>\n<p>\n<em>eventRights</em> is zero.</p>\n"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<p>\n<em>identity</em> is neither of type <xref href=\"System.Security.Principal.SecurityIdentifier\" data-throw-if-not-resolved=\"false\"></xref> nor of a type such as <xref href=\"System.Security.Principal.NTAccount\" data-throw-if-not-resolved=\"false\"></xref> that can be translated to type <xref href=\"System.Security.Principal.SecurityIdentifier\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Security.AccessControl.MutexAuditRule.MutexRights
  commentId: P:System.Security.AccessControl.MutexAuditRule.MutexRights
  id: MutexRights
  parent: System.Security.AccessControl.MutexAuditRule
  langs:
  - csharp
  - vb
  name: MutexRights
  fullName: System.Security.AccessControl.MutexAuditRule.MutexRights
  type: Property
  source:
    remote:
      path: src/System.Threading.AccessControl/ref/System.Threading.AccessControl.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: MutexRights
    path: src/System.Threading.AccessControl/ref/System.Threading.AccessControl.cs
    startLine: 34
  assemblies:
  - System.Threading.AccessControl
  namespace: System.Security.AccessControl
  summary: "\n<p>Gets the access rights affected by the audit rule.</p>\n"
  remarks: "\n<p>\n<xref href=\"System.Security.AccessControl.MutexAuditRule\" data-throw-if-not-resolved=\"false\"></xref> objects are immutable. You can create a new audit rule representing a different user, different rights, or a different combination of <xref href=\"System.Security.AccessControl.AuditFlags\" data-throw-if-not-resolved=\"false\"></xref> flags, but you cannot modify an existing audit rule.</p>\n"
  syntax:
    content: public MutexRights MutexRights { get; }
    content.vb: Public ReadOnly Property MutexRights As MutexRights
    parameters: []
    return:
      type: System.Security.AccessControl.MutexRights
      description: "\n<p>A bitwise combination of <xref href=\"System.Security.AccessControl.MutexRights\" data-throw-if-not-resolved=\"false\"></xref> values that indicates the rights affected by the audit rule.</p>\n"
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: System.Security.AccessControl
  isExternal: false
  name: System.Security.AccessControl
  fullName: System.Security.AccessControl
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Security.Principal.IdentityReference
  parent: System.Security.Principal
  isExternal: false
  name: Principal.IdentityReference
  fullName: System.Security.Principal.IdentityReference
- uid: System.Security.AccessControl.MutexRights
  parent: System.Security.AccessControl
  isExternal: false
  name: MutexRights
  fullName: System.Security.AccessControl.MutexRights
- uid: System.Security.AccessControl.AuditFlags
  parent: System.Security.AccessControl
  isExternal: false
  name: AuditFlags
  fullName: System.Security.AccessControl.AuditFlags
- uid: System.Security.Principal
  isExternal: false
  name: System.Security.Principal
  fullName: System.Security.Principal
- uid: System.ArgumentOutOfRangeException
  isExternal: false
  name: ArgumentOutOfRangeException
  fullName: System.ArgumentOutOfRangeException
- uid: System.ArgumentNullException
  isExternal: false
  name: ArgumentNullException
  fullName: System.ArgumentNullException
- uid: System.ArgumentException
  parent: System
  isExternal: false
  name: ArgumentException
  fullName: System.ArgumentException
