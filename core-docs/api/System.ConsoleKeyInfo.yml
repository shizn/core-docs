items:
- uid: System.ConsoleKeyInfo
  commentId: T:System.ConsoleKeyInfo
  id: ConsoleKeyInfo
  parent: System
  children:
  - System.ConsoleKeyInfo.#ctor(System.Char,System.ConsoleKey,System.Boolean,System.Boolean,System.Boolean)
  - System.ConsoleKeyInfo.Equals(System.ConsoleKeyInfo)
  - System.ConsoleKeyInfo.Equals(System.Object)
  - System.ConsoleKeyInfo.GetHashCode
  - System.ConsoleKeyInfo.Key
  - System.ConsoleKeyInfo.KeyChar
  - System.ConsoleKeyInfo.Modifiers
  - System.ConsoleKeyInfo.op_Equality(System.ConsoleKeyInfo,System.ConsoleKeyInfo)
  - System.ConsoleKeyInfo.op_Inequality(System.ConsoleKeyInfo,System.ConsoleKeyInfo)
  langs:
  - csharp
  - vb
  name: ConsoleKeyInfo
  fullName: System.ConsoleKeyInfo
  type: Struct
  source:
    remote:
      path: src/System.Console/src/System/ConsoleKeyInfo.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ConsoleKeyInfo
    path: src/System.Console/src/System/ConsoleKeyInfo.cs
    startLine: 6
  assemblies:
  - System.Console
  namespace: System
  summary: "\n<p>Describes the console key that was pressed, including the character represented by the console key and the state of the SHIFT, ALT, and CTRL modifier keys.</p>\n"
  remarks: "\n<p>The <xref href=\"System.ConsoleKeyInfo\" data-throw-if-not-resolved=\"false\"></xref> type is not intended to be created by users. Instead, it is returned to the user in response to calling the <xref href=\"System.Console.ReadKey\" data-throw-if-not-resolved=\"false\"></xref> method.</p>\n<p>The <xref href=\"System.ConsoleKeyInfo\" data-throw-if-not-resolved=\"false\"></xref> object describes the <xref href=\"System.ConsoleKey\" data-throw-if-not-resolved=\"false\"></xref> constant and Unicode character, if any, that correspond to the pressed console key. The <xref href=\"System.ConsoleKeyInfo\" data-throw-if-not-resolved=\"false\"></xref> object also describes, in a bitwise combination of <xref href=\"System.ConsoleModifiers\" data-throw-if-not-resolved=\"false\"></xref> values, whether one or more SHIFT, ALT, or CTRL modifier keys was pressed simultaneously with the console key.</p>\n"
  example:
  - "\n<p>The following example demonstrates using a <xref href=\"System.ConsoleKeyInfo\" data-throw-if-not-resolved=\"false\"></xref> object in a read operation.</p>console.readkey1#1"
  syntax:
    content: public struct ConsoleKeyInfo
    content.vb: Public Structure ConsoleKeyInfo
  seealso:
  - type: System.ConsoleModifiers
    commentId: T:System.ConsoleModifiers
  - type: System.ConsoleKey
    commentId: T:System.ConsoleKey
  modifiers.csharp:
  - public
  - struct
  modifiers.vb:
  - Public
  - Structure
- uid: System.ConsoleKeyInfo.#ctor(System.Char,System.ConsoleKey,System.Boolean,System.Boolean,System.Boolean)
  commentId: M:System.ConsoleKeyInfo.#ctor(System.Char,System.ConsoleKey,System.Boolean,System.Boolean,System.Boolean)
  id: '#ctor(System.Char,System.ConsoleKey,System.Boolean,System.Boolean,System.Boolean)'
  parent: System.ConsoleKeyInfo
  langs:
  - csharp
  - vb
  name: ConsoleKeyInfo(Char, ConsoleKey, Boolean, Boolean, Boolean)
  fullName: System.ConsoleKeyInfo.ConsoleKeyInfo(System.Char, System.ConsoleKey, System.Boolean, System.Boolean, System.Boolean)
  type: Constructor
  source:
    remote:
      path: src/System.Console/src/System/ConsoleKeyInfo.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Console/src/System/ConsoleKeyInfo.cs
    startLine: 12
  assemblies:
  - System.Console
  namespace: System
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.ConsoleKeyInfo\" data-throw-if-not-resolved=\"false\"></xref> structure using the specified character, console key, and modifier keys.</p>\n"
  remarks: "\n<p>This type is not intended to be created by users. Instead, it is returned to the user in response to calling the <xref href=\"System.Console.ReadKey\" data-throw-if-not-resolved=\"false\"></xref> method.</p>\n<p>The <xref href=\"System.ConsoleKeyInfo\" data-throw-if-not-resolved=\"false\"></xref> type does not specify whether the left or right SHIFT, ALT, or CTRL modifier key was pressed.</p>\n"
  syntax:
    content: public ConsoleKeyInfo(char keyChar, ConsoleKey key, bool shift, bool alt, bool control)
    content.vb: Public Sub New(keyChar As Char, key As ConsoleKey, shift As Boolean, alt As Boolean, control As Boolean)
    parameters:
    - id: keyChar
      type: System.Char
    - id: key
      type: System.ConsoleKey
    - id: shift
      type: System.Boolean
    - id: alt
      type: System.Boolean
    - id: control
      type: System.Boolean
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>The numeric value of the <em>key</em> parameter is less than 0 or greater than 255.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.ConsoleKeyInfo.KeyChar
  commentId: P:System.ConsoleKeyInfo.KeyChar
  id: KeyChar
  parent: System.ConsoleKeyInfo
  langs:
  - csharp
  - vb
  name: KeyChar
  fullName: System.ConsoleKeyInfo.KeyChar
  type: Property
  source:
    remote:
      path: src/System.Console/src/System/ConsoleKeyInfo.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: KeyChar
    path: src/System.Console/src/System/ConsoleKeyInfo.cs
    startLine: 34
  assemblies:
  - System.Console
  namespace: System
  summary: "\n<p>Gets the Unicode character represented by the current <xref href=\"System.ConsoleKeyInfo\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  remarks: "\n<p>If the key pressed does not map to a Unicode character (for example, if the user presses the F1 key or the Home key), the value of the <xref href=\"System.ConsoleKeyInfo.KeyChar\" data-throw-if-not-resolved=\"false\"></xref> property is \\U0000.</p>\n"
  example:
  - "\n<p>The following example uses the <xref href=\"System.ConsoleKeyInfo.KeyChar\" data-throw-if-not-resolved=\"false\"></xref> property to add the characters input by the user into a string. The example ignores special keys other than ENTER, ESC, and BACKSPACE. </p>System.ConsoleKeyInfo.KeyChar#1"
  syntax:
    content: public char KeyChar { get; }
    content.vb: Public ReadOnly Property KeyChar As Char
    parameters: []
    return:
      type: System.Char
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.ConsoleKeyInfo.Key
  commentId: P:System.ConsoleKeyInfo.Key
  id: Key
  parent: System.ConsoleKeyInfo
  langs:
  - csharp
  - vb
  name: Key
  fullName: System.ConsoleKeyInfo.Key
  type: Property
  source:
    remote:
      path: src/System.Console/src/System/ConsoleKeyInfo.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Key
    path: src/System.Console/src/System/ConsoleKeyInfo.cs
    startLine: 39
  assemblies:
  - System.Console
  namespace: System
  summary: "\n<p>Gets the console key represented by the current <xref href=\"System.ConsoleKeyInfo\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  example:
  - "\n<p>The following example demonstrates using a <xref href=\"System.ConsoleKeyInfo.Key\" data-throw-if-not-resolved=\"false\"></xref> property in a read operation.</p>console.readkey1#1"
  syntax:
    content: public ConsoleKey Key { get; }
    content.vb: Public ReadOnly Property Key As ConsoleKey
    parameters: []
    return:
      type: System.ConsoleKey
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.ConsoleKeyInfo.Modifiers
  commentId: P:System.ConsoleKeyInfo.Modifiers
  id: Modifiers
  parent: System.ConsoleKeyInfo
  langs:
  - csharp
  - vb
  name: Modifiers
  fullName: System.ConsoleKeyInfo.Modifiers
  type: Property
  source:
    remote:
      path: src/System.Console/src/System/ConsoleKeyInfo.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Modifiers
    path: src/System.Console/src/System/ConsoleKeyInfo.cs
    startLine: 44
  assemblies:
  - System.Console
  namespace: System
  summary: "\n<p>Gets a bitwise combination of <xref href=\"System.ConsoleModifiers\" data-throw-if-not-resolved=\"false\"></xref> values that specifies one or more modifier keys pressed simultaneously with the console key.</p>\n"
  example:
  - "\n<p>The following example demonstrates using a <xref href=\"System.ConsoleKeyInfo.Modifiers\" data-throw-if-not-resolved=\"false\"></xref> property in a read operation.</p>console.readkey1#1"
  syntax:
    content: public ConsoleModifiers Modifiers { get; }
    content.vb: Public ReadOnly Property Modifiers As ConsoleModifiers
    parameters: []
    return:
      type: System.ConsoleModifiers
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.ConsoleKeyInfo.Equals(System.ConsoleKeyInfo)
  commentId: M:System.ConsoleKeyInfo.Equals(System.ConsoleKeyInfo)
  id: Equals(System.ConsoleKeyInfo)
  parent: System.ConsoleKeyInfo
  langs:
  - csharp
  - vb
  name: Equals(ConsoleKeyInfo)
  fullName: System.ConsoleKeyInfo.Equals(System.ConsoleKeyInfo)
  type: Method
  source:
    remote:
      path: src/System.Console/src/System/ConsoleKeyInfo.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Equals
    path: src/System.Console/src/System/ConsoleKeyInfo.cs
    startLine: 54
  assemblies:
  - System.Console
  namespace: System
  summary: "\n<p>Gets a value indicating whether the specified <xref href=\"System.ConsoleKeyInfo\" data-throw-if-not-resolved=\"false\"></xref> object is equal to the current <xref href=\"System.ConsoleKeyInfo\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  remarks: "\n<p>Two <xref href=\"System.ConsoleKeyInfo\" data-throw-if-not-resolved=\"false\"></xref> objects are equal if their corresponding <xref href=\"System.ConsoleKeyInfo.KeyChar\" data-throw-if-not-resolved=\"false\"></xref>, <xref href=\"System.ConsoleKeyInfo.Key\" data-throw-if-not-resolved=\"false\"></xref>, and <xref href=\"System.ConsoleKeyInfo.Modifiers\" data-throw-if-not-resolved=\"false\"></xref> properties are equal.</p>\n<p>The <xref href=\"System.ConsoleKeyInfo.Equals(System.ConsoleKeyInfo)\" data-throw-if-not-resolved=\"false\"></xref> method performs slightly better than the <xref href=\"System.ConsoleKeyInfo.Equals(System.Object)\" data-throw-if-not-resolved=\"false\"></xref> method because it does not have to convert <em>obj</em> to an object.</p>\n"
  example:
  - 
  syntax:
    content: public bool Equals(ConsoleKeyInfo obj)
    content.vb: Public Function Equals(obj As ConsoleKeyInfo) As Boolean
    parameters:
    - id: obj
      type: System.ConsoleKeyInfo
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.ConsoleKeyInfo.Equals(System.Object)
  commentId: M:System.ConsoleKeyInfo.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.ConsoleKeyInfo
  langs:
  - csharp
  - vb
  name: Equals(Object)
  fullName: System.ConsoleKeyInfo.Equals(System.Object)
  type: Method
  source:
    remote:
      path: src/System.Console/ref/System.Console.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Equals
    path: src/System.Console/ref/System.Console.cs
    startLine: 133
  assemblies:
  - System.Console
  namespace: System
  summary: "\n<p>Gets a value indicating whether the specified object is equal to the current <xref href=\"System.ConsoleKeyInfo\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  remarks: "\n<p>Two <xref href=\"System.ConsoleKeyInfo\" data-throw-if-not-resolved=\"false\"></xref> objects are equal if their corresponding <xref href=\"System.ConsoleKeyInfo.KeyChar\" data-throw-if-not-resolved=\"false\"></xref>, <xref href=\"System.ConsoleKeyInfo.Key\" data-throw-if-not-resolved=\"false\"></xref>, and <xref href=\"System.ConsoleKeyInfo.Modifiers\" data-throw-if-not-resolved=\"false\"></xref> properties are equal.</p>\n"
  example:
  - "\n<p>The following example demonstrates the <xref href=\"System.ConsoleKeyInfo.Equals(System.Object)\" data-throw-if-not-resolved=\"false\"></xref> method.</p>system.ConsoleKeyInfo.Equals#1"
  syntax:
    content: public override bool Equals(object value)
    content.vb: Public Overrides Function Equals(value As Object) As Boolean
    parameters:
    - id: value
      type: System.Object
      description: "\n<p>An object to compare to the current <xref href=\"System.ConsoleKeyInfo\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if <em>value</em> is a <xref href=\"System.ConsoleKeyInfo\" data-throw-if-not-resolved=\"false\"></xref> object and is equal to the current <xref href=\"System.ConsoleKeyInfo\" data-throw-if-not-resolved=\"false\"></xref> object; otherwise, <strong>false</strong>.</p>\n"
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.ConsoleKeyInfo.GetHashCode
  commentId: M:System.ConsoleKeyInfo.GetHashCode
  id: GetHashCode
  parent: System.ConsoleKeyInfo
  langs:
  - csharp
  - vb
  name: GetHashCode()
  fullName: System.ConsoleKeyInfo.GetHashCode()
  type: Method
  source:
    remote:
      path: src/System.Console/src/System/ConsoleKeyInfo.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetHashCode
    path: src/System.Console/src/System/ConsoleKeyInfo.cs
    startLine: 69
  assemblies:
  - System.Console
  namespace: System
  summary: "\n<p>Returns the hash code for the current <xref href=\"System.ConsoleKeyInfo\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  remarks: "\n<p>The value returned by the <xref href=\"System.ConsoleKeyInfo.GetHashCode\" data-throw-if-not-resolved=\"false\"></xref> method is not suitable for distinguishing one <xref href=\"System.ConsoleKeyInfo\" data-throw-if-not-resolved=\"false\"></xref> object from another. If your application needs a unique hash code, override the <xref href=\"System.ConsoleKeyInfo.GetHashCode\" data-throw-if-not-resolved=\"false\"></xref> method with your own method.</p>\n"
  example:
  - "\n<p>The following example demonstrates the <xref href=\"System.ConsoleKeyInfo.GetHashCode\" data-throw-if-not-resolved=\"false\"></xref> method.</p>System.ConsoleKeyInfo.GetHashCode#1"
  syntax:
    content: public override int GetHashCode()
    content.vb: Public Overrides Function GetHashCode As Integer
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.ConsoleKeyInfo.op_Equality(System.ConsoleKeyInfo,System.ConsoleKeyInfo)
  commentId: M:System.ConsoleKeyInfo.op_Equality(System.ConsoleKeyInfo,System.ConsoleKeyInfo)
  id: op_Equality(System.ConsoleKeyInfo,System.ConsoleKeyInfo)
  parent: System.ConsoleKeyInfo
  langs:
  - csharp
  - vb
  name: Equality(ConsoleKeyInfo, ConsoleKeyInfo)
  fullName: System.ConsoleKeyInfo.Equality(System.ConsoleKeyInfo, System.ConsoleKeyInfo)
  type: Operator
  source:
    remote:
      path: src/System.Console/src/System/ConsoleKeyInfo.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_Equality
    path: src/System.Console/src/System/ConsoleKeyInfo.cs
    startLine: 59
  assemblies:
  - System.Console
  namespace: System
  summary: "\n<p>Indicates whether the specified <xref href=\"System.ConsoleKeyInfo\" data-throw-if-not-resolved=\"false\"></xref> objects are equal.</p>\n"
  remarks: "\n<p>Two <xref href=\"System.ConsoleKeyInfo\" data-throw-if-not-resolved=\"false\"></xref> objects are equal if their corresponding <xref href=\"System.ConsoleKeyInfo.KeyChar\" data-throw-if-not-resolved=\"false\"></xref>, <xref href=\"System.ConsoleKeyInfo.Key\" data-throw-if-not-resolved=\"false\"></xref>, and <xref href=\"System.ConsoleKeyInfo.Modifiers\" data-throw-if-not-resolved=\"false\"></xref> properties are equal.</p>\n"
  example:
  - 
  syntax:
    content: public static bool operator ==(ConsoleKeyInfo a, ConsoleKeyInfo b)
    content.vb: Public Shared Operator =(a As ConsoleKeyInfo, b As ConsoleKeyInfo) As Boolean
    parameters:
    - id: a
      type: System.ConsoleKeyInfo
    - id: b
      type: System.ConsoleKeyInfo
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.ConsoleKeyInfo.op_Inequality(System.ConsoleKeyInfo,System.ConsoleKeyInfo)
  commentId: M:System.ConsoleKeyInfo.op_Inequality(System.ConsoleKeyInfo,System.ConsoleKeyInfo)
  id: op_Inequality(System.ConsoleKeyInfo,System.ConsoleKeyInfo)
  parent: System.ConsoleKeyInfo
  langs:
  - csharp
  - vb
  name: Inequality(ConsoleKeyInfo, ConsoleKeyInfo)
  fullName: System.ConsoleKeyInfo.Inequality(System.ConsoleKeyInfo, System.ConsoleKeyInfo)
  type: Operator
  source:
    remote:
      path: src/System.Console/src/System/ConsoleKeyInfo.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_Inequality
    path: src/System.Console/src/System/ConsoleKeyInfo.cs
    startLine: 64
  assemblies:
  - System.Console
  namespace: System
  summary: "\n<p>Indicates whether the specified <xref href=\"System.ConsoleKeyInfo\" data-throw-if-not-resolved=\"false\"></xref> objects are not equal.</p>\n"
  remarks: "\n<p>Two <xref href=\"System.ConsoleKeyInfo\" data-throw-if-not-resolved=\"false\"></xref> objects are equal if their corresponding <xref href=\"System.ConsoleKeyInfo.KeyChar\" data-throw-if-not-resolved=\"false\"></xref>, <xref href=\"System.ConsoleKeyInfo.Key\" data-throw-if-not-resolved=\"false\"></xref>, and <xref href=\"System.ConsoleKeyInfo.Modifiers\" data-throw-if-not-resolved=\"false\"></xref> properties are equal.</p>\n"
  example:
  - 
  syntax:
    content: public static bool operator !=(ConsoleKeyInfo a, ConsoleKeyInfo b)
    content.vb: Public Shared Operator <>(a As ConsoleKeyInfo, b As ConsoleKeyInfo) As Boolean
    parameters:
    - id: a
      type: System.ConsoleKeyInfo
    - id: b
      type: System.ConsoleKeyInfo
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Char
  parent: System
  isExternal: false
  name: Char
  fullName: System.Char
- uid: System.ConsoleKey
  parent: System
  isExternal: false
  name: ConsoleKey
  fullName: System.ConsoleKey
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  fullName: System.Boolean
- uid: System.ConsoleModifiers
  parent: System
  isExternal: false
  name: ConsoleModifiers
  fullName: System.ConsoleModifiers
- uid: System.ConsoleKeyInfo
  parent: System
  isExternal: false
  name: ConsoleKeyInfo
  fullName: System.ConsoleKeyInfo
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  fullName: System.Int32
- uid: System.ArgumentOutOfRangeException
  isExternal: false
  name: ArgumentOutOfRangeException
  fullName: System.ArgumentOutOfRangeException
