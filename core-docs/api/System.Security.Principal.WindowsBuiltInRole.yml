items:
- uid: System.Security.Principal.WindowsBuiltInRole
  commentId: T:System.Security.Principal.WindowsBuiltInRole
  id: WindowsBuiltInRole
  parent: System.Security.Principal
  children:
  - System.Security.Principal.WindowsBuiltInRole.AccountOperator
  - System.Security.Principal.WindowsBuiltInRole.Administrator
  - System.Security.Principal.WindowsBuiltInRole.BackupOperator
  - System.Security.Principal.WindowsBuiltInRole.Guest
  - System.Security.Principal.WindowsBuiltInRole.PowerUser
  - System.Security.Principal.WindowsBuiltInRole.PrintOperator
  - System.Security.Principal.WindowsBuiltInRole.Replicator
  - System.Security.Principal.WindowsBuiltInRole.SystemOperator
  - System.Security.Principal.WindowsBuiltInRole.User
  langs:
  - csharp
  - vb
  name: WindowsBuiltInRole
  fullName: System.Security.Principal.WindowsBuiltInRole
  type: Enum
  source:
    remote:
      path: src/System.Security.Principal.Windows/src/System/Security/Principal/WindowsPrincipal.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: WindowsBuiltInRole
    path: src/System.Security.Principal.Windows/src/System/Security/Principal/WindowsPrincipal.cs
    startLine: 12
  assemblies:
  - System.Security.Principal.Windows
  namespace: System.Security.Principal
  summary: "\n<p>Specifies common roles to be used with <xref href=\"System.Security.Principal.WindowsPrincipal.IsInRole(System.String)\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  remarks: "\n<p>These roles represent the local Windows groups common to most installations of Windows NT, Windows 2000 and Windows XP.</p>\n<p>In Windows Vista, User Account Control (UAC) determines the privileges of a user. If you are a member of the Built-in Administrators group, you are assigned two run-time access tokens: a standard user access token and an administrator access token. By default, you are in the standard user role. When you attempt to perform a task that requires administrative privileges, you can dynamically elevate your role by using the Consent dialog box. The code that executes the <see cref=\"Overload:System.Security.Principal.WindowsPrincipal.IsInRole\"></see> method does not display the Consent dialog box. The code returns false if you are in the standard user role, even if you are in the Built-in Administrators group. You can elevate your privileges before you execute the code by right-clicking the application icon and indicating that you want to run as an administrator.</p>\n"
  example:
  - "\n<p>The following example shows the use of the <xref href=\"System.Security.Principal.WindowsBuiltInRole\" data-throw-if-not-resolved=\"false\"></xref> enumeration.</p>System.Security.Principal.WindowsBuiltInRole Example#1"
  syntax:
    content: 'public enum WindowsBuiltInRole : int'
    content.vb: Public Enum WindowsBuiltInRole As Integer
  modifiers.csharp:
  - public
  - enum
  modifiers.vb:
  - Public
  - Enum
- uid: System.Security.Principal.WindowsBuiltInRole.AccountOperator
  commentId: F:System.Security.Principal.WindowsBuiltInRole.AccountOperator
  id: AccountOperator
  parent: System.Security.Principal.WindowsBuiltInRole
  langs:
  - csharp
  - vb
  name: AccountOperator
  fullName: System.Security.Principal.WindowsBuiltInRole.AccountOperator
  type: Field
  source:
    remote:
      path: src/System.Security.Principal.Windows/src/System/Security/Principal/WindowsPrincipal.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: AccountOperator
    path: src/System.Security.Principal.Windows/src/System/Security/Principal/WindowsPrincipal.cs
    startLine: 18
  assemblies:
  - System.Security.Principal.Windows
  namespace: System.Security.Principal
  summary: "\n<p>Account operators manage the user accounts on a computer or domain.</p>\n"
  syntax:
    content: AccountOperator = null
    content.vb: AccountOperator = Nothing
    return:
      type: System.Security.Principal.WindowsBuiltInRole
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Security.Principal.WindowsBuiltInRole.Administrator
  commentId: F:System.Security.Principal.WindowsBuiltInRole.Administrator
  id: Administrator
  parent: System.Security.Principal.WindowsBuiltInRole
  langs:
  - csharp
  - vb
  name: Administrator
  fullName: System.Security.Principal.WindowsBuiltInRole.Administrator
  type: Field
  source:
    remote:
      path: src/System.Security.Principal.Windows/src/System/Security/Principal/WindowsPrincipal.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Administrator
    path: src/System.Security.Principal.Windows/src/System/Security/Principal/WindowsPrincipal.cs
    startLine: 14
  assemblies:
  - System.Security.Principal.Windows
  namespace: System.Security.Principal
  summary: "\n<p>Administrators have complete and unrestricted access to the computer or domain.</p>\n"
  syntax:
    content: Administrator = null
    content.vb: Administrator = Nothing
    return:
      type: System.Security.Principal.WindowsBuiltInRole
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Security.Principal.WindowsBuiltInRole.BackupOperator
  commentId: F:System.Security.Principal.WindowsBuiltInRole.BackupOperator
  id: BackupOperator
  parent: System.Security.Principal.WindowsBuiltInRole
  langs:
  - csharp
  - vb
  name: BackupOperator
  fullName: System.Security.Principal.WindowsBuiltInRole.BackupOperator
  type: Field
  source:
    remote:
      path: src/System.Security.Principal.Windows/src/System/Security/Principal/WindowsPrincipal.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: BackupOperator
    path: src/System.Security.Principal.Windows/src/System/Security/Principal/WindowsPrincipal.cs
    startLine: 21
  assemblies:
  - System.Security.Principal.Windows
  namespace: System.Security.Principal
  summary: "\n<p>Backup operators can override security restrictions for the sole purpose of backing up or restoring files.</p>\n"
  syntax:
    content: BackupOperator = null
    content.vb: BackupOperator = Nothing
    return:
      type: System.Security.Principal.WindowsBuiltInRole
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Security.Principal.WindowsBuiltInRole.Guest
  commentId: F:System.Security.Principal.WindowsBuiltInRole.Guest
  id: Guest
  parent: System.Security.Principal.WindowsBuiltInRole
  langs:
  - csharp
  - vb
  name: Guest
  fullName: System.Security.Principal.WindowsBuiltInRole.Guest
  type: Field
  source:
    remote:
      path: src/System.Security.Principal.Windows/src/System/Security/Principal/WindowsPrincipal.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Guest
    path: src/System.Security.Principal.Windows/src/System/Security/Principal/WindowsPrincipal.cs
    startLine: 16
  assemblies:
  - System.Security.Principal.Windows
  namespace: System.Security.Principal
  summary: "\n<p>Guests are more restricted than users.</p>\n"
  syntax:
    content: Guest = null
    content.vb: Guest = Nothing
    return:
      type: System.Security.Principal.WindowsBuiltInRole
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Security.Principal.WindowsBuiltInRole.PowerUser
  commentId: F:System.Security.Principal.WindowsBuiltInRole.PowerUser
  id: PowerUser
  parent: System.Security.Principal.WindowsBuiltInRole
  langs:
  - csharp
  - vb
  name: PowerUser
  fullName: System.Security.Principal.WindowsBuiltInRole.PowerUser
  type: Field
  source:
    remote:
      path: src/System.Security.Principal.Windows/src/System/Security/Principal/WindowsPrincipal.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: PowerUser
    path: src/System.Security.Principal.Windows/src/System/Security/Principal/WindowsPrincipal.cs
    startLine: 17
  assemblies:
  - System.Security.Principal.Windows
  namespace: System.Security.Principal
  summary: "\n<p>Power users possess most administrative permissions with some restrictions. Thus, power users can run legacy applications, in addition to certified applications.</p>\n"
  syntax:
    content: PowerUser = null
    content.vb: PowerUser = Nothing
    return:
      type: System.Security.Principal.WindowsBuiltInRole
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Security.Principal.WindowsBuiltInRole.PrintOperator
  commentId: F:System.Security.Principal.WindowsBuiltInRole.PrintOperator
  id: PrintOperator
  parent: System.Security.Principal.WindowsBuiltInRole
  langs:
  - csharp
  - vb
  name: PrintOperator
  fullName: System.Security.Principal.WindowsBuiltInRole.PrintOperator
  type: Field
  source:
    remote:
      path: src/System.Security.Principal.Windows/src/System/Security/Principal/WindowsPrincipal.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: PrintOperator
    path: src/System.Security.Principal.Windows/src/System/Security/Principal/WindowsPrincipal.cs
    startLine: 20
  assemblies:
  - System.Security.Principal.Windows
  namespace: System.Security.Principal
  summary: "\n<p>Print operators can take control of a printer.</p>\n"
  syntax:
    content: PrintOperator = null
    content.vb: PrintOperator = Nothing
    return:
      type: System.Security.Principal.WindowsBuiltInRole
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Security.Principal.WindowsBuiltInRole.Replicator
  commentId: F:System.Security.Principal.WindowsBuiltInRole.Replicator
  id: Replicator
  parent: System.Security.Principal.WindowsBuiltInRole
  langs:
  - csharp
  - vb
  name: Replicator
  fullName: System.Security.Principal.WindowsBuiltInRole.Replicator
  type: Field
  source:
    remote:
      path: src/System.Security.Principal.Windows/src/System/Security/Principal/WindowsPrincipal.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Replicator
    path: src/System.Security.Principal.Windows/src/System/Security/Principal/WindowsPrincipal.cs
    startLine: 22
  assemblies:
  - System.Security.Principal.Windows
  namespace: System.Security.Principal
  summary: "\n<p>Replicators support file replication in a domain.</p>\n"
  syntax:
    content: Replicator = null
    content.vb: Replicator = Nothing
    return:
      type: System.Security.Principal.WindowsBuiltInRole
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Security.Principal.WindowsBuiltInRole.SystemOperator
  commentId: F:System.Security.Principal.WindowsBuiltInRole.SystemOperator
  id: SystemOperator
  parent: System.Security.Principal.WindowsBuiltInRole
  langs:
  - csharp
  - vb
  name: SystemOperator
  fullName: System.Security.Principal.WindowsBuiltInRole.SystemOperator
  type: Field
  source:
    remote:
      path: src/System.Security.Principal.Windows/src/System/Security/Principal/WindowsPrincipal.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: SystemOperator
    path: src/System.Security.Principal.Windows/src/System/Security/Principal/WindowsPrincipal.cs
    startLine: 19
  assemblies:
  - System.Security.Principal.Windows
  namespace: System.Security.Principal
  summary: "\n<p>System operators manage a particular computer.</p>\n"
  syntax:
    content: SystemOperator = null
    content.vb: SystemOperator = Nothing
    return:
      type: System.Security.Principal.WindowsBuiltInRole
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Security.Principal.WindowsBuiltInRole.User
  commentId: F:System.Security.Principal.WindowsBuiltInRole.User
  id: User
  parent: System.Security.Principal.WindowsBuiltInRole
  langs:
  - csharp
  - vb
  name: User
  fullName: System.Security.Principal.WindowsBuiltInRole.User
  type: Field
  source:
    remote:
      path: src/System.Security.Principal.Windows/src/System/Security/Principal/WindowsPrincipal.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: User
    path: src/System.Security.Principal.Windows/src/System/Security/Principal/WindowsPrincipal.cs
    startLine: 15
  assemblies:
  - System.Security.Principal.Windows
  namespace: System.Security.Principal
  summary: "\n<p>Users are prevented from making accidental or intentional system-wide changes. Thus, users can run certified applications, but not most legacy applications.</p>\n"
  syntax:
    content: User = null
    content.vb: User = Nothing
    return:
      type: System.Security.Principal.WindowsBuiltInRole
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
references:
- uid: System.Security.Principal
  isExternal: false
  name: System.Security.Principal
  fullName: System.Security.Principal
- uid: System.Security.Principal.WindowsBuiltInRole
  parent: System.Security.Principal
  isExternal: false
  name: WindowsBuiltInRole
  fullName: System.Security.Principal.WindowsBuiltInRole
