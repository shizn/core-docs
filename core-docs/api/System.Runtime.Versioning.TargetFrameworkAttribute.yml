items:
- uid: System.Runtime.Versioning.TargetFrameworkAttribute
  commentId: T:System.Runtime.Versioning.TargetFrameworkAttribute
  id: TargetFrameworkAttribute
  parent: System.Runtime.Versioning
  children:
  - System.Runtime.Versioning.TargetFrameworkAttribute.#ctor(System.String)
  - System.Runtime.Versioning.TargetFrameworkAttribute.FrameworkDisplayName
  - System.Runtime.Versioning.TargetFrameworkAttribute.FrameworkName
  langs:
  - csharp
  - vb
  name: TargetFrameworkAttribute
  fullName: System.Runtime.Versioning.TargetFrameworkAttribute
  type: Class
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: TargetFrameworkAttribute
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 3058
  assemblies:
  - System.Runtime
  namespace: System.Runtime.Versioning
  summary: "\n<p>Identifies the version of the .NET Framework that a particular assembly was compiled against.</p>\n"
  remarks: "\n<p>The <xref href=\"System.Runtime.Versioning.TargetFrameworkAttribute\" data-throw-if-not-resolved=\"false\"></xref> class provides an attribute that you can apply to an assembly to indicate the version of the .NET Framework runtime against which the assembly was built. For example, the following example applies the <strong>TargetFrameworkAttribute</strong> to an assembly to indicate that it was built using .NET Framework 4.</p>System.Runtime.Versioning.TargetFrameworkAttribute#1<p>The <xref href=\"System.Runtime.Versioning.TargetFrameworkAttribute\" data-throw-if-not-resolved=\"false\"></xref> class constructor has a single parameter, <em>frameworkName</em>, that specifies the .NET Framework version against which the assembly was built. This parameter maps to the <xref href=\"System.Runtime.Versioning.TargetFrameworkAttribute.FrameworkName\" data-throw-if-not-resolved=\"false\"></xref> property. In addition, the <xref href=\"System.Runtime.Versioning.TargetFrameworkAttribute\" data-throw-if-not-resolved=\"false\"></xref> attribute can specify a <xref href=\"System.Runtime.Versioning.TargetFrameworkAttribute.FrameworkDisplayName\" data-throw-if-not-resolved=\"false\"></xref> property to provide a more descriptive .NET Framework version string that is suitable for displaying to clients of the assembly. The following example applies the <strong>TargetFrameworkAttribute</strong> to an assembly and assigns both property values to indicate that the assembly was built using .NET Framework 4. </p>System.Runtime.Versioning.TargetFrameworkAttribute#2"
  example:
  - 
  syntax:
    content: >-
      [AttributeUsage(AttributeTargets.Assembly, AllowMultiple = false, Inherited = false)]

      public sealed class TargetFrameworkAttribute : Attribute
    content.vb: >-
      <AttributeUsage(AttributeTargets.Assembly, AllowMultiple:=False, Inherited:=False)>

      Public NotInheritable Class TargetFrameworkAttribute
          Inherits Attribute
  seealso:
  - type: System.Runtime.Versioning.FrameworkName
    commentId: T:System.Runtime.Versioning.FrameworkName
  inheritance:
  - System.Object
  - System.Attribute
  inheritedMembers:
  - System.Attribute.Equals(System.Object)
  - System.Attribute.GetHashCode
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  attributes:
  - type: System.AttributeUsageAttribute
    ctor: System.AttributeUsageAttribute.#ctor(System.AttributeTargets)
    arguments:
    - type: System.AttributeTargets
      value: 1
    namedArguments:
    - name: AllowMultiple
      type: System.Boolean
      value: false
    - name: Inherited
      type: System.Boolean
      value: false
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: System.Runtime.Versioning.TargetFrameworkAttribute.#ctor(System.String)
  commentId: M:System.Runtime.Versioning.TargetFrameworkAttribute.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Runtime.Versioning.TargetFrameworkAttribute
  langs:
  - csharp
  - vb
  name: TargetFrameworkAttribute(String)
  fullName: System.Runtime.Versioning.TargetFrameworkAttribute.TargetFrameworkAttribute(System.String)
  type: Constructor
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 3061
  assemblies:
  - System.Runtime
  namespace: System.Runtime.Versioning
  summary: "\n<p>Initializes an instance of the <xref href=\"System.Runtime.Versioning.TargetFrameworkAttribute\" data-throw-if-not-resolved=\"false\"></xref> class by specifying the .NET Framework version against which an assembly was built.</p>\n"
  remarks: "\n<p>The string that is assigned to the <em>frameworkName</em> parameter generally takes the same form as the string that is returned by the <xref href=\"System.Runtime.Versioning.FrameworkName.ToString\" data-throw-if-not-resolved=\"false\"></xref> method.</p>\n"
  example:
  - 
  syntax:
    content: public TargetFrameworkAttribute(string frameworkName)
    content.vb: Public Sub New(frameworkName As String)
    parameters:
    - id: frameworkName
      type: System.String
      description: "\n<p>The version of the .NET Framework against which the assembly was built.</p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>frameworkName</em> is <strong>null</strong>.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Runtime.Versioning.TargetFrameworkAttribute.FrameworkDisplayName
  commentId: P:System.Runtime.Versioning.TargetFrameworkAttribute.FrameworkDisplayName
  id: FrameworkDisplayName
  parent: System.Runtime.Versioning.TargetFrameworkAttribute
  langs:
  - csharp
  - vb
  name: FrameworkDisplayName
  fullName: System.Runtime.Versioning.TargetFrameworkAttribute.FrameworkDisplayName
  type: Property
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: FrameworkDisplayName
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 3062
  assemblies:
  - System.Runtime
  namespace: System.Runtime.Versioning
  summary: "\n<p>Gets the display name of the .NET Framework version against which an assembly was built.</p>\n"
  remarks: "\n<p>The <xref href=\"System.Runtime.Versioning.TargetFrameworkAttribute.FrameworkDisplayName\" data-throw-if-not-resolved=\"false\"></xref> property usually returns a relatively long descriptive string that is suitable for display to a user. </p>\n"
  example:
  - 
  syntax:
    content: public string FrameworkDisplayName { get; set; }
    content.vb: Public Property FrameworkDisplayName As String
    parameters: []
    return:
      type: System.String
      description: "\n<p>The display name of the .NET Framework version.</p>\n"
  seealso:
  - type: System.Runtime.Versioning.TargetFrameworkAttribute.FrameworkName
    commentId: P:System.Runtime.Versioning.TargetFrameworkAttribute.FrameworkName
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Runtime.Versioning.TargetFrameworkAttribute.FrameworkName
  commentId: P:System.Runtime.Versioning.TargetFrameworkAttribute.FrameworkName
  id: FrameworkName
  parent: System.Runtime.Versioning.TargetFrameworkAttribute
  langs:
  - csharp
  - vb
  name: FrameworkName
  fullName: System.Runtime.Versioning.TargetFrameworkAttribute.FrameworkName
  type: Property
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: FrameworkName
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 3063
  assemblies:
  - System.Runtime
  namespace: System.Runtime.Versioning
  summary: "\n<p>Gets the name of the .NET Framework version against which a particular assembly was compiled.</p>\n"
  remarks: "\n<p>The <xref href=\"System.Runtime.Versioning.TargetFrameworkAttribute.FrameworkName\" data-throw-if-not-resolved=\"false\"></xref> property maps to the <em>frameworkName</em> parameter of the <xref href=\"System.Runtime.Versioning.TargetFrameworkAttribute.#ctor(System.String)\" data-throw-if-not-resolved=\"false\"></xref> constructor. It represents the .NET Framework version in a compact form and typically corresponds to the string that is returned by the <xref href=\"System.Runtime.Versioning.FrameworkName.ToString\" data-throw-if-not-resolved=\"false\"></xref> method. </p>\n"
  example:
  - 
  syntax:
    content: public string FrameworkName { get; }
    content.vb: Public ReadOnly Property FrameworkName As String
    parameters: []
    return:
      type: System.String
      description: "\n<p>The name of the .NET Framework version with which the assembly was compiled.</p>\n"
  seealso:
  - type: System.Runtime.Versioning.TargetFrameworkAttribute.FrameworkDisplayName
    commentId: P:System.Runtime.Versioning.TargetFrameworkAttribute.FrameworkDisplayName
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: System.Runtime.Versioning
  isExternal: false
  name: System.Runtime.Versioning
  fullName: System.Runtime.Versioning
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System.Attribute
  parent: System
  isExternal: false
  name: Attribute
  fullName: System.Attribute
- uid: System.Attribute.Equals(System.Object)
  parent: System.Attribute
  isExternal: false
  name: Equals(Object)
  fullName: System.Attribute.Equals(System.Object)
  spec.csharp:
  - uid: System.Attribute.Equals(System.Object)
    name: Equals
    fullName: System.Attribute.Equals
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Attribute.Equals(System.Object)
    name: Equals
    fullName: System.Attribute.Equals
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
  - name: )
    fullName: )
- uid: System.Attribute.GetHashCode
  parent: System.Attribute
  isExternal: false
  name: GetHashCode()
  fullName: System.Attribute.GetHashCode()
  spec.csharp:
  - uid: System.Attribute.GetHashCode
    name: GetHashCode
    fullName: System.Attribute.GetHashCode
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Attribute.GetHashCode
    name: GetHashCode
    fullName: System.Attribute.GetHashCode
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: false
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: false
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
  - name: )
    fullName: )
- uid: System.Object.ToString
  parent: System.Object
  isExternal: false
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.String
  parent: System
  isExternal: false
  name: String
  fullName: System.String
- uid: System.ArgumentNullException
  isExternal: false
  name: ArgumentNullException
  fullName: System.ArgumentNullException
