items:
- uid: System.Xml.XmlConvert
  commentId: T:System.Xml.XmlConvert
  id: XmlConvert
  parent: System.Xml
  children:
  - System.Xml.XmlConvert.DecodeName(System.String)
  - System.Xml.XmlConvert.EncodeLocalName(System.String)
  - System.Xml.XmlConvert.EncodeName(System.String)
  - System.Xml.XmlConvert.EncodeNmToken(System.String)
  - System.Xml.XmlConvert.ToBoolean(System.String)
  - System.Xml.XmlConvert.ToByte(System.String)
  - System.Xml.XmlConvert.ToChar(System.String)
  - System.Xml.XmlConvert.ToDateTime(System.String,System.Xml.XmlDateTimeSerializationMode)
  - System.Xml.XmlConvert.ToDateTimeOffset(System.String)
  - System.Xml.XmlConvert.ToDateTimeOffset(System.String,System.String)
  - System.Xml.XmlConvert.ToDateTimeOffset(System.String,System.String[])
  - System.Xml.XmlConvert.ToDecimal(System.String)
  - System.Xml.XmlConvert.ToDouble(System.String)
  - System.Xml.XmlConvert.ToGuid(System.String)
  - System.Xml.XmlConvert.ToInt16(System.String)
  - System.Xml.XmlConvert.ToInt32(System.String)
  - System.Xml.XmlConvert.ToInt64(System.String)
  - System.Xml.XmlConvert.ToSByte(System.String)
  - System.Xml.XmlConvert.ToSingle(System.String)
  - System.Xml.XmlConvert.ToString(System.Boolean)
  - System.Xml.XmlConvert.ToString(System.Byte)
  - System.Xml.XmlConvert.ToString(System.Char)
  - System.Xml.XmlConvert.ToString(System.DateTime,System.Xml.XmlDateTimeSerializationMode)
  - System.Xml.XmlConvert.ToString(System.DateTimeOffset)
  - System.Xml.XmlConvert.ToString(System.DateTimeOffset,System.String)
  - System.Xml.XmlConvert.ToString(System.Decimal)
  - System.Xml.XmlConvert.ToString(System.Double)
  - System.Xml.XmlConvert.ToString(System.Guid)
  - System.Xml.XmlConvert.ToString(System.Int16)
  - System.Xml.XmlConvert.ToString(System.Int32)
  - System.Xml.XmlConvert.ToString(System.Int64)
  - System.Xml.XmlConvert.ToString(System.SByte)
  - System.Xml.XmlConvert.ToString(System.Single)
  - System.Xml.XmlConvert.ToString(System.TimeSpan)
  - System.Xml.XmlConvert.ToString(System.UInt16)
  - System.Xml.XmlConvert.ToString(System.UInt32)
  - System.Xml.XmlConvert.ToString(System.UInt64)
  - System.Xml.XmlConvert.ToTimeSpan(System.String)
  - System.Xml.XmlConvert.ToUInt16(System.String)
  - System.Xml.XmlConvert.ToUInt32(System.String)
  - System.Xml.XmlConvert.ToUInt64(System.String)
  - System.Xml.XmlConvert.VerifyName(System.String)
  - System.Xml.XmlConvert.VerifyNCName(System.String)
  - System.Xml.XmlConvert.VerifyNMTOKEN(System.String)
  - System.Xml.XmlConvert.VerifyPublicId(System.String)
  - System.Xml.XmlConvert.VerifyWhitespace(System.String)
  - System.Xml.XmlConvert.VerifyXmlChars(System.String)
  langs:
  - csharp
  - vb
  name: XmlConvert
  fullName: System.Xml.XmlConvert
  type: Class
  source:
    remote:
      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: XmlConvert
    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
    startLine: 71
  assemblies:
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: "\n<p>Encodes and decodes XML names, and provides methods for converting between common language runtime types and XML Schema definition language (XSD) types. When converting data types, the values returned are locale-independent.</p>\n"
  remarks: "\n<p>The <xref href=\"System.Xml.XmlConvert\" data-throw-if-not-resolved=\"false\"></xref> class is functionally equivalent to the <xref href=\"System.Convert\" data-throw-if-not-resolved=\"false\"></xref> class, but it supports XML standards. The type system is based on the XML Schema definition language (XSD) schema type, and the values returned are always locale-independent.</p>\n"
  syntax:
    content: public class XmlConvert
    content.vb: Public Class XmlConvert
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: System.Xml.XmlConvert.DecodeName(System.String)
  commentId: M:System.Xml.XmlConvert.DecodeName(System.String)
  id: DecodeName(System.String)
  parent: System.Xml.XmlConvert
  langs:
  - csharp
  - vb
  name: DecodeName(String)
  fullName: System.Xml.XmlConvert.DecodeName(System.String)
  type: Method
  source:
    remote:
      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: DecodeName
    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
    startLine: 73
  assemblies:
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: "\n<p>Decodes a name. This method does the reverse of the <xref href=\"System.Xml.XmlConvert.EncodeName(System.String)\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"System.Xml.XmlConvert.EncodeLocalName(System.String)\" data-throw-if-not-resolved=\"false\"></xref> methods.</p>\n"
  remarks: "\n<p>The names are decoded using the following rules: </p>\n<ul><li>\n<p>Names are decoded from left to right.</p>\n</li><li>\n<p>Any sequence _x <em>HHHH_</em> (where HHHH stands for a valid, four digit hexadecimal UCS-2 code) that has not been decoded is transformed into the corresponding Unicode 2.1 (Unicode 3.0 if supported by the application) character.</p>\n</li><li>\n<p>No shortforms are recognized. They are passed on without translation. For example, _x20_ or __ are not decoded.</p>\n</li></ul>\n<p>The actual encoding of the character is application-specific. For example, Order_x0020_Details becomes Order Details. Even escaped characters that are invalid in XML names will be recognized and decoded.</p>\n"
  example:
  - "\n<p>The following example encodes and decodes names.</p>XmlConvert.EncodeName#1"
  syntax:
    content: public static string DecodeName(string name)
    content.vb: Public Shared Function DecodeName(name As String) As String
    parameters:
    - id: name
      type: System.String
      description: "\n<p>The name to be transformed. </p>\n"
    return:
      type: System.String
      description: "\n<p>The decoded name.</p>\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Xml.XmlConvert.EncodeLocalName(System.String)
  commentId: M:System.Xml.XmlConvert.EncodeLocalName(System.String)
  id: EncodeLocalName(System.String)
  parent: System.Xml.XmlConvert
  langs:
  - csharp
  - vb
  name: EncodeLocalName(String)
  fullName: System.Xml.XmlConvert.EncodeLocalName(System.String)
  type: Method
  source:
    remote:
      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: EncodeLocalName
    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
    startLine: 74
  assemblies:
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: "\n<p>Converts the name to a valid XML local name.</p>\n"
  remarks: "\n<p>This method is similar to the <xref href=\"System.Xml.XmlConvert.EncodeName(System.String)\" data-throw-if-not-resolved=\"false\"></xref> method except that it encodes the colon character, which guarantees that the name can be used as the local name part of a namespace qualified name.</p>\n<p>For example, if you passed this method the invalid name a:b, it returns a_x003a_b, which is a valid local name.</p>\n<p>If <em>name</em> is <strong>null</strong> or <code>String.Empty</code> then you get the same value returned.</p>\n"
  example:
  - "\n<p>The following example encodes and decodes names.</p>XmlConvert.EncodeName#1"
  syntax:
    content: public static string EncodeLocalName(string name)
    content.vb: Public Shared Function EncodeLocalName(name As String) As String
    parameters:
    - id: name
      type: System.String
      description: "\n<p>The name to be encoded. </p>\n"
    return:
      type: System.String
      description: "\n<p>The encoded name.</p>\n"
  seealso:
  - type: System.Xml.XmlConvert.EncodeName(System.String)
    commentId: M:System.Xml.XmlConvert.EncodeName(System.String)
  - type: System.Xml.XmlConvert.DecodeName(System.String)
    commentId: M:System.Xml.XmlConvert.DecodeName(System.String)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Xml.XmlConvert.EncodeName(System.String)
  commentId: M:System.Xml.XmlConvert.EncodeName(System.String)
  id: EncodeName(System.String)
  parent: System.Xml.XmlConvert
  langs:
  - csharp
  - vb
  name: EncodeName(String)
  fullName: System.Xml.XmlConvert.EncodeName(System.String)
  type: Method
  source:
    remote:
      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: EncodeName
    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
    startLine: 75
  assemblies:
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: "\n<p>Converts the name to a valid XML name.</p>\n"
  remarks: "\n<p>This method translates invalid characters, such as spaces or half-width Katakana, that need to be mapped to XML names without the support or presence of schemas. The invalid characters are translated into escaped numeric entity encodings.</p>\n<p>The escape character is \"_\". Any XML name character that does not conform to the <see href=\"http://www.w3.org/TR/2006/REC-xml-20060816/\">XML 1.0 spec (fourth edition) recommendation</see> is escaped as _xHHHH_. The HHHH string stands for the four-digit hexadecimal UCS-2 code for the character in most significant bit first order. For example, the name Order Details is encoded as Order_x0020_Details.</p>\n<p>The underscore character does not need to be escaped unless it is followed by a character sequence that together with the underscore can be misinterpreted as an escape sequence when decoding the name. For example, Order_Details is not encoded, but Order_x0020_ is encoded as Order_x005f_x0020_. No shortforms are allowed. For example, the forms _x20_ and __ are not generated.</p>\n<p>This method guarantees the name is valid according to the XML specification. It allows colons in any position, which means the name may still be invalid according to the <see href=\"http://www.w3.org/TR/REC-xml-names\">W3C Namespace Specification</see>. To guarantee it is a valid namespace qualified name use <xref href=\"System.Xml.XmlConvert.EncodeLocalName(System.String)\" data-throw-if-not-resolved=\"false\"></xref> for the prefix and local name parts and join the result with a colon.</p>\n"
  example:
  - "\n<p>The following example encodes and decodes names.</p>XmlConvert.EncodeName#1"
  syntax:
    content: public static string EncodeName(string name)
    content.vb: Public Shared Function EncodeName(name As String) As String
    parameters:
    - id: name
      type: System.String
      description: "\n<p>A name to be translated. </p>\n"
    return:
      type: System.String
      description: "\n<p>Returns the name with any invalid characters replaced by an escape string.</p>\n"
  seealso:
  - type: System.Xml.XmlConvert.EncodeLocalName(System.String)
    commentId: M:System.Xml.XmlConvert.EncodeLocalName(System.String)
  - type: System.Xml.XmlConvert.DecodeName(System.String)
    commentId: M:System.Xml.XmlConvert.DecodeName(System.String)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Xml.XmlConvert.EncodeNmToken(System.String)
  commentId: M:System.Xml.XmlConvert.EncodeNmToken(System.String)
  id: EncodeNmToken(System.String)
  parent: System.Xml.XmlConvert
  langs:
  - csharp
  - vb
  name: EncodeNmToken(String)
  fullName: System.Xml.XmlConvert.EncodeNmToken(System.String)
  type: Method
  source:
    remote:
      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: EncodeNmToken
    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
    startLine: 76
  assemblies:
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: "\n<p>Verifies the name is valid according to the XML specification.</p>\n"
  remarks: "\n<p>This method guarantees that the name is valid according to the XML specification. For example, if you passed this method the invalid name 70+, it returns 70_x002b_ which is a valid XML name.</p>\n<p>If <em>name</em> is <strong>null</strong> or String.Empty then you get the same value returned.</p>\n"
  syntax:
    content: public static string EncodeNmToken(string name)
    content.vb: Public Shared Function EncodeNmToken(name As String) As String
    parameters:
    - id: name
      type: System.String
      description: "\n<p>The name to be encoded. </p>\n"
    return:
      type: System.String
      description: "\n<p>The encoded name.</p>\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Xml.XmlConvert.ToBoolean(System.String)
  commentId: M:System.Xml.XmlConvert.ToBoolean(System.String)
  id: ToBoolean(System.String)
  parent: System.Xml.XmlConvert
  langs:
  - csharp
  - vb
  name: ToBoolean(String)
  fullName: System.Xml.XmlConvert.ToBoolean(System.String)
  type: Method
  source:
    remote:
      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ToBoolean
    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
    startLine: 77
  assemblies:
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: "\n<p>Converts the <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref> to a <xref href=\"System.Boolean\" data-throw-if-not-resolved=\"false\"></xref> equivalent.</p>\n"
  remarks: "\n<p>Valid strings are \"1\" or \"true\" for <strong>true</strong> and \"0\" or \"false\" for <strong>false</strong>.</p>\n"
  syntax:
    content: public static bool ToBoolean(string s)
    content.vb: Public Shared Function ToBoolean(s As String) As Boolean
    parameters:
    - id: s
      type: System.String
      description: "\n<p>The string to convert. </p>\n"
    return:
      type: System.Boolean
      description: "\n<p>A <strong>Boolean</strong> value, that is, <strong>true</strong> or <strong>false</strong>.</p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>s</em> is <strong>null</strong>. </p>\n"
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "\n<p>\n<em>s</em> does not represent a <strong>Boolean</strong> value. </p>\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Xml.XmlConvert.ToByte(System.String)
  commentId: M:System.Xml.XmlConvert.ToByte(System.String)
  id: ToByte(System.String)
  parent: System.Xml.XmlConvert
  langs:
  - csharp
  - vb
  name: ToByte(String)
  fullName: System.Xml.XmlConvert.ToByte(System.String)
  type: Method
  source:
    remote:
      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ToByte
    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
    startLine: 78
  assemblies:
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: "\n<p>Converts the <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref> to a <xref href=\"System.Byte\" data-throw-if-not-resolved=\"false\"></xref> equivalent.</p>\n"
  syntax:
    content: public static byte ToByte(string s)
    content.vb: Public Shared Function ToByte(s As String) As Byte
    parameters:
    - id: s
      type: System.String
      description: "\n<p>The string to convert. </p>\n"
    return:
      type: System.Byte
      description: "\n<p>A <strong>Byte</strong> equivalent of the string.</p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>s</em> is <strong>null</strong>. </p>\n"
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "\n<p>\n<em>s</em> is not in the correct format. </p>\n"
  - type: System.OverflowException
    commentId: T:System.OverflowException
    description: "\n<p>\n<em>s</em> represents a number less than <xref href=\"System.Byte.MinValue\" data-throw-if-not-resolved=\"false\"></xref> or greater than <xref href=\"System.Byte.MaxValue\" data-throw-if-not-resolved=\"false\"></xref>. </p>\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Xml.XmlConvert.ToChar(System.String)
  commentId: M:System.Xml.XmlConvert.ToChar(System.String)
  id: ToChar(System.String)
  parent: System.Xml.XmlConvert
  langs:
  - csharp
  - vb
  name: ToChar(String)
  fullName: System.Xml.XmlConvert.ToChar(System.String)
  type: Method
  source:
    remote:
      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ToChar
    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
    startLine: 79
  assemblies:
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: "\n<p>Converts the <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref> to a <xref href=\"System.Char\" data-throw-if-not-resolved=\"false\"></xref> equivalent.</p>\n"
  syntax:
    content: public static char ToChar(string s)
    content.vb: Public Shared Function ToChar(s As String) As Char
    parameters:
    - id: s
      type: System.String
      description: "\n<p>The string containing a single character to convert. </p>\n"
    return:
      type: System.Char
      description: "\n<p>A <strong>Char</strong> representing the single character.</p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>The value of the <em>s</em> parameter is <strong>null</strong>. </p>\n"
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "\n<p>The <em>s</em> parameter contains more than one character. </p>\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Xml.XmlConvert.ToDateTime(System.String,System.Xml.XmlDateTimeSerializationMode)
  commentId: M:System.Xml.XmlConvert.ToDateTime(System.String,System.Xml.XmlDateTimeSerializationMode)
  id: ToDateTime(System.String,System.Xml.XmlDateTimeSerializationMode)
  parent: System.Xml.XmlConvert
  langs:
  - csharp
  - vb
  name: ToDateTime(String, XmlDateTimeSerializationMode)
  fullName: System.Xml.XmlConvert.ToDateTime(System.String, System.Xml.XmlDateTimeSerializationMode)
  type: Method
  source:
    remote:
      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ToDateTime
    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
    startLine: 80
  assemblies:
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: "\n<p>Converts the <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref> to a <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> using the <xref href=\"System.Xml.XmlDateTimeSerializationMode\" data-throw-if-not-resolved=\"false\"></xref> specified</p>\n"
  example:
  - 
  syntax:
    content: public static DateTime ToDateTime(string s, XmlDateTimeSerializationMode dateTimeOption)
    content.vb: Public Shared Function ToDateTime(s As String, dateTimeOption As XmlDateTimeSerializationMode) As Date
    parameters:
    - id: s
      type: System.String
      description: "\n<p>The <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref> value to convert.</p>\n"
    - id: dateTimeOption
      type: System.Xml.XmlDateTimeSerializationMode
      description: "\n<p>One of the <xref href=\"System.Xml.XmlDateTimeSerializationMode\" data-throw-if-not-resolved=\"false\"></xref> values that specify whether the date should be converted to local time or preserved as Coordinated Universal Time (UTC), if it is a UTC date.</p>\n"
    return:
      type: System.DateTime
      description: "\n<p>A <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> equivalent of the <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  exceptions:
  - type: System.NullReferenceException
    commentId: T:System.NullReferenceException
    description: "\n<p>\n<em>s</em> is <strong>null</strong>.</p>\n"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>The <em>dateTimeOption</em> value is <strong>null</strong>.</p>\n"
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "\n<p>\n<em>s</em> is an empty string or is not in a valid format.</p>\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Xml.XmlConvert.ToDateTimeOffset(System.String)
  commentId: M:System.Xml.XmlConvert.ToDateTimeOffset(System.String)
  id: ToDateTimeOffset(System.String)
  parent: System.Xml.XmlConvert
  langs:
  - csharp
  - vb
  name: ToDateTimeOffset(String)
  fullName: System.Xml.XmlConvert.ToDateTimeOffset(System.String)
  type: Method
  source:
    remote:
      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ToDateTimeOffset
    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
    startLine: 81
  assemblies:
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: "\n<p>Converts the supplied <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref> to a <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> equivalent.</p>\n"
  remarks: "\n<p>When more than seven digits are specified for fractional seconds, the value is rounded. For example, 00000004 becomes 0000000 and 00000005 becomes 0000001.</p>\n"
  example:
  - "\n<p>The following example demonstrates how to read a string from an XML file and use the <xref href=\"System.Xml.XmlConvert.ToDateTimeOffset(System.String)\" data-throw-if-not-resolved=\"false\"></xref> method to convert the string to a <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> type.</p>XmlConvert_ToDateTimeOffset_ex1#1<p>The example uses the transactions.xml file.</p><pre><code><?xml version=\"1.0\"?>\n<transactions>\n<transaction>\n<id>123456789</id>\n<amount>1.00</amount>\n<currency>USD</currency>\n<time>2007-08-03T22:05:13-07:00</time>\n</transaction>\n</transactions></code></pre>"
  syntax:
    content: public static DateTimeOffset ToDateTimeOffset(string s)
    content.vb: Public Shared Function ToDateTimeOffset(s As String) As DateTimeOffset
    parameters:
    - id: s
      type: System.String
      description: "\n<p>The string to convert.</p>\n<p>Note   The string must conform to a subset of the W3C Recommendation for the XML dateTime type. For more information see http://www.w3.org/TR/xmlschema-2/#dateTime.</p>\n"
    return:
      type: System.DateTimeOffset
      description: "\n<p>The <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> equivalent of the supplied string.</p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>s</em> is <strong>null</strong>. </p>\n"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>The argument passed to this method is outside the range of allowable values. For information about allowable values, see <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "\n<p>The argument passed to this method does not conform to a subset of the W3C Recommendations for the XML dateTime type. For more information see <see href=\"http://go.microsoft.com/fwlink/?LinkId=97914\">http://www.w3.org/TR/xmlschema-2/#dateTime</see>.</p>\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Xml.XmlConvert.ToDateTimeOffset(System.String,System.String)
  commentId: M:System.Xml.XmlConvert.ToDateTimeOffset(System.String,System.String)
  id: ToDateTimeOffset(System.String,System.String)
  parent: System.Xml.XmlConvert
  langs:
  - csharp
  - vb
  name: ToDateTimeOffset(String, String)
  fullName: System.Xml.XmlConvert.ToDateTimeOffset(System.String, System.String)
  type: Method
  source:
    remote:
      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ToDateTimeOffset
    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
    startLine: 82
  assemblies:
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: "\n<p>Converts the supplied <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref> to a <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> equivalent.</p>\n"
  remarks: "\n<p>If the offset specified within the input string will cause an overflow in the deserialized representation of the DateTimeOffset, a FormatException is thrown.</p>\n<p>When more than seven digits are specified for fractional seconds, the value is rounded. For example, 00000004 becomes 0000000 and 00000005 becomes 0000001.</p>\n"
  example:
  - "\n<p>The following example demonstrates how to read a string from an XML file and use the <xref href=\"System.Xml.XmlConvert.ToDateTimeOffset(System.String,System.String)\" data-throw-if-not-resolved=\"false\"></xref> method to convert the string to a <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> type. The input string is validated against the specified format before being converted.</p>XmlConvert_ToDateTimeOffset_ex2#1<p>The example uses the transactions.xml file.</p><pre><code><?xml version=\"1.0\"?>\n<transactions>\n<transaction>\n<id>123456789</id>\n<amount>1.00</amount>\n<currency>USD</currency>\n<time>2007-08-03T22:05:13-07:00</time>\n</transaction>\n</transactions></code></pre>"
  syntax:
    content: public static DateTimeOffset ToDateTimeOffset(string s, string format)
    content.vb: Public Shared Function ToDateTimeOffset(s As String, format As String) As DateTimeOffset
    parameters:
    - id: s
      type: System.String
      description: "\n<p>The string to convert.</p>\n"
    - id: format
      type: System.String
      description: "\n<p>The format from which <em>s</em> is converted. The format parameter can be any subset of the W3C Recommendation for the XML dateTime type. (For more information see http://www.w3.org/TR/xmlschema-2/#dateTime.) The string <em>s</em> is validated against this format.</p>\n"
    return:
      type: System.DateTimeOffset
      description: "\n<p>The <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> equivalent of the supplied string.</p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>s</em> is <strong>null</strong>. </p>\n"
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "\n<p>\n<em>s</em> or <em>format</em> is an empty string or is not in the specified format.</p>\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Xml.XmlConvert.ToDateTimeOffset(System.String,System.String[])
  commentId: M:System.Xml.XmlConvert.ToDateTimeOffset(System.String,System.String[])
  id: ToDateTimeOffset(System.String,System.String[])
  parent: System.Xml.XmlConvert
  langs:
  - csharp
  - vb
  name: ToDateTimeOffset(String, String[])
  fullName: System.Xml.XmlConvert.ToDateTimeOffset(System.String, System.String[])
  type: Method
  source:
    remote:
      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ToDateTimeOffset
    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
    startLine: 83
  assemblies:
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: "\n<p>Converts the supplied <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref> to a <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> equivalent.</p>\n"
  remarks: "\n<p>If the offset specified within the input string will cause an overflow in the deserialized representation of the DateTimeOffset, a FormatException is thrown.</p>\n<p>When more than seven digits are specified for fractional seconds, the value is rounded. For example, 00000004 becomes 0000000 and 00000005 becomes 0000001.</p>\n"
  example:
  - "\n<p>The following example demonstrates how to read a string from an XML file and use the <xref href=\"System.Xml.XmlConvert.ToDateTimeOffset(System.String,System.String[])\" data-throw-if-not-resolved=\"false\"></xref> method to convert the string to a <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> type. The input string must validate against one of the specified formats before being converted.</p>XmlConvert_ToDateTimeOffset_ex3#1<p>The example uses the transactions.xml file.</p><pre><code><?xml version=\"1.0\"?>\n<transactions>\n<transaction>\n<id>123456789</id>\n<amount>1.00</amount>\n<currency>USD</currency>\n<time>2007-08-03T22:05:13-07:00</time>\n</transaction>\n</transactions></code></pre>"
  syntax:
    content: public static DateTimeOffset ToDateTimeOffset(string s, string[] formats)
    content.vb: Public Shared Function ToDateTimeOffset(s As String, formats As String()) As DateTimeOffset
    parameters:
    - id: s
      type: System.String
      description: "\n<p>The string to convert.</p>\n"
    - id: formats
      type: System.String[]
      description: "\n<p>An array of formats from which <em>s</em> can be converted. Each format in <em>formats</em> can be any subset of the W3C Recommendation for the XML dateTime type. (For more information see http://www.w3.org/TR/xmlschema-2/#dateTime.) The string <em>s</em> is validated against one of these formats.</p>\n"
    return:
      type: System.DateTimeOffset
      description: "\n<p>The <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> equivalent of the supplied string.</p>\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Xml.XmlConvert.ToDateTimeOffset(System.String, System.String())
  name.vb: ToDateTimeOffset(String, String())
- uid: System.Xml.XmlConvert.ToDecimal(System.String)
  commentId: M:System.Xml.XmlConvert.ToDecimal(System.String)
  id: ToDecimal(System.String)
  parent: System.Xml.XmlConvert
  langs:
  - csharp
  - vb
  name: ToDecimal(String)
  fullName: System.Xml.XmlConvert.ToDecimal(System.String)
  type: Method
  source:
    remote:
      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ToDecimal
    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
    startLine: 84
  assemblies:
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: "\n<p>Converts the <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref> to a <xref href=\"System.Decimal\" data-throw-if-not-resolved=\"false\"></xref> equivalent.</p>\n"
  syntax:
    content: public static decimal ToDecimal(string s)
    content.vb: Public Shared Function ToDecimal(s As String) As Decimal
    parameters:
    - id: s
      type: System.String
      description: "\n<p>The string to convert. </p>\n"
    return:
      type: System.Decimal
      description: "\n<p>A <strong>Decimal</strong> equivalent of the string.</p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>s</em> is <strong>null</strong>. </p>\n"
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "\n<p>\n<em>s</em> is not in the correct format. </p>\n"
  - type: System.OverflowException
    commentId: T:System.OverflowException
    description: "\n<p>\n<em>s</em> represents a number less than <xref href=\"System.Decimal.MinValue\" data-throw-if-not-resolved=\"false\"></xref> or greater than <xref href=\"System.Decimal.MaxValue\" data-throw-if-not-resolved=\"false\"></xref>. </p>\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Xml.XmlConvert.ToDouble(System.String)
  commentId: M:System.Xml.XmlConvert.ToDouble(System.String)
  id: ToDouble(System.String)
  parent: System.Xml.XmlConvert
  langs:
  - csharp
  - vb
  name: ToDouble(String)
  fullName: System.Xml.XmlConvert.ToDouble(System.String)
  type: Method
  source:
    remote:
      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ToDouble
    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
    startLine: 85
  assemblies:
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: "\n<p>Converts the <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref> to a <xref href=\"System.Double\" data-throw-if-not-resolved=\"false\"></xref> equivalent.</p>\n"
  remarks: "\n<p>If <em>s</em> is INF or -INF, this method returns Double.PositiveInfinity or Double.NegativeInfinity respectively.</p>\n"
  example:
  - "\n<p>The following example uses <strong>ToDouble</strong> and <xref href=\"System.Xml.XmlConvert.ToDateTime(System.String)\" data-throw-if-not-resolved=\"false\"></xref> to read strongly typed data.</p>XmlConvert.ToDouble#1<p>The example uses the file, <strong>orderData.xml</strong>, as input.</p>XmlConvert.ToDouble#2"
  syntax:
    content: public static double ToDouble(string s)
    content.vb: Public Shared Function ToDouble(s As String) As Double
    parameters:
    - id: s
      type: System.String
      description: "\n<p>The string to convert. </p>\n"
    return:
      type: System.Double
      description: "\n<p>A <strong>Double</strong> equivalent of the string.</p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>s</em> is <strong>null</strong>. </p>\n"
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "\n<p>\n<em>s</em> is not in the correct format. </p>\n"
  - type: System.OverflowException
    commentId: T:System.OverflowException
    description: "\n<p>\n<em>s</em> represents a number less than <xref href=\"System.Double.MinValue\" data-throw-if-not-resolved=\"false\"></xref> or greater than <xref href=\"System.Double.MaxValue\" data-throw-if-not-resolved=\"false\"></xref>. </p>\n"
  seealso:
  - type: System.Double.PositiveInfinity
    commentId: F:System.Double.PositiveInfinity
  - type: System.Double.NegativeInfinity
    commentId: F:System.Double.NegativeInfinity
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Xml.XmlConvert.ToGuid(System.String)
  commentId: M:System.Xml.XmlConvert.ToGuid(System.String)
  id: ToGuid(System.String)
  parent: System.Xml.XmlConvert
  langs:
  - csharp
  - vb
  name: ToGuid(String)
  fullName: System.Xml.XmlConvert.ToGuid(System.String)
  type: Method
  source:
    remote:
      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ToGuid
    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
    startLine: 86
  assemblies:
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: "\n<p>Converts the <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref> to a <xref href=\"System.Guid\" data-throw-if-not-resolved=\"false\"></xref> equivalent.</p>\n"
  syntax:
    content: public static Guid ToGuid(string s)
    content.vb: Public Shared Function ToGuid(s As String) As Guid
    parameters:
    - id: s
      type: System.String
      description: "\n<p>The string to convert. </p>\n"
    return:
      type: System.Guid
      description: "\n<p>A <strong>Guid</strong> equivalent of the string.</p>\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Xml.XmlConvert.ToInt16(System.String)
  commentId: M:System.Xml.XmlConvert.ToInt16(System.String)
  id: ToInt16(System.String)
  parent: System.Xml.XmlConvert
  langs:
  - csharp
  - vb
  name: ToInt16(String)
  fullName: System.Xml.XmlConvert.ToInt16(System.String)
  type: Method
  source:
    remote:
      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ToInt16
    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
    startLine: 87
  assemblies:
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: "\n<p>Converts the <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref> to a <xref href=\"System.Int16\" data-throw-if-not-resolved=\"false\"></xref> equivalent.</p>\n"
  syntax:
    content: public static short ToInt16(string s)
    content.vb: Public Shared Function ToInt16(s As String) As Short
    parameters:
    - id: s
      type: System.String
      description: "\n<p>The string to convert. </p>\n"
    return:
      type: System.Int16
      description: "\n<p>An <strong>Int16</strong> equivalent of the string.</p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>s</em> is <strong>null</strong>. </p>\n"
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "\n<p>\n<em>s</em> is not in the correct format. </p>\n"
  - type: System.OverflowException
    commentId: T:System.OverflowException
    description: "\n<p>\n<em>s</em> represents a number less than <xref href=\"System.Int16.MinValue\" data-throw-if-not-resolved=\"false\"></xref> or greater than <xref href=\"System.Int16.MaxValue\" data-throw-if-not-resolved=\"false\"></xref>. </p>\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Xml.XmlConvert.ToInt32(System.String)
  commentId: M:System.Xml.XmlConvert.ToInt32(System.String)
  id: ToInt32(System.String)
  parent: System.Xml.XmlConvert
  langs:
  - csharp
  - vb
  name: ToInt32(String)
  fullName: System.Xml.XmlConvert.ToInt32(System.String)
  type: Method
  source:
    remote:
      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ToInt32
    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
    startLine: 88
  assemblies:
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: "\n<p>Converts the <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref> to a <xref href=\"System.Int32\" data-throw-if-not-resolved=\"false\"></xref> equivalent.</p>\n"
  syntax:
    content: public static int ToInt32(string s)
    content.vb: Public Shared Function ToInt32(s As String) As Integer
    parameters:
    - id: s
      type: System.String
      description: "\n<p>The string to convert. </p>\n"
    return:
      type: System.Int32
      description: "\n<p>An <strong>Int32</strong> equivalent of the string.</p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>s</em> is <strong>null</strong>. </p>\n"
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "\n<p>\n<em>s</em> is not in the correct format. </p>\n"
  - type: System.OverflowException
    commentId: T:System.OverflowException
    description: "\n<p>\n<em>s</em> represents a number less than <xref href=\"System.Int32.MinValue\" data-throw-if-not-resolved=\"false\"></xref> or greater than <xref href=\"System.Int32.MaxValue\" data-throw-if-not-resolved=\"false\"></xref>. </p>\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Xml.XmlConvert.ToInt64(System.String)
  commentId: M:System.Xml.XmlConvert.ToInt64(System.String)
  id: ToInt64(System.String)
  parent: System.Xml.XmlConvert
  langs:
  - csharp
  - vb
  name: ToInt64(String)
  fullName: System.Xml.XmlConvert.ToInt64(System.String)
  type: Method
  source:
    remote:
      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ToInt64
    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
    startLine: 89
  assemblies:
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: "\n<p>Converts the <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref> to a <xref href=\"System.Int64\" data-throw-if-not-resolved=\"false\"></xref> equivalent.</p>\n"
  syntax:
    content: public static long ToInt64(string s)
    content.vb: Public Shared Function ToInt64(s As String) As Long
    parameters:
    - id: s
      type: System.String
      description: "\n<p>The string to convert. </p>\n"
    return:
      type: System.Int64
      description: "\n<p>An <strong>Int64</strong> equivalent of the string.</p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>s</em> is <strong>null</strong>. </p>\n"
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "\n<p>\n<em>s</em> is not in the correct format. </p>\n"
  - type: System.OverflowException
    commentId: T:System.OverflowException
    description: "\n<p>\n<em>s</em> represents a number less than <xref href=\"System.Int64.MinValue\" data-throw-if-not-resolved=\"false\"></xref> or greater than <xref href=\"System.Int64.MaxValue\" data-throw-if-not-resolved=\"false\"></xref>. </p>\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Xml.XmlConvert.ToSByte(System.String)
  commentId: M:System.Xml.XmlConvert.ToSByte(System.String)
  id: ToSByte(System.String)
  parent: System.Xml.XmlConvert
  langs:
  - csharp
  - vb
  name: ToSByte(String)
  fullName: System.Xml.XmlConvert.ToSByte(System.String)
  type: Method
  source:
    remote:
      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ToSByte
    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
    startLine: 90
  assemblies:
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: "\n<p>Converts the <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref> to a <xref href=\"System.SByte\" data-throw-if-not-resolved=\"false\"></xref> equivalent.</p>\n"
  syntax:
    content: >-
      [CLSCompliant(false)]

      public static sbyte ToSByte(string s)
    content.vb: >-
      <CLSCompliant(False)>

      Public Shared Function ToSByte(s As String) As SByte
    parameters:
    - id: s
      type: System.String
      description: "\n<p>The string to convert. </p>\n"
    return:
      type: System.SByte
      description: "\n<p>An <strong>SByte</strong> equivalent of the string.</p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>s</em> is <strong>null</strong>. </p>\n"
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "\n<p>\n<em>s</em> is not in the correct format. </p>\n"
  - type: System.OverflowException
    commentId: T:System.OverflowException
    description: "\n<p>\n<em>s</em> represents a number less than <xref href=\"System.SByte.MinValue\" data-throw-if-not-resolved=\"false\"></xref> or greater than <xref href=\"System.SByte.MaxValue\" data-throw-if-not-resolved=\"false\"></xref>. </p>\n"
  attributes:
  - type: System.CLSCompliantAttribute
    ctor: System.CLSCompliantAttribute.#ctor(System.Boolean)
    arguments:
    - type: System.Boolean
      value: false
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Xml.XmlConvert.ToSingle(System.String)
  commentId: M:System.Xml.XmlConvert.ToSingle(System.String)
  id: ToSingle(System.String)
  parent: System.Xml.XmlConvert
  langs:
  - csharp
  - vb
  name: ToSingle(String)
  fullName: System.Xml.XmlConvert.ToSingle(System.String)
  type: Method
  source:
    remote:
      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ToSingle
    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
    startLine: 92
  assemblies:
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: "\n<p>Converts the <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref> to a <xref href=\"System.Single\" data-throw-if-not-resolved=\"false\"></xref> equivalent.</p>\n"
  remarks: "\n<p>If <em>s</em> is INF or -INF, this method returns Single.PositiveInfinity or Single.NegativeInfinity respectively.</p>\n"
  syntax:
    content: public static float ToSingle(string s)
    content.vb: Public Shared Function ToSingle(s As String) As Single
    parameters:
    - id: s
      type: System.String
      description: "\n<p>The string to convert. </p>\n"
    return:
      type: System.Single
      description: "\n<p>A <strong>Single</strong> equivalent of the string.</p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>s</em> is <strong>null</strong>. </p>\n"
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "\n<p>\n<em>s</em> is not in the correct format. </p>\n"
  - type: System.OverflowException
    commentId: T:System.OverflowException
    description: "\n<p>\n<em>s</em> represents a number less than <xref href=\"System.Single.MinValue\" data-throw-if-not-resolved=\"false\"></xref> or greater than <xref href=\"System.Single.MaxValue\" data-throw-if-not-resolved=\"false\"></xref>. </p>\n"
  seealso:
  - type: System.Single.PositiveInfinity
    commentId: F:System.Single.PositiveInfinity
  - type: System.Single.NegativeInfinity
    commentId: F:System.Single.NegativeInfinity
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Xml.XmlConvert.ToString(System.Boolean)
  commentId: M:System.Xml.XmlConvert.ToString(System.Boolean)
  id: ToString(System.Boolean)
  parent: System.Xml.XmlConvert
  langs:
  - csharp
  - vb
  name: ToString(Boolean)
  fullName: System.Xml.XmlConvert.ToString(System.Boolean)
  type: Method
  source:
    remote:
      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ToString
    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
    startLine: 93
  assemblies:
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: "\n<p>Converts the <xref href=\"System.Boolean\" data-throw-if-not-resolved=\"false\"></xref> to a <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: public static string ToString(bool value)
    content.vb: Public Shared Function ToString(value As Boolean) As String
    parameters:
    - id: value
      type: System.Boolean
      description: "\n<p>The value to convert. </p>\n"
    return:
      type: System.String
      description: "\n<p>A string representation of the <strong>Boolean</strong>, that is, \"true\" or \"false\".</p>\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Xml.XmlConvert.ToString(System.Byte)
  commentId: M:System.Xml.XmlConvert.ToString(System.Byte)
  id: ToString(System.Byte)
  parent: System.Xml.XmlConvert
  langs:
  - csharp
  - vb
  name: ToString(Byte)
  fullName: System.Xml.XmlConvert.ToString(System.Byte)
  type: Method
  source:
    remote:
      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ToString
    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
    startLine: 94
  assemblies:
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: "\n<p>Converts the <xref href=\"System.Byte\" data-throw-if-not-resolved=\"false\"></xref> to a <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: public static string ToString(byte value)
    content.vb: Public Shared Function ToString(value As Byte) As String
    parameters:
    - id: value
      type: System.Byte
      description: "\n<p>The value to convert. </p>\n"
    return:
      type: System.String
      description: "\n<p>A string representation of the <strong>Byte</strong>.</p>\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Xml.XmlConvert.ToString(System.Char)
  commentId: M:System.Xml.XmlConvert.ToString(System.Char)
  id: ToString(System.Char)
  parent: System.Xml.XmlConvert
  langs:
  - csharp
  - vb
  name: ToString(Char)
  fullName: System.Xml.XmlConvert.ToString(System.Char)
  type: Method
  source:
    remote:
      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ToString
    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
    startLine: 95
  assemblies:
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: "\n<p>Converts the <xref href=\"System.Char\" data-throw-if-not-resolved=\"false\"></xref> to a <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: public static string ToString(char value)
    content.vb: Public Shared Function ToString(value As Char) As String
    parameters:
    - id: value
      type: System.Char
      description: "\n<p>The value to convert. </p>\n"
    return:
      type: System.String
      description: "\n<p>A string representation of the <strong>Char</strong>.</p>\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Xml.XmlConvert.ToString(System.DateTime,System.Xml.XmlDateTimeSerializationMode)
  commentId: M:System.Xml.XmlConvert.ToString(System.DateTime,System.Xml.XmlDateTimeSerializationMode)
  id: ToString(System.DateTime,System.Xml.XmlDateTimeSerializationMode)
  parent: System.Xml.XmlConvert
  langs:
  - csharp
  - vb
  name: ToString(DateTime, XmlDateTimeSerializationMode)
  fullName: System.Xml.XmlConvert.ToString(System.DateTime, System.Xml.XmlDateTimeSerializationMode)
  type: Method
  source:
    remote:
      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ToString
    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
    startLine: 96
  assemblies:
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: "\n<p>Converts the <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> to a <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref> using the <xref href=\"System.Xml.XmlDateTimeSerializationMode\" data-throw-if-not-resolved=\"false\"></xref> specified.</p>\n"
  example:
  - 
  syntax:
    content: public static string ToString(DateTime value, XmlDateTimeSerializationMode dateTimeOption)
    content.vb: Public Shared Function ToString(value As Date, dateTimeOption As XmlDateTimeSerializationMode) As String
    parameters:
    - id: value
      type: System.DateTime
      description: "\n<p>The <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> value to convert.</p>\n"
    - id: dateTimeOption
      type: System.Xml.XmlDateTimeSerializationMode
      description: "\n<p>One of the <xref href=\"System.Xml.XmlDateTimeSerializationMode\" data-throw-if-not-resolved=\"false\"></xref> values that specify how to treat the <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> value.</p>\n"
    return:
      type: System.String
      description: "\n<p>A <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref> equivalent of the <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<p>The <em>dateTimeOption</em> value is not valid.</p>\n"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>The <em>value</em> or <em>dateTimeOption</em> value is <strong>null</strong>.</p>\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Xml.XmlConvert.ToString(System.DateTimeOffset)
  commentId: M:System.Xml.XmlConvert.ToString(System.DateTimeOffset)
  id: ToString(System.DateTimeOffset)
  parent: System.Xml.XmlConvert
  langs:
  - csharp
  - vb
  name: ToString(DateTimeOffset)
  fullName: System.Xml.XmlConvert.ToString(System.DateTimeOffset)
  type: Method
  source:
    remote:
      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ToString
    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
    startLine: 97
  assemblies:
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: "\n<p>Converts the supplied <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> to a <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  example:
  - "\n<p>The following example converts a <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> representation of the current time to a <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref>.</p>XmlConvert_ToString_DTO#1"
  syntax:
    content: public static string ToString(DateTimeOffset value)
    content.vb: Public Shared Function ToString(value As DateTimeOffset) As String
    parameters:
    - id: value
      type: System.DateTimeOffset
      description: "\n<p>The <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> to be converted.</p>\n"
    return:
      type: System.String
      description: "\n<p>A <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref> representation of the supplied <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Xml.XmlConvert.ToString(System.DateTimeOffset,System.String)
  commentId: M:System.Xml.XmlConvert.ToString(System.DateTimeOffset,System.String)
  id: ToString(System.DateTimeOffset,System.String)
  parent: System.Xml.XmlConvert
  langs:
  - csharp
  - vb
  name: ToString(DateTimeOffset, String)
  fullName: System.Xml.XmlConvert.ToString(System.DateTimeOffset, System.String)
  type: Method
  source:
    remote:
      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ToString
    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
    startLine: 98
  assemblies:
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: "\n<p>Converts the supplied <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> to a <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref> in the specified format.</p>\n"
  example:
  - "\n<p>The following example converts a <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> representation of the current time to a <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref> in the specified format.</p>XmlConvert_ToString_DTO_Format#1"
  syntax:
    content: public static string ToString(DateTimeOffset value, string format)
    content.vb: Public Shared Function ToString(value As DateTimeOffset, format As String) As String
    parameters:
    - id: value
      type: System.DateTimeOffset
      description: "\n<p>The <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> to be converted.</p>\n"
    - id: format
      type: System.String
      description: "\n<p>The format to which <em>s</em> is converted. The format parameter can be any subset of the W3C Recommendation for the XML dateTime type. (For more information see http://www.w3.org/TR/xmlschema-2/#dateTime.)</p>\n"
    return:
      type: System.String
      description: "\n<p>A <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref> representation in the specified format of the supplied <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Xml.XmlConvert.ToString(System.Decimal)
  commentId: M:System.Xml.XmlConvert.ToString(System.Decimal)
  id: ToString(System.Decimal)
  parent: System.Xml.XmlConvert
  langs:
  - csharp
  - vb
  name: ToString(Decimal)
  fullName: System.Xml.XmlConvert.ToString(System.Decimal)
  type: Method
  source:
    remote:
      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ToString
    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
    startLine: 99
  assemblies:
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: "\n<p>Converts the <xref href=\"System.Decimal\" data-throw-if-not-resolved=\"false\"></xref> to a <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: public static string ToString(decimal value)
    content.vb: Public Shared Function ToString(value As Decimal) As String
    parameters:
    - id: value
      type: System.Decimal
      description: "\n<p>The value to convert. </p>\n"
    return:
      type: System.String
      description: "\n<p>A string representation of the <strong>Decimal</strong>.</p>\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Xml.XmlConvert.ToString(System.Double)
  commentId: M:System.Xml.XmlConvert.ToString(System.Double)
  id: ToString(System.Double)
  parent: System.Xml.XmlConvert
  langs:
  - csharp
  - vb
  name: ToString(Double)
  fullName: System.Xml.XmlConvert.ToString(System.Double)
  type: Method
  source:
    remote:
      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ToString
    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
    startLine: 100
  assemblies:
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: "\n<p>Converts the <xref href=\"System.Double\" data-throw-if-not-resolved=\"false\"></xref> to a <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  remarks: "\n<p>If <em>value</em> is Double.PositiveInfinity or Double.NegativeInfinity, this method returns the string INF or -INF respectively.</p>\n"
  example:
  - "\n<p>The following example, converts data types to string and then writes the information out to the console.</p>Classic WebData XmlConvert.ToString Example#1"
  syntax:
    content: public static string ToString(double value)
    content.vb: Public Shared Function ToString(value As Double) As String
    parameters:
    - id: value
      type: System.Double
      description: "\n<p>The value to convert. </p>\n"
    return:
      type: System.String
      description: "\n<p>A string representation of the <strong>Double</strong>.</p>\n"
  seealso:
  - type: System.Double.PositiveInfinity
    commentId: F:System.Double.PositiveInfinity
  - type: System.Double.NegativeInfinity
    commentId: F:System.Double.NegativeInfinity
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Xml.XmlConvert.ToString(System.Guid)
  commentId: M:System.Xml.XmlConvert.ToString(System.Guid)
  id: ToString(System.Guid)
  parent: System.Xml.XmlConvert
  langs:
  - csharp
  - vb
  name: ToString(Guid)
  fullName: System.Xml.XmlConvert.ToString(System.Guid)
  type: Method
  source:
    remote:
      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ToString
    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
    startLine: 101
  assemblies:
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: "\n<p>Converts the <xref href=\"System.Guid\" data-throw-if-not-resolved=\"false\"></xref> to a <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: public static string ToString(Guid value)
    content.vb: Public Shared Function ToString(value As Guid) As String
    parameters:
    - id: value
      type: System.Guid
      description: "\n<p>The value to convert. </p>\n"
    return:
      type: System.String
      description: "\n<p>A string representation of the <strong>Guid</strong>.</p>\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Xml.XmlConvert.ToString(System.Int16)
  commentId: M:System.Xml.XmlConvert.ToString(System.Int16)
  id: ToString(System.Int16)
  parent: System.Xml.XmlConvert
  langs:
  - csharp
  - vb
  name: ToString(Int16)
  fullName: System.Xml.XmlConvert.ToString(System.Int16)
  type: Method
  source:
    remote:
      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ToString
    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
    startLine: 102
  assemblies:
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: "\n<p>Converts the <xref href=\"System.Int16\" data-throw-if-not-resolved=\"false\"></xref> to a <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  example:
  - "\n<p>The following example, converts data types to string and then writes the information out to the console.</p>Classic WebData XmlConvert.ToString Example#1"
  syntax:
    content: public static string ToString(short value)
    content.vb: Public Shared Function ToString(value As Short) As String
    parameters:
    - id: value
      type: System.Int16
      description: "\n<p>The value to convert. </p>\n"
    return:
      type: System.String
      description: "\n<p>A string representation of the <strong>Int16</strong>.</p>\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Xml.XmlConvert.ToString(System.Int32)
  commentId: M:System.Xml.XmlConvert.ToString(System.Int32)
  id: ToString(System.Int32)
  parent: System.Xml.XmlConvert
  langs:
  - csharp
  - vb
  name: ToString(Int32)
  fullName: System.Xml.XmlConvert.ToString(System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ToString
    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
    startLine: 103
  assemblies:
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: "\n<p>Converts the <xref href=\"System.Int32\" data-throw-if-not-resolved=\"false\"></xref> to a <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: public static string ToString(int value)
    content.vb: Public Shared Function ToString(value As Integer) As String
    parameters:
    - id: value
      type: System.Int32
      description: "\n<p>The value to convert. </p>\n"
    return:
      type: System.String
      description: "\n<p>A string representation of the <strong>Int32</strong>.</p>\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Xml.XmlConvert.ToString(System.Int64)
  commentId: M:System.Xml.XmlConvert.ToString(System.Int64)
  id: ToString(System.Int64)
  parent: System.Xml.XmlConvert
  langs:
  - csharp
  - vb
  name: ToString(Int64)
  fullName: System.Xml.XmlConvert.ToString(System.Int64)
  type: Method
  source:
    remote:
      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ToString
    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
    startLine: 104
  assemblies:
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: "\n<p>Converts the <xref href=\"System.Int64\" data-throw-if-not-resolved=\"false\"></xref> to a <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: public static string ToString(long value)
    content.vb: Public Shared Function ToString(value As Long) As String
    parameters:
    - id: value
      type: System.Int64
      description: "\n<p>The value to convert. </p>\n"
    return:
      type: System.String
      description: "\n<p>A string representation of the <strong>Int64</strong>.</p>\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Xml.XmlConvert.ToString(System.SByte)
  commentId: M:System.Xml.XmlConvert.ToString(System.SByte)
  id: ToString(System.SByte)
  parent: System.Xml.XmlConvert
  langs:
  - csharp
  - vb
  name: ToString(SByte)
  fullName: System.Xml.XmlConvert.ToString(System.SByte)
  type: Method
  source:
    remote:
      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ToString
    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
    startLine: 105
  assemblies:
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: "\n<p>Converts the <xref href=\"System.SByte\" data-throw-if-not-resolved=\"false\"></xref> to a <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: >-
      [CLSCompliant(false)]

      public static string ToString(sbyte value)
    content.vb: >-
      <CLSCompliant(False)>

      Public Shared Function ToString(value As SByte) As String
    parameters:
    - id: value
      type: System.SByte
      description: "\n<p>The value to convert. </p>\n"
    return:
      type: System.String
      description: "\n<p>A string representation of the <strong>SByte</strong>.</p>\n"
  attributes:
  - type: System.CLSCompliantAttribute
    ctor: System.CLSCompliantAttribute.#ctor(System.Boolean)
    arguments:
    - type: System.Boolean
      value: false
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Xml.XmlConvert.ToString(System.Single)
  commentId: M:System.Xml.XmlConvert.ToString(System.Single)
  id: ToString(System.Single)
  parent: System.Xml.XmlConvert
  langs:
  - csharp
  - vb
  name: ToString(Single)
  fullName: System.Xml.XmlConvert.ToString(System.Single)
  type: Method
  source:
    remote:
      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ToString
    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
    startLine: 107
  assemblies:
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: "\n<p>Converts the <xref href=\"System.Single\" data-throw-if-not-resolved=\"false\"></xref> to a <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  remarks: "\n<p>If <em>value</em> is Single.PositiveInfinity or Single.NegativeInfinity, this method returns the string INF or -INF respectively.</p>\n"
  syntax:
    content: public static string ToString(float value)
    content.vb: Public Shared Function ToString(value As Single) As String
    parameters:
    - id: value
      type: System.Single
      description: "\n<p>The value to convert. </p>\n"
    return:
      type: System.String
      description: "\n<p>A string representation of the <strong>Single</strong>.</p>\n"
  seealso:
  - type: System.Single.PositiveInfinity
    commentId: F:System.Single.PositiveInfinity
  - type: System.Single.NegativeInfinity
    commentId: F:System.Single.NegativeInfinity
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Xml.XmlConvert.ToString(System.TimeSpan)
  commentId: M:System.Xml.XmlConvert.ToString(System.TimeSpan)
  id: ToString(System.TimeSpan)
  parent: System.Xml.XmlConvert
  langs:
  - csharp
  - vb
  name: ToString(TimeSpan)
  fullName: System.Xml.XmlConvert.ToString(System.TimeSpan)
  type: Method
  source:
    remote:
      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ToString
    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
    startLine: 108
  assemblies:
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: "\n<p>Converts the <xref href=\"System.TimeSpan\" data-throw-if-not-resolved=\"false\"></xref> to a <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: public static string ToString(TimeSpan value)
    content.vb: Public Shared Function ToString(value As TimeSpan) As String
    parameters:
    - id: value
      type: System.TimeSpan
      description: "\n<p>The value to convert. </p>\n"
    return:
      type: System.String
      description: "\n<p>A string representation of the <strong>TimeSpan</strong>.</p>\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Xml.XmlConvert.ToString(System.UInt16)
  commentId: M:System.Xml.XmlConvert.ToString(System.UInt16)
  id: ToString(System.UInt16)
  parent: System.Xml.XmlConvert
  langs:
  - csharp
  - vb
  name: ToString(UInt16)
  fullName: System.Xml.XmlConvert.ToString(System.UInt16)
  type: Method
  source:
    remote:
      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ToString
    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
    startLine: 109
  assemblies:
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: "\n<p>Converts the <xref href=\"System.UInt16\" data-throw-if-not-resolved=\"false\"></xref> to a <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: >-
      [CLSCompliant(false)]

      public static string ToString(ushort value)
    content.vb: >-
      <CLSCompliant(False)>

      Public Shared Function ToString(value As UShort) As String
    parameters:
    - id: value
      type: System.UInt16
      description: "\n<p>The value to convert. </p>\n"
    return:
      type: System.String
      description: "\n<p>A string representation of the <strong>UInt16</strong>.</p>\n"
  attributes:
  - type: System.CLSCompliantAttribute
    ctor: System.CLSCompliantAttribute.#ctor(System.Boolean)
    arguments:
    - type: System.Boolean
      value: false
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Xml.XmlConvert.ToString(System.UInt32)
  commentId: M:System.Xml.XmlConvert.ToString(System.UInt32)
  id: ToString(System.UInt32)
  parent: System.Xml.XmlConvert
  langs:
  - csharp
  - vb
  name: ToString(UInt32)
  fullName: System.Xml.XmlConvert.ToString(System.UInt32)
  type: Method
  source:
    remote:
      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ToString
    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
    startLine: 111
  assemblies:
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: "\n<p>Converts the <xref href=\"System.UInt32\" data-throw-if-not-resolved=\"false\"></xref> to a <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: >-
      [CLSCompliant(false)]

      public static string ToString(uint value)
    content.vb: >-
      <CLSCompliant(False)>

      Public Shared Function ToString(value As UInteger) As String
    parameters:
    - id: value
      type: System.UInt32
      description: "\n<p>The value to convert. </p>\n"
    return:
      type: System.String
      description: "\n<p>A string representation of the <strong>UInt32</strong>.</p>\n"
  attributes:
  - type: System.CLSCompliantAttribute
    ctor: System.CLSCompliantAttribute.#ctor(System.Boolean)
    arguments:
    - type: System.Boolean
      value: false
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Xml.XmlConvert.ToString(System.UInt64)
  commentId: M:System.Xml.XmlConvert.ToString(System.UInt64)
  id: ToString(System.UInt64)
  parent: System.Xml.XmlConvert
  langs:
  - csharp
  - vb
  name: ToString(UInt64)
  fullName: System.Xml.XmlConvert.ToString(System.UInt64)
  type: Method
  source:
    remote:
      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ToString
    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
    startLine: 113
  assemblies:
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: "\n<p>Converts the <xref href=\"System.UInt64\" data-throw-if-not-resolved=\"false\"></xref> to a <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: >-
      [CLSCompliant(false)]

      public static string ToString(ulong value)
    content.vb: >-
      <CLSCompliant(False)>

      Public Shared Function ToString(value As ULong) As String
    parameters:
    - id: value
      type: System.UInt64
      description: "\n<p>The value to convert. </p>\n"
    return:
      type: System.String
      description: "\n<p>A string representation of the <strong>UInt64</strong>.</p>\n"
  attributes:
  - type: System.CLSCompliantAttribute
    ctor: System.CLSCompliantAttribute.#ctor(System.Boolean)
    arguments:
    - type: System.Boolean
      value: false
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Xml.XmlConvert.ToTimeSpan(System.String)
  commentId: M:System.Xml.XmlConvert.ToTimeSpan(System.String)
  id: ToTimeSpan(System.String)
  parent: System.Xml.XmlConvert
  langs:
  - csharp
  - vb
  name: ToTimeSpan(String)
  fullName: System.Xml.XmlConvert.ToTimeSpan(System.String)
  type: Method
  source:
    remote:
      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ToTimeSpan
    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
    startLine: 115
  assemblies:
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: "\n<p>Converts the <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref> to a <xref href=\"System.TimeSpan\" data-throw-if-not-resolved=\"false\"></xref> equivalent.</p>\n"
  syntax:
    content: public static TimeSpan ToTimeSpan(string s)
    content.vb: Public Shared Function ToTimeSpan(s As String) As TimeSpan
    parameters:
    - id: s
      type: System.String
      description: "\n<p>The string to convert. The string format must conform to the W3C XML Schema Part 2: Datatypes recommendation for duration.</p>\n"
    return:
      type: System.TimeSpan
      description: "\n<p>A <strong>TimeSpan</strong> equivalent of the string.</p>\n"
  exceptions:
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "\n<p>\n<em>s</em> is not in correct format to represent a <strong>TimeSpan</strong> value. </p>\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Xml.XmlConvert.ToUInt16(System.String)
  commentId: M:System.Xml.XmlConvert.ToUInt16(System.String)
  id: ToUInt16(System.String)
  parent: System.Xml.XmlConvert
  langs:
  - csharp
  - vb
  name: ToUInt16(String)
  fullName: System.Xml.XmlConvert.ToUInt16(System.String)
  type: Method
  source:
    remote:
      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ToUInt16
    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
    startLine: 116
  assemblies:
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: "\n<p>Converts the <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref> to a <xref href=\"System.UInt16\" data-throw-if-not-resolved=\"false\"></xref> equivalent.</p>\n"
  syntax:
    content: >-
      [CLSCompliant(false)]

      public static ushort ToUInt16(string s)
    content.vb: >-
      <CLSCompliant(False)>

      Public Shared Function ToUInt16(s As String) As UShort
    parameters:
    - id: s
      type: System.String
      description: "\n<p>The string to convert. </p>\n"
    return:
      type: System.UInt16
      description: "\n<p>A <strong>UInt16</strong> equivalent of the string.</p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>s</em> is <strong>null</strong>. </p>\n"
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "\n<p>\n<em>s</em> is not in the correct format. </p>\n"
  - type: System.OverflowException
    commentId: T:System.OverflowException
    description: "\n<p>\n<em>s</em> represents a number less than <xref href=\"System.UInt16.MinValue\" data-throw-if-not-resolved=\"false\"></xref> or greater than <xref href=\"System.UInt16.MaxValue\" data-throw-if-not-resolved=\"false\"></xref>. </p>\n"
  attributes:
  - type: System.CLSCompliantAttribute
    ctor: System.CLSCompliantAttribute.#ctor(System.Boolean)
    arguments:
    - type: System.Boolean
      value: false
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Xml.XmlConvert.ToUInt32(System.String)
  commentId: M:System.Xml.XmlConvert.ToUInt32(System.String)
  id: ToUInt32(System.String)
  parent: System.Xml.XmlConvert
  langs:
  - csharp
  - vb
  name: ToUInt32(String)
  fullName: System.Xml.XmlConvert.ToUInt32(System.String)
  type: Method
  source:
    remote:
      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ToUInt32
    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
    startLine: 118
  assemblies:
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: "\n<p>Converts the <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref> to a <xref href=\"System.UInt32\" data-throw-if-not-resolved=\"false\"></xref> equivalent.</p>\n"
  syntax:
    content: >-
      [CLSCompliant(false)]

      public static uint ToUInt32(string s)
    content.vb: >-
      <CLSCompliant(False)>

      Public Shared Function ToUInt32(s As String) As UInteger
    parameters:
    - id: s
      type: System.String
      description: "\n<p>The string to convert. </p>\n"
    return:
      type: System.UInt32
      description: "\n<p>A <strong>UInt32</strong> equivalent of the string.</p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>s</em> is <strong>null</strong>. </p>\n"
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "\n<p>\n<em>s</em> is not in the correct format. </p>\n"
  - type: System.OverflowException
    commentId: T:System.OverflowException
    description: "\n<p>\n<em>s</em> represents a number less than <xref href=\"System.UInt32.MinValue\" data-throw-if-not-resolved=\"false\"></xref> or greater than <xref href=\"System.UInt32.MaxValue\" data-throw-if-not-resolved=\"false\"></xref>. </p>\n"
  attributes:
  - type: System.CLSCompliantAttribute
    ctor: System.CLSCompliantAttribute.#ctor(System.Boolean)
    arguments:
    - type: System.Boolean
      value: false
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Xml.XmlConvert.ToUInt64(System.String)
  commentId: M:System.Xml.XmlConvert.ToUInt64(System.String)
  id: ToUInt64(System.String)
  parent: System.Xml.XmlConvert
  langs:
  - csharp
  - vb
  name: ToUInt64(String)
  fullName: System.Xml.XmlConvert.ToUInt64(System.String)
  type: Method
  source:
    remote:
      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ToUInt64
    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
    startLine: 120
  assemblies:
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: "\n<p>Converts the <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref> to a <xref href=\"System.UInt64\" data-throw-if-not-resolved=\"false\"></xref> equivalent.</p>\n"
  syntax:
    content: >-
      [CLSCompliant(false)]

      public static ulong ToUInt64(string s)
    content.vb: >-
      <CLSCompliant(False)>

      Public Shared Function ToUInt64(s As String) As ULong
    parameters:
    - id: s
      type: System.String
      description: "\n<p>The string to convert. </p>\n"
    return:
      type: System.UInt64
      description: "\n<p>A <strong>UInt64</strong> equivalent of the string.</p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>s</em> is <strong>null</strong>. </p>\n"
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "\n<p>\n<em>s</em> is not in the correct format. </p>\n"
  - type: System.OverflowException
    commentId: T:System.OverflowException
    description: "\n<p>\n<em>s</em> represents a number less than <xref href=\"System.UInt64.MinValue\" data-throw-if-not-resolved=\"false\"></xref> or greater than <xref href=\"System.UInt64.MaxValue\" data-throw-if-not-resolved=\"false\"></xref>. </p>\n"
  attributes:
  - type: System.CLSCompliantAttribute
    ctor: System.CLSCompliantAttribute.#ctor(System.Boolean)
    arguments:
    - type: System.Boolean
      value: false
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Xml.XmlConvert.VerifyName(System.String)
  commentId: M:System.Xml.XmlConvert.VerifyName(System.String)
  id: VerifyName(System.String)
  parent: System.Xml.XmlConvert
  langs:
  - csharp
  - vb
  name: VerifyName(String)
  fullName: System.Xml.XmlConvert.VerifyName(System.String)
  type: Method
  source:
    remote:
      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: VerifyName
    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
    startLine: 122
  assemblies:
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: "\n<p>Verifies that the name is a valid name according to the W3C Extended Markup Language recommendation.</p>\n"
  remarks: "\n<p>This method can be used with the <xref href=\"System.Xml.XmlWriter\" data-throw-if-not-resolved=\"false\"></xref> class in the following manner.</p>\n<pre><code> try{\nwriter.WriteStartElement(XmlConvert.VerifyName(\"item\"),\"bar\");\n}\ncatch(Exception e)\n{\nConsole.WriteLine(\"error\");\n}</code></pre>\n"
  example:
  - "\n<p>The following example uses the <strong>VerifyName</strong> method to write an element name.</p>XmlConvert.VerifyName#1"
  syntax:
    content: public static string VerifyName(string name)
    content.vb: Public Shared Function VerifyName(name As String) As String
    parameters:
    - id: name
      type: System.String
      description: "\n<p>The name to verify. </p>\n"
    return:
      type: System.String
      description: "\n<p>The name, if it is a valid XML name.</p>\n"
  exceptions:
  - type: System.Xml.XmlException
    commentId: T:System.Xml.XmlException
    description: "\n<p>\n<em>name</em> is not a valid XML name. </p>\n"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>name</em> is <strong>null</strong> or String.Empty. </p>\n"
  seealso:
  - type: System.Xml.XmlConvert.VerifyNCName(System.String)
    commentId: M:System.Xml.XmlConvert.VerifyNCName(System.String)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Xml.XmlConvert.VerifyNCName(System.String)
  commentId: M:System.Xml.XmlConvert.VerifyNCName(System.String)
  id: VerifyNCName(System.String)
  parent: System.Xml.XmlConvert
  langs:
  - csharp
  - vb
  name: VerifyNCName(String)
  fullName: System.Xml.XmlConvert.VerifyNCName(System.String)
  type: Method
  source:
    remote:
      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: VerifyNCName
    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
    startLine: 123
  assemblies:
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: "\n<p>Verifies that the name is a valid <strong>NCName</strong> according to the W3C Extended Markup Language recommendation. An <strong>NCName</strong> is a name that cannot contain a colon.</p>\n"
  syntax:
    content: public static string VerifyNCName(string name)
    content.vb: Public Shared Function VerifyNCName(name As String) As String
    parameters:
    - id: name
      type: System.String
      description: "\n<p>The name to verify. </p>\n"
    return:
      type: System.String
      description: "\n<p>The name, if it is a valid NCName.</p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>name</em> is <strong>null</strong> or <code>String.Empty</code>. </p>\n"
  - type: System.Xml.XmlException
    commentId: T:System.Xml.XmlException
    description: "\n<p>\n<em>name</em> is not a valid non-colon name. </p>\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Xml.XmlConvert.VerifyNMTOKEN(System.String)
  commentId: M:System.Xml.XmlConvert.VerifyNMTOKEN(System.String)
  id: VerifyNMTOKEN(System.String)
  parent: System.Xml.XmlConvert
  langs:
  - csharp
  - vb
  name: VerifyNMTOKEN(String)
  fullName: System.Xml.XmlConvert.VerifyNMTOKEN(System.String)
  type: Method
  source:
    remote:
      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: VerifyNMTOKEN
    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
    startLine: 124
  assemblies:
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: "\n<p>Verifies that the string is a valid NMTOKEN according to the W3C XML Schema Part2: Datatypes recommendation</p>\n"
  remarks: "\n<p>This method ensures that the name token follows the proper syntax for a valid NMTOKEN. It can be used in the following manner:</p>\n<pre><code>try {\nwriter.WriteStartElement(XmlConvert.VerifyNMTOKEN(\"abc\"),\"book\");\n}\ncatch(Exception e) {\nConsole.WriteLine(\"error\");\n}</code></pre>\n<p>For more information on the NMTOKEN data type, see http://www.w3.org/TR/2001/REC-xmlschema-2-20010502/#NMTOKEN.</p>\n"
  example:
  - 
  syntax:
    content: public static string VerifyNMTOKEN(string name)
    content.vb: Public Shared Function VerifyNMTOKEN(name As String) As String
    parameters:
    - id: name
      type: System.String
      description: "\n<p>The string you wish to verify.</p>\n"
    return:
      type: System.String
      description: "\n<p>The name token, if it is a valid NMTOKEN.</p>\n"
  exceptions:
  - type: System.Xml.XmlException
    commentId: T:System.Xml.XmlException
    description: "\n<p>The string is not a valid name token.</p>\n"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>name</em> is <strong>null</strong>.</p>\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Xml.XmlConvert.VerifyPublicId(System.String)
  commentId: M:System.Xml.XmlConvert.VerifyPublicId(System.String)
  id: VerifyPublicId(System.String)
  parent: System.Xml.XmlConvert
  langs:
  - csharp
  - vb
  name: VerifyPublicId(String)
  fullName: System.Xml.XmlConvert.VerifyPublicId(System.String)
  type: Method
  source:
    remote:
      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: VerifyPublicId
    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
    startLine: 125
  assemblies:
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: "\n<p>Returns the passed in string instance if all the characters in the string argument are valid public id characters.</p>\n"
  remarks: "\n<p>No other values than the passed in argument should be returned. The characters valid for public id do not vary between XML editions, so no <strong>XmlVersion</strong> overload is required. </p>\n<p>See <see href=\"http://go.microsoft.com/fwlink/?LinkID=147985\">XML 1.0 spec (fourth edition)</see> production [13] <strong>PublidChar</strong> for details on the allowed characters</p>\n<p>If the parameter is null, an <strong>ArgumentNullException</strong> will be thrown. If any of the characters are not valid public id characters, an <strong>XmlException</strong> is thrown with information about the first invalid character encountered.</p>\n"
  example:
  - 
  syntax:
    content: public static string VerifyPublicId(string publicId)
    content.vb: Public Shared Function VerifyPublicId(publicId As String) As String
    parameters:
    - id: publicId
      type: System.String
      description: "\n<p>\n<xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref> that contains the id to validate.</p>\n"
    return:
      type: System.String
      description: "\n<p>Returns the passed-in string if all the characters in the argument are valid public id characters.</p>\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Xml.XmlConvert.VerifyWhitespace(System.String)
  commentId: M:System.Xml.XmlConvert.VerifyWhitespace(System.String)
  id: VerifyWhitespace(System.String)
  parent: System.Xml.XmlConvert
  langs:
  - csharp
  - vb
  name: VerifyWhitespace(String)
  fullName: System.Xml.XmlConvert.VerifyWhitespace(System.String)
  type: Method
  source:
    remote:
      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: VerifyWhitespace
    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
    startLine: 126
  assemblies:
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: "\n<p>Returns the passed-in string instance if all the characters in the string argument are valid whitespace characters. </p>\n"
  remarks: "\n<p>No other values than the passed in argument should be returned. The characters that are valid for whitespace do not vary between XML editions, so no xml version overload is required.</p>\n<p>See <see href=\"http://go.microsoft.com/fwlink/?LinkID=147985\">XML 1.0 spec (fourth edition)</see> production [3] S for details on the allowed characters.</p>\n<p>If the parameter is null, an <strong>ArgumentNullException</strong> will be thrown. </p>\n<p>If any of the characters are not valid whitespace characters, an <strong>XmlException</strong> is thrown with information about the first invalid character encountered.</p>\n"
  example:
  - "\n<p>The following example uses the <xref href=\"System.Xml.XmlConvert.VerifyWhitespace(System.String)\" data-throw-if-not-resolved=\"false\"></xref> method to detect the presence of an invalid character in a value assigned to the start element.</p>XmlConvert.NewVerify#5"
  syntax:
    content: public static string VerifyWhitespace(string content)
    content.vb: Public Shared Function VerifyWhitespace(content As String) As String
    parameters:
    - id: content
      type: System.String
      description: "\n<p>\n<xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref> to verify.</p>\n"
    return:
      type: System.String
      description: "\n<p>Returns the passed-in string instance if all the characters in the string argument are valid whitespace characters, otherwise <strong>null</strong>.</p>\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Xml.XmlConvert.VerifyXmlChars(System.String)
  commentId: M:System.Xml.XmlConvert.VerifyXmlChars(System.String)
  id: VerifyXmlChars(System.String)
  parent: System.Xml.XmlConvert
  langs:
  - csharp
  - vb
  name: VerifyXmlChars(String)
  fullName: System.Xml.XmlConvert.VerifyXmlChars(System.String)
  type: Method
  source:
    remote:
      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: VerifyXmlChars
    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
    startLine: 127
  assemblies:
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: "\n<p>Returns the passed-in string if all the characters and surrogate pair characters in the string argument are valid XML characters, otherwise an <strong>XmlException</strong> is thrown with information on the first invalid character encountered. </p>\n"
  remarks: "\n<p>No other values than the passed in argument should be returned. See <see href=\"http://go.microsoft.com/fwlink/?LinkID=147985\">XML 1.0 spec (fourth edition)</see> production [2] <strong>Char</strong> for details on the allowed characters.</p>\n<p>If the parameter is null, an <strong>ArgumentNullException</strong> will be thrown. If any of the characters are not valid xml characters, an <strong>XmlException</strong> is thrown with information on the first invalid character encountered.</p>\n"
  example:
  - "\n<p>The following example uses the <xref href=\"System.Xml.XmlConvert.VerifyXmlChars(System.String)\" data-throw-if-not-resolved=\"false\"></xref> method used to detect an illegal character in the start element.</p>XmlConvert.NewVerify#3"
  syntax:
    content: public static string VerifyXmlChars(string content)
    content.vb: Public Shared Function VerifyXmlChars(content As String) As String
    parameters:
    - id: content
      type: System.String
      description: "\n<p>\n<xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref> that contains characters to verify.</p>\n"
    return:
      type: System.String
      description: "\n<p>Returns the passed-in string if all the characters and surrogate-pair characters in the string argument are valid XML characters, otherwise an <strong>XmlException</strong> is thrown with information on the first invalid character encountered.</p>\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: System.Xml
  isExternal: false
  name: System.Xml
  fullName: System.Xml
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.String
  parent: System
  isExternal: false
  name: String
  fullName: System.String
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  fullName: System.Boolean
- uid: System.Byte
  parent: System
  isExternal: false
  name: Byte
  fullName: System.Byte
- uid: System.Char
  parent: System
  isExternal: false
  name: Char
  fullName: System.Char
- uid: System.Xml.XmlDateTimeSerializationMode
  parent: System.Xml
  isExternal: false
  name: XmlDateTimeSerializationMode
  fullName: System.Xml.XmlDateTimeSerializationMode
- uid: System.DateTime
  parent: System
  isExternal: false
  name: DateTime
  fullName: System.DateTime
- uid: System.DateTimeOffset
  parent: System
  isExternal: false
  name: DateTimeOffset
  fullName: System.DateTimeOffset
- uid: System.String[]
  isExternal: true
  name: String[]
  fullName: System.String[]
  fullname.vb: System.String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ()
    fullName: ()
- uid: System.Decimal
  parent: System
  isExternal: false
  name: Decimal
  fullName: System.Decimal
- uid: System.Double
  parent: System
  isExternal: false
  name: Double
  fullName: System.Double
- uid: System.Guid
  parent: System
  isExternal: false
  name: Guid
  fullName: System.Guid
- uid: System.Int16
  parent: System
  isExternal: false
  name: Int16
  fullName: System.Int16
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  fullName: System.Int32
- uid: System.Int64
  parent: System
  isExternal: false
  name: Int64
  fullName: System.Int64
- uid: System.SByte
  parent: System
  isExternal: false
  name: SByte
  fullName: System.SByte
- uid: System.Single
  parent: System
  isExternal: false
  name: Single
  fullName: System.Single
- uid: System.TimeSpan
  parent: System
  isExternal: false
  name: TimeSpan
  fullName: System.TimeSpan
- uid: System.UInt16
  parent: System
  isExternal: false
  name: UInt16
  fullName: System.UInt16
- uid: System.UInt32
  parent: System
  isExternal: false
  name: UInt32
  fullName: System.UInt32
- uid: System.UInt64
  parent: System
  isExternal: false
  name: UInt64
  fullName: System.UInt64
- uid: System.ArgumentNullException
  isExternal: false
  name: ArgumentNullException
  fullName: System.ArgumentNullException
- uid: System.FormatException
  parent: System
  isExternal: false
  name: FormatException
  fullName: System.FormatException
- uid: System.OverflowException
  isExternal: false
  name: OverflowException
  fullName: System.OverflowException
- uid: System.NullReferenceException
  isExternal: false
  name: NullReferenceException
  fullName: System.NullReferenceException
- uid: System.ArgumentOutOfRangeException
  isExternal: false
  name: ArgumentOutOfRangeException
  fullName: System.ArgumentOutOfRangeException
- uid: System.ArgumentException
  parent: System
  isExternal: false
  name: ArgumentException
  fullName: System.ArgumentException
- uid: System.Xml.XmlException
  isExternal: false
  name: XmlException
  fullName: System.Xml.XmlException
