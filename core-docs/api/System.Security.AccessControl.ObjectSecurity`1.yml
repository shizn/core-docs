items:
- uid: System.Security.AccessControl.ObjectSecurity`1
  commentId: T:System.Security.AccessControl.ObjectSecurity`1
  id: ObjectSecurity`1
  parent: System.Security.AccessControl
  children:
  - System.Security.AccessControl.ObjectSecurity`1.#ctor(System.Boolean,System.Security.AccessControl.ResourceType)
  - System.Security.AccessControl.ObjectSecurity`1.#ctor(System.Boolean,System.Security.AccessControl.ResourceType,System.Runtime.InteropServices.SafeHandle,System.Security.AccessControl.AccessControlSections)
  - System.Security.AccessControl.ObjectSecurity`1.#ctor(System.Boolean,System.Security.AccessControl.ResourceType,System.Runtime.InteropServices.SafeHandle,System.Security.AccessControl.AccessControlSections,System.Security.AccessControl.NativeObjectSecurity.ExceptionFromErrorCode,System.Object)
  - System.Security.AccessControl.ObjectSecurity`1.#ctor(System.Boolean,System.Security.AccessControl.ResourceType,System.String,System.Security.AccessControl.AccessControlSections)
  - System.Security.AccessControl.ObjectSecurity`1.#ctor(System.Boolean,System.Security.AccessControl.ResourceType,System.String,System.Security.AccessControl.AccessControlSections,System.Security.AccessControl.NativeObjectSecurity.ExceptionFromErrorCode,System.Object)
  - System.Security.AccessControl.ObjectSecurity`1.AccessRightType
  - System.Security.AccessControl.ObjectSecurity`1.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)
  - System.Security.AccessControl.ObjectSecurity`1.AccessRuleType
  - System.Security.AccessControl.ObjectSecurity`1.AddAccessRule(System.Security.AccessControl.AccessRule{`0})
  - System.Security.AccessControl.ObjectSecurity`1.AddAuditRule(System.Security.AccessControl.AuditRule{`0})
  - System.Security.AccessControl.ObjectSecurity`1.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)
  - System.Security.AccessControl.ObjectSecurity`1.AuditRuleType
  - System.Security.AccessControl.ObjectSecurity`1.Persist(System.Runtime.InteropServices.SafeHandle)
  - System.Security.AccessControl.ObjectSecurity`1.Persist(System.String)
  - System.Security.AccessControl.ObjectSecurity`1.RemoveAccessRule(System.Security.AccessControl.AccessRule{`0})
  - System.Security.AccessControl.ObjectSecurity`1.RemoveAccessRuleAll(System.Security.AccessControl.AccessRule{`0})
  - System.Security.AccessControl.ObjectSecurity`1.RemoveAccessRuleSpecific(System.Security.AccessControl.AccessRule{`0})
  - System.Security.AccessControl.ObjectSecurity`1.RemoveAuditRule(System.Security.AccessControl.AuditRule{`0})
  - System.Security.AccessControl.ObjectSecurity`1.RemoveAuditRuleAll(System.Security.AccessControl.AuditRule{`0})
  - System.Security.AccessControl.ObjectSecurity`1.RemoveAuditRuleSpecific(System.Security.AccessControl.AuditRule{`0})
  - System.Security.AccessControl.ObjectSecurity`1.ResetAccessRule(System.Security.AccessControl.AccessRule{`0})
  - System.Security.AccessControl.ObjectSecurity`1.SetAccessRule(System.Security.AccessControl.AccessRule{`0})
  - System.Security.AccessControl.ObjectSecurity`1.SetAuditRule(System.Security.AccessControl.AuditRule{`0})
  langs:
  - csharp
  - vb
  name: ObjectSecurity<T>
  fullName: System.Security.AccessControl.ObjectSecurity<T>
  type: Class
  source:
    remote:
      path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ObjectSecurity
    path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs
    startLine: 415
  assemblies:
  - System.Security.AccessControl
  namespace: System.Security.AccessControl
  summary: "\n<p>Provides the ability to control access to objects without direct manipulation of Access Control Lists (ACLs); also grants the ability to type-cast access rights. </p>\n"
  remarks: "\n<p>Access rights (permissions) are type T, which you can type-cast to or from an int. For example, you can cast a <xref href=\"System.Security.AccessControl.FileSystemRights\" data-throw-if-not-resolved=\"false\"></xref> as the access rights type, and then use the instance normally. In contrast, <xref href=\"System.Security.AccessControl.ObjectSecurity\" data-throw-if-not-resolved=\"false\"></xref> always takes access rights of type int.</p>\n"
  syntax:
    content: 'public abstract class ObjectSecurity<T> : NativeObjectSecurity where T : struct'
    content.vb: >-
      Public MustInherit Class ObjectSecurity(Of T As Structure)
          Inherits NativeObjectSecurity
    typeParameters:
    - id: T
      description: "\n<p>The access rights for the object.</p>\n"
  inheritance:
  - System.Object
  - System.Security.AccessControl.ObjectSecurity
  - System.Security.AccessControl.CommonObjectSecurity
  - System.Security.AccessControl.NativeObjectSecurity
  inheritedMembers:
  - System.Security.AccessControl.NativeObjectSecurity.Persist(System.Runtime.InteropServices.SafeHandle,System.Security.AccessControl.AccessControlSections)
  - System.Security.AccessControl.NativeObjectSecurity.Persist(System.Runtime.InteropServices.SafeHandle,System.Security.AccessControl.AccessControlSections,System.Object)
  - System.Security.AccessControl.NativeObjectSecurity.Persist(System.String,System.Security.AccessControl.AccessControlSections)
  - System.Security.AccessControl.NativeObjectSecurity.Persist(System.String,System.Security.AccessControl.AccessControlSections,System.Object)
  - System.Security.AccessControl.CommonObjectSecurity.AddAccessRule(System.Security.AccessControl.AccessRule)
  - System.Security.AccessControl.CommonObjectSecurity.AddAuditRule(System.Security.AccessControl.AuditRule)
  - System.Security.AccessControl.CommonObjectSecurity.GetAccessRules(System.Boolean,System.Boolean,System.Type)
  - System.Security.AccessControl.CommonObjectSecurity.GetAuditRules(System.Boolean,System.Boolean,System.Type)
  - System.Security.AccessControl.CommonObjectSecurity.ModifyAccess(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)
  - System.Security.AccessControl.CommonObjectSecurity.ModifyAudit(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)
  - System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRule(System.Security.AccessControl.AccessRule)
  - System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRuleAll(System.Security.AccessControl.AccessRule)
  - System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRuleSpecific(System.Security.AccessControl.AccessRule)
  - System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRule(System.Security.AccessControl.AuditRule)
  - System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRuleAll(System.Security.AccessControl.AuditRule)
  - System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRuleSpecific(System.Security.AccessControl.AuditRule)
  - System.Security.AccessControl.CommonObjectSecurity.ResetAccessRule(System.Security.AccessControl.AccessRule)
  - System.Security.AccessControl.CommonObjectSecurity.SetAccessRule(System.Security.AccessControl.AccessRule)
  - System.Security.AccessControl.CommonObjectSecurity.SetAuditRule(System.Security.AccessControl.AuditRule)
  - System.Security.AccessControl.ObjectSecurity.AccessRulesModified
  - System.Security.AccessControl.ObjectSecurity.AreAccessRulesCanonical
  - System.Security.AccessControl.ObjectSecurity.AreAccessRulesProtected
  - System.Security.AccessControl.ObjectSecurity.AreAuditRulesCanonical
  - System.Security.AccessControl.ObjectSecurity.AreAuditRulesProtected
  - System.Security.AccessControl.ObjectSecurity.AuditRulesModified
  - System.Security.AccessControl.ObjectSecurity.GroupModified
  - System.Security.AccessControl.ObjectSecurity.IsContainer
  - System.Security.AccessControl.ObjectSecurity.IsDS
  - System.Security.AccessControl.ObjectSecurity.OwnerModified
  - System.Security.AccessControl.ObjectSecurity.GetGroup(System.Type)
  - System.Security.AccessControl.ObjectSecurity.GetOwner(System.Type)
  - System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorBinaryForm
  - System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorSddlForm(System.Security.AccessControl.AccessControlSections)
  - System.Security.AccessControl.ObjectSecurity.IsSddlConversionSupported
  - System.Security.AccessControl.ObjectSecurity.ModifyAccessRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)
  - System.Security.AccessControl.ObjectSecurity.ModifyAuditRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)
  - System.Security.AccessControl.ObjectSecurity.Persist(System.Boolean,System.String,System.Security.AccessControl.AccessControlSections)
  - System.Security.AccessControl.ObjectSecurity.PurgeAccessRules(System.Security.Principal.IdentityReference)
  - System.Security.AccessControl.ObjectSecurity.PurgeAuditRules(System.Security.Principal.IdentityReference)
  - System.Security.AccessControl.ObjectSecurity.ReadLock
  - System.Security.AccessControl.ObjectSecurity.ReadUnlock
  - System.Security.AccessControl.ObjectSecurity.SetAccessRuleProtection(System.Boolean,System.Boolean)
  - System.Security.AccessControl.ObjectSecurity.SetAuditRuleProtection(System.Boolean,System.Boolean)
  - System.Security.AccessControl.ObjectSecurity.SetGroup(System.Security.Principal.IdentityReference)
  - System.Security.AccessControl.ObjectSecurity.SetOwner(System.Security.Principal.IdentityReference)
  - System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm(System.Byte[])
  - System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm(System.Byte[],System.Security.AccessControl.AccessControlSections)
  - System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm(System.String)
  - System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm(System.String,System.Security.AccessControl.AccessControlSections)
  - System.Security.AccessControl.ObjectSecurity.WriteLock
  - System.Security.AccessControl.ObjectSecurity.WriteUnlock
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
  fullName.vb: System.Security.AccessControl.ObjectSecurity(Of T)
  name.vb: ObjectSecurity(Of T)
- uid: System.Security.AccessControl.ObjectSecurity`1.#ctor(System.Boolean,System.Security.AccessControl.ResourceType)
  commentId: M:System.Security.AccessControl.ObjectSecurity`1.#ctor(System.Boolean,System.Security.AccessControl.ResourceType)
  id: '#ctor(System.Boolean,System.Security.AccessControl.ResourceType)'
  parent: System.Security.AccessControl.ObjectSecurity`1
  langs:
  - csharp
  - vb
  name: ObjectSecurity(Boolean, ResourceType)
  fullName: System.Security.AccessControl.ObjectSecurity<T>.ObjectSecurity(System.Boolean, System.Security.AccessControl.ResourceType)
  type: Constructor
  source:
    remote:
      path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs
    startLine: 417
  assemblies:
  - System.Security.AccessControl
  namespace: System.Security.AccessControl
  summary: "\n<p>Initializes a new instance of the ObjectSecurity`1 class.</p>\n"
  syntax:
    content: protected ObjectSecurity(bool isContainer, ResourceType resourceType)
    content.vb: Protected Sub New(isContainer As Boolean, resourceType As ResourceType)
    parameters:
    - id: isContainer
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if the new <xref href=\"System.Security.AccessControl.ObjectSecurity`1\" data-throw-if-not-resolved=\"false\"></xref> object is a container object.</p>\n"
    - id: resourceType
      type: System.Security.AccessControl.ResourceType
      description: "\n<p>The type of resource.</p>\n"
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: System.Security.AccessControl.ObjectSecurity(Of T).ObjectSecurity(System.Boolean, System.Security.AccessControl.ResourceType)
- uid: System.Security.AccessControl.ObjectSecurity`1.#ctor(System.Boolean,System.Security.AccessControl.ResourceType,System.Runtime.InteropServices.SafeHandle,System.Security.AccessControl.AccessControlSections)
  commentId: M:System.Security.AccessControl.ObjectSecurity`1.#ctor(System.Boolean,System.Security.AccessControl.ResourceType,System.Runtime.InteropServices.SafeHandle,System.Security.AccessControl.AccessControlSections)
  id: '#ctor(System.Boolean,System.Security.AccessControl.ResourceType,System.Runtime.InteropServices.SafeHandle,System.Security.AccessControl.AccessControlSections)'
  parent: System.Security.AccessControl.ObjectSecurity`1
  langs:
  - csharp
  - vb
  name: ObjectSecurity(Boolean, ResourceType, SafeHandle, AccessControlSections)
  fullName: System.Security.AccessControl.ObjectSecurity<T>.ObjectSecurity(System.Boolean, System.Security.AccessControl.ResourceType, System.Runtime.InteropServices.SafeHandle, System.Security.AccessControl.AccessControlSections)
  type: Constructor
  source:
    remote:
      path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs
    startLine: 418
  assemblies:
  - System.Security.AccessControl
  namespace: System.Security.AccessControl
  summary: "\n<p>Initializes a new instance of the ObjectSecurity`1 class.</p>\n"
  syntax:
    content: protected ObjectSecurity(bool isContainer, ResourceType resourceType, SafeHandle safeHandle, AccessControlSections includeSections)
    content.vb: Protected Sub New(isContainer As Boolean, resourceType As ResourceType, safeHandle As SafeHandle, includeSections As AccessControlSections)
    parameters:
    - id: isContainer
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if the new <xref href=\"System.Security.AccessControl.ObjectSecurity`1\" data-throw-if-not-resolved=\"false\"></xref> object is a container object.</p>\n"
    - id: resourceType
      type: System.Security.AccessControl.ResourceType
      description: "\n<p>The type of resource.</p>\n"
    - id: safeHandle
      type: System.Runtime.InteropServices.SafeHandle
      description: "\n<p>A handle.</p>\n"
    - id: includeSections
      type: System.Security.AccessControl.AccessControlSections
      description: "\n<p>The sections to include.</p>\n"
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: System.Security.AccessControl.ObjectSecurity(Of T).ObjectSecurity(System.Boolean, System.Security.AccessControl.ResourceType, System.Runtime.InteropServices.SafeHandle, System.Security.AccessControl.AccessControlSections)
- uid: System.Security.AccessControl.ObjectSecurity`1.#ctor(System.Boolean,System.Security.AccessControl.ResourceType,System.Runtime.InteropServices.SafeHandle,System.Security.AccessControl.AccessControlSections,System.Security.AccessControl.NativeObjectSecurity.ExceptionFromErrorCode,System.Object)
  commentId: M:System.Security.AccessControl.ObjectSecurity`1.#ctor(System.Boolean,System.Security.AccessControl.ResourceType,System.Runtime.InteropServices.SafeHandle,System.Security.AccessControl.AccessControlSections,System.Security.AccessControl.NativeObjectSecurity.ExceptionFromErrorCode,System.Object)
  id: '#ctor(System.Boolean,System.Security.AccessControl.ResourceType,System.Runtime.InteropServices.SafeHandle,System.Security.AccessControl.AccessControlSections,System.Security.AccessControl.NativeObjectSecurity.ExceptionFromErrorCode,System.Object)'
  parent: System.Security.AccessControl.ObjectSecurity`1
  langs:
  - csharp
  - vb
  name: ObjectSecurity(Boolean, ResourceType, SafeHandle, AccessControlSections, NativeObjectSecurity.ExceptionFromErrorCode, Object)
  fullName: System.Security.AccessControl.ObjectSecurity<T>.ObjectSecurity(System.Boolean, System.Security.AccessControl.ResourceType, System.Runtime.InteropServices.SafeHandle, System.Security.AccessControl.AccessControlSections, System.Security.AccessControl.NativeObjectSecurity.ExceptionFromErrorCode, System.Object)
  type: Constructor
  source:
    remote:
      path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs
    startLine: 419
  assemblies:
  - System.Security.AccessControl
  namespace: System.Security.AccessControl
  summary: "\n<p>Initializes a new instance of the ObjectSecurity`1 class.</p>\n"
  syntax:
    content: protected ObjectSecurity(bool isContainer, ResourceType resourceType, SafeHandle safeHandle, AccessControlSections includeSections, NativeObjectSecurity.ExceptionFromErrorCode exceptionFromErrorCode, object exceptionContext)
    content.vb: Protected Sub New(isContainer As Boolean, resourceType As ResourceType, safeHandle As SafeHandle, includeSections As AccessControlSections, exceptionFromErrorCode As NativeObjectSecurity.ExceptionFromErrorCode, exceptionContext As Object)
    parameters:
    - id: isContainer
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if the new <xref href=\"System.Security.AccessControl.ObjectSecurity`1\" data-throw-if-not-resolved=\"false\"></xref> object is a container object.</p>\n"
    - id: resourceType
      type: System.Security.AccessControl.ResourceType
      description: "\n<p>The type of resource.</p>\n"
    - id: safeHandle
      type: System.Runtime.InteropServices.SafeHandle
      description: "\n<p>A handle.</p>\n"
    - id: includeSections
      type: System.Security.AccessControl.AccessControlSections
      description: "\n<p>The sections to include.</p>\n"
    - id: exceptionFromErrorCode
      type: System.Security.AccessControl.NativeObjectSecurity.ExceptionFromErrorCode
      description: "\n<p>A delegate implemented by integrators that provides custom exceptions.</p>\n"
    - id: exceptionContext
      type: System.Object
      description: "\n<p>An object that contains contextual information about the source or destination of the exception.</p>\n"
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: System.Security.AccessControl.ObjectSecurity(Of T).ObjectSecurity(System.Boolean, System.Security.AccessControl.ResourceType, System.Runtime.InteropServices.SafeHandle, System.Security.AccessControl.AccessControlSections, System.Security.AccessControl.NativeObjectSecurity.ExceptionFromErrorCode, System.Object)
- uid: System.Security.AccessControl.ObjectSecurity`1.#ctor(System.Boolean,System.Security.AccessControl.ResourceType,System.String,System.Security.AccessControl.AccessControlSections)
  commentId: M:System.Security.AccessControl.ObjectSecurity`1.#ctor(System.Boolean,System.Security.AccessControl.ResourceType,System.String,System.Security.AccessControl.AccessControlSections)
  id: '#ctor(System.Boolean,System.Security.AccessControl.ResourceType,System.String,System.Security.AccessControl.AccessControlSections)'
  parent: System.Security.AccessControl.ObjectSecurity`1
  langs:
  - csharp
  - vb
  name: ObjectSecurity(Boolean, ResourceType, String, AccessControlSections)
  fullName: System.Security.AccessControl.ObjectSecurity<T>.ObjectSecurity(System.Boolean, System.Security.AccessControl.ResourceType, System.String, System.Security.AccessControl.AccessControlSections)
  type: Constructor
  source:
    remote:
      path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs
    startLine: 420
  assemblies:
  - System.Security.AccessControl
  namespace: System.Security.AccessControl
  summary: "\n<p>Initializes a new instance of the ObjectSecurity`1 class.</p>\n"
  syntax:
    content: protected ObjectSecurity(bool isContainer, ResourceType resourceType, string name, AccessControlSections includeSections)
    content.vb: Protected Sub New(isContainer As Boolean, resourceType As ResourceType, name As String, includeSections As AccessControlSections)
    parameters:
    - id: isContainer
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if the new <xref href=\"System.Security.AccessControl.ObjectSecurity`1\" data-throw-if-not-resolved=\"false\"></xref> object is a container object.</p>\n"
    - id: resourceType
      type: System.Security.AccessControl.ResourceType
      description: "\n<p>The type of resource.</p>\n"
    - id: name
      type: System.String
      description: "\n<p>The name of the securable object with which the new <xref href=\"System.Security.AccessControl.ObjectSecurity`1\" data-throw-if-not-resolved=\"false\"></xref> object is associated.</p>\n"
    - id: includeSections
      type: System.Security.AccessControl.AccessControlSections
      description: "\n<p>The sections to include.</p>\n"
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: System.Security.AccessControl.ObjectSecurity(Of T).ObjectSecurity(System.Boolean, System.Security.AccessControl.ResourceType, System.String, System.Security.AccessControl.AccessControlSections)
- uid: System.Security.AccessControl.ObjectSecurity`1.#ctor(System.Boolean,System.Security.AccessControl.ResourceType,System.String,System.Security.AccessControl.AccessControlSections,System.Security.AccessControl.NativeObjectSecurity.ExceptionFromErrorCode,System.Object)
  commentId: M:System.Security.AccessControl.ObjectSecurity`1.#ctor(System.Boolean,System.Security.AccessControl.ResourceType,System.String,System.Security.AccessControl.AccessControlSections,System.Security.AccessControl.NativeObjectSecurity.ExceptionFromErrorCode,System.Object)
  id: '#ctor(System.Boolean,System.Security.AccessControl.ResourceType,System.String,System.Security.AccessControl.AccessControlSections,System.Security.AccessControl.NativeObjectSecurity.ExceptionFromErrorCode,System.Object)'
  parent: System.Security.AccessControl.ObjectSecurity`1
  langs:
  - csharp
  - vb
  name: ObjectSecurity(Boolean, ResourceType, String, AccessControlSections, NativeObjectSecurity.ExceptionFromErrorCode, Object)
  fullName: System.Security.AccessControl.ObjectSecurity<T>.ObjectSecurity(System.Boolean, System.Security.AccessControl.ResourceType, System.String, System.Security.AccessControl.AccessControlSections, System.Security.AccessControl.NativeObjectSecurity.ExceptionFromErrorCode, System.Object)
  type: Constructor
  source:
    remote:
      path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs
    startLine: 421
  assemblies:
  - System.Security.AccessControl
  namespace: System.Security.AccessControl
  summary: "\n<p>Initializes a new instance of the ObjectSecurity`1 class.</p>\n"
  syntax:
    content: protected ObjectSecurity(bool isContainer, ResourceType resourceType, string name, AccessControlSections includeSections, NativeObjectSecurity.ExceptionFromErrorCode exceptionFromErrorCode, object exceptionContext)
    content.vb: Protected Sub New(isContainer As Boolean, resourceType As ResourceType, name As String, includeSections As AccessControlSections, exceptionFromErrorCode As NativeObjectSecurity.ExceptionFromErrorCode, exceptionContext As Object)
    parameters:
    - id: isContainer
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if the new <xref href=\"System.Security.AccessControl.ObjectSecurity`1\" data-throw-if-not-resolved=\"false\"></xref> object is a container object.</p>\n"
    - id: resourceType
      type: System.Security.AccessControl.ResourceType
      description: "\n<p>The type of resource.</p>\n"
    - id: name
      type: System.String
      description: "\n<p>The name of the securable object with which the new <xref href=\"System.Security.AccessControl.ObjectSecurity`1\" data-throw-if-not-resolved=\"false\"></xref> object is associated.</p>\n"
    - id: includeSections
      type: System.Security.AccessControl.AccessControlSections
      description: "\n<p>The sections to include. </p>\n"
    - id: exceptionFromErrorCode
      type: System.Security.AccessControl.NativeObjectSecurity.ExceptionFromErrorCode
      description: "\n<p>A delegate implemented by integrators that provides custom exceptions.</p>\n"
    - id: exceptionContext
      type: System.Object
      description: "\n<p>An object that contains contextual information about the source or destination of the exception.</p>\n"
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: System.Security.AccessControl.ObjectSecurity(Of T).ObjectSecurity(System.Boolean, System.Security.AccessControl.ResourceType, System.String, System.Security.AccessControl.AccessControlSections, System.Security.AccessControl.NativeObjectSecurity.ExceptionFromErrorCode, System.Object)
- uid: System.Security.AccessControl.ObjectSecurity`1.AccessRightType
  commentId: P:System.Security.AccessControl.ObjectSecurity`1.AccessRightType
  id: AccessRightType
  parent: System.Security.AccessControl.ObjectSecurity`1
  langs:
  - csharp
  - vb
  name: AccessRightType
  fullName: System.Security.AccessControl.ObjectSecurity<T>.AccessRightType
  type: Property
  source:
    remote:
      path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: AccessRightType
    path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs
    startLine: 422
  assemblies:
  - System.Security.AccessControl
  namespace: System.Security.AccessControl
  summary: "\n<p>Gets the Type of the securable object associated with this ObjectSecurity`1 object.</p>\n"
  syntax:
    content: public override Type AccessRightType { get; }
    content.vb: Public Overrides ReadOnly Property AccessRightType As Type
    parameters: []
    return:
      type: System.Type
      description: "\n<p>The type of the securable object associated with the current instance.</p>\n"
  overridden: System.Security.AccessControl.ObjectSecurity.AccessRightType
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
  fullName.vb: System.Security.AccessControl.ObjectSecurity(Of T).AccessRightType
- uid: System.Security.AccessControl.ObjectSecurity`1.AccessRuleType
  commentId: P:System.Security.AccessControl.ObjectSecurity`1.AccessRuleType
  id: AccessRuleType
  parent: System.Security.AccessControl.ObjectSecurity`1
  langs:
  - csharp
  - vb
  name: AccessRuleType
  fullName: System.Security.AccessControl.ObjectSecurity<T>.AccessRuleType
  type: Property
  source:
    remote:
      path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: AccessRuleType
    path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs
    startLine: 423
  assemblies:
  - System.Security.AccessControl
  namespace: System.Security.AccessControl
  summary: "\n<p>Gets the Type of the object associated with the access rules of this ObjectSecurity`1 object. </p>\n"
  syntax:
    content: public override Type AccessRuleType { get; }
    content.vb: Public Overrides ReadOnly Property AccessRuleType As Type
    parameters: []
    return:
      type: System.Type
      description: "\n<p>The Type of the object associated with the access rules of the current instance.</p>\n"
  overridden: System.Security.AccessControl.ObjectSecurity.AccessRuleType
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
  fullName.vb: System.Security.AccessControl.ObjectSecurity(Of T).AccessRuleType
- uid: System.Security.AccessControl.ObjectSecurity`1.AuditRuleType
  commentId: P:System.Security.AccessControl.ObjectSecurity`1.AuditRuleType
  id: AuditRuleType
  parent: System.Security.AccessControl.ObjectSecurity`1
  langs:
  - csharp
  - vb
  name: AuditRuleType
  fullName: System.Security.AccessControl.ObjectSecurity<T>.AuditRuleType
  type: Property
  source:
    remote:
      path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: AuditRuleType
    path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs
    startLine: 424
  assemblies:
  - System.Security.AccessControl
  namespace: System.Security.AccessControl
  summary: "\n<p>Gets the Type object associated with the audit rules of this ObjectSecurity`1 object.</p>\n"
  syntax:
    content: public override Type AuditRuleType { get; }
    content.vb: Public Overrides ReadOnly Property AuditRuleType As Type
    parameters: []
    return:
      type: System.Type
      description: "\n<p>The Type object associated with the audit rules of the current instance.</p>\n"
  overridden: System.Security.AccessControl.ObjectSecurity.AuditRuleType
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
  fullName.vb: System.Security.AccessControl.ObjectSecurity(Of T).AuditRuleType
- uid: System.Security.AccessControl.ObjectSecurity`1.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)
  commentId: M:System.Security.AccessControl.ObjectSecurity`1.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)
  id: AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)
  parent: System.Security.AccessControl.ObjectSecurity`1
  langs:
  - csharp
  - vb
  name: AccessRuleFactory(IdentityReference, Int32, Boolean, InheritanceFlags, PropagationFlags, AccessControlType)
  fullName: System.Security.AccessControl.ObjectSecurity<T>.AccessRuleFactory(System.Security.Principal.IdentityReference, System.Int32, System.Boolean, System.Security.AccessControl.InheritanceFlags, System.Security.AccessControl.PropagationFlags, System.Security.AccessControl.AccessControlType)
  type: Method
  source:
    remote:
      path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: AccessRuleFactory
    path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs
    startLine: 425
  assemblies:
  - System.Security.AccessControl
  namespace: System.Security.AccessControl
  summary: "\n<p>Initializes a new instance of the ObjectAccessRule class that represents a new access control rule for the associated security object.</p>\n"
  syntax:
    content: public override AccessRule AccessRuleFactory(IdentityReference identityReference, int accessMask, bool isInherited, InheritanceFlags inheritanceFlags, PropagationFlags propagationFlags, AccessControlType type)
    content.vb: Public Overrides Function AccessRuleFactory(identityReference As IdentityReference, accessMask As Integer, isInherited As Boolean, inheritanceFlags As InheritanceFlags, propagationFlags As PropagationFlags, type As AccessControlType) As AccessRule
    parameters:
    - id: identityReference
      type: System.Security.Principal.IdentityReference
      description: "\n<p>Represents a user account.</p>\n"
    - id: accessMask
      type: System.Int32
      description: "\n<p>The access type.</p>\n"
    - id: isInherited
      type: System.Boolean
      description: "\n<p>\n<strong></strong>\n<strong>true</strong> if the access rule is inherited; otherwise, <strong>false</strong>.</p>\n"
    - id: inheritanceFlags
      type: System.Security.AccessControl.InheritanceFlags
      description: "\n<p>Specifies how to propagate access masks to child objects.</p>\n"
    - id: propagationFlags
      type: System.Security.AccessControl.PropagationFlags
      description: "\n<p>Specifies how to propagate Access Control Entries (ACEs) to child objects.</p>\n"
    - id: type
      type: System.Security.AccessControl.AccessControlType
      description: "\n<p>Specifies whether access is allowed or denied.</p>\n"
    return:
      type: System.Security.AccessControl.AccessRule
      description: "\n<p>Represents a new access control rule for the specified user, with the specified access rights, access control, and flags.</p>\n"
  overridden: System.Security.AccessControl.ObjectSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: System.Security.AccessControl.ObjectSecurity(Of T).AccessRuleFactory(System.Security.Principal.IdentityReference, System.Int32, System.Boolean, System.Security.AccessControl.InheritanceFlags, System.Security.AccessControl.PropagationFlags, System.Security.AccessControl.AccessControlType)
- uid: System.Security.AccessControl.ObjectSecurity`1.AddAccessRule(System.Security.AccessControl.AccessRule{`0})
  commentId: M:System.Security.AccessControl.ObjectSecurity`1.AddAccessRule(System.Security.AccessControl.AccessRule{`0})
  id: AddAccessRule(System.Security.AccessControl.AccessRule{`0})
  parent: System.Security.AccessControl.ObjectSecurity`1
  langs:
  - csharp
  - vb
  name: AddAccessRule(AccessRule<T>)
  fullName: System.Security.AccessControl.ObjectSecurity<T>.AddAccessRule(System.Security.AccessControl.AccessRule<T>)
  type: Method
  source:
    remote:
      path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: AddAccessRule
    path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs
    startLine: 426
  assemblies:
  - System.Security.AccessControl
  namespace: System.Security.AccessControl
  summary: "\n<p>Adds the specified access rule to the Discretionary Access Control List (DACL) associated with this ObjectSecurity`1 object.</p>\n"
  syntax:
    content: public virtual void AddAccessRule(AccessRule<T> rule)
    content.vb: Public Overridable Sub AddAccessRule(rule As AccessRule(Of T))
    parameters:
    - id: rule
      type: System.Security.AccessControl.AccessRule{{T}}
      description: "\n<p>The rule to add.</p>\n"
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: System.Security.AccessControl.ObjectSecurity(Of T).AddAccessRule(System.Security.AccessControl.AccessRule(Of T))
  name.vb: AddAccessRule(AccessRule(Of T))
- uid: System.Security.AccessControl.ObjectSecurity`1.AddAuditRule(System.Security.AccessControl.AuditRule{`0})
  commentId: M:System.Security.AccessControl.ObjectSecurity`1.AddAuditRule(System.Security.AccessControl.AuditRule{`0})
  id: AddAuditRule(System.Security.AccessControl.AuditRule{`0})
  parent: System.Security.AccessControl.ObjectSecurity`1
  langs:
  - csharp
  - vb
  name: AddAuditRule(AuditRule<T>)
  fullName: System.Security.AccessControl.ObjectSecurity<T>.AddAuditRule(System.Security.AccessControl.AuditRule<T>)
  type: Method
  source:
    remote:
      path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: AddAuditRule
    path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs
    startLine: 427
  assemblies:
  - System.Security.AccessControl
  namespace: System.Security.AccessControl
  summary: "\n<p>Adds the specified audit rule to the System Access Control List (SACL) associated with this ObjectSecurity`1 object.</p>\n"
  syntax:
    content: public virtual void AddAuditRule(AuditRule<T> rule)
    content.vb: Public Overridable Sub AddAuditRule(rule As AuditRule(Of T))
    parameters:
    - id: rule
      type: System.Security.AccessControl.AuditRule{{T}}
      description: "\n<p>The audit rule to add.</p>\n"
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: System.Security.AccessControl.ObjectSecurity(Of T).AddAuditRule(System.Security.AccessControl.AuditRule(Of T))
  name.vb: AddAuditRule(AuditRule(Of T))
- uid: System.Security.AccessControl.ObjectSecurity`1.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)
  commentId: M:System.Security.AccessControl.ObjectSecurity`1.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)
  id: AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)
  parent: System.Security.AccessControl.ObjectSecurity`1
  langs:
  - csharp
  - vb
  name: AuditRuleFactory(IdentityReference, Int32, Boolean, InheritanceFlags, PropagationFlags, AuditFlags)
  fullName: System.Security.AccessControl.ObjectSecurity<T>.AuditRuleFactory(System.Security.Principal.IdentityReference, System.Int32, System.Boolean, System.Security.AccessControl.InheritanceFlags, System.Security.AccessControl.PropagationFlags, System.Security.AccessControl.AuditFlags)
  type: Method
  source:
    remote:
      path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: AuditRuleFactory
    path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs
    startLine: 428
  assemblies:
  - System.Security.AccessControl
  namespace: System.Security.AccessControl
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Security.AccessControl.AuditRule\" data-throw-if-not-resolved=\"false\"></xref> class representing the specified audit rule for the specified user.</p>\n"
  syntax:
    content: public override AuditRule AuditRuleFactory(IdentityReference identityReference, int accessMask, bool isInherited, InheritanceFlags inheritanceFlags, PropagationFlags propagationFlags, AuditFlags flags)
    content.vb: Public Overrides Function AuditRuleFactory(identityReference As IdentityReference, accessMask As Integer, isInherited As Boolean, inheritanceFlags As InheritanceFlags, propagationFlags As PropagationFlags, flags As AuditFlags) As AuditRule
    parameters:
    - id: identityReference
      type: System.Security.Principal.IdentityReference
      description: "\n<p>Represents a user account. </p>\n"
    - id: accessMask
      type: System.Int32
      description: "\n<p>An integer that specifies an access type.</p>\n"
    - id: isInherited
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if the access rule is inherited; otherwise, <strong>false</strong>.</p>\n"
    - id: inheritanceFlags
      type: System.Security.AccessControl.InheritanceFlags
      description: "\n<p>Specifies how to propagate access masks to child objects.</p>\n"
    - id: propagationFlags
      type: System.Security.AccessControl.PropagationFlags
      description: "\n<p>Specifies how to propagate Access Control Entries (ACEs) to child objects.</p>\n"
    - id: flags
      type: System.Security.AccessControl.AuditFlags
      description: "\n<p>Describes the type of auditing to perform.</p>\n"
    return:
      type: System.Security.AccessControl.AuditRule
      description: "\n<p>Returns the specified audit rule for the specified user.</p>\n"
  overridden: System.Security.AccessControl.ObjectSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: System.Security.AccessControl.ObjectSecurity(Of T).AuditRuleFactory(System.Security.Principal.IdentityReference, System.Int32, System.Boolean, System.Security.AccessControl.InheritanceFlags, System.Security.AccessControl.PropagationFlags, System.Security.AccessControl.AuditFlags)
- uid: System.Security.AccessControl.ObjectSecurity`1.Persist(System.Runtime.InteropServices.SafeHandle)
  commentId: M:System.Security.AccessControl.ObjectSecurity`1.Persist(System.Runtime.InteropServices.SafeHandle)
  id: Persist(System.Runtime.InteropServices.SafeHandle)
  parent: System.Security.AccessControl.ObjectSecurity`1
  langs:
  - csharp
  - vb
  name: Persist(SafeHandle)
  fullName: System.Security.AccessControl.ObjectSecurity<T>.Persist(System.Runtime.InteropServices.SafeHandle)
  type: Method
  source:
    remote:
      path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Persist
    path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs
    startLine: 429
  assemblies:
  - System.Security.AccessControl
  namespace: System.Security.AccessControl
  summary: "\n<p>Saves the security descriptor associated with this ObjectSecurity`1 object to permanent storage, using the specified handle.</p>\n"
  syntax:
    content: protected void Persist(SafeHandle handle)
    content.vb: Protected Sub Persist(handle As SafeHandle)
    parameters:
    - id: handle
      type: System.Runtime.InteropServices.SafeHandle
      description: "\n<p>The handle of the securable object with which this ObjectSecurity`1 object is associated.</p>\n"
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: System.Security.AccessControl.ObjectSecurity(Of T).Persist(System.Runtime.InteropServices.SafeHandle)
- uid: System.Security.AccessControl.ObjectSecurity`1.Persist(System.String)
  commentId: M:System.Security.AccessControl.ObjectSecurity`1.Persist(System.String)
  id: Persist(System.String)
  parent: System.Security.AccessControl.ObjectSecurity`1
  langs:
  - csharp
  - vb
  name: Persist(String)
  fullName: System.Security.AccessControl.ObjectSecurity<T>.Persist(System.String)
  type: Method
  source:
    remote:
      path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Persist
    path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs
    startLine: 430
  assemblies:
  - System.Security.AccessControl
  namespace: System.Security.AccessControl
  summary: "\n<p>Saves the security descriptor associated with this ObjectSecurity`1 object to permanent storage, using the specified name.</p>\n"
  syntax:
    content: protected void Persist(string name)
    content.vb: Protected Sub Persist(name As String)
    parameters:
    - id: name
      type: System.String
      description: "\n<p>The name of the securable object with which this ObjectSecurity`1 object is associated.</p>\n"
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: System.Security.AccessControl.ObjectSecurity(Of T).Persist(System.String)
- uid: System.Security.AccessControl.ObjectSecurity`1.RemoveAccessRule(System.Security.AccessControl.AccessRule{`0})
  commentId: M:System.Security.AccessControl.ObjectSecurity`1.RemoveAccessRule(System.Security.AccessControl.AccessRule{`0})
  id: RemoveAccessRule(System.Security.AccessControl.AccessRule{`0})
  parent: System.Security.AccessControl.ObjectSecurity`1
  langs:
  - csharp
  - vb
  name: RemoveAccessRule(AccessRule<T>)
  fullName: System.Security.AccessControl.ObjectSecurity<T>.RemoveAccessRule(System.Security.AccessControl.AccessRule<T>)
  type: Method
  source:
    remote:
      path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: RemoveAccessRule
    path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs
    startLine: 431
  assemblies:
  - System.Security.AccessControl
  namespace: System.Security.AccessControl
  summary: "\n<p>Removes access rules that contain the same security identifier and access mask as the specified access rule from the Discretionary Access Control List (DACL) associated with this ObjectSecurity`1 object.</p>\n"
  syntax:
    content: public virtual bool RemoveAccessRule(AccessRule<T> rule)
    content.vb: Public Overridable Function RemoveAccessRule(rule As AccessRule(Of T)) As Boolean
    parameters:
    - id: rule
      type: System.Security.AccessControl.AccessRule{{T}}
      description: "\n<p>The rule to remove.</p>\n"
    return:
      type: System.Boolean
      description: "\n<p>Returns <strong>true</strong> if the access rule was successfully removed; otherwise, <strong>false</strong>.</p>\n"
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: System.Security.AccessControl.ObjectSecurity(Of T).RemoveAccessRule(System.Security.AccessControl.AccessRule(Of T))
  name.vb: RemoveAccessRule(AccessRule(Of T))
- uid: System.Security.AccessControl.ObjectSecurity`1.RemoveAccessRuleAll(System.Security.AccessControl.AccessRule{`0})
  commentId: M:System.Security.AccessControl.ObjectSecurity`1.RemoveAccessRuleAll(System.Security.AccessControl.AccessRule{`0})
  id: RemoveAccessRuleAll(System.Security.AccessControl.AccessRule{`0})
  parent: System.Security.AccessControl.ObjectSecurity`1
  langs:
  - csharp
  - vb
  name: RemoveAccessRuleAll(AccessRule<T>)
  fullName: System.Security.AccessControl.ObjectSecurity<T>.RemoveAccessRuleAll(System.Security.AccessControl.AccessRule<T>)
  type: Method
  source:
    remote:
      path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: RemoveAccessRuleAll
    path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs
    startLine: 432
  assemblies:
  - System.Security.AccessControl
  namespace: System.Security.AccessControl
  summary: "\n<p>Removes all access rules that have the same security identifier as the specified access rule from the Discretionary Access Control List (DACL) associated with this ObjectSecurity`1 object.</p>\n"
  syntax:
    content: public virtual void RemoveAccessRuleAll(AccessRule<T> rule)
    content.vb: Public Overridable Sub RemoveAccessRuleAll(rule As AccessRule(Of T))
    parameters:
    - id: rule
      type: System.Security.AccessControl.AccessRule{{T}}
      description: "\n<p>The access rule to remove.</p>\n"
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: System.Security.AccessControl.ObjectSecurity(Of T).RemoveAccessRuleAll(System.Security.AccessControl.AccessRule(Of T))
  name.vb: RemoveAccessRuleAll(AccessRule(Of T))
- uid: System.Security.AccessControl.ObjectSecurity`1.RemoveAccessRuleSpecific(System.Security.AccessControl.AccessRule{`0})
  commentId: M:System.Security.AccessControl.ObjectSecurity`1.RemoveAccessRuleSpecific(System.Security.AccessControl.AccessRule{`0})
  id: RemoveAccessRuleSpecific(System.Security.AccessControl.AccessRule{`0})
  parent: System.Security.AccessControl.ObjectSecurity`1
  langs:
  - csharp
  - vb
  name: RemoveAccessRuleSpecific(AccessRule<T>)
  fullName: System.Security.AccessControl.ObjectSecurity<T>.RemoveAccessRuleSpecific(System.Security.AccessControl.AccessRule<T>)
  type: Method
  source:
    remote:
      path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: RemoveAccessRuleSpecific
    path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs
    startLine: 433
  assemblies:
  - System.Security.AccessControl
  namespace: System.Security.AccessControl
  summary: "\n<p>Removes all access rules that exactly match the specified access rule from the Discretionary Access Control List (DACL) associated with this ObjectSecurity`1 object</p>\n"
  syntax:
    content: public virtual void RemoveAccessRuleSpecific(AccessRule<T> rule)
    content.vb: Public Overridable Sub RemoveAccessRuleSpecific(rule As AccessRule(Of T))
    parameters:
    - id: rule
      type: System.Security.AccessControl.AccessRule{{T}}
      description: "\n<p>The access rule to remove.</p>\n"
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: System.Security.AccessControl.ObjectSecurity(Of T).RemoveAccessRuleSpecific(System.Security.AccessControl.AccessRule(Of T))
  name.vb: RemoveAccessRuleSpecific(AccessRule(Of T))
- uid: System.Security.AccessControl.ObjectSecurity`1.RemoveAuditRule(System.Security.AccessControl.AuditRule{`0})
  commentId: M:System.Security.AccessControl.ObjectSecurity`1.RemoveAuditRule(System.Security.AccessControl.AuditRule{`0})
  id: RemoveAuditRule(System.Security.AccessControl.AuditRule{`0})
  parent: System.Security.AccessControl.ObjectSecurity`1
  langs:
  - csharp
  - vb
  name: RemoveAuditRule(AuditRule<T>)
  fullName: System.Security.AccessControl.ObjectSecurity<T>.RemoveAuditRule(System.Security.AccessControl.AuditRule<T>)
  type: Method
  source:
    remote:
      path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: RemoveAuditRule
    path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs
    startLine: 434
  assemblies:
  - System.Security.AccessControl
  namespace: System.Security.AccessControl
  summary: "\n<p>Removes audit rules that contain the same security identifier and access mask as the specified audit rule from the System Access Control List (SACL) associated with this ObjectSecurity`1 object.</p>\n"
  syntax:
    content: public virtual bool RemoveAuditRule(AuditRule<T> rule)
    content.vb: Public Overridable Function RemoveAuditRule(rule As AuditRule(Of T)) As Boolean
    parameters:
    - id: rule
      type: System.Security.AccessControl.AuditRule{{T}}
      description: "\n<p>The audit rule to remove</p>\n"
    return:
      type: System.Boolean
      description: "\n<p>Returns <strong>true</strong> if the object was removed; otherwise, <strong>false</strong>.</p>\n"
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: System.Security.AccessControl.ObjectSecurity(Of T).RemoveAuditRule(System.Security.AccessControl.AuditRule(Of T))
  name.vb: RemoveAuditRule(AuditRule(Of T))
- uid: System.Security.AccessControl.ObjectSecurity`1.RemoveAuditRuleAll(System.Security.AccessControl.AuditRule{`0})
  commentId: M:System.Security.AccessControl.ObjectSecurity`1.RemoveAuditRuleAll(System.Security.AccessControl.AuditRule{`0})
  id: RemoveAuditRuleAll(System.Security.AccessControl.AuditRule{`0})
  parent: System.Security.AccessControl.ObjectSecurity`1
  langs:
  - csharp
  - vb
  name: RemoveAuditRuleAll(AuditRule<T>)
  fullName: System.Security.AccessControl.ObjectSecurity<T>.RemoveAuditRuleAll(System.Security.AccessControl.AuditRule<T>)
  type: Method
  source:
    remote:
      path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: RemoveAuditRuleAll
    path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs
    startLine: 435
  assemblies:
  - System.Security.AccessControl
  namespace: System.Security.AccessControl
  summary: "\n<p>Removes all audit rules that have the same security identifier as the specified audit rule from the System Access Control List (SACL) associated with this ObjectSecurity`1 object.</p>\n"
  syntax:
    content: public virtual void RemoveAuditRuleAll(AuditRule<T> rule)
    content.vb: Public Overridable Sub RemoveAuditRuleAll(rule As AuditRule(Of T))
    parameters:
    - id: rule
      type: System.Security.AccessControl.AuditRule{{T}}
      description: "\n<p>The audit rule to remove.</p>\n"
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: System.Security.AccessControl.ObjectSecurity(Of T).RemoveAuditRuleAll(System.Security.AccessControl.AuditRule(Of T))
  name.vb: RemoveAuditRuleAll(AuditRule(Of T))
- uid: System.Security.AccessControl.ObjectSecurity`1.RemoveAuditRuleSpecific(System.Security.AccessControl.AuditRule{`0})
  commentId: M:System.Security.AccessControl.ObjectSecurity`1.RemoveAuditRuleSpecific(System.Security.AccessControl.AuditRule{`0})
  id: RemoveAuditRuleSpecific(System.Security.AccessControl.AuditRule{`0})
  parent: System.Security.AccessControl.ObjectSecurity`1
  langs:
  - csharp
  - vb
  name: RemoveAuditRuleSpecific(AuditRule<T>)
  fullName: System.Security.AccessControl.ObjectSecurity<T>.RemoveAuditRuleSpecific(System.Security.AccessControl.AuditRule<T>)
  type: Method
  source:
    remote:
      path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: RemoveAuditRuleSpecific
    path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs
    startLine: 436
  assemblies:
  - System.Security.AccessControl
  namespace: System.Security.AccessControl
  summary: "\n<p>Removes all audit rules that exactly match the specified audit rule from the System Access Control List (SACL) associated with this ObjectSecurity`1 object</p>\n"
  syntax:
    content: public virtual void RemoveAuditRuleSpecific(AuditRule<T> rule)
    content.vb: Public Overridable Sub RemoveAuditRuleSpecific(rule As AuditRule(Of T))
    parameters:
    - id: rule
      type: System.Security.AccessControl.AuditRule{{T}}
      description: "\n<p>The audit rule to remove.</p>\n"
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: System.Security.AccessControl.ObjectSecurity(Of T).RemoveAuditRuleSpecific(System.Security.AccessControl.AuditRule(Of T))
  name.vb: RemoveAuditRuleSpecific(AuditRule(Of T))
- uid: System.Security.AccessControl.ObjectSecurity`1.ResetAccessRule(System.Security.AccessControl.AccessRule{`0})
  commentId: M:System.Security.AccessControl.ObjectSecurity`1.ResetAccessRule(System.Security.AccessControl.AccessRule{`0})
  id: ResetAccessRule(System.Security.AccessControl.AccessRule{`0})
  parent: System.Security.AccessControl.ObjectSecurity`1
  langs:
  - csharp
  - vb
  name: ResetAccessRule(AccessRule<T>)
  fullName: System.Security.AccessControl.ObjectSecurity<T>.ResetAccessRule(System.Security.AccessControl.AccessRule<T>)
  type: Method
  source:
    remote:
      path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ResetAccessRule
    path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs
    startLine: 437
  assemblies:
  - System.Security.AccessControl
  namespace: System.Security.AccessControl
  summary: "\n<p>Removes all access rules in the Discretionary Access Control List (DACL) associated with this ObjectSecurity`1 object and then adds the specified access rule.</p>\n"
  syntax:
    content: public virtual void ResetAccessRule(AccessRule<T> rule)
    content.vb: Public Overridable Sub ResetAccessRule(rule As AccessRule(Of T))
    parameters:
    - id: rule
      type: System.Security.AccessControl.AccessRule{{T}}
      description: "\n<p>The access rule to reset.</p>\n"
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: System.Security.AccessControl.ObjectSecurity(Of T).ResetAccessRule(System.Security.AccessControl.AccessRule(Of T))
  name.vb: ResetAccessRule(AccessRule(Of T))
- uid: System.Security.AccessControl.ObjectSecurity`1.SetAccessRule(System.Security.AccessControl.AccessRule{`0})
  commentId: M:System.Security.AccessControl.ObjectSecurity`1.SetAccessRule(System.Security.AccessControl.AccessRule{`0})
  id: SetAccessRule(System.Security.AccessControl.AccessRule{`0})
  parent: System.Security.AccessControl.ObjectSecurity`1
  langs:
  - csharp
  - vb
  name: SetAccessRule(AccessRule<T>)
  fullName: System.Security.AccessControl.ObjectSecurity<T>.SetAccessRule(System.Security.AccessControl.AccessRule<T>)
  type: Method
  source:
    remote:
      path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: SetAccessRule
    path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs
    startLine: 438
  assemblies:
  - System.Security.AccessControl
  namespace: System.Security.AccessControl
  summary: "\n<p>Removes all access rules that contain the same security identifier and qualifier as the specified access rule in the Discretionary Access Control List (DACL) associated with this ObjectSecurity`1 object and then adds the specified access rule.</p>\n"
  syntax:
    content: public virtual void SetAccessRule(AccessRule<T> rule)
    content.vb: Public Overridable Sub SetAccessRule(rule As AccessRule(Of T))
    parameters:
    - id: rule
      type: System.Security.AccessControl.AccessRule{{T}}
      description: "\n<p>The access rule to set.</p>\n"
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: System.Security.AccessControl.ObjectSecurity(Of T).SetAccessRule(System.Security.AccessControl.AccessRule(Of T))
  name.vb: SetAccessRule(AccessRule(Of T))
- uid: System.Security.AccessControl.ObjectSecurity`1.SetAuditRule(System.Security.AccessControl.AuditRule{`0})
  commentId: M:System.Security.AccessControl.ObjectSecurity`1.SetAuditRule(System.Security.AccessControl.AuditRule{`0})
  id: SetAuditRule(System.Security.AccessControl.AuditRule{`0})
  parent: System.Security.AccessControl.ObjectSecurity`1
  langs:
  - csharp
  - vb
  name: SetAuditRule(AuditRule<T>)
  fullName: System.Security.AccessControl.ObjectSecurity<T>.SetAuditRule(System.Security.AccessControl.AuditRule<T>)
  type: Method
  source:
    remote:
      path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: SetAuditRule
    path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs
    startLine: 439
  assemblies:
  - System.Security.AccessControl
  namespace: System.Security.AccessControl
  summary: "\n<p>Removes all audit rules that contain the same security identifier and qualifier as the specified audit rule in the System Access Control List (SACL) associated with this ObjectSecurity`1 object and then adds the specified audit rule.</p>\n"
  syntax:
    content: public virtual void SetAuditRule(AuditRule<T> rule)
    content.vb: Public Overridable Sub SetAuditRule(rule As AuditRule(Of T))
    parameters:
    - id: rule
      type: System.Security.AccessControl.AuditRule{{T}}
      description: "\n<p>The audit rule to set.</p>\n"
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: System.Security.AccessControl.ObjectSecurity(Of T).SetAuditRule(System.Security.AccessControl.AuditRule(Of T))
  name.vb: SetAuditRule(AuditRule(Of T))
references:
- uid: System.Security.AccessControl
  isExternal: false
  name: System.Security.AccessControl
  fullName: System.Security.AccessControl
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System.Security.AccessControl.ObjectSecurity
  parent: System.Security.AccessControl
  isExternal: false
  name: ObjectSecurity
  fullName: System.Security.AccessControl.ObjectSecurity
- uid: System.Security.AccessControl.CommonObjectSecurity
  parent: System.Security.AccessControl
  isExternal: false
  name: CommonObjectSecurity
  fullName: System.Security.AccessControl.CommonObjectSecurity
- uid: System.Security.AccessControl.NativeObjectSecurity
  parent: System.Security.AccessControl
  isExternal: false
  name: NativeObjectSecurity
  fullName: System.Security.AccessControl.NativeObjectSecurity
- uid: System.Security.AccessControl.NativeObjectSecurity.Persist(System.Runtime.InteropServices.SafeHandle,System.Security.AccessControl.AccessControlSections)
  parent: System.Security.AccessControl.NativeObjectSecurity
  isExternal: true
  name: Persist(SafeHandle, AccessControlSections)
  fullName: System.Security.AccessControl.NativeObjectSecurity.Persist(System.Runtime.InteropServices.SafeHandle, System.Security.AccessControl.AccessControlSections)
  spec.csharp:
  - uid: System.Security.AccessControl.NativeObjectSecurity.Persist(System.Runtime.InteropServices.SafeHandle,System.Security.AccessControl.AccessControlSections)
    name: Persist
    fullName: System.Security.AccessControl.NativeObjectSecurity.Persist
  - name: (
    fullName: (
  - uid: System.Runtime.InteropServices.SafeHandle
    name: SafeHandle
    fullName: System.Runtime.InteropServices.SafeHandle
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Security.AccessControl.AccessControlSections
    name: AccessControlSections
    fullName: System.Security.AccessControl.AccessControlSections
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Security.AccessControl.NativeObjectSecurity.Persist(System.Runtime.InteropServices.SafeHandle,System.Security.AccessControl.AccessControlSections)
    name: Persist
    fullName: System.Security.AccessControl.NativeObjectSecurity.Persist
  - name: (
    fullName: (
  - uid: System.Runtime.InteropServices.SafeHandle
    name: SafeHandle
    fullName: System.Runtime.InteropServices.SafeHandle
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Security.AccessControl.AccessControlSections
    name: AccessControlSections
    fullName: System.Security.AccessControl.AccessControlSections
  - name: )
    fullName: )
- uid: System.Security.AccessControl.NativeObjectSecurity.Persist(System.Runtime.InteropServices.SafeHandle,System.Security.AccessControl.AccessControlSections,System.Object)
  parent: System.Security.AccessControl.NativeObjectSecurity
  isExternal: true
  name: Persist(SafeHandle, AccessControlSections, Object)
  fullName: System.Security.AccessControl.NativeObjectSecurity.Persist(System.Runtime.InteropServices.SafeHandle, System.Security.AccessControl.AccessControlSections, System.Object)
  spec.csharp:
  - uid: System.Security.AccessControl.NativeObjectSecurity.Persist(System.Runtime.InteropServices.SafeHandle,System.Security.AccessControl.AccessControlSections,System.Object)
    name: Persist
    fullName: System.Security.AccessControl.NativeObjectSecurity.Persist
  - name: (
    fullName: (
  - uid: System.Runtime.InteropServices.SafeHandle
    name: SafeHandle
    fullName: System.Runtime.InteropServices.SafeHandle
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Security.AccessControl.AccessControlSections
    name: AccessControlSections
    fullName: System.Security.AccessControl.AccessControlSections
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Security.AccessControl.NativeObjectSecurity.Persist(System.Runtime.InteropServices.SafeHandle,System.Security.AccessControl.AccessControlSections,System.Object)
    name: Persist
    fullName: System.Security.AccessControl.NativeObjectSecurity.Persist
  - name: (
    fullName: (
  - uid: System.Runtime.InteropServices.SafeHandle
    name: SafeHandle
    fullName: System.Runtime.InteropServices.SafeHandle
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Security.AccessControl.AccessControlSections
    name: AccessControlSections
    fullName: System.Security.AccessControl.AccessControlSections
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Security.AccessControl.NativeObjectSecurity.Persist(System.String,System.Security.AccessControl.AccessControlSections)
  parent: System.Security.AccessControl.NativeObjectSecurity
  isExternal: true
  name: Persist(String, AccessControlSections)
  fullName: System.Security.AccessControl.NativeObjectSecurity.Persist(System.String, System.Security.AccessControl.AccessControlSections)
  spec.csharp:
  - uid: System.Security.AccessControl.NativeObjectSecurity.Persist(System.String,System.Security.AccessControl.AccessControlSections)
    name: Persist
    fullName: System.Security.AccessControl.NativeObjectSecurity.Persist
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Security.AccessControl.AccessControlSections
    name: AccessControlSections
    fullName: System.Security.AccessControl.AccessControlSections
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Security.AccessControl.NativeObjectSecurity.Persist(System.String,System.Security.AccessControl.AccessControlSections)
    name: Persist
    fullName: System.Security.AccessControl.NativeObjectSecurity.Persist
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Security.AccessControl.AccessControlSections
    name: AccessControlSections
    fullName: System.Security.AccessControl.AccessControlSections
  - name: )
    fullName: )
- uid: System.Security.AccessControl.NativeObjectSecurity.Persist(System.String,System.Security.AccessControl.AccessControlSections,System.Object)
  parent: System.Security.AccessControl.NativeObjectSecurity
  isExternal: true
  name: Persist(String, AccessControlSections, Object)
  fullName: System.Security.AccessControl.NativeObjectSecurity.Persist(System.String, System.Security.AccessControl.AccessControlSections, System.Object)
  spec.csharp:
  - uid: System.Security.AccessControl.NativeObjectSecurity.Persist(System.String,System.Security.AccessControl.AccessControlSections,System.Object)
    name: Persist
    fullName: System.Security.AccessControl.NativeObjectSecurity.Persist
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Security.AccessControl.AccessControlSections
    name: AccessControlSections
    fullName: System.Security.AccessControl.AccessControlSections
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Security.AccessControl.NativeObjectSecurity.Persist(System.String,System.Security.AccessControl.AccessControlSections,System.Object)
    name: Persist
    fullName: System.Security.AccessControl.NativeObjectSecurity.Persist
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Security.AccessControl.AccessControlSections
    name: AccessControlSections
    fullName: System.Security.AccessControl.AccessControlSections
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Security.AccessControl.CommonObjectSecurity.AddAccessRule(System.Security.AccessControl.AccessRule)
  parent: System.Security.AccessControl.CommonObjectSecurity
  isExternal: false
  name: AddAccessRule(AccessRule)
  fullName: System.Security.AccessControl.CommonObjectSecurity.AddAccessRule(System.Security.AccessControl.AccessRule)
  spec.csharp:
  - uid: System.Security.AccessControl.CommonObjectSecurity.AddAccessRule(System.Security.AccessControl.AccessRule)
    name: AddAccessRule
    fullName: System.Security.AccessControl.CommonObjectSecurity.AddAccessRule
  - name: (
    fullName: (
  - uid: System.Security.AccessControl.AccessRule
    name: AccessRule
    fullName: System.Security.AccessControl.AccessRule
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Security.AccessControl.CommonObjectSecurity.AddAccessRule(System.Security.AccessControl.AccessRule)
    name: AddAccessRule
    fullName: System.Security.AccessControl.CommonObjectSecurity.AddAccessRule
  - name: (
    fullName: (
  - uid: System.Security.AccessControl.AccessRule
    name: AccessRule
    fullName: System.Security.AccessControl.AccessRule
  - name: )
    fullName: )
- uid: System.Security.AccessControl.CommonObjectSecurity.AddAuditRule(System.Security.AccessControl.AuditRule)
  parent: System.Security.AccessControl.CommonObjectSecurity
  isExternal: false
  name: AddAuditRule(AuditRule)
  fullName: System.Security.AccessControl.CommonObjectSecurity.AddAuditRule(System.Security.AccessControl.AuditRule)
  spec.csharp:
  - uid: System.Security.AccessControl.CommonObjectSecurity.AddAuditRule(System.Security.AccessControl.AuditRule)
    name: AddAuditRule
    fullName: System.Security.AccessControl.CommonObjectSecurity.AddAuditRule
  - name: (
    fullName: (
  - uid: System.Security.AccessControl.AuditRule
    name: AuditRule
    fullName: System.Security.AccessControl.AuditRule
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Security.AccessControl.CommonObjectSecurity.AddAuditRule(System.Security.AccessControl.AuditRule)
    name: AddAuditRule
    fullName: System.Security.AccessControl.CommonObjectSecurity.AddAuditRule
  - name: (
    fullName: (
  - uid: System.Security.AccessControl.AuditRule
    name: AuditRule
    fullName: System.Security.AccessControl.AuditRule
  - name: )
    fullName: )
- uid: System.Security.AccessControl.CommonObjectSecurity.GetAccessRules(System.Boolean,System.Boolean,System.Type)
  parent: System.Security.AccessControl.CommonObjectSecurity
  isExternal: true
  name: GetAccessRules(Boolean, Boolean, Type)
  fullName: System.Security.AccessControl.CommonObjectSecurity.GetAccessRules(System.Boolean, System.Boolean, System.Type)
  spec.csharp:
  - uid: System.Security.AccessControl.CommonObjectSecurity.GetAccessRules(System.Boolean,System.Boolean,System.Type)
    name: GetAccessRules
    fullName: System.Security.AccessControl.CommonObjectSecurity.GetAccessRules
  - name: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Security.AccessControl.CommonObjectSecurity.GetAccessRules(System.Boolean,System.Boolean,System.Type)
    name: GetAccessRules
    fullName: System.Security.AccessControl.CommonObjectSecurity.GetAccessRules
  - name: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: )
    fullName: )
- uid: System.Security.AccessControl.CommonObjectSecurity.GetAuditRules(System.Boolean,System.Boolean,System.Type)
  parent: System.Security.AccessControl.CommonObjectSecurity
  isExternal: true
  name: GetAuditRules(Boolean, Boolean, Type)
  fullName: System.Security.AccessControl.CommonObjectSecurity.GetAuditRules(System.Boolean, System.Boolean, System.Type)
  spec.csharp:
  - uid: System.Security.AccessControl.CommonObjectSecurity.GetAuditRules(System.Boolean,System.Boolean,System.Type)
    name: GetAuditRules
    fullName: System.Security.AccessControl.CommonObjectSecurity.GetAuditRules
  - name: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Security.AccessControl.CommonObjectSecurity.GetAuditRules(System.Boolean,System.Boolean,System.Type)
    name: GetAuditRules
    fullName: System.Security.AccessControl.CommonObjectSecurity.GetAuditRules
  - name: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: )
    fullName: )
- uid: System.Security.AccessControl.CommonObjectSecurity.ModifyAccess(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)
  parent: System.Security.AccessControl.CommonObjectSecurity
  isExternal: true
  name: ModifyAccess(AccessControlModification, AccessRule, Boolean)
  fullName: System.Security.AccessControl.CommonObjectSecurity.ModifyAccess(System.Security.AccessControl.AccessControlModification, System.Security.AccessControl.AccessRule, System.Boolean)
  spec.csharp:
  - uid: System.Security.AccessControl.CommonObjectSecurity.ModifyAccess(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)
    name: ModifyAccess
    fullName: System.Security.AccessControl.CommonObjectSecurity.ModifyAccess
  - name: (
    fullName: (
  - uid: System.Security.AccessControl.AccessControlModification
    name: AccessControlModification
    fullName: System.Security.AccessControl.AccessControlModification
  - name: ', '
    fullName: ', '
  - uid: System.Security.AccessControl.AccessRule
    name: AccessRule
    fullName: System.Security.AccessControl.AccessRule
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Security.AccessControl.CommonObjectSecurity.ModifyAccess(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)
    name: ModifyAccess
    fullName: System.Security.AccessControl.CommonObjectSecurity.ModifyAccess
  - name: (
    fullName: (
  - uid: System.Security.AccessControl.AccessControlModification
    name: AccessControlModification
    fullName: System.Security.AccessControl.AccessControlModification
  - name: ', '
    fullName: ', '
  - uid: System.Security.AccessControl.AccessRule
    name: AccessRule
    fullName: System.Security.AccessControl.AccessRule
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
- uid: System.Security.AccessControl.CommonObjectSecurity.ModifyAudit(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)
  parent: System.Security.AccessControl.CommonObjectSecurity
  isExternal: true
  name: ModifyAudit(AccessControlModification, AuditRule, Boolean)
  fullName: System.Security.AccessControl.CommonObjectSecurity.ModifyAudit(System.Security.AccessControl.AccessControlModification, System.Security.AccessControl.AuditRule, System.Boolean)
  spec.csharp:
  - uid: System.Security.AccessControl.CommonObjectSecurity.ModifyAudit(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)
    name: ModifyAudit
    fullName: System.Security.AccessControl.CommonObjectSecurity.ModifyAudit
  - name: (
    fullName: (
  - uid: System.Security.AccessControl.AccessControlModification
    name: AccessControlModification
    fullName: System.Security.AccessControl.AccessControlModification
  - name: ', '
    fullName: ', '
  - uid: System.Security.AccessControl.AuditRule
    name: AuditRule
    fullName: System.Security.AccessControl.AuditRule
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Security.AccessControl.CommonObjectSecurity.ModifyAudit(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)
    name: ModifyAudit
    fullName: System.Security.AccessControl.CommonObjectSecurity.ModifyAudit
  - name: (
    fullName: (
  - uid: System.Security.AccessControl.AccessControlModification
    name: AccessControlModification
    fullName: System.Security.AccessControl.AccessControlModification
  - name: ', '
    fullName: ', '
  - uid: System.Security.AccessControl.AuditRule
    name: AuditRule
    fullName: System.Security.AccessControl.AuditRule
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
- uid: System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRule(System.Security.AccessControl.AccessRule)
  parent: System.Security.AccessControl.CommonObjectSecurity
  isExternal: false
  name: RemoveAccessRule(AccessRule)
  fullName: System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRule(System.Security.AccessControl.AccessRule)
  spec.csharp:
  - uid: System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRule(System.Security.AccessControl.AccessRule)
    name: RemoveAccessRule
    fullName: System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRule
  - name: (
    fullName: (
  - uid: System.Security.AccessControl.AccessRule
    name: AccessRule
    fullName: System.Security.AccessControl.AccessRule
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRule(System.Security.AccessControl.AccessRule)
    name: RemoveAccessRule
    fullName: System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRule
  - name: (
    fullName: (
  - uid: System.Security.AccessControl.AccessRule
    name: AccessRule
    fullName: System.Security.AccessControl.AccessRule
  - name: )
    fullName: )
- uid: System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRuleAll(System.Security.AccessControl.AccessRule)
  parent: System.Security.AccessControl.CommonObjectSecurity
  isExternal: false
  name: RemoveAccessRuleAll(AccessRule)
  fullName: System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRuleAll(System.Security.AccessControl.AccessRule)
  spec.csharp:
  - uid: System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRuleAll(System.Security.AccessControl.AccessRule)
    name: RemoveAccessRuleAll
    fullName: System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRuleAll
  - name: (
    fullName: (
  - uid: System.Security.AccessControl.AccessRule
    name: AccessRule
    fullName: System.Security.AccessControl.AccessRule
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRuleAll(System.Security.AccessControl.AccessRule)
    name: RemoveAccessRuleAll
    fullName: System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRuleAll
  - name: (
    fullName: (
  - uid: System.Security.AccessControl.AccessRule
    name: AccessRule
    fullName: System.Security.AccessControl.AccessRule
  - name: )
    fullName: )
- uid: System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRuleSpecific(System.Security.AccessControl.AccessRule)
  parent: System.Security.AccessControl.CommonObjectSecurity
  isExternal: false
  name: RemoveAccessRuleSpecific(AccessRule)
  fullName: System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRuleSpecific(System.Security.AccessControl.AccessRule)
  spec.csharp:
  - uid: System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRuleSpecific(System.Security.AccessControl.AccessRule)
    name: RemoveAccessRuleSpecific
    fullName: System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRuleSpecific
  - name: (
    fullName: (
  - uid: System.Security.AccessControl.AccessRule
    name: AccessRule
    fullName: System.Security.AccessControl.AccessRule
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRuleSpecific(System.Security.AccessControl.AccessRule)
    name: RemoveAccessRuleSpecific
    fullName: System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRuleSpecific
  - name: (
    fullName: (
  - uid: System.Security.AccessControl.AccessRule
    name: AccessRule
    fullName: System.Security.AccessControl.AccessRule
  - name: )
    fullName: )
- uid: System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRule(System.Security.AccessControl.AuditRule)
  parent: System.Security.AccessControl.CommonObjectSecurity
  isExternal: false
  name: RemoveAuditRule(AuditRule)
  fullName: System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRule(System.Security.AccessControl.AuditRule)
  spec.csharp:
  - uid: System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRule(System.Security.AccessControl.AuditRule)
    name: RemoveAuditRule
    fullName: System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRule
  - name: (
    fullName: (
  - uid: System.Security.AccessControl.AuditRule
    name: AuditRule
    fullName: System.Security.AccessControl.AuditRule
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRule(System.Security.AccessControl.AuditRule)
    name: RemoveAuditRule
    fullName: System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRule
  - name: (
    fullName: (
  - uid: System.Security.AccessControl.AuditRule
    name: AuditRule
    fullName: System.Security.AccessControl.AuditRule
  - name: )
    fullName: )
- uid: System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRuleAll(System.Security.AccessControl.AuditRule)
  parent: System.Security.AccessControl.CommonObjectSecurity
  isExternal: false
  name: RemoveAuditRuleAll(AuditRule)
  fullName: System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRuleAll(System.Security.AccessControl.AuditRule)
  spec.csharp:
  - uid: System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRuleAll(System.Security.AccessControl.AuditRule)
    name: RemoveAuditRuleAll
    fullName: System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRuleAll
  - name: (
    fullName: (
  - uid: System.Security.AccessControl.AuditRule
    name: AuditRule
    fullName: System.Security.AccessControl.AuditRule
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRuleAll(System.Security.AccessControl.AuditRule)
    name: RemoveAuditRuleAll
    fullName: System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRuleAll
  - name: (
    fullName: (
  - uid: System.Security.AccessControl.AuditRule
    name: AuditRule
    fullName: System.Security.AccessControl.AuditRule
  - name: )
    fullName: )
- uid: System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRuleSpecific(System.Security.AccessControl.AuditRule)
  parent: System.Security.AccessControl.CommonObjectSecurity
  isExternal: false
  name: RemoveAuditRuleSpecific(AuditRule)
  fullName: System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRuleSpecific(System.Security.AccessControl.AuditRule)
  spec.csharp:
  - uid: System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRuleSpecific(System.Security.AccessControl.AuditRule)
    name: RemoveAuditRuleSpecific
    fullName: System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRuleSpecific
  - name: (
    fullName: (
  - uid: System.Security.AccessControl.AuditRule
    name: AuditRule
    fullName: System.Security.AccessControl.AuditRule
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRuleSpecific(System.Security.AccessControl.AuditRule)
    name: RemoveAuditRuleSpecific
    fullName: System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRuleSpecific
  - name: (
    fullName: (
  - uid: System.Security.AccessControl.AuditRule
    name: AuditRule
    fullName: System.Security.AccessControl.AuditRule
  - name: )
    fullName: )
- uid: System.Security.AccessControl.CommonObjectSecurity.ResetAccessRule(System.Security.AccessControl.AccessRule)
  parent: System.Security.AccessControl.CommonObjectSecurity
  isExternal: false
  name: ResetAccessRule(AccessRule)
  fullName: System.Security.AccessControl.CommonObjectSecurity.ResetAccessRule(System.Security.AccessControl.AccessRule)
  spec.csharp:
  - uid: System.Security.AccessControl.CommonObjectSecurity.ResetAccessRule(System.Security.AccessControl.AccessRule)
    name: ResetAccessRule
    fullName: System.Security.AccessControl.CommonObjectSecurity.ResetAccessRule
  - name: (
    fullName: (
  - uid: System.Security.AccessControl.AccessRule
    name: AccessRule
    fullName: System.Security.AccessControl.AccessRule
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Security.AccessControl.CommonObjectSecurity.ResetAccessRule(System.Security.AccessControl.AccessRule)
    name: ResetAccessRule
    fullName: System.Security.AccessControl.CommonObjectSecurity.ResetAccessRule
  - name: (
    fullName: (
  - uid: System.Security.AccessControl.AccessRule
    name: AccessRule
    fullName: System.Security.AccessControl.AccessRule
  - name: )
    fullName: )
- uid: System.Security.AccessControl.CommonObjectSecurity.SetAccessRule(System.Security.AccessControl.AccessRule)
  parent: System.Security.AccessControl.CommonObjectSecurity
  isExternal: false
  name: SetAccessRule(AccessRule)
  fullName: System.Security.AccessControl.CommonObjectSecurity.SetAccessRule(System.Security.AccessControl.AccessRule)
  spec.csharp:
  - uid: System.Security.AccessControl.CommonObjectSecurity.SetAccessRule(System.Security.AccessControl.AccessRule)
    name: SetAccessRule
    fullName: System.Security.AccessControl.CommonObjectSecurity.SetAccessRule
  - name: (
    fullName: (
  - uid: System.Security.AccessControl.AccessRule
    name: AccessRule
    fullName: System.Security.AccessControl.AccessRule
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Security.AccessControl.CommonObjectSecurity.SetAccessRule(System.Security.AccessControl.AccessRule)
    name: SetAccessRule
    fullName: System.Security.AccessControl.CommonObjectSecurity.SetAccessRule
  - name: (
    fullName: (
  - uid: System.Security.AccessControl.AccessRule
    name: AccessRule
    fullName: System.Security.AccessControl.AccessRule
  - name: )
    fullName: )
- uid: System.Security.AccessControl.CommonObjectSecurity.SetAuditRule(System.Security.AccessControl.AuditRule)
  parent: System.Security.AccessControl.CommonObjectSecurity
  isExternal: false
  name: SetAuditRule(AuditRule)
  fullName: System.Security.AccessControl.CommonObjectSecurity.SetAuditRule(System.Security.AccessControl.AuditRule)
  spec.csharp:
  - uid: System.Security.AccessControl.CommonObjectSecurity.SetAuditRule(System.Security.AccessControl.AuditRule)
    name: SetAuditRule
    fullName: System.Security.AccessControl.CommonObjectSecurity.SetAuditRule
  - name: (
    fullName: (
  - uid: System.Security.AccessControl.AuditRule
    name: AuditRule
    fullName: System.Security.AccessControl.AuditRule
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Security.AccessControl.CommonObjectSecurity.SetAuditRule(System.Security.AccessControl.AuditRule)
    name: SetAuditRule
    fullName: System.Security.AccessControl.CommonObjectSecurity.SetAuditRule
  - name: (
    fullName: (
  - uid: System.Security.AccessControl.AuditRule
    name: AuditRule
    fullName: System.Security.AccessControl.AuditRule
  - name: )
    fullName: )
- uid: System.Security.AccessControl.ObjectSecurity.AccessRulesModified
  parent: System.Security.AccessControl.ObjectSecurity
  isExternal: false
  name: AccessRulesModified
  fullName: System.Security.AccessControl.ObjectSecurity.AccessRulesModified
- uid: System.Security.AccessControl.ObjectSecurity.AreAccessRulesCanonical
  parent: System.Security.AccessControl.ObjectSecurity
  isExternal: false
  name: AreAccessRulesCanonical
  fullName: System.Security.AccessControl.ObjectSecurity.AreAccessRulesCanonical
- uid: System.Security.AccessControl.ObjectSecurity.AreAccessRulesProtected
  parent: System.Security.AccessControl.ObjectSecurity
  isExternal: false
  name: AreAccessRulesProtected
  fullName: System.Security.AccessControl.ObjectSecurity.AreAccessRulesProtected
- uid: System.Security.AccessControl.ObjectSecurity.AreAuditRulesCanonical
  parent: System.Security.AccessControl.ObjectSecurity
  isExternal: false
  name: AreAuditRulesCanonical
  fullName: System.Security.AccessControl.ObjectSecurity.AreAuditRulesCanonical
- uid: System.Security.AccessControl.ObjectSecurity.AreAuditRulesProtected
  parent: System.Security.AccessControl.ObjectSecurity
  isExternal: false
  name: AreAuditRulesProtected
  fullName: System.Security.AccessControl.ObjectSecurity.AreAuditRulesProtected
- uid: System.Security.AccessControl.ObjectSecurity.AuditRulesModified
  parent: System.Security.AccessControl.ObjectSecurity
  isExternal: false
  name: AuditRulesModified
  fullName: System.Security.AccessControl.ObjectSecurity.AuditRulesModified
- uid: System.Security.AccessControl.ObjectSecurity.GroupModified
  parent: System.Security.AccessControl.ObjectSecurity
  isExternal: false
  name: GroupModified
  fullName: System.Security.AccessControl.ObjectSecurity.GroupModified
- uid: System.Security.AccessControl.ObjectSecurity.IsContainer
  parent: System.Security.AccessControl.ObjectSecurity
  isExternal: false
  name: IsContainer
  fullName: System.Security.AccessControl.ObjectSecurity.IsContainer
- uid: System.Security.AccessControl.ObjectSecurity.IsDS
  parent: System.Security.AccessControl.ObjectSecurity
  isExternal: false
  name: IsDS
  fullName: System.Security.AccessControl.ObjectSecurity.IsDS
- uid: System.Security.AccessControl.ObjectSecurity.OwnerModified
  parent: System.Security.AccessControl.ObjectSecurity
  isExternal: false
  name: OwnerModified
  fullName: System.Security.AccessControl.ObjectSecurity.OwnerModified
- uid: System.Security.AccessControl.ObjectSecurity.GetGroup(System.Type)
  parent: System.Security.AccessControl.ObjectSecurity
  isExternal: true
  name: GetGroup(Type)
  fullName: System.Security.AccessControl.ObjectSecurity.GetGroup(System.Type)
  spec.csharp:
  - uid: System.Security.AccessControl.ObjectSecurity.GetGroup(System.Type)
    name: GetGroup
    fullName: System.Security.AccessControl.ObjectSecurity.GetGroup
  - name: (
    fullName: (
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Security.AccessControl.ObjectSecurity.GetGroup(System.Type)
    name: GetGroup
    fullName: System.Security.AccessControl.ObjectSecurity.GetGroup
  - name: (
    fullName: (
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: )
    fullName: )
- uid: System.Security.AccessControl.ObjectSecurity.GetOwner(System.Type)
  parent: System.Security.AccessControl.ObjectSecurity
  isExternal: true
  name: GetOwner(Type)
  fullName: System.Security.AccessControl.ObjectSecurity.GetOwner(System.Type)
  spec.csharp:
  - uid: System.Security.AccessControl.ObjectSecurity.GetOwner(System.Type)
    name: GetOwner
    fullName: System.Security.AccessControl.ObjectSecurity.GetOwner
  - name: (
    fullName: (
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Security.AccessControl.ObjectSecurity.GetOwner(System.Type)
    name: GetOwner
    fullName: System.Security.AccessControl.ObjectSecurity.GetOwner
  - name: (
    fullName: (
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: )
    fullName: )
- uid: System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorBinaryForm
  parent: System.Security.AccessControl.ObjectSecurity
  isExternal: false
  name: GetSecurityDescriptorBinaryForm()
  fullName: System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorBinaryForm()
  spec.csharp:
  - uid: System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorBinaryForm
    name: GetSecurityDescriptorBinaryForm
    fullName: System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorBinaryForm
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorBinaryForm
    name: GetSecurityDescriptorBinaryForm
    fullName: System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorBinaryForm
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorSddlForm(System.Security.AccessControl.AccessControlSections)
  parent: System.Security.AccessControl.ObjectSecurity
  isExternal: false
  name: GetSecurityDescriptorSddlForm(AccessControlSections)
  fullName: System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorSddlForm(System.Security.AccessControl.AccessControlSections)
  spec.csharp:
  - uid: System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorSddlForm(System.Security.AccessControl.AccessControlSections)
    name: GetSecurityDescriptorSddlForm
    fullName: System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorSddlForm
  - name: (
    fullName: (
  - uid: System.Security.AccessControl.AccessControlSections
    name: AccessControlSections
    fullName: System.Security.AccessControl.AccessControlSections
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorSddlForm(System.Security.AccessControl.AccessControlSections)
    name: GetSecurityDescriptorSddlForm
    fullName: System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorSddlForm
  - name: (
    fullName: (
  - uid: System.Security.AccessControl.AccessControlSections
    name: AccessControlSections
    fullName: System.Security.AccessControl.AccessControlSections
  - name: )
    fullName: )
- uid: System.Security.AccessControl.ObjectSecurity.IsSddlConversionSupported
  parent: System.Security.AccessControl.ObjectSecurity
  isExternal: false
  name: IsSddlConversionSupported()
  fullName: System.Security.AccessControl.ObjectSecurity.IsSddlConversionSupported()
  spec.csharp:
  - uid: System.Security.AccessControl.ObjectSecurity.IsSddlConversionSupported
    name: IsSddlConversionSupported
    fullName: System.Security.AccessControl.ObjectSecurity.IsSddlConversionSupported
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Security.AccessControl.ObjectSecurity.IsSddlConversionSupported
    name: IsSddlConversionSupported
    fullName: System.Security.AccessControl.ObjectSecurity.IsSddlConversionSupported
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Security.AccessControl.ObjectSecurity.ModifyAccessRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)
  parent: System.Security.AccessControl.ObjectSecurity
  isExternal: true
  name: ModifyAccessRule(AccessControlModification, AccessRule, Boolean)
  fullName: System.Security.AccessControl.ObjectSecurity.ModifyAccessRule(System.Security.AccessControl.AccessControlModification, System.Security.AccessControl.AccessRule, System.Boolean)
  spec.csharp:
  - uid: System.Security.AccessControl.ObjectSecurity.ModifyAccessRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)
    name: ModifyAccessRule
    fullName: System.Security.AccessControl.ObjectSecurity.ModifyAccessRule
  - name: (
    fullName: (
  - uid: System.Security.AccessControl.AccessControlModification
    name: AccessControlModification
    fullName: System.Security.AccessControl.AccessControlModification
  - name: ', '
    fullName: ', '
  - uid: System.Security.AccessControl.AccessRule
    name: AccessRule
    fullName: System.Security.AccessControl.AccessRule
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Security.AccessControl.ObjectSecurity.ModifyAccessRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)
    name: ModifyAccessRule
    fullName: System.Security.AccessControl.ObjectSecurity.ModifyAccessRule
  - name: (
    fullName: (
  - uid: System.Security.AccessControl.AccessControlModification
    name: AccessControlModification
    fullName: System.Security.AccessControl.AccessControlModification
  - name: ', '
    fullName: ', '
  - uid: System.Security.AccessControl.AccessRule
    name: AccessRule
    fullName: System.Security.AccessControl.AccessRule
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
- uid: System.Security.AccessControl.ObjectSecurity.ModifyAuditRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)
  parent: System.Security.AccessControl.ObjectSecurity
  isExternal: true
  name: ModifyAuditRule(AccessControlModification, AuditRule, Boolean)
  fullName: System.Security.AccessControl.ObjectSecurity.ModifyAuditRule(System.Security.AccessControl.AccessControlModification, System.Security.AccessControl.AuditRule, System.Boolean)
  spec.csharp:
  - uid: System.Security.AccessControl.ObjectSecurity.ModifyAuditRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)
    name: ModifyAuditRule
    fullName: System.Security.AccessControl.ObjectSecurity.ModifyAuditRule
  - name: (
    fullName: (
  - uid: System.Security.AccessControl.AccessControlModification
    name: AccessControlModification
    fullName: System.Security.AccessControl.AccessControlModification
  - name: ', '
    fullName: ', '
  - uid: System.Security.AccessControl.AuditRule
    name: AuditRule
    fullName: System.Security.AccessControl.AuditRule
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Security.AccessControl.ObjectSecurity.ModifyAuditRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)
    name: ModifyAuditRule
    fullName: System.Security.AccessControl.ObjectSecurity.ModifyAuditRule
  - name: (
    fullName: (
  - uid: System.Security.AccessControl.AccessControlModification
    name: AccessControlModification
    fullName: System.Security.AccessControl.AccessControlModification
  - name: ', '
    fullName: ', '
  - uid: System.Security.AccessControl.AuditRule
    name: AuditRule
    fullName: System.Security.AccessControl.AuditRule
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
- uid: System.Security.AccessControl.ObjectSecurity.Persist(System.Boolean,System.String,System.Security.AccessControl.AccessControlSections)
  parent: System.Security.AccessControl.ObjectSecurity
  isExternal: true
  name: Persist(Boolean, String, AccessControlSections)
  fullName: System.Security.AccessControl.ObjectSecurity.Persist(System.Boolean, System.String, System.Security.AccessControl.AccessControlSections)
  spec.csharp:
  - uid: System.Security.AccessControl.ObjectSecurity.Persist(System.Boolean,System.String,System.Security.AccessControl.AccessControlSections)
    name: Persist
    fullName: System.Security.AccessControl.ObjectSecurity.Persist
  - name: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Security.AccessControl.AccessControlSections
    name: AccessControlSections
    fullName: System.Security.AccessControl.AccessControlSections
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Security.AccessControl.ObjectSecurity.Persist(System.Boolean,System.String,System.Security.AccessControl.AccessControlSections)
    name: Persist
    fullName: System.Security.AccessControl.ObjectSecurity.Persist
  - name: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Security.AccessControl.AccessControlSections
    name: AccessControlSections
    fullName: System.Security.AccessControl.AccessControlSections
  - name: )
    fullName: )
- uid: System.Security.AccessControl.ObjectSecurity.PurgeAccessRules(System.Security.Principal.IdentityReference)
  parent: System.Security.AccessControl.ObjectSecurity
  isExternal: true
  name: PurgeAccessRules(IdentityReference)
  fullName: System.Security.AccessControl.ObjectSecurity.PurgeAccessRules(System.Security.Principal.IdentityReference)
  spec.csharp:
  - uid: System.Security.AccessControl.ObjectSecurity.PurgeAccessRules(System.Security.Principal.IdentityReference)
    name: PurgeAccessRules
    fullName: System.Security.AccessControl.ObjectSecurity.PurgeAccessRules
  - name: (
    fullName: (
  - uid: System.Security.Principal.IdentityReference
    name: IdentityReference
    fullName: System.Security.Principal.IdentityReference
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Security.AccessControl.ObjectSecurity.PurgeAccessRules(System.Security.Principal.IdentityReference)
    name: PurgeAccessRules
    fullName: System.Security.AccessControl.ObjectSecurity.PurgeAccessRules
  - name: (
    fullName: (
  - uid: System.Security.Principal.IdentityReference
    name: IdentityReference
    fullName: System.Security.Principal.IdentityReference
    isExternal: true
  - name: )
    fullName: )
- uid: System.Security.AccessControl.ObjectSecurity.PurgeAuditRules(System.Security.Principal.IdentityReference)
  parent: System.Security.AccessControl.ObjectSecurity
  isExternal: true
  name: PurgeAuditRules(IdentityReference)
  fullName: System.Security.AccessControl.ObjectSecurity.PurgeAuditRules(System.Security.Principal.IdentityReference)
  spec.csharp:
  - uid: System.Security.AccessControl.ObjectSecurity.PurgeAuditRules(System.Security.Principal.IdentityReference)
    name: PurgeAuditRules
    fullName: System.Security.AccessControl.ObjectSecurity.PurgeAuditRules
  - name: (
    fullName: (
  - uid: System.Security.Principal.IdentityReference
    name: IdentityReference
    fullName: System.Security.Principal.IdentityReference
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Security.AccessControl.ObjectSecurity.PurgeAuditRules(System.Security.Principal.IdentityReference)
    name: PurgeAuditRules
    fullName: System.Security.AccessControl.ObjectSecurity.PurgeAuditRules
  - name: (
    fullName: (
  - uid: System.Security.Principal.IdentityReference
    name: IdentityReference
    fullName: System.Security.Principal.IdentityReference
    isExternal: true
  - name: )
    fullName: )
- uid: System.Security.AccessControl.ObjectSecurity.ReadLock
  parent: System.Security.AccessControl.ObjectSecurity
  isExternal: false
  name: ReadLock()
  fullName: System.Security.AccessControl.ObjectSecurity.ReadLock()
  spec.csharp:
  - uid: System.Security.AccessControl.ObjectSecurity.ReadLock
    name: ReadLock
    fullName: System.Security.AccessControl.ObjectSecurity.ReadLock
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Security.AccessControl.ObjectSecurity.ReadLock
    name: ReadLock
    fullName: System.Security.AccessControl.ObjectSecurity.ReadLock
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Security.AccessControl.ObjectSecurity.ReadUnlock
  parent: System.Security.AccessControl.ObjectSecurity
  isExternal: false
  name: ReadUnlock()
  fullName: System.Security.AccessControl.ObjectSecurity.ReadUnlock()
  spec.csharp:
  - uid: System.Security.AccessControl.ObjectSecurity.ReadUnlock
    name: ReadUnlock
    fullName: System.Security.AccessControl.ObjectSecurity.ReadUnlock
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Security.AccessControl.ObjectSecurity.ReadUnlock
    name: ReadUnlock
    fullName: System.Security.AccessControl.ObjectSecurity.ReadUnlock
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Security.AccessControl.ObjectSecurity.SetAccessRuleProtection(System.Boolean,System.Boolean)
  parent: System.Security.AccessControl.ObjectSecurity
  isExternal: true
  name: SetAccessRuleProtection(Boolean, Boolean)
  fullName: System.Security.AccessControl.ObjectSecurity.SetAccessRuleProtection(System.Boolean, System.Boolean)
  spec.csharp:
  - uid: System.Security.AccessControl.ObjectSecurity.SetAccessRuleProtection(System.Boolean,System.Boolean)
    name: SetAccessRuleProtection
    fullName: System.Security.AccessControl.ObjectSecurity.SetAccessRuleProtection
  - name: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Security.AccessControl.ObjectSecurity.SetAccessRuleProtection(System.Boolean,System.Boolean)
    name: SetAccessRuleProtection
    fullName: System.Security.AccessControl.ObjectSecurity.SetAccessRuleProtection
  - name: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
- uid: System.Security.AccessControl.ObjectSecurity.SetAuditRuleProtection(System.Boolean,System.Boolean)
  parent: System.Security.AccessControl.ObjectSecurity
  isExternal: true
  name: SetAuditRuleProtection(Boolean, Boolean)
  fullName: System.Security.AccessControl.ObjectSecurity.SetAuditRuleProtection(System.Boolean, System.Boolean)
  spec.csharp:
  - uid: System.Security.AccessControl.ObjectSecurity.SetAuditRuleProtection(System.Boolean,System.Boolean)
    name: SetAuditRuleProtection
    fullName: System.Security.AccessControl.ObjectSecurity.SetAuditRuleProtection
  - name: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Security.AccessControl.ObjectSecurity.SetAuditRuleProtection(System.Boolean,System.Boolean)
    name: SetAuditRuleProtection
    fullName: System.Security.AccessControl.ObjectSecurity.SetAuditRuleProtection
  - name: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
- uid: System.Security.AccessControl.ObjectSecurity.SetGroup(System.Security.Principal.IdentityReference)
  parent: System.Security.AccessControl.ObjectSecurity
  isExternal: true
  name: SetGroup(IdentityReference)
  fullName: System.Security.AccessControl.ObjectSecurity.SetGroup(System.Security.Principal.IdentityReference)
  spec.csharp:
  - uid: System.Security.AccessControl.ObjectSecurity.SetGroup(System.Security.Principal.IdentityReference)
    name: SetGroup
    fullName: System.Security.AccessControl.ObjectSecurity.SetGroup
  - name: (
    fullName: (
  - uid: System.Security.Principal.IdentityReference
    name: IdentityReference
    fullName: System.Security.Principal.IdentityReference
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Security.AccessControl.ObjectSecurity.SetGroup(System.Security.Principal.IdentityReference)
    name: SetGroup
    fullName: System.Security.AccessControl.ObjectSecurity.SetGroup
  - name: (
    fullName: (
  - uid: System.Security.Principal.IdentityReference
    name: IdentityReference
    fullName: System.Security.Principal.IdentityReference
    isExternal: true
  - name: )
    fullName: )
- uid: System.Security.AccessControl.ObjectSecurity.SetOwner(System.Security.Principal.IdentityReference)
  parent: System.Security.AccessControl.ObjectSecurity
  isExternal: true
  name: SetOwner(IdentityReference)
  fullName: System.Security.AccessControl.ObjectSecurity.SetOwner(System.Security.Principal.IdentityReference)
  spec.csharp:
  - uid: System.Security.AccessControl.ObjectSecurity.SetOwner(System.Security.Principal.IdentityReference)
    name: SetOwner
    fullName: System.Security.AccessControl.ObjectSecurity.SetOwner
  - name: (
    fullName: (
  - uid: System.Security.Principal.IdentityReference
    name: IdentityReference
    fullName: System.Security.Principal.IdentityReference
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Security.AccessControl.ObjectSecurity.SetOwner(System.Security.Principal.IdentityReference)
    name: SetOwner
    fullName: System.Security.AccessControl.ObjectSecurity.SetOwner
  - name: (
    fullName: (
  - uid: System.Security.Principal.IdentityReference
    name: IdentityReference
    fullName: System.Security.Principal.IdentityReference
    isExternal: true
  - name: )
    fullName: )
- uid: System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm(System.Byte[])
  parent: System.Security.AccessControl.ObjectSecurity
  isExternal: true
  name: SetSecurityDescriptorBinaryForm(Byte[])
  fullName: System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm(System.Byte[])
  fullname.vb: System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm(System.Byte())
  name.vb: SetSecurityDescriptorBinaryForm(Byte())
  spec.csharp:
  - uid: System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm(System.Byte[])
    name: SetSecurityDescriptorBinaryForm
    fullName: System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm
  - name: (
    fullName: (
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    fullName: '[]'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm(System.Byte[])
    name: SetSecurityDescriptorBinaryForm
    fullName: System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm
  - name: (
    fullName: (
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    fullName: ()
  - name: )
    fullName: )
- uid: System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm(System.Byte[],System.Security.AccessControl.AccessControlSections)
  parent: System.Security.AccessControl.ObjectSecurity
  isExternal: true
  name: SetSecurityDescriptorBinaryForm(Byte[], AccessControlSections)
  fullName: System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm(System.Byte[], System.Security.AccessControl.AccessControlSections)
  fullname.vb: System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm(System.Byte(), System.Security.AccessControl.AccessControlSections)
  name.vb: SetSecurityDescriptorBinaryForm(Byte(), AccessControlSections)
  spec.csharp:
  - uid: System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm(System.Byte[],System.Security.AccessControl.AccessControlSections)
    name: SetSecurityDescriptorBinaryForm
    fullName: System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm
  - name: (
    fullName: (
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    fullName: '[]'
  - name: ', '
    fullName: ', '
  - uid: System.Security.AccessControl.AccessControlSections
    name: AccessControlSections
    fullName: System.Security.AccessControl.AccessControlSections
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm(System.Byte[],System.Security.AccessControl.AccessControlSections)
    name: SetSecurityDescriptorBinaryForm
    fullName: System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm
  - name: (
    fullName: (
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    fullName: ()
  - name: ', '
    fullName: ', '
  - uid: System.Security.AccessControl.AccessControlSections
    name: AccessControlSections
    fullName: System.Security.AccessControl.AccessControlSections
  - name: )
    fullName: )
- uid: System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm(System.String)
  parent: System.Security.AccessControl.ObjectSecurity
  isExternal: true
  name: SetSecurityDescriptorSddlForm(String)
  fullName: System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm(System.String)
  spec.csharp:
  - uid: System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm(System.String)
    name: SetSecurityDescriptorSddlForm
    fullName: System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm(System.String)
    name: SetSecurityDescriptorSddlForm
    fullName: System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm(System.String,System.Security.AccessControl.AccessControlSections)
  parent: System.Security.AccessControl.ObjectSecurity
  isExternal: true
  name: SetSecurityDescriptorSddlForm(String, AccessControlSections)
  fullName: System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm(System.String, System.Security.AccessControl.AccessControlSections)
  spec.csharp:
  - uid: System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm(System.String,System.Security.AccessControl.AccessControlSections)
    name: SetSecurityDescriptorSddlForm
    fullName: System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Security.AccessControl.AccessControlSections
    name: AccessControlSections
    fullName: System.Security.AccessControl.AccessControlSections
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm(System.String,System.Security.AccessControl.AccessControlSections)
    name: SetSecurityDescriptorSddlForm
    fullName: System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Security.AccessControl.AccessControlSections
    name: AccessControlSections
    fullName: System.Security.AccessControl.AccessControlSections
  - name: )
    fullName: )
- uid: System.Security.AccessControl.ObjectSecurity.WriteLock
  parent: System.Security.AccessControl.ObjectSecurity
  isExternal: false
  name: WriteLock()
  fullName: System.Security.AccessControl.ObjectSecurity.WriteLock()
  spec.csharp:
  - uid: System.Security.AccessControl.ObjectSecurity.WriteLock
    name: WriteLock
    fullName: System.Security.AccessControl.ObjectSecurity.WriteLock
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Security.AccessControl.ObjectSecurity.WriteLock
    name: WriteLock
    fullName: System.Security.AccessControl.ObjectSecurity.WriteLock
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Security.AccessControl.ObjectSecurity.WriteUnlock
  parent: System.Security.AccessControl.ObjectSecurity
  isExternal: false
  name: WriteUnlock()
  fullName: System.Security.AccessControl.ObjectSecurity.WriteUnlock()
  spec.csharp:
  - uid: System.Security.AccessControl.ObjectSecurity.WriteUnlock
    name: WriteUnlock
    fullName: System.Security.AccessControl.ObjectSecurity.WriteUnlock
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Security.AccessControl.ObjectSecurity.WriteUnlock
    name: WriteUnlock
    fullName: System.Security.AccessControl.ObjectSecurity.WriteUnlock
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  fullName: System.Boolean
- uid: System.Security.AccessControl.ResourceType
  parent: System.Security.AccessControl
  isExternal: false
  name: ResourceType
  fullName: System.Security.AccessControl.ResourceType
- uid: System.Runtime.InteropServices.SafeHandle
  parent: System.Runtime.InteropServices
  isExternal: false
  name: SafeHandle
  fullName: System.Runtime.InteropServices.SafeHandle
- uid: System.Security.AccessControl.AccessControlSections
  parent: System.Security.AccessControl
  isExternal: false
  name: AccessControlSections
  fullName: System.Security.AccessControl.AccessControlSections
- uid: System.Runtime.InteropServices
  isExternal: false
  name: System.Runtime.InteropServices
  fullName: System.Runtime.InteropServices
- uid: System.Security.AccessControl.NativeObjectSecurity.ExceptionFromErrorCode
  parent: System.Security.AccessControl
  isExternal: false
  name: NativeObjectSecurity.ExceptionFromErrorCode
  fullName: System.Security.AccessControl.NativeObjectSecurity.ExceptionFromErrorCode
- uid: System.String
  parent: System
  isExternal: false
  name: String
  fullName: System.String
- uid: System.Security.AccessControl.ObjectSecurity.AccessRightType
  parent: System.Security.AccessControl.ObjectSecurity
  isExternal: false
  name: AccessRightType
  fullName: System.Security.AccessControl.ObjectSecurity.AccessRightType
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  fullName: System.Type
- uid: System.Security.AccessControl.ObjectSecurity.AccessRuleType
  parent: System.Security.AccessControl.ObjectSecurity
  isExternal: false
  name: AccessRuleType
  fullName: System.Security.AccessControl.ObjectSecurity.AccessRuleType
- uid: System.Security.AccessControl.ObjectSecurity.AuditRuleType
  parent: System.Security.AccessControl.ObjectSecurity
  isExternal: false
  name: AuditRuleType
  fullName: System.Security.AccessControl.ObjectSecurity.AuditRuleType
- uid: System.Security.AccessControl.ObjectSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)
  parent: System.Security.AccessControl.ObjectSecurity
  isExternal: true
  name: AccessRuleFactory(IdentityReference, Int32, Boolean, InheritanceFlags, PropagationFlags, AccessControlType)
  fullName: System.Security.AccessControl.ObjectSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference, System.Int32, System.Boolean, System.Security.AccessControl.InheritanceFlags, System.Security.AccessControl.PropagationFlags, System.Security.AccessControl.AccessControlType)
  spec.csharp:
  - uid: System.Security.AccessControl.ObjectSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)
    name: AccessRuleFactory
    fullName: System.Security.AccessControl.ObjectSecurity.AccessRuleFactory
  - name: (
    fullName: (
  - uid: System.Security.Principal.IdentityReference
    name: IdentityReference
    fullName: System.Security.Principal.IdentityReference
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Security.AccessControl.InheritanceFlags
    name: InheritanceFlags
    fullName: System.Security.AccessControl.InheritanceFlags
  - name: ', '
    fullName: ', '
  - uid: System.Security.AccessControl.PropagationFlags
    name: PropagationFlags
    fullName: System.Security.AccessControl.PropagationFlags
  - name: ', '
    fullName: ', '
  - uid: System.Security.AccessControl.AccessControlType
    name: AccessControlType
    fullName: System.Security.AccessControl.AccessControlType
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Security.AccessControl.ObjectSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)
    name: AccessRuleFactory
    fullName: System.Security.AccessControl.ObjectSecurity.AccessRuleFactory
  - name: (
    fullName: (
  - uid: System.Security.Principal.IdentityReference
    name: IdentityReference
    fullName: System.Security.Principal.IdentityReference
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Security.AccessControl.InheritanceFlags
    name: InheritanceFlags
    fullName: System.Security.AccessControl.InheritanceFlags
  - name: ', '
    fullName: ', '
  - uid: System.Security.AccessControl.PropagationFlags
    name: PropagationFlags
    fullName: System.Security.AccessControl.PropagationFlags
  - name: ', '
    fullName: ', '
  - uid: System.Security.AccessControl.AccessControlType
    name: AccessControlType
    fullName: System.Security.AccessControl.AccessControlType
  - name: )
    fullName: )
- uid: System.Security.Principal.IdentityReference
  parent: System.Security.Principal
  isExternal: false
  name: IdentityReference
  fullName: System.Security.Principal.IdentityReference
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  fullName: System.Int32
- uid: System.Security.AccessControl.InheritanceFlags
  parent: System.Security.AccessControl
  isExternal: false
  name: InheritanceFlags
  fullName: System.Security.AccessControl.InheritanceFlags
- uid: System.Security.AccessControl.PropagationFlags
  parent: System.Security.AccessControl
  isExternal: false
  name: PropagationFlags
  fullName: System.Security.AccessControl.PropagationFlags
- uid: System.Security.AccessControl.AccessControlType
  parent: System.Security.AccessControl
  isExternal: false
  name: AccessControlType
  fullName: System.Security.AccessControl.AccessControlType
- uid: System.Security.AccessControl.AccessRule
  parent: System.Security.AccessControl
  isExternal: false
  name: AccessRule
  fullName: System.Security.AccessControl.AccessRule
- uid: System.Security.Principal
  isExternal: false
  name: System.Security.Principal
  fullName: System.Security.Principal
- uid: System.Security.AccessControl.AccessRule{{T}}
  parent: System.Security.AccessControl
  definition: System.Security.AccessControl.AccessRule`1
  name: AccessRule<T>
  fullName: System.Security.AccessControl.AccessRule<T>
  fullname.vb: System.Security.AccessControl.AccessRule(Of T)
  name.vb: AccessRule(Of T)
  spec.csharp:
  - uid: System.Security.AccessControl.AccessRule`1
    name: AccessRule
    fullName: System.Security.AccessControl.AccessRule
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Security.AccessControl.AccessRule`1
    name: AccessRule
    fullName: System.Security.AccessControl.AccessRule
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.Security.AccessControl.AccessRule`1
  parent: System.Security.AccessControl
  isExternal: false
  name: AccessRule<T>
  fullName: System.Security.AccessControl.AccessRule<T>
  fullname.vb: System.Security.AccessControl.AccessRule(Of T)
  name.vb: AccessRule(Of T)
  spec.csharp:
  - uid: System.Security.AccessControl.AccessRule`1
    name: AccessRule
    fullName: System.Security.AccessControl.AccessRule
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Security.AccessControl.AccessRule`1
    name: AccessRule
    fullName: System.Security.AccessControl.AccessRule
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.Security.AccessControl.AuditRule{{T}}
  parent: System.Security.AccessControl
  definition: System.Security.AccessControl.AuditRule`1
  name: AuditRule<T>
  fullName: System.Security.AccessControl.AuditRule<T>
  fullname.vb: System.Security.AccessControl.AuditRule(Of T)
  name.vb: AuditRule(Of T)
  spec.csharp:
  - uid: System.Security.AccessControl.AuditRule`1
    name: AuditRule
    fullName: System.Security.AccessControl.AuditRule
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Security.AccessControl.AuditRule`1
    name: AuditRule
    fullName: System.Security.AccessControl.AuditRule
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.Security.AccessControl.AuditRule`1
  parent: System.Security.AccessControl
  isExternal: false
  name: AuditRule<T>
  fullName: System.Security.AccessControl.AuditRule<T>
  fullname.vb: System.Security.AccessControl.AuditRule(Of T)
  name.vb: AuditRule(Of T)
  spec.csharp:
  - uid: System.Security.AccessControl.AuditRule`1
    name: AuditRule
    fullName: System.Security.AccessControl.AuditRule
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Security.AccessControl.AuditRule`1
    name: AuditRule
    fullName: System.Security.AccessControl.AuditRule
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.Security.AccessControl.ObjectSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)
  parent: System.Security.AccessControl.ObjectSecurity
  isExternal: true
  name: AuditRuleFactory(IdentityReference, Int32, Boolean, InheritanceFlags, PropagationFlags, AuditFlags)
  fullName: System.Security.AccessControl.ObjectSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference, System.Int32, System.Boolean, System.Security.AccessControl.InheritanceFlags, System.Security.AccessControl.PropagationFlags, System.Security.AccessControl.AuditFlags)
  spec.csharp:
  - uid: System.Security.AccessControl.ObjectSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)
    name: AuditRuleFactory
    fullName: System.Security.AccessControl.ObjectSecurity.AuditRuleFactory
  - name: (
    fullName: (
  - uid: System.Security.Principal.IdentityReference
    name: IdentityReference
    fullName: System.Security.Principal.IdentityReference
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Security.AccessControl.InheritanceFlags
    name: InheritanceFlags
    fullName: System.Security.AccessControl.InheritanceFlags
  - name: ', '
    fullName: ', '
  - uid: System.Security.AccessControl.PropagationFlags
    name: PropagationFlags
    fullName: System.Security.AccessControl.PropagationFlags
  - name: ', '
    fullName: ', '
  - uid: System.Security.AccessControl.AuditFlags
    name: AuditFlags
    fullName: System.Security.AccessControl.AuditFlags
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Security.AccessControl.ObjectSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)
    name: AuditRuleFactory
    fullName: System.Security.AccessControl.ObjectSecurity.AuditRuleFactory
  - name: (
    fullName: (
  - uid: System.Security.Principal.IdentityReference
    name: IdentityReference
    fullName: System.Security.Principal.IdentityReference
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Security.AccessControl.InheritanceFlags
    name: InheritanceFlags
    fullName: System.Security.AccessControl.InheritanceFlags
  - name: ', '
    fullName: ', '
  - uid: System.Security.AccessControl.PropagationFlags
    name: PropagationFlags
    fullName: System.Security.AccessControl.PropagationFlags
  - name: ', '
    fullName: ', '
  - uid: System.Security.AccessControl.AuditFlags
    name: AuditFlags
    fullName: System.Security.AccessControl.AuditFlags
  - name: )
    fullName: )
- uid: System.Security.AccessControl.AuditFlags
  parent: System.Security.AccessControl
  isExternal: false
  name: AuditFlags
  fullName: System.Security.AccessControl.AuditFlags
- uid: System.Security.AccessControl.AuditRule
  parent: System.Security.AccessControl
  isExternal: false
  name: AuditRule
  fullName: System.Security.AccessControl.AuditRule
