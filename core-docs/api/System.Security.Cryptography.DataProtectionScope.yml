items:
- uid: System.Security.Cryptography.DataProtectionScope
  commentId: T:System.Security.Cryptography.DataProtectionScope
  id: DataProtectionScope
  parent: System.Security.Cryptography
  children:
  - System.Security.Cryptography.DataProtectionScope.CurrentUser
  - System.Security.Cryptography.DataProtectionScope.LocalMachine
  langs:
  - csharp
  - vb
  name: DataProtectionScope
  fullName: System.Security.Cryptography.DataProtectionScope
  type: Enum
  source:
    remote:
      path: src/System.Security.Cryptography.ProtectedData/ref/System.Security.Cryptography.ProtectedData.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: DataProtectionScope
    path: src/System.Security.Cryptography.ProtectedData/ref/System.Security.Cryptography.ProtectedData.cs
    startLine: 10
  assemblies:
  - System.Security.Cryptography.ProtectedData
  namespace: System.Security.Cryptography
  summary: "\n<p>Specifies the scope of the data protection to be applied by the <xref href=\"System.Security.Cryptography.ProtectedData.Protect(System.Byte[],System.Byte[],System.Security.Cryptography.DataProtectionScope)\" data-throw-if-not-resolved=\"false\"></xref> method.</p>\n"
  remarks: "\n<p>This enumeration is used with the <xref href=\"System.Security.Cryptography.ProtectedData.Protect(System.Byte[],System.Byte[],System.Security.Cryptography.DataProtectionScope)\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"System.Security.Cryptography.ProtectedData.Unprotect(System.Byte[],System.Byte[],System.Security.Cryptography.DataProtectionScope)\" data-throw-if-not-resolved=\"false\"></xref> methods to protect data through encryption.</p>\n<p>Caution   The <xref href=\"System.Security.Cryptography.DataProtectionScope.LocalMachine\" data-throw-if-not-resolved=\"false\"></xref> enumeration value allows multiple accounts to unprotect data.  Use this value only when you trust every account on a computer.  For most situations, you should use the <xref href=\"System.Security.Cryptography.DataProtectionScope.CurrentUser\" data-throw-if-not-resolved=\"false\"></xref> value.</p>\n"
  example:
  - "\n<p>The following code example shows how to use data protection.</p>Cryptography.DataProtectionSample#1"
  syntax:
    content: public enum DataProtectionScope
    content.vb: Public Enum DataProtectionScope
  modifiers.csharp:
  - public
  - enum
  modifiers.vb:
  - Public
  - Enum
- uid: System.Security.Cryptography.DataProtectionScope.CurrentUser
  commentId: F:System.Security.Cryptography.DataProtectionScope.CurrentUser
  id: CurrentUser
  parent: System.Security.Cryptography.DataProtectionScope
  langs:
  - csharp
  - vb
  name: CurrentUser
  fullName: System.Security.Cryptography.DataProtectionScope.CurrentUser
  type: Field
  source:
    remote:
      path: src/System.Security.Cryptography.ProtectedData/ref/System.Security.Cryptography.ProtectedData.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CurrentUser
    path: src/System.Security.Cryptography.ProtectedData/ref/System.Security.Cryptography.ProtectedData.cs
    startLine: 12
  assemblies:
  - System.Security.Cryptography.ProtectedData
  namespace: System.Security.Cryptography
  summary: "\n<p>The protected data is associated with the current user. Only threads running under the current user context can unprotect the data.</p>\n"
  syntax:
    content: CurrentUser = 0
    return:
      type: System.Security.Cryptography.DataProtectionScope
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Security.Cryptography.DataProtectionScope.LocalMachine
  commentId: F:System.Security.Cryptography.DataProtectionScope.LocalMachine
  id: LocalMachine
  parent: System.Security.Cryptography.DataProtectionScope
  langs:
  - csharp
  - vb
  name: LocalMachine
  fullName: System.Security.Cryptography.DataProtectionScope.LocalMachine
  type: Field
  source:
    remote:
      path: src/System.Security.Cryptography.ProtectedData/ref/System.Security.Cryptography.ProtectedData.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: LocalMachine
    path: src/System.Security.Cryptography.ProtectedData/ref/System.Security.Cryptography.ProtectedData.cs
    startLine: 13
  assemblies:
  - System.Security.Cryptography.ProtectedData
  namespace: System.Security.Cryptography
  summary: "\n<p>The protected data is associated with the machine context. Any process running on the computer can unprotect data. This enumeration value is usually used in server-specific applications that run on a server where untrusted users are not allowed access.</p>\n"
  syntax:
    content: LocalMachine = 1
    return:
      type: System.Security.Cryptography.DataProtectionScope
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
references:
- uid: System.Security.Cryptography
  isExternal: false
  name: System.Security.Cryptography
  fullName: System.Security.Cryptography
- uid: System.Security.Cryptography.DataProtectionScope
  parent: System.Security.Cryptography
  isExternal: false
  name: DataProtectionScope
  fullName: System.Security.Cryptography.DataProtectionScope
