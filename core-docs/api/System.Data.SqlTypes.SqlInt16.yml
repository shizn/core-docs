items:
- uid: System.Data.SqlTypes.SqlInt16
  commentId: T:System.Data.SqlTypes.SqlInt16
  id: SqlInt16
  parent: System.Data.SqlTypes
  children:
  - System.Data.SqlTypes.SqlInt16.#ctor(System.Int16)
  - System.Data.SqlTypes.SqlInt16.Add(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)
  - System.Data.SqlTypes.SqlInt16.BitwiseAnd(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)
  - System.Data.SqlTypes.SqlInt16.BitwiseOr(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)
  - System.Data.SqlTypes.SqlInt16.CompareTo(System.Data.SqlTypes.SqlInt16)
  - System.Data.SqlTypes.SqlInt16.CompareTo(System.Object)
  - System.Data.SqlTypes.SqlInt16.Divide(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)
  - System.Data.SqlTypes.SqlInt16.Equals(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)
  - System.Data.SqlTypes.SqlInt16.Equals(System.Object)
  - System.Data.SqlTypes.SqlInt16.GetHashCode
  - System.Data.SqlTypes.SqlInt16.GreaterThan(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)
  - System.Data.SqlTypes.SqlInt16.GreaterThanOrEqual(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)
  - System.Data.SqlTypes.SqlInt16.IsNull
  - System.Data.SqlTypes.SqlInt16.LessThan(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)
  - System.Data.SqlTypes.SqlInt16.LessThanOrEqual(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)
  - System.Data.SqlTypes.SqlInt16.MaxValue
  - System.Data.SqlTypes.SqlInt16.MinValue
  - System.Data.SqlTypes.SqlInt16.Mod(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)
  - System.Data.SqlTypes.SqlInt16.Modulus(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)
  - System.Data.SqlTypes.SqlInt16.Multiply(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)
  - System.Data.SqlTypes.SqlInt16.NotEquals(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)
  - System.Data.SqlTypes.SqlInt16.Null
  - System.Data.SqlTypes.SqlInt16.OnesComplement(System.Data.SqlTypes.SqlInt16)
  - System.Data.SqlTypes.SqlInt16.op_Addition(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)
  - System.Data.SqlTypes.SqlInt16.op_BitwiseAnd(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)
  - System.Data.SqlTypes.SqlInt16.op_BitwiseOr(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)
  - System.Data.SqlTypes.SqlInt16.op_Division(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)
  - System.Data.SqlTypes.SqlInt16.op_Equality(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)
  - System.Data.SqlTypes.SqlInt16.op_ExclusiveOr(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)
  - System.Data.SqlTypes.SqlInt16.op_Explicit(System.Data.SqlTypes.SqlBoolean)~System.Data.SqlTypes.SqlInt16
  - System.Data.SqlTypes.SqlInt16.op_Explicit(System.Data.SqlTypes.SqlDecimal)~System.Data.SqlTypes.SqlInt16
  - System.Data.SqlTypes.SqlInt16.op_Explicit(System.Data.SqlTypes.SqlDouble)~System.Data.SqlTypes.SqlInt16
  - System.Data.SqlTypes.SqlInt16.op_Explicit(System.Data.SqlTypes.SqlInt16)~System.Int16
  - System.Data.SqlTypes.SqlInt16.op_Explicit(System.Data.SqlTypes.SqlInt32)~System.Data.SqlTypes.SqlInt16
  - System.Data.SqlTypes.SqlInt16.op_Explicit(System.Data.SqlTypes.SqlInt64)~System.Data.SqlTypes.SqlInt16
  - System.Data.SqlTypes.SqlInt16.op_Explicit(System.Data.SqlTypes.SqlMoney)~System.Data.SqlTypes.SqlInt16
  - System.Data.SqlTypes.SqlInt16.op_Explicit(System.Data.SqlTypes.SqlSingle)~System.Data.SqlTypes.SqlInt16
  - System.Data.SqlTypes.SqlInt16.op_Explicit(System.Data.SqlTypes.SqlString)~System.Data.SqlTypes.SqlInt16
  - System.Data.SqlTypes.SqlInt16.op_GreaterThan(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)
  - System.Data.SqlTypes.SqlInt16.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)
  - System.Data.SqlTypes.SqlInt16.op_Implicit(System.Data.SqlTypes.SqlByte)~System.Data.SqlTypes.SqlInt16
  - System.Data.SqlTypes.SqlInt16.op_Implicit(System.Int16)~System.Data.SqlTypes.SqlInt16
  - System.Data.SqlTypes.SqlInt16.op_Inequality(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)
  - System.Data.SqlTypes.SqlInt16.op_LessThan(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)
  - System.Data.SqlTypes.SqlInt16.op_LessThanOrEqual(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)
  - System.Data.SqlTypes.SqlInt16.op_Modulus(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)
  - System.Data.SqlTypes.SqlInt16.op_Multiply(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)
  - System.Data.SqlTypes.SqlInt16.op_OnesComplement(System.Data.SqlTypes.SqlInt16)
  - System.Data.SqlTypes.SqlInt16.op_Subtraction(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)
  - System.Data.SqlTypes.SqlInt16.op_UnaryNegation(System.Data.SqlTypes.SqlInt16)
  - System.Data.SqlTypes.SqlInt16.Parse(System.String)
  - System.Data.SqlTypes.SqlInt16.Subtract(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)
  - System.Data.SqlTypes.SqlInt16.ToSqlBoolean
  - System.Data.SqlTypes.SqlInt16.ToSqlByte
  - System.Data.SqlTypes.SqlInt16.ToSqlDecimal
  - System.Data.SqlTypes.SqlInt16.ToSqlDouble
  - System.Data.SqlTypes.SqlInt16.ToSqlInt32
  - System.Data.SqlTypes.SqlInt16.ToSqlInt64
  - System.Data.SqlTypes.SqlInt16.ToSqlMoney
  - System.Data.SqlTypes.SqlInt16.ToSqlSingle
  - System.Data.SqlTypes.SqlInt16.ToSqlString
  - System.Data.SqlTypes.SqlInt16.ToString
  - System.Data.SqlTypes.SqlInt16.Value
  - System.Data.SqlTypes.SqlInt16.Xor(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)
  - System.Data.SqlTypes.SqlInt16.Zero
  langs:
  - csharp
  - vb
  name: SqlInt16
  fullName: System.Data.SqlTypes.SqlInt16
  type: Struct
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLInt16.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: SqlInt16
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLInt16.cs
    startLine: 20
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: "\n<p>Represents a 16-bit signed integer to be stored in or retrieved from a database.</p>\n"
  syntax:
    content: >-
      [StructLayout(LayoutKind.Sequential)]

      public struct SqlInt16 : INullable, IComparable
    content.vb: >-
      <StructLayout(LayoutKind.Sequential)>

      Public Structure SqlInt16
          Implements INullable, IComparable
  implements:
  - System.Data.SqlTypes.INullable
  - System.IComparable
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetType
  attributes:
  - type: System.Runtime.InteropServices.StructLayoutAttribute
    ctor: System.Runtime.InteropServices.StructLayoutAttribute.#ctor(System.Runtime.InteropServices.LayoutKind)
    arguments:
    - type: System.Runtime.InteropServices.LayoutKind
      value: 0
  modifiers.csharp:
  - public
  - struct
  modifiers.vb:
  - Public
  - Structure
- uid: System.Data.SqlTypes.SqlInt16.MaxValue
  commentId: F:System.Data.SqlTypes.SqlInt16.MaxValue
  id: MaxValue
  parent: System.Data.SqlTypes.SqlInt16
  langs:
  - csharp
  - vb
  name: MaxValue
  fullName: System.Data.SqlTypes.SqlInt16.MaxValue
  type: Field
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLInt16.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: MaxValue
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLInt16.cs
    startLine: 627
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: "\n<p>A constant representing the largest possible value of a <xref href=\"System.Data.SqlTypes.SqlInt16\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  remarks: "\n<p>The value of this constant is 32,767.</p>\n"
  syntax:
    content: public static readonly SqlInt16 MaxValue
    content.vb: Public Shared ReadOnly MaxValue As SqlInt16
    return:
      type: System.Data.SqlTypes.SqlInt16
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: System.Data.SqlTypes.SqlInt16.MinValue
  commentId: F:System.Data.SqlTypes.SqlInt16.MinValue
  id: MinValue
  parent: System.Data.SqlTypes.SqlInt16
  langs:
  - csharp
  - vb
  name: MinValue
  fullName: System.Data.SqlTypes.SqlInt16.MinValue
  type: Field
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLInt16.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: MinValue
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLInt16.cs
    startLine: 623
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: "\n<p>A constant representing the smallest possible value of a <xref href=\"System.Data.SqlTypes.SqlInt16\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  remarks: "\n<p>The value of this constant is -32,768.</p>\n"
  syntax:
    content: public static readonly SqlInt16 MinValue
    content.vb: Public Shared ReadOnly MinValue As SqlInt16
    return:
      type: System.Data.SqlTypes.SqlInt16
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: System.Data.SqlTypes.SqlInt16.Null
  commentId: F:System.Data.SqlTypes.SqlInt16.Null
  parent: System.Data.SqlTypes.SqlInt16
  langs:
  - csharp
  - vb
  fullName: System.Data.SqlTypes.SqlInt16.Null
  type: Field
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLInt16.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLInt16.cs
    startLine: 615
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: "\n<p>Represents a <xref href=\"System.DBNull\" data-throw-if-not-resolved=\"false\"></xref> that can be assigned to this instance of the <xref href=\"System.Data.SqlTypes.SqlInt16\" data-throw-if-not-resolved=\"false\"></xref> structure.</p>\n"
  remarks: "\n<p>\n<xref href=\"System.Data.SqlTypes.SqlInt16.Null\" data-throw-if-not-resolved=\"false\"></xref> functions as a constant for the <xref href=\"System.Data.SqlTypes.SqlInt16\" data-throw-if-not-resolved=\"false\"></xref> structure. For more information, see Handling Null Values.</p>\n"
  syntax:
    content: public static readonly SqlInt16 Null
    content.vb: Public Shared ReadOnly Null As SqlInt16
    return:
      type: System.Data.SqlTypes.SqlInt16
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: System.Data.SqlTypes.SqlInt16.Zero
  commentId: F:System.Data.SqlTypes.SqlInt16.Zero
  id: Zero
  parent: System.Data.SqlTypes.SqlInt16
  langs:
  - csharp
  - vb
  name: Zero
  fullName: System.Data.SqlTypes.SqlInt16.Zero
  type: Field
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLInt16.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Zero
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLInt16.cs
    startLine: 619
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: "\n<p>Represents a zero value that can be assigned to the <xref href=\"System.Data.SqlTypes.SqlInt16.Value\" data-throw-if-not-resolved=\"false\"></xref> property of an instance of the <xref href=\"System.Data.SqlTypes.SqlInt16\" data-throw-if-not-resolved=\"false\"></xref> structure.</p>\n"
  remarks: "\n<p>The <xref href=\"System.Data.SqlTypes.SqlInt16.Zero\" data-throw-if-not-resolved=\"false\"></xref> field is a constant for the <xref href=\"System.Data.SqlTypes.SqlInt16\" data-throw-if-not-resolved=\"false\"></xref> structure.</p>\n"
  syntax:
    content: public static readonly SqlInt16 Zero
    content.vb: Public Shared ReadOnly Zero As SqlInt16
    return:
      type: System.Data.SqlTypes.SqlInt16
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: System.Data.SqlTypes.SqlInt16.#ctor(System.Int16)
  commentId: M:System.Data.SqlTypes.SqlInt16.#ctor(System.Int16)
  id: '#ctor(System.Int16)'
  parent: System.Data.SqlTypes.SqlInt16
  langs:
  - csharp
  - vb
  name: SqlInt16(Int16)
  fullName: System.Data.SqlTypes.SqlInt16.SqlInt16(System.Int16)
  type: Constructor
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLInt16.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLInt16.cs
    startLine: 39
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Data.SqlTypes.SqlInt16\" data-throw-if-not-resolved=\"false\"></xref> structure using the supplied short integer parameter.</p>\n"
  syntax:
    content: public SqlInt16(short value)
    content.vb: Public Sub New(value As Short)
    parameters:
    - id: value
      type: System.Int16
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Data.SqlTypes.SqlInt16.IsNull
  commentId: P:System.Data.SqlTypes.SqlInt16.IsNull
  id: IsNull
  parent: System.Data.SqlTypes.SqlInt16
  langs:
  - csharp
  - vb
  name: IsNull
  fullName: System.Data.SqlTypes.SqlInt16.IsNull
  type: Property
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLInt16.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IsNull
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLInt16.cs
    startLine: 49
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: "\n<p>Indicates whether this <xref href=\"System.Data.SqlTypes.SqlInt16\" data-throw-if-not-resolved=\"false\"></xref> structure is null.</p>\n"
  syntax:
    content: public bool IsNull { get; }
    content.vb: Public ReadOnly Property IsNull As Boolean
    parameters: []
    return:
      type: System.Boolean
  implements:
  - System.Data.SqlTypes.INullable.IsNull
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Data.SqlTypes.SqlInt16.Value
  commentId: P:System.Data.SqlTypes.SqlInt16.Value
  id: Value
  parent: System.Data.SqlTypes.SqlInt16
  langs:
  - csharp
  - vb
  name: Value
  fullName: System.Data.SqlTypes.SqlInt16.Value
  type: Property
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLInt16.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Value
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLInt16.cs
    startLine: 58
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: "\n<p>Gets the value of this instance of <xref href=\"System.Data.SqlTypes.SqlInt16\" data-throw-if-not-resolved=\"false\"></xref> structure. This property is read-only.</p>\n"
  syntax:
    content: public short Value { get; }
    content.vb: Public ReadOnly Property Value As Short
    parameters: []
    return:
      type: System.Int16
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Data.SqlTypes.SqlInt16.Add(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)
  commentId: M:System.Data.SqlTypes.SqlInt16.Add(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)
  id: Add(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)
  parent: System.Data.SqlTypes.SqlInt16
  langs:
  - csharp
  - vb
  name: Add(SqlInt16, SqlInt16)
  fullName: System.Data.SqlTypes.SqlInt16.Add(System.Data.SqlTypes.SqlInt16, System.Data.SqlTypes.SqlInt16)
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLInt16.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Add
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLInt16.cs
    startLine: 412
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: "\n<p>Computes the sum of the two <xref href=\"System.Data.SqlTypes.SqlInt16\" data-throw-if-not-resolved=\"false\"></xref> operands.</p>\n"
  syntax:
    content: public static SqlInt16 Add(SqlInt16 x, SqlInt16 y)
    content.vb: Public Shared Function Add(x As SqlInt16, y As SqlInt16) As SqlInt16
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlInt16
    - id: y
      type: System.Data.SqlTypes.SqlInt16
    return:
      type: System.Data.SqlTypes.SqlInt16
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Data.SqlTypes.SqlInt16.BitwiseAnd(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)
  commentId: M:System.Data.SqlTypes.SqlInt16.BitwiseAnd(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)
  id: BitwiseAnd(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)
  parent: System.Data.SqlTypes.SqlInt16
  langs:
  - csharp
  - vb
  name: BitwiseAnd(SqlInt16, SqlInt16)
  fullName: System.Data.SqlTypes.SqlInt16.BitwiseAnd(System.Data.SqlTypes.SqlInt16, System.Data.SqlTypes.SqlInt16)
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLInt16.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: BitwiseAnd
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLInt16.cs
    startLine: 446
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: "\n<p>Computes the bitwise AND of its <xref href=\"System.Data.SqlTypes.SqlInt16\" data-throw-if-not-resolved=\"false\"></xref> operands.</p>\n"
  syntax:
    content: public static SqlInt16 BitwiseAnd(SqlInt16 x, SqlInt16 y)
    content.vb: Public Shared Function BitwiseAnd(x As SqlInt16, y As SqlInt16) As SqlInt16
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlInt16
    - id: y
      type: System.Data.SqlTypes.SqlInt16
    return:
      type: System.Data.SqlTypes.SqlInt16
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Data.SqlTypes.SqlInt16.BitwiseOr(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)
  commentId: M:System.Data.SqlTypes.SqlInt16.BitwiseOr(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)
  id: BitwiseOr(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)
  parent: System.Data.SqlTypes.SqlInt16
  langs:
  - csharp
  - vb
  name: BitwiseOr(SqlInt16, SqlInt16)
  fullName: System.Data.SqlTypes.SqlInt16.BitwiseOr(System.Data.SqlTypes.SqlInt16, System.Data.SqlTypes.SqlInt16)
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLInt16.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: BitwiseOr
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLInt16.cs
    startLine: 452
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: "\n<p>Computes the bitwise OR of its two <xref href=\"System.Data.SqlTypes.SqlInt16\" data-throw-if-not-resolved=\"false\"></xref> operands.</p>\n"
  syntax:
    content: public static SqlInt16 BitwiseOr(SqlInt16 x, SqlInt16 y)
    content.vb: Public Shared Function BitwiseOr(x As SqlInt16, y As SqlInt16) As SqlInt16
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlInt16
    - id: y
      type: System.Data.SqlTypes.SqlInt16
    return:
      type: System.Data.SqlTypes.SqlInt16
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Data.SqlTypes.SqlInt16.CompareTo(System.Data.SqlTypes.SqlInt16)
  commentId: M:System.Data.SqlTypes.SqlInt16.CompareTo(System.Data.SqlTypes.SqlInt16)
  id: CompareTo(System.Data.SqlTypes.SqlInt16)
  parent: System.Data.SqlTypes.SqlInt16
  langs:
  - csharp
  - vb
  name: CompareTo(SqlInt16)
  fullName: System.Data.SqlTypes.SqlInt16.CompareTo(System.Data.SqlTypes.SqlInt16)
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLInt16.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CompareTo
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLInt16.cs
    startLine: 569
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: "\n<p>Compares this <xref href=\"System.Data.SqlTypes.SqlInt16\" data-throw-if-not-resolved=\"false\"></xref> instance to the supplied <xref href=\"System.Data.SqlTypes.SqlInt16\" data-throw-if-not-resolved=\"false\"></xref> and returns an indication of their relative values.</p>\n"
  syntax:
    content: public int CompareTo(SqlInt16 value)
    content.vb: Public Function CompareTo(value As SqlInt16) As Integer
    parameters:
    - id: value
      type: System.Data.SqlTypes.SqlInt16
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Data.SqlTypes.SqlInt16.CompareTo(System.Object)
  commentId: M:System.Data.SqlTypes.SqlInt16.CompareTo(System.Object)
  id: CompareTo(System.Object)
  parent: System.Data.SqlTypes.SqlInt16
  langs:
  - csharp
  - vb
  name: CompareTo(Object)
  fullName: System.Data.SqlTypes.SqlInt16.CompareTo(System.Object)
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLInt16.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CompareTo
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLInt16.cs
    startLine: 558
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: "\n<p>Compares this <xref href=\"System.Data.SqlTypes.SqlInt16\" data-throw-if-not-resolved=\"false\"></xref> instance to the supplied <xref href=\"System.Object\" data-throw-if-not-resolved=\"false\"></xref> and returns an indication of their relative values.</p>\n"
  syntax:
    content: public int CompareTo(object value)
    content.vb: Public Function CompareTo(value As Object) As Integer
    parameters:
    - id: value
      type: System.Object
    return:
      type: System.Int32
  implements:
  - System.IComparable.CompareTo(System.Object)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Data.SqlTypes.SqlInt16.Divide(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)
  commentId: M:System.Data.SqlTypes.SqlInt16.Divide(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)
  id: Divide(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)
  parent: System.Data.SqlTypes.SqlInt16
  langs:
  - csharp
  - vb
  name: Divide(SqlInt16, SqlInt16)
  fullName: System.Data.SqlTypes.SqlInt16.Divide(System.Data.SqlTypes.SqlInt16, System.Data.SqlTypes.SqlInt16)
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLInt16.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Divide
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLInt16.cs
    startLine: 429
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: "\n<p>Divides the first <xref href=\"System.Data.SqlTypes.SqlInt16\" data-throw-if-not-resolved=\"false\"></xref> operand by the second.</p>\n"
  syntax:
    content: public static SqlInt16 Divide(SqlInt16 x, SqlInt16 y)
    content.vb: Public Shared Function Divide(x As SqlInt16, y As SqlInt16) As SqlInt16
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlInt16
    - id: y
      type: System.Data.SqlTypes.SqlInt16
    return:
      type: System.Data.SqlTypes.SqlInt16
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Data.SqlTypes.SqlInt16.Equals(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)
  commentId: M:System.Data.SqlTypes.SqlInt16.Equals(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)
  id: Equals(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)
  parent: System.Data.SqlTypes.SqlInt16
  langs:
  - csharp
  - vb
  name: Equals(SqlInt16, SqlInt16)
  fullName: System.Data.SqlTypes.SqlInt16.Equals(System.Data.SqlTypes.SqlInt16, System.Data.SqlTypes.SqlInt16)
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLInt16.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Equals
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLInt16.cs
    startLine: 464
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: "\n<p>Performs a logical comparison of two <xref href=\"System.Data.SqlTypes.SqlInt16\" data-throw-if-not-resolved=\"false\"></xref> structures to determine whether they are equal.</p>\n"
  syntax:
    content: public static SqlBoolean Equals(SqlInt16 x, SqlInt16 y)
    content.vb: Public Shared Function Equals(x As SqlInt16, y As SqlInt16) As SqlBoolean
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlInt16
    - id: y
      type: System.Data.SqlTypes.SqlInt16
    return:
      type: System.Data.SqlTypes.SqlBoolean
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Data.SqlTypes.SqlInt16.Equals(System.Object)
  commentId: M:System.Data.SqlTypes.SqlInt16.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Data.SqlTypes.SqlInt16
  langs:
  - csharp
  - vb
  name: Equals(Object)
  fullName: System.Data.SqlTypes.SqlInt16.Equals(System.Object)
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLInt16.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Equals
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLInt16.cs
    startLine: 587
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: "\n<p>Compares the specified object to the <xref href=\"System.Data.SqlTypes.SqlInt16.Value\" data-throw-if-not-resolved=\"false\"></xref> property of the <xref href=\"System.Data.SqlTypes.SqlInt16\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  syntax:
    content: public override bool Equals(object value)
    content.vb: Public Overrides Function Equals(value As Object) As Boolean
    parameters:
    - id: value
      type: System.Object
    return:
      type: System.Boolean
  overridden: System.ValueType.Equals(System.Object)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Data.SqlTypes.SqlInt16.GetHashCode
  commentId: M:System.Data.SqlTypes.SqlInt16.GetHashCode
  id: GetHashCode
  parent: System.Data.SqlTypes.SqlInt16
  langs:
  - csharp
  - vb
  name: GetHashCode()
  fullName: System.Data.SqlTypes.SqlInt16.GetHashCode()
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLInt16.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetHashCode
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLInt16.cs
    startLine: 606
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: "\n<p>Returns the hash code for this instance.</p>\n"
  syntax:
    content: public override int GetHashCode()
    content.vb: Public Overrides Function GetHashCode As Integer
    return:
      type: System.Int32
  overridden: System.ValueType.GetHashCode
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Data.SqlTypes.SqlInt16.GreaterThan(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)
  commentId: M:System.Data.SqlTypes.SqlInt16.GreaterThan(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)
  id: GreaterThan(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)
  parent: System.Data.SqlTypes.SqlInt16
  langs:
  - csharp
  - vb
  name: GreaterThan(SqlInt16, SqlInt16)
  fullName: System.Data.SqlTypes.SqlInt16.GreaterThan(System.Data.SqlTypes.SqlInt16, System.Data.SqlTypes.SqlInt16)
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLInt16.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GreaterThan
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLInt16.cs
    startLine: 482
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: "\n<p>Compares two instances of <xref href=\"System.Data.SqlTypes.SqlInt16\" data-throw-if-not-resolved=\"false\"></xref> to determine whether the first is greater than the second.</p>\n"
  syntax:
    content: public static SqlBoolean GreaterThan(SqlInt16 x, SqlInt16 y)
    content.vb: Public Shared Function GreaterThan(x As SqlInt16, y As SqlInt16) As SqlBoolean
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlInt16
    - id: y
      type: System.Data.SqlTypes.SqlInt16
    return:
      type: System.Data.SqlTypes.SqlBoolean
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Data.SqlTypes.SqlInt16.GreaterThanOrEqual(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)
  commentId: M:System.Data.SqlTypes.SqlInt16.GreaterThanOrEqual(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)
  id: GreaterThanOrEqual(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)
  parent: System.Data.SqlTypes.SqlInt16
  langs:
  - csharp
  - vb
  name: GreaterThanOrEqual(SqlInt16, SqlInt16)
  fullName: System.Data.SqlTypes.SqlInt16.GreaterThanOrEqual(System.Data.SqlTypes.SqlInt16, System.Data.SqlTypes.SqlInt16)
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLInt16.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GreaterThanOrEqual
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLInt16.cs
    startLine: 494
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: "\n<p>Compares two <xref href=\"System.Data.SqlTypes.SqlInt16\" data-throw-if-not-resolved=\"false\"></xref> structures to determine whether the first is greater than or equal to the second.</p>\n"
  syntax:
    content: public static SqlBoolean GreaterThanOrEqual(SqlInt16 x, SqlInt16 y)
    content.vb: Public Shared Function GreaterThanOrEqual(x As SqlInt16, y As SqlInt16) As SqlBoolean
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlInt16
    - id: y
      type: System.Data.SqlTypes.SqlInt16
    return:
      type: System.Data.SqlTypes.SqlBoolean
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Data.SqlTypes.SqlInt16.LessThan(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)
  commentId: M:System.Data.SqlTypes.SqlInt16.LessThan(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)
  id: LessThan(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)
  parent: System.Data.SqlTypes.SqlInt16
  langs:
  - csharp
  - vb
  name: LessThan(SqlInt16, SqlInt16)
  fullName: System.Data.SqlTypes.SqlInt16.LessThan(System.Data.SqlTypes.SqlInt16, System.Data.SqlTypes.SqlInt16)
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLInt16.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: LessThan
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLInt16.cs
    startLine: 476
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: "\n<p>Compares two instances of <xref href=\"System.Data.SqlTypes.SqlInt16\" data-throw-if-not-resolved=\"false\"></xref> to determine whether the first is less than the second.</p>\n"
  syntax:
    content: public static SqlBoolean LessThan(SqlInt16 x, SqlInt16 y)
    content.vb: Public Shared Function LessThan(x As SqlInt16, y As SqlInt16) As SqlBoolean
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlInt16
    - id: y
      type: System.Data.SqlTypes.SqlInt16
    return:
      type: System.Data.SqlTypes.SqlBoolean
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Data.SqlTypes.SqlInt16.LessThanOrEqual(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)
  commentId: M:System.Data.SqlTypes.SqlInt16.LessThanOrEqual(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)
  id: LessThanOrEqual(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)
  parent: System.Data.SqlTypes.SqlInt16
  langs:
  - csharp
  - vb
  name: LessThanOrEqual(SqlInt16, SqlInt16)
  fullName: System.Data.SqlTypes.SqlInt16.LessThanOrEqual(System.Data.SqlTypes.SqlInt16, System.Data.SqlTypes.SqlInt16)
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLInt16.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: LessThanOrEqual
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLInt16.cs
    startLine: 488
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: "\n<p>Compares two <xref href=\"System.Data.SqlTypes.SqlInt16\" data-throw-if-not-resolved=\"false\"></xref> structures to determine whether the first is less than or equal to the second.</p>\n"
  syntax:
    content: public static SqlBoolean LessThanOrEqual(SqlInt16 x, SqlInt16 y)
    content.vb: Public Shared Function LessThanOrEqual(x As SqlInt16, y As SqlInt16) As SqlBoolean
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlInt16
    - id: y
      type: System.Data.SqlTypes.SqlInt16
    return:
      type: System.Data.SqlTypes.SqlBoolean
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Data.SqlTypes.SqlInt16.Mod(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)
  commentId: M:System.Data.SqlTypes.SqlInt16.Mod(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)
  id: Mod(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)
  parent: System.Data.SqlTypes.SqlInt16
  langs:
  - csharp
  - vb
  name: Mod(SqlInt16, SqlInt16)
  fullName: System.Data.SqlTypes.SqlInt16.Mod(System.Data.SqlTypes.SqlInt16, System.Data.SqlTypes.SqlInt16)
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLInt16.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Mod
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLInt16.cs
    startLine: 435
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: "\n<p>Computes the remainder after dividing its first <xref href=\"System.Data.SqlTypes.SqlInt16\" data-throw-if-not-resolved=\"false\"></xref> operand by its second.</p>\n"
  syntax:
    content: public static SqlInt16 Mod(SqlInt16 x, SqlInt16 y)
    content.vb: Public Shared Function Mod(x As SqlInt16, y As SqlInt16) As SqlInt16
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlInt16
    - id: y
      type: System.Data.SqlTypes.SqlInt16
    return:
      type: System.Data.SqlTypes.SqlInt16
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Data.SqlTypes.SqlInt16.Modulus(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)
  commentId: M:System.Data.SqlTypes.SqlInt16.Modulus(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)
  id: Modulus(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)
  parent: System.Data.SqlTypes.SqlInt16
  langs:
  - csharp
  - vb
  name: Modulus(SqlInt16, SqlInt16)
  fullName: System.Data.SqlTypes.SqlInt16.Modulus(System.Data.SqlTypes.SqlInt16, System.Data.SqlTypes.SqlInt16)
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLInt16.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Modulus
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLInt16.cs
    startLine: 440
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: "\n<p>Divides two <xref href=\"System.Data.SqlTypes.SqlInt16\" data-throw-if-not-resolved=\"false\"></xref> values and returns the remainder.</p>\n"
  remarks: "\n<p>If either instance of <em>x</em> or <em>y</em> is null, the value is null.</p>\n"
  syntax:
    content: public static SqlInt16 Modulus(SqlInt16 x, SqlInt16 y)
    content.vb: Public Shared Function Modulus(x As SqlInt16, y As SqlInt16) As SqlInt16
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlInt16
    - id: y
      type: System.Data.SqlTypes.SqlInt16
    return:
      type: System.Data.SqlTypes.SqlInt16
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Data.SqlTypes.SqlInt16.Multiply(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)
  commentId: M:System.Data.SqlTypes.SqlInt16.Multiply(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)
  id: Multiply(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)
  parent: System.Data.SqlTypes.SqlInt16
  langs:
  - csharp
  - vb
  name: Multiply(SqlInt16, SqlInt16)
  fullName: System.Data.SqlTypes.SqlInt16.Multiply(System.Data.SqlTypes.SqlInt16, System.Data.SqlTypes.SqlInt16)
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLInt16.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Multiply
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLInt16.cs
    startLine: 423
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: "\n<p>Computes the product of the two <xref href=\"System.Data.SqlTypes.SqlInt16\" data-throw-if-not-resolved=\"false\"></xref> parameters.</p>\n"
  syntax:
    content: public static SqlInt16 Multiply(SqlInt16 x, SqlInt16 y)
    content.vb: Public Shared Function Multiply(x As SqlInt16, y As SqlInt16) As SqlInt16
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlInt16
    - id: y
      type: System.Data.SqlTypes.SqlInt16
    return:
      type: System.Data.SqlTypes.SqlInt16
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Data.SqlTypes.SqlInt16.NotEquals(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)
  commentId: M:System.Data.SqlTypes.SqlInt16.NotEquals(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)
  id: NotEquals(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)
  parent: System.Data.SqlTypes.SqlInt16
  langs:
  - csharp
  - vb
  name: NotEquals(SqlInt16, SqlInt16)
  fullName: System.Data.SqlTypes.SqlInt16.NotEquals(System.Data.SqlTypes.SqlInt16, System.Data.SqlTypes.SqlInt16)
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLInt16.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: NotEquals
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLInt16.cs
    startLine: 470
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: "\n<p>Performs a logical comparison of two <xref href=\"System.Data.SqlTypes.SqlInt16\" data-throw-if-not-resolved=\"false\"></xref> structures to determine whether they are not equal.</p>\n"
  syntax:
    content: public static SqlBoolean NotEquals(SqlInt16 x, SqlInt16 y)
    content.vb: Public Shared Function NotEquals(x As SqlInt16, y As SqlInt16) As SqlBoolean
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlInt16
    - id: y
      type: System.Data.SqlTypes.SqlInt16
    return:
      type: System.Data.SqlTypes.SqlBoolean
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Data.SqlTypes.SqlInt16.OnesComplement(System.Data.SqlTypes.SqlInt16)
  commentId: M:System.Data.SqlTypes.SqlInt16.OnesComplement(System.Data.SqlTypes.SqlInt16)
  id: OnesComplement(System.Data.SqlTypes.SqlInt16)
  parent: System.Data.SqlTypes.SqlInt16
  langs:
  - csharp
  - vb
  name: OnesComplement(SqlInt16)
  fullName: System.Data.SqlTypes.SqlInt16.OnesComplement(System.Data.SqlTypes.SqlInt16)
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLInt16.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: OnesComplement
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLInt16.cs
    startLine: 406
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: "\n<p>The ~ operator performs a bitwise one's complement operation on its <xref href=\"System.Data.SqlTypes.SqlByte\" data-throw-if-not-resolved=\"false\"></xref> operand.</p>\n"
  syntax:
    content: public static SqlInt16 OnesComplement(SqlInt16 x)
    content.vb: Public Shared Function OnesComplement(x As SqlInt16) As SqlInt16
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlInt16
    return:
      type: System.Data.SqlTypes.SqlInt16
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Data.SqlTypes.SqlInt16.op_Addition(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)
  commentId: M:System.Data.SqlTypes.SqlInt16.op_Addition(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)
  id: op_Addition(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)
  parent: System.Data.SqlTypes.SqlInt16
  langs:
  - csharp
  - vb
  name: Addition(SqlInt16, SqlInt16)
  fullName: System.Data.SqlTypes.SqlInt16.Addition(System.Data.SqlTypes.SqlInt16, System.Data.SqlTypes.SqlInt16)
  type: Operator
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLInt16.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_Addition
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLInt16.cs
    startLine: 131
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: "\n<p>Computes the sum of the two <xref href=\"System.Data.SqlTypes.SqlInt16\" data-throw-if-not-resolved=\"false\"></xref> operands.</p>\n"
  syntax:
    content: public static SqlInt16 operator +(SqlInt16 x, SqlInt16 y)
    content.vb: Public Shared Operator +(x As SqlInt16, y As SqlInt16) As SqlInt16
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlInt16
    - id: y
      type: System.Data.SqlTypes.SqlInt16
    return:
      type: System.Data.SqlTypes.SqlInt16
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Data.SqlTypes.SqlInt16.op_BitwiseAnd(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)
  commentId: M:System.Data.SqlTypes.SqlInt16.op_BitwiseAnd(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)
  id: op_BitwiseAnd(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)
  parent: System.Data.SqlTypes.SqlInt16
  langs:
  - csharp
  - vb
  name: BitwiseAnd(SqlInt16, SqlInt16)
  fullName: System.Data.SqlTypes.SqlInt16.BitwiseAnd(System.Data.SqlTypes.SqlInt16, System.Data.SqlTypes.SqlInt16)
  type: Operator
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLInt16.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_BitwiseAnd
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLInt16.cs
    startLine: 216
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: "\n<p>Computes the bitwise AND of its <xref href=\"System.Data.SqlTypes.SqlInt16\" data-throw-if-not-resolved=\"false\"></xref> operands.</p>\n"
  syntax:
    content: public static SqlInt16 operator &(SqlInt16 x, SqlInt16 y)
    content.vb: Public Shared Operator And(x As SqlInt16, y As SqlInt16) As SqlInt16
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlInt16
    - id: y
      type: System.Data.SqlTypes.SqlInt16
    return:
      type: System.Data.SqlTypes.SqlInt16
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Data.SqlTypes.SqlInt16.op_BitwiseOr(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)
  commentId: M:System.Data.SqlTypes.SqlInt16.op_BitwiseOr(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)
  id: op_BitwiseOr(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)
  parent: System.Data.SqlTypes.SqlInt16
  langs:
  - csharp
  - vb
  name: BitwiseOr(SqlInt16, SqlInt16)
  fullName: System.Data.SqlTypes.SqlInt16.BitwiseOr(System.Data.SqlTypes.SqlInt16, System.Data.SqlTypes.SqlInt16)
  type: Operator
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLInt16.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_BitwiseOr
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLInt16.cs
    startLine: 224
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: "\n<p>Computes the bitwise OR of its two <xref href=\"System.Data.SqlTypes.SqlInt16\" data-throw-if-not-resolved=\"false\"></xref> operands.</p>\n"
  syntax:
    content: public static SqlInt16 operator |(SqlInt16 x, SqlInt16 y)
    content.vb: Public Shared Operator Or(x As SqlInt16, y As SqlInt16) As SqlInt16
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlInt16
    - id: y
      type: System.Data.SqlTypes.SqlInt16
    return:
      type: System.Data.SqlTypes.SqlInt16
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Data.SqlTypes.SqlInt16.op_Division(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)
  commentId: M:System.Data.SqlTypes.SqlInt16.op_Division(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)
  id: op_Division(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)
  parent: System.Data.SqlTypes.SqlInt16
  langs:
  - csharp
  - vb
  name: Division(SqlInt16, SqlInt16)
  fullName: System.Data.SqlTypes.SqlInt16.Division(System.Data.SqlTypes.SqlInt16, System.Data.SqlTypes.SqlInt16)
  type: Operator
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLInt16.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_Division
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLInt16.cs
    startLine: 177
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: "\n<p>Divides the first <xref href=\"System.Data.SqlTypes.SqlInt16\" data-throw-if-not-resolved=\"false\"></xref> operand by the second.</p>\n"
  syntax:
    content: public static SqlInt16 operator /(SqlInt16 x, SqlInt16 y)
    content.vb: Public Shared Operator /(x As SqlInt16, y As SqlInt16) As SqlInt16
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlInt16
    - id: y
      type: System.Data.SqlTypes.SqlInt16
    return:
      type: System.Data.SqlTypes.SqlInt16
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Data.SqlTypes.SqlInt16.op_Equality(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)
  commentId: M:System.Data.SqlTypes.SqlInt16.op_Equality(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)
  id: op_Equality(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)
  parent: System.Data.SqlTypes.SqlInt16
  langs:
  - csharp
  - vb
  name: Equality(SqlInt16, SqlInt16)
  fullName: System.Data.SqlTypes.SqlInt16.Equality(System.Data.SqlTypes.SqlInt16, System.Data.SqlTypes.SqlInt16)
  type: Operator
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLInt16.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_Equality
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLInt16.cs
    startLine: 356
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: "\n<p>Performs a logical comparison of two <xref href=\"System.Data.SqlTypes.SqlInt16\" data-throw-if-not-resolved=\"false\"></xref> structures to determine whether they are equal.</p>\n"
  syntax:
    content: public static SqlBoolean operator ==(SqlInt16 x, SqlInt16 y)
    content.vb: Public Shared Operator =(x As SqlInt16, y As SqlInt16) As SqlBoolean
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlInt16
    - id: y
      type: System.Data.SqlTypes.SqlInt16
    return:
      type: System.Data.SqlTypes.SqlBoolean
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Data.SqlTypes.SqlInt16.op_ExclusiveOr(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)
  commentId: M:System.Data.SqlTypes.SqlInt16.op_ExclusiveOr(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)
  id: op_ExclusiveOr(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)
  parent: System.Data.SqlTypes.SqlInt16
  langs:
  - csharp
  - vb
  name: ExclusiveOr(SqlInt16, SqlInt16)
  fullName: System.Data.SqlTypes.SqlInt16.ExclusiveOr(System.Data.SqlTypes.SqlInt16, System.Data.SqlTypes.SqlInt16)
  type: Operator
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLInt16.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_ExclusiveOr
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLInt16.cs
    startLine: 232
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: "\n<p>Performs a bitwise exclusive-OR operation on the supplied parameters.</p>\n"
  syntax:
    content: public static SqlInt16 operator ^(SqlInt16 x, SqlInt16 y)
    content.vb: Public Shared Operator Xor(x As SqlInt16, y As SqlInt16) As SqlInt16
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlInt16
    - id: y
      type: System.Data.SqlTypes.SqlInt16
    return:
      type: System.Data.SqlTypes.SqlInt16
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Data.SqlTypes.SqlInt16.op_Explicit(System.Data.SqlTypes.SqlBoolean)~System.Data.SqlTypes.SqlInt16
  commentId: M:System.Data.SqlTypes.SqlInt16.op_Explicit(System.Data.SqlTypes.SqlBoolean)~System.Data.SqlTypes.SqlInt16
  id: op_Explicit(System.Data.SqlTypes.SqlBoolean)~System.Data.SqlTypes.SqlInt16
  parent: System.Data.SqlTypes.SqlInt16
  langs:
  - csharp
  - vb
  name: Explicit(SqlBoolean to SqlInt16)
  fullName: System.Data.SqlTypes.SqlInt16.Explicit(System.Data.SqlTypes.SqlBoolean to System.Data.SqlTypes.SqlInt16)
  type: Operator
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLInt16.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_Explicit
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLInt16.cs
    startLine: 245
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: "\n<p>Converts the supplied <xref href=\"System.Data.SqlTypes.SqlBoolean\" data-throw-if-not-resolved=\"false\"></xref> structure to <xref href=\"System.Data.SqlTypes.SqlInt16\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: public static explicit operator SqlInt16(SqlBoolean x)
    content.vb: Public Shared Narrowing Operator CType(x As SqlBoolean) As SqlInt16
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlBoolean
    return:
      type: System.Data.SqlTypes.SqlInt16
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Data.SqlTypes.SqlInt16.Narrowing(System.Data.SqlTypes.SqlBoolean to System.Data.SqlTypes.SqlInt16)
  name.vb: Narrowing(SqlBoolean to SqlInt16)
- uid: System.Data.SqlTypes.SqlInt16.op_Explicit(System.Data.SqlTypes.SqlDecimal)~System.Data.SqlTypes.SqlInt16
  commentId: M:System.Data.SqlTypes.SqlInt16.op_Explicit(System.Data.SqlTypes.SqlDecimal)~System.Data.SqlTypes.SqlInt16
  id: op_Explicit(System.Data.SqlTypes.SqlDecimal)~System.Data.SqlTypes.SqlInt16
  parent: System.Data.SqlTypes.SqlInt16
  langs:
  - csharp
  - vb
  name: Explicit(SqlDecimal to SqlInt16)
  fullName: System.Data.SqlTypes.SqlInt16.Explicit(System.Data.SqlTypes.SqlDecimal to System.Data.SqlTypes.SqlInt16)
  type: Operator
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLInt16.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_Explicit
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLInt16.cs
    startLine: 338
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: "\n<p>Converts the supplied <xref href=\"System.Data.SqlTypes.SqlDecimal\" data-throw-if-not-resolved=\"false\"></xref> structure to <xref href=\"System.Data.SqlTypes.SqlInt16\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: public static explicit operator SqlInt16(SqlDecimal x)
    content.vb: Public Shared Narrowing Operator CType(x As SqlDecimal) As SqlInt16
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlDecimal
    return:
      type: System.Data.SqlTypes.SqlInt16
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Data.SqlTypes.SqlInt16.Narrowing(System.Data.SqlTypes.SqlDecimal to System.Data.SqlTypes.SqlInt16)
  name.vb: Narrowing(SqlDecimal to SqlInt16)
- uid: System.Data.SqlTypes.SqlInt16.op_Explicit(System.Data.SqlTypes.SqlDouble)~System.Data.SqlTypes.SqlInt16
  commentId: M:System.Data.SqlTypes.SqlInt16.op_Explicit(System.Data.SqlTypes.SqlDouble)~System.Data.SqlTypes.SqlInt16
  id: op_Explicit(System.Data.SqlTypes.SqlDouble)~System.Data.SqlTypes.SqlInt16
  parent: System.Data.SqlTypes.SqlInt16
  langs:
  - csharp
  - vb
  name: Explicit(SqlDouble to SqlInt16)
  fullName: System.Data.SqlTypes.SqlInt16.Explicit(System.Data.SqlTypes.SqlDouble to System.Data.SqlTypes.SqlInt16)
  type: Operator
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLInt16.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_Explicit
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLInt16.cs
    startLine: 313
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: "\n<p>Converts the supplied <xref href=\"System.Data.SqlTypes.SqlDouble\" data-throw-if-not-resolved=\"false\"></xref> structure to <xref href=\"System.Data.SqlTypes.SqlInt16\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: public static explicit operator SqlInt16(SqlDouble x)
    content.vb: Public Shared Narrowing Operator CType(x As SqlDouble) As SqlInt16
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlDouble
    return:
      type: System.Data.SqlTypes.SqlInt16
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Data.SqlTypes.SqlInt16.Narrowing(System.Data.SqlTypes.SqlDouble to System.Data.SqlTypes.SqlInt16)
  name.vb: Narrowing(SqlDouble to SqlInt16)
- uid: System.Data.SqlTypes.SqlInt16.op_Explicit(System.Data.SqlTypes.SqlInt16)~System.Int16
  commentId: M:System.Data.SqlTypes.SqlInt16.op_Explicit(System.Data.SqlTypes.SqlInt16)~System.Int16
  id: op_Explicit(System.Data.SqlTypes.SqlInt16)~System.Int16
  parent: System.Data.SqlTypes.SqlInt16
  langs:
  - csharp
  - vb
  name: Explicit(SqlInt16 to Int16)
  fullName: System.Data.SqlTypes.SqlInt16.Explicit(System.Data.SqlTypes.SqlInt16 to System.Int16)
  type: Operator
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLInt16.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_Explicit
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLInt16.cs
    startLine: 82
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: "\n<p>Converts the supplied <xref href=\"System.Data.SqlTypes.SqlInt16\" data-throw-if-not-resolved=\"false\"></xref> structure to a short integer.</p>\n"
  syntax:
    content: public static explicit operator short (SqlInt16 x)
    content.vb: Public Shared Narrowing Operator CType(x As SqlInt16) As Short
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlInt16
    return:
      type: System.Int16
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Data.SqlTypes.SqlInt16.Narrowing(System.Data.SqlTypes.SqlInt16 to System.Int16)
  name.vb: Narrowing(SqlInt16 to Int16)
- uid: System.Data.SqlTypes.SqlInt16.op_Explicit(System.Data.SqlTypes.SqlInt32)~System.Data.SqlTypes.SqlInt16
  commentId: M:System.Data.SqlTypes.SqlInt16.op_Explicit(System.Data.SqlTypes.SqlInt32)~System.Data.SqlTypes.SqlInt16
  id: op_Explicit(System.Data.SqlTypes.SqlInt32)~System.Data.SqlTypes.SqlInt16
  parent: System.Data.SqlTypes.SqlInt16
  langs:
  - csharp
  - vb
  name: Explicit(SqlInt32 to SqlInt16)
  fullName: System.Data.SqlTypes.SqlInt16.Explicit(System.Data.SqlTypes.SqlInt32 to System.Data.SqlTypes.SqlInt16)
  type: Operator
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLInt16.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_Explicit
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLInt16.cs
    startLine: 265
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: "\n<p>Converts the supplied <xref href=\"System.Data.SqlTypes.SqlInt32\" data-throw-if-not-resolved=\"false\"></xref> structure to <xref href=\"System.Data.SqlTypes.SqlInt16\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: public static explicit operator SqlInt16(SqlInt32 x)
    content.vb: Public Shared Narrowing Operator CType(x As SqlInt32) As SqlInt16
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlInt32
    return:
      type: System.Data.SqlTypes.SqlInt16
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Data.SqlTypes.SqlInt16.Narrowing(System.Data.SqlTypes.SqlInt32 to System.Data.SqlTypes.SqlInt16)
  name.vb: Narrowing(SqlInt32 to SqlInt16)
- uid: System.Data.SqlTypes.SqlInt16.op_Explicit(System.Data.SqlTypes.SqlInt64)~System.Data.SqlTypes.SqlInt16
  commentId: M:System.Data.SqlTypes.SqlInt16.op_Explicit(System.Data.SqlTypes.SqlInt64)~System.Data.SqlTypes.SqlInt16
  id: op_Explicit(System.Data.SqlTypes.SqlInt64)~System.Data.SqlTypes.SqlInt16
  parent: System.Data.SqlTypes.SqlInt16
  langs:
  - csharp
  - vb
  name: Explicit(SqlInt64 to SqlInt16)
  fullName: System.Data.SqlTypes.SqlInt16.Explicit(System.Data.SqlTypes.SqlInt64 to System.Data.SqlTypes.SqlInt16)
  type: Operator
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLInt16.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_Explicit
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLInt16.cs
    startLine: 281
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: "\n<p>Converts the supplied <xref href=\"System.Data.SqlTypes.SqlInt64\" data-throw-if-not-resolved=\"false\"></xref> structure to <xref href=\"System.Data.SqlTypes.SqlInt16\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: public static explicit operator SqlInt16(SqlInt64 x)
    content.vb: Public Shared Narrowing Operator CType(x As SqlInt64) As SqlInt16
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlInt64
    return:
      type: System.Data.SqlTypes.SqlInt16
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Data.SqlTypes.SqlInt16.Narrowing(System.Data.SqlTypes.SqlInt64 to System.Data.SqlTypes.SqlInt16)
  name.vb: Narrowing(SqlInt64 to SqlInt16)
- uid: System.Data.SqlTypes.SqlInt16.op_Explicit(System.Data.SqlTypes.SqlMoney)~System.Data.SqlTypes.SqlInt16
  commentId: M:System.Data.SqlTypes.SqlInt16.op_Explicit(System.Data.SqlTypes.SqlMoney)~System.Data.SqlTypes.SqlInt16
  id: op_Explicit(System.Data.SqlTypes.SqlMoney)~System.Data.SqlTypes.SqlInt16
  parent: System.Data.SqlTypes.SqlInt16
  langs:
  - csharp
  - vb
  name: Explicit(SqlMoney to SqlInt16)
  fullName: System.Data.SqlTypes.SqlInt16.Explicit(System.Data.SqlTypes.SqlMoney to System.Data.SqlTypes.SqlInt16)
  type: Operator
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLInt16.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_Explicit
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLInt16.cs
    startLine: 329
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: "\n<p>Converts the supplied <xref href=\"System.Data.SqlTypes.SqlMoney\" data-throw-if-not-resolved=\"false\"></xref> structure to <xref href=\"System.Data.SqlTypes.SqlInt16\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: public static explicit operator SqlInt16(SqlMoney x)
    content.vb: Public Shared Narrowing Operator CType(x As SqlMoney) As SqlInt16
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlMoney
    return:
      type: System.Data.SqlTypes.SqlInt16
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Data.SqlTypes.SqlInt16.Narrowing(System.Data.SqlTypes.SqlMoney to System.Data.SqlTypes.SqlInt16)
  name.vb: Narrowing(SqlMoney to SqlInt16)
- uid: System.Data.SqlTypes.SqlInt16.op_Explicit(System.Data.SqlTypes.SqlSingle)~System.Data.SqlTypes.SqlInt16
  commentId: M:System.Data.SqlTypes.SqlInt16.op_Explicit(System.Data.SqlTypes.SqlSingle)~System.Data.SqlTypes.SqlInt16
  id: op_Explicit(System.Data.SqlTypes.SqlSingle)~System.Data.SqlTypes.SqlInt16
  parent: System.Data.SqlTypes.SqlInt16
  langs:
  - csharp
  - vb
  name: Explicit(SqlSingle to SqlInt16)
  fullName: System.Data.SqlTypes.SqlInt16.Explicit(System.Data.SqlTypes.SqlSingle to System.Data.SqlTypes.SqlInt16)
  type: Operator
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLInt16.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_Explicit
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLInt16.cs
    startLine: 297
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: "\n<p>Converts the supplied <xref href=\"System.Data.SqlTypes.SqlSingle\" data-throw-if-not-resolved=\"false\"></xref> structure to <xref href=\"System.Data.SqlTypes.SqlInt16\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: public static explicit operator SqlInt16(SqlSingle x)
    content.vb: Public Shared Narrowing Operator CType(x As SqlSingle) As SqlInt16
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlSingle
    return:
      type: System.Data.SqlTypes.SqlInt16
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Data.SqlTypes.SqlInt16.Narrowing(System.Data.SqlTypes.SqlSingle to System.Data.SqlTypes.SqlInt16)
  name.vb: Narrowing(SqlSingle to SqlInt16)
- uid: System.Data.SqlTypes.SqlInt16.op_Explicit(System.Data.SqlTypes.SqlString)~System.Data.SqlTypes.SqlInt16
  commentId: M:System.Data.SqlTypes.SqlInt16.op_Explicit(System.Data.SqlTypes.SqlString)~System.Data.SqlTypes.SqlInt16
  id: op_Explicit(System.Data.SqlTypes.SqlString)~System.Data.SqlTypes.SqlInt16
  parent: System.Data.SqlTypes.SqlInt16
  langs:
  - csharp
  - vb
  name: Explicit(SqlString to SqlInt16)
  fullName: System.Data.SqlTypes.SqlInt16.Explicit(System.Data.SqlTypes.SqlString to System.Data.SqlTypes.SqlInt16)
  type: Operator
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLInt16.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_Explicit
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLInt16.cs
    startLine: 347
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: "\n<p>Converts the supplied <xref href=\"System.Data.SqlTypes.SqlString\" data-throw-if-not-resolved=\"false\"></xref> object to <xref href=\"System.Data.SqlTypes.SqlInt16\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: public static explicit operator SqlInt16(SqlString x)
    content.vb: Public Shared Narrowing Operator CType(x As SqlString) As SqlInt16
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlString
    return:
      type: System.Data.SqlTypes.SqlInt16
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Data.SqlTypes.SqlInt16.Narrowing(System.Data.SqlTypes.SqlString to System.Data.SqlTypes.SqlInt16)
  name.vb: Narrowing(SqlString to SqlInt16)
- uid: System.Data.SqlTypes.SqlInt16.op_GreaterThan(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)
  commentId: M:System.Data.SqlTypes.SqlInt16.op_GreaterThan(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)
  id: op_GreaterThan(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)
  parent: System.Data.SqlTypes.SqlInt16
  langs:
  - csharp
  - vb
  name: GreaterThan(SqlInt16, SqlInt16)
  fullName: System.Data.SqlTypes.SqlInt16.GreaterThan(System.Data.SqlTypes.SqlInt16, System.Data.SqlTypes.SqlInt16)
  type: Operator
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLInt16.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_GreaterThan
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLInt16.cs
    startLine: 380
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: "\n<p>Compares two instances of <xref href=\"System.Data.SqlTypes.SqlInt16\" data-throw-if-not-resolved=\"false\"></xref> to determine whether the first is greater than the second.</p>\n"
  syntax:
    content: public static SqlBoolean operator>(SqlInt16 x, SqlInt16 y)
    content.vb: Public Shared Operator>(x As SqlInt16, y As SqlInt16) As SqlBoolean
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlInt16
    - id: y
      type: System.Data.SqlTypes.SqlInt16
    return:
      type: System.Data.SqlTypes.SqlBoolean
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Data.SqlTypes.SqlInt16.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)
  commentId: M:System.Data.SqlTypes.SqlInt16.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)
  id: op_GreaterThanOrEqual(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)
  parent: System.Data.SqlTypes.SqlInt16
  langs:
  - csharp
  - vb
  name: GreaterThanOrEqual(SqlInt16, SqlInt16)
  fullName: System.Data.SqlTypes.SqlInt16.GreaterThanOrEqual(System.Data.SqlTypes.SqlInt16, System.Data.SqlTypes.SqlInt16)
  type: Operator
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLInt16.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_GreaterThanOrEqual
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLInt16.cs
    startLine: 396
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: "\n<p>Compares two <xref href=\"System.Data.SqlTypes.SqlInt16\" data-throw-if-not-resolved=\"false\"></xref> structures to determine whether the first is greater than or equal to the second.</p>\n"
  syntax:
    content: public static SqlBoolean operator >=(SqlInt16 x, SqlInt16 y)
    content.vb: Public Shared Operator >=(x As SqlInt16, y As SqlInt16) As SqlBoolean
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlInt16
    - id: y
      type: System.Data.SqlTypes.SqlInt16
    return:
      type: System.Data.SqlTypes.SqlBoolean
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Data.SqlTypes.SqlInt16.op_Implicit(System.Data.SqlTypes.SqlByte)~System.Data.SqlTypes.SqlInt16
  commentId: M:System.Data.SqlTypes.SqlInt16.op_Implicit(System.Data.SqlTypes.SqlByte)~System.Data.SqlTypes.SqlInt16
  id: op_Implicit(System.Data.SqlTypes.SqlByte)~System.Data.SqlTypes.SqlInt16
  parent: System.Data.SqlTypes.SqlInt16
  langs:
  - csharp
  - vb
  name: Implicit(SqlByte to SqlInt16)
  fullName: System.Data.SqlTypes.SqlInt16.Implicit(System.Data.SqlTypes.SqlByte to System.Data.SqlTypes.SqlInt16)
  type: Operator
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLInt16.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_Implicit
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLInt16.cs
    startLine: 254
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: "\n<p>Converts the supplied <xref href=\"System.Data.SqlTypes.SqlByte\" data-throw-if-not-resolved=\"false\"></xref> structure to <xref href=\"System.Data.SqlTypes.SqlInt16\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: public static implicit operator SqlInt16(SqlByte x)
    content.vb: Public Shared Widening Operator CType(x As SqlByte) As SqlInt16
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlByte
    return:
      type: System.Data.SqlTypes.SqlInt16
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Data.SqlTypes.SqlInt16.Widening(System.Data.SqlTypes.SqlByte to System.Data.SqlTypes.SqlInt16)
  name.vb: Widening(SqlByte to SqlInt16)
- uid: System.Data.SqlTypes.SqlInt16.op_Implicit(System.Int16)~System.Data.SqlTypes.SqlInt16
  commentId: M:System.Data.SqlTypes.SqlInt16.op_Implicit(System.Int16)~System.Data.SqlTypes.SqlInt16
  id: op_Implicit(System.Int16)~System.Data.SqlTypes.SqlInt16
  parent: System.Data.SqlTypes.SqlInt16
  langs:
  - csharp
  - vb
  name: Implicit(Int16 to SqlInt16)
  fullName: System.Data.SqlTypes.SqlInt16.Implicit(System.Int16 to System.Data.SqlTypes.SqlInt16)
  type: Operator
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLInt16.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_Implicit
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLInt16.cs
    startLine: 73
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: "\n<p>Converts the supplied short integer to <xref href=\"System.Data.SqlTypes.SqlInt16\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: public static implicit operator SqlInt16(short x)
    content.vb: Public Shared Widening Operator CType(x As Short) As SqlInt16
    parameters:
    - id: x
      type: System.Int16
    return:
      type: System.Data.SqlTypes.SqlInt16
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Data.SqlTypes.SqlInt16.Widening(System.Int16 to System.Data.SqlTypes.SqlInt16)
  name.vb: Widening(Int16 to SqlInt16)
- uid: System.Data.SqlTypes.SqlInt16.op_Inequality(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)
  commentId: M:System.Data.SqlTypes.SqlInt16.op_Inequality(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)
  id: op_Inequality(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)
  parent: System.Data.SqlTypes.SqlInt16
  langs:
  - csharp
  - vb
  name: Inequality(SqlInt16, SqlInt16)
  fullName: System.Data.SqlTypes.SqlInt16.Inequality(System.Data.SqlTypes.SqlInt16, System.Data.SqlTypes.SqlInt16)
  type: Operator
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLInt16.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_Inequality
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLInt16.cs
    startLine: 364
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: "\n<p>Performs a logical comparison of two <xref href=\"System.Data.SqlTypes.SqlInt16\" data-throw-if-not-resolved=\"false\"></xref> structures to determine whether they are not equal.</p>\n"
  syntax:
    content: public static SqlBoolean operator !=(SqlInt16 x, SqlInt16 y)
    content.vb: Public Shared Operator <>(x As SqlInt16, y As SqlInt16) As SqlBoolean
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlInt16
    - id: y
      type: System.Data.SqlTypes.SqlInt16
    return:
      type: System.Data.SqlTypes.SqlBoolean
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Data.SqlTypes.SqlInt16.op_LessThan(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)
  commentId: M:System.Data.SqlTypes.SqlInt16.op_LessThan(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)
  id: op_LessThan(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)
  parent: System.Data.SqlTypes.SqlInt16
  langs:
  - csharp
  - vb
  name: LessThan(SqlInt16, SqlInt16)
  fullName: System.Data.SqlTypes.SqlInt16.LessThan(System.Data.SqlTypes.SqlInt16, System.Data.SqlTypes.SqlInt16)
  type: Operator
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLInt16.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_LessThan
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLInt16.cs
    startLine: 372
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: "\n<p>Compares two instances of <xref href=\"System.Data.SqlTypes.SqlInt16\" data-throw-if-not-resolved=\"false\"></xref> to determine whether the first is less than the second.</p>\n"
  syntax:
    content: public static SqlBoolean operator <(SqlInt16 x, SqlInt16 y)
    content.vb: Public Shared Operator <(x As SqlInt16, y As SqlInt16) As SqlBoolean
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlInt16
    - id: y
      type: System.Data.SqlTypes.SqlInt16
    return:
      type: System.Data.SqlTypes.SqlBoolean
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Data.SqlTypes.SqlInt16.op_LessThanOrEqual(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)
  commentId: M:System.Data.SqlTypes.SqlInt16.op_LessThanOrEqual(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)
  id: op_LessThanOrEqual(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)
  parent: System.Data.SqlTypes.SqlInt16
  langs:
  - csharp
  - vb
  name: LessThanOrEqual(SqlInt16, SqlInt16)
  fullName: System.Data.SqlTypes.SqlInt16.LessThanOrEqual(System.Data.SqlTypes.SqlInt16, System.Data.SqlTypes.SqlInt16)
  type: Operator
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLInt16.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_LessThanOrEqual
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLInt16.cs
    startLine: 388
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: "\n<p>Compares two <xref href=\"System.Data.SqlTypes.SqlInt16\" data-throw-if-not-resolved=\"false\"></xref> structures to determine whether the first is less than or equal to the second.</p>\n"
  syntax:
    content: public static SqlBoolean operator <=(SqlInt16 x, SqlInt16 y)
    content.vb: Public Shared Operator <=(x As SqlInt16, y As SqlInt16) As SqlBoolean
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlInt16
    - id: y
      type: System.Data.SqlTypes.SqlInt16
    return:
      type: System.Data.SqlTypes.SqlBoolean
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Data.SqlTypes.SqlInt16.op_Modulus(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)
  commentId: M:System.Data.SqlTypes.SqlInt16.op_Modulus(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)
  id: op_Modulus(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)
  parent: System.Data.SqlTypes.SqlInt16
  langs:
  - csharp
  - vb
  name: Modulus(SqlInt16, SqlInt16)
  fullName: System.Data.SqlTypes.SqlInt16.Modulus(System.Data.SqlTypes.SqlInt16, System.Data.SqlTypes.SqlInt16)
  type: Operator
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLInt16.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_Modulus
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLInt16.cs
    startLine: 196
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: "\n<p>Computes the remainder after dividing its first <xref href=\"System.Data.SqlTypes.SqlInt16\" data-throw-if-not-resolved=\"false\"></xref> operand by its second.</p>\n"
  syntax:
    content: public static SqlInt16 operator %(SqlInt16 x, SqlInt16 y)
    content.vb: Public Shared Operator Mod(x As SqlInt16, y As SqlInt16) As SqlInt16
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlInt16
    - id: y
      type: System.Data.SqlTypes.SqlInt16
    return:
      type: System.Data.SqlTypes.SqlInt16
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Data.SqlTypes.SqlInt16.op_Multiply(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)
  commentId: M:System.Data.SqlTypes.SqlInt16.op_Multiply(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)
  id: op_Multiply(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)
  parent: System.Data.SqlTypes.SqlInt16
  langs:
  - csharp
  - vb
  name: Multiply(SqlInt16, SqlInt16)
  fullName: System.Data.SqlTypes.SqlInt16.Multiply(System.Data.SqlTypes.SqlInt16, System.Data.SqlTypes.SqlInt16)
  type: Operator
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLInt16.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_Multiply
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLInt16.cs
    startLine: 161
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: "\n<p>Computes the product of the two <xref href=\"System.Data.SqlTypes.SqlInt16\" data-throw-if-not-resolved=\"false\"></xref> parameters.</p>\n"
  syntax:
    content: public static SqlInt16 operator *(SqlInt16 x, SqlInt16 y)
    content.vb: Public Shared Operator *(x As SqlInt16, y As SqlInt16) As SqlInt16
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlInt16
    - id: y
      type: System.Data.SqlTypes.SqlInt16
    return:
      type: System.Data.SqlTypes.SqlInt16
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Data.SqlTypes.SqlInt16.op_OnesComplement(System.Data.SqlTypes.SqlInt16)
  commentId: M:System.Data.SqlTypes.SqlInt16.op_OnesComplement(System.Data.SqlTypes.SqlInt16)
  id: op_OnesComplement(System.Data.SqlTypes.SqlInt16)
  parent: System.Data.SqlTypes.SqlInt16
  langs:
  - csharp
  - vb
  name: OnesComplement(SqlInt16)
  fullName: System.Data.SqlTypes.SqlInt16.OnesComplement(System.Data.SqlTypes.SqlInt16)
  type: Operator
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLInt16.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_OnesComplement
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLInt16.cs
    startLine: 119
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: "\n<p>The ~ operator performs a bitwise one's complement operation on its <xref href=\"System.Data.SqlTypes.SqlByte\" data-throw-if-not-resolved=\"false\"></xref> operand.</p>\n"
  syntax:
    content: public static SqlInt16 operator ~(SqlInt16 x)
    content.vb: Public Shared Operator Not(x As SqlInt16) As SqlInt16
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlInt16
    return:
      type: System.Data.SqlTypes.SqlInt16
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Data.SqlTypes.SqlInt16.op_Subtraction(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)
  commentId: M:System.Data.SqlTypes.SqlInt16.op_Subtraction(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)
  id: op_Subtraction(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)
  parent: System.Data.SqlTypes.SqlInt16
  langs:
  - csharp
  - vb
  name: Subtraction(SqlInt16, SqlInt16)
  fullName: System.Data.SqlTypes.SqlInt16.Subtraction(System.Data.SqlTypes.SqlInt16, System.Data.SqlTypes.SqlInt16)
  type: Operator
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLInt16.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_Subtraction
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLInt16.cs
    startLine: 146
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: "\n<p>Subtracts the second <xref href=\"System.Data.SqlTypes.SqlInt16\" data-throw-if-not-resolved=\"false\"></xref> parameter from the first.</p>\n"
  syntax:
    content: public static SqlInt16 operator -(SqlInt16 x, SqlInt16 y)
    content.vb: Public Shared Operator -(x As SqlInt16, y As SqlInt16) As SqlInt16
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlInt16
    - id: y
      type: System.Data.SqlTypes.SqlInt16
    return:
      type: System.Data.SqlTypes.SqlInt16
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Data.SqlTypes.SqlInt16.op_UnaryNegation(System.Data.SqlTypes.SqlInt16)
  commentId: M:System.Data.SqlTypes.SqlInt16.op_UnaryNegation(System.Data.SqlTypes.SqlInt16)
  id: op_UnaryNegation(System.Data.SqlTypes.SqlInt16)
  parent: System.Data.SqlTypes.SqlInt16
  langs:
  - csharp
  - vb
  name: UnaryNegation(SqlInt16)
  fullName: System.Data.SqlTypes.SqlInt16.UnaryNegation(System.Data.SqlTypes.SqlInt16)
  type: Operator
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLInt16.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_UnaryNegation
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLInt16.cs
    startLine: 111
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: "\n<p>The unary minus operator negates the <xref href=\"System.Data.SqlTypes.SqlInt16.Value\" data-throw-if-not-resolved=\"false\"></xref> of the <xref href=\"System.Data.SqlTypes.SqlInt16\" data-throw-if-not-resolved=\"false\"></xref> operand.</p>\n"
  syntax:
    content: public static SqlInt16 operator -(SqlInt16 x)
    content.vb: Public Shared Operator -(x As SqlInt16) As SqlInt16
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlInt16
    return:
      type: System.Data.SqlTypes.SqlInt16
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Data.SqlTypes.SqlInt16.Parse(System.String)
  commentId: M:System.Data.SqlTypes.SqlInt16.Parse(System.String)
  id: Parse(System.String)
  parent: System.Data.SqlTypes.SqlInt16
  langs:
  - csharp
  - vb
  name: Parse(String)
  fullName: System.Data.SqlTypes.SqlInt16.Parse(System.String)
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLInt16.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Parse
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLInt16.cs
    startLine: 98
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: "\n<p>Converts the <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref> representation of a number to its 16-bit signed integer equivalent.</p>\n"
  syntax:
    content: public static SqlInt16 Parse(string s)
    content.vb: Public Shared Function Parse(s As String) As SqlInt16
    parameters:
    - id: s
      type: System.String
    return:
      type: System.Data.SqlTypes.SqlInt16
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Data.SqlTypes.SqlInt16.Subtract(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)
  commentId: M:System.Data.SqlTypes.SqlInt16.Subtract(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)
  id: Subtract(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)
  parent: System.Data.SqlTypes.SqlInt16
  langs:
  - csharp
  - vb
  name: Subtract(SqlInt16, SqlInt16)
  fullName: System.Data.SqlTypes.SqlInt16.Subtract(System.Data.SqlTypes.SqlInt16, System.Data.SqlTypes.SqlInt16)
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLInt16.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Subtract
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLInt16.cs
    startLine: 417
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: "\n<p>Subtracts the second <xref href=\"System.Data.SqlTypes.SqlInt16\" data-throw-if-not-resolved=\"false\"></xref> parameter from the first.</p>\n"
  syntax:
    content: public static SqlInt16 Subtract(SqlInt16 x, SqlInt16 y)
    content.vb: Public Shared Function Subtract(x As SqlInt16, y As SqlInt16) As SqlInt16
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlInt16
    - id: y
      type: System.Data.SqlTypes.SqlInt16
    return:
      type: System.Data.SqlTypes.SqlInt16
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Data.SqlTypes.SqlInt16.ToSqlBoolean
  commentId: M:System.Data.SqlTypes.SqlInt16.ToSqlBoolean
  id: ToSqlBoolean
  parent: System.Data.SqlTypes.SqlInt16
  langs:
  - csharp
  - vb
  name: ToSqlBoolean()
  fullName: System.Data.SqlTypes.SqlInt16.ToSqlBoolean()
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLInt16.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ToSqlBoolean
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLInt16.cs
    startLine: 501
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: "\n<p>Converts this <xref href=\"System.Data.SqlTypes.SqlInt16\" data-throw-if-not-resolved=\"false\"></xref> structure to <xref href=\"System.Data.SqlTypes.SqlBoolean\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: public SqlBoolean ToSqlBoolean()
    content.vb: Public Function ToSqlBoolean As SqlBoolean
    return:
      type: System.Data.SqlTypes.SqlBoolean
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Data.SqlTypes.SqlInt16.ToSqlByte
  commentId: M:System.Data.SqlTypes.SqlInt16.ToSqlByte
  id: ToSqlByte
  parent: System.Data.SqlTypes.SqlInt16
  langs:
  - csharp
  - vb
  name: ToSqlByte()
  fullName: System.Data.SqlTypes.SqlInt16.ToSqlByte()
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLInt16.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ToSqlByte
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLInt16.cs
    startLine: 506
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: "\n<p>Converts this <xref href=\"System.Data.SqlTypes.SqlInt16\" data-throw-if-not-resolved=\"false\"></xref> structure to <xref href=\"System.Data.SqlTypes.SqlByte\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: public SqlByte ToSqlByte()
    content.vb: Public Function ToSqlByte As SqlByte
    return:
      type: System.Data.SqlTypes.SqlByte
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Data.SqlTypes.SqlInt16.ToSqlDecimal
  commentId: M:System.Data.SqlTypes.SqlInt16.ToSqlDecimal
  id: ToSqlDecimal
  parent: System.Data.SqlTypes.SqlInt16
  langs:
  - csharp
  - vb
  name: ToSqlDecimal()
  fullName: System.Data.SqlTypes.SqlInt16.ToSqlDecimal()
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLInt16.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ToSqlDecimal
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLInt16.cs
    startLine: 531
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: "\n<p>Converts this <xref href=\"System.Data.SqlTypes.SqlInt16\" data-throw-if-not-resolved=\"false\"></xref> structure to <xref href=\"System.Data.SqlTypes.SqlDecimal\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: public SqlDecimal ToSqlDecimal()
    content.vb: Public Function ToSqlDecimal As SqlDecimal
    return:
      type: System.Data.SqlTypes.SqlDecimal
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Data.SqlTypes.SqlInt16.ToSqlDouble
  commentId: M:System.Data.SqlTypes.SqlInt16.ToSqlDouble
  id: ToSqlDouble
  parent: System.Data.SqlTypes.SqlInt16
  langs:
  - csharp
  - vb
  name: ToSqlDouble()
  fullName: System.Data.SqlTypes.SqlInt16.ToSqlDouble()
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLInt16.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ToSqlDouble
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLInt16.cs
    startLine: 511
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: "\n<p>Converts this <xref href=\"System.Data.SqlTypes.SqlInt16\" data-throw-if-not-resolved=\"false\"></xref> structure to <xref href=\"System.Data.SqlTypes.SqlDouble\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: public SqlDouble ToSqlDouble()
    content.vb: Public Function ToSqlDouble As SqlDouble
    return:
      type: System.Data.SqlTypes.SqlDouble
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Data.SqlTypes.SqlInt16.ToSqlInt32
  commentId: M:System.Data.SqlTypes.SqlInt16.ToSqlInt32
  id: ToSqlInt32
  parent: System.Data.SqlTypes.SqlInt16
  langs:
  - csharp
  - vb
  name: ToSqlInt32()
  fullName: System.Data.SqlTypes.SqlInt16.ToSqlInt32()
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLInt16.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ToSqlInt32
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLInt16.cs
    startLine: 516
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: "\n<p>Converts this <xref href=\"System.Data.SqlTypes.SqlInt16\" data-throw-if-not-resolved=\"false\"></xref> structure to <xref href=\"System.Data.SqlTypes.SqlInt32\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: public SqlInt32 ToSqlInt32()
    content.vb: Public Function ToSqlInt32 As SqlInt32
    return:
      type: System.Data.SqlTypes.SqlInt32
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Data.SqlTypes.SqlInt16.ToSqlInt64
  commentId: M:System.Data.SqlTypes.SqlInt16.ToSqlInt64
  id: ToSqlInt64
  parent: System.Data.SqlTypes.SqlInt16
  langs:
  - csharp
  - vb
  name: ToSqlInt64()
  fullName: System.Data.SqlTypes.SqlInt16.ToSqlInt64()
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLInt16.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ToSqlInt64
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLInt16.cs
    startLine: 521
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: "\n<p>Converts this <xref href=\"System.Data.SqlTypes.SqlInt16\" data-throw-if-not-resolved=\"false\"></xref> structure to <xref href=\"System.Data.SqlTypes.SqlInt64\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: public SqlInt64 ToSqlInt64()
    content.vb: Public Function ToSqlInt64 As SqlInt64
    return:
      type: System.Data.SqlTypes.SqlInt64
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Data.SqlTypes.SqlInt16.ToSqlMoney
  commentId: M:System.Data.SqlTypes.SqlInt16.ToSqlMoney
  id: ToSqlMoney
  parent: System.Data.SqlTypes.SqlInt16
  langs:
  - csharp
  - vb
  name: ToSqlMoney()
  fullName: System.Data.SqlTypes.SqlInt16.ToSqlMoney()
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLInt16.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ToSqlMoney
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLInt16.cs
    startLine: 526
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: "\n<p>Converts this <xref href=\"System.Data.SqlTypes.SqlInt16\" data-throw-if-not-resolved=\"false\"></xref> structure to <xref href=\"System.Data.SqlTypes.SqlMoney\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: public SqlMoney ToSqlMoney()
    content.vb: Public Function ToSqlMoney As SqlMoney
    return:
      type: System.Data.SqlTypes.SqlMoney
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Data.SqlTypes.SqlInt16.ToSqlSingle
  commentId: M:System.Data.SqlTypes.SqlInt16.ToSqlSingle
  id: ToSqlSingle
  parent: System.Data.SqlTypes.SqlInt16
  langs:
  - csharp
  - vb
  name: ToSqlSingle()
  fullName: System.Data.SqlTypes.SqlInt16.ToSqlSingle()
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLInt16.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ToSqlSingle
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLInt16.cs
    startLine: 536
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: "\n<p>Converts this <xref href=\"System.Data.SqlTypes.SqlInt16\" data-throw-if-not-resolved=\"false\"></xref> structure to <xref href=\"System.Data.SqlTypes.SqlSingle\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: public SqlSingle ToSqlSingle()
    content.vb: Public Function ToSqlSingle As SqlSingle
    return:
      type: System.Data.SqlTypes.SqlSingle
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Data.SqlTypes.SqlInt16.ToSqlString
  commentId: M:System.Data.SqlTypes.SqlInt16.ToSqlString
  id: ToSqlString
  parent: System.Data.SqlTypes.SqlInt16
  langs:
  - csharp
  - vb
  name: ToSqlString()
  fullName: System.Data.SqlTypes.SqlInt16.ToSqlString()
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLInt16.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ToSqlString
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLInt16.cs
    startLine: 541
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: "\n<p>Converts this <xref href=\"System.Data.SqlTypes.SqlInt16\" data-throw-if-not-resolved=\"false\"></xref> structure to <xref href=\"System.Data.SqlTypes.SqlString\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: public SqlString ToSqlString()
    content.vb: Public Function ToSqlString As SqlString
    return:
      type: System.Data.SqlTypes.SqlString
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Data.SqlTypes.SqlInt16.ToString
  commentId: M:System.Data.SqlTypes.SqlInt16.ToString
  id: ToString
  parent: System.Data.SqlTypes.SqlInt16
  langs:
  - csharp
  - vb
  name: ToString()
  fullName: System.Data.SqlTypes.SqlInt16.ToString()
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLInt16.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ToString
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLInt16.cs
    startLine: 90
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: "\n<p>Converts a <xref href=\"System.Data.SqlTypes.SqlInt16\" data-throw-if-not-resolved=\"false\"></xref> structure to <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: public override string ToString()
    content.vb: Public Overrides Function ToString As String
    return:
      type: System.String
  overridden: System.ValueType.ToString
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Data.SqlTypes.SqlInt16.Xor(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)
  commentId: M:System.Data.SqlTypes.SqlInt16.Xor(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)
  id: Xor(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)
  parent: System.Data.SqlTypes.SqlInt16
  langs:
  - csharp
  - vb
  name: Xor(SqlInt16, SqlInt16)
  fullName: System.Data.SqlTypes.SqlInt16.Xor(System.Data.SqlTypes.SqlInt16, System.Data.SqlTypes.SqlInt16)
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLInt16.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Xor
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLInt16.cs
    startLine: 458
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: "\n<p>Performs a bitwise exclusive-OR operation on the supplied parameters.</p>\n"
  syntax:
    content: public static SqlInt16 Xor(SqlInt16 x, SqlInt16 y)
    content.vb: Public Shared Function Xor(x As SqlInt16, y As SqlInt16) As SqlInt16
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlInt16
    - id: y
      type: System.Data.SqlTypes.SqlInt16
    return:
      type: System.Data.SqlTypes.SqlInt16
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: System.Data.SqlTypes
  isExternal: false
  name: System.Data.SqlTypes
  fullName: System.Data.SqlTypes
- uid: System.Data.SqlTypes.INullable
  parent: System.Data.SqlTypes
  isExternal: false
  name: INullable
  fullName: System.Data.SqlTypes.INullable
- uid: System.IComparable
  parent: System
  isExternal: false
  name: IComparable
  fullName: System.IComparable
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System.Data.SqlTypes.SqlInt16
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlInt16
  fullName: System.Data.SqlTypes.SqlInt16
- uid: System.Int16
  parent: System
  isExternal: false
  name: Int16
  fullName: System.Int16
- uid: System.Data.SqlTypes.INullable.IsNull
  parent: System.Data.SqlTypes.INullable
  isExternal: false
  name: IsNull
  fullName: System.Data.SqlTypes.INullable.IsNull
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  fullName: System.Boolean
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  fullName: System.Int32
- uid: System.IComparable.CompareTo(System.Object)
  parent: System.IComparable
  isExternal: true
  name: CompareTo(Object)
  fullName: System.IComparable.CompareTo(System.Object)
  spec.csharp:
  - uid: System.IComparable.CompareTo(System.Object)
    name: CompareTo
    fullName: System.IComparable.CompareTo
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IComparable.CompareTo(System.Object)
    name: CompareTo
    fullName: System.IComparable.CompareTo
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Data.SqlTypes.SqlBoolean
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlBoolean
  fullName: System.Data.SqlTypes.SqlBoolean
- uid: System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  name: Equals(Object)
  fullName: System.ValueType.Equals(System.Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    fullName: System.ValueType.Equals
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    fullName: System.ValueType.Equals
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.ValueType
  parent: System
  isExternal: false
  name: ValueType
  fullName: System.ValueType
- uid: System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: false
  name: GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    fullName: System.ValueType.GetHashCode
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    fullName: System.ValueType.GetHashCode
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Data.SqlTypes.SqlDecimal
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlDecimal
  fullName: System.Data.SqlTypes.SqlDecimal
- uid: System.Data.SqlTypes.SqlDouble
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlDouble
  fullName: System.Data.SqlTypes.SqlDouble
- uid: System.Data.SqlTypes.SqlInt32
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlInt32
  fullName: System.Data.SqlTypes.SqlInt32
- uid: System.Data.SqlTypes.SqlInt64
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlInt64
  fullName: System.Data.SqlTypes.SqlInt64
- uid: System.Data.SqlTypes.SqlMoney
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlMoney
  fullName: System.Data.SqlTypes.SqlMoney
- uid: System.Data.SqlTypes.SqlSingle
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlSingle
  fullName: System.Data.SqlTypes.SqlSingle
- uid: System.Data.SqlTypes.SqlString
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlString
  fullName: System.Data.SqlTypes.SqlString
- uid: System.Data.SqlTypes.SqlByte
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlByte
  fullName: System.Data.SqlTypes.SqlByte
- uid: System.String
  parent: System
  isExternal: false
  name: String
  fullName: System.String
- uid: System.ValueType.ToString
  parent: System.ValueType
  isExternal: false
  name: ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    fullName: System.ValueType.ToString
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    fullName: System.ValueType.ToString
  - name: (
    fullName: (
  - name: )
    fullName: )
