items:
- uid: System.ComponentModel.TypeConverter.StandardValuesCollection
  commentId: T:System.ComponentModel.TypeConverter.StandardValuesCollection
  id: TypeConverter.StandardValuesCollection
  parent: System.ComponentModel
  children:
  - System.ComponentModel.TypeConverter.StandardValuesCollection.#ctor(System.Collections.ICollection)
  - System.ComponentModel.TypeConverter.StandardValuesCollection.CopyTo(System.Array,System.Int32)
  - System.ComponentModel.TypeConverter.StandardValuesCollection.Count
  - System.ComponentModel.TypeConverter.StandardValuesCollection.GetEnumerator
  - System.ComponentModel.TypeConverter.StandardValuesCollection.Item(System.Int32)
  - System.ComponentModel.TypeConverter.StandardValuesCollection.System#Collections#ICollection#IsSynchronized
  - System.ComponentModel.TypeConverter.StandardValuesCollection.System#Collections#ICollection#SyncRoot
  langs:
  - csharp
  - vb
  name: TypeConverter.StandardValuesCollection
  fullName: System.ComponentModel.TypeConverter.StandardValuesCollection
  type: Class
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeConverter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: StandardValuesCollection
    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeConverter.cs
    startLine: 526
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: "\n<p>Represents a collection of values.</p>\n"
  remarks: "\n<p>This is a simple collection class that takes an array of values and converts it to a collection. It is lightweight and is well suited for use in <xref href=\"System.ComponentModel.TypeConverter.GetStandardValues\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: 'public class StandardValuesCollection : ICollection, IEnumerable'
    content.vb: >-
      Public Class StandardValuesCollection
          Implements ICollection, IEnumerable
  seealso:
  - type: System.ComponentModel.TypeConverter.GetStandardValues
    commentId: M:System.ComponentModel.TypeConverter.GetStandardValues
  - type: System.ComponentModel.TypeConverter
    commentId: T:System.ComponentModel.TypeConverter
  inheritance:
  - System.Object
  implements:
  - System.Collections.ICollection
  - System.Collections.IEnumerable
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: System.ComponentModel.TypeConverter.StandardValuesCollection.#ctor(System.Collections.ICollection)
  commentId: M:System.ComponentModel.TypeConverter.StandardValuesCollection.#ctor(System.Collections.ICollection)
  id: '#ctor(System.Collections.ICollection)'
  parent: System.ComponentModel.TypeConverter.StandardValuesCollection
  langs:
  - csharp
  - vb
  name: StandardValuesCollection(ICollection)
  fullName: System.ComponentModel.TypeConverter.StandardValuesCollection.StandardValuesCollection(System.Collections.ICollection)
  type: Constructor
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeConverter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeConverter.cs
    startLine: 536
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.ComponentModel.TypeConverter.StandardValuesCollection\" data-throw-if-not-resolved=\"false\"></xref> class.</p>\n"
  syntax:
    content: public StandardValuesCollection(ICollection values)
    content.vb: Public Sub New(values As ICollection)
    parameters:
    - id: values
      type: System.Collections.ICollection
  seealso:
  - type: System.Collections.ICollection
    commentId: T:System.Collections.ICollection
  - type: System.ComponentModel.TypeConverter.StandardValuesCollection
    commentId: T:System.ComponentModel.TypeConverter.StandardValuesCollection
  - type: System.ComponentModel.TypeConverter
    commentId: T:System.ComponentModel.TypeConverter
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.ComponentModel.TypeConverter.StandardValuesCollection.Count
  commentId: P:System.ComponentModel.TypeConverter.StandardValuesCollection.Count
  id: Count
  parent: System.ComponentModel.TypeConverter.StandardValuesCollection
  langs:
  - csharp
  - vb
  name: Count
  fullName: System.ComponentModel.TypeConverter.StandardValuesCollection.Count
  type: Property
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeConverter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Count
    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeConverter.cs
    startLine: 557
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: "\n<p>Gets the number of objects in the collection.</p>\n"
  remarks: "\n<p>The <xref href=\"System.ComponentModel.TypeConverter.StandardValuesCollection.Count\" data-throw-if-not-resolved=\"false\"></xref> property can be used to set the limits of a loop that iterates through a collection of objects. Since collection is zero-based, be sure to use <code>Count - 1</code> as the upper bound of the loop.</p>\n"
  syntax:
    content: public int Count { get; }
    content.vb: Public ReadOnly Property Count As Integer
    parameters: []
    return:
      type: System.Int32
  seealso:
  - type: System.ComponentModel.TypeConverter.StandardValuesCollection
    commentId: T:System.ComponentModel.TypeConverter.StandardValuesCollection
  - type: System.ComponentModel.TypeConverter
    commentId: T:System.ComponentModel.TypeConverter
  implements:
  - System.Collections.ICollection.Count
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.ComponentModel.TypeConverter.StandardValuesCollection.System#Collections#ICollection#IsSynchronized
  commentId: P:System.ComponentModel.TypeConverter.StandardValuesCollection.System#Collections#ICollection#IsSynchronized
  id: System#Collections#ICollection#IsSynchronized
  isEii: true
  parent: System.ComponentModel.TypeConverter.StandardValuesCollection
  langs:
  - csharp
  - vb
  name: ICollection.IsSynchronized
  fullName: System.ComponentModel.TypeConverter.StandardValuesCollection.System.Collections.ICollection.IsSynchronized
  type: Property
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeConverter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: System.Collections.ICollection.IsSynchronized
    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeConverter.cs
    startLine: 621
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: "\n<p>For a description of this member, see <xref href=\"System.Collections.ICollection.IsSynchronized\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  remarks: "\n<p>For speed, the <xref href=\"System.ComponentModel.TypeConverter.StandardValuesCollection\" data-throw-if-not-resolved=\"false\"></xref> is not synchronized. Since it is read-only, there is no need to synchronize it.</p>\n"
  syntax:
    content: bool ICollection.IsSynchronized { get; }
    content.vb: ReadOnly WriteOnly Property System.Collections.ICollection.IsSynchronized As Boolean Implements ICollection.IsSynchronized
    parameters: []
    return:
      type: System.Boolean
  seealso:
  - type: System.Collections.ICollection
    commentId: T:System.Collections.ICollection
  implements:
  - System.Collections.ICollection.IsSynchronized
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
  name.vb: System.Collections.ICollection.IsSynchronized
- uid: System.ComponentModel.TypeConverter.StandardValuesCollection.System#Collections#ICollection#SyncRoot
  commentId: P:System.ComponentModel.TypeConverter.StandardValuesCollection.System#Collections#ICollection#SyncRoot
  id: System#Collections#ICollection#SyncRoot
  isEii: true
  parent: System.ComponentModel.TypeConverter.StandardValuesCollection
  langs:
  - csharp
  - vb
  name: ICollection.SyncRoot
  fullName: System.ComponentModel.TypeConverter.StandardValuesCollection.System.Collections.ICollection.SyncRoot
  type: Property
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeConverter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: System.Collections.ICollection.SyncRoot
    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeConverter.cs
    startLine: 634
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: "\n<p>For a description of this member, see <xref href=\"System.Collections.ICollection.SyncRoot\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  remarks: "\n<p>The <xref href=\"System.ComponentModel.TypeConverter.StandardValuesCollection\" data-throw-if-not-resolved=\"false\"></xref> is not synchronized.</p>\n"
  syntax:
    content: object ICollection.SyncRoot { get; }
    content.vb: ReadOnly WriteOnly Property System.Collections.ICollection.SyncRoot As Object Implements ICollection.SyncRoot
    parameters: []
    return:
      type: System.Object
  seealso:
  - type: System.Collections.ICollection
    commentId: T:System.Collections.ICollection
  implements:
  - System.Collections.ICollection.SyncRoot
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
  name.vb: System.Collections.ICollection.SyncRoot
- uid: System.ComponentModel.TypeConverter.StandardValuesCollection.Item(System.Int32)
  commentId: P:System.ComponentModel.TypeConverter.StandardValuesCollection.Item(System.Int32)
  id: Item(System.Int32)
  parent: System.ComponentModel.TypeConverter.StandardValuesCollection
  langs:
  - csharp
  - vb
  name: Item[Int32]
  fullName: System.ComponentModel.TypeConverter.StandardValuesCollection.Item[System.Int32]
  type: Property
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeConverter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: this[]
    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeConverter.cs
    startLine: 575
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: "\n<p>Gets the object at the specified index number.</p>\n"
  remarks: "\n<p>The index number is zero-based. Therefore, you must subtract one from the numerical position of a particular <xref href=\"System.Object\" data-throw-if-not-resolved=\"false\"></xref> to access that <xref href=\"System.Object\" data-throw-if-not-resolved=\"false\"></xref>. For example, to get the third <xref href=\"System.Object\" data-throw-if-not-resolved=\"false\"></xref>, you need to specify <code>myColl[2]</code>.</p>\n"
  syntax:
    content: public object this[int index] { get; }
    content.vb: Public ReadOnly Property Item(index As Integer) As Object
    parameters:
    - id: index
      type: System.Int32
    return:
      type: System.Object
  seealso:
  - type: System.ComponentModel.TypeConverter.StandardValuesCollection
    commentId: T:System.ComponentModel.TypeConverter.StandardValuesCollection
  - type: System.ComponentModel.TypeConverter
    commentId: T:System.ComponentModel.TypeConverter
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: System.ComponentModel.TypeConverter.StandardValuesCollection.Item(System.Int32)
  name.vb: Item(Int32)
- uid: System.ComponentModel.TypeConverter.StandardValuesCollection.CopyTo(System.Array,System.Int32)
  commentId: M:System.ComponentModel.TypeConverter.StandardValuesCollection.CopyTo(System.Array,System.Int32)
  id: CopyTo(System.Array,System.Int32)
  parent: System.ComponentModel.TypeConverter.StandardValuesCollection
  langs:
  - csharp
  - vb
  name: CopyTo(Array, Int32)
  fullName: System.ComponentModel.TypeConverter.StandardValuesCollection.CopyTo(System.Array, System.Int32)
  type: Method
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeConverter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CopyTo
    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeConverter.cs
    startLine: 601
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: "\n<p>Copies the contents of this collection to an array.</p>\n"
  remarks: "\n<p>The index number is zero-based. Therefore, you must subtract one from the numerical position of a particular <xref href=\"System.Object\" data-throw-if-not-resolved=\"false\"></xref> to access that <xref href=\"System.Object\" data-throw-if-not-resolved=\"false\"></xref>. For example, to get the third <xref href=\"System.Object\" data-throw-if-not-resolved=\"false\"></xref>, you need to specify <code>myColl[2]</code>.</p>\n"
  syntax:
    content: public void CopyTo(Array array, int index)
    content.vb: Public Sub CopyTo(array As Array, index As Integer)
    parameters:
    - id: array
      type: System.Array
    - id: index
      type: System.Int32
  seealso:
  - type: System.Array
    commentId: T:System.Array
  - type: System.ComponentModel.TypeConverter.StandardValuesCollection
    commentId: T:System.ComponentModel.TypeConverter.StandardValuesCollection
  - type: System.ComponentModel.TypeConverter
    commentId: T:System.ComponentModel.TypeConverter
  implements:
  - System.Collections.ICollection.CopyTo(System.Array,System.Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.ComponentModel.TypeConverter.StandardValuesCollection.GetEnumerator
  commentId: M:System.ComponentModel.TypeConverter.StandardValuesCollection.GetEnumerator
  id: GetEnumerator
  parent: System.ComponentModel.TypeConverter.StandardValuesCollection
  langs:
  - csharp
  - vb
  name: GetEnumerator()
  fullName: System.ComponentModel.TypeConverter.StandardValuesCollection.GetEnumerator()
  type: Method
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeConverter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetEnumerator
    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeConverter.cs
    startLine: 611
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: "\n<p>Returns an enumerator for this collection.</p>\n"
  syntax:
    content: public IEnumerator GetEnumerator()
    content.vb: Public Function GetEnumerator As IEnumerator
    return:
      type: System.Collections.IEnumerator
  seealso:
  - type: System.Collections.IEnumerator
    commentId: T:System.Collections.IEnumerator
  - type: System.ComponentModel.TypeConverter.StandardValuesCollection
    commentId: T:System.ComponentModel.TypeConverter.StandardValuesCollection
  - type: System.ComponentModel.TypeConverter
    commentId: T:System.ComponentModel.TypeConverter
  implements:
  - System.Collections.IEnumerable.GetEnumerator
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: System.ComponentModel
  isExternal: false
  name: System.ComponentModel
  fullName: System.ComponentModel
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System.Collections.ICollection
  parent: System.Collections
  isExternal: false
  name: ICollection
  fullName: System.Collections.ICollection
- uid: System.Collections.IEnumerable
  parent: System.Collections
  isExternal: false
  name: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Collections
  isExternal: false
  name: System.Collections
  fullName: System.Collections
- uid: System.Collections.ICollection.Count
  parent: System.Collections.ICollection
  isExternal: false
  name: Count
  fullName: System.Collections.ICollection.Count
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  fullName: System.Int32
- uid: System.Collections.ICollection.IsSynchronized
  parent: System.Collections.ICollection
  isExternal: false
  name: IsSynchronized
  fullName: System.Collections.ICollection.IsSynchronized
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  fullName: System.Boolean
- uid: System.Collections.ICollection.SyncRoot
  parent: System.Collections.ICollection
  isExternal: false
  name: SyncRoot
  fullName: System.Collections.ICollection.SyncRoot
- uid: System.Collections.ICollection.CopyTo(System.Array,System.Int32)
  parent: System.Collections.ICollection
  isExternal: true
  name: CopyTo(Array, Int32)
  fullName: System.Collections.ICollection.CopyTo(System.Array, System.Int32)
  spec.csharp:
  - uid: System.Collections.ICollection.CopyTo(System.Array,System.Int32)
    name: CopyTo
    fullName: System.Collections.ICollection.CopyTo
  - name: (
    fullName: (
  - uid: System.Array
    name: Array
    fullName: System.Array
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ICollection.CopyTo(System.Array,System.Int32)
    name: CopyTo
    fullName: System.Collections.ICollection.CopyTo
  - name: (
    fullName: (
  - uid: System.Array
    name: Array
    fullName: System.Array
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
- uid: System.Array
  parent: System
  isExternal: false
  name: Array
  fullName: System.Array
- uid: System.Collections.IEnumerable.GetEnumerator
  parent: System.Collections.IEnumerable
  isExternal: false
  name: GetEnumerator()
  fullName: System.Collections.IEnumerable.GetEnumerator()
  spec.csharp:
  - uid: System.Collections.IEnumerable.GetEnumerator
    name: GetEnumerator
    fullName: System.Collections.IEnumerable.GetEnumerator
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Collections.IEnumerable.GetEnumerator
    name: GetEnumerator
    fullName: System.Collections.IEnumerable.GetEnumerator
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: false
  name: IEnumerator
  fullName: System.Collections.IEnumerator
