items:
- uid: System.ComponentModel.HandledEventArgs
  commentId: T:System.ComponentModel.HandledEventArgs
  id: HandledEventArgs
  parent: System.ComponentModel
  children:
  - System.ComponentModel.HandledEventArgs.#ctor
  - System.ComponentModel.HandledEventArgs.#ctor(System.Boolean)
  - System.ComponentModel.HandledEventArgs.Handled
  langs:
  - csharp
  - vb
  name: HandledEventArgs
  fullName: System.ComponentModel.HandledEventArgs
  type: Class
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/HandledEventArgs.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: HandledEventArgs
    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/HandledEventArgs.cs
    startLine: 12
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: "\n<p>Provides data for events that can be handled completely in an event handler. </p>\n"
  remarks: "\n<p>Typically, the value of the <xref href=\"System.ComponentModel.HandledEventArgs.Handled\" data-throw-if-not-resolved=\"false\"></xref> property is set in an event handler to indicate that the system should perform no further processing. </p>\n<p>This class is a base class for types such as the <xref href=\"System.Windows.Forms.DataGridViewCellPaintingEventArgs\" data-throw-if-not-resolved=\"false\"></xref>, <xref href=\"System.Windows.Forms.DataGridViewRowPrePaintEventArgs\" data-throw-if-not-resolved=\"false\"></xref>, <xref href=\"System.Windows.Forms.DataGridViewRowHeightInfoPushedEventArgs\" data-throw-if-not-resolved=\"false\"></xref>, and <xref href=\"System.Windows.Forms.DataGridViewSortCompareEventArgs\" data-throw-if-not-resolved=\"false\"></xref> classes. </p>\n"
  syntax:
    content: 'public class HandledEventArgs : EventArgs'
    content.vb: >-
      Public Class HandledEventArgs
          Inherits EventArgs
  seealso:
  - type: System.ComponentModel.HandledEventHandler
    commentId: T:System.ComponentModel.HandledEventHandler
  - type: System.Windows.Forms.DataGridViewCellPaintingEventArgs
    commentId: T:System.Windows.Forms.DataGridViewCellPaintingEventArgs
  - type: System.Windows.Forms.DataGridViewRowPrePaintEventArgs
    commentId: T:System.Windows.Forms.DataGridViewRowPrePaintEventArgs
  - type: System.Windows.Forms.DataGridViewRowHeightInfoPushedEventArgs
    commentId: T:System.Windows.Forms.DataGridViewRowHeightInfoPushedEventArgs
  - type: System.Windows.Forms.DataGridViewSortCompareEventArgs
    commentId: T:System.Windows.Forms.DataGridViewSortCompareEventArgs
  inheritance:
  - System.Object
  - System.EventArgs
  inheritedMembers:
  - System.EventArgs.Empty
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: System.ComponentModel.HandledEventArgs.#ctor
  commentId: M:System.ComponentModel.HandledEventArgs.#ctor
  id: '#ctor'
  parent: System.ComponentModel.HandledEventArgs
  langs:
  - csharp
  - vb
  name: HandledEventArgs()
  fullName: System.ComponentModel.HandledEventArgs.HandledEventArgs()
  type: Constructor
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/HandledEventArgs.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/HandledEventArgs.cs
    startLine: 20
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.ComponentModel.HandledEventArgs\" data-throw-if-not-resolved=\"false\"></xref> class with a default <xref href=\"System.ComponentModel.HandledEventArgs.Handled\" data-throw-if-not-resolved=\"false\"></xref> property value of <strong>false</strong>.</p>\n"
  syntax:
    content: public HandledEventArgs()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.ComponentModel.HandledEventArgs.#ctor(System.Boolean)
  commentId: M:System.ComponentModel.HandledEventArgs.#ctor(System.Boolean)
  id: '#ctor(System.Boolean)'
  parent: System.ComponentModel.HandledEventArgs
  langs:
  - csharp
  - vb
  name: HandledEventArgs(Boolean)
  fullName: System.ComponentModel.HandledEventArgs.HandledEventArgs(System.Boolean)
  type: Constructor
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/HandledEventArgs.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/HandledEventArgs.cs
    startLine: 30
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.ComponentModel.HandledEventArgs\" data-throw-if-not-resolved=\"false\"></xref> class with the specified default value for the <xref href=\"System.ComponentModel.HandledEventArgs.Handled\" data-throw-if-not-resolved=\"false\"></xref> property.</p>\n"
  syntax:
    content: public HandledEventArgs(bool defaultHandledValue)
    content.vb: Public Sub New(defaultHandledValue As Boolean)
    parameters:
    - id: defaultHandledValue
      type: System.Boolean
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.ComponentModel.HandledEventArgs.Handled
  commentId: P:System.ComponentModel.HandledEventArgs.Handled
  id: Handled
  parent: System.ComponentModel.HandledEventArgs
  langs:
  - csharp
  - vb
  name: Handled
  fullName: System.ComponentModel.HandledEventArgs.Handled
  type: Property
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/HandledEventArgs.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Handled
    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/HandledEventArgs.cs
    startLine: 41
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: "\n<p>Gets or sets a value that indicates whether the event handler has completely handled the event or whether the system should continue its own processing.</p>\n"
  syntax:
    content: public bool Handled { get; set; }
    content.vb: Public Property Handled As Boolean
    parameters: []
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: System.ComponentModel
  isExternal: false
  name: System.ComponentModel
  fullName: System.ComponentModel
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System.EventArgs
  parent: System
  isExternal: false
  name: EventArgs
  fullName: System.EventArgs
- uid: System.EventArgs.Empty
  parent: System.EventArgs
  isExternal: true
  name: Empty
  fullName: System.EventArgs.Empty
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  fullName: System.Boolean
