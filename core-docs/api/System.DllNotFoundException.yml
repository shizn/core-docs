items:
- uid: System.DllNotFoundException
  commentId: T:System.DllNotFoundException
  id: DllNotFoundException
  parent: System
  children:
  - System.DllNotFoundException.#ctor
  - System.DllNotFoundException.#ctor(System.String)
  - System.DllNotFoundException.#ctor(System.String,System.Exception)
  langs:
  - csharp
  - vb
  name: DllNotFoundException
  fullName: System.DllNotFoundException
  type: Class
  source:
    remote:
      path: src/mscorlib/src/System/DllNotFoundException.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: DllNotFoundException
    path: src/mscorlib/src/System/DllNotFoundException.cs
    startLine: 18
  assemblies:
  - System.Runtime.InteropServices
  namespace: System
  summary: "\n<p>The exception that is thrown when a DLL specified in a DLL import cannot be found.</p>\n"
  remarks: "\n<p>\n<xref href=\"System.DllNotFoundException\" data-throw-if-not-resolved=\"false\"></xref> uses the HRESULT COR_E_DLLNOTFOUND, which has the value 0x80131524.</p>\n<p>For a list of initial property values for an instance of <xref href=\"System.DllNotFoundException\" data-throw-if-not-resolved=\"false\"></xref>, see the <xref href=\"System.DllNotFoundException.#ctor\" data-throw-if-not-resolved=\"false\"></xref> constructors.</p>\n<p>The <xref href=\"System.DllNotFoundException\" data-throw-if-not-resolved=\"false\"></xref> is thrown when a dynamic link library defined by the <xref href=\"System.Runtime.InteropServices.DllImportAttribute\" data-throw-if-not-resolved=\"false\"></xref> attribute or a comparable language construct, such as the Visual Basic <strong>Declare</strong> statement, cannot be found. It is not thrown when the common language runtime is unable to load a .NET Framework assembly.</p>\n<p>Note that the <xref href=\"System.Runtime.InteropServices.DllImportAttribute\" data-throw-if-not-resolved=\"false\"></xref> can specify the path to the directory in which the DLL resides. If a path is not specified, Windows uses the search order described in <see href=\"http://go.microsoft.com/fwlink/?LinkId=122531\">Dynamic-Link Library Search Order</see>. </p>\n"
  syntax:
    content: >-
      [ComVisible(true)]

      [Serializable]

      public class DllNotFoundException : TypeLoadException, _Exception, ISerializable
    content.vb: >-
      <ComVisible(True)>

      <Serializable>

      Public Class DllNotFoundException
          Inherits TypeLoadException
          Implements _Exception, ISerializable
  seealso:
  - type: System.Exception
    commentId: T:System.Exception
  inheritance:
  - System.Object
  - System.Exception
  - System.SystemException
  - System.TypeLoadException
  implements:
  - System.Runtime.InteropServices._Exception
  - System.Runtime.Serialization.ISerializable
  inheritedMembers:
  - System.TypeLoadException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.TypeLoadException.Message
  - System.TypeLoadException.TypeName
  - System.Exception.GetBaseException
  - System.Exception.ToString
  - System.Exception.GetType
  - System.Exception.Data
  - System.Exception.InnerException
  - System.Exception.TargetSite
  - System.Exception.StackTrace
  - System.Exception.HelpLink
  - System.Exception.Source
  - System.Exception.HResult
  - System.Exception.SerializeObjectState
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: System.DllNotFoundException.#ctor
  commentId: M:System.DllNotFoundException.#ctor
  id: '#ctor'
  parent: System.DllNotFoundException
  langs:
  - csharp
  - vb
  name: DllNotFoundException()
  fullName: System.DllNotFoundException.DllNotFoundException()
  type: Constructor
  source:
    remote:
      path: src/mscorlib/src/System/DllNotFoundException.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: .ctor
    path: src/mscorlib/src/System/DllNotFoundException.cs
    startLine: 20
  assemblies:
  - System.Runtime.InteropServices
  namespace: System
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.DllNotFoundException\" data-throw-if-not-resolved=\"false\"></xref> class with default properties.</p>\n"
  remarks: "\n<p>The following table shows the initial property values for an instance of <xref href=\"System.DllNotFoundException\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>Property </p>\n<p>Value </p>\n<table><tbody><tr><td>\n<p>\n<xref href=\"System.Exception.InnerException\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td><td>\n<p>A null reference (<strong>Nothing</strong> in Visual Basic). </p>\n</td></tr><tr><td>\n<p>\n<xref href=\"System.TypeLoadException.Message\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td><td>\n<p>The localized error message string. </p>\n</td></tr></tbody></table>\n"
  syntax:
    content: public DllNotFoundException()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.DllNotFoundException.#ctor(System.String)
  commentId: M:System.DllNotFoundException.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.DllNotFoundException
  langs:
  - csharp
  - vb
  name: DllNotFoundException(String)
  fullName: System.DllNotFoundException.DllNotFoundException(System.String)
  type: Constructor
  source:
    remote:
      path: src/mscorlib/src/System/DllNotFoundException.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: .ctor
    path: src/mscorlib/src/System/DllNotFoundException.cs
    startLine: 25
  assemblies:
  - System.Runtime.InteropServices
  namespace: System
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.DllNotFoundException\" data-throw-if-not-resolved=\"false\"></xref> class with a specified error message.</p>\n"
  remarks: "\n<p>The following table shows the initial property values for an instance of <xref href=\"System.DllNotFoundException\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>Property </p>\n<p>Value </p>\n<table><tbody><tr><td>\n<p>\n<xref href=\"System.Exception.InnerException\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td><td>\n<p>A null reference (<strong>Nothing</strong> in Visual Basic). </p>\n</td></tr><tr><td>\n<p>\n<xref href=\"System.TypeLoadException.Message\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td><td>\n<p>The error message string. </p>\n</td></tr></tbody></table>\n"
  syntax:
    content: public DllNotFoundException(string message)
    content.vb: Public Sub New(message As String)
    parameters:
    - id: message
      type: System.String
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.DllNotFoundException.#ctor(System.String,System.Exception)
  commentId: M:System.DllNotFoundException.#ctor(System.String,System.Exception)
  id: '#ctor(System.String,System.Exception)'
  parent: System.DllNotFoundException
  langs:
  - csharp
  - vb
  name: DllNotFoundException(String, Exception)
  fullName: System.DllNotFoundException.DllNotFoundException(System.String, System.Exception)
  type: Constructor
  source:
    remote:
      path: src/mscorlib/src/System/DllNotFoundException.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: .ctor
    path: src/mscorlib/src/System/DllNotFoundException.cs
    startLine: 30
  assemblies:
  - System.Runtime.InteropServices
  namespace: System
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.DllNotFoundException\" data-throw-if-not-resolved=\"false\"></xref> class with a specified error message and a reference to the inner exception that is the cause of this exception.</p>\n"
  remarks: "\n<p>An exception that is thrown as a direct result of a previous exception should include a reference to the previous exception in the <xref href=\"System.Exception.InnerException\" data-throw-if-not-resolved=\"false\"></xref> property. The <xref href=\"System.Exception.InnerException\" data-throw-if-not-resolved=\"false\"></xref> property returns the same value that is passed into the constructor, or <strong>null</strong> if the <xref href=\"System.Exception.InnerException\" data-throw-if-not-resolved=\"false\"></xref> property does not supply the inner exception value to the constructor.</p>\n<p>The following table shows the initial property values for an instance of <xref href=\"System.DllNotFoundException\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>Property </p>\n<p>Value </p>\n<table><tbody><tr><td>\n<p>\n<xref href=\"System.Exception.InnerException\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td><td>\n<p>The inner exception reference. </p>\n</td></tr><tr><td>\n<p>\n<xref href=\"System.TypeLoadException.Message\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td><td>\n<p>The error message string. </p>\n</td></tr></tbody></table>\n"
  syntax:
    content: public DllNotFoundException(string message, Exception inner)
    content.vb: Public Sub New(message As String, inner As Exception)
    parameters:
    - id: message
      type: System.String
    - id: inner
      type: System.Exception
  seealso:
  - type: System.Exception
    commentId: T:System.Exception
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System.Exception
  parent: System
  isExternal: false
  name: Exception
  fullName: System.Exception
- uid: System.SystemException
  parent: System
  isExternal: true
  name: SystemException
  fullName: System.SystemException
- uid: System.TypeLoadException
  parent: System
  isExternal: false
  name: TypeLoadException
  fullName: System.TypeLoadException
- uid: System.Runtime.InteropServices._Exception
  parent: System.Runtime.InteropServices
  isExternal: true
  name: _Exception
  fullName: System.Runtime.InteropServices._Exception
- uid: System.Runtime.Serialization.ISerializable
  parent: System.Runtime.Serialization
  isExternal: false
  name: ISerializable
  fullName: System.Runtime.Serialization.ISerializable
- uid: System.TypeLoadException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.TypeLoadException
  isExternal: true
  name: GetObjectData(SerializationInfo, StreamingContext)
  fullName: System.TypeLoadException.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)
  spec.csharp:
  - uid: System.TypeLoadException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
    name: GetObjectData
    fullName: System.TypeLoadException.GetObjectData
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Runtime.Serialization.SerializationInfo
    name: SerializationInfo
    fullName: System.Runtime.Serialization.SerializationInfo
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Runtime.Serialization.StreamingContext
    name: StreamingContext
    fullName: System.Runtime.Serialization.StreamingContext
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.TypeLoadException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
    name: GetObjectData
    fullName: System.TypeLoadException.GetObjectData
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Runtime.Serialization.SerializationInfo
    name: SerializationInfo
    fullName: System.Runtime.Serialization.SerializationInfo
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Runtime.Serialization.StreamingContext
    name: StreamingContext
    fullName: System.Runtime.Serialization.StreamingContext
    isExternal: true
  - name: )
    fullName: )
- uid: System.TypeLoadException.Message
  parent: System.TypeLoadException
  isExternal: false
  name: Message
  fullName: System.TypeLoadException.Message
- uid: System.TypeLoadException.TypeName
  parent: System.TypeLoadException
  isExternal: false
  name: TypeName
  fullName: System.TypeLoadException.TypeName
- uid: System.Exception.GetBaseException
  parent: System.Exception
  isExternal: false
  name: GetBaseException()
  fullName: System.Exception.GetBaseException()
  spec.csharp:
  - uid: System.Exception.GetBaseException
    name: GetBaseException
    fullName: System.Exception.GetBaseException
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Exception.GetBaseException
    name: GetBaseException
    fullName: System.Exception.GetBaseException
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Exception.ToString
  parent: System.Exception
  isExternal: false
  name: ToString()
  fullName: System.Exception.ToString()
  spec.csharp:
  - uid: System.Exception.ToString
    name: ToString
    fullName: System.Exception.ToString
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Exception.ToString
    name: ToString
    fullName: System.Exception.ToString
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Exception.GetType
  parent: System.Exception
  isExternal: true
  name: GetType()
  fullName: System.Exception.GetType()
  spec.csharp:
  - uid: System.Exception.GetType
    name: GetType
    fullName: System.Exception.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Exception.GetType
    name: GetType
    fullName: System.Exception.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Exception.Data
  parent: System.Exception
  isExternal: false
  name: Data
  fullName: System.Exception.Data
- uid: System.Exception.InnerException
  parent: System.Exception
  isExternal: false
  name: InnerException
  fullName: System.Exception.InnerException
- uid: System.Exception.TargetSite
  parent: System.Exception
  isExternal: true
  name: TargetSite
  fullName: System.Exception.TargetSite
- uid: System.Exception.StackTrace
  parent: System.Exception
  isExternal: false
  name: StackTrace
  fullName: System.Exception.StackTrace
- uid: System.Exception.HelpLink
  parent: System.Exception
  isExternal: false
  name: HelpLink
  fullName: System.Exception.HelpLink
- uid: System.Exception.Source
  parent: System.Exception
  isExternal: false
  name: Source
  fullName: System.Exception.Source
- uid: System.Exception.HResult
  parent: System.Exception
  isExternal: false
  name: HResult
  fullName: System.Exception.HResult
- uid: System.Exception.SerializeObjectState
  parent: System.Exception
  isExternal: true
  name: SerializeObjectState
  fullName: System.Exception.SerializeObjectState
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Runtime.InteropServices
  isExternal: false
  name: System.Runtime.InteropServices
  fullName: System.Runtime.InteropServices
- uid: System.Runtime.Serialization
  isExternal: false
  name: System.Runtime.Serialization
  fullName: System.Runtime.Serialization
- uid: System.String
  parent: System
  isExternal: false
  name: String
  fullName: System.String
