items:
- uid: System.Xml.XmlNodeType
  commentId: T:System.Xml.XmlNodeType
  id: XmlNodeType
  parent: System.Xml
  children:
  - System.Xml.XmlNodeType.Attribute
  - System.Xml.XmlNodeType.CDATA
  - System.Xml.XmlNodeType.Comment
  - System.Xml.XmlNodeType.Document
  - System.Xml.XmlNodeType.DocumentFragment
  - System.Xml.XmlNodeType.DocumentType
  - System.Xml.XmlNodeType.Element
  - System.Xml.XmlNodeType.EndElement
  - System.Xml.XmlNodeType.EndEntity
  - System.Xml.XmlNodeType.Entity
  - System.Xml.XmlNodeType.EntityReference
  - System.Xml.XmlNodeType.None
  - System.Xml.XmlNodeType.Notation
  - System.Xml.XmlNodeType.ProcessingInstruction
  - System.Xml.XmlNodeType.SignificantWhitespace
  - System.Xml.XmlNodeType.Text
  - System.Xml.XmlNodeType.Whitespace
  - System.Xml.XmlNodeType.XmlDeclaration
  langs:
  - csharp
  - vb
  name: XmlNodeType
  fullName: System.Xml.XmlNodeType
  type: Enum
  source:
    remote:
      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: XmlNodeType
    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
    startLine: 175
  assemblies:
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: "\n<p>Specifies the type of node.</p>\n"
  syntax:
    content: public enum XmlNodeType
    content.vb: Public Enum XmlNodeType
  modifiers.csharp:
  - public
  - enum
  modifiers.vb:
  - Public
  - Enum
- uid: System.Xml.XmlNodeType.Attribute
  commentId: F:System.Xml.XmlNodeType.Attribute
  id: Attribute
  parent: System.Xml.XmlNodeType
  langs:
  - csharp
  - vb
  name: Attribute
  fullName: System.Xml.XmlNodeType.Attribute
  type: Field
  source:
    remote:
      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Attribute
    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
    startLine: 177
  assemblies:
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: "\n<p>An attribute (for example, <code>id='123'</code> ).</p>\n"
  remarks: "\n<p>An <strong>Attribute</strong> node can have the following child node types: <strong>Text</strong> and <strong>EntityReference</strong>. The <strong>Attribute</strong> node does not appear as the child node of any other node type. It is not considered a child node of an <strong>Element</strong>.</p>\n"
  syntax:
    content: Attribute = 2
    return:
      type: System.Xml.XmlNodeType
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Xml.XmlNodeType.CDATA
  commentId: F:System.Xml.XmlNodeType.CDATA
  id: CDATA
  parent: System.Xml.XmlNodeType
  langs:
  - csharp
  - vb
  name: CDATA
  fullName: System.Xml.XmlNodeType.CDATA
  type: Field
  source:
    remote:
      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CDATA
    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
    startLine: 178
  assemblies:
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: "\n<p>A CDATA section (for example, <code><![CDATA[my escaped text]]></code> ).</p>\n"
  remarks: "\n<p>CDATA sections are used to escape blocks of text that would otherwise be recognized as markup. A <strong>CDATA</strong> node cannot have any child nodes. It can appear as the child of the <strong>DocumentFragment</strong>, <strong>EntityReference</strong>, and <strong>Element</strong> nodes.</p>\n"
  syntax:
    content: CDATA = 4
    return:
      type: System.Xml.XmlNodeType
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Xml.XmlNodeType.Comment
  commentId: F:System.Xml.XmlNodeType.Comment
  id: Comment
  parent: System.Xml.XmlNodeType
  langs:
  - csharp
  - vb
  name: Comment
  fullName: System.Xml.XmlNodeType.Comment
  type: Field
  source:
    remote:
      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Comment
    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
    startLine: 179
  assemblies:
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: "\n<p>A comment (for example, <code><!-- my comment --></code> ).</p>\n"
  remarks: "\n<p>A <strong>Comment</strong> node cannot have any child nodes. It can appear as the child of the <strong>Document</strong>, <strong>DocumentFragment</strong>, <strong>Element</strong>, and <strong>EntityReference</strong> nodes.</p>\n"
  syntax:
    content: Comment = 8
    return:
      type: System.Xml.XmlNodeType
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Xml.XmlNodeType.Document
  commentId: F:System.Xml.XmlNodeType.Document
  id: Document
  parent: System.Xml.XmlNodeType
  langs:
  - csharp
  - vb
  name: Document
  fullName: System.Xml.XmlNodeType.Document
  type: Field
  source:
    remote:
      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Document
    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
    startLine: 180
  assemblies:
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: "\n<p>A document object that, as the root of the document tree, provides access to the entire XML document.</p>\n"
  remarks: "\n<p>A <strong>Document</strong> node can have the following child node types: <strong>XmlDeclaration</strong>, <strong>Element</strong> (maximum of one), <strong>ProcessingInstruction</strong>, <strong>Comment</strong>, and <strong>DocumentType</strong>. It cannot appear as the child of any node types.</p>\n"
  syntax:
    content: Document = 9
    return:
      type: System.Xml.XmlNodeType
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Xml.XmlNodeType.DocumentFragment
  commentId: F:System.Xml.XmlNodeType.DocumentFragment
  id: DocumentFragment
  parent: System.Xml.XmlNodeType
  langs:
  - csharp
  - vb
  name: DocumentFragment
  fullName: System.Xml.XmlNodeType.DocumentFragment
  type: Field
  source:
    remote:
      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: DocumentFragment
    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
    startLine: 181
  assemblies:
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: "\n<p>A document fragment.</p>\n"
  remarks: "\n<p>The <strong>DocumentFragment</strong> node associates a node or subtree with a document without actually being contained within the document. A <strong>DocumentFragment</strong> node can have the following child node types: <strong>Element</strong>, <strong>ProcessingInstruction</strong>, <strong>Comment</strong>, <strong>Text</strong>, <strong>CDATA</strong>, and <strong>EntityReference</strong>. It cannot appear as the child of any node types.</p>\n"
  syntax:
    content: DocumentFragment = 11
    return:
      type: System.Xml.XmlNodeType
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Xml.XmlNodeType.DocumentType
  commentId: F:System.Xml.XmlNodeType.DocumentType
  id: DocumentType
  parent: System.Xml.XmlNodeType
  langs:
  - csharp
  - vb
  name: DocumentType
  fullName: System.Xml.XmlNodeType.DocumentType
  type: Field
  source:
    remote:
      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: DocumentType
    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
    startLine: 182
  assemblies:
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: "\n<p>The document type declaration, indicated by the following tag (for example, <code><!DOCTYPE...></code> ).</p>\n"
  remarks: "\n<p>A <strong>DocumentType</strong> node can have the following child node types: <strong>Notation</strong> and <strong>Entity</strong>. It can appear as the child of the <strong>Document</strong> node.</p>\n"
  syntax:
    content: DocumentType = 10
    return:
      type: System.Xml.XmlNodeType
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Xml.XmlNodeType.Element
  commentId: F:System.Xml.XmlNodeType.Element
  id: Element
  parent: System.Xml.XmlNodeType
  langs:
  - csharp
  - vb
  name: Element
  fullName: System.Xml.XmlNodeType.Element
  type: Field
  source:
    remote:
      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Element
    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
    startLine: 183
  assemblies:
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: "\n<p>An element (for example, <code><item></code> ).</p>\n"
  remarks: "\n<p>An <strong>Element</strong> node can have the following child node types: <strong>Element</strong>, <strong>Text</strong>, <strong>Comment</strong>, <strong>ProcessingInstruction</strong>, <strong>CDATA</strong>, and <strong>EntityReference</strong>. It can be the child of the <strong>Document</strong>, <strong>DocumentFragment</strong>, <strong>EntityReference</strong>, and <strong>Element</strong> nodes.</p>\n"
  syntax:
    content: Element = 1
    return:
      type: System.Xml.XmlNodeType
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Xml.XmlNodeType.EndElement
  commentId: F:System.Xml.XmlNodeType.EndElement
  id: EndElement
  parent: System.Xml.XmlNodeType
  langs:
  - csharp
  - vb
  name: EndElement
  fullName: System.Xml.XmlNodeType.EndElement
  type: Field
  source:
    remote:
      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: EndElement
    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
    startLine: 184
  assemblies:
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: "\n<p>An end element tag (for example, <code></item></code> ).</p>\n"
  remarks: "\n<p>\n<strong>EndElement</strong> nodes are returned when <xref href=\"System.Xml.XmlReader\" data-throw-if-not-resolved=\"false\"></xref> gets to the end of an element.</p>\n"
  syntax:
    content: EndElement = 15
    return:
      type: System.Xml.XmlNodeType
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Xml.XmlNodeType.EndEntity
  commentId: F:System.Xml.XmlNodeType.EndEntity
  id: EndEntity
  parent: System.Xml.XmlNodeType
  langs:
  - csharp
  - vb
  name: EndEntity
  fullName: System.Xml.XmlNodeType.EndEntity
  type: Field
  source:
    remote:
      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: EndEntity
    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
    startLine: 185
  assemblies:
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: "\n<p>Returned when <strong>XmlReader</strong> gets to the end of the entity replacement as a result of a call to <xref href=\"System.Xml.XmlReader.ResolveEntity\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: EndEntity = 16
    return:
      type: System.Xml.XmlNodeType
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Xml.XmlNodeType.Entity
  commentId: F:System.Xml.XmlNodeType.Entity
  id: Entity
  parent: System.Xml.XmlNodeType
  langs:
  - csharp
  - vb
  name: Entity
  fullName: System.Xml.XmlNodeType.Entity
  type: Field
  source:
    remote:
      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Entity
    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
    startLine: 186
  assemblies:
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: "\n<p>An entity declaration (for example, <code><!ENTITY...></code> ).</p>\n"
  remarks: "\n<p>An <strong>Entity</strong> node can have child nodes that represent the expanded entity (for example, <strong>Text</strong> and <strong>EntityReference</strong> nodes). It can appear as the child of the <strong>DocumentType</strong> node.</p>\n"
  syntax:
    content: Entity = 6
    return:
      type: System.Xml.XmlNodeType
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Xml.XmlNodeType.EntityReference
  commentId: F:System.Xml.XmlNodeType.EntityReference
  id: EntityReference
  parent: System.Xml.XmlNodeType
  langs:
  - csharp
  - vb
  name: EntityReference
  fullName: System.Xml.XmlNodeType.EntityReference
  type: Field
  source:
    remote:
      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: EntityReference
    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
    startLine: 187
  assemblies:
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: "\n<p>A reference to an entity (for example, <code>&num;</code> ).</p>\n"
  remarks: "\n<p>An <strong>EntityReference</strong> node can have the following child node types: <strong>Element</strong>, <strong>ProcessingInstruction</strong>, <strong>Comment</strong>, <strong>Text</strong>, <strong>CDATA</strong>, and <strong>EntityReference</strong>. It can appear as the child of the <strong>Attribute</strong>, <strong>DocumentFragment</strong>, <strong>Element</strong>, and <strong>EntityReference</strong> nodes.</p>\n"
  syntax:
    content: EntityReference = 5
    return:
      type: System.Xml.XmlNodeType
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Xml.XmlNodeType.None
  commentId: F:System.Xml.XmlNodeType.None
  id: None
  parent: System.Xml.XmlNodeType
  langs:
  - csharp
  - vb
  name: None
  fullName: System.Xml.XmlNodeType.None
  type: Field
  source:
    remote:
      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: None
    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
    startLine: 188
  assemblies:
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: "\n<p>This is returned by the <xref href=\"System.Xml.XmlReader\" data-throw-if-not-resolved=\"false\"></xref> if a <strong>Read</strong> method has not been called.</p>\n"
  syntax:
    content: None = 0
    return:
      type: System.Xml.XmlNodeType
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Xml.XmlNodeType.Notation
  commentId: F:System.Xml.XmlNodeType.Notation
  id: Notation
  parent: System.Xml.XmlNodeType
  langs:
  - csharp
  - vb
  name: Notation
  fullName: System.Xml.XmlNodeType.Notation
  type: Field
  source:
    remote:
      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Notation
    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
    startLine: 189
  assemblies:
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: "\n<p>A notation in the document type declaration (for example, <code><!NOTATION...></code> ).</p>\n"
  remarks: "\n<p>A <strong>Notation</strong> node cannot have any child nodes. It can appear as the child of the <strong>DocumentType</strong> node.</p>\n"
  syntax:
    content: Notation = 12
    return:
      type: System.Xml.XmlNodeType
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Xml.XmlNodeType.ProcessingInstruction
  commentId: F:System.Xml.XmlNodeType.ProcessingInstruction
  id: ProcessingInstruction
  parent: System.Xml.XmlNodeType
  langs:
  - csharp
  - vb
  name: ProcessingInstruction
  fullName: System.Xml.XmlNodeType.ProcessingInstruction
  type: Field
  source:
    remote:
      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ProcessingInstruction
    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
    startLine: 190
  assemblies:
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: "\n<p>A processing instruction (for example, <code><?pi test?></code> ).</p>\n"
  remarks: "\n<p>A <strong>ProcessingInstruction</strong> node cannot have any child nodes. It can appear as the child of the <strong>Document</strong>, <strong>DocumentFragment</strong>, <strong>Element</strong>, and <strong>EntityReference</strong> nodes.</p>\n"
  syntax:
    content: ProcessingInstruction = 7
    return:
      type: System.Xml.XmlNodeType
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Xml.XmlNodeType.SignificantWhitespace
  commentId: F:System.Xml.XmlNodeType.SignificantWhitespace
  id: SignificantWhitespace
  parent: System.Xml.XmlNodeType
  langs:
  - csharp
  - vb
  name: SignificantWhitespace
  fullName: System.Xml.XmlNodeType.SignificantWhitespace
  type: Field
  source:
    remote:
      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: SignificantWhitespace
    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
    startLine: 191
  assemblies:
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: "\n<p>White space between markup in a mixed content model or white space within the <code>xml:space=\"preserve\"</code> scope.</p>\n"
  syntax:
    content: SignificantWhitespace = 14
    return:
      type: System.Xml.XmlNodeType
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Xml.XmlNodeType.Text
  commentId: F:System.Xml.XmlNodeType.Text
  id: Text
  parent: System.Xml.XmlNodeType
  langs:
  - csharp
  - vb
  name: Text
  fullName: System.Xml.XmlNodeType.Text
  type: Field
  source:
    remote:
      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Text
    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
    startLine: 192
  assemblies:
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: "\n<p>The text content of a node.</p>\n"
  remarks: "\n<p>A <strong>Text</strong> node cannot have any child nodes. It can appear as the child node of the <strong>Attribute</strong>, <strong>DocumentFragment</strong>, <strong>Element</strong>, and <strong>EntityReference</strong> nodes.</p>\n"
  syntax:
    content: Text = 3
    return:
      type: System.Xml.XmlNodeType
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Xml.XmlNodeType.Whitespace
  commentId: F:System.Xml.XmlNodeType.Whitespace
  id: Whitespace
  parent: System.Xml.XmlNodeType
  langs:
  - csharp
  - vb
  name: Whitespace
  fullName: System.Xml.XmlNodeType.Whitespace
  type: Field
  source:
    remote:
      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Whitespace
    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
    startLine: 193
  assemblies:
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: "\n<p>White space between markup.</p>\n"
  syntax:
    content: Whitespace = 13
    return:
      type: System.Xml.XmlNodeType
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Xml.XmlNodeType.XmlDeclaration
  commentId: F:System.Xml.XmlNodeType.XmlDeclaration
  id: XmlDeclaration
  parent: System.Xml.XmlNodeType
  langs:
  - csharp
  - vb
  name: XmlDeclaration
  fullName: System.Xml.XmlNodeType.XmlDeclaration
  type: Field
  source:
    remote:
      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: XmlDeclaration
    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
    startLine: 194
  assemblies:
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: "\n<p>The XML declaration (for example, <code><?xml version='1.0'?></code> ).</p>\n"
  remarks: "\n<p>The <strong>XmlDeclaration</strong> node must be the first node in the document. It cannot have children. It is a child of the <strong>Document</strong> node. It can have attributes that provide version and encoding information.</p>\n"
  syntax:
    content: XmlDeclaration = 17
    return:
      type: System.Xml.XmlNodeType
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
references:
- uid: System.Xml
  isExternal: false
  name: System.Xml
  fullName: System.Xml
- uid: System.Xml.XmlNodeType
  parent: System.Xml
  isExternal: false
  name: XmlNodeType
  fullName: System.Xml.XmlNodeType
