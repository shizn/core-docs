items:
- uid: System.Diagnostics.Tracing.EventDataAttribute
  commentId: T:System.Diagnostics.Tracing.EventDataAttribute
  id: EventDataAttribute
  parent: System.Diagnostics.Tracing
  children:
  - System.Diagnostics.Tracing.EventDataAttribute.#ctor
  - System.Diagnostics.Tracing.EventDataAttribute.Name
  langs:
  - csharp
  - vb
  name: EventDataAttribute
  fullName: System.Diagnostics.Tracing.EventDataAttribute
  type: Class
  source:
    remote:
      path: src/System.Diagnostics.Tracing/ref/System.Diagnostics.Tracing.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: EventDataAttribute
    path: src/System.Diagnostics.Tracing/ref/System.Diagnostics.Tracing.cs
    startLine: 60
  assemblies:
  - System.Diagnostics.Tracing
  namespace: System.Diagnostics.Tracing
  summary: "\n<p>Specifies a type to be passed to the <xref href=\"System.Diagnostics.Tracing.EventSource.Write``1(System.String,System.Diagnostics.Tracing.EventSourceOptions,``0)\" data-throw-if-not-resolved=\"false\"></xref> method.</p>\n"
  remarks: "\n<p>\n<xref href=\"System.Diagnostics.Tracing.EventSource.Write``1(System.String,System.Diagnostics.Tracing.EventSourceOptions,``0)\" data-throw-if-not-resolved=\"false\"></xref> requires T to be an anonymous type or marked with the <xref href=\"System.Diagnostics.Tracing.EventDataAttribute\" data-throw-if-not-resolved=\"false\"></xref> attribute. In addition, the properties of <em>T</em> must be a supported property type; either a simple framework type such as <xref href=\"System.Int16\" data-throw-if-not-resolved=\"false\"></xref>, <xref href=\"System.Int32\" data-throw-if-not-resolved=\"false\"></xref>, <xref href=\"System.Int64\" data-throw-if-not-resolved=\"false\"></xref>, <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref>, <xref href=\"System.Guid\" data-throw-if-not-resolved=\"false\"></xref>, <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> or <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref>, or an array of primitive types.</p>\n"
  syntax:
    content: 'public class EventDataAttribute : Attribute'
    content.vb: >-
      Public Class EventDataAttribute
          Inherits Attribute
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: System.Diagnostics.Tracing.EventDataAttribute.#ctor
  commentId: M:System.Diagnostics.Tracing.EventDataAttribute.#ctor
  id: '#ctor'
  parent: System.Diagnostics.Tracing.EventDataAttribute
  langs:
  - csharp
  - vb
  name: EventDataAttribute()
  fullName: System.Diagnostics.Tracing.EventDataAttribute.EventDataAttribute()
  type: Constructor
  source:
    remote:
      path: src/System.Diagnostics.Tracing/ref/System.Diagnostics.Tracing.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Diagnostics.Tracing/ref/System.Diagnostics.Tracing.cs
    startLine: 63
  assemblies:
  - System.Diagnostics.Tracing
  namespace: System.Diagnostics.Tracing
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Diagnostics.Tracing.EventDataAttribute\" data-throw-if-not-resolved=\"false\"></xref> class. </p>\n"
  syntax:
    content: public EventDataAttribute()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Diagnostics.Tracing.EventDataAttribute.Name
  commentId: P:System.Diagnostics.Tracing.EventDataAttribute.Name
  id: Name
  parent: System.Diagnostics.Tracing.EventDataAttribute
  langs:
  - csharp
  - vb
  name: Name
  fullName: System.Diagnostics.Tracing.EventDataAttribute.Name
  type: Property
  source:
    remote:
      path: src/System.Diagnostics.Tracing/ref/System.Diagnostics.Tracing.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Name
    path: src/System.Diagnostics.Tracing/ref/System.Diagnostics.Tracing.cs
    startLine: 64
  assemblies:
  - System.Diagnostics.Tracing
  namespace: System.Diagnostics.Tracing
  summary: "\n<p>Gets or set the name to apply to an event if the event type or property is not explicitly named.</p>\n"
  remarks: "\n<p>If you call <xref href=\"System.Diagnostics.Tracing.EventSource.Write``1(System.String,System.Diagnostics.Tracing.EventSourceOptions,``0)\" data-throw-if-not-resolved=\"false\"></xref>, passing <strong>null</strong> for <em>eventName</em>, the event name is automatically derived from <xref href=\"System.Diagnostics.Tracing.EventDataAttribute.Name\" data-throw-if-not-resolved=\"false\"></xref> or determined based on the name of type <em>T</em>.</p>\n"
  syntax:
    content: public string Name { get; set; }
    content.vb: Public Property Name As String
    parameters: []
    return:
      type: System.String
      description: "\n<p>The name to apply to the event or property.</p>\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: System.Diagnostics.Tracing
  isExternal: false
  name: System.Diagnostics.Tracing
  fullName: System.Diagnostics.Tracing
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.String
  parent: System
  isExternal: false
  name: String
  fullName: System.String
