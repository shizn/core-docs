items:
- uid: System.Reflection.TargetInvocationException
  commentId: T:System.Reflection.TargetInvocationException
  id: TargetInvocationException
  parent: System.Reflection
  children:
  - System.Reflection.TargetInvocationException.#ctor(System.Exception)
  - System.Reflection.TargetInvocationException.#ctor(System.String,System.Exception)
  langs:
  - csharp
  - vb
  name: TargetInvocationException
  fullName: System.Reflection.TargetInvocationException
  type: Class
  source:
    remote:
      path: src/System.Reflection/ref/4.0/System.Reflection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: TargetInvocationException
    path: src/System.Reflection/ref/4.0/System.Reflection.cs
    startLine: 268
  assemblies:
  - System.Reflection
  namespace: System.Reflection
  summary: "\n<p>The exception that is thrown by methods invoked through reflection. This class cannot be inherited.</p>\n"
  remarks: "\n<p>For more information, see <xref href=\"System.Reflection.MethodBase.Invoke(System.Object,System.Object[])\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>\n<strong>TargetInvocationException</strong> uses the HRESULT COR_E_TARGETINVOCATION which has the value 0x80131604.</p>\n<p>When created, the <strong>TargetInvocationException</strong> is passed a reference to the exception thrown by the method invoked through reflection. The <xref href=\"System.Exception.InnerException\" data-throw-if-not-resolved=\"false\"></xref> property holds the underlying exception.</p>\n"
  syntax:
    content: 'public sealed class TargetInvocationException : Exception'
    content.vb: >-
      Public NotInheritable Class TargetInvocationException
          Inherits Exception
  seealso:
  - type: System.Exception.InnerException
    commentId: P:System.Exception.InnerException
  - type: System.Exception
    commentId: T:System.Exception
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: System.Reflection.TargetInvocationException.#ctor(System.Exception)
  commentId: M:System.Reflection.TargetInvocationException.#ctor(System.Exception)
  id: '#ctor(System.Exception)'
  parent: System.Reflection.TargetInvocationException
  langs:
  - csharp
  - vb
  name: TargetInvocationException(Exception)
  fullName: System.Reflection.TargetInvocationException.TargetInvocationException(System.Exception)
  type: Constructor
  source:
    remote:
      path: src/System.Reflection/ref/4.0/System.Reflection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Reflection/ref/4.0/System.Reflection.cs
    startLine: 270
  assemblies:
  - System.Reflection
  namespace: System.Reflection
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Reflection.TargetInvocationException\" data-throw-if-not-resolved=\"false\"></xref> class with a reference to the inner exception that is the cause of this exception.</p>\n"
  remarks: "\n<p>An exception that is thrown as a direct result of a previous exception should include a reference to the previous exception in the <xref href=\"System.Exception.InnerException\" data-throw-if-not-resolved=\"false\"></xref> property. The <xref href=\"System.Exception.InnerException\" data-throw-if-not-resolved=\"false\"></xref> property returns the same value that is passed into the constructor, or <strong>null</strong> if the <xref href=\"System.Exception.InnerException\" data-throw-if-not-resolved=\"false\"></xref> property does not supply the inner exception value to the constructor.</p>\n<p>The following table shows the initial property values for an instance of <xref href=\"System.Reflection.TargetInvocationException\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>Property </p>\n<p>Value </p>\n<table><tbody><tr><td>\n<p>\n<xref href=\"System.Exception.InnerException\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td><td>\n<p>The inner exception reference. </p>\n</td></tr><tr><td>\n<p>\n<xref href=\"System.Exception.Message\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td><td>\n<p>The error message string. </p>\n</td></tr></tbody></table>\n"
  syntax:
    content: public TargetInvocationException(Exception inner)
    content.vb: Public Sub New(inner As Exception)
    parameters:
    - id: inner
      type: System.Exception
      description: "\n<p>The exception that is the cause of the current exception. If the <em>inner</em> parameter is not <strong>null</strong>, the current exception is raised in a <strong>catch</strong> block that handles the inner exception. </p>\n"
  seealso:
  - type: System.Exception
    commentId: T:System.Exception
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Reflection.TargetInvocationException.#ctor(System.String,System.Exception)
  commentId: M:System.Reflection.TargetInvocationException.#ctor(System.String,System.Exception)
  id: '#ctor(System.String,System.Exception)'
  parent: System.Reflection.TargetInvocationException
  langs:
  - csharp
  - vb
  name: TargetInvocationException(String, Exception)
  fullName: System.Reflection.TargetInvocationException.TargetInvocationException(System.String, System.Exception)
  type: Constructor
  source:
    remote:
      path: src/System.Reflection/ref/4.0/System.Reflection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Reflection/ref/4.0/System.Reflection.cs
    startLine: 271
  assemblies:
  - System.Reflection
  namespace: System.Reflection
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Reflection.TargetInvocationException\" data-throw-if-not-resolved=\"false\"></xref> class with a specified error message and a reference to the inner exception that is the cause of this exception.</p>\n"
  remarks: "\n<p>An exception that is thrown as a direct result of a previous exception should include a reference to the previous exception in the <xref href=\"System.Exception.InnerException\" data-throw-if-not-resolved=\"false\"></xref> property. The <xref href=\"System.Exception.InnerException\" data-throw-if-not-resolved=\"false\"></xref> property returns the same value that is passed into the constructor, or <strong>null</strong> if the <xref href=\"System.Exception.InnerException\" data-throw-if-not-resolved=\"false\"></xref> property does not supply the inner exception value to the constructor.</p>\n<p>The following table shows the initial property values for an instance of <xref href=\"System.Reflection.TargetInvocationException\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>Property </p>\n<p>Value </p>\n<table><tbody><tr><td>\n<p>\n<xref href=\"System.Exception.InnerException\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td><td>\n<p>The inner exception reference. </p>\n</td></tr><tr><td>\n<p>\n<xref href=\"System.Exception.Message\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td><td>\n<p>The error message string. </p>\n</td></tr></tbody></table>\n"
  syntax:
    content: public TargetInvocationException(string message, Exception inner)
    content.vb: Public Sub New(message As String, inner As Exception)
    parameters:
    - id: message
      type: System.String
      description: "\n<p>The error message that explains the reason for the exception. </p>\n"
    - id: inner
      type: System.Exception
      description: "\n<p>The exception that is the cause of the current exception. If the <em>inner</em> parameter is not <strong>null</strong>, the current exception is raised in a <strong>catch</strong> block that handles the inner exception. </p>\n"
  seealso:
  - type: System.Exception
    commentId: T:System.Exception
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: System.Reflection
  isExternal: false
  name: System.Reflection
  fullName: System.Reflection
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Exception
  parent: System
  isExternal: false
  name: Exception
  fullName: System.Exception
- uid: System.String
  parent: System
  isExternal: false
  name: String
  fullName: System.String
