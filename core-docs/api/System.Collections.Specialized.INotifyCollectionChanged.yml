items:
- uid: System.Collections.Specialized.INotifyCollectionChanged
  commentId: T:System.Collections.Specialized.INotifyCollectionChanged
  id: INotifyCollectionChanged
  parent: System.Collections.Specialized
  children:
  - System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged
  langs:
  - csharp
  - vb
  name: INotifyCollectionChanged
  fullName: System.Collections.Specialized.INotifyCollectionChanged
  type: Interface
  source:
    remote:
      path: src/System.ObjectModel/ref/System.ObjectModel.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: INotifyCollectionChanged
    path: src/System.ObjectModel/ref/System.ObjectModel.cs
    startLine: 129
  assemblies:
  - System.ObjectModel
  namespace: System.Collections.Specialized
  summary: "\n<p>Notifies listeners of dynamic changes, such as when an item is added and removed or the whole list is cleared.</p>\n"
  remarks: "\n<p>You can enumerate over any collection that implements the <xref href=\"System.Collections.IEnumerable\" data-throw-if-not-resolved=\"false\"></xref> interface. However, to set up dynamic bindings so that insertions or deletions in the collection update the UI automatically, the collection must implement the <xref href=\"System.Collections.Specialized.INotifyCollectionChanged\" data-throw-if-not-resolved=\"false\"></xref> interface. This interface exposes the <xref href=\"System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged\" data-throw-if-not-resolved=\"false\"></xref> event that must be raised whenever the underlying collection changes.</p>\n<p>WPF provides the <xref href=\"System.Collections.ObjectModel.ObservableCollection`1\" data-throw-if-not-resolved=\"false\"></xref> class, which is a built-in implementation of a data collection that exposes the <xref href=\"System.Collections.Specialized.INotifyCollectionChanged\" data-throw-if-not-resolved=\"false\"></xref>Â interface. For an example, see How to: Create and Bind to an ObservableCollection.</p>\n<p>The individual data objects within the collection must satisfy the requirements described in the Binding Sources Overview.</p>\n<p>Before implementing your own collection, consider using <xref href=\"System.Collections.ObjectModel.ObservableCollection`1\" data-throw-if-not-resolved=\"false\"></xref> or one of the existing collection classes, such as <xref href=\"System.Collections.Generic.List`1\" data-throw-if-not-resolved=\"false\"></xref>, <xref href=\"System.Collections.ObjectModel.Collection`1\" data-throw-if-not-resolved=\"false\"></xref>, and <xref href=\"System.ComponentModel.BindingList`1\" data-throw-if-not-resolved=\"false\"></xref>, among many others.</p>\n<p>If you have an advanced scenario and want to implement your own collection, consider using <xref href=\"System.Collections.IList\" data-throw-if-not-resolved=\"false\"></xref>, which provides a non-generic collection of objects that can be individually accessed by index and provides the best performance.</p>\n"
  example:
  - 
  syntax:
    content: public interface INotifyCollectionChanged
    content.vb: Public Interface INotifyCollectionChanged
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged
  commentId: E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged
  id: CollectionChanged
  parent: System.Collections.Specialized.INotifyCollectionChanged
  langs:
  - csharp
  - vb
  name: CollectionChanged
  fullName: System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged
  type: Event
  source:
    remote:
      path: src/System.ObjectModel/ref/System.ObjectModel.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CollectionChanged
    path: src/System.ObjectModel/ref/System.ObjectModel.cs
    startLine: 131
  assemblies:
  - System.ObjectModel
  namespace: System.Collections.Specialized
  summary: "\n<p>Occurs when the collection changes.</p>\n"
  remarks: "\n<p>The event handler receives an argument of type <xref href=\"System.Collections.Specialized.NotifyCollectionChangedEventArgs\" data-throw-if-not-resolved=\"false\"></xref>,which contains data that is related to this event.</p>\n"
  example:
  - 
  syntax:
    content: event NotifyCollectionChangedEventHandler CollectionChanged
    content.vb: Event CollectionChanged As NotifyCollectionChangedEventHandler
    return:
      type: System.Collections.Specialized.NotifyCollectionChangedEventHandler
references:
- uid: System.Collections.Specialized
  isExternal: false
  name: System.Collections.Specialized
  fullName: System.Collections.Specialized
- uid: System.Collections.Specialized.NotifyCollectionChangedEventHandler
  parent: System.Collections.Specialized
  isExternal: false
  name: NotifyCollectionChangedEventHandler
  fullName: System.Collections.Specialized.NotifyCollectionChangedEventHandler
