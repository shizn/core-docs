items:
- uid: System.Linq.ParallelMergeOptions
  commentId: T:System.Linq.ParallelMergeOptions
  id: ParallelMergeOptions
  parent: System.Linq
  children:
  - System.Linq.ParallelMergeOptions.AutoBuffered
  - System.Linq.ParallelMergeOptions.Default
  - System.Linq.ParallelMergeOptions.FullyBuffered
  - System.Linq.ParallelMergeOptions.NotBuffered
  langs:
  - csharp
  - vb
  name: ParallelMergeOptions
  fullName: System.Linq.ParallelMergeOptions
  type: Enum
  source:
    remote:
      path: src/System.Linq.Parallel/ref/System.Linq.Parallel.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ParallelMergeOptions
    path: src/System.Linq.Parallel/ref/System.Linq.Parallel.cs
    startLine: 240
  assemblies:
  - System.Linq.Parallel
  namespace: System.Linq
  summary: "\n<p>Specifies the preferred type of output merge to use in a query. In other words, it indicates how PLINQ should merge the results from the various partitions back into a single result sequence. This is a hint only, and may not be respected by the system when parallelizing all queries.</p>\n"
  remarks: "\n<p>Use <strong>NotBuffered</strong> for queries that will be consumed and output as streams, this has the lowest latency between beginning query execution and elements being yielded. For some queries, such as those involving a sort (OrderBy, OrderByDescending), buffering is essential and a hint of NotBuffered or AutoBuffered will be ignored. However, queries that are created by using the AsOrdered operator can be streamed as long as no further sorting is performed within the query itself.</p>\n<p>Use <strong>AutoBuffered</strong> for most cases; this is the default. It strikes a balance between latency and overall performance. </p>\n<p>Use <strong>FullyBuffered</strong> for queries when the entire output can be processed before the information is needed. This option offers the best performance when all of the output can be accumulated before yielding any information, though it is not suitable for stream processing or showing partial results mid-query.</p>\n"
  syntax:
    content: public enum ParallelMergeOptions
    content.vb: Public Enum ParallelMergeOptions
  modifiers.csharp:
  - public
  - enum
  modifiers.vb:
  - Public
  - Enum
- uid: System.Linq.ParallelMergeOptions.AutoBuffered
  commentId: F:System.Linq.ParallelMergeOptions.AutoBuffered
  id: AutoBuffered
  parent: System.Linq.ParallelMergeOptions
  langs:
  - csharp
  - vb
  name: AutoBuffered
  fullName: System.Linq.ParallelMergeOptions.AutoBuffered
  type: Field
  source:
    remote:
      path: src/System.Linq.Parallel/ref/System.Linq.Parallel.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: AutoBuffered
    path: src/System.Linq.Parallel/ref/System.Linq.Parallel.cs
    startLine: 242
  assemblies:
  - System.Linq.Parallel
  namespace: System.Linq
  summary: "\n<p>Use a merge with output buffers of a size chosen by the system. Results will accumulate into an output buffer before they are available to the consumer of the query.</p>\n"
  syntax:
    content: AutoBuffered = 2
    return:
      type: System.Linq.ParallelMergeOptions
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Linq.ParallelMergeOptions.Default
  commentId: F:System.Linq.ParallelMergeOptions.Default
  id: Default
  parent: System.Linq.ParallelMergeOptions
  langs:
  - csharp
  - vb
  name: Default
  fullName: System.Linq.ParallelMergeOptions.Default
  type: Field
  source:
    remote:
      path: src/System.Linq.Parallel/ref/System.Linq.Parallel.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Default
    path: src/System.Linq.Parallel/ref/System.Linq.Parallel.cs
    startLine: 243
  assemblies:
  - System.Linq.Parallel
  namespace: System.Linq
  summary: "\n<p>Use the default merge type, which is AutoBuffered.</p>\n"
  syntax:
    content: Default = 0
    return:
      type: System.Linq.ParallelMergeOptions
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Linq.ParallelMergeOptions.FullyBuffered
  commentId: F:System.Linq.ParallelMergeOptions.FullyBuffered
  id: FullyBuffered
  parent: System.Linq.ParallelMergeOptions
  langs:
  - csharp
  - vb
  name: FullyBuffered
  fullName: System.Linq.ParallelMergeOptions.FullyBuffered
  type: Field
  source:
    remote:
      path: src/System.Linq.Parallel/ref/System.Linq.Parallel.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: FullyBuffered
    path: src/System.Linq.Parallel/ref/System.Linq.Parallel.cs
    startLine: 244
  assemblies:
  - System.Linq.Parallel
  namespace: System.Linq
  summary: "\n<p>Use a merge with full output buffers. The system will accumulate all of the results before making any of them available to the consumer of the query.</p>\n"
  syntax:
    content: FullyBuffered = 3
    return:
      type: System.Linq.ParallelMergeOptions
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Linq.ParallelMergeOptions.NotBuffered
  commentId: F:System.Linq.ParallelMergeOptions.NotBuffered
  id: NotBuffered
  parent: System.Linq.ParallelMergeOptions
  langs:
  - csharp
  - vb
  name: NotBuffered
  fullName: System.Linq.ParallelMergeOptions.NotBuffered
  type: Field
  source:
    remote:
      path: src/System.Linq.Parallel/ref/System.Linq.Parallel.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: NotBuffered
    path: src/System.Linq.Parallel/ref/System.Linq.Parallel.cs
    startLine: 245
  assemblies:
  - System.Linq.Parallel
  namespace: System.Linq
  summary: "\n<p>Use a merge without output buffers. As soon as result elements have been computed, make that element available to the consumer of the query.</p>\n"
  syntax:
    content: NotBuffered = 1
    return:
      type: System.Linq.ParallelMergeOptions
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
references:
- uid: System.Linq
  isExternal: false
  name: System.Linq
  fullName: System.Linq
- uid: System.Linq.ParallelMergeOptions
  parent: System.Linq
  isExternal: false
  name: ParallelMergeOptions
  fullName: System.Linq.ParallelMergeOptions
