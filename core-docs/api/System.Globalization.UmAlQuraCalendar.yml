items:
- uid: System.Globalization.UmAlQuraCalendar
  commentId: T:System.Globalization.UmAlQuraCalendar
  id: UmAlQuraCalendar
  parent: System.Globalization
  children:
  - System.Globalization.UmAlQuraCalendar.#ctor
  - System.Globalization.UmAlQuraCalendar.AddMonths(System.DateTime,System.Int32)
  - System.Globalization.UmAlQuraCalendar.AddYears(System.DateTime,System.Int32)
  - System.Globalization.UmAlQuraCalendar.Eras
  - System.Globalization.UmAlQuraCalendar.GetDayOfMonth(System.DateTime)
  - System.Globalization.UmAlQuraCalendar.GetDayOfWeek(System.DateTime)
  - System.Globalization.UmAlQuraCalendar.GetDayOfYear(System.DateTime)
  - System.Globalization.UmAlQuraCalendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)
  - System.Globalization.UmAlQuraCalendar.GetDaysInYear(System.Int32,System.Int32)
  - System.Globalization.UmAlQuraCalendar.GetEra(System.DateTime)
  - System.Globalization.UmAlQuraCalendar.GetLeapMonth(System.Int32,System.Int32)
  - System.Globalization.UmAlQuraCalendar.GetMonth(System.DateTime)
  - System.Globalization.UmAlQuraCalendar.GetMonthsInYear(System.Int32,System.Int32)
  - System.Globalization.UmAlQuraCalendar.GetYear(System.DateTime)
  - System.Globalization.UmAlQuraCalendar.IsLeapDay(System.Int32,System.Int32,System.Int32,System.Int32)
  - System.Globalization.UmAlQuraCalendar.IsLeapMonth(System.Int32,System.Int32,System.Int32)
  - System.Globalization.UmAlQuraCalendar.IsLeapYear(System.Int32,System.Int32)
  - System.Globalization.UmAlQuraCalendar.MaxSupportedDateTime
  - System.Globalization.UmAlQuraCalendar.MinSupportedDateTime
  - System.Globalization.UmAlQuraCalendar.ToDateTime(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  - System.Globalization.UmAlQuraCalendar.ToFourDigitYear(System.Int32)
  - System.Globalization.UmAlQuraCalendar.TwoDigitYearMax
  langs:
  - csharp
  - vb
  name: UmAlQuraCalendar
  fullName: System.Globalization.UmAlQuraCalendar
  type: Class
  source:
    remote:
      path: src/System.Globalization.Calendars/ref/System.Globalization.Calendars.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: UmAlQuraCalendar
    path: src/System.Globalization.Calendars/ref/System.Globalization.Calendars.cs
    startLine: 307
  assemblies:
  - System.Globalization.Calendars
  namespace: System.Globalization
  summary: "\n<p>Represents the Saudi Hijri (Um Al Qura) calendar.</p>\n"
  remarks: "\n<p>The <xref href=\"System.Globalization.UmAlQuraCalendar\" data-throw-if-not-resolved=\"false\"></xref> class is nearly identical to the <xref href=\"System.Globalization.HijriCalendar\" data-throw-if-not-resolved=\"false\"></xref> class, except the Um Al Qura calendar uses a table-based algorithm licensed from the Saudi government to calculate dates, can express dates to the year 1500 A.H., and does not support the <xref href=\"System.Globalization.HijriCalendar.HijriAdjustment\" data-throw-if-not-resolved=\"false\"></xref> property. </p>\n<p>For information about using the <xref href=\"System.Globalization.UmAlQuraCalendar\" data-throw-if-not-resolved=\"false\"></xref> class and the other calendar classes in the .NET Framework, see Working with Calendars.</p>\n<p>For the <xref href=\"System.Globalization.UmAlQuraCalendar\" data-throw-if-not-resolved=\"false\"></xref> class, each month has either 29 or 30 days, but usually in no discernible order. Whereas the documentation for the Hijri Calendar gives a table that shows the corresponding days in each month, no such general table can be produced for the Um Al Qura calendar.</p>\n<p>For more information about the Hijri calendar, see the <xref href=\"System.Globalization.HijriCalendar\" data-throw-if-not-resolved=\"false\"></xref> class.</p>\n<p>Note   The <xref href=\"System.Globalization.UmAlQuraCalendar\" data-throw-if-not-resolved=\"false\"></xref> class supports only dates from 04/30/1900 00.00.00 (Gregorian date) through 11/16/2077 23:59:59 (Gregorian date).</p>\n"
  syntax:
    content: 'public class UmAlQuraCalendar : Calendar'
    content.vb: >-
      Public Class UmAlQuraCalendar
          Inherits Calendar
  seealso:
  - type: System.Globalization.Calendar
    commentId: T:System.Globalization.Calendar
  - type: System.Globalization.CultureInfo.Calendar
    commentId: P:System.Globalization.CultureInfo.Calendar
  - type: System.Globalization.CultureInfo.OptionalCalendars
    commentId: P:System.Globalization.CultureInfo.OptionalCalendars
  - type: System.Globalization.HijriCalendar
    commentId: T:System.Globalization.HijriCalendar
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: System.Globalization.UmAlQuraCalendar.#ctor
  commentId: M:System.Globalization.UmAlQuraCalendar.#ctor
  id: '#ctor'
  parent: System.Globalization.UmAlQuraCalendar
  langs:
  - csharp
  - vb
  name: UmAlQuraCalendar()
  fullName: System.Globalization.UmAlQuraCalendar.UmAlQuraCalendar()
  type: Constructor
  source:
    remote:
      path: src/System.Globalization.Calendars/ref/System.Globalization.Calendars.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Globalization.Calendars/ref/System.Globalization.Calendars.cs
    startLine: 309
  assemblies:
  - System.Globalization.Calendars
  namespace: System.Globalization
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Globalization.UmAlQuraCalendar\" data-throw-if-not-resolved=\"false\"></xref> class. </p>\n"
  syntax:
    content: public UmAlQuraCalendar()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Globalization.UmAlQuraCalendar.Eras
  commentId: P:System.Globalization.UmAlQuraCalendar.Eras
  id: Eras
  parent: System.Globalization.UmAlQuraCalendar
  langs:
  - csharp
  - vb
  name: Eras
  fullName: System.Globalization.UmAlQuraCalendar.Eras
  type: Property
  source:
    remote:
      path: src/System.Globalization.Calendars/ref/System.Globalization.Calendars.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Eras
    path: src/System.Globalization.Calendars/ref/System.Globalization.Calendars.cs
    startLine: 310
  assemblies:
  - System.Globalization.Calendars
  namespace: System.Globalization
  summary: "\n<p>Gets a list of the eras that are supported by the current <xref href=\"System.Globalization.UmAlQuraCalendar\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  remarks: "\n<p>The Hijri calendar recognizes one era: A.H. (Latin \"Anno Hegirae\", which means \"the year of the migration,\" in reference to the migration of Muhammad (PBUH) from Mecca). This property always returns an array with only one element.</p>\n"
  syntax:
    content: public override int[] Eras { get; }
    content.vb: Public Overrides ReadOnly Property Eras As Integer()
    parameters: []
    return:
      type: System.Int32[]
      description: "\n<p>An array that consists of a single element having a value that is <xref href=\"System.Globalization.UmAlQuraCalendar.UmAlQuraEra\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: System.Globalization.UmAlQuraCalendar.MaxSupportedDateTime
  commentId: P:System.Globalization.UmAlQuraCalendar.MaxSupportedDateTime
  id: MaxSupportedDateTime
  parent: System.Globalization.UmAlQuraCalendar
  langs:
  - csharp
  - vb
  name: MaxSupportedDateTime
  fullName: System.Globalization.UmAlQuraCalendar.MaxSupportedDateTime
  type: Property
  source:
    remote:
      path: src/System.Globalization.Calendars/ref/System.Globalization.Calendars.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: MaxSupportedDateTime
    path: src/System.Globalization.Calendars/ref/System.Globalization.Calendars.cs
    startLine: 311
  assemblies:
  - System.Globalization.Calendars
  namespace: System.Globalization
  summary: "\n<p>Gets the latest date and time supported by this calendar.</p>\n"
  remarks: "\n<p>Starting with the .NET Framework 4.5, the value of the <xref href=\"System.Globalization.UmAlQuraCalendar.MaxSupportedDateTime\" data-throw-if-not-resolved=\"false\"></xref> property is 11/16/2077. In previous versions of the .NET Framework, its value is the last moment of May 13, 2029 C.E. in the Gregorian calendar. </p>\n"
  example:
  - "\n<p>The following example displays the date ranges supported by the <xref href=\"System.Globalization.UmAlQuraCalendar\" data-throw-if-not-resolved=\"false\"></xref> class in both the Gregorian and Um Al Qura calendars.</p>System.Globalization.UmAlQuraCalendar.GetMonth#1"
  syntax:
    content: public override DateTime MaxSupportedDateTime { get; }
    content.vb: Public Overrides ReadOnly Property MaxSupportedDateTime As DateTime
    parameters: []
    return:
      type: System.DateTime
      description: "\n<p>The latest date and time supported by the <xref href=\"System.Globalization.UmAlQuraCalendar\" data-throw-if-not-resolved=\"false\"></xref> class, which is equivalent to the last moment of November 16, 2077 C.E. in the Gregorian calendar.</p>\n"
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: System.Globalization.UmAlQuraCalendar.MinSupportedDateTime
  commentId: P:System.Globalization.UmAlQuraCalendar.MinSupportedDateTime
  id: MinSupportedDateTime
  parent: System.Globalization.UmAlQuraCalendar
  langs:
  - csharp
  - vb
  name: MinSupportedDateTime
  fullName: System.Globalization.UmAlQuraCalendar.MinSupportedDateTime
  type: Property
  source:
    remote:
      path: src/System.Globalization.Calendars/ref/System.Globalization.Calendars.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: MinSupportedDateTime
    path: src/System.Globalization.Calendars/ref/System.Globalization.Calendars.cs
    startLine: 312
  assemblies:
  - System.Globalization.Calendars
  namespace: System.Globalization
  summary: "\n<p>Gets the earliest date and time supported by this calendar.</p>\n"
  example:
  - "\n<p>The following example displays the date ranges supported by the <xref href=\"System.Globalization.UmAlQuraCalendar\" data-throw-if-not-resolved=\"false\"></xref> class in both the Gregorian and Um Al Qura calendars.</p>System.Globalization.UmAlQuraCalendar.GetMonth#1"
  syntax:
    content: public override DateTime MinSupportedDateTime { get; }
    content.vb: Public Overrides ReadOnly Property MinSupportedDateTime As DateTime
    parameters: []
    return:
      type: System.DateTime
      description: "\n<p>The earliest date and time supported by the <xref href=\"System.Globalization.UmAlQuraCalendar\" data-throw-if-not-resolved=\"false\"></xref> class, which is equivalent to the first moment of April 30, 1900 C.E. in the Gregorian calendar.</p>\n"
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: System.Globalization.UmAlQuraCalendar.TwoDigitYearMax
  commentId: P:System.Globalization.UmAlQuraCalendar.TwoDigitYearMax
  id: TwoDigitYearMax
  parent: System.Globalization.UmAlQuraCalendar
  langs:
  - csharp
  - vb
  name: TwoDigitYearMax
  fullName: System.Globalization.UmAlQuraCalendar.TwoDigitYearMax
  type: Property
  source:
    remote:
      path: src/System.Globalization.Calendars/ref/System.Globalization.Calendars.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: TwoDigitYearMax
    path: src/System.Globalization.Calendars/ref/System.Globalization.Calendars.cs
    startLine: 313
  assemblies:
  - System.Globalization.Calendars
  namespace: System.Globalization
  summary: "\n<p>Gets or sets the last year of a 100-year range that can be represented by a 2-digit year.</p>\n"
  remarks: "\n<p>This property allows a 2-digit year to be properly translated to a 4-digit year. For example, if this property is set to 1429, the 100-year range is from 1330 through 1429. Therefore, a 2-digit value of 30 is interpreted as 1330, while a 2-digit value of 29 is interpreted as 1429.</p>\n<p>The initial value of this property is derived from the settings in the regional and language options portion of Control Panel. However, that information can change during the life of the <xref href=\"System.AppDomain\" data-throw-if-not-resolved=\"false\"></xref>. The <xref href=\"System.Globalization.UmAlQuraCalendar\" data-throw-if-not-resolved=\"false\"></xref> class does not detect changes in the system settings automatically.</p>\n<p>The special value 99 causes the <xref href=\"System.Globalization.UmAlQuraCalendar.ToFourDigitYear(System.Int32)\" data-throw-if-not-resolved=\"false\"></xref> method to ignore the system settings and return the specified year unchanged.</p>\n"
  syntax:
    content: public override int TwoDigitYearMax { get; set; }
    content.vb: Public Overrides Property TwoDigitYearMax As Integer
    parameters: []
    return:
      type: System.Int32
      description: "\n<p>The last year of a 100-year range that can be represented by a 2-digit year.</p>\n"
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "\n<p>This calendar is read-only.</p>\n"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>In a set operation, the Um Al Qura calendar year value is less than 1318 but not 99, or is greater than 1450.</p>\n"
  seealso:
  - type: System.Globalization.UmAlQuraCalendar.ToFourDigitYear(System.Int32)
    commentId: M:System.Globalization.UmAlQuraCalendar.ToFourDigitYear(System.Int32)
  modifiers.csharp:
  - public
  - override
  - get
  - set
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Globalization.UmAlQuraCalendar.AddMonths(System.DateTime,System.Int32)
  commentId: M:System.Globalization.UmAlQuraCalendar.AddMonths(System.DateTime,System.Int32)
  id: AddMonths(System.DateTime,System.Int32)
  parent: System.Globalization.UmAlQuraCalendar
  langs:
  - csharp
  - vb
  name: AddMonths(DateTime, Int32)
  fullName: System.Globalization.UmAlQuraCalendar.AddMonths(System.DateTime, System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Globalization.Calendars/ref/System.Globalization.Calendars.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: AddMonths
    path: src/System.Globalization.Calendars/ref/System.Globalization.Calendars.cs
    startLine: 314
  assemblies:
  - System.Globalization.Calendars
  namespace: System.Globalization
  summary: "\n<p>Calculates a date that is a specified number of months away from a specified initial date.</p>\n"
  remarks: "\n<p>The day part of the resulting <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> is affected if the resulting day is not a valid day in the resulting month of the resulting year. It is changed to the last valid day in the resulting month of the resulting year. The year part of the resulting <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> is affected if the resulting month is outside the year of the specified <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref>. This implementation supports only the current era. Therefore, an exception is thrown if the resulting year is outside the era of the specified <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref>. The time-of-day part of the resulting <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> remains the same as the specified <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>For example, if the specified month is Zulkadah, which has 30 days, the specified day is the 30th day of that month, and the value of the <em>months</em> parameter is 3, the resulting year is one more than the specified year, the resulting month is Safar, and the resulting day is the 29th day, which is the last day in Safar.</p>\n<p>If the value of the <em>months</em> parameter is negative, the resulting <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> is earlier than the specified <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>The<xref href=\"System.DateTime.Kind\" data-throw-if-not-resolved=\"false\"></xref> property of the returned <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> value always equals <xref href=\"System.DateTimeKind.Unspecified\" data-throw-if-not-resolved=\"false\"></xref>. You can preserve the <xref href=\"System.DateTime.Kind\" data-throw-if-not-resolved=\"false\"></xref> property of the <em>time</em> parameter by calling the <xref href=\"System.DateTime.SpecifyKind(System.DateTime,System.DateTimeKind)\" data-throw-if-not-resolved=\"false\"></xref> method, as the following example shows.</p>System.Globalization.Calendar.AddMethods#5"
  example:
  - "\n<p>The following example instantiates a <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> value and displays the values of several of its components in the Um Al Qura calendar. Next, it calls the <xref href=\"System.Globalization.UmAlQuraCalendar.AddYears(System.DateTime,System.Int32)\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"System.Globalization.UmAlQuraCalendar.AddMonths(System.DateTime,System.Int32)\" data-throw-if-not-resolved=\"false\"></xref> methods to add 2 years and 10 months in the Um Al Qura calendar to the date value. Finally, it again displays the values of these date components in the Um Al Qura calendar.</p>System.Globalization.UmAlQuraCalendar.AddMonths#1"
  syntax:
    content: public override DateTime AddMonths(DateTime time, int months)
    content.vb: Public Overrides Function AddMonths(time As DateTime, months As Integer) As DateTime
    parameters:
    - id: time
      type: System.DateTime
      description: "\n<p>The date to which to add months. The <xref href=\"System.Globalization.UmAlQuraCalendar\" data-throw-if-not-resolved=\"false\"></xref> class supports only dates from 04/30/1900 00.00.00 (Gregorian date) through 11/16/2077 23:59:59 (Gregorian date).</p>\n"
    - id: months
      type: System.Int32
      description: "\n<p>The positive or negative number of months to add. </p>\n"
    return:
      type: System.DateTime
      description: "\n<p>The date yielded by adding the number of months specified by the <em>months</em> parameter to the date specified by the <em>time</em> parameter.</p>\n"
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<p>The resulting date is outside the range supported by the <xref href=\"System.Globalization.UmAlQuraCalendar\" data-throw-if-not-resolved=\"false\"></xref> class. </p>\n"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>\n<em>months</em> is less than -120,000 or greater than 120,000. </p>\n<p>-or-</p>\n<p>\n<em>time</em> is outside the range supported by this calendar.</p>\n"
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Globalization.UmAlQuraCalendar.AddYears(System.DateTime,System.Int32)
  commentId: M:System.Globalization.UmAlQuraCalendar.AddYears(System.DateTime,System.Int32)
  id: AddYears(System.DateTime,System.Int32)
  parent: System.Globalization.UmAlQuraCalendar
  langs:
  - csharp
  - vb
  name: AddYears(DateTime, Int32)
  fullName: System.Globalization.UmAlQuraCalendar.AddYears(System.DateTime, System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Globalization.Calendars/ref/System.Globalization.Calendars.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: AddYears
    path: src/System.Globalization.Calendars/ref/System.Globalization.Calendars.cs
    startLine: 315
  assemblies:
  - System.Globalization.Calendars
  namespace: System.Globalization
  summary: "\n<p>Calculates a date that is a specified number of years away from a specified initial date.</p>\n"
  remarks: "\n<p>The day part of the resulting <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> is affected if the resulting day is not a valid day in the resulting month of the resulting year. It is changed to the last valid day in the resulting month of the resulting year. The month part of the resulting <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> remains the same as the specified <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref>. This implementation supports only the current era. Therefore, an exception is thrown if the resulting year is outside the era of the specified <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref>. The time-of-day part of the resulting <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> remains the same as the specified <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>For example, Zulhijjah has 29 days, except during leap years when it has 30 days. If the specified date is the 30th day of Zulhijjah in a leap year and the value of the <em>years</em> parameter is 1, the resulting date is the 29th day of Zulhijjah in the following year.</p>\n<p>If <em>years</em> is negative, the resulting <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> is earlier than the specified <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>The<xref href=\"System.DateTime.Kind\" data-throw-if-not-resolved=\"false\"></xref> property of the returned <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> value always equals <xref href=\"System.DateTimeKind.Unspecified\" data-throw-if-not-resolved=\"false\"></xref>. You can preserve the <xref href=\"System.DateTime.Kind\" data-throw-if-not-resolved=\"false\"></xref> property of the <em>time</em> parameter by calling the <xref href=\"System.DateTime.SpecifyKind(System.DateTime,System.DateTimeKind)\" data-throw-if-not-resolved=\"false\"></xref> method, as the following example shows.</p>System.Globalization.Calendar.AddMethods#8"
  example:
  - "\n<p>The following example instantiates a <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> value and displays the values of several of its components in the Um AL Qura calendar. Next, it calls the <xref href=\"System.Globalization.UmAlQuraCalendar.AddYears(System.DateTime,System.Int32)\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"System.Globalization.UmAlQuraCalendar.AddMonths(System.DateTime,System.Int32)\" data-throw-if-not-resolved=\"false\"></xref> methods to add 2 years and 10 months in the Um Al Qura calendar to the date value. Finally, it again displays the values of these date components in the Um Al Qura calendar.</p>System.Globalization.UmAlQuraCalendar.AddMonths#1"
  syntax:
    content: public override DateTime AddYears(DateTime time, int years)
    content.vb: Public Overrides Function AddYears(time As DateTime, years As Integer) As DateTime
    parameters:
    - id: time
      type: System.DateTime
      description: "\n<p>The date to which to add years. The <xref href=\"System.Globalization.UmAlQuraCalendar\" data-throw-if-not-resolved=\"false\"></xref> class supports only dates from 04/30/1900 00.00.00 (Gregorian date) through 11/16/2077 23:59:59 (Gregorian date).</p>\n"
    - id: years
      type: System.Int32
      description: "\n<p>The positive or negative number of years to add. </p>\n"
    return:
      type: System.DateTime
      description: "\n<p>The date yielded by adding the number of years specified by the <em>years</em> parameter to the date specified by the <em>time</em> parameter.</p>\n"
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<p>The resulting date is outside the range supported by the <xref href=\"System.Globalization.UmAlQuraCalendar\" data-throw-if-not-resolved=\"false\"></xref> class. </p>\n"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>\n<em>years</em> is less than -10,000 or greater than 10,000. </p>\n<p>-or-</p>\n<p>\n<em>time</em> is outside the range supported by this calendar.</p>\n"
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Globalization.UmAlQuraCalendar.GetDayOfMonth(System.DateTime)
  commentId: M:System.Globalization.UmAlQuraCalendar.GetDayOfMonth(System.DateTime)
  id: GetDayOfMonth(System.DateTime)
  parent: System.Globalization.UmAlQuraCalendar
  langs:
  - csharp
  - vb
  name: GetDayOfMonth(DateTime)
  fullName: System.Globalization.UmAlQuraCalendar.GetDayOfMonth(System.DateTime)
  type: Method
  source:
    remote:
      path: src/System.Globalization.Calendars/ref/System.Globalization.Calendars.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetDayOfMonth
    path: src/System.Globalization.Calendars/ref/System.Globalization.Calendars.cs
    startLine: 316
  assemblies:
  - System.Globalization.Calendars
  namespace: System.Globalization
  summary: "\n<p>Calculates the day of the month on which a specified date occurs.</p>\n"
  example:
  - "\n<p>The following example displays the values of several components of a <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> in terms of the Um Al Qura calendar.</p>System.Globalization.UmAlQuraCalendar.AddMonths#1"
  syntax:
    content: public override int GetDayOfMonth(DateTime time)
    content.vb: Public Overrides Function GetDayOfMonth(time As DateTime) As Integer
    parameters:
    - id: time
      type: System.DateTime
      description: "\n<p>The date value to read. The <xref href=\"System.Globalization.UmAlQuraCalendar\" data-throw-if-not-resolved=\"false\"></xref> class supports only dates from 04/30/1900 00.00.00 (Gregorian date) through 11/16/2077 23:59:59 (Gregorian date).</p>\n"
    return:
      type: System.Int32
      description: "\n<p>An integer from 1 through 30 that represents the day of the month specified by the <em>time</em> parameter. </p>\n"
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>\n<em>time</em> is outside the range supported by this calendar. </p>\n"
  seealso:
  - type: System.DateTime.Day
    commentId: P:System.DateTime.Day
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Globalization.UmAlQuraCalendar.GetDayOfWeek(System.DateTime)
  commentId: M:System.Globalization.UmAlQuraCalendar.GetDayOfWeek(System.DateTime)
  id: GetDayOfWeek(System.DateTime)
  parent: System.Globalization.UmAlQuraCalendar
  langs:
  - csharp
  - vb
  name: GetDayOfWeek(DateTime)
  fullName: System.Globalization.UmAlQuraCalendar.GetDayOfWeek(System.DateTime)
  type: Method
  source:
    remote:
      path: src/System.Globalization.Calendars/ref/System.Globalization.Calendars.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetDayOfWeek
    path: src/System.Globalization.Calendars/ref/System.Globalization.Calendars.cs
    startLine: 317
  assemblies:
  - System.Globalization.Calendars
  namespace: System.Globalization
  summary: "\n<p>Calculates the day of the week on which a specified date occurs.</p>\n"
  remarks: "\n<p>The <xref href=\"System.DayOfWeek\" data-throw-if-not-resolved=\"false\"></xref> values are as follows: </p>\n<p>DayOfWeek value </p>\n<p>which indicates </p>\n<table><tbody><tr><td>\n<p>Sunday </p>\n</td><td>\n<p>الاحد (Al-Ahad) </p>\n</td></tr><tr><td>\n<p>Monday </p>\n</td><td>\n<p>الاثنين (Al-Ithnayn) </p>\n</td></tr><tr><td>\n<p>Tuesday </p>\n</td><td>\n<p>الثلاثاء (At-Thulaathaa') </p>\n</td></tr><tr><td>\n<p>Wednesday </p>\n</td><td>\n<p>الاربعاء (Al-Arbi'aa') </p>\n</td></tr><tr><td>\n<p>Thursday </p>\n</td><td>\n<p>الخميس (Al-Khamiis) </p>\n</td></tr><tr><td>\n<p>Friday </p>\n</td><td>\n<p>الجمعة (Al-Jumu'ah) </p>\n</td></tr><tr><td>\n<p>Saturday </p>\n</td><td>\n<p>السبت (As-Sabt) </p>\n</td></tr></tbody></table>\n"
  example:
  - "\n<p>The following example displays the values of several components of a <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> in terms of the Um Al Qura calendar.</p>System.Globalization.UmAlQuraCalendar.AddMonths#1"
  syntax:
    content: public override DayOfWeek GetDayOfWeek(DateTime time)
    content.vb: Public Overrides Function GetDayOfWeek(time As DateTime) As DayOfWeek
    parameters:
    - id: time
      type: System.DateTime
      description: "\n<p>The date value to read. The <xref href=\"System.Globalization.UmAlQuraCalendar\" data-throw-if-not-resolved=\"false\"></xref> class supports only dates from 04/30/1900 00.00.00 (Gregorian date) through 11/16/2077 23:59:59 (Gregorian date).</p>\n"
    return:
      type: System.DayOfWeek
      description: "\n<p>A <xref href=\"System.DayOfWeek\" data-throw-if-not-resolved=\"false\"></xref> value that represents the day of the week specified by the <em>time</em> parameter.</p>\n"
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>\n<em>time</em> is outside the range supported by this calendar. </p>\n"
  seealso:
  - type: System.DateTime.DayOfWeek
    commentId: P:System.DateTime.DayOfWeek
  - type: System.DayOfWeek
    commentId: T:System.DayOfWeek
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Globalization.UmAlQuraCalendar.GetDayOfYear(System.DateTime)
  commentId: M:System.Globalization.UmAlQuraCalendar.GetDayOfYear(System.DateTime)
  id: GetDayOfYear(System.DateTime)
  parent: System.Globalization.UmAlQuraCalendar
  langs:
  - csharp
  - vb
  name: GetDayOfYear(DateTime)
  fullName: System.Globalization.UmAlQuraCalendar.GetDayOfYear(System.DateTime)
  type: Method
  source:
    remote:
      path: src/System.Globalization.Calendars/ref/System.Globalization.Calendars.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetDayOfYear
    path: src/System.Globalization.Calendars/ref/System.Globalization.Calendars.cs
    startLine: 318
  assemblies:
  - System.Globalization.Calendars
  namespace: System.Globalization
  summary: "\n<p>Calculates the day of the year on which a specified date occurs.</p>\n"
  remarks: "\n<p>The day of the year is defined as the number of days from the first day of the year. For example, the <xref href=\"System.Globalization.UmAlQuraCalendar.GetDayOfYear(System.DateTime)\" data-throw-if-not-resolved=\"false\"></xref> method returns 1 for the first day of the first month of the year, and the total number of days in the year for the last day of the last month. </p>\n"
  example:
  - "\n<p>The following example displays the values of several components of a <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> in terms of the Um Al Qura calendar.</p>System.Globalization.UmALQuraCalendar.AddMonths#1"
  syntax:
    content: public override int GetDayOfYear(DateTime time)
    content.vb: Public Overrides Function GetDayOfYear(time As DateTime) As Integer
    parameters:
    - id: time
      type: System.DateTime
      description: "\n<p>The date value to read. The <xref href=\"System.Globalization.UmAlQuraCalendar\" data-throw-if-not-resolved=\"false\"></xref> class supports only dates from 04/30/1900 00.00.00 (Gregorian date) through 11/16/2077 23:59:59 (Gregorian date).</p>\n"
    return:
      type: System.Int32
      description: "\n<p>An integer from 1 through 355 that represents the day of the year specified by the <em>time</em> parameter.</p>\n"
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>\n<em>time</em> is outside the range supported by this calendar. </p>\n"
  seealso:
  - type: System.DateTime.DayOfYear
    commentId: P:System.DateTime.DayOfYear
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Globalization.UmAlQuraCalendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)
  commentId: M:System.Globalization.UmAlQuraCalendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)
  id: GetDaysInMonth(System.Int32,System.Int32,System.Int32)
  parent: System.Globalization.UmAlQuraCalendar
  langs:
  - csharp
  - vb
  name: GetDaysInMonth(Int32, Int32, Int32)
  fullName: System.Globalization.UmAlQuraCalendar.GetDaysInMonth(System.Int32, System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Globalization.Calendars/ref/System.Globalization.Calendars.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetDaysInMonth
    path: src/System.Globalization.Calendars/ref/System.Globalization.Calendars.cs
    startLine: 319
  assemblies:
  - System.Globalization.Calendars
  namespace: System.Globalization
  summary: "\n<p>Calculates the number of days in the specified month of the specified year and era.</p>\n"
  remarks: "\n<p>This method returns a different number of days in a specified month for a common year versus a leap year. For example, this method returns 29 or 30 for Zulhijjah (<em>month</em> = 12), depending on whether <em>year</em> is a leap year.</p>\n"
  example:
  - "\n<p>The following example calls the <xref href=\"System.Globalization.UmAlQuraCalendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)\" data-throw-if-not-resolved=\"false\"></xref> method to get the number of days in each month of five consecutive years.</p>System.Globalization.UmAlQuraCalendar.GetDaysInMonth#1"
  syntax:
    content: public override int GetDaysInMonth(int year, int month, int era)
    content.vb: Public Overrides Function GetDaysInMonth(year As Integer, month As Integer, era As Integer) As Integer
    parameters:
    - id: year
      type: System.Int32
      description: "\n<p>A year. </p>\n"
    - id: month
      type: System.Int32
      description: "\n<p>An integer from 1 through 12 that represents a month. </p>\n"
    - id: era
      type: System.Int32
      description: "\n<p>An era. Specify <strong>UmAlQuraCalendar.Eras[UmAlQuraCalendar.CurrentEra]</strong> or <xref href=\"System.Globalization.UmAlQuraCalendar.UmAlQuraEra\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
    return:
      type: System.Int32
      description: "\n<p>The number of days in the specified month in the specified year and era. The return value is 29 in a common year and 30 in a leap year.</p>\n"
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>\n<em>year</em>, <em>month</em>, or <em>era</em> is outside the range supported by the <xref href=\"System.Globalization.UmAlQuraCalendar\" data-throw-if-not-resolved=\"false\"></xref> class. </p>\n"
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Globalization.UmAlQuraCalendar.GetDaysInYear(System.Int32,System.Int32)
  commentId: M:System.Globalization.UmAlQuraCalendar.GetDaysInYear(System.Int32,System.Int32)
  id: GetDaysInYear(System.Int32,System.Int32)
  parent: System.Globalization.UmAlQuraCalendar
  langs:
  - csharp
  - vb
  name: GetDaysInYear(Int32, Int32)
  fullName: System.Globalization.UmAlQuraCalendar.GetDaysInYear(System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Globalization.Calendars/ref/System.Globalization.Calendars.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetDaysInYear
    path: src/System.Globalization.Calendars/ref/System.Globalization.Calendars.cs
    startLine: 320
  assemblies:
  - System.Globalization.Calendars
  namespace: System.Globalization
  summary: "\n<p>Calculates the number of days in the specified year of the specified era.</p>\n"
  example:
  - "\n<p>The following example calls the <xref href=\"System.Globalization.UmAlQuraCalendar.GetDaysInYear(System.Int32,System.Int32)\" data-throw-if-not-resolved=\"false\"></xref> method to get the number of days in ten consecutive years in each era supported by the <xref href=\"System.Globalization.UmAlQuraCalendar\" data-throw-if-not-resolved=\"false\"></xref> class.</p>System.Globalization.UmAlQuraCalendar.GetDaysInYear#1"
  syntax:
    content: public override int GetDaysInYear(int year, int era)
    content.vb: Public Overrides Function GetDaysInYear(year As Integer, era As Integer) As Integer
    parameters:
    - id: year
      type: System.Int32
      description: "\n<p>A year. </p>\n"
    - id: era
      type: System.Int32
      description: "\n<p>An era. Specify <strong>UmAlQuraCalendar.Eras[UmAlQuraCalendar.CurrentEra]</strong> or <xref href=\"System.Globalization.UmAlQuraCalendar.UmAlQuraEra\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
    return:
      type: System.Int32
      description: "\n<p>The number of days in the specified year and era. The number of days is 354 in a common year or 355 in a leap year.</p>\n"
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>\n<em>year</em> or <em>era</em> is outside the range supported by the <xref href=\"System.Globalization.UmAlQuraCalendar\" data-throw-if-not-resolved=\"false\"></xref> class. </p>\n"
  seealso:
  - type: System.Globalization.UmAlQuraCalendar.UmAlQuraEra
    commentId: F:System.Globalization.UmAlQuraCalendar.UmAlQuraEra
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Globalization.UmAlQuraCalendar.GetEra(System.DateTime)
  commentId: M:System.Globalization.UmAlQuraCalendar.GetEra(System.DateTime)
  id: GetEra(System.DateTime)
  parent: System.Globalization.UmAlQuraCalendar
  langs:
  - csharp
  - vb
  name: GetEra(DateTime)
  fullName: System.Globalization.UmAlQuraCalendar.GetEra(System.DateTime)
  type: Method
  source:
    remote:
      path: src/System.Globalization.Calendars/ref/System.Globalization.Calendars.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetEra
    path: src/System.Globalization.Calendars/ref/System.Globalization.Calendars.cs
    startLine: 321
  assemblies:
  - System.Globalization.Calendars
  namespace: System.Globalization
  summary: "\n<p>Calculates the era in which a specified date occurs.</p>\n"
  remarks: "\n<p>The Um Al Qura calendar recognizes one era: A.H. (Latin \"Anno Hegirae\", which means \"the year of the migration,\" in reference to the migration of Muhammad (PBUH) from Mecca).</p>\n"
  example:
  - "\n<p>The following example displays the values of several components of a date in the Um Al Qura calendar.</p>System.Globalization.UmAlQuraCalendar.AddMonths#1"
  syntax:
    content: public override int GetEra(DateTime time)
    content.vb: Public Overrides Function GetEra(time As DateTime) As Integer
    parameters:
    - id: time
      type: System.DateTime
      description: "\n<p>The date value to read. </p>\n"
    return:
      type: System.Int32
      description: "\n<p>Always returns the <xref href=\"System.Globalization.UmAlQuraCalendar.UmAlQuraEra\" data-throw-if-not-resolved=\"false\"></xref> value.</p>\n"
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>\n<em>time</em> is outside the range supported by this calendar. </p>\n"
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Globalization.UmAlQuraCalendar.GetLeapMonth(System.Int32,System.Int32)
  commentId: M:System.Globalization.UmAlQuraCalendar.GetLeapMonth(System.Int32,System.Int32)
  id: GetLeapMonth(System.Int32,System.Int32)
  parent: System.Globalization.UmAlQuraCalendar
  langs:
  - csharp
  - vb
  name: GetLeapMonth(Int32, Int32)
  fullName: System.Globalization.UmAlQuraCalendar.GetLeapMonth(System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Globalization.Calendars/ref/System.Globalization.Calendars.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetLeapMonth
    path: src/System.Globalization.Calendars/ref/System.Globalization.Calendars.cs
    startLine: 322
  assemblies:
  - System.Globalization.Calendars
  namespace: System.Globalization
  summary: "\n<p>Calculates the leap month for a specified year and era.</p>\n"
  remarks: "\n<p>In a calendar that supports the notion of a leap month, the leap month can occur either after a particular month or after any month in a year. For example, the <xref href=\"System.Globalization.EastAsianLunisolarCalendar.GetMonth(System.DateTime)\" data-throw-if-not-resolved=\"false\"></xref> method returns a number between 1 and 13 that indicates the month associated with a specified date. If there is a leap month between the eighth and ninth months of the year, the <xref href=\"System.Globalization.EastAsianLunisolarCalendar.GetMonth(System.DateTime)\" data-throw-if-not-resolved=\"false\"></xref> method returns 8 for the eighth month, 9 for the leap eighth month, and 10 for the ninth month.</p>\n"
  example:
  - 
  syntax:
    content: public override int GetLeapMonth(int year, int era)
    content.vb: Public Overrides Function GetLeapMonth(year As Integer, era As Integer) As Integer
    parameters:
    - id: year
      type: System.Int32
      description: "\n<p>A year.</p>\n"
    - id: era
      type: System.Int32
      description: "\n<p>An era. Specify <strong>UmAlQuraCalendar.Eras[UmAlQuraCalendar.CurrentEra]</strong> or <xref href=\"System.Globalization.UmAlQuraCalendar.UmAlQuraEra\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
    return:
      type: System.Int32
      description: "\n<p>Always 0 because the <xref href=\"System.Globalization.UmAlQuraCalendar\" data-throw-if-not-resolved=\"false\"></xref> class does not support leap months.</p>\n"
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>\n<em>year</em> is less than 1318 or greater than 1450.</p>\n<p>-or-</p>\n<p>\n<em>era</em> is not <strong>UmAlQuraCalendar.Eras[UmAlQuraCalendar.CurrentEra]</strong> or <xref href=\"System.Globalization.UmAlQuraCalendar.UmAlQuraEra\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Globalization.UmAlQuraCalendar.GetMonth(System.DateTime)
  commentId: M:System.Globalization.UmAlQuraCalendar.GetMonth(System.DateTime)
  id: GetMonth(System.DateTime)
  parent: System.Globalization.UmAlQuraCalendar
  langs:
  - csharp
  - vb
  name: GetMonth(DateTime)
  fullName: System.Globalization.UmAlQuraCalendar.GetMonth(System.DateTime)
  type: Method
  source:
    remote:
      path: src/System.Globalization.Calendars/ref/System.Globalization.Calendars.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetMonth
    path: src/System.Globalization.Calendars/ref/System.Globalization.Calendars.cs
    startLine: 323
  assemblies:
  - System.Globalization.Calendars
  namespace: System.Globalization
  summary: "\n<p>Calculates the month in which a specified date occurs.</p>\n"
  example:
  - "\n<p>The following example displays the date ranges supported by the <xref href=\"System.Globalization.UmAlQuraCalendar\" data-throw-if-not-resolved=\"false\"></xref> class in both the Gregorian and Um Al Qura calendars. The <xref href=\"System.Globalization.UmAlQuraCalendar.GetMonth(System.DateTime)\" data-throw-if-not-resolved=\"false\"></xref> method is used to retrieve the month of the minimum and maximum supported dates in the Um Al Qura calendar if it is not the current culture's current calendar.</p>System.Globalization.UmAlQuraCalendar.GetMonth#1"
  syntax:
    content: public override int GetMonth(DateTime time)
    content.vb: Public Overrides Function GetMonth(time As DateTime) As Integer
    parameters:
    - id: time
      type: System.DateTime
      description: "\n<p>The date value to read. The <xref href=\"System.Globalization.UmAlQuraCalendar\" data-throw-if-not-resolved=\"false\"></xref> class supports only dates from 04/30/1900 00.00.00 (Gregorian date) through 11/16/2077 23:59:59 (Gregorian date).</p>\n"
    return:
      type: System.Int32
      description: "\n<p>An integer from 1 through 12 that represents the month in the date specified by the <em>time</em> parameter.</p>\n"
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>\n<em>time</em> is outside the range supported by this calendar. </p>\n"
  seealso:
  - type: System.DateTime.Month
    commentId: P:System.DateTime.Month
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Globalization.UmAlQuraCalendar.GetMonthsInYear(System.Int32,System.Int32)
  commentId: M:System.Globalization.UmAlQuraCalendar.GetMonthsInYear(System.Int32,System.Int32)
  id: GetMonthsInYear(System.Int32,System.Int32)
  parent: System.Globalization.UmAlQuraCalendar
  langs:
  - csharp
  - vb
  name: GetMonthsInYear(Int32, Int32)
  fullName: System.Globalization.UmAlQuraCalendar.GetMonthsInYear(System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Globalization.Calendars/ref/System.Globalization.Calendars.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetMonthsInYear
    path: src/System.Globalization.Calendars/ref/System.Globalization.Calendars.cs
    startLine: 324
  assemblies:
  - System.Globalization.Calendars
  namespace: System.Globalization
  summary: "\n<p>Calculates the number of months in the specified year of the specified era.</p>\n"
  example:
  - "\n<p>The following example calls the <xref href=\"System.Globalization.UmAlQuraCalendar.GetMonthsInYear(System.Int32,System.Int32)\" data-throw-if-not-resolved=\"false\"></xref> method to determine the number of months in four consecutive years, and then calls the <xref href=\"System.Globalization.UmAlQuraCalendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)\" data-throw-if-not-resolved=\"false\"></xref> method to determine how many days there are in each month.</p>System.Globalization.UmAlQuraCalendar.GetDaysInMonth#1"
  syntax:
    content: public override int GetMonthsInYear(int year, int era)
    content.vb: Public Overrides Function GetMonthsInYear(year As Integer, era As Integer) As Integer
    parameters:
    - id: year
      type: System.Int32
      description: "\n<p>A year. </p>\n"
    - id: era
      type: System.Int32
      description: "\n<p>An era. Specify <strong>UmAlQuaraCalendar.Eras[UmAlQuraCalendar.CurrentEra]</strong> or <xref href=\"System.Globalization.UmAlQuraCalendar.UmAlQuraEra\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
    return:
      type: System.Int32
      description: "\n<p>Always 12.</p>\n"
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>\n<em>year</em> is outside the range supported by this calendar. </p>\n"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<p>\n<em>era</em> is outside the range supported by this calendar. </p>\n"
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Globalization.UmAlQuraCalendar.GetYear(System.DateTime)
  commentId: M:System.Globalization.UmAlQuraCalendar.GetYear(System.DateTime)
  id: GetYear(System.DateTime)
  parent: System.Globalization.UmAlQuraCalendar
  langs:
  - csharp
  - vb
  name: GetYear(DateTime)
  fullName: System.Globalization.UmAlQuraCalendar.GetYear(System.DateTime)
  type: Method
  source:
    remote:
      path: src/System.Globalization.Calendars/ref/System.Globalization.Calendars.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetYear
    path: src/System.Globalization.Calendars/ref/System.Globalization.Calendars.cs
    startLine: 325
  assemblies:
  - System.Globalization.Calendars
  namespace: System.Globalization
  summary: "\n<p>Calculates the year of a date represented by a specified <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  example:
  - "\n<p>The following example displays the date ranges supported by the <xref href=\"System.Globalization.UmAlQuraCalendar\" data-throw-if-not-resolved=\"false\"></xref> class in both the Gregorian and Um Al Qura calendars. The <xref href=\"System.Globalization.UmAlQuraCalendar.GetYear(System.DateTime)\" data-throw-if-not-resolved=\"false\"></xref> method is used to retrieve the year of the minimum and maximum supported dates in the Um Al Qura calendar if it is not the current culture's current calendar.</p>System.Globalization.UmAlQuraCalendar.GetMonth#1"
  syntax:
    content: public override int GetYear(DateTime time)
    content.vb: Public Overrides Function GetYear(time As DateTime) As Integer
    parameters:
    - id: time
      type: System.DateTime
      description: "\n<p>The date value to read. The <xref href=\"System.Globalization.UmAlQuraCalendar\" data-throw-if-not-resolved=\"false\"></xref> class supports only dates from 04/30/1900 00.00.00 (Gregorian date) through 11/16/2077 23:59:59 (Gregorian date).</p>\n"
    return:
      type: System.Int32
      description: "\n<p>An integer that represents the year specified by the <em>time</em> parameter.</p>\n"
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>\n<em>time</em> is outside the range supported by this calendar. </p>\n"
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Globalization.UmAlQuraCalendar.IsLeapDay(System.Int32,System.Int32,System.Int32,System.Int32)
  commentId: M:System.Globalization.UmAlQuraCalendar.IsLeapDay(System.Int32,System.Int32,System.Int32,System.Int32)
  id: IsLeapDay(System.Int32,System.Int32,System.Int32,System.Int32)
  parent: System.Globalization.UmAlQuraCalendar
  langs:
  - csharp
  - vb
  name: IsLeapDay(Int32, Int32, Int32, Int32)
  fullName: System.Globalization.UmAlQuraCalendar.IsLeapDay(System.Int32, System.Int32, System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Globalization.Calendars/ref/System.Globalization.Calendars.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IsLeapDay
    path: src/System.Globalization.Calendars/ref/System.Globalization.Calendars.cs
    startLine: 326
  assemblies:
  - System.Globalization.Calendars
  namespace: System.Globalization
  summary: "\n<p>Determines whether the specified date is a leap day.</p>\n"
  remarks: "\n<p>A leap day is a day that occurs only in a leap year. </p>\n"
  example:
  - "\n<p>The following example calls the <xref href=\"System.Globalization.UmAlQuraCalendar.IsLeapDay(System.Int32,System.Int32,System.Int32,System.Int32)\" data-throw-if-not-resolved=\"false\"></xref> method for the last day of the second month (February) for five years in each of the eras.</p>System.Globalization.HijriCalendar.IsLeapDay#1"
  syntax:
    content: public override bool IsLeapDay(int year, int month, int day, int era)
    content.vb: Public Overrides Function IsLeapDay(year As Integer, month As Integer, day As Integer, era As Integer) As Boolean
    parameters:
    - id: year
      type: System.Int32
      description: "\n<p>A year. </p>\n"
    - id: month
      type: System.Int32
      description: "\n<p>An integer from 1 through 12 that represents a month. </p>\n"
    - id: day
      type: System.Int32
      description: "\n<p>An integer from 1 through 30 that represents a day. </p>\n"
    - id: era
      type: System.Int32
      description: "\n<p>An era. Specify <strong>UmAlQuraCalendar.Eras[UmAlQuraCalendar.CurrentEra]</strong> or <xref href=\"System.Globalization.UmAlQuraCalendar.UmAlQuraEra\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if the specified day is a leap day; otherwise, <strong>false</strong>. The return value is always <strong>false</strong> because the <xref href=\"System.Globalization.UmAlQuraCalendar\" data-throw-if-not-resolved=\"false\"></xref> class does not support leap days.</p>\n"
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>\n<em>year</em>, <em>month</em>, <em>day</em>, or <em>era</em> is outside the range supported by the <xref href=\"System.Globalization.UmAlQuraCalendar\" data-throw-if-not-resolved=\"false\"></xref> class. </p>\n"
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Globalization.UmAlQuraCalendar.IsLeapMonth(System.Int32,System.Int32,System.Int32)
  commentId: M:System.Globalization.UmAlQuraCalendar.IsLeapMonth(System.Int32,System.Int32,System.Int32)
  id: IsLeapMonth(System.Int32,System.Int32,System.Int32)
  parent: System.Globalization.UmAlQuraCalendar
  langs:
  - csharp
  - vb
  name: IsLeapMonth(Int32, Int32, Int32)
  fullName: System.Globalization.UmAlQuraCalendar.IsLeapMonth(System.Int32, System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Globalization.Calendars/ref/System.Globalization.Calendars.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IsLeapMonth
    path: src/System.Globalization.Calendars/ref/System.Globalization.Calendars.cs
    startLine: 327
  assemblies:
  - System.Globalization.Calendars
  namespace: System.Globalization
  summary: "\n<p>Determines whether the specified month in the specified year and era is a leap month.</p>\n"
  remarks: "\n<p>A leap month is an entire month that occurs only in a leap year. </p>\n"
  syntax:
    content: public override bool IsLeapMonth(int year, int month, int era)
    content.vb: Public Overrides Function IsLeapMonth(year As Integer, month As Integer, era As Integer) As Boolean
    parameters:
    - id: year
      type: System.Int32
      description: "\n<p>A year. </p>\n"
    - id: month
      type: System.Int32
      description: "\n<p>An integer from 1 through 12 that represents a month. </p>\n"
    - id: era
      type: System.Int32
      description: "\n<p>An era. Specify <strong>UmAlQuraCalendar.Eras[UmAlQuraCalendar.CurrentEra]</strong> or <xref href=\"System.Globalization.UmAlQuraCalendar.UmAlQuraEra\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
    return:
      type: System.Boolean
      description: "\n<p>Always <strong>false</strong> because the <xref href=\"System.Globalization.UmAlQuraCalendar\" data-throw-if-not-resolved=\"false\"></xref> class does not support leap months.</p>\n"
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>\n<em>year</em>, <em>month</em>, or <em>era</em> is outside the range supported by the <xref href=\"System.Globalization.UmAlQuraCalendar\" data-throw-if-not-resolved=\"false\"></xref> class. </p>\n"
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Globalization.UmAlQuraCalendar.IsLeapYear(System.Int32,System.Int32)
  commentId: M:System.Globalization.UmAlQuraCalendar.IsLeapYear(System.Int32,System.Int32)
  id: IsLeapYear(System.Int32,System.Int32)
  parent: System.Globalization.UmAlQuraCalendar
  langs:
  - csharp
  - vb
  name: IsLeapYear(Int32, Int32)
  fullName: System.Globalization.UmAlQuraCalendar.IsLeapYear(System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Globalization.Calendars/ref/System.Globalization.Calendars.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IsLeapYear
    path: src/System.Globalization.Calendars/ref/System.Globalization.Calendars.cs
    startLine: 328
  assemblies:
  - System.Globalization.Calendars
  namespace: System.Globalization
  summary: "\n<p>Determines whether the specified year in the specified era is a leap year.</p>\n"
  remarks: "\n<p>A common year has 354 days and a leap year has 355 days.</p>\n"
  example:
  - "\n<p>The following example lists the number of days in ten consecutive years and calls the <xref href=\"System.Globalization.UmAlQuraCalendar.IsLeapYear(System.Int32,System.Int32)\" data-throw-if-not-resolved=\"false\"></xref> method to determine which years are leap years.</p>System.Globalization.UmAlQuraCalendar.IsLeapYear#1"
  syntax:
    content: public override bool IsLeapYear(int year, int era)
    content.vb: Public Overrides Function IsLeapYear(year As Integer, era As Integer) As Boolean
    parameters:
    - id: year
      type: System.Int32
      description: "\n<p>A year. </p>\n"
    - id: era
      type: System.Int32
      description: "\n<p>An era. Specify <strong>UmAlQuraCalendar.Eras[UmAlQuraCalendar.CurrentEra]</strong> or <xref href=\"System.Globalization.UmAlQuraCalendar.UmAlQuraEra\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if the specified year is a leap year; otherwise, <strong>false</strong>.</p>\n"
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>\n<em>year</em> or <em>era</em> is outside the range supported by the <xref href=\"System.Globalization.UmAlQuraCalendar\" data-throw-if-not-resolved=\"false\"></xref> class. </p>\n"
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Globalization.UmAlQuraCalendar.ToDateTime(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  commentId: M:System.Globalization.UmAlQuraCalendar.ToDateTime(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  id: ToDateTime(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  parent: System.Globalization.UmAlQuraCalendar
  langs:
  - csharp
  - vb
  name: ToDateTime(Int32, Int32, Int32, Int32, Int32, Int32, Int32, Int32)
  fullName: System.Globalization.UmAlQuraCalendar.ToDateTime(System.Int32, System.Int32, System.Int32, System.Int32, System.Int32, System.Int32, System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Globalization.Calendars/ref/System.Globalization.Calendars.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ToDateTime
    path: src/System.Globalization.Calendars/ref/System.Globalization.Calendars.cs
    startLine: 329
  assemblies:
  - System.Globalization.Calendars
  namespace: System.Globalization
  summary: "\n<p>Returns a <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> that is set to the specified date, time, and era.</p>\n"
  remarks: "\n<p>The <xref href=\"System.Globalization.UmAlQuraCalendar.ToDateTime(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)\" data-throw-if-not-resolved=\"false\"></xref> method is useful because it can convert any date in the current calendar to a Gregorian calendar date. The Gregorian date can subsequently be used, for example, to compare dates in different calendars or create an equivalent date in a particular calendar.</p>\n"
  syntax:
    content: public override DateTime ToDateTime(int year, int month, int day, int hour, int minute, int second, int millisecond, int era)
    content.vb: Public Overrides Function ToDateTime(year As Integer, month As Integer, day As Integer, hour As Integer, minute As Integer, second As Integer, millisecond As Integer, era As Integer) As DateTime
    parameters:
    - id: year
      type: System.Int32
      description: "\n<p>A year. </p>\n"
    - id: month
      type: System.Int32
      description: "\n<p>An integer from 1 through 12 that represents a month. </p>\n"
    - id: day
      type: System.Int32
      description: "\n<p>An integer from 1 through 29 that represents a day. </p>\n"
    - id: hour
      type: System.Int32
      description: "\n<p>An integer from 0 through 23 that represents an hour. </p>\n"
    - id: minute
      type: System.Int32
      description: "\n<p>An integer from 0 through 59 that represents a minute. </p>\n"
    - id: second
      type: System.Int32
      description: "\n<p>An integer from 0 through 59 that represents a second. </p>\n"
    - id: millisecond
      type: System.Int32
      description: "\n<p>An integer from 0 through 999 that represents a millisecond. </p>\n"
    - id: era
      type: System.Int32
      description: "\n<p>An era. Specify <strong>UmAlQuraCalendar.Eras[UmAlQuraCalendar.CurrentEra]</strong> or <xref href=\"System.Globalization.UmAlQuraCalendar.UmAlQuraEra\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
    return:
      type: System.DateTime
      description: "\n<p>The <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> that is set to the specified date and time in the current era.</p>\n"
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>\n<em>year</em>, <em>month</em>, <em>day</em>, or <em>era</em> is outside the range supported by the <xref href=\"System.Globalization.UmAlQuraCalendar\" data-throw-if-not-resolved=\"false\"></xref> class.</p>\n<p>-or- </p>\n<p>\n<em>hour</em> is less than zero or greater than 23.</p>\n<p>-or- </p>\n<p>\n<em>minute</em> is less than zero or greater than 59.</p>\n<p>-or- </p>\n<p>\n<em>second</em> is less than zero or greater than 59.</p>\n<p>-or- </p>\n<p>\n<em>millisecond</em> is less than zero or greater than 999. </p>\n"
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Globalization.UmAlQuraCalendar.ToFourDigitYear(System.Int32)
  commentId: M:System.Globalization.UmAlQuraCalendar.ToFourDigitYear(System.Int32)
  id: ToFourDigitYear(System.Int32)
  parent: System.Globalization.UmAlQuraCalendar
  langs:
  - csharp
  - vb
  name: ToFourDigitYear(Int32)
  fullName: System.Globalization.UmAlQuraCalendar.ToFourDigitYear(System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Globalization.Calendars/ref/System.Globalization.Calendars.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ToFourDigitYear
    path: src/System.Globalization.Calendars/ref/System.Globalization.Calendars.cs
    startLine: 330
  assemblies:
  - System.Globalization.Calendars
  namespace: System.Globalization
  summary: "\n<p>Converts the specified year to a four-digit year by using the <xref href=\"System.Globalization.UmAlQuraCalendar.TwoDigitYearMax\" data-throw-if-not-resolved=\"false\"></xref> property to determine the appropriate century.</p>\n"
  remarks: "\n<p>The <xref href=\"System.Globalization.UmAlQuraCalendar.ToFourDigitYear(System.Int32)\" data-throw-if-not-resolved=\"false\"></xref> method uses the <em>year</em> parameter, the <xref href=\"System.Globalization.UmAlQuraCalendar.TwoDigitYearMax\" data-throw-if-not-resolved=\"false\"></xref> property, and a year to calculate a 4-digit year. The century is determined by finding the sole occurrence of the 2-digit <em>year</em> parameter within that 100-year range. For example, if <xref href=\"System.Globalization.UmAlQuraCalendar.TwoDigitYearMax\" data-throw-if-not-resolved=\"false\"></xref> is set to 1429, the 100-year range is from 1330 through 1429. Therefore, a 2-digit value of 30 is interpreted as 1330, while a 2-digit value of 29 is interpreted as 1429.</p>\n<p>If the <xref href=\"System.Globalization.UmAlQuraCalendar.TwoDigitYearMax\" data-throw-if-not-resolved=\"false\"></xref> property is the special value 99, the <xref href=\"System.Globalization.UmAlQuraCalendar.ToFourDigitYear(System.Int32)\" data-throw-if-not-resolved=\"false\"></xref> method ignores the settings in the regional and language options in Control Panel and returns the <em>year</em> parameter unchanged. </p>\n<p>\n<xref href=\"System.Globalization.UmAlQuraCalendar.ToFourDigitYear(System.Int32)\" data-throw-if-not-resolved=\"false\"></xref> supports either a two-digit year or a four-digit year. Passing a two-digit year value (less than 100) causes the method to convert the value to a four-digit value according to the <xref href=\"System.Globalization.UmAlQuraCalendar.TwoDigitYearMax\" data-throw-if-not-resolved=\"false\"></xref> value representing the appropriate century. If the application supplies a four-digit year value that is within the supported calendar range to <xref href=\"System.Globalization.UmAlQuraCalendar.ToFourDigitYear(System.Int32)\" data-throw-if-not-resolved=\"false\"></xref>, the method returns the actual input value. If the application supplies a four-digit value that is outside the supported calendar range, or if it supplies a negative value, the method throws an exception.</p>\n"
  syntax:
    content: public override int ToFourDigitYear(int year)
    content.vb: Public Overrides Function ToFourDigitYear(year As Integer) As Integer
    parameters:
    - id: year
      type: System.Int32
      description: "\n<p>A 2-digit year from 0 through 99, or a 4-digit Um Al Qura calendar year from 1318 through 1450.</p>\n"
    return:
      type: System.Int32
      description: "\n<p>If the <em>year</em> parameter is a 2-digit year, the return value is the corresponding 4-digit year. If the <em>year</em> parameter is a 4-digit year, the return value is the unchanged <em>year</em> parameter.</p>\n"
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>\n<em>year</em> is outside the range supported by this calendar. </p>\n"
  seealso:
  - type: System.Globalization.UmAlQuraCalendar.TwoDigitYearMax
    commentId: P:System.Globalization.UmAlQuraCalendar.TwoDigitYearMax
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: System.Globalization
  isExternal: false
  name: System.Globalization
  fullName: System.Globalization
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Int32[]
  isExternal: false
  name: Int32[]
  fullName: System.Int32[]
  fullname.vb: System.Int32()
  name.vb: Int32()
  spec.csharp:
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
  - name: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
  - name: ()
    fullName: ()
- uid: System.DateTime
  parent: System
  isExternal: false
  name: DateTime
  fullName: System.DateTime
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  fullName: System.Int32
- uid: System.DayOfWeek
  parent: System
  isExternal: false
  name: DayOfWeek
  fullName: System.DayOfWeek
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  fullName: System.Boolean
- uid: System.InvalidOperationException
  parent: System
  isExternal: false
  name: InvalidOperationException
  fullName: System.InvalidOperationException
- uid: System.ArgumentOutOfRangeException
  isExternal: false
  name: ArgumentOutOfRangeException
  fullName: System.ArgumentOutOfRangeException
- uid: System.ArgumentException
  parent: System
  isExternal: false
  name: ArgumentException
  fullName: System.ArgumentException
