items:
- uid: System.Diagnostics.Contracts.ContractVerificationAttribute
  commentId: T:System.Diagnostics.Contracts.ContractVerificationAttribute
  id: ContractVerificationAttribute
  parent: System.Diagnostics.Contracts
  children:
  - System.Diagnostics.Contracts.ContractVerificationAttribute.#ctor(System.Boolean)
  - System.Diagnostics.Contracts.ContractVerificationAttribute.Value
  langs:
  - csharp
  - vb
  name: ContractVerificationAttribute
  fullName: System.Diagnostics.Contracts.ContractVerificationAttribute
  type: Class
  source:
    remote:
      path: src/System.Diagnostics.Contracts/ref/System.Diagnostics.Contracts.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ContractVerificationAttribute
    path: src/System.Diagnostics.Contracts/ref/System.Diagnostics.Contracts.cs
    startLine: 138
  assemblies:
  - System.Diagnostics.Contracts
  namespace: System.Diagnostics.Contracts
  summary: "\n<p>Instructs analysis tools to assume the correctness of an assembly, type, or member without performing static verification.</p>\n"
  remarks: "\n<p>Use <code>ContractVerification(false)</code> to explicitly mark an assembly, type, or member as not requiring verification. The most specific element found (member, type, and then assembly) takes precedence. Applying this attribute to a property, type, or assembly has the following effects:</p>\n<ul><li>\n<p>When you apply it to a property, it applies to both the <strong>get</strong> accessor and the <strong>set</strong> accessor.</p>\n</li><li>\n<p>When you apply it to a type, it applies to all members of the type, including nested types. </p>\n</li><li>\n<p>When you apply it to an assembly, it applies to all types and members of the assembly.</p>\n</li></ul>\n"
  example:
  - 
  syntax:
    content: 'public sealed class ContractVerificationAttribute : Attribute'
    content.vb: >-
      Public NotInheritable Class ContractVerificationAttribute
          Inherits Attribute
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: System.Diagnostics.Contracts.ContractVerificationAttribute.#ctor(System.Boolean)
  commentId: M:System.Diagnostics.Contracts.ContractVerificationAttribute.#ctor(System.Boolean)
  id: '#ctor(System.Boolean)'
  parent: System.Diagnostics.Contracts.ContractVerificationAttribute
  langs:
  - csharp
  - vb
  name: ContractVerificationAttribute(Boolean)
  fullName: System.Diagnostics.Contracts.ContractVerificationAttribute.ContractVerificationAttribute(System.Boolean)
  type: Constructor
  source:
    remote:
      path: src/System.Diagnostics.Contracts/ref/System.Diagnostics.Contracts.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Diagnostics.Contracts/ref/System.Diagnostics.Contracts.cs
    startLine: 142
  assemblies:
  - System.Diagnostics.Contracts
  namespace: System.Diagnostics.Contracts
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Diagnostics.Contracts.ContractVerificationAttribute\" data-throw-if-not-resolved=\"false\"></xref> class. </p>\n"
  example:
  - 
  syntax:
    content: public ContractVerificationAttribute(bool value)
    content.vb: Public Sub New(value As Boolean)
    parameters:
    - id: value
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> to require verification; otherwise, <strong>false</strong>. </p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Diagnostics.Contracts.ContractVerificationAttribute.Value
  commentId: P:System.Diagnostics.Contracts.ContractVerificationAttribute.Value
  id: Value
  parent: System.Diagnostics.Contracts.ContractVerificationAttribute
  langs:
  - csharp
  - vb
  name: Value
  fullName: System.Diagnostics.Contracts.ContractVerificationAttribute.Value
  type: Property
  source:
    remote:
      path: src/System.Diagnostics.Contracts/ref/System.Diagnostics.Contracts.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Value
    path: src/System.Diagnostics.Contracts/ref/System.Diagnostics.Contracts.cs
    startLine: 143
  assemblies:
  - System.Diagnostics.Contracts
  namespace: System.Diagnostics.Contracts
  summary: "\n<p>Gets the value that indicates whether to verify the contract of the target. </p>\n"
  example:
  - 
  syntax:
    content: public bool Value { get; }
    content.vb: Public ReadOnly Property Value As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if verification is required; otherwise, <strong>false</strong>.</p>\n"
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: System.Diagnostics.Contracts
  isExternal: false
  name: System.Diagnostics.Contracts
  fullName: System.Diagnostics.Contracts
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  fullName: System.Boolean
