items:
- uid: System.TimeSpan
  commentId: T:System.TimeSpan
  id: TimeSpan
  parent: System
  children:
  - System.TimeSpan.#ctor(System.Int32,System.Int32,System.Int32)
  - System.TimeSpan.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)
  - System.TimeSpan.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  - System.TimeSpan.#ctor(System.Int64)
  - System.TimeSpan.Add(System.TimeSpan)
  - System.TimeSpan.Compare(System.TimeSpan,System.TimeSpan)
  - System.TimeSpan.CompareTo(System.TimeSpan)
  - System.TimeSpan.Days
  - System.TimeSpan.Duration
  - System.TimeSpan.Equals(System.Object)
  - System.TimeSpan.Equals(System.TimeSpan)
  - System.TimeSpan.Equals(System.TimeSpan,System.TimeSpan)
  - System.TimeSpan.FromDays(System.Double)
  - System.TimeSpan.FromHours(System.Double)
  - System.TimeSpan.FromMilliseconds(System.Double)
  - System.TimeSpan.FromMinutes(System.Double)
  - System.TimeSpan.FromSeconds(System.Double)
  - System.TimeSpan.FromTicks(System.Int64)
  - System.TimeSpan.GetHashCode
  - System.TimeSpan.Hours
  - System.TimeSpan.MaxValue
  - System.TimeSpan.Milliseconds
  - System.TimeSpan.Minutes
  - System.TimeSpan.MinValue
  - System.TimeSpan.Negate
  - System.TimeSpan.op_Addition(System.TimeSpan,System.TimeSpan)
  - System.TimeSpan.op_Equality(System.TimeSpan,System.TimeSpan)
  - System.TimeSpan.op_GreaterThan(System.TimeSpan,System.TimeSpan)
  - System.TimeSpan.op_GreaterThanOrEqual(System.TimeSpan,System.TimeSpan)
  - System.TimeSpan.op_Inequality(System.TimeSpan,System.TimeSpan)
  - System.TimeSpan.op_LessThan(System.TimeSpan,System.TimeSpan)
  - System.TimeSpan.op_LessThanOrEqual(System.TimeSpan,System.TimeSpan)
  - System.TimeSpan.op_Subtraction(System.TimeSpan,System.TimeSpan)
  - System.TimeSpan.op_UnaryNegation(System.TimeSpan)
  - System.TimeSpan.op_UnaryPlus(System.TimeSpan)
  - System.TimeSpan.Parse(System.String)
  - System.TimeSpan.Parse(System.String,System.IFormatProvider)
  - System.TimeSpan.ParseExact(System.String,System.String,System.IFormatProvider)
  - System.TimeSpan.ParseExact(System.String,System.String,System.IFormatProvider,System.Globalization.TimeSpanStyles)
  - System.TimeSpan.ParseExact(System.String,System.String[],System.IFormatProvider)
  - System.TimeSpan.ParseExact(System.String,System.String[],System.IFormatProvider,System.Globalization.TimeSpanStyles)
  - System.TimeSpan.Seconds
  - System.TimeSpan.Subtract(System.TimeSpan)
  - System.TimeSpan.System#IComparable#CompareTo(System.Object)
  - System.TimeSpan.Ticks
  - System.TimeSpan.TicksPerDay
  - System.TimeSpan.TicksPerHour
  - System.TimeSpan.TicksPerMillisecond
  - System.TimeSpan.TicksPerMinute
  - System.TimeSpan.TicksPerSecond
  - System.TimeSpan.ToString
  - System.TimeSpan.ToString(System.String)
  - System.TimeSpan.ToString(System.String,System.IFormatProvider)
  - System.TimeSpan.TotalDays
  - System.TimeSpan.TotalHours
  - System.TimeSpan.TotalMilliseconds
  - System.TimeSpan.TotalMinutes
  - System.TimeSpan.TotalSeconds
  - System.TimeSpan.TryParse(System.String,System.IFormatProvider,System.TimeSpan@)
  - System.TimeSpan.TryParse(System.String,System.TimeSpan@)
  - System.TimeSpan.TryParseExact(System.String,System.String,System.IFormatProvider,System.Globalization.TimeSpanStyles,System.TimeSpan@)
  - System.TimeSpan.TryParseExact(System.String,System.String,System.IFormatProvider,System.TimeSpan@)
  - System.TimeSpan.TryParseExact(System.String,System.String[],System.IFormatProvider,System.Globalization.TimeSpanStyles,System.TimeSpan@)
  - System.TimeSpan.TryParseExact(System.String,System.String[],System.IFormatProvider,System.TimeSpan@)
  - System.TimeSpan.Zero
  langs:
  - csharp
  - vb
  name: TimeSpan
  fullName: System.TimeSpan
  type: Struct
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: TimeSpan
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 1649
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Represents a time interval.</p>\n<p>To browse the .NET Framework source code for this type, see the <see href=\"http://referencesource.microsoft.com/#mscorlib/system/timespan.cs#865ef7b89f41b632\">Reference Source</see>.</p>\n"
  remarks: "\n<p>To view the .NET Framework source code for this type, see the <see href=\"http://referencesource.microsoft.com/#mscorlib/system/timespan.cs#865ef7b89f41b632\">Reference Source</see>. You can browse through the source code online, download the reference for offline viewing, and step through the sources (including patches and updates) during debugging; see <see href=\"http://referencesource.microsoft.com/\">instructions</see>.</p>\n<p>A <xref href=\"System.TimeSpan\" data-throw-if-not-resolved=\"false\"></xref> object represents a time interval (duration of time or elapsed time) that is measured as a positive or negative number of days, hours, minutes, seconds, and fractions of a second. The <xref href=\"System.TimeSpan\" data-throw-if-not-resolved=\"false\"></xref> structure can also be used to represent the time of day, but only if the time is unrelated to a particular date. Otherwise, the <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> or <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> structure should be used instead. (For more information about using the <xref href=\"System.TimeSpan\" data-throw-if-not-resolved=\"false\"></xref> structure to reflect the time of day, see Choosing Between DateTime, DateTimeOffset, TimeSpan, and TimeZoneInfo.) </p>\n<p>A <xref href=\"System.TimeSpan\" data-throw-if-not-resolved=\"false\"></xref> value represents a time interval and can be expressed as a particular number of days, hours, minutes, seconds, and milliseconds. Because it represents a general interval without reference to a particular start or end point, it cannot be expressed in terms of years and months, both of which have a variable number of days. It differs from a <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> value, which represents a date and time without reference to a particular time zone, or a <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> value, which represents a specific moment of time. </p>\n<p>The largest unit of time that the <xref href=\"System.TimeSpan\" data-throw-if-not-resolved=\"false\"></xref> structure uses to measure duration is a day. Time intervals are measured in days for consistency, because the number of days in larger units of time, such as months and years, varies.</p>\n<p>The value of a <xref href=\"System.TimeSpan\" data-throw-if-not-resolved=\"false\"></xref> object is the number of ticks that equal the represented time interval. A tick is equal to 100 nanoseconds, or one ten-millionth of a second. The value of a <xref href=\"System.TimeSpan\" data-throw-if-not-resolved=\"false\"></xref> object can range from <xref href=\"System.TimeSpan.MinValue\" data-throw-if-not-resolved=\"false\"></xref> to <xref href=\"System.TimeSpan.MaxValue\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  example:
  - <p>The following example instantiates a <xref href="System.TimeSpan" data-throw-if-not-resolved="false"></xref> object that represents the difference between two dates. It then displays the <xref href="System.TimeSpan" data-throw-if-not-resolved="false"></xref> object's properties.</p>System.TimeSpan.Class#1
  syntax:
    content: >-
      [StructLayout(LayoutKind.Sequential)]

      public struct TimeSpan : IComparable, IComparable<TimeSpan>, IEquatable<TimeSpan>, IFormattable
    content.vb: >-
      <StructLayout(LayoutKind.Sequential)>

      Public Structure TimeSpan
          Implements IComparable, IComparable(Of TimeSpan), IEquatable(Of TimeSpan), IFormattable
  seealso:
  - type: System.DateTime
    commentId: T:System.DateTime
  - type: System.DateTimeOffset
    commentId: T:System.DateTimeOffset
  - type: System.Globalization.Calendar
    commentId: T:System.Globalization.Calendar
  implements:
  - System.IComparable
  - System.IComparable{System.TimeSpan}
  - System.IEquatable{System.TimeSpan}
  - System.IFormattable
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.ReferenceEquals(System.Object,System.Object)
  attributes:
  - type: System.Runtime.InteropServices.StructLayoutAttribute
    ctor: System.Runtime.InteropServices.StructLayoutAttribute.#ctor(System.Runtime.InteropServices.LayoutKind)
    arguments:
    - type: System.Runtime.InteropServices.LayoutKind
      value: 0
  modifiers.csharp:
  - public
  - struct
  modifiers.vb:
  - Public
  - Structure
- uid: System.TimeSpan.MaxValue
  commentId: F:System.TimeSpan.MaxValue
  id: MaxValue
  parent: System.TimeSpan
  langs:
  - csharp
  - vb
  name: MaxValue
  fullName: System.TimeSpan.MaxValue
  type: Field
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: MaxValue
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 1652
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Represents the maximum <xref href=\"System.TimeSpan\" data-throw-if-not-resolved=\"false\"></xref> value. This field is read-only.</p>\n"
  remarks: "\n<p>The value of this field is equivalent to <xref href=\"System.Int64.MaxValue\" data-throw-if-not-resolved=\"false\"></xref> ticks. The string representation of this value is positive 10675199.02:48:05.4775807, or slightly more than 10,675,199 days.</p>\n"
  example:
  - "\n<p>The following example references and displays the value of the <xref href=\"System.TimeSpan.MaxValue\" data-throw-if-not-resolved=\"false\"></xref> field.</p>System.TimeSpan.Fields#1"
  syntax:
    content: public static readonly TimeSpan MaxValue
    content.vb: Public Shared ReadOnly MaxValue As TimeSpan
    return:
      type: System.TimeSpan
  seealso:
  - type: System.Int64
    commentId: T:System.Int64
  - type: System.TimeSpan.MinValue
    commentId: F:System.TimeSpan.MinValue
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: System.TimeSpan.MinValue
  commentId: F:System.TimeSpan.MinValue
  id: MinValue
  parent: System.TimeSpan
  langs:
  - csharp
  - vb
  name: MinValue
  fullName: System.TimeSpan.MinValue
  type: Field
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: MinValue
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 1653
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Represents the minimum <xref href=\"System.TimeSpan\" data-throw-if-not-resolved=\"false\"></xref> value. This field is read-only.</p>\n"
  remarks: "\n<p>The value of this field is equivalent to <xref href=\"System.Int64.MinValue\" data-throw-if-not-resolved=\"false\"></xref> ticks. The string representation of this value is negative 10675199.02:48:05.4775808, or slightly more than negative 10,675,199 days.</p>\n"
  example:
  - "\n<p>The following example references and displays the value of the <xref href=\"System.TimeSpan.MinValue\" data-throw-if-not-resolved=\"false\"></xref> field.</p>System.TimeSpan.Fields#1"
  syntax:
    content: public static readonly TimeSpan MinValue
    content.vb: Public Shared ReadOnly MinValue As TimeSpan
    return:
      type: System.TimeSpan
  seealso:
  - type: System.Int64
    commentId: T:System.Int64
  - type: System.TimeSpan.MaxValue
    commentId: F:System.TimeSpan.MaxValue
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: System.TimeSpan.TicksPerDay
  commentId: F:System.TimeSpan.TicksPerDay
  id: TicksPerDay
  parent: System.TimeSpan
  langs:
  - csharp
  - vb
  name: TicksPerDay
  fullName: System.TimeSpan.TicksPerDay
  type: Field
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: TicksPerDay
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 1654
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Represents the number of ticks in 1 day. This field is constant.</p>\n"
  remarks: "\n<p>The value of this constant is 864 billion; that is, 864,000,000,000.</p>\n"
  example:
  - "\n<p>The following example references and displays the value of the <xref href=\"System.TimeSpan.TicksPerDay\" data-throw-if-not-resolved=\"false\"></xref> field.</p>System.TimeSpan.Fields#1"
  syntax:
    content: public const long TicksPerDay = 864000000000L
    content.vb: Public Const TicksPerDay As Long = 864000000000L
    return:
      type: System.Int64
  seealso:
  - type: System.Int64
    commentId: T:System.Int64
  - type: System.TimeSpan.TicksPerMillisecond
    commentId: F:System.TimeSpan.TicksPerMillisecond
  - type: System.TimeSpan.TicksPerSecond
    commentId: F:System.TimeSpan.TicksPerSecond
  - type: System.TimeSpan.TicksPerMinute
    commentId: F:System.TimeSpan.TicksPerMinute
  - type: System.TimeSpan.TicksPerHour
    commentId: F:System.TimeSpan.TicksPerHour
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.TimeSpan.TicksPerHour
  commentId: F:System.TimeSpan.TicksPerHour
  id: TicksPerHour
  parent: System.TimeSpan
  langs:
  - csharp
  - vb
  name: TicksPerHour
  fullName: System.TimeSpan.TicksPerHour
  type: Field
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: TicksPerHour
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 1655
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Represents the number of ticks in 1 hour. This field is constant.</p>\n"
  remarks: "\n<p>The value of this constant is 36 billion; that is, 36,000,000,000.</p>\n"
  example:
  - "\n<p>The following example references and displays the value of the <xref href=\"System.TimeSpan.TicksPerHour\" data-throw-if-not-resolved=\"false\"></xref> field.</p>System.TimeSpan.Fields#1"
  syntax:
    content: public const long TicksPerHour = 36000000000L
    content.vb: Public Const TicksPerHour As Long = 36000000000L
    return:
      type: System.Int64
  seealso:
  - type: System.Int64
    commentId: T:System.Int64
  - type: System.TimeSpan.TicksPerMillisecond
    commentId: F:System.TimeSpan.TicksPerMillisecond
  - type: System.TimeSpan.TicksPerSecond
    commentId: F:System.TimeSpan.TicksPerSecond
  - type: System.TimeSpan.TicksPerMinute
    commentId: F:System.TimeSpan.TicksPerMinute
  - type: System.TimeSpan.TicksPerDay
    commentId: F:System.TimeSpan.TicksPerDay
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.TimeSpan.TicksPerMillisecond
  commentId: F:System.TimeSpan.TicksPerMillisecond
  id: TicksPerMillisecond
  parent: System.TimeSpan
  langs:
  - csharp
  - vb
  name: TicksPerMillisecond
  fullName: System.TimeSpan.TicksPerMillisecond
  type: Field
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: TicksPerMillisecond
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 1656
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Represents the number of ticks in 1 millisecond. This field is constant.</p>\n"
  remarks: "\n<p>The value of this constant is 10 thousand; that is, 10,000.</p>\n"
  example:
  - "\n<p>The following example references and displays the value of the <xref href=\"System.TimeSpan.TicksPerMillisecond\" data-throw-if-not-resolved=\"false\"></xref> field.</p>System.TimeSpan.Fields#1"
  syntax:
    content: public const long TicksPerMillisecond = 10000L
    content.vb: Public Const TicksPerMillisecond As Long = 10000L
    return:
      type: System.Int64
  seealso:
  - type: System.Int64
    commentId: T:System.Int64
  - type: System.TimeSpan.TicksPerSecond
    commentId: F:System.TimeSpan.TicksPerSecond
  - type: System.TimeSpan.TicksPerMinute
    commentId: F:System.TimeSpan.TicksPerMinute
  - type: System.TimeSpan.TicksPerHour
    commentId: F:System.TimeSpan.TicksPerHour
  - type: System.TimeSpan.TicksPerDay
    commentId: F:System.TimeSpan.TicksPerDay
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.TimeSpan.TicksPerMinute
  commentId: F:System.TimeSpan.TicksPerMinute
  id: TicksPerMinute
  parent: System.TimeSpan
  langs:
  - csharp
  - vb
  name: TicksPerMinute
  fullName: System.TimeSpan.TicksPerMinute
  type: Field
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: TicksPerMinute
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 1657
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Represents the number of ticks in 1 minute. This field is constant.</p>\n"
  remarks: "\n<p>The value of this constant is 600 million; that is, 600,000,000.</p>\n"
  example:
  - "\n<p>The following example references and displays the value of the <xref href=\"System.TimeSpan.TicksPerMinute\" data-throw-if-not-resolved=\"false\"></xref> field.</p>System.TimeSpan.Fields#1"
  syntax:
    content: public const long TicksPerMinute = 600000000L
    content.vb: Public Const TicksPerMinute As Long = 600000000L
    return:
      type: System.Int64
  seealso:
  - type: System.Int64
    commentId: T:System.Int64
  - type: System.TimeSpan.TicksPerMillisecond
    commentId: F:System.TimeSpan.TicksPerMillisecond
  - type: System.TimeSpan.TicksPerSecond
    commentId: F:System.TimeSpan.TicksPerSecond
  - type: System.TimeSpan.TicksPerHour
    commentId: F:System.TimeSpan.TicksPerHour
  - type: System.TimeSpan.TicksPerDay
    commentId: F:System.TimeSpan.TicksPerDay
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.TimeSpan.TicksPerSecond
  commentId: F:System.TimeSpan.TicksPerSecond
  id: TicksPerSecond
  parent: System.TimeSpan
  langs:
  - csharp
  - vb
  name: TicksPerSecond
  fullName: System.TimeSpan.TicksPerSecond
  type: Field
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: TicksPerSecond
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 1658
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Represents the number of ticks in 1 second.</p>\n"
  remarks: "\n<p>The value of this constant is 10 million; that is, 10,000,000.</p>\n"
  example:
  - "\n<p>The following example references and displays the value of the <xref href=\"System.TimeSpan.TicksPerSecond\" data-throw-if-not-resolved=\"false\"></xref> field.</p>System.TimeSpan.Fields#1"
  syntax:
    content: public const long TicksPerSecond = 10000000L
    content.vb: Public Const TicksPerSecond As Long = 10000000L
    return:
      type: System.Int64
  seealso:
  - type: System.Int64
    commentId: T:System.Int64
  - type: System.TimeSpan.TicksPerMillisecond
    commentId: F:System.TimeSpan.TicksPerMillisecond
  - type: System.TimeSpan.TicksPerMinute
    commentId: F:System.TimeSpan.TicksPerMinute
  - type: System.TimeSpan.TicksPerHour
    commentId: F:System.TimeSpan.TicksPerHour
  - type: System.TimeSpan.TicksPerDay
    commentId: F:System.TimeSpan.TicksPerDay
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.TimeSpan.Zero
  commentId: F:System.TimeSpan.Zero
  id: Zero
  parent: System.TimeSpan
  langs:
  - csharp
  - vb
  name: Zero
  fullName: System.TimeSpan.Zero
  type: Field
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Zero
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 1659
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Represents the zero <xref href=\"System.TimeSpan\" data-throw-if-not-resolved=\"false\"></xref> value. This field is read-only.</p>\n"
  remarks: "\n<p>Because the value of the <xref href=\"System.TimeSpan.Zero\" data-throw-if-not-resolved=\"false\"></xref> field is a <xref href=\"System.TimeSpan\" data-throw-if-not-resolved=\"false\"></xref> object that represents a zero time value, you can compare it with other <xref href=\"System.TimeSpan\" data-throw-if-not-resolved=\"false\"></xref> objects to determine whether the latter represent positive, non-zero, or negative time intervals. You can also use this field to initialize a <xref href=\"System.TimeSpan\" data-throw-if-not-resolved=\"false\"></xref> object to a zero time value.</p>\n"
  example:
  - "\n<p>The following example references and displays the value of the <xref href=\"System.TimeSpan.Zero\" data-throw-if-not-resolved=\"false\"></xref> field.</p>System.TimeSpan.Fields#1"
  syntax:
    content: public static readonly TimeSpan Zero
    content.vb: Public Shared ReadOnly Zero As TimeSpan
    return:
      type: System.TimeSpan
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: System.TimeSpan.#ctor(System.Int32,System.Int32,System.Int32)
  commentId: M:System.TimeSpan.#ctor(System.Int32,System.Int32,System.Int32)
  id: '#ctor(System.Int32,System.Int32,System.Int32)'
  parent: System.TimeSpan
  langs:
  - csharp
  - vb
  name: TimeSpan(Int32, Int32, Int32)
  fullName: System.TimeSpan.TimeSpan(System.Int32, System.Int32, System.Int32)
  type: Constructor
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 1660
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.TimeSpan\" data-throw-if-not-resolved=\"false\"></xref> structure to a specified number of hours, minutes, and seconds.</p>\n"
  remarks: "\n<p>The specified <em>hours</em>, <em>minutes</em>, and <em>seconds</em> are converted to ticks, and that value initializes this instance.</p>\n"
  example:
  - "\n<p>The following example creates several <xref href=\"System.TimeSpan\" data-throw-if-not-resolved=\"false\"></xref> objects using the constructor overload that initializes a <xref href=\"System.TimeSpan\" data-throw-if-not-resolved=\"false\"></xref> to a specified number of hours, minutes, and seconds.</p>System.TimeSpan.Ctor#2"
  syntax:
    content: public TimeSpan(int hours, int minutes, int seconds)
    content.vb: Public Sub New(hours As Integer, minutes As Integer, seconds As Integer)
    parameters:
    - id: hours
      type: System.Int32
      description: "\n<p>Number of hours. </p>\n"
    - id: minutes
      type: System.Int32
      description: "\n<p>Number of minutes. </p>\n"
    - id: seconds
      type: System.Int32
      description: "\n<p>Number of seconds. </p>\n"
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>The parameters specify a <xref href=\"System.TimeSpan\" data-throw-if-not-resolved=\"false\"></xref> value less than <xref href=\"System.TimeSpan.MinValue\" data-throw-if-not-resolved=\"false\"></xref> or greater than <xref href=\"System.TimeSpan.MaxValue\" data-throw-if-not-resolved=\"false\"></xref>. </p>\n"
  seealso:
  - type: System.Int64
    commentId: T:System.Int64
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.TimeSpan.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)
  commentId: M:System.TimeSpan.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)
  id: '#ctor(System.Int32,System.Int32,System.Int32,System.Int32)'
  parent: System.TimeSpan
  langs:
  - csharp
  - vb
  name: TimeSpan(Int32, Int32, Int32, Int32)
  fullName: System.TimeSpan.TimeSpan(System.Int32, System.Int32, System.Int32, System.Int32)
  type: Constructor
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 1661
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.TimeSpan\" data-throw-if-not-resolved=\"false\"></xref> structure to a specified number of days, hours, minutes, and seconds.</p>\n"
  remarks: "\n<p>The specified <em>days</em>, <em>hours</em>, <em>minutes</em>, and <em>seconds</em> are converted to ticks, and that value initializes this instance.</p>\n"
  example:
  - "\n<p>The following example creates several <xref href=\"System.TimeSpan\" data-throw-if-not-resolved=\"false\"></xref> objects using the constructor overload that initializes a <xref href=\"System.TimeSpan\" data-throw-if-not-resolved=\"false\"></xref> to a specified number of days, hours, minutes, and seconds.</p>System.TimeSpan.Ctor#3"
  syntax:
    content: public TimeSpan(int days, int hours, int minutes, int seconds)
    content.vb: Public Sub New(days As Integer, hours As Integer, minutes As Integer, seconds As Integer)
    parameters:
    - id: days
      type: System.Int32
      description: "\n<p>Number of days. </p>\n"
    - id: hours
      type: System.Int32
      description: "\n<p>Number of hours. </p>\n"
    - id: minutes
      type: System.Int32
      description: "\n<p>Number of minutes. </p>\n"
    - id: seconds
      type: System.Int32
      description: "\n<p>Number of seconds. </p>\n"
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>The parameters specify a <xref href=\"System.TimeSpan\" data-throw-if-not-resolved=\"false\"></xref> value less than <xref href=\"System.TimeSpan.MinValue\" data-throw-if-not-resolved=\"false\"></xref> or greater than <xref href=\"System.TimeSpan.MaxValue\" data-throw-if-not-resolved=\"false\"></xref>. </p>\n"
  seealso:
  - type: System.Int64
    commentId: T:System.Int64
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.TimeSpan.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  commentId: M:System.TimeSpan.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  id: '#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)'
  parent: System.TimeSpan
  langs:
  - csharp
  - vb
  name: TimeSpan(Int32, Int32, Int32, Int32, Int32)
  fullName: System.TimeSpan.TimeSpan(System.Int32, System.Int32, System.Int32, System.Int32, System.Int32)
  type: Constructor
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 1662
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.TimeSpan\" data-throw-if-not-resolved=\"false\"></xref> structure to a specified number of days, hours, minutes, seconds, and milliseconds.</p>\n"
  remarks: "\n<p>The specified <em>days</em>, <em>hours</em>, <em>minutes</em>, <em>seconds</em>, and <em>milliseconds</em> are converted to ticks, and that value initializes this instance.</p>\n"
  example:
  - "\n<p>The following example creates several <xref href=\"System.TimeSpan\" data-throw-if-not-resolved=\"false\"></xref> objects using the constructor overload that initializes a <xref href=\"System.TimeSpan\" data-throw-if-not-resolved=\"false\"></xref> to a specified number of days, hours, minutes, seconds, and milliseconds.</p>System.TimeSpan.Ctor#4"
  syntax:
    content: public TimeSpan(int days, int hours, int minutes, int seconds, int milliseconds)
    content.vb: Public Sub New(days As Integer, hours As Integer, minutes As Integer, seconds As Integer, milliseconds As Integer)
    parameters:
    - id: days
      type: System.Int32
      description: "\n<p>Number of days. </p>\n"
    - id: hours
      type: System.Int32
      description: "\n<p>Number of hours. </p>\n"
    - id: minutes
      type: System.Int32
      description: "\n<p>Number of minutes. </p>\n"
    - id: seconds
      type: System.Int32
      description: "\n<p>Number of seconds. </p>\n"
    - id: milliseconds
      type: System.Int32
      description: "\n<p>Number of milliseconds. </p>\n"
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>The parameters specify a <xref href=\"System.TimeSpan\" data-throw-if-not-resolved=\"false\"></xref> value less than <xref href=\"System.TimeSpan.MinValue\" data-throw-if-not-resolved=\"false\"></xref> or greater than <xref href=\"System.TimeSpan.MaxValue\" data-throw-if-not-resolved=\"false\"></xref>. </p>\n"
  seealso:
  - type: System.Int64
    commentId: T:System.Int64
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.TimeSpan.#ctor(System.Int64)
  commentId: M:System.TimeSpan.#ctor(System.Int64)
  id: '#ctor(System.Int64)'
  parent: System.TimeSpan
  langs:
  - csharp
  - vb
  name: TimeSpan(Int64)
  fullName: System.TimeSpan.TimeSpan(System.Int64)
  type: Constructor
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 1663
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.TimeSpan\" data-throw-if-not-resolved=\"false\"></xref> structure to the specified number of ticks.</p>\n"
  remarks: "\n<p>A single tick represents one hundred nanoseconds or one ten-millionth of a second. There are 10,000 ticks in a millisecond. </p>\n"
  example:
  - "\n<p>The following example creates several <xref href=\"System.TimeSpan\" data-throw-if-not-resolved=\"false\"></xref> objects using the constructor overload that initializes a <xref href=\"System.TimeSpan\" data-throw-if-not-resolved=\"false\"></xref> to a specified number of ticks.</p>System.TimeSpan.Ctor#1"
  syntax:
    content: public TimeSpan(long ticks)
    content.vb: Public Sub New(ticks As Long)
    parameters:
    - id: ticks
      type: System.Int64
      description: "\n<p>A time period expressed in 100-nanosecond units. </p>\n"
  seealso:
  - type: System.TimeSpan.Ticks
    commentId: P:System.TimeSpan.Ticks
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.TimeSpan.Days
  commentId: P:System.TimeSpan.Days
  id: Days
  parent: System.TimeSpan
  langs:
  - csharp
  - vb
  name: Days
  fullName: System.TimeSpan.Days
  type: Property
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Days
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 1664
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Gets the days component of the time interval represented by the current <xref href=\"System.TimeSpan\" data-throw-if-not-resolved=\"false\"></xref> structure.</p>\n"
  remarks: "\n<p>A <xref href=\"System.TimeSpan\" data-throw-if-not-resolved=\"false\"></xref> value can be represented as [-]d.hh:mm:ss.ff, where the optional minus sign indicates a negative time interval, the d component is days, hh is hours as measured on a 24-hour clock, mm is minutes, ss is seconds, and ff is fractions of a second. The value of the <xref href=\"System.TimeSpan.Days\" data-throw-if-not-resolved=\"false\"></xref> property is the day component, d.</p>\n<p>The <xref href=\"System.TimeSpan.Days\" data-throw-if-not-resolved=\"false\"></xref> property represents whole days, whereas the <xref href=\"System.TimeSpan.TotalDays\" data-throw-if-not-resolved=\"false\"></xref> property represents whole and fractional days. </p>\n"
  example:
  - "\n<p>The following example creates several <xref href=\"System.TimeSpan\" data-throw-if-not-resolved=\"false\"></xref> objects and displays the <xref href=\"System.TimeSpan.Days\" data-throw-if-not-resolved=\"false\"></xref> property of each.</p>System.TimeSpan.Properties#1"
  syntax:
    content: public int Days { get; }
    content.vb: Public ReadOnly Property Days As Integer
    parameters: []
    return:
      type: System.Int32
      description: "\n<p>The day component of this instance. The return value can be positive or negative.</p>\n"
  seealso:
  - type: System.TimeSpan.TotalDays
    commentId: P:System.TimeSpan.TotalDays
  - type: System.TimeSpan.Ticks
    commentId: P:System.TimeSpan.Ticks
  - type: System.TimeSpan.Milliseconds
    commentId: P:System.TimeSpan.Milliseconds
  - type: System.TimeSpan.Seconds
    commentId: P:System.TimeSpan.Seconds
  - type: System.TimeSpan.Minutes
    commentId: P:System.TimeSpan.Minutes
  - type: System.TimeSpan.Hours
    commentId: P:System.TimeSpan.Hours
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.TimeSpan.Hours
  commentId: P:System.TimeSpan.Hours
  id: Hours
  parent: System.TimeSpan
  langs:
  - csharp
  - vb
  name: Hours
  fullName: System.TimeSpan.Hours
  type: Property
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Hours
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 1665
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Gets the hours component of the time interval represented by the current <xref href=\"System.TimeSpan\" data-throw-if-not-resolved=\"false\"></xref> structure.</p>\n"
  remarks: "\n<p>A <xref href=\"System.TimeSpan\" data-throw-if-not-resolved=\"false\"></xref> value can be represented as [-]d.hh:mm:ss.ff, where the optional minus sign indicates a negative time interval, the d component is days, hh is hours as measured on a 24-hour clock, mm is minutes, ss is seconds, and ff is fractions of a second. The value of the <xref href=\"System.TimeSpan.Hours\" data-throw-if-not-resolved=\"false\"></xref> property is the hours component, hh.</p>\n<p>The <xref href=\"System.TimeSpan.Hours\" data-throw-if-not-resolved=\"false\"></xref> property represents whole hours, whereas the <xref href=\"System.TimeSpan.TotalHours\" data-throw-if-not-resolved=\"false\"></xref> property represents whole and fractional hours. </p>\n"
  example:
  - "\n<p>The following example creates several <xref href=\"System.TimeSpan\" data-throw-if-not-resolved=\"false\"></xref> objects and displays the <xref href=\"System.TimeSpan.Hours\" data-throw-if-not-resolved=\"false\"></xref> property of each.</p>System.TimeSpan.Properties#1"
  syntax:
    content: public int Hours { get; }
    content.vb: Public ReadOnly Property Hours As Integer
    parameters: []
    return:
      type: System.Int32
      description: "\n<p>The hour component of the current <xref href=\"System.TimeSpan\" data-throw-if-not-resolved=\"false\"></xref> structure. The return value ranges from -23 through 23.</p>\n"
  seealso:
  - type: System.TimeSpan.TotalHours
    commentId: P:System.TimeSpan.TotalHours
  - type: System.TimeSpan.Ticks
    commentId: P:System.TimeSpan.Ticks
  - type: System.TimeSpan.Milliseconds
    commentId: P:System.TimeSpan.Milliseconds
  - type: System.TimeSpan.Seconds
    commentId: P:System.TimeSpan.Seconds
  - type: System.TimeSpan.Minutes
    commentId: P:System.TimeSpan.Minutes
  - type: System.TimeSpan.Days
    commentId: P:System.TimeSpan.Days
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.TimeSpan.Milliseconds
  commentId: P:System.TimeSpan.Milliseconds
  id: Milliseconds
  parent: System.TimeSpan
  langs:
  - csharp
  - vb
  name: Milliseconds
  fullName: System.TimeSpan.Milliseconds
  type: Property
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Milliseconds
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 1666
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Gets the milliseconds component of the time interval represented by the current <xref href=\"System.TimeSpan\" data-throw-if-not-resolved=\"false\"></xref> structure.</p>\n"
  remarks: "\n<p>A <xref href=\"System.TimeSpan\" data-throw-if-not-resolved=\"false\"></xref> value can be represented as [-]d.hh:mm:ss.ff, where the optional minus sign indicates a negative time interval, the d component is days, hh is hours as measured on a 24-hour clock, mm is minutes, ss is seconds, and ff is fractions of a second. The value of the <xref href=\"System.TimeSpan.Milliseconds\" data-throw-if-not-resolved=\"false\"></xref> property is the fractional second component, ff.</p>\n<p>The <xref href=\"System.TimeSpan.Milliseconds\" data-throw-if-not-resolved=\"false\"></xref> property represents whole milliseconds, whereas the <xref href=\"System.TimeSpan.TotalMilliseconds\" data-throw-if-not-resolved=\"false\"></xref> property represents whole and fractional milliseconds. </p>\n"
  example:
  - "\n<p>The following example creates several <xref href=\"System.TimeSpan\" data-throw-if-not-resolved=\"false\"></xref> objects and displays the <xref href=\"System.TimeSpan.Milliseconds\" data-throw-if-not-resolved=\"false\"></xref> property of each.</p>System.TimeSpan.Properties#1"
  syntax:
    content: public int Milliseconds { get; }
    content.vb: Public ReadOnly Property Milliseconds As Integer
    parameters: []
    return:
      type: System.Int32
      description: "\n<p>The millisecond component of the current <xref href=\"System.TimeSpan\" data-throw-if-not-resolved=\"false\"></xref> structure. The return value ranges from -999 through 999.</p>\n"
  seealso:
  - type: System.TimeSpan.TotalMilliseconds
    commentId: P:System.TimeSpan.TotalMilliseconds
  - type: System.TimeSpan.Ticks
    commentId: P:System.TimeSpan.Ticks
  - type: System.TimeSpan.Seconds
    commentId: P:System.TimeSpan.Seconds
  - type: System.TimeSpan.Minutes
    commentId: P:System.TimeSpan.Minutes
  - type: System.TimeSpan.Hours
    commentId: P:System.TimeSpan.Hours
  - type: System.TimeSpan.Days
    commentId: P:System.TimeSpan.Days
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.TimeSpan.Minutes
  commentId: P:System.TimeSpan.Minutes
  id: Minutes
  parent: System.TimeSpan
  langs:
  - csharp
  - vb
  name: Minutes
  fullName: System.TimeSpan.Minutes
  type: Property
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Minutes
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 1667
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Gets the minutes component of the time interval represented by the current <xref href=\"System.TimeSpan\" data-throw-if-not-resolved=\"false\"></xref> structure.</p>\n"
  remarks: "\n<p>A <xref href=\"System.TimeSpan\" data-throw-if-not-resolved=\"false\"></xref> value can be represented as [-]d.hh:mm:ss.ff, where the optional minus sign indicates a negative time interval, the d component is days, hh is hours as measured on a 24-hour clock, mm is minutes, ss is seconds, and ff is fractions of a second. The value of the <xref href=\"System.TimeSpan.Minutes\" data-throw-if-not-resolved=\"false\"></xref> property is the minute component, mm.</p>\n<p>The <xref href=\"System.TimeSpan.Minutes\" data-throw-if-not-resolved=\"false\"></xref> property represents whole minutes, whereas the <xref href=\"System.TimeSpan.TotalMinutes\" data-throw-if-not-resolved=\"false\"></xref> property represents whole and fractional minutes. </p>\n"
  example:
  - "\n<p>The following example creates several <xref href=\"System.TimeSpan\" data-throw-if-not-resolved=\"false\"></xref> objects and displays the <xref href=\"System.TimeSpan.Minutes\" data-throw-if-not-resolved=\"false\"></xref> property of each.</p>System.TimeSpan.Properties#1"
  syntax:
    content: public int Minutes { get; }
    content.vb: Public ReadOnly Property Minutes As Integer
    parameters: []
    return:
      type: System.Int32
      description: "\n<p>The minute component of the current <xref href=\"System.TimeSpan\" data-throw-if-not-resolved=\"false\"></xref> structure. The return value ranges from -59 through 59.</p>\n"
  seealso:
  - type: System.TimeSpan.TotalMinutes
    commentId: P:System.TimeSpan.TotalMinutes
  - type: System.TimeSpan.Ticks
    commentId: P:System.TimeSpan.Ticks
  - type: System.TimeSpan.Milliseconds
    commentId: P:System.TimeSpan.Milliseconds
  - type: System.TimeSpan.Seconds
    commentId: P:System.TimeSpan.Seconds
  - type: System.TimeSpan.Hours
    commentId: P:System.TimeSpan.Hours
  - type: System.TimeSpan.Days
    commentId: P:System.TimeSpan.Days
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.TimeSpan.Seconds
  commentId: P:System.TimeSpan.Seconds
  id: Seconds
  parent: System.TimeSpan
  langs:
  - csharp
  - vb
  name: Seconds
  fullName: System.TimeSpan.Seconds
  type: Property
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Seconds
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 1668
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Gets the seconds component of the time interval represented by the current <xref href=\"System.TimeSpan\" data-throw-if-not-resolved=\"false\"></xref> structure.</p>\n"
  remarks: "\n<p>A <xref href=\"System.TimeSpan\" data-throw-if-not-resolved=\"false\"></xref> value can be represented as [-]d.hh:mm:ss.ff, where the optional minus sign indicates a negative time interval, the d component is days, hh is hours as measured on a 24-hour clock, mm is minutes, ss is seconds, and ff is fractions of a second. The value of the <xref href=\"System.TimeSpan.Seconds\" data-throw-if-not-resolved=\"false\"></xref> property is the seconds component, ss.</p>\n<p>The <xref href=\"System.TimeSpan.Seconds\" data-throw-if-not-resolved=\"false\"></xref> property represents whole seconds, whereas the <xref href=\"System.TimeSpan.TotalSeconds\" data-throw-if-not-resolved=\"false\"></xref> property represents whole and fractional seconds. </p>\n"
  example:
  - "\n<p>The following example creates several <xref href=\"System.TimeSpan\" data-throw-if-not-resolved=\"false\"></xref> objects and displays the <xref href=\"System.TimeSpan.Seconds\" data-throw-if-not-resolved=\"false\"></xref> property of each.</p>System.TimeSpan.Properties#1"
  syntax:
    content: public int Seconds { get; }
    content.vb: Public ReadOnly Property Seconds As Integer
    parameters: []
    return:
      type: System.Int32
      description: "\n<p>The second component of the current <xref href=\"System.TimeSpan\" data-throw-if-not-resolved=\"false\"></xref> structure. The return value ranges from -59 through 59.</p>\n"
  seealso:
  - type: System.TimeSpan.TotalSeconds
    commentId: P:System.TimeSpan.TotalSeconds
  - type: System.TimeSpan.Ticks
    commentId: P:System.TimeSpan.Ticks
  - type: System.TimeSpan.Milliseconds
    commentId: P:System.TimeSpan.Milliseconds
  - type: System.TimeSpan.Minutes
    commentId: P:System.TimeSpan.Minutes
  - type: System.TimeSpan.Hours
    commentId: P:System.TimeSpan.Hours
  - type: System.TimeSpan.Days
    commentId: P:System.TimeSpan.Days
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.TimeSpan.Ticks
  commentId: P:System.TimeSpan.Ticks
  id: Ticks
  parent: System.TimeSpan
  langs:
  - csharp
  - vb
  name: Ticks
  fullName: System.TimeSpan.Ticks
  type: Property
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Ticks
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 1669
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Gets the number of ticks that represent the value of the current <xref href=\"System.TimeSpan\" data-throw-if-not-resolved=\"false\"></xref> structure.</p>\n"
  remarks: "\n<p>The smallest unit of time is the tick, which is equal to 100 nanoseconds or one ten-millionth of a second. There are 10,000 ticks in a millisecond. The value of the <xref href=\"System.TimeSpan.Ticks\" data-throw-if-not-resolved=\"false\"></xref> property can be negative or positive to represent a negative or positive time interval.</p>\n"
  example:
  - "\n<p>The following example creates several <xref href=\"System.TimeSpan\" data-throw-if-not-resolved=\"false\"></xref> objects and displays the <xref href=\"System.TimeSpan.Ticks\" data-throw-if-not-resolved=\"false\"></xref> property of each.</p>System.TimeSpan.Properties#1"
  syntax:
    content: public long Ticks { get; }
    content.vb: Public ReadOnly Property Ticks As Long
    parameters: []
    return:
      type: System.Int64
      description: "\n<p>The number of ticks contained in this instance.</p>\n"
  seealso:
  - type: System.Int64
    commentId: T:System.Int64
  - type: System.TimeSpan.Milliseconds
    commentId: P:System.TimeSpan.Milliseconds
  - type: System.TimeSpan.Seconds
    commentId: P:System.TimeSpan.Seconds
  - type: System.TimeSpan.Minutes
    commentId: P:System.TimeSpan.Minutes
  - type: System.TimeSpan.Hours
    commentId: P:System.TimeSpan.Hours
  - type: System.TimeSpan.Days
    commentId: P:System.TimeSpan.Days
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.TimeSpan.TotalDays
  commentId: P:System.TimeSpan.TotalDays
  id: TotalDays
  parent: System.TimeSpan
  langs:
  - csharp
  - vb
  name: TotalDays
  fullName: System.TimeSpan.TotalDays
  type: Property
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: TotalDays
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 1670
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Gets the value of the current <xref href=\"System.TimeSpan\" data-throw-if-not-resolved=\"false\"></xref> structure expressed in whole and fractional days.</p>\n"
  remarks: "\n<p>This property converts the value of this instance from ticks to days. This number might include whole and fractional days.</p>\n<p>The <xref href=\"System.TimeSpan.TotalDays\" data-throw-if-not-resolved=\"false\"></xref> property represents whole and fractional days, whereas the <xref href=\"System.TimeSpan.Days\" data-throw-if-not-resolved=\"false\"></xref> property represents whole days. </p>\n"
  example:
  - "\n<p>The following example instantiates a <xref href=\"System.TimeSpan\" data-throw-if-not-resolved=\"false\"></xref> object and displays the value of its <xref href=\"System.TimeSpan.TotalDays\" data-throw-if-not-resolved=\"false\"></xref> property. It also displays the value of each component (hours, minutes, seconds, milliseconds) that forms the fractional part of the value of its <xref href=\"System.TimeSpan.TotalDays\" data-throw-if-not-resolved=\"false\"></xref> property.</p>System.TimeSpan.TotalDays#1"
  syntax:
    content: public double TotalDays { get; }
    content.vb: Public ReadOnly Property TotalDays As Double
    parameters: []
    return:
      type: System.Double
      description: "\n<p>The total number of days represented by this instance.</p>\n"
  seealso:
  - type: System.TimeSpan.Days
    commentId: P:System.TimeSpan.Days
  - type: System.TimeSpan.TotalMilliseconds
    commentId: P:System.TimeSpan.TotalMilliseconds
  - type: System.TimeSpan.TotalSeconds
    commentId: P:System.TimeSpan.TotalSeconds
  - type: System.TimeSpan.TotalMinutes
    commentId: P:System.TimeSpan.TotalMinutes
  - type: System.TimeSpan.TotalHours
    commentId: P:System.TimeSpan.TotalHours
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.TimeSpan.TotalHours
  commentId: P:System.TimeSpan.TotalHours
  id: TotalHours
  parent: System.TimeSpan
  langs:
  - csharp
  - vb
  name: TotalHours
  fullName: System.TimeSpan.TotalHours
  type: Property
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: TotalHours
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 1671
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Gets the value of the current <xref href=\"System.TimeSpan\" data-throw-if-not-resolved=\"false\"></xref> structure expressed in whole and fractional hours.</p>\n"
  remarks: "\n<p>This property converts the value of this instance from ticks to hours. This number might include whole and fractional hours.</p>\n<p>The <xref href=\"System.TimeSpan.TotalHours\" data-throw-if-not-resolved=\"false\"></xref> property represents whole and fractional hours, whereas the <xref href=\"System.TimeSpan.Hours\" data-throw-if-not-resolved=\"false\"></xref> property represents whole hours. </p>\n"
  example:
  - "\n<p>The following example instantiates a <xref href=\"System.TimeSpan\" data-throw-if-not-resolved=\"false\"></xref> object and displays the value its <xref href=\"System.TimeSpan.TotalHours\" data-throw-if-not-resolved=\"false\"></xref> property. It also displays the value of each component (hours, minutes, seconds, and milliseconds) that forms the fractional part of the value of its <xref href=\"System.TimeSpan.TotalHours\" data-throw-if-not-resolved=\"false\"></xref> property.</p>System.TimeSpan.TotalHours#1"
  syntax:
    content: public double TotalHours { get; }
    content.vb: Public ReadOnly Property TotalHours As Double
    parameters: []
    return:
      type: System.Double
      description: "\n<p>The total number of hours represented by this instance.</p>\n"
  seealso:
  - type: System.TimeSpan.Hours
    commentId: P:System.TimeSpan.Hours
  - type: System.TimeSpan.TotalMilliseconds
    commentId: P:System.TimeSpan.TotalMilliseconds
  - type: System.TimeSpan.TotalSeconds
    commentId: P:System.TimeSpan.TotalSeconds
  - type: System.TimeSpan.TotalMinutes
    commentId: P:System.TimeSpan.TotalMinutes
  - type: System.TimeSpan.TotalDays
    commentId: P:System.TimeSpan.TotalDays
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.TimeSpan.TotalMilliseconds
  commentId: P:System.TimeSpan.TotalMilliseconds
  id: TotalMilliseconds
  parent: System.TimeSpan
  langs:
  - csharp
  - vb
  name: TotalMilliseconds
  fullName: System.TimeSpan.TotalMilliseconds
  type: Property
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: TotalMilliseconds
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 1672
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Gets the value of the current <xref href=\"System.TimeSpan\" data-throw-if-not-resolved=\"false\"></xref> structure expressed in whole and fractional milliseconds.</p>\n"
  remarks: "\n<p>This property converts the value of this instance from ticks to milliseconds. This number might include whole and fractional milliseconds.</p>\n<p>The <xref href=\"System.TimeSpan.TotalMilliseconds\" data-throw-if-not-resolved=\"false\"></xref> property represents whole and fractional milliseconds, whereas the <xref href=\"System.TimeSpan.Milliseconds\" data-throw-if-not-resolved=\"false\"></xref> property represents whole milliseconds. </p>\n"
  example:
  - "\n<p>The following example instantiates a <xref href=\"System.TimeSpan\" data-throw-if-not-resolved=\"false\"></xref> object and displays the value of its <xref href=\"System.TimeSpan.TotalMilliseconds\" data-throw-if-not-resolved=\"false\"></xref> property.</p>System.TimeSpan.TotalMilliseconds#1"
  syntax:
    content: public double TotalMilliseconds { get; }
    content.vb: Public ReadOnly Property TotalMilliseconds As Double
    parameters: []
    return:
      type: System.Double
      description: "\n<p>The total number of milliseconds represented by this instance.</p>\n"
  seealso:
  - type: System.TimeSpan.Milliseconds
    commentId: P:System.TimeSpan.Milliseconds
  - type: System.TimeSpan.TotalSeconds
    commentId: P:System.TimeSpan.TotalSeconds
  - type: System.TimeSpan.TotalMinutes
    commentId: P:System.TimeSpan.TotalMinutes
  - type: System.TimeSpan.TotalHours
    commentId: P:System.TimeSpan.TotalHours
  - type: System.TimeSpan.TotalDays
    commentId: P:System.TimeSpan.TotalDays
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.TimeSpan.TotalMinutes
  commentId: P:System.TimeSpan.TotalMinutes
  id: TotalMinutes
  parent: System.TimeSpan
  langs:
  - csharp
  - vb
  name: TotalMinutes
  fullName: System.TimeSpan.TotalMinutes
  type: Property
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: TotalMinutes
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 1673
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Gets the value of the current <xref href=\"System.TimeSpan\" data-throw-if-not-resolved=\"false\"></xref> structure expressed in whole and fractional minutes.</p>\n"
  remarks: "\n<p>This property converts the value of this instance from ticks to minutes. This number might include whole and fractional minutes.</p>\n<p>The <xref href=\"System.TimeSpan.TotalMinutes\" data-throw-if-not-resolved=\"false\"></xref> property represents whole and fractional minutes, whereas the <xref href=\"System.TimeSpan.Minutes\" data-throw-if-not-resolved=\"false\"></xref> property represents whole minutes. </p>\n"
  example:
  - "\n<p>The following example instantiates a <xref href=\"System.TimeSpan\" data-throw-if-not-resolved=\"false\"></xref> object and displays the value of its <xref href=\"System.TimeSpan.TotalMinutes\" data-throw-if-not-resolved=\"false\"></xref> property. It also displays the value of each component (seconds, milliseconds) that forms the fractional part of the value of its <xref href=\"System.TimeSpan.TotalMinutes\" data-throw-if-not-resolved=\"false\"></xref> property.</p>System.TimeSpan.TotalMinutes#1"
  syntax:
    content: public double TotalMinutes { get; }
    content.vb: Public ReadOnly Property TotalMinutes As Double
    parameters: []
    return:
      type: System.Double
      description: "\n<p>The total number of minutes represented by this instance.</p>\n"
  seealso:
  - type: System.TimeSpan.Minutes
    commentId: P:System.TimeSpan.Minutes
  - type: System.TimeSpan.TotalMilliseconds
    commentId: P:System.TimeSpan.TotalMilliseconds
  - type: System.TimeSpan.TotalSeconds
    commentId: P:System.TimeSpan.TotalSeconds
  - type: System.TimeSpan.TotalHours
    commentId: P:System.TimeSpan.TotalHours
  - type: System.TimeSpan.TotalDays
    commentId: P:System.TimeSpan.TotalDays
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.TimeSpan.TotalSeconds
  commentId: P:System.TimeSpan.TotalSeconds
  id: TotalSeconds
  parent: System.TimeSpan
  langs:
  - csharp
  - vb
  name: TotalSeconds
  fullName: System.TimeSpan.TotalSeconds
  type: Property
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: TotalSeconds
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 1674
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Gets the value of the current <xref href=\"System.TimeSpan\" data-throw-if-not-resolved=\"false\"></xref> structure expressed in whole and fractional seconds.</p>\n"
  remarks: "\n<p>This property converts the value of this instance from ticks to seconds. This number might include whole and fractional seconds.</p>\n<p>The <xref href=\"System.TimeSpan.TotalSeconds\" data-throw-if-not-resolved=\"false\"></xref> property represents whole and fractional seconds, whereas the <xref href=\"System.TimeSpan.Seconds\" data-throw-if-not-resolved=\"false\"></xref> property represents whole seconds. </p>\n"
  example:
  - "\n<p>The following example instantiates a <xref href=\"System.TimeSpan\" data-throw-if-not-resolved=\"false\"></xref> object and displays the value of its <xref href=\"System.TimeSpan.TotalSeconds\" data-throw-if-not-resolved=\"false\"></xref> property. It also displays the value of its milliseconds component, which forms the fractional part of the value of its <xref href=\"System.TimeSpan.TotalSeconds\" data-throw-if-not-resolved=\"false\"></xref> property.</p>System.TimeSpan.TotalSeconds#1"
  syntax:
    content: public double TotalSeconds { get; }
    content.vb: Public ReadOnly Property TotalSeconds As Double
    parameters: []
    return:
      type: System.Double
      description: "\n<p>The total number of seconds represented by this instance.</p>\n"
  seealso:
  - type: System.TimeSpan.Seconds
    commentId: P:System.TimeSpan.Seconds
  - type: System.TimeSpan.TotalMilliseconds
    commentId: P:System.TimeSpan.TotalMilliseconds
  - type: System.TimeSpan.TotalMinutes
    commentId: P:System.TimeSpan.TotalMinutes
  - type: System.TimeSpan.TotalHours
    commentId: P:System.TimeSpan.TotalHours
  - type: System.TimeSpan.TotalDays
    commentId: P:System.TimeSpan.TotalDays
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.TimeSpan.Add(System.TimeSpan)
  commentId: M:System.TimeSpan.Add(System.TimeSpan)
  id: Add(System.TimeSpan)
  parent: System.TimeSpan
  langs:
  - csharp
  - vb
  name: Add(TimeSpan)
  fullName: System.TimeSpan.Add(System.TimeSpan)
  type: Method
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Add
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 1675
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Returns a new <xref href=\"System.TimeSpan\" data-throw-if-not-resolved=\"false\"></xref> object whose value is the sum of the specified <xref href=\"System.TimeSpan\" data-throw-if-not-resolved=\"false\"></xref> object and this instance.</p>\n"
  remarks: "\n<p>The return value must be between <xref href=\"System.TimeSpan.MinValue\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"System.TimeSpan.MaxValue\" data-throw-if-not-resolved=\"false\"></xref>; otherwise, an exception is thrown.</p>\n<p>The return value is a new <xref href=\"System.TimeSpan\" data-throw-if-not-resolved=\"false\"></xref>; the original <xref href=\"System.TimeSpan\" data-throw-if-not-resolved=\"false\"></xref> is not modified.</p>\n"
  example:
  - "\n<p>The following example calls the <xref href=\"System.TimeSpan.Add(System.TimeSpan)\" data-throw-if-not-resolved=\"false\"></xref> method to add each element in an array of time intervals to a base <xref href=\"System.TimeSpan\" data-throw-if-not-resolved=\"false\"></xref> value. </p>System.TimeSpan.Add#1"
  syntax:
    content: public TimeSpan Add(TimeSpan ts)
    content.vb: Public Function Add(ts As TimeSpan) As TimeSpan
    parameters:
    - id: ts
      type: System.TimeSpan
      description: "\n<p>The time interval to add.</p>\n"
    return:
      type: System.TimeSpan
      description: "\n<p>A new object that represents the value of this instance plus the value of <em>ts</em>.</p>\n"
  exceptions:
  - type: System.OverflowException
    commentId: T:System.OverflowException
    description: "\n<p>The resulting <xref href=\"System.TimeSpan\" data-throw-if-not-resolved=\"false\"></xref> is less than <xref href=\"System.TimeSpan.MinValue\" data-throw-if-not-resolved=\"false\"></xref> or greater than <xref href=\"System.TimeSpan.MaxValue\" data-throw-if-not-resolved=\"false\"></xref>. </p>\n"
  seealso:
  - type: System.DateTime.Add(System.TimeSpan)
    commentId: M:System.DateTime.Add(System.TimeSpan)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.TimeSpan.Compare(System.TimeSpan,System.TimeSpan)
  commentId: M:System.TimeSpan.Compare(System.TimeSpan,System.TimeSpan)
  id: Compare(System.TimeSpan,System.TimeSpan)
  parent: System.TimeSpan
  langs:
  - csharp
  - vb
  name: Compare(TimeSpan, TimeSpan)
  fullName: System.TimeSpan.Compare(System.TimeSpan, System.TimeSpan)
  type: Method
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Compare
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 1676
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Compares two <xref href=\"System.TimeSpan\" data-throw-if-not-resolved=\"false\"></xref> values and returns an integer that indicates whether the first value is shorter than, equal to, or longer than the second value.</p>\n"
  example:
  - "\n<p>The following example uses the <xref href=\"System.TimeSpan.Compare(System.TimeSpan,System.TimeSpan)\" data-throw-if-not-resolved=\"false\"></xref> method to compare several <xref href=\"System.TimeSpan\" data-throw-if-not-resolved=\"false\"></xref> objects with a <xref href=\"System.TimeSpan\" data-throw-if-not-resolved=\"false\"></xref> object whose value is a 2-hour time interval.</p>System.TimeSpan.Compare#1"
  syntax:
    content: public static int Compare(TimeSpan t1, TimeSpan t2)
    content.vb: Public Shared Function Compare(t1 As TimeSpan, t2 As TimeSpan) As Integer
    parameters:
    - id: t1
      type: System.TimeSpan
      description: "\n<p>The first time interval to compare. </p>\n"
    - id: t2
      type: System.TimeSpan
      description: "\n<p>The second time interval to compare. </p>\n"
    return:
      type: System.Int32
      description: "\n<p>One of the following values.</p>\n<p>Value </p>\n<p>Description </p>\n<table><tbody><tr><td>\n<p>-1 </p>\n</td><td>\n<p>\n<em>t1</em> is shorter than <em>t2</em>. </p>\n</td></tr><tr><td>\n<p>0 </p>\n</td><td>\n<p>\n<em>t1</em> is equal to <em>t2</em>. </p>\n</td></tr><tr><td>\n<p>1 </p>\n</td><td>\n<p>\n<em>t1</em> is longer than <em>t2</em>. </p>\n</td></tr></tbody></table>\n"
  seealso:
  - type: System.TimeSpan.CompareTo(System.Object)
    commentId: M:System.TimeSpan.CompareTo(System.Object)
  - type: System.TimeSpan.Equals(System.Object)
    commentId: M:System.TimeSpan.Equals(System.Object)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.TimeSpan.CompareTo(System.TimeSpan)
  commentId: M:System.TimeSpan.CompareTo(System.TimeSpan)
  id: CompareTo(System.TimeSpan)
  parent: System.TimeSpan
  langs:
  - csharp
  - vb
  name: CompareTo(TimeSpan)
  fullName: System.TimeSpan.CompareTo(System.TimeSpan)
  type: Method
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CompareTo
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 1677
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Compares this instance to a specified <xref href=\"System.TimeSpan\" data-throw-if-not-resolved=\"false\"></xref> object and returns an integer that indicates whether this instance is shorter than, equal to, or longer than the <xref href=\"System.TimeSpan\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  remarks: "\n<p>This method implements the <xref href=\"System.IComparable`1\" data-throw-if-not-resolved=\"false\"></xref> interface and performs slightly better than the <xref href=\"System.TimeSpan.CompareTo(System.Object)\" data-throw-if-not-resolved=\"false\"></xref> method because it does not have to convert the <em>value</em> parameter to an object.</p>\n"
  example:
  - "\n<p>The following example demonstrates generic and nongeneric versions of the <see cref=\"Overload:System.TimeSpan.CompareTo\"></see> method for several value and reference types.</p>T.CompareTo#1"
  syntax:
    content: public int CompareTo(TimeSpan value)
    content.vb: Public Function CompareTo(value As TimeSpan) As Integer
    parameters:
    - id: value
      type: System.TimeSpan
      description: "\n<p>An object to compare to this instance.</p>\n"
    return:
      type: System.Int32
      description: "\n<p>A signed number indicating the relative values of this instance and <em>value</em>.</p>\n<p>Value </p>\n<p>Description </p>\n<table><tbody><tr><td>\n<p>A negative integer </p>\n</td><td>\n<p>This instance is shorter than <em>value</em>. </p>\n</td></tr><tr><td>\n<p>Zero </p>\n</td><td>\n<p>This instance is equal to <em>value</em>. </p>\n</td></tr><tr><td>\n<p>A positive integer </p>\n</td><td>\n<p>This instance is longer than <em>value</em>. </p>\n</td></tr></tbody></table>\n"
  implements:
  - System.IComparable{System.TimeSpan}.CompareTo(System.TimeSpan)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.TimeSpan.Duration
  commentId: M:System.TimeSpan.Duration
  id: Duration
  parent: System.TimeSpan
  langs:
  - csharp
  - vb
  name: Duration()
  fullName: System.TimeSpan.Duration()
  type: Method
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Duration
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 1678
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Returns a new <xref href=\"System.TimeSpan\" data-throw-if-not-resolved=\"false\"></xref> object whose value is the absolute value of the current <xref href=\"System.TimeSpan\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  example:
  - "\n<p>The following example applies the <xref href=\"System.TimeSpan.Duration\" data-throw-if-not-resolved=\"false\"></xref> method to several <xref href=\"System.TimeSpan\" data-throw-if-not-resolved=\"false\"></xref> objects.</p>System.TimeSpan.Dura_Nega_Unary#1"
  syntax:
    content: public TimeSpan Duration()
    content.vb: Public Function Duration As TimeSpan
    return:
      type: System.TimeSpan
      description: "\n<p>A new object whose value is the absolute value of the current <xref href=\"System.TimeSpan\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  exceptions:
  - type: System.OverflowException
    commentId: T:System.OverflowException
    description: "\n<p>The value of this instance is <xref href=\"System.TimeSpan.MinValue\" data-throw-if-not-resolved=\"false\"></xref>. </p>\n"
  seealso:
  - type: System.TimeSpan.Ticks
    commentId: P:System.TimeSpan.Ticks
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.TimeSpan.Equals(System.Object)
  commentId: M:System.TimeSpan.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.TimeSpan
  langs:
  - csharp
  - vb
  name: Equals(Object)
  fullName: System.TimeSpan.Equals(System.Object)
  type: Method
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Equals
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 1679
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Returns a value indicating whether this instance is equal to a specified object.</p>\n"
  example:
  - "\n<p>The following example compares several <xref href=\"System.TimeSpan\" data-throw-if-not-resolved=\"false\"></xref> and other objects to a reference <xref href=\"System.TimeSpan\" data-throw-if-not-resolved=\"false\"></xref> using the <xref href=\"System.TimeSpan.Equals(System.Object)\" data-throw-if-not-resolved=\"false\"></xref> method.</p>System.TimeSpan.Compare_Equals#1"
  syntax:
    content: public override bool Equals(object value)
    content.vb: Public Overrides Function Equals(value As Object) As Boolean
    parameters:
    - id: value
      type: System.Object
      description: "\n<p>An object to compare with this instance. </p>\n"
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if <em>value</em> is a <xref href=\"System.TimeSpan\" data-throw-if-not-resolved=\"false\"></xref> object that represents the same time interval as the current <xref href=\"System.TimeSpan\" data-throw-if-not-resolved=\"false\"></xref> structure; otherwise, <strong>false</strong>.</p>\n"
  overridden: System.ValueType.Equals(System.Object)
  seealso:
  - type: System.Object
    commentId: T:System.Object
  - type: System.TimeSpan.Compare(System.TimeSpan,System.TimeSpan)
    commentId: M:System.TimeSpan.Compare(System.TimeSpan,System.TimeSpan)
  - type: System.TimeSpan.CompareTo(System.Object)
    commentId: M:System.TimeSpan.CompareTo(System.Object)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.TimeSpan.Equals(System.TimeSpan)
  commentId: M:System.TimeSpan.Equals(System.TimeSpan)
  id: Equals(System.TimeSpan)
  parent: System.TimeSpan
  langs:
  - csharp
  - vb
  name: Equals(TimeSpan)
  fullName: System.TimeSpan.Equals(System.TimeSpan)
  type: Method
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Equals
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 1680
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Returns a value indicating whether this instance is equal to a specified <xref href=\"System.TimeSpan\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  remarks: "\n<p>This method implements the <xref href=\"System.IEquatable`1\" data-throw-if-not-resolved=\"false\"></xref> interface, and performs slightly better than <xref href=\"System.TimeSpan.Equals(System.Object)\" data-throw-if-not-resolved=\"false\"></xref> because it does not have to convert the <em>obj</em> parameter to an object.</p>\n"
  example:
  - "\n<p>The following example demonstrates generic and nongeneric versions of the <see cref=\"Overload:System.TimeSpan.CompareTo\"></see> method for several value and reference types.</p>T.CompareTo#1"
  syntax:
    content: public bool Equals(TimeSpan obj)
    content.vb: Public Function Equals(obj As TimeSpan) As Boolean
    parameters:
    - id: obj
      type: System.TimeSpan
      description: "\n<p>An object to compare with this instance. </p>\n"
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if <em>obj</em> represents the same time interval as this instance; otherwise, <strong>false</strong>.</p>\n"
  seealso:
  - type: System.TimeSpan.Equals(System.Object)
    commentId: M:System.TimeSpan.Equals(System.Object)
  implements:
  - System.IEquatable{System.TimeSpan}.Equals(System.TimeSpan)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.TimeSpan.Equals(System.TimeSpan,System.TimeSpan)
  commentId: M:System.TimeSpan.Equals(System.TimeSpan,System.TimeSpan)
  id: Equals(System.TimeSpan,System.TimeSpan)
  parent: System.TimeSpan
  langs:
  - csharp
  - vb
  name: Equals(TimeSpan, TimeSpan)
  fullName: System.TimeSpan.Equals(System.TimeSpan, System.TimeSpan)
  type: Method
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Equals
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 1681
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Returns a value that indicates whether two specified instances of <xref href=\"System.TimeSpan\" data-throw-if-not-resolved=\"false\"></xref> are equal.</p>\n"
  example:
  - "\n<p>The following example compares several <xref href=\"System.TimeSpan\" data-throw-if-not-resolved=\"false\"></xref> objects to a reference <xref href=\"System.TimeSpan\" data-throw-if-not-resolved=\"false\"></xref> object using the static <xref href=\"System.TimeSpan.Equals(System.TimeSpan,System.TimeSpan)\" data-throw-if-not-resolved=\"false\"></xref> method.</p>System.TimeSpan.Compare_Equals#2"
  syntax:
    content: public static bool Equals(TimeSpan t1, TimeSpan t2)
    content.vb: Public Shared Function Equals(t1 As TimeSpan, t2 As TimeSpan) As Boolean
    parameters:
    - id: t1
      type: System.TimeSpan
      description: "\n<p>The first time interval to compare. </p>\n"
    - id: t2
      type: System.TimeSpan
      description: "\n<p>The second time interval to compare. </p>\n"
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if the values of <em>t1</em> and <em>t2</em> are equal; otherwise, <strong>false</strong>.</p>\n"
  seealso:
  - type: System.Boolean
    commentId: T:System.Boolean
  - type: System.TimeSpan.Compare(System.TimeSpan,System.TimeSpan)
    commentId: M:System.TimeSpan.Compare(System.TimeSpan,System.TimeSpan)
  - type: System.TimeSpan.CompareTo(System.Object)
    commentId: M:System.TimeSpan.CompareTo(System.Object)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.TimeSpan.FromDays(System.Double)
  commentId: M:System.TimeSpan.FromDays(System.Double)
  id: FromDays(System.Double)
  parent: System.TimeSpan
  langs:
  - csharp
  - vb
  name: FromDays(Double)
  fullName: System.TimeSpan.FromDays(System.Double)
  type: Method
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: FromDays
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 1682
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Returns a <xref href=\"System.TimeSpan\" data-throw-if-not-resolved=\"false\"></xref> that represents a specified number of days, where the specification is accurate to the nearest millisecond.</p>\n"
  remarks: "\n<p>The <em>value</em> parameter is converted to milliseconds, which is converted to ticks, and that number of ticks is used to initialize the new <xref href=\"System.TimeSpan\" data-throw-if-not-resolved=\"false\"></xref>. Therefore, <em>value</em> will only be considered accurate to the nearest millisecond. Note that, because of the loss of precision of the <xref href=\"System.Double\" data-throw-if-not-resolved=\"false\"></xref> data type, this conversion can cause an <xref href=\"System.OverflowException\" data-throw-if-not-resolved=\"false\"></xref> for values that are near to but still in the range of either <xref href=\"System.TimeSpan.MinValue\" data-throw-if-not-resolved=\"false\"></xref> or <xref href=\"System.TimeSpan.MaxValue\" data-throw-if-not-resolved=\"false\"></xref>. For example, this causes an <xref href=\"System.OverflowException\" data-throw-if-not-resolved=\"false\"></xref> in the following attempt to instantiate a <xref href=\"System.TimeSpan\" data-throw-if-not-resolved=\"false\"></xref> object.</p>System.TimeSpan.FromMinutes#2"
  example:
  - "\n<p>The following example creates several <xref href=\"System.TimeSpan\" data-throw-if-not-resolved=\"false\"></xref> objects using the <xref href=\"System.TimeSpan.FromDays(System.Double)\" data-throw-if-not-resolved=\"false\"></xref> method.</p>System.TimeSpan.From#6"
  syntax:
    content: public static TimeSpan FromDays(double value)
    content.vb: Public Shared Function FromDays(value As Double) As TimeSpan
    parameters:
    - id: value
      type: System.Double
      description: "\n<p>A number of days, accurate to the nearest millisecond. </p>\n"
    return:
      type: System.TimeSpan
      description: "\n<p>An object that represents <em>value</em>.</p>\n"
  exceptions:
  - type: System.OverflowException
    commentId: T:System.OverflowException
    description: "\n<p>\n<em>value</em> is less than <xref href=\"System.TimeSpan.MinValue\" data-throw-if-not-resolved=\"false\"></xref> or greater than <xref href=\"System.TimeSpan.MaxValue\" data-throw-if-not-resolved=\"false\"></xref>. </p>\n<p>-or-</p>\n<p>\n<em>value</em> is <xref href=\"System.Double.PositiveInfinity\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>-or-</p>\n<p>\n<em>value</em> is <xref href=\"System.Double.NegativeInfinity\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<p>\n<em>value</em> is equal to <xref href=\"System.Double.NaN\" data-throw-if-not-resolved=\"false\"></xref>. </p>\n"
  seealso:
  - type: System.Double
    commentId: T:System.Double
  - type: System.TimeSpan.FromTicks(System.Int64)
    commentId: M:System.TimeSpan.FromTicks(System.Int64)
  - type: System.TimeSpan.FromMilliseconds(System.Double)
    commentId: M:System.TimeSpan.FromMilliseconds(System.Double)
  - type: System.TimeSpan.FromSeconds(System.Double)
    commentId: M:System.TimeSpan.FromSeconds(System.Double)
  - type: System.TimeSpan.FromMinutes(System.Double)
    commentId: M:System.TimeSpan.FromMinutes(System.Double)
  - type: System.TimeSpan.FromHours(System.Double)
    commentId: M:System.TimeSpan.FromHours(System.Double)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.TimeSpan.FromHours(System.Double)
  commentId: M:System.TimeSpan.FromHours(System.Double)
  id: FromHours(System.Double)
  parent: System.TimeSpan
  langs:
  - csharp
  - vb
  name: FromHours(Double)
  fullName: System.TimeSpan.FromHours(System.Double)
  type: Method
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: FromHours
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 1683
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Returns a <xref href=\"System.TimeSpan\" data-throw-if-not-resolved=\"false\"></xref> that represents a specified number of hours, where the specification is accurate to the nearest millisecond.</p>\n"
  remarks: "\n<p>The <em>value</em> parameter is converted to milliseconds, which is converted to ticks, and that number of ticks is used to initialize the new <xref href=\"System.TimeSpan\" data-throw-if-not-resolved=\"false\"></xref>. Therefore, <em>value</em> will only be considered accurate to the nearest millisecond. Note that, because of the loss of precision of the <xref href=\"System.Double\" data-throw-if-not-resolved=\"false\"></xref> data type, this conversion can generate an <xref href=\"System.OverflowException\" data-throw-if-not-resolved=\"false\"></xref> for values that are near to but still in the range of either <xref href=\"System.TimeSpan.MinValue\" data-throw-if-not-resolved=\"false\"></xref> or <xref href=\"System.TimeSpan.MaxValue\" data-throw-if-not-resolved=\"false\"></xref>. For example, this causes an <xref href=\"System.OverflowException\" data-throw-if-not-resolved=\"false\"></xref> in the following attempt to instantiate a <xref href=\"System.TimeSpan\" data-throw-if-not-resolved=\"false\"></xref> object.</p>System.TimeSpan.FromMinutes#3<p></p>"
  example:
  - "\n<p>The following example creates several <xref href=\"System.TimeSpan\" data-throw-if-not-resolved=\"false\"></xref> objects using the <xref href=\"System.TimeSpan.FromHours(System.Double)\" data-throw-if-not-resolved=\"false\"></xref> method.</p>System.TimeSpan.From#5"
  syntax:
    content: public static TimeSpan FromHours(double value)
    content.vb: Public Shared Function FromHours(value As Double) As TimeSpan
    parameters:
    - id: value
      type: System.Double
      description: "\n<p>A number of hours accurate to the nearest millisecond. </p>\n"
    return:
      type: System.TimeSpan
      description: "\n<p>An object that represents <em>value</em>.</p>\n"
  exceptions:
  - type: System.OverflowException
    commentId: T:System.OverflowException
    description: "\n<p>\n<em>value</em> is less than <xref href=\"System.TimeSpan.MinValue\" data-throw-if-not-resolved=\"false\"></xref> or greater than <xref href=\"System.TimeSpan.MaxValue\" data-throw-if-not-resolved=\"false\"></xref>. </p>\n<p>-or-</p>\n<p>\n<em>value</em> is <xref href=\"System.Double.PositiveInfinity\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>-or-</p>\n<p>\n<em>value</em> is <xref href=\"System.Double.NegativeInfinity\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<p>\n<em>value</em> is equal to <xref href=\"System.Double.NaN\" data-throw-if-not-resolved=\"false\"></xref>. </p>\n"
  seealso:
  - type: System.Double
    commentId: T:System.Double
  - type: System.TimeSpan.FromTicks(System.Int64)
    commentId: M:System.TimeSpan.FromTicks(System.Int64)
  - type: System.TimeSpan.FromMilliseconds(System.Double)
    commentId: M:System.TimeSpan.FromMilliseconds(System.Double)
  - type: System.TimeSpan.FromSeconds(System.Double)
    commentId: M:System.TimeSpan.FromSeconds(System.Double)
  - type: System.TimeSpan.FromMinutes(System.Double)
    commentId: M:System.TimeSpan.FromMinutes(System.Double)
  - type: System.TimeSpan.FromDays(System.Double)
    commentId: M:System.TimeSpan.FromDays(System.Double)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.TimeSpan.FromMilliseconds(System.Double)
  commentId: M:System.TimeSpan.FromMilliseconds(System.Double)
  id: FromMilliseconds(System.Double)
  parent: System.TimeSpan
  langs:
  - csharp
  - vb
  name: FromMilliseconds(Double)
  fullName: System.TimeSpan.FromMilliseconds(System.Double)
  type: Method
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: FromMilliseconds
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 1684
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Returns a <xref href=\"System.TimeSpan\" data-throw-if-not-resolved=\"false\"></xref> that represents a specified number of milliseconds.</p>\n"
  remarks: "\n<p>The <em>value</em> parameter is converted to ticks, and that number of ticks is used to initialize the new <xref href=\"System.TimeSpan\" data-throw-if-not-resolved=\"false\"></xref>. Therefore, <em>value</em> will only be considered accurate to the nearest millisecond. Note that, because of the loss of precision of the <xref href=\"System.Double\" data-throw-if-not-resolved=\"false\"></xref> data type, this conversion can generate an <xref href=\"System.OverflowException\" data-throw-if-not-resolved=\"false\"></xref> for values that are near to but still in the range of either <xref href=\"System.TimeSpan.MinValue\" data-throw-if-not-resolved=\"false\"></xref> or <xref href=\"System.TimeSpan.MaxValue\" data-throw-if-not-resolved=\"false\"></xref>. For example, this causes an <xref href=\"System.OverflowException\" data-throw-if-not-resolved=\"false\"></xref> in the following attempt to instantiate a <xref href=\"System.TimeSpan\" data-throw-if-not-resolved=\"false\"></xref> object.</p>System.TimeSpan.FromMinutes#4<p></p>"
  example:
  - "\n<p>The following example creates several <xref href=\"System.TimeSpan\" data-throw-if-not-resolved=\"false\"></xref> objects by using the <xref href=\"System.TimeSpan.FromMilliseconds(System.Double)\" data-throw-if-not-resolved=\"false\"></xref> method.</p>System.TimeSpan.From#2"
  syntax:
    content: public static TimeSpan FromMilliseconds(double value)
    content.vb: Public Shared Function FromMilliseconds(value As Double) As TimeSpan
    parameters:
    - id: value
      type: System.Double
      description: "\n<p>A number of milliseconds. </p>\n"
    return:
      type: System.TimeSpan
      description: "\n<p>An object that represents <em>value</em>.</p>\n"
  exceptions:
  - type: System.OverflowException
    commentId: T:System.OverflowException
    description: "\n<p>\n<em>value</em> is less than <xref href=\"System.TimeSpan.MinValue\" data-throw-if-not-resolved=\"false\"></xref> or greater than <xref href=\"System.TimeSpan.MaxValue\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>-or-</p>\n<p>\n<em>value</em> is <xref href=\"System.Double.PositiveInfinity\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>-or-</p>\n<p>\n<em>value</em> is <xref href=\"System.Double.NegativeInfinity\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<p>\n<em>value</em> is equal to <xref href=\"System.Double.NaN\" data-throw-if-not-resolved=\"false\"></xref>. </p>\n"
  seealso:
  - type: System.Double
    commentId: T:System.Double
  - type: System.TimeSpan.FromTicks(System.Int64)
    commentId: M:System.TimeSpan.FromTicks(System.Int64)
  - type: System.TimeSpan.FromSeconds(System.Double)
    commentId: M:System.TimeSpan.FromSeconds(System.Double)
  - type: System.TimeSpan.FromMinutes(System.Double)
    commentId: M:System.TimeSpan.FromMinutes(System.Double)
  - type: System.TimeSpan.FromHours(System.Double)
    commentId: M:System.TimeSpan.FromHours(System.Double)
  - type: System.TimeSpan.FromDays(System.Double)
    commentId: M:System.TimeSpan.FromDays(System.Double)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.TimeSpan.FromMinutes(System.Double)
  commentId: M:System.TimeSpan.FromMinutes(System.Double)
  id: FromMinutes(System.Double)
  parent: System.TimeSpan
  langs:
  - csharp
  - vb
  name: FromMinutes(Double)
  fullName: System.TimeSpan.FromMinutes(System.Double)
  type: Method
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: FromMinutes
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 1685
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Returns a <xref href=\"System.TimeSpan\" data-throw-if-not-resolved=\"false\"></xref> that represents a specified number of minutes, where the specification is accurate to the nearest millisecond.</p>\n"
  remarks: "\n<p>The <em>value</em> parameter is converted to milliseconds, which is converted to ticks, and that number of ticks is used to initialize the new <xref href=\"System.TimeSpan\" data-throw-if-not-resolved=\"false\"></xref>. Therefore, <em>value</em> will only be considered accurate to the nearest millisecond. Note that, because of the loss of precision of the <xref href=\"System.Double\" data-throw-if-not-resolved=\"false\"></xref> data type, this conversion can generate an <xref href=\"System.OverflowException\" data-throw-if-not-resolved=\"false\"></xref> for values that are near to but still in the range of either <xref href=\"System.TimeSpan.MinValue\" data-throw-if-not-resolved=\"false\"></xref> or <xref href=\"System.TimeSpan.MaxValue\" data-throw-if-not-resolved=\"false\"></xref>. For example, this causes an <xref href=\"System.OverflowException\" data-throw-if-not-resolved=\"false\"></xref> in the following attempt to instantiate a <xref href=\"System.TimeSpan\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n<p></p>System.TimeSpan.FromMinutes#1"
  example:
  - "\n<p>The following example creates several <xref href=\"System.TimeSpan\" data-throw-if-not-resolved=\"false\"></xref> objects using the <xref href=\"System.TimeSpan.FromMinutes(System.Double)\" data-throw-if-not-resolved=\"false\"></xref> method.</p>System.TimeSpan.From#4"
  syntax:
    content: public static TimeSpan FromMinutes(double value)
    content.vb: Public Shared Function FromMinutes(value As Double) As TimeSpan
    parameters:
    - id: value
      type: System.Double
      description: "\n<p>A number of minutes, accurate to the nearest millisecond. </p>\n"
    return:
      type: System.TimeSpan
      description: "\n<p>An object that represents <em>value</em>.</p>\n"
  exceptions:
  - type: System.OverflowException
    commentId: T:System.OverflowException
    description: "\n<p>\n<em>value</em> is less than <xref href=\"System.TimeSpan.MinValue\" data-throw-if-not-resolved=\"false\"></xref> or greater than <xref href=\"System.TimeSpan.MaxValue\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>-or-</p>\n<p>\n<em>value</em> is <xref href=\"System.Double.PositiveInfinity\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>-or-</p>\n<p>\n<em>value</em> is <xref href=\"System.Double.NegativeInfinity\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<p>\n<em>value</em> is equal to <xref href=\"System.Double.NaN\" data-throw-if-not-resolved=\"false\"></xref>. </p>\n"
  seealso:
  - type: System.Double
    commentId: T:System.Double
  - type: System.TimeSpan.FromTicks(System.Int64)
    commentId: M:System.TimeSpan.FromTicks(System.Int64)
  - type: System.TimeSpan.FromMilliseconds(System.Double)
    commentId: M:System.TimeSpan.FromMilliseconds(System.Double)
  - type: System.TimeSpan.FromSeconds(System.Double)
    commentId: M:System.TimeSpan.FromSeconds(System.Double)
  - type: System.TimeSpan.FromHours(System.Double)
    commentId: M:System.TimeSpan.FromHours(System.Double)
  - type: System.TimeSpan.FromDays(System.Double)
    commentId: M:System.TimeSpan.FromDays(System.Double)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.TimeSpan.FromSeconds(System.Double)
  commentId: M:System.TimeSpan.FromSeconds(System.Double)
  id: FromSeconds(System.Double)
  parent: System.TimeSpan
  langs:
  - csharp
  - vb
  name: FromSeconds(Double)
  fullName: System.TimeSpan.FromSeconds(System.Double)
  type: Method
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: FromSeconds
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 1686
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Returns a <xref href=\"System.TimeSpan\" data-throw-if-not-resolved=\"false\"></xref> that represents a specified number of seconds, where the specification is accurate to the nearest millisecond.</p>\n"
  remarks: "\n<p>The <em>value</em> parameter is converted to milliseconds, which is converted to ticks, and that number of ticks is used to intialize the new <xref href=\"System.TimeSpan\" data-throw-if-not-resolved=\"false\"></xref>. Therefore, <em>value</em> will only be considered accurate to the nearest millisecond. Note that, because of the loss of precision of the <xref href=\"System.Double\" data-throw-if-not-resolved=\"false\"></xref> data type, this can generate an <xref href=\"System.OverflowException\" data-throw-if-not-resolved=\"false\"></xref> for values that are near but still in the range of either  <xref href=\"System.TimeSpan.MinValue\" data-throw-if-not-resolved=\"false\"></xref> or <xref href=\"System.TimeSpan.MaxValue\" data-throw-if-not-resolved=\"false\"></xref>, This is the cause of an <xref href=\"System.OverflowException\" data-throw-if-not-resolved=\"false\"></xref>, for example, in the following attempt to instantiate a <xref href=\"System.TimeSpan\" data-throw-if-not-resolved=\"false\"></xref> object.</p>System.TimeSpan.FromMinutes#5<p></p>"
  example:
  - "\n<p>The following example creates several <xref href=\"System.TimeSpan\" data-throw-if-not-resolved=\"false\"></xref> objects using the <xref href=\"System.TimeSpan.FromSeconds(System.Double)\" data-throw-if-not-resolved=\"false\"></xref> method.</p>System.TimeSpan.From#3"
  syntax:
    content: public static TimeSpan FromSeconds(double value)
    content.vb: Public Shared Function FromSeconds(value As Double) As TimeSpan
    parameters:
    - id: value
      type: System.Double
      description: "\n<p>A number of seconds, accurate to the nearest millisecond. </p>\n"
    return:
      type: System.TimeSpan
      description: "\n<p>An object that represents <em>value</em>.</p>\n"
  exceptions:
  - type: System.OverflowException
    commentId: T:System.OverflowException
    description: "\n<p>\n<em>value</em> is less than <xref href=\"System.TimeSpan.MinValue\" data-throw-if-not-resolved=\"false\"></xref> or greater than <xref href=\"System.TimeSpan.MaxValue\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>-or-</p>\n<p>\n<em>value</em> is <xref href=\"System.Double.PositiveInfinity\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>-or-</p>\n<p>\n<em>value</em> is <xref href=\"System.Double.NegativeInfinity\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<p>\n<em>value</em> is equal to <xref href=\"System.Double.NaN\" data-throw-if-not-resolved=\"false\"></xref>. </p>\n"
  seealso:
  - type: System.Double
    commentId: T:System.Double
  - type: System.TimeSpan.FromTicks(System.Int64)
    commentId: M:System.TimeSpan.FromTicks(System.Int64)
  - type: System.TimeSpan.FromMilliseconds(System.Double)
    commentId: M:System.TimeSpan.FromMilliseconds(System.Double)
  - type: System.TimeSpan.FromMinutes(System.Double)
    commentId: M:System.TimeSpan.FromMinutes(System.Double)
  - type: System.TimeSpan.FromHours(System.Double)
    commentId: M:System.TimeSpan.FromHours(System.Double)
  - type: System.TimeSpan.FromDays(System.Double)
    commentId: M:System.TimeSpan.FromDays(System.Double)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.TimeSpan.FromTicks(System.Int64)
  commentId: M:System.TimeSpan.FromTicks(System.Int64)
  id: FromTicks(System.Int64)
  parent: System.TimeSpan
  langs:
  - csharp
  - vb
  name: FromTicks(Int64)
  fullName: System.TimeSpan.FromTicks(System.Int64)
  type: Method
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: FromTicks
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 1687
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Returns a <xref href=\"System.TimeSpan\" data-throw-if-not-resolved=\"false\"></xref> that represents a specified time, where the specification is in units of ticks.</p>\n"
  remarks: "\n<p>This is a convenience method with the same behavior as the <xref href=\"System.TimeSpan.#ctor(System.Int64)\" data-throw-if-not-resolved=\"false\"></xref> constructor. A single tick represents one hundred nanoseconds or one ten-millionth of a second. There are 10,000 ticks in a millisecond. </p>\n"
  example:
  - "\n<p>The following example creates several <xref href=\"System.TimeSpan\" data-throw-if-not-resolved=\"false\"></xref> objects using the <xref href=\"System.TimeSpan.FromTicks(System.Int64)\" data-throw-if-not-resolved=\"false\"></xref> method.</p>System.TimeSpan.From#1"
  syntax:
    content: public static TimeSpan FromTicks(long value)
    content.vb: Public Shared Function FromTicks(value As Long) As TimeSpan
    parameters:
    - id: value
      type: System.Int64
      description: "\n<p>A number of ticks that represent a time. </p>\n"
    return:
      type: System.TimeSpan
      description: "\n<p>An object that represents <em>value</em>.</p>\n"
  seealso:
  - type: System.Int64
    commentId: T:System.Int64
  - type: System.TimeSpan.FromMilliseconds(System.Double)
    commentId: M:System.TimeSpan.FromMilliseconds(System.Double)
  - type: System.TimeSpan.FromSeconds(System.Double)
    commentId: M:System.TimeSpan.FromSeconds(System.Double)
  - type: System.TimeSpan.FromMinutes(System.Double)
    commentId: M:System.TimeSpan.FromMinutes(System.Double)
  - type: System.TimeSpan.FromHours(System.Double)
    commentId: M:System.TimeSpan.FromHours(System.Double)
  - type: System.TimeSpan.FromDays(System.Double)
    commentId: M:System.TimeSpan.FromDays(System.Double)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.TimeSpan.GetHashCode
  commentId: M:System.TimeSpan.GetHashCode
  id: GetHashCode
  parent: System.TimeSpan
  langs:
  - csharp
  - vb
  name: GetHashCode()
  fullName: System.TimeSpan.GetHashCode()
  type: Method
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetHashCode
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 1688
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Returns a hash code for this instance.</p>\n"
  remarks: "\n<p>Two <xref href=\"System.TimeSpan\" data-throw-if-not-resolved=\"false\"></xref> objects might have the same hash code even though they represent different time values.</p>\n"
  example:
  - "\n<p>The following example generates the hash codes of several <xref href=\"System.TimeSpan\" data-throw-if-not-resolved=\"false\"></xref> objects using the <xref href=\"System.TimeSpan.GetHashCode\" data-throw-if-not-resolved=\"false\"></xref> method.</p>System.TimeSpan.GetHashCode#1"
  syntax:
    content: public override int GetHashCode()
    content.vb: Public Overrides Function GetHashCode As Integer
    return:
      type: System.Int32
      description: "\n<p>A 32-bit signed integer hash code.</p>\n"
  overridden: System.ValueType.GetHashCode
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.TimeSpan.Negate
  commentId: M:System.TimeSpan.Negate
  id: Negate
  parent: System.TimeSpan
  langs:
  - csharp
  - vb
  name: Negate()
  fullName: System.TimeSpan.Negate()
  type: Method
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Negate
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 1689
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Returns a new <xref href=\"System.TimeSpan\" data-throw-if-not-resolved=\"false\"></xref> object whose value is the negated value of this instance.</p>\n"
  example:
  - "\n<p>The following example applies the <xref href=\"System.TimeSpan.Negate\" data-throw-if-not-resolved=\"false\"></xref> method to several <xref href=\"System.TimeSpan\" data-throw-if-not-resolved=\"false\"></xref> objects.</p>System.TimeSpan.Dura_Nega_Unary#1"
  syntax:
    content: public TimeSpan Negate()
    content.vb: Public Function Negate As TimeSpan
    return:
      type: System.TimeSpan
      description: "\n<p>A new object with the same numeric value as this instance, but with the opposite sign.</p>\n"
  exceptions:
  - type: System.OverflowException
    commentId: T:System.OverflowException
    description: "\n<p>The negated value of this instance cannot be represented by a <xref href=\"System.TimeSpan\" data-throw-if-not-resolved=\"false\"></xref>; that is, the value of this instance is <xref href=\"System.TimeSpan.MinValue\" data-throw-if-not-resolved=\"false\"></xref>. </p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.TimeSpan.op_Addition(System.TimeSpan,System.TimeSpan)
  commentId: M:System.TimeSpan.op_Addition(System.TimeSpan,System.TimeSpan)
  id: op_Addition(System.TimeSpan,System.TimeSpan)
  parent: System.TimeSpan
  langs:
  - csharp
  - vb
  name: Addition(TimeSpan, TimeSpan)
  fullName: System.TimeSpan.Addition(System.TimeSpan, System.TimeSpan)
  type: Operator
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_Addition
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 1690
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Adds two specified <xref href=\"System.TimeSpan\" data-throw-if-not-resolved=\"false\"></xref> instances.</p>\n"
  remarks: "\n<p>The <xref href=\"System.TimeSpan.op_Addition(System.TimeSpan,System.TimeSpan)\" data-throw-if-not-resolved=\"false\"></xref> method defines the addition operator for <xref href=\"System.TimeSpan\" data-throw-if-not-resolved=\"false\"></xref> values. It enables code such as the following:</p>System.TimeSpan.Operators#1<p>Languages that do not support custom operators can call the <xref href=\"System.TimeSpan.Add(System.TimeSpan)\" data-throw-if-not-resolved=\"false\"></xref> method instead.</p>"
  example:
  - 
  syntax:
    content: public static TimeSpan operator +(TimeSpan t1, TimeSpan t2)
    content.vb: Public Shared Operator +(t1 As TimeSpan, t2 As TimeSpan) As TimeSpan
    parameters:
    - id: t1
      type: System.TimeSpan
      description: "\n<p>The first time interval to add. </p>\n"
    - id: t2
      type: System.TimeSpan
      description: "\n<p>The second time interval to add.</p>\n"
    return:
      type: System.TimeSpan
      description: "\n<p>An object whose value is the sum of the values of <em>t1</em> and <em>t2</em>.</p>\n"
  exceptions:
  - type: System.OverflowException
    commentId: T:System.OverflowException
    description: "\n<p>The resulting <xref href=\"System.TimeSpan\" data-throw-if-not-resolved=\"false\"></xref> is less than <xref href=\"System.TimeSpan.MinValue\" data-throw-if-not-resolved=\"false\"></xref> or greater than <xref href=\"System.TimeSpan.MaxValue\" data-throw-if-not-resolved=\"false\"></xref>. </p>\n"
  seealso:
  - type: System.TimeSpan.Add(System.TimeSpan)
    commentId: M:System.TimeSpan.Add(System.TimeSpan)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.TimeSpan.op_Equality(System.TimeSpan,System.TimeSpan)
  commentId: M:System.TimeSpan.op_Equality(System.TimeSpan,System.TimeSpan)
  id: op_Equality(System.TimeSpan,System.TimeSpan)
  parent: System.TimeSpan
  langs:
  - csharp
  - vb
  name: Equality(TimeSpan, TimeSpan)
  fullName: System.TimeSpan.Equality(System.TimeSpan, System.TimeSpan)
  type: Operator
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_Equality
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 1691
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Indicates whether two <xref href=\"System.TimeSpan\" data-throw-if-not-resolved=\"false\"></xref> instances are equal.</p>\n"
  example:
  - "\n<p>The following example compares several <xref href=\"System.TimeSpan\" data-throw-if-not-resolved=\"false\"></xref> objects to a reference <xref href=\"System.TimeSpan\" data-throw-if-not-resolved=\"false\"></xref> using the <xref href=\"System.TimeSpan.op_Equality(System.TimeSpan,System.TimeSpan)\" data-throw-if-not-resolved=\"false\"></xref> operator.</p>System.TimeSpan.RelationalOps#1"
  syntax:
    content: public static bool operator ==(TimeSpan t1, TimeSpan t2)
    content.vb: Public Shared Operator =(t1 As TimeSpan, t2 As TimeSpan) As Boolean
    parameters:
    - id: t1
      type: System.TimeSpan
      description: "\n<p>The first time interval to compare. </p>\n"
    - id: t2
      type: System.TimeSpan
      description: "\n<p>The second time interval to compare. </p>\n"
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if the values of <em>t1</em> and <em>t2</em> are equal; otherwise, <strong>false</strong>.</p>\n"
  seealso:
  - type: System.TimeSpan.Equals(System.Object)
    commentId: M:System.TimeSpan.Equals(System.Object)
  - type: System.TimeSpan.Compare(System.TimeSpan,System.TimeSpan)
    commentId: M:System.TimeSpan.Compare(System.TimeSpan,System.TimeSpan)
  - type: System.TimeSpan.CompareTo(System.Object)
    commentId: M:System.TimeSpan.CompareTo(System.Object)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.TimeSpan.op_GreaterThan(System.TimeSpan,System.TimeSpan)
  commentId: M:System.TimeSpan.op_GreaterThan(System.TimeSpan,System.TimeSpan)
  id: op_GreaterThan(System.TimeSpan,System.TimeSpan)
  parent: System.TimeSpan
  langs:
  - csharp
  - vb
  name: GreaterThan(TimeSpan, TimeSpan)
  fullName: System.TimeSpan.GreaterThan(System.TimeSpan, System.TimeSpan)
  type: Operator
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_GreaterThan
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 1692
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Indicates whether a specified <xref href=\"System.TimeSpan\" data-throw-if-not-resolved=\"false\"></xref> is greater than another specified <xref href=\"System.TimeSpan\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  example:
  - "\n<p>The following example compares several <xref href=\"System.TimeSpan\" data-throw-if-not-resolved=\"false\"></xref> objects to a reference <xref href=\"System.TimeSpan\" data-throw-if-not-resolved=\"false\"></xref> using the <xref href=\"System.TimeSpan.op_GreaterThan(System.TimeSpan,System.TimeSpan)\" data-throw-if-not-resolved=\"false\"></xref> operator.</p>System.TimeSpan.RelationalOps#1"
  syntax:
    content: public static bool operator>(TimeSpan t1, TimeSpan t2)
    content.vb: Public Shared Operator>(t1 As TimeSpan, t2 As TimeSpan) As Boolean
    parameters:
    - id: t1
      type: System.TimeSpan
      description: "\n<p>The first time interval to compare. </p>\n"
    - id: t2
      type: System.TimeSpan
      description: "\n<p>The second time interval to compare. </p>\n"
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if the value of <em>t1</em> is greater than the value of <em>t2</em>; otherwise, <strong>false</strong>.</p>\n"
  seealso:
  - type: System.TimeSpan.Compare(System.TimeSpan,System.TimeSpan)
    commentId: M:System.TimeSpan.Compare(System.TimeSpan,System.TimeSpan)
  - type: System.TimeSpan.CompareTo(System.Object)
    commentId: M:System.TimeSpan.CompareTo(System.Object)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.TimeSpan.op_GreaterThanOrEqual(System.TimeSpan,System.TimeSpan)
  commentId: M:System.TimeSpan.op_GreaterThanOrEqual(System.TimeSpan,System.TimeSpan)
  id: op_GreaterThanOrEqual(System.TimeSpan,System.TimeSpan)
  parent: System.TimeSpan
  langs:
  - csharp
  - vb
  name: GreaterThanOrEqual(TimeSpan, TimeSpan)
  fullName: System.TimeSpan.GreaterThanOrEqual(System.TimeSpan, System.TimeSpan)
  type: Operator
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_GreaterThanOrEqual
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 1693
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Indicates whether a specified <xref href=\"System.TimeSpan\" data-throw-if-not-resolved=\"false\"></xref> is greater than or equal to another specified <xref href=\"System.TimeSpan\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  example:
  - "\n<p>The following example compares several <xref href=\"System.TimeSpan\" data-throw-if-not-resolved=\"false\"></xref> objects to a reference <xref href=\"System.TimeSpan\" data-throw-if-not-resolved=\"false\"></xref> using the <xref href=\"System.TimeSpan.op_GreaterThanOrEqual(System.TimeSpan,System.TimeSpan)\" data-throw-if-not-resolved=\"false\"></xref> operator.</p>System.TimeSpan.RelationalOps#1"
  syntax:
    content: public static bool operator >=(TimeSpan t1, TimeSpan t2)
    content.vb: Public Shared Operator >=(t1 As TimeSpan, t2 As TimeSpan) As Boolean
    parameters:
    - id: t1
      type: System.TimeSpan
      description: "\n<p>The first time interval to compare.</p>\n"
    - id: t2
      type: System.TimeSpan
      description: "\n<p>The second time interval to compare.</p>\n"
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if the value of <em>t1</em> is greater than or equal to the value of <em>t2</em>; otherwise, <strong>false</strong>.</p>\n"
  seealso:
  - type: System.TimeSpan.Compare(System.TimeSpan,System.TimeSpan)
    commentId: M:System.TimeSpan.Compare(System.TimeSpan,System.TimeSpan)
  - type: System.TimeSpan.CompareTo(System.Object)
    commentId: M:System.TimeSpan.CompareTo(System.Object)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.TimeSpan.op_Inequality(System.TimeSpan,System.TimeSpan)
  commentId: M:System.TimeSpan.op_Inequality(System.TimeSpan,System.TimeSpan)
  id: op_Inequality(System.TimeSpan,System.TimeSpan)
  parent: System.TimeSpan
  langs:
  - csharp
  - vb
  name: Inequality(TimeSpan, TimeSpan)
  fullName: System.TimeSpan.Inequality(System.TimeSpan, System.TimeSpan)
  type: Operator
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_Inequality
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 1694
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Indicates whether two <xref href=\"System.TimeSpan\" data-throw-if-not-resolved=\"false\"></xref> instances are not equal.</p>\n"
  example:
  - "\n<p>The following example compares several <xref href=\"System.TimeSpan\" data-throw-if-not-resolved=\"false\"></xref> objects to a reference <xref href=\"System.TimeSpan\" data-throw-if-not-resolved=\"false\"></xref> using the <xref href=\"System.TimeSpan.op_Inequality(System.TimeSpan,System.TimeSpan)\" data-throw-if-not-resolved=\"false\"></xref> operator.</p>System.TimeSpan.RelationalOps#1"
  syntax:
    content: public static bool operator !=(TimeSpan t1, TimeSpan t2)
    content.vb: Public Shared Operator <>(t1 As TimeSpan, t2 As TimeSpan) As Boolean
    parameters:
    - id: t1
      type: System.TimeSpan
      description: "\n<p>The first time interval to compare.</p>\n"
    - id: t2
      type: System.TimeSpan
      description: "\n<p>The second time interval to compare.</p>\n"
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if the values of <em>t1</em> and <em>t2</em> are not equal; otherwise, <strong>false</strong>.</p>\n"
  seealso:
  - type: System.TimeSpan.Compare(System.TimeSpan,System.TimeSpan)
    commentId: M:System.TimeSpan.Compare(System.TimeSpan,System.TimeSpan)
  - type: System.TimeSpan.CompareTo(System.Object)
    commentId: M:System.TimeSpan.CompareTo(System.Object)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.TimeSpan.op_LessThan(System.TimeSpan,System.TimeSpan)
  commentId: M:System.TimeSpan.op_LessThan(System.TimeSpan,System.TimeSpan)
  id: op_LessThan(System.TimeSpan,System.TimeSpan)
  parent: System.TimeSpan
  langs:
  - csharp
  - vb
  name: LessThan(TimeSpan, TimeSpan)
  fullName: System.TimeSpan.LessThan(System.TimeSpan, System.TimeSpan)
  type: Operator
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_LessThan
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 1695
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Indicates whether a specified <xref href=\"System.TimeSpan\" data-throw-if-not-resolved=\"false\"></xref> is less than another specified <xref href=\"System.TimeSpan\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  example:
  - "\n<p>The following example compares several <xref href=\"System.TimeSpan\" data-throw-if-not-resolved=\"false\"></xref> objects to a reference <xref href=\"System.TimeSpan\" data-throw-if-not-resolved=\"false\"></xref> using the <xref href=\"System.TimeSpan.op_LessThan(System.TimeSpan,System.TimeSpan)\" data-throw-if-not-resolved=\"false\"></xref> operator.</p>System.TimeSpan.RelationalOps#1"
  syntax:
    content: public static bool operator <(TimeSpan t1, TimeSpan t2)
    content.vb: Public Shared Operator <(t1 As TimeSpan, t2 As TimeSpan) As Boolean
    parameters:
    - id: t1
      type: System.TimeSpan
      description: "\n<p>The first time interval to compare.</p>\n"
    - id: t2
      type: System.TimeSpan
      description: "\n<p>The second time interval to compare. </p>\n"
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if the value of <em>t1</em> is less than the value of <em>t2</em>; otherwise, <strong>false</strong>.</p>\n"
  seealso:
  - type: System.TimeSpan.Compare(System.TimeSpan,System.TimeSpan)
    commentId: M:System.TimeSpan.Compare(System.TimeSpan,System.TimeSpan)
  - type: System.TimeSpan.CompareTo(System.Object)
    commentId: M:System.TimeSpan.CompareTo(System.Object)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.TimeSpan.op_LessThanOrEqual(System.TimeSpan,System.TimeSpan)
  commentId: M:System.TimeSpan.op_LessThanOrEqual(System.TimeSpan,System.TimeSpan)
  id: op_LessThanOrEqual(System.TimeSpan,System.TimeSpan)
  parent: System.TimeSpan
  langs:
  - csharp
  - vb
  name: LessThanOrEqual(TimeSpan, TimeSpan)
  fullName: System.TimeSpan.LessThanOrEqual(System.TimeSpan, System.TimeSpan)
  type: Operator
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_LessThanOrEqual
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 1696
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Indicates whether a specified <xref href=\"System.TimeSpan\" data-throw-if-not-resolved=\"false\"></xref> is less than or equal to another specified <xref href=\"System.TimeSpan\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  example:
  - "\n<p>The following example compares several <xref href=\"System.TimeSpan\" data-throw-if-not-resolved=\"false\"></xref> objects to a reference <xref href=\"System.TimeSpan\" data-throw-if-not-resolved=\"false\"></xref> using the <xref href=\"System.TimeSpan.op_LessThanOrEqual(System.TimeSpan,System.TimeSpan)\" data-throw-if-not-resolved=\"false\"></xref> operator.</p>System.TimeSpan.RelationalOps#1"
  syntax:
    content: public static bool operator <=(TimeSpan t1, TimeSpan t2)
    content.vb: Public Shared Operator <=(t1 As TimeSpan, t2 As TimeSpan) As Boolean
    parameters:
    - id: t1
      type: System.TimeSpan
      description: "\n<p>The first time interval to compare. </p>\n"
    - id: t2
      type: System.TimeSpan
      description: "\n<p>The second time interval to compare. </p>\n"
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if the value of <em>t1</em> is less than or equal to the value of <em>t2</em>; otherwise, <strong>false</strong>.</p>\n"
  seealso:
  - type: System.TimeSpan.Compare(System.TimeSpan,System.TimeSpan)
    commentId: M:System.TimeSpan.Compare(System.TimeSpan,System.TimeSpan)
  - type: System.TimeSpan.CompareTo(System.Object)
    commentId: M:System.TimeSpan.CompareTo(System.Object)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.TimeSpan.op_Subtraction(System.TimeSpan,System.TimeSpan)
  commentId: M:System.TimeSpan.op_Subtraction(System.TimeSpan,System.TimeSpan)
  id: op_Subtraction(System.TimeSpan,System.TimeSpan)
  parent: System.TimeSpan
  langs:
  - csharp
  - vb
  name: Subtraction(TimeSpan, TimeSpan)
  fullName: System.TimeSpan.Subtraction(System.TimeSpan, System.TimeSpan)
  type: Operator
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_Subtraction
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 1697
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Subtracts a specified <xref href=\"System.TimeSpan\" data-throw-if-not-resolved=\"false\"></xref> from another specified <xref href=\"System.TimeSpan\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  example:
  - "\n<p>The following example uses the <xref href=\"System.TimeSpan\" data-throw-if-not-resolved=\"false\"></xref> subtraction operator to calculate the total length of the weekly work day. It also uses the <xref href=\"System.TimeSpan\" data-throw-if-not-resolved=\"false\"></xref> addition operator to compute the total time of the daily breaks before using it in a subtraction operation to compute the total actual daily working time.</p>System.TimeSpan.Operators#2"
  syntax:
    content: public static TimeSpan operator -(TimeSpan t1, TimeSpan t2)
    content.vb: Public Shared Operator -(t1 As TimeSpan, t2 As TimeSpan) As TimeSpan
    parameters:
    - id: t1
      type: System.TimeSpan
      description: "\n<p>The minuend. </p>\n"
    - id: t2
      type: System.TimeSpan
      description: "\n<p>The subtrahend. </p>\n"
    return:
      type: System.TimeSpan
      description: "\n<p>An object whose value is the result of the value of <em>t1</em> minus the value of <em>t2</em>.</p>\n"
  exceptions:
  - type: System.OverflowException
    commentId: T:System.OverflowException
    description: "\n<p>The return value is less than <xref href=\"System.TimeSpan.MinValue\" data-throw-if-not-resolved=\"false\"></xref> or greater than <xref href=\"System.TimeSpan.MaxValue\" data-throw-if-not-resolved=\"false\"></xref>. </p>\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.TimeSpan.op_UnaryNegation(System.TimeSpan)
  commentId: M:System.TimeSpan.op_UnaryNegation(System.TimeSpan)
  id: op_UnaryNegation(System.TimeSpan)
  parent: System.TimeSpan
  langs:
  - csharp
  - vb
  name: UnaryNegation(TimeSpan)
  fullName: System.TimeSpan.UnaryNegation(System.TimeSpan)
  type: Operator
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_UnaryNegation
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 1698
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Returns a <xref href=\"System.TimeSpan\" data-throw-if-not-resolved=\"false\"></xref> whose value is the negated value of the specified instance.</p>\n"
  example:
  - "\n<p>The following example applies the <xref href=\"System.TimeSpan.op_UnaryNegation(System.TimeSpan)\" data-throw-if-not-resolved=\"false\"></xref> operator to several <xref href=\"System.TimeSpan\" data-throw-if-not-resolved=\"false\"></xref> objects.</p>System.TimeSpan.Dura_Nega_Unary#1"
  syntax:
    content: public static TimeSpan operator -(TimeSpan t)
    content.vb: Public Shared Operator -(t As TimeSpan) As TimeSpan
    parameters:
    - id: t
      type: System.TimeSpan
      description: "\n<p>The time interval to be negated. </p>\n"
    return:
      type: System.TimeSpan
      description: "\n<p>An object that has the same numeric value as this instance, but the opposite sign.</p>\n"
  exceptions:
  - type: System.OverflowException
    commentId: T:System.OverflowException
    description: "\n<p>The negated value of this instance cannot be represented by a <xref href=\"System.TimeSpan\" data-throw-if-not-resolved=\"false\"></xref>; that is, the value of this instance is <xref href=\"System.TimeSpan.MinValue\" data-throw-if-not-resolved=\"false\"></xref>. </p>\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.TimeSpan.op_UnaryPlus(System.TimeSpan)
  commentId: M:System.TimeSpan.op_UnaryPlus(System.TimeSpan)
  id: op_UnaryPlus(System.TimeSpan)
  parent: System.TimeSpan
  langs:
  - csharp
  - vb
  name: UnaryPlus(TimeSpan)
  fullName: System.TimeSpan.UnaryPlus(System.TimeSpan)
  type: Operator
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_UnaryPlus
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 1699
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Returns the specified instance of <xref href=\"System.TimeSpan\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  example:
  - "\n<p>The following example applies the <xref href=\"System.TimeSpan.op_UnaryPlus(System.TimeSpan)\" data-throw-if-not-resolved=\"false\"></xref> operator to several <xref href=\"System.TimeSpan\" data-throw-if-not-resolved=\"false\"></xref> objects.</p>System.TimeSpan.Dura_Nega_Unary#1"
  syntax:
    content: public static TimeSpan operator +(TimeSpan t)
    content.vb: Public Shared Operator +(t As TimeSpan) As TimeSpan
    parameters:
    - id: t
      type: System.TimeSpan
      description: "\n<p>The time interval to return. </p>\n"
    return:
      type: System.TimeSpan
      description: "\n<p>The time interval specified by <em>t</em>.</p>\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.TimeSpan.Parse(System.String)
  commentId: M:System.TimeSpan.Parse(System.String)
  id: Parse(System.String)
  parent: System.TimeSpan
  langs:
  - csharp
  - vb
  name: Parse(String)
  fullName: System.TimeSpan.Parse(System.String)
  type: Method
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Parse
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 1700
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Converts the string representation of a time interval to its <xref href=\"System.TimeSpan\" data-throw-if-not-resolved=\"false\"></xref> equivalent. </p>\n"
  remarks: "\n<p>The <em>s</em> parameter contains a time interval specification in the form: </p>\n<p>[ws][-]{ d | [d.]hh:mm[:ss[.ff]] }[ws]</p>\n<p>Elements in square brackets ([ and ]) are optional. One selection from the list of alternatives enclosed in braces ({ and }) and separated by vertical bars (|) is required. The following table describes each element.</p>\n<p>Element</p>\n<p>Description </p>\n<table><tbody><tr><td>\n<p>ws</p>\n</td><td>\n<p>Optional white space. </p>\n</td></tr><tr><td>\n<p>-</p>\n</td><td>\n<p>An optional minus sign, which indicates a negative <xref href=\"System.TimeSpan\" data-throw-if-not-resolved=\"false\"></xref>. </p>\n</td></tr><tr><td>\n<p>d</p>\n</td><td>\n<p>Days, ranging from 0 to 10675199.</p>\n</td></tr><tr><td>\n<p>.</p>\n</td><td>\n<p>A culture-sensitive symbol that separates days from hours. The invariant format uses a period (\".\") character.</p>\n</td></tr><tr><td>\n<p>hh</p>\n</td><td>\n<p>Hours, ranging from 0 to 23. </p>\n</td></tr><tr><td>\n<p>:</p>\n</td><td>\n<p>The culture-sensitive time separator symbol. The invariant format uses a colon (\":\") character.</p>\n</td></tr><tr><td>\n<p>mm</p>\n</td><td>\n<p>Minutes, ranging from 0 to 59. </p>\n</td></tr><tr><td>\n<p>ss</p>\n</td><td>\n<p>Optional seconds, ranging from 0 to 59. </p>\n</td></tr><tr><td>\n<p>.</p>\n</td><td>\n<p>A culture-sensitive symbol that separates seconds from fractions of a second. The invariant format uses a period (\".\") character.</p>\n</td></tr><tr><td>\n<p>ff</p>\n</td><td>\n<p>Optional fractional seconds, consisting of one to seven decimal digits. </p>\n</td></tr></tbody></table>\n<p>The components of <em>s</em> must collectively specify a time interval that is greater than or equal to <xref href=\"System.TimeSpan.MinValue\" data-throw-if-not-resolved=\"false\"></xref> and less than or equal to <xref href=\"System.TimeSpan.MaxValue\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>The <xref href=\"System.TimeSpan.Parse(System.String)\" data-throw-if-not-resolved=\"false\"></xref> method tries to parse <em>s</em> by using each of the culture-specific formats for the current culture.</p>\n"
  example:
  - "\n<p>The following example uses the <xref href=\"System.TimeSpan.Parse(System.String)\" data-throw-if-not-resolved=\"false\"></xref> method to convert each element in a string array to a <xref href=\"System.TimeSpan\" data-throw-if-not-resolved=\"false\"></xref> value. It changes the current system culture to Croatian - Croatia (\"hr-HR\") and English - United States (\"en-US\") to illustrate how the current system culture affects the parsing operation.</p>System.TimeSpan.Parse#1"
  syntax:
    content: public static TimeSpan Parse(string s)
    content.vb: Public Shared Function Parse(s As String) As TimeSpan
    parameters:
    - id: s
      type: System.String
      description: "\n<p>A string that specifies the time interval to convert. </p>\n"
    return:
      type: System.TimeSpan
      description: "\n<p>A time interval that corresponds to <em>s</em>.</p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>s</em> is <strong>null</strong>. </p>\n"
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "\n<p>\n<em>s</em> has an invalid format. </p>\n"
  - type: System.OverflowException
    commentId: T:System.OverflowException
    description: "\n<p>\n<em>s</em> represents a number that is less than <xref href=\"System.TimeSpan.MinValue\" data-throw-if-not-resolved=\"false\"></xref> or greater than <xref href=\"System.TimeSpan.MaxValue\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>-or- </p>\n<p>At least one of the days, hours, minutes, or seconds components is outside its valid range. </p>\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.TimeSpan.Parse(System.String,System.IFormatProvider)
  commentId: M:System.TimeSpan.Parse(System.String,System.IFormatProvider)
  id: Parse(System.String,System.IFormatProvider)
  parent: System.TimeSpan
  langs:
  - csharp
  - vb
  name: Parse(String, IFormatProvider)
  fullName: System.TimeSpan.Parse(System.String, System.IFormatProvider)
  type: Method
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Parse
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 1701
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Converts the string representation of a time interval to its <xref href=\"System.TimeSpan\" data-throw-if-not-resolved=\"false\"></xref> equivalent by using the specified culture-specific format information.</p>\n"
  remarks: "\n<p>The <em>input</em> parameter contains a time interval specification in the form: </p>\n<p>[ws][-]{ d | [d.]hh:mm[:ss[.ff]] }[ws]</p>\n<p>Elements in square brackets ([ and ]) are optional; one selection from the list of alternatives enclosed in braces ({ and }) and separated by vertical bars (|) is required. The following table describes each element.</p>\n<p>Element</p>\n<p>Description </p>\n<table><tbody><tr><td>\n<p>ws</p>\n</td><td>\n<p>Optional white space. </p>\n</td></tr><tr><td>\n<p>-</p>\n</td><td>\n<p>An optional minus sign, which indicates a negative <xref href=\"System.TimeSpan\" data-throw-if-not-resolved=\"false\"></xref>. </p>\n</td></tr><tr><td>\n<p>d</p>\n</td><td>\n<p>Days, ranging from 0 to 10675199.</p>\n</td></tr><tr><td>\n<p>.</p>\n</td><td>\n<p>A culture-sensitive symbol that separates days from hours. The default value is a period (\".\") character.</p>\n</td></tr><tr><td>\n<p>hh</p>\n</td><td>\n<p>Hours, ranging from 0 to 23. </p>\n</td></tr><tr><td>\n<p>:</p>\n</td><td>\n<p>The culture-sensitive time separator symbol.</p>\n</td></tr><tr><td>\n<p>mm</p>\n</td><td>\n<p>Minutes, ranging from 0 to 59. </p>\n</td></tr><tr><td>\n<p>ss</p>\n</td><td>\n<p>Optional seconds, ranging from 0 to 59. </p>\n</td></tr><tr><td>\n<p>.</p>\n</td><td>\n<p>A culture-sensitive symbol that separates seconds from fractions of a second. The default value is a period (\".\") character.</p>\n</td></tr><tr><td>\n<p>ff</p>\n</td><td>\n<p>Optional fractional seconds, consisting of one to seven decimal digits. </p>\n</td></tr></tbody></table>\n<p>The components of <em>input</em> must collectively specify a time interval that is greater than or equal to <xref href=\"System.TimeSpan.MinValue\" data-throw-if-not-resolved=\"false\"></xref> and less than or equal to <xref href=\"System.TimeSpan.MaxValue\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>The <xref href=\"System.TimeSpan.Parse(System.String)\" data-throw-if-not-resolved=\"false\"></xref> method tries to parse <em>input</em> by using each of the culture-specific formats for the culture specified by <em>formatProvider</em>.</p>\n<p>The <em>formatProvider</em> parameter is an <xref href=\"System.IFormatProvider\" data-throw-if-not-resolved=\"false\"></xref> implementation that provides culture-specific information about the format of the returned string. The <em>formatProvider</em> parameter can be any of the following:</p>\n<ul><li>\n<p>A <xref href=\"System.Globalization.CultureInfo\" data-throw-if-not-resolved=\"false\"></xref> object that represents the culture whose formatting conventions are to be reflected in the returned string. The <xref href=\"System.Globalization.DateTimeFormatInfo\" data-throw-if-not-resolved=\"false\"></xref> object returned by the <xref href=\"System.Globalization.CultureInfo.DateTimeFormat\" data-throw-if-not-resolved=\"false\"></xref> property defines the formatting of the returned string.</p>\n</li><li>\n<p>A <xref href=\"System.Globalization.DateTimeFormatInfo\" data-throw-if-not-resolved=\"false\"></xref> object that defines the formatting of the returned string.</p>\n</li><li>\n<p>A custom object that implements the <xref href=\"System.IFormatProvider\" data-throw-if-not-resolved=\"false\"></xref> interface. Its <xref href=\"System.IFormatProvider.GetFormat(System.Type)\" data-throw-if-not-resolved=\"false\"></xref> method returns a <xref href=\"System.Globalization.DateTimeFormatInfo\" data-throw-if-not-resolved=\"false\"></xref> object that provides formatting information.</p>\n</li></ul>\n<p>If <em>formatProvider</em> is <strong>null</strong>, the <xref href=\"System.Globalization.DateTimeFormatInfo\" data-throw-if-not-resolved=\"false\"></xref> object that is associated with the current culture is used.</p>\n"
  example:
  - "\n<p>The following example defines an array of <xref href=\"System.Globalization.CultureInfo\" data-throw-if-not-resolved=\"false\"></xref> objects, and uses each object in calls to the <xref href=\"System.TimeSpan.Parse(System.String,System.IFormatProvider)\" data-throw-if-not-resolved=\"false\"></xref> method to parse the elements in a string array. The example illustrates how the conventions of a specific culture influence the formatting operation.</p>System.TimeSpan.Parse#2"
  syntax:
    content: public static TimeSpan Parse(string input, IFormatProvider formatProvider)
    content.vb: Public Shared Function Parse(input As String, formatProvider As IFormatProvider) As TimeSpan
    parameters:
    - id: input
      type: System.String
      description: "\n<p>A string that specifies the time interval to convert.</p>\n"
    - id: formatProvider
      type: System.IFormatProvider
      description: "\n<p>An object that supplies culture-specific formatting information.</p>\n"
    return:
      type: System.TimeSpan
      description: "\n<p>A time interval that corresponds to <em>input</em>, as specified by <em>formatProvider</em>.</p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>input</em> is <strong>null</strong>. </p>\n"
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "\n<p>\n<em>input</em> has an invalid format. </p>\n"
  - type: System.OverflowException
    commentId: T:System.OverflowException
    description: "\n<p>\n<em>input</em> represents a number that is less than <xref href=\"System.TimeSpan.MinValue\" data-throw-if-not-resolved=\"false\"></xref> or greater than <xref href=\"System.TimeSpan.MaxValue\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>-or- </p>\n<p>At least one of the days, hours, minutes, or seconds components in <em>input</em> is outside its valid range. </p>\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.TimeSpan.ParseExact(System.String,System.String,System.IFormatProvider)
  commentId: M:System.TimeSpan.ParseExact(System.String,System.String,System.IFormatProvider)
  id: ParseExact(System.String,System.String,System.IFormatProvider)
  parent: System.TimeSpan
  langs:
  - csharp
  - vb
  name: ParseExact(String, String, IFormatProvider)
  fullName: System.TimeSpan.ParseExact(System.String, System.String, System.IFormatProvider)
  type: Method
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ParseExact
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 1702
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Converts the string representation of a time interval to its <xref href=\"System.TimeSpan\" data-throw-if-not-resolved=\"false\"></xref> equivalent by using the specified format and culture-specific format information. The format of the string representation must match the specified format exactly.</p>\n"
  remarks: "\n<p>The <xref href=\"System.TimeSpan.ParseExact(System.String,System.String,System.IFormatProvider)\" data-throw-if-not-resolved=\"false\"></xref> method parses the string representation of a time interval, which must be in the format defined by the <em>format</em> parameter, except that leading and trailing white-space characters are ignored. Because <em>input</em> must conform to the format of <em>format</em> exactly, you should always use exception handling when converting a string input by the user to a time interval. If you prefer not to use exception handling, you can call the <xref href=\"System.TimeSpan.TryParseExact(System.String,System.String,System.IFormatProvider,System.TimeSpan@)\" data-throw-if-not-resolved=\"false\"></xref> method instead.</p>\n<p>The <em>format</em> parameter is a string that contains either a single standard format specifier, or one or more custom format specifiers that define the required format of <em>input</em>. For more information about valid format strings, see Standard TimeSpan Format Strings and Custom TimeSpan Format Strings. </p>\n<p>The <xref href=\"System.TimeSpan.ParseExact(System.String,System.String,System.IFormatProvider)\" data-throw-if-not-resolved=\"false\"></xref> method uses the conventions of the culture specified by the <em>formatProvider</em> parameter only if <em>format</em> is a standard <xref href=\"System.TimeSpan\" data-throw-if-not-resolved=\"false\"></xref> format string whose value is either \"g\" or \"G\". The \"c\", \"t\", and \"T\" standard format strings use the formatting conventions of the invariant culture. Custom format strings define the precise format of the input string and use literal characters to separate the components of a time interval.</p>\n<p>The <em>formatProvider</em> parameter is an <xref href=\"System.IFormatProvider\" data-throw-if-not-resolved=\"false\"></xref> implementation that provides culture-specific information about the format of the returned string if <em>format</em> is a standard format string. The <em>formatProvider</em> parameter can be any of the following:</p>\n<ul><li>\n<p>A <xref href=\"System.Globalization.CultureInfo\" data-throw-if-not-resolved=\"false\"></xref> object that represents the culture whose formatting conventions are to be reflected in the returned string. The <xref href=\"System.Globalization.DateTimeFormatInfo\" data-throw-if-not-resolved=\"false\"></xref> object returned by the <xref href=\"System.Globalization.CultureInfo.DateTimeFormat\" data-throw-if-not-resolved=\"false\"></xref> property defines the formatting of the returned string.</p>\n</li><li>\n<p>A <xref href=\"System.Globalization.DateTimeFormatInfo\" data-throw-if-not-resolved=\"false\"></xref> object that defines the formatting of the returned string.</p>\n</li><li>\n<p>A custom object that implements the <xref href=\"System.IFormatProvider\" data-throw-if-not-resolved=\"false\"></xref> interface. Its <xref href=\"System.IFormatProvider.GetFormat(System.Type)\" data-throw-if-not-resolved=\"false\"></xref> method returns a <xref href=\"System.Globalization.DateTimeFormatInfo\" data-throw-if-not-resolved=\"false\"></xref> object that provides formatting information.</p>\n</li></ul>\n<p>If <em>formatProvider</em> is <strong>null</strong>, the <xref href=\"System.Globalization.DateTimeFormatInfo\" data-throw-if-not-resolved=\"false\"></xref> object that is associated with the current culture is used.</p>\n"
  example:
  - "\n<p>The following example uses the <xref href=\"System.TimeSpan.ParseExact(System.String,System.String,System.IFormatProvider)\" data-throw-if-not-resolved=\"false\"></xref> method to parse several string representations of time intervals using various format strings and cultures.</p>System.TimeSpan.ParseExact#1"
  syntax:
    content: public static TimeSpan ParseExact(string input, string format, IFormatProvider formatProvider)
    content.vb: Public Shared Function ParseExact(input As String, format As String, formatProvider As IFormatProvider) As TimeSpan
    parameters:
    - id: input
      type: System.String
      description: "\n<p>A string that specifies the time interval to convert.</p>\n"
    - id: format
      type: System.String
      description: "\n<p>A standard or custom format string that defines the required format of <em>input</em>.</p>\n"
    - id: formatProvider
      type: System.IFormatProvider
      description: "\n<p>An object that provides culture-specific formatting information.</p>\n"
    return:
      type: System.TimeSpan
      description: "\n<p>A time interval that corresponds to <em>input</em>, as specified by <em>format</em> and <em>formatProvider</em>.</p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>input</em> is <strong>null</strong>. </p>\n"
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "\n<p>\n<em>input</em> has an invalid format. </p>\n"
  - type: System.OverflowException
    commentId: T:System.OverflowException
    description: "\n<p>\n<em>input</em> represents a number that is less than <xref href=\"System.TimeSpan.MinValue\" data-throw-if-not-resolved=\"false\"></xref> or greater than <xref href=\"System.TimeSpan.MaxValue\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>-or- </p>\n<p>At least one of the days, hours, minutes, or seconds components in <em>input</em> is outside its valid range. </p>\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.TimeSpan.ParseExact(System.String,System.String,System.IFormatProvider,System.Globalization.TimeSpanStyles)
  commentId: M:System.TimeSpan.ParseExact(System.String,System.String,System.IFormatProvider,System.Globalization.TimeSpanStyles)
  id: ParseExact(System.String,System.String,System.IFormatProvider,System.Globalization.TimeSpanStyles)
  parent: System.TimeSpan
  langs:
  - csharp
  - vb
  name: ParseExact(String, String, IFormatProvider, TimeSpanStyles)
  fullName: System.TimeSpan.ParseExact(System.String, System.String, System.IFormatProvider, System.Globalization.TimeSpanStyles)
  type: Method
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ParseExact
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 1703
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Converts the string representation of a time interval to its <xref href=\"System.TimeSpan\" data-throw-if-not-resolved=\"false\"></xref> equivalent by using the specified format, culture-specific format information, and styles. The format of the string representation must match the specified format exactly.</p>\n"
  remarks: "\n<p>The <xref href=\"System.TimeSpan.ParseExact(System.String,System.String,System.IFormatProvider,System.Globalization.TimeSpanStyles)\" data-throw-if-not-resolved=\"false\"></xref> method parses the string representation of a time interval, which must be in the format defined by the <em>format</em> parameter, except that leading and trailing white-space characters are ignored. Because <em>input</em> must conform to the format of <em>format</em> exactly, you should always use exception handling when converting a string input by the user to a time interval. If you prefer not to use exception handling, you can call the <xref href=\"System.TimeSpan.TryParseExact(System.String,System.String,System.IFormatProvider,System.Globalization.TimeSpanStyles,System.TimeSpan@)\" data-throw-if-not-resolved=\"false\"></xref> method instead.</p>\n<p>The <em>format</em> parameter is a string that contains either a single standard format specifier, or one or more custom format specifiers that define the required format of <em>input</em>. For more information about valid format strings, see Standard TimeSpan Format Strings and Custom TimeSpan Format Strings. </p>\n<p>The <xref href=\"System.TimeSpan.ParseExact(System.String,System.String,System.IFormatProvider)\" data-throw-if-not-resolved=\"false\"></xref> method uses the conventions of the culture specified by the <em>formatProvider</em> parameter only if <em>format</em> is a standard <xref href=\"System.TimeSpan\" data-throw-if-not-resolved=\"false\"></xref> format string whose value is either \"g\" or \"G\". The \"c\", \"t\", and \"T\" standard format strings use the formatting conventions of the invariant culture. Custom format strings define the precise format of the input string and use literal characters to separate the components of a time interval.</p>\n<p>The <em>formatProvider</em> parameter is an <xref href=\"System.IFormatProvider\" data-throw-if-not-resolved=\"false\"></xref> implementation that provides culture-specific information about the format of the returned string if <em>format</em> is a standard format string. The <em>formatProvider</em> parameter can be any of the following:</p>\n<ul><li>\n<p>A <xref href=\"System.Globalization.CultureInfo\" data-throw-if-not-resolved=\"false\"></xref> object that represents the culture whose formatting conventions are to be reflected in the returned string. The <xref href=\"System.Globalization.DateTimeFormatInfo\" data-throw-if-not-resolved=\"false\"></xref> object returned by the <xref href=\"System.Globalization.CultureInfo.DateTimeFormat\" data-throw-if-not-resolved=\"false\"></xref> property defines the formatting of the returned string.</p>\n</li><li>\n<p>A <xref href=\"System.Globalization.DateTimeFormatInfo\" data-throw-if-not-resolved=\"false\"></xref> object that defines the formatting of the returned string.</p>\n</li><li>\n<p>A custom object that implements the <xref href=\"System.IFormatProvider\" data-throw-if-not-resolved=\"false\"></xref> interface. Its <xref href=\"System.IFormatProvider.GetFormat(System.Type)\" data-throw-if-not-resolved=\"false\"></xref> method returns a <xref href=\"System.Globalization.DateTimeFormatInfo\" data-throw-if-not-resolved=\"false\"></xref> object that provides formatting information.</p>\n</li></ul>\n<p>If <em>formatProvider</em> is <strong>null</strong>, the <xref href=\"System.Globalization.DateTimeFormatInfo\" data-throw-if-not-resolved=\"false\"></xref> object that is associated with the current culture is used.</p>\n<p>The <em>styles</em> parameter affects the interpretation of strings that are parsed using custom format strings. It determines whether <em>input</em> is interpreted as a negative time interval only if a negative sign is present (<xref href=\"System.Globalization.TimeSpanStyles.None\" data-throw-if-not-resolved=\"false\"></xref>), or whether it is always interpreted as a negative time interval (<xref href=\"System.Globalization.TimeSpanStyles.AssumeNegative\" data-throw-if-not-resolved=\"false\"></xref>). If <xref href=\"System.Globalization.TimeSpanStyles.AssumeNegative\" data-throw-if-not-resolved=\"false\"></xref> is not used, <em>format</em> must include a literal negative sign symbol (such as \"\\-\") to successfully parse a negative time interval.</p>\n"
  example:
  - "\n<p>The following example uses the <xref href=\"System.TimeSpan.ParseExact(System.String,System.String,System.IFormatProvider)\" data-throw-if-not-resolved=\"false\"></xref> method to parse several string representations of time intervals using various format strings and cultures. It also uses the <xref href=\"System.Globalization.TimeSpanStyles.AssumeNegative\" data-throw-if-not-resolved=\"false\"></xref> value to interpret each string as a negative time interval. The output from the example illustrates that the <xref href=\"System.Globalization.TimeSpanStyles.AssumeNegative\" data-throw-if-not-resolved=\"false\"></xref> style affects the return value only when it is used with custom format strings.</p>System.TimeSpan.ParseExact#2"
  syntax:
    content: public static TimeSpan ParseExact(string input, string format, IFormatProvider formatProvider, TimeSpanStyles styles)
    content.vb: Public Shared Function ParseExact(input As String, format As String, formatProvider As IFormatProvider, styles As TimeSpanStyles) As TimeSpan
    parameters:
    - id: input
      type: System.String
      description: "\n<p>A string that specifies the time interval to convert.</p>\n"
    - id: format
      type: System.String
      description: "\n<p>A standard or custom format string that defines the required format of <em>input</em>.</p>\n"
    - id: formatProvider
      type: System.IFormatProvider
      description: "\n<p>An object that provides culture-specific formatting information.</p>\n"
    - id: styles
      type: System.Globalization.TimeSpanStyles
      description: "\n<p>A bitwise combination of enumeration values that defines the style elements that may be present in <em>input</em>.</p>\n"
    return:
      type: System.TimeSpan
      description: "\n<p>A time interval that corresponds to <em>input</em>, as specified by <em>format</em>, <em>formatProvider</em>, and <em>styles</em>.</p>\n"
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<p>\n<em>styles</em> is an invalid <xref href=\"System.Globalization.TimeSpanStyles\" data-throw-if-not-resolved=\"false\"></xref> value.</p>\n"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>input</em> is <strong>null</strong>. </p>\n"
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "\n<p>\n<em>input</em> has an invalid format. </p>\n"
  - type: System.OverflowException
    commentId: T:System.OverflowException
    description: "\n<p>\n<em>input</em> represents a number that is less than <xref href=\"System.TimeSpan.MinValue\" data-throw-if-not-resolved=\"false\"></xref> or greater than <xref href=\"System.TimeSpan.MaxValue\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>-or- </p>\n<p>At least one of the days, hours, minutes, or seconds components in <em>input</em> is outside its valid range. </p>\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.TimeSpan.ParseExact(System.String,System.String[],System.IFormatProvider)
  commentId: M:System.TimeSpan.ParseExact(System.String,System.String[],System.IFormatProvider)
  id: ParseExact(System.String,System.String[],System.IFormatProvider)
  parent: System.TimeSpan
  langs:
  - csharp
  - vb
  name: ParseExact(String, String[], IFormatProvider)
  fullName: System.TimeSpan.ParseExact(System.String, System.String[], System.IFormatProvider)
  type: Method
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ParseExact
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 1704
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Converts the string representation of a time interval to its <xref href=\"System.TimeSpan\" data-throw-if-not-resolved=\"false\"></xref> equivalent by using the specified array of format strings and culture-specific format information. The format of the string representation must match one of the specified formats exactly.</p>\n"
  remarks: "\n<p>The <xref href=\"System.TimeSpan.ParseExact(System.String,System.String,System.IFormatProvider)\" data-throw-if-not-resolved=\"false\"></xref> method parses the string representation of a time interval, which must be in one of the formats defined by the <em>formats</em> parameter, except that leading and trailing white-space characters are ignored. Because <em>input</em> must exactly conform to one of the formats specified in <em>formats</em>, you should always use exception handling when converting a string input by the user to a time interval. If you prefer not to use exception handling, you can call the <xref href=\"System.TimeSpan.TryParseExact(System.String,System.String[],System.IFormatProvider,System.TimeSpan@)\" data-throw-if-not-resolved=\"false\"></xref> method instead.</p>\n<p>The <em>formats</em> parameter is a string array whose elements consist of either a single standard format specifier, or one or more custom format specifiers that define the required format of <em>input</em>. For more information about valid format strings, see Standard TimeSpan Format Strings and Custom TimeSpan Format Strings. <em>input</em> must correspond exactly to a member of <em>formats</em> for the parse operation to succeed. The parse operation attempts to match <em>input</em> to each element in <em>formats</em> starting with the first element in the array.</p>\n<p>The <xref href=\"System.TimeSpan.ParseExact(System.String,System.String,System.IFormatProvider)\" data-throw-if-not-resolved=\"false\"></xref> method uses the conventions of the culture specified by the <em>formatProvider</em> parameter only if the format string used to parse <em>input</em> is a standard <xref href=\"System.TimeSpan\" data-throw-if-not-resolved=\"false\"></xref> format string whose value is either \"g\" or \"G\". The \"c\", \"t\", and \"T\" standard format strings use the formatting conventions of the invariant culture. Custom format strings define the precise format of the input string and use literal characters to separate the components of a time interval.</p>\n<p>The <em>formatProvider</em> parameter is an <xref href=\"System.IFormatProvider\" data-throw-if-not-resolved=\"false\"></xref> implementation that provides culture-specific information about the format of the returned string if the format string used to parse <em>input</em> is a standard format string. The <em>formatProvider</em> parameter can be any of the following:</p>\n<ul><li>\n<p>A <xref href=\"System.Globalization.CultureInfo\" data-throw-if-not-resolved=\"false\"></xref> object that represents the culture whose formatting conventions are to be reflected in the returned string. The <xref href=\"System.Globalization.DateTimeFormatInfo\" data-throw-if-not-resolved=\"false\"></xref> object returned by the <xref href=\"System.Globalization.CultureInfo.DateTimeFormat\" data-throw-if-not-resolved=\"false\"></xref> property defines the formatting of the returned string.</p>\n</li><li>\n<p>A <xref href=\"System.Globalization.DateTimeFormatInfo\" data-throw-if-not-resolved=\"false\"></xref> object that defines the formatting of the returned string.</p>\n</li><li>\n<p>A custom object that implements the <xref href=\"System.IFormatProvider\" data-throw-if-not-resolved=\"false\"></xref> interface. Its <xref href=\"System.IFormatProvider.GetFormat(System.Type)\" data-throw-if-not-resolved=\"false\"></xref> method returns a <xref href=\"System.Globalization.DateTimeFormatInfo\" data-throw-if-not-resolved=\"false\"></xref> object that provides formatting information.</p>\n</li></ul>\n<p>If <em>formatProvider</em> is <strong>null</strong>, the <xref href=\"System.Globalization.DateTimeFormatInfo\" data-throw-if-not-resolved=\"false\"></xref> object that is associated with the current culture is used.</p>\n"
  example:
  - "\n<p>The following example calls the <xref href=\"System.TimeSpan.ParseExact(System.String,System.String[],System.IFormatProvider)\" data-throw-if-not-resolved=\"false\"></xref> method to convert each element of a string array to a <xref href=\"System.TimeSpan\" data-throw-if-not-resolved=\"false\"></xref> value. The example interprets the strings using the formatting conventions of the French - France (\"fr-FR\") culture. The strings can represent a time interval in either the general short format or the general long format. </p>\n<p>In addition, the example changes the way in which the time interval parsing methods interpret a single digit. Ordinarily, a single digit is interpreted as the number of days in a time interval. Instead, the <code>%h</code> custom format string is used to interpret a single digit as the number of hours. For this change to be effective, note that the <code>%h</code> custom format string must precede the other format strings in the <code>formats</code> array.</p>System.TimeSpan.ParseExact#3"
  syntax:
    content: public static TimeSpan ParseExact(string input, string[] formats, IFormatProvider formatProvider)
    content.vb: Public Shared Function ParseExact(input As String, formats As String(), formatProvider As IFormatProvider) As TimeSpan
    parameters:
    - id: input
      type: System.String
      description: "\n<p>A string that specifies the time interval to convert.</p>\n"
    - id: formats
      type: System.String[]
      description: "\n<p>A array of standard or custom format strings that defines the required format of <em>input</em>.</p>\n"
    - id: formatProvider
      type: System.IFormatProvider
      description: "\n<p>An object that provides culture-specific formatting information.</p>\n"
    return:
      type: System.TimeSpan
      description: "\n<p>A time interval that corresponds to <em>input</em>, as specified by <em>formats</em> and <em>formatProvider</em>.</p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>input</em> is <strong>null</strong>. </p>\n"
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "\n<p>\n<em>input</em> has an invalid format. </p>\n"
  - type: System.OverflowException
    commentId: T:System.OverflowException
    description: "\n<p>\n<em>input</em> represents a number that is less than <xref href=\"System.TimeSpan.MinValue\" data-throw-if-not-resolved=\"false\"></xref> or greater than <xref href=\"System.TimeSpan.MaxValue\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>-or- </p>\n<p>At least one of the days, hours, minutes, or seconds components in <em>input</em> is outside its valid range. </p>\n"
  seealso:
  - type: System.TimeSpan.TryParseExact(System.String,System.String[],System.IFormatProvider,System.TimeSpan@)
    commentId: M:System.TimeSpan.TryParseExact(System.String,System.String[],System.IFormatProvider,System.TimeSpan@)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.TimeSpan.ParseExact(System.String, System.String(), System.IFormatProvider)
  name.vb: ParseExact(String, String(), IFormatProvider)
- uid: System.TimeSpan.ParseExact(System.String,System.String[],System.IFormatProvider,System.Globalization.TimeSpanStyles)
  commentId: M:System.TimeSpan.ParseExact(System.String,System.String[],System.IFormatProvider,System.Globalization.TimeSpanStyles)
  id: ParseExact(System.String,System.String[],System.IFormatProvider,System.Globalization.TimeSpanStyles)
  parent: System.TimeSpan
  langs:
  - csharp
  - vb
  name: ParseExact(String, String[], IFormatProvider, TimeSpanStyles)
  fullName: System.TimeSpan.ParseExact(System.String, System.String[], System.IFormatProvider, System.Globalization.TimeSpanStyles)
  type: Method
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ParseExact
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 1705
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Converts the string representation of a time interval to its <xref href=\"System.TimeSpan\" data-throw-if-not-resolved=\"false\"></xref> equivalent by using the specified formats, culture-specific format information, and styles. The format of the string representation must match one of the specified formats exactly. </p>\n"
  remarks: "\n<p>The <xref href=\"System.TimeSpan.ParseExact(System.String,System.String[],System.IFormatProvider,System.Globalization.TimeSpanStyles)\" data-throw-if-not-resolved=\"false\"></xref> method parses the string representation of a time interval, which must be in one of the formats defined by the <em>formats</em> parameter, except that leading and trailing white-space characters are ignored. Because <em>input</em> must exactly conform to one of the formats specified in <em>formats</em>, you should always use exception handling when converting a string input by the user to a time interval. If you prefer not to use exception handling, you can call the <xref href=\"System.TimeSpan.TryParseExact(System.String,System.String[],System.IFormatProvider,System.Globalization.TimeSpanStyles,System.TimeSpan@)\" data-throw-if-not-resolved=\"false\"></xref> method instead.</p>\n<p>The <em>formats</em> parameter is a string array whose elements consist of either a single standard format specifier, or one or more custom format specifiers that define the required format of <em>input</em>. For more information about valid format strings, see Standard TimeSpan Format Strings and Custom TimeSpan Format Strings. <em>input</em> must correspond exactly to a member of <em>formats</em> for the parse operation to succeed. The parse operation attempts to match <em>input</em> to each element in <em>formats</em> starting with the first element in the array.</p>\n<p>The <xref href=\"System.TimeSpan.ParseExact(System.String,System.String,System.IFormatProvider)\" data-throw-if-not-resolved=\"false\"></xref> method uses the conventions of the culture specified by the <em>formatProvider</em> parameter only if the format string used to parse <em>input</em> is a standard <xref href=\"System.TimeSpan\" data-throw-if-not-resolved=\"false\"></xref> format string whose value is either \"g\" or \"G\". The \"c\", \"t\", and \"T\" standard format strings use the formatting conventions of the invariant culture. Custom format strings define the precise format of the input string and use literal characters to separate the components of a time interval.</p>\n<p>The <em>formatProvider</em> parameter is an <xref href=\"System.IFormatProvider\" data-throw-if-not-resolved=\"false\"></xref> implementation that provides culture-specific information about the format of the returned string if the format string used to parse <em>input</em> is a standard format string. The <em>formatProvider</em> parameter can be any of the following:</p>\n<ul><li>\n<p>A <xref href=\"System.Globalization.CultureInfo\" data-throw-if-not-resolved=\"false\"></xref> object that represents the culture whose formatting conventions are to be reflected in the returned string. The <xref href=\"System.Globalization.DateTimeFormatInfo\" data-throw-if-not-resolved=\"false\"></xref> object returned by the <xref href=\"System.Globalization.CultureInfo.DateTimeFormat\" data-throw-if-not-resolved=\"false\"></xref> property defines the formatting of the returned string.</p>\n</li><li>\n<p>A <xref href=\"System.Globalization.DateTimeFormatInfo\" data-throw-if-not-resolved=\"false\"></xref> object that defines the formatting of the returned string.</p>\n</li><li>\n<p>A custom object that implements the <xref href=\"System.IFormatProvider\" data-throw-if-not-resolved=\"false\"></xref> interface. Its <xref href=\"System.IFormatProvider.GetFormat(System.Type)\" data-throw-if-not-resolved=\"false\"></xref> method returns a <xref href=\"System.Globalization.DateTimeFormatInfo\" data-throw-if-not-resolved=\"false\"></xref> object that provides formatting information.</p>\n</li></ul>\n<p>If <em>formatProvider</em> is <strong>null</strong>, the <xref href=\"System.Globalization.DateTimeFormatInfo\" data-throw-if-not-resolved=\"false\"></xref> object that is associated with the current culture is used.</p>\n<p>The <em>styles</em> parameter affects the interpretation of strings that are parsed using custom format strings. It determines whether <em>input</em> is interpreted as a negative time interval only if a negative sign is present (<xref href=\"System.Globalization.TimeSpanStyles.None\" data-throw-if-not-resolved=\"false\"></xref>), or whether it is always interpreted as a negative time interval (<xref href=\"System.Globalization.TimeSpanStyles.AssumeNegative\" data-throw-if-not-resolved=\"false\"></xref>). If <xref href=\"System.Globalization.TimeSpanStyles.AssumeNegative\" data-throw-if-not-resolved=\"false\"></xref> is not used, <em>format</em> must include a literal negative sign symbol (such as \"\\-\") to successfully parse a negative time interval. </p>\n"
  example:
  - "\n<p>The following example calls the <xref href=\"System.TimeSpan.ParseExact(System.String,System.String[],System.IFormatProvider,System.Globalization.TimeSpanStyles)\" data-throw-if-not-resolved=\"false\"></xref> method to convert each element of a string array to a <xref href=\"System.TimeSpan\" data-throw-if-not-resolved=\"false\"></xref> value. The strings can represent a time interval in either the general short format or the general long format. </p>\n<p>In addition, the example changes the way in which the time interval parsing methods interpret a single digit. Ordinarily, a single digit is interpreted as the number of days in a time interval. Instead, the <code>%h</code> custom format string is used to interpret a single digit as the number of hours. For this change to be effective, note that the <code>%h</code> custom format string must precede the other format strings in the <code>formats</code> array. Also note from the output that the <xref href=\"System.Globalization.TimeSpanStyles.AssumeNegative\" data-throw-if-not-resolved=\"false\"></xref> flag specified in the method call is used only when parsing a string with this format specifier.</p>System.TimeSpan.ParseExact#4"
  syntax:
    content: public static TimeSpan ParseExact(string input, string[] formats, IFormatProvider formatProvider, TimeSpanStyles styles)
    content.vb: Public Shared Function ParseExact(input As String, formats As String(), formatProvider As IFormatProvider, styles As TimeSpanStyles) As TimeSpan
    parameters:
    - id: input
      type: System.String
      description: "\n<p>A string that specifies the time interval to convert.</p>\n"
    - id: formats
      type: System.String[]
      description: "\n<p>A array of standard or custom format strings that define the required format of <em>input</em>.</p>\n"
    - id: formatProvider
      type: System.IFormatProvider
      description: "\n<p>An object that provides culture-specific formatting information.</p>\n"
    - id: styles
      type: System.Globalization.TimeSpanStyles
      description: "\n<p>A bitwise combination of enumeration values that defines the style elements that may be present in input.</p>\n"
    return:
      type: System.TimeSpan
      description: "\n<p>A time interval that corresponds to <em>input</em>, as specified by <em>formats</em>, <em>formatProvider</em>, and <em>styles</em>.</p>\n"
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<p>\n<em>styles</em> is an invalid <xref href=\"System.Globalization.TimeSpanStyles\" data-throw-if-not-resolved=\"false\"></xref> value.</p>\n"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>input</em> is <strong>null</strong>. </p>\n"
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "\n<p>\n<em>input</em> has an invalid format. </p>\n"
  - type: System.OverflowException
    commentId: T:System.OverflowException
    description: "\n<p>\n<em>input</em> represents a number that is less than <xref href=\"System.TimeSpan.MinValue\" data-throw-if-not-resolved=\"false\"></xref> or greater than <xref href=\"System.TimeSpan.MaxValue\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>-or- </p>\n<p>At least one of the days, hours, minutes, or seconds components in <em>input</em> is outside its valid range. </p>\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.TimeSpan.ParseExact(System.String, System.String(), System.IFormatProvider, System.Globalization.TimeSpanStyles)
  name.vb: ParseExact(String, String(), IFormatProvider, TimeSpanStyles)
- uid: System.TimeSpan.Subtract(System.TimeSpan)
  commentId: M:System.TimeSpan.Subtract(System.TimeSpan)
  id: Subtract(System.TimeSpan)
  parent: System.TimeSpan
  langs:
  - csharp
  - vb
  name: Subtract(TimeSpan)
  fullName: System.TimeSpan.Subtract(System.TimeSpan)
  type: Method
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Subtract
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 1706
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Returns a new <xref href=\"System.TimeSpan\" data-throw-if-not-resolved=\"false\"></xref> object whose value is the difference between the specified <xref href=\"System.TimeSpan\" data-throw-if-not-resolved=\"false\"></xref> object and this instance.</p>\n"
  remarks: "\n<p>The return value must be between <xref href=\"System.TimeSpan.MinValue\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"System.TimeSpan.MaxValue\" data-throw-if-not-resolved=\"false\"></xref>; otherwise, an exception is thrown.</p>\n<p>The return value is a new <xref href=\"System.TimeSpan\" data-throw-if-not-resolved=\"false\"></xref>; the original <xref href=\"System.TimeSpan\" data-throw-if-not-resolved=\"false\"></xref> is not modified.</p>\n"
  example:
  - "\n<p>The following example uses the <xref href=\"System.TimeSpan.Subtract(System.TimeSpan)\" data-throw-if-not-resolved=\"false\"></xref> method to calculate the difference between a single <xref href=\"System.TimeSpan\" data-throw-if-not-resolved=\"false\"></xref> value and each of the time intervals in an array. Note that, because <xref href=\"System.TimeSpan\" data-throw-if-not-resolved=\"false\"></xref> format strings do not include negative signs in the result string, the example uses conditional logic to include a negative sign with negative time intervals. </p>System.TimeSpan.Subtract#1"
  syntax:
    content: public TimeSpan Subtract(TimeSpan ts)
    content.vb: Public Function Subtract(ts As TimeSpan) As TimeSpan
    parameters:
    - id: ts
      type: System.TimeSpan
      description: "\n<p>The time interval to be subtracted. </p>\n"
    return:
      type: System.TimeSpan
      description: "\n<p>A new time interval whose value is the result of the value of this instance minus the value of <em>ts</em>.</p>\n"
  exceptions:
  - type: System.OverflowException
    commentId: T:System.OverflowException
    description: "\n<p>The return value is less than <xref href=\"System.TimeSpan.MinValue\" data-throw-if-not-resolved=\"false\"></xref> or greater than <xref href=\"System.TimeSpan.MaxValue\" data-throw-if-not-resolved=\"false\"></xref>. </p>\n"
  seealso:
  - type: System.DateTime.Subtract(System.DateTime)
    commentId: M:System.DateTime.Subtract(System.DateTime)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.TimeSpan.System#IComparable#CompareTo(System.Object)
  commentId: M:System.TimeSpan.System#IComparable#CompareTo(System.Object)
  id: System#IComparable#CompareTo(System.Object)
  isEii: true
  parent: System.TimeSpan
  langs:
  - csharp
  - vb
  name: IComparable.CompareTo(Object)
  fullName: System.TimeSpan.System.IComparable.CompareTo(System.Object)
  type: Method
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: System.IComparable.CompareTo
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 1707
  assemblies:
  - System.Runtime
  namespace: System
  syntax:
    content: int IComparable.CompareTo(object value)
    content.vb: Function System.IComparable.CompareTo(value As Object) As Integer Implements IComparable.CompareTo
    parameters:
    - id: value
      type: System.Object
    return:
      type: System.Int32
  implements:
  - System.IComparable.CompareTo(System.Object)
  name.vb: System.IComparable.CompareTo(Object)
- uid: System.TimeSpan.ToString
  commentId: M:System.TimeSpan.ToString
  id: ToString
  parent: System.TimeSpan
  langs:
  - csharp
  - vb
  name: ToString()
  fullName: System.TimeSpan.ToString()
  type: Method
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ToString
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 1708
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Converts the value of the current <xref href=\"System.TimeSpan\" data-throw-if-not-resolved=\"false\"></xref> object to its equivalent string representation.</p>\n"
  remarks: "\n<p>The returned string is formatted with the \"c\" format specifier and has the following format:</p>\n<p>[-][d.]hh:mm:ss[.fffffff] </p>\n<p>Elements in square brackets ([ and ]) may not be included in the returned string. Colons and periods (: and.) are literal characters. The non-literal elements are listed in the following table. Note that the string returned by the <xref href=\"System.TimeSpan.ToString\" data-throw-if-not-resolved=\"false\"></xref> method is not culture-sensitive.</p>\n<p>Item </p>\n<p>Description </p>\n<table><tbody><tr><td>\n<p>\"-\" </p>\n</td><td>\n<p>A minus sign, which indicates a negative time interval. No sign is included for a positive time span.</p>\n</td></tr><tr><td>\n<p>\"d\" </p>\n</td><td>\n<p>The number of days in the time interval. This element is omitted if the time interval is less than one day. </p>\n</td></tr><tr><td>\n<p>\"hh\" </p>\n</td><td>\n<p>The number of hours in the time interval, ranging from 0 to 23. </p>\n</td></tr><tr><td>\n<p>\"mm\" </p>\n</td><td>\n<p>The number of minutes in the time interval, ranging from 0 to 59. </p>\n</td></tr><tr><td>\n<p>\"ss\" </p>\n</td><td>\n<p>The number of seconds in the time interval, ranging from 0 to 59. </p>\n</td></tr><tr><td>\n<p>\"fffffff\" </p>\n</td><td>\n<p>Fractional seconds in the time interval. This element is omitted if the time interval does not include fractional seconds. If present, fractional seconds are always expressed using seven decimal digits.</p>\n</td></tr></tbody></table>\n<p>For more information about comparing the string representation of <xref href=\"System.TimeSpan\" data-throw-if-not-resolved=\"false\"></xref> and Oracle data types, see Knowledge Base article <see href=\"http://go.microsoft.com/fwlink/?LinkId=161146\">324577: System.TimeSpan Does Not Match Oracle 9i INTERVAL DAY TO SECOND Data Type</see>. </p>\n"
  example:
  - "\n<p>The following example displays the strings returned by calling the <xref href=\"System.TimeSpan.ToString\" data-throw-if-not-resolved=\"false\"></xref> method with a number of <xref href=\"System.TimeSpan\" data-throw-if-not-resolved=\"false\"></xref> values. Note that although the example does not call the <xref href=\"System.TimeSpan.ToString\" data-throw-if-not-resolved=\"false\"></xref> method directly, it is called by the <xref href=\"System.Console.WriteLine\" data-throw-if-not-resolved=\"false\"></xref> method when it attempts to convert a <xref href=\"System.TimeSpan\" data-throw-if-not-resolved=\"false\"></xref> value to its string representation. </p>System.TimeSpan.ToString#1"
  syntax:
    content: public override string ToString()
    content.vb: Public Overrides Function ToString As String
    return:
      type: System.String
      description: "\n<p>The string representation of the current <xref href=\"System.TimeSpan\" data-throw-if-not-resolved=\"false\"></xref> value. </p>\n"
  overridden: System.ValueType.ToString
  seealso:
  - type: System.String
    commentId: T:System.String
  - type: System.TimeSpan.Parse(System.String)
    commentId: M:System.TimeSpan.Parse(System.String)
  - type: System.TimeSpan.TryParse(System.String,System.TimeSpan@)
    commentId: M:System.TimeSpan.TryParse(System.String,System.TimeSpan@)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.TimeSpan.ToString(System.String)
  commentId: M:System.TimeSpan.ToString(System.String)
  id: ToString(System.String)
  parent: System.TimeSpan
  langs:
  - csharp
  - vb
  name: ToString(String)
  fullName: System.TimeSpan.ToString(System.String)
  type: Method
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ToString
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 1709
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Converts the value of the current <xref href=\"System.TimeSpan\" data-throw-if-not-resolved=\"false\"></xref> object to its equivalent string representation by using the specified format.</p>\n"
  remarks: "\n<p>The <em>format</em> parameter can be any valid standard or custom format specifier for <xref href=\"System.TimeSpan\" data-throw-if-not-resolved=\"false\"></xref> values. If <em>format</em> is equal to <xref href=\"System.String.Empty\" data-throw-if-not-resolved=\"false\"></xref> or is <strong>null</strong>, the return value of the current <xref href=\"System.TimeSpan\" data-throw-if-not-resolved=\"false\"></xref> object is formatted with the common format specifier (\"c\"). If <em>format</em> is any other value, the method throws a <xref href=\"System.FormatException\" data-throw-if-not-resolved=\"false\"></xref>. </p>\n<p>If <em>format</em> is a standard format string, the format of the returned string is defined by the formatting conventions of the current culture.</p>\n<p>The custom format strings for <xref href=\"System.TimeSpan\" data-throw-if-not-resolved=\"false\"></xref> values do not include a date or time separator. If you want to include these elements in your format string, you must treat them as character literals. See the example for an illustration, and see the Custom TimeSpan Format Strings topic for more information. </p>\n<p>The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics:</p>\n<ul><li>\n<p>For more information about format strings for <xref href=\"System.TimeSpan\" data-throw-if-not-resolved=\"false\"></xref> values, see Standard TimeSpan Format Strings and Custom TimeSpan Format Strings.</p>\n</li><li>\n<p>For more information about support for formatting in the .NET Framework, see Formatting Types in the .NET Framework.</p>\n</li></ul>\n"
  example:
  - "\n<p>The following example uses standard and custom <xref href=\"System.TimeSpan\" data-throw-if-not-resolved=\"false\"></xref> format strings to display the string representation of each element in an array of <xref href=\"System.TimeSpan\" data-throw-if-not-resolved=\"false\"></xref> values </p>System.TimeSpan.ToString#3"
  syntax:
    content: public string ToString(string format)
    content.vb: Public Function ToString(format As String) As String
    parameters:
    - id: format
      type: System.String
      description: "\n<p>A standard or custom <xref href=\"System.TimeSpan\" data-throw-if-not-resolved=\"false\"></xref> format string.</p>\n"
    return:
      type: System.String
      description: "\n<p>The string representation of the current <xref href=\"System.TimeSpan\" data-throw-if-not-resolved=\"false\"></xref> value in the format specified by the <em>format</em> parameter.</p>\n"
  exceptions:
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "\n<p>The <em>format</em> parameter is not recognized or is not supported.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.TimeSpan.ToString(System.String,System.IFormatProvider)
  commentId: M:System.TimeSpan.ToString(System.String,System.IFormatProvider)
  id: ToString(System.String,System.IFormatProvider)
  parent: System.TimeSpan
  langs:
  - csharp
  - vb
  name: ToString(String, IFormatProvider)
  fullName: System.TimeSpan.ToString(System.String, System.IFormatProvider)
  type: Method
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ToString
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 1710
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Converts the value of the current <xref href=\"System.TimeSpan\" data-throw-if-not-resolved=\"false\"></xref> object to its equivalent string representation by using the specified format and culture-specific formatting information.</p>\n"
  remarks: "\n<p>The <em>format</em> parameter can be any valid standard or custom format specifier for <xref href=\"System.TimeSpan\" data-throw-if-not-resolved=\"false\"></xref> values. If <em>format</em> is equal to <xref href=\"System.String.Empty\" data-throw-if-not-resolved=\"false\"></xref> or is <strong>null</strong>, the return value of the current <xref href=\"System.TimeSpan\" data-throw-if-not-resolved=\"false\"></xref> object is formatted with the common format specifier (\"c\"). If format is any other value, the method throws a <xref href=\"System.FormatException\" data-throw-if-not-resolved=\"false\"></xref>. </p>\n<p>The custom format strings for <xref href=\"System.TimeSpan\" data-throw-if-not-resolved=\"false\"></xref> values do not include a date or time separator. If you want to include these elements in your format string, you must treat them as character literals. See the example for an illustration, and see the Custom TimeSpan Format Strings topic for more information. </p>\n<p>The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics:</p>\n<ul><li>\n<p>For more information about format strings for <xref href=\"System.TimeSpan\" data-throw-if-not-resolved=\"false\"></xref> values, see Standard TimeSpan Format Strings and Custom TimeSpan Format Strings.</p>\n</li><li>\n<p>For more information about support for formatting in the .NET Framework, see Formatting Types in the .NET Framework.</p>\n</li></ul>\n<p>The <em>formatProvider</em> parameter is an <xref href=\"System.IFormatProvider\" data-throw-if-not-resolved=\"false\"></xref> implementation that provides culture-specific information about the format of the returned string. The <em>formatProvider</em> parameter can be any of the following:</p>\n<ul><li>\n<p>A <xref href=\"System.Globalization.CultureInfo\" data-throw-if-not-resolved=\"false\"></xref> object that represents the culture whose formatting conventions are to be reflected in the returned string. The <xref href=\"System.Globalization.DateTimeFormatInfo\" data-throw-if-not-resolved=\"false\"></xref> object retuned by the <xref href=\"System.Globalization.CultureInfo.DateTimeFormat\" data-throw-if-not-resolved=\"false\"></xref> property defines the formatting of the returned string.</p>\n</li><li>\n<p>A <xref href=\"System.Globalization.DateTimeFormatInfo\" data-throw-if-not-resolved=\"false\"></xref> object that defines the formatting of the returned string.</p>\n</li><li>\n<p>A custom object that implements the <xref href=\"System.IFormatProvider\" data-throw-if-not-resolved=\"false\"></xref> interface. Its <xref href=\"System.IFormatProvider.GetFormat(System.Type)\" data-throw-if-not-resolved=\"false\"></xref> method returns a <xref href=\"System.Globalization.DateTimeFormatInfo\" data-throw-if-not-resolved=\"false\"></xref> object that provides formatting information.</p>\n</li></ul>\n<p>If <em>formatProvider</em> is <strong>null</strong>, the <xref href=\"System.Globalization.DateTimeFormatInfo\" data-throw-if-not-resolved=\"false\"></xref> object that is associated with the current culture is used. If <em>format</em> is a custom format string, the <em>formatProvider</em> parameter is ignored.</p>\n"
  example:
  - "\n<p>The following example calls the <xref href=\"System.TimeSpan.ToString(System.String,System.IFormatProvider)\" data-throw-if-not-resolved=\"false\"></xref> method to format two time intervals. The example calls the method twice for each format string, first to display it using the conventions of the en-US culture and then to display it using the conventions of the fr-FR culture.</p>System.TimeSpan.ToString#4"
  syntax:
    content: public string ToString(string format, IFormatProvider formatProvider)
    content.vb: Public Function ToString(format As String, formatProvider As IFormatProvider) As String
    parameters:
    - id: format
      type: System.String
      description: "\n<p>A standard or custom <xref href=\"System.TimeSpan\" data-throw-if-not-resolved=\"false\"></xref> format string.</p>\n"
    - id: formatProvider
      type: System.IFormatProvider
      description: "\n<p>An object that supplies culture-specific formatting information.</p>\n"
    return:
      type: System.String
      description: "\n<p>The string representation of the current <xref href=\"System.TimeSpan\" data-throw-if-not-resolved=\"false\"></xref> value, as specified by <em>format</em> and <em>formatProvider</em>.</p>\n"
  exceptions:
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "\n<p>The <em>format</em> parameter is not recognized or is not supported.</p>\n"
  implements:
  - System.IFormattable.ToString(System.String,System.IFormatProvider)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.TimeSpan.TryParse(System.String,System.IFormatProvider,System.TimeSpan@)
  commentId: M:System.TimeSpan.TryParse(System.String,System.IFormatProvider,System.TimeSpan@)
  id: TryParse(System.String,System.IFormatProvider,System.TimeSpan@)
  parent: System.TimeSpan
  langs:
  - csharp
  - vb
  name: TryParse(String, IFormatProvider, out TimeSpan)
  fullName: System.TimeSpan.TryParse(System.String, System.IFormatProvider, out System.TimeSpan)
  type: Method
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: TryParse
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 1711
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Converts the string representation of a time interval to its <xref href=\"System.TimeSpan\" data-throw-if-not-resolved=\"false\"></xref> equivalent by using the specified culture-specific formatting information, and returns a value that indicates whether the conversion succeeded.</p>\n"
  remarks: "\n<p>The <xref href=\"System.TimeSpan.TryParse(System.String,System.IFormatProvider,System.TimeSpan@)\" data-throw-if-not-resolved=\"false\"></xref> method is like the <xref href=\"System.TimeSpan.Parse(System.String,System.IFormatProvider)\" data-throw-if-not-resolved=\"false\"></xref> method, except that it does not throw an exception if the conversion fails.</p>\n<p>The <em>input</em> parameter contains a time interval specification in the form: </p>\n<p>[ws][-]{ d | d.hh:mm[:ss[.ff]] | hh:mm[:ss[.ff]] }[ws]</p>\n<p>Elements in square brackets ([ and ]) are optional. One selection from the list of alternatives enclosed in braces ({ and }) and separated by vertical bars (|) is required. The following table describes each element.</p>\n<p>Element </p>\n<p>Description </p>\n<table><tbody><tr><td>\n<p>ws</p>\n</td><td>\n<p>Optional white space. </p>\n</td></tr><tr><td>\n<p>-</p>\n</td><td>\n<p>An optional minus sign, which indicates a negative <xref href=\"System.TimeSpan\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n</td></tr><tr><td>\n<p>d</p>\n</td><td>\n<p>Days, ranging from 0 to 10675199.</p>\n</td></tr><tr><td>\n<p>.</p>\n</td><td>\n<p>A culture-sensitive symbol that separates days from hours. The invariant format uses a period (\".\") character.</p>\n</td></tr><tr><td>\n<p>hh</p>\n</td><td>\n<p>Hours, ranging from 0 to 23. </p>\n</td></tr><tr><td>\n<p>:</p>\n</td><td>\n<p>The culture-sensitive time separator symbol. The invariant format uses a colon (\":\") character.</p>\n</td></tr><tr><td>\n<p>mm</p>\n</td><td>\n<p>Minutes, ranging from 0 to 59. </p>\n</td></tr><tr><td>\n<p>ss</p>\n</td><td>\n<p>Optional seconds, ranging from 0 to 59. </p>\n</td></tr><tr><td>\n<p>.</p>\n</td><td>\n<p>A culture-sensitive symbol that separates seconds from fractions of a second. The invariant format uses a period (\".\") character.</p>\n</td></tr><tr><td>\n<p>ff</p>\n</td><td>\n<p>Optional fractional seconds, consisting of one to seven decimal digits. </p>\n</td></tr></tbody></table>\n<p>The components of <em>input</em> must collectively specify a time interval that is greater than or equal to <xref href=\"System.TimeSpan.MinValue\" data-throw-if-not-resolved=\"false\"></xref> and less than or equal to <xref href=\"System.TimeSpan.MaxValue\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>The <xref href=\"System.TimeSpan.TryParse(System.String,System.IFormatProvider,System.TimeSpan@)\" data-throw-if-not-resolved=\"false\"></xref> method tries to parse <em>input</em> by using each of the culture-specific formats for the culture specified by <em>formatProvider</em>.</p>\n<p>The <em>formatProvider</em> parameter is an <xref href=\"System.IFormatProvider\" data-throw-if-not-resolved=\"false\"></xref> implementation that provides culture-specific information about the format of the returned string. The <em>formatProvider</em> parameter can be any of the following:</p>\n<ul><li>\n<p>A <xref href=\"System.Globalization.CultureInfo\" data-throw-if-not-resolved=\"false\"></xref> object that represents the culture whose formatting conventions are to be reflected in the returned string. The <xref href=\"System.Globalization.DateTimeFormatInfo\" data-throw-if-not-resolved=\"false\"></xref> object returned by the <xref href=\"System.Globalization.CultureInfo.DateTimeFormat\" data-throw-if-not-resolved=\"false\"></xref> property defines the formatting of the returned string.</p>\n</li><li>\n<p>A <xref href=\"System.Globalization.DateTimeFormatInfo\" data-throw-if-not-resolved=\"false\"></xref> object that defines the formatting of the returned string.</p>\n</li><li>\n<p>A custom object that implements the <xref href=\"System.IFormatProvider\" data-throw-if-not-resolved=\"false\"></xref> interface. Its <xref href=\"System.IFormatProvider.GetFormat(System.Type)\" data-throw-if-not-resolved=\"false\"></xref> method returns a <xref href=\"System.Globalization.DateTimeFormatInfo\" data-throw-if-not-resolved=\"false\"></xref> object that provides formatting information.</p>\n</li></ul>\n<p>If <em>formatProvider</em> is <strong>null</strong>, the <xref href=\"System.Globalization.DateTimeFormatInfo\" data-throw-if-not-resolved=\"false\"></xref> object that is associated with the current culture is used.</p>\n"
  example:
  - "\n<p>The following example defines an array of <xref href=\"System.Globalization.CultureInfo\" data-throw-if-not-resolved=\"false\"></xref> objects, and uses each object in calls to the <xref href=\"System.TimeSpan.TryParse(System.String,System.IFormatProvider,System.TimeSpan@)\" data-throw-if-not-resolved=\"false\"></xref> method to parse the elements in a string array. The example illustrates how the conventions of a specific culture influence the formatting operation.</p>System.TimeSpan.TryParse#2"
  syntax:
    content: public static bool TryParse(string input, IFormatProvider formatProvider, out TimeSpan result)
    content.vb: Public Shared Function TryParse(input As String, formatProvider As IFormatProvider, ByRef result As TimeSpan) As Boolean
    parameters:
    - id: input
      type: System.String
      description: "\n<p>A string that specifies the time interval to convert.</p>\n"
    - id: formatProvider
      type: System.IFormatProvider
      description: "\n<p>An object that supplies culture-specific formatting information.</p>\n"
    - id: result
      type: System.TimeSpan
      description: "\n<p>When this method returns, contains an object that represents the time interval specified by <em>input</em>, or <xref href=\"System.TimeSpan.Zero\" data-throw-if-not-resolved=\"false\"></xref> if the conversion failed. This parameter is passed uninitialized.</p>\n"
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if <em>input</em> was converted successfully; otherwise, <strong>false</strong>. This operation returns <strong>false</strong> if the <em>input</em> parameter is <strong>null</strong> or <xref href=\"System.String.Empty\" data-throw-if-not-resolved=\"false\"></xref>, has an invalid format, represents a time interval that is less than <xref href=\"System.TimeSpan.MinValue\" data-throw-if-not-resolved=\"false\"></xref> or greater than <xref href=\"System.TimeSpan.MaxValue\" data-throw-if-not-resolved=\"false\"></xref>, or has at least one days, hours, minutes, or seconds component outside its valid range.</p>\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.TimeSpan.TryParse(System.String, System.IFormatProvider, ByRef System.TimeSpan)
  name.vb: TryParse(String, IFormatProvider, ByRef TimeSpan)
- uid: System.TimeSpan.TryParse(System.String,System.TimeSpan@)
  commentId: M:System.TimeSpan.TryParse(System.String,System.TimeSpan@)
  id: TryParse(System.String,System.TimeSpan@)
  parent: System.TimeSpan
  langs:
  - csharp
  - vb
  name: TryParse(String, out TimeSpan)
  fullName: System.TimeSpan.TryParse(System.String, out System.TimeSpan)
  type: Method
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: TryParse
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 1712
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Converts the string representation of a time interval to its <xref href=\"System.TimeSpan\" data-throw-if-not-resolved=\"false\"></xref> equivalent and returns a value that indicates whether the conversion succeeded.</p>\n"
  remarks: "\n<p>The <xref href=\"System.TimeSpan.TryParse(System.String,System.TimeSpan@)\" data-throw-if-not-resolved=\"false\"></xref> method is like the <xref href=\"System.TimeSpan.Parse(System.String)\" data-throw-if-not-resolved=\"false\"></xref> method, except that it does not throw an exception if the conversion fails.</p>\n<p>The <em>s</em> parameter contains a time interval specification in the form: </p>\n<p>[ws][-]{ d | d.hh:mm[:ss[.ff]] | hh:mm[:ss[.ff]] }[ws]</p>\n<p>Elements in square brackets ([ and ]) are optional. One selection from the list of alternatives enclosed in braces ({ and }) and separated by vertical bars (|) is required. The following table describes each element.</p>\n<p>Element </p>\n<p>Description </p>\n<table><tbody><tr><td>\n<p>ws</p>\n</td><td>\n<p>Optional white space. </p>\n</td></tr><tr><td>\n<p>-</p>\n</td><td>\n<p>An optional minus sign, which indicates a negative <xref href=\"System.TimeSpan\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n</td></tr><tr><td>\n<p>d</p>\n</td><td>\n<p>Days, ranging from 0 to 10675199.</p>\n</td></tr><tr><td>\n<p>.</p>\n</td><td>\n<p>A culture-sensitive symbol that separates days from hours. The invariant format uses a period (\".\") character.</p>\n</td></tr><tr><td>\n<p>hh</p>\n</td><td>\n<p>Hours, ranging from 0 to 23. </p>\n</td></tr><tr><td>\n<p>:</p>\n</td><td>\n<p>The culture-sensitive time separator symbol. The invariant format uses a colon (\":\") character.</p>\n</td></tr><tr><td>\n<p>mm</p>\n</td><td>\n<p>Minutes, ranging from 0 to 59. </p>\n</td></tr><tr><td>\n<p>ss</p>\n</td><td>\n<p>Optional seconds, ranging from 0 to 59. </p>\n</td></tr><tr><td>\n<p>.</p>\n</td><td>\n<p>A culture-sensitive symbol that separates seconds from fractions of a second. The invariant format uses a period (\".\") character.</p>\n</td></tr><tr><td>\n<p>ff</p>\n</td><td>\n<p>Optional fractional seconds, consisting of one to seven decimal digits. </p>\n</td></tr></tbody></table>\n<p>The components of <em>s</em> must collectively specify a time interval that is greater than or equal to <xref href=\"System.TimeSpan.MinValue\" data-throw-if-not-resolved=\"false\"></xref> and less than or equal to <xref href=\"System.TimeSpan.MaxValue\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>The <xref href=\"System.TimeSpan.Parse(System.String)\" data-throw-if-not-resolved=\"false\"></xref> method tries to parse <em>s</em> by using each of the culture-specific formats for the current culture.</p>\n"
  example:
  - "\n<p>The following example uses the <xref href=\"System.TimeSpan.TryParse(System.String,System.TimeSpan@)\" data-throw-if-not-resolved=\"false\"></xref> method to create <xref href=\"System.TimeSpan\" data-throw-if-not-resolved=\"false\"></xref> objects from valid <xref href=\"System.TimeSpan\" data-throw-if-not-resolved=\"false\"></xref> strings and to indicate when the parse operation has failed because the time span string is invalid.</p>System.TimeSpan.TryParse#1"
  syntax:
    content: public static bool TryParse(string s, out TimeSpan result)
    content.vb: Public Shared Function TryParse(s As String, ByRef result As TimeSpan) As Boolean
    parameters:
    - id: s
      type: System.String
      description: "\n<p>A string that specifies the time interval to convert.</p>\n"
    - id: result
      type: System.TimeSpan
      description: "\n<p>When this method returns, contains an object that represents the time interval specified by <em>s</em>, or <xref href=\"System.TimeSpan.Zero\" data-throw-if-not-resolved=\"false\"></xref> if the conversion failed. This parameter is passed uninitialized.</p>\n"
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if <em>s</em> was converted successfully; otherwise, <strong>false</strong>. This operation returns <strong>false</strong> if the <em>s</em> parameter is <strong>null</strong> or <xref href=\"System.String.Empty\" data-throw-if-not-resolved=\"false\"></xref>, has an invalid format, represents a time interval that is less than <xref href=\"System.TimeSpan.MinValue\" data-throw-if-not-resolved=\"false\"></xref> or greater than <xref href=\"System.TimeSpan.MaxValue\" data-throw-if-not-resolved=\"false\"></xref>, or has at least one days, hours, minutes, or seconds component outside its valid range.</p>\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.TimeSpan.TryParse(System.String, ByRef System.TimeSpan)
  name.vb: TryParse(String, ByRef TimeSpan)
- uid: System.TimeSpan.TryParseExact(System.String,System.String,System.IFormatProvider,System.Globalization.TimeSpanStyles,System.TimeSpan@)
  commentId: M:System.TimeSpan.TryParseExact(System.String,System.String,System.IFormatProvider,System.Globalization.TimeSpanStyles,System.TimeSpan@)
  id: TryParseExact(System.String,System.String,System.IFormatProvider,System.Globalization.TimeSpanStyles,System.TimeSpan@)
  parent: System.TimeSpan
  langs:
  - csharp
  - vb
  name: TryParseExact(String, String, IFormatProvider, TimeSpanStyles, out TimeSpan)
  fullName: System.TimeSpan.TryParseExact(System.String, System.String, System.IFormatProvider, System.Globalization.TimeSpanStyles, out System.TimeSpan)
  type: Method
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: TryParseExact
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 1713
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Converts the string representation of a time interval to its <xref href=\"System.TimeSpan\" data-throw-if-not-resolved=\"false\"></xref> equivalent by using the specified format, culture-specific format information, and styles, and returns a value that indicates whether the conversion succeeded. The format of the string representation must match the specified format exactly. </p>\n"
  remarks: "\n<p>The <xref href=\"System.TimeSpan.TryParseExact(System.String,System.String,System.IFormatProvider,System.Globalization.TimeSpanStyles,System.TimeSpan@)\" data-throw-if-not-resolved=\"false\"></xref> method parses the string representation of a time interval, which must be in the format defined by the <em>format</em> parameter, except that leading and trailing white-space characters are ignored. This method is similar to the <xref href=\"System.TimeSpan.ParseExact(System.String,System.String,System.IFormatProvider,System.Globalization.TimeSpanStyles)\" data-throw-if-not-resolved=\"false\"></xref> method, except that it does not throw an exception if the conversion fails.</p>\n<p>The <em>format</em> parameter is a string that contains either a single standard format specifier, or one or more custom format specifiers that define the required format of <em>input</em>. For more information about valid format strings, see Standard TimeSpan Format Strings and Custom TimeSpan Format Strings. </p>\n<p>The <em>formatProvider</em> parameter is an <xref href=\"System.IFormatProvider\" data-throw-if-not-resolved=\"false\"></xref> implementation that provides culture-specific information about the format of the returned string if <em>format</em> is a standard format string. The <em>formatProvider</em> parameter can be any of the following:</p>\n<ul><li>\n<p>A <xref href=\"System.Globalization.CultureInfo\" data-throw-if-not-resolved=\"false\"></xref> object that represents the culture whose formatting conventions are to be reflected in the returned string. The <xref href=\"System.Globalization.DateTimeFormatInfo\" data-throw-if-not-resolved=\"false\"></xref> object returned by the <xref href=\"System.Globalization.CultureInfo.DateTimeFormat\" data-throw-if-not-resolved=\"false\"></xref> property defines the formatting of the returned string.</p>\n</li><li>\n<p>A <xref href=\"System.Globalization.DateTimeFormatInfo\" data-throw-if-not-resolved=\"false\"></xref> object that defines the formatting of the returned string.</p>\n</li><li>\n<p>A custom object that implements the <xref href=\"System.IFormatProvider\" data-throw-if-not-resolved=\"false\"></xref> interface. Its <xref href=\"System.IFormatProvider.GetFormat(System.Type)\" data-throw-if-not-resolved=\"false\"></xref> method returns a <xref href=\"System.Globalization.DateTimeFormatInfo\" data-throw-if-not-resolved=\"false\"></xref> object that provides formatting information.</p>\n</li></ul>\n<p>If <em>formatProvider</em> is <strong>null</strong>, the <xref href=\"System.Globalization.DateTimeFormatInfo\" data-throw-if-not-resolved=\"false\"></xref> object that is associated with the current culture is used.</p>\n<p>The <em>styles</em> parameter affects the interpretation of strings parsed using custom format strings. It determines whether <em>input</em> is interpreted as a negative time interval only if a negative sign is present (<xref href=\"System.Globalization.TimeSpanStyles.None\" data-throw-if-not-resolved=\"false\"></xref>), or whether it is always interpreted as a negative time interval (<xref href=\"System.Globalization.TimeSpanStyles.AssumeNegative\" data-throw-if-not-resolved=\"false\"></xref>). If <xref href=\"System.Globalization.TimeSpanStyles.AssumeNegative\" data-throw-if-not-resolved=\"false\"></xref> is not used, <em>format</em> must include a literal negative sign symbol (such as \"\\-\") to successfully parse a negative time interval.</p>\n"
  example:
  - "\n<p>The following example uses the <xref href=\"System.TimeSpan.ParseExact(System.String,System.String,System.IFormatProvider)\" data-throw-if-not-resolved=\"false\"></xref> method to parse several string representations of time intervals using various format strings and cultures. It also uses the <xref href=\"System.Globalization.TimeSpanStyles.AssumeNegative\" data-throw-if-not-resolved=\"false\"></xref> value to interpret each string as a negative time interval. The output from the example illustrates that the <xref href=\"System.Globalization.TimeSpanStyles.AssumeNegative\" data-throw-if-not-resolved=\"false\"></xref> style affects the return value only when it is used with custom format strings.</p>System.TimeSpan.TryParseExact#2"
  syntax:
    content: public static bool TryParseExact(string input, string format, IFormatProvider formatProvider, TimeSpanStyles styles, out TimeSpan result)
    content.vb: Public Shared Function TryParseExact(input As String, format As String, formatProvider As IFormatProvider, styles As TimeSpanStyles, ByRef result As TimeSpan) As Boolean
    parameters:
    - id: input
      type: System.String
      description: "\n<p>A string that specifies the time interval to convert.</p>\n"
    - id: format
      type: System.String
      description: "\n<p>A standard or custom format string that defines the required format of <em>input</em>.</p>\n"
    - id: formatProvider
      type: System.IFormatProvider
      description: "\n<p>An object that provides culture-specific formatting information.</p>\n"
    - id: styles
      type: System.Globalization.TimeSpanStyles
      description: "\n<p>One or more enumeration values that indicate the style of <em>input</em>.</p>\n"
    - id: result
      type: System.TimeSpan
      description: "\n<p>When this method returns, contains an object that represents the time interval specified by <em>input</em>, or <xref href=\"System.TimeSpan.Zero\" data-throw-if-not-resolved=\"false\"></xref> if the conversion failed. This parameter is passed uninitialized.</p>\n"
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if <em>input</em> was converted successfully; otherwise, <strong>false</strong>.</p>\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.TimeSpan.TryParseExact(System.String, System.String, System.IFormatProvider, System.Globalization.TimeSpanStyles, ByRef System.TimeSpan)
  name.vb: TryParseExact(String, String, IFormatProvider, TimeSpanStyles, ByRef TimeSpan)
- uid: System.TimeSpan.TryParseExact(System.String,System.String,System.IFormatProvider,System.TimeSpan@)
  commentId: M:System.TimeSpan.TryParseExact(System.String,System.String,System.IFormatProvider,System.TimeSpan@)
  id: TryParseExact(System.String,System.String,System.IFormatProvider,System.TimeSpan@)
  parent: System.TimeSpan
  langs:
  - csharp
  - vb
  name: TryParseExact(String, String, IFormatProvider, out TimeSpan)
  fullName: System.TimeSpan.TryParseExact(System.String, System.String, System.IFormatProvider, out System.TimeSpan)
  type: Method
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: TryParseExact
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 1714
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Converts the string representation of a time interval to its <xref href=\"System.TimeSpan\" data-throw-if-not-resolved=\"false\"></xref> equivalent by using the specified format and culture-specific format information, and returns a value that indicates whether the conversion succeeded. The format of the string representation must match the specified format exactly. </p>\n"
  remarks: "\n<p>The <xref href=\"System.TimeSpan.TryParseExact(System.String,System.String,System.IFormatProvider,System.TimeSpan@)\" data-throw-if-not-resolved=\"false\"></xref> method parses the string representation of a time interval, which must be in the format defined by the <em>format</em> parameter, except that leading and trailing white-space characters are ignored. This method is similar to the <xref href=\"System.TimeSpan.ParseExact(System.String,System.String,System.IFormatProvider)\" data-throw-if-not-resolved=\"false\"></xref> method, except that it does not throw an exception if the conversion fails.</p>\n<p>The <em>format</em> parameter is a string that contains either a single standard format specifier, or one or more custom format specifiers that define the required format of <em>input</em>. For more information about valid format strings, see Standard TimeSpan Format Strings and Custom TimeSpan Format Strings. </p>\n<p>The <xref href=\"System.TimeSpan.TryParseExact(System.String,System.String,System.IFormatProvider,System.TimeSpan@)\" data-throw-if-not-resolved=\"false\"></xref> method uses the conventions of the culture specified by the <em>formatProvider</em> parameter only if <em>format</em> is a standard <xref href=\"System.TimeSpan\" data-throw-if-not-resolved=\"false\"></xref> format string whose value is either \"g\" or \"G\". The \"c\", \"t\", and \"T\" standard format strings use the formatting conventions of the invariant culture. Custom format strings define the precise format of the input string and use literal characters to separate the components of a time interval.</p>\n<p>The <em>formatProvider</em> parameter is an <xref href=\"System.IFormatProvider\" data-throw-if-not-resolved=\"false\"></xref> implementation that provides culture-specific information about the format of the returned string if <em>format</em> is a standard format string. The <em>formatProvider</em> parameter can be any of the following:</p>\n<ul><li>\n<p>A <xref href=\"System.Globalization.CultureInfo\" data-throw-if-not-resolved=\"false\"></xref> object that represents the culture whose formatting conventions are to be reflected in the returned string. The <xref href=\"System.Globalization.DateTimeFormatInfo\" data-throw-if-not-resolved=\"false\"></xref> object returned by the <xref href=\"System.Globalization.CultureInfo.DateTimeFormat\" data-throw-if-not-resolved=\"false\"></xref> property defines the formatting of the returned string.</p>\n</li><li>\n<p>A <xref href=\"System.Globalization.DateTimeFormatInfo\" data-throw-if-not-resolved=\"false\"></xref> object that defines the formatting of the returned string.</p>\n</li><li>\n<p>A custom object that implements the <xref href=\"System.IFormatProvider\" data-throw-if-not-resolved=\"false\"></xref> interface. Its <xref href=\"System.IFormatProvider.GetFormat(System.Type)\" data-throw-if-not-resolved=\"false\"></xref> method returns a <xref href=\"System.Globalization.DateTimeFormatInfo\" data-throw-if-not-resolved=\"false\"></xref> object that provides formatting information.</p>\n</li></ul>\n<p>If <em>formatProvider</em> is <strong>null</strong>, the <xref href=\"System.Globalization.DateTimeFormatInfo\" data-throw-if-not-resolved=\"false\"></xref> object that is associated with the current culture is used.</p>\n"
  example:
  - "\n<p>The following example uses the <xref href=\"System.TimeSpan.TryParseExact(System.String,System.String,System.IFormatProvider,System.Globalization.TimeSpanStyles,System.TimeSpan@)\" data-throw-if-not-resolved=\"false\"></xref> method to parse several string representations of time intervals using various format strings and cultures.</p>System.TimeSpan.TryParseExact#1"
  syntax:
    content: public static bool TryParseExact(string input, string format, IFormatProvider formatProvider, out TimeSpan result)
    content.vb: Public Shared Function TryParseExact(input As String, format As String, formatProvider As IFormatProvider, ByRef result As TimeSpan) As Boolean
    parameters:
    - id: input
      type: System.String
      description: "\n<p>A string that specifies the time interval to convert.</p>\n"
    - id: format
      type: System.String
      description: "\n<p>A standard or custom format string that defines the required format of <em>input</em>.</p>\n"
    - id: formatProvider
      type: System.IFormatProvider
      description: "\n<p>An object that supplies culture-specific formatting information.</p>\n"
    - id: result
      type: System.TimeSpan
      description: "\n<p>When this method returns, contains an object that represents the time interval specified by <em>input</em>, or <xref href=\"System.TimeSpan.Zero\" data-throw-if-not-resolved=\"false\"></xref> if the conversion failed. This parameter is passed uninitialized.</p>\n"
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if <em>input</em> was converted successfully; otherwise, <strong>false</strong>.</p>\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.TimeSpan.TryParseExact(System.String, System.String, System.IFormatProvider, ByRef System.TimeSpan)
  name.vb: TryParseExact(String, String, IFormatProvider, ByRef TimeSpan)
- uid: System.TimeSpan.TryParseExact(System.String,System.String[],System.IFormatProvider,System.Globalization.TimeSpanStyles,System.TimeSpan@)
  commentId: M:System.TimeSpan.TryParseExact(System.String,System.String[],System.IFormatProvider,System.Globalization.TimeSpanStyles,System.TimeSpan@)
  id: TryParseExact(System.String,System.String[],System.IFormatProvider,System.Globalization.TimeSpanStyles,System.TimeSpan@)
  parent: System.TimeSpan
  langs:
  - csharp
  - vb
  name: TryParseExact(String, String[], IFormatProvider, TimeSpanStyles, out TimeSpan)
  fullName: System.TimeSpan.TryParseExact(System.String, System.String[], System.IFormatProvider, System.Globalization.TimeSpanStyles, out System.TimeSpan)
  type: Method
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: TryParseExact
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 1715
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Converts the specified string representation of a time interval to its <xref href=\"System.TimeSpan\" data-throw-if-not-resolved=\"false\"></xref> equivalent by using the specified formats, culture-specific format information, and styles, and returns a value that indicates whether the conversion succeeded. The format of the string representation must match one of the specified formats exactly. </p>\n"
  remarks: "\n<p>The <xref href=\"System.TimeSpan.TryParseExact(System.String,System.String[],System.IFormatProvider,System.Globalization.TimeSpanStyles,System.TimeSpan@)\" data-throw-if-not-resolved=\"false\"></xref> method parses the string representation of a time interval, which must be in the format defined by one of the format strings specified by the <em>formats</em> parameter, except that leading and trailing white-space characters are ignored. This method is similar to the <xref href=\"System.TimeSpan.ParseExact(System.String,System.String[],System.IFormatProvider,System.Globalization.TimeSpanStyles)\" data-throw-if-not-resolved=\"false\"></xref> method, except that it does not throw an exception if the conversion fails.</p>\n<p>The <em>formats</em> parameter is a string array whose elements consist of either a single standard format specifier, or one or more custom format specifiers that define the required format of <em>input</em>. For more information about valid format strings, see Standard TimeSpan Format Strings and Custom TimeSpan Format Strings. <em>input</em> must correspond exactly to a member of <em>formats</em> for the parse operation to succeed. The parse operation attempts to match <em>input</em> to each element in <em>formats</em> starting with the first element in the array.</p>\n<p>The <xref href=\"System.TimeSpan.ParseExact(System.String,System.String,System.IFormatProvider)\" data-throw-if-not-resolved=\"false\"></xref> method uses the conventions of the culture specified by the <em>formatProvider</em> parameter only if the format string used to parse <em>input</em> is a standard <xref href=\"System.TimeSpan\" data-throw-if-not-resolved=\"false\"></xref> format string whose value is either \"g\" or \"G\". The \"c\", \"t\", and \"T\" standard format strings use the formatting conventions of the invariant culture. Custom format strings define the precise format of the input string and use literal characters to separate the components of a time interval.</p>\n<p>The <em>formatProvider</em> parameter is an <xref href=\"System.IFormatProvider\" data-throw-if-not-resolved=\"false\"></xref> implementation that provides culture-specific information about the format of the returned string if the format string used to parse <em>input</em> is a standard format string. The <em>formatProvider</em> parameter can be any of the following:</p>\n<ul><li>\n<p>A <xref href=\"System.Globalization.CultureInfo\" data-throw-if-not-resolved=\"false\"></xref> object that represents the culture whose formatting conventions are to be reflected in the returned string. The <xref href=\"System.Globalization.DateTimeFormatInfo\" data-throw-if-not-resolved=\"false\"></xref> object returned by the <xref href=\"System.Globalization.CultureInfo.DateTimeFormat\" data-throw-if-not-resolved=\"false\"></xref> property defines the formatting of the returned string.</p>\n</li><li>\n<p>A <xref href=\"System.Globalization.DateTimeFormatInfo\" data-throw-if-not-resolved=\"false\"></xref> object that defines the formatting of the returned string.</p>\n</li><li>\n<p>A custom object that implements the <xref href=\"System.IFormatProvider\" data-throw-if-not-resolved=\"false\"></xref> interface. Its <xref href=\"System.IFormatProvider.GetFormat(System.Type)\" data-throw-if-not-resolved=\"false\"></xref> method returns a <xref href=\"System.Globalization.DateTimeFormatInfo\" data-throw-if-not-resolved=\"false\"></xref> object that provides formatting information.</p>\n</li></ul>\n<p>If <em>formatProvider</em> is <strong>null</strong>, the <xref href=\"System.Globalization.DateTimeFormatInfo\" data-throw-if-not-resolved=\"false\"></xref> object that is associated with the current culture is used.</p>\n<p>The <em>styles</em> parameter affects the interpretation of strings that are parsed using custom format strings. It determines whether <em>input</em> is interpreted as a negative time interval only if a negative sign is present (<xref href=\"System.Globalization.TimeSpanStyles.None\" data-throw-if-not-resolved=\"false\"></xref>), or whether it is always interpreted as a negative time interval (<xref href=\"System.Globalization.TimeSpanStyles.AssumeNegative\" data-throw-if-not-resolved=\"false\"></xref>). If <xref href=\"System.Globalization.TimeSpanStyles.AssumeNegative\" data-throw-if-not-resolved=\"false\"></xref> is not used, <em>format</em> must include a literal negative sign symbol (such as \"\\-\") to successfully parse a negative time interval.</p>\n"
  example:
  - "\n<p>The following example calls the <xref href=\"System.TimeSpan.TryParseExact(System.String,System.String[],System.IFormatProvider,System.Globalization.TimeSpanStyles,System.TimeSpan@)\" data-throw-if-not-resolved=\"false\"></xref> method to convert each element of a string array to a <xref href=\"System.TimeSpan\" data-throw-if-not-resolved=\"false\"></xref> value. The strings can represent a time interval in either the general short format or the general long format. </p>\n<p>In addition, the example changes the way in which the time interval parsing methods interpret a single digit. Ordinarily, a single digit is interpreted as the number of days in a time interval. Instead, the <code>%h</code> custom format string is used to interpret a single digit as the number of hours. For this change to be effective, note that the <code>%h</code> custom format string must precede the other format strings in the <code>formats</code> array. Also note from the output that the <xref href=\"System.Globalization.TimeSpanStyles.AssumeNegative\" data-throw-if-not-resolved=\"false\"></xref> flag specified in the method call is used only when parsing a string with this format specifier.</p>System.TimeSpan.TryParseExact#4"
  syntax:
    content: public static bool TryParseExact(string input, string[] formats, IFormatProvider formatProvider, TimeSpanStyles styles, out TimeSpan result)
    content.vb: Public Shared Function TryParseExact(input As String, formats As String(), formatProvider As IFormatProvider, styles As TimeSpanStyles, ByRef result As TimeSpan) As Boolean
    parameters:
    - id: input
      type: System.String
      description: "\n<p>A string that specifies the time interval to convert.</p>\n"
    - id: formats
      type: System.String[]
      description: "\n<p>A array of standard or custom format strings that define the acceptable formats of <em>input</em>.</p>\n"
    - id: formatProvider
      type: System.IFormatProvider
      description: "\n<p>An object that supplies culture-specific formatting information.</p>\n"
    - id: styles
      type: System.Globalization.TimeSpanStyles
      description: "\n<p>One or more enumeration values that indicate the style of <em>input</em>.</p>\n"
    - id: result
      type: System.TimeSpan
      description: "\n<p>When this method returns, contains an object that represents the time interval specified by <em>input</em>, or <xref href=\"System.TimeSpan.Zero\" data-throw-if-not-resolved=\"false\"></xref> if the conversion failed. This parameter is passed uninitialized.</p>\n"
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if <em>input</em> was converted successfully; otherwise, <strong>false</strong>.</p>\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.TimeSpan.TryParseExact(System.String, System.String(), System.IFormatProvider, System.Globalization.TimeSpanStyles, ByRef System.TimeSpan)
  name.vb: TryParseExact(String, String(), IFormatProvider, TimeSpanStyles, ByRef TimeSpan)
- uid: System.TimeSpan.TryParseExact(System.String,System.String[],System.IFormatProvider,System.TimeSpan@)
  commentId: M:System.TimeSpan.TryParseExact(System.String,System.String[],System.IFormatProvider,System.TimeSpan@)
  id: TryParseExact(System.String,System.String[],System.IFormatProvider,System.TimeSpan@)
  parent: System.TimeSpan
  langs:
  - csharp
  - vb
  name: TryParseExact(String, String[], IFormatProvider, out TimeSpan)
  fullName: System.TimeSpan.TryParseExact(System.String, System.String[], System.IFormatProvider, out System.TimeSpan)
  type: Method
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: TryParseExact
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 1716
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Converts the specified string representation of a time interval to its <xref href=\"System.TimeSpan\" data-throw-if-not-resolved=\"false\"></xref> equivalent by using the specified formats and culture-specific format information, and returns a value that indicates whether the conversion succeeded. The format of the string representation must match one of the specified formats exactly. </p>\n"
  remarks: "\n<p>The <xref href=\"System.TimeSpan.TryParseExact(System.String,System.String[],System.IFormatProvider,System.TimeSpan@)\" data-throw-if-not-resolved=\"false\"></xref> method parses the string representation of a time interval, which must be in the format defined by one of the format strings specified by the <em>formats</em> parameter, except that leading and trailing white-space characters are ignored. This method is similar to the <xref href=\"System.TimeSpan.ParseExact(System.String,System.String[],System.IFormatProvider)\" data-throw-if-not-resolved=\"false\"></xref> method, except that it does not throw an exception if the conversion fails.</p>\n<p>The <em>formats</em> parameter is a string array whose elements consist of either a single standard format specifier, or one or more custom format specifiers that define the required format of <em>input</em>. For more information about valid format strings, see Standard TimeSpan Format Strings and Custom TimeSpan Format Strings. <em>input</em> must correspond exactly to a member of <em>formats</em> for the parse operation to succeed. The parse operation attempts to match <em>input</em> to each element in <em>formats</em> starting with the first element in the array.</p>\n<p>The <xref href=\"System.TimeSpan.TryParseExact(System.String,System.String[],System.IFormatProvider,System.TimeSpan@)\" data-throw-if-not-resolved=\"false\"></xref> method uses the conventions of the culture specified by the <em>formatProvider</em> parameter only if the format string used to parse <em>input</em> is a standard <xref href=\"System.TimeSpan\" data-throw-if-not-resolved=\"false\"></xref> format string whose value is either \"g\" or \"G\". The \"c\", \"t\", and \"T\" standard format strings use the formatting conventions of the invariant culture. Custom format strings define the precise format of the input string and use literal characters to separate the components of a time interval.</p>\n<p>The <em>formatProvider</em> parameter is an <xref href=\"System.IFormatProvider\" data-throw-if-not-resolved=\"false\"></xref> implementation that provides culture-specific information about the format of the returned string if the format string used to parse <em>input</em> is a standard format string. The <em>formatProvider</em> parameter can be any of the following:</p>\n<ul><li>\n<p>A <xref href=\"System.Globalization.CultureInfo\" data-throw-if-not-resolved=\"false\"></xref> object that represents the culture whose formatting conventions are to be reflected in the returned string. The <xref href=\"System.Globalization.DateTimeFormatInfo\" data-throw-if-not-resolved=\"false\"></xref> object returned by the <xref href=\"System.Globalization.CultureInfo.DateTimeFormat\" data-throw-if-not-resolved=\"false\"></xref> property defines the formatting of the returned string.</p>\n</li><li>\n<p>A <xref href=\"System.Globalization.DateTimeFormatInfo\" data-throw-if-not-resolved=\"false\"></xref> object that defines the formatting of the returned string.</p>\n</li><li>\n<p>A custom object that implements the <xref href=\"System.IFormatProvider\" data-throw-if-not-resolved=\"false\"></xref> interface. Its <xref href=\"System.IFormatProvider.GetFormat(System.Type)\" data-throw-if-not-resolved=\"false\"></xref> method returns a <xref href=\"System.Globalization.DateTimeFormatInfo\" data-throw-if-not-resolved=\"false\"></xref> object that provides formatting information.</p>\n</li></ul>\n<p>If <em>formatProvider</em> is <strong>null</strong>, the <xref href=\"System.Globalization.DateTimeFormatInfo\" data-throw-if-not-resolved=\"false\"></xref> object that is associated with the current culture is used.</p>\n"
  example:
  - "\n<p>The following example calls the <xref href=\"System.TimeSpan.TryParseExact(System.String,System.String[],System.IFormatProvider,System.TimeSpan@)\" data-throw-if-not-resolved=\"false\"></xref> method to convert each element of a string array to a <xref href=\"System.TimeSpan\" data-throw-if-not-resolved=\"false\"></xref> value. The example interprets the strings by using the formatting conventions of the French - France (\"fr-FR\") culture. The strings can represent a time interval in either the general short format or the general long format. </p>\n<p>In addition, the example changes the way in which the time interval parsing methods interpret a single digit. Ordinarily, a single digit is interpreted as the number of days in a time interval. Instead, the <code>%h</code> custom format string is used to interpret a single digit as the number of hours. For this change to be effective, note that the <code>%h</code> custom format string must precede the other format strings in the <code>formats</code> array.</p>System.TimeSpan.TryParseExact#3"
  syntax:
    content: public static bool TryParseExact(string input, string[] formats, IFormatProvider formatProvider, out TimeSpan result)
    content.vb: Public Shared Function TryParseExact(input As String, formats As String(), formatProvider As IFormatProvider, ByRef result As TimeSpan) As Boolean
    parameters:
    - id: input
      type: System.String
      description: "\n<p>A string that specifies the time interval to convert.</p>\n"
    - id: formats
      type: System.String[]
      description: "\n<p>A array of standard or custom format strings that define the acceptable formats of <em>input</em>.</p>\n"
    - id: formatProvider
      type: System.IFormatProvider
      description: "\n<p>An object that provides culture-specific formatting information.</p>\n"
    - id: result
      type: System.TimeSpan
      description: "\n<p>When this method returns, contains an object that represents the time interval specified by <em>input</em>, or <xref href=\"System.TimeSpan.Zero\" data-throw-if-not-resolved=\"false\"></xref> if the conversion failed. This parameter is passed uninitialized.</p>\n"
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if <em>input</em> was converted successfully; otherwise, <strong>false</strong>.</p>\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.TimeSpan.TryParseExact(System.String, System.String(), System.IFormatProvider, ByRef System.TimeSpan)
  name.vb: TryParseExact(String, String(), IFormatProvider, ByRef TimeSpan)
references:
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.IComparable
  parent: System
  isExternal: false
  name: IComparable
  fullName: System.IComparable
- uid: System.IComparable{System.TimeSpan}
  parent: System
  definition: System.IComparable`1
  name: IComparable<TimeSpan>
  fullName: System.IComparable<System.TimeSpan>
  fullname.vb: System.IComparable(Of System.TimeSpan)
  name.vb: IComparable(Of TimeSpan)
  spec.csharp:
  - uid: System.IComparable`1
    name: IComparable
    fullName: System.IComparable
  - name: <
    fullName: <
  - uid: System.TimeSpan
    name: TimeSpan
    fullName: System.TimeSpan
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IComparable`1
    name: IComparable
    fullName: System.IComparable
  - name: '(Of '
    fullName: '(Of '
  - uid: System.TimeSpan
    name: TimeSpan
    fullName: System.TimeSpan
  - name: )
    fullName: )
- uid: System.IEquatable{System.TimeSpan}
  parent: System
  definition: System.IEquatable`1
  name: IEquatable<TimeSpan>
  fullName: System.IEquatable<System.TimeSpan>
  fullname.vb: System.IEquatable(Of System.TimeSpan)
  name.vb: IEquatable(Of TimeSpan)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    fullName: System.IEquatable
  - name: <
    fullName: <
  - uid: System.TimeSpan
    name: TimeSpan
    fullName: System.TimeSpan
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    fullName: System.IEquatable
  - name: '(Of '
    fullName: '(Of '
  - uid: System.TimeSpan
    name: TimeSpan
    fullName: System.TimeSpan
  - name: )
    fullName: )
- uid: System.IFormattable
  parent: System
  isExternal: false
  name: IFormattable
  fullName: System.IFormattable
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: false
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
  - name: )
    fullName: )
- uid: System.IComparable`1
  parent: System
  isExternal: false
  name: IComparable<T>
  fullName: System.IComparable<T>
  fullname.vb: System.IComparable(Of T)
  name.vb: IComparable(Of T)
  spec.csharp:
  - uid: System.IComparable`1
    name: IComparable
    fullName: System.IComparable
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IComparable`1
    name: IComparable
    fullName: System.IComparable
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.IEquatable`1
  parent: System
  isExternal: false
  name: IEquatable<>
  fullName: System.IEquatable<>
  fullname.vb: System.IEquatable(Of )
  name.vb: IEquatable(Of )
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    fullName: System.IEquatable
  - name: <
    fullName: <
  - {}
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    fullName: System.IEquatable
  - name: '(Of '
    fullName: '(Of '
  - {}
  - name: )
    fullName: )
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System.TimeSpan
  parent: System
  isExternal: false
  name: TimeSpan
  fullName: System.TimeSpan
- uid: System.Int64
  parent: System
  isExternal: false
  name: Int64
  fullName: System.Int64
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  fullName: System.Int32
- uid: System.Double
  parent: System
  isExternal: false
  name: Double
  fullName: System.Double
- uid: System.IComparable{System.TimeSpan}.CompareTo(System.TimeSpan)
  parent: System.IComparable{System.TimeSpan}
  definition: System.IComparable`1.CompareTo(`0)
  name: CompareTo(TimeSpan)
  fullName: System.IComparable<System.TimeSpan>.CompareTo(System.TimeSpan)
  fullname.vb: System.IComparable(Of System.TimeSpan).CompareTo(System.TimeSpan)
  spec.csharp:
  - uid: System.IComparable`1.CompareTo(`0)
    name: CompareTo
    fullName: System.IComparable<System.TimeSpan>.CompareTo
  - name: (
    fullName: (
  - uid: System.TimeSpan
    name: TimeSpan
    fullName: System.TimeSpan
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IComparable`1.CompareTo(`0)
    name: CompareTo
    fullName: System.IComparable(Of System.TimeSpan).CompareTo
  - name: (
    fullName: (
  - uid: System.TimeSpan
    name: TimeSpan
    fullName: System.TimeSpan
  - name: )
    fullName: )
- uid: System.IComparable`1.CompareTo(`0)
  parent: System.IComparable`1
  isExternal: false
  name: CompareTo(T)
  fullName: System.IComparable<T>.CompareTo(T)
  fullname.vb: System.IComparable(Of T).CompareTo(T)
  spec.csharp:
  - uid: System.IComparable`1.CompareTo(`0)
    name: CompareTo
    fullName: System.IComparable<T>.CompareTo
  - name: (
    fullName: (
  - name: T
    fullName: T
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IComparable`1.CompareTo(`0)
    name: CompareTo
    fullName: System.IComparable(Of T).CompareTo
  - name: (
    fullName: (
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: false
  name: Equals(Object)
  fullName: System.ValueType.Equals(System.Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    fullName: System.ValueType.Equals
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    fullName: System.ValueType.Equals
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
  - name: )
    fullName: )
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  fullName: System.Boolean
- uid: System.ValueType
  parent: System
  isExternal: false
  name: ValueType
  fullName: System.ValueType
- uid: System.IEquatable{System.TimeSpan}.Equals(System.TimeSpan)
  parent: System.IEquatable{System.TimeSpan}
  definition: System.IEquatable`1.Equals(`0)
  name: Equals(TimeSpan)
  fullName: System.IEquatable<System.TimeSpan>.Equals(System.TimeSpan)
  fullname.vb: System.IEquatable(Of System.TimeSpan).Equals(System.TimeSpan)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    fullName: System.IEquatable<System.TimeSpan>.Equals
  - name: (
    fullName: (
  - uid: System.TimeSpan
    name: TimeSpan
    fullName: System.TimeSpan
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    fullName: System.IEquatable(Of System.TimeSpan).Equals
  - name: (
    fullName: (
  - uid: System.TimeSpan
    name: TimeSpan
    fullName: System.TimeSpan
  - name: )
    fullName: )
- uid: System.IEquatable`1.Equals(`0)
  parent: System.IEquatable`1
  isExternal: false
  name: Equals(T)
  fullName: System.IEquatable<T>.Equals(T)
  fullname.vb: System.IEquatable(Of T).Equals(T)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    fullName: System.IEquatable<T>.Equals
  - name: (
    fullName: (
  - name: T
    fullName: T
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    fullName: System.IEquatable(Of T).Equals
  - name: (
    fullName: (
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: false
  name: GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    fullName: System.ValueType.GetHashCode
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    fullName: System.ValueType.GetHashCode
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.String
  parent: System
  isExternal: false
  name: String
  fullName: System.String
- uid: System.IFormatProvider
  parent: System
  isExternal: false
  name: IFormatProvider
  fullName: System.IFormatProvider
- uid: System.Globalization.TimeSpanStyles
  parent: System.Globalization
  isExternal: false
  name: TimeSpanStyles
  fullName: System.Globalization.TimeSpanStyles
- uid: System.Globalization
  isExternal: false
  name: System.Globalization
  fullName: System.Globalization
- uid: System.String[]
  isExternal: false
  name: String[]
  fullName: System.String[]
  fullname.vb: System.String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: String
    fullName: System.String
  - name: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.String
    name: String
    fullName: System.String
  - name: ()
    fullName: ()
- uid: System.IComparable.CompareTo(System.Object)
  parent: System.IComparable
  isExternal: false
  name: CompareTo(Object)
  fullName: System.IComparable.CompareTo(System.Object)
  spec.csharp:
  - uid: System.IComparable.CompareTo(System.Object)
    name: CompareTo
    fullName: System.IComparable.CompareTo
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IComparable.CompareTo(System.Object)
    name: CompareTo
    fullName: System.IComparable.CompareTo
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
  - name: )
    fullName: )
- uid: System.ValueType.ToString
  parent: System.ValueType
  isExternal: false
  name: ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    fullName: System.ValueType.ToString
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    fullName: System.ValueType.ToString
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.IFormattable.ToString(System.String,System.IFormatProvider)
  parent: System.IFormattable
  isExternal: false
  name: ToString(String, IFormatProvider)
  fullName: System.IFormattable.ToString(System.String, System.IFormatProvider)
  spec.csharp:
  - uid: System.IFormattable.ToString(System.String,System.IFormatProvider)
    name: ToString
    fullName: System.IFormattable.ToString
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
  - name: ', '
    fullName: ', '
  - uid: System.IFormatProvider
    name: IFormatProvider
    fullName: System.IFormatProvider
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IFormattable.ToString(System.String,System.IFormatProvider)
    name: ToString
    fullName: System.IFormattable.ToString
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
  - name: ', '
    fullName: ', '
  - uid: System.IFormatProvider
    name: IFormatProvider
    fullName: System.IFormatProvider
  - name: )
    fullName: )
- uid: System.ArgumentOutOfRangeException
  isExternal: false
  name: ArgumentOutOfRangeException
  fullName: System.ArgumentOutOfRangeException
- uid: System.OverflowException
  isExternal: false
  name: OverflowException
  fullName: System.OverflowException
- uid: System.ArgumentException
  parent: System
  isExternal: false
  name: ArgumentException
  fullName: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: false
  name: ArgumentNullException
  fullName: System.ArgumentNullException
- uid: System.FormatException
  parent: System
  isExternal: false
  name: FormatException
  fullName: System.FormatException
