items:
- uid: System.Diagnostics.DiagnosticSource
  commentId: T:System.Diagnostics.DiagnosticSource
  id: DiagnosticSource
  parent: System.Diagnostics
  children:
  - System.Diagnostics.DiagnosticSource.#ctor
  - System.Diagnostics.DiagnosticSource.IsEnabled(System.String)
  - System.Diagnostics.DiagnosticSource.Write(System.String,System.Object)
  langs:
  - csharp
  - vb
  name: DiagnosticSource
  fullName: System.Diagnostics.DiagnosticSource
  type: Class
  source:
    remote:
      path: src/System.Diagnostics.DiagnosticSource/src/System/Diagnostics/DiagnosticSource.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: DiagnosticSource
    path: src/System.Diagnostics.DiagnosticSource/src/System/Diagnostics/DiagnosticSource.cs
    startLine: 16
  assemblies:
  - System.Diagnostics.DiagnosticSource
  namespace: System.Diagnostics
  syntax:
    content: public abstract class DiagnosticSource
    content.vb: Public MustInherit Class DiagnosticSource
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: System.Diagnostics.DiagnosticSource.#ctor
  commentId: M:System.Diagnostics.DiagnosticSource.#ctor
  id: '#ctor'
  parent: System.Diagnostics.DiagnosticSource
  langs:
  - csharp
  - vb
  name: DiagnosticSource()
  fullName: System.Diagnostics.DiagnosticSource.DiagnosticSource()
  type: Constructor
  source:
    remote:
      path: src/System.Diagnostics.DiagnosticSource/ref/System.Diagnostics.DiagnosticSource.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Diagnostics.DiagnosticSource/ref/System.Diagnostics.DiagnosticSource.cs
    startLine: 19
  assemblies:
  - System.Diagnostics.DiagnosticSource
  namespace: System.Diagnostics
  syntax:
    content: protected DiagnosticSource()
    content.vb: Protected Sub New
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: System.Diagnostics.DiagnosticSource.IsEnabled(System.String)
  commentId: M:System.Diagnostics.DiagnosticSource.IsEnabled(System.String)
  id: IsEnabled(System.String)
  parent: System.Diagnostics.DiagnosticSource
  langs:
  - csharp
  - vb
  name: IsEnabled(String)
  fullName: System.Diagnostics.DiagnosticSource.IsEnabled(System.String)
  type: Method
  source:
    remote:
      path: src/System.Diagnostics.DiagnosticSource/src/System/Diagnostics/DiagnosticSource.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IsEnabled
    path: src/System.Diagnostics.DiagnosticSource/src/System/Diagnostics/DiagnosticSource.cs
    startLine: 43
  assemblies:
  - System.Diagnostics.DiagnosticSource
  namespace: System.Diagnostics
  syntax:
    content: public abstract bool IsEnabled(string name)
    content.vb: Public MustOverride Function IsEnabled(name As String) As Boolean
    parameters:
    - id: name
      type: System.String
      description: The name of the event being written.
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: System.Diagnostics.DiagnosticSource.Write(System.String,System.Object)
  commentId: M:System.Diagnostics.DiagnosticSource.Write(System.String,System.Object)
  id: Write(System.String,System.Object)
  parent: System.Diagnostics.DiagnosticSource
  langs:
  - csharp
  - vb
  name: Write(String, Object)
  fullName: System.Diagnostics.DiagnosticSource.Write(System.String, System.Object)
  type: Method
  source:
    remote:
      path: src/System.Diagnostics.DiagnosticSource/src/System/Diagnostics/DiagnosticSource.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Write
    path: src/System.Diagnostics.DiagnosticSource/src/System/Diagnostics/DiagnosticSource.cs
    startLine: 34
  assemblies:
  - System.Diagnostics.DiagnosticSource
  namespace: System.Diagnostics
  syntax:
    content: public abstract void Write(string name, object value)
    content.vb: Public MustOverride Sub Write(name As String, value As Object)
    parameters:
    - id: name
      type: System.String
      description: The name of the event being written.
    - id: value
      type: System.Object
      description: >-
        An object that represent the value being passed as a payload for the event.

        This is often a anonymous type which contains several sub-values.
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
references:
- uid: System.Diagnostics
  isExternal: false
  name: System.Diagnostics
  fullName: System.Diagnostics
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.String
  parent: System
  isExternal: false
  name: String
  fullName: System.String
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  fullName: System.Boolean
