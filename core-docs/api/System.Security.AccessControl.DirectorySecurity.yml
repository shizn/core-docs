items:
- uid: System.Security.AccessControl.DirectorySecurity
  commentId: T:System.Security.AccessControl.DirectorySecurity
  id: DirectorySecurity
  parent: System.Security.AccessControl
  children:
  - System.Security.AccessControl.DirectorySecurity.#ctor
  - System.Security.AccessControl.DirectorySecurity.#ctor(System.String,System.Security.AccessControl.AccessControlSections)
  langs:
  - csharp
  - vb
  name: DirectorySecurity
  fullName: System.Security.AccessControl.DirectorySecurity
  type: Class
  source:
    remote:
      path: src/System.IO.FileSystem.AccessControl/ref/System.IO.FileSystem.AccessControl.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: DirectorySecurity
    path: src/System.IO.FileSystem.AccessControl/ref/System.IO.FileSystem.AccessControl.cs
    startLine: 48
  assemblies:
  - System.IO.FileSystem.AccessControl
  namespace: System.Security.AccessControl
  summary: "\n<p>Represents the access control and audit security for a directory. This class cannot be inherited.</p>\n"
  remarks: "\n<p>The <xref href=\"System.Security.AccessControl.DirectorySecurity\" data-throw-if-not-resolved=\"false\"></xref> class specifies the access rights for a system directory and how access attempts are audited. This class represents access and audit rights as a set of rules. Each access rule is represented by a <xref href=\"System.Security.AccessControl.FileSystemAccessRule\" data-throw-if-not-resolved=\"false\"></xref> object, while each audit rule is represented by a <xref href=\"System.Security.AccessControl.FileSystemAuditRule\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n<p>The <xref href=\"System.Security.AccessControl.DirectorySecurity\" data-throw-if-not-resolved=\"false\"></xref> class is an abstraction of the underlying Windows file security system. In this system, each directory has a discretionary access control list (DACL), which controls access to the directory, and a system access control list (SACL), which specifies the access control attempts that are audited. The <xref href=\"System.Security.AccessControl.FileSystemAccessRule\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"System.Security.AccessControl.FileSystemAuditRule\" data-throw-if-not-resolved=\"false\"></xref> classes are abstractions of the access control entries (ACEs) that comprise DACLs and SACLs. </p>\n<p>The <xref href=\"System.Security.AccessControl.DirectorySecurity\" data-throw-if-not-resolved=\"false\"></xref> class hides many of the details of DACLs and SACLs; you do not have to worry about ACE ordering or null DACLS.</p>\n<p>Use the <xref href=\"System.Security.AccessControl.FileSecurity\" data-throw-if-not-resolved=\"false\"></xref> class to retrieve, add, or change the access rules that represent the DACL and SACL of a file.</p>\n<p>The following tables lists the methods you can use to access and maintain directory security.</p>\n<p>Task</p>\n<p>Methods</p>\n<table><tbody><tr><td>\n<p>Add rules</p>\n</td><td>\n<p>\n<xref href=\"System.Security.AccessControl.FileSystemSecurity.AddAccessRule(System.Security.AccessControl.FileSystemAccessRule)\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n<p>\n<xref href=\"System.Security.AccessControl.FileSystemSecurity.AddAuditRule(System.Security.AccessControl.FileSystemAuditRule)\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td></tr><tr><td>\n<p>Remove rules</p>\n</td><td>\n<p>\n<xref href=\"System.Security.AccessControl.FileSystemSecurity.RemoveAccessRule(System.Security.AccessControl.FileSystemAccessRule)\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n<p>\n<xref href=\"System.Security.AccessControl.FileSystemSecurity.RemoveAuditRule(System.Security.AccessControl.FileSystemAuditRule)\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td></tr><tr><td>\n<p>Retrieve the access control to a directory</p>\n</td><td>\n<p>\n<xref href=\"System.IO.Directory.GetAccessControl(System.String)\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n<p>\n<xref href=\"System.IO.DirectoryInfo.GetAccessControl\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td></tr><tr><td>\n<p>Persist the access control to a directory</p>\n</td><td>\n<p>\n<xref href=\"System.IO.Directory.SetAccessControl(System.String,System.Security.AccessControl.DirectorySecurity)\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n<p>\n<xref href=\"System.IO.DirectoryInfo.SetAccessControl(System.Security.AccessControl.DirectorySecurity)\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td></tr></tbody></table>\n"
  example:
  - "\n<p>The following code example uses the <xref href=\"System.Security.AccessControl.DirectorySecurity\" data-throw-if-not-resolved=\"false\"></xref> class to add and then remove an access control list (ACL) entry from a directory.  You must supply a valid user or group account to run this example.</p>IO.DiretoryInfo.GetAccessControl-SetAccessControl#1"
  syntax:
    content: 'public sealed class DirectorySecurity : FileSystemSecurity'
    content.vb: >-
      Public NotInheritable Class DirectorySecurity
          Inherits FileSystemSecurity
  inheritance:
  - System.Object
  - System.Security.AccessControl.FileSystemSecurity
  inheritedMembers:
  - System.Security.AccessControl.FileSystemSecurity.AccessRightType
  - System.Security.AccessControl.FileSystemSecurity.AccessRuleType
  - System.Security.AccessControl.FileSystemSecurity.AuditRuleType
  - System.Security.AccessControl.FileSystemSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)
  - System.Security.AccessControl.FileSystemSecurity.AddAccessRule(System.Security.AccessControl.FileSystemAccessRule)
  - System.Security.AccessControl.FileSystemSecurity.AddAuditRule(System.Security.AccessControl.FileSystemAuditRule)
  - System.Security.AccessControl.FileSystemSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)
  - System.Security.AccessControl.FileSystemSecurity.RemoveAccessRule(System.Security.AccessControl.FileSystemAccessRule)
  - System.Security.AccessControl.FileSystemSecurity.RemoveAccessRuleAll(System.Security.AccessControl.FileSystemAccessRule)
  - System.Security.AccessControl.FileSystemSecurity.RemoveAccessRuleSpecific(System.Security.AccessControl.FileSystemAccessRule)
  - System.Security.AccessControl.FileSystemSecurity.RemoveAuditRule(System.Security.AccessControl.FileSystemAuditRule)
  - System.Security.AccessControl.FileSystemSecurity.RemoveAuditRuleAll(System.Security.AccessControl.FileSystemAuditRule)
  - System.Security.AccessControl.FileSystemSecurity.RemoveAuditRuleSpecific(System.Security.AccessControl.FileSystemAuditRule)
  - System.Security.AccessControl.FileSystemSecurity.ResetAccessRule(System.Security.AccessControl.FileSystemAccessRule)
  - System.Security.AccessControl.FileSystemSecurity.SetAccessRule(System.Security.AccessControl.FileSystemAccessRule)
  - System.Security.AccessControl.FileSystemSecurity.SetAuditRule(System.Security.AccessControl.FileSystemAuditRule)
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: System.Security.AccessControl.DirectorySecurity.#ctor
  commentId: M:System.Security.AccessControl.DirectorySecurity.#ctor
  id: '#ctor'
  parent: System.Security.AccessControl.DirectorySecurity
  langs:
  - csharp
  - vb
  name: DirectorySecurity()
  fullName: System.Security.AccessControl.DirectorySecurity.DirectorySecurity()
  type: Constructor
  source:
    remote:
      path: src/System.IO.FileSystem.AccessControl/ref/System.IO.FileSystem.AccessControl.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.IO.FileSystem.AccessControl/ref/System.IO.FileSystem.AccessControl.cs
    startLine: 51
  assemblies:
  - System.IO.FileSystem.AccessControl
  namespace: System.Security.AccessControl
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Security.AccessControl.DirectorySecurity\" data-throw-if-not-resolved=\"false\"></xref> class. </p>\n"
  remarks: "\n<p>Use this constructor when you want to create an empty <xref href=\"System.Security.AccessControl.DirectorySecurity\" data-throw-if-not-resolved=\"false\"></xref> object that is not based on an existing directory. You can then populate the object with access control information and apply it to a directory.</p>\n<p></p>\n"
  example:
  - 
  syntax:
    content: public DirectorySecurity()
    content.vb: Public Sub New
  exceptions:
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "\n<p>The current operating system is not Microsoft Windows 2000 or later.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Security.AccessControl.DirectorySecurity.#ctor(System.String,System.Security.AccessControl.AccessControlSections)
  commentId: M:System.Security.AccessControl.DirectorySecurity.#ctor(System.String,System.Security.AccessControl.AccessControlSections)
  id: '#ctor(System.String,System.Security.AccessControl.AccessControlSections)'
  parent: System.Security.AccessControl.DirectorySecurity
  langs:
  - csharp
  - vb
  name: DirectorySecurity(String, AccessControlSections)
  fullName: System.Security.AccessControl.DirectorySecurity.DirectorySecurity(System.String, System.Security.AccessControl.AccessControlSections)
  type: Constructor
  source:
    remote:
      path: src/System.IO.FileSystem.AccessControl/ref/System.IO.FileSystem.AccessControl.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.IO.FileSystem.AccessControl/ref/System.IO.FileSystem.AccessControl.cs
    startLine: 52
  assemblies:
  - System.IO.FileSystem.AccessControl
  namespace: System.Security.AccessControl
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Security.AccessControl.DirectorySecurity\" data-throw-if-not-resolved=\"false\"></xref> class from a specified directory using the specified values of the <xref href=\"System.Security.AccessControl.AccessControlSections\" data-throw-if-not-resolved=\"false\"></xref> enumeration.</p>\n"
  remarks: "\n<p>This constructor retrieves the access control information for the specified directory and then creates a <xref href=\"System.Security.AccessControl.DirectorySecurity\" data-throw-if-not-resolved=\"false\"></xref> object that encapsulates that information. You can then inspect, add, or delete the access control information for the specified directory.</p>\n"
  example:
  - 
  syntax:
    content: public DirectorySecurity(string name, AccessControlSections includeSections)
    content.vb: Public Sub New(name As String, includeSections As AccessControlSections)
    parameters:
    - id: name
      type: System.String
      description: "\n<p>The location of a directory to create a <xref href=\"System.Security.AccessControl.DirectorySecurity\" data-throw-if-not-resolved=\"false\"></xref> object from.</p>\n"
    - id: includeSections
      type: System.Security.AccessControl.AccessControlSections
      description: "\n<p>One of the <xref href=\"System.Security.AccessControl.AccessControlSections\" data-throw-if-not-resolved=\"false\"></xref> values that specifies the type of access control list (ACL) information to retrieve. </p>\n"
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<p>The <em>name</em> parameter is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <xref href=\"System.IO.Path.InvalidPathChars\" data-throw-if-not-resolved=\"false\"></xref>. </p>\n"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>The <em>name</em> parameter is <strong>null</strong>.</p>\n"
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "\n<p>The specified path is invalid, (for example, it is on an unmapped drive). </p>\n"
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "\n<p>The file specified in the <em>name</em> parameter was not found. </p>\n"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "\n<p>An I/O error occurred while opening the directory.</p>\n"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "\n<p>The <em>name</em> parameter is in an invalid format. </p>\n"
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "\n<p>The current operating system is not Microsoft Windows 2000 or later.</p>\n"
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "\n<p>The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters. </p>\n"
  - type: System.Security.AccessControl.PrivilegeNotHeldException
    commentId: T:System.Security.AccessControl.PrivilegeNotHeldException
    description: "\n<p>The current system account does not have administrative privileges.</p>\n"
  - type: System.SystemException
    commentId: T:System.SystemException
    description: "\n<p>The directory could not be found.</p>\n"
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "\n<p>The <em>name</em> parameter specified a directory that is read-only.</p>\n<p>-or- </p>\n<p>This operation is not supported on the current platform.</p>\n<p>-or- </p>\n<p>The caller does not have the required permission.</p>\n"
  see:
  - type: System.Security.Permissions.FileIOPermission
    commentId: T:System.Security.Permissions.FileIOPermission
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: System.Security.AccessControl
  isExternal: false
  name: System.Security.AccessControl
  fullName: System.Security.AccessControl
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System.Security.AccessControl.FileSystemSecurity
  parent: System.Security.AccessControl
  isExternal: false
  name: FileSystemSecurity
  fullName: System.Security.AccessControl.FileSystemSecurity
- uid: System.Security.AccessControl.FileSystemSecurity.AccessRightType
  parent: System.Security.AccessControl.FileSystemSecurity
  isExternal: false
  name: AccessRightType
  fullName: System.Security.AccessControl.FileSystemSecurity.AccessRightType
- uid: System.Security.AccessControl.FileSystemSecurity.AccessRuleType
  parent: System.Security.AccessControl.FileSystemSecurity
  isExternal: false
  name: AccessRuleType
  fullName: System.Security.AccessControl.FileSystemSecurity.AccessRuleType
- uid: System.Security.AccessControl.FileSystemSecurity.AuditRuleType
  parent: System.Security.AccessControl.FileSystemSecurity
  isExternal: false
  name: AuditRuleType
  fullName: System.Security.AccessControl.FileSystemSecurity.AuditRuleType
- uid: System.Security.AccessControl.FileSystemSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)
  parent: System.Security.AccessControl.FileSystemSecurity
  isExternal: true
  name: AccessRuleFactory(Principal.IdentityReference, Int32, Boolean, InheritanceFlags, PropagationFlags, AccessControlType)
  fullName: System.Security.AccessControl.FileSystemSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference, System.Int32, System.Boolean, System.Security.AccessControl.InheritanceFlags, System.Security.AccessControl.PropagationFlags, System.Security.AccessControl.AccessControlType)
  spec.csharp:
  - uid: System.Security.AccessControl.FileSystemSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)
    name: AccessRuleFactory
    fullName: System.Security.AccessControl.FileSystemSecurity.AccessRuleFactory
  - name: (
    fullName: (
  - uid: System.Security.Principal.IdentityReference
    name: Principal.IdentityReference
    fullName: System.Security.Principal.IdentityReference
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Security.AccessControl.InheritanceFlags
    name: InheritanceFlags
    fullName: System.Security.AccessControl.InheritanceFlags
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Security.AccessControl.PropagationFlags
    name: PropagationFlags
    fullName: System.Security.AccessControl.PropagationFlags
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Security.AccessControl.AccessControlType
    name: AccessControlType
    fullName: System.Security.AccessControl.AccessControlType
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Security.AccessControl.FileSystemSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)
    name: AccessRuleFactory
    fullName: System.Security.AccessControl.FileSystemSecurity.AccessRuleFactory
  - name: (
    fullName: (
  - uid: System.Security.Principal.IdentityReference
    name: Principal.IdentityReference
    fullName: System.Security.Principal.IdentityReference
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Security.AccessControl.InheritanceFlags
    name: InheritanceFlags
    fullName: System.Security.AccessControl.InheritanceFlags
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Security.AccessControl.PropagationFlags
    name: PropagationFlags
    fullName: System.Security.AccessControl.PropagationFlags
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Security.AccessControl.AccessControlType
    name: AccessControlType
    fullName: System.Security.AccessControl.AccessControlType
    isExternal: true
  - name: )
    fullName: )
- uid: System.Security.AccessControl.FileSystemSecurity.AddAccessRule(System.Security.AccessControl.FileSystemAccessRule)
  parent: System.Security.AccessControl.FileSystemSecurity
  isExternal: false
  name: AddAccessRule(FileSystemAccessRule)
  fullName: System.Security.AccessControl.FileSystemSecurity.AddAccessRule(System.Security.AccessControl.FileSystemAccessRule)
  spec.csharp:
  - uid: System.Security.AccessControl.FileSystemSecurity.AddAccessRule(System.Security.AccessControl.FileSystemAccessRule)
    name: AddAccessRule
    fullName: System.Security.AccessControl.FileSystemSecurity.AddAccessRule
  - name: (
    fullName: (
  - uid: System.Security.AccessControl.FileSystemAccessRule
    name: FileSystemAccessRule
    fullName: System.Security.AccessControl.FileSystemAccessRule
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Security.AccessControl.FileSystemSecurity.AddAccessRule(System.Security.AccessControl.FileSystemAccessRule)
    name: AddAccessRule
    fullName: System.Security.AccessControl.FileSystemSecurity.AddAccessRule
  - name: (
    fullName: (
  - uid: System.Security.AccessControl.FileSystemAccessRule
    name: FileSystemAccessRule
    fullName: System.Security.AccessControl.FileSystemAccessRule
  - name: )
    fullName: )
- uid: System.Security.AccessControl.FileSystemSecurity.AddAuditRule(System.Security.AccessControl.FileSystemAuditRule)
  parent: System.Security.AccessControl.FileSystemSecurity
  isExternal: false
  name: AddAuditRule(FileSystemAuditRule)
  fullName: System.Security.AccessControl.FileSystemSecurity.AddAuditRule(System.Security.AccessControl.FileSystemAuditRule)
  spec.csharp:
  - uid: System.Security.AccessControl.FileSystemSecurity.AddAuditRule(System.Security.AccessControl.FileSystemAuditRule)
    name: AddAuditRule
    fullName: System.Security.AccessControl.FileSystemSecurity.AddAuditRule
  - name: (
    fullName: (
  - uid: System.Security.AccessControl.FileSystemAuditRule
    name: FileSystemAuditRule
    fullName: System.Security.AccessControl.FileSystemAuditRule
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Security.AccessControl.FileSystemSecurity.AddAuditRule(System.Security.AccessControl.FileSystemAuditRule)
    name: AddAuditRule
    fullName: System.Security.AccessControl.FileSystemSecurity.AddAuditRule
  - name: (
    fullName: (
  - uid: System.Security.AccessControl.FileSystemAuditRule
    name: FileSystemAuditRule
    fullName: System.Security.AccessControl.FileSystemAuditRule
  - name: )
    fullName: )
- uid: System.Security.AccessControl.FileSystemSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)
  parent: System.Security.AccessControl.FileSystemSecurity
  isExternal: true
  name: AuditRuleFactory(Principal.IdentityReference, Int32, Boolean, InheritanceFlags, PropagationFlags, AuditFlags)
  fullName: System.Security.AccessControl.FileSystemSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference, System.Int32, System.Boolean, System.Security.AccessControl.InheritanceFlags, System.Security.AccessControl.PropagationFlags, System.Security.AccessControl.AuditFlags)
  spec.csharp:
  - uid: System.Security.AccessControl.FileSystemSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)
    name: AuditRuleFactory
    fullName: System.Security.AccessControl.FileSystemSecurity.AuditRuleFactory
  - name: (
    fullName: (
  - uid: System.Security.Principal.IdentityReference
    name: Principal.IdentityReference
    fullName: System.Security.Principal.IdentityReference
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Security.AccessControl.InheritanceFlags
    name: InheritanceFlags
    fullName: System.Security.AccessControl.InheritanceFlags
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Security.AccessControl.PropagationFlags
    name: PropagationFlags
    fullName: System.Security.AccessControl.PropagationFlags
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Security.AccessControl.AuditFlags
    name: AuditFlags
    fullName: System.Security.AccessControl.AuditFlags
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Security.AccessControl.FileSystemSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)
    name: AuditRuleFactory
    fullName: System.Security.AccessControl.FileSystemSecurity.AuditRuleFactory
  - name: (
    fullName: (
  - uid: System.Security.Principal.IdentityReference
    name: Principal.IdentityReference
    fullName: System.Security.Principal.IdentityReference
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Security.AccessControl.InheritanceFlags
    name: InheritanceFlags
    fullName: System.Security.AccessControl.InheritanceFlags
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Security.AccessControl.PropagationFlags
    name: PropagationFlags
    fullName: System.Security.AccessControl.PropagationFlags
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Security.AccessControl.AuditFlags
    name: AuditFlags
    fullName: System.Security.AccessControl.AuditFlags
    isExternal: true
  - name: )
    fullName: )
- uid: System.Security.AccessControl.FileSystemSecurity.RemoveAccessRule(System.Security.AccessControl.FileSystemAccessRule)
  parent: System.Security.AccessControl.FileSystemSecurity
  isExternal: false
  name: RemoveAccessRule(FileSystemAccessRule)
  fullName: System.Security.AccessControl.FileSystemSecurity.RemoveAccessRule(System.Security.AccessControl.FileSystemAccessRule)
  spec.csharp:
  - uid: System.Security.AccessControl.FileSystemSecurity.RemoveAccessRule(System.Security.AccessControl.FileSystemAccessRule)
    name: RemoveAccessRule
    fullName: System.Security.AccessControl.FileSystemSecurity.RemoveAccessRule
  - name: (
    fullName: (
  - uid: System.Security.AccessControl.FileSystemAccessRule
    name: FileSystemAccessRule
    fullName: System.Security.AccessControl.FileSystemAccessRule
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Security.AccessControl.FileSystemSecurity.RemoveAccessRule(System.Security.AccessControl.FileSystemAccessRule)
    name: RemoveAccessRule
    fullName: System.Security.AccessControl.FileSystemSecurity.RemoveAccessRule
  - name: (
    fullName: (
  - uid: System.Security.AccessControl.FileSystemAccessRule
    name: FileSystemAccessRule
    fullName: System.Security.AccessControl.FileSystemAccessRule
  - name: )
    fullName: )
- uid: System.Security.AccessControl.FileSystemSecurity.RemoveAccessRuleAll(System.Security.AccessControl.FileSystemAccessRule)
  parent: System.Security.AccessControl.FileSystemSecurity
  isExternal: false
  name: RemoveAccessRuleAll(FileSystemAccessRule)
  fullName: System.Security.AccessControl.FileSystemSecurity.RemoveAccessRuleAll(System.Security.AccessControl.FileSystemAccessRule)
  spec.csharp:
  - uid: System.Security.AccessControl.FileSystemSecurity.RemoveAccessRuleAll(System.Security.AccessControl.FileSystemAccessRule)
    name: RemoveAccessRuleAll
    fullName: System.Security.AccessControl.FileSystemSecurity.RemoveAccessRuleAll
  - name: (
    fullName: (
  - uid: System.Security.AccessControl.FileSystemAccessRule
    name: FileSystemAccessRule
    fullName: System.Security.AccessControl.FileSystemAccessRule
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Security.AccessControl.FileSystemSecurity.RemoveAccessRuleAll(System.Security.AccessControl.FileSystemAccessRule)
    name: RemoveAccessRuleAll
    fullName: System.Security.AccessControl.FileSystemSecurity.RemoveAccessRuleAll
  - name: (
    fullName: (
  - uid: System.Security.AccessControl.FileSystemAccessRule
    name: FileSystemAccessRule
    fullName: System.Security.AccessControl.FileSystemAccessRule
  - name: )
    fullName: )
- uid: System.Security.AccessControl.FileSystemSecurity.RemoveAccessRuleSpecific(System.Security.AccessControl.FileSystemAccessRule)
  parent: System.Security.AccessControl.FileSystemSecurity
  isExternal: false
  name: RemoveAccessRuleSpecific(FileSystemAccessRule)
  fullName: System.Security.AccessControl.FileSystemSecurity.RemoveAccessRuleSpecific(System.Security.AccessControl.FileSystemAccessRule)
  spec.csharp:
  - uid: System.Security.AccessControl.FileSystemSecurity.RemoveAccessRuleSpecific(System.Security.AccessControl.FileSystemAccessRule)
    name: RemoveAccessRuleSpecific
    fullName: System.Security.AccessControl.FileSystemSecurity.RemoveAccessRuleSpecific
  - name: (
    fullName: (
  - uid: System.Security.AccessControl.FileSystemAccessRule
    name: FileSystemAccessRule
    fullName: System.Security.AccessControl.FileSystemAccessRule
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Security.AccessControl.FileSystemSecurity.RemoveAccessRuleSpecific(System.Security.AccessControl.FileSystemAccessRule)
    name: RemoveAccessRuleSpecific
    fullName: System.Security.AccessControl.FileSystemSecurity.RemoveAccessRuleSpecific
  - name: (
    fullName: (
  - uid: System.Security.AccessControl.FileSystemAccessRule
    name: FileSystemAccessRule
    fullName: System.Security.AccessControl.FileSystemAccessRule
  - name: )
    fullName: )
- uid: System.Security.AccessControl.FileSystemSecurity.RemoveAuditRule(System.Security.AccessControl.FileSystemAuditRule)
  parent: System.Security.AccessControl.FileSystemSecurity
  isExternal: false
  name: RemoveAuditRule(FileSystemAuditRule)
  fullName: System.Security.AccessControl.FileSystemSecurity.RemoveAuditRule(System.Security.AccessControl.FileSystemAuditRule)
  spec.csharp:
  - uid: System.Security.AccessControl.FileSystemSecurity.RemoveAuditRule(System.Security.AccessControl.FileSystemAuditRule)
    name: RemoveAuditRule
    fullName: System.Security.AccessControl.FileSystemSecurity.RemoveAuditRule
  - name: (
    fullName: (
  - uid: System.Security.AccessControl.FileSystemAuditRule
    name: FileSystemAuditRule
    fullName: System.Security.AccessControl.FileSystemAuditRule
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Security.AccessControl.FileSystemSecurity.RemoveAuditRule(System.Security.AccessControl.FileSystemAuditRule)
    name: RemoveAuditRule
    fullName: System.Security.AccessControl.FileSystemSecurity.RemoveAuditRule
  - name: (
    fullName: (
  - uid: System.Security.AccessControl.FileSystemAuditRule
    name: FileSystemAuditRule
    fullName: System.Security.AccessControl.FileSystemAuditRule
  - name: )
    fullName: )
- uid: System.Security.AccessControl.FileSystemSecurity.RemoveAuditRuleAll(System.Security.AccessControl.FileSystemAuditRule)
  parent: System.Security.AccessControl.FileSystemSecurity
  isExternal: false
  name: RemoveAuditRuleAll(FileSystemAuditRule)
  fullName: System.Security.AccessControl.FileSystemSecurity.RemoveAuditRuleAll(System.Security.AccessControl.FileSystemAuditRule)
  spec.csharp:
  - uid: System.Security.AccessControl.FileSystemSecurity.RemoveAuditRuleAll(System.Security.AccessControl.FileSystemAuditRule)
    name: RemoveAuditRuleAll
    fullName: System.Security.AccessControl.FileSystemSecurity.RemoveAuditRuleAll
  - name: (
    fullName: (
  - uid: System.Security.AccessControl.FileSystemAuditRule
    name: FileSystemAuditRule
    fullName: System.Security.AccessControl.FileSystemAuditRule
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Security.AccessControl.FileSystemSecurity.RemoveAuditRuleAll(System.Security.AccessControl.FileSystemAuditRule)
    name: RemoveAuditRuleAll
    fullName: System.Security.AccessControl.FileSystemSecurity.RemoveAuditRuleAll
  - name: (
    fullName: (
  - uid: System.Security.AccessControl.FileSystemAuditRule
    name: FileSystemAuditRule
    fullName: System.Security.AccessControl.FileSystemAuditRule
  - name: )
    fullName: )
- uid: System.Security.AccessControl.FileSystemSecurity.RemoveAuditRuleSpecific(System.Security.AccessControl.FileSystemAuditRule)
  parent: System.Security.AccessControl.FileSystemSecurity
  isExternal: false
  name: RemoveAuditRuleSpecific(FileSystemAuditRule)
  fullName: System.Security.AccessControl.FileSystemSecurity.RemoveAuditRuleSpecific(System.Security.AccessControl.FileSystemAuditRule)
  spec.csharp:
  - uid: System.Security.AccessControl.FileSystemSecurity.RemoveAuditRuleSpecific(System.Security.AccessControl.FileSystemAuditRule)
    name: RemoveAuditRuleSpecific
    fullName: System.Security.AccessControl.FileSystemSecurity.RemoveAuditRuleSpecific
  - name: (
    fullName: (
  - uid: System.Security.AccessControl.FileSystemAuditRule
    name: FileSystemAuditRule
    fullName: System.Security.AccessControl.FileSystemAuditRule
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Security.AccessControl.FileSystemSecurity.RemoveAuditRuleSpecific(System.Security.AccessControl.FileSystemAuditRule)
    name: RemoveAuditRuleSpecific
    fullName: System.Security.AccessControl.FileSystemSecurity.RemoveAuditRuleSpecific
  - name: (
    fullName: (
  - uid: System.Security.AccessControl.FileSystemAuditRule
    name: FileSystemAuditRule
    fullName: System.Security.AccessControl.FileSystemAuditRule
  - name: )
    fullName: )
- uid: System.Security.AccessControl.FileSystemSecurity.ResetAccessRule(System.Security.AccessControl.FileSystemAccessRule)
  parent: System.Security.AccessControl.FileSystemSecurity
  isExternal: false
  name: ResetAccessRule(FileSystemAccessRule)
  fullName: System.Security.AccessControl.FileSystemSecurity.ResetAccessRule(System.Security.AccessControl.FileSystemAccessRule)
  spec.csharp:
  - uid: System.Security.AccessControl.FileSystemSecurity.ResetAccessRule(System.Security.AccessControl.FileSystemAccessRule)
    name: ResetAccessRule
    fullName: System.Security.AccessControl.FileSystemSecurity.ResetAccessRule
  - name: (
    fullName: (
  - uid: System.Security.AccessControl.FileSystemAccessRule
    name: FileSystemAccessRule
    fullName: System.Security.AccessControl.FileSystemAccessRule
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Security.AccessControl.FileSystemSecurity.ResetAccessRule(System.Security.AccessControl.FileSystemAccessRule)
    name: ResetAccessRule
    fullName: System.Security.AccessControl.FileSystemSecurity.ResetAccessRule
  - name: (
    fullName: (
  - uid: System.Security.AccessControl.FileSystemAccessRule
    name: FileSystemAccessRule
    fullName: System.Security.AccessControl.FileSystemAccessRule
  - name: )
    fullName: )
- uid: System.Security.AccessControl.FileSystemSecurity.SetAccessRule(System.Security.AccessControl.FileSystemAccessRule)
  parent: System.Security.AccessControl.FileSystemSecurity
  isExternal: false
  name: SetAccessRule(FileSystemAccessRule)
  fullName: System.Security.AccessControl.FileSystemSecurity.SetAccessRule(System.Security.AccessControl.FileSystemAccessRule)
  spec.csharp:
  - uid: System.Security.AccessControl.FileSystemSecurity.SetAccessRule(System.Security.AccessControl.FileSystemAccessRule)
    name: SetAccessRule
    fullName: System.Security.AccessControl.FileSystemSecurity.SetAccessRule
  - name: (
    fullName: (
  - uid: System.Security.AccessControl.FileSystemAccessRule
    name: FileSystemAccessRule
    fullName: System.Security.AccessControl.FileSystemAccessRule
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Security.AccessControl.FileSystemSecurity.SetAccessRule(System.Security.AccessControl.FileSystemAccessRule)
    name: SetAccessRule
    fullName: System.Security.AccessControl.FileSystemSecurity.SetAccessRule
  - name: (
    fullName: (
  - uid: System.Security.AccessControl.FileSystemAccessRule
    name: FileSystemAccessRule
    fullName: System.Security.AccessControl.FileSystemAccessRule
  - name: )
    fullName: )
- uid: System.Security.AccessControl.FileSystemSecurity.SetAuditRule(System.Security.AccessControl.FileSystemAuditRule)
  parent: System.Security.AccessControl.FileSystemSecurity
  isExternal: false
  name: SetAuditRule(FileSystemAuditRule)
  fullName: System.Security.AccessControl.FileSystemSecurity.SetAuditRule(System.Security.AccessControl.FileSystemAuditRule)
  spec.csharp:
  - uid: System.Security.AccessControl.FileSystemSecurity.SetAuditRule(System.Security.AccessControl.FileSystemAuditRule)
    name: SetAuditRule
    fullName: System.Security.AccessControl.FileSystemSecurity.SetAuditRule
  - name: (
    fullName: (
  - uid: System.Security.AccessControl.FileSystemAuditRule
    name: FileSystemAuditRule
    fullName: System.Security.AccessControl.FileSystemAuditRule
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Security.AccessControl.FileSystemSecurity.SetAuditRule(System.Security.AccessControl.FileSystemAuditRule)
    name: SetAuditRule
    fullName: System.Security.AccessControl.FileSystemSecurity.SetAuditRule
  - name: (
    fullName: (
  - uid: System.Security.AccessControl.FileSystemAuditRule
    name: FileSystemAuditRule
    fullName: System.Security.AccessControl.FileSystemAuditRule
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.String
  parent: System
  isExternal: false
  name: String
  fullName: System.String
- uid: System.Security.AccessControl.AccessControlSections
  parent: System.Security.AccessControl
  isExternal: false
  name: AccessControlSections
  fullName: System.Security.AccessControl.AccessControlSections
- uid: System.PlatformNotSupportedException
  isExternal: false
  name: PlatformNotSupportedException
  fullName: System.PlatformNotSupportedException
- uid: System.ArgumentException
  parent: System
  isExternal: false
  name: ArgumentException
  fullName: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: false
  name: ArgumentNullException
  fullName: System.ArgumentNullException
- uid: System.IO.DirectoryNotFoundException
  isExternal: false
  name: DirectoryNotFoundException
  fullName: System.IO.DirectoryNotFoundException
- uid: System.IO.FileNotFoundException
  isExternal: false
  name: FileNotFoundException
  fullName: System.IO.FileNotFoundException
- uid: System.IO.IOException
  parent: System.IO
  isExternal: false
  name: IOException
  fullName: System.IO.IOException
- uid: System.NotSupportedException
  parent: System
  isExternal: false
  name: NotSupportedException
  fullName: System.NotSupportedException
- uid: System.IO.PathTooLongException
  isExternal: false
  name: PathTooLongException
  fullName: System.IO.PathTooLongException
- uid: System.Security.AccessControl.PrivilegeNotHeldException
  isExternal: false
  name: PrivilegeNotHeldException
  fullName: System.Security.AccessControl.PrivilegeNotHeldException
- uid: System.SystemException
- uid: System.UnauthorizedAccessException
  isExternal: false
  name: UnauthorizedAccessException
  fullName: System.UnauthorizedAccessException
