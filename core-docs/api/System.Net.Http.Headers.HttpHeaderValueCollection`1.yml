items:
- uid: System.Net.Http.Headers.HttpHeaderValueCollection`1
  commentId: T:System.Net.Http.Headers.HttpHeaderValueCollection`1
  id: HttpHeaderValueCollection`1
  parent: System.Net.Http.Headers
  children:
  - System.Net.Http.Headers.HttpHeaderValueCollection`1.Add(`0)
  - System.Net.Http.Headers.HttpHeaderValueCollection`1.Clear
  - System.Net.Http.Headers.HttpHeaderValueCollection`1.Contains(`0)
  - System.Net.Http.Headers.HttpHeaderValueCollection`1.CopyTo(`0[],System.Int32)
  - System.Net.Http.Headers.HttpHeaderValueCollection`1.Count
  - System.Net.Http.Headers.HttpHeaderValueCollection`1.GetEnumerator
  - System.Net.Http.Headers.HttpHeaderValueCollection`1.IsReadOnly
  - System.Net.Http.Headers.HttpHeaderValueCollection`1.ParseAdd(System.String)
  - System.Net.Http.Headers.HttpHeaderValueCollection`1.Remove(`0)
  - System.Net.Http.Headers.HttpHeaderValueCollection`1.ToString
  - System.Net.Http.Headers.HttpHeaderValueCollection`1.TryParseAdd(System.String)
  langs:
  - csharp
  - vb
  name: HttpHeaderValueCollection<T>
  fullName: System.Net.Http.Headers.HttpHeaderValueCollection<T>
  type: Class
  source:
    remote:
      path: src/System.Net.Http/src/System/Net/Http/Headers/HttpHeaderValueCollection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: HttpHeaderValueCollection
    path: src/System.Net.Http/src/System/Net/Http/Headers/HttpHeaderValueCollection.cs
    startLine: 35
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: Represents a collection of header values.
  syntax:
    content: 'public sealed class HttpHeaderValueCollection<T> : Collections.Generic.ICollection<T>, Collections.Generic.IEnumerable<T>, Collections.IEnumerable where T : class'
    content.vb: >-
      Public NotInheritable Class HttpHeaderValueCollection(Of T As Class)
          Inherits Collections.Generic.ICollection(Of T)
          Implements Collections.Generic.IEnumerable(Of T), Collections.IEnumerable
    typeParameters:
    - id: T
      description: The header collection type.
  inheritance:
  - System.Object
  implements:
  - System.Collections.Generic.IEnumerable{{T}}
  - System.Collections.IEnumerable
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
  fullName.vb: System.Net.Http.Headers.HttpHeaderValueCollection(Of T)
  name.vb: HttpHeaderValueCollection(Of T)
- uid: System.Net.Http.Headers.HttpHeaderValueCollection`1.Count
  commentId: P:System.Net.Http.Headers.HttpHeaderValueCollection`1.Count
  id: Count
  parent: System.Net.Http.Headers.HttpHeaderValueCollection`1
  langs:
  - csharp
  - vb
  name: Count
  fullName: System.Net.Http.Headers.HttpHeaderValueCollection<T>.Count
  type: Property
  source:
    remote:
      path: src/System.Net.Http/src/System/Net/Http/Headers/HttpHeaderValueCollection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Count
    path: src/System.Net.Http/src/System/Net/Http/Headers/HttpHeaderValueCollection.cs
    startLine: 42
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: Gets the number of headers in the <xref href="System.Net.Http.Headers.HttpHeaderValueCollection`1" data-throw-if-not-resolved="false"></xref>.
  syntax:
    content: public int Count { get; }
    content.vb: Public ReadOnly Property Count As Integer
    parameters: []
    return:
      type: System.Int32
      description: Returns <xref href="System.Int32" data-throw-if-not-resolved="false"></xref>.The number of headers in a collection
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: System.Net.Http.Headers.HttpHeaderValueCollection(Of T).Count
- uid: System.Net.Http.Headers.HttpHeaderValueCollection`1.IsReadOnly
  commentId: P:System.Net.Http.Headers.HttpHeaderValueCollection`1.IsReadOnly
  id: IsReadOnly
  parent: System.Net.Http.Headers.HttpHeaderValueCollection`1
  langs:
  - csharp
  - vb
  name: IsReadOnly
  fullName: System.Net.Http.Headers.HttpHeaderValueCollection<T>.IsReadOnly
  type: Property
  source:
    remote:
      path: src/System.Net.Http/src/System/Net/Http/Headers/HttpHeaderValueCollection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IsReadOnly
    path: src/System.Net.Http/src/System/Net/Http/Headers/HttpHeaderValueCollection.cs
    startLine: 47
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: Gets a value indicating whether the <xref href="System.Net.Http.Headers.HttpHeaderValueCollection`1" data-throw-if-not-resolved="false"></xref> instance is read-only.
  syntax:
    content: public bool IsReadOnly { get; }
    content.vb: Public ReadOnly Property IsReadOnly As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: Returns <xref href="System.Boolean" data-throw-if-not-resolved="false"></xref>.true if the <xref href="System.Net.Http.Headers.HttpHeaderValueCollection`1" data-throw-if-not-resolved="false"></xref> instance is read-only; otherwise, false.
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: System.Net.Http.Headers.HttpHeaderValueCollection(Of T).IsReadOnly
- uid: System.Net.Http.Headers.HttpHeaderValueCollection`1.Add(`0)
  commentId: M:System.Net.Http.Headers.HttpHeaderValueCollection`1.Add(`0)
  id: Add(`0)
  parent: System.Net.Http.Headers.HttpHeaderValueCollection`1
  langs:
  - csharp
  - vb
  name: Add(T)
  fullName: System.Net.Http.Headers.HttpHeaderValueCollection<T>.Add(T)
  type: Method
  source:
    remote:
      path: src/System.Net.Http/src/System/Net/Http/Headers/HttpHeaderValueCollection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Add
    path: src/System.Net.Http/src/System/Net/Http/Headers/HttpHeaderValueCollection.cs
    startLine: 93
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: Adds an entry to the <xref href="System.Net.Http.Headers.HttpHeaderValueCollection`1" data-throw-if-not-resolved="false"></xref>.
  syntax:
    content: public void Add(T item)
    content.vb: Public Sub Add(item As T)
    parameters:
    - id: item
      type: '{T}'
      description: The item to add to the header collection.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Net.Http.Headers.HttpHeaderValueCollection(Of T).Add(T)
- uid: System.Net.Http.Headers.HttpHeaderValueCollection`1.Clear
  commentId: M:System.Net.Http.Headers.HttpHeaderValueCollection`1.Clear
  id: Clear
  parent: System.Net.Http.Headers.HttpHeaderValueCollection`1
  langs:
  - csharp
  - vb
  name: Clear()
  fullName: System.Net.Http.Headers.HttpHeaderValueCollection<T>.Clear()
  type: Method
  source:
    remote:
      path: src/System.Net.Http/src/System/Net/Http/Headers/HttpHeaderValueCollection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Clear
    path: src/System.Net.Http/src/System/Net/Http/Headers/HttpHeaderValueCollection.cs
    startLine: 109
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: Removes all entries from the <xref href="System.Net.Http.Headers.HttpHeaderValueCollection`1" data-throw-if-not-resolved="false"></xref>.
  syntax:
    content: public void Clear()
    content.vb: Public Sub Clear
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Net.Http.Headers.HttpHeaderValueCollection(Of T).Clear()
- uid: System.Net.Http.Headers.HttpHeaderValueCollection`1.Contains(`0)
  commentId: M:System.Net.Http.Headers.HttpHeaderValueCollection`1.Contains(`0)
  id: Contains(`0)
  parent: System.Net.Http.Headers.HttpHeaderValueCollection`1
  langs:
  - csharp
  - vb
  name: Contains(T)
  fullName: System.Net.Http.Headers.HttpHeaderValueCollection<T>.Contains(T)
  type: Method
  source:
    remote:
      path: src/System.Net.Http/src/System/Net/Http/Headers/HttpHeaderValueCollection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Contains
    path: src/System.Net.Http/src/System/Net/Http/Headers/HttpHeaderValueCollection.cs
    startLine: 114
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: Determines if the <xref href="System.Net.Http.Headers.HttpHeaderValueCollection`1" data-throw-if-not-resolved="false"></xref> contains an item.
  syntax:
    content: public bool Contains(T item)
    content.vb: Public Function Contains(item As T) As Boolean
    parameters:
    - id: item
      type: '{T}'
      description: The item to find to the header collection.
    return:
      type: System.Boolean
      description: Returns <xref href="System.Boolean" data-throw-if-not-resolved="false"></xref>.true if the entry is contained in the <xref href="System.Net.Http.Headers.HttpHeaderValueCollection`1" data-throw-if-not-resolved="false"></xref> instance; otherwise, false
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Net.Http.Headers.HttpHeaderValueCollection(Of T).Contains(T)
- uid: System.Net.Http.Headers.HttpHeaderValueCollection`1.CopyTo(`0[],System.Int32)
  commentId: M:System.Net.Http.Headers.HttpHeaderValueCollection`1.CopyTo(`0[],System.Int32)
  id: CopyTo(`0[],System.Int32)
  parent: System.Net.Http.Headers.HttpHeaderValueCollection`1
  langs:
  - csharp
  - vb
  name: CopyTo(T[], Int32)
  fullName: System.Net.Http.Headers.HttpHeaderValueCollection<T>.CopyTo(T[], System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Net.Http/src/System/Net/Http/Headers/HttpHeaderValueCollection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CopyTo
    path: src/System.Net.Http/src/System/Net/Http/Headers/HttpHeaderValueCollection.cs
    startLine: 120
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: Copies the entire <xref href="System.Net.Http.Headers.HttpHeaderValueCollection`1" data-throw-if-not-resolved="false"></xref> to a compatible one-dimensional <xref href="System.Array" data-throw-if-not-resolved="false"></xref>, starting at the specified index of the target array.
  syntax:
    content: public void CopyTo(T[] array, int arrayIndex)
    content.vb: Public Sub CopyTo(array As T(), arrayIndex As Integer)
    parameters:
    - id: array
      type: '{T}[]'
      description: The one-dimensional <xref href="System.Array" data-throw-if-not-resolved="false"></xref> that is the destination of the elements copied from <xref href="System.Net.Http.Headers.HttpHeaderValueCollection`1" data-throw-if-not-resolved="false"></xref>. The <xref href="System.Array" data-throw-if-not-resolved="false"></xref> must have zero-based indexing.
    - id: arrayIndex
      type: System.Int32
      description: The zero-based index in <em>array</em> at which copying begins.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Net.Http.Headers.HttpHeaderValueCollection(Of T).CopyTo(T(), System.Int32)
  name.vb: CopyTo(T(), Int32)
- uid: System.Net.Http.Headers.HttpHeaderValueCollection`1.GetEnumerator
  commentId: M:System.Net.Http.Headers.HttpHeaderValueCollection`1.GetEnumerator
  id: GetEnumerator
  parent: System.Net.Http.Headers.HttpHeaderValueCollection`1
  langs:
  - csharp
  - vb
  name: GetEnumerator()
  fullName: System.Net.Http.Headers.HttpHeaderValueCollection<T>.GetEnumerator()
  type: Method
  source:
    remote:
      path: src/System.Net.Http/src/System/Net/Http/Headers/HttpHeaderValueCollection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetEnumerator
    path: src/System.Net.Http/src/System/Net/Http/Headers/HttpHeaderValueCollection.cs
    startLine: 166
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: Returns an enumerator that iterates through the <xref href="System.Net.Http.Headers.HttpHeaderValueCollection`1" data-throw-if-not-resolved="false"></xref>.
  syntax:
    content: public Collections.Generic.IEnumerator<T> GetEnumerator()
    content.vb: Public Function GetEnumerator As Collections.Generic.IEnumerator(Of T)
    return:
      type: System.Collections.Generic.IEnumerator{{T}}
      description: Returns <xref href="System.Collections.Generic.IEnumerator`1" data-throw-if-not-resolved="false"></xref>.An enumerator for the <xref href="System.Net.Http.Headers.HttpHeaderValueCollection`1" data-throw-if-not-resolved="false"></xref> instance.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Net.Http.Headers.HttpHeaderValueCollection(Of T).GetEnumerator()
- uid: System.Net.Http.Headers.HttpHeaderValueCollection`1.ParseAdd(System.String)
  commentId: M:System.Net.Http.Headers.HttpHeaderValueCollection`1.ParseAdd(System.String)
  id: ParseAdd(System.String)
  parent: System.Net.Http.Headers.HttpHeaderValueCollection`1
  langs:
  - csharp
  - vb
  name: ParseAdd(String)
  fullName: System.Net.Http.Headers.HttpHeaderValueCollection<T>.ParseAdd(System.String)
  type: Method
  source:
    remote:
      path: src/System.Net.Http/src/System/Net/Http/Headers/HttpHeaderValueCollection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ParseAdd
    path: src/System.Net.Http/src/System/Net/Http/Headers/HttpHeaderValueCollection.cs
    startLine: 99
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: Parses and adds an entry to the <xref href="System.Net.Http.Headers.HttpHeaderValueCollection`1" data-throw-if-not-resolved="false"></xref>.
  syntax:
    content: public void ParseAdd(string input)
    content.vb: Public Sub ParseAdd(input As String)
    parameters:
    - id: input
      type: System.String
      description: The entry to add.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Net.Http.Headers.HttpHeaderValueCollection(Of T).ParseAdd(System.String)
- uid: System.Net.Http.Headers.HttpHeaderValueCollection`1.Remove(`0)
  commentId: M:System.Net.Http.Headers.HttpHeaderValueCollection`1.Remove(`0)
  id: Remove(`0)
  parent: System.Net.Http.Headers.HttpHeaderValueCollection`1
  langs:
  - csharp
  - vb
  name: Remove(T)
  fullName: System.Net.Http.Headers.HttpHeaderValueCollection<T>.Remove(T)
  type: Method
  source:
    remote:
      path: src/System.Net.Http/src/System/Net/Http/Headers/HttpHeaderValueCollection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Remove
    path: src/System.Net.Http/src/System/Net/Http/Headers/HttpHeaderValueCollection.cs
    startLine: 158
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: Removes the specified item from the <xref href="System.Net.Http.Headers.HttpHeaderValueCollection`1" data-throw-if-not-resolved="false"></xref>.
  syntax:
    content: public bool Remove(T item)
    content.vb: Public Function Remove(item As T) As Boolean
    parameters:
    - id: item
      type: '{T}'
      description: The item to remove.
    return:
      type: System.Boolean
      description: Returns <xref href="System.Boolean" data-throw-if-not-resolved="false"></xref>.true if the <em>item</em> was removed from the <xref href="System.Net.Http.Headers.HttpHeaderValueCollection`1" data-throw-if-not-resolved="false"></xref> instance; otherwise, false
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Net.Http.Headers.HttpHeaderValueCollection(Of T).Remove(T)
- uid: System.Net.Http.Headers.HttpHeaderValueCollection`1.ToString
  commentId: M:System.Net.Http.Headers.HttpHeaderValueCollection`1.ToString
  id: ToString
  parent: System.Net.Http.Headers.HttpHeaderValueCollection`1
  langs:
  - csharp
  - vb
  name: ToString()
  fullName: System.Net.Http.Headers.HttpHeaderValueCollection<T>.ToString()
  type: Method
  source:
    remote:
      path: src/System.Net.Http/src/System/Net/Http/Headers/HttpHeaderValueCollection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ToString
    path: src/System.Net.Http/src/System/Net/Http/Headers/HttpHeaderValueCollection.cs
    startLine: 204
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: Returns a string that represents the current <xref href="System.Net.Http.Headers.HttpHeaderValueCollection`1" data-throw-if-not-resolved="false"></xref> object. object.
  syntax:
    content: public override string ToString()
    content.vb: Public Overrides Function ToString As String
    return:
      type: System.String
      description: Returns <xref href="System.String" data-throw-if-not-resolved="false"></xref>.A string that represents the current object.
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: System.Net.Http.Headers.HttpHeaderValueCollection(Of T).ToString()
- uid: System.Net.Http.Headers.HttpHeaderValueCollection`1.TryParseAdd(System.String)
  commentId: M:System.Net.Http.Headers.HttpHeaderValueCollection`1.TryParseAdd(System.String)
  id: TryParseAdd(System.String)
  parent: System.Net.Http.Headers.HttpHeaderValueCollection`1
  langs:
  - csharp
  - vb
  name: TryParseAdd(String)
  fullName: System.Net.Http.Headers.HttpHeaderValueCollection<T>.TryParseAdd(System.String)
  type: Method
  source:
    remote:
      path: src/System.Net.Http/src/System/Net/Http/Headers/HttpHeaderValueCollection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: TryParseAdd
    path: src/System.Net.Http/src/System/Net/Http/Headers/HttpHeaderValueCollection.cs
    startLine: 104
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: Determines whether the input could be parsed and added to the <xref href="System.Net.Http.Headers.HttpHeaderValueCollection`1" data-throw-if-not-resolved="false"></xref>.
  syntax:
    content: public bool TryParseAdd(string input)
    content.vb: Public Function TryParseAdd(input As String) As Boolean
    parameters:
    - id: input
      type: System.String
      description: The entry to validate.
    return:
      type: System.Boolean
      description: Returns <xref href="System.Boolean" data-throw-if-not-resolved="false"></xref>.true if the <em>input</em> could be parsed and added to the <xref href="System.Net.Http.Headers.HttpHeaderValueCollection`1" data-throw-if-not-resolved="false"></xref> instance; otherwise, false
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Net.Http.Headers.HttpHeaderValueCollection(Of T).TryParseAdd(System.String)
references:
- uid: System.Net.Http.Headers
  isExternal: false
  name: System.Net.Http.Headers
  fullName: System.Net.Http.Headers
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System.Collections.Generic.IEnumerable{{T}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: Generic.IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  fullname.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: Generic.IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: Generic.IEnumerable
    fullName: System.Collections.Generic.IEnumerable
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: Generic.IEnumerable
    fullName: System.Collections.Generic.IEnumerable
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.Collections.IEnumerable
  parent: System.Collections
  isExternal: false
  name: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Collections.Generic.IEnumerable`1
  parent: System.Collections.Generic
  isExternal: false
  name: Collections.Generic.IEnumerable<>
  fullName: System.Collections.Generic.IEnumerable<>
  fullname.vb: System.Collections.Generic.IEnumerable(Of )
  name.vb: Collections.Generic.IEnumerable(Of )
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: Collections.Generic.IEnumerable
    fullName: System.Collections.Generic.IEnumerable
  - name: <
    fullName: <
  - {}
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: Collections.Generic.IEnumerable
    fullName: System.Collections.Generic.IEnumerable
  - name: '(Of '
    fullName: '(Of '
  - {}
  - name: )
    fullName: )
- uid: System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Collections
  isExternal: false
  name: System.Collections
  fullName: System.Collections
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  fullName: System.Int32
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  fullName: System.Boolean
- uid: '{T}'
  isExternal: false
  name: T
  fullName: T
- uid: '{T}[]'
  isExternal: false
  name: T[]
  fullName: T[]
  fullname.vb: T()
  name.vb: T()
  spec.csharp:
  - name: T
    fullName: T
  - name: '[]'
    fullName: '[]'
  spec.vb:
  - name: T
    fullName: T
  - name: ()
    fullName: ()
- uid: System.Collections.Generic.IEnumerator{{T}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerator`1
  name: Generic.IEnumerator<T>
  fullName: System.Collections.Generic.IEnumerator<T>
  fullname.vb: System.Collections.Generic.IEnumerator(Of T)
  name.vb: Generic.IEnumerator(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: Generic.IEnumerator
    fullName: System.Collections.Generic.IEnumerator
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: Generic.IEnumerator
    fullName: System.Collections.Generic.IEnumerator
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.Collections.Generic.IEnumerator`1
  parent: System.Collections.Generic
  isExternal: false
  name: Generic.IEnumerator<>
  fullName: System.Collections.Generic.IEnumerator<>
  fullname.vb: System.Collections.Generic.IEnumerator(Of )
  name.vb: Generic.IEnumerator(Of )
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: Generic.IEnumerator
    fullName: System.Collections.Generic.IEnumerator
  - name: <
    fullName: <
  - {}
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: Generic.IEnumerator
    fullName: System.Collections.Generic.IEnumerator
  - name: '(Of '
    fullName: '(Of '
  - {}
  - name: )
    fullName: )
- uid: System.String
  parent: System
  isExternal: false
  name: String
  fullName: System.String
