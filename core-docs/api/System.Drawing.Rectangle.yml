items:
- uid: System.Drawing.Rectangle
  commentId: T:System.Drawing.Rectangle
  id: Rectangle
  parent: System.Drawing
  children:
  - System.Drawing.Rectangle.#ctor(System.Drawing.Point,System.Drawing.Size)
  - System.Drawing.Rectangle.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)
  - System.Drawing.Rectangle.Bottom
  - System.Drawing.Rectangle.Ceiling(System.Drawing.RectangleF)
  - System.Drawing.Rectangle.Contains(System.Drawing.Point)
  - System.Drawing.Rectangle.Contains(System.Drawing.Rectangle)
  - System.Drawing.Rectangle.Contains(System.Int32,System.Int32)
  - System.Drawing.Rectangle.Empty
  - System.Drawing.Rectangle.Equals(System.Object)
  - System.Drawing.Rectangle.FromLTRB(System.Int32,System.Int32,System.Int32,System.Int32)
  - System.Drawing.Rectangle.GetHashCode
  - System.Drawing.Rectangle.Height
  - System.Drawing.Rectangle.Inflate(System.Drawing.Rectangle,System.Int32,System.Int32)
  - System.Drawing.Rectangle.Inflate(System.Drawing.Size)
  - System.Drawing.Rectangle.Inflate(System.Int32,System.Int32)
  - System.Drawing.Rectangle.Intersect(System.Drawing.Rectangle)
  - System.Drawing.Rectangle.Intersect(System.Drawing.Rectangle,System.Drawing.Rectangle)
  - System.Drawing.Rectangle.IntersectsWith(System.Drawing.Rectangle)
  - System.Drawing.Rectangle.IsEmpty
  - System.Drawing.Rectangle.Left
  - System.Drawing.Rectangle.Location
  - System.Drawing.Rectangle.Offset(System.Drawing.Point)
  - System.Drawing.Rectangle.Offset(System.Int32,System.Int32)
  - System.Drawing.Rectangle.op_Equality(System.Drawing.Rectangle,System.Drawing.Rectangle)
  - System.Drawing.Rectangle.op_Inequality(System.Drawing.Rectangle,System.Drawing.Rectangle)
  - System.Drawing.Rectangle.Right
  - System.Drawing.Rectangle.Round(System.Drawing.RectangleF)
  - System.Drawing.Rectangle.Size
  - System.Drawing.Rectangle.Top
  - System.Drawing.Rectangle.ToString
  - System.Drawing.Rectangle.Truncate(System.Drawing.RectangleF)
  - System.Drawing.Rectangle.Union(System.Drawing.Rectangle,System.Drawing.Rectangle)
  - System.Drawing.Rectangle.Width
  - System.Drawing.Rectangle.X
  - System.Drawing.Rectangle.Y
  langs:
  - csharp
  - vb
  name: Rectangle
  fullName: System.Drawing.Rectangle
  type: Struct
  source:
    remote:
      path: src/System.Drawing.Primitives/src/System/Drawing/Rectangle.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Rectangle
    path: src/System.Drawing.Primitives/src/System/Drawing/Rectangle.cs
    startLine: 13
  assemblies:
  - System.Drawing.Primitives
  namespace: System.Drawing
  summary: "\n<p>Stores a set of four integers that represent the location and size of a rectangle</p>\n"
  remarks: "\n<p>A rectangle is defined by its <xref href=\"System.Drawing.Rectangle.Width\" data-throw-if-not-resolved=\"false\"></xref>, <xref href=\"System.Drawing.Rectangle.Height\" data-throw-if-not-resolved=\"false\"></xref>, and upper-left corner represented by the <xref href=\"System.Drawing.Rectangle.Location\" data-throw-if-not-resolved=\"false\"></xref> property.</p>\n<p>To draw rectangles, you need a <xref href=\"System.Drawing.Graphics\" data-throw-if-not-resolved=\"false\"></xref> object and a <xref href=\"System.Drawing.Pen\" data-throw-if-not-resolved=\"false\"></xref> object. The <xref href=\"System.Drawing.Graphics\" data-throw-if-not-resolved=\"false\"></xref> object provides the <xref href=\"System.Drawing.Graphics.DrawRectangle(System.Drawing.Pen,System.Drawing.Rectangle)\" data-throw-if-not-resolved=\"false\"></xref> method, and the <xref href=\"System.Drawing.Pen\" data-throw-if-not-resolved=\"false\"></xref> object stores features of the line, such as color and width. The units the rectangle is drawn in is determined by the <xref href=\"System.Drawing.Graphics.PageUnit\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"System.Drawing.Graphics.PageScale\" data-throw-if-not-resolved=\"false\"></xref> properties of the graphics object used for drawing. The default unit is pixels.</p>\n<p>To draw a <xref href=\"System.Drawing.Rectangle\" data-throw-if-not-resolved=\"false\"></xref> filled with color, you need a <xref href=\"System.Drawing.Graphics\" data-throw-if-not-resolved=\"false\"></xref> object and an object derived from <xref href=\"System.Drawing.Brush\" data-throw-if-not-resolved=\"false\"></xref> such as <xref href=\"System.Drawing.SolidBrush\" data-throw-if-not-resolved=\"false\"></xref> or <xref href=\"System.Drawing.Drawing2D.LinearGradientBrush\" data-throw-if-not-resolved=\"false\"></xref>. The <xref href=\"System.Drawing.Graphics\" data-throw-if-not-resolved=\"false\"></xref> object provides the <xref href=\"System.Drawing.Graphics.FillRectangle(System.Drawing.Brush,System.Drawing.Rectangle)\" data-throw-if-not-resolved=\"false\"></xref> method and the <xref href=\"System.Drawing.Brush\" data-throw-if-not-resolved=\"false\"></xref> object provides the color and fill information. </p>\n<p>For more advanced shapes, use a <xref href=\"System.Drawing.Region\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  example:
  - "\n<p>The following example draws a rectangle with its upper-left corner at (10, 10). The rectangle has a width of 100 and a height of 50. The second argument passed to the <see cref=\"Overload:System.Drawing.Pen.#ctor\"></see> constructor indicates that the pen width is 5 pixels.</p>\n<p>When the rectangle is drawn, the pen is centered on the rectangle's boundary. Because the pen width is 5, the sides of the rectangle are drawn 5 pixels wide, such that 1 pixel is drawn on the boundary itself, 2 pixels are drawn on the inside, and 2 pixels are drawn on the outside. For more details on pen alignment, see How to: Set Pen Width and Alignment.</p>\n<p>The following illustration shows the resulting rectangle. The dotted lines show where the rectangle would have been drawn if the pen width had been one pixel. The enlarged view of the upper-left corner of the rectangle shows that the thick black lines are centered on those dotted lines.</p>\n<p>The example is designed for use with Windows Forms, and it requires <xref href=\"System.Windows.Forms.PaintEventArgs\" data-throw-if-not-resolved=\"false\"></xref><em>e</em>, which is a parameter of the <xref href=\"System.Windows.Forms.Control.Paint\" data-throw-if-not-resolved=\"false\"></xref> event handler.</p>System.Drawing.UsingAPen#21<p></p>"
  syntax:
    content: public struct Rectangle
    content.vb: Public Structure Rectangle
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetType
  modifiers.csharp:
  - public
  - struct
  modifiers.vb:
  - Public
  - Structure
- uid: System.Drawing.Rectangle.Empty
  commentId: F:System.Drawing.Rectangle.Empty
  id: Empty
  parent: System.Drawing.Rectangle
  langs:
  - csharp
  - vb
  name: Empty
  fullName: System.Drawing.Rectangle.Empty
  type: Field
  source:
    remote:
      path: src/System.Drawing.Primitives/src/System/Drawing/Rectangle.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Empty
    path: src/System.Drawing.Primitives/src/System/Drawing/Rectangle.cs
    startLine: 15
  assemblies:
  - System.Drawing.Primitives
  namespace: System.Drawing
  summary: "\n<p>Represents a <xref href=\"System.Drawing.Rectangle\" data-throw-if-not-resolved=\"false\"></xref> structure with its properties left uninitialized.</p>\n"
  remarks: "\n<p>A rectangle is defined by its width, height and upper-left corner.</p>\n"
  syntax:
    content: public static readonly Rectangle Empty
    content.vb: Public Shared ReadOnly Empty As Rectangle
    return:
      type: System.Drawing.Rectangle
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: System.Drawing.Rectangle.#ctor(System.Drawing.Point,System.Drawing.Size)
  commentId: M:System.Drawing.Rectangle.#ctor(System.Drawing.Point,System.Drawing.Size)
  id: '#ctor(System.Drawing.Point,System.Drawing.Size)'
  parent: System.Drawing.Rectangle
  langs:
  - csharp
  - vb
  name: Rectangle(Point, Size)
  fullName: System.Drawing.Rectangle.Rectangle(System.Drawing.Point, System.Drawing.Size)
  type: Constructor
  source:
    remote:
      path: src/System.Drawing.Primitives/src/System/Drawing/Rectangle.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Drawing.Primitives/src/System/Drawing/Rectangle.cs
    startLine: 42
  assemblies:
  - System.Drawing.Primitives
  namespace: System.Drawing
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Drawing.Rectangle\" data-throw-if-not-resolved=\"false\"></xref> class with the specified location and size.</p>\n"
  syntax:
    content: public Rectangle(Point location, Size size)
    content.vb: Public Sub New(location As Point, size As Size)
    parameters:
    - id: location
      type: System.Drawing.Point
    - id: size
      type: System.Drawing.Size
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Drawing.Rectangle.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)
  commentId: M:System.Drawing.Rectangle.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)
  id: '#ctor(System.Int32,System.Int32,System.Int32,System.Int32)'
  parent: System.Drawing.Rectangle
  langs:
  - csharp
  - vb
  name: Rectangle(Int32, Int32, Int32, Int32)
  fullName: System.Drawing.Rectangle.Rectangle(System.Int32, System.Int32, System.Int32, System.Int32)
  type: Constructor
  source:
    remote:
      path: src/System.Drawing.Primitives/src/System/Drawing/Rectangle.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Drawing.Primitives/src/System/Drawing/Rectangle.cs
    startLine: 28
  assemblies:
  - System.Drawing.Primitives
  namespace: System.Drawing
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Drawing.Rectangle\" data-throw-if-not-resolved=\"false\"></xref> class with the specified location and size.</p>\n"
  example:
  - "\n<p>The following code example demonstrates the <xref href=\"System.Drawing.Rectangle.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)\" data-throw-if-not-resolved=\"false\"></xref>, <xref href=\"System.Drawing.Rectangle.Intersect(System.Drawing.Rectangle)\" data-throw-if-not-resolved=\"false\"></xref>, <xref href=\"System.Drawing.Rectangle.IsEmpty\" data-throw-if-not-resolved=\"false\"></xref>, and <xref href=\"System.Drawing.Rectangle.IntersectsWith(System.Drawing.Rectangle)\" data-throw-if-not-resolved=\"false\"></xref> members. This example should be used with a Windows Form. Paste this code into a form and call this method when handling the form's <xref href=\"System.Windows.Forms.Control.Paint\" data-throw-if-not-resolved=\"false\"></xref> event, passing <em>e</em> as <xref href=\"System.Windows.Forms.PaintEventArgs\" data-throw-if-not-resolved=\"false\"></xref>.</p>System.Drawing.RectanglesAndPoints#2"
  syntax:
    content: public Rectangle(int x, int y, int width, int height)
    content.vb: Public Sub New(x As Integer, y As Integer, width As Integer, height As Integer)
    parameters:
    - id: x
      type: System.Int32
    - id: y
      type: System.Int32
    - id: width
      type: System.Int32
    - id: height
      type: System.Int32
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Drawing.Rectangle.Bottom
  commentId: P:System.Drawing.Rectangle.Bottom
  id: Bottom
  parent: System.Drawing.Rectangle
  langs:
  - csharp
  - vb
  name: Bottom
  fullName: System.Drawing.Rectangle.Bottom
  type: Property
  source:
    remote:
      path: src/System.Drawing.Primitives/src/System/Drawing/Rectangle.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Bottom
    path: src/System.Drawing.Primitives/src/System/Drawing/Rectangle.cs
    startLine: 209
  assemblies:
  - System.Drawing.Primitives
  namespace: System.Drawing
  summary: "\n<p>Gets the y-coordinate that is the sum of the <xref href=\"System.Drawing.Rectangle.Y\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"System.Drawing.Rectangle.Height\" data-throw-if-not-resolved=\"false\"></xref> property values of this <xref href=\"System.Drawing.Rectangle\" data-throw-if-not-resolved=\"false\"></xref> structure.</p>\n"
  remarks: "\n<p>The value of the <xref href=\"System.Drawing.Rectangle.Bottom\" data-throw-if-not-resolved=\"false\"></xref> property represents the y-coordinate of the first point at the bottom edge of the <xref href=\"System.Drawing.Rectangle\" data-throw-if-not-resolved=\"false\"></xref> that is not contained in the <xref href=\"System.Drawing.Rectangle\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: public int Bottom { get; }
    content.vb: Public ReadOnly Property Bottom As Integer
    parameters: []
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Drawing.Rectangle.Height
  commentId: P:System.Drawing.Rectangle.Height
  id: Height
  parent: System.Drawing.Rectangle
  langs:
  - csharp
  - vb
  name: Height
  fullName: System.Drawing.Rectangle.Height
  type: Property
  source:
    remote:
      path: src/System.Drawing.Primitives/src/System/Drawing/Rectangle.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Height
    path: src/System.Drawing.Primitives/src/System/Drawing/Rectangle.cs
    startLine: 149
  assemblies:
  - System.Drawing.Primitives
  namespace: System.Drawing
  summary: "\n<p>Gets or sets the height of this <xref href=\"System.Drawing.Rectangle\" data-throw-if-not-resolved=\"false\"></xref> structure.</p>\n"
  remarks: "\n<p>Changing the <xref href=\"System.Drawing.Rectangle.Height\" data-throw-if-not-resolved=\"false\"></xref> property will also cause a change in the <xref href=\"System.Drawing.Rectangle.Bottom\" data-throw-if-not-resolved=\"false\"></xref> property of the <xref href=\"System.Drawing.Rectangle\" data-throw-if-not-resolved=\"false\"></xref>. The units the rectangle is drawn in is determined by the <xref href=\"System.Drawing.Graphics.PageUnit\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"System.Drawing.Graphics.PageScale\" data-throw-if-not-resolved=\"false\"></xref> properties of the graphics object used for drawing. The default unit is pixels.</p>\n"
  syntax:
    content: public int Height { get; set; }
    content.vb: Public Property Height As Integer
    parameters: []
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Drawing.Rectangle.IsEmpty
  commentId: P:System.Drawing.Rectangle.IsEmpty
  id: IsEmpty
  parent: System.Drawing.Rectangle
  langs:
  - csharp
  - vb
  name: IsEmpty
  fullName: System.Drawing.Rectangle.IsEmpty
  type: Property
  source:
    remote:
      path: src/System.Drawing.Primitives/src/System/Drawing/Rectangle.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IsEmpty
    path: src/System.Drawing.Primitives/src/System/Drawing/Rectangle.cs
    startLine: 223
  assemblies:
  - System.Drawing.Primitives
  namespace: System.Drawing
  summary: "\n<p>Tests whether all numeric properties of this <xref href=\"System.Drawing.Rectangle\" data-throw-if-not-resolved=\"false\"></xref> have values of zero.</p>\n"
  example:
  - "\n<p>The following code example demonstrates the <xref href=\"System.Drawing.Rectangle.Intersect(System.Drawing.Rectangle)\" data-throw-if-not-resolved=\"false\"></xref>, <xref href=\"System.Drawing.Rectangle.IsEmpty\" data-throw-if-not-resolved=\"false\"></xref> and the <xref href=\"System.Drawing.Rectangle.IntersectsWith(System.Drawing.Rectangle)\" data-throw-if-not-resolved=\"false\"></xref> members. This example should be used with a Windows Form. Paste this code into a form and call this method when handling the form's <xref href=\"System.Windows.Forms.Control.Paint\" data-throw-if-not-resolved=\"false\"></xref> event, passing <em>e</em> as <xref href=\"System.Windows.Forms.PaintEventArgs\" data-throw-if-not-resolved=\"false\"></xref>.</p>System.Drawing.RectanglesAndPoints#2"
  syntax:
    content: public bool IsEmpty { get; }
    content.vb: Public ReadOnly Property IsEmpty As Boolean
    parameters: []
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Drawing.Rectangle.Left
  commentId: P:System.Drawing.Rectangle.Left
  id: Left
  parent: System.Drawing.Rectangle
  langs:
  - csharp
  - vb
  name: Left
  fullName: System.Drawing.Rectangle.Left
  type: Property
  source:
    remote:
      path: src/System.Drawing.Primitives/src/System/Drawing/Rectangle.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Left
    path: src/System.Drawing.Primitives/src/System/Drawing/Rectangle.cs
    startLine: 167
  assemblies:
  - System.Drawing.Primitives
  namespace: System.Drawing
  summary: "\n<p>Gets the x-coordinate of the left edge of this <xref href=\"System.Drawing.Rectangle\" data-throw-if-not-resolved=\"false\"></xref> structure.</p>\n"
  syntax:
    content: public int Left { get; }
    content.vb: Public ReadOnly Property Left As Integer
    parameters: []
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Drawing.Rectangle.Location
  commentId: P:System.Drawing.Rectangle.Location
  id: Location
  parent: System.Drawing.Rectangle
  langs:
  - csharp
  - vb
  name: Location
  fullName: System.Drawing.Rectangle.Location
  type: Property
  source:
    remote:
      path: src/System.Drawing.Primitives/src/System/Drawing/Rectangle.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Location
    path: src/System.Drawing.Primitives/src/System/Drawing/Rectangle.cs
    startLine: 68
  assemblies:
  - System.Drawing.Primitives
  namespace: System.Drawing
  summary: "\n<p>Gets or sets the coordinates of the upper-left corner of this <xref href=\"System.Drawing.Rectangle\" data-throw-if-not-resolved=\"false\"></xref> structure.</p>\n"
  syntax:
    content: public Point Location { get; set; }
    content.vb: Public Property Location As Point
    parameters: []
    return:
      type: System.Drawing.Point
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Drawing.Rectangle.Right
  commentId: P:System.Drawing.Rectangle.Right
  id: Right
  parent: System.Drawing.Rectangle
  langs:
  - csharp
  - vb
  name: Right
  fullName: System.Drawing.Rectangle.Right
  type: Property
  source:
    remote:
      path: src/System.Drawing.Primitives/src/System/Drawing/Rectangle.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Right
    path: src/System.Drawing.Primitives/src/System/Drawing/Rectangle.cs
    startLine: 195
  assemblies:
  - System.Drawing.Primitives
  namespace: System.Drawing
  summary: "\n<p>Gets the x-coordinate that is the sum of <xref href=\"System.Drawing.Rectangle.X\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"System.Drawing.Rectangle.Width\" data-throw-if-not-resolved=\"false\"></xref> property values of this <xref href=\"System.Drawing.Rectangle\" data-throw-if-not-resolved=\"false\"></xref> structure.</p>\n"
  remarks: "\n<p>The value of the <xref href=\"System.Drawing.Rectangle.Right\" data-throw-if-not-resolved=\"false\"></xref> property represents the x-coordinate of the first point at the right edge of the rectangle that is not contained in the rectangle.</p>\n"
  syntax:
    content: public int Right { get; }
    content.vb: Public ReadOnly Property Right As Integer
    parameters: []
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Drawing.Rectangle.Size
  commentId: P:System.Drawing.Rectangle.Size
  id: Size
  parent: System.Drawing.Rectangle
  langs:
  - csharp
  - vb
  name: Size
  fullName: System.Drawing.Rectangle.Size
  type: Property
  source:
    remote:
      path: src/System.Drawing.Primitives/src/System/Drawing/Rectangle.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Size
    path: src/System.Drawing.Primitives/src/System/Drawing/Rectangle.cs
    startLine: 84
  assemblies:
  - System.Drawing.Primitives
  namespace: System.Drawing
  summary: "\n<p>Gets or sets the size of this <xref href=\"System.Drawing.Rectangle\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: public Size Size { get; set; }
    content.vb: Public Property Size As Size
    parameters: []
    return:
      type: System.Drawing.Size
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Drawing.Rectangle.Top
  commentId: P:System.Drawing.Rectangle.Top
  id: Top
  parent: System.Drawing.Rectangle
  langs:
  - csharp
  - vb
  name: Top
  fullName: System.Drawing.Rectangle.Top
  type: Property
  source:
    remote:
      path: src/System.Drawing.Primitives/src/System/Drawing/Rectangle.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Top
    path: src/System.Drawing.Primitives/src/System/Drawing/Rectangle.cs
    startLine: 181
  assemblies:
  - System.Drawing.Primitives
  namespace: System.Drawing
  summary: "\n<p>Gets the y-coordinate of the top edge of this <xref href=\"System.Drawing.Rectangle\" data-throw-if-not-resolved=\"false\"></xref> structure.</p>\n"
  syntax:
    content: public int Top { get; }
    content.vb: Public ReadOnly Property Top As Integer
    parameters: []
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Drawing.Rectangle.Width
  commentId: P:System.Drawing.Rectangle.Width
  id: Width
  parent: System.Drawing.Rectangle
  langs:
  - csharp
  - vb
  name: Width
  fullName: System.Drawing.Rectangle.Width
  type: Property
  source:
    remote:
      path: src/System.Drawing.Primitives/src/System/Drawing/Rectangle.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Width
    path: src/System.Drawing.Primitives/src/System/Drawing/Rectangle.cs
    startLine: 133
  assemblies:
  - System.Drawing.Primitives
  namespace: System.Drawing
  summary: "\n<p>Gets or sets the width of this <xref href=\"System.Drawing.Rectangle\" data-throw-if-not-resolved=\"false\"></xref> structure.</p>\n"
  remarks: "\n<p>Changing the <xref href=\"System.Drawing.Rectangle.Width\" data-throw-if-not-resolved=\"false\"></xref> property will also cause a change in the <xref href=\"System.Drawing.Rectangle.Right\" data-throw-if-not-resolved=\"false\"></xref> property of the <xref href=\"System.Drawing.Rectangle\" data-throw-if-not-resolved=\"false\"></xref>. The units the rectangle is drawn in is determined by the <xref href=\"System.Drawing.Graphics.PageUnit\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"System.Drawing.Graphics.PageScale\" data-throw-if-not-resolved=\"false\"></xref> properties of the graphics object used for drawing. The default unit is pixels.</p>\n"
  syntax:
    content: public int Width { get; set; }
    content.vb: Public Property Width As Integer
    parameters: []
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Drawing.Rectangle.X
  commentId: P:System.Drawing.Rectangle.X
  id: X
  parent: System.Drawing.Rectangle
  langs:
  - csharp
  - vb
  name: X
  fullName: System.Drawing.Rectangle.X
  type: Property
  source:
    remote:
      path: src/System.Drawing.Primitives/src/System/Drawing/Rectangle.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: X
    path: src/System.Drawing.Primitives/src/System/Drawing/Rectangle.cs
    startLine: 101
  assemblies:
  - System.Drawing.Primitives
  namespace: System.Drawing
  summary: "\n<p>Gets or sets the x-coordinate of the upper-left corner of this <xref href=\"System.Drawing.Rectangle\" data-throw-if-not-resolved=\"false\"></xref> structure.</p>\n"
  remarks: "\n<p>Changing the <xref href=\"System.Drawing.Rectangle.X\" data-throw-if-not-resolved=\"false\"></xref> property will also cause a change in the <xref href=\"System.Drawing.Rectangle.Right\" data-throw-if-not-resolved=\"false\"></xref> property of the <xref href=\"System.Drawing.Rectangle\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: public int X { get; set; }
    content.vb: Public Property X As Integer
    parameters: []
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Drawing.Rectangle.Y
  commentId: P:System.Drawing.Rectangle.Y
  id: Y
  parent: System.Drawing.Rectangle
  langs:
  - csharp
  - vb
  name: Y
  fullName: System.Drawing.Rectangle.Y
  type: Property
  source:
    remote:
      path: src/System.Drawing.Primitives/src/System/Drawing/Rectangle.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Y
    path: src/System.Drawing.Primitives/src/System/Drawing/Rectangle.cs
    startLine: 117
  assemblies:
  - System.Drawing.Primitives
  namespace: System.Drawing
  summary: "\n<p>Gets or sets the y-coordinate of the upper-left corner of this <xref href=\"System.Drawing.Rectangle\" data-throw-if-not-resolved=\"false\"></xref> structure.</p>\n"
  remarks: "\n<p>Changing the <xref href=\"System.Drawing.Rectangle.Y\" data-throw-if-not-resolved=\"false\"></xref> property will also cause a change in the <xref href=\"System.Drawing.Rectangle.Bottom\" data-throw-if-not-resolved=\"false\"></xref> property of the <xref href=\"System.Drawing.Rectangle\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: public int Y { get; set; }
    content.vb: Public Property Y As Integer
    parameters: []
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Drawing.Rectangle.Ceiling(System.Drawing.RectangleF)
  commentId: M:System.Drawing.Rectangle.Ceiling(System.Drawing.RectangleF)
  id: Ceiling(System.Drawing.RectangleF)
  parent: System.Drawing.Rectangle
  langs:
  - csharp
  - vb
  name: Ceiling(RectangleF)
  fullName: System.Drawing.Rectangle.Ceiling(System.Drawing.RectangleF)
  type: Method
  source:
    remote:
      path: src/System.Drawing.Primitives/src/System/Drawing/Rectangle.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Ceiling
    path: src/System.Drawing.Primitives/src/System/Drawing/Rectangle.cs
    startLine: 274
  assemblies:
  - System.Drawing.Primitives
  namespace: System.Drawing
  summary: "\n<p>Converts the specified <xref href=\"System.Drawing.RectangleF\" data-throw-if-not-resolved=\"false\"></xref> structure to a <xref href=\"System.Drawing.Rectangle\" data-throw-if-not-resolved=\"false\"></xref> structure by rounding the <xref href=\"System.Drawing.RectangleF\" data-throw-if-not-resolved=\"false\"></xref> values to the next higher integer values.</p>\n"
  syntax:
    content: public static Rectangle Ceiling(RectangleF value)
    content.vb: Public Shared Function Ceiling(value As RectangleF) As Rectangle
    parameters:
    - id: value
      type: System.Drawing.RectangleF
    return:
      type: System.Drawing.Rectangle
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Drawing.Rectangle.Contains(System.Drawing.Point)
  commentId: M:System.Drawing.Rectangle.Contains(System.Drawing.Point)
  id: Contains(System.Drawing.Point)
  parent: System.Drawing.Rectangle
  langs:
  - csharp
  - vb
  name: Contains(Point)
  fullName: System.Drawing.Rectangle.Contains(System.Drawing.Point)
  type: Method
  source:
    remote:
      path: src/System.Drawing.Primitives/src/System/Drawing/Rectangle.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Contains
    path: src/System.Drawing.Primitives/src/System/Drawing/Rectangle.cs
    startLine: 324
  assemblies:
  - System.Drawing.Primitives
  namespace: System.Drawing
  summary: "\n<p>Determines if the specified point is contained within this <xref href=\"System.Drawing.Rectangle\" data-throw-if-not-resolved=\"false\"></xref> structure.</p>\n"
  remarks: "\n<p>The containing rectangle must be normalized for this method to return accurate results.</p>\n"
  syntax:
    content: >-
      [Pure]

      public bool Contains(Point pt)
    content.vb: >-
      <Pure>

      Public Function Contains(pt As Point) As Boolean
    parameters:
    - id: pt
      type: System.Drawing.Point
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Drawing.Rectangle.Contains(System.Drawing.Rectangle)
  commentId: M:System.Drawing.Rectangle.Contains(System.Drawing.Rectangle)
  id: Contains(System.Drawing.Rectangle)
  parent: System.Drawing.Rectangle
  langs:
  - csharp
  - vb
  name: Contains(Rectangle)
  fullName: System.Drawing.Rectangle.Contains(System.Drawing.Rectangle)
  type: Method
  source:
    remote:
      path: src/System.Drawing.Primitives/src/System/Drawing/Rectangle.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Contains
    path: src/System.Drawing.Primitives/src/System/Drawing/Rectangle.cs
    startLine: 337
  assemblies:
  - System.Drawing.Primitives
  namespace: System.Drawing
  summary: "\n<p>Determines if the rectangular region represented by <em>rect</em> is entirely contained within this <xref href=\"System.Drawing.Rectangle\" data-throw-if-not-resolved=\"false\"></xref> structure.</p>\n"
  remarks: "\n<p>The containing rectangle must be normalized for this method to return accurate results.</p>\n"
  example:
  - "\n<p>The following code example demonstrates the <xref href=\"System.Drawing.Rectangle.Contains(System.Drawing.Rectangle)\" data-throw-if-not-resolved=\"false\"></xref> method and the <xref href=\"System.Drawing.SystemPens\" data-throw-if-not-resolved=\"false\"></xref> class. This example is designed for use with a Windows Form. Paste this code into a form that contains a button named <code>Button1</code>, call <code>DrawFirstRectangle</code> from the form's constructor or <xref href=\"System.Windows.Forms.Form.Load\" data-throw-if-not-resolved=\"false\"></xref> method, and associate the <code>Button1_Click</code> method with the button's <xref href=\"System.Windows.Forms.Control.Click\" data-throw-if-not-resolved=\"false\"></xref> event.</p>System.Drawing.RectanglesAndPoints#3"
  syntax:
    content: >-
      [Pure]

      public bool Contains(Rectangle rect)
    content.vb: >-
      <Pure>

      Public Function Contains(rect As Rectangle) As Boolean
    parameters:
    - id: rect
      type: System.Drawing.Rectangle
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Drawing.Rectangle.Contains(System.Int32,System.Int32)
  commentId: M:System.Drawing.Rectangle.Contains(System.Int32,System.Int32)
  id: Contains(System.Int32,System.Int32)
  parent: System.Drawing.Rectangle
  langs:
  - csharp
  - vb
  name: Contains(Int32, Int32)
  fullName: System.Drawing.Rectangle.Contains(System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Drawing.Primitives/src/System/Drawing/Rectangle.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Contains
    path: src/System.Drawing.Primitives/src/System/Drawing/Rectangle.cs
    startLine: 312
  assemblies:
  - System.Drawing.Primitives
  namespace: System.Drawing
  summary: "\n<p>Determines if the specified point is contained within this <xref href=\"System.Drawing.Rectangle\" data-throw-if-not-resolved=\"false\"></xref> structure.</p>\n"
  remarks: "\n<p>The containing rectangle must be normalized for this method to return accurate results.</p>\n"
  syntax:
    content: >-
      [Pure]

      public bool Contains(int x, int y)
    content.vb: >-
      <Pure>

      Public Function Contains(x As Integer, y As Integer) As Boolean
    parameters:
    - id: x
      type: System.Int32
    - id: y
      type: System.Int32
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Drawing.Rectangle.Equals(System.Object)
  commentId: M:System.Drawing.Rectangle.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Drawing.Rectangle
  langs:
  - csharp
  - vb
  name: Equals(Object)
  fullName: System.Drawing.Rectangle.Equals(System.Object)
  type: Method
  source:
    remote:
      path: src/System.Drawing.Primitives/src/System/Drawing/Rectangle.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Equals
    path: src/System.Drawing.Primitives/src/System/Drawing/Rectangle.cs
    startLine: 237
  assemblies:
  - System.Drawing.Primitives
  namespace: System.Drawing
  summary: "\n<p>Tests whether <em>obj</em> is a <xref href=\"System.Drawing.Rectangle\" data-throw-if-not-resolved=\"false\"></xref> structure with the same location and size of this <xref href=\"System.Drawing.Rectangle\" data-throw-if-not-resolved=\"false\"></xref> structure.</p>\n"
  syntax:
    content: public override bool Equals(object obj)
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
    parameters:
    - id: obj
      type: System.Object
    return:
      type: System.Boolean
  overridden: System.ValueType.Equals(System.Object)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Drawing.Rectangle.FromLTRB(System.Int32,System.Int32,System.Int32,System.Int32)
  commentId: M:System.Drawing.Rectangle.FromLTRB(System.Int32,System.Int32,System.Int32,System.Int32)
  id: FromLTRB(System.Int32,System.Int32,System.Int32,System.Int32)
  parent: System.Drawing.Rectangle
  langs:
  - csharp
  - vb
  name: FromLTRB(Int32, Int32, Int32, Int32)
  fullName: System.Drawing.Rectangle.FromLTRB(System.Int32, System.Int32, System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Drawing.Primitives/src/System/Drawing/Rectangle.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: FromLTRB
    path: src/System.Drawing.Primitives/src/System/Drawing/Rectangle.cs
    startLine: 54
  assemblies:
  - System.Drawing.Primitives
  namespace: System.Drawing
  summary: "\n<p>Creates a <xref href=\"System.Drawing.Rectangle\" data-throw-if-not-resolved=\"false\"></xref> structure with the specified edge locations.</p>\n"
  remarks: "\n<p>This method creates a <xref href=\"System.Drawing.Rectangle\" data-throw-if-not-resolved=\"false\"></xref> with the specified upper-left and lower-right corners.</p>\n"
  example:
  - "\n<p>The following code example demonstrates how to create a rectangle using the <xref href=\"System.Drawing.Rectangle.FromLTRB(System.Int32,System.Int32,System.Int32,System.Int32)\" data-throw-if-not-resolved=\"false\"></xref> method. This example is designed to be used with a Windows Form. Paste this code into a form and call the <code>CreateARectangleFromLTRB</code> method when handling the form's <xref href=\"System.Windows.Forms.Control.Paint\" data-throw-if-not-resolved=\"false\"></xref> event, passing <em>e</em> as <xref href=\"System.Windows.Forms.PaintEventArgs\" data-throw-if-not-resolved=\"false\"></xref>.</p>System.Drawing.RectanglesAndPoints#7"
  syntax:
    content: public static Rectangle FromLTRB(int left, int top, int right, int bottom)
    content.vb: Public Shared Function FromLTRB(left As Integer, top As Integer, right As Integer, bottom As Integer) As Rectangle
    parameters:
    - id: left
      type: System.Int32
    - id: top
      type: System.Int32
    - id: right
      type: System.Int32
    - id: bottom
      type: System.Int32
    return:
      type: System.Drawing.Rectangle
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Drawing.Rectangle.GetHashCode
  commentId: M:System.Drawing.Rectangle.GetHashCode
  id: GetHashCode
  parent: System.Drawing.Rectangle
  langs:
  - csharp
  - vb
  name: GetHashCode()
  fullName: System.Drawing.Rectangle.GetHashCode()
  type: Method
  source:
    remote:
      path: src/System.Drawing.Primitives/src/System/Drawing/Rectangle.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetHashCode
    path: src/System.Drawing.Primitives/src/System/Drawing/Rectangle.cs
    startLine: 344
  assemblies:
  - System.Drawing.Primitives
  namespace: System.Drawing
  summary: "\n<p>Returns the hash code for this <xref href=\"System.Drawing.Rectangle\" data-throw-if-not-resolved=\"false\"></xref> structure. For information about the use of hash codes, see <xref href=\"System.Object.GetHashCode\" data-throw-if-not-resolved=\"false\"></xref> .</p>\n"
  syntax:
    content: public override int GetHashCode()
    content.vb: Public Overrides Function GetHashCode As Integer
    return:
      type: System.Int32
  overridden: System.ValueType.GetHashCode
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Drawing.Rectangle.Inflate(System.Drawing.Rectangle,System.Int32,System.Int32)
  commentId: M:System.Drawing.Rectangle.Inflate(System.Drawing.Rectangle,System.Int32,System.Int32)
  id: Inflate(System.Drawing.Rectangle,System.Int32,System.Int32)
  parent: System.Drawing.Rectangle
  langs:
  - csharp
  - vb
  name: Inflate(Rectangle, Int32, Int32)
  fullName: System.Drawing.Rectangle.Inflate(System.Drawing.Rectangle, System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Drawing.Primitives/src/System/Drawing/Rectangle.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Inflate
    path: src/System.Drawing.Primitives/src/System/Drawing/Rectangle.cs
    startLine: 378
  assemblies:
  - System.Drawing.Primitives
  namespace: System.Drawing
  summary: "\n<p>Creates and returns an enlarged copy of the specified <xref href=\"System.Drawing.Rectangle\" data-throw-if-not-resolved=\"false\"></xref> structure. The copy is enlarged by the specified amount. The original <xref href=\"System.Drawing.Rectangle\" data-throw-if-not-resolved=\"false\"></xref> structure remains unmodified.</p>\n"
  remarks: "\n<p>This method makes a copy of <em>rect</em>, enlarges the copy, and then returns the enlarged copy. The rectangle is enlarged in both directions along an axis. For example, if a 50 by 50 rectangle is enlarged by 50 in the x-axis, the resultant rectangle will be 150 units long (the original 50, the 50 in the minus direction, and the 50 in the plus direction) maintaining the rectangle's geometric center.</p>\n"
  example:
  - "\n<p>The following example is designed for use with Windows Forms, and it requires <xref href=\"System.Windows.Forms.PaintEventArgs\" data-throw-if-not-resolved=\"false\"></xref><em>e</em>, which is a parameter of the <xref href=\"System.Windows.Forms.Control.Paint\" data-throw-if-not-resolved=\"false\"></xref> event handler. The code creates a <xref href=\"System.Drawing.Rectangle\" data-throw-if-not-resolved=\"false\"></xref> and enlarges it by 50 units in both axes. Notice that the resulting rectangle (red) is 150 units in both axes.</p>System.Drawing.ClassicRectangleExamples#1"
  syntax:
    content: public static Rectangle Inflate(Rectangle rect, int x, int y)
    content.vb: Public Shared Function Inflate(rect As Rectangle, x As Integer, y As Integer) As Rectangle
    parameters:
    - id: rect
      type: System.Drawing.Rectangle
    - id: x
      type: System.Int32
    - id: y
      type: System.Int32
    return:
      type: System.Drawing.Rectangle
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Drawing.Rectangle.Inflate(System.Drawing.Size)
  commentId: M:System.Drawing.Rectangle.Inflate(System.Drawing.Size)
  id: Inflate(System.Drawing.Size)
  parent: System.Drawing.Rectangle
  langs:
  - csharp
  - vb
  name: Inflate(Size)
  fullName: System.Drawing.Rectangle.Inflate(System.Drawing.Size)
  type: Method
  source:
    remote:
      path: src/System.Drawing.Primitives/src/System/Drawing/Rectangle.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Inflate
    path: src/System.Drawing.Primitives/src/System/Drawing/Rectangle.cs
    startLine: 367
  assemblies:
  - System.Drawing.Primitives
  namespace: System.Drawing
  summary: "\n<p>Enlarges this <xref href=\"System.Drawing.Rectangle\" data-throw-if-not-resolved=\"false\"></xref> by the specified amount.</p>\n"
  remarks: "\n<p>This method enlarges this rectangle, not a copy of it. The rectangle is enlarged in both directions along an axis.  For example, if a 50 by 50 rectangle is enlarged by 50 in the x-axis, the resultant rectangle will be 150 units long (the original 50, the 50 in the minus direction, and the 50 in the plus direction) maintaining the rectangle's geometric center.</p>\n"
  example:
  - "\n<p>The following example is designed for use with Windows Forms, and it requires <xref href=\"System.Windows.Forms.PaintEventArgs\" data-throw-if-not-resolved=\"false\"></xref><em>e</em>, which is a parameter of the <xref href=\"System.Windows.Forms.Control.Paint\" data-throw-if-not-resolved=\"false\"></xref> event handler. The code creates a <xref href=\"System.Drawing.Rectangle\" data-throw-if-not-resolved=\"false\"></xref> and enlarges it by 50 units in both axes. The rectangle is drawn to screen before inflation (black) and after inflation (red).</p>System.Drawing.ClassicRectangleExamples#2"
  syntax:
    content: public void Inflate(Size size)
    content.vb: Public Sub Inflate(size As Size)
    parameters:
    - id: size
      type: System.Drawing.Size
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Drawing.Rectangle.Inflate(System.Int32,System.Int32)
  commentId: M:System.Drawing.Rectangle.Inflate(System.Int32,System.Int32)
  id: Inflate(System.Int32,System.Int32)
  parent: System.Drawing.Rectangle
  langs:
  - csharp
  - vb
  name: Inflate(Int32, Int32)
  fullName: System.Drawing.Rectangle.Inflate(System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Drawing.Primitives/src/System/Drawing/Rectangle.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Inflate
    path: src/System.Drawing.Primitives/src/System/Drawing/Rectangle.cs
    startLine: 356
  assemblies:
  - System.Drawing.Primitives
  namespace: System.Drawing
  summary: "\n<p>Enlarges this <xref href=\"System.Drawing.Rectangle\" data-throw-if-not-resolved=\"false\"></xref> by the specified amount.</p>\n"
  remarks: "\n<p>This method enlarges this rectangle, not a copy of it. The rectangle is enlarged in both directions along an axis. For example, if a 50 by 50 rectangle is enlarged by 50 in the x-axis, the resultant rectangle will be 150 units long (the original 50, the 50 in the minus direction, and the 50 in the plus direction) maintaining the rectangle's geometric center.</p>\n<p>If either <em>x</em> or <em>y</em> is negative, the <xref href=\"System.Drawing.Rectangle\" data-throw-if-not-resolved=\"false\"></xref> structure is deflated in the corresponding direction.</p>\n"
  example:
  - "\n<p>The following example creates a <xref href=\"System.Drawing.Rectangle\" data-throw-if-not-resolved=\"false\"></xref> structure and enlarges it by 100 units in the x-axis direction: </p>System.Drawing.ClassicRectangleExamples#3"
  syntax:
    content: public void Inflate(int width, int height)
    content.vb: Public Sub Inflate(width As Integer, height As Integer)
    parameters:
    - id: width
      type: System.Int32
    - id: height
      type: System.Int32
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Drawing.Rectangle.Intersect(System.Drawing.Rectangle)
  commentId: M:System.Drawing.Rectangle.Intersect(System.Drawing.Rectangle)
  id: Intersect(System.Drawing.Rectangle)
  parent: System.Drawing.Rectangle
  langs:
  - csharp
  - vb
  name: Intersect(Rectangle)
  fullName: System.Drawing.Rectangle.Intersect(System.Drawing.Rectangle)
  type: Method
  source:
    remote:
      path: src/System.Drawing.Primitives/src/System/Drawing/Rectangle.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Intersect
    path: src/System.Drawing.Primitives/src/System/Drawing/Rectangle.cs
    startLine: 387
  assemblies:
  - System.Drawing.Primitives
  namespace: System.Drawing
  summary: "\n<p>Replaces this <xref href=\"System.Drawing.Rectangle\" data-throw-if-not-resolved=\"false\"></xref> with the intersection of itself and the specified <xref href=\"System.Drawing.Rectangle\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  example:
  - "\n<p>The following code example demonstrates the <xref href=\"System.Drawing.Rectangle.Intersect(System.Drawing.Rectangle)\" data-throw-if-not-resolved=\"false\"></xref>, <xref href=\"System.Drawing.Rectangle.IsEmpty\" data-throw-if-not-resolved=\"false\"></xref> and the <xref href=\"System.Drawing.Rectangle.IntersectsWith(System.Drawing.Rectangle)\" data-throw-if-not-resolved=\"false\"></xref> members. This example should be used with a Windows Form. Paste this code into a form and call this method when handling the form's <xref href=\"System.Windows.Forms.Control.Paint\" data-throw-if-not-resolved=\"false\"></xref> event, passing <em>e</em> as <xref href=\"System.Windows.Forms.PaintEventArgs\" data-throw-if-not-resolved=\"false\"></xref>.</p>System.Drawing.RectanglesAndPoints#2"
  syntax:
    content: public void Intersect(Rectangle rect)
    content.vb: Public Sub Intersect(rect As Rectangle)
    parameters:
    - id: rect
      type: System.Drawing.Rectangle
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Drawing.Rectangle.Intersect(System.Drawing.Rectangle,System.Drawing.Rectangle)
  commentId: M:System.Drawing.Rectangle.Intersect(System.Drawing.Rectangle,System.Drawing.Rectangle)
  id: Intersect(System.Drawing.Rectangle,System.Drawing.Rectangle)
  parent: System.Drawing.Rectangle
  langs:
  - csharp
  - vb
  name: Intersect(Rectangle, Rectangle)
  fullName: System.Drawing.Rectangle.Intersect(System.Drawing.Rectangle, System.Drawing.Rectangle)
  type: Method
  source:
    remote:
      path: src/System.Drawing.Primitives/src/System/Drawing/Rectangle.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Intersect
    path: src/System.Drawing.Primitives/src/System/Drawing/Rectangle.cs
    startLine: 401
  assemblies:
  - System.Drawing.Primitives
  namespace: System.Drawing
  summary: "\n<p>Returns a third <xref href=\"System.Drawing.Rectangle\" data-throw-if-not-resolved=\"false\"></xref> structure that represents the intersection of two other <xref href=\"System.Drawing.Rectangle\" data-throw-if-not-resolved=\"false\"></xref> structures. If there is no intersection, an empty <xref href=\"System.Drawing.Rectangle\" data-throw-if-not-resolved=\"false\"></xref> is returned.</p>\n"
  example:
  - "\n<p>The following code example demonstrates the <xref href=\"System.Drawing.Rectangle.Intersect(System.Drawing.Rectangle)\" data-throw-if-not-resolved=\"false\"></xref>, <xref href=\"System.Drawing.Rectangle.IsEmpty\" data-throw-if-not-resolved=\"false\"></xref> and the <xref href=\"System.Drawing.Rectangle.IntersectsWith(System.Drawing.Rectangle)\" data-throw-if-not-resolved=\"false\"></xref> members. This example should be used with a Windows Form. Paste this code into a form and call this method when handling the form's <xref href=\"System.Windows.Forms.Control.Paint\" data-throw-if-not-resolved=\"false\"></xref> event, passing <em>e</em> as <xref href=\"System.Windows.Forms.PaintEventArgs\" data-throw-if-not-resolved=\"false\"></xref>.</p>System.Drawing.RectanglesAndPoints#1"
  syntax:
    content: public static Rectangle Intersect(Rectangle a, Rectangle b)
    content.vb: Public Shared Function Intersect(a As Rectangle, b As Rectangle) As Rectangle
    parameters:
    - id: a
      type: System.Drawing.Rectangle
    - id: b
      type: System.Drawing.Rectangle
    return:
      type: System.Drawing.Rectangle
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Drawing.Rectangle.IntersectsWith(System.Drawing.Rectangle)
  commentId: M:System.Drawing.Rectangle.IntersectsWith(System.Drawing.Rectangle)
  id: IntersectsWith(System.Drawing.Rectangle)
  parent: System.Drawing.Rectangle
  langs:
  - csharp
  - vb
  name: IntersectsWith(Rectangle)
  fullName: System.Drawing.Rectangle.IntersectsWith(System.Drawing.Rectangle)
  type: Method
  source:
    remote:
      path: src/System.Drawing.Primitives/src/System/Drawing/Rectangle.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IntersectsWith
    path: src/System.Drawing.Primitives/src/System/Drawing/Rectangle.cs
    startLine: 419
  assemblies:
  - System.Drawing.Primitives
  namespace: System.Drawing
  summary: "\n<p>Determines if this rectangle intersects with <em>rect</em>.</p>\n"
  example:
  - "\n<p>The following code example demonstrates the <xref href=\"System.Drawing.Rectangle.Intersect(System.Drawing.Rectangle)\" data-throw-if-not-resolved=\"false\"></xref>, <xref href=\"System.Drawing.Rectangle.IsEmpty\" data-throw-if-not-resolved=\"false\"></xref> and the <xref href=\"System.Drawing.Rectangle.IntersectsWith(System.Drawing.Rectangle)\" data-throw-if-not-resolved=\"false\"></xref> members. This example should be used with a Windows Form. Paste this code into a form and call this method when handling the form's <xref href=\"System.Windows.Forms.Control.Paint\" data-throw-if-not-resolved=\"false\"></xref> event, passing <em>e</em> as <xref href=\"System.Windows.Forms.PaintEventArgs\" data-throw-if-not-resolved=\"false\"></xref>.</p>System.Drawing.RectanglesAndPoints#2"
  syntax:
    content: >-
      [Pure]

      public bool IntersectsWith(Rectangle rect)
    content.vb: >-
      <Pure>

      Public Function IntersectsWith(rect As Rectangle) As Boolean
    parameters:
    - id: rect
      type: System.Drawing.Rectangle
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Drawing.Rectangle.Offset(System.Drawing.Point)
  commentId: M:System.Drawing.Rectangle.Offset(System.Drawing.Point)
  id: Offset(System.Drawing.Point)
  parent: System.Drawing.Rectangle
  langs:
  - csharp
  - vb
  name: Offset(Point)
  fullName: System.Drawing.Rectangle.Offset(System.Drawing.Point)
  type: Method
  source:
    remote:
      path: src/System.Drawing.Primitives/src/System/Drawing/Rectangle.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Offset
    path: src/System.Drawing.Primitives/src/System/Drawing/Rectangle.cs
    startLine: 448
  assemblies:
  - System.Drawing.Primitives
  namespace: System.Drawing
  summary: "\n<p>Adjusts the location of this rectangle by the specified amount.</p>\n"
  remarks: "\n<p>This method adjusts the location of the upper-left corner horizontally by the x-coordinate of the specified point, and vertically by the y-coordinate of the specified point.</p>\n"
  example:
  - "\n<p>The following code example demonstrates the <xref href=\"System.Drawing.Rectangle.Contains(System.Drawing.Rectangle)\" data-throw-if-not-resolved=\"false\"></xref>, and <xref href=\"System.Drawing.Rectangle.Offset(System.Int32,System.Int32)\" data-throw-if-not-resolved=\"false\"></xref> methods and the <xref href=\"System.Drawing.SystemPens\" data-throw-if-not-resolved=\"false\"></xref> class. This example is designed for use with a Windows Form. Paste this code into a form that contains a button named <code>Button1</code>, call <code>DrawFirstRectangle</code> from the form's constructor or <xref href=\"System.Windows.Forms.Form.Load\" data-throw-if-not-resolved=\"false\"></xref> method, and associate the <code>Button1_Click</code> method with the button's <xref href=\"System.Windows.Forms.Control.Click\" data-throw-if-not-resolved=\"false\"></xref> event.</p>System.Drawing.RectanglesAndPoints#3"
  syntax:
    content: public void Offset(Point pos)
    content.vb: Public Sub Offset(pos As Point)
    parameters:
    - id: pos
      type: System.Drawing.Point
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Drawing.Rectangle.Offset(System.Int32,System.Int32)
  commentId: M:System.Drawing.Rectangle.Offset(System.Int32,System.Int32)
  id: Offset(System.Int32,System.Int32)
  parent: System.Drawing.Rectangle
  langs:
  - csharp
  - vb
  name: Offset(Int32, Int32)
  fullName: System.Drawing.Rectangle.Offset(System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Drawing.Primitives/src/System/Drawing/Rectangle.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Offset
    path: src/System.Drawing.Primitives/src/System/Drawing/Rectangle.cs
    startLine: 456
  assemblies:
  - System.Drawing.Primitives
  namespace: System.Drawing
  summary: "\n<p>Adjusts the location of this rectangle by the specified amount.</p>\n"
  syntax:
    content: public void Offset(int x, int y)
    content.vb: Public Sub Offset(x As Integer, y As Integer)
    parameters:
    - id: x
      type: System.Int32
    - id: y
      type: System.Int32
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Drawing.Rectangle.op_Equality(System.Drawing.Rectangle,System.Drawing.Rectangle)
  commentId: M:System.Drawing.Rectangle.op_Equality(System.Drawing.Rectangle,System.Drawing.Rectangle)
  id: op_Equality(System.Drawing.Rectangle,System.Drawing.Rectangle)
  parent: System.Drawing.Rectangle
  langs:
  - csharp
  - vb
  name: Equality(Rectangle, Rectangle)
  fullName: System.Drawing.Rectangle.Equality(System.Drawing.Rectangle, System.Drawing.Rectangle)
  type: Operator
  source:
    remote:
      path: src/System.Drawing.Primitives/src/System/Drawing/Rectangle.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_Equality
    path: src/System.Drawing.Primitives/src/System/Drawing/Rectangle.cs
    startLine: 253
  assemblies:
  - System.Drawing.Primitives
  namespace: System.Drawing
  summary: "\n<p>Tests whether two <xref href=\"System.Drawing.Rectangle\" data-throw-if-not-resolved=\"false\"></xref> structures have equal location and size.</p>\n"
  example:
  - 
  syntax:
    content: public static bool operator ==(Rectangle left, Rectangle right)
    content.vb: Public Shared Operator =(left As Rectangle, right As Rectangle) As Boolean
    parameters:
    - id: left
      type: System.Drawing.Rectangle
    - id: right
      type: System.Drawing.Rectangle
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Drawing.Rectangle.op_Inequality(System.Drawing.Rectangle,System.Drawing.Rectangle)
  commentId: M:System.Drawing.Rectangle.op_Inequality(System.Drawing.Rectangle,System.Drawing.Rectangle)
  id: op_Inequality(System.Drawing.Rectangle,System.Drawing.Rectangle)
  parent: System.Drawing.Rectangle
  langs:
  - csharp
  - vb
  name: Inequality(Rectangle, Rectangle)
  fullName: System.Drawing.Rectangle.Inequality(System.Drawing.Rectangle, System.Drawing.Rectangle)
  type: Operator
  source:
    remote:
      path: src/System.Drawing.Primitives/src/System/Drawing/Rectangle.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_Inequality
    path: src/System.Drawing.Primitives/src/System/Drawing/Rectangle.cs
    startLine: 265
  assemblies:
  - System.Drawing.Primitives
  namespace: System.Drawing
  summary: "\n<p>Tests whether two <xref href=\"System.Drawing.Rectangle\" data-throw-if-not-resolved=\"false\"></xref> structures differ in location or size.</p>\n"
  syntax:
    content: public static bool operator !=(Rectangle left, Rectangle right)
    content.vb: Public Shared Operator <>(left As Rectangle, right As Rectangle) As Boolean
    parameters:
    - id: left
      type: System.Drawing.Rectangle
    - id: right
      type: System.Drawing.Rectangle
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Drawing.Rectangle.Round(System.Drawing.RectangleF)
  commentId: M:System.Drawing.Rectangle.Round(System.Drawing.RectangleF)
  id: Round(System.Drawing.RectangleF)
  parent: System.Drawing.Rectangle
  langs:
  - csharp
  - vb
  name: Round(RectangleF)
  fullName: System.Drawing.Rectangle.Round(System.Drawing.RectangleF)
  type: Method
  source:
    remote:
      path: src/System.Drawing.Primitives/src/System/Drawing/Rectangle.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Round
    path: src/System.Drawing.Primitives/src/System/Drawing/Rectangle.cs
    startLine: 298
  assemblies:
  - System.Drawing.Primitives
  namespace: System.Drawing
  summary: "\n<p>Converts the specified <xref href=\"System.Drawing.RectangleF\" data-throw-if-not-resolved=\"false\"></xref> to a <xref href=\"System.Drawing.Rectangle\" data-throw-if-not-resolved=\"false\"></xref> by rounding the <xref href=\"System.Drawing.RectangleF\" data-throw-if-not-resolved=\"false\"></xref> values to the nearest integer values.</p>\n"
  example:
  - "\n<p>The following code example demonstrates how to use the <xref href=\"System.Drawing.Rectangle.Round(System.Drawing.RectangleF)\" data-throw-if-not-resolved=\"false\"></xref>  and <xref href=\"System.Drawing.Rectangle.Truncate(System.Drawing.RectangleF)\" data-throw-if-not-resolved=\"false\"></xref> methods. This example is designed for use with a Windows Form.  Paste this code into a form and call the <code>RoundingAndTruncatingRectangles</code> method when handling the form's <xref href=\"System.Windows.Forms.Control.Paint\" data-throw-if-not-resolved=\"false\"></xref> event, passing <em>e</em> as <xref href=\"System.Windows.Forms.PaintEventArgs\" data-throw-if-not-resolved=\"false\"></xref>.</p>System.Drawing.RectanglesAndPoints#5"
  syntax:
    content: public static Rectangle Round(RectangleF value)
    content.vb: Public Shared Function Round(value As RectangleF) As Rectangle
    parameters:
    - id: value
      type: System.Drawing.RectangleF
    return:
      type: System.Drawing.Rectangle
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Drawing.Rectangle.ToString
  commentId: M:System.Drawing.Rectangle.ToString
  id: ToString
  parent: System.Drawing.Rectangle
  langs:
  - csharp
  - vb
  name: ToString()
  fullName: System.Drawing.Rectangle.ToString()
  type: Method
  source:
    remote:
      path: src/System.Drawing.Primitives/src/System/Drawing/Rectangle.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ToString
    path: src/System.Drawing.Primitives/src/System/Drawing/Rectangle.cs
    startLine: 468
  assemblies:
  - System.Drawing.Primitives
  namespace: System.Drawing
  summary: "\n<p>Converts the attributes of this <xref href=\"System.Drawing.Rectangle\" data-throw-if-not-resolved=\"false\"></xref> to a human-readable string.</p>\n"
  syntax:
    content: public override string ToString()
    content.vb: Public Overrides Function ToString As String
    return:
      type: System.String
  overridden: System.ValueType.ToString
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Drawing.Rectangle.Truncate(System.Drawing.RectangleF)
  commentId: M:System.Drawing.Rectangle.Truncate(System.Drawing.RectangleF)
  id: Truncate(System.Drawing.RectangleF)
  parent: System.Drawing.Rectangle
  langs:
  - csharp
  - vb
  name: Truncate(RectangleF)
  fullName: System.Drawing.Rectangle.Truncate(System.Drawing.RectangleF)
  type: Method
  source:
    remote:
      path: src/System.Drawing.Primitives/src/System/Drawing/Rectangle.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Truncate
    path: src/System.Drawing.Primitives/src/System/Drawing/Rectangle.cs
    startLine: 286
  assemblies:
  - System.Drawing.Primitives
  namespace: System.Drawing
  summary: "\n<p>Converts the specified <xref href=\"System.Drawing.RectangleF\" data-throw-if-not-resolved=\"false\"></xref> to a <xref href=\"System.Drawing.Rectangle\" data-throw-if-not-resolved=\"false\"></xref> by truncating the <xref href=\"System.Drawing.RectangleF\" data-throw-if-not-resolved=\"false\"></xref> values.</p>\n"
  example:
  - "\n<p>The following code example demonstrates how to use the <xref href=\"System.Drawing.Rectangle.Round(System.Drawing.RectangleF)\" data-throw-if-not-resolved=\"false\"></xref>  and <xref href=\"System.Drawing.Rectangle.Truncate(System.Drawing.RectangleF)\" data-throw-if-not-resolved=\"false\"></xref> methods. This example is designed for use with a Windows Form. Paste this code into a form and call the <code>RoundingAndTruncatingRectangles</code> method when handling the form's <xref href=\"System.Windows.Forms.Control.Paint\" data-throw-if-not-resolved=\"false\"></xref> event, passing <em>e</em> as <xref href=\"System.Windows.Forms.PaintEventArgs\" data-throw-if-not-resolved=\"false\"></xref>.</p>System.Drawing.RectanglesAndPoints#5"
  syntax:
    content: public static Rectangle Truncate(RectangleF value)
    content.vb: Public Shared Function Truncate(value As RectangleF) As Rectangle
    parameters:
    - id: value
      type: System.Drawing.RectangleF
    return:
      type: System.Drawing.Rectangle
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Drawing.Rectangle.Union(System.Drawing.Rectangle,System.Drawing.Rectangle)
  commentId: M:System.Drawing.Rectangle.Union(System.Drawing.Rectangle,System.Drawing.Rectangle)
  id: Union(System.Drawing.Rectangle,System.Drawing.Rectangle)
  parent: System.Drawing.Rectangle
  langs:
  - csharp
  - vb
  name: Union(Rectangle, Rectangle)
  fullName: System.Drawing.Rectangle.Union(System.Drawing.Rectangle, System.Drawing.Rectangle)
  type: Method
  source:
    remote:
      path: src/System.Drawing.Primitives/src/System/Drawing/Rectangle.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Union
    path: src/System.Drawing.Primitives/src/System/Drawing/Rectangle.cs
    startLine: 432
  assemblies:
  - System.Drawing.Primitives
  namespace: System.Drawing
  summary: "\n<p>Gets a <xref href=\"System.Drawing.Rectangle\" data-throw-if-not-resolved=\"false\"></xref> structure that contains the union of two <xref href=\"System.Drawing.Rectangle\" data-throw-if-not-resolved=\"false\"></xref> structures.</p>\n"
  remarks: "\n<p>When one of the two rectangles is empty, meaning all of its values are zero, the <xref href=\"System.Drawing.Rectangle.Union(System.Drawing.Rectangle,System.Drawing.Rectangle)\" data-throw-if-not-resolved=\"false\"></xref> method returns a rectangle with a starting point of (0, 0), and the height and width of the non-empty rectangle. For example, if you have two rectangles: A = (0, 0; 0, 0) and B = (1, 1; 2, 2), then the union of A and B is (0, 0; 2, 2).</p>\n"
  example:
  - "\n<p>The following code example demonstrates how to use the <xref href=\"System.Drawing.Rectangle.Union(System.Drawing.Rectangle,System.Drawing.Rectangle)\" data-throw-if-not-resolved=\"false\"></xref> method. This example is designed for use with a Windows Form. Paste this code into a form and call the <code>ShowRectangleUnion</code> method when handling the form's <xref href=\"System.Windows.Forms.Control.Paint\" data-throw-if-not-resolved=\"false\"></xref> event, passing <em>e</em> as <xref href=\"System.Windows.Forms.PaintEventArgs\" data-throw-if-not-resolved=\"false\"></xref>.</p>System.Drawing.RectanglesAndPoints#4"
  syntax:
    content: >-
      [Pure]

      public static Rectangle Union(Rectangle a, Rectangle b)
    content.vb: >-
      <Pure>

      Public Shared Function Union(a As Rectangle, b As Rectangle) As Rectangle
    parameters:
    - id: a
      type: System.Drawing.Rectangle
    - id: b
      type: System.Drawing.Rectangle
    return:
      type: System.Drawing.Rectangle
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: System.Drawing
  isExternal: false
  name: System.Drawing
  fullName: System.Drawing
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Drawing.Rectangle
  parent: System.Drawing
  isExternal: false
  name: Rectangle
  fullName: System.Drawing.Rectangle
- uid: System.Drawing.Point
  parent: System.Drawing
  isExternal: false
  name: Point
  fullName: System.Drawing.Point
- uid: System.Drawing.Size
  parent: System.Drawing
  isExternal: false
  name: Size
  fullName: System.Drawing.Size
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  fullName: System.Int32
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  fullName: System.Boolean
- uid: System.Drawing.RectangleF
  parent: System.Drawing
  isExternal: false
  name: RectangleF
  fullName: System.Drawing.RectangleF
- uid: System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  name: Equals(Object)
  fullName: System.ValueType.Equals(System.Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    fullName: System.ValueType.Equals
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    fullName: System.ValueType.Equals
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.ValueType
  parent: System
  isExternal: false
  name: ValueType
  fullName: System.ValueType
- uid: System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: false
  name: GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    fullName: System.ValueType.GetHashCode
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    fullName: System.ValueType.GetHashCode
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.ValueType.ToString
  parent: System.ValueType
  isExternal: false
  name: ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    fullName: System.ValueType.ToString
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    fullName: System.ValueType.ToString
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.String
  parent: System
  isExternal: false
  name: String
  fullName: System.String
