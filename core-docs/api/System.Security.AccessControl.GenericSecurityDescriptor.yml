items:
- uid: System.Security.AccessControl.GenericSecurityDescriptor
  commentId: T:System.Security.AccessControl.GenericSecurityDescriptor
  id: GenericSecurityDescriptor
  parent: System.Security.AccessControl
  children:
  - System.Security.AccessControl.GenericSecurityDescriptor.#ctor
  - System.Security.AccessControl.GenericSecurityDescriptor.BinaryLength
  - System.Security.AccessControl.GenericSecurityDescriptor.ControlFlags
  - System.Security.AccessControl.GenericSecurityDescriptor.GetBinaryForm(System.Byte[],System.Int32)
  - System.Security.AccessControl.GenericSecurityDescriptor.GetSddlForm(System.Security.AccessControl.AccessControlSections)
  - System.Security.AccessControl.GenericSecurityDescriptor.Group
  - System.Security.AccessControl.GenericSecurityDescriptor.IsSddlConversionSupported
  - System.Security.AccessControl.GenericSecurityDescriptor.Owner
  - System.Security.AccessControl.GenericSecurityDescriptor.Revision
  langs:
  - csharp
  - vb
  name: GenericSecurityDescriptor
  fullName: System.Security.AccessControl.GenericSecurityDescriptor
  type: Class
  source:
    remote:
      path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GenericSecurityDescriptor
    path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs
    startLine: 298
  assemblies:
  - System.Security.AccessControl
  namespace: System.Security.AccessControl
  summary: "\n<p>Represents a security descriptor. A security descriptor includes an owner, a primary group, a Discretionary Access Control List (DACL), and a System Access Control List (SACL).</p>\n"
  example:
  - 
  syntax:
    content: 'public abstract class GenericSecurityDescriptor : object'
    content.vb: >-
      Public MustInherit Class GenericSecurityDescriptor
          Inherits Object
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: System.Security.AccessControl.GenericSecurityDescriptor.#ctor
  commentId: M:System.Security.AccessControl.GenericSecurityDescriptor.#ctor
  id: '#ctor'
  parent: System.Security.AccessControl.GenericSecurityDescriptor
  langs:
  - csharp
  - vb
  name: GenericSecurityDescriptor()
  fullName: System.Security.AccessControl.GenericSecurityDescriptor.GenericSecurityDescriptor()
  type: Constructor
  source:
    remote:
      path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs
    startLine: 300
  assemblies:
  - System.Security.AccessControl
  namespace: System.Security.AccessControl
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Security.AccessControl.GenericSecurityDescriptor\" data-throw-if-not-resolved=\"false\"></xref> class.</p>\n"
  example:
  - 
  syntax:
    content: protected GenericSecurityDescriptor()
    content.vb: Protected Sub New
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: System.Security.AccessControl.GenericSecurityDescriptor.BinaryLength
  commentId: P:System.Security.AccessControl.GenericSecurityDescriptor.BinaryLength
  id: BinaryLength
  parent: System.Security.AccessControl.GenericSecurityDescriptor
  langs:
  - csharp
  - vb
  name: BinaryLength
  fullName: System.Security.AccessControl.GenericSecurityDescriptor.BinaryLength
  type: Property
  source:
    remote:
      path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: BinaryLength
    path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs
    startLine: 301
  assemblies:
  - System.Security.AccessControl
  namespace: System.Security.AccessControl
  summary: "\n<p>Gets the length, in bytes, of the binary representation of the current <xref href=\"System.Security.AccessControl.GenericSecurityDescriptor\" data-throw-if-not-resolved=\"false\"></xref> object. This length should be used before marshaling the ACL into a binary array with the <xref href=\"System.Security.AccessControl.GenericSecurityDescriptor.GetBinaryForm(System.Byte[],System.Int32)\" data-throw-if-not-resolved=\"false\"></xref> method.</p>\n"
  example:
  - 
  syntax:
    content: public int BinaryLength { get; }
    content.vb: Public ReadOnly Property BinaryLength As Integer
    parameters: []
    return:
      type: System.Int32
      description: "\n<p>The length, in bytes, of the binary representation of the current <xref href=\"System.Security.AccessControl.GenericSecurityDescriptor\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Security.AccessControl.GenericSecurityDescriptor.ControlFlags
  commentId: P:System.Security.AccessControl.GenericSecurityDescriptor.ControlFlags
  id: ControlFlags
  parent: System.Security.AccessControl.GenericSecurityDescriptor
  langs:
  - csharp
  - vb
  name: ControlFlags
  fullName: System.Security.AccessControl.GenericSecurityDescriptor.ControlFlags
  type: Property
  source:
    remote:
      path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ControlFlags
    path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs
    startLine: 302
  assemblies:
  - System.Security.AccessControl
  namespace: System.Security.AccessControl
  summary: "\n<p>Gets values that specify behavior of the <xref href=\"System.Security.AccessControl.GenericSecurityDescriptor\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  example:
  - 
  syntax:
    content: public abstract ControlFlags ControlFlags { get; }
    content.vb: Public MustOverride ReadOnly Property ControlFlags As ControlFlags
    parameters: []
    return:
      type: System.Security.AccessControl.ControlFlags
      description: "\n<p>One or more values of the <xref href=\"System.Security.AccessControl.ControlFlags\" data-throw-if-not-resolved=\"false\"></xref> enumeration combined with a logical OR operation.</p>\n"
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
- uid: System.Security.AccessControl.GenericSecurityDescriptor.Group
  commentId: P:System.Security.AccessControl.GenericSecurityDescriptor.Group
  id: Group
  parent: System.Security.AccessControl.GenericSecurityDescriptor
  langs:
  - csharp
  - vb
  name: Group
  fullName: System.Security.AccessControl.GenericSecurityDescriptor.Group
  type: Property
  source:
    remote:
      path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Group
    path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs
    startLine: 303
  assemblies:
  - System.Security.AccessControl
  namespace: System.Security.AccessControl
  summary: "\n<p>Gets or sets the primary group for this <xref href=\"System.Security.AccessControl.GenericSecurityDescriptor\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  example:
  - 
  syntax:
    content: public abstract Principal.SecurityIdentifier Group { get; set; }
    content.vb: Public MustOverride Property Group As Principal.SecurityIdentifier
    parameters: []
    return:
      type: System.Security.Principal.SecurityIdentifier
      description: "\n<p>The primary group for this <xref href=\"System.Security.AccessControl.GenericSecurityDescriptor\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  modifiers.csharp:
  - public
  - abstract
  - get
  - set
  modifiers.vb:
  - Public
  - MustOverride
- uid: System.Security.AccessControl.GenericSecurityDescriptor.Owner
  commentId: P:System.Security.AccessControl.GenericSecurityDescriptor.Owner
  id: Owner
  parent: System.Security.AccessControl.GenericSecurityDescriptor
  langs:
  - csharp
  - vb
  name: Owner
  fullName: System.Security.AccessControl.GenericSecurityDescriptor.Owner
  type: Property
  source:
    remote:
      path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Owner
    path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs
    startLine: 304
  assemblies:
  - System.Security.AccessControl
  namespace: System.Security.AccessControl
  summary: "\n<p>Gets or sets the owner of the object associated with this <xref href=\"System.Security.AccessControl.GenericSecurityDescriptor\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  example:
  - 
  syntax:
    content: public abstract Principal.SecurityIdentifier Owner { get; set; }
    content.vb: Public MustOverride Property Owner As Principal.SecurityIdentifier
    parameters: []
    return:
      type: System.Security.Principal.SecurityIdentifier
      description: "\n<p>The owner of the object associated with this <xref href=\"System.Security.AccessControl.GenericSecurityDescriptor\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  modifiers.csharp:
  - public
  - abstract
  - get
  - set
  modifiers.vb:
  - Public
  - MustOverride
- uid: System.Security.AccessControl.GenericSecurityDescriptor.Revision
  commentId: P:System.Security.AccessControl.GenericSecurityDescriptor.Revision
  id: Revision
  parent: System.Security.AccessControl.GenericSecurityDescriptor
  langs:
  - csharp
  - vb
  name: Revision
  fullName: System.Security.AccessControl.GenericSecurityDescriptor.Revision
  type: Property
  source:
    remote:
      path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Revision
    path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs
    startLine: 305
  assemblies:
  - System.Security.AccessControl
  namespace: System.Security.AccessControl
  summary: "\n<p>Gets the revision level of the <xref href=\"System.Security.AccessControl.GenericSecurityDescriptor\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  example:
  - 
  syntax:
    content: public static byte Revision { get; }
    content.vb: Public Shared ReadOnly Property Revision As Byte
    parameters: []
    return:
      type: System.Byte
      description: "\n<p>A byte value that specifies the revision level of the <xref href=\"System.Security.AccessControl.GenericSecurityDescriptor\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: System.Security.AccessControl.GenericSecurityDescriptor.GetBinaryForm(System.Byte[],System.Int32)
  commentId: M:System.Security.AccessControl.GenericSecurityDescriptor.GetBinaryForm(System.Byte[],System.Int32)
  id: GetBinaryForm(System.Byte[],System.Int32)
  parent: System.Security.AccessControl.GenericSecurityDescriptor
  langs:
  - csharp
  - vb
  name: GetBinaryForm(Byte[], Int32)
  fullName: System.Security.AccessControl.GenericSecurityDescriptor.GetBinaryForm(System.Byte[], System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetBinaryForm
    path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs
    startLine: 306
  assemblies:
  - System.Security.AccessControl
  namespace: System.Security.AccessControl
  summary: "\n<p>Returns an array of byte values that represents the information contained in this <xref href=\"System.Security.AccessControl.GenericSecurityDescriptor\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  example:
  - 
  syntax:
    content: public void GetBinaryForm(byte[] binaryForm, int offset)
    content.vb: Public Sub GetBinaryForm(binaryForm As Byte(), offset As Integer)
    parameters:
    - id: binaryForm
      type: System.Byte[]
      description: "\n<p>The byte array into which the contents of the <xref href=\"System.Security.AccessControl.GenericSecurityDescriptor\" data-throw-if-not-resolved=\"false\"></xref> is marshaled.</p>\n"
    - id: offset
      type: System.Int32
      description: "\n<p>The offset at which to start marshaling.</p>\n"
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>\n<em>offset</em> is negative or too high to allow the entire <xref href=\"System.Security.AccessControl.GenericSecurityDescriptor\" data-throw-if-not-resolved=\"false\"></xref> to be copied into <em>array</em>.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Security.AccessControl.GenericSecurityDescriptor.GetBinaryForm(System.Byte(), System.Int32)
  name.vb: GetBinaryForm(Byte(), Int32)
- uid: System.Security.AccessControl.GenericSecurityDescriptor.GetSddlForm(System.Security.AccessControl.AccessControlSections)
  commentId: M:System.Security.AccessControl.GenericSecurityDescriptor.GetSddlForm(System.Security.AccessControl.AccessControlSections)
  id: GetSddlForm(System.Security.AccessControl.AccessControlSections)
  parent: System.Security.AccessControl.GenericSecurityDescriptor
  langs:
  - csharp
  - vb
  name: GetSddlForm(AccessControlSections)
  fullName: System.Security.AccessControl.GenericSecurityDescriptor.GetSddlForm(System.Security.AccessControl.AccessControlSections)
  type: Method
  source:
    remote:
      path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetSddlForm
    path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs
    startLine: 307
  assemblies:
  - System.Security.AccessControl
  namespace: System.Security.AccessControl
  summary: "\n<p>Returns the Security Descriptor Definition Language (SDDL) representation of the specified sections of the security descriptor that this <xref href=\"System.Security.AccessControl.GenericSecurityDescriptor\" data-throw-if-not-resolved=\"false\"></xref> object represents.</p>\n"
  example:
  - 
  syntax:
    content: public string GetSddlForm(AccessControlSections includeSections)
    content.vb: Public Function GetSddlForm(includeSections As AccessControlSections) As String
    parameters:
    - id: includeSections
      type: System.Security.AccessControl.AccessControlSections
      description: "\n<p>Specifies which sections (access rules, audit rules, primary group, owner) of the security descriptor to get.</p>\n"
    return:
      type: System.String
      description: "\n<p>The SDDL representation of the specified sections of the security descriptor associated with this <xref href=\"System.Security.AccessControl.GenericSecurityDescriptor\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Security.AccessControl.GenericSecurityDescriptor.IsSddlConversionSupported
  commentId: M:System.Security.AccessControl.GenericSecurityDescriptor.IsSddlConversionSupported
  id: IsSddlConversionSupported
  parent: System.Security.AccessControl.GenericSecurityDescriptor
  langs:
  - csharp
  - vb
  name: IsSddlConversionSupported()
  fullName: System.Security.AccessControl.GenericSecurityDescriptor.IsSddlConversionSupported()
  type: Method
  source:
    remote:
      path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IsSddlConversionSupported
    path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs
    startLine: 308
  assemblies:
  - System.Security.AccessControl
  namespace: System.Security.AccessControl
  summary: "\n<p>Returns a boolean value that specifies whether the security descriptor associated with this  <xref href=\"System.Security.AccessControl.GenericSecurityDescriptor\" data-throw-if-not-resolved=\"false\"></xref> object can be converted to the Security Descriptor Definition Language (SDDL) format.</p>\n"
  example:
  - 
  syntax:
    content: public static bool IsSddlConversionSupported()
    content.vb: Public Shared Function IsSddlConversionSupported As Boolean
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if the security descriptor associated with this  <xref href=\"System.Security.AccessControl.GenericSecurityDescriptor\" data-throw-if-not-resolved=\"false\"></xref> object can be converted to the Security Descriptor Definition Language (SDDL) format; otherwise, <strong>false</strong>.</p>\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: System.Security.AccessControl
  isExternal: false
  name: System.Security.AccessControl
  fullName: System.Security.AccessControl
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  fullName: System.Int32
- uid: System.Security.AccessControl.ControlFlags
  parent: System.Security.AccessControl
  isExternal: false
  name: ControlFlags
  fullName: System.Security.AccessControl.ControlFlags
- uid: System.Security.Principal.SecurityIdentifier
  parent: System.Security.Principal
  isExternal: false
  name: SecurityIdentifier
  fullName: System.Security.Principal.SecurityIdentifier
- uid: System.Security.Principal
  isExternal: false
  name: System.Security.Principal
  fullName: System.Security.Principal
- uid: System.Byte
  parent: System
  isExternal: false
  name: Byte
  fullName: System.Byte
- uid: System.Byte[]
  isExternal: false
  name: Byte[]
  fullName: System.Byte[]
  fullname.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
  - name: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
  - name: ()
    fullName: ()
- uid: System.Security.AccessControl.AccessControlSections
  parent: System.Security.AccessControl
  isExternal: false
  name: AccessControlSections
  fullName: System.Security.AccessControl.AccessControlSections
- uid: System.String
  parent: System
  isExternal: false
  name: String
  fullName: System.String
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  fullName: System.Boolean
- uid: System.ArgumentOutOfRangeException
  isExternal: false
  name: ArgumentOutOfRangeException
  fullName: System.ArgumentOutOfRangeException
