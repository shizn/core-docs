items:
- uid: System.Runtime.InteropServices.WindowsRuntime.ReadOnlyArrayAttribute
  commentId: T:System.Runtime.InteropServices.WindowsRuntime.ReadOnlyArrayAttribute
  id: ReadOnlyArrayAttribute
  parent: System.Runtime.InteropServices.WindowsRuntime
  children:
  - System.Runtime.InteropServices.WindowsRuntime.ReadOnlyArrayAttribute.#ctor
  langs:
  - csharp
  - vb
  name: ReadOnlyArrayAttribute
  fullName: System.Runtime.InteropServices.WindowsRuntime.ReadOnlyArrayAttribute
  type: Class
  source:
    remote:
      path: src/System.Runtime.InteropServices.WindowsRuntime/ref/System.Runtime.InteropServices.WindowsRuntime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ReadOnlyArrayAttribute
    path: src/System.Runtime.InteropServices.WindowsRuntime/ref/System.Runtime.InteropServices.WindowsRuntime.cs
    startLine: 47
  assemblies:
  - System.Runtime.InteropServices.WindowsRuntime
  namespace: System.Runtime.InteropServices.WindowsRuntime
  summary: "\n<p>When applied to an array parameter in a Windows Runtime component, specifies that the contents of the array that is passed to that parameter are used only for input. The caller expects the array to be unchanged by the call. See the Remarks section for important information about callers that are written using managed code. </p>\n"
  remarks: "\n<p>If an array parameter in your Windows Runtime component is passed by value (<strong>ByVal</strong> in Visual Basic), you must apply one of the following attributes to it: </p>\n<ul><li>\n<p>Apply the <xref href=\"System.Runtime.InteropServices.WindowsRuntime.ReadOnlyArrayAttribute\" data-throw-if-not-resolved=\"false\"></xref> attribute if you intend the contents of the array to be used for input only. </p>\n</li><li>\n<p>Apply the <xref href=\"System.Runtime.InteropServices.WindowsRuntime.WriteOnlyArrayAttribute\" data-throw-if-not-resolved=\"false\"></xref> attribute if you intend the contents of the array to be used for output only (that is, the method sets the contents of the array but does not read them).</p>\n</li></ul>\n<p>Applying both attributes to a parameter causes an error. For more information, including the standard pattern for making changes to an array, see <see href=\"http://go.microsoft.com/fwlink/?LinkId=251026\">Passing arrays to a Windows Runtime component</see> in the Windows Dev Center.</p>\n<p>Parameters that have the <xref href=\"System.Runtime.InteropServices.WindowsRuntime.ReadOnlyArrayAttribute\" data-throw-if-not-resolved=\"false\"></xref>attribute behave differently depending on whether the caller is written in native code or managed code. If the caller is native code (JavaScript or Visual C++ component extensions), the array is copied when the call crosses the application binary interface (ABI) boundary. Elements are converted if necessary. Therefore, any accidental changes the method makes to an input-only array are not visible to the caller. </p>\n<p>If the caller is managed code, the array is not copied. The original array is available to the called method, as it would be in any method call in the .NET Framework. Array contents are mutable in .NET Framework code, so any changes the method makes to the array are visible to the caller. This is important to remember because it affects unit tests written for a Windows Runtime component. If the tests are written in managed code, the contents of an array will appear to be mutable during testing. </p>\n<p>Applying this attribute to a parameter that has the <xref href=\"System.Runtime.InteropServices.InAttribute\" data-throw-if-not-resolved=\"false\"></xref> or <xref href=\"System.Runtime.InteropServices.OutAttribute\" data-throw-if-not-resolved=\"false\"></xref> attribute causes an error when the module is exported. Applying the attribute to an <strong>out</strong> parameter also causes an error. </p>\n"
  syntax:
    content: 'public sealed class ReadOnlyArrayAttribute : Attribute'
    content.vb: >-
      Public NotInheritable Class ReadOnlyArrayAttribute
          Inherits Attribute
  seealso:
  - type: System.Runtime.InteropServices.WindowsRuntime.WriteOnlyArrayAttribute
    commentId: T:System.Runtime.InteropServices.WindowsRuntime.WriteOnlyArrayAttribute
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: System.Runtime.InteropServices.WindowsRuntime.ReadOnlyArrayAttribute.#ctor
  commentId: M:System.Runtime.InteropServices.WindowsRuntime.ReadOnlyArrayAttribute.#ctor
  id: '#ctor'
  parent: System.Runtime.InteropServices.WindowsRuntime.ReadOnlyArrayAttribute
  langs:
  - csharp
  - vb
  name: ReadOnlyArrayAttribute()
  fullName: System.Runtime.InteropServices.WindowsRuntime.ReadOnlyArrayAttribute.ReadOnlyArrayAttribute()
  type: Constructor
  source:
    remote:
      path: src/System.Runtime.InteropServices.WindowsRuntime/ref/System.Runtime.InteropServices.WindowsRuntime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Runtime.InteropServices.WindowsRuntime/ref/System.Runtime.InteropServices.WindowsRuntime.cs
    startLine: 50
  assemblies:
  - System.Runtime.InteropServices.WindowsRuntime
  namespace: System.Runtime.InteropServices.WindowsRuntime
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Runtime.InteropServices.WindowsRuntime.ReadOnlyArrayAttribute\" data-throw-if-not-resolved=\"false\"></xref> class. </p>\n"
  syntax:
    content: public ReadOnlyArrayAttribute()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: System.Runtime.InteropServices.WindowsRuntime
  isExternal: false
  name: System.Runtime.InteropServices.WindowsRuntime
  fullName: System.Runtime.InteropServices.WindowsRuntime
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System
  isExternal: false
  name: System
  fullName: System
