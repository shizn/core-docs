items:
- uid: System.Xml.Serialization.XmlArrayItemAttribute
  commentId: T:System.Xml.Serialization.XmlArrayItemAttribute
  id: XmlArrayItemAttribute
  parent: System.Xml.Serialization
  children:
  - System.Xml.Serialization.XmlArrayItemAttribute.#ctor
  - System.Xml.Serialization.XmlArrayItemAttribute.#ctor(System.String)
  - System.Xml.Serialization.XmlArrayItemAttribute.#ctor(System.String,System.Type)
  - System.Xml.Serialization.XmlArrayItemAttribute.#ctor(System.Type)
  - System.Xml.Serialization.XmlArrayItemAttribute.DataType
  - System.Xml.Serialization.XmlArrayItemAttribute.ElementName
  - System.Xml.Serialization.XmlArrayItemAttribute.Form
  - System.Xml.Serialization.XmlArrayItemAttribute.IsNullable
  - System.Xml.Serialization.XmlArrayItemAttribute.Namespace
  - System.Xml.Serialization.XmlArrayItemAttribute.NestingLevel
  - System.Xml.Serialization.XmlArrayItemAttribute.Type
  langs:
  - csharp
  - vb
  name: XmlArrayItemAttribute
  fullName: System.Xml.Serialization.XmlArrayItemAttribute
  type: Class
  source:
    remote:
      path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: XmlArrayItemAttribute
    path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.cs
    startLine: 47
  assemblies:
  - System.Xml.XmlSerializer
  namespace: System.Xml.Serialization
  summary: "\n<p>Represents an attribute that specifies the derived types that the <xref href=\"System.Xml.Serialization.XmlSerializer\" data-throw-if-not-resolved=\"false\"></xref> can place in a serialized array.</p>\n"
  remarks: "\n<p>The <xref href=\"System.Xml.Serialization.XmlArrayItemAttribute\" data-throw-if-not-resolved=\"false\"></xref> belongs to a family of attributes that controls how the <xref href=\"System.Xml.Serialization.XmlSerializer\" data-throw-if-not-resolved=\"false\"></xref> serializes or deserializes an object. For a complete list of similar attributes, see Attributes That Control XML Serialization.</p>\n<p>You can apply the <xref href=\"System.Xml.Serialization.XmlArrayItemAttribute\" data-throw-if-not-resolved=\"false\"></xref> to any public read/write member that returns an array, or provides access to one. For example, a field that returns an array of objects, a collection, an <xref href=\"System.Collections.ArrayList\" data-throw-if-not-resolved=\"false\"></xref>, or any class that implements the <xref href=\"System.Collections.IEnumerable\" data-throw-if-not-resolved=\"false\"></xref> interface.</p>\n<p>The <xref href=\"System.Xml.Serialization.XmlArrayItemAttribute\" data-throw-if-not-resolved=\"false\"></xref> supports polymorphism--in other words, it allows the <xref href=\"System.Xml.Serialization.XmlSerializer\" data-throw-if-not-resolved=\"false\"></xref> to add derived objects to an array. For example, suppose a class named <strong>Mammal</strong> is derived from a base class named <strong>Animal</strong>. Further suppose that a class named <strong>MyAnimals</strong> contains a field that returns an array of <strong>Animal</strong> objects. To allow the <xref href=\"System.Xml.Serialization.XmlSerializer\" data-throw-if-not-resolved=\"false\"></xref> to serialize both the <strong>Animal</strong> and <strong>Mammal</strong> type, apply the <xref href=\"System.Xml.Serialization.XmlArrayItemAttribute\" data-throw-if-not-resolved=\"false\"></xref> to the field twice, each time specifying one of the two acceptable types.</p>\n<p>You can apply multiple instances of the <xref href=\"System.Xml.Serialization.XmlArrayItemAttribute\" data-throw-if-not-resolved=\"false\"></xref> or <xref href=\"System.Xml.Serialization.XmlElementAttribute\" data-throw-if-not-resolved=\"false\"></xref> to specify types of objects that can be inserted into the array.</p>\n<p>The serialization of a field or property that returns an interface or array of interfaces is not supported.</p>\n<p>For more information about using attributes, see Extending Metadata Using Attributes.</p>\n<p>You can use the word <strong>XmlArrayItem</strong> in your code instead of the longer <xref href=\"System.Xml.Serialization.XmlArrayItemAttribute\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  example:
  - "\n<p>The following example serializes a class named <strong>Group</strong> that contains a field named <strong>Employees</strong> that returns an array of <strong>Employee</strong> objects. The example applies the <xref href=\"System.Xml.Serialization.XmlArrayItemAttribute\" data-throw-if-not-resolved=\"false\"></xref> to the field, thereby instructing the <xref href=\"System.Xml.Serialization.XmlSerializer\" data-throw-if-not-resolved=\"false\"></xref> that it can insert objects of both the base class (<strong>Employee</strong>) type and derived class type (<strong>Manager</strong>) into the serialized array.</p>Classic XmlArrayItemAttribute Example#1"
  syntax:
    content: >-
      [AttributeUsage(AttributeTargets.Property | AttributeTargets.Field | AttributeTargets.Parameter | AttributeTargets.ReturnValue, AllowMultiple = true)]

      public class XmlArrayItemAttribute : Attribute, _Attribute
    content.vb: >-
      <AttributeUsage(AttributeTargets.Property Or AttributeTargets.Field Or AttributeTargets.Parameter Or AttributeTargets.ReturnValue, AllowMultiple:=True)>

      Public Class XmlArrayItemAttribute
          Inherits Attribute
          Implements _Attribute
  seealso:
  - type: System.Xml.Serialization.XmlArrayAttribute
    commentId: T:System.Xml.Serialization.XmlArrayAttribute
  - type: System.Xml.Serialization.XmlSerializer
    commentId: T:System.Xml.Serialization.XmlSerializer
  - type: System.Xml.Serialization.XmlAttributes.XmlArrayItems
    commentId: P:System.Xml.Serialization.XmlAttributes.XmlArrayItems
  - type: System.Xml.Serialization.XmlAttributeOverrides
    commentId: T:System.Xml.Serialization.XmlAttributeOverrides
  - type: System.Xml.Serialization.XmlAttributes
    commentId: T:System.Xml.Serialization.XmlAttributes
  - type: System.Xml.Serialization.XmlAttributes
    commentId: T:System.Xml.Serialization.XmlAttributes
  inheritance:
  - System.Object
  - System.Attribute
  implements:
  - System.Runtime.InteropServices._Attribute
  inheritedMembers:
  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)
  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)
  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo)
  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)
  - System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type)
  - System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)
  - System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)
  - System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)
  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo)
  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type)
  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type,System.Boolean)
  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Boolean)
  - System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type)
  - System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type,System.Boolean)
  - System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type)
  - System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type,System.Boolean)
  - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type)
  - System.Attribute.GetCustomAttributes(System.Reflection.Module)
  - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Boolean)
  - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type,System.Boolean)
  - System.Attribute.IsDefined(System.Reflection.Module,System.Type)
  - System.Attribute.IsDefined(System.Reflection.Module,System.Type,System.Boolean)
  - System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type)
  - System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type,System.Boolean)
  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type)
  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type,System.Boolean)
  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly)
  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Boolean)
  - System.Attribute.IsDefined(System.Reflection.Assembly,System.Type)
  - System.Attribute.IsDefined(System.Reflection.Assembly,System.Type,System.Boolean)
  - System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type)
  - System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type,System.Boolean)
  - System.Attribute.Equals(System.Object)
  - System.Attribute.GetHashCode
  - System.Attribute.Match(System.Object)
  - System.Attribute.IsDefaultAttribute
  - System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)
  - System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)
  - System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)
  - System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
  - System.Attribute.TypeId
  - System.Object.ToString
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  attributes:
  - type: System.AttributeUsageAttribute
    ctor: System.AttributeUsageAttribute.#ctor(System.AttributeTargets)
    arguments:
    - type: System.AttributeTargets
      value: 10624
    namedArguments:
    - name: AllowMultiple
      type: System.Boolean
      value: true
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: System.Xml.Serialization.XmlArrayItemAttribute.#ctor
  commentId: M:System.Xml.Serialization.XmlArrayItemAttribute.#ctor
  id: '#ctor'
  parent: System.Xml.Serialization.XmlArrayItemAttribute
  langs:
  - csharp
  - vb
  name: XmlArrayItemAttribute()
  fullName: System.Xml.Serialization.XmlArrayItemAttribute.XmlArrayItemAttribute()
  type: Constructor
  source:
    remote:
      path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.cs
    startLine: 50
  assemblies:
  - System.Xml.XmlSerializer
  namespace: System.Xml.Serialization
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Xml.Serialization.XmlArrayItemAttribute\" data-throw-if-not-resolved=\"false\"></xref> class.</p>\n"
  example:
  - "\n<p>The following example serializes a class named <strong>Transportation</strong> that contains a field named <strong>MyVehicles</strong> that returns an array of <strong>Vehicle</strong> objects. The example applies the <xref href=\"System.Xml.Serialization.XmlArrayItemAttribute\" data-throw-if-not-resolved=\"false\"></xref> to the field, allowing the <xref href=\"System.Xml.Serialization.XmlSerializer\" data-throw-if-not-resolved=\"false\"></xref> to insert instances of the <strong>Car</strong> class, which is derived from the <strong>Vehicle</strong> class, into the array.</p>Classic XmlArrayItemAttribute.XmlArrayItemAttribute Example#1"
  syntax:
    content: public XmlArrayItemAttribute()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Xml.Serialization.XmlArrayItemAttribute.#ctor(System.String)
  commentId: M:System.Xml.Serialization.XmlArrayItemAttribute.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Xml.Serialization.XmlArrayItemAttribute
  langs:
  - csharp
  - vb
  name: XmlArrayItemAttribute(String)
  fullName: System.Xml.Serialization.XmlArrayItemAttribute.XmlArrayItemAttribute(System.String)
  type: Constructor
  source:
    remote:
      path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.cs
    startLine: 51
  assemblies:
  - System.Xml.XmlSerializer
  namespace: System.Xml.Serialization
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Xml.Serialization.XmlArrayItemAttribute\" data-throw-if-not-resolved=\"false\"></xref> class and specifies the name of the XML element generated in the XML document.</p>\n"
  remarks: "\n<p>This overload sets the <xref href=\"System.Xml.Serialization.XmlArrayItemAttribute.ElementName\" data-throw-if-not-resolved=\"false\"></xref> property.</p>\n<p>Use this overload if you want the name of the generated XML element to differ from the member's identifier.</p>\n<p>An XML document that includes namespaces can contain more than one version of an element name. For details, see the <xref href=\"System.Xml.Serialization.XmlArrayItemAttribute.ElementName\" data-throw-if-not-resolved=\"false\"></xref> property.</p>\n"
  example:
  - "\n<p>The following example serializes a class named <strong>Transportation</strong> that contains a field named <strong>MyVehicles</strong> that returns an array of <strong>Vehicle</strong> objects. The example applies the <xref href=\"System.Xml.Serialization.XmlArrayItemAttribute\" data-throw-if-not-resolved=\"false\"></xref> to the field, allowing the <xref href=\"System.Xml.Serialization.XmlSerializer\" data-throw-if-not-resolved=\"false\"></xref> to insert instances of the <strong>Car</strong> class, which is derived from the <strong>Vehicle</strong> class, into the array. While applying the attribute, the example sets the <xref href=\"System.Xml.Serialization.XmlArrayItemAttribute.ElementName\" data-throw-if-not-resolved=\"false\"></xref> property using the <em>elementName</em> parameter.</p>Classic XmlArrayItemAttribute.XmlArrayItemAttribute1 Example#1"
  syntax:
    content: public XmlArrayItemAttribute(string elementName)
    content.vb: Public Sub New(elementName As String)
    parameters:
    - id: elementName
      type: System.String
      description: "\n<p>The name of the XML element. </p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Xml.Serialization.XmlArrayItemAttribute.#ctor(System.String,System.Type)
  commentId: M:System.Xml.Serialization.XmlArrayItemAttribute.#ctor(System.String,System.Type)
  id: '#ctor(System.String,System.Type)'
  parent: System.Xml.Serialization.XmlArrayItemAttribute
  langs:
  - csharp
  - vb
  name: XmlArrayItemAttribute(String, Type)
  fullName: System.Xml.Serialization.XmlArrayItemAttribute.XmlArrayItemAttribute(System.String, System.Type)
  type: Constructor
  source:
    remote:
      path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.cs
    startLine: 52
  assemblies:
  - System.Xml.XmlSerializer
  namespace: System.Xml.Serialization
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Xml.Serialization.XmlArrayItemAttribute\" data-throw-if-not-resolved=\"false\"></xref> class and specifies the name of the XML element generated in the XML document and the <xref href=\"System.Type\" data-throw-if-not-resolved=\"false\"></xref> that can be inserted into the generated XML document.</p>\n"
  remarks: "\n<p>This overload sets the <xref href=\"System.Xml.Serialization.XmlArrayItemAttribute.ElementName\" data-throw-if-not-resolved=\"false\"></xref> and the <xref href=\"System.Xml.Serialization.XmlArrayItemAttribute.Type\" data-throw-if-not-resolved=\"false\"></xref> properties.</p>\n<p>Use this overload if you want the name of the generated XML element to differ from the member's identifier.</p>\n<p>An XML document that includes namespaces can contain more than one version of an element name. For details, see the <xref href=\"System.Xml.Serialization.XmlArrayItemAttribute.ElementName\" data-throw-if-not-resolved=\"false\"></xref> property.</p>\n"
  example:
  - "\n<p>The following example serializes a class named <strong>Transportation</strong> that contains a field named <strong>MyVehicles</strong> that returns an array of <strong>Vehicle</strong> objects. The example applies the <xref href=\"System.Xml.Serialization.XmlArrayItemAttribute\" data-throw-if-not-resolved=\"false\"></xref> to the field, allowing the <xref href=\"System.Xml.Serialization.XmlSerializer\" data-throw-if-not-resolved=\"false\"></xref> to insert instances of the <strong>Car</strong> class, which is derived from the <strong>Vehicle</strong> class, into the array. While applying the attribute, the example sets the <xref href=\"System.Xml.Serialization.XmlArrayItemAttribute.ElementName\" data-throw-if-not-resolved=\"false\"></xref> property using the <em>elementName</em> parameter, and the <xref href=\"System.Xml.Serialization.XmlArrayItemAttribute.Type\" data-throw-if-not-resolved=\"false\"></xref> property using the <em>type</em> parameter.</p>Classic XmlArrayItemAttribute.XmlArrayItemAttribute3 Example#1"
  syntax:
    content: public XmlArrayItemAttribute(string elementName, Type type)
    content.vb: Public Sub New(elementName As String, type As Type)
    parameters:
    - id: elementName
      type: System.String
      description: "\n<p>The name of the XML element. </p>\n"
    - id: type
      type: System.Type
      description: "\n<p>The <xref href=\"System.Type\" data-throw-if-not-resolved=\"false\"></xref> of the object to serialize. </p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Xml.Serialization.XmlArrayItemAttribute.#ctor(System.Type)
  commentId: M:System.Xml.Serialization.XmlArrayItemAttribute.#ctor(System.Type)
  id: '#ctor(System.Type)'
  parent: System.Xml.Serialization.XmlArrayItemAttribute
  langs:
  - csharp
  - vb
  name: XmlArrayItemAttribute(Type)
  fullName: System.Xml.Serialization.XmlArrayItemAttribute.XmlArrayItemAttribute(System.Type)
  type: Constructor
  source:
    remote:
      path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.cs
    startLine: 53
  assemblies:
  - System.Xml.XmlSerializer
  namespace: System.Xml.Serialization
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Xml.Serialization.XmlArrayItemAttribute\" data-throw-if-not-resolved=\"false\"></xref> class and specifies the <xref href=\"System.Type\" data-throw-if-not-resolved=\"false\"></xref> that can be inserted into the serialized array.</p>\n"
  example:
  - "\n<p>The following example serializes a class named <strong>Transportation</strong> that contains a field named <strong>MyVehicles</strong> that returns an array of <strong>Vehicle</strong> objects. The example applies the <xref href=\"System.Xml.Serialization.XmlArrayItemAttribute\" data-throw-if-not-resolved=\"false\"></xref> to the field, allowing the <xref href=\"System.Xml.Serialization.XmlSerializer\" data-throw-if-not-resolved=\"false\"></xref> to insert instances of the <strong>Car</strong> class, which is derived from the <strong>Vehicle</strong> class, into the array. While applying the attribute, the example sets the <xref href=\"System.Xml.Serialization.XmlArrayItemAttribute.Type\" data-throw-if-not-resolved=\"false\"></xref> property using the <em>type</em> parameter.</p>Classic XmlArrayItemAttribute.XmlArrayItemAttribute2 Example#1"
  syntax:
    content: public XmlArrayItemAttribute(Type type)
    content.vb: Public Sub New(type As Type)
    parameters:
    - id: type
      type: System.Type
      description: "\n<p>The <xref href=\"System.Type\" data-throw-if-not-resolved=\"false\"></xref> of the object to serialize. </p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Xml.Serialization.XmlArrayItemAttribute.DataType
  commentId: P:System.Xml.Serialization.XmlArrayItemAttribute.DataType
  id: DataType
  parent: System.Xml.Serialization.XmlArrayItemAttribute
  langs:
  - csharp
  - vb
  name: DataType
  fullName: System.Xml.Serialization.XmlArrayItemAttribute.DataType
  type: Property
  source:
    remote:
      path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: DataType
    path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.cs
    startLine: 54
  assemblies:
  - System.Xml.XmlSerializer
  namespace: System.Xml.Serialization
  summary: "\n<p>Gets or sets the XML data type of the generated XML element.</p>\n"
  remarks: "\n<p>The following table lists the XML Schema simple data types with their .NET equivalents.</p>\n<p>For the XML Schema <strong>base64Binary</strong> and <strong>hexBinary</strong> data types, use an array of <xref href=\"System.Byte\" data-throw-if-not-resolved=\"false\"></xref> objects, and apply an <xref href=\"System.Xml.Serialization.XmlArrayItemAttribute\" data-throw-if-not-resolved=\"false\"></xref> with the <xref href=\"System.Xml.Serialization.XmlArrayItemAttribute.DataType\" data-throw-if-not-resolved=\"false\"></xref> property set to \"base64Binary\" or \"hexBinary\", as appropriate. For the XML Schema <strong>time</strong> and <strong>date</strong> data types, use the <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> type and apply the <xref href=\"System.Xml.Serialization.XmlArrayItemAttribute\" data-throw-if-not-resolved=\"false\"></xref> with the <xref href=\"System.Xml.Serialization.XmlArrayItemAttribute.DataType\" data-throw-if-not-resolved=\"false\"></xref> set to \"date\" or \"time\".</p>\n<p>For every XML Schema type that is mapped to a string, apply the <xref href=\"System.Xml.Serialization.XmlArrayItemAttribute\" data-throw-if-not-resolved=\"false\"></xref> with its <xref href=\"System.Xml.Serialization.XmlArrayItemAttribute.DataType\" data-throw-if-not-resolved=\"false\"></xref> property set to the XML Schema type. However, this does not change the serialization format, only the schema for the member.</p>\n<p>The property is case-sensitive, so you must set it exactly to one of the XML Schema data types.</p>\n<p>Passing binary data as an XML element is more efficient then passing it as an XML attribute.</p>\n<p>For more information about XML Schema data types, see the World Wide Web Consortium (www.w3.org) document \"XML Schema Part 2: Datatypes.\" </p>\n<p>XSD data type </p>\n<p>.NET data type </p>\n<table><tbody><tr><td>\n<p>anyURI </p>\n</td><td>\n<p>\n<xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td></tr><tr><td>\n<p>base64Binary </p>\n</td><td>\n<p>Array of <xref href=\"System.Byte\" data-throw-if-not-resolved=\"false\"></xref> objects </p>\n</td></tr><tr><td>\n<p>boolean </p>\n</td><td>\n<p>\n<xref href=\"System.Boolean\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td></tr><tr><td>\n<p>byte </p>\n</td><td>\n<p>\n<xref href=\"System.SByte\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td></tr><tr><td>\n<p>date </p>\n</td><td>\n<p>\n<xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td></tr><tr><td>\n<p>dateTime </p>\n</td><td>\n<p>\n<xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td></tr><tr><td>\n<p>decimal </p>\n</td><td>\n<p>\n<xref href=\"System.Decimal\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td></tr><tr><td>\n<p>double </p>\n</td><td>\n<p>\n<xref href=\"System.Double\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td></tr><tr><td>\n<p>ENTITY </p>\n</td><td>\n<p>\n<xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td></tr><tr><td>\n<p>ENTITIES </p>\n</td><td>\n<p>\n<xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td></tr><tr><td>\n<p>float </p>\n</td><td>\n<p>\n<xref href=\"System.Single\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td></tr><tr><td>\n<p>gDay </p>\n</td><td>\n<p>\n<xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td></tr><tr><td>\n<p>gMonth </p>\n</td><td>\n<p>\n<xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td></tr><tr><td>\n<p>gMonthDay </p>\n</td><td>\n<p>\n<xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td></tr><tr><td>\n<p>gYear </p>\n</td><td>\n<p>\n<xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td></tr><tr><td>\n<p>gYearMonth </p>\n</td><td>\n<p>\n<xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td></tr><tr><td>\n<p>hexBinary </p>\n</td><td>\n<p>Array of <xref href=\"System.Byte\" data-throw-if-not-resolved=\"false\"></xref> objects </p>\n</td></tr><tr><td>\n<p>ID </p>\n</td><td>\n<p>\n<xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td></tr><tr><td>\n<p>IDREF </p>\n</td><td>\n<p>\n<xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td></tr><tr><td>\n<p>IDREFS </p>\n</td><td>\n<p>\n<xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td></tr><tr><td>\n<p>int </p>\n</td><td>\n<p>\n<xref href=\"System.Int32\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td></tr><tr><td>\n<p>integer </p>\n</td><td>\n<p>\n<xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td></tr><tr><td>\n<p>language </p>\n</td><td>\n<p>\n<xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td></tr><tr><td>\n<p>long </p>\n</td><td>\n<p>\n<xref href=\"System.Int64\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td></tr><tr><td>\n<p>Name </p>\n</td><td>\n<p>\n<xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td></tr><tr><td>\n<p>NCName </p>\n</td><td>\n<p>\n<xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td></tr><tr><td>\n<p>negativeInteger </p>\n</td><td>\n<p>\n<xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td></tr><tr><td>\n<p>NMTOKEN </p>\n</td><td>\n<p>\n<xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td></tr><tr><td>\n<p>NMTOKENS </p>\n</td><td>\n<p>\n<xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td></tr><tr><td>\n<p>normalizedString </p>\n</td><td>\n<p>\n<xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td></tr><tr><td>\n<p>nonNegativeInteger </p>\n</td><td>\n<p>\n<xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td></tr><tr><td>\n<p>nonPositiveInteger </p>\n</td><td>\n<p>\n<xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td></tr><tr><td>\n<p>NOTATION </p>\n</td><td>\n<p>\n<xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td></tr><tr><td>\n<p>positiveInteger </p>\n</td><td>\n<p>\n<xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td></tr><tr><td>\n<p>QName </p>\n</td><td>\n<p>\n<xref href=\"System.Xml.XmlQualifiedName\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td></tr><tr><td>\n<p>duration </p>\n</td><td>\n<p>\n<xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td></tr><tr><td>\n<p>string </p>\n</td><td>\n<p>\n<xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td></tr><tr><td>\n<p>short </p>\n</td><td>\n<p>\n<xref href=\"System.Int16\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td></tr><tr><td>\n<p>time </p>\n</td><td>\n<p>\n<xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td></tr><tr><td>\n<p>token </p>\n</td><td>\n<p>\n<xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td></tr><tr><td>\n<p>unsignedByte </p>\n</td><td>\n<p>\n<xref href=\"System.Byte\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td></tr><tr><td>\n<p>unsignedInt </p>\n</td><td>\n<p>\n<xref href=\"System.UInt32\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td></tr><tr><td>\n<p>unsignedLong </p>\n</td><td>\n<p>\n<xref href=\"System.UInt64\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td></tr><tr><td>\n<p>unsignedShort </p>\n</td><td>\n<p>\n<xref href=\"System.UInt16\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td></tr></tbody></table>\n"
  example:
  - "\n<p>The following example serializes a class named <strong>PurchaseOrder</strong>. Several instances of the <xref href=\"System.Xml.Serialization.XmlArrayItemAttribute\" data-throw-if-not-resolved=\"false\"></xref> class are applied to three members, and the <xref href=\"System.Xml.Serialization.XmlArrayItemAttribute.DataType\" data-throw-if-not-resolved=\"false\"></xref> property for each instance is set to a type allowed in the array.</p>XmlArrayItemAttribute Example#1"
  syntax:
    content: public string DataType { get; set; }
    content.vb: Public Property DataType As String
    parameters: []
    return:
      type: System.String
      description: "\n<p>An XML schema definition (XSD) data type, as defined by the World Wide Web Consortium (www.w3.org) document \"XML Schema Part 2: DataTypes\".</p>\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Xml.Serialization.XmlArrayItemAttribute.ElementName
  commentId: P:System.Xml.Serialization.XmlArrayItemAttribute.ElementName
  id: ElementName
  parent: System.Xml.Serialization.XmlArrayItemAttribute
  langs:
  - csharp
  - vb
  name: ElementName
  fullName: System.Xml.Serialization.XmlArrayItemAttribute.ElementName
  type: Property
  source:
    remote:
      path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ElementName
    path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.cs
    startLine: 55
  assemblies:
  - System.Xml.XmlSerializer
  namespace: System.Xml.Serialization
  summary: "\n<p>Gets or sets the name of the generated XML element.</p>\n"
  remarks: "\n<p>Specify an <xref href=\"System.Xml.Serialization.XmlArrayItemAttribute.ElementName\" data-throw-if-not-resolved=\"false\"></xref> if you want the name of the generated XML element to differ from the member's identifier.</p>\n<p>You can set the same <xref href=\"System.Xml.Serialization.XmlArrayAttribute.ElementName\" data-throw-if-not-resolved=\"false\"></xref> value to more than one class member if the generated XML document uses XML namespaces to distinguish between identically named members. For details about how to use namespaces and prefixed names in the XML document, see the <xref href=\"System.Xml.Serialization.XmlSerializerNamespaces\" data-throw-if-not-resolved=\"false\"></xref> class.</p>\n"
  example:
  - "\n<p>The following example sets the <xref href=\"System.Xml.Serialization.XmlArrayItemAttribute.ElementName\" data-throw-if-not-resolved=\"false\"></xref> property for the <strong>Vehicle</strong> and <strong>Car</strong> class--thereby changing the names of XML elements that the <xref href=\"System.Xml.Serialization.XmlSerializer\" data-throw-if-not-resolved=\"false\"></xref> generates for those classes.</p>Classic XmlArrayItemAttribute.ElementName Example#1"
  syntax:
    content: public string ElementName { get; set; }
    content.vb: Public Property ElementName As String
    parameters: []
    return:
      type: System.String
      description: "\n<p>The name of the generated XML element. The default is the member identifier.</p>\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Xml.Serialization.XmlArrayItemAttribute.Form
  commentId: P:System.Xml.Serialization.XmlArrayItemAttribute.Form
  id: Form
  parent: System.Xml.Serialization.XmlArrayItemAttribute
  langs:
  - csharp
  - vb
  name: Form
  fullName: System.Xml.Serialization.XmlArrayItemAttribute.Form
  type: Property
  source:
    remote:
      path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Form
    path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.cs
    startLine: 56
  assemblies:
  - System.Xml.XmlSerializer
  namespace: System.Xml.Serialization
  summary: "\n<p>Gets or sets a value that indicates whether the name of the generated XML element is qualified.</p>\n"
  remarks: "\n<p>The <xref href=\"System.Xml.Serialization.XmlAttributeAttribute.Form\" data-throw-if-not-resolved=\"false\"></xref> property determines whether an XML element name is qualified, based on the World Wide Web Consortium (www.w3.org) specification \"Namespaces in XML.\" </p>\n<p>If the <xref href=\"System.Xml.Serialization.XmlAttributeAttribute.Namespace\" data-throw-if-not-resolved=\"false\"></xref> property is set to any value, attempting to set the <xref href=\"System.Xml.Serialization.XmlElementAttribute.Form\" data-throw-if-not-resolved=\"false\"></xref> property to <strong>XmlSchemaForm.Unqualified</strong> throws an exception.</p>\n<p>The default value, <strong>XmlSchemaForm.None</strong>, instructs the <xref href=\"System.Xml.Serialization.XmlSerializer\" data-throw-if-not-resolved=\"false\"></xref> to check the schema for the XML document to determine whether the namespace is qualified. For elements, the <xref href=\"System.Xml.Serialization.XmlSerializer\" data-throw-if-not-resolved=\"false\"></xref> checks the value of the schema-element attribute <strong>elementFormDefault</strong>. For attributes, it checks the value of the schema-element attribute <strong>attributeFormDefault</strong>. For example, the following XML Schema indicates that the <code>Name</code> element is qualified, while the <code>Number</code> element is unqualified.</p>\n<pre><code> <schema elementFormDefault=\"qualified\" \nattributeFormDefault=\"unqualified\">\n<element name=\"Name\"/>\n<attribute name=\"Number\"/>\n</schema></code></pre>\n"
  example:
  - "\n<p>The following example sets the <xref href=\"System.Xml.Serialization.XmlArrayItemAttribute.Form\" data-throw-if-not-resolved=\"false\"></xref> property for the <strong>Vehicle</strong> class to <strong>XmlSchemaForm.Unqualified</strong>, and the <xref href=\"System.Xml.Serialization.XmlArrayItemAttribute.Form\" data-throw-if-not-resolved=\"false\"></xref> property for the <strong>Car</strong> class to <strong>XmlSchemaForm.Qualified</strong>.</p>Classic XmlArrayItemAttribute.Form Example#1"
  syntax:
    content: public Schema.XmlSchemaForm Form { get; set; }
    content.vb: Public Property Form As Schema.XmlSchemaForm
    parameters: []
    return:
      type: System.Xml.Schema.XmlSchemaForm
      description: "\n<p>One of the <xref href=\"System.Xml.Schema.XmlSchemaForm\" data-throw-if-not-resolved=\"false\"></xref> values. The default is <strong>XmlSchemaForm.None</strong>.</p>\n"
  exceptions:
  - type: System.Exception
    commentId: T:System.Exception
    description: "\n<p>The <xref href=\"System.Xml.Serialization.XmlArrayItemAttribute.Form\" data-throw-if-not-resolved=\"false\"></xref> property is set to <strong>XmlSchemaForm.Unqualified</strong> and a <xref href=\"System.Xml.Serialization.XmlArrayItemAttribute.Namespace\" data-throw-if-not-resolved=\"false\"></xref> value is specified. </p>\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Xml.Serialization.XmlArrayItemAttribute.IsNullable
  commentId: P:System.Xml.Serialization.XmlArrayItemAttribute.IsNullable
  id: IsNullable
  parent: System.Xml.Serialization.XmlArrayItemAttribute
  langs:
  - csharp
  - vb
  name: IsNullable
  fullName: System.Xml.Serialization.XmlArrayItemAttribute.IsNullable
  type: Property
  source:
    remote:
      path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IsNullable
    path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.cs
    startLine: 57
  assemblies:
  - System.Xml.XmlSerializer
  namespace: System.Xml.Serialization
  summary: "\n<p>Gets or sets a value that indicates whether the <xref href=\"System.Xml.Serialization.XmlSerializer\" data-throw-if-not-resolved=\"false\"></xref> must serialize a member as an empty XML tag with the <strong>xsi:nil</strong> attribute set to <strong>true</strong>.</p>\n"
  remarks: "\n<p>The XML schema specification for structures allows an XML document to explicitly signal that an element's content is missing. Such an element contains the attribute <strong>xsi:nil</strong> set to <strong>true</strong>. For more information, see the World Wide Web Consortium (www.w3.org) specification titled \"XML Schema Part 1: Structures.\" </p>\n<p>If the <xref href=\"System.Xml.Serialization.XmlArrayItemAttribute.IsNullable\" data-throw-if-not-resolved=\"false\"></xref> property is <strong>true</strong>, the <strong>xsi:nil</strong> attribute is generated for class members that have been set to <strong>null</strong>. For example, if you set a field named <code>MyStringArray</code> to <strong>null</strong>, the <xref href=\"System.Xml.Serialization.XmlSerializer\" data-throw-if-not-resolved=\"false\"></xref> generates the following XML code.</p>\n<pre><code> <MyStringArray xsi:nil = \"true\" /></code></pre>\n<p>If the <xref href=\"System.Xml.Serialization.XmlArrayItemAttribute.IsNullable\" data-throw-if-not-resolved=\"false\"></xref> property is <strong>false</strong>, no XML element is generated.</p>\n<p>You cannot apply the <xref href=\"System.Xml.Serialization.XmlArrayItemAttribute.IsNullable\" data-throw-if-not-resolved=\"false\"></xref> property to a member typed as a value type because a value type cannot contain <strong>null</strong>.</p>\n"
  example:
  - "\n<p>The following example serializes a class named <strong>Group</strong>, which contains a field named <strong>Employees</strong> that returns an array of <strong>Employee</strong> objects. A second class named <strong>Manager</strong> derives from <strong>Employee</strong>. An <xref href=\"System.Xml.Serialization.XmlArrayItemAttribute\" data-throw-if-not-resolved=\"false\"></xref> specifies that the <xref href=\"System.Xml.Serialization.XmlSerializer\" data-throw-if-not-resolved=\"false\"></xref> can insert both <strong>Employee</strong> and <strong>Manager</strong> objects into the array. The example sets the <xref href=\"System.Xml.Serialization.XmlArrayItemAttribute.IsNullable\" data-throw-if-not-resolved=\"false\"></xref> property, thereby telling the <xref href=\"System.Xml.Serialization.XmlSerializer\" data-throw-if-not-resolved=\"false\"></xref> not to generate the <strong>xsi:nil</strong> attribute objects in the array set to <strong>null</strong>.</p>Classic XmlArrayItemAttribute.IsNullable Example#1"
  syntax:
    content: public bool IsNullable { get; set; }
    content.vb: Public Property IsNullable As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if the <xref href=\"System.Xml.Serialization.XmlSerializer\" data-throw-if-not-resolved=\"false\"></xref> generates the <strong>xsi:nil</strong> attribute; otherwise, <strong>false</strong>, and no instance is generated. The default is <strong>true</strong>.</p>\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Xml.Serialization.XmlArrayItemAttribute.Namespace
  commentId: P:System.Xml.Serialization.XmlArrayItemAttribute.Namespace
  id: Namespace
  parent: System.Xml.Serialization.XmlArrayItemAttribute
  langs:
  - csharp
  - vb
  name: Namespace
  fullName: System.Xml.Serialization.XmlArrayItemAttribute.Namespace
  type: Property
  source:
    remote:
      path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Namespace
    path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.cs
    startLine: 58
  assemblies:
  - System.Xml.XmlSerializer
  namespace: System.Xml.Serialization
  summary: "\n<p>Gets or sets the namespace of the generated XML element.</p>\n"
  remarks: "\n<p>The <xref href=\"System.Xml.Serialization.XmlArrayItemAttribute.Namespace\" data-throw-if-not-resolved=\"false\"></xref> property conforms to the World Wide Web Consortium (www.w3.org) specification \"Namespaces in XML.\" </p>\n<p>To create namespaces to use in the XML document and associated prefixes, you must create an <xref href=\"System.Xml.Serialization.XmlSerializerNamespaces\" data-throw-if-not-resolved=\"false\"></xref> that contains all the prefix and namespace pairs. The namespace you set for each <xref href=\"System.Xml.Serialization.XmlArrayAttribute\" data-throw-if-not-resolved=\"false\"></xref> must be contained in the <xref href=\"System.Xml.Serialization.XmlSerializerNamespaces\" data-throw-if-not-resolved=\"false\"></xref>. When the <xref href=\"System.Xml.Serialization.XmlSerializer\" data-throw-if-not-resolved=\"false\"></xref> generates the document, it correctly prefixes the element name for each array item.</p>\n"
  example:
  - "\n<p>The following example applies an <xref href=\"System.Xml.Serialization.XmlArrayItemAttribute\" data-throw-if-not-resolved=\"false\"></xref> and sets the <xref href=\"System.Xml.Serialization.XmlArrayItemAttribute.Namespace\" data-throw-if-not-resolved=\"false\"></xref> property.</p>Classic XmlArrayItemAttribute.Namespace Example#1"
  syntax:
    content: public string Namespace { get; set; }
    content.vb: Public Property Namespace As String
    parameters: []
    return:
      type: System.String
      description: "\n<p>The namespace of the generated XML element.</p>\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Xml.Serialization.XmlArrayItemAttribute.NestingLevel
  commentId: P:System.Xml.Serialization.XmlArrayItemAttribute.NestingLevel
  id: NestingLevel
  parent: System.Xml.Serialization.XmlArrayItemAttribute
  langs:
  - csharp
  - vb
  name: NestingLevel
  fullName: System.Xml.Serialization.XmlArrayItemAttribute.NestingLevel
  type: Property
  source:
    remote:
      path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: NestingLevel
    path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.cs
    startLine: 59
  assemblies:
  - System.Xml.XmlSerializer
  namespace: System.Xml.Serialization
  summary: "\n<p>Gets or sets the level in a hierarchy of XML elements that the <xref href=\"System.Xml.Serialization.XmlArrayItemAttribute\" data-throw-if-not-resolved=\"false\"></xref> affects.</p>\n"
  remarks: "\n<p>An XML document can contain hierarchies of XML elements. To represent such a hierarchy, an array of arrays is used. In such an array, each index represents a level in the hierarchy. Therefore, the <xref href=\"System.Xml.Serialization.XmlArrayItemAttribute.NestingLevel\" data-throw-if-not-resolved=\"false\"></xref> property is only used when applying an <xref href=\"System.Xml.Serialization.XmlArrayItemAttribute\" data-throw-if-not-resolved=\"false\"></xref> to a field that returns an array of arrays.</p>\n<p>When applying the attribute, specify which hierarchy level the attribute affects by setting the <xref href=\"System.Xml.Serialization.XmlArrayItemAttribute.NestingLevel\" data-throw-if-not-resolved=\"false\"></xref>. The first index always has the value of 0; therefore it is optional to set its <xref href=\"System.Xml.Serialization.XmlArrayItemAttribute.NestingLevel\" data-throw-if-not-resolved=\"false\"></xref> --an <xref href=\"System.Xml.Serialization.XmlArrayItemAttribute\" data-throw-if-not-resolved=\"false\"></xref> without a <xref href=\"System.Xml.Serialization.XmlArrayItemAttribute.NestingLevel\" data-throw-if-not-resolved=\"false\"></xref> value is applied to the first array index. Only the subsequent <xref href=\"System.Xml.Serialization.XmlArrayItemAttribute\" data-throw-if-not-resolved=\"false\"></xref> objects require <xref href=\"System.Xml.Serialization.XmlArrayItemAttribute.NestingLevel\" data-throw-if-not-resolved=\"false\"></xref> values specified (as 1, 2, 3, and so forth).</p>\n"
  example:
  - "\n<p>The following example applies three <xref href=\"System.Xml.Serialization.XmlArrayItemAttribute\" data-throw-if-not-resolved=\"false\"></xref> attributes to an array of arrays. To specify which of the arrays each attribute applies to, the <xref href=\"System.Xml.Serialization.XmlArrayItemAttribute.NestingLevel\" data-throw-if-not-resolved=\"false\"></xref> property is set to the index of the arrays.</p>NestingLevel#1"
  syntax:
    content: public int NestingLevel { get; set; }
    content.vb: Public Property NestingLevel As Integer
    parameters: []
    return:
      type: System.Int32
      description: "\n<p>The zero-based index of a set of indexes in an array of arrays.</p>\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Xml.Serialization.XmlArrayItemAttribute.Type
  commentId: P:System.Xml.Serialization.XmlArrayItemAttribute.Type
  id: Type
  parent: System.Xml.Serialization.XmlArrayItemAttribute
  langs:
  - csharp
  - vb
  name: Type
  fullName: System.Xml.Serialization.XmlArrayItemAttribute.Type
  type: Property
  source:
    remote:
      path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Type
    path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.cs
    startLine: 60
  assemblies:
  - System.Xml.XmlSerializer
  namespace: System.Xml.Serialization
  summary: "\n<p>Gets or sets the type allowed in an array.</p>\n"
  remarks: "\n<p>Use the <xref href=\"System.Xml.Serialization.XmlElementAttribute.Type\" data-throw-if-not-resolved=\"false\"></xref> property to specify an overridden type for a public field or public read/write property value.</p>\n<p>If a field or property returns an array of type <xref href=\"System.Object\" data-throw-if-not-resolved=\"false\"></xref>, apply multiple instances of the <xref href=\"System.Xml.Serialization.XmlArrayItemAttribute\" data-throw-if-not-resolved=\"false\"></xref> to the field or property. For each instance, set the <xref href=\"System.Xml.Serialization.XmlElementAttribute.Type\" data-throw-if-not-resolved=\"false\"></xref> property to a type of object that can be inserted into the array.</p>\n<p>If an array contains only primitive types, you do not need to apply the <xref href=\"System.Xml.Serialization.XmlArrayItemAttribute\" data-throw-if-not-resolved=\"false\"></xref>. By default, the <xref href=\"System.Xml.Serialization.XmlSerializer\" data-throw-if-not-resolved=\"false\"></xref> generates a series of elements, each with the same element name, for each value, but the type of each element is set to the XML Schema data type. For example, the following code: </p>\n<pre><code> ' Visual Basic code\nPublic Class Arrays\nPublic XSDTypes ()As Object= New Object(){\"one\", 2, 3.0}\nEnd Class\n// C# code\npublic class MyArray{\n// No XmlArrayItemAttribute is applied.\npublic object[] XSDTypes= new object[]{\"one\", 2, 3.2};\n}</code></pre>\n<p>results in this XML: </p>\n<pre><code> <?xml version=\"1.0\" encoding=\"utf-8\"?>\n<Arrays xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\">\n<XSDTypes>\n<Object xsi:type=\"xsd:string\">one</Object>\n<Object xsi:type=\"xsd:int\">2</Object>\n<Object xsi:type=\"xsd:double\">3</Object>\n</XSDTypes>\n</Arrays></code></pre>\n<p>However, if you specify the <xref href=\"System.Xml.Serialization.XmlArrayItemAttribute.Type\" data-throw-if-not-resolved=\"false\"></xref> property for each primitive type, the element name for each value is generated using the .NET type name. For example this code: </p>\n<pre><code> ' Visual Basic code\nPublic Class Arrays\n<XmlArrayItem(GetType(String)), _\nXmlArrayItem(GetType(Integer)), _\nXmlArrayItem(GetType(Double))> _\nPublic PrimitiveTypes () As Object = New Object(){\"one\", 2, 3.0}\nEnd Class\n// C# code\npublic class Arrays{\n[XmlArrayItem(typeof(string))]\n[XmlArrayItem(typeof(int))]\n[XmlArrayItem(typeof(double))]\npublic object [] PrimitiveTypes = new object[]{\"one\", 2, 3.0};\n}</code></pre>\n<p>results in this XML: </p>\n<pre><code> <?xml version=\"1.0\" encoding=\"utf-8\"?>\n<Arrays xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\">\n<PrimitiveTypes>\n<string>one</string>\n<int>2</int>\n<double>3</double>\n</PrimitiveTypes>\n</Arrays></code></pre>\n"
  example:
  - "\n<p>The following example serializes an array of objects. The field that returns the array is attributed with two <xref href=\"System.Xml.Serialization.XmlArrayItemAttribute\" data-throw-if-not-resolved=\"false\"></xref> instances. Each instance instructs the <xref href=\"System.Xml.Serialization.XmlSerializer\" data-throw-if-not-resolved=\"false\"></xref> to accept the specified <xref href=\"System.Xml.Serialization.XmlArrayItemAttribute.Type\" data-throw-if-not-resolved=\"false\"></xref> in the array.</p>Classic XmlArrayItemAttribute.Type Example#1"
  syntax:
    content: public Type Type { get; set; }
    content.vb: Public Property Type As Type
    parameters: []
    return:
      type: System.Type
      description: "\n<p>A <xref href=\"System.Type\" data-throw-if-not-resolved=\"false\"></xref> that is allowed in the array.</p>\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: System.Xml.Serialization
  isExternal: false
  name: System.Xml.Serialization
  fullName: System.Xml.Serialization
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System.Attribute
  parent: System
  isExternal: false
  name: Attribute
  fullName: System.Attribute
- uid: System.Runtime.InteropServices._Attribute
  parent: System.Runtime.InteropServices
  isExternal: true
  name: _Attribute
  fullName: System.Runtime.InteropServices._Attribute
- uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)
  parent: System.Attribute
  isExternal: true
  name: GetCustomAttributes(MemberInfo, Type)
  fullName: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type)
  spec.csharp:
  - uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)
    name: GetCustomAttributes
    fullName: System.Attribute.GetCustomAttributes
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Reflection.MemberInfo
    name: MemberInfo
    fullName: System.Reflection.MemberInfo
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)
    name: GetCustomAttributes
    fullName: System.Attribute.GetCustomAttributes
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Reflection.MemberInfo
    name: MemberInfo
    fullName: System.Reflection.MemberInfo
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: )
    fullName: )
- uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)
  parent: System.Attribute
  isExternal: true
  name: GetCustomAttributes(MemberInfo, Type, Boolean)
  fullName: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, System.Boolean)
  spec.csharp:
  - uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)
    name: GetCustomAttributes
    fullName: System.Attribute.GetCustomAttributes
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Reflection.MemberInfo
    name: MemberInfo
    fullName: System.Reflection.MemberInfo
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)
    name: GetCustomAttributes
    fullName: System.Attribute.GetCustomAttributes
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Reflection.MemberInfo
    name: MemberInfo
    fullName: System.Reflection.MemberInfo
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
- uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo)
  parent: System.Attribute
  isExternal: true
  name: GetCustomAttributes(MemberInfo)
  fullName: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo)
  spec.csharp:
  - uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo)
    name: GetCustomAttributes
    fullName: System.Attribute.GetCustomAttributes
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Reflection.MemberInfo
    name: MemberInfo
    fullName: System.Reflection.MemberInfo
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo)
    name: GetCustomAttributes
    fullName: System.Attribute.GetCustomAttributes
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Reflection.MemberInfo
    name: MemberInfo
    fullName: System.Reflection.MemberInfo
    isExternal: true
  - name: )
    fullName: )
- uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)
  parent: System.Attribute
  isExternal: true
  name: GetCustomAttributes(MemberInfo, Boolean)
  fullName: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Boolean)
  spec.csharp:
  - uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)
    name: GetCustomAttributes
    fullName: System.Attribute.GetCustomAttributes
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Reflection.MemberInfo
    name: MemberInfo
    fullName: System.Reflection.MemberInfo
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)
    name: GetCustomAttributes
    fullName: System.Attribute.GetCustomAttributes
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Reflection.MemberInfo
    name: MemberInfo
    fullName: System.Reflection.MemberInfo
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
- uid: System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type)
  parent: System.Attribute
  isExternal: true
  name: IsDefined(MemberInfo, Type)
  fullName: System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type)
  spec.csharp:
  - uid: System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type)
    name: IsDefined
    fullName: System.Attribute.IsDefined
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Reflection.MemberInfo
    name: MemberInfo
    fullName: System.Reflection.MemberInfo
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type)
    name: IsDefined
    fullName: System.Attribute.IsDefined
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Reflection.MemberInfo
    name: MemberInfo
    fullName: System.Reflection.MemberInfo
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: )
    fullName: )
- uid: System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)
  parent: System.Attribute
  isExternal: true
  name: IsDefined(MemberInfo, Type, Boolean)
  fullName: System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type, System.Boolean)
  spec.csharp:
  - uid: System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)
    name: IsDefined
    fullName: System.Attribute.IsDefined
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Reflection.MemberInfo
    name: MemberInfo
    fullName: System.Reflection.MemberInfo
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)
    name: IsDefined
    fullName: System.Attribute.IsDefined
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Reflection.MemberInfo
    name: MemberInfo
    fullName: System.Reflection.MemberInfo
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
- uid: System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)
  parent: System.Attribute
  isExternal: true
  name: GetCustomAttribute(MemberInfo, Type)
  fullName: System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type)
  spec.csharp:
  - uid: System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)
    name: GetCustomAttribute
    fullName: System.Attribute.GetCustomAttribute
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Reflection.MemberInfo
    name: MemberInfo
    fullName: System.Reflection.MemberInfo
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)
    name: GetCustomAttribute
    fullName: System.Attribute.GetCustomAttribute
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Reflection.MemberInfo
    name: MemberInfo
    fullName: System.Reflection.MemberInfo
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: )
    fullName: )
- uid: System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)
  parent: System.Attribute
  isExternal: true
  name: GetCustomAttribute(MemberInfo, Type, Boolean)
  fullName: System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, System.Boolean)
  spec.csharp:
  - uid: System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)
    name: GetCustomAttribute
    fullName: System.Attribute.GetCustomAttribute
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Reflection.MemberInfo
    name: MemberInfo
    fullName: System.Reflection.MemberInfo
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)
    name: GetCustomAttribute
    fullName: System.Attribute.GetCustomAttribute
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Reflection.MemberInfo
    name: MemberInfo
    fullName: System.Reflection.MemberInfo
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
- uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo)
  parent: System.Attribute
  isExternal: true
  name: GetCustomAttributes(ParameterInfo)
  fullName: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo)
  spec.csharp:
  - uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo)
    name: GetCustomAttributes
    fullName: System.Attribute.GetCustomAttributes
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Reflection.ParameterInfo
    name: ParameterInfo
    fullName: System.Reflection.ParameterInfo
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo)
    name: GetCustomAttributes
    fullName: System.Attribute.GetCustomAttributes
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Reflection.ParameterInfo
    name: ParameterInfo
    fullName: System.Reflection.ParameterInfo
    isExternal: true
  - name: )
    fullName: )
- uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type)
  parent: System.Attribute
  isExternal: true
  name: GetCustomAttributes(ParameterInfo, Type)
  fullName: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type)
  spec.csharp:
  - uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type)
    name: GetCustomAttributes
    fullName: System.Attribute.GetCustomAttributes
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Reflection.ParameterInfo
    name: ParameterInfo
    fullName: System.Reflection.ParameterInfo
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type)
    name: GetCustomAttributes
    fullName: System.Attribute.GetCustomAttributes
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Reflection.ParameterInfo
    name: ParameterInfo
    fullName: System.Reflection.ParameterInfo
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: )
    fullName: )
- uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type,System.Boolean)
  parent: System.Attribute
  isExternal: true
  name: GetCustomAttributes(ParameterInfo, Type, Boolean)
  fullName: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, System.Boolean)
  spec.csharp:
  - uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type,System.Boolean)
    name: GetCustomAttributes
    fullName: System.Attribute.GetCustomAttributes
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Reflection.ParameterInfo
    name: ParameterInfo
    fullName: System.Reflection.ParameterInfo
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type,System.Boolean)
    name: GetCustomAttributes
    fullName: System.Attribute.GetCustomAttributes
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Reflection.ParameterInfo
    name: ParameterInfo
    fullName: System.Reflection.ParameterInfo
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
- uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Boolean)
  parent: System.Attribute
  isExternal: true
  name: GetCustomAttributes(ParameterInfo, Boolean)
  fullName: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Boolean)
  spec.csharp:
  - uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Boolean)
    name: GetCustomAttributes
    fullName: System.Attribute.GetCustomAttributes
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Reflection.ParameterInfo
    name: ParameterInfo
    fullName: System.Reflection.ParameterInfo
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Boolean)
    name: GetCustomAttributes
    fullName: System.Attribute.GetCustomAttributes
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Reflection.ParameterInfo
    name: ParameterInfo
    fullName: System.Reflection.ParameterInfo
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
- uid: System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type)
  parent: System.Attribute
  isExternal: true
  name: IsDefined(ParameterInfo, Type)
  fullName: System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type)
  spec.csharp:
  - uid: System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type)
    name: IsDefined
    fullName: System.Attribute.IsDefined
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Reflection.ParameterInfo
    name: ParameterInfo
    fullName: System.Reflection.ParameterInfo
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type)
    name: IsDefined
    fullName: System.Attribute.IsDefined
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Reflection.ParameterInfo
    name: ParameterInfo
    fullName: System.Reflection.ParameterInfo
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: )
    fullName: )
- uid: System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type,System.Boolean)
  parent: System.Attribute
  isExternal: true
  name: IsDefined(ParameterInfo, Type, Boolean)
  fullName: System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type, System.Boolean)
  spec.csharp:
  - uid: System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type,System.Boolean)
    name: IsDefined
    fullName: System.Attribute.IsDefined
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Reflection.ParameterInfo
    name: ParameterInfo
    fullName: System.Reflection.ParameterInfo
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type,System.Boolean)
    name: IsDefined
    fullName: System.Attribute.IsDefined
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Reflection.ParameterInfo
    name: ParameterInfo
    fullName: System.Reflection.ParameterInfo
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
- uid: System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type)
  parent: System.Attribute
  isExternal: true
  name: GetCustomAttribute(ParameterInfo, Type)
  fullName: System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type)
  spec.csharp:
  - uid: System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type)
    name: GetCustomAttribute
    fullName: System.Attribute.GetCustomAttribute
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Reflection.ParameterInfo
    name: ParameterInfo
    fullName: System.Reflection.ParameterInfo
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type)
    name: GetCustomAttribute
    fullName: System.Attribute.GetCustomAttribute
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Reflection.ParameterInfo
    name: ParameterInfo
    fullName: System.Reflection.ParameterInfo
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: )
    fullName: )
- uid: System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type,System.Boolean)
  parent: System.Attribute
  isExternal: true
  name: GetCustomAttribute(ParameterInfo, Type, Boolean)
  fullName: System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, System.Boolean)
  spec.csharp:
  - uid: System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type,System.Boolean)
    name: GetCustomAttribute
    fullName: System.Attribute.GetCustomAttribute
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Reflection.ParameterInfo
    name: ParameterInfo
    fullName: System.Reflection.ParameterInfo
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type,System.Boolean)
    name: GetCustomAttribute
    fullName: System.Attribute.GetCustomAttribute
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Reflection.ParameterInfo
    name: ParameterInfo
    fullName: System.Reflection.ParameterInfo
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
- uid: System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type)
  parent: System.Attribute
  isExternal: true
  name: GetCustomAttributes(Module, Type)
  fullName: System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type)
  spec.csharp:
  - uid: System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type)
    name: GetCustomAttributes
    fullName: System.Attribute.GetCustomAttributes
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Reflection.Module
    name: Module
    fullName: System.Reflection.Module
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type)
    name: GetCustomAttributes
    fullName: System.Attribute.GetCustomAttributes
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Reflection.Module
    name: Module
    fullName: System.Reflection.Module
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: )
    fullName: )
- uid: System.Attribute.GetCustomAttributes(System.Reflection.Module)
  parent: System.Attribute
  isExternal: true
  name: GetCustomAttributes(Module)
  fullName: System.Attribute.GetCustomAttributes(System.Reflection.Module)
  spec.csharp:
  - uid: System.Attribute.GetCustomAttributes(System.Reflection.Module)
    name: GetCustomAttributes
    fullName: System.Attribute.GetCustomAttributes
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Reflection.Module
    name: Module
    fullName: System.Reflection.Module
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Attribute.GetCustomAttributes(System.Reflection.Module)
    name: GetCustomAttributes
    fullName: System.Attribute.GetCustomAttributes
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Reflection.Module
    name: Module
    fullName: System.Reflection.Module
    isExternal: true
  - name: )
    fullName: )
- uid: System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Boolean)
  parent: System.Attribute
  isExternal: true
  name: GetCustomAttributes(Module, Boolean)
  fullName: System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Boolean)
  spec.csharp:
  - uid: System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Boolean)
    name: GetCustomAttributes
    fullName: System.Attribute.GetCustomAttributes
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Reflection.Module
    name: Module
    fullName: System.Reflection.Module
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Boolean)
    name: GetCustomAttributes
    fullName: System.Attribute.GetCustomAttributes
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Reflection.Module
    name: Module
    fullName: System.Reflection.Module
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
- uid: System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type,System.Boolean)
  parent: System.Attribute
  isExternal: true
  name: GetCustomAttributes(Module, Type, Boolean)
  fullName: System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, System.Boolean)
  spec.csharp:
  - uid: System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type,System.Boolean)
    name: GetCustomAttributes
    fullName: System.Attribute.GetCustomAttributes
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Reflection.Module
    name: Module
    fullName: System.Reflection.Module
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type,System.Boolean)
    name: GetCustomAttributes
    fullName: System.Attribute.GetCustomAttributes
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Reflection.Module
    name: Module
    fullName: System.Reflection.Module
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
- uid: System.Attribute.IsDefined(System.Reflection.Module,System.Type)
  parent: System.Attribute
  isExternal: true
  name: IsDefined(Module, Type)
  fullName: System.Attribute.IsDefined(System.Reflection.Module, System.Type)
  spec.csharp:
  - uid: System.Attribute.IsDefined(System.Reflection.Module,System.Type)
    name: IsDefined
    fullName: System.Attribute.IsDefined
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Reflection.Module
    name: Module
    fullName: System.Reflection.Module
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Attribute.IsDefined(System.Reflection.Module,System.Type)
    name: IsDefined
    fullName: System.Attribute.IsDefined
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Reflection.Module
    name: Module
    fullName: System.Reflection.Module
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: )
    fullName: )
- uid: System.Attribute.IsDefined(System.Reflection.Module,System.Type,System.Boolean)
  parent: System.Attribute
  isExternal: true
  name: IsDefined(Module, Type, Boolean)
  fullName: System.Attribute.IsDefined(System.Reflection.Module, System.Type, System.Boolean)
  spec.csharp:
  - uid: System.Attribute.IsDefined(System.Reflection.Module,System.Type,System.Boolean)
    name: IsDefined
    fullName: System.Attribute.IsDefined
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Reflection.Module
    name: Module
    fullName: System.Reflection.Module
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Attribute.IsDefined(System.Reflection.Module,System.Type,System.Boolean)
    name: IsDefined
    fullName: System.Attribute.IsDefined
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Reflection.Module
    name: Module
    fullName: System.Reflection.Module
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
- uid: System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type)
  parent: System.Attribute
  isExternal: true
  name: GetCustomAttribute(Module, Type)
  fullName: System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type)
  spec.csharp:
  - uid: System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type)
    name: GetCustomAttribute
    fullName: System.Attribute.GetCustomAttribute
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Reflection.Module
    name: Module
    fullName: System.Reflection.Module
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type)
    name: GetCustomAttribute
    fullName: System.Attribute.GetCustomAttribute
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Reflection.Module
    name: Module
    fullName: System.Reflection.Module
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: )
    fullName: )
- uid: System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type,System.Boolean)
  parent: System.Attribute
  isExternal: true
  name: GetCustomAttribute(Module, Type, Boolean)
  fullName: System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type, System.Boolean)
  spec.csharp:
  - uid: System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type,System.Boolean)
    name: GetCustomAttribute
    fullName: System.Attribute.GetCustomAttribute
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Reflection.Module
    name: Module
    fullName: System.Reflection.Module
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type,System.Boolean)
    name: GetCustomAttribute
    fullName: System.Attribute.GetCustomAttribute
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Reflection.Module
    name: Module
    fullName: System.Reflection.Module
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
- uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type)
  parent: System.Attribute
  isExternal: true
  name: GetCustomAttributes(Assembly, Type)
  fullName: System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type)
  spec.csharp:
  - uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type)
    name: GetCustomAttributes
    fullName: System.Attribute.GetCustomAttributes
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Reflection.Assembly
    name: Assembly
    fullName: System.Reflection.Assembly
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type)
    name: GetCustomAttributes
    fullName: System.Attribute.GetCustomAttributes
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Reflection.Assembly
    name: Assembly
    fullName: System.Reflection.Assembly
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: )
    fullName: )
- uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type,System.Boolean)
  parent: System.Attribute
  isExternal: true
  name: GetCustomAttributes(Assembly, Type, Boolean)
  fullName: System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type, System.Boolean)
  spec.csharp:
  - uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type,System.Boolean)
    name: GetCustomAttributes
    fullName: System.Attribute.GetCustomAttributes
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Reflection.Assembly
    name: Assembly
    fullName: System.Reflection.Assembly
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type,System.Boolean)
    name: GetCustomAttributes
    fullName: System.Attribute.GetCustomAttributes
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Reflection.Assembly
    name: Assembly
    fullName: System.Reflection.Assembly
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
- uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly)
  parent: System.Attribute
  isExternal: true
  name: GetCustomAttributes(Assembly)
  fullName: System.Attribute.GetCustomAttributes(System.Reflection.Assembly)
  spec.csharp:
  - uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly)
    name: GetCustomAttributes
    fullName: System.Attribute.GetCustomAttributes
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Reflection.Assembly
    name: Assembly
    fullName: System.Reflection.Assembly
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly)
    name: GetCustomAttributes
    fullName: System.Attribute.GetCustomAttributes
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Reflection.Assembly
    name: Assembly
    fullName: System.Reflection.Assembly
    isExternal: true
  - name: )
    fullName: )
- uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Boolean)
  parent: System.Attribute
  isExternal: true
  name: GetCustomAttributes(Assembly, Boolean)
  fullName: System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Boolean)
  spec.csharp:
  - uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Boolean)
    name: GetCustomAttributes
    fullName: System.Attribute.GetCustomAttributes
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Reflection.Assembly
    name: Assembly
    fullName: System.Reflection.Assembly
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Boolean)
    name: GetCustomAttributes
    fullName: System.Attribute.GetCustomAttributes
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Reflection.Assembly
    name: Assembly
    fullName: System.Reflection.Assembly
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
- uid: System.Attribute.IsDefined(System.Reflection.Assembly,System.Type)
  parent: System.Attribute
  isExternal: true
  name: IsDefined(Assembly, Type)
  fullName: System.Attribute.IsDefined(System.Reflection.Assembly, System.Type)
  spec.csharp:
  - uid: System.Attribute.IsDefined(System.Reflection.Assembly,System.Type)
    name: IsDefined
    fullName: System.Attribute.IsDefined
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Reflection.Assembly
    name: Assembly
    fullName: System.Reflection.Assembly
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Attribute.IsDefined(System.Reflection.Assembly,System.Type)
    name: IsDefined
    fullName: System.Attribute.IsDefined
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Reflection.Assembly
    name: Assembly
    fullName: System.Reflection.Assembly
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: )
    fullName: )
- uid: System.Attribute.IsDefined(System.Reflection.Assembly,System.Type,System.Boolean)
  parent: System.Attribute
  isExternal: true
  name: IsDefined(Assembly, Type, Boolean)
  fullName: System.Attribute.IsDefined(System.Reflection.Assembly, System.Type, System.Boolean)
  spec.csharp:
  - uid: System.Attribute.IsDefined(System.Reflection.Assembly,System.Type,System.Boolean)
    name: IsDefined
    fullName: System.Attribute.IsDefined
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Reflection.Assembly
    name: Assembly
    fullName: System.Reflection.Assembly
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Attribute.IsDefined(System.Reflection.Assembly,System.Type,System.Boolean)
    name: IsDefined
    fullName: System.Attribute.IsDefined
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Reflection.Assembly
    name: Assembly
    fullName: System.Reflection.Assembly
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
- uid: System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type)
  parent: System.Attribute
  isExternal: true
  name: GetCustomAttribute(Assembly, Type)
  fullName: System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type)
  spec.csharp:
  - uid: System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type)
    name: GetCustomAttribute
    fullName: System.Attribute.GetCustomAttribute
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Reflection.Assembly
    name: Assembly
    fullName: System.Reflection.Assembly
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type)
    name: GetCustomAttribute
    fullName: System.Attribute.GetCustomAttribute
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Reflection.Assembly
    name: Assembly
    fullName: System.Reflection.Assembly
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: )
    fullName: )
- uid: System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type,System.Boolean)
  parent: System.Attribute
  isExternal: true
  name: GetCustomAttribute(Assembly, Type, Boolean)
  fullName: System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type, System.Boolean)
  spec.csharp:
  - uid: System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type,System.Boolean)
    name: GetCustomAttribute
    fullName: System.Attribute.GetCustomAttribute
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Reflection.Assembly
    name: Assembly
    fullName: System.Reflection.Assembly
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type,System.Boolean)
    name: GetCustomAttribute
    fullName: System.Attribute.GetCustomAttribute
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Reflection.Assembly
    name: Assembly
    fullName: System.Reflection.Assembly
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
- uid: System.Attribute.Equals(System.Object)
  parent: System.Attribute
  isExternal: true
  name: Equals(Object)
  fullName: System.Attribute.Equals(System.Object)
  spec.csharp:
  - uid: System.Attribute.Equals(System.Object)
    name: Equals
    fullName: System.Attribute.Equals
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Attribute.Equals(System.Object)
    name: Equals
    fullName: System.Attribute.Equals
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Attribute.GetHashCode
  parent: System.Attribute
  isExternal: false
  name: GetHashCode()
  fullName: System.Attribute.GetHashCode()
  spec.csharp:
  - uid: System.Attribute.GetHashCode
    name: GetHashCode
    fullName: System.Attribute.GetHashCode
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Attribute.GetHashCode
    name: GetHashCode
    fullName: System.Attribute.GetHashCode
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Attribute.Match(System.Object)
  parent: System.Attribute
  isExternal: true
  name: Match(Object)
  fullName: System.Attribute.Match(System.Object)
  spec.csharp:
  - uid: System.Attribute.Match(System.Object)
    name: Match
    fullName: System.Attribute.Match
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Attribute.Match(System.Object)
    name: Match
    fullName: System.Attribute.Match
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Attribute.IsDefaultAttribute
  parent: System.Attribute
  isExternal: true
  name: IsDefaultAttribute()
  fullName: System.Attribute.IsDefaultAttribute()
  spec.csharp:
  - uid: System.Attribute.IsDefaultAttribute
    name: IsDefaultAttribute
    fullName: System.Attribute.IsDefaultAttribute
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Attribute.IsDefaultAttribute
    name: IsDefaultAttribute
    fullName: System.Attribute.IsDefaultAttribute
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)
  parent: System.Attribute
  isExternal: true
  name: _Attribute.GetTypeInfoCount(UInt32)
  fullName: System.Attribute.System.Runtime.InteropServices._Attribute.GetTypeInfoCount(System.UInt32)
  name.vb: System.Runtime.InteropServices._Attribute.GetTypeInfoCount(UInt32)
  spec.csharp:
  - uid: System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)
    name: _Attribute.GetTypeInfoCount
    fullName: System.Attribute.System.Runtime.InteropServices._Attribute.GetTypeInfoCount
    isExternal: true
  - name: (
    fullName: (
  - uid: System.UInt32
    name: UInt32
    fullName: System.UInt32
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)
    name: System.Runtime.InteropServices._Attribute.GetTypeInfoCount
    fullName: System.Attribute.System.Runtime.InteropServices._Attribute.GetTypeInfoCount
    isExternal: true
  - name: (
    fullName: (
  - uid: System.UInt32
    name: UInt32
    fullName: System.UInt32
    isExternal: true
  - name: )
    fullName: )
- uid: System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)
  parent: System.Attribute
  isExternal: true
  name: _Attribute.GetTypeInfo(UInt32, UInt32, IntPtr)
  fullName: System.Attribute.System.Runtime.InteropServices._Attribute.GetTypeInfo(System.UInt32, System.UInt32, System.IntPtr)
  name.vb: System.Runtime.InteropServices._Attribute.GetTypeInfo(UInt32, UInt32, IntPtr)
  spec.csharp:
  - uid: System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)
    name: _Attribute.GetTypeInfo
    fullName: System.Attribute.System.Runtime.InteropServices._Attribute.GetTypeInfo
    isExternal: true
  - name: (
    fullName: (
  - uid: System.UInt32
    name: UInt32
    fullName: System.UInt32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.UInt32
    name: UInt32
    fullName: System.UInt32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.IntPtr
    name: IntPtr
    fullName: System.IntPtr
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)
    name: System.Runtime.InteropServices._Attribute.GetTypeInfo
    fullName: System.Attribute.System.Runtime.InteropServices._Attribute.GetTypeInfo
    isExternal: true
  - name: (
    fullName: (
  - uid: System.UInt32
    name: UInt32
    fullName: System.UInt32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.UInt32
    name: UInt32
    fullName: System.UInt32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.IntPtr
    name: IntPtr
    fullName: System.IntPtr
    isExternal: true
  - name: )
    fullName: )
- uid: System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)
  parent: System.Attribute
  isExternal: true
  name: _Attribute.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)
  fullName: System.Attribute.System.Runtime.InteropServices._Attribute.GetIDsOfNames(System.Guid, System.IntPtr, System.UInt32, System.UInt32, System.IntPtr)
  name.vb: System.Runtime.InteropServices._Attribute.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)
  spec.csharp:
  - uid: System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)
    name: _Attribute.GetIDsOfNames
    fullName: System.Attribute.System.Runtime.InteropServices._Attribute.GetIDsOfNames
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Guid
    name: Guid
    fullName: System.Guid
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.IntPtr
    name: IntPtr
    fullName: System.IntPtr
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.UInt32
    name: UInt32
    fullName: System.UInt32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.UInt32
    name: UInt32
    fullName: System.UInt32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.IntPtr
    name: IntPtr
    fullName: System.IntPtr
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)
    name: System.Runtime.InteropServices._Attribute.GetIDsOfNames
    fullName: System.Attribute.System.Runtime.InteropServices._Attribute.GetIDsOfNames
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Guid
    name: Guid
    fullName: System.Guid
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.IntPtr
    name: IntPtr
    fullName: System.IntPtr
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.UInt32
    name: UInt32
    fullName: System.UInt32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.UInt32
    name: UInt32
    fullName: System.UInt32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.IntPtr
    name: IntPtr
    fullName: System.IntPtr
    isExternal: true
  - name: )
    fullName: )
- uid: System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
  parent: System.Attribute
  isExternal: true
  name: _Attribute.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)
  fullName: System.Attribute.System.Runtime.InteropServices._Attribute.Invoke(System.UInt32, System.Guid, System.UInt32, System.Int16, System.IntPtr, System.IntPtr, System.IntPtr, System.IntPtr)
  name.vb: System.Runtime.InteropServices._Attribute.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)
  spec.csharp:
  - uid: System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
    name: _Attribute.Invoke
    fullName: System.Attribute.System.Runtime.InteropServices._Attribute.Invoke
    isExternal: true
  - name: (
    fullName: (
  - uid: System.UInt32
    name: UInt32
    fullName: System.UInt32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Guid
    name: Guid
    fullName: System.Guid
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.UInt32
    name: UInt32
    fullName: System.UInt32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Int16
    name: Int16
    fullName: System.Int16
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.IntPtr
    name: IntPtr
    fullName: System.IntPtr
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.IntPtr
    name: IntPtr
    fullName: System.IntPtr
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.IntPtr
    name: IntPtr
    fullName: System.IntPtr
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.IntPtr
    name: IntPtr
    fullName: System.IntPtr
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
    name: System.Runtime.InteropServices._Attribute.Invoke
    fullName: System.Attribute.System.Runtime.InteropServices._Attribute.Invoke
    isExternal: true
  - name: (
    fullName: (
  - uid: System.UInt32
    name: UInt32
    fullName: System.UInt32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Guid
    name: Guid
    fullName: System.Guid
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.UInt32
    name: UInt32
    fullName: System.UInt32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Int16
    name: Int16
    fullName: System.Int16
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.IntPtr
    name: IntPtr
    fullName: System.IntPtr
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.IntPtr
    name: IntPtr
    fullName: System.IntPtr
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.IntPtr
    name: IntPtr
    fullName: System.IntPtr
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.IntPtr
    name: IntPtr
    fullName: System.IntPtr
    isExternal: true
  - name: )
    fullName: )
- uid: System.Attribute.TypeId
  parent: System.Attribute
  isExternal: true
  name: TypeId
  fullName: System.Attribute.TypeId
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Runtime.InteropServices
  isExternal: false
  name: System.Runtime.InteropServices
  fullName: System.Runtime.InteropServices
- uid: System.String
  parent: System
  isExternal: false
  name: String
  fullName: System.String
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  fullName: System.Type
- uid: System.Xml.Schema.XmlSchemaForm
  parent: System.Xml.Schema
  isExternal: false
  name: XmlSchemaForm
  fullName: System.Xml.Schema.XmlSchemaForm
- uid: System.Xml.Schema
  isExternal: false
  name: System.Xml.Schema
  fullName: System.Xml.Schema
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  fullName: System.Boolean
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  fullName: System.Int32
- uid: System.Exception
  parent: System
  isExternal: false
  name: Exception
  fullName: System.Exception
