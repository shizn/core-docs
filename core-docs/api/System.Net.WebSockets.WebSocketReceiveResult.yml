items:
- uid: System.Net.WebSockets.WebSocketReceiveResult
  commentId: T:System.Net.WebSockets.WebSocketReceiveResult
  id: WebSocketReceiveResult
  parent: System.Net.WebSockets
  children:
  - System.Net.WebSockets.WebSocketReceiveResult.#ctor(System.Int32,System.Net.WebSockets.WebSocketMessageType,System.Boolean)
  - System.Net.WebSockets.WebSocketReceiveResult.#ctor(System.Int32,System.Net.WebSockets.WebSocketMessageType,System.Boolean,System.Nullable{System.Net.WebSockets.WebSocketCloseStatus},System.String)
  - System.Net.WebSockets.WebSocketReceiveResult.CloseStatus
  - System.Net.WebSockets.WebSocketReceiveResult.CloseStatusDescription
  - System.Net.WebSockets.WebSocketReceiveResult.Count
  - System.Net.WebSockets.WebSocketReceiveResult.EndOfMessage
  - System.Net.WebSockets.WebSocketReceiveResult.MessageType
  langs:
  - csharp
  - vb
  name: WebSocketReceiveResult
  fullName: System.Net.WebSockets.WebSocketReceiveResult
  type: Class
  source:
    remote:
      path: src/System.Net.WebSockets/ref/System.Net.WebSockets.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: WebSocketReceiveResult
    path: src/System.Net.WebSockets/ref/System.Net.WebSockets.cs
    startLine: 73
  assemblies:
  - System.Net.WebSockets
  namespace: System.Net.WebSockets
  summary: "\n<p>An instance of this class represents the result of performing a single ReceiveAsync operation on a WebSocket.</p>\n"
  syntax:
    content: public class WebSocketReceiveResult
    content.vb: Public Class WebSocketReceiveResult
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: System.Net.WebSockets.WebSocketReceiveResult.#ctor(System.Int32,System.Net.WebSockets.WebSocketMessageType,System.Boolean)
  commentId: M:System.Net.WebSockets.WebSocketReceiveResult.#ctor(System.Int32,System.Net.WebSockets.WebSocketMessageType,System.Boolean)
  id: '#ctor(System.Int32,System.Net.WebSockets.WebSocketMessageType,System.Boolean)'
  parent: System.Net.WebSockets.WebSocketReceiveResult
  langs:
  - csharp
  - vb
  name: WebSocketReceiveResult(Int32, WebSocketMessageType, Boolean)
  fullName: System.Net.WebSockets.WebSocketReceiveResult.WebSocketReceiveResult(System.Int32, System.Net.WebSockets.WebSocketMessageType, System.Boolean)
  type: Constructor
  source:
    remote:
      path: src/System.Net.WebSockets/ref/System.Net.WebSockets.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Net.WebSockets/ref/System.Net.WebSockets.cs
    startLine: 75
  assemblies:
  - System.Net.WebSockets
  namespace: System.Net.WebSockets
  summary: "\n<p>Creates an instance of the <xref href=\"System.Net.WebSockets.WebSocketReceiveResult\" data-throw-if-not-resolved=\"false\"></xref> class.</p>\n"
  syntax:
    content: public WebSocketReceiveResult(int count, WebSocketMessageType messageType, bool endOfMessage)
    content.vb: Public Sub New(count As Integer, messageType As WebSocketMessageType, endOfMessage As Boolean)
    parameters:
    - id: count
      type: System.Int32
      description: "\n<p>The number of bytes received.</p>\n"
    - id: messageType
      type: System.Net.WebSockets.WebSocketMessageType
      description: "\n<p>The type of message that was received.</p>\n"
    - id: endOfMessage
      type: System.Boolean
      description: "\n<p>Indicates whether this is the final message.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Net.WebSockets.WebSocketReceiveResult.#ctor(System.Int32,System.Net.WebSockets.WebSocketMessageType,System.Boolean,System.Nullable{System.Net.WebSockets.WebSocketCloseStatus},System.String)
  commentId: M:System.Net.WebSockets.WebSocketReceiveResult.#ctor(System.Int32,System.Net.WebSockets.WebSocketMessageType,System.Boolean,System.Nullable{System.Net.WebSockets.WebSocketCloseStatus},System.String)
  id: '#ctor(System.Int32,System.Net.WebSockets.WebSocketMessageType,System.Boolean,System.Nullable{System.Net.WebSockets.WebSocketCloseStatus},System.String)'
  parent: System.Net.WebSockets.WebSocketReceiveResult
  langs:
  - csharp
  - vb
  name: WebSocketReceiveResult(Int32, WebSocketMessageType, Boolean, Nullable<WebSocketCloseStatus>, String)
  fullName: System.Net.WebSockets.WebSocketReceiveResult.WebSocketReceiveResult(System.Int32, System.Net.WebSockets.WebSocketMessageType, System.Boolean, System.Nullable<System.Net.WebSockets.WebSocketCloseStatus>, System.String)
  type: Constructor
  source:
    remote:
      path: src/System.Net.WebSockets/ref/System.Net.WebSockets.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Net.WebSockets/ref/System.Net.WebSockets.cs
    startLine: 76
  assemblies:
  - System.Net.WebSockets
  namespace: System.Net.WebSockets
  summary: "\n<p>Creates an instance of the <xref href=\"System.Net.WebSockets.WebSocketReceiveResult\" data-throw-if-not-resolved=\"false\"></xref> class.</p>\n"
  syntax:
    content: public WebSocketReceiveResult(int count, WebSocketMessageType messageType, bool endOfMessage, WebSocketCloseStatus? closeStatus, string closeStatusDescription)
    content.vb: Public Sub New(count As Integer, messageType As WebSocketMessageType, endOfMessage As Boolean, closeStatus As WebSocketCloseStatus?, closeStatusDescription As String)
    parameters:
    - id: count
      type: System.Int32
      description: "\n<p>The number of bytes received.</p>\n"
    - id: messageType
      type: System.Net.WebSockets.WebSocketMessageType
      description: "\n<p>The type of message that was received.</p>\n"
    - id: endOfMessage
      type: System.Boolean
      description: "\n<p>Indicates whether this is the final message.</p>\n"
    - id: closeStatus
      type: System.Nullable{System.Net.WebSockets.WebSocketCloseStatus}
      description: "\n<p>Indicates the <xref href=\"System.Net.WebSockets.WebSocketCloseStatus\" data-throw-if-not-resolved=\"false\"></xref> of the connection.</p>\n"
    - id: closeStatusDescription
      type: System.String
      description: "\n<p>The description of <em>closeStatus</em>.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Net.WebSockets.WebSocketReceiveResult.WebSocketReceiveResult(System.Int32, System.Net.WebSockets.WebSocketMessageType, System.Boolean, System.Nullable(Of System.Net.WebSockets.WebSocketCloseStatus), System.String)
  name.vb: WebSocketReceiveResult(Int32, WebSocketMessageType, Boolean, Nullable(Of WebSocketCloseStatus), String)
- uid: System.Net.WebSockets.WebSocketReceiveResult.CloseStatus
  commentId: P:System.Net.WebSockets.WebSocketReceiveResult.CloseStatus
  id: CloseStatus
  parent: System.Net.WebSockets.WebSocketReceiveResult
  langs:
  - csharp
  - vb
  name: CloseStatus
  fullName: System.Net.WebSockets.WebSocketReceiveResult.CloseStatus
  type: Property
  source:
    remote:
      path: src/System.Net.WebSockets/ref/System.Net.WebSockets.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CloseStatus
    path: src/System.Net.WebSockets/ref/System.Net.WebSockets.cs
    startLine: 77
  assemblies:
  - System.Net.WebSockets
  namespace: System.Net.WebSockets
  summary: "\n<p>Indicates the reason why the remote endpoint initiated the close handshake.</p>\n"
  syntax:
    content: public WebSocketCloseStatus? CloseStatus { get; }
    content.vb: Public ReadOnly Property CloseStatus As WebSocketCloseStatus?
    parameters: []
    return:
      type: System.Nullable{System.Net.WebSockets.WebSocketCloseStatus}
      description: "\n<p>Returns <xref href=\"System.Net.WebSockets.WebSocketCloseStatus\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Net.WebSockets.WebSocketReceiveResult.CloseStatusDescription
  commentId: P:System.Net.WebSockets.WebSocketReceiveResult.CloseStatusDescription
  id: CloseStatusDescription
  parent: System.Net.WebSockets.WebSocketReceiveResult
  langs:
  - csharp
  - vb
  name: CloseStatusDescription
  fullName: System.Net.WebSockets.WebSocketReceiveResult.CloseStatusDescription
  type: Property
  source:
    remote:
      path: src/System.Net.WebSockets/ref/System.Net.WebSockets.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CloseStatusDescription
    path: src/System.Net.WebSockets/ref/System.Net.WebSockets.cs
    startLine: 78
  assemblies:
  - System.Net.WebSockets
  namespace: System.Net.WebSockets
  summary: "\n<p>Returns the optional description that describes why the close handshake has been initiated by the remote endpoint.</p>\n"
  syntax:
    content: public string CloseStatusDescription { get; }
    content.vb: Public ReadOnly Property CloseStatusDescription As String
    parameters: []
    return:
      type: System.String
      description: "\n<p>Returns <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Net.WebSockets.WebSocketReceiveResult.Count
  commentId: P:System.Net.WebSockets.WebSocketReceiveResult.Count
  id: Count
  parent: System.Net.WebSockets.WebSocketReceiveResult
  langs:
  - csharp
  - vb
  name: Count
  fullName: System.Net.WebSockets.WebSocketReceiveResult.Count
  type: Property
  source:
    remote:
      path: src/System.Net.WebSockets/ref/System.Net.WebSockets.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Count
    path: src/System.Net.WebSockets/ref/System.Net.WebSockets.cs
    startLine: 79
  assemblies:
  - System.Net.WebSockets
  namespace: System.Net.WebSockets
  summary: "\n<p>Indicates the number of bytes that the WebSocket received.</p>\n"
  remarks: "\n<p>Count can be 0 in two cases:</p>\n<ol><li>\n<p>The WebSocket received an empty message. In this case the <xref href=\"System.Net.WebSockets.WebSocketReceiveResult.CloseStatus\" data-throw-if-not-resolved=\"false\"></xref> property is None.</p>\n</li><li>\n<p>The WebSocket received a close message was received from the remote endpoint. In this case the <xref href=\"System.Net.WebSockets.WebSocketReceiveResult.CloseStatus\" data-throw-if-not-resolved=\"false\"></xref> property is set to a value other than None.</p>\n</li></ol>\n"
  syntax:
    content: public int Count { get; }
    content.vb: Public ReadOnly Property Count As Integer
    parameters: []
    return:
      type: System.Int32
      description: "\n<p>Returns <xref href=\"System.Int32\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Net.WebSockets.WebSocketReceiveResult.EndOfMessage
  commentId: P:System.Net.WebSockets.WebSocketReceiveResult.EndOfMessage
  id: EndOfMessage
  parent: System.Net.WebSockets.WebSocketReceiveResult
  langs:
  - csharp
  - vb
  name: EndOfMessage
  fullName: System.Net.WebSockets.WebSocketReceiveResult.EndOfMessage
  type: Property
  source:
    remote:
      path: src/System.Net.WebSockets/ref/System.Net.WebSockets.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: EndOfMessage
    path: src/System.Net.WebSockets/ref/System.Net.WebSockets.cs
    startLine: 80
  assemblies:
  - System.Net.WebSockets
  namespace: System.Net.WebSockets
  summary: "\n<p>Indicates whether the message has been received completely.</p>\n"
  syntax:
    content: public bool EndOfMessage { get; }
    content.vb: Public ReadOnly Property EndOfMessage As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: "\n<p>Returns <xref href=\"System.Boolean\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Net.WebSockets.WebSocketReceiveResult.MessageType
  commentId: P:System.Net.WebSockets.WebSocketReceiveResult.MessageType
  id: MessageType
  parent: System.Net.WebSockets.WebSocketReceiveResult
  langs:
  - csharp
  - vb
  name: MessageType
  fullName: System.Net.WebSockets.WebSocketReceiveResult.MessageType
  type: Property
  source:
    remote:
      path: src/System.Net.WebSockets/ref/System.Net.WebSockets.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: MessageType
    path: src/System.Net.WebSockets/ref/System.Net.WebSockets.cs
    startLine: 81
  assemblies:
  - System.Net.WebSockets
  namespace: System.Net.WebSockets
  summary: "\n<p>Indicates whether the current message is a UTF-8 message or a binary message.</p>\n"
  syntax:
    content: public WebSocketMessageType MessageType { get; }
    content.vb: Public ReadOnly Property MessageType As WebSocketMessageType
    parameters: []
    return:
      type: System.Net.WebSockets.WebSocketMessageType
      description: "\n<p>Returns <xref href=\"System.Net.WebSockets.WebSocketMessageType\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: System.Net.WebSockets
  isExternal: false
  name: System.Net.WebSockets
  fullName: System.Net.WebSockets
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  fullName: System.Int32
- uid: System.Net.WebSockets.WebSocketMessageType
  parent: System.Net.WebSockets
  isExternal: false
  name: WebSocketMessageType
  fullName: System.Net.WebSockets.WebSocketMessageType
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  fullName: System.Boolean
- uid: System.Nullable{System.Net.WebSockets.WebSocketCloseStatus}
  parent: System
  definition: System.Nullable`1
  name: Nullable<WebSocketCloseStatus>
  fullName: System.Nullable<System.Net.WebSockets.WebSocketCloseStatus>
  fullname.vb: System.Nullable(Of System.Net.WebSockets.WebSocketCloseStatus)
  name.vb: Nullable(Of WebSocketCloseStatus)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Net.WebSockets.WebSocketCloseStatus
    name: WebSocketCloseStatus
    fullName: System.Net.WebSockets.WebSocketCloseStatus
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Net.WebSockets.WebSocketCloseStatus
    name: WebSocketCloseStatus
    fullName: System.Net.WebSockets.WebSocketCloseStatus
  - name: )
    fullName: )
- uid: System.String
  parent: System
  isExternal: false
  name: String
  fullName: System.String
- uid: System.Nullable`1
  parent: System
  isExternal: false
  name: Nullable<T>
  fullName: System.Nullable<T>
  fullname.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
