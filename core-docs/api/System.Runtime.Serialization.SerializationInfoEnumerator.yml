items:
- uid: System.Runtime.Serialization.SerializationInfoEnumerator
  commentId: T:System.Runtime.Serialization.SerializationInfoEnumerator
  id: SerializationInfoEnumerator
  parent: System.Runtime.Serialization
  children:
  - System.Runtime.Serialization.SerializationInfoEnumerator.Current
  - System.Runtime.Serialization.SerializationInfoEnumerator.MoveNext
  - System.Runtime.Serialization.SerializationInfoEnumerator.Name
  - System.Runtime.Serialization.SerializationInfoEnumerator.ObjectType
  - System.Runtime.Serialization.SerializationInfoEnumerator.Reset
  - System.Runtime.Serialization.SerializationInfoEnumerator.System#Collections#IEnumerator#Current
  - System.Runtime.Serialization.SerializationInfoEnumerator.Value
  langs:
  - csharp
  - vb
  name: SerializationInfoEnumerator
  fullName: System.Runtime.Serialization.SerializationInfoEnumerator
  type: Class
  source:
    remote:
      path: src/mscorlib/src/System/Runtime/Serialization/SerializationInfoEnumerator.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: SerializationInfoEnumerator
    path: src/mscorlib/src/System/Runtime/Serialization/SerializationInfoEnumerator.cs
    startLine: 58
  assemblies:
  - System.Runtime.Serialization.Formatters
  namespace: System.Runtime.Serialization
  summary: "\n<p>Provides a formatter-friendly mechanism for parsing the data in <xref href=\"System.Runtime.Serialization.SerializationInfo\" data-throw-if-not-resolved=\"false\"></xref>. This class cannot be inherited.</p>\n"
  remarks: "\n<p>The current class is a standard enumerator that parses over the values stored in <xref href=\"System.Runtime.Serialization.SerializationInfo\" data-throw-if-not-resolved=\"false\"></xref>. Instead of recording the values, the <xref href=\"System.Runtime.Serialization.SerializationInfoEnumerator\" data-throw-if-not-resolved=\"false\"></xref> keeps pointers to the member variables of the <xref href=\"System.Runtime.Serialization.SerializationInfo\" data-throw-if-not-resolved=\"false\"></xref> that created it.</p>\n<p>This class follows the <xref href=\"System.Collections.IEnumerator\" data-throw-if-not-resolved=\"false\"></xref> mechanism.</p>\n"
  example:
  - "\n<p>The following code example shows how to use the <xref href=\"System.Runtime.Serialization.FormatterServices\" data-throw-if-not-resolved=\"false\"></xref> class in order to properly serialize or deserialize an object where the base class does not implement <xref href=\"System.Runtime.Serialization.ISerializable\" data-throw-if-not-resolved=\"false\"></xref> but the derived class does.</p>FormatterServices#1"
  syntax:
    content: >-
      [ComVisible(true)]

      public sealed class SerializationInfoEnumerator : IEnumerator
    content.vb: >-
      <ComVisible(True)>

      Public NotInheritable Class SerializationInfoEnumerator
          Implements IEnumerator
  seealso:
  - type: System.Collections.IEnumerator
    commentId: T:System.Collections.IEnumerator
  - type: System.Runtime.Serialization.SerializationInfo
    commentId: T:System.Runtime.Serialization.SerializationInfo
  inheritance:
  - System.Object
  implements:
  - System.Collections.IEnumerator
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: System.Runtime.Serialization.SerializationInfoEnumerator.Current
  commentId: P:System.Runtime.Serialization.SerializationInfoEnumerator.Current
  id: Current
  parent: System.Runtime.Serialization.SerializationInfoEnumerator
  langs:
  - csharp
  - vb
  name: Current
  fullName: System.Runtime.Serialization.SerializationInfoEnumerator.Current
  type: Property
  source:
    remote:
      path: src/mscorlib/src/System/Runtime/Serialization/SerializationInfoEnumerator.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Current
    path: src/mscorlib/src/System/Runtime/Serialization/SerializationInfoEnumerator.cs
    startLine: 106
  assemblies:
  - System.Runtime.Serialization.Formatters
  namespace: System.Runtime.Serialization
  summary: "\n<p>Gets the item currently being examined.</p>\n"
  syntax:
    content: public SerializationEntry Current { get; }
    content.vb: Public ReadOnly Property Current As SerializationEntry
    parameters: []
    return:
      type: System.Runtime.Serialization.SerializationEntry
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "\n<p>The enumerator has not started enumerating items or has reached the end of the enumeration. </p>\n"
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Runtime.Serialization.SerializationInfoEnumerator.Name
  commentId: P:System.Runtime.Serialization.SerializationInfoEnumerator.Name
  id: Name
  parent: System.Runtime.Serialization.SerializationInfoEnumerator
  langs:
  - csharp
  - vb
  name: Name
  fullName: System.Runtime.Serialization.SerializationInfoEnumerator.Name
  type: Property
  source:
    remote:
      path: src/mscorlib/src/System/Runtime/Serialization/SerializationInfoEnumerator.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Name
    path: src/mscorlib/src/System/Runtime/Serialization/SerializationInfoEnumerator.cs
    startLine: 120
  assemblies:
  - System.Runtime.Serialization.Formatters
  namespace: System.Runtime.Serialization
  summary: "\n<p>Gets the name for the item currently being examined.</p>\n"
  example:
  - "\n<p>The following code example demonstrates the <xref href=\"System.Runtime.Serialization.SerializationInfoEnumerator.Name\" data-throw-if-not-resolved=\"false\"></xref> property. This code example is part of a larger example provided for the <xref href=\"System.Runtime.Serialization.SerializationInfo\" data-throw-if-not-resolved=\"false\"></xref> class.</p>FormatterServices#3"
  syntax:
    content: public string Name { get; }
    content.vb: Public ReadOnly Property Name As String
    parameters: []
    return:
      type: System.String
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "\n<p>The enumerator has not started enumerating items or has reached the end of the enumeration. </p>\n"
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Runtime.Serialization.SerializationInfoEnumerator.ObjectType
  commentId: P:System.Runtime.Serialization.SerializationInfoEnumerator.ObjectType
  id: ObjectType
  parent: System.Runtime.Serialization.SerializationInfoEnumerator
  langs:
  - csharp
  - vb
  name: ObjectType
  fullName: System.Runtime.Serialization.SerializationInfoEnumerator.ObjectType
  type: Property
  source:
    remote:
      path: src/mscorlib/src/System/Runtime/Serialization/SerializationInfoEnumerator.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ObjectType
    path: src/mscorlib/src/System/Runtime/Serialization/SerializationInfoEnumerator.cs
    startLine: 136
  assemblies:
  - System.Runtime.Serialization.Formatters
  namespace: System.Runtime.Serialization
  summary: "\n<p>Gets the type of the item currently being examined.</p>\n"
  example:
  - "\n<p>The following code example demonstrates the <xref href=\"System.Runtime.Serialization.SerializationInfoEnumerator.ObjectType\" data-throw-if-not-resolved=\"false\"></xref> property. This code example is part of a larger example provided for the <xref href=\"System.Runtime.Serialization.SerializationInfo\" data-throw-if-not-resolved=\"false\"></xref> class.</p>FormatterServices#3"
  syntax:
    content: public Type ObjectType { get; }
    content.vb: Public ReadOnly Property ObjectType As Type
    parameters: []
    return:
      type: System.Type
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "\n<p>The enumerator has not started enumerating items or has reached the end of the enumeration. </p>\n"
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Runtime.Serialization.SerializationInfoEnumerator.System#Collections#IEnumerator#Current
  commentId: P:System.Runtime.Serialization.SerializationInfoEnumerator.System#Collections#IEnumerator#Current
  id: System#Collections#IEnumerator#Current
  isEii: true
  parent: System.Runtime.Serialization.SerializationInfoEnumerator
  langs:
  - csharp
  - vb
  name: IEnumerator.Current
  fullName: System.Runtime.Serialization.SerializationInfoEnumerator.System.Collections.IEnumerator.Current
  type: Property
  source:
    remote:
      path: src/mscorlib/src/System/Runtime/Serialization/SerializationInfoEnumerator.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: System.Collections.IEnumerator.Current
    path: src/mscorlib/src/System/Runtime/Serialization/SerializationInfoEnumerator.cs
    startLine: 97
  assemblies:
  - System.Runtime.Serialization.Formatters
  namespace: System.Runtime.Serialization
  summary: "\n<p>Gets the current item in the collection.</p>\n"
  example:
  - 
  syntax:
    content: object IEnumerator.Current { get; }
    content.vb: ReadOnly WriteOnly Property System.Collections.IEnumerator.Current As Object Implements IEnumerator.Current
    parameters: []
    return:
      type: System.Object
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "\n<p>The enumeration has not started or has already ended. </p>\n"
  implements:
  - System.Collections.IEnumerator.Current
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
  name.vb: System.Collections.IEnumerator.Current
- uid: System.Runtime.Serialization.SerializationInfoEnumerator.Value
  commentId: P:System.Runtime.Serialization.SerializationInfoEnumerator.Value
  id: Value
  parent: System.Runtime.Serialization.SerializationInfoEnumerator
  langs:
  - csharp
  - vb
  name: Value
  fullName: System.Runtime.Serialization.SerializationInfoEnumerator.Value
  type: Property
  source:
    remote:
      path: src/mscorlib/src/System/Runtime/Serialization/SerializationInfoEnumerator.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Value
    path: src/mscorlib/src/System/Runtime/Serialization/SerializationInfoEnumerator.cs
    startLine: 128
  assemblies:
  - System.Runtime.Serialization.Formatters
  namespace: System.Runtime.Serialization
  summary: "\n<p>Gets the value of the item currently being examined.</p>\n"
  example:
  - "\n<p>The following code example demonstrates the <xref href=\"System.Runtime.Serialization.SerializationInfoEnumerator.Value\" data-throw-if-not-resolved=\"false\"></xref> property. This code example is part of a larger example provided for the <xref href=\"System.Runtime.Serialization.SerializationInfo\" data-throw-if-not-resolved=\"false\"></xref> class.</p>FormatterServices#3"
  syntax:
    content: public object Value { get; }
    content.vb: Public ReadOnly Property Value As Object
    parameters: []
    return:
      type: System.Object
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "\n<p>The enumerator has not started enumerating items or has reached the end of the enumeration. </p>\n"
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Runtime.Serialization.SerializationInfoEnumerator.MoveNext
  commentId: M:System.Runtime.Serialization.SerializationInfoEnumerator.MoveNext
  id: MoveNext
  parent: System.Runtime.Serialization.SerializationInfoEnumerator
  langs:
  - csharp
  - vb
  name: MoveNext()
  fullName: System.Runtime.Serialization.SerializationInfoEnumerator.MoveNext()
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Runtime/Serialization/SerializationInfoEnumerator.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: MoveNext
    path: src/mscorlib/src/System/Runtime/Serialization/SerializationInfoEnumerator.cs
    startLine: 86
  assemblies:
  - System.Runtime.Serialization.Formatters
  namespace: System.Runtime.Serialization
  summary: "\n<p>Updates the enumerator to the next item.</p>\n"
  remarks: "\n<p>To initialize the enumerator, call <xref href=\"System.Runtime.Serialization.SerializationInfoEnumerator.MoveNext\" data-throw-if-not-resolved=\"false\"></xref> and go through each item until you reach the last element.</p>\n"
  example:
  - "\n<p>The following code example demonstrates calling the <xref href=\"System.Runtime.Serialization.SerializationInfoEnumerator.MoveNext\" data-throw-if-not-resolved=\"false\"></xref> method. This code example is part of a larger example provided for the <xref href=\"System.Runtime.Serialization.SerializationInfo\" data-throw-if-not-resolved=\"false\"></xref> class.</p>FormatterServices#3"
  syntax:
    content: public bool MoveNext()
    content.vb: Public Function MoveNext As Boolean
    return:
      type: System.Boolean
  implements:
  - System.Collections.IEnumerator.MoveNext
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Runtime.Serialization.SerializationInfoEnumerator.Reset
  commentId: M:System.Runtime.Serialization.SerializationInfoEnumerator.Reset
  id: Reset
  parent: System.Runtime.Serialization.SerializationInfoEnumerator
  langs:
  - csharp
  - vb
  name: Reset()
  fullName: System.Runtime.Serialization.SerializationInfoEnumerator.Reset()
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Runtime/Serialization/SerializationInfoEnumerator.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Reset
    path: src/mscorlib/src/System/Runtime/Serialization/SerializationInfoEnumerator.cs
    startLine: 115
  assemblies:
  - System.Runtime.Serialization.Formatters
  namespace: System.Runtime.Serialization
  summary: "\n<p>Resets the enumerator to the first item.</p>\n"
  remarks: "\n<p>After calling this method, the <xref href=\"System.Runtime.Serialization.SerializationInfoEnumerator.Current\" data-throw-if-not-resolved=\"false\"></xref> property will contain the first item in the current set of elements.</p>\n"
  syntax:
    content: public void Reset()
    content.vb: Public Sub Reset
  implements:
  - System.Collections.IEnumerator.Reset
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: System.Runtime.Serialization
  isExternal: false
  name: System.Runtime.Serialization
  fullName: System.Runtime.Serialization
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: false
  name: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Collections
  isExternal: false
  name: System.Collections
  fullName: System.Collections
- uid: System.Runtime.Serialization.SerializationEntry
  parent: System.Runtime.Serialization
  isExternal: false
  name: SerializationEntry
  fullName: System.Runtime.Serialization.SerializationEntry
- uid: System.String
  parent: System
  isExternal: false
  name: String
  fullName: System.String
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  fullName: System.Type
- uid: System.Collections.IEnumerator.Current
  parent: System.Collections.IEnumerator
  isExternal: false
  name: Current
  fullName: System.Collections.IEnumerator.Current
- uid: System.Collections.IEnumerator.MoveNext
  parent: System.Collections.IEnumerator
  isExternal: false
  name: MoveNext()
  fullName: System.Collections.IEnumerator.MoveNext()
  spec.csharp:
  - uid: System.Collections.IEnumerator.MoveNext
    name: MoveNext
    fullName: System.Collections.IEnumerator.MoveNext
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Collections.IEnumerator.MoveNext
    name: MoveNext
    fullName: System.Collections.IEnumerator.MoveNext
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  fullName: System.Boolean
- uid: System.Collections.IEnumerator.Reset
  parent: System.Collections.IEnumerator
  isExternal: false
  name: Reset()
  fullName: System.Collections.IEnumerator.Reset()
  spec.csharp:
  - uid: System.Collections.IEnumerator.Reset
    name: Reset
    fullName: System.Collections.IEnumerator.Reset
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Collections.IEnumerator.Reset
    name: Reset
    fullName: System.Collections.IEnumerator.Reset
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.InvalidOperationException
  parent: System
  isExternal: false
  name: InvalidOperationException
  fullName: System.InvalidOperationException
