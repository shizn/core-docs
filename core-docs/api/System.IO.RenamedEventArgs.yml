items:
- uid: System.IO.RenamedEventArgs
  commentId: T:System.IO.RenamedEventArgs
  id: RenamedEventArgs
  parent: System.IO
  children:
  - System.IO.RenamedEventArgs.#ctor(System.IO.WatcherChangeTypes,System.String,System.String,System.String)
  - System.IO.RenamedEventArgs.OldFullPath
  - System.IO.RenamedEventArgs.OldName
  langs:
  - csharp
  - vb
  name: RenamedEventArgs
  fullName: System.IO.RenamedEventArgs
  type: Class
  source:
    remote:
      path: src/System.IO.FileSystem.Watcher/ref/System.IO.FileSystem.Watcher.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: RenamedEventArgs
    path: src/System.IO.FileSystem.Watcher/ref/System.IO.FileSystem.Watcher.cs
    startLine: 60
  assemblies:
  - System.IO.FileSystem.Watcher
  namespace: System.IO
  summary: "\n<p>Provides data for the <xref href=\"System.IO.FileSystemWatcher.Renamed\" data-throw-if-not-resolved=\"false\"></xref> event.</p>\n"
  remarks: "\n<p>This class inherits from <xref href=\"System.IO.FileSystemEventArgs\" data-throw-if-not-resolved=\"false\"></xref> and extends it by adding an old name field and an old full path field to specify the previous name and full path of the affected file or directory.</p>\n"
  example:
  - "\n<p>The following example shows how to create a FileSystemWatcher to monitor file changes (creates, deletes, renames, changes) occurring on a disk drive. The example also shows how to properly receive error notifications.</p>FileSystemWatcher#1"
  syntax:
    content: 'public class RenamedEventArgs : FileSystemEventArgs'
    content.vb: >-
      Public Class RenamedEventArgs
          Inherits FileSystemEventArgs
  seealso:
  - type: System.IO.FileSystemEventArgs
    commentId: T:System.IO.FileSystemEventArgs
  - type: System.IO.FileSystemEventHandler
    commentId: T:System.IO.FileSystemEventHandler
  - type: System.IO.FileSystemWatcher
    commentId: T:System.IO.FileSystemWatcher
  - type: System.IO.InternalBufferOverflowException
    commentId: T:System.IO.InternalBufferOverflowException
  - type: System.IO.NotifyFilters
    commentId: T:System.IO.NotifyFilters
  - type: System.IO.FileSystemWatcher.OnRenamed(System.IO.RenamedEventArgs)
    commentId: M:System.IO.FileSystemWatcher.OnRenamed(System.IO.RenamedEventArgs)
  - type: System.IO.FileSystemWatcher.Renamed
    commentId: E:System.IO.FileSystemWatcher.Renamed
  - type: System.IO.RenamedEventHandler
    commentId: T:System.IO.RenamedEventHandler
  - type: System.IO.WaitForChangedResult
    commentId: T:System.IO.WaitForChangedResult
  - type: System.IO.WatcherChangeTypes
    commentId: T:System.IO.WatcherChangeTypes
  inheritance:
  - System.Object
  - System.EventArgs
  - System.IO.FileSystemEventArgs
  inheritedMembers:
  - System.IO.FileSystemEventArgs.ChangeType
  - System.IO.FileSystemEventArgs.FullPath
  - System.IO.FileSystemEventArgs.Name
  - System.EventArgs.Empty
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: System.IO.RenamedEventArgs.#ctor(System.IO.WatcherChangeTypes,System.String,System.String,System.String)
  commentId: M:System.IO.RenamedEventArgs.#ctor(System.IO.WatcherChangeTypes,System.String,System.String,System.String)
  id: '#ctor(System.IO.WatcherChangeTypes,System.String,System.String,System.String)'
  parent: System.IO.RenamedEventArgs
  langs:
  - csharp
  - vb
  name: RenamedEventArgs(WatcherChangeTypes, String, String, String)
  fullName: System.IO.RenamedEventArgs.RenamedEventArgs(System.IO.WatcherChangeTypes, System.String, System.String, System.String)
  type: Constructor
  source:
    remote:
      path: src/System.IO.FileSystem.Watcher/ref/System.IO.FileSystem.Watcher.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.IO.FileSystem.Watcher/ref/System.IO.FileSystem.Watcher.cs
    startLine: 62
  assemblies:
  - System.IO.FileSystem.Watcher
  namespace: System.IO
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.IO.RenamedEventArgs\" data-throw-if-not-resolved=\"false\"></xref> class.</p>\n"
  remarks: "\n<p>This class inherits from the <xref href=\"System.IO.FileSystemEventArgs\" data-throw-if-not-resolved=\"false\"></xref> class and extends it by adding an old name field to specify the previous name of the file or directory affected.</p>\n"
  syntax:
    content: public RenamedEventArgs(WatcherChangeTypes changeType, string directory, string name, string oldName)
    content.vb: Public Sub New(changeType As WatcherChangeTypes, directory As String, name As String, oldName As String)
    parameters:
    - id: changeType
      type: System.IO.WatcherChangeTypes
      description: "\n<p>One of the <xref href=\"System.IO.WatcherChangeTypes\" data-throw-if-not-resolved=\"false\"></xref> values. </p>\n"
    - id: directory
      type: System.String
      description: "\n<p>The name of the affected file or directory. </p>\n"
    - id: name
      type: System.String
      description: "\n<p>The name of the affected file or directory. </p>\n"
    - id: oldName
      type: System.String
      description: "\n<p>The old name of the affected file or directory. </p>\n"
  seealso:
  - type: System.IO.FileSystemEventArgs
    commentId: T:System.IO.FileSystemEventArgs
  - type: System.IO.WatcherChangeTypes
    commentId: T:System.IO.WatcherChangeTypes
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.IO.RenamedEventArgs.OldFullPath
  commentId: P:System.IO.RenamedEventArgs.OldFullPath
  id: OldFullPath
  parent: System.IO.RenamedEventArgs
  langs:
  - csharp
  - vb
  name: OldFullPath
  fullName: System.IO.RenamedEventArgs.OldFullPath
  type: Property
  source:
    remote:
      path: src/System.IO.FileSystem.Watcher/ref/System.IO.FileSystem.Watcher.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: OldFullPath
    path: src/System.IO.FileSystem.Watcher/ref/System.IO.FileSystem.Watcher.cs
    startLine: 63
  assemblies:
  - System.IO.FileSystem.Watcher
  namespace: System.IO
  summary: "\n<p>Gets the previous fully qualified path of the affected file or directory.</p>\n"
  example:
  - "\n<p>The following example demonstrates the <xref href=\"System.IO.RenamedEventArgs.OldFullPath\" data-throw-if-not-resolved=\"false\"></xref> property. This code example is part of a larger example provided for the <xref href=\"System.IO.RenamedEventArgs\" data-throw-if-not-resolved=\"false\"></xref> class.</p>FileSystemWatcher#8"
  syntax:
    content: public string OldFullPath { get; }
    content.vb: Public ReadOnly Property OldFullPath As String
    parameters: []
    return:
      type: System.String
      description: "\n<p>The previous fully qualified path of the affected file or directory.</p>\n"
  see:
  - type: System.Security.Permissions.FileIOPermission
    commentId: T:System.Security.Permissions.FileIOPermission
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.IO.RenamedEventArgs.OldName
  commentId: P:System.IO.RenamedEventArgs.OldName
  id: OldName
  parent: System.IO.RenamedEventArgs
  langs:
  - csharp
  - vb
  name: OldName
  fullName: System.IO.RenamedEventArgs.OldName
  type: Property
  source:
    remote:
      path: src/System.IO.FileSystem.Watcher/ref/System.IO.FileSystem.Watcher.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: OldName
    path: src/System.IO.FileSystem.Watcher/ref/System.IO.FileSystem.Watcher.cs
    startLine: 64
  assemblies:
  - System.IO.FileSystem.Watcher
  namespace: System.IO
  summary: "\n<p>Gets the old name of the affected file or directory.</p>\n"
  syntax:
    content: public string OldName { get; }
    content.vb: Public ReadOnly Property OldName As String
    parameters: []
    return:
      type: System.String
      description: "\n<p>The previous name of the affected file or directory.</p>\n"
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: System.IO
  isExternal: false
  name: System.IO
  fullName: System.IO
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System.EventArgs
  parent: System
  isExternal: false
  name: EventArgs
  fullName: System.EventArgs
- uid: System.IO.FileSystemEventArgs
  parent: System.IO
  isExternal: false
  name: FileSystemEventArgs
  fullName: System.IO.FileSystemEventArgs
- uid: System.IO.FileSystemEventArgs.ChangeType
  parent: System.IO.FileSystemEventArgs
  isExternal: false
  name: ChangeType
  fullName: System.IO.FileSystemEventArgs.ChangeType
- uid: System.IO.FileSystemEventArgs.FullPath
  parent: System.IO.FileSystemEventArgs
  isExternal: false
  name: FullPath
  fullName: System.IO.FileSystemEventArgs.FullPath
- uid: System.IO.FileSystemEventArgs.Name
  parent: System.IO.FileSystemEventArgs
  isExternal: false
  name: Name
  fullName: System.IO.FileSystemEventArgs.Name
- uid: System.EventArgs.Empty
  parent: System.EventArgs
  isExternal: true
  name: Empty
  fullName: System.EventArgs.Empty
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.IO.WatcherChangeTypes
  parent: System.IO
  isExternal: false
  name: WatcherChangeTypes
  fullName: System.IO.WatcherChangeTypes
- uid: System.String
  parent: System
  isExternal: false
  name: String
  fullName: System.String
