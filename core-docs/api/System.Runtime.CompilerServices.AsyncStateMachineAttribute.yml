items:
- uid: System.Runtime.CompilerServices.AsyncStateMachineAttribute
  commentId: T:System.Runtime.CompilerServices.AsyncStateMachineAttribute
  id: AsyncStateMachineAttribute
  parent: System.Runtime.CompilerServices
  children:
  - System.Runtime.CompilerServices.AsyncStateMachineAttribute.#ctor(System.Type)
  langs:
  - csharp
  - vb
  name: AsyncStateMachineAttribute
  fullName: System.Runtime.CompilerServices.AsyncStateMachineAttribute
  type: Class
  source:
    remote:
      path: src/mscorlib/src/System/Runtime/CompilerServices/AsyncStateMachineAttribute.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: AsyncStateMachineAttribute
    path: src/mscorlib/src/System/Runtime/CompilerServices/AsyncStateMachineAttribute.cs
    startLine: 9
  assemblies:
  - System.Runtime
  namespace: System.Runtime.CompilerServices
  summary: "\n<p>Indicates whether a method is marked with either the Async (Visual Basic) or async (C# Reference) modifier.</p>\n"
  remarks: "\n<p>You shouldn't apply the AsyncStateMachine attribute to methods in your code. For methods that have the async modifier, the compiler will apply the AsyncStateMachine attribute in the IL that the compiler emits.</p>\n<p>When a method (MethodName) has the Async or async modifier, the compiler emits IL that includes a state machine structure. This structure contains the code in the method. That IL also contains a stub method (MethodName) that calls into the state machine. The compiler adds the AsyncStateMachine attribute to the stub method so that tools can identify the corresponding state machine. Details of the emitted IL might change in future releases of the compilers.</p>\n<p>For information about the Async feature, see Asynchronous Programming with Async and Await (C# and Visual Basic).</p>\n"
  example:
  - "\n<p>As the following example shows, you can determine whether a method is marked with Async (Visual Basic) or async (C# Reference) modifier. In the example, <code>IsAsyncMethod</code> performs the following steps:</p>\n<ul><li>\n<p>Obtains a <xref href=\"System.Reflection.MethodInfo\" data-throw-if-not-resolved=\"false\"></xref> object for the method name by using <xref href=\"System.Type.GetMethod(System.String)\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n</li><li>\n<p>Obtains a <xref href=\"System.Type\" data-throw-if-not-resolved=\"false\"></xref> object for the attribute by using GetType Operator (Visual Basic) or typeof (C# Reference).</p>\n</li><li>\n<p>Obtains an attribute object for the method and attribute type by using MethodInfo.GetCustomAttribute. If GetCustomAttribute returns <strong>Nothing</strong> (Visual Basic) or <strong>null</strong> (C#), the method doesn't contain the attribute.</p>\n</li></ul>Runtime.CompilerServices.AsyncStateMachineAttribute#1"
  syntax:
    content: >-
      [Serializable]

      [AttributeUsage(AttributeTargets.Method, Inherited = false, AllowMultiple = false)]

      public sealed class AsyncStateMachineAttribute : StateMachineAttribute, _Attribute
    content.vb: >-
      <Serializable>

      <AttributeUsage(AttributeTargets.Method, Inherited:=False, AllowMultiple:=False)>

      Public NotInheritable Class AsyncStateMachineAttribute
          Inherits StateMachineAttribute
          Implements _Attribute
  seealso:
  - type: System.Runtime.CompilerServices.IteratorStateMachineAttribute
    commentId: T:System.Runtime.CompilerServices.IteratorStateMachineAttribute
  - type: System.Runtime.CompilerServices.StateMachineAttribute.StateMachineType
    commentId: P:System.Runtime.CompilerServices.StateMachineAttribute.StateMachineType
  inheritance:
  - System.Object
  - System.Attribute
  - System.Runtime.CompilerServices.StateMachineAttribute
  inheritedMembers:
  - System.Runtime.CompilerServices.StateMachineAttribute.StateMachineType
  - System.Attribute.Equals(System.Object)
  - System.Attribute.GetHashCode
  - System.Object.ToString
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  attributes:
  - type: System.AttributeUsageAttribute
    ctor: System.AttributeUsageAttribute.#ctor(System.AttributeTargets)
    arguments:
    - type: System.AttributeTargets
      value: 64
    namedArguments:
    - name: Inherited
      type: System.Boolean
      value: false
    - name: AllowMultiple
      type: System.Boolean
      value: false
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: System.Runtime.CompilerServices.AsyncStateMachineAttribute.#ctor(System.Type)
  commentId: M:System.Runtime.CompilerServices.AsyncStateMachineAttribute.#ctor(System.Type)
  id: '#ctor(System.Type)'
  parent: System.Runtime.CompilerServices.AsyncStateMachineAttribute
  langs:
  - csharp
  - vb
  name: AsyncStateMachineAttribute(Type)
  fullName: System.Runtime.CompilerServices.AsyncStateMachineAttribute.AsyncStateMachineAttribute(System.Type)
  type: Constructor
  source:
    remote:
      path: src/mscorlib/src/System/Runtime/CompilerServices/AsyncStateMachineAttribute.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: .ctor
    path: src/mscorlib/src/System/Runtime/CompilerServices/AsyncStateMachineAttribute.cs
    startLine: 12
  assemblies:
  - System.Runtime
  namespace: System.Runtime.CompilerServices
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Runtime.CompilerServices.AsyncStateMachineAttribute\" data-throw-if-not-resolved=\"false\"></xref> class.</p>\n"
  syntax:
    content: public AsyncStateMachineAttribute(Type stateMachineType)
    content.vb: Public Sub New(stateMachineType As Type)
    parameters:
    - id: stateMachineType
      type: System.Type
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: System.Runtime.CompilerServices
  isExternal: false
  name: System.Runtime.CompilerServices
  fullName: System.Runtime.CompilerServices
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System.Attribute
  parent: System
  isExternal: false
  name: Attribute
  fullName: System.Attribute
- uid: System.Runtime.CompilerServices.StateMachineAttribute
  parent: System.Runtime.CompilerServices
  isExternal: false
  name: StateMachineAttribute
  fullName: System.Runtime.CompilerServices.StateMachineAttribute
- uid: System.Runtime.CompilerServices.StateMachineAttribute.StateMachineType
  parent: System.Runtime.CompilerServices.StateMachineAttribute
  isExternal: false
  name: StateMachineType
  fullName: System.Runtime.CompilerServices.StateMachineAttribute.StateMachineType
- uid: System.Attribute.Equals(System.Object)
  parent: System.Attribute
  isExternal: true
  name: Equals(Object)
  fullName: System.Attribute.Equals(System.Object)
  spec.csharp:
  - uid: System.Attribute.Equals(System.Object)
    name: Equals
    fullName: System.Attribute.Equals
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Attribute.Equals(System.Object)
    name: Equals
    fullName: System.Attribute.Equals
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Attribute.GetHashCode
  parent: System.Attribute
  isExternal: false
  name: GetHashCode()
  fullName: System.Attribute.GetHashCode()
  spec.csharp:
  - uid: System.Attribute.GetHashCode
    name: GetHashCode
    fullName: System.Attribute.GetHashCode
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Attribute.GetHashCode
    name: GetHashCode
    fullName: System.Attribute.GetHashCode
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  fullName: System.Type
