items:
- uid: System.IO.Packaging.PackageRelationship
  commentId: T:System.IO.Packaging.PackageRelationship
  id: PackageRelationship
  parent: System.IO.Packaging
  children:
  - System.IO.Packaging.PackageRelationship.Id
  - System.IO.Packaging.PackageRelationship.Package
  - System.IO.Packaging.PackageRelationship.RelationshipType
  - System.IO.Packaging.PackageRelationship.SourceUri
  - System.IO.Packaging.PackageRelationship.TargetMode
  - System.IO.Packaging.PackageRelationship.TargetUri
  langs:
  - csharp
  - vb
  name: PackageRelationship
  fullName: System.IO.Packaging.PackageRelationship
  type: Class
  source:
    remote:
      path: src/System.IO.Packaging/ref/System.IO.Packaging.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: PackageRelationship
    path: src/System.IO.Packaging/ref/System.IO.Packaging.cs
    startLine: 123
  assemblies:
  - System.IO.Packaging
  namespace: System.IO.Packaging
  summary: "\n<p>Represents an association between a source <xref href=\"System.IO.Packaging.Package\" data-throw-if-not-resolved=\"false\"></xref> or <xref href=\"System.IO.Packaging.PackagePart\" data-throw-if-not-resolved=\"false\"></xref>, and a target object which can be a <xref href=\"System.IO.Packaging.PackagePart\" data-throw-if-not-resolved=\"false\"></xref> or external resource.</p>\n"
  remarks: "\n<p>A <xref href=\"System.IO.Packaging.PackageRelationship\" data-throw-if-not-resolved=\"false\"></xref> defines an association between a <em>source</em> <xref href=\"System.IO.Packaging.Package\" data-throw-if-not-resolved=\"false\"></xref> or <xref href=\"System.IO.Packaging.PackagePart\" data-throw-if-not-resolved=\"false\"></xref> to a <em>target</em> <xref href=\"System.IO.Packaging.PackagePart\" data-throw-if-not-resolved=\"false\"></xref> or external resource.  The source object is considered the \"owner\" of the relationship.</p>\n<p>The <xref href=\"System.IO.Packaging.PackageRelationship\" data-throw-if-not-resolved=\"false\"></xref> class has no public constructor; instead, two Create methods are used:</p>\n<table><tbody><tr><td>\n<p>\n<xref href=\"System.IO.Packaging.Package\" data-throw-if-not-resolved=\"false\"></xref>.<see cref=\"Overload:System.IO.Packaging.Package.CreateRelationship\"></see></p>\n</td><td>\n<p>Creates a \"package-level\" relationship—from a package to a specified part or external resource.</p>\n</td></tr><tr><td>\n<p>\n<xref href=\"System.IO.Packaging.PackagePart\" data-throw-if-not-resolved=\"false\"></xref>.<see cref=\"Overload:System.IO.Packaging.PackagePart.CreateRelationship\"></see></p>\n</td><td>\n<p>Creates a \"part-level\" relationship—from one part to another part or external resource.</p>\n</td></tr></tbody></table>\n<p>The source package or part is identified by the <xref href=\"System.IO.Packaging.PackageRelationship.SourceUri\" data-throw-if-not-resolved=\"false\"></xref> property of the relationship.  The target part or external resource is identified by the <xref href=\"System.IO.Packaging.PackageRelationship.TargetUri\" data-throw-if-not-resolved=\"false\"></xref> property of the relationship.</p>\n<p>Creating or deleting a relationship does not affect the source or target objects in any way.</p>\n<p>If a source object is deleted, all relationships owned by the object are also deleted.</p>\n<p>Relationships enable navigation both in a document and between documents.  Relationships also support document object model services, such as linking a <xref href=\"System.Printing.PrintTicket\" data-throw-if-not-resolved=\"false\"></xref> to specific document elements when printing.</p>\n<p>For more information about <xref href=\"System.IO.Packaging.PackageRelationship\" data-throw-if-not-resolved=\"false\"></xref> elements see Section 1.3 \"Relationships\" in the <em>Open Packaging Conventions</em> specification available for download at <see href=\"http://go.microsoft.com/fwlink/?LinkID=71255\">http://go.microsoft.com/fwlink/?LinkID=71255</see>.</p>\n"
  example:
  - 
  syntax:
    content: public class PackageRelationship
    content.vb: Public Class PackageRelationship
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: System.IO.Packaging.PackageRelationship.Id
  commentId: P:System.IO.Packaging.PackageRelationship.Id
  id: Id
  parent: System.IO.Packaging.PackageRelationship
  langs:
  - csharp
  - vb
  name: Id
  fullName: System.IO.Packaging.PackageRelationship.Id
  type: Property
  source:
    remote:
      path: src/System.IO.Packaging/ref/System.IO.Packaging.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Id
    path: src/System.IO.Packaging/ref/System.IO.Packaging.cs
    startLine: 126
  assemblies:
  - System.IO.Packaging
  namespace: System.IO.Packaging
  summary: "\n<p>Gets a string that identifies the relationship.</p>\n"
  remarks: "\n<p>The <xref href=\"System.IO.Packaging.PackageRelationship.Id\" data-throw-if-not-resolved=\"false\"></xref> property string is unique for all relationships owned by the <xref href=\"System.IO.Packaging.PackageRelationship.SourceUri\" data-throw-if-not-resolved=\"false\"></xref> package or part.</p>\n<p>The <xref href=\"System.IO.Packaging.PackageRelationship.Id\" data-throw-if-not-resolved=\"false\"></xref> is specified in the call to the <strong>Package</strong>.<see cref=\"Overload:System.IO.Packaging.Package.CreateRelationship\"></see> or <strong>PackagePart</strong>.<see cref=\"Overload:System.IO.Packaging.PackagePart.CreateRelationship\"></see> method that created the relationship.  After the relationship is created, the <xref href=\"System.IO.Packaging.PackageRelationship.Id\" data-throw-if-not-resolved=\"false\"></xref> cannot be changed.</p>\n<p>The <xref href=\"System.IO.Packaging.PackageRelationship.Id\" data-throw-if-not-resolved=\"false\"></xref> property string is a valid XML identifier. The <xref href=\"System.IO.Packaging.PackageRelationship.Id\" data-throw-if-not-resolved=\"false\"></xref> type is xsd:ID and must follow the naming conventions prescribed in the <em>XML Schema Part 2: Datatypes</em> specification (see <see href=\"http://www.w3.org/TR/xmlschema-2/\">http://www.w3.org/TR/xmlschema-2/#ID</see>).</p>\n"
  example:
  - 
  syntax:
    content: public string Id { get; }
    content.vb: Public ReadOnly Property Id As String
    parameters: []
    return:
      type: System.String
      description: "\n<p>A string that identifies the relationship.</p>\n"
  seealso:
  - type: System.IO.Packaging.PackageRelationship.RelationshipType
    commentId: P:System.IO.Packaging.PackageRelationship.RelationshipType
  - type: System.IO.Packaging.PackageRelationship.SourceUri
    commentId: P:System.IO.Packaging.PackageRelationship.SourceUri
  - type: System.IO.Packaging.PackageRelationship.TargetUri
    commentId: P:System.IO.Packaging.PackageRelationship.TargetUri
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.IO.Packaging.PackageRelationship.Package
  commentId: P:System.IO.Packaging.PackageRelationship.Package
  id: Package
  parent: System.IO.Packaging.PackageRelationship
  langs:
  - csharp
  - vb
  name: Package
  fullName: System.IO.Packaging.PackageRelationship.Package
  type: Property
  source:
    remote:
      path: src/System.IO.Packaging/ref/System.IO.Packaging.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Package
    path: src/System.IO.Packaging/ref/System.IO.Packaging.cs
    startLine: 127
  assemblies:
  - System.IO.Packaging
  namespace: System.IO.Packaging
  summary: "\n<p>Gets the <xref href=\"System.IO.Packaging.Package\" data-throw-if-not-resolved=\"false\"></xref> that contains this relationship.</p>\n"
  remarks: "\n<p>For more information about <xref href=\"System.IO.Packaging.Package\" data-throw-if-not-resolved=\"false\"></xref> elements see the <em>Open Packaging Conventions</em> specification available for download at <see href=\"http://go.microsoft.com/fwlink/?LinkID=71255\">http://go.microsoft.com/fwlink/?LinkID=71255</see>.</p>\n"
  example:
  - 
  syntax:
    content: public Package Package { get; }
    content.vb: Public ReadOnly Property Package As Package
    parameters: []
    return:
      type: System.IO.Packaging.Package
      description: "\n<p>The package that contains this relationship.</p>\n"
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.IO.Packaging.PackageRelationship.RelationshipType
  commentId: P:System.IO.Packaging.PackageRelationship.RelationshipType
  id: RelationshipType
  parent: System.IO.Packaging.PackageRelationship
  langs:
  - csharp
  - vb
  name: RelationshipType
  fullName: System.IO.Packaging.PackageRelationship.RelationshipType
  type: Property
  source:
    remote:
      path: src/System.IO.Packaging/ref/System.IO.Packaging.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: RelationshipType
    path: src/System.IO.Packaging/ref/System.IO.Packaging.cs
    startLine: 128
  assemblies:
  - System.IO.Packaging
  namespace: System.IO.Packaging
  summary: "\n<p>Gets the qualified type name of the relationship. </p>\n"
  remarks: "\n<p>The <xref href=\"System.IO.Packaging.PackageRelationship.RelationshipType\" data-throw-if-not-resolved=\"false\"></xref> is specified in the call to the <strong>Package</strong>.<see cref=\"Overload:System.IO.Packaging.Package.CreateRelationship\"></see> or <strong>PackagePart</strong>.<see cref=\"Overload:System.IO.Packaging.PackagePart.CreateRelationship\"></see> method that created the relationship.  After the relationship is created, the <xref href=\"System.IO.Packaging.PackageRelationship.RelationshipType\" data-throw-if-not-resolved=\"false\"></xref> cannot be changed.</p>\n<p>\n<xref href=\"System.IO.Packaging.PackageRelationship.RelationshipType\" data-throw-if-not-resolved=\"false\"></xref> is defined in a URI-like syntax and identifies the role of the relationship. For example, \"http://schemas.microsoft.com/xps/2005/06/required-resource\" identifies the relationship to a target part that is a \"required-resource.\"</p>\n<p>\n<strong>Package-Wide Relationship Types</strong>\n</p>\n<p>Description</p>\n<p>Relationship Type</p>\n<table><tbody><tr><td>\n<p>Core Properties</p>\n</td><td>\n<p>http://schemas.microsoft.com/package/2006/relationships/metadata/core-properties</p>\n</td></tr><tr><td>\n<p>Digital Signature</p>\n</td><td>\n<p>http://schemas.microsoft.com/package/2006/relationships/digital-signature/signature</p>\n</td></tr><tr><td>\n<p>Digital Signature Certificate</p>\n</td><td>\n<p>http://schemas.microsoft.com/package/2006/relationships/digital-signature/certificate</p>\n</td></tr><tr><td>\n<p>Digital Signature Origin</p>\n</td><td>\n<p>http://schemas.microsoft.com/package/2006/relationships/digital-signature/origin</p>\n</td></tr><tr><td>\n<p>Thumbnail</p>\n</td><td>\n<p>http://schemas.microsoft.com/package/2006/relationships/metadata/thumbnail</p>\n</td></tr></tbody></table>\n<p>For more information about package relationship types see Chapter 3 and Appendix I of the <em>Open Packaging Conventions</em> specification available for download at <see href=\"http://go.microsoft.com/fwlink/?LinkID=71255\">http://go.microsoft.com/fwlink/?LinkID=71255</see>.</p>\n"
  example:
  - 
  syntax:
    content: public string RelationshipType { get; }
    content.vb: Public ReadOnly Property RelationshipType As String
    parameters: []
    return:
      type: System.String
      description: "\n<p>The qualified type name of the relationship.</p>\n"
  seealso:
  - type: System.IO.Packaging.PackageRelationship.Id
    commentId: P:System.IO.Packaging.PackageRelationship.Id
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.IO.Packaging.PackageRelationship.SourceUri
  commentId: P:System.IO.Packaging.PackageRelationship.SourceUri
  id: SourceUri
  parent: System.IO.Packaging.PackageRelationship
  langs:
  - csharp
  - vb
  name: SourceUri
  fullName: System.IO.Packaging.PackageRelationship.SourceUri
  type: Property
  source:
    remote:
      path: src/System.IO.Packaging/ref/System.IO.Packaging.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: SourceUri
    path: src/System.IO.Packaging/ref/System.IO.Packaging.cs
    startLine: 129
  assemblies:
  - System.IO.Packaging
  namespace: System.IO.Packaging
  summary: "\n<p>Gets the URI of the package or part that owns the relationship.</p>\n"
  remarks: "\n<p>If the relationship is owned by a <xref href=\"System.IO.Packaging.Package\" data-throw-if-not-resolved=\"false\"></xref>, <xref href=\"System.IO.Packaging.PackageRelationship.SourceUri\" data-throw-if-not-resolved=\"false\"></xref> returns a URI of \"/\".</p>\n<p>If the relationship is owned by a <xref href=\"System.IO.Packaging.PackagePart\" data-throw-if-not-resolved=\"false\"></xref>, <xref href=\"System.IO.Packaging.PackageRelationship.SourceUri\" data-throw-if-not-resolved=\"false\"></xref> returns the URI of the part.</p>\n"
  example:
  - 
  syntax:
    content: public Uri SourceUri { get; }
    content.vb: Public ReadOnly Property SourceUri As Uri
    parameters: []
    return:
      type: System.Uri
      description: "\n<p>The URI of the <xref href=\"System.IO.Packaging.Package\" data-throw-if-not-resolved=\"false\"></xref> or <xref href=\"System.IO.Packaging.PackagePart\" data-throw-if-not-resolved=\"false\"></xref> that owns the relationship.</p>\n"
  seealso:
  - type: System.IO.Packaging.PackageRelationship.TargetUri
    commentId: P:System.IO.Packaging.PackageRelationship.TargetUri
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.IO.Packaging.PackageRelationship.TargetMode
  commentId: P:System.IO.Packaging.PackageRelationship.TargetMode
  id: TargetMode
  parent: System.IO.Packaging.PackageRelationship
  langs:
  - csharp
  - vb
  name: TargetMode
  fullName: System.IO.Packaging.PackageRelationship.TargetMode
  type: Property
  source:
    remote:
      path: src/System.IO.Packaging/ref/System.IO.Packaging.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: TargetMode
    path: src/System.IO.Packaging/ref/System.IO.Packaging.cs
    startLine: 130
  assemblies:
  - System.IO.Packaging
  namespace: System.IO.Packaging
  summary: "\n<p>Gets a value that indicates whether the target of the relationship is <xref href=\"System.IO.Packaging.TargetMode.Internal\" data-throw-if-not-resolved=\"false\"></xref> or <xref href=\"System.IO.Packaging.TargetMode.External\" data-throw-if-not-resolved=\"false\"></xref> to the <xref href=\"System.IO.Packaging.Package\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  remarks: "\n<p>The <xref href=\"System.IO.Packaging.PackageRelationship.TargetMode\" data-throw-if-not-resolved=\"false\"></xref> is specified in the call to the <strong>Package</strong>.<see cref=\"Overload:System.IO.Packaging.Package.CreateRelationship\"></see> or <strong>PackagePart</strong>.<see cref=\"Overload:System.IO.Packaging.PackagePart.CreateRelationship\"></see> method that created the relationship. After the relationship is created the <xref href=\"System.IO.Packaging.PackageRelationship.TargetMode\" data-throw-if-not-resolved=\"false\"></xref> cannot be changed.</p>\n<p>When <xref href=\"System.IO.Packaging.PackageRelationship.TargetMode\" data-throw-if-not-resolved=\"false\"></xref> is <xref href=\"System.IO.Packaging.TargetMode.Internal\" data-throw-if-not-resolved=\"false\"></xref>, the <xref href=\"System.IO.Packaging.PackageRelationship.TargetUri\" data-throw-if-not-resolved=\"false\"></xref> MUST be a relative reference.  For a package-level relationship, the relative reference of the <xref href=\"System.IO.Packaging.PackageRelationship.TargetUri\" data-throw-if-not-resolved=\"false\"></xref> is resolved relative to the pack URI of the source package that owns and contains the relationship.  (Example source package pack URI: \"pack://http:,,www.adatum.com,files,datapak.package/\".)  For a part-level relationship, the <xref href=\"System.IO.Packaging.PackageRelationship.TargetUri\" data-throw-if-not-resolved=\"false\"></xref> is resolved relative to the source part that owns the relationship (<xref href=\"System.IO.Packaging.PackageRelationship.TargetUri\" data-throw-if-not-resolved=\"false\"></xref> is interpreted relative to <xref href=\"System.IO.Packaging.PackageRelationship.SourceUri\" data-throw-if-not-resolved=\"false\"></xref>).</p>\n<p>When <xref href=\"System.IO.Packaging.PackageRelationship.TargetMode\" data-throw-if-not-resolved=\"false\"></xref> is <xref href=\"System.IO.Packaging.TargetMode.External\" data-throw-if-not-resolved=\"false\"></xref>, the <xref href=\"System.IO.Packaging.PackageRelationship.TargetUri\" data-throw-if-not-resolved=\"false\"></xref> can be either a relative reference or a fully qualified URI.  If the <xref href=\"System.IO.Packaging.PackageRelationship.TargetUri\" data-throw-if-not-resolved=\"false\"></xref> is a relative reference, the reference is interpreted as relative to the location of the <xref href=\"System.IO.Packaging.Package\" data-throw-if-not-resolved=\"false\"></xref> that contains this relationship.</p>\n<p>For more information about <xref href=\"System.IO.Packaging.PackageRelationship.TargetMode\" data-throw-if-not-resolved=\"false\"></xref> see Section 1.3.3 \"Relationship Markup\" of the <em>Open Packaging Conventions</em> specification available for download at <see href=\"http://go.microsoft.com/fwlink/?LinkID=71255\">http://go.microsoft.com/fwlink/?LinkID=71255</see>.</p>\n"
  example:
  - 
  syntax:
    content: public TargetMode TargetMode { get; }
    content.vb: Public ReadOnly Property TargetMode As TargetMode
    parameters: []
    return:
      type: System.IO.Packaging.TargetMode
      description: "\n<p>An enumeration value that indicates whether <xref href=\"System.IO.Packaging.PackageRelationship.TargetUri\" data-throw-if-not-resolved=\"false\"></xref> references a resource <xref href=\"System.IO.Packaging.TargetMode.Internal\" data-throw-if-not-resolved=\"false\"></xref> or <xref href=\"System.IO.Packaging.TargetMode.External\" data-throw-if-not-resolved=\"false\"></xref> to the <xref href=\"System.IO.Packaging.Package\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  seealso:
  - type: System.IO.Packaging.PackageRelationship.TargetUri
    commentId: P:System.IO.Packaging.PackageRelationship.TargetUri
  - type: System.IO.Packaging.PackageRelationship.SourceUri
    commentId: P:System.IO.Packaging.PackageRelationship.SourceUri
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.IO.Packaging.PackageRelationship.TargetUri
  commentId: P:System.IO.Packaging.PackageRelationship.TargetUri
  id: TargetUri
  parent: System.IO.Packaging.PackageRelationship
  langs:
  - csharp
  - vb
  name: TargetUri
  fullName: System.IO.Packaging.PackageRelationship.TargetUri
  type: Property
  source:
    remote:
      path: src/System.IO.Packaging/ref/System.IO.Packaging.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: TargetUri
    path: src/System.IO.Packaging/ref/System.IO.Packaging.cs
    startLine: 131
  assemblies:
  - System.IO.Packaging
  namespace: System.IO.Packaging
  summary: "\n<p>Gets the URI of the target resource of the relationship.</p>\n"
  remarks: "\n<p>The <xref href=\"System.IO.Packaging.PackageRelationship.TargetUri\" data-throw-if-not-resolved=\"false\"></xref> is specified in the call to the <strong>Package</strong>.<see cref=\"Overload:System.IO.Packaging.Package.CreateRelationship\"></see> or <strong>PackagePart</strong>.<see cref=\"Overload:System.IO.Packaging.PackagePart.CreateRelationship\"></see> method that created the relationship. After the relationship is created the <xref href=\"System.IO.Packaging.PackageRelationship.TargetUri\" data-throw-if-not-resolved=\"false\"></xref> cannot be changed.</p>\n<p>When <xref href=\"System.IO.Packaging.PackageRelationship.TargetMode\" data-throw-if-not-resolved=\"false\"></xref> is <xref href=\"System.IO.Packaging.TargetMode.Internal\" data-throw-if-not-resolved=\"false\"></xref>, the <xref href=\"System.IO.Packaging.PackageRelationship.TargetUri\" data-throw-if-not-resolved=\"false\"></xref> MUST be a relative reference.  For a package-level relationship, the relative reference of the <xref href=\"System.IO.Packaging.PackageRelationship.TargetUri\" data-throw-if-not-resolved=\"false\"></xref> is resolved relative to the pack URI of the source package that owns and contains the relationship.  (Example source package pack URI: \"pack://http:,,www.adatum.com,files,datapak.package/\".)  For a part-level relationship, the <xref href=\"System.IO.Packaging.PackageRelationship.TargetUri\" data-throw-if-not-resolved=\"false\"></xref> is resolved relative to the source part that owns the relationship (<xref href=\"System.IO.Packaging.PackageRelationship.TargetUri\" data-throw-if-not-resolved=\"false\"></xref> is interpreted relative to <xref href=\"System.IO.Packaging.PackageRelationship.SourceUri\" data-throw-if-not-resolved=\"false\"></xref>).</p>\n<p>When <xref href=\"System.IO.Packaging.PackageRelationship.TargetMode\" data-throw-if-not-resolved=\"false\"></xref> is <xref href=\"System.IO.Packaging.TargetMode.External\" data-throw-if-not-resolved=\"false\"></xref>, the <xref href=\"System.IO.Packaging.PackageRelationship.TargetUri\" data-throw-if-not-resolved=\"false\"></xref> can be either a relative reference or a fully qualified URI.  If the <xref href=\"System.IO.Packaging.PackageRelationship.TargetUri\" data-throw-if-not-resolved=\"false\"></xref> is a relative reference, the reference is interpreted as relative to the location of the <xref href=\"System.IO.Packaging.Package\" data-throw-if-not-resolved=\"false\"></xref> that contains this relationship.</p>\n<p>For more information about <xref href=\"System.IO.Packaging.PackageRelationship.TargetUri\" data-throw-if-not-resolved=\"false\"></xref> see Section 1.3.3 \"Relationship Markup\" of the <em>Open Packaging Conventions</em> specification available for download at <see href=\"http://go.microsoft.com/fwlink/?LinkID=71255\">http://go.microsoft.com/fwlink/?LinkID=71255</see>.</p>\n"
  example:
  - 
  syntax:
    content: public Uri TargetUri { get; }
    content.vb: Public ReadOnly Property TargetUri As Uri
    parameters: []
    return:
      type: System.Uri
      description: "\n<p>The URI of the target resource.</p>\n"
  seealso:
  - type: System.IO.Packaging.PackageRelationship.SourceUri
    commentId: P:System.IO.Packaging.PackageRelationship.SourceUri
  - type: System.IO.Packaging.PackageRelationship.TargetMode
    commentId: P:System.IO.Packaging.PackageRelationship.TargetMode
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: System.IO.Packaging
  isExternal: false
  name: System.IO.Packaging
  fullName: System.IO.Packaging
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.String
  parent: System
  isExternal: false
  name: String
  fullName: System.String
- uid: System.IO.Packaging.Package
  parent: System.IO.Packaging
  isExternal: false
  name: Package
  fullName: System.IO.Packaging.Package
- uid: System.Uri
  parent: System
  isExternal: false
  name: Uri
  fullName: System.Uri
- uid: System.IO.Packaging.TargetMode
  parent: System.IO.Packaging
  isExternal: false
  name: TargetMode
  fullName: System.IO.Packaging.TargetMode
