items:
- uid: System.Threading.Tasks.TaskCanceledException
  commentId: T:System.Threading.Tasks.TaskCanceledException
  id: TaskCanceledException
  parent: System.Threading.Tasks
  children:
  - System.Threading.Tasks.TaskCanceledException.#ctor
  - System.Threading.Tasks.TaskCanceledException.#ctor(System.String)
  - System.Threading.Tasks.TaskCanceledException.#ctor(System.String,System.Exception)
  - System.Threading.Tasks.TaskCanceledException.#ctor(System.Threading.Tasks.Task)
  - System.Threading.Tasks.TaskCanceledException.Task
  langs:
  - csharp
  - vb
  name: TaskCanceledException
  fullName: System.Threading.Tasks.TaskCanceledException
  type: Class
  source:
    remote:
      path: src/System.Threading.Tasks/ref/System.Threading.Tasks.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: TaskCanceledException
    path: src/System.Threading.Tasks/ref/System.Threading.Tasks.cs
    startLine: 335
  assemblies:
  - System.Threading.Tasks
  namespace: System.Threading.Tasks
  summary: "\n<p>Represents an exception used to communicate task cancellation.</p>\n"
  syntax:
    content: 'public class TaskCanceledException : OperationCanceledException'
    content.vb: >-
      Public Class TaskCanceledException
          Inherits OperationCanceledException
  inheritance:
  - System.Object
  - System.OperationCanceledException
  inheritedMembers:
  - System.OperationCanceledException.CancellationToken
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: System.Threading.Tasks.TaskCanceledException.#ctor
  commentId: M:System.Threading.Tasks.TaskCanceledException.#ctor
  id: '#ctor'
  parent: System.Threading.Tasks.TaskCanceledException
  langs:
  - csharp
  - vb
  name: TaskCanceledException()
  fullName: System.Threading.Tasks.TaskCanceledException.TaskCanceledException()
  type: Constructor
  source:
    remote:
      path: src/System.Threading.Tasks/ref/System.Threading.Tasks.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Threading.Tasks/ref/System.Threading.Tasks.cs
    startLine: 337
  assemblies:
  - System.Threading.Tasks
  namespace: System.Threading.Tasks
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Threading.Tasks.TaskCanceledException\" data-throw-if-not-resolved=\"false\"></xref> class with a system-supplied message that describes the error.</p>\n"
  remarks: "\n<p>This constructor initializes the <xref href=\"System.Exception.Message\" data-throw-if-not-resolved=\"false\"></xref> property of the new instance to a system-supplied message that describes the error. This message takes into account the current system culture.</p>\n<p>The following table shows the initial property values for an instance of <xref href=\"System.OperationCanceledException\" data-throw-if-not-resolved=\"false\"></xref>:</p>\n<p>Property </p>\n<p>Value </p>\n<table><tbody><tr><td>\n<p>\n<xref href=\"System.Exception.InnerException\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td><td>\n<p>\n<strong>null</strong>.</p>\n</td></tr><tr><td>\n<p>\n<xref href=\"System.Exception.Message\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td><td>\n<p>The localized error message string. </p>\n</td></tr></tbody></table>\n"
  syntax:
    content: public TaskCanceledException()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Threading.Tasks.TaskCanceledException.#ctor(System.String)
  commentId: M:System.Threading.Tasks.TaskCanceledException.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Threading.Tasks.TaskCanceledException
  langs:
  - csharp
  - vb
  name: TaskCanceledException(String)
  fullName: System.Threading.Tasks.TaskCanceledException.TaskCanceledException(System.String)
  type: Constructor
  source:
    remote:
      path: src/System.Threading.Tasks/ref/System.Threading.Tasks.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Threading.Tasks/ref/System.Threading.Tasks.cs
    startLine: 338
  assemblies:
  - System.Threading.Tasks
  namespace: System.Threading.Tasks
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Threading.Tasks.TaskCanceledException\" data-throw-if-not-resolved=\"false\"></xref> class with a specified message that describes the error.</p>\n"
  remarks: "\n<p>The following table shows the initial property values for an instance of <xref href=\"System.Threading.Tasks.TaskCanceledException\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>Property </p>\n<p>Value </p>\n<table><tbody><tr><td>\n<p>\n<xref href=\"System.Exception.InnerException\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td><td>\n<p>\n<strong>null</strong>.</p>\n</td></tr><tr><td>\n<p>\n<xref href=\"System.Exception.Message\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td><td>\n<p>The error message string specified in <em>message</em>. </p>\n</td></tr></tbody></table>\n"
  syntax:
    content: public TaskCanceledException(string message)
    content.vb: Public Sub New(message As String)
    parameters:
    - id: message
      type: System.String
      description: "\n<p>The message that describes the exception. The caller of this constructor is required to ensure that this string has been localized for the current system culture.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Threading.Tasks.TaskCanceledException.#ctor(System.String,System.Exception)
  commentId: M:System.Threading.Tasks.TaskCanceledException.#ctor(System.String,System.Exception)
  id: '#ctor(System.String,System.Exception)'
  parent: System.Threading.Tasks.TaskCanceledException
  langs:
  - csharp
  - vb
  name: TaskCanceledException(String, Exception)
  fullName: System.Threading.Tasks.TaskCanceledException.TaskCanceledException(System.String, System.Exception)
  type: Constructor
  source:
    remote:
      path: src/System.Threading.Tasks/ref/System.Threading.Tasks.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Threading.Tasks/ref/System.Threading.Tasks.cs
    startLine: 339
  assemblies:
  - System.Threading.Tasks
  namespace: System.Threading.Tasks
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Threading.Tasks.TaskCanceledException\" data-throw-if-not-resolved=\"false\"></xref> class with a specified error message and a reference to the inner exception that is the cause of this exception.</p>\n"
  remarks: "\n<p>An exception that is thrown as a direct result of a previous exception should include a reference to the previous exception in the <xref href=\"System.Exception.InnerException\" data-throw-if-not-resolved=\"false\"></xref> property. The <xref href=\"System.Exception.InnerException\" data-throw-if-not-resolved=\"false\"></xref> property returns the same value that is passed into the constructor, or <strong>null</strong> if the <xref href=\"System.Exception.InnerException\" data-throw-if-not-resolved=\"false\"></xref> property does not supply the inner exception value to the constructor.</p>\n<p>The following table shows the initial property values for an instance of <xref href=\"System.Threading.Tasks.TaskCanceledException\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>Property </p>\n<p>Value </p>\n<table><tbody><tr><td>\n<p>\n<xref href=\"System.Exception.InnerException\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td><td>\n<p>\n<strong>null</strong>. </p>\n</td></tr><tr><td>\n<p>\n<xref href=\"System.Exception.Message\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td><td>\n<p>The error message string specified in <em>message</em>. </p>\n</td></tr></tbody></table>\n"
  syntax:
    content: public TaskCanceledException(string message, Exception innerException)
    content.vb: Public Sub New(message As String, innerException As Exception)
    parameters:
    - id: message
      type: System.String
      description: "\n<p>The message that describes the exception. The caller of this constructor is required to ensure that this string has been localized for the current system culture. </p>\n"
    - id: innerException
      type: System.Exception
      description: "\n<p>The exception that is the cause of the current exception. If the <em>innerException</em> parameter is not <strong>null</strong>, the current exception is raised in a <strong>catch</strong> block that handles the inner exception. </p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Threading.Tasks.TaskCanceledException.#ctor(System.Threading.Tasks.Task)
  commentId: M:System.Threading.Tasks.TaskCanceledException.#ctor(System.Threading.Tasks.Task)
  id: '#ctor(System.Threading.Tasks.Task)'
  parent: System.Threading.Tasks.TaskCanceledException
  langs:
  - csharp
  - vb
  name: TaskCanceledException(Task)
  fullName: System.Threading.Tasks.TaskCanceledException.TaskCanceledException(System.Threading.Tasks.Task)
  type: Constructor
  source:
    remote:
      path: src/System.Threading.Tasks/ref/System.Threading.Tasks.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Threading.Tasks/ref/System.Threading.Tasks.cs
    startLine: 340
  assemblies:
  - System.Threading.Tasks
  namespace: System.Threading.Tasks
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Threading.Tasks.TaskCanceledException\" data-throw-if-not-resolved=\"false\"></xref> class with a reference to the <xref href=\"System.Threading.Tasks.Task\" data-throw-if-not-resolved=\"false\"></xref> that has been canceled.</p>\n"
  example:
  - 
  syntax:
    content: public TaskCanceledException(Task task)
    content.vb: Public Sub New(task As Task)
    parameters:
    - id: task
      type: System.Threading.Tasks.Task
      description: "\n<p>A task that has been canceled.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Threading.Tasks.TaskCanceledException.Task
  commentId: P:System.Threading.Tasks.TaskCanceledException.Task
  id: Task
  parent: System.Threading.Tasks.TaskCanceledException
  langs:
  - csharp
  - vb
  name: Task
  fullName: System.Threading.Tasks.TaskCanceledException.Task
  type: Property
  source:
    remote:
      path: src/System.Threading.Tasks/ref/System.Threading.Tasks.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Task
    path: src/System.Threading.Tasks/ref/System.Threading.Tasks.cs
    startLine: 341
  assemblies:
  - System.Threading.Tasks
  namespace: System.Threading.Tasks
  summary: "\n<p>Gets the task associated with this exception.</p>\n"
  remarks: "\n<p>It is permissible for no Task to be associated with a <xref href=\"System.Threading.Tasks.TaskCanceledException\" data-throw-if-not-resolved=\"false\"></xref>, in which case this property will return null.</p>\n<p>This property is thread-safe and may be used from multiple threads concurrently.</p>\n"
  example:
  - 
  syntax:
    content: public Task Task { get; }
    content.vb: Public ReadOnly Property Task As Task
    parameters: []
    return:
      type: System.Threading.Tasks.Task
      description: "\n<p>A reference to the <xref href=\"System.Threading.Tasks.Task\" data-throw-if-not-resolved=\"false\"></xref> that is associated with this exception.</p>\n"
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System.OperationCanceledException
  parent: System
  isExternal: false
  name: OperationCanceledException
  fullName: System.OperationCanceledException
- uid: System.OperationCanceledException.CancellationToken
  parent: System.OperationCanceledException
  isExternal: false
  name: CancellationToken
  fullName: System.OperationCanceledException.CancellationToken
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.String
  parent: System
  isExternal: false
  name: String
  fullName: System.String
- uid: System.Exception
  parent: System
  isExternal: false
  name: Exception
  fullName: System.Exception
- uid: System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: false
  name: Threading.Tasks.Task
  fullName: System.Threading.Tasks.Task
