items:
- uid: System.Net.EndPoint
  commentId: T:System.Net.EndPoint
  id: EndPoint
  parent: System.Net
  children:
  - System.Net.EndPoint.#ctor
  - System.Net.EndPoint.AddressFamily
  - System.Net.EndPoint.Create(System.Net.SocketAddress)
  - System.Net.EndPoint.Serialize
  langs:
  - csharp
  - vb
  name: EndPoint
  fullName: System.Net.EndPoint
  type: Class
  source:
    remote:
      path: src/System.Net.Primitives/ref/System.Net.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: EndPoint
    path: src/System.Net.Primitives/ref/System.Net.Primitives.cs
    startLine: 108
  assemblies:
  - System.Net.Primitives
  namespace: System.Net
  summary: "\n<p>Identifies a network address. This is an <strong>abstract</strong> class.</p>\n"
  remarks: "\n<p>The <xref href=\"System.Net.EndPoint\" data-throw-if-not-resolved=\"false\"></xref> class provides an <strong>abstract</strong> base class that represents a network resource or service. Descendant classes combine network connection information to form a connection point to a service.</p>\n"
  syntax:
    content: public abstract class EndPoint
    content.vb: Public MustInherit Class EndPoint
  seealso:
  - type: System.Net.IPEndPoint
    commentId: T:System.Net.IPEndPoint
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: System.Net.EndPoint.#ctor
  commentId: M:System.Net.EndPoint.#ctor
  id: '#ctor'
  parent: System.Net.EndPoint
  langs:
  - csharp
  - vb
  name: EndPoint()
  fullName: System.Net.EndPoint.EndPoint()
  type: Constructor
  source:
    remote:
      path: src/System.Net.Primitives/ref/System.Net.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Net.Primitives/ref/System.Net.Primitives.cs
    startLine: 110
  assemblies:
  - System.Net.Primitives
  namespace: System.Net
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Net.EndPoint\" data-throw-if-not-resolved=\"false\"></xref> class. </p>\n"
  example:
  - 
  syntax:
    content: protected EndPoint()
    content.vb: Protected Sub New
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: System.Net.EndPoint.AddressFamily
  commentId: P:System.Net.EndPoint.AddressFamily
  id: AddressFamily
  parent: System.Net.EndPoint
  langs:
  - csharp
  - vb
  name: AddressFamily
  fullName: System.Net.EndPoint.AddressFamily
  type: Property
  source:
    remote:
      path: src/System.Net.Primitives/ref/System.Net.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: AddressFamily
    path: src/System.Net.Primitives/ref/System.Net.Primitives.cs
    startLine: 111
  assemblies:
  - System.Net.Primitives
  namespace: System.Net
  summary: "\n<p>Gets the address family to which the endpoint belongs.</p>\n"
  remarks: "\n<p>The <xref href=\"System.Net.EndPoint.AddressFamily\" data-throw-if-not-resolved=\"false\"></xref> property specifies the addressing scheme that is used by the endpoint's underlying network protocol.</p>\n"
  syntax:
    content: public virtual AddressFamily AddressFamily { get; }
    content.vb: Public Overridable ReadOnly Property AddressFamily As AddressFamily
    parameters: []
    return:
      type: System.Net.Sockets.AddressFamily
      description: "\n<p>One of the <xref href=\"System.Net.Sockets.AddressFamily\" data-throw-if-not-resolved=\"false\"></xref> values.</p>\n"
  exceptions:
  - type: System.NotImplementedException
    commentId: T:System.NotImplementedException
    description: "\n<p>Any attempt is made to get or set the property when the property is not overridden in a descendant class. </p>\n"
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: System.Net.EndPoint.Create(System.Net.SocketAddress)
  commentId: M:System.Net.EndPoint.Create(System.Net.SocketAddress)
  id: Create(System.Net.SocketAddress)
  parent: System.Net.EndPoint
  langs:
  - csharp
  - vb
  name: Create(SocketAddress)
  fullName: System.Net.EndPoint.Create(System.Net.SocketAddress)
  type: Method
  source:
    remote:
      path: src/System.Net.Primitives/ref/System.Net.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Create
    path: src/System.Net.Primitives/ref/System.Net.Primitives.cs
    startLine: 112
  assemblies:
  - System.Net.Primitives
  namespace: System.Net
  summary: "\n<p>Creates an <xref href=\"System.Net.EndPoint\" data-throw-if-not-resolved=\"false\"></xref> instance from a <xref href=\"System.Net.SocketAddress\" data-throw-if-not-resolved=\"false\"></xref> instance.</p>\n"
  syntax:
    content: public virtual EndPoint Create(SocketAddress socketAddress)
    content.vb: Public Overridable Function Create(socketAddress As SocketAddress) As
    parameters:
    - id: socketAddress
      type: System.Net.SocketAddress
      description: "\n<p>The socket address that serves as the endpoint for a connection. </p>\n"
    return:
      type: System.Net.EndPoint
      description: "\n<p>A new <xref href=\"System.Net.EndPoint\" data-throw-if-not-resolved=\"false\"></xref> instance that is initialized from the specified <xref href=\"System.Net.SocketAddress\" data-throw-if-not-resolved=\"false\"></xref> instance.</p>\n"
  exceptions:
  - type: System.NotImplementedException
    commentId: T:System.NotImplementedException
    description: "\n<p>Any attempt is made to access the method when the method is not overridden in a descendant class. </p>\n"
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Net.EndPoint.Serialize
  commentId: M:System.Net.EndPoint.Serialize
  id: Serialize
  parent: System.Net.EndPoint
  langs:
  - csharp
  - vb
  name: Serialize()
  fullName: System.Net.EndPoint.Serialize()
  type: Method
  source:
    remote:
      path: src/System.Net.Primitives/ref/System.Net.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Serialize
    path: src/System.Net.Primitives/ref/System.Net.Primitives.cs
    startLine: 113
  assemblies:
  - System.Net.Primitives
  namespace: System.Net
  summary: "\n<p>Serializes endpoint information into a <xref href=\"System.Net.SocketAddress\" data-throw-if-not-resolved=\"false\"></xref> instance.</p>\n"
  syntax:
    content: public virtual SocketAddress Serialize()
    content.vb: Public Overridable Function Serialize As SocketAddress
    return:
      type: System.Net.SocketAddress
      description: "\n<p>A <xref href=\"System.Net.SocketAddress\" data-throw-if-not-resolved=\"false\"></xref> instance that contains the endpoint information.</p>\n"
  exceptions:
  - type: System.NotImplementedException
    commentId: T:System.NotImplementedException
    description: "\n<p>Any attempt is made to access the method when the method is not overridden in a descendant class. </p>\n"
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
references:
- uid: System.Net
  isExternal: false
  name: System.Net
  fullName: System.Net
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Net.Sockets.AddressFamily
  parent: System.Net.Sockets
  isExternal: false
  name: AddressFamily
  fullName: System.Net.Sockets.AddressFamily
- uid: System.Net.Sockets
  isExternal: false
  name: System.Net.Sockets
  fullName: System.Net.Sockets
- uid: System.Net.SocketAddress
  parent: System.Net
  isExternal: false
  name: SocketAddress
  fullName: System.Net.SocketAddress
- uid: System.Net.EndPoint
  parent: System.Net
  isExternal: false
  name: EndPoint
  fullName: System.Net.EndPoint
- uid: System.NotImplementedException
  isExternal: false
  name: NotImplementedException
  fullName: System.NotImplementedException
