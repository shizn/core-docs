items:
- uid: System.Runtime.InteropServices.ArrayWithOffset
  commentId: T:System.Runtime.InteropServices.ArrayWithOffset
  id: ArrayWithOffset
  parent: System.Runtime.InteropServices
  children:
  - System.Runtime.InteropServices.ArrayWithOffset.#ctor(System.Object,System.Int32)
  - System.Runtime.InteropServices.ArrayWithOffset.Equals(System.Object)
  - System.Runtime.InteropServices.ArrayWithOffset.Equals(System.Runtime.InteropServices.ArrayWithOffset)
  - System.Runtime.InteropServices.ArrayWithOffset.GetArray
  - System.Runtime.InteropServices.ArrayWithOffset.GetHashCode
  - System.Runtime.InteropServices.ArrayWithOffset.GetOffset
  - System.Runtime.InteropServices.ArrayWithOffset.op_Equality(System.Runtime.InteropServices.ArrayWithOffset,System.Runtime.InteropServices.ArrayWithOffset)
  - System.Runtime.InteropServices.ArrayWithOffset.op_Inequality(System.Runtime.InteropServices.ArrayWithOffset,System.Runtime.InteropServices.ArrayWithOffset)
  langs:
  - csharp
  - vb
  name: ArrayWithOffset
  fullName: System.Runtime.InteropServices.ArrayWithOffset
  type: Struct
  source:
    remote:
      path: src/mscorlib/src/System/Runtime/InteropServices/ArrayWithOffset.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ArrayWithOffset
    path: src/mscorlib/src/System/Runtime/InteropServices/ArrayWithOffset.cs
    startLine: 10
  assemblies:
  - System.Runtime.InteropServices
  namespace: System.Runtime.InteropServices
  summary: "\n<p>Encapsulates an array and an offset within the specified array.</p>\n"
  remarks: "\n<p>Can be used as an argument to a native method reached through platform invoke. In this case, the platform invoke marshaler will retrieve the starting address of the array, add the offset, and pass the resulting pointer to the underlying native function. This structure only supports arrays containing no references, such as primitive type arrays and value type arrays containing only fields of primitive types.</p>\n"
  syntax:
    content: >-
      [Serializable]

      [ComVisible(true)]

      public struct ArrayWithOffset
    content.vb: >-
      <Serializable>

      <ComVisible(True)>

      Public Structure ArrayWithOffset
  inheritedMembers:
  - System.ValueType.ToString
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetType
  attributes:
  - type: System.Runtime.InteropServices.StructLayoutAttribute
    ctor: System.Runtime.InteropServices.StructLayoutAttribute.#ctor(System.Runtime.InteropServices.LayoutKind)
    arguments:
    - type: System.Runtime.InteropServices.LayoutKind
      value: 0
  modifiers.csharp:
  - public
  - struct
  modifiers.vb:
  - Public
  - Structure
- uid: System.Runtime.InteropServices.ArrayWithOffset.#ctor(System.Object,System.Int32)
  commentId: M:System.Runtime.InteropServices.ArrayWithOffset.#ctor(System.Object,System.Int32)
  id: '#ctor(System.Object,System.Int32)'
  parent: System.Runtime.InteropServices.ArrayWithOffset
  langs:
  - csharp
  - vb
  name: ArrayWithOffset(Object, Int32)
  fullName: System.Runtime.InteropServices.ArrayWithOffset.ArrayWithOffset(System.Object, System.Int32)
  type: Constructor
  source:
    remote:
      path: src/mscorlib/src/System/Runtime/InteropServices/ArrayWithOffset.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: .ctor
    path: src/mscorlib/src/System/Runtime/InteropServices/ArrayWithOffset.cs
    startLine: 19
  assemblies:
  - System.Runtime.InteropServices
  namespace: System.Runtime.InteropServices
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Runtime.InteropServices.ArrayWithOffset\" data-throw-if-not-resolved=\"false\"></xref> structure.</p>\n"
  syntax:
    content: >-
      [SecuritySafeCritical]

      public ArrayWithOffset(object array, int offset)
    content.vb: >-
      <SecuritySafeCritical>

      Public Sub New(array As Object, offset As Integer)
    parameters:
    - id: array
      type: System.Object
    - id: offset
      type: System.Int32
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<p>The array is larger than 2 gigabytes (GB).</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Runtime.InteropServices.ArrayWithOffset.Equals(System.Object)
  commentId: M:System.Runtime.InteropServices.ArrayWithOffset.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Runtime.InteropServices.ArrayWithOffset
  langs:
  - csharp
  - vb
  name: Equals(Object)
  fullName: System.Runtime.InteropServices.ArrayWithOffset.Equals(System.Object)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Runtime/InteropServices/ArrayWithOffset.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Equals
    path: src/mscorlib/src/System/Runtime/InteropServices/ArrayWithOffset.cs
    startLine: 43
  assemblies:
  - System.Runtime.InteropServices
  namespace: System.Runtime.InteropServices
  summary: "\n<p>Indicates whether the specified object matches the current <xref href=\"System.Runtime.InteropServices.ArrayWithOffset\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  syntax:
    content: public override bool Equals(object obj)
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
    parameters:
    - id: obj
      type: System.Object
    return:
      type: System.Boolean
  overridden: System.ValueType.Equals(System.Object)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Runtime.InteropServices.ArrayWithOffset.Equals(System.Runtime.InteropServices.ArrayWithOffset)
  commentId: M:System.Runtime.InteropServices.ArrayWithOffset.Equals(System.Runtime.InteropServices.ArrayWithOffset)
  id: Equals(System.Runtime.InteropServices.ArrayWithOffset)
  parent: System.Runtime.InteropServices.ArrayWithOffset
  langs:
  - csharp
  - vb
  name: Equals(ArrayWithOffset)
  fullName: System.Runtime.InteropServices.ArrayWithOffset.Equals(System.Runtime.InteropServices.ArrayWithOffset)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Runtime/InteropServices/ArrayWithOffset.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Equals
    path: src/mscorlib/src/System/Runtime/InteropServices/ArrayWithOffset.cs
    startLine: 51
  assemblies:
  - System.Runtime.InteropServices
  namespace: System.Runtime.InteropServices
  summary: "\n<p>Indicates whether the specified <xref href=\"System.Runtime.InteropServices.ArrayWithOffset\" data-throw-if-not-resolved=\"false\"></xref> object matches the current instance.</p>\n"
  example:
  - 
  syntax:
    content: public bool Equals(ArrayWithOffset obj)
    content.vb: Public Function Equals(obj As ArrayWithOffset) As Boolean
    parameters:
    - id: obj
      type: System.Runtime.InteropServices.ArrayWithOffset
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Runtime.InteropServices.ArrayWithOffset.GetArray
  commentId: M:System.Runtime.InteropServices.ArrayWithOffset.GetArray
  id: GetArray
  parent: System.Runtime.InteropServices.ArrayWithOffset
  langs:
  - csharp
  - vb
  name: GetArray()
  fullName: System.Runtime.InteropServices.ArrayWithOffset.GetArray()
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Runtime/InteropServices/ArrayWithOffset.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: GetArray
    path: src/mscorlib/src/System/Runtime/InteropServices/ArrayWithOffset.cs
    startLine: 28
  assemblies:
  - System.Runtime.InteropServices
  namespace: System.Runtime.InteropServices
  summary: "\n<p>Returns the managed array referenced by this <xref href=\"System.Runtime.InteropServices.ArrayWithOffset\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: public object GetArray()
    content.vb: Public Function GetArray As Object
    return:
      type: System.Object
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Runtime.InteropServices.ArrayWithOffset.GetHashCode
  commentId: M:System.Runtime.InteropServices.ArrayWithOffset.GetHashCode
  id: GetHashCode
  parent: System.Runtime.InteropServices.ArrayWithOffset
  langs:
  - csharp
  - vb
  name: GetHashCode()
  fullName: System.Runtime.InteropServices.ArrayWithOffset.GetHashCode()
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Runtime/InteropServices/ArrayWithOffset.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: GetHashCode
    path: src/mscorlib/src/System/Runtime/InteropServices/ArrayWithOffset.cs
    startLine: 38
  assemblies:
  - System.Runtime.InteropServices
  namespace: System.Runtime.InteropServices
  summary: "\n<p>Returns a hash code for this value type.</p>\n"
  syntax:
    content: public override int GetHashCode()
    content.vb: Public Overrides Function GetHashCode As Integer
    return:
      type: System.Int32
  overridden: System.ValueType.GetHashCode
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Runtime.InteropServices.ArrayWithOffset.GetOffset
  commentId: M:System.Runtime.InteropServices.ArrayWithOffset.GetOffset
  id: GetOffset
  parent: System.Runtime.InteropServices.ArrayWithOffset
  langs:
  - csharp
  - vb
  name: GetOffset()
  fullName: System.Runtime.InteropServices.ArrayWithOffset.GetOffset()
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Runtime/InteropServices/ArrayWithOffset.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: GetOffset
    path: src/mscorlib/src/System/Runtime/InteropServices/ArrayWithOffset.cs
    startLine: 33
  assemblies:
  - System.Runtime.InteropServices
  namespace: System.Runtime.InteropServices
  summary: "\n<p>Returns the offset provided when this <xref href=\"System.Runtime.InteropServices.ArrayWithOffset\" data-throw-if-not-resolved=\"false\"></xref> was constructed.</p>\n"
  syntax:
    content: public int GetOffset()
    content.vb: Public Function GetOffset As Integer
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Runtime.InteropServices.ArrayWithOffset.op_Equality(System.Runtime.InteropServices.ArrayWithOffset,System.Runtime.InteropServices.ArrayWithOffset)
  commentId: M:System.Runtime.InteropServices.ArrayWithOffset.op_Equality(System.Runtime.InteropServices.ArrayWithOffset,System.Runtime.InteropServices.ArrayWithOffset)
  id: op_Equality(System.Runtime.InteropServices.ArrayWithOffset,System.Runtime.InteropServices.ArrayWithOffset)
  parent: System.Runtime.InteropServices.ArrayWithOffset
  langs:
  - csharp
  - vb
  name: Equality(ArrayWithOffset, ArrayWithOffset)
  fullName: System.Runtime.InteropServices.ArrayWithOffset.Equality(System.Runtime.InteropServices.ArrayWithOffset, System.Runtime.InteropServices.ArrayWithOffset)
  type: Operator
  source:
    remote:
      path: src/mscorlib/src/System/Runtime/InteropServices/ArrayWithOffset.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: op_Equality
    path: src/mscorlib/src/System/Runtime/InteropServices/ArrayWithOffset.cs
    startLine: 56
  assemblies:
  - System.Runtime.InteropServices
  namespace: System.Runtime.InteropServices
  summary: "\n<p>Determines whether two specified <xref href=\"System.Runtime.InteropServices.ArrayWithOffset\" data-throw-if-not-resolved=\"false\"></xref> objects have the same value.</p>\n"
  example:
  - 
  syntax:
    content: public static bool operator ==(ArrayWithOffset a, ArrayWithOffset b)
    content.vb: Public Shared Operator =(a As ArrayWithOffset, b As ArrayWithOffset) As Boolean
    parameters:
    - id: a
      type: System.Runtime.InteropServices.ArrayWithOffset
    - id: b
      type: System.Runtime.InteropServices.ArrayWithOffset
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Runtime.InteropServices.ArrayWithOffset.op_Inequality(System.Runtime.InteropServices.ArrayWithOffset,System.Runtime.InteropServices.ArrayWithOffset)
  commentId: M:System.Runtime.InteropServices.ArrayWithOffset.op_Inequality(System.Runtime.InteropServices.ArrayWithOffset,System.Runtime.InteropServices.ArrayWithOffset)
  id: op_Inequality(System.Runtime.InteropServices.ArrayWithOffset,System.Runtime.InteropServices.ArrayWithOffset)
  parent: System.Runtime.InteropServices.ArrayWithOffset
  langs:
  - csharp
  - vb
  name: Inequality(ArrayWithOffset, ArrayWithOffset)
  fullName: System.Runtime.InteropServices.ArrayWithOffset.Inequality(System.Runtime.InteropServices.ArrayWithOffset, System.Runtime.InteropServices.ArrayWithOffset)
  type: Operator
  source:
    remote:
      path: src/mscorlib/src/System/Runtime/InteropServices/ArrayWithOffset.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: op_Inequality
    path: src/mscorlib/src/System/Runtime/InteropServices/ArrayWithOffset.cs
    startLine: 61
  assemblies:
  - System.Runtime.InteropServices
  namespace: System.Runtime.InteropServices
  summary: "\n<p>Determines whether two specified <xref href=\"System.Runtime.InteropServices.ArrayWithOffset\" data-throw-if-not-resolved=\"false\"></xref> objects no not have the same value.</p>\n"
  example:
  - 
  syntax:
    content: public static bool operator !=(ArrayWithOffset a, ArrayWithOffset b)
    content.vb: Public Shared Operator <>(a As ArrayWithOffset, b As ArrayWithOffset) As Boolean
    parameters:
    - id: a
      type: System.Runtime.InteropServices.ArrayWithOffset
    - id: b
      type: System.Runtime.InteropServices.ArrayWithOffset
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: System.Runtime.InteropServices
  isExternal: false
  name: System.Runtime.InteropServices
  fullName: System.Runtime.InteropServices
- uid: System.ValueType.ToString
  parent: System.ValueType
  isExternal: false
  name: ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    fullName: System.ValueType.ToString
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    fullName: System.ValueType.ToString
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.ValueType
  parent: System
  isExternal: false
  name: ValueType
  fullName: System.ValueType
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  fullName: System.Int32
- uid: System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  name: Equals(Object)
  fullName: System.ValueType.Equals(System.Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    fullName: System.ValueType.Equals
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    fullName: System.ValueType.Equals
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  fullName: System.Boolean
- uid: System.Runtime.InteropServices.ArrayWithOffset
  parent: System.Runtime.InteropServices
  isExternal: false
  name: ArrayWithOffset
  fullName: System.Runtime.InteropServices.ArrayWithOffset
- uid: System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: false
  name: GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    fullName: System.ValueType.GetHashCode
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    fullName: System.ValueType.GetHashCode
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.ArgumentException
  parent: System
  isExternal: false
  name: ArgumentException
  fullName: System.ArgumentException
