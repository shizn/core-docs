items:
- uid: System.IFormatProvider
  commentId: T:System.IFormatProvider
  id: IFormatProvider
  parent: System
  children:
  - System.IFormatProvider.GetFormat(System.Type)
  langs:
  - csharp
  - vb
  name: IFormatProvider
  fullName: System.IFormatProvider
  type: Interface
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IFormatProvider
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 997
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Provides a mechanism for retrieving an object to control formatting.</p>\n"
  remarks: "\n<p>The <xref href=\"System.IFormatProvider\" data-throw-if-not-resolved=\"false\"></xref> interface supplies an object that provides formatting information for formatting and parsing operations. Formatting operations convert the value of a type to the string representation of that value. Typical formatting methods are the <strong>ToString</strong> methods of a type, as well as <xref href=\"System.String.Format(System.String,System.Object)\" data-throw-if-not-resolved=\"false\"></xref>. Parsing operations convert the string representation of a value to a type with that value. Typical parsing methods are <strong>Parse</strong> and <strong>TryParse</strong>. </p>\n<p>The <xref href=\"System.IFormatProvider\" data-throw-if-not-resolved=\"false\"></xref> interface consists of a single method, <xref href=\"System.IFormatProvider.GetFormat(System.Type)\" data-throw-if-not-resolved=\"false\"></xref>. <xref href=\"System.IFormatProvider.GetFormat(System.Type)\" data-throw-if-not-resolved=\"false\"></xref> is a callback method: The parsing or formatting method calls it and passes it a <xref href=\"System.Type\" data-throw-if-not-resolved=\"false\"></xref> object that represents the type of object that the formatting or parsing method expects will provide formatting information. The <xref href=\"System.IFormatProvider.GetFormat(System.Type)\" data-throw-if-not-resolved=\"false\"></xref> method is responsible for returning an object of that type. </p>\n<p>\n<xref href=\"System.IFormatProvider\" data-throw-if-not-resolved=\"false\"></xref> implementations are often used implicitly by formatting and parsing methods. For example, the <xref href=\"System.DateTime.ToString(System.String)\" data-throw-if-not-resolved=\"false\"></xref> method implicitly uses an <xref href=\"System.IFormatProvider\" data-throw-if-not-resolved=\"false\"></xref> implementation that represents the system's current culture. <xref href=\"System.IFormatProvider\" data-throw-if-not-resolved=\"false\"></xref> implementations can also be specified explicitly by methods that have a parameter of type <xref href=\"System.IFormatProvider\" data-throw-if-not-resolved=\"false\"></xref>, such as <xref href=\"System.Int32.Parse(System.String,System.IFormatProvider)\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"System.String.Format(System.IFormatProvider,System.String,System.Object[])\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>The .NET Framework includes the following three predefined <xref href=\"System.IFormatProvider\" data-throw-if-not-resolved=\"false\"></xref> implementations to provide culture-specific information that is used in formatting or parsing numeric and date and time values: </p>\n<ul><li>\n<p>The <xref href=\"System.Globalization.NumberFormatInfo\" data-throw-if-not-resolved=\"false\"></xref> class, which provides information that is used to format numbers, such as the currency, thousands separator, and decimal separator symbols for a particular culture. For information about the predefined format strings recognized by a <xref href=\"System.Globalization.NumberFormatInfo\" data-throw-if-not-resolved=\"false\"></xref> object and used in numeric formatting operations, see Standard Numeric Format Strings and Custom Numeric Format Strings. </p>\n</li><li>\n<p>The <xref href=\"System.Globalization.DateTimeFormatInfo\" data-throw-if-not-resolved=\"false\"></xref> class, which provides information that is used to format dates and times, such as the date and time separator symbols for a particular culture or the order and format of a date's year, month, and day components. For information about the predefined format strings recognized by a <xref href=\"System.Globalization.DateTimeFormatInfo\" data-throw-if-not-resolved=\"false\"></xref> object and used in numeric formatting operations, see Standard Date and Time Format Strings and Custom Date and Time Format Strings.</p>\n</li><li>\n<p>The <xref href=\"System.Globalization.CultureInfo\" data-throw-if-not-resolved=\"false\"></xref> class, which represents a particular culture. Its <xref href=\"System.IFormatProvider.GetFormat(System.Type)\" data-throw-if-not-resolved=\"false\"></xref> method returns a culture-specific <xref href=\"System.Globalization.NumberFormatInfo\" data-throw-if-not-resolved=\"false\"></xref> or <xref href=\"System.Globalization.DateTimeFormatInfo\" data-throw-if-not-resolved=\"false\"></xref> object, depending on whether the <xref href=\"System.Globalization.CultureInfo\" data-throw-if-not-resolved=\"false\"></xref> object is used in a formatting or parsing operation that involves numbers or dates and times.</p>\n</li></ul>\n<p>The .NET Framework also supports custom formatting. This typically involves the creation of a formatting class that implements both <xref href=\"System.IFormatProvider\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"System.ICustomFormatter\" data-throw-if-not-resolved=\"false\"></xref>. An instance of this class is then passed as a parameter to a method that performs a custom formatting operation, such as <xref href=\"System.String.Format(System.IFormatProvider,System.String,System.Object[])\" data-throw-if-not-resolved=\"false\"></xref> The example provides an illustration of such a custom implementation that formats a number as a 12-digit account number.</p>\n"
  example:
  - "\n<p>The following example illustrates how an <xref href=\"System.IFormatProvider\" data-throw-if-not-resolved=\"false\"></xref> implementation can change the representation of a date and time value. In this case, a single date is displayed by using <xref href=\"System.Globalization.CultureInfo\" data-throw-if-not-resolved=\"false\"></xref> objects that represent four different cultures.</p>System.IFormatProvider.Class#3<p>The following example illustrates the use of a class that implements the <xref href=\"System.IFormatProvider\" data-throw-if-not-resolved=\"false\"></xref> interface and the <xref href=\"System.IFormatProvider.GetFormat(System.Type)\" data-throw-if-not-resolved=\"false\"></xref> method. The <code>AcctNumberFormat</code> class converts an <xref href=\"System.Int64\" data-throw-if-not-resolved=\"false\"></xref> value that represents an account number to a formatted 12-digit account number. Its <code>GetFormat</code> method returns a reference to the current <code>AcctNumberFormat</code> instance if the <em>formatType</em> parameter refers to a class that implements <xref href=\"System.ICustomFormatter\" data-throw-if-not-resolved=\"false\"></xref>; otherwise, <code>GetFormat</code> returns <strong>null</strong>.</p>System.IFormatProvider.Class#2<p>The class that implements <xref href=\"System.IFormatProvider\" data-throw-if-not-resolved=\"false\"></xref> can then be used in a call to a formatting and parsing operation. For example, the following code calls the <xref href=\"System.String.Format(System.IFormatProvider,System.String,System.Object[])\" data-throw-if-not-resolved=\"false\"></xref> method to generate a string that contains a formatted 12-digit account number.</p>System.IFormatProvider.Class#1"
  syntax:
    content: public interface IFormatProvider
    content.vb: Public Interface IFormatProvider
  seealso:
  - type: System.ICustomFormatter
    commentId: T:System.ICustomFormatter
  - type: System.IFormattable
    commentId: T:System.IFormattable
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: System.IFormatProvider.GetFormat(System.Type)
  commentId: M:System.IFormatProvider.GetFormat(System.Type)
  id: GetFormat(System.Type)
  parent: System.IFormatProvider
  langs:
  - csharp
  - vb
  name: GetFormat(Type)
  fullName: System.IFormatProvider.GetFormat(System.Type)
  type: Method
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetFormat
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 999
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Returns an object that provides formatting services for the specified type.</p>\n"
  remarks: "\n<p>\n<xref href=\"System.IFormatProvider.GetFormat(System.Type)\" data-throw-if-not-resolved=\"false\"></xref> is a callback method that formatting and parsing methods invoke to retrieve information about the format of the input string in parsing operations or the format of the output string in formatting operations. In the <em>formatType</em> parameter, the formatting or parsing method passes the type of object it requires to perform its operation. If the <xref href=\"System.IFormatProvider\" data-throw-if-not-resolved=\"false\"></xref> implementation can supply this formatting or parsing object, it returns that object. If not, it returns <strong>null</strong>.</p>\n<p>For example, in the call to the <xref href=\"System.Int32.ToString(System.IFormatProvider)\" data-throw-if-not-resolved=\"false\"></xref> method, the method argument is an <xref href=\"System.IFormatProvider\" data-throw-if-not-resolved=\"false\"></xref> object that provides information about how the string representation of the current integer instance might be formatted. When the runtime executes the method, it calls the <xref href=\"System.IFormatProvider\" data-throw-if-not-resolved=\"false\"></xref> object's <xref href=\"System.IFormatProvider.GetFormat(System.Type)\" data-throw-if-not-resolved=\"false\"></xref> method and passes it a <xref href=\"System.Type\" data-throw-if-not-resolved=\"false\"></xref> object that represents the <xref href=\"System.Globalization.NumberFormatInfo\" data-throw-if-not-resolved=\"false\"></xref> type. If the <xref href=\"System.IFormatProvider\" data-throw-if-not-resolved=\"false\"></xref> object can supply a <xref href=\"System.Globalization.NumberFormatInfo\" data-throw-if-not-resolved=\"false\"></xref> object, it returns that object. If it cannot supply an object of that type, it returns <strong>null</strong>.</p>\n<p>You can implement the <xref href=\"System.IFormatProvider\" data-throw-if-not-resolved=\"false\"></xref> interface and the <xref href=\"System.IFormatProvider.GetFormat(System.Type)\" data-throw-if-not-resolved=\"false\"></xref> method in classes that provide custom formatting or parsing services. The <xref href=\"System.IFormatProvider\" data-throw-if-not-resolved=\"false\"></xref> implementation is then passed as an argument to any overload of a parsing or formatting method that has a parameter of type <xref href=\"System.IFormatProvider\" data-throw-if-not-resolved=\"false\"></xref>, such as <xref href=\"System.String.Format(System.IFormatProvider,System.String,System.Object[])\" data-throw-if-not-resolved=\"false\"></xref>, <xref href=\"System.Int32.ToString(System.String,System.IFormatProvider)\" data-throw-if-not-resolved=\"false\"></xref>, or <xref href=\"System.DateTime.Parse(System.String,System.IFormatProvider)\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  example:
  - "\n<p>The following example illustrates the use of a class that implements the <xref href=\"System.IFormatProvider\" data-throw-if-not-resolved=\"false\"></xref> interface and the <xref href=\"System.IFormatProvider.GetFormat(System.Type)\" data-throw-if-not-resolved=\"false\"></xref> method. The <code>AcctNumberFormat</code> class converts an <xref href=\"System.Int64\" data-throw-if-not-resolved=\"false\"></xref> value that represents an account number to a formatted 12-digit account number. Its <strong>GetFormat</strong> method returns a reference to itself if the <em>formatType</em> parameter refers to a class that implements <xref href=\"System.ICustomFormatter\" data-throw-if-not-resolved=\"false\"></xref>; otherwise, <strong>GetFormat</strong> returns <strong>null</strong>.</p>System.IFormatProvider.Class#2<p>An instance of the <code>AcctNumberFormat</code> class can then be passed as an argument to a method that provides formatting or parsing services. For example, the following code passes an <code>AcctNumberFormat</code> class to the <xref href=\"System.String.Format(System.IFormatProvider,System.String,System.Object[])\" data-throw-if-not-resolved=\"false\"></xref> method to generate a formatted 12-digit account number.</p>System.IFormatProvider.Class#1<p></p>"
  syntax:
    content: object GetFormat(Type formatType)
    content.vb: Function GetFormat(formatType As Type) As Object
    parameters:
    - id: formatType
      type: System.Type
      description: "\n<p>An object that specifies the type of format object to return. </p>\n"
    return:
      type: System.Object
      description: "\n<p>An instance of the object specified by <em>formatType</em>, if the <xref href=\"System.IFormatProvider\" data-throw-if-not-resolved=\"false\"></xref> implementation can supply that type of object; otherwise, <strong>null</strong>.</p>\n"
references:
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  fullName: System.Type
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
