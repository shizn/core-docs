items:
- uid: System.Net.NetworkInformation.TcpStatistics
  commentId: T:System.Net.NetworkInformation.TcpStatistics
  id: TcpStatistics
  parent: System.Net.NetworkInformation
  children:
  - System.Net.NetworkInformation.TcpStatistics.#ctor
  - System.Net.NetworkInformation.TcpStatistics.ConnectionsAccepted
  - System.Net.NetworkInformation.TcpStatistics.ConnectionsInitiated
  - System.Net.NetworkInformation.TcpStatistics.CumulativeConnections
  - System.Net.NetworkInformation.TcpStatistics.CurrentConnections
  - System.Net.NetworkInformation.TcpStatistics.ErrorsReceived
  - System.Net.NetworkInformation.TcpStatistics.FailedConnectionAttempts
  - System.Net.NetworkInformation.TcpStatistics.MaximumConnections
  - System.Net.NetworkInformation.TcpStatistics.MaximumTransmissionTimeout
  - System.Net.NetworkInformation.TcpStatistics.MinimumTransmissionTimeout
  - System.Net.NetworkInformation.TcpStatistics.ResetConnections
  - System.Net.NetworkInformation.TcpStatistics.ResetsSent
  - System.Net.NetworkInformation.TcpStatistics.SegmentsReceived
  - System.Net.NetworkInformation.TcpStatistics.SegmentsResent
  - System.Net.NetworkInformation.TcpStatistics.SegmentsSent
  langs:
  - csharp
  - vb
  name: TcpStatistics
  fullName: System.Net.NetworkInformation.TcpStatistics
  type: Class
  source:
    remote:
      path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: TcpStatistics
    path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs
    startLine: 391
  assemblies:
  - System.Net.NetworkInformation
  namespace: System.Net.NetworkInformation
  summary: "\n<p>Provides Transmission Control Protocol (TCP) statistical data.</p>\n"
  remarks: "\n<p>Instances of this class are returned by the <xref href=\"System.Net.NetworkInformation.IPGlobalProperties.GetTcpIPv4Statistics\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"System.Net.NetworkInformation.IPGlobalProperties.GetTcpIPv6Statistics\" data-throw-if-not-resolved=\"false\"></xref> methods, to give applications access to TCP traffic information.</p>\n<p>The information in this class correlates to the management information objects described in <see href=\"http://www.ietf.org/rfc/rfc2012.txt\">http://www.ietf.org/rfc/rfc2012.txt</see>.</p>\n"
  example:
  - "\n<p>The following code example displays the TCP statistics for the specified address family.</p>NCLNetInfoReport#2"
  syntax:
    content: public abstract class TcpStatistics
    content.vb: Public MustInherit Class TcpStatistics
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: System.Net.NetworkInformation.TcpStatistics.#ctor
  commentId: M:System.Net.NetworkInformation.TcpStatistics.#ctor
  id: '#ctor'
  parent: System.Net.NetworkInformation.TcpStatistics
  langs:
  - csharp
  - vb
  name: TcpStatistics()
  fullName: System.Net.NetworkInformation.TcpStatistics.TcpStatistics()
  type: Constructor
  source:
    remote:
      path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs
    startLine: 393
  assemblies:
  - System.Net.NetworkInformation
  namespace: System.Net.NetworkInformation
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Net.NetworkInformation.TcpStatistics\" data-throw-if-not-resolved=\"false\"></xref> class.</p>\n"
  remarks: "\n<p>This constructor can be called only by classes that derive from the <xref href=\"System.Net.NetworkInformation.TcpStatistics\" data-throw-if-not-resolved=\"false\"></xref> class.</p>\n"
  syntax:
    content: protected TcpStatistics()
    content.vb: Protected Sub New
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: System.Net.NetworkInformation.TcpStatistics.ConnectionsAccepted
  commentId: P:System.Net.NetworkInformation.TcpStatistics.ConnectionsAccepted
  id: ConnectionsAccepted
  parent: System.Net.NetworkInformation.TcpStatistics
  langs:
  - csharp
  - vb
  name: ConnectionsAccepted
  fullName: System.Net.NetworkInformation.TcpStatistics.ConnectionsAccepted
  type: Property
  source:
    remote:
      path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ConnectionsAccepted
    path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs
    startLine: 394
  assemblies:
  - System.Net.NetworkInformation
  namespace: System.Net.NetworkInformation
  summary: "\n<p>Gets the number of accepted Transmission Control Protocol (TCP) connection requests.</p>\n"
  remarks: "\n<p>IETF RFC 2012 formally defines this value as, \"The number of times TCP connections have made a direct transition to the SYN-RCVD state from the LISTEN state.\" </p>\n"
  example:
  - "\n<p>The following code example displays connection information.</p>NCLNetInfo2#6"
  syntax:
    content: public abstract long ConnectionsAccepted { get; }
    content.vb: Public MustOverride ReadOnly Property ConnectionsAccepted As Long
    parameters: []
    return:
      type: System.Int64
      description: "\n<p>An <xref href=\"System.Int64\" data-throw-if-not-resolved=\"false\"></xref> value that specifies the total number of TCP connection requests accepted.</p>\n"
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
- uid: System.Net.NetworkInformation.TcpStatistics.ConnectionsInitiated
  commentId: P:System.Net.NetworkInformation.TcpStatistics.ConnectionsInitiated
  id: ConnectionsInitiated
  parent: System.Net.NetworkInformation.TcpStatistics
  langs:
  - csharp
  - vb
  name: ConnectionsInitiated
  fullName: System.Net.NetworkInformation.TcpStatistics.ConnectionsInitiated
  type: Property
  source:
    remote:
      path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ConnectionsInitiated
    path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs
    startLine: 395
  assemblies:
  - System.Net.NetworkInformation
  namespace: System.Net.NetworkInformation
  summary: "\n<p>Gets the number of Transmission Control Protocol (TCP) connection requests made by clients.</p>\n"
  remarks: "\n<p>IETF RFC 2012 formally defines this value as, \"The number of times TCP connections have made a direct transition to the SYN-SENT state from the CLOSED state.\" </p>\n"
  example:
  - "\n<p>The following code example displays connection information.</p>NCLNetInfo2#6"
  syntax:
    content: public abstract long ConnectionsInitiated { get; }
    content.vb: Public MustOverride ReadOnly Property ConnectionsInitiated As Long
    parameters: []
    return:
      type: System.Int64
      description: "\n<p>An <xref href=\"System.Int64\" data-throw-if-not-resolved=\"false\"></xref> value that specifies the total number of TCP connections initiated by clients.</p>\n"
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
- uid: System.Net.NetworkInformation.TcpStatistics.CumulativeConnections
  commentId: P:System.Net.NetworkInformation.TcpStatistics.CumulativeConnections
  id: CumulativeConnections
  parent: System.Net.NetworkInformation.TcpStatistics
  langs:
  - csharp
  - vb
  name: CumulativeConnections
  fullName: System.Net.NetworkInformation.TcpStatistics.CumulativeConnections
  type: Property
  source:
    remote:
      path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CumulativeConnections
    path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs
    startLine: 396
  assemblies:
  - System.Net.NetworkInformation
  namespace: System.Net.NetworkInformation
  summary: "\n<p>Specifies the total number of Transmission Control Protocol (TCP) connections established.</p>\n"
  example:
  - "\n<p>The following code example displays connection information.</p>NCLNetInfo2#6"
  syntax:
    content: public abstract long CumulativeConnections { get; }
    content.vb: Public MustOverride ReadOnly Property CumulativeConnections As Long
    parameters: []
    return:
      type: System.Int64
      description: "\n<p>An <xref href=\"System.Int64\" data-throw-if-not-resolved=\"false\"></xref> value that specifies the total number of connections established.</p>\n"
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
- uid: System.Net.NetworkInformation.TcpStatistics.CurrentConnections
  commentId: P:System.Net.NetworkInformation.TcpStatistics.CurrentConnections
  id: CurrentConnections
  parent: System.Net.NetworkInformation.TcpStatistics
  langs:
  - csharp
  - vb
  name: CurrentConnections
  fullName: System.Net.NetworkInformation.TcpStatistics.CurrentConnections
  type: Property
  source:
    remote:
      path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CurrentConnections
    path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs
    startLine: 397
  assemblies:
  - System.Net.NetworkInformation
  namespace: System.Net.NetworkInformation
  summary: "\n<p>Gets the number of current Transmission Control Protocol (TCP) connections.</p>\n"
  remarks: "\n<p>IETF RFC 2012 formally defines this value as, \"The number of TCP connections for which the current state is either ESTABLISHED or CLOSE-WAIT.\" </p>\n"
  example:
  - "\n<p>The following code example displays connection information.</p>NCLNetInfo2#6"
  syntax:
    content: public abstract long CurrentConnections { get; }
    content.vb: Public MustOverride ReadOnly Property CurrentConnections As Long
    parameters: []
    return:
      type: System.Int64
      description: "\n<p>An <xref href=\"System.Int64\" data-throw-if-not-resolved=\"false\"></xref> value that specifies the total number of current TCP connections.</p>\n"
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
- uid: System.Net.NetworkInformation.TcpStatistics.ErrorsReceived
  commentId: P:System.Net.NetworkInformation.TcpStatistics.ErrorsReceived
  id: ErrorsReceived
  parent: System.Net.NetworkInformation.TcpStatistics
  langs:
  - csharp
  - vb
  name: ErrorsReceived
  fullName: System.Net.NetworkInformation.TcpStatistics.ErrorsReceived
  type: Property
  source:
    remote:
      path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ErrorsReceived
    path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs
    startLine: 398
  assemblies:
  - System.Net.NetworkInformation
  namespace: System.Net.NetworkInformation
  summary: "\n<p>Gets the number of Transmission Control Protocol (TCP) errors received.</p>\n"
  example:
  - "\n<p>The following code example displays connection information.</p>NCLNetInfo2#6"
  syntax:
    content: public abstract long ErrorsReceived { get; }
    content.vb: Public MustOverride ReadOnly Property ErrorsReceived As Long
    parameters: []
    return:
      type: System.Int64
      description: "\n<p>An <xref href=\"System.Int64\" data-throw-if-not-resolved=\"false\"></xref> value that specifies the total number of TCP errors received.</p>\n"
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
- uid: System.Net.NetworkInformation.TcpStatistics.FailedConnectionAttempts
  commentId: P:System.Net.NetworkInformation.TcpStatistics.FailedConnectionAttempts
  id: FailedConnectionAttempts
  parent: System.Net.NetworkInformation.TcpStatistics
  langs:
  - csharp
  - vb
  name: FailedConnectionAttempts
  fullName: System.Net.NetworkInformation.TcpStatistics.FailedConnectionAttempts
  type: Property
  source:
    remote:
      path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: FailedConnectionAttempts
    path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs
    startLine: 399
  assemblies:
  - System.Net.NetworkInformation
  namespace: System.Net.NetworkInformation
  summary: "\n<p>Gets the number of failed Transmission Control Protocol (TCP) connection attempts.</p>\n"
  remarks: "\n<p>IETF RFC 2012 formally defines this value as, \"The number of times TCP connections have made a direct transition to the CLOSED state from either the SYN-SENT state or the SYN-RCVD state, plus the number of times TCP connections have made a direct transition to the LISTEN state from the SYN-RCVD state.\" </p>\n"
  example:
  - "\n<p>The following code example displays connection information.</p>NCLNetInfo2#6"
  syntax:
    content: public abstract long FailedConnectionAttempts { get; }
    content.vb: Public MustOverride ReadOnly Property FailedConnectionAttempts As Long
    parameters: []
    return:
      type: System.Int64
      description: "\n<p>An <xref href=\"System.Int64\" data-throw-if-not-resolved=\"false\"></xref> value that specifies the total number of failed TCP connection attempts.</p>\n"
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
- uid: System.Net.NetworkInformation.TcpStatistics.MaximumConnections
  commentId: P:System.Net.NetworkInformation.TcpStatistics.MaximumConnections
  id: MaximumConnections
  parent: System.Net.NetworkInformation.TcpStatistics
  langs:
  - csharp
  - vb
  name: MaximumConnections
  fullName: System.Net.NetworkInformation.TcpStatistics.MaximumConnections
  type: Property
  source:
    remote:
      path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: MaximumConnections
    path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs
    startLine: 400
  assemblies:
  - System.Net.NetworkInformation
  namespace: System.Net.NetworkInformation
  summary: "\n<p>Gets the maximum number of supported Transmission Control Protocol (TCP) connections.</p>\n"
  remarks: "\n<p>If the maximum number of connections is dynamic, this property returns -1.</p>\n"
  example:
  - "\n<p>The following code example displays time-out and maximum connection information.</p>NCLNetInfo2#5"
  syntax:
    content: public abstract long MaximumConnections { get; }
    content.vb: Public MustOverride ReadOnly Property MaximumConnections As Long
    parameters: []
    return:
      type: System.Int64
      description: "\n<p>An <xref href=\"System.Int64\" data-throw-if-not-resolved=\"false\"></xref> value that specifies the total number of TCP connections that can be supported.</p>\n"
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
- uid: System.Net.NetworkInformation.TcpStatistics.MaximumTransmissionTimeout
  commentId: P:System.Net.NetworkInformation.TcpStatistics.MaximumTransmissionTimeout
  id: MaximumTransmissionTimeout
  parent: System.Net.NetworkInformation.TcpStatistics
  langs:
  - csharp
  - vb
  name: MaximumTransmissionTimeout
  fullName: System.Net.NetworkInformation.TcpStatistics.MaximumTransmissionTimeout
  type: Property
  source:
    remote:
      path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: MaximumTransmissionTimeout
    path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs
    startLine: 401
  assemblies:
  - System.Net.NetworkInformation
  namespace: System.Net.NetworkInformation
  summary: "\n<p>Gets the maximum retransmission time-out value for Transmission Control Protocol (TCP) segments.</p>\n"
  remarks: "\n<p>TCP starts a retransmission timer when each outbound segment is passed to the network layer (IP). If no acknowledgement is received for the data in the segment before the timer expires, the segment is retransmitted. The timer can be set to any value between the <xref href=\"System.Net.NetworkInformation.TcpStatistics.MinimumTransmissionTimeout\" data-throw-if-not-resolved=\"false\"></xref> value and the <xref href=\"System.Net.NetworkInformation.TcpStatistics.MaximumTransmissionTimeout\" data-throw-if-not-resolved=\"false\"></xref> value.</p>\n"
  example:
  - "\n<p>The following code example displays time-out and maximum connection information.</p>NCLNetInfo2#5"
  syntax:
    content: public abstract long MaximumTransmissionTimeout { get; }
    content.vb: Public MustOverride ReadOnly Property MaximumTransmissionTimeout As Long
    parameters: []
    return:
      type: System.Int64
      description: "\n<p>An <xref href=\"System.Int64\" data-throw-if-not-resolved=\"false\"></xref> value that specifies the maximum number of milliseconds permitted by a TCP implementation for the retransmission time-out value.</p>\n"
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
- uid: System.Net.NetworkInformation.TcpStatistics.MinimumTransmissionTimeout
  commentId: P:System.Net.NetworkInformation.TcpStatistics.MinimumTransmissionTimeout
  id: MinimumTransmissionTimeout
  parent: System.Net.NetworkInformation.TcpStatistics
  langs:
  - csharp
  - vb
  name: MinimumTransmissionTimeout
  fullName: System.Net.NetworkInformation.TcpStatistics.MinimumTransmissionTimeout
  type: Property
  source:
    remote:
      path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: MinimumTransmissionTimeout
    path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs
    startLine: 402
  assemblies:
  - System.Net.NetworkInformation
  namespace: System.Net.NetworkInformation
  summary: "\n<p>Gets the minimum retransmission time-out value for Transmission Control Protocol (TCP) segments.</p>\n"
  remarks: "\n<p>TCP starts a retransmission timer when each outbound segment is passed to the network layer (IP). If no acknowledgement is received for the data in the segment before the timer expires, the segment is retransmitted. The timer The timer can be set to any value between the <xref href=\"System.Net.NetworkInformation.TcpStatistics.MinimumTransmissionTimeout\" data-throw-if-not-resolved=\"false\"></xref> value and the <xref href=\"System.Net.NetworkInformation.TcpStatistics.MaximumTransmissionTimeout\" data-throw-if-not-resolved=\"false\"></xref> value.</p>\n"
  example:
  - "\n<p>The following code example displays time-out and maximum connection information.</p>NCLNetInfo2#5"
  syntax:
    content: public abstract long MinimumTransmissionTimeout { get; }
    content.vb: Public MustOverride ReadOnly Property MinimumTransmissionTimeout As Long
    parameters: []
    return:
      type: System.Int64
      description: "\n<p>An <xref href=\"System.Int64\" data-throw-if-not-resolved=\"false\"></xref> value that specifies the minimum number of milliseconds permitted by a TCP implementation for the retransmission time-out value.</p>\n"
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
- uid: System.Net.NetworkInformation.TcpStatistics.ResetConnections
  commentId: P:System.Net.NetworkInformation.TcpStatistics.ResetConnections
  id: ResetConnections
  parent: System.Net.NetworkInformation.TcpStatistics
  langs:
  - csharp
  - vb
  name: ResetConnections
  fullName: System.Net.NetworkInformation.TcpStatistics.ResetConnections
  type: Property
  source:
    remote:
      path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ResetConnections
    path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs
    startLine: 403
  assemblies:
  - System.Net.NetworkInformation
  namespace: System.Net.NetworkInformation
  summary: "\n<p>Gets the number of RST packets received by Transmission Control Protocol (TCP) connections.</p>\n"
  remarks: "\n<p>IETF RFC 2012 formally defines this value as, \"The number of times TCP connections have made a direct transition to the CLOSED state from either the ESTABLISHED state or the CLOSE-WAIT state.\" </p>\n"
  example:
  - "\n<p>The following code example displays connection information.</p>NCLNetInfo2#6"
  syntax:
    content: public abstract long ResetConnections { get; }
    content.vb: Public MustOverride ReadOnly Property ResetConnections As Long
    parameters: []
    return:
      type: System.Int64
      description: "\n<p>An <xref href=\"System.Int64\" data-throw-if-not-resolved=\"false\"></xref> value that specifies the total number of reset TCP connections.</p>\n"
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
- uid: System.Net.NetworkInformation.TcpStatistics.ResetsSent
  commentId: P:System.Net.NetworkInformation.TcpStatistics.ResetsSent
  id: ResetsSent
  parent: System.Net.NetworkInformation.TcpStatistics
  langs:
  - csharp
  - vb
  name: ResetsSent
  fullName: System.Net.NetworkInformation.TcpStatistics.ResetsSent
  type: Property
  source:
    remote:
      path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ResetsSent
    path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs
    startLine: 404
  assemblies:
  - System.Net.NetworkInformation
  namespace: System.Net.NetworkInformation
  summary: "\n<p>Gets the number of Transmission Control Protocol (TCP) segments sent with the reset flag set.</p>\n"
  remarks: "\n<p>TCP resets are specified using the reset (RST) control bit in the TCP header.</p>\n"
  example:
  - "\n<p>The following code example displays segment information.</p>NCLNetInfo2#7"
  syntax:
    content: public abstract long ResetsSent { get; }
    content.vb: Public MustOverride ReadOnly Property ResetsSent As Long
    parameters: []
    return:
      type: System.Int64
      description: "\n<p>An <xref href=\"System.Int64\" data-throw-if-not-resolved=\"false\"></xref> value that specifies the total number of TCP segments sent with the reset flag set.</p>\n"
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
- uid: System.Net.NetworkInformation.TcpStatistics.SegmentsReceived
  commentId: P:System.Net.NetworkInformation.TcpStatistics.SegmentsReceived
  id: SegmentsReceived
  parent: System.Net.NetworkInformation.TcpStatistics
  langs:
  - csharp
  - vb
  name: SegmentsReceived
  fullName: System.Net.NetworkInformation.TcpStatistics.SegmentsReceived
  type: Property
  source:
    remote:
      path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: SegmentsReceived
    path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs
    startLine: 405
  assemblies:
  - System.Net.NetworkInformation
  namespace: System.Net.NetworkInformation
  summary: "\n<p>Gets the number of Transmission Control Protocol (TCP) segments received.</p>\n"
  remarks: "\n<p>This data includes segments with errors and segments received on currently established connections.</p>\n"
  example:
  - "\n<p>The following code example displays segment information.</p>NCLNetInfo2#7"
  syntax:
    content: public abstract long SegmentsReceived { get; }
    content.vb: Public MustOverride ReadOnly Property SegmentsReceived As Long
    parameters: []
    return:
      type: System.Int64
      description: "\n<p>An <xref href=\"System.Int64\" data-throw-if-not-resolved=\"false\"></xref> value that specifies the total number of TCP segments received.</p>\n"
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
- uid: System.Net.NetworkInformation.TcpStatistics.SegmentsResent
  commentId: P:System.Net.NetworkInformation.TcpStatistics.SegmentsResent
  id: SegmentsResent
  parent: System.Net.NetworkInformation.TcpStatistics
  langs:
  - csharp
  - vb
  name: SegmentsResent
  fullName: System.Net.NetworkInformation.TcpStatistics.SegmentsResent
  type: Property
  source:
    remote:
      path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: SegmentsResent
    path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs
    startLine: 406
  assemblies:
  - System.Net.NetworkInformation
  namespace: System.Net.NetworkInformation
  summary: "\n<p>Gets the number of Transmission Control Protocol (TCP) segments re-sent.</p>\n"
  remarks: "\n<p>TCP segments that are not acknowledged as being received at the destination are retransmitted.</p>\n"
  example:
  - "\n<p>The following code example displays segment information.</p>NCLNetInfo2#7"
  syntax:
    content: public abstract long SegmentsResent { get; }
    content.vb: Public MustOverride ReadOnly Property SegmentsResent As Long
    parameters: []
    return:
      type: System.Int64
      description: "\n<p>An <xref href=\"System.Int64\" data-throw-if-not-resolved=\"false\"></xref> value that specifies the total number of TCP segments retransmitted.</p>\n"
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
- uid: System.Net.NetworkInformation.TcpStatistics.SegmentsSent
  commentId: P:System.Net.NetworkInformation.TcpStatistics.SegmentsSent
  id: SegmentsSent
  parent: System.Net.NetworkInformation.TcpStatistics
  langs:
  - csharp
  - vb
  name: SegmentsSent
  fullName: System.Net.NetworkInformation.TcpStatistics.SegmentsSent
  type: Property
  source:
    remote:
      path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: SegmentsSent
    path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs
    startLine: 407
  assemblies:
  - System.Net.NetworkInformation
  namespace: System.Net.NetworkInformation
  summary: "\n<p>Gets the number of Transmission Control Protocol (TCP) segments sent.</p>\n"
  remarks: "\n<p>This data includes segments sent for currently established connections but does not include segments containing only retransmitted octets.</p>\n"
  example:
  - "\n<p>The following code example displays segment information.</p>NCLNetInfo2#7"
  syntax:
    content: public abstract long SegmentsSent { get; }
    content.vb: Public MustOverride ReadOnly Property SegmentsSent As Long
    parameters: []
    return:
      type: System.Int64
      description: "\n<p>An <xref href=\"System.Int64\" data-throw-if-not-resolved=\"false\"></xref> value that specifies the total number of TCP segments sent.</p>\n"
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
references:
- uid: System.Net.NetworkInformation
  isExternal: false
  name: System.Net.NetworkInformation
  fullName: System.Net.NetworkInformation
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Int64
  parent: System
  isExternal: false
  name: Int64
  fullName: System.Int64
