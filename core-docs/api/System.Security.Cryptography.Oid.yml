items:
- uid: System.Security.Cryptography.Oid
  commentId: T:System.Security.Cryptography.Oid
  id: Oid
  parent: System.Security.Cryptography
  children:
  - System.Security.Cryptography.Oid.#ctor(System.Security.Cryptography.Oid)
  - System.Security.Cryptography.Oid.#ctor(System.String)
  - System.Security.Cryptography.Oid.#ctor(System.String,System.String)
  - System.Security.Cryptography.Oid.FriendlyName
  - System.Security.Cryptography.Oid.FromFriendlyName(System.String,System.Security.Cryptography.OidGroup)
  - System.Security.Cryptography.Oid.FromOidValue(System.String,System.Security.Cryptography.OidGroup)
  - System.Security.Cryptography.Oid.Value
  langs:
  - csharp
  - vb
  name: Oid
  fullName: System.Security.Cryptography.Oid
  type: Class
  source:
    remote:
      path: src/System.Security.Cryptography.Encoding/ref/System.Security.Cryptography.Encoding.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Oid
    path: src/System.Security.Cryptography.Encoding/ref/System.Security.Cryptography.Encoding.cs
    startLine: 22
  assemblies:
  - System.Security.Cryptography.Encoding
  namespace: System.Security.Cryptography
  summary: "\n<p>Represents a cryptographic object identifier. This class cannot be inherited.</p>\n"
  remarks: "\n<p>Cryptographic object identifiers consist of a value/name pair. If one property in a pair is set to a known value, the other property is updated automatically to a corresponding value. For example, if the <xref href=\"System.Security.Cryptography.Oid.Value\" data-throw-if-not-resolved=\"false\"></xref> property is set to \"1.3.6.1.5.5.7.3.4\", the <xref href=\"System.Security.Cryptography.Oid.FriendlyName\" data-throw-if-not-resolved=\"false\"></xref> property, which is localized, is set automatically to \"Secure Email\". </p>\n"
  example:
  - "\n<p>The following code example shows how to use the <xref href=\"System.Security.Cryptography.Oid\" data-throw-if-not-resolved=\"false\"></xref> class.</p>Cryptography.Oid#1"
  syntax:
    content: public sealed class Oid
    content.vb: Public NotInheritable Class Oid
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: System.Security.Cryptography.Oid.#ctor(System.Security.Cryptography.Oid)
  commentId: M:System.Security.Cryptography.Oid.#ctor(System.Security.Cryptography.Oid)
  id: '#ctor(System.Security.Cryptography.Oid)'
  parent: System.Security.Cryptography.Oid
  langs:
  - csharp
  - vb
  name: Oid(Oid)
  fullName: System.Security.Cryptography.Oid.Oid(System.Security.Cryptography.Oid)
  type: Constructor
  source:
    remote:
      path: src/System.Security.Cryptography.Encoding/ref/System.Security.Cryptography.Encoding.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Security.Cryptography.Encoding/ref/System.Security.Cryptography.Encoding.cs
    startLine: 24
  assemblies:
  - System.Security.Cryptography.Encoding
  namespace: System.Security.Cryptography
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Security.Cryptography.Oid\" data-throw-if-not-resolved=\"false\"></xref> class using the specified <xref href=\"System.Security.Cryptography.Oid\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  remarks: "\n<p>This constructor copies the values of an existing <xref href=\"System.Security.Cryptography.Oid\" data-throw-if-not-resolved=\"false\"></xref> object to a new object.</p>\n"
  example:
  - "\n<p>The following code example shows how to use the <xref href=\"System.Security.Cryptography.Oid\" data-throw-if-not-resolved=\"false\"></xref> class.</p>Cryptography.Oid#1"
  syntax:
    content: public Oid(Oid oid)
    content.vb: Public Sub New(oid As Oid)
    parameters:
    - id: oid
      type: System.Security.Cryptography.Oid
      description: "\n<p>The object identifier information to use to create the new object identifier.</p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>oid </em>is <strong>null</strong>.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Security.Cryptography.Oid.#ctor(System.String)
  commentId: M:System.Security.Cryptography.Oid.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Security.Cryptography.Oid
  langs:
  - csharp
  - vb
  name: Oid(String)
  fullName: System.Security.Cryptography.Oid.Oid(System.String)
  type: Constructor
  source:
    remote:
      path: src/System.Security.Cryptography.Encoding/ref/System.Security.Cryptography.Encoding.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Security.Cryptography.Encoding/ref/System.Security.Cryptography.Encoding.cs
    startLine: 25
  assemblies:
  - System.Security.Cryptography.Encoding
  namespace: System.Security.Cryptography
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Security.Cryptography.Oid\" data-throw-if-not-resolved=\"false\"></xref> class using a string value of an <xref href=\"System.Security.Cryptography.Oid\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  remarks: "\n<p>This constructor copies the values of an existing <xref href=\"System.Security.Cryptography.Oid\" data-throw-if-not-resolved=\"false\"></xref> object to a new object.</p>\n"
  example:
  - "\n<p>The following code example shows how to use the <xref href=\"System.Security.Cryptography.Oid\" data-throw-if-not-resolved=\"false\"></xref> class.</p>Cryptography.Oid#1"
  syntax:
    content: public Oid(string oid)
    content.vb: Public Sub New(oid As String)
    parameters:
    - id: oid
      type: System.String
      description: "\n<p>An object identifier.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Security.Cryptography.Oid.#ctor(System.String,System.String)
  commentId: M:System.Security.Cryptography.Oid.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: System.Security.Cryptography.Oid
  langs:
  - csharp
  - vb
  name: Oid(String, String)
  fullName: System.Security.Cryptography.Oid.Oid(System.String, System.String)
  type: Constructor
  source:
    remote:
      path: src/System.Security.Cryptography.Encoding/ref/System.Security.Cryptography.Encoding.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Security.Cryptography.Encoding/ref/System.Security.Cryptography.Encoding.cs
    startLine: 26
  assemblies:
  - System.Security.Cryptography.Encoding
  namespace: System.Security.Cryptography
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Security.Cryptography.Oid\" data-throw-if-not-resolved=\"false\"></xref> class using the specified value and friendly name.</p>\n"
  remarks: "\n<p>This constructor can be used to copy the values of an existing <xref href=\"System.Security.Cryptography.Oid\" data-throw-if-not-resolved=\"false\"></xref> object. Note that if the Oid value is not recognized, the <em>value</em> and <em>friendlyName</em> parameters are not verified to determine if they correspond to each other. This is because there are object identifiers that the .NET Framework does not recognize, although an application may be able to interpret them.</p>\n"
  example:
  - "\n<p>The following code example shows how to use the <xref href=\"System.Security.Cryptography.Oid\" data-throw-if-not-resolved=\"false\"></xref> class.</p>Cryptography.Oid#1"
  syntax:
    content: public Oid(string value, string friendlyName)
    content.vb: Public Sub New(value As String, friendlyName As String)
    parameters:
    - id: value
      type: System.String
      description: "\n<p>The dotted number of the identifier.</p>\n"
    - id: friendlyName
      type: System.String
      description: "\n<p>The friendly name of the identifier.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Security.Cryptography.Oid.FriendlyName
  commentId: P:System.Security.Cryptography.Oid.FriendlyName
  id: FriendlyName
  parent: System.Security.Cryptography.Oid
  langs:
  - csharp
  - vb
  name: FriendlyName
  fullName: System.Security.Cryptography.Oid.FriendlyName
  type: Property
  source:
    remote:
      path: src/System.Security.Cryptography.Encoding/ref/System.Security.Cryptography.Encoding.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: FriendlyName
    path: src/System.Security.Cryptography.Encoding/ref/System.Security.Cryptography.Encoding.cs
    startLine: 27
  assemblies:
  - System.Security.Cryptography.Encoding
  namespace: System.Security.Cryptography
  summary: "\n<p>Gets or sets the friendly name of the identifier.</p>\n"
  remarks: "\n<p>If one value of an <xref href=\"System.Security.Cryptography.Oid\" data-throw-if-not-resolved=\"false\"></xref> property is set to a known value, the other value of an <xref href=\"System.Security.Cryptography.Oid\" data-throw-if-not-resolved=\"false\"></xref> property is updated automatically to a corresponding value. For example, if the <xref href=\"System.Security.Cryptography.Oid.FriendlyName\" data-throw-if-not-resolved=\"false\"></xref> property is set to \"Secure Email\", the <xref href=\"System.Security.Cryptography.Oid.Value\" data-throw-if-not-resolved=\"false\"></xref> property is set automatically to \"1.3.6.1.5.5.7.3.4\". </p>\n"
  example:
  - "\n<p>The following code example shows how to use the <xref href=\"System.Security.Cryptography.Oid\" data-throw-if-not-resolved=\"false\"></xref> class.</p>Cryptography.Oid#1"
  syntax:
    content: public string FriendlyName { get; set; }
    content.vb: Public Property FriendlyName As String
    parameters: []
    return:
      type: System.String
      description: "\n<p>The friendly name of the identifier.</p>\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Security.Cryptography.Oid.Value
  commentId: P:System.Security.Cryptography.Oid.Value
  id: Value
  parent: System.Security.Cryptography.Oid
  langs:
  - csharp
  - vb
  name: Value
  fullName: System.Security.Cryptography.Oid.Value
  type: Property
  source:
    remote:
      path: src/System.Security.Cryptography.Encoding/ref/System.Security.Cryptography.Encoding.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Value
    path: src/System.Security.Cryptography.Encoding/ref/System.Security.Cryptography.Encoding.cs
    startLine: 28
  assemblies:
  - System.Security.Cryptography.Encoding
  namespace: System.Security.Cryptography
  summary: "\n<p>Gets or sets the dotted number of the identifier.</p>\n"
  remarks: "\n<p>If one value of an <xref href=\"System.Security.Cryptography.Oid\" data-throw-if-not-resolved=\"false\"></xref> property is set to a known value, the other value of an <xref href=\"System.Security.Cryptography.Oid\" data-throw-if-not-resolved=\"false\"></xref> property is updated automatically to a corresponding value. For example, if the <xref href=\"System.Security.Cryptography.Oid.Value\" data-throw-if-not-resolved=\"false\"></xref> property is set to \"1.3.6.1.5.5.7.3.4\", the <xref href=\"System.Security.Cryptography.Oid.FriendlyName\" data-throw-if-not-resolved=\"false\"></xref> property is set automatically to \"Secure Email\".</p>\n"
  example:
  - "\n<p>The following code example shows how to use the <xref href=\"System.Security.Cryptography.Oid\" data-throw-if-not-resolved=\"false\"></xref> class.</p>Cryptography.Oid#1"
  syntax:
    content: public string Value { get; set; }
    content.vb: Public Property Value As String
    parameters: []
    return:
      type: System.String
      description: "\n<p>The dotted number of the identifier.</p>\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Security.Cryptography.Oid.FromFriendlyName(System.String,System.Security.Cryptography.OidGroup)
  commentId: M:System.Security.Cryptography.Oid.FromFriendlyName(System.String,System.Security.Cryptography.OidGroup)
  id: FromFriendlyName(System.String,System.Security.Cryptography.OidGroup)
  parent: System.Security.Cryptography.Oid
  langs:
  - csharp
  - vb
  name: FromFriendlyName(String, OidGroup)
  fullName: System.Security.Cryptography.Oid.FromFriendlyName(System.String, System.Security.Cryptography.OidGroup)
  type: Method
  source:
    remote:
      path: src/System.Security.Cryptography.Encoding/ref/System.Security.Cryptography.Encoding.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: FromFriendlyName
    path: src/System.Security.Cryptography.Encoding/ref/System.Security.Cryptography.Encoding.cs
    startLine: 29
  assemblies:
  - System.Security.Cryptography.Encoding
  namespace: System.Security.Cryptography
  summary: "\n<p>Creates an <xref href=\"System.Security.Cryptography.Oid\" data-throw-if-not-resolved=\"false\"></xref> object from an OID friendly name by searching the specified group.</p>\n"
  syntax:
    content: public static Oid FromFriendlyName(string friendlyName, OidGroup group)
    content.vb: Public Shared Function FromFriendlyName(friendlyName As String, group As OidGroup) As Oid
    parameters:
    - id: friendlyName
      type: System.String
      description: "\n<p>The friendly name of the identifier.</p>\n"
    - id: group
      type: System.Security.Cryptography.OidGroup
      description: "\n<p>The group to search in.</p>\n"
    return:
      type: System.Security.Cryptography.Oid
      description: "\n<p>An object that represents the specified OID.</p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>friendlyName </em> is <strong>null</strong>.</p>\n"
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "\n<p>The OID was not found.</p>\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Security.Cryptography.Oid.FromOidValue(System.String,System.Security.Cryptography.OidGroup)
  commentId: M:System.Security.Cryptography.Oid.FromOidValue(System.String,System.Security.Cryptography.OidGroup)
  id: FromOidValue(System.String,System.Security.Cryptography.OidGroup)
  parent: System.Security.Cryptography.Oid
  langs:
  - csharp
  - vb
  name: FromOidValue(String, OidGroup)
  fullName: System.Security.Cryptography.Oid.FromOidValue(System.String, System.Security.Cryptography.OidGroup)
  type: Method
  source:
    remote:
      path: src/System.Security.Cryptography.Encoding/ref/System.Security.Cryptography.Encoding.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: FromOidValue
    path: src/System.Security.Cryptography.Encoding/ref/System.Security.Cryptography.Encoding.cs
    startLine: 30
  assemblies:
  - System.Security.Cryptography.Encoding
  namespace: System.Security.Cryptography
  summary: "\n<p>Creates an <xref href=\"System.Security.Cryptography.Oid\" data-throw-if-not-resolved=\"false\"></xref> object by using the specified OID value and group.</p>\n"
  syntax:
    content: public static Oid FromOidValue(string oidValue, OidGroup group)
    content.vb: Public Shared Function FromOidValue(oidValue As String, group As OidGroup) As Oid
    parameters:
    - id: oidValue
      type: System.String
      description: "\n<p>The OID value.</p>\n"
    - id: group
      type: System.Security.Cryptography.OidGroup
      description: "\n<p>The group to search in.</p>\n"
    return:
      type: System.Security.Cryptography.Oid
      description: "\n<p>A new instance of an <xref href=\"System.Security.Cryptography.Oid\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>oidValue</em> is <strong>null</strong>.</p>\n"
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "\n<p>The friendly name for the OID value was not found.</p>\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: System.Security.Cryptography
  isExternal: false
  name: System.Security.Cryptography
  fullName: System.Security.Cryptography
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Security.Cryptography.Oid
  parent: System.Security.Cryptography
  isExternal: false
  name: Oid
  fullName: System.Security.Cryptography.Oid
- uid: System.String
  parent: System
  isExternal: false
  name: String
  fullName: System.String
- uid: System.Security.Cryptography.OidGroup
  parent: System.Security.Cryptography
  isExternal: false
  name: OidGroup
  fullName: System.Security.Cryptography.OidGroup
- uid: System.ArgumentNullException
  isExternal: false
  name: ArgumentNullException
  fullName: System.ArgumentNullException
- uid: System.Security.Cryptography.CryptographicException
  isExternal: false
  name: CryptographicException
  fullName: System.Security.Cryptography.CryptographicException
