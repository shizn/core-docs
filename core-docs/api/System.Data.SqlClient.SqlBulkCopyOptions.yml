items:
- uid: System.Data.SqlClient.SqlBulkCopyOptions
  commentId: T:System.Data.SqlClient.SqlBulkCopyOptions
  id: SqlBulkCopyOptions
  parent: System.Data.SqlClient
  children:
  - System.Data.SqlClient.SqlBulkCopyOptions.CheckConstraints
  - System.Data.SqlClient.SqlBulkCopyOptions.Default
  - System.Data.SqlClient.SqlBulkCopyOptions.FireTriggers
  - System.Data.SqlClient.SqlBulkCopyOptions.KeepIdentity
  - System.Data.SqlClient.SqlBulkCopyOptions.KeepNulls
  - System.Data.SqlClient.SqlBulkCopyOptions.TableLock
  - System.Data.SqlClient.SqlBulkCopyOptions.UseInternalTransaction
  langs:
  - csharp
  - vb
  name: SqlBulkCopyOptions
  fullName: System.Data.SqlClient.SqlBulkCopyOptions
  type: Enum
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlBulkCopyOptions.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: SqlBulkCopyOptions
    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlBulkCopyOptions.cs
    startLine: 10
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlClient
  summary: "\n<p>Bitwise flag that specifies one or more options to use with an instance of <xref href=\"System.Data.SqlClient.SqlBulkCopy\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  remarks: "\n<p>You can use the <xref href=\"System.Data.SqlClient.SqlBulkCopyOptions\" data-throw-if-not-resolved=\"false\"></xref> enumeration when you construct a <xref href=\"System.Data.SqlClient.SqlBulkCopy\" data-throw-if-not-resolved=\"false\"></xref> instance to change how the <see cref=\"Overload:System.Data.SqlClient.SqlBulkCopy.WriteToServer\"></see> methods for that instance behave.</p>\n"
  example:
  - "\n<p>The following console application demonstrates how to perform a bulk load that copies the value in the identity column of the source table to the corresponding column in the destination table, instead of generating a new value for each row's identity column.</p>\n<p>To see how the option changes the way the bulk load works, run the sample with the <strong>dbo.BulkCopyDemoMatchingColumns</strong> table empty. All rows load from the source. Next, run the sample again without emptying the table. An exception is thrown, and the code writes a message to the console window notifying you that rows were not added because of primary key violations.</p>\n<p>This sample will not run unless you have created the work tables as described in Bulk Copy Example Setup. This code is provided to demonstrate the syntax for using <strong>SqlBulkCopy</strong> only. If the source and destination tables are in the same SQL Server instance, it is easier and faster to use a Transact-SQL <code>INSERT â€¦ SELECT</code> statement to copy the data.</p>DataWorks SqlBulkCopy.KeepIdentity#1"
  syntax:
    content: >-
      [Flags]

      public enum SqlBulkCopyOptions
    content.vb: >-
      <Flags>

      Public Enum SqlBulkCopyOptions
  attributes:
  - type: System.FlagsAttribute
    ctor: System.FlagsAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - enum
  modifiers.vb:
  - Public
  - Enum
- uid: System.Data.SqlClient.SqlBulkCopyOptions.CheckConstraints
  commentId: F:System.Data.SqlClient.SqlBulkCopyOptions.CheckConstraints
  id: CheckConstraints
  parent: System.Data.SqlClient.SqlBulkCopyOptions
  langs:
  - csharp
  - vb
  name: CheckConstraints
  fullName: System.Data.SqlClient.SqlBulkCopyOptions.CheckConstraints
  type: Field
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlBulkCopyOptions.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CheckConstraints
    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlBulkCopyOptions.cs
    startLine: 15
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlClient
  summary: "\n<p>Check constraints while data is being inserted. By default, constraints are not checked.</p>\n"
  syntax:
    content: CheckConstraints = 2
    return:
      type: System.Data.SqlClient.SqlBulkCopyOptions
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Data.SqlClient.SqlBulkCopyOptions.Default
  commentId: F:System.Data.SqlClient.SqlBulkCopyOptions.Default
  id: Default
  parent: System.Data.SqlClient.SqlBulkCopyOptions
  langs:
  - csharp
  - vb
  name: Default
  fullName: System.Data.SqlClient.SqlBulkCopyOptions.Default
  type: Field
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlBulkCopyOptions.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Default
    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlBulkCopyOptions.cs
    startLine: 13
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlClient
  summary: "\n<p>Use the default values for all options.</p>\n"
  syntax:
    content: Default = 0
    return:
      type: System.Data.SqlClient.SqlBulkCopyOptions
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Data.SqlClient.SqlBulkCopyOptions.FireTriggers
  commentId: F:System.Data.SqlClient.SqlBulkCopyOptions.FireTriggers
  id: FireTriggers
  parent: System.Data.SqlClient.SqlBulkCopyOptions
  langs:
  - csharp
  - vb
  name: FireTriggers
  fullName: System.Data.SqlClient.SqlBulkCopyOptions.FireTriggers
  type: Field
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlBulkCopyOptions.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: FireTriggers
    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlBulkCopyOptions.cs
    startLine: 18
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlClient
  summary: "\n<p>When specified, cause the server to fire the insert triggers for the rows being inserted into the database.</p>\n"
  syntax:
    content: FireTriggers = 16
    return:
      type: System.Data.SqlClient.SqlBulkCopyOptions
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Data.SqlClient.SqlBulkCopyOptions.KeepIdentity
  commentId: F:System.Data.SqlClient.SqlBulkCopyOptions.KeepIdentity
  id: KeepIdentity
  parent: System.Data.SqlClient.SqlBulkCopyOptions
  langs:
  - csharp
  - vb
  name: KeepIdentity
  fullName: System.Data.SqlClient.SqlBulkCopyOptions.KeepIdentity
  type: Field
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlBulkCopyOptions.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: KeepIdentity
    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlBulkCopyOptions.cs
    startLine: 14
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlClient
  summary: "\n<p>Preserve source identity values. When not specified, identity values are assigned by the destination.</p>\n"
  syntax:
    content: KeepIdentity = 1
    return:
      type: System.Data.SqlClient.SqlBulkCopyOptions
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Data.SqlClient.SqlBulkCopyOptions.KeepNulls
  commentId: F:System.Data.SqlClient.SqlBulkCopyOptions.KeepNulls
  id: KeepNulls
  parent: System.Data.SqlClient.SqlBulkCopyOptions
  langs:
  - csharp
  - vb
  name: KeepNulls
  fullName: System.Data.SqlClient.SqlBulkCopyOptions.KeepNulls
  type: Field
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlBulkCopyOptions.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: KeepNulls
    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlBulkCopyOptions.cs
    startLine: 17
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlClient
  summary: "\n<p>Preserve null values in the destination table regardless of the settings for default values. When not specified, null values are replaced by default values where applicable.</p>\n"
  syntax:
    content: KeepNulls = 8
    return:
      type: System.Data.SqlClient.SqlBulkCopyOptions
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Data.SqlClient.SqlBulkCopyOptions.TableLock
  commentId: F:System.Data.SqlClient.SqlBulkCopyOptions.TableLock
  id: TableLock
  parent: System.Data.SqlClient.SqlBulkCopyOptions
  langs:
  - csharp
  - vb
  name: TableLock
  fullName: System.Data.SqlClient.SqlBulkCopyOptions.TableLock
  type: Field
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlBulkCopyOptions.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: TableLock
    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlBulkCopyOptions.cs
    startLine: 16
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlClient
  summary: "\n<p>Obtain a bulk update lock for the duration of the bulk copy operation. When not specified, row locks are used.</p>\n"
  syntax:
    content: TableLock = 4
    return:
      type: System.Data.SqlClient.SqlBulkCopyOptions
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Data.SqlClient.SqlBulkCopyOptions.UseInternalTransaction
  commentId: F:System.Data.SqlClient.SqlBulkCopyOptions.UseInternalTransaction
  id: UseInternalTransaction
  parent: System.Data.SqlClient.SqlBulkCopyOptions
  langs:
  - csharp
  - vb
  name: UseInternalTransaction
  fullName: System.Data.SqlClient.SqlBulkCopyOptions.UseInternalTransaction
  type: Field
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlBulkCopyOptions.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: UseInternalTransaction
    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlBulkCopyOptions.cs
    startLine: 19
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlClient
  summary: "\n<p>When specified, each batch of the bulk-copy operation will occur within a transaction. If you indicate this option and also provide a <xref href=\"System.Data.SqlClient.SqlTransaction\" data-throw-if-not-resolved=\"false\"></xref> object to the constructor, an <xref href=\"System.ArgumentException\" data-throw-if-not-resolved=\"false\"></xref> occurs.</p>\n"
  syntax:
    content: UseInternalTransaction = 32
    return:
      type: System.Data.SqlClient.SqlBulkCopyOptions
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
references:
- uid: System.Data.SqlClient
  isExternal: false
  name: System.Data.SqlClient
  fullName: System.Data.SqlClient
- uid: System.Data.SqlClient.SqlBulkCopyOptions
  parent: System.Data.SqlClient
  isExternal: false
  name: SqlBulkCopyOptions
  fullName: System.Data.SqlClient.SqlBulkCopyOptions
