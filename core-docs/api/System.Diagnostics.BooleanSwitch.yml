items:
- uid: System.Diagnostics.BooleanSwitch
  commentId: T:System.Diagnostics.BooleanSwitch
  id: BooleanSwitch
  parent: System.Diagnostics
  children:
  - System.Diagnostics.BooleanSwitch.#ctor(System.String,System.String)
  - System.Diagnostics.BooleanSwitch.#ctor(System.String,System.String,System.String)
  - System.Diagnostics.BooleanSwitch.Enabled
  - System.Diagnostics.BooleanSwitch.OnValueChanged
  langs:
  - csharp
  - vb
  name: BooleanSwitch
  fullName: System.Diagnostics.BooleanSwitch
  type: Class
  source:
    remote:
      path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/BooleanSwitch.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: BooleanSwitch
    path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/BooleanSwitch.cs
    startLine: 13
  assemblies:
  - System.Diagnostics.TraceSource
  namespace: System.Diagnostics
  summary: "\n<p>Provides a simple on/off switch that controls debugging and tracing output.</p>\n"
  remarks: "\n<p>You can use a Boolean trace switch to enable or disable messages based on their importance. Use the <xref href=\"System.Diagnostics.BooleanSwitch.Enabled\" data-throw-if-not-resolved=\"false\"></xref> property to get the current value of the switch.</p>\n<p>You can enable or disable a <xref href=\"System.Diagnostics.BooleanSwitch\" data-throw-if-not-resolved=\"false\"></xref> through the application configuration file and then use the configured <xref href=\"System.Diagnostics.BooleanSwitch\" data-throw-if-not-resolved=\"false\"></xref> value in your application. Alternately, you can create a <xref href=\"System.Diagnostics.BooleanSwitch\" data-throw-if-not-resolved=\"false\"></xref> in your code and set the <xref href=\"System.Diagnostics.BooleanSwitch.Enabled\" data-throw-if-not-resolved=\"false\"></xref> property directly to instrument a specific section of code.</p>\n<p>To configure a <xref href=\"System.Diagnostics.BooleanSwitch\" data-throw-if-not-resolved=\"false\"></xref>, edit the configuration file that corresponds to the name of your application. Within this file, you can add or remove a switch, set a switch's value, or clear all the switches previously set by the application. The configuration file should be formatted like the following example.</p>\n<pre><code><configuration>\n<system.diagnostics>\n<switches>\n<add name=\"mySwitch\" value=\"1\"/>\n</switches>\n</system.diagnostics>\n</configuration></code></pre>\n<p>This example configuration section defines a <xref href=\"System.Diagnostics.BooleanSwitch\" data-throw-if-not-resolved=\"false\"></xref> with the <xref href=\"System.Diagnostics.Switch.DisplayName\" data-throw-if-not-resolved=\"false\"></xref> property set to <code>mySwitch</code> and the <xref href=\"System.Diagnostics.BooleanSwitch.Enabled\" data-throw-if-not-resolved=\"false\"></xref> value set to <strong>true</strong>. Within your application, you can use the configured switch value by creating a <xref href=\"System.Diagnostics.BooleanSwitch\" data-throw-if-not-resolved=\"false\"></xref> with the same name, as shown in the following code example.</p>Classic BooleanSwitch.BooleanSwitch Example#2<p>By default, the <xref href=\"System.Diagnostics.BooleanSwitch.Enabled\" data-throw-if-not-resolved=\"false\"></xref> property is set using the value specified in the configuration file. Configure the switch with a value of 0 to set the <xref href=\"System.Diagnostics.BooleanSwitch.Enabled\" data-throw-if-not-resolved=\"false\"></xref> property to <strong>false</strong>; configure the switch with a nonzero value to set the <xref href=\"System.Diagnostics.BooleanSwitch.Enabled\" data-throw-if-not-resolved=\"false\"></xref> property to <strong>true</strong>. If the <xref href=\"System.Diagnostics.BooleanSwitch\" data-throw-if-not-resolved=\"false\"></xref> constructor cannot find initial switch settings in the configuration file, the <xref href=\"System.Diagnostics.BooleanSwitch.Enabled\" data-throw-if-not-resolved=\"false\"></xref> property of the new switch is set to <strong>false</strong> by default.</p><p>You must enable tracing or debugging to use a switch. The following syntax is compiler specific. If you use compilers other than C# or Visual Basic, refer to the documentation for your compiler.</p><ul><li><p>To enable debugging in C#, add the <strong>/d:DEBUG</strong> flag to the compiler command line when you compile your code, or you can add <strong>#define DEBUG</strong> to the top of your file. In Visual Basic, add the <strong>/d:DEBUG=True</strong> flag to the compiler command line.</p></li><li><p>To enable tracing in C#, add the <strong>/d:TRACE</strong> flag to the compiler command line when you compile your code, or add <strong>#define TRACE</strong> to the top of your file. In Visual Basic, add the <strong>/d:TRACE=True</strong> flag to the compiler command line.</p></li></ul><p>These debug and trace compiler switches are not required when using the <xref href=\"System.Diagnostics.BooleanSwitch\" data-throw-if-not-resolved=\"false\"></xref> class in isolation. They are only required in conjunction with <xref href=\"System.Diagnostics.Trace\" data-throw-if-not-resolved=\"false\"></xref> or <xref href=\"System.Diagnostics.Debug\" data-throw-if-not-resolved=\"false\"></xref> methods that are conditionally compiled.</p><p>For more information on instrumenting your application, see <xref href=\"System.Diagnostics.Debug\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"System.Diagnostics.Trace\" data-throw-if-not-resolved=\"false\"></xref>. For more information about configuring and using trace switches, see Trace Switches.</p><p>To improve performance, you can make <xref href=\"System.Diagnostics.BooleanSwitch\" data-throw-if-not-resolved=\"false\"></xref> members <strong>static</strong> in your class.</p>"
  example:
  - "\n<p>The following example creates a <xref href=\"System.Diagnostics.BooleanSwitch\" data-throw-if-not-resolved=\"false\"></xref> and uses the switch to determine whether to print an error message. You create the switch at the class level. The <code>Main</code> method passes its location to <code>MyMethod</code>, which prints an error message and where the error occurred.</p>Classic BooleanSwitch.BooleanSwitch Example#1"
  syntax:
    content: 'public class BooleanSwitch : Switch'
    content.vb: >-
      Public Class BooleanSwitch
          Inherits Switch
  seealso:
  - type: System.Diagnostics.Switch
    commentId: T:System.Diagnostics.Switch
  - type: System.Diagnostics.TraceSwitch
    commentId: T:System.Diagnostics.TraceSwitch
  - type: System.Diagnostics.Debug
    commentId: T:System.Diagnostics.Debug
  - type: System.Diagnostics.Trace
    commentId: T:System.Diagnostics.Trace
  inheritance:
  - System.Object
  - System.Diagnostics.Switch
  inheritedMembers:
  - System.Diagnostics.Switch.Description
  - System.Diagnostics.Switch.DisplayName
  - System.Diagnostics.Switch.SwitchSetting
  - System.Diagnostics.Switch.Value
  - System.Diagnostics.Switch.OnSwitchSettingChanged
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: System.Diagnostics.BooleanSwitch.#ctor(System.String,System.String)
  commentId: M:System.Diagnostics.BooleanSwitch.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: System.Diagnostics.BooleanSwitch
  langs:
  - csharp
  - vb
  name: BooleanSwitch(String, String)
  fullName: System.Diagnostics.BooleanSwitch.BooleanSwitch(System.String, System.String)
  type: Constructor
  source:
    remote:
      path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/BooleanSwitch.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/BooleanSwitch.cs
    startLine: 19
  assemblies:
  - System.Diagnostics.TraceSource
  namespace: System.Diagnostics
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Diagnostics.BooleanSwitch\" data-throw-if-not-resolved=\"false\"></xref> class with the specified display name and description.</p>\n"
  remarks: "\n<p>When you create a <xref href=\"System.Diagnostics.BooleanSwitch\" data-throw-if-not-resolved=\"false\"></xref>, the <em>displayName</em> parameter is used to find initial switch settings. If the constructor cannot find initial settings, the <xref href=\"System.Diagnostics.BooleanSwitch.Enabled\" data-throw-if-not-resolved=\"false\"></xref> property is set to <strong>false</strong> (disabled).</p>\n<p>To set the level of your <xref href=\"System.Diagnostics.BooleanSwitch\" data-throw-if-not-resolved=\"false\"></xref>, edit the configuration file corresponding to the name of your application. Within this file, you can add a switch and set its value, remove a switch, or clear all switches previously set by the application. The configuration file should be formatted like the following example: </p>\n<pre><code> <configuration>\n<system.diagnostics>\n<switches>\n   <add name=\"mySwitch\" value=\"10\" />\n   <add name=\"myNewSwitch\" value=\"20\" />\n   <remove name=\"mySwitch\" />\n   <clear/>\n</switches>\n</system.diagnostics>\n</configuration></code></pre>\n<p>The switches you created should be <strong>static</strong>.</p>\n"
  example:
  - "\n<p>The following example creates a <xref href=\"System.Diagnostics.BooleanSwitch\" data-throw-if-not-resolved=\"false\"></xref> and uses the switch to determine whether to print an error message. The switch is created at the class level. The <code>Main</code> method passes its location to <code>MyMethod</code>, which prints an error message and where the error occurred.</p>Classic BooleanSwitch.BooleanSwitch Example#1"
  syntax:
    content: public BooleanSwitch(string displayName, string description)
    content.vb: Public Sub New(displayName As String, description As String)
    parameters:
    - id: displayName
      type: System.String
    - id: description
      type: System.String
  seealso:
  - type: System.Diagnostics.BooleanSwitch
    commentId: T:System.Diagnostics.BooleanSwitch
  - type: System.Diagnostics.Switch
    commentId: T:System.Diagnostics.Switch
  - type: System.Diagnostics.Debug
    commentId: T:System.Diagnostics.Debug
  - type: System.Diagnostics.Trace
    commentId: T:System.Diagnostics.Trace
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Diagnostics.BooleanSwitch.#ctor(System.String,System.String,System.String)
  commentId: M:System.Diagnostics.BooleanSwitch.#ctor(System.String,System.String,System.String)
  id: '#ctor(System.String,System.String,System.String)'
  parent: System.Diagnostics.BooleanSwitch
  langs:
  - csharp
  - vb
  name: BooleanSwitch(String, String, String)
  fullName: System.Diagnostics.BooleanSwitch.BooleanSwitch(System.String, System.String, System.String)
  type: Constructor
  source:
    remote:
      path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/BooleanSwitch.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/BooleanSwitch.cs
    startLine: 24
  assemblies:
  - System.Diagnostics.TraceSource
  namespace: System.Diagnostics
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Diagnostics.BooleanSwitch\" data-throw-if-not-resolved=\"false\"></xref> class with the specified display name, description, and default switch value. </p>\n"
  remarks: "\n<p>The <em>displayName</em> parameter is used to set the value of the <xref href=\"System.Diagnostics.Switch.DisplayName\" data-throw-if-not-resolved=\"false\"></xref> property, and the <em>description</em> parameter is use to set the value of the <xref href=\"System.Diagnostics.Switch.Description\" data-throw-if-not-resolved=\"false\"></xref> property. The <em>defaultSwitchValue</em> parameter is saved as a field and used to initialize the <xref href=\"System.Diagnostics.Switch.Value\" data-throw-if-not-resolved=\"false\"></xref> property on first reference. For more information about constructor use, see the <xref href=\"System.Diagnostics.BooleanSwitch.#ctor(System.String,System.String)\" data-throw-if-not-resolved=\"false\"></xref> constructor.</p>\n"
  syntax:
    content: public BooleanSwitch(string displayName, string description, string defaultSwitchValue)
    content.vb: Public Sub New(displayName As String, description As String, defaultSwitchValue As String)
    parameters:
    - id: displayName
      type: System.String
    - id: description
      type: System.String
    - id: defaultSwitchValue
      type: System.String
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Diagnostics.BooleanSwitch.Enabled
  commentId: P:System.Diagnostics.BooleanSwitch.Enabled
  id: Enabled
  parent: System.Diagnostics.BooleanSwitch
  langs:
  - csharp
  - vb
  name: Enabled
  fullName: System.Diagnostics.BooleanSwitch.Enabled
  type: Property
  source:
    remote:
      path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/BooleanSwitch.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Enabled
    path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/BooleanSwitch.cs
    startLine: 32
  assemblies:
  - System.Diagnostics.TraceSource
  namespace: System.Diagnostics
  summary: "\n<p>Gets or sets a value indicating whether the switch is enabled or disabled.</p>\n"
  remarks: "\n<p>By default, this field is set to <strong>false</strong> (disabled). To enable the switch, assign this field the value of <strong>true</strong>. To disable the switch, assign the value to <strong>false</strong>.  The value of this property is determined by the value of the base class property <xref href=\"System.Diagnostics.Switch.SwitchSetting\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>This method uses the <xref href=\"System.Security.Permissions.SecurityAction.LinkDemand\" data-throw-if-not-resolved=\"false\"></xref> flag to prevent being called from untrusted code; only the immediate caller is required to have <xref href=\"System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode\" data-throw-if-not-resolved=\"false\"></xref> permission. If your code can be called from partially trusted code, do not pass the user input to <xref href=\"System.Runtime.InteropServices.Marshal\" data-throw-if-not-resolved=\"false\"></xref> class methods without validation.</p>\n"
  example:
  - "\n<p>The following code example creates a <xref href=\"System.Diagnostics.BooleanSwitch\" data-throw-if-not-resolved=\"false\"></xref> and uses the switch to determine whether to print an error message. The switch is created at the class level. The <code>Main</code> method passes its location to <code>MyMethod</code>, which prints an error message and the location where the error occurred.</p>Classic BooleanSwitch.Enabled Example#1"
  syntax:
    content: public bool Enabled { get; set; }
    content.vb: Public Property Enabled As Boolean
    parameters: []
    return:
      type: System.Boolean
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "\n<p>The caller does not have the correct permission.</p>\n"
  seealso:
  - type: System.Diagnostics.BooleanSwitch
    commentId: T:System.Diagnostics.BooleanSwitch
  - type: System.Diagnostics.Switch
    commentId: T:System.Diagnostics.Switch
  - type: System.Diagnostics.Debug
    commentId: T:System.Diagnostics.Debug
  - type: System.Diagnostics.Trace
    commentId: T:System.Diagnostics.Trace
  see:
  - type: System.Security.Permissions.SecurityPermission
    commentId: T:System.Security.Permissions.SecurityPermission
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Diagnostics.BooleanSwitch.OnValueChanged
  commentId: M:System.Diagnostics.BooleanSwitch.OnValueChanged
  id: OnValueChanged
  parent: System.Diagnostics.BooleanSwitch
  langs:
  - csharp
  - vb
  name: OnValueChanged()
  fullName: System.Diagnostics.BooleanSwitch.OnValueChanged()
  type: Method
  source:
    remote:
      path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/BooleanSwitch.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: OnValueChanged
    path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/BooleanSwitch.cs
    startLine: 44
  assemblies:
  - System.Diagnostics.TraceSource
  namespace: System.Diagnostics
  summary: "\n<p>Determines whether the new value of the <xref href=\"System.Diagnostics.Switch.Value\" data-throw-if-not-resolved=\"false\"></xref> property can be parsed as a Boolean value.</p>\n"
  remarks: "\n<p>The <xref href=\"System.Diagnostics.BooleanSwitch.OnValueChanged\" data-throw-if-not-resolved=\"false\"></xref> method determines whether the new value is a valid string representation of a Boolean value (\"false\" or \"true\"). If so, the method sets the <xref href=\"System.Diagnostics.Switch.SwitchSetting\" data-throw-if-not-resolved=\"false\"></xref> property to 0 or 1.  Otherwise, the base method is called, which converts the string value to an integer value, which is then used to set the <xref href=\"System.Diagnostics.Switch.SwitchSetting\" data-throw-if-not-resolved=\"false\"></xref> property.</p>\n"
  syntax:
    content: protected override void OnValueChanged()
    content.vb: Protected Overrides Sub OnValueChanged
  overridden: System.Diagnostics.Switch.OnValueChanged
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
references:
- uid: System.Diagnostics
  isExternal: false
  name: System.Diagnostics
  fullName: System.Diagnostics
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System.Diagnostics.Switch
  parent: System.Diagnostics
  isExternal: false
  name: Switch
  fullName: System.Diagnostics.Switch
- uid: System.Diagnostics.Switch.Description
  parent: System.Diagnostics.Switch
  isExternal: false
  name: Description
  fullName: System.Diagnostics.Switch.Description
- uid: System.Diagnostics.Switch.DisplayName
  parent: System.Diagnostics.Switch
  isExternal: false
  name: DisplayName
  fullName: System.Diagnostics.Switch.DisplayName
- uid: System.Diagnostics.Switch.SwitchSetting
  parent: System.Diagnostics.Switch
  isExternal: false
  name: SwitchSetting
  fullName: System.Diagnostics.Switch.SwitchSetting
- uid: System.Diagnostics.Switch.Value
  parent: System.Diagnostics.Switch
  isExternal: false
  name: Value
  fullName: System.Diagnostics.Switch.Value
- uid: System.Diagnostics.Switch.OnSwitchSettingChanged
  parent: System.Diagnostics.Switch
  isExternal: false
  name: OnSwitchSettingChanged()
  fullName: System.Diagnostics.Switch.OnSwitchSettingChanged()
  spec.csharp:
  - uid: System.Diagnostics.Switch.OnSwitchSettingChanged
    name: OnSwitchSettingChanged
    fullName: System.Diagnostics.Switch.OnSwitchSettingChanged
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Diagnostics.Switch.OnSwitchSettingChanged
    name: OnSwitchSettingChanged
    fullName: System.Diagnostics.Switch.OnSwitchSettingChanged
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.String
  parent: System
  isExternal: false
  name: String
  fullName: System.String
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  fullName: System.Boolean
- uid: System.Diagnostics.Switch.OnValueChanged
  parent: System.Diagnostics.Switch
  isExternal: false
  name: OnValueChanged()
  fullName: System.Diagnostics.Switch.OnValueChanged()
  spec.csharp:
  - uid: System.Diagnostics.Switch.OnValueChanged
    name: OnValueChanged
    fullName: System.Diagnostics.Switch.OnValueChanged
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Diagnostics.Switch.OnValueChanged
    name: OnValueChanged
    fullName: System.Diagnostics.Switch.OnValueChanged
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Security.SecurityException
  isExternal: false
  name: SecurityException
  fullName: System.Security.SecurityException
