items:
- uid: System.Diagnostics.SourceSwitch
  commentId: T:System.Diagnostics.SourceSwitch
  id: SourceSwitch
  parent: System.Diagnostics
  children:
  - System.Diagnostics.SourceSwitch.#ctor(System.String)
  - System.Diagnostics.SourceSwitch.#ctor(System.String,System.String)
  - System.Diagnostics.SourceSwitch.Level
  - System.Diagnostics.SourceSwitch.OnValueChanged
  - System.Diagnostics.SourceSwitch.ShouldTrace(System.Diagnostics.TraceEventType)
  langs:
  - csharp
  - vb
  name: SourceSwitch
  fullName: System.Diagnostics.SourceSwitch
  type: Class
  source:
    remote:
      path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/SourceSwitch.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: SourceSwitch
    path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/SourceSwitch.cs
    startLine: 9
  assemblies:
  - System.Diagnostics.TraceSource
  namespace: System.Diagnostics
  summary: "\n<p>Provides a multilevel switch to control tracing and debug output without recompiling your code.</p>\n"
  remarks: "\n<p>The <xref href=\"System.Diagnostics.TraceSource.Switch\" data-throw-if-not-resolved=\"false\"></xref> property of the <xref href=\"System.Diagnostics.TraceSource\" data-throw-if-not-resolved=\"false\"></xref> class is a <xref href=\"System.Diagnostics.SourceSwitch\" data-throw-if-not-resolved=\"false\"></xref> object. The <xref href=\"System.Diagnostics.SourceSwitch\" data-throw-if-not-resolved=\"false\"></xref> class provides a <xref href=\"System.Diagnostics.SourceSwitch.Level\" data-throw-if-not-resolved=\"false\"></xref> property to test the event level of the switch. The <xref href=\"System.Diagnostics.SourceSwitch.Level\" data-throw-if-not-resolved=\"false\"></xref> property gets or sets the switch's <xref href=\"System.Diagnostics.TraceLevel\" data-throw-if-not-resolved=\"false\"></xref> value.</p>\n<p>You can set the event level of a <xref href=\"System.Diagnostics.SourceSwitch\" data-throw-if-not-resolved=\"false\"></xref> through the application configuration file and then use the configured <xref href=\"System.Diagnostics.SourceSwitch\" data-throw-if-not-resolved=\"false\"></xref> level in your application. Alternatively, you can create a <xref href=\"System.Diagnostics.SourceSwitch\" data-throw-if-not-resolved=\"false\"></xref> in your code and set the level directly, to instrument a specific section of code.</p>\n<p>To configure a <xref href=\"System.Diagnostics.SourceSwitch\" data-throw-if-not-resolved=\"false\"></xref>, edit the configuration file that corresponds to the name of your application. Within this file, you can set a switch's value or clear all the switches previously set by the application. The configuration file should be formatted as shown in the following example. </p>\n<pre><code><switches>\n<add name=\"SourceSwitch\" value=\"Verbose\"></add>\n</switches></code></pre>\n<p>The switch is used to check whether a trace should be propagated or ignored. Each <xref href=\"System.Diagnostics.TraceSource\" data-throw-if-not-resolved=\"false\"></xref> trace method calls the <xref href=\"System.Diagnostics.SourceSwitch.ShouldTrace(System.Diagnostics.TraceEventType)\" data-throw-if-not-resolved=\"false\"></xref> method before calling the listeners. If the <xref href=\"System.Diagnostics.SourceSwitch.ShouldTrace(System.Diagnostics.TraceEventType)\" data-throw-if-not-resolved=\"false\"></xref> method returns <strong>false</strong>, the trace is ignored and the trace method exits. If the <xref href=\"System.Diagnostics.SourceSwitch.ShouldTrace(System.Diagnostics.TraceEventType)\" data-throw-if-not-resolved=\"false\"></xref> method returns <strong>true</strong>, the trace is passed to the listeners.</p>\n"
  syntax:
    content: 'public class SourceSwitch : Switch'
    content.vb: >-
      Public Class SourceSwitch
          Inherits Switch
  inheritance:
  - System.Object
  - System.Diagnostics.Switch
  inheritedMembers:
  - System.Diagnostics.Switch.Description
  - System.Diagnostics.Switch.DisplayName
  - System.Diagnostics.Switch.SwitchSetting
  - System.Diagnostics.Switch.Value
  - System.Diagnostics.Switch.OnSwitchSettingChanged
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: System.Diagnostics.SourceSwitch.#ctor(System.String)
  commentId: M:System.Diagnostics.SourceSwitch.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Diagnostics.SourceSwitch
  langs:
  - csharp
  - vb
  name: SourceSwitch(String)
  fullName: System.Diagnostics.SourceSwitch.SourceSwitch(System.String)
  type: Constructor
  source:
    remote:
      path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/SourceSwitch.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/SourceSwitch.cs
    startLine: 11
  assemblies:
  - System.Diagnostics.TraceSource
  namespace: System.Diagnostics
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Diagnostics.SourceSwitch\" data-throw-if-not-resolved=\"false\"></xref> class, specifying the name of the source.</p>\n"
  remarks: "\n<p>The <em>name</em> parameter is used to set the value of the <xref href=\"System.Diagnostics.Switch.DisplayName\" data-throw-if-not-resolved=\"false\"></xref> property.</p>\n<p>To set the level of your <xref href=\"System.Diagnostics.SourceSwitch\" data-throw-if-not-resolved=\"false\"></xref>, edit the configuration file that corresponds to the name of your application. Within this file, you can add a switch and set its value, remove a switch, or clear all the switches previously set by the application. To add a source switch, the configuration file should be formatted as shown in the following example. </p>\n<pre><code><configuration>\n<system.diagnostics>\n<switches>\n<add name=\"SourceSwitch\" value=\"Verbose\" ></add>\n</switches>\n</system.diagnostics>\n</configuration></code></pre>\n"
  syntax:
    content: public SourceSwitch(string name)
    content.vb: Public Sub New(name As String)
    parameters:
    - id: name
      type: System.String
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Diagnostics.SourceSwitch.#ctor(System.String,System.String)
  commentId: M:System.Diagnostics.SourceSwitch.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: System.Diagnostics.SourceSwitch
  langs:
  - csharp
  - vb
  name: SourceSwitch(String, String)
  fullName: System.Diagnostics.SourceSwitch.SourceSwitch(System.String, System.String)
  type: Constructor
  source:
    remote:
      path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/SourceSwitch.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/SourceSwitch.cs
    startLine: 13
  assemblies:
  - System.Diagnostics.TraceSource
  namespace: System.Diagnostics
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Diagnostics.SourceSwitch\" data-throw-if-not-resolved=\"false\"></xref> class, specifying the display name and the default value for the source switch.</p>\n"
  remarks: "\n<p>The <em>displayName</em> parameter is used to set the value of the <xref href=\"System.Diagnostics.Switch.DisplayName\" data-throw-if-not-resolved=\"false\"></xref> property; the <em>defaultSwitchValue</em> parameter is saved as a field and used to initialize the <xref href=\"System.Diagnostics.Switch.Value\" data-throw-if-not-resolved=\"false\"></xref> property on first reference. </p>\n<p>If the switch is defined in a configuration file and the <strong>value</strong> attribute is specified, the configuration file value takes precedence and the <em>defaultSwitchValue</em> is ignored.</p>\n<p>To set the level of your <xref href=\"System.Diagnostics.SourceSwitch\" data-throw-if-not-resolved=\"false\"></xref>, edit the configuration file that corresponds to the name of your application. Within this file, you can add a switch and set its value, remove a switch, or clear all the switches previously set by the application. To add a source switch, the configuration file should be formatted as shown in the following example. </p>\n<pre><code><configuration>\n<system.diagnostics>\n<switches>\n<add name=\"SourceSwitch\" value=\"Verbose\" ></add>\n</switches>\n</system.diagnostics>\n</configuration></code></pre>\n"
  example:
  - "\n<p>The following code example creates a <xref href=\"System.Diagnostics.SourceSwitch\" data-throw-if-not-resolved=\"false\"></xref> with the name \"SourceSwitch\" and a default value of <xref href=\"System.Diagnostics.SourceLevels.Verbose\" data-throw-if-not-resolved=\"false\"></xref>. This code example is part of a larger example provided for the <xref href=\"System.Diagnostics.TraceSource\" data-throw-if-not-resolved=\"false\"></xref> class.</p>System.Diagnostics.TraceSource#7"
  syntax:
    content: public SourceSwitch(string displayName, string defaultSwitchValue)
    content.vb: Public Sub New(displayName As String, defaultSwitchValue As String)
    parameters:
    - id: displayName
      type: System.String
    - id: defaultSwitchValue
      type: System.String
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Diagnostics.SourceSwitch.Level
  commentId: P:System.Diagnostics.SourceSwitch.Level
  id: Level
  parent: System.Diagnostics.SourceSwitch
  langs:
  - csharp
  - vb
  name: Level
  fullName: System.Diagnostics.SourceSwitch.Level
  type: Property
  source:
    remote:
      path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/SourceSwitch.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Level
    path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/SourceSwitch.cs
    startLine: 17
  assemblies:
  - System.Diagnostics.TraceSource
  namespace: System.Diagnostics
  summary: "\n<p>Gets or sets the level of the switch.</p>\n"
  remarks: "\n<p>This property gets its value from the <xref href=\"System.Diagnostics.Switch.SwitchSetting\" data-throw-if-not-resolved=\"false\"></xref> property. Setting this property also modifies the <xref href=\"System.Diagnostics.Switch.SwitchSetting\" data-throw-if-not-resolved=\"false\"></xref> property. </p>\n<p>For extensibility, the <xref href=\"System.Diagnostics.SourceSwitch.Level\" data-throw-if-not-resolved=\"false\"></xref> property can be set to any integer, rather than being limited to a <xref href=\"System.Diagnostics.SourceLevels\" data-throw-if-not-resolved=\"false\"></xref> enumeration value. </p>\n"
  example:
  - "\n<p>The following code example displays the value of the <xref href=\"System.Diagnostics.SourceSwitch.Level\" data-throw-if-not-resolved=\"false\"></xref> property for a source switch. This code example is part of a larger example provided for the <xref href=\"System.Diagnostics.TraceSource\" data-throw-if-not-resolved=\"false\"></xref> class.</p>System.Diagnostics.TraceSource#8"
  syntax:
    content: public SourceLevels Level { get; set; }
    content.vb: Public Property Level As SourceLevels
    parameters: []
    return:
      type: System.Diagnostics.SourceLevels
  see:
  - type: System.Security.Permissions.SecurityPermission
    commentId: T:System.Security.Permissions.SecurityPermission
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Diagnostics.SourceSwitch.OnValueChanged
  commentId: M:System.Diagnostics.SourceSwitch.OnValueChanged
  id: OnValueChanged
  parent: System.Diagnostics.SourceSwitch
  langs:
  - csharp
  - vb
  name: OnValueChanged()
  fullName: System.Diagnostics.SourceSwitch.OnValueChanged()
  type: Method
  source:
    remote:
      path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/SourceSwitch.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: OnValueChanged
    path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/SourceSwitch.cs
    startLine: 34
  assemblies:
  - System.Diagnostics.TraceSource
  namespace: System.Diagnostics
  summary: "\n<p>Invoked when the value of the <xref href=\"System.Diagnostics.Switch.Value\" data-throw-if-not-resolved=\"false\"></xref> property changes.</p>\n"
  remarks: "\n<p>The <xref href=\"System.Diagnostics.SourceSwitch.OnValueChanged\" data-throw-if-not-resolved=\"false\"></xref> method converts the new value of the <xref href=\"System.Diagnostics.Switch.Value\" data-throw-if-not-resolved=\"false\"></xref> property to the integer representation of the matching field in the <xref href=\"System.Diagnostics.SourceLevels\" data-throw-if-not-resolved=\"false\"></xref> enumeration, and then uses this integer to set the <xref href=\"System.Diagnostics.Switch.SwitchSetting\" data-throw-if-not-resolved=\"false\"></xref> property.</p>\n"
  syntax:
    content: protected override void OnValueChanged()
    content.vb: Protected Overrides Sub OnValueChanged
  overridden: System.Diagnostics.Switch.OnValueChanged
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<p>The new value of <xref href=\"System.Diagnostics.Switch.Value\" data-throw-if-not-resolved=\"false\"></xref> is not one of the <xref href=\"System.Diagnostics.SourceLevels\" data-throw-if-not-resolved=\"false\"></xref> values.</p>\n"
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: System.Diagnostics.SourceSwitch.ShouldTrace(System.Diagnostics.TraceEventType)
  commentId: M:System.Diagnostics.SourceSwitch.ShouldTrace(System.Diagnostics.TraceEventType)
  id: ShouldTrace(System.Diagnostics.TraceEventType)
  parent: System.Diagnostics.SourceSwitch
  langs:
  - csharp
  - vb
  name: ShouldTrace(TraceEventType)
  fullName: System.Diagnostics.SourceSwitch.ShouldTrace(System.Diagnostics.TraceEventType)
  type: Method
  source:
    remote:
      path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/SourceSwitch.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ShouldTrace
    path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/SourceSwitch.cs
    startLine: 29
  assemblies:
  - System.Diagnostics.TraceSource
  namespace: System.Diagnostics
  summary: "\n<p>Determines if trace listeners should be called, based on the trace event type.</p>\n"
  remarks: "\n<p>This method is called by the <strong>Trace</strong> methods in the <xref href=\"System.Diagnostics.TraceSource\" data-throw-if-not-resolved=\"false\"></xref> class to determine whether listeners should be called to write a trace.</p>\n<p>Application code should not call this method; it is intended to be called only by methods in the <xref href=\"System.Diagnostics.TraceSource\" data-throw-if-not-resolved=\"false\"></xref> class.</p>\n"
  syntax:
    content: public bool ShouldTrace(TraceEventType eventType)
    content.vb: Public Function ShouldTrace(eventType As TraceEventType) As Boolean
    parameters:
    - id: eventType
      type: System.Diagnostics.TraceEventType
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: System.Diagnostics
  isExternal: false
  name: System.Diagnostics
  fullName: System.Diagnostics
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System.Diagnostics.Switch
  parent: System.Diagnostics
  isExternal: false
  name: Switch
  fullName: System.Diagnostics.Switch
- uid: System.Diagnostics.Switch.Description
  parent: System.Diagnostics.Switch
  isExternal: false
  name: Description
  fullName: System.Diagnostics.Switch.Description
- uid: System.Diagnostics.Switch.DisplayName
  parent: System.Diagnostics.Switch
  isExternal: false
  name: DisplayName
  fullName: System.Diagnostics.Switch.DisplayName
- uid: System.Diagnostics.Switch.SwitchSetting
  parent: System.Diagnostics.Switch
  isExternal: false
  name: SwitchSetting
  fullName: System.Diagnostics.Switch.SwitchSetting
- uid: System.Diagnostics.Switch.Value
  parent: System.Diagnostics.Switch
  isExternal: false
  name: Value
  fullName: System.Diagnostics.Switch.Value
- uid: System.Diagnostics.Switch.OnSwitchSettingChanged
  parent: System.Diagnostics.Switch
  isExternal: false
  name: OnSwitchSettingChanged()
  fullName: System.Diagnostics.Switch.OnSwitchSettingChanged()
  spec.csharp:
  - uid: System.Diagnostics.Switch.OnSwitchSettingChanged
    name: OnSwitchSettingChanged
    fullName: System.Diagnostics.Switch.OnSwitchSettingChanged
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Diagnostics.Switch.OnSwitchSettingChanged
    name: OnSwitchSettingChanged
    fullName: System.Diagnostics.Switch.OnSwitchSettingChanged
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.String
  parent: System
  isExternal: false
  name: String
  fullName: System.String
- uid: System.Diagnostics.SourceLevels
  parent: System.Diagnostics
  isExternal: false
  name: SourceLevels
  fullName: System.Diagnostics.SourceLevels
- uid: System.Diagnostics.Switch.OnValueChanged
  parent: System.Diagnostics.Switch
  isExternal: false
  name: OnValueChanged()
  fullName: System.Diagnostics.Switch.OnValueChanged()
  spec.csharp:
  - uid: System.Diagnostics.Switch.OnValueChanged
    name: OnValueChanged
    fullName: System.Diagnostics.Switch.OnValueChanged
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Diagnostics.Switch.OnValueChanged
    name: OnValueChanged
    fullName: System.Diagnostics.Switch.OnValueChanged
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Diagnostics.TraceEventType
  parent: System.Diagnostics
  isExternal: false
  name: TraceEventType
  fullName: System.Diagnostics.TraceEventType
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  fullName: System.Boolean
- uid: System.ArgumentException
  parent: System
  isExternal: false
  name: ArgumentException
  fullName: System.ArgumentException
