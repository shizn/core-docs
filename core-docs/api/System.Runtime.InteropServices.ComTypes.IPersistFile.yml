items:
- uid: System.Runtime.InteropServices.ComTypes.IPersistFile
  commentId: T:System.Runtime.InteropServices.ComTypes.IPersistFile
  id: IPersistFile
  parent: System.Runtime.InteropServices.ComTypes
  children:
  - System.Runtime.InteropServices.ComTypes.IPersistFile.GetClassID(System.Guid@)
  - System.Runtime.InteropServices.ComTypes.IPersistFile.GetCurFile(System.String@)
  - System.Runtime.InteropServices.ComTypes.IPersistFile.IsDirty
  - System.Runtime.InteropServices.ComTypes.IPersistFile.Load(System.String,System.Int32)
  - System.Runtime.InteropServices.ComTypes.IPersistFile.Save(System.String,System.Boolean)
  - System.Runtime.InteropServices.ComTypes.IPersistFile.SaveCompleted(System.String)
  langs:
  - csharp
  - vb
  name: IPersistFile
  fullName: System.Runtime.InteropServices.ComTypes.IPersistFile
  type: Interface
  source:
    remote:
      path: src/mscorlib/src/System/Runtime/InteropServices/ComTypes/IPersistFile.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: IPersistFile
    path: src/mscorlib/src/System/Runtime/InteropServices/ComTypes/IPersistFile.cs
    startLine: 17
  assemblies:
  - System.Runtime.InteropServices
  namespace: System.Runtime.InteropServices.ComTypes
  summary: "\n<p>Provides the managed definition of the <strong>IPersistFile</strong> interface, with functionality from <strong>IPersist</strong>.</p>\n"
  remarks: "\n<p>For more information, see the existing documentation for <strong>IPersistFile</strong> and <strong>IPersist</strong> in the MSDN library.</p>\n<p>The common language runtime throws an exception when a COM method in native code returns an HRESULT. For more information, see How to: Map HRESULTs and Exceptions.</p>\n"
  syntax:
    content: >-
      [Guid("0000010b-0000-0000-C000-000000000046")]

      [InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]

      [ComImport]

      public interface IPersistFile
    content.vb: >-
      <Guid("0000010b-0000-0000-C000-000000000046")>

      <InterfaceType(ComInterfaceType.InterfaceIsIUnknown)>

      <ComImport>

      Public Interface IPersistFile
  attributes:
  - type: System.Runtime.InteropServices.InterfaceTypeAttribute
    ctor: System.Runtime.InteropServices.InterfaceTypeAttribute.#ctor(System.Runtime.InteropServices.ComInterfaceType)
    arguments:
    - type: System.Runtime.InteropServices.ComInterfaceType
      value: 1
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: System.Runtime.InteropServices.ComTypes.IPersistFile.GetClassID(System.Guid@)
  commentId: M:System.Runtime.InteropServices.ComTypes.IPersistFile.GetClassID(System.Guid@)
  id: GetClassID(System.Guid@)
  parent: System.Runtime.InteropServices.ComTypes.IPersistFile
  langs:
  - csharp
  - vb
  name: GetClassID(out Guid)
  fullName: System.Runtime.InteropServices.ComTypes.IPersistFile.GetClassID(out System.Guid)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Runtime/InteropServices/ComTypes/IPersistFile.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: GetClassID
    path: src/mscorlib/src/System/Runtime/InteropServices/ComTypes/IPersistFile.cs
    startLine: 23
  assemblies:
  - System.Runtime.InteropServices
  namespace: System.Runtime.InteropServices.ComTypes
  summary: "\n<p>Retrieves the class identifier (CLSID) of an object.</p>\n"
  remarks: "\n<p>For more information, see the existing documentation for <strong>IPersist::GetClassID</strong> in the MSDN library.</p>\n"
  syntax:
    content: void GetClassID(out Guid pClassID)
    content.vb: Sub GetClassID(ByRef pClassID As Guid)
    parameters:
    - id: pClassID
      type: System.Guid
  fullName.vb: System.Runtime.InteropServices.ComTypes.IPersistFile.GetClassID(ByRef System.Guid)
  name.vb: GetClassID(ByRef Guid)
- uid: System.Runtime.InteropServices.ComTypes.IPersistFile.GetCurFile(System.String@)
  commentId: M:System.Runtime.InteropServices.ComTypes.IPersistFile.GetCurFile(System.String@)
  id: GetCurFile(System.String@)
  parent: System.Runtime.InteropServices.ComTypes.IPersistFile
  langs:
  - csharp
  - vb
  name: GetCurFile(out String)
  fullName: System.Runtime.InteropServices.ComTypes.IPersistFile.GetCurFile(out System.String)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Runtime/InteropServices/ComTypes/IPersistFile.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: GetCurFile
    path: src/mscorlib/src/System/Runtime/InteropServices/ComTypes/IPersistFile.cs
    startLine: 31
  assemblies:
  - System.Runtime.InteropServices
  namespace: System.Runtime.InteropServices.ComTypes
  summary: "\n<p>Retrieves either the absolute path to the current working file of the object or, if there is no current working file, the default file name prompt of the object.</p>\n"
  remarks: "\n<p>For more information, see the existing documentation for <strong>IPersistFile::GetCurFile</strong> in the MSDN library.</p>\n"
  syntax:
    content: void GetCurFile([MarshalAs(UnmanagedType.LPWStr)] out string ppszFileName)
    content.vb: Sub GetCurFile(ByRef ppszFileName As String)
    parameters:
    - id: ppszFileName
      type: System.String
      attributes:
      - type: System.Runtime.InteropServices.MarshalAsAttribute
        ctor: System.Runtime.InteropServices.MarshalAsAttribute.#ctor(System.Runtime.InteropServices.UnmanagedType)
        arguments:
        - type: System.Runtime.InteropServices.UnmanagedType
          value: 21
  fullName.vb: System.Runtime.InteropServices.ComTypes.IPersistFile.GetCurFile(ByRef System.String)
  name.vb: GetCurFile(ByRef String)
- uid: System.Runtime.InteropServices.ComTypes.IPersistFile.IsDirty
  commentId: M:System.Runtime.InteropServices.ComTypes.IPersistFile.IsDirty
  id: IsDirty
  parent: System.Runtime.InteropServices.ComTypes.IPersistFile
  langs:
  - csharp
  - vb
  name: IsDirty()
  fullName: System.Runtime.InteropServices.ComTypes.IPersistFile.IsDirty()
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Runtime/InteropServices/ComTypes/IPersistFile.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: IsDirty
    path: src/mscorlib/src/System/Runtime/InteropServices/ComTypes/IPersistFile.cs
    startLine: 26
  assemblies:
  - System.Runtime.InteropServices
  namespace: System.Runtime.InteropServices.ComTypes
  summary: "\n<p>Checks an object for changes since it was last saved to its current file.</p>\n"
  remarks: "\n<p>For more information, see the existing documentation for <strong>IPersistFile::IsDirty</strong> in the MSDN library.</p>\n"
  syntax:
    content: >-
      [PreserveSig]

      int IsDirty()
    content.vb: >-
      <PreserveSig>

      Function IsDirty As Integer
    return:
      type: System.Int32
- uid: System.Runtime.InteropServices.ComTypes.IPersistFile.Load(System.String,System.Int32)
  commentId: M:System.Runtime.InteropServices.ComTypes.IPersistFile.Load(System.String,System.Int32)
  id: Load(System.String,System.Int32)
  parent: System.Runtime.InteropServices.ComTypes.IPersistFile
  langs:
  - csharp
  - vb
  name: Load(String, Int32)
  fullName: System.Runtime.InteropServices.ComTypes.IPersistFile.Load(System.String, System.Int32)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Runtime/InteropServices/ComTypes/IPersistFile.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Load
    path: src/mscorlib/src/System/Runtime/InteropServices/ComTypes/IPersistFile.cs
    startLine: 28
  assemblies:
  - System.Runtime.InteropServices
  namespace: System.Runtime.InteropServices.ComTypes
  summary: "\n<p>Opens the specified file and initializes an object from the file contents.</p>\n"
  remarks: "\n<p>The <strong>STGM</strong> enumeration is not part of the .NET Framework, but is documented in the MSDN library.</p>\n<p>For more information, see the existing documentation for <strong>IPersistFile::Load</strong> in the MSDN library.</p>\n"
  syntax:
    content: void Load([MarshalAs(UnmanagedType.LPWStr)] string pszFileName, int dwMode)
    content.vb: Sub Load(pszFileName As String, dwMode As Integer)
    parameters:
    - id: pszFileName
      type: System.String
      attributes:
      - type: System.Runtime.InteropServices.MarshalAsAttribute
        ctor: System.Runtime.InteropServices.MarshalAsAttribute.#ctor(System.Runtime.InteropServices.UnmanagedType)
        arguments:
        - type: System.Runtime.InteropServices.UnmanagedType
          value: 21
    - id: dwMode
      type: System.Int32
- uid: System.Runtime.InteropServices.ComTypes.IPersistFile.Save(System.String,System.Boolean)
  commentId: M:System.Runtime.InteropServices.ComTypes.IPersistFile.Save(System.String,System.Boolean)
  id: Save(System.String,System.Boolean)
  parent: System.Runtime.InteropServices.ComTypes.IPersistFile
  langs:
  - csharp
  - vb
  name: Save(String, Boolean)
  fullName: System.Runtime.InteropServices.ComTypes.IPersistFile.Save(System.String, System.Boolean)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Runtime/InteropServices/ComTypes/IPersistFile.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Save
    path: src/mscorlib/src/System/Runtime/InteropServices/ComTypes/IPersistFile.cs
    startLine: 29
  assemblies:
  - System.Runtime.InteropServices
  namespace: System.Runtime.InteropServices.ComTypes
  summary: "\n<p>Saves a copy of the object into the specified file.</p>\n"
  remarks: "\n<p>For more information, see the existing documentation for <strong>IPersistFile::Save</strong> in the MSDN library.</p>\n"
  syntax:
    content: void Save([MarshalAs(UnmanagedType.LPWStr)] string pszFileName, [MarshalAs(UnmanagedType.Bool)] bool fRemember)
    content.vb: Sub Save(pszFileName As String, fRemember As Boolean)
    parameters:
    - id: pszFileName
      type: System.String
      attributes:
      - type: System.Runtime.InteropServices.MarshalAsAttribute
        ctor: System.Runtime.InteropServices.MarshalAsAttribute.#ctor(System.Runtime.InteropServices.UnmanagedType)
        arguments:
        - type: System.Runtime.InteropServices.UnmanagedType
          value: 21
    - id: fRemember
      type: System.Boolean
      attributes:
      - type: System.Runtime.InteropServices.MarshalAsAttribute
        ctor: System.Runtime.InteropServices.MarshalAsAttribute.#ctor(System.Runtime.InteropServices.UnmanagedType)
        arguments:
        - type: System.Runtime.InteropServices.UnmanagedType
          value: 2
- uid: System.Runtime.InteropServices.ComTypes.IPersistFile.SaveCompleted(System.String)
  commentId: M:System.Runtime.InteropServices.ComTypes.IPersistFile.SaveCompleted(System.String)
  id: SaveCompleted(System.String)
  parent: System.Runtime.InteropServices.ComTypes.IPersistFile
  langs:
  - csharp
  - vb
  name: SaveCompleted(String)
  fullName: System.Runtime.InteropServices.ComTypes.IPersistFile.SaveCompleted(System.String)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Runtime/InteropServices/ComTypes/IPersistFile.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: SaveCompleted
    path: src/mscorlib/src/System/Runtime/InteropServices/ComTypes/IPersistFile.cs
    startLine: 30
  assemblies:
  - System.Runtime.InteropServices
  namespace: System.Runtime.InteropServices.ComTypes
  summary: "\n<p>Notifies the object that it can write to its file.</p>\n"
  remarks: "\n<p>For more information, see the existing documentation for <strong>IPersistFile::SaveCompleted</strong> in the MSDN library.</p>\n"
  syntax:
    content: void SaveCompleted([MarshalAs(UnmanagedType.LPWStr)] string pszFileName)
    content.vb: Sub SaveCompleted(pszFileName As String)
    parameters:
    - id: pszFileName
      type: System.String
      attributes:
      - type: System.Runtime.InteropServices.MarshalAsAttribute
        ctor: System.Runtime.InteropServices.MarshalAsAttribute.#ctor(System.Runtime.InteropServices.UnmanagedType)
        arguments:
        - type: System.Runtime.InteropServices.UnmanagedType
          value: 21
references:
- uid: System.Runtime.InteropServices.ComTypes
  isExternal: false
  name: System.Runtime.InteropServices.ComTypes
  fullName: System.Runtime.InteropServices.ComTypes
- uid: System.Guid
  parent: System
  isExternal: false
  name: Guid
  fullName: System.Guid
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.String
  parent: System
  isExternal: false
  name: String
  fullName: System.String
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  fullName: System.Int32
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  fullName: System.Boolean
