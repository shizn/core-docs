items:
- uid: System.Net.Sockets.IOControlCode
  commentId: T:System.Net.Sockets.IOControlCode
  id: IOControlCode
  parent: System.Net.Sockets
  children:
  - System.Net.Sockets.IOControlCode.AbsorbRouterAlert
  - System.Net.Sockets.IOControlCode.AddMulticastGroupOnInterface
  - System.Net.Sockets.IOControlCode.AddressListChange
  - System.Net.Sockets.IOControlCode.AddressListQuery
  - System.Net.Sockets.IOControlCode.AddressListSort
  - System.Net.Sockets.IOControlCode.AssociateHandle
  - System.Net.Sockets.IOControlCode.AsyncIO
  - System.Net.Sockets.IOControlCode.BindToInterface
  - System.Net.Sockets.IOControlCode.DataToRead
  - System.Net.Sockets.IOControlCode.DeleteMulticastGroupFromInterface
  - System.Net.Sockets.IOControlCode.EnableCircularQueuing
  - System.Net.Sockets.IOControlCode.Flush
  - System.Net.Sockets.IOControlCode.GetBroadcastAddress
  - System.Net.Sockets.IOControlCode.GetExtensionFunctionPointer
  - System.Net.Sockets.IOControlCode.GetGroupQos
  - System.Net.Sockets.IOControlCode.GetQos
  - System.Net.Sockets.IOControlCode.KeepAliveValues
  - System.Net.Sockets.IOControlCode.LimitBroadcasts
  - System.Net.Sockets.IOControlCode.MulticastInterface
  - System.Net.Sockets.IOControlCode.MulticastScope
  - System.Net.Sockets.IOControlCode.MultipointLoopback
  - System.Net.Sockets.IOControlCode.NamespaceChange
  - System.Net.Sockets.IOControlCode.NonBlockingIO
  - System.Net.Sockets.IOControlCode.OobDataRead
  - System.Net.Sockets.IOControlCode.QueryTargetPnpHandle
  - System.Net.Sockets.IOControlCode.ReceiveAll
  - System.Net.Sockets.IOControlCode.ReceiveAllIgmpMulticast
  - System.Net.Sockets.IOControlCode.ReceiveAllMulticast
  - System.Net.Sockets.IOControlCode.RoutingInterfaceChange
  - System.Net.Sockets.IOControlCode.RoutingInterfaceQuery
  - System.Net.Sockets.IOControlCode.SetGroupQos
  - System.Net.Sockets.IOControlCode.SetQos
  - System.Net.Sockets.IOControlCode.TranslateHandle
  - System.Net.Sockets.IOControlCode.UnicastInterface
  langs:
  - csharp
  - vb
  name: IOControlCode
  fullName: System.Net.Sockets.IOControlCode
  type: Enum
  source:
    remote:
      path: src/System.Net.Sockets/ref/System.Net.Sockets.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IOControlCode
    path: src/System.Net.Sockets/ref/System.Net.Sockets.cs
    startLine: 10
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  summary: "\n<p>Specifies the IO control codes supported by the <xref href=\"System.Net.Sockets.Socket.IOControl(System.Int32,System.Byte[],System.Byte[])\" data-throw-if-not-resolved=\"false\"></xref> method.</p>\n"
  remarks: "\n<p>The <xref href=\"System.Net.Sockets.IOControlCode\" data-throw-if-not-resolved=\"false\"></xref> enumeration provides named values for specifying socket operational modes. These values are the control codes passed to the Windows Sockets 2 (Winsock 2) WSAIoctl function.</p>\n"
  example:
  - "\n<p>The following code example calls the <xref href=\"System.Net.Sockets.Socket.IOControl(System.Net.Sockets.IOControlCode,System.Byte[],System.Byte[])\" data-throw-if-not-resolved=\"false\"></xref> method with a <xref href=\"System.Net.Sockets.IOControlCode.DataToRead\" data-throw-if-not-resolved=\"false\"></xref> parameter value and compares the result with accessing the.<xref href=\"System.Net.Sockets.Socket.Available\" data-throw-if-not-resolved=\"false\"></xref> property.</p>NCLSocketIoControl1#1"
  syntax:
    content: 'public enum IOControlCode : long'
    content.vb: Public Enum IOControlCode As Long
  modifiers.csharp:
  - public
  - enum
  modifiers.vb:
  - Public
  - Enum
- uid: System.Net.Sockets.IOControlCode.AbsorbRouterAlert
  commentId: F:System.Net.Sockets.IOControlCode.AbsorbRouterAlert
  id: AbsorbRouterAlert
  parent: System.Net.Sockets.IOControlCode
  langs:
  - csharp
  - vb
  name: AbsorbRouterAlert
  fullName: System.Net.Sockets.IOControlCode.AbsorbRouterAlert
  type: Field
  source:
    remote:
      path: src/System.Net.Sockets/ref/System.Net.Sockets.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: AbsorbRouterAlert
    path: src/System.Net.Sockets/ref/System.Net.Sockets.cs
    startLine: 12
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  summary: "\n<p>This value is equal to the Winsock 2 SIO_ABSORB_RTRALERT constant.</p>\n"
  syntax:
    content: AbsorbRouterAlert = 2550136837L
    return:
      type: System.Net.Sockets.IOControlCode
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Net.Sockets.IOControlCode.AddMulticastGroupOnInterface
  commentId: F:System.Net.Sockets.IOControlCode.AddMulticastGroupOnInterface
  id: AddMulticastGroupOnInterface
  parent: System.Net.Sockets.IOControlCode
  langs:
  - csharp
  - vb
  name: AddMulticastGroupOnInterface
  fullName: System.Net.Sockets.IOControlCode.AddMulticastGroupOnInterface
  type: Field
  source:
    remote:
      path: src/System.Net.Sockets/ref/System.Net.Sockets.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: AddMulticastGroupOnInterface
    path: src/System.Net.Sockets/ref/System.Net.Sockets.cs
    startLine: 13
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  summary: "\n<p>Join a multicast group using an interface identified by its index. This control code is supported on Windows 2000 and later operating systems. This value is equal to the Winsock 2 SIO_INDEX_ADD_MCAST constant.</p>\n"
  syntax:
    content: AddMulticastGroupOnInterface = 2550136842L
    return:
      type: System.Net.Sockets.IOControlCode
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Net.Sockets.IOControlCode.AddressListChange
  commentId: F:System.Net.Sockets.IOControlCode.AddressListChange
  id: AddressListChange
  parent: System.Net.Sockets.IOControlCode
  langs:
  - csharp
  - vb
  name: AddressListChange
  fullName: System.Net.Sockets.IOControlCode.AddressListChange
  type: Field
  source:
    remote:
      path: src/System.Net.Sockets/ref/System.Net.Sockets.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: AddressListChange
    path: src/System.Net.Sockets/ref/System.Net.Sockets.cs
    startLine: 14
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  summary: "\n<p>Enable receiving notification when the list of local interfaces for the socket's protocol family changes. This control code is supported on Windows 2000 and later operating systems. This value is equal to the Winsock 2 SIO_ADDRESS_LIST_CHANGE constant.</p>\n"
  syntax:
    content: AddressListChange = 671088663L
    return:
      type: System.Net.Sockets.IOControlCode
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Net.Sockets.IOControlCode.AddressListQuery
  commentId: F:System.Net.Sockets.IOControlCode.AddressListQuery
  id: AddressListQuery
  parent: System.Net.Sockets.IOControlCode
  langs:
  - csharp
  - vb
  name: AddressListQuery
  fullName: System.Net.Sockets.IOControlCode.AddressListQuery
  type: Field
  source:
    remote:
      path: src/System.Net.Sockets/ref/System.Net.Sockets.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: AddressListQuery
    path: src/System.Net.Sockets/ref/System.Net.Sockets.cs
    startLine: 15
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  summary: "\n<p>Return the list of local interfaces that the socket can bind to. This control code is supported on Windows 2000 and later operating systems. This value is equal to the Winsock 2 SIO_ADDRESS_LIST_QUERY constant.</p>\n"
  syntax:
    content: AddressListQuery = 1207959574L
    return:
      type: System.Net.Sockets.IOControlCode
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Net.Sockets.IOControlCode.AddressListSort
  commentId: F:System.Net.Sockets.IOControlCode.AddressListSort
  id: AddressListSort
  parent: System.Net.Sockets.IOControlCode
  langs:
  - csharp
  - vb
  name: AddressListSort
  fullName: System.Net.Sockets.IOControlCode.AddressListSort
  type: Field
  source:
    remote:
      path: src/System.Net.Sockets/ref/System.Net.Sockets.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: AddressListSort
    path: src/System.Net.Sockets/ref/System.Net.Sockets.cs
    startLine: 16
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  summary: "\n<p>Sort the structure returned by the <xref href=\"System.Net.Sockets.IOControlCode.AddressListQuery\" data-throw-if-not-resolved=\"false\"></xref> field and add scope ID information for IPv6 addresses. This control code is supported on Windows XP and later operating systems. This value is equal to the Winsock 2 SIO_ADDRESS_LIST_SORT constant.</p>\n"
  syntax:
    content: AddressListSort = 3355443225L
    return:
      type: System.Net.Sockets.IOControlCode
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Net.Sockets.IOControlCode.AssociateHandle
  commentId: F:System.Net.Sockets.IOControlCode.AssociateHandle
  id: AssociateHandle
  parent: System.Net.Sockets.IOControlCode
  langs:
  - csharp
  - vb
  name: AssociateHandle
  fullName: System.Net.Sockets.IOControlCode.AssociateHandle
  type: Field
  source:
    remote:
      path: src/System.Net.Sockets/ref/System.Net.Sockets.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: AssociateHandle
    path: src/System.Net.Sockets/ref/System.Net.Sockets.cs
    startLine: 17
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  summary: "\n<p>Associate this socket with the specified handle of a companion interface. Refer to the appropriate  protocol-specific annex in the Winsock 2 reference or documentation for the particular companion interface for additional details. It is recommended that the Component Object Model (COM) be used instead of this IOCTL to discover and track other interfaces that might be supported by a socket. This control code is present for backward compatibility with systems where COM is not available or cannot be used for some other reason. This value is equal to the Winsock 2 SIO_ASSOCIATE_HANDLE constant. </p>\n"
  syntax:
    content: AssociateHandle = 2281701377L
    return:
      type: System.Net.Sockets.IOControlCode
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Net.Sockets.IOControlCode.AsyncIO
  commentId: F:System.Net.Sockets.IOControlCode.AsyncIO
  id: AsyncIO
  parent: System.Net.Sockets.IOControlCode
  langs:
  - csharp
  - vb
  name: AsyncIO
  fullName: System.Net.Sockets.IOControlCode.AsyncIO
  type: Field
  source:
    remote:
      path: src/System.Net.Sockets/ref/System.Net.Sockets.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: AsyncIO
    path: src/System.Net.Sockets/ref/System.Net.Sockets.cs
    startLine: 18
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  summary: "\n<p>Enable notification for when data is waiting to be received. This value is equal to the Winsock 2 FIOASYNC constant.</p>\n"
  syntax:
    content: AsyncIO = 2147772029L
    return:
      type: System.Net.Sockets.IOControlCode
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Net.Sockets.IOControlCode.BindToInterface
  commentId: F:System.Net.Sockets.IOControlCode.BindToInterface
  id: BindToInterface
  parent: System.Net.Sockets.IOControlCode
  langs:
  - csharp
  - vb
  name: BindToInterface
  fullName: System.Net.Sockets.IOControlCode.BindToInterface
  type: Field
  source:
    remote:
      path: src/System.Net.Sockets/ref/System.Net.Sockets.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: BindToInterface
    path: src/System.Net.Sockets/ref/System.Net.Sockets.cs
    startLine: 19
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  summary: "\n<p>Bind the socket to a specified interface index. This control code is supported on Windows 2000 and later operating systems. This value is equal to the Winsock 2 SIO_INDEX_BIND constant.</p>\n"
  syntax:
    content: BindToInterface = 2550136840L
    return:
      type: System.Net.Sockets.IOControlCode
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Net.Sockets.IOControlCode.DataToRead
  commentId: F:System.Net.Sockets.IOControlCode.DataToRead
  id: DataToRead
  parent: System.Net.Sockets.IOControlCode
  langs:
  - csharp
  - vb
  name: DataToRead
  fullName: System.Net.Sockets.IOControlCode.DataToRead
  type: Field
  source:
    remote:
      path: src/System.Net.Sockets/ref/System.Net.Sockets.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: DataToRead
    path: src/System.Net.Sockets/ref/System.Net.Sockets.cs
    startLine: 20
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  summary: "\n<p>Return the number of bytes available for reading. This value is equal to the Winsock 2 FIONREAD constant.</p>\n"
  syntax:
    content: DataToRead = 1074030207L
    return:
      type: System.Net.Sockets.IOControlCode
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Net.Sockets.IOControlCode.DeleteMulticastGroupFromInterface
  commentId: F:System.Net.Sockets.IOControlCode.DeleteMulticastGroupFromInterface
  id: DeleteMulticastGroupFromInterface
  parent: System.Net.Sockets.IOControlCode
  langs:
  - csharp
  - vb
  name: DeleteMulticastGroupFromInterface
  fullName: System.Net.Sockets.IOControlCode.DeleteMulticastGroupFromInterface
  type: Field
  source:
    remote:
      path: src/System.Net.Sockets/ref/System.Net.Sockets.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: DeleteMulticastGroupFromInterface
    path: src/System.Net.Sockets/ref/System.Net.Sockets.cs
    startLine: 21
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  summary: "\n<p>Remove the socket from a multicast group. This control code is supported on Windows 2000 and later operating systems. This value is equal to the Winsock 2 SIO_INDEX_ADD_MCAST constant.</p>\n"
  syntax:
    content: DeleteMulticastGroupFromInterface = 2550136843L
    return:
      type: System.Net.Sockets.IOControlCode
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Net.Sockets.IOControlCode.EnableCircularQueuing
  commentId: F:System.Net.Sockets.IOControlCode.EnableCircularQueuing
  id: EnableCircularQueuing
  parent: System.Net.Sockets.IOControlCode
  langs:
  - csharp
  - vb
  name: EnableCircularQueuing
  fullName: System.Net.Sockets.IOControlCode.EnableCircularQueuing
  type: Field
  source:
    remote:
      path: src/System.Net.Sockets/ref/System.Net.Sockets.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: EnableCircularQueuing
    path: src/System.Net.Sockets/ref/System.Net.Sockets.cs
    startLine: 22
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  summary: "\n<p>Replace the oldest queued datagram with an incoming datagram when the incoming message queues are full. This value is equal to the Winsock 2 SIO_ENABLE_CIRCULAR_QUEUEING constant.</p>\n"
  syntax:
    content: EnableCircularQueuing = 671088642L
    return:
      type: System.Net.Sockets.IOControlCode
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Net.Sockets.IOControlCode.Flush
  commentId: F:System.Net.Sockets.IOControlCode.Flush
  id: Flush
  parent: System.Net.Sockets.IOControlCode
  langs:
  - csharp
  - vb
  name: Flush
  fullName: System.Net.Sockets.IOControlCode.Flush
  type: Field
  source:
    remote:
      path: src/System.Net.Sockets/ref/System.Net.Sockets.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Flush
    path: src/System.Net.Sockets/ref/System.Net.Sockets.cs
    startLine: 23
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  summary: "\n<p>Discard the contents of the sending queue. This value is equal to the Winsock 2 SIO_FLUSH constant.</p>\n"
  syntax:
    content: Flush = 671088644L
    return:
      type: System.Net.Sockets.IOControlCode
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Net.Sockets.IOControlCode.GetBroadcastAddress
  commentId: F:System.Net.Sockets.IOControlCode.GetBroadcastAddress
  id: GetBroadcastAddress
  parent: System.Net.Sockets.IOControlCode
  langs:
  - csharp
  - vb
  name: GetBroadcastAddress
  fullName: System.Net.Sockets.IOControlCode.GetBroadcastAddress
  type: Field
  source:
    remote:
      path: src/System.Net.Sockets/ref/System.Net.Sockets.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetBroadcastAddress
    path: src/System.Net.Sockets/ref/System.Net.Sockets.cs
    startLine: 24
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  summary: "\n<p>Return a SOCKADDR structure that contains the broadcast address for the address family of the current socket. The returned address can be used with the <see cref=\"Overload:System.Net.Sockets.Socket.SendTo\"></see> method. This value is equal to the Winsock 2 SIO_GET_BROADCAST_ADDRESS constant. This value can be used on User Datagram Protocol (UDP) sockets only.</p>\n"
  syntax:
    content: GetBroadcastAddress = 1207959557L
    return:
      type: System.Net.Sockets.IOControlCode
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Net.Sockets.IOControlCode.GetExtensionFunctionPointer
  commentId: F:System.Net.Sockets.IOControlCode.GetExtensionFunctionPointer
  id: GetExtensionFunctionPointer
  parent: System.Net.Sockets.IOControlCode
  langs:
  - csharp
  - vb
  name: GetExtensionFunctionPointer
  fullName: System.Net.Sockets.IOControlCode.GetExtensionFunctionPointer
  type: Field
  source:
    remote:
      path: src/System.Net.Sockets/ref/System.Net.Sockets.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetExtensionFunctionPointer
    path: src/System.Net.Sockets/ref/System.Net.Sockets.cs
    startLine: 25
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  summary: "\n<p>Obtain provider-specific functions that are not part of the Winsock specification. Functions are specified using their provider-assigned GUID. This value is equal to the Winsock 2 SIO_GET_EXTENSION_FUNCTION_POINTER constant.</p>\n"
  syntax:
    content: GetExtensionFunctionPointer = 3355443206L
    return:
      type: System.Net.Sockets.IOControlCode
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Net.Sockets.IOControlCode.GetGroupQos
  commentId: F:System.Net.Sockets.IOControlCode.GetGroupQos
  id: GetGroupQos
  parent: System.Net.Sockets.IOControlCode
  langs:
  - csharp
  - vb
  name: GetGroupQos
  fullName: System.Net.Sockets.IOControlCode.GetGroupQos
  type: Field
  source:
    remote:
      path: src/System.Net.Sockets/ref/System.Net.Sockets.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetGroupQos
    path: src/System.Net.Sockets/ref/System.Net.Sockets.cs
    startLine: 26
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  summary: "\n<p>Return the Quality of Service (QOS) attributes for the socket group. This value is reserved for future use, and is equal to the Winsock 2 SIO_GET_GROUP_QOS constant. </p>\n"
  syntax:
    content: GetGroupQos = 3355443208L
    return:
      type: System.Net.Sockets.IOControlCode
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Net.Sockets.IOControlCode.GetQos
  commentId: F:System.Net.Sockets.IOControlCode.GetQos
  id: GetQos
  parent: System.Net.Sockets.IOControlCode
  langs:
  - csharp
  - vb
  name: GetQos
  fullName: System.Net.Sockets.IOControlCode.GetQos
  type: Field
  source:
    remote:
      path: src/System.Net.Sockets/ref/System.Net.Sockets.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetQos
    path: src/System.Net.Sockets/ref/System.Net.Sockets.cs
    startLine: 27
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  summary: "\n<p>Retrieve the QOS structure associated with the socket. This control is only supported on platforms that provide a QOS capable transport (Windows Me, Windows 2000, and later.) This value is equal to the Winsock 2 SIO_GET_QOS constant.</p>\n"
  syntax:
    content: GetQos = 3355443207L
    return:
      type: System.Net.Sockets.IOControlCode
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Net.Sockets.IOControlCode.KeepAliveValues
  commentId: F:System.Net.Sockets.IOControlCode.KeepAliveValues
  id: KeepAliveValues
  parent: System.Net.Sockets.IOControlCode
  langs:
  - csharp
  - vb
  name: KeepAliveValues
  fullName: System.Net.Sockets.IOControlCode.KeepAliveValues
  type: Field
  source:
    remote:
      path: src/System.Net.Sockets/ref/System.Net.Sockets.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: KeepAliveValues
    path: src/System.Net.Sockets/ref/System.Net.Sockets.cs
    startLine: 28
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  summary: "\n<p>Control sending TCP keep-alive packets and the interval at which they are sent. This control code is supported on Windows 2000 and later operating systems. For additional information, see RFC 1122 section 4.2.3.6. This value is equal to the Winsock 2 SIO_KEEPALIVE_VALS constant.</p>\n"
  syntax:
    content: KeepAliveValues = 2550136836L
    return:
      type: System.Net.Sockets.IOControlCode
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Net.Sockets.IOControlCode.LimitBroadcasts
  commentId: F:System.Net.Sockets.IOControlCode.LimitBroadcasts
  id: LimitBroadcasts
  parent: System.Net.Sockets.IOControlCode
  langs:
  - csharp
  - vb
  name: LimitBroadcasts
  fullName: System.Net.Sockets.IOControlCode.LimitBroadcasts
  type: Field
  source:
    remote:
      path: src/System.Net.Sockets/ref/System.Net.Sockets.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: LimitBroadcasts
    path: src/System.Net.Sockets/ref/System.Net.Sockets.cs
    startLine: 29
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  summary: "\n<p>This value is equal to the Winsock 2 SIO_LIMIT_BROADCASTS constant.</p>\n"
  syntax:
    content: LimitBroadcasts = 2550136839L
    return:
      type: System.Net.Sockets.IOControlCode
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Net.Sockets.IOControlCode.MulticastInterface
  commentId: F:System.Net.Sockets.IOControlCode.MulticastInterface
  id: MulticastInterface
  parent: System.Net.Sockets.IOControlCode
  langs:
  - csharp
  - vb
  name: MulticastInterface
  fullName: System.Net.Sockets.IOControlCode.MulticastInterface
  type: Field
  source:
    remote:
      path: src/System.Net.Sockets/ref/System.Net.Sockets.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: MulticastInterface
    path: src/System.Net.Sockets/ref/System.Net.Sockets.cs
    startLine: 30
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  summary: "\n<p>Set the interface used for outgoing multicast packets. The interface is identified by its index. This control code is supported on Windows 2000 and later operating systems.  This value is equal to the Winsock 2 SIO_INDEX_MCASTIF constant.</p>\n"
  syntax:
    content: MulticastInterface = 2550136841L
    return:
      type: System.Net.Sockets.IOControlCode
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Net.Sockets.IOControlCode.MulticastScope
  commentId: F:System.Net.Sockets.IOControlCode.MulticastScope
  id: MulticastScope
  parent: System.Net.Sockets.IOControlCode
  langs:
  - csharp
  - vb
  name: MulticastScope
  fullName: System.Net.Sockets.IOControlCode.MulticastScope
  type: Field
  source:
    remote:
      path: src/System.Net.Sockets/ref/System.Net.Sockets.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: MulticastScope
    path: src/System.Net.Sockets/ref/System.Net.Sockets.cs
    startLine: 31
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  summary: "\n<p>Control the number of times a multicast packet can be forwarded by a router, also known as the Time to Live (TTL), or hop count. This value is equal to the Winsock 2 SIO_MULTICAST_SCOPE constant.</p>\n"
  syntax:
    content: MulticastScope = 2281701386L
    return:
      type: System.Net.Sockets.IOControlCode
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Net.Sockets.IOControlCode.MultipointLoopback
  commentId: F:System.Net.Sockets.IOControlCode.MultipointLoopback
  id: MultipointLoopback
  parent: System.Net.Sockets.IOControlCode
  langs:
  - csharp
  - vb
  name: MultipointLoopback
  fullName: System.Net.Sockets.IOControlCode.MultipointLoopback
  type: Field
  source:
    remote:
      path: src/System.Net.Sockets/ref/System.Net.Sockets.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: MultipointLoopback
    path: src/System.Net.Sockets/ref/System.Net.Sockets.cs
    startLine: 32
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  summary: "\n<p>Control whether multicast data sent by the socket appears as incoming data in the sockets receive queue. This value is equal to the Winsock 2 SIO_MULTIPOINT_LOOPBACK constant.</p>\n"
  syntax:
    content: MultipointLoopback = 2281701385L
    return:
      type: System.Net.Sockets.IOControlCode
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Net.Sockets.IOControlCode.NamespaceChange
  commentId: F:System.Net.Sockets.IOControlCode.NamespaceChange
  id: NamespaceChange
  parent: System.Net.Sockets.IOControlCode
  langs:
  - csharp
  - vb
  name: NamespaceChange
  fullName: System.Net.Sockets.IOControlCode.NamespaceChange
  type: Field
  source:
    remote:
      path: src/System.Net.Sockets/ref/System.Net.Sockets.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: NamespaceChange
    path: src/System.Net.Sockets/ref/System.Net.Sockets.cs
    startLine: 33
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  summary: "\n<p>Control whether the socket receives notification when a namespace query becomes invalid. This control code is supported on Windows XP and later operating systems. This value is equal to the Winsock 2 SIO_NSP_NOTIFY_CHANGE constant.</p>\n"
  syntax:
    content: NamespaceChange = 2281701401L
    return:
      type: System.Net.Sockets.IOControlCode
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Net.Sockets.IOControlCode.NonBlockingIO
  commentId: F:System.Net.Sockets.IOControlCode.NonBlockingIO
  id: NonBlockingIO
  parent: System.Net.Sockets.IOControlCode
  langs:
  - csharp
  - vb
  name: NonBlockingIO
  fullName: System.Net.Sockets.IOControlCode.NonBlockingIO
  type: Field
  source:
    remote:
      path: src/System.Net.Sockets/ref/System.Net.Sockets.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: NonBlockingIO
    path: src/System.Net.Sockets/ref/System.Net.Sockets.cs
    startLine: 34
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  summary: "\n<p>Control the blocking behavior of the socket. If the argument specified with this control code is zero, the socket is placed in blocking mode. If the argument is nonzero, the socket is placed in nonblocking mode. This value is equal to the Winsock 2 FIONBIO constant.</p>\n"
  syntax:
    content: NonBlockingIO = 2147772030L
    return:
      type: System.Net.Sockets.IOControlCode
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Net.Sockets.IOControlCode.OobDataRead
  commentId: F:System.Net.Sockets.IOControlCode.OobDataRead
  id: OobDataRead
  parent: System.Net.Sockets.IOControlCode
  langs:
  - csharp
  - vb
  name: OobDataRead
  fullName: System.Net.Sockets.IOControlCode.OobDataRead
  type: Field
  source:
    remote:
      path: src/System.Net.Sockets/ref/System.Net.Sockets.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: OobDataRead
    path: src/System.Net.Sockets/ref/System.Net.Sockets.cs
    startLine: 35
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  summary: "\n<p>Return information about out-of-band data waiting to be received. When using this control code on stream sockets, the return value indicates the number of bytes available.</p>\n"
  syntax:
    content: OobDataRead = 1074033415L
    return:
      type: System.Net.Sockets.IOControlCode
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Net.Sockets.IOControlCode.QueryTargetPnpHandle
  commentId: F:System.Net.Sockets.IOControlCode.QueryTargetPnpHandle
  id: QueryTargetPnpHandle
  parent: System.Net.Sockets.IOControlCode
  langs:
  - csharp
  - vb
  name: QueryTargetPnpHandle
  fullName: System.Net.Sockets.IOControlCode.QueryTargetPnpHandle
  type: Field
  source:
    remote:
      path: src/System.Net.Sockets/ref/System.Net.Sockets.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: QueryTargetPnpHandle
    path: src/System.Net.Sockets/ref/System.Net.Sockets.cs
    startLine: 36
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  summary: "\n<p>Retrieve the underlying provider's SOCKET handle. This handle can be used to receive plug-and-play event notification. This control code is supported on Windows 2000 and later operating systems. This value is equal to the Winsock 2 SIO_QUERY_TARGET_PNP_HANDLE constant.</p>\n"
  syntax:
    content: QueryTargetPnpHandle = 1207959576L
    return:
      type: System.Net.Sockets.IOControlCode
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Net.Sockets.IOControlCode.ReceiveAll
  commentId: F:System.Net.Sockets.IOControlCode.ReceiveAll
  id: ReceiveAll
  parent: System.Net.Sockets.IOControlCode
  langs:
  - csharp
  - vb
  name: ReceiveAll
  fullName: System.Net.Sockets.IOControlCode.ReceiveAll
  type: Field
  source:
    remote:
      path: src/System.Net.Sockets/ref/System.Net.Sockets.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ReceiveAll
    path: src/System.Net.Sockets/ref/System.Net.Sockets.cs
    startLine: 37
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  summary: "\n<p>Enable receiving all IPv4 packets on the network. The socket must have address family <xref href=\"System.Net.Sockets.AddressFamily.InterNetwork\" data-throw-if-not-resolved=\"false\"></xref>, the socket type must be <xref href=\"System.Net.Sockets.SocketType.Raw\" data-throw-if-not-resolved=\"false\"></xref>, and the protocol type must be <xref href=\"System.Net.Sockets.ProtocolType.IP\" data-throw-if-not-resolved=\"false\"></xref>. The current user must belong to the Administrators group on the local computer, and the socket must be bound to a specific port. This control code is supported on Windows 2000 and later operating systems. This value is equal to the Winsock 2 SIO_RCVALL constant.</p>\n"
  syntax:
    content: ReceiveAll = 2550136833L
    return:
      type: System.Net.Sockets.IOControlCode
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Net.Sockets.IOControlCode.ReceiveAllIgmpMulticast
  commentId: F:System.Net.Sockets.IOControlCode.ReceiveAllIgmpMulticast
  id: ReceiveAllIgmpMulticast
  parent: System.Net.Sockets.IOControlCode
  langs:
  - csharp
  - vb
  name: ReceiveAllIgmpMulticast
  fullName: System.Net.Sockets.IOControlCode.ReceiveAllIgmpMulticast
  type: Field
  source:
    remote:
      path: src/System.Net.Sockets/ref/System.Net.Sockets.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ReceiveAllIgmpMulticast
    path: src/System.Net.Sockets/ref/System.Net.Sockets.cs
    startLine: 38
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  summary: "\n<p>Enable receiving all Internet Group Management Protocol (IGMP) packets on the network. The socket must have address family <xref href=\"System.Net.Sockets.AddressFamily.InterNetwork\" data-throw-if-not-resolved=\"false\"></xref>, the socket type must be <xref href=\"System.Net.Sockets.SocketType.Raw\" data-throw-if-not-resolved=\"false\"></xref>, and the protocol type must be <xref href=\"System.Net.Sockets.ProtocolType.Igmp\" data-throw-if-not-resolved=\"false\"></xref>. The current user must belong to the Administrators group on the local computer, and the socket must be bound to a specific port. This control code is supported on Windows 2000 and later operating systems. This value is equal to the Winsock 2 SIO_RCVALL_IGMPMCAST constant.</p>\n"
  syntax:
    content: ReceiveAllIgmpMulticast = 2550136835L
    return:
      type: System.Net.Sockets.IOControlCode
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Net.Sockets.IOControlCode.ReceiveAllMulticast
  commentId: F:System.Net.Sockets.IOControlCode.ReceiveAllMulticast
  id: ReceiveAllMulticast
  parent: System.Net.Sockets.IOControlCode
  langs:
  - csharp
  - vb
  name: ReceiveAllMulticast
  fullName: System.Net.Sockets.IOControlCode.ReceiveAllMulticast
  type: Field
  source:
    remote:
      path: src/System.Net.Sockets/ref/System.Net.Sockets.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ReceiveAllMulticast
    path: src/System.Net.Sockets/ref/System.Net.Sockets.cs
    startLine: 39
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  summary: "\n<p>Enable receiving all multicast IPv4 packets on the network. These are packets with destination addresses in the range 224.0.0.0 through 239.255.255.255. The socket must have address family <xref href=\"System.Net.Sockets.AddressFamily.InterNetwork\" data-throw-if-not-resolved=\"false\"></xref>, the socket type must be <xref href=\"System.Net.Sockets.SocketType.Raw\" data-throw-if-not-resolved=\"false\"></xref>, and the protocol type must be <xref href=\"System.Net.Sockets.ProtocolType.Udp\" data-throw-if-not-resolved=\"false\"></xref>. The current user must belong to the Administrators group on the local computer, and the socket must be bound to a specific port. This control code is supported on Windows 2000 and later operating systems. This value is equal to the Winsock 2 SIO_RCVALL_MCAST constant.</p>\n"
  syntax:
    content: ReceiveAllMulticast = 2550136834L
    return:
      type: System.Net.Sockets.IOControlCode
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Net.Sockets.IOControlCode.RoutingInterfaceChange
  commentId: F:System.Net.Sockets.IOControlCode.RoutingInterfaceChange
  id: RoutingInterfaceChange
  parent: System.Net.Sockets.IOControlCode
  langs:
  - csharp
  - vb
  name: RoutingInterfaceChange
  fullName: System.Net.Sockets.IOControlCode.RoutingInterfaceChange
  type: Field
  source:
    remote:
      path: src/System.Net.Sockets/ref/System.Net.Sockets.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: RoutingInterfaceChange
    path: src/System.Net.Sockets/ref/System.Net.Sockets.cs
    startLine: 40
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  summary: "\n<p>Enable receiving notification when the local interface used to access a remote endpoint changes. This value is equal to the Winsock 2 SIO_ROUTING_INTERFACE_CHANGE constant.</p>\n"
  syntax:
    content: RoutingInterfaceChange = 2281701397L
    return:
      type: System.Net.Sockets.IOControlCode
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Net.Sockets.IOControlCode.RoutingInterfaceQuery
  commentId: F:System.Net.Sockets.IOControlCode.RoutingInterfaceQuery
  id: RoutingInterfaceQuery
  parent: System.Net.Sockets.IOControlCode
  langs:
  - csharp
  - vb
  name: RoutingInterfaceQuery
  fullName: System.Net.Sockets.IOControlCode.RoutingInterfaceQuery
  type: Field
  source:
    remote:
      path: src/System.Net.Sockets/ref/System.Net.Sockets.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: RoutingInterfaceQuery
    path: src/System.Net.Sockets/ref/System.Net.Sockets.cs
    startLine: 41
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  summary: "\n<p>Return the interface addresses that can be used to connect to the specified remote address. This value is equal to the Winsock 2 SIO_ROUTING_INTERFACE_QUERY constant.</p>\n"
  syntax:
    content: RoutingInterfaceQuery = 3355443220L
    return:
      type: System.Net.Sockets.IOControlCode
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Net.Sockets.IOControlCode.SetGroupQos
  commentId: F:System.Net.Sockets.IOControlCode.SetGroupQos
  id: SetGroupQos
  parent: System.Net.Sockets.IOControlCode
  langs:
  - csharp
  - vb
  name: SetGroupQos
  fullName: System.Net.Sockets.IOControlCode.SetGroupQos
  type: Field
  source:
    remote:
      path: src/System.Net.Sockets/ref/System.Net.Sockets.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: SetGroupQos
    path: src/System.Net.Sockets/ref/System.Net.Sockets.cs
    startLine: 42
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  summary: "\n<p>Set the Quality of Service (QOS) attributes for the socket group. This value is reserved for future use and is equal to the Winsock 2 SIO_SET_GROUP_QOS constant.</p>\n"
  syntax:
    content: SetGroupQos = 2281701388L
    return:
      type: System.Net.Sockets.IOControlCode
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Net.Sockets.IOControlCode.SetQos
  commentId: F:System.Net.Sockets.IOControlCode.SetQos
  id: SetQos
  parent: System.Net.Sockets.IOControlCode
  langs:
  - csharp
  - vb
  name: SetQos
  fullName: System.Net.Sockets.IOControlCode.SetQos
  type: Field
  source:
    remote:
      path: src/System.Net.Sockets/ref/System.Net.Sockets.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: SetQos
    path: src/System.Net.Sockets/ref/System.Net.Sockets.cs
    startLine: 43
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  summary: "\n<p>Set the Quality of Service (QOS) attributes for the socket. QOS defines the bandwidth requirements for the socket. This control code is supported on Windows Me, Windows 2000, and later operating systems. This value is equal to the Winsock 2 SIO_SET_QOS constant.</p>\n"
  syntax:
    content: SetQos = 2281701387L
    return:
      type: System.Net.Sockets.IOControlCode
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Net.Sockets.IOControlCode.TranslateHandle
  commentId: F:System.Net.Sockets.IOControlCode.TranslateHandle
  id: TranslateHandle
  parent: System.Net.Sockets.IOControlCode
  langs:
  - csharp
  - vb
  name: TranslateHandle
  fullName: System.Net.Sockets.IOControlCode.TranslateHandle
  type: Field
  source:
    remote:
      path: src/System.Net.Sockets/ref/System.Net.Sockets.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: TranslateHandle
    path: src/System.Net.Sockets/ref/System.Net.Sockets.cs
    startLine: 44
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  summary: "\n<p>Return a handle for the socket that is valid in the context of a companion interface. This value is equal to the Winsock 2 SIO_TRANSLATE_HANDLE constant.</p>\n"
  syntax:
    content: TranslateHandle = 3355443213L
    return:
      type: System.Net.Sockets.IOControlCode
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Net.Sockets.IOControlCode.UnicastInterface
  commentId: F:System.Net.Sockets.IOControlCode.UnicastInterface
  id: UnicastInterface
  parent: System.Net.Sockets.IOControlCode
  langs:
  - csharp
  - vb
  name: UnicastInterface
  fullName: System.Net.Sockets.IOControlCode.UnicastInterface
  type: Field
  source:
    remote:
      path: src/System.Net.Sockets/ref/System.Net.Sockets.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: UnicastInterface
    path: src/System.Net.Sockets/ref/System.Net.Sockets.cs
    startLine: 45
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  summary: "\n<p>Set the interface used for outgoing unicast packets. This value is equal to the Winsock 2 SIO_UCAST_IF constant.</p>\n"
  syntax:
    content: UnicastInterface = 2550136838L
    return:
      type: System.Net.Sockets.IOControlCode
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
references:
- uid: System.Net.Sockets
  isExternal: false
  name: System.Net.Sockets
  fullName: System.Net.Sockets
- uid: System.Net.Sockets.IOControlCode
  parent: System.Net.Sockets
  isExternal: false
  name: IOControlCode
  fullName: System.Net.Sockets.IOControlCode
