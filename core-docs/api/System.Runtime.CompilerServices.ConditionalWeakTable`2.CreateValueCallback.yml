items:
- uid: System.Runtime.CompilerServices.ConditionalWeakTable`2.CreateValueCallback
  commentId: T:System.Runtime.CompilerServices.ConditionalWeakTable`2.CreateValueCallback
  id: ConditionalWeakTable`2.CreateValueCallback
  parent: System.Runtime.CompilerServices
  children: []
  langs:
  - csharp
  - vb
  name: ConditionalWeakTable<TKey, TValue>.CreateValueCallback
  fullName: System.Runtime.CompilerServices.ConditionalWeakTable<TKey, TValue>.CreateValueCallback
  type: Delegate
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CreateValueCallback
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 2870
  assemblies:
  - System.Runtime
  namespace: System.Runtime.CompilerServices
  summary: "\n<p>Represents a method that creates a non-default value to add as part of a key/value pair to a <xref href=\"System.Runtime.CompilerServices.ConditionalWeakTable`2\" data-throw-if-not-resolved=\"false\"></xref> object. </p>\n"
  remarks: "\n<p>The <xref href=\"System.Runtime.CompilerServices.ConditionalWeakTable`2.CreateValueCallback\" data-throw-if-not-resolved=\"false\"></xref> delegate encapsulates a callback method that is invoked by the <xref href=\"System.Runtime.CompilerServices.ConditionalWeakTable`2.GetValue(`0,System.Runtime.CompilerServices.ConditionalWeakTable{`0,`1}.CreateValueCallback)\" data-throw-if-not-resolved=\"false\"></xref> method when the key passed to the method is not found in the <xref href=\"System.Runtime.CompilerServices.ConditionalWeakTable`2\" data-throw-if-not-resolved=\"false\"></xref> object. The <xref href=\"System.Runtime.CompilerServices.ConditionalWeakTable`2.GetValue(`0,System.Runtime.CompilerServices.ConditionalWeakTable{`0,`1}.CreateValueCallback)\" data-throw-if-not-resolved=\"false\"></xref> method passes the callback method the key that represents a managed object to which a property value is to be dynamically attached. The method is responsible for returning the property value to its caller, which, in turn, adds the key/value pair to the table. </p>\n<p>The <xref href=\"System.Runtime.CompilerServices.ConditionalWeakTable`2.CreateValueCallback\" data-throw-if-not-resolved=\"false\"></xref> method is used to return an instance of a reference type that can be attached to the specified key. It enables that instance to be initialized using non-default values. If the key is not found in the table, the <xref href=\"System.Runtime.CompilerServices.ConditionalWeakTable`2.GetOrCreateValue(`0)\" data-throw-if-not-resolved=\"false\"></xref> method adds a key/value pair in which the value is initialized using default values.</p>\n"
  example:
  - "\n<p>The following example defines a <code>MainClass</code> class and a <code>MainInfo</code> class. <code>MainInfo</code> provides information about the <code>MainClass</code> instance. It also defines a static (<strong>Shared</strong> in Visual Basic) <code>CreateAttachedValue</code> method that can be assigned to the <xref href=\"System.Runtime.CompilerServices.ConditionalWeakTable`2.CreateValueCallback\" data-throw-if-not-resolved=\"false\"></xref> delegate and passed to the <xref href=\"System.Runtime.CompilerServices.ConditionalWeakTable`2.GetValue(`0,System.Runtime.CompilerServices.ConditionalWeakTable{`0,`1}.CreateValueCallback)\" data-throw-if-not-resolved=\"false\"></xref> method. The example calls the <xref href=\"System.Runtime.CompilerServices.ConditionalWeakTable`2.GetValue(`0,System.Runtime.CompilerServices.ConditionalWeakTable{`0,`1}.CreateValueCallback)\" data-throw-if-not-resolved=\"false\"></xref> method to add a <code>MainClass</code> object and its corresponding <code>MainInfo</code> object to a <xref href=\"System.Runtime.CompilerServices.ConditionalWeakTable`2\" data-throw-if-not-resolved=\"false\"></xref> table. The example also illustrates calls to the <xref href=\"System.Runtime.CompilerServices.ConditionalWeakTable`2.Add(`0,`1)\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"System.Runtime.CompilerServices.ConditionalWeakTable`2.GetOrCreateValue(`0)\" data-throw-if-not-resolved=\"false\"></xref> methods to add key/value pairs to the table, and a call to the <xref href=\"System.Runtime.CompilerServices.ConditionalWeakTable`2.TryGetValue(`0,`1@)\" data-throw-if-not-resolved=\"false\"></xref> method to retrieve the value that belongs to an existing key.</p>System.Runtime.CompilerServices.ConditionalWeakTable.GetValue#1"
  syntax:
    content: public delegate TValue CreateValueCallback(TKey key);
    content.vb: Public Delegate Function CreateValueCallback(key As TKey) As TValue
    parameters:
    - id: key
      type: '{TKey}'
      description: "\n<p>The key that belongs to the value to create.</p>\n"
    return:
      type: '{TValue}'
      description: "\n<p>An instance of a reference type that represents the value to attach to the specified key.</p>\n"
  seealso:
  - type: System.Runtime.CompilerServices.ConditionalWeakTable`2.GetValue(`0,System.Runtime.CompilerServices.ConditionalWeakTable{`0,`1}.CreateValueCallback)
    commentId: M:System.Runtime.CompilerServices.ConditionalWeakTable`2.GetValue(`0,System.Runtime.CompilerServices.ConditionalWeakTable{`0,`1}.CreateValueCallback)
  modifiers.csharp:
  - public
  - delegate
  modifiers.vb:
  - Public
  - Delegate
  fullName.vb: System.Runtime.CompilerServices.ConditionalWeakTable(Of TKey, TValue).CreateValueCallback
  name.vb: ConditionalWeakTable(Of TKey, TValue).CreateValueCallback
references:
- uid: System.Runtime.CompilerServices
  isExternal: false
  name: System.Runtime.CompilerServices
  fullName: System.Runtime.CompilerServices
- uid: '{TKey}'
  isExternal: false
  name: TKey
  fullName: TKey
- uid: '{TValue}'
  isExternal: false
  name: TValue
  fullName: TValue
