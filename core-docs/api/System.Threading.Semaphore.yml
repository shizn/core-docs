items:
- uid: System.Threading.Semaphore
  commentId: T:System.Threading.Semaphore
  id: Semaphore
  parent: System.Threading
  children:
  - System.Threading.Semaphore.#ctor(System.Int32,System.Int32)
  - System.Threading.Semaphore.#ctor(System.Int32,System.Int32,System.String)
  - System.Threading.Semaphore.#ctor(System.Int32,System.Int32,System.String,System.Boolean@)
  - System.Threading.Semaphore.OpenExisting(System.String)
  - System.Threading.Semaphore.Release
  - System.Threading.Semaphore.Release(System.Int32)
  - System.Threading.Semaphore.TryOpenExisting(System.String,System.Threading.Semaphore@)
  langs:
  - csharp
  - vb
  name: Semaphore
  fullName: System.Threading.Semaphore
  type: Class
  source:
    remote:
      path: src/System.Threading/ref/System.Threading.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Semaphore
    path: src/System.Threading/ref/System.Threading.cs
    startLine: 244
  assemblies:
  - System.Threading
  namespace: System.Threading
  syntax:
    content: 'public sealed class Semaphore : WaitHandle'
    content.vb: >-
      Public NotInheritable Class Semaphore
          Inherits WaitHandle
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: System.Threading.Semaphore.#ctor(System.Int32,System.Int32)
  commentId: M:System.Threading.Semaphore.#ctor(System.Int32,System.Int32)
  id: '#ctor(System.Int32,System.Int32)'
  parent: System.Threading.Semaphore
  langs:
  - csharp
  - vb
  name: Semaphore(Int32, Int32)
  fullName: System.Threading.Semaphore.Semaphore(System.Int32, System.Int32)
  type: Constructor
  source:
    remote:
      path: src/System.Threading/ref/System.Threading.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Threading/ref/System.Threading.cs
    startLine: 246
  assemblies:
  - System.Threading
  namespace: System.Threading
  syntax:
    content: public Semaphore(int initialCount, int maximumCount)
    content.vb: Public Sub New(initialCount As Integer, maximumCount As Integer)
    parameters:
    - id: initialCount
      type: System.Int32
    - id: maximumCount
      type: System.Int32
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Threading.Semaphore.#ctor(System.Int32,System.Int32,System.String)
  commentId: M:System.Threading.Semaphore.#ctor(System.Int32,System.Int32,System.String)
  id: '#ctor(System.Int32,System.Int32,System.String)'
  parent: System.Threading.Semaphore
  langs:
  - csharp
  - vb
  name: Semaphore(Int32, Int32, String)
  fullName: System.Threading.Semaphore.Semaphore(System.Int32, System.Int32, System.String)
  type: Constructor
  source:
    remote:
      path: src/System.Threading/ref/System.Threading.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Threading/ref/System.Threading.cs
    startLine: 247
  assemblies:
  - System.Threading
  namespace: System.Threading
  syntax:
    content: public Semaphore(int initialCount, int maximumCount, string name)
    content.vb: Public Sub New(initialCount As Integer, maximumCount As Integer, name As String)
    parameters:
    - id: initialCount
      type: System.Int32
    - id: maximumCount
      type: System.Int32
    - id: name
      type: System.String
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Threading.Semaphore.#ctor(System.Int32,System.Int32,System.String,System.Boolean@)
  commentId: M:System.Threading.Semaphore.#ctor(System.Int32,System.Int32,System.String,System.Boolean@)
  id: '#ctor(System.Int32,System.Int32,System.String,System.Boolean@)'
  parent: System.Threading.Semaphore
  langs:
  - csharp
  - vb
  name: Semaphore(Int32, Int32, String, out Boolean)
  fullName: System.Threading.Semaphore.Semaphore(System.Int32, System.Int32, System.String, out System.Boolean)
  type: Constructor
  source:
    remote:
      path: src/System.Threading/ref/System.Threading.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Threading/ref/System.Threading.cs
    startLine: 248
  assemblies:
  - System.Threading
  namespace: System.Threading
  syntax:
    content: public Semaphore(int initialCount, int maximumCount, string name, out bool createdNew)
    content.vb: Public Sub New(initialCount As Integer, maximumCount As Integer, name As String, ByRef createdNew As Boolean)
    parameters:
    - id: initialCount
      type: System.Int32
    - id: maximumCount
      type: System.Int32
    - id: name
      type: System.String
    - id: createdNew
      type: System.Boolean
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Threading.Semaphore.Semaphore(System.Int32, System.Int32, System.String, ByRef System.Boolean)
  name.vb: Semaphore(Int32, Int32, String, ByRef Boolean)
- uid: System.Threading.Semaphore.OpenExisting(System.String)
  commentId: M:System.Threading.Semaphore.OpenExisting(System.String)
  id: OpenExisting(System.String)
  parent: System.Threading.Semaphore
  langs:
  - csharp
  - vb
  name: OpenExisting(String)
  fullName: System.Threading.Semaphore.OpenExisting(System.String)
  type: Method
  source:
    remote:
      path: src/System.Threading/ref/System.Threading.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: OpenExisting
    path: src/System.Threading/ref/System.Threading.cs
    startLine: 249
  assemblies:
  - System.Threading
  namespace: System.Threading
  syntax:
    content: public static Semaphore OpenExisting(string name)
    content.vb: Public Shared Function OpenExisting(name As String) As Semaphore
    parameters:
    - id: name
      type: System.String
    return:
      type: System.Threading.Semaphore
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Threading.Semaphore.Release
  commentId: M:System.Threading.Semaphore.Release
  id: Release
  parent: System.Threading.Semaphore
  langs:
  - csharp
  - vb
  name: Release()
  fullName: System.Threading.Semaphore.Release()
  type: Method
  source:
    remote:
      path: src/System.Threading/ref/System.Threading.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Release
    path: src/System.Threading/ref/System.Threading.cs
    startLine: 250
  assemblies:
  - System.Threading
  namespace: System.Threading
  syntax:
    content: public int Release()
    content.vb: Public Function Release As Integer
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Threading.Semaphore.Release(System.Int32)
  commentId: M:System.Threading.Semaphore.Release(System.Int32)
  id: Release(System.Int32)
  parent: System.Threading.Semaphore
  langs:
  - csharp
  - vb
  name: Release(Int32)
  fullName: System.Threading.Semaphore.Release(System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Threading/ref/System.Threading.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Release
    path: src/System.Threading/ref/System.Threading.cs
    startLine: 251
  assemblies:
  - System.Threading
  namespace: System.Threading
  syntax:
    content: public int Release(int releaseCount)
    content.vb: Public Function Release(releaseCount As Integer) As Integer
    parameters:
    - id: releaseCount
      type: System.Int32
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Threading.Semaphore.TryOpenExisting(System.String,System.Threading.Semaphore@)
  commentId: M:System.Threading.Semaphore.TryOpenExisting(System.String,System.Threading.Semaphore@)
  id: TryOpenExisting(System.String,System.Threading.Semaphore@)
  parent: System.Threading.Semaphore
  langs:
  - csharp
  - vb
  name: TryOpenExisting(String, out Semaphore)
  fullName: System.Threading.Semaphore.TryOpenExisting(System.String, out System.Threading.Semaphore)
  type: Method
  source:
    remote:
      path: src/System.Threading/ref/System.Threading.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: TryOpenExisting
    path: src/System.Threading/ref/System.Threading.cs
    startLine: 252
  assemblies:
  - System.Threading
  namespace: System.Threading
  syntax:
    content: public static bool TryOpenExisting(string name, out Semaphore result)
    content.vb: Public Shared Function TryOpenExisting(name As String, ByRef result As Semaphore) As Boolean
    parameters:
    - id: name
      type: System.String
    - id: result
      type: System.Threading.Semaphore
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Threading.Semaphore.TryOpenExisting(System.String, ByRef System.Threading.Semaphore)
  name.vb: TryOpenExisting(String, ByRef Semaphore)
references:
- uid: System.Threading
  isExternal: false
  name: System.Threading
  fullName: System.Threading
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  fullName: System.Int32
- uid: System.String
  parent: System
  isExternal: false
  name: String
  fullName: System.String
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  fullName: System.Boolean
- uid: System.Threading.Semaphore
  parent: System.Threading
  isExternal: false
  name: Semaphore
  fullName: System.Threading.Semaphore
