items:
- uid: System.IO.Pipes.PipeDirection
  commentId: T:System.IO.Pipes.PipeDirection
  id: PipeDirection
  parent: System.IO.Pipes
  children:
  - System.IO.Pipes.PipeDirection.In
  - System.IO.Pipes.PipeDirection.InOut
  - System.IO.Pipes.PipeDirection.Out
  langs:
  - csharp
  - vb
  name: PipeDirection
  fullName: System.IO.Pipes.PipeDirection
  type: Enum
  source:
    remote:
      path: src/System.IO.Pipes/ref/System.IO.Pipes.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: PipeDirection
    path: src/System.IO.Pipes/ref/System.IO.Pipes.cs
    startLine: 75
  assemblies:
  - System.IO.Pipes
  namespace: System.IO.Pipes
  summary: "\n<p>Specifies the direction of the pipe.</p>\n"
  remarks: "\n<p>Anonymous pipes must have a pipe direction of <xref href=\"System.IO.Pipes.PipeDirection.In\" data-throw-if-not-resolved=\"false\"></xref> or <xref href=\"System.IO.Pipes.PipeDirection.Out\" data-throw-if-not-resolved=\"false\"></xref>. A <xref href=\"System.IO.Pipes.PipeDirection\" data-throw-if-not-resolved=\"false\"></xref> value of <xref href=\"System.IO.Pipes.PipeDirection.InOut\" data-throw-if-not-resolved=\"false\"></xref> is not supported by anonymous pipes because they are defined to be one-way only.</p>\n"
  example:
  - 
  syntax:
    content: public enum PipeDirection
    content.vb: Public Enum PipeDirection
  modifiers.csharp:
  - public
  - enum
  modifiers.vb:
  - Public
  - Enum
- uid: System.IO.Pipes.PipeDirection.In
  commentId: F:System.IO.Pipes.PipeDirection.In
  id: In
  parent: System.IO.Pipes.PipeDirection
  langs:
  - csharp
  - vb
  name: In
  fullName: System.IO.Pipes.PipeDirection.In
  type: Field
  source:
    remote:
      path: src/System.IO.Pipes/ref/System.IO.Pipes.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: In
    path: src/System.IO.Pipes/ref/System.IO.Pipes.cs
    startLine: 77
  assemblies:
  - System.IO.Pipes
  namespace: System.IO.Pipes
  summary: "\n<p>Specifies that the pipe direction is in.</p>\n"
  syntax:
    content: In = 1
    return:
      type: System.IO.Pipes.PipeDirection
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.IO.Pipes.PipeDirection.InOut
  commentId: F:System.IO.Pipes.PipeDirection.InOut
  id: InOut
  parent: System.IO.Pipes.PipeDirection
  langs:
  - csharp
  - vb
  name: InOut
  fullName: System.IO.Pipes.PipeDirection.InOut
  type: Field
  source:
    remote:
      path: src/System.IO.Pipes/ref/System.IO.Pipes.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: InOut
    path: src/System.IO.Pipes/ref/System.IO.Pipes.cs
    startLine: 78
  assemblies:
  - System.IO.Pipes
  namespace: System.IO.Pipes
  summary: "\n<p>Specifies that the pipe direction is two-way.</p>\n"
  syntax:
    content: InOut = 3
    return:
      type: System.IO.Pipes.PipeDirection
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.IO.Pipes.PipeDirection.Out
  commentId: F:System.IO.Pipes.PipeDirection.Out
  id: Out
  parent: System.IO.Pipes.PipeDirection
  langs:
  - csharp
  - vb
  name: Out
  fullName: System.IO.Pipes.PipeDirection.Out
  type: Field
  source:
    remote:
      path: src/System.IO.Pipes/ref/System.IO.Pipes.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Out
    path: src/System.IO.Pipes/ref/System.IO.Pipes.cs
    startLine: 79
  assemblies:
  - System.IO.Pipes
  namespace: System.IO.Pipes
  summary: "\n<p>Specifies that the pipe direction is out.</p>\n"
  syntax:
    content: Out = 2
    return:
      type: System.IO.Pipes.PipeDirection
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
references:
- uid: System.IO.Pipes
  isExternal: false
  name: System.IO.Pipes
  fullName: System.IO.Pipes
- uid: System.IO.Pipes.PipeDirection
  parent: System.IO.Pipes
  isExternal: false
  name: PipeDirection
  fullName: System.IO.Pipes.PipeDirection
