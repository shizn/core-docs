items:
- uid: System.IO.Pipes.PipeAuditRule
  commentId: T:System.IO.Pipes.PipeAuditRule
  id: PipeAuditRule
  parent: System.IO.Pipes
  children:
  - System.IO.Pipes.PipeAuditRule.#ctor(System.Security.Principal.IdentityReference,System.IO.Pipes.PipeAccessRights,System.Security.AccessControl.AuditFlags)
  - System.IO.Pipes.PipeAuditRule.#ctor(System.String,System.IO.Pipes.PipeAccessRights,System.Security.AccessControl.AuditFlags)
  - System.IO.Pipes.PipeAuditRule.PipeAccessRights
  langs:
  - csharp
  - vb
  name: PipeAuditRule
  fullName: System.IO.Pipes.PipeAuditRule
  type: Class
  source:
    remote:
      path: src/System.IO.Pipes.AccessControl/ref/System.IO.Pipes.AccessControl.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: PipeAuditRule
    path: src/System.IO.Pipes.AccessControl/ref/System.IO.Pipes.AccessControl.cs
    startLine: 36
  assemblies:
  - System.IO.Pipes.AccessControl
  namespace: System.IO.Pipes
  summary: "\n<p>Represents an abstraction of an access control entry (ACE) that defines an audit rule for a pipe.</p>\n"
  remarks: "\n<p>Audit rules determine when and how actions performed on system objects are logged.</p>\n<p>The <xref href=\"System.IO.Pipes.PipeAuditRule\" data-throw-if-not-resolved=\"false\"></xref> class represents an abstraction of an underlying access control entry (ACE) that specifies a user account, the type of access to provide (read, write, and so on), and whether to perform auditing. This class can specify how audit rules are inherited from and propagated to objects.</p>\n<p>To allow file auditing on computers that are running Windows NT or later operating systems, the Audit Access Security policy must be enabled; by default, this policy is set to No Auditing.</p>\n<p>To enable the Audit Access Security policy, perform the following steps:</p>\n<ol><li>\n<p>Click the Start button and then point to All Programs. Point to Administrative Tools and then click Local Security Policy.</p>\n</li><li>\n<p>In the Local Security Settings window, expand the Local Policies folder and left-click the Audit Policy folder.</p>\n</li><li>\n<p>Double-click the Audit object access entry in the right pane of the Local Security Settings window to display the Audit object access Properties dialog box. </p>\n</li><li>\n<p>Select the Success or Failure boxes to log successes or failures.   </p>\n</li></ol>\n<p>Note that an audit rule for a user account requires a corresponding access rule for the same user account.</p>\n<p>Use the <xref href=\"System.IO.Pipes.PipeAuditRule\" data-throw-if-not-resolved=\"false\"></xref> class to create a new audit rule. You can persist this rule using the <xref href=\"System.IO.Pipes.PipeSecurity\" data-throw-if-not-resolved=\"false\"></xref> class.</p>\n"
  example:
  - 
  syntax:
    content: 'public sealed class PipeAuditRule : AuditRule'
    content.vb: >-
      Public NotInheritable Class PipeAuditRule
          Inherits AuditRule
  inheritance:
  - System.Object
  - System.Security.AccessControl.AuthorizationRule
  - System.Security.AccessControl.AuditRule
  inheritedMembers:
  - System.Security.AccessControl.AuditRule.AuditFlags
  - System.Security.AccessControl.AuthorizationRule.IdentityReference
  - System.Security.AccessControl.AuthorizationRule.AccessMask
  - System.Security.AccessControl.AuthorizationRule.IsInherited
  - System.Security.AccessControl.AuthorizationRule.InheritanceFlags
  - System.Security.AccessControl.AuthorizationRule.PropagationFlags
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: System.IO.Pipes.PipeAuditRule.#ctor(System.Security.Principal.IdentityReference,System.IO.Pipes.PipeAccessRights,System.Security.AccessControl.AuditFlags)
  commentId: M:System.IO.Pipes.PipeAuditRule.#ctor(System.Security.Principal.IdentityReference,System.IO.Pipes.PipeAccessRights,System.Security.AccessControl.AuditFlags)
  id: '#ctor(System.Security.Principal.IdentityReference,System.IO.Pipes.PipeAccessRights,System.Security.AccessControl.AuditFlags)'
  parent: System.IO.Pipes.PipeAuditRule
  langs:
  - csharp
  - vb
  name: PipeAuditRule(IdentityReference, PipeAccessRights, AuditFlags)
  fullName: System.IO.Pipes.PipeAuditRule.PipeAuditRule(System.Security.Principal.IdentityReference, System.IO.Pipes.PipeAccessRights, System.Security.AccessControl.AuditFlags)
  type: Constructor
  source:
    remote:
      path: src/System.IO.Pipes.AccessControl/ref/System.IO.Pipes.AccessControl.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.IO.Pipes.AccessControl/ref/System.IO.Pipes.AccessControl.cs
    startLine: 38
  assemblies:
  - System.IO.Pipes.AccessControl
  namespace: System.IO.Pipes
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.IO.Pipes.PipeAuditRule\" data-throw-if-not-resolved=\"false\"></xref> class for a user account specified in a <xref href=\"System.Security.Principal.IdentityReference\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  remarks: "\n<p>Use this constructor to create an audit rule that can be persisted using the <xref href=\"System.IO.Pipes.PipeSecurity\" data-throw-if-not-resolved=\"false\"></xref> class. Audit rules determine when and how actions performed on system objects are logged.</p>\n"
  example:
  - 
  syntax:
    content: public PipeAuditRule(IdentityReference identity, PipeAccessRights rights, AuditFlags flags)
    content.vb: Public Sub New(identity As IdentityReference, rights As PipeAccessRights, flags As AuditFlags)
    parameters:
    - id: identity
      type: System.Security.Principal.IdentityReference
      description: "\n<p>An <xref href=\"System.Security.Principal.IdentityReference\" data-throw-if-not-resolved=\"false\"></xref> object that encapsulates a reference to a user account.</p>\n"
    - id: rights
      type: System.IO.Pipes.PipeAccessRights
      description: "\n<p>One of the <xref href=\"System.IO.Pipes.PipeAccessRights\" data-throw-if-not-resolved=\"false\"></xref> values that specifies the type of operation associated with the access rule.</p>\n"
    - id: flags
      type: System.Security.AccessControl.AuditFlags
      description: "\n<p>One of the <xref href=\"System.Security.AccessControl.AuditFlags\" data-throw-if-not-resolved=\"false\"></xref> values that specifies when to perform auditing.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.IO.Pipes.PipeAuditRule.#ctor(System.String,System.IO.Pipes.PipeAccessRights,System.Security.AccessControl.AuditFlags)
  commentId: M:System.IO.Pipes.PipeAuditRule.#ctor(System.String,System.IO.Pipes.PipeAccessRights,System.Security.AccessControl.AuditFlags)
  id: '#ctor(System.String,System.IO.Pipes.PipeAccessRights,System.Security.AccessControl.AuditFlags)'
  parent: System.IO.Pipes.PipeAuditRule
  langs:
  - csharp
  - vb
  name: PipeAuditRule(String, PipeAccessRights, AuditFlags)
  fullName: System.IO.Pipes.PipeAuditRule.PipeAuditRule(System.String, System.IO.Pipes.PipeAccessRights, System.Security.AccessControl.AuditFlags)
  type: Constructor
  source:
    remote:
      path: src/System.IO.Pipes.AccessControl/ref/System.IO.Pipes.AccessControl.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.IO.Pipes.AccessControl/ref/System.IO.Pipes.AccessControl.cs
    startLine: 39
  assemblies:
  - System.IO.Pipes.AccessControl
  namespace: System.IO.Pipes
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.IO.Pipes.PipeAuditRule\" data-throw-if-not-resolved=\"false\"></xref> class for a named user account.</p>\n"
  remarks: "\n<p>Use this constructor to create an audit rule that can be persisted using the <xref href=\"System.IO.Pipes.PipeSecurity\" data-throw-if-not-resolved=\"false\"></xref> class. Audit rules determine when and how actions performed on system objects are logged.</p>\n"
  example:
  - 
  syntax:
    content: public PipeAuditRule(string identity, PipeAccessRights rights, AuditFlags flags)
    content.vb: Public Sub New(identity As String, rights As PipeAccessRights, flags As AuditFlags)
    parameters:
    - id: identity
      type: System.String
      description: "\n<p>The name of the user account.</p>\n"
    - id: rights
      type: System.IO.Pipes.PipeAccessRights
      description: "\n<p>One of the <xref href=\"System.IO.Pipes.PipeAccessRights\" data-throw-if-not-resolved=\"false\"></xref> values that specifies the type of operation associated with the access rule.</p>\n"
    - id: flags
      type: System.Security.AccessControl.AuditFlags
      description: "\n<p>One of the <xref href=\"System.Security.AccessControl.AuditFlags\" data-throw-if-not-resolved=\"false\"></xref> values that specifies when to perform auditing.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.IO.Pipes.PipeAuditRule.PipeAccessRights
  commentId: P:System.IO.Pipes.PipeAuditRule.PipeAccessRights
  id: PipeAccessRights
  parent: System.IO.Pipes.PipeAuditRule
  langs:
  - csharp
  - vb
  name: PipeAccessRights
  fullName: System.IO.Pipes.PipeAuditRule.PipeAccessRights
  type: Property
  source:
    remote:
      path: src/System.IO.Pipes.AccessControl/ref/System.IO.Pipes.AccessControl.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: PipeAccessRights
    path: src/System.IO.Pipes.AccessControl/ref/System.IO.Pipes.AccessControl.cs
    startLine: 40
  assemblies:
  - System.IO.Pipes.AccessControl
  namespace: System.IO.Pipes
  summary: "\n<p>Gets the <xref href=\"System.IO.Pipes.PipeAccessRights\" data-throw-if-not-resolved=\"false\"></xref> flags that are associated with the current <xref href=\"System.IO.Pipes.PipeAuditRule\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  example:
  - 
  syntax:
    content: public PipeAccessRights PipeAccessRights { get; }
    content.vb: Public ReadOnly Property PipeAccessRights As PipeAccessRights
    parameters: []
    return:
      type: System.IO.Pipes.PipeAccessRights
      description: "\n<p>A bitwise combination of the <xref href=\"System.IO.Pipes.PipeAccessRights\" data-throw-if-not-resolved=\"false\"></xref> values. </p>\n"
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: System.IO.Pipes
  isExternal: false
  name: System.IO.Pipes
  fullName: System.IO.Pipes
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System.Security.AccessControl.AuthorizationRule
  parent: System.Security.AccessControl
  isExternal: false
  name: AuthorizationRule
  fullName: System.Security.AccessControl.AuthorizationRule
- uid: System.Security.AccessControl.AuditRule
  parent: System.Security.AccessControl
  isExternal: false
  name: AuditRule
  fullName: System.Security.AccessControl.AuditRule
- uid: System.Security.AccessControl.AuditRule.AuditFlags
  parent: System.Security.AccessControl.AuditRule
  isExternal: false
  name: AuditFlags
  fullName: System.Security.AccessControl.AuditRule.AuditFlags
- uid: System.Security.AccessControl.AuthorizationRule.IdentityReference
  parent: System.Security.AccessControl.AuthorizationRule
  isExternal: false
  name: IdentityReference
  fullName: System.Security.AccessControl.AuthorizationRule.IdentityReference
- uid: System.Security.AccessControl.AuthorizationRule.AccessMask
  parent: System.Security.AccessControl.AuthorizationRule
  isExternal: false
  name: AccessMask
  fullName: System.Security.AccessControl.AuthorizationRule.AccessMask
- uid: System.Security.AccessControl.AuthorizationRule.IsInherited
  parent: System.Security.AccessControl.AuthorizationRule
  isExternal: false
  name: IsInherited
  fullName: System.Security.AccessControl.AuthorizationRule.IsInherited
- uid: System.Security.AccessControl.AuthorizationRule.InheritanceFlags
  parent: System.Security.AccessControl.AuthorizationRule
  isExternal: false
  name: InheritanceFlags
  fullName: System.Security.AccessControl.AuthorizationRule.InheritanceFlags
- uid: System.Security.AccessControl.AuthorizationRule.PropagationFlags
  parent: System.Security.AccessControl.AuthorizationRule
  isExternal: false
  name: PropagationFlags
  fullName: System.Security.AccessControl.AuthorizationRule.PropagationFlags
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Security.AccessControl
  isExternal: false
  name: System.Security.AccessControl
  fullName: System.Security.AccessControl
- uid: System.Security.Principal.IdentityReference
  parent: System.Security.Principal
  isExternal: false
  name: IdentityReference
  fullName: System.Security.Principal.IdentityReference
- uid: System.IO.Pipes.PipeAccessRights
  parent: System.IO.Pipes
  isExternal: false
  name: PipeAccessRights
  fullName: System.IO.Pipes.PipeAccessRights
- uid: System.Security.AccessControl.AuditFlags
  parent: System.Security.AccessControl
  isExternal: false
  name: AuditFlags
  fullName: System.Security.AccessControl.AuditFlags
- uid: System.Security.Principal
  isExternal: false
  name: System.Security.Principal
  fullName: System.Security.Principal
- uid: System.String
  parent: System
  isExternal: false
  name: String
  fullName: System.String
