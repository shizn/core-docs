items:
- uid: System.Windows.Input.ICommand
  commentId: T:System.Windows.Input.ICommand
  id: ICommand
  parent: System.Windows.Input
  children:
  - System.Windows.Input.ICommand.CanExecute(System.Object)
  - System.Windows.Input.ICommand.CanExecuteChanged
  - System.Windows.Input.ICommand.Execute(System.Object)
  langs:
  - csharp
  - vb
  name: ICommand
  fullName: System.Windows.Input.ICommand
  type: Interface
  source:
    remote:
      path: src/System.ObjectModel/src/System/Windows/Input/ICommand.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ICommand
    path: src/System.ObjectModel/src/System/Windows/Input/ICommand.cs
    startLine: 13
  assemblies:
  - System.ObjectModel
  namespace: System.Windows.Input
  summary: Defines a command.
  syntax:
    content: public interface ICommand
    content.vb: Public Interface ICommand
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: System.Windows.Input.ICommand.CanExecuteChanged
  commentId: E:System.Windows.Input.ICommand.CanExecuteChanged
  id: CanExecuteChanged
  parent: System.Windows.Input.ICommand
  langs:
  - csharp
  - vb
  name: CanExecuteChanged
  fullName: System.Windows.Input.ICommand.CanExecuteChanged
  type: Event
  source:
    remote:
      path: src/System.ObjectModel/src/System/Windows/Input/ICommand.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CanExecuteChanged
    path: src/System.ObjectModel/src/System/Windows/Input/ICommand.cs
    startLine: 18
  assemblies:
  - System.ObjectModel
  namespace: System.Windows.Input
  summary: Occurs when changes occur that affect whether or not the command should execute.
  syntax:
    content: event EventHandler CanExecuteChanged
    content.vb: Event CanExecuteChanged As EventHandler
    return:
      type: System.EventHandler
- uid: System.Windows.Input.ICommand.CanExecute(System.Object)
  commentId: M:System.Windows.Input.ICommand.CanExecute(System.Object)
  id: CanExecute(System.Object)
  parent: System.Windows.Input.ICommand
  langs:
  - csharp
  - vb
  name: CanExecute(Object)
  fullName: System.Windows.Input.ICommand.CanExecute(System.Object)
  type: Method
  source:
    remote:
      path: src/System.ObjectModel/src/System/Windows/Input/ICommand.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CanExecute
    path: src/System.ObjectModel/src/System/Windows/Input/ICommand.cs
    startLine: 25
  assemblies:
  - System.ObjectModel
  namespace: System.Windows.Input
  summary: Defines the method that determines whether the command can execute in its current state.
  syntax:
    content: bool CanExecute(object parameter)
    content.vb: Function CanExecute(parameter As Object) As Boolean
    parameters:
    - id: parameter
      type: System.Object
      description: Data used by the command.  If the command does not require data to be passed, this object can be set to null.
    return:
      type: System.Boolean
      description: true if this command can be executed; otherwise, false.
- uid: System.Windows.Input.ICommand.Execute(System.Object)
  commentId: M:System.Windows.Input.ICommand.Execute(System.Object)
  id: Execute(System.Object)
  parent: System.Windows.Input.ICommand
  langs:
  - csharp
  - vb
  name: Execute(Object)
  fullName: System.Windows.Input.ICommand.Execute(System.Object)
  type: Method
  source:
    remote:
      path: src/System.ObjectModel/src/System/Windows/Input/ICommand.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Execute
    path: src/System.ObjectModel/src/System/Windows/Input/ICommand.cs
    startLine: 31
  assemblies:
  - System.ObjectModel
  namespace: System.Windows.Input
  summary: Defines the method to be called when the command is invoked.
  syntax:
    content: void Execute(object parameter)
    content.vb: Sub Execute(parameter As Object)
    parameters:
    - id: parameter
      type: System.Object
      description: Data used by the command.  If the command does not require data to be passed, this object can be set to null.
references:
- uid: System.Windows.Input
  isExternal: false
  name: System.Windows.Input
  fullName: System.Windows.Input
- uid: System.EventHandler
  isExternal: false
  name: EventHandler
  fullName: System.EventHandler
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  fullName: System.Boolean
- uid: System
  isExternal: false
  name: System
  fullName: System
