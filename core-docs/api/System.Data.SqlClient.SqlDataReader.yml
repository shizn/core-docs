items:
- uid: System.Data.SqlClient.SqlDataReader
  commentId: T:System.Data.SqlClient.SqlDataReader
  id: SqlDataReader
  parent: System.Data.SqlClient
  children:
  - System.Data.SqlClient.SqlDataReader.Connection
  - System.Data.SqlClient.SqlDataReader.Depth
  - System.Data.SqlClient.SqlDataReader.FieldCount
  - System.Data.SqlClient.SqlDataReader.GetBoolean(System.Int32)
  - System.Data.SqlClient.SqlDataReader.GetByte(System.Int32)
  - System.Data.SqlClient.SqlDataReader.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)
  - System.Data.SqlClient.SqlDataReader.GetChar(System.Int32)
  - System.Data.SqlClient.SqlDataReader.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)
  - System.Data.SqlClient.SqlDataReader.GetDataTypeName(System.Int32)
  - System.Data.SqlClient.SqlDataReader.GetDateTime(System.Int32)
  - System.Data.SqlClient.SqlDataReader.GetDateTimeOffset(System.Int32)
  - System.Data.SqlClient.SqlDataReader.GetDecimal(System.Int32)
  - System.Data.SqlClient.SqlDataReader.GetDouble(System.Int32)
  - System.Data.SqlClient.SqlDataReader.GetEnumerator
  - System.Data.SqlClient.SqlDataReader.GetFieldType(System.Int32)
  - System.Data.SqlClient.SqlDataReader.GetFieldValue``1(System.Int32)
  - System.Data.SqlClient.SqlDataReader.GetFieldValueAsync``1(System.Int32,System.Threading.CancellationToken)
  - System.Data.SqlClient.SqlDataReader.GetFloat(System.Int32)
  - System.Data.SqlClient.SqlDataReader.GetGuid(System.Int32)
  - System.Data.SqlClient.SqlDataReader.GetInt16(System.Int32)
  - System.Data.SqlClient.SqlDataReader.GetInt32(System.Int32)
  - System.Data.SqlClient.SqlDataReader.GetInt64(System.Int32)
  - System.Data.SqlClient.SqlDataReader.GetName(System.Int32)
  - System.Data.SqlClient.SqlDataReader.GetOrdinal(System.String)
  - System.Data.SqlClient.SqlDataReader.GetProviderSpecificFieldType(System.Int32)
  - System.Data.SqlClient.SqlDataReader.GetProviderSpecificValue(System.Int32)
  - System.Data.SqlClient.SqlDataReader.GetProviderSpecificValues(System.Object[])
  - System.Data.SqlClient.SqlDataReader.GetSqlBinary(System.Int32)
  - System.Data.SqlClient.SqlDataReader.GetSqlBoolean(System.Int32)
  - System.Data.SqlClient.SqlDataReader.GetSqlByte(System.Int32)
  - System.Data.SqlClient.SqlDataReader.GetSqlBytes(System.Int32)
  - System.Data.SqlClient.SqlDataReader.GetSqlChars(System.Int32)
  - System.Data.SqlClient.SqlDataReader.GetSqlDateTime(System.Int32)
  - System.Data.SqlClient.SqlDataReader.GetSqlDecimal(System.Int32)
  - System.Data.SqlClient.SqlDataReader.GetSqlDouble(System.Int32)
  - System.Data.SqlClient.SqlDataReader.GetSqlGuid(System.Int32)
  - System.Data.SqlClient.SqlDataReader.GetSqlInt16(System.Int32)
  - System.Data.SqlClient.SqlDataReader.GetSqlInt32(System.Int32)
  - System.Data.SqlClient.SqlDataReader.GetSqlInt64(System.Int32)
  - System.Data.SqlClient.SqlDataReader.GetSqlMoney(System.Int32)
  - System.Data.SqlClient.SqlDataReader.GetSqlSingle(System.Int32)
  - System.Data.SqlClient.SqlDataReader.GetSqlString(System.Int32)
  - System.Data.SqlClient.SqlDataReader.GetSqlValue(System.Int32)
  - System.Data.SqlClient.SqlDataReader.GetSqlValues(System.Object[])
  - System.Data.SqlClient.SqlDataReader.GetSqlXml(System.Int32)
  - System.Data.SqlClient.SqlDataReader.GetStream(System.Int32)
  - System.Data.SqlClient.SqlDataReader.GetString(System.Int32)
  - System.Data.SqlClient.SqlDataReader.GetTextReader(System.Int32)
  - System.Data.SqlClient.SqlDataReader.GetTimeSpan(System.Int32)
  - System.Data.SqlClient.SqlDataReader.GetValue(System.Int32)
  - System.Data.SqlClient.SqlDataReader.GetValues(System.Object[])
  - System.Data.SqlClient.SqlDataReader.GetXmlReader(System.Int32)
  - System.Data.SqlClient.SqlDataReader.HasRows
  - System.Data.SqlClient.SqlDataReader.IsClosed
  - System.Data.SqlClient.SqlDataReader.IsDBNull(System.Int32)
  - System.Data.SqlClient.SqlDataReader.IsDBNullAsync(System.Int32,System.Threading.CancellationToken)
  - System.Data.SqlClient.SqlDataReader.Item(System.Int32)
  - System.Data.SqlClient.SqlDataReader.Item(System.String)
  - System.Data.SqlClient.SqlDataReader.NextResult
  - System.Data.SqlClient.SqlDataReader.NextResultAsync(System.Threading.CancellationToken)
  - System.Data.SqlClient.SqlDataReader.Read
  - System.Data.SqlClient.SqlDataReader.ReadAsync(System.Threading.CancellationToken)
  - System.Data.SqlClient.SqlDataReader.RecordsAffected
  - System.Data.SqlClient.SqlDataReader.VisibleFieldCount
  langs:
  - csharp
  - vb
  name: SqlDataReader
  fullName: System.Data.SqlClient.SqlDataReader
  type: Class
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlDataReader.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: SqlDataReader
    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlDataReader.cs
    startLine: 25
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlClient
  summary: Provides a way of reading a forward-only stream of rows from a SQL Server database. This class cannot be inherited.
  syntax:
    content: 'public class SqlDataReader : Common.DbDataReader, IDisposable'
    content.vb: >-
      Public Class SqlDataReader
          Inherits Common.DbDataReader
          Implements IDisposable
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: System.Data.SqlClient.SqlDataReader.Connection
  commentId: P:System.Data.SqlClient.SqlDataReader.Connection
  id: Connection
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  - vb
  name: Connection
  fullName: System.Data.SqlClient.SqlDataReader.Connection
  type: Property
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlDataReader.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Connection
    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlDataReader.cs
    startLine: 137
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlClient
  summary: Gets the <xref href="System.Data.SqlClient.SqlConnection" data-throw-if-not-resolved="false"></xref> associated with the <xref href="System.Data.SqlClient.SqlDataReader" data-throw-if-not-resolved="false"></xref>.
  syntax:
    content: protected SqlConnection Connection { get; }
    content.vb: Protected ReadOnly Property Connection As SqlConnection
    parameters: []
    return:
      type: System.Data.SqlClient.SqlConnection
      description: The <xref href="System.Data.SqlClient.SqlConnection" data-throw-if-not-resolved="false"></xref> associated with the <xref href="System.Data.SqlClient.SqlDataReader" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - protected
  - get
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: System.Data.SqlClient.SqlDataReader.Depth
  commentId: P:System.Data.SqlClient.SqlDataReader.Depth
  id: Depth
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  - vb
  name: Depth
  fullName: System.Data.SqlClient.SqlDataReader.Depth
  type: Property
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlDataReader.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Depth
    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlDataReader.cs
    startLine: 145
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlClient
  summary: Gets a value that indicates the depth of nesting for the current row.
  syntax:
    content: public override int Depth { get; }
    content.vb: Public Overrides ReadOnly Property Depth As Integer
    parameters: []
    return:
      type: System.Int32
      description: The depth of nesting for the current row.
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: System.Data.SqlClient.SqlDataReader.FieldCount
  commentId: P:System.Data.SqlClient.SqlDataReader.FieldCount
  id: FieldCount
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  - vb
  name: FieldCount
  fullName: System.Data.SqlClient.SqlDataReader.FieldCount
  type: Property
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlDataReader.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: FieldCount
    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlDataReader.cs
    startLine: 159
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlClient
  summary: Gets the number of columns in the current row.
  syntax:
    content: public override int FieldCount { get; }
    content.vb: Public Overrides ReadOnly Property FieldCount As Integer
    parameters: []
    return:
      type: System.Int32
      description: When not positioned in a valid recordset, 0; otherwise the number of columns in the current row. The default is -1.
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: 'There is no current connection to an instance of SQL Server. '
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: System.Data.SqlClient.SqlDataReader.HasRows
  commentId: P:System.Data.SqlClient.SqlDataReader.HasRows
  id: HasRows
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  - vb
  name: HasRows
  fullName: System.Data.SqlClient.SqlDataReader.HasRows
  type: Property
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlDataReader.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: HasRows
    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlDataReader.cs
    startLine: 181
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlClient
  summary: Gets a value that indicates whether the <xref href="System.Data.SqlClient.SqlDataReader" data-throw-if-not-resolved="false"></xref> contains one or more rows.
  syntax:
    content: public override bool HasRows { get; }
    content.vb: Public Overrides ReadOnly Property HasRows As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: true if the <xref href="System.Data.SqlClient.SqlDataReader" data-throw-if-not-resolved="false"></xref> contains one or more rows; otherwise false.
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: System.Data.SqlClient.SqlDataReader.IsClosed
  commentId: P:System.Data.SqlClient.SqlDataReader.IsClosed
  id: IsClosed
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  - vb
  name: IsClosed
  fullName: System.Data.SqlClient.SqlDataReader.IsClosed
  type: Property
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlDataReader.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IsClosed
    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlDataReader.cs
    startLine: 198
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlClient
  summary: 'Retrieves a Boolean value that indicates whether the specified <xref href="System.Data.SqlClient.SqlDataReader" data-throw-if-not-resolved="false"></xref> instance has been closed. '
  syntax:
    content: public override bool IsClosed { get; }
    content.vb: Public Overrides ReadOnly Property IsClosed As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: 'true if the specified <xref href="System.Data.SqlClient.SqlDataReader" data-throw-if-not-resolved="false"></xref> instance is closed; otherwise false. '
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: System.Data.SqlClient.SqlDataReader.Item(System.Int32)
  commentId: P:System.Data.SqlClient.SqlDataReader.Item(System.Int32)
  id: Item(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  - vb
  name: Item[Int32]
  fullName: System.Data.SqlClient.SqlDataReader.Item[System.Int32]
  type: Property
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlDataReader.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: this[]
    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlDataReader.cs
    startLine: 373
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlClient
  summary: Gets the value of the specified column in its native format given the column ordinal.
  syntax:
    content: public override object this[int i] { get; }
    content.vb: Public Overrides ReadOnly Property Item(i As Integer) As Object
    parameters:
    - id: i
      type: System.Int32
      description: 'The zero-based column ordinal. '
    return:
      type: System.Object
      description: The value of the specified column in its native format.
  exceptions:
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: 'The index passed was outside the range of 0 through <xref href="System.Data.IDataRecord.FieldCount" data-throw-if-not-resolved="false"></xref>. '
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
  fullName.vb: System.Data.SqlClient.SqlDataReader.Item(System.Int32)
  name.vb: Item(Int32)
- uid: System.Data.SqlClient.SqlDataReader.Item(System.String)
  commentId: P:System.Data.SqlClient.SqlDataReader.Item(System.String)
  id: Item(System.String)
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  - vb
  name: Item[String]
  fullName: System.Data.SqlClient.SqlDataReader.Item[System.String]
  type: Property
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlDataReader.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: this[]
    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlDataReader.cs
    startLine: 381
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlClient
  summary: Gets the value of the specified column in its native format given the column name.
  syntax:
    content: public override object this[string name] { get; }
    content.vb: Public Overrides ReadOnly Property Item(name As String) As Object
    parameters:
    - id: name
      type: System.String
      description: 'The column name. '
    return:
      type: System.Object
      description: The value of the specified column in its native format.
  exceptions:
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: 'No column with the specified name was found. '
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
  fullName.vb: System.Data.SqlClient.SqlDataReader.Item(System.String)
  name.vb: Item(String)
- uid: System.Data.SqlClient.SqlDataReader.RecordsAffected
  commentId: P:System.Data.SqlClient.SqlDataReader.RecordsAffected
  id: RecordsAffected
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  - vb
  name: RecordsAffected
  fullName: System.Data.SqlClient.SqlDataReader.RecordsAffected
  type: Property
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlDataReader.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: RecordsAffected
    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlDataReader.cs
    startLine: 326
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlClient
  summary: Gets the number of rows changed, inserted, or deleted by execution of the Transact-SQL statement.
  syntax:
    content: public override int RecordsAffected { get; }
    content.vb: Public Overrides ReadOnly Property RecordsAffected As Integer
    parameters: []
    return:
      type: System.Int32
      description: The number of rows changed, inserted, or deleted; 0 if no rows were affected or the statement failed; and -1 for SELECT statements.
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: System.Data.SqlClient.SqlDataReader.VisibleFieldCount
  commentId: P:System.Data.SqlClient.SqlDataReader.VisibleFieldCount
  id: VisibleFieldCount
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  - vb
  name: VisibleFieldCount
  fullName: System.Data.SqlClient.SqlDataReader.VisibleFieldCount
  type: Property
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlDataReader.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: VisibleFieldCount
    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlDataReader.cs
    startLine: 355
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlClient
  summary: 'Gets the number of fields in the <xref href="System.Data.SqlClient.SqlDataReader" data-throw-if-not-resolved="false"></xref> that are not hidden. '
  syntax:
    content: public override int VisibleFieldCount { get; }
    content.vb: Public Overrides ReadOnly Property VisibleFieldCount As Integer
    parameters: []
    return:
      type: System.Int32
      description: The number of fields that are not hidden.
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: System.Data.SqlClient.SqlDataReader.GetBoolean(System.Int32)
  commentId: M:System.Data.SqlClient.SqlDataReader.GetBoolean(System.Int32)
  id: GetBoolean(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  - vb
  name: GetBoolean(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetBoolean(System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlDataReader.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetBoolean
    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlDataReader.cs
    startLine: 1070
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlClient
  summary: Gets the value of the specified column as a Boolean.
  syntax:
    content: public override bool GetBoolean(int i)
    content.vb: Public Overrides Function GetBoolean(i As Integer) As Boolean
    parameters:
    - id: i
      type: System.Int32
      description: 'The zero-based column ordinal. '
    return:
      type: System.Boolean
      description: The value of the column.
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: 'The specified cast is not valid. '
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Data.SqlClient.SqlDataReader.GetByte(System.Int32)
  commentId: M:System.Data.SqlClient.SqlDataReader.GetByte(System.Int32)
  id: GetByte(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  - vb
  name: GetByte(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetByte(System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlDataReader.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetByte
    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlDataReader.cs
    startLine: 1156
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlClient
  summary: Gets the value of the specified column as a byte.
  syntax:
    content: public override byte GetByte(int i)
    content.vb: Public Overrides Function GetByte(i As Integer) As Byte
    parameters:
    - id: i
      type: System.Int32
      description: 'The zero-based column ordinal. '
    return:
      type: System.Byte
      description: The value of the specified column as a byte.
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: 'The specified cast is not valid. '
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Data.SqlClient.SqlDataReader.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)
  commentId: M:System.Data.SqlClient.SqlDataReader.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)
  id: GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  - vb
  name: GetBytes(Int32, Int64, Byte[], Int32, Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetBytes(System.Int32, System.Int64, System.Byte[], System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlDataReader.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetBytes
    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlDataReader.cs
    startLine: 1162
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlClient
  summary: Reads a stream of bytes from the specified column offset into the buffer an array starting at the given buffer offset.
  syntax:
    content: public override long GetBytes(int i, long dataIndex, byte[] buffer, int bufferIndex, int length)
    content.vb: Public Overrides Function GetBytes(i As Integer, dataIndex As Long, buffer As Byte(), bufferIndex As Integer, length As Integer) As Long
    parameters:
    - id: i
      type: System.Int32
      description: 'The zero-based column ordinal. '
    - id: dataIndex
      type: System.Int64
      description: The index within the field from which to begin the read operation.
    - id: buffer
      type: System.Byte[]
      description: 'The buffer into which to read the stream of bytes. '
    - id: bufferIndex
      type: System.Int32
      description: 'The index within the <em>buffer</em> where the write operation is to start. '
    - id: length
      type: System.Int32
      description: 'The maximum length to copy into the buffer. '
    return:
      type: System.Int64
      description: The actual number of bytes read.
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: System.Data.SqlClient.SqlDataReader.GetBytes(System.Int32, System.Int64, System.Byte(), System.Int32, System.Int32)
  name.vb: GetBytes(Int32, Int64, Byte(), Int32, Int32)
- uid: System.Data.SqlClient.SqlDataReader.GetChar(System.Int32)
  commentId: M:System.Data.SqlClient.SqlDataReader.GetChar(System.Int32)
  id: GetChar(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  - vb
  name: GetChar(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetChar(System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlDataReader.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetChar
    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlDataReader.cs
    startLine: 1542
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlClient
  summary: Gets the value of the specified column as a single character.
  syntax:
    content: public override char GetChar(int i)
    content.vb: Public Overrides Function GetChar(i As Integer) As Char
    parameters:
    - id: i
      type: System.Int32
      description: 'The zero-based column ordinal. '
    return:
      type: System.Char
      description: The value of the specified column.
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: 'The specified cast is not valid. '
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Data.SqlClient.SqlDataReader.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)
  commentId: M:System.Data.SqlClient.SqlDataReader.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)
  id: GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  - vb
  name: GetChars(Int32, Int64, Char[], Int32, Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetChars(System.Int32, System.Int64, System.Char[], System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlDataReader.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetChars
    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlDataReader.cs
    startLine: 1547
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlClient
  summary: Reads a stream of characters from the specified column offset into the buffer as an array starting at the given buffer offset.
  syntax:
    content: public override long GetChars(int i, long dataIndex, char[] buffer, int bufferIndex, int length)
    content.vb: Public Overrides Function GetChars(i As Integer, dataIndex As Long, buffer As Char(), bufferIndex As Integer, length As Integer) As Long
    parameters:
    - id: i
      type: System.Int32
      description: 'The zero-based column ordinal. '
    - id: dataIndex
      type: System.Int64
      description: The index within the field from which to begin the read operation.
    - id: buffer
      type: System.Char[]
      description: 'The buffer into which to read the stream of bytes. '
    - id: bufferIndex
      type: System.Int32
      description: 'The index within the <em>buffer</em> where the write operation is to start. '
    - id: length
      type: System.Int32
      description: 'The maximum length to copy into the buffer. '
    return:
      type: System.Int64
      description: The actual number of characters read.
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: System.Data.SqlClient.SqlDataReader.GetChars(System.Int32, System.Int64, System.Char(), System.Int32, System.Int32)
  name.vb: GetChars(Int32, Int64, Char(), Int32, Int32)
- uid: System.Data.SqlClient.SqlDataReader.GetDataTypeName(System.Int32)
  commentId: M:System.Data.SqlClient.SqlDataReader.GetDataTypeName(System.Int32)
  id: GetDataTypeName(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  - vb
  name: GetDataTypeName(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetDataTypeName(System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlDataReader.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetDataTypeName
    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlDataReader.cs
    startLine: 826
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlClient
  summary: Gets a string representing the data type of the specified column.
  syntax:
    content: public override string GetDataTypeName(int i)
    content.vb: Public Overrides Function GetDataTypeName(i As Integer) As String
    parameters:
    - id: i
      type: System.Int32
      description: The zero-based ordinal position of the column to find.
    return:
      type: System.String
      description: The string representing the data type of the specified column.
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Data.SqlClient.SqlDataReader.GetDateTime(System.Int32)
  commentId: M:System.Data.SqlClient.SqlDataReader.GetDateTime(System.Int32)
  id: GetDateTime(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  - vb
  name: GetDateTime(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetDateTime(System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlDataReader.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetDateTime
    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlDataReader.cs
    startLine: 1806
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlClient
  summary: Gets the value of the specified column as a <xref href="System.DateTime" data-throw-if-not-resolved="false"></xref> object.
  syntax:
    content: public override DateTime GetDateTime(int i)
    content.vb: Public Overrides Function GetDateTime(i As Integer) As DateTime
    parameters:
    - id: i
      type: System.Int32
      description: 'The zero-based column ordinal. '
    return:
      type: System.DateTime
      description: The value of the specified column.
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: 'The specified cast is not valid. '
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Data.SqlClient.SqlDataReader.GetDateTimeOffset(System.Int32)
  commentId: M:System.Data.SqlClient.SqlDataReader.GetDateTimeOffset(System.Int32)
  id: GetDateTimeOffset(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  - vb
  name: GetDateTimeOffset(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetDateTimeOffset(System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlDataReader.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetDateTimeOffset
    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlDataReader.cs
    startLine: 2181
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlClient
  summary: Retrieves the value of the specified column as a <xref href="System.DateTimeOffset" data-throw-if-not-resolved="false"></xref> object.
  syntax:
    content: public virtual DateTimeOffset GetDateTimeOffset(int i)
    content.vb: Public Overridable Function GetDateTimeOffset(i As Integer) As DateTimeOffset
    parameters:
    - id: i
      type: System.Int32
      description: 'The zero-based column ordinal. '
    return:
      type: System.DateTimeOffset
      description: The value of the specified column.
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: 'The specified cast is not valid. '
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Data.SqlClient.SqlDataReader.GetDecimal(System.Int32)
  commentId: M:System.Data.SqlClient.SqlDataReader.GetDecimal(System.Int32)
  id: GetDecimal(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  - vb
  name: GetDecimal(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetDecimal(System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlDataReader.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetDecimal
    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlDataReader.cs
    startLine: 1827
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlClient
  summary: Gets the value of the specified column as a <xref href="System.Decimal" data-throw-if-not-resolved="false"></xref> object.
  syntax:
    content: public override decimal GetDecimal(int i)
    content.vb: Public Overrides Function GetDecimal(i As Integer) As Decimal
    parameters:
    - id: i
      type: System.Int32
      description: 'The zero-based column ordinal. '
    return:
      type: System.Decimal
      description: The value of the specified column.
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: 'The specified cast is not valid. '
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Data.SqlClient.SqlDataReader.GetDouble(System.Int32)
  commentId: M:System.Data.SqlClient.SqlDataReader.GetDouble(System.Int32)
  id: GetDouble(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  - vb
  name: GetDouble(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetDouble(System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlDataReader.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetDouble
    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlDataReader.cs
    startLine: 1833
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlClient
  summary: Gets the value of the specified column as a double-precision floating point number.
  syntax:
    content: public override double GetDouble(int i)
    content.vb: Public Overrides Function GetDouble(i As Integer) As Double
    parameters:
    - id: i
      type: System.Int32
      description: 'The zero-based column ordinal. '
    return:
      type: System.Double
      description: The value of the specified column.
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: 'The specified cast is not valid. '
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Data.SqlClient.SqlDataReader.GetEnumerator
  commentId: M:System.Data.SqlClient.SqlDataReader.GetEnumerator
  id: GetEnumerator
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  - vb
  name: GetEnumerator()
  fullName: System.Data.SqlClient.SqlDataReader.GetEnumerator()
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlDataReader.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetEnumerator
    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlDataReader.cs
    startLine: 893
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlClient
  summary: Returns an <xref href="System.Collections.IEnumerator" data-throw-if-not-resolved="false"></xref> that iterates through the <xref href="System.Data.SqlClient.SqlDataReader" data-throw-if-not-resolved="false"></xref>.
  syntax:
    content: public override Collections.IEnumerator GetEnumerator()
    content.vb: Public Overrides Function GetEnumerator As Collections.IEnumerator
    return:
      type: System.Collections.IEnumerator
      description: An <xref href="System.Collections.IEnumerator" data-throw-if-not-resolved="false"></xref> for the <xref href="System.Data.SqlClient.SqlDataReader" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Data.SqlClient.SqlDataReader.GetFieldType(System.Int32)
  commentId: M:System.Data.SqlClient.SqlDataReader.GetFieldType(System.Int32)
  id: GetFieldType(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  - vb
  name: GetFieldType(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetFieldType(System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlDataReader.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetFieldType
    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlDataReader.cs
    startLine: 898
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlClient
  summary: Gets the <xref href="System.Type" data-throw-if-not-resolved="false"></xref> that is the data type of the object.
  syntax:
    content: public override Type GetFieldType(int i)
    content.vb: Public Overrides Function GetFieldType(i As Integer) As Type
    parameters:
    - id: i
      type: System.Int32
      description: 'The zero-based column ordinal. '
    return:
      type: System.Type
      description: The <xref href="System.Type" data-throw-if-not-resolved="false"></xref> that is the data type of the object. If the type does not exist on the client, in the case of a User-Defined Type (UDT) returned from the database, GetFieldType returns null.
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Data.SqlClient.SqlDataReader.GetFieldValue``1(System.Int32)
  commentId: M:System.Data.SqlClient.SqlDataReader.GetFieldValue``1(System.Int32)
  id: GetFieldValue``1(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  - vb
  name: GetFieldValue<T>(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetFieldValue<T>(System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlDataReader.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetFieldValue
    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlDataReader.cs
    startLine: 2128
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlClient
  summary: Synchronously gets the value of the specified column as a type. <xref href="System.Data.SqlClient.SqlDataReader.GetFieldValueAsync``1(System.Int32,System.Threading.CancellationToken)" data-throw-if-not-resolved="false"></xref> is the asynchronous version of this method.
  syntax:
    content: public override T GetFieldValue<T>(int i)
    content.vb: Public Overrides Function GetFieldValue(Of T)(i As Integer) As T
    parameters:
    - id: i
      type: System.Int32
      description: The column to be retrieved.
    typeParameters:
    - id: T
      description: The type of the value to be returned. See the remarks section for more information.
    return:
      type: '{T}'
      description: The returned type object.
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: The connection drops or is closed during the data retrieval.The <xref href="System.Data.SqlClient.SqlDataReader" data-throw-if-not-resolved="false"></xref> is closed during the data retrieval.There is no data ready to be read (for example, the first <xref href="System.Data.SqlClient.SqlDataReader.Read" data-throw-if-not-resolved="false"></xref> hasn't been called, or returned false).Tried to read a previously-read column in sequential mode.There was an asynchronous operation in progress. This applies to all Get* methods when running in sequential mode, as they could be called while reading a stream.
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: Trying to read a column that does not exist.
  - type: System.Data.SqlTypes.SqlNullValueException
    commentId: T:System.Data.SqlTypes.SqlNullValueException
    description: The value of the column was null (<xref href="System.Data.SqlClient.SqlDataReader.IsDBNull(System.Int32)" data-throw-if-not-resolved="false"></xref> == true), retrieving a non-SQL type.
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "\n<em>T</em> doesn’t match the type returned by SQL Server or cannot be cast."
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: System.Data.SqlClient.SqlDataReader.GetFieldValue(Of T)(System.Int32)
  name.vb: GetFieldValue(Of T)(Int32)
- uid: System.Data.SqlClient.SqlDataReader.GetFieldValueAsync``1(System.Int32,System.Threading.CancellationToken)
  commentId: M:System.Data.SqlClient.SqlDataReader.GetFieldValueAsync``1(System.Int32,System.Threading.CancellationToken)
  id: GetFieldValueAsync``1(System.Int32,System.Threading.CancellationToken)
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  - vb
  name: GetFieldValueAsync<T>(Int32, Threading.CancellationToken)
  fullName: System.Data.SqlClient.SqlDataReader.GetFieldValueAsync<T>(System.Int32, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/ref/System.Data.SqlClient.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetFieldValueAsync
    path: src/System.Data.SqlClient/ref/System.Data.SqlClient.cs
    startLine: 419
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlClient
  summary: Asynchronously gets the value of the specified column as a type. <xref href="System.Data.SqlClient.SqlDataReader.GetFieldValue``1(System.Int32)" data-throw-if-not-resolved="false"></xref> is the synchronous version of this method.
  syntax:
    content: public override Threading.Tasks.Task<T> GetFieldValueAsync<T>(int i, Threading.CancellationToken cancellationToken)
    content.vb: Public Overrides Function GetFieldValueAsync(Of T)(i As Integer, cancellationToken As Threading.CancellationToken) As Threading.Tasks.Task(Of T)
    parameters:
    - id: i
      type: System.Int32
      description: The column to be retrieved.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The cancellation instruction, which propagates a notification that operations should be canceled. This does not guarantee the cancellation. A setting of CancellationToken.None makes this method equivalent to <xref href="System.Data.SqlClient.SqlDataReader.IsDBNull(System.Int32)" data-throw-if-not-resolved="false"></xref>. The returned task must be marked as cancelled.
    typeParameters:
    - id: T
      description: The type of the value to be returned. See the remarks section for more information.
    return:
      type: System.Threading.Tasks.Task{{T}}
      description: The returned type object.
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: The connection drops or is closed during the data retrieval.The <xref href="System.Data.SqlClient.SqlDataReader" data-throw-if-not-resolved="false"></xref> is closed during the data retrieval.There is no data ready to be read (for example, the first <xref href="System.Data.SqlClient.SqlDataReader.Read" data-throw-if-not-resolved="false"></xref> hasn't been called, or returned false).Tried to read a previously-read column in sequential mode.There was an asynchronous operation in progress. This applies to all Get* methods when running in sequential mode, as they could be called while reading a stream.Context Connection=true is specified in the connection string.
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: Trying to read a column that does not exist.
  - type: System.Data.SqlTypes.SqlNullValueException
    commentId: T:System.Data.SqlTypes.SqlNullValueException
    description: The value of the column was null (<xref href="System.Data.SqlClient.SqlDataReader.IsDBNull(System.Int32)" data-throw-if-not-resolved="false"></xref> == true), retrieving a non-SQL type.
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "\n<em>T</em> doesn’t match the type returned by SQL Server or cannot be cast."
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: System.Data.SqlClient.SqlDataReader.GetFieldValueAsync(Of T)(System.Int32, System.Threading.CancellationToken)
  name.vb: GetFieldValueAsync(Of T)(Int32, Threading.CancellationToken)
- uid: System.Data.SqlClient.SqlDataReader.GetFloat(System.Int32)
  commentId: M:System.Data.SqlClient.SqlDataReader.GetFloat(System.Int32)
  id: GetFloat(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  - vb
  name: GetFloat(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetFloat(System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlDataReader.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetFloat
    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlDataReader.cs
    startLine: 1839
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlClient
  summary: Gets the value of the specified column as a single-precision floating point number.
  syntax:
    content: public override float GetFloat(int i)
    content.vb: Public Overrides Function GetFloat(i As Integer) As Single
    parameters:
    - id: i
      type: System.Int32
      description: 'The zero-based column ordinal. '
    return:
      type: System.Single
      description: The value of the specified column.
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: 'The specified cast is not valid. '
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Data.SqlClient.SqlDataReader.GetGuid(System.Int32)
  commentId: M:System.Data.SqlClient.SqlDataReader.GetGuid(System.Int32)
  id: GetGuid(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  - vb
  name: GetGuid(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetGuid(System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlDataReader.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetGuid
    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlDataReader.cs
    startLine: 1845
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlClient
  summary: Gets the value of the specified column as a globally unique identifier (GUID).
  syntax:
    content: public override Guid GetGuid(int i)
    content.vb: Public Overrides Function GetGuid(i As Integer) As Guid
    parameters:
    - id: i
      type: System.Int32
      description: 'The zero-based column ordinal. '
    return:
      type: System.Guid
      description: The value of the specified column.
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: 'The specified cast is not valid. '
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Data.SqlClient.SqlDataReader.GetInt16(System.Int32)
  commentId: M:System.Data.SqlClient.SqlDataReader.GetInt16(System.Int32)
  id: GetInt16(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  - vb
  name: GetInt16(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetInt16(System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlDataReader.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetInt16
    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlDataReader.cs
    startLine: 1851
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlClient
  summary: Gets the value of the specified column as a 16-bit signed integer.
  syntax:
    content: public override short GetInt16(int i)
    content.vb: Public Overrides Function GetInt16(i As Integer) As Short
    parameters:
    - id: i
      type: System.Int32
      description: 'The zero-based column ordinal. '
    return:
      type: System.Int16
      description: The value of the specified column.
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: 'The specified cast is not valid. '
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Data.SqlClient.SqlDataReader.GetInt32(System.Int32)
  commentId: M:System.Data.SqlClient.SqlDataReader.GetInt32(System.Int32)
  id: GetInt32(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  - vb
  name: GetInt32(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetInt32(System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlDataReader.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetInt32
    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlDataReader.cs
    startLine: 1857
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlClient
  summary: Gets the value of the specified column as a 32-bit signed integer.
  syntax:
    content: public override int GetInt32(int i)
    content.vb: Public Overrides Function GetInt32(i As Integer) As Integer
    parameters:
    - id: i
      type: System.Int32
      description: 'The zero-based column ordinal. '
    return:
      type: System.Int32
      description: The value of the specified column.
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: 'The specified cast is not valid. '
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Data.SqlClient.SqlDataReader.GetInt64(System.Int32)
  commentId: M:System.Data.SqlClient.SqlDataReader.GetInt64(System.Int32)
  id: GetInt64(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  - vb
  name: GetInt64(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetInt64(System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlDataReader.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetInt64
    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlDataReader.cs
    startLine: 1863
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlClient
  summary: Gets the value of the specified column as a 64-bit signed integer.
  syntax:
    content: public override long GetInt64(int i)
    content.vb: Public Overrides Function GetInt64(i As Integer) As Long
    parameters:
    - id: i
      type: System.Int32
      description: 'The zero-based column ordinal. '
    return:
      type: System.Int64
      description: The value of the specified column.
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: 'The specified cast is not valid. '
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Data.SqlClient.SqlDataReader.GetName(System.Int32)
  commentId: M:System.Data.SqlClient.SqlDataReader.GetName(System.Int32)
  id: GetName(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  - vb
  name: GetName(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetName(System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlDataReader.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetName
    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlDataReader.cs
    startLine: 974
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlClient
  summary: Gets the name of the specified column.
  syntax:
    content: public override string GetName(int i)
    content.vb: Public Overrides Function GetName(i As Integer) As String
    parameters:
    - id: i
      type: System.Int32
      description: 'The zero-based column ordinal. '
    return:
      type: System.String
      description: The name of the specified column.
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Data.SqlClient.SqlDataReader.GetOrdinal(System.String)
  commentId: M:System.Data.SqlClient.SqlDataReader.GetOrdinal(System.String)
  id: GetOrdinal(System.String)
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  - vb
  name: GetOrdinal(String)
  fullName: System.Data.SqlClient.SqlDataReader.GetOrdinal(System.String)
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlDataReader.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetOrdinal
    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlDataReader.cs
    startLine: 1040
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlClient
  summary: Gets the column ordinal, given the name of the column.
  syntax:
    content: public override int GetOrdinal(string name)
    content.vb: Public Overrides Function GetOrdinal(name As String) As Integer
    parameters:
    - id: name
      type: System.String
      description: 'The name of the column. '
    return:
      type: System.Int32
      description: The zero-based column ordinal.
  exceptions:
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: 'The name specified is not a valid column name. '
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Data.SqlClient.SqlDataReader.GetProviderSpecificFieldType(System.Int32)
  commentId: M:System.Data.SqlClient.SqlDataReader.GetProviderSpecificFieldType(System.Int32)
  id: GetProviderSpecificFieldType(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  - vb
  name: GetProviderSpecificFieldType(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetProviderSpecificFieldType(System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlDataReader.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetProviderSpecificFieldType
    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlDataReader.cs
    startLine: 980
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlClient
  summary: Gets an Object that is a representation of the underlying provider-specific field type.
  syntax:
    content: public override Type GetProviderSpecificFieldType(int i)
    content.vb: Public Overrides Function GetProviderSpecificFieldType(i As Integer) As Type
    parameters:
    - id: i
      type: System.Int32
      description: 'An <xref href="System.Int32" data-throw-if-not-resolved="false"></xref> representing the column ordinal. '
    return:
      type: System.Type
      description: Gets an <xref href="System.Object" data-throw-if-not-resolved="false"></xref> that is a representation of the underlying provider-specific field type.
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Data.SqlClient.SqlDataReader.GetProviderSpecificValue(System.Int32)
  commentId: M:System.Data.SqlClient.SqlDataReader.GetProviderSpecificValue(System.Int32)
  id: GetProviderSpecificValue(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  - vb
  name: GetProviderSpecificValue(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetProviderSpecificValue(System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlDataReader.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetProviderSpecificValue
    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlDataReader.cs
    startLine: 1059
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlClient
  summary: Gets an Object that is a representation of the underlying provider specific value.
  syntax:
    content: public override object GetProviderSpecificValue(int i)
    content.vb: Public Overrides Function GetProviderSpecificValue(i As Integer) As Object
    parameters:
    - id: i
      type: System.Int32
      description: 'An <xref href="System.Int32" data-throw-if-not-resolved="false"></xref> representing the column ordinal. '
    return:
      type: System.Object
      description: An <xref href="System.Object" data-throw-if-not-resolved="false"></xref> that is a representation of the underlying provider specific value.
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Data.SqlClient.SqlDataReader.GetProviderSpecificValues(System.Object[])
  commentId: M:System.Data.SqlClient.SqlDataReader.GetProviderSpecificValues(System.Object[])
  id: GetProviderSpecificValues(System.Object[])
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  - vb
  name: GetProviderSpecificValues(Object[])
  fullName: System.Data.SqlClient.SqlDataReader.GetProviderSpecificValues(System.Object[])
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlDataReader.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetProviderSpecificValues
    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlDataReader.cs
    startLine: 1064
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlClient
  summary: Gets an array of objects that are a representation of the underlying provider specific values.
  syntax:
    content: public override int GetProviderSpecificValues(object[] values)
    content.vb: Public Overrides Function GetProviderSpecificValues(values As Object()) As Integer
    parameters:
    - id: values
      type: System.Object[]
      description: An array of <xref href="System.Object" data-throw-if-not-resolved="false"></xref> into which to copy the column values.
    return:
      type: System.Int32
      description: The array of objects that are a representation of the underlying provider specific values.
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: System.Data.SqlClient.SqlDataReader.GetProviderSpecificValues(System.Object())
  name.vb: GetProviderSpecificValues(Object())
- uid: System.Data.SqlClient.SqlDataReader.GetSqlBinary(System.Int32)
  commentId: M:System.Data.SqlClient.SqlDataReader.GetSqlBinary(System.Int32)
  id: GetSqlBinary(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  - vb
  name: GetSqlBinary(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetSqlBinary(System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlDataReader.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetSqlBinary
    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlDataReader.cs
    startLine: 1875
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlClient
  summary: Gets the value of the specified column as a <xref href="System.Data.SqlTypes.SqlBinary" data-throw-if-not-resolved="false"></xref>.
  syntax:
    content: public virtual SqlBinary GetSqlBinary(int i)
    content.vb: Public Overridable Function GetSqlBinary(i As Integer) As SqlBinary
    parameters:
    - id: i
      type: System.Int32
      description: 'The zero-based column ordinal. '
    return:
      type: System.Data.SqlTypes.SqlBinary
      description: The value of the column expressed as a <xref href="System.Data.SqlTypes.SqlBinary" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Data.SqlClient.SqlDataReader.GetSqlBoolean(System.Int32)
  commentId: M:System.Data.SqlClient.SqlDataReader.GetSqlBoolean(System.Int32)
  id: GetSqlBoolean(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  - vb
  name: GetSqlBoolean(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetSqlBoolean(System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlDataReader.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetSqlBoolean
    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlDataReader.cs
    startLine: 1869
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlClient
  summary: Gets the value of the specified column as a <xref href="System.Data.SqlTypes.SqlBoolean" data-throw-if-not-resolved="false"></xref>.
  syntax:
    content: public virtual SqlBoolean GetSqlBoolean(int i)
    content.vb: Public Overridable Function GetSqlBoolean(i As Integer) As SqlBoolean
    parameters:
    - id: i
      type: System.Int32
      description: 'The zero-based column ordinal. '
    return:
      type: System.Data.SqlTypes.SqlBoolean
      description: The value of the column.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Data.SqlClient.SqlDataReader.GetSqlByte(System.Int32)
  commentId: M:System.Data.SqlClient.SqlDataReader.GetSqlByte(System.Int32)
  id: GetSqlByte(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  - vb
  name: GetSqlByte(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetSqlByte(System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlDataReader.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetSqlByte
    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlDataReader.cs
    startLine: 1881
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlClient
  summary: Gets the value of the specified column as a <xref href="System.Data.SqlTypes.SqlByte" data-throw-if-not-resolved="false"></xref>.
  syntax:
    content: public virtual SqlByte GetSqlByte(int i)
    content.vb: Public Overridable Function GetSqlByte(i As Integer) As SqlByte
    parameters:
    - id: i
      type: System.Int32
      description: 'The zero-based column ordinal. '
    return:
      type: System.Data.SqlTypes.SqlByte
      description: The value of the column expressed as a  <xref href="System.Data.SqlTypes.SqlByte" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Data.SqlClient.SqlDataReader.GetSqlBytes(System.Int32)
  commentId: M:System.Data.SqlClient.SqlDataReader.GetSqlBytes(System.Int32)
  id: GetSqlBytes(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  - vb
  name: GetSqlBytes(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetSqlBytes(System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlDataReader.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetSqlBytes
    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlDataReader.cs
    startLine: 1887
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlClient
  summary: Gets the value of the specified column as <xref href="System.Data.SqlTypes.SqlBytes" data-throw-if-not-resolved="false"></xref>.
  syntax:
    content: public virtual SqlBytes GetSqlBytes(int i)
    content.vb: Public Overridable Function GetSqlBytes(i As Integer) As SqlBytes
    parameters:
    - id: i
      type: System.Int32
      description: 'The zero-based column ordinal. '
    return:
      type: System.Data.SqlTypes.SqlBytes
      description: The value of the column expressed as a <xref href="System.Data.SqlTypes.SqlBytes" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Data.SqlClient.SqlDataReader.GetSqlChars(System.Int32)
  commentId: M:System.Data.SqlClient.SqlDataReader.GetSqlChars(System.Int32)
  id: GetSqlChars(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  - vb
  name: GetSqlChars(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetSqlChars(System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlDataReader.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetSqlChars
    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlDataReader.cs
    startLine: 1894
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlClient
  summary: Gets the value of the specified column as <xref href="System.Data.SqlTypes.SqlChars" data-throw-if-not-resolved="false"></xref>.
  syntax:
    content: public virtual SqlChars GetSqlChars(int i)
    content.vb: Public Overridable Function GetSqlChars(i As Integer) As SqlChars
    parameters:
    - id: i
      type: System.Int32
      description: 'The zero-based column ordinal. '
    return:
      type: System.Data.SqlTypes.SqlChars
      description: The value of the column expressed as a  <xref href="System.Data.SqlTypes.SqlChars" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Data.SqlClient.SqlDataReader.GetSqlDateTime(System.Int32)
  commentId: M:System.Data.SqlClient.SqlDataReader.GetSqlDateTime(System.Int32)
  id: GetSqlDateTime(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  - vb
  name: GetSqlDateTime(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetSqlDateTime(System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlDataReader.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetSqlDateTime
    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlDataReader.cs
    startLine: 1910
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlClient
  summary: Gets the value of the specified column as a <xref href="System.Data.SqlTypes.SqlDateTime" data-throw-if-not-resolved="false"></xref>.
  syntax:
    content: public virtual SqlDateTime GetSqlDateTime(int i)
    content.vb: Public Overridable Function GetSqlDateTime(i As Integer) As SqlDateTime
    parameters:
    - id: i
      type: System.Int32
      description: 'The zero-based column ordinal. '
    return:
      type: System.Data.SqlTypes.SqlDateTime
      description: The value of the column expressed as a  <xref href="System.Data.SqlTypes.SqlDateTime" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Data.SqlClient.SqlDataReader.GetSqlDecimal(System.Int32)
  commentId: M:System.Data.SqlClient.SqlDataReader.GetSqlDecimal(System.Int32)
  id: GetSqlDecimal(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  - vb
  name: GetSqlDecimal(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetSqlDecimal(System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlDataReader.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetSqlDecimal
    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlDataReader.cs
    startLine: 1916
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlClient
  summary: Gets the value of the specified column as a <xref href="System.Data.SqlTypes.SqlDecimal" data-throw-if-not-resolved="false"></xref>.
  syntax:
    content: public virtual SqlDecimal GetSqlDecimal(int i)
    content.vb: Public Overridable Function GetSqlDecimal(i As Integer) As SqlDecimal
    parameters:
    - id: i
      type: System.Int32
      description: 'The zero-based column ordinal. '
    return:
      type: System.Data.SqlTypes.SqlDecimal
      description: The value of the column expressed as a <xref href="System.Data.SqlTypes.SqlDecimal" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Data.SqlClient.SqlDataReader.GetSqlDouble(System.Int32)
  commentId: M:System.Data.SqlClient.SqlDataReader.GetSqlDouble(System.Int32)
  id: GetSqlDouble(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  - vb
  name: GetSqlDouble(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetSqlDouble(System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlDataReader.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetSqlDouble
    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlDataReader.cs
    startLine: 1928
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlClient
  summary: Gets the value of the specified column as a <xref href="System.Data.SqlTypes.SqlDouble" data-throw-if-not-resolved="false"></xref>.
  syntax:
    content: public virtual SqlDouble GetSqlDouble(int i)
    content.vb: Public Overridable Function GetSqlDouble(i As Integer) As SqlDouble
    parameters:
    - id: i
      type: System.Int32
      description: 'The zero-based column ordinal. '
    return:
      type: System.Data.SqlTypes.SqlDouble
      description: The value of the column expressed as a  <xref href="System.Data.SqlTypes.SqlDouble" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Data.SqlClient.SqlDataReader.GetSqlGuid(System.Int32)
  commentId: M:System.Data.SqlClient.SqlDataReader.GetSqlGuid(System.Int32)
  id: GetSqlGuid(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  - vb
  name: GetSqlGuid(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetSqlGuid(System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlDataReader.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetSqlGuid
    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlDataReader.cs
    startLine: 1922
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlClient
  summary: Gets the value of the specified column as a <xref href="System.Data.SqlTypes.SqlGuid" data-throw-if-not-resolved="false"></xref>.
  syntax:
    content: public virtual SqlGuid GetSqlGuid(int i)
    content.vb: Public Overridable Function GetSqlGuid(i As Integer) As SqlGuid
    parameters:
    - id: i
      type: System.Int32
      description: 'The zero-based column ordinal. '
    return:
      type: System.Data.SqlTypes.SqlGuid
      description: The value of the column expressed as a  <xref href="System.Data.SqlTypes.SqlGuid" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Data.SqlClient.SqlDataReader.GetSqlInt16(System.Int32)
  commentId: M:System.Data.SqlClient.SqlDataReader.GetSqlInt16(System.Int32)
  id: GetSqlInt16(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  - vb
  name: GetSqlInt16(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetSqlInt16(System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlDataReader.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetSqlInt16
    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlDataReader.cs
    startLine: 1934
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlClient
  summary: Gets the value of the specified column as a <xref href="System.Data.SqlTypes.SqlInt16" data-throw-if-not-resolved="false"></xref>.
  syntax:
    content: public virtual SqlInt16 GetSqlInt16(int i)
    content.vb: Public Overridable Function GetSqlInt16(i As Integer) As SqlInt16
    parameters:
    - id: i
      type: System.Int32
      description: 'The zero-based column ordinal. '
    return:
      type: System.Data.SqlTypes.SqlInt16
      description: The value of the column expressed as a <xref href="System.Data.SqlTypes.SqlInt16" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Data.SqlClient.SqlDataReader.GetSqlInt32(System.Int32)
  commentId: M:System.Data.SqlClient.SqlDataReader.GetSqlInt32(System.Int32)
  id: GetSqlInt32(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  - vb
  name: GetSqlInt32(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetSqlInt32(System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlDataReader.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetSqlInt32
    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlDataReader.cs
    startLine: 1940
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlClient
  summary: Gets the value of the specified column as a <xref href="System.Data.SqlTypes.SqlInt32" data-throw-if-not-resolved="false"></xref>.
  syntax:
    content: public virtual SqlInt32 GetSqlInt32(int i)
    content.vb: Public Overridable Function GetSqlInt32(i As Integer) As SqlInt32
    parameters:
    - id: i
      type: System.Int32
      description: 'The zero-based column ordinal. '
    return:
      type: System.Data.SqlTypes.SqlInt32
      description: The value of the column expressed as a <xref href="System.Data.SqlTypes.SqlInt32" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Data.SqlClient.SqlDataReader.GetSqlInt64(System.Int32)
  commentId: M:System.Data.SqlClient.SqlDataReader.GetSqlInt64(System.Int32)
  id: GetSqlInt64(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  - vb
  name: GetSqlInt64(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetSqlInt64(System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlDataReader.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetSqlInt64
    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlDataReader.cs
    startLine: 1946
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlClient
  summary: Gets the value of the specified column as a <xref href="System.Data.SqlTypes.SqlInt64" data-throw-if-not-resolved="false"></xref>.
  syntax:
    content: public virtual SqlInt64 GetSqlInt64(int i)
    content.vb: Public Overridable Function GetSqlInt64(i As Integer) As SqlInt64
    parameters:
    - id: i
      type: System.Int32
      description: 'The zero-based column ordinal. '
    return:
      type: System.Data.SqlTypes.SqlInt64
      description: The value of the column expressed as a <xref href="System.Data.SqlTypes.SqlInt64" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Data.SqlClient.SqlDataReader.GetSqlMoney(System.Int32)
  commentId: M:System.Data.SqlClient.SqlDataReader.GetSqlMoney(System.Int32)
  id: GetSqlMoney(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  - vb
  name: GetSqlMoney(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetSqlMoney(System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlDataReader.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetSqlMoney
    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlDataReader.cs
    startLine: 1952
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlClient
  summary: Gets the value of the specified column as a <xref href="System.Data.SqlTypes.SqlMoney" data-throw-if-not-resolved="false"></xref>.
  syntax:
    content: public virtual SqlMoney GetSqlMoney(int i)
    content.vb: Public Overridable Function GetSqlMoney(i As Integer) As SqlMoney
    parameters:
    - id: i
      type: System.Int32
      description: 'The zero-based column ordinal. '
    return:
      type: System.Data.SqlTypes.SqlMoney
      description: The value of the column expressed as a <xref href="System.Data.SqlTypes.SqlMoney" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Data.SqlClient.SqlDataReader.GetSqlSingle(System.Int32)
  commentId: M:System.Data.SqlClient.SqlDataReader.GetSqlSingle(System.Int32)
  id: GetSqlSingle(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  - vb
  name: GetSqlSingle(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetSqlSingle(System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlDataReader.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetSqlSingle
    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlDataReader.cs
    startLine: 1958
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlClient
  summary: Gets the value of the specified column as a <xref href="System.Data.SqlTypes.SqlSingle" data-throw-if-not-resolved="false"></xref>.
  syntax:
    content: public virtual SqlSingle GetSqlSingle(int i)
    content.vb: Public Overridable Function GetSqlSingle(i As Integer) As SqlSingle
    parameters:
    - id: i
      type: System.Int32
      description: 'The zero-based column ordinal. '
    return:
      type: System.Data.SqlTypes.SqlSingle
      description: The value of the column expressed as a <xref href="System.Data.SqlTypes.SqlSingle" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Data.SqlClient.SqlDataReader.GetSqlString(System.Int32)
  commentId: M:System.Data.SqlClient.SqlDataReader.GetSqlString(System.Int32)
  id: GetSqlString(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  - vb
  name: GetSqlString(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetSqlString(System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlDataReader.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetSqlString
    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlDataReader.cs
    startLine: 1964
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlClient
  summary: Gets the value of the specified column as a <xref href="System.Data.SqlTypes.SqlString" data-throw-if-not-resolved="false"></xref>.
  syntax:
    content: public virtual SqlString GetSqlString(int i)
    content.vb: Public Overridable Function GetSqlString(i As Integer) As SqlString
    parameters:
    - id: i
      type: System.Int32
      description: 'The zero-based column ordinal. '
    return:
      type: System.Data.SqlTypes.SqlString
      description: The value of the column expressed as a <xref href="System.Data.SqlTypes.SqlString" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Data.SqlClient.SqlDataReader.GetSqlValue(System.Int32)
  commentId: M:System.Data.SqlClient.SqlDataReader.GetSqlValue(System.Int32)
  id: GetSqlValue(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  - vb
  name: GetSqlValue(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetSqlValue(System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlDataReader.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetSqlValue
    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlDataReader.cs
    startLine: 2006
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlClient
  summary: 'Returns the data value in the specified column as a SQL Server type. '
  syntax:
    content: public virtual object GetSqlValue(int i)
    content.vb: Public Overridable Function GetSqlValue(i As Integer) As Object
    parameters:
    - id: i
      type: System.Int32
      description: 'The zero-based column ordinal. '
    return:
      type: System.Object
      description: The value of the column expressed as a <xref href="System.Data.SqlDbType" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Data.SqlClient.SqlDataReader.GetSqlValues(System.Object[])
  commentId: M:System.Data.SqlClient.SqlDataReader.GetSqlValues(System.Object[])
  id: GetSqlValues(System.Object[])
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  - vb
  name: GetSqlValues(Object[])
  fullName: System.Data.SqlClient.SqlDataReader.GetSqlValues(System.Object[])
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlDataReader.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetSqlValues
    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlDataReader.cs
    startLine: 2087
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlClient
  summary: Fills an array of <xref href="System.Object" data-throw-if-not-resolved="false"></xref> that contains the values for all the columns in the record, expressed as SQL Server types.
  syntax:
    content: public virtual int GetSqlValues(object[] values)
    content.vb: Public Overridable Function GetSqlValues(values As Object()) As Integer
    parameters:
    - id: values
      type: System.Object[]
      description: An array of <xref href="System.Object" data-throw-if-not-resolved="false"></xref> into which to copy the values. The column values are expressed as SQL Server types.
    return:
      type: System.Int32
      description: An integer indicating the number of columns copied.
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>values</em> is null. "
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: System.Data.SqlClient.SqlDataReader.GetSqlValues(System.Object())
  name.vb: GetSqlValues(Object())
- uid: System.Data.SqlClient.SqlDataReader.GetSqlXml(System.Int32)
  commentId: M:System.Data.SqlClient.SqlDataReader.GetSqlXml(System.Int32)
  id: GetSqlXml(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  - vb
  name: GetSqlXml(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetSqlXml(System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlDataReader.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetSqlXml
    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlDataReader.cs
    startLine: 1976
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlClient
  summary: Gets the value of the specified column as an XML value.
  syntax:
    content: public virtual SqlXml GetSqlXml(int i)
    content.vb: Public Overridable Function GetSqlXml(i As Integer) As SqlXml
    parameters:
    - id: i
      type: System.Int32
      description: The zero-based column ordinal.
    return:
      type: System.Data.SqlTypes.SqlXml
      description: 'A <xref href="System.Data.SqlTypes.SqlXml" data-throw-if-not-resolved="false"></xref> value that contains the XML stored within the corresponding field. '
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: The index passed was outside the range of 0 to <xref href="System.Data.DataTableReader.FieldCount" data-throw-if-not-resolved="false"></xref> - 1
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: An attempt was made to read or access columns in a closed <xref href="System.Data.SqlClient.SqlDataReader" data-throw-if-not-resolved="false"></xref>.
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: The retrieved data is not compatible with the <xref href="System.Data.SqlTypes.SqlXml" data-throw-if-not-resolved="false"></xref> type.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Data.SqlClient.SqlDataReader.GetStream(System.Int32)
  commentId: M:System.Data.SqlClient.SqlDataReader.GetStream(System.Int32)
  id: GetStream(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  - vb
  name: GetStream(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetStream(System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlDataReader.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetStream
    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlDataReader.cs
    startLine: 1115
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlClient
  summary: Retrieves binary, image, varbinary, UDT, and variant data types as a <xref href="System.IO.Stream" data-throw-if-not-resolved="false"></xref>.
  syntax:
    content: public override IO.Stream GetStream(int i)
    content.vb: Public Overrides Function GetStream(i As Integer) As IO.Stream
    parameters:
    - id: i
      type: System.Int32
      description: The zero-based column ordinal.
    return:
      type: System.IO.Stream
      description: A stream object.
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: The connection drops or is closed during the data retrieval.The <xref href="System.Data.SqlClient.SqlDataReader" data-throw-if-not-resolved="false"></xref> is closed during the data retrieval.There is no data ready to be read (for example, the first <xref href="System.Data.SqlClient.SqlDataReader.Read" data-throw-if-not-resolved="false"></xref> hasn't been called, or returned false).Tried to read a previously-read column in sequential mode.There was an asynchronous operation in progress. This applies to all Get* methods when running in sequential mode, as they could be called while reading a stream.
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: Trying to read a column that does not exist.
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: The returned type was not one of the types below:binaryimagevarbinaryudt
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Data.SqlClient.SqlDataReader.GetString(System.Int32)
  commentId: M:System.Data.SqlClient.SqlDataReader.GetString(System.Int32)
  id: GetString(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  - vb
  name: GetString(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetString(System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlDataReader.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetString
    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlDataReader.cs
    startLine: 2115
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlClient
  summary: Gets the value of the specified column as a string.
  syntax:
    content: public override string GetString(int i)
    content.vb: Public Overrides Function GetString(i As Integer) As String
    parameters:
    - id: i
      type: System.Int32
      description: 'The zero-based column ordinal. '
    return:
      type: System.String
      description: The value of the specified column.
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: 'The specified cast is not valid. '
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Data.SqlClient.SqlDataReader.GetTextReader(System.Int32)
  commentId: M:System.Data.SqlClient.SqlDataReader.GetTextReader(System.Int32)
  id: GetTextReader(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  - vb
  name: GetTextReader(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetTextReader(System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlDataReader.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetTextReader
    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlDataReader.cs
    startLine: 1491
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlClient
  summary: Retrieves Char, NChar, NText, NVarChar, text, varChar, and Variant data types as a <xref href="System.IO.TextReader" data-throw-if-not-resolved="false"></xref>.
  syntax:
    content: public override IO.TextReader GetTextReader(int i)
    content.vb: Public Overrides Function GetTextReader(i As Integer) As IO.TextReader
    parameters:
    - id: i
      type: System.Int32
      description: The column to be retrieved.
    return:
      type: System.IO.TextReader
      description: The returned object.
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: The connection drops or is closed during the data retrieval.The <xref href="System.Data.SqlClient.SqlDataReader" data-throw-if-not-resolved="false"></xref> is closed during the data retrieval.There is no data ready to be read (for example, the first <xref href="System.Data.SqlClient.SqlDataReader.Read" data-throw-if-not-resolved="false"></xref> hasn't been called, or returned false).Tried to read a previously-read column in sequential mode.There was an asynchronous operation in progress. This applies to all Get* methods when running in sequential mode, as they could be called while reading a stream.
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: Trying to read a column that does not exist.
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: The returned type was not one of the types below:charncharntextnvarchartextvarchar
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Data.SqlClient.SqlDataReader.GetTimeSpan(System.Int32)
  commentId: M:System.Data.SqlClient.SqlDataReader.GetTimeSpan(System.Int32)
  id: GetTimeSpan(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  - vb
  name: GetTimeSpan(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetTimeSpan(System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlDataReader.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetTimeSpan
    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlDataReader.cs
    startLine: 2160
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlClient
  summary: Retrieves the value of the specified column as a <xref href="System.TimeSpan" data-throw-if-not-resolved="false"></xref> object.
  syntax:
    content: public virtual TimeSpan GetTimeSpan(int i)
    content.vb: Public Overridable Function GetTimeSpan(i As Integer) As TimeSpan
    parameters:
    - id: i
      type: System.Int32
      description: 'The zero-based column ordinal. '
    return:
      type: System.TimeSpan
      description: The value of the specified column.
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: 'The specified cast is not valid. '
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Data.SqlClient.SqlDataReader.GetValue(System.Int32)
  commentId: M:System.Data.SqlClient.SqlDataReader.GetValue(System.Int32)
  id: GetValue(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  - vb
  name: GetValue(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetValue(System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlDataReader.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetValue
    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlDataReader.cs
    startLine: 2144
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlClient
  summary: Gets the value of the specified column in its native format.
  syntax:
    content: public override object GetValue(int i)
    content.vb: Public Overrides Function GetValue(i As Integer) As Object
    parameters:
    - id: i
      type: System.Int32
      description: 'The zero-based column ordinal. '
    return:
      type: System.Object
      description: This method returns <xref href="System.DBNull" data-throw-if-not-resolved="false"></xref> for null database columns.
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Data.SqlClient.SqlDataReader.GetValues(System.Object[])
  commentId: M:System.Data.SqlClient.SqlDataReader.GetValues(System.Object[])
  id: GetValues(System.Object[])
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  - vb
  name: GetValues(Object[])
  fullName: System.Data.SqlClient.SqlDataReader.GetValues(System.Object[])
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlDataReader.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetValues
    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlDataReader.cs
    startLine: 2330
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlClient
  summary: Populates an array of objects with the column values of the current row.
  syntax:
    content: public override int GetValues(object[] values)
    content.vb: Public Overrides Function GetValues(values As Object()) As Integer
    parameters:
    - id: values
      type: System.Object[]
      description: 'An array of <xref href="System.Object" data-throw-if-not-resolved="false"></xref> into which to copy the attribute columns. '
    return:
      type: System.Int32
      description: The number of instances of <xref href="System.Object" data-throw-if-not-resolved="false"></xref> in the array.
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: System.Data.SqlClient.SqlDataReader.GetValues(System.Object())
  name.vb: GetValues(Object())
- uid: System.Data.SqlClient.SqlDataReader.GetXmlReader(System.Int32)
  commentId: M:System.Data.SqlClient.SqlDataReader.GetXmlReader(System.Int32)
  id: GetXmlReader(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  - vb
  name: GetXmlReader(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetXmlReader(System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlDataReader.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetXmlReader
    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlDataReader.cs
    startLine: 1076
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlClient
  summary: Retrieves data of type XML as an <xref href="System.Xml.XmlReader" data-throw-if-not-resolved="false"></xref>.
  syntax:
    content: public virtual Xml.XmlReader GetXmlReader(int i)
    content.vb: Public Overridable Function GetXmlReader(i As Integer) As Xml.XmlReader
    parameters:
    - id: i
      type: System.Int32
      description: The value of the specified column.
    return:
      type: System.Xml.XmlReader
      description: The returned object.
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: The connection drops or is closed during the data retrieval.The <xref href="System.Data.SqlClient.SqlDataReader" data-throw-if-not-resolved="false"></xref> is closed during the data retrieval.There is no data ready to be read (for example, the first <xref href="System.Data.SqlClient.SqlDataReader.Read" data-throw-if-not-resolved="false"></xref> hasn't been called, or returned false).Trying to read a previously read column in sequential mode.There was an asynchronous operation in progress. This applies to all Get* methods when running in sequential mode, as they could be called while reading a stream.
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: Trying to read a column that does not exist.
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: The returned type was not xml.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Data.SqlClient.SqlDataReader.IsDBNull(System.Int32)
  commentId: M:System.Data.SqlClient.SqlDataReader.IsDBNull(System.Int32)
  id: IsDBNull(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  - vb
  name: IsDBNull(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.IsDBNull(System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlDataReader.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IsDBNull
    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlDataReader.cs
    startLine: 2589
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlClient
  summary: Gets a value that indicates whether the column contains non-existent or missing values.
  syntax:
    content: public override bool IsDBNull(int i)
    content.vb: Public Overrides Function IsDBNull(i As Integer) As Boolean
    parameters:
    - id: i
      type: System.Int32
      description: 'The zero-based column ordinal. '
    return:
      type: System.Boolean
      description: true if the specified column value is equivalent to <xref href="System.DBNull" data-throw-if-not-resolved="false"></xref>; otherwise false.
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Data.SqlClient.SqlDataReader.IsDBNullAsync(System.Int32,System.Threading.CancellationToken)
  commentId: M:System.Data.SqlClient.SqlDataReader.IsDBNullAsync(System.Int32,System.Threading.CancellationToken)
  id: IsDBNullAsync(System.Int32,System.Threading.CancellationToken)
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  - vb
  name: IsDBNullAsync(Int32, Threading.CancellationToken)
  fullName: System.Data.SqlClient.SqlDataReader.IsDBNullAsync(System.Int32, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/ref/System.Data.SqlClient.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IsDBNullAsync
    path: src/System.Data.SqlClient/ref/System.Data.SqlClient.cs
    startLine: 456
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlClient
  summary: An asynchronous version of <xref href="System.Data.SqlClient.SqlDataReader.IsDBNull(System.Int32)" data-throw-if-not-resolved="false"></xref>, which gets a value that indicates whether the column contains non-existent or missing values.The cancellation token can be used to request that the operation be abandoned before the command timeout elapses. Exceptions will be reported via the returned Task object.
  syntax:
    content: public override Threading.Tasks.Task<bool> IsDBNullAsync(int i, Threading.CancellationToken cancellationToken)
    content.vb: Public Overrides Function IsDBNullAsync(i As Integer, cancellationToken As Threading.CancellationToken) As Threading.Tasks.Task(Of Boolean)
    parameters:
    - id: i
      type: System.Int32
      description: The zero-based column to be retrieved.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The cancellation instruction, which propagates a notification that operations should be canceled. This does not guarantee the cancellation. A setting of CancellationToken.None makes this method equivalent to <xref href="System.Data.SqlClient.SqlDataReader.IsDBNull(System.Int32)" data-throw-if-not-resolved="false"></xref>. The returned task must be marked as cancelled.
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: true if the specified column value is equivalent to DBNull otherwise false.
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: The connection drops or is closed during the data retrieval.The <xref href="System.Data.SqlClient.SqlDataReader" data-throw-if-not-resolved="false"></xref> is closed during the data retrieval.There is no data ready to be read (for example, the first <xref href="System.Data.SqlClient.SqlDataReader.Read" data-throw-if-not-resolved="false"></xref> hasn't been called, or returned false).Trying to read a previously read column in sequential mode.There was an asynchronous operation in progress. This applies to all Get* methods when running in sequential mode, as they could be called while reading a stream.Context Connection=true is specified in the connection string.
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: Trying to read a column that does not exist.
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Data.SqlClient.SqlDataReader.NextResult
  commentId: M:System.Data.SqlClient.SqlDataReader.NextResult
  id: NextResult
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  - vb
  name: NextResult()
  fullName: System.Data.SqlClient.SqlDataReader.NextResult()
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlDataReader.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: NextResult
    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlDataReader.cs
    startLine: 2607
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlClient
  summary: Advances the data reader to the next result, when reading the results of batch Transact-SQL statements.
  syntax:
    content: public override bool NextResult()
    content.vb: Public Overrides Function NextResult As Boolean
    return:
      type: System.Boolean
      description: true if there are more result sets; otherwise false.
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Data.SqlClient.SqlDataReader.NextResultAsync(System.Threading.CancellationToken)
  commentId: M:System.Data.SqlClient.SqlDataReader.NextResultAsync(System.Threading.CancellationToken)
  id: NextResultAsync(System.Threading.CancellationToken)
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  - vb
  name: NextResultAsync(Threading.CancellationToken)
  fullName: System.Data.SqlClient.SqlDataReader.NextResultAsync(System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/ref/System.Data.SqlClient.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: NextResultAsync
    path: src/System.Data.SqlClient/ref/System.Data.SqlClient.cs
    startLine: 458
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlClient
  summary: An asynchronous version of <xref href="System.Data.SqlClient.SqlDataReader.NextResult" data-throw-if-not-resolved="false"></xref>, which advances the data reader to the next result, when reading the results of batch Transact-SQL statements.The cancellation token can be used to request that the operation be abandoned before the command timeout elapses.  Exceptions will be reported via the returned Task object.
  syntax:
    content: public override Threading.Tasks.Task<bool> NextResultAsync(Threading.CancellationToken cancellationToken)
    content.vb: Public Overrides Function NextResultAsync(cancellationToken As Threading.CancellationToken) As Threading.Tasks.Task(Of Boolean)
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The cancellation instruction.
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: A task representing the asynchronous operation.
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: Calling <xref href="System.Data.SqlClient.SqlDataReader.NextResultAsync(System.Threading.CancellationToken)" data-throw-if-not-resolved="false"></xref> more than once for the same instance before task completion.Context Connection=true is specified in the connection string.
  - type: System.Data.SqlClient.SqlException
    commentId: T:System.Data.SqlClient.SqlException
    description: SQL Server returned an error while executing the command text.
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Data.SqlClient.SqlDataReader.Read
  commentId: M:System.Data.SqlClient.SqlDataReader.Read
  id: Read
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  - vb
  name: Read()
  fullName: System.Data.SqlClient.SqlDataReader.Read()
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlDataReader.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Read
    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlDataReader.cs
    startLine: 2762
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlClient
  summary: Advances the <xref href="System.Data.SqlClient.SqlDataReader" data-throw-if-not-resolved="false"></xref> to the next record.
  syntax:
    content: public override bool Read()
    content.vb: Public Overrides Function Read As Boolean
    return:
      type: System.Boolean
      description: true if there are more rows; otherwise false.
  exceptions:
  - type: System.Data.SqlClient.SqlException
    commentId: T:System.Data.SqlClient.SqlException
    description: SQL Server returned an error while executing the command text.
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Data.SqlClient.SqlDataReader.ReadAsync(System.Threading.CancellationToken)
  commentId: M:System.Data.SqlClient.SqlDataReader.ReadAsync(System.Threading.CancellationToken)
  id: ReadAsync(System.Threading.CancellationToken)
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  - vb
  name: ReadAsync(Threading.CancellationToken)
  fullName: System.Data.SqlClient.SqlDataReader.ReadAsync(System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/ref/System.Data.SqlClient.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ReadAsync
    path: src/System.Data.SqlClient/ref/System.Data.SqlClient.cs
    startLine: 460
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlClient
  summary: An asynchronous version of <xref href="System.Data.SqlClient.SqlDataReader.Read" data-throw-if-not-resolved="false"></xref>, which advances the <xref href="System.Data.SqlClient.SqlDataReader" data-throw-if-not-resolved="false"></xref> to the next record.The cancellation token can be used to request that the operation be abandoned before the command timeout elapses. Exceptions will be reported via the returned Task object.
  syntax:
    content: public override Threading.Tasks.Task<bool> ReadAsync(Threading.CancellationToken cancellationToken)
    content.vb: Public Overrides Function ReadAsync(cancellationToken As Threading.CancellationToken) As Threading.Tasks.Task(Of Boolean)
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The cancellation instruction.
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: A task representing the asynchronous operation.
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: Calling <xref href="System.Data.SqlClient.SqlDataReader.ReadAsync(System.Threading.CancellationToken)" data-throw-if-not-resolved="false"></xref> more than once for the same instance before task completion.Context Connection=true is specified in the connection string.
  - type: System.Data.SqlClient.SqlException
    commentId: T:System.Data.SqlClient.SqlException
    description: SQL Server returned an error while executing the command text.
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: System.Data.SqlClient
  isExternal: false
  name: System.Data.SqlClient
  fullName: System.Data.SqlClient
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System.IDisposable
  parent: System
  isExternal: false
  name: IDisposable
  fullName: System.IDisposable
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Data.SqlClient.SqlConnection
  parent: System.Data.SqlClient
  isExternal: false
  name: SqlConnection
  fullName: System.Data.SqlClient.SqlConnection
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  fullName: System.Int32
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  fullName: System.Boolean
- uid: System.String
  parent: System
  isExternal: false
  name: String
  fullName: System.String
- uid: System.Byte
  parent: System
  isExternal: false
  name: Byte
  fullName: System.Byte
- uid: System.Int64
  parent: System
  isExternal: false
  name: Int64
  fullName: System.Int64
- uid: System.Byte[]
  isExternal: false
  name: Byte[]
  fullName: System.Byte[]
  fullname.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
  - name: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
  - name: ()
    fullName: ()
- uid: System.Char
  parent: System
  isExternal: false
  name: Char
  fullName: System.Char
- uid: System.Char[]
  isExternal: false
  name: Char[]
  fullName: System.Char[]
  fullname.vb: System.Char()
  name.vb: Char()
  spec.csharp:
  - uid: System.Char
    name: Char
    fullName: System.Char
  - name: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Char
    name: Char
    fullName: System.Char
  - name: ()
    fullName: ()
- uid: System.DateTime
  parent: System
  isExternal: false
  name: DateTime
  fullName: System.DateTime
- uid: System.DateTimeOffset
  parent: System
  isExternal: false
  name: DateTimeOffset
  fullName: System.DateTimeOffset
- uid: System.Decimal
  parent: System
  isExternal: false
  name: Decimal
  fullName: System.Decimal
- uid: System.Double
  parent: System
  isExternal: false
  name: Double
  fullName: System.Double
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: false
  name: Collections.IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Collections
  isExternal: false
  name: System.Collections
  fullName: System.Collections
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  fullName: System.Type
- uid: '{T}'
  isExternal: false
  name: T
  fullName: T
- uid: System.Threading.CancellationToken
  parent: System.Threading
  isExternal: false
  name: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task{{T}}
  definition: System.Threading.Tasks.Task`1
  name: Threading.Tasks.Task<T>
  fullName: System.Threading.Tasks.Task<T>
  fullname.vb: System.Threading.Tasks.Task(Of T)
  name.vb: Threading.Tasks.Task(Of T)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Threading.Tasks.Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Threading.Tasks.Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.Threading
  isExternal: false
  name: System.Threading
  fullName: System.Threading
- uid: System.Threading.Tasks.Task`1
  parent: System.Threading.Tasks
  isExternal: false
  name: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  fullname.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
  - name: <
    fullName: <
  - name: TResult
    fullName: TResult
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
  - name: '(Of '
    fullName: '(Of '
  - name: TResult
    fullName: TResult
  - name: )
    fullName: )
- uid: System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: System.Single
  parent: System
  isExternal: false
  name: Single
  fullName: System.Single
- uid: System.Guid
  parent: System
  isExternal: false
  name: Guid
  fullName: System.Guid
- uid: System.Int16
  parent: System
  isExternal: false
  name: Int16
  fullName: System.Int16
- uid: System.Object[]
  isExternal: false
  name: Object[]
  fullName: System.Object[]
  fullname.vb: System.Object()
  name.vb: Object()
  spec.csharp:
  - uid: System.Object
    name: Object
    fullName: System.Object
  - name: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Object
    name: Object
    fullName: System.Object
  - name: ()
    fullName: ()
- uid: System.Data.SqlTypes.SqlBinary
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlBinary
  fullName: System.Data.SqlTypes.SqlBinary
- uid: System.Data.SqlTypes
  isExternal: false
  name: System.Data.SqlTypes
  fullName: System.Data.SqlTypes
- uid: System.Data.SqlTypes.SqlBoolean
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlBoolean
  fullName: System.Data.SqlTypes.SqlBoolean
- uid: System.Data.SqlTypes.SqlByte
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlByte
  fullName: System.Data.SqlTypes.SqlByte
- uid: System.Data.SqlTypes.SqlBytes
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlBytes
  fullName: System.Data.SqlTypes.SqlBytes
- uid: System.Data.SqlTypes.SqlChars
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlChars
  fullName: System.Data.SqlTypes.SqlChars
- uid: System.Data.SqlTypes.SqlDateTime
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlDateTime
  fullName: System.Data.SqlTypes.SqlDateTime
- uid: System.Data.SqlTypes.SqlDecimal
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlDecimal
  fullName: System.Data.SqlTypes.SqlDecimal
- uid: System.Data.SqlTypes.SqlDouble
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlDouble
  fullName: System.Data.SqlTypes.SqlDouble
- uid: System.Data.SqlTypes.SqlGuid
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlGuid
  fullName: System.Data.SqlTypes.SqlGuid
- uid: System.Data.SqlTypes.SqlInt16
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlInt16
  fullName: System.Data.SqlTypes.SqlInt16
- uid: System.Data.SqlTypes.SqlInt32
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlInt32
  fullName: System.Data.SqlTypes.SqlInt32
- uid: System.Data.SqlTypes.SqlInt64
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlInt64
  fullName: System.Data.SqlTypes.SqlInt64
- uid: System.Data.SqlTypes.SqlMoney
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlMoney
  fullName: System.Data.SqlTypes.SqlMoney
- uid: System.Data.SqlTypes.SqlSingle
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlSingle
  fullName: System.Data.SqlTypes.SqlSingle
- uid: System.Data.SqlTypes.SqlString
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlString
  fullName: System.Data.SqlTypes.SqlString
- uid: System.Data.SqlTypes.SqlXml
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlXml
  fullName: System.Data.SqlTypes.SqlXml
- uid: System.IO.Stream
  parent: System.IO
  isExternal: false
  name: IO.Stream
  fullName: System.IO.Stream
- uid: System.IO
  isExternal: false
  name: System.IO
  fullName: System.IO
- uid: System.IO.TextReader
  parent: System.IO
  isExternal: false
  name: IO.TextReader
  fullName: System.IO.TextReader
- uid: System.TimeSpan
  parent: System
  isExternal: false
  name: TimeSpan
  fullName: System.TimeSpan
- uid: System.Xml.XmlReader
  parent: System.Xml
  isExternal: false
  name: XmlReader
  fullName: System.Xml.XmlReader
- uid: System.Xml
  isExternal: false
  name: System.Xml
  fullName: System.Xml
- uid: System.Threading.Tasks.Task{System.Boolean}
  definition: System.Threading.Tasks.Task`1
  name: Threading.Tasks.Task<Boolean>
  fullName: System.Threading.Tasks.Task<System.Boolean>
  fullname.vb: System.Threading.Tasks.Task(Of System.Boolean)
  name.vb: Threading.Tasks.Task(Of Boolean)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Threading.Tasks.Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Threading.Tasks.Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
- uid: System.NotSupportedException
  parent: System
  isExternal: false
  name: NotSupportedException
  fullName: System.NotSupportedException
- uid: System.IndexOutOfRangeException
  isExternal: false
  name: IndexOutOfRangeException
  fullName: System.IndexOutOfRangeException
- uid: System.InvalidCastException
  isExternal: false
  name: InvalidCastException
  fullName: System.InvalidCastException
- uid: System.InvalidOperationException
  parent: System
  isExternal: false
  name: InvalidOperationException
  fullName: System.InvalidOperationException
- uid: System.Data.SqlTypes.SqlNullValueException
  isExternal: false
  name: SqlNullValueException
  fullName: System.Data.SqlTypes.SqlNullValueException
- uid: System.ArgumentNullException
  isExternal: false
  name: ArgumentNullException
  fullName: System.ArgumentNullException
- uid: System.ArgumentOutOfRangeException
  isExternal: false
  name: ArgumentOutOfRangeException
  fullName: System.ArgumentOutOfRangeException
- uid: System.Data.SqlClient.SqlException
  isExternal: false
  name: SqlException
  fullName: System.Data.SqlClient.SqlException
