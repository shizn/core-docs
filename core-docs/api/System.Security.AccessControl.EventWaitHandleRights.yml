items:
- uid: System.Security.AccessControl.EventWaitHandleRights
  commentId: T:System.Security.AccessControl.EventWaitHandleRights
  id: EventWaitHandleRights
  parent: System.Security.AccessControl
  children:
  - System.Security.AccessControl.EventWaitHandleRights.ChangePermissions
  - System.Security.AccessControl.EventWaitHandleRights.Delete
  - System.Security.AccessControl.EventWaitHandleRights.FullControl
  - System.Security.AccessControl.EventWaitHandleRights.Modify
  - System.Security.AccessControl.EventWaitHandleRights.ReadPermissions
  - System.Security.AccessControl.EventWaitHandleRights.Synchronize
  - System.Security.AccessControl.EventWaitHandleRights.TakeOwnership
  langs:
  - csharp
  - vb
  name: EventWaitHandleRights
  fullName: System.Security.AccessControl.EventWaitHandleRights
  type: Enum
  source:
    remote:
      path: src/System.Threading.AccessControl/ref/System.Threading.AccessControl.Manual.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: EventWaitHandleRights
    path: src/System.Threading.AccessControl/ref/System.Threading.AccessControl.Manual.cs
    startLine: 10
  assemblies:
  - System.Threading.AccessControl
  namespace: System.Security.AccessControl
  summary: "\n<p>Specifies the access control rights that can be applied to named system event objects.</p>\n"
  remarks: "\n<p>Use the <xref href=\"System.Security.AccessControl.EventWaitHandleRights\" data-throw-if-not-resolved=\"false\"></xref> enumeration to specify access control rights when you create <xref href=\"System.Security.AccessControl.EventWaitHandleAccessRule\" data-throw-if-not-resolved=\"false\"></xref> objects. To apply access rights to a named system event, first add <xref href=\"System.Security.AccessControl.EventWaitHandleAccessRule\" data-throw-if-not-resolved=\"false\"></xref> objects to an <xref href=\"System.Security.AccessControl.EventWaitHandleSecurity\" data-throw-if-not-resolved=\"false\"></xref> object, then attach the <xref href=\"System.Security.AccessControl.EventWaitHandleSecurity\" data-throw-if-not-resolved=\"false\"></xref> object to the named system event using the <xref href=\"System.Threading.EventWaitHandle.#ctor(System.Boolean,System.Threading.EventResetMode,System.String,System.Boolean@,System.Security.AccessControl.EventWaitHandleSecurity)\" data-throw-if-not-resolved=\"false\"></xref> constructor or the <xref href=\"System.Threading.EventWaitHandle.SetAccessControl(System.Security.AccessControl.EventWaitHandleSecurity)\" data-throw-if-not-resolved=\"false\"></xref> method.</p>\n<p>Security on synchronization objects is not supported for Windows 98 or Windows Millennium Edition.</p>\n"
  example:
  - "\n<p>The following code example demonstrates the use of <xref href=\"System.Security.AccessControl.EventWaitHandleRights\" data-throw-if-not-resolved=\"false\"></xref> values when creating and using <xref href=\"System.Security.AccessControl.EventWaitHandleAccessRule\" data-throw-if-not-resolved=\"false\"></xref> objects. The example creates an <xref href=\"System.Security.AccessControl.EventWaitHandleSecurity\" data-throw-if-not-resolved=\"false\"></xref> object, adds rules that allow and deny various rights for the current user, and displays the resulting pair of rules. The example then allows new rights for the current user and displays the result, showing that the new rights are merged with the existing <xref href=\"System.Security.AccessControl.AccessControlType.Allow\" data-throw-if-not-resolved=\"false\"></xref>rule.</p>\n<p>This example does not attach the security object to an <xref href=\"System.Threading.EventWaitHandle\" data-throw-if-not-resolved=\"false\"></xref> object; see <xref href=\"System.Security.AccessControl.EventWaitHandleSecurity\" data-throw-if-not-resolved=\"false\"></xref>, <xref href=\"System.Threading.EventWaitHandle.GetAccessControl\" data-throw-if-not-resolved=\"false\"></xref> method, and <xref href=\"System.Threading.EventWaitHandle.SetAccessControl(System.Security.AccessControl.EventWaitHandleSecurity)\" data-throw-if-not-resolved=\"false\"></xref>.</p>System.Security.AccessControl.EventWaitHandleSecurity.AddAccessRule#1"
  syntax:
    content: 'public enum EventWaitHandleRights : int'
    content.vb: Public Enum EventWaitHandleRights As Integer
  seealso:
  - type: System.Security.AccessControl.EventWaitHandleAccessRule
    commentId: T:System.Security.AccessControl.EventWaitHandleAccessRule
  - type: System.Security.AccessControl.EventWaitHandleSecurity
    commentId: T:System.Security.AccessControl.EventWaitHandleSecurity
  modifiers.csharp:
  - public
  - enum
  modifiers.vb:
  - Public
  - Enum
- uid: System.Security.AccessControl.EventWaitHandleRights.ChangePermissions
  commentId: F:System.Security.AccessControl.EventWaitHandleRights.ChangePermissions
  id: ChangePermissions
  parent: System.Security.AccessControl.EventWaitHandleRights
  langs:
  - csharp
  - vb
  name: ChangePermissions
  fullName: System.Security.AccessControl.EventWaitHandleRights.ChangePermissions
  type: Field
  source:
    remote:
      path: src/System.Threading.AccessControl/ref/System.Threading.AccessControl.Manual.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ChangePermissions
    path: src/System.Threading.AccessControl/ref/System.Threading.AccessControl.Manual.cs
    startLine: 14
  assemblies:
  - System.Threading.AccessControl
  namespace: System.Security.AccessControl
  summary: "\n<p>The right to change the security and audit rules associated with a named event.</p>\n"
  syntax:
    content: ChangePermissions = null
    content.vb: ChangePermissions = Nothing
    return:
      type: System.Security.AccessControl.EventWaitHandleRights
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Security.AccessControl.EventWaitHandleRights.Delete
  commentId: F:System.Security.AccessControl.EventWaitHandleRights.Delete
  id: Delete
  parent: System.Security.AccessControl.EventWaitHandleRights
  langs:
  - csharp
  - vb
  name: Delete
  fullName: System.Security.AccessControl.EventWaitHandleRights.Delete
  type: Field
  source:
    remote:
      path: src/System.Threading.AccessControl/ref/System.Threading.AccessControl.Manual.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Delete
    path: src/System.Threading.AccessControl/ref/System.Threading.AccessControl.Manual.cs
    startLine: 15
  assemblies:
  - System.Threading.AccessControl
  namespace: System.Security.AccessControl
  summary: "\n<p>The right to delete a named event.</p>\n"
  syntax:
    content: Delete = null
    content.vb: Delete = Nothing
    return:
      type: System.Security.AccessControl.EventWaitHandleRights
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Security.AccessControl.EventWaitHandleRights.FullControl
  commentId: F:System.Security.AccessControl.EventWaitHandleRights.FullControl
  id: FullControl
  parent: System.Security.AccessControl.EventWaitHandleRights
  langs:
  - csharp
  - vb
  name: FullControl
  fullName: System.Security.AccessControl.EventWaitHandleRights.FullControl
  type: Field
  source:
    remote:
      path: src/System.Threading.AccessControl/ref/System.Threading.AccessControl.Manual.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: FullControl
    path: src/System.Threading.AccessControl/ref/System.Threading.AccessControl.Manual.cs
    startLine: 16
  assemblies:
  - System.Threading.AccessControl
  namespace: System.Security.AccessControl
  summary: "\n<p>The right to exert full control over a named event, and to modify its access rules and audit rules.</p>\n"
  syntax:
    content: FullControl = null
    content.vb: FullControl = Nothing
    return:
      type: System.Security.AccessControl.EventWaitHandleRights
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Security.AccessControl.EventWaitHandleRights.Modify
  commentId: F:System.Security.AccessControl.EventWaitHandleRights.Modify
  id: Modify
  parent: System.Security.AccessControl.EventWaitHandleRights
  langs:
  - csharp
  - vb
  name: Modify
  fullName: System.Security.AccessControl.EventWaitHandleRights.Modify
  type: Field
  source:
    remote:
      path: src/System.Threading.AccessControl/ref/System.Threading.AccessControl.Manual.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Modify
    path: src/System.Threading.AccessControl/ref/System.Threading.AccessControl.Manual.cs
    startLine: 17
  assemblies:
  - System.Threading.AccessControl
  namespace: System.Security.AccessControl
  summary: "\n<p>The right to set or reset the signaled state of a named event.</p>\n"
  syntax:
    content: Modify = null
    content.vb: Modify = Nothing
    return:
      type: System.Security.AccessControl.EventWaitHandleRights
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Security.AccessControl.EventWaitHandleRights.ReadPermissions
  commentId: F:System.Security.AccessControl.EventWaitHandleRights.ReadPermissions
  id: ReadPermissions
  parent: System.Security.AccessControl.EventWaitHandleRights
  langs:
  - csharp
  - vb
  name: ReadPermissions
  fullName: System.Security.AccessControl.EventWaitHandleRights.ReadPermissions
  type: Field
  source:
    remote:
      path: src/System.Threading.AccessControl/ref/System.Threading.AccessControl.Manual.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ReadPermissions
    path: src/System.Threading.AccessControl/ref/System.Threading.AccessControl.Manual.cs
    startLine: 18
  assemblies:
  - System.Threading.AccessControl
  namespace: System.Security.AccessControl
  summary: "\n<p>The right to open and copy the access rules and audit rules for a named event.</p>\n"
  syntax:
    content: ReadPermissions = null
    content.vb: ReadPermissions = Nothing
    return:
      type: System.Security.AccessControl.EventWaitHandleRights
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Security.AccessControl.EventWaitHandleRights.Synchronize
  commentId: F:System.Security.AccessControl.EventWaitHandleRights.Synchronize
  id: Synchronize
  parent: System.Security.AccessControl.EventWaitHandleRights
  langs:
  - csharp
  - vb
  name: Synchronize
  fullName: System.Security.AccessControl.EventWaitHandleRights.Synchronize
  type: Field
  source:
    remote:
      path: src/System.Threading.AccessControl/ref/System.Threading.AccessControl.Manual.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Synchronize
    path: src/System.Threading.AccessControl/ref/System.Threading.AccessControl.Manual.cs
    startLine: 19
  assemblies:
  - System.Threading.AccessControl
  namespace: System.Security.AccessControl
  summary: "\n<p>The right to wait on a named event.</p>\n"
  syntax:
    content: Synchronize = null
    content.vb: Synchronize = Nothing
    return:
      type: System.Security.AccessControl.EventWaitHandleRights
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Security.AccessControl.EventWaitHandleRights.TakeOwnership
  commentId: F:System.Security.AccessControl.EventWaitHandleRights.TakeOwnership
  id: TakeOwnership
  parent: System.Security.AccessControl.EventWaitHandleRights
  langs:
  - csharp
  - vb
  name: TakeOwnership
  fullName: System.Security.AccessControl.EventWaitHandleRights.TakeOwnership
  type: Field
  source:
    remote:
      path: src/System.Threading.AccessControl/ref/System.Threading.AccessControl.Manual.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: TakeOwnership
    path: src/System.Threading.AccessControl/ref/System.Threading.AccessControl.Manual.cs
    startLine: 20
  assemblies:
  - System.Threading.AccessControl
  namespace: System.Security.AccessControl
  summary: "\n<p>The right to change the owner of a named event.</p>\n"
  syntax:
    content: TakeOwnership = null
    content.vb: TakeOwnership = Nothing
    return:
      type: System.Security.AccessControl.EventWaitHandleRights
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
references:
- uid: System.Security.AccessControl
  isExternal: false
  name: System.Security.AccessControl
  fullName: System.Security.AccessControl
- uid: System.Security.AccessControl.EventWaitHandleRights
  parent: System.Security.AccessControl
  isExternal: false
  name: EventWaitHandleRights
  fullName: System.Security.AccessControl.EventWaitHandleRights
