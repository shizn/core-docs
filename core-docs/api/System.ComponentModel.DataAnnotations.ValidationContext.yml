items:
- uid: System.ComponentModel.DataAnnotations.ValidationContext
  commentId: T:System.ComponentModel.DataAnnotations.ValidationContext
  id: ValidationContext
  parent: System.ComponentModel.DataAnnotations
  children:
  - System.ComponentModel.DataAnnotations.ValidationContext.#ctor(System.Object)
  - System.ComponentModel.DataAnnotations.ValidationContext.#ctor(System.Object,System.Collections.Generic.IDictionary{System.Object,System.Object})
  - System.ComponentModel.DataAnnotations.ValidationContext.#ctor(System.Object,System.IServiceProvider,System.Collections.Generic.IDictionary{System.Object,System.Object})
  - System.ComponentModel.DataAnnotations.ValidationContext.DisplayName
  - System.ComponentModel.DataAnnotations.ValidationContext.GetService(System.Type)
  - System.ComponentModel.DataAnnotations.ValidationContext.InitializeServiceProvider(System.Func{System.Type,System.Object})
  - System.ComponentModel.DataAnnotations.ValidationContext.Items
  - System.ComponentModel.DataAnnotations.ValidationContext.MemberName
  - System.ComponentModel.DataAnnotations.ValidationContext.ObjectInstance
  - System.ComponentModel.DataAnnotations.ValidationContext.ObjectType
  langs:
  - csharp
  - vb
  name: ValidationContext
  fullName: System.ComponentModel.DataAnnotations.ValidationContext
  type: Class
  source:
    remote:
      path: src/System.ComponentModel.Annotations/src/System/ComponentModel/DataAnnotations/ValidationContext.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ValidationContext
    path: src/System.ComponentModel.Annotations/src/System/ComponentModel/DataAnnotations/ValidationContext.cs
    startLine: 24
  assemblies:
  - System.ComponentModel.Annotations
  namespace: System.ComponentModel.DataAnnotations
  syntax:
    content: 'public sealed class ValidationContext : IServiceProvider'
    content.vb: >-
      Public NotInheritable Class ValidationContext
          Inherits IServiceProvider
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: System.ComponentModel.DataAnnotations.ValidationContext.#ctor(System.Object)
  commentId: M:System.ComponentModel.DataAnnotations.ValidationContext.#ctor(System.Object)
  id: '#ctor(System.Object)'
  parent: System.ComponentModel.DataAnnotations.ValidationContext
  langs:
  - csharp
  - vb
  name: ValidationContext(Object)
  fullName: System.ComponentModel.DataAnnotations.ValidationContext.ValidationContext(System.Object)
  type: Constructor
  source:
    remote:
      path: src/System.ComponentModel.Annotations/src/System/ComponentModel/DataAnnotations/ValidationContext.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.ComponentModel.Annotations/src/System/ComponentModel/DataAnnotations/ValidationContext.cs
    startLine: 46
  assemblies:
  - System.ComponentModel.Annotations
  namespace: System.ComponentModel.DataAnnotations
  syntax:
    content: public ValidationContext(object instance)
    content.vb: Public Sub New(instance As Object)
    parameters:
    - id: instance
      type: System.Object
      description: The object instance being validated.  It cannot be <code>null</code>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.ComponentModel.DataAnnotations.ValidationContext.#ctor(System.Object,System.Collections.Generic.IDictionary{System.Object,System.Object})
  commentId: M:System.ComponentModel.DataAnnotations.ValidationContext.#ctor(System.Object,System.Collections.Generic.IDictionary{System.Object,System.Object})
  id: '#ctor(System.Object,System.Collections.Generic.IDictionary{System.Object,System.Object})'
  parent: System.ComponentModel.DataAnnotations.ValidationContext
  langs:
  - csharp
  - vb
  name: ValidationContext(Object, Collections.Generic.IDictionary<Object, Object>)
  fullName: System.ComponentModel.DataAnnotations.ValidationContext.ValidationContext(System.Object, System.Collections.Generic.IDictionary<System.Object, System.Object>)
  type: Constructor
  source:
    remote:
      path: src/System.ComponentModel.Annotations/ref/System.ComponentModel.Annotations.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.ComponentModel.Annotations/ref/System.ComponentModel.Annotations.cs
    startLine: 284
  assemblies:
  - System.ComponentModel.Annotations
  namespace: System.ComponentModel.DataAnnotations
  syntax:
    content: public ValidationContext(object instance, Collections.Generic.IDictionary<object, object> items)
    content.vb: Public Sub New(instance As Object, items As Collections.Generic.IDictionary(Of Object, Object))
    parameters:
    - id: instance
      type: System.Object
    - id: items
      type: System.Collections.Generic.IDictionary{System.Object,System.Object}
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.ComponentModel.DataAnnotations.ValidationContext.ValidationContext(System.Object, System.Collections.Generic.IDictionary(Of System.Object, System.Object))
  name.vb: ValidationContext(Object, Collections.Generic.IDictionary(Of Object, Object))
- uid: System.ComponentModel.DataAnnotations.ValidationContext.#ctor(System.Object,System.IServiceProvider,System.Collections.Generic.IDictionary{System.Object,System.Object})
  commentId: M:System.ComponentModel.DataAnnotations.ValidationContext.#ctor(System.Object,System.IServiceProvider,System.Collections.Generic.IDictionary{System.Object,System.Object})
  id: '#ctor(System.Object,System.IServiceProvider,System.Collections.Generic.IDictionary{System.Object,System.Object})'
  parent: System.ComponentModel.DataAnnotations.ValidationContext
  langs:
  - csharp
  - vb
  name: ValidationContext(Object, IServiceProvider, Collections.Generic.IDictionary<Object, Object>)
  fullName: System.ComponentModel.DataAnnotations.ValidationContext.ValidationContext(System.Object, System.IServiceProvider, System.Collections.Generic.IDictionary<System.Object, System.Object>)
  type: Constructor
  source:
    remote:
      path: src/System.ComponentModel.Annotations/ref/System.ComponentModel.Annotations.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.ComponentModel.Annotations/ref/System.ComponentModel.Annotations.cs
    startLine: 285
  assemblies:
  - System.ComponentModel.Annotations
  namespace: System.ComponentModel.DataAnnotations
  syntax:
    content: public ValidationContext(object instance, IServiceProvider serviceProvider, Collections.Generic.IDictionary<object, object> items)
    content.vb: Public Sub New(instance As Object, serviceProvider As IServiceProvider, items As Collections.Generic.IDictionary(Of Object, Object))
    parameters:
    - id: instance
      type: System.Object
    - id: serviceProvider
      type: System.IServiceProvider
    - id: items
      type: System.Collections.Generic.IDictionary{System.Object,System.Object}
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.ComponentModel.DataAnnotations.ValidationContext.ValidationContext(System.Object, System.IServiceProvider, System.Collections.Generic.IDictionary(Of System.Object, System.Object))
  name.vb: ValidationContext(Object, IServiceProvider, Collections.Generic.IDictionary(Of Object, Object))
- uid: System.ComponentModel.DataAnnotations.ValidationContext.DisplayName
  commentId: P:System.ComponentModel.DataAnnotations.ValidationContext.DisplayName
  id: DisplayName
  parent: System.ComponentModel.DataAnnotations.ValidationContext
  langs:
  - csharp
  - vb
  name: DisplayName
  fullName: System.ComponentModel.DataAnnotations.ValidationContext.DisplayName
  type: Property
  source:
    remote:
      path: src/System.ComponentModel.Annotations/src/System/ComponentModel/DataAnnotations/ValidationContext.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: DisplayName
    path: src/System.ComponentModel.Annotations/src/System/ComponentModel/DataAnnotations/ValidationContext.cs
    startLine: 143
  assemblies:
  - System.ComponentModel.Annotations
  namespace: System.ComponentModel.DataAnnotations
  syntax:
    content: public string DisplayName { get; set; }
    content.vb: Public Property DisplayName As String
    parameters: []
    return:
      type: System.String
      description: "\n    If this name was not explicitly set, this property will consult an associated <xref href=\"System.ComponentModel.DataAnnotations.DisplayAttribute\" data-throw-if-not-resolved=\"false\"></xref>\n    to see if can use that instead.  Lacking that, it returns <xref href=\"System.ComponentModel.DataAnnotations.ValidationContext.MemberName\" data-throw-if-not-resolved=\"false\"></xref>.  The\n<xref href=\"System.ComponentModel.DataAnnotations.ValidationContext.ObjectInstance\" data-throw-if-not-resolved=\"false\"></xref>\ntype name will be used if MemberName has not been set.\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.ComponentModel.DataAnnotations.ValidationContext.Items
  commentId: P:System.ComponentModel.DataAnnotations.ValidationContext.Items
  id: Items
  parent: System.ComponentModel.DataAnnotations.ValidationContext
  langs:
  - csharp
  - vb
  name: Items
  fullName: System.ComponentModel.DataAnnotations.ValidationContext.Items
  type: Property
  source:
    remote:
      path: src/System.ComponentModel.Annotations/src/System/ComponentModel/DataAnnotations/ValidationContext.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Items
    path: src/System.ComponentModel.Annotations/src/System/ComponentModel/DataAnnotations/ValidationContext.cs
    startLine: 187
  assemblies:
  - System.ComponentModel.Annotations
  namespace: System.ComponentModel.DataAnnotations
  syntax:
    content: public IDictionary<object, object> Items { get; }
    content.vb: Public ReadOnly Property Items As IDictionary(Of Object, Object)
    parameters: []
    return:
      type: IDictionary{System.Object,System.Object}
      description: "\n    This property will never be null, but the dictionary may be empty.  Changes made\n    to items in this dictionary will never affect the original dictionary specified in the constructor.\n"
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.ComponentModel.DataAnnotations.ValidationContext.MemberName
  commentId: P:System.ComponentModel.DataAnnotations.ValidationContext.MemberName
  id: MemberName
  parent: System.ComponentModel.DataAnnotations.ValidationContext
  langs:
  - csharp
  - vb
  name: MemberName
  fullName: System.ComponentModel.DataAnnotations.ValidationContext.MemberName
  type: Property
  source:
    remote:
      path: src/System.ComponentModel.Annotations/src/System/ComponentModel/DataAnnotations/ValidationContext.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: MemberName
    path: src/System.ComponentModel.Annotations/src/System/ComponentModel/DataAnnotations/ValidationContext.cs
    startLine: 174
  assemblies:
  - System.ComponentModel.Annotations
  namespace: System.ComponentModel.DataAnnotations
  syntax:
    content: public string MemberName { get; set; }
    content.vb: Public Property MemberName As String
    parameters: []
    return:
      type: System.String
      description: "\n    This name reflects the API name of the member being validated, not a localized name.  It should be set\n    only for property or parameter contexts.\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.ComponentModel.DataAnnotations.ValidationContext.ObjectInstance
  commentId: P:System.ComponentModel.DataAnnotations.ValidationContext.ObjectInstance
  id: ObjectInstance
  parent: System.ComponentModel.DataAnnotations.ValidationContext
  langs:
  - csharp
  - vb
  name: ObjectInstance
  fullName: System.ComponentModel.DataAnnotations.ValidationContext.ObjectInstance
  type: Property
  source:
    remote:
      path: src/System.ComponentModel.Annotations/src/System/ComponentModel/DataAnnotations/ValidationContext.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ObjectInstance
    path: src/System.ComponentModel.Annotations/src/System/ComponentModel/DataAnnotations/ValidationContext.cs
    startLine: 121
  assemblies:
  - System.ComponentModel.Annotations
  namespace: System.ComponentModel.DataAnnotations
  syntax:
    content: public object ObjectInstance { get; }
    content.vb: Public ReadOnly Property ObjectInstance As Object
    parameters: []
    return:
      type: System.Object
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.ComponentModel.DataAnnotations.ValidationContext.ObjectType
  commentId: P:System.ComponentModel.DataAnnotations.ValidationContext.ObjectType
  id: ObjectType
  parent: System.ComponentModel.DataAnnotations.ValidationContext
  langs:
  - csharp
  - vb
  name: ObjectType
  fullName: System.ComponentModel.DataAnnotations.ValidationContext.ObjectType
  type: Property
  source:
    remote:
      path: src/System.ComponentModel.Annotations/src/System/ComponentModel/DataAnnotations/ValidationContext.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ObjectType
    path: src/System.ComponentModel.Annotations/src/System/ComponentModel/DataAnnotations/ValidationContext.cs
    startLine: 129
  assemblies:
  - System.ComponentModel.Annotations
  namespace: System.ComponentModel.DataAnnotations
  syntax:
    content: public Type ObjectType { get; }
    content.vb: Public ReadOnly Property ObjectType As Type
    parameters: []
    return:
      type: Type
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.ComponentModel.DataAnnotations.ValidationContext.GetService(System.Type)
  commentId: M:System.ComponentModel.DataAnnotations.ValidationContext.GetService(System.Type)
  id: GetService(System.Type)
  parent: System.ComponentModel.DataAnnotations.ValidationContext
  langs:
  - csharp
  - vb
  name: GetService(Type)
  fullName: System.ComponentModel.DataAnnotations.ValidationContext.GetService(System.Type)
  type: Method
  source:
    remote:
      path: src/System.ComponentModel.Annotations/ref/System.ComponentModel.Annotations.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetService
    path: src/System.ComponentModel.Annotations/ref/System.ComponentModel.Annotations.cs
    startLine: 291
  assemblies:
  - System.ComponentModel.Annotations
  namespace: System.ComponentModel.DataAnnotations
  syntax:
    content: public object GetService(Type serviceType)
    content.vb: Public Function GetService(serviceType As Type) As Object
    parameters:
    - id: serviceType
      type: System.Type
    return:
      type: System.Object
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.ComponentModel.DataAnnotations.ValidationContext.InitializeServiceProvider(System.Func{System.Type,System.Object})
  commentId: M:System.ComponentModel.DataAnnotations.ValidationContext.InitializeServiceProvider(System.Func{System.Type,System.Object})
  id: InitializeServiceProvider(System.Func{System.Type,System.Object})
  parent: System.ComponentModel.DataAnnotations.ValidationContext
  langs:
  - csharp
  - vb
  name: InitializeServiceProvider(Func<Type, Object>)
  fullName: System.ComponentModel.DataAnnotations.ValidationContext.InitializeServiceProvider(System.Func<System.Type, System.Object>)
  type: Method
  source:
    remote:
      path: src/System.ComponentModel.Annotations/ref/System.ComponentModel.Annotations.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: InitializeServiceProvider
    path: src/System.ComponentModel.Annotations/ref/System.ComponentModel.Annotations.cs
    startLine: 292
  assemblies:
  - System.ComponentModel.Annotations
  namespace: System.ComponentModel.DataAnnotations
  syntax:
    content: public void InitializeServiceProvider(Func<Type, object> serviceProvider)
    content.vb: Public Sub InitializeServiceProvider(serviceProvider As Func(Of Type, Object))
    parameters:
    - id: serviceProvider
      type: System.Func{System.Type,System.Object}
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.ComponentModel.DataAnnotations.ValidationContext.InitializeServiceProvider(System.Func(Of System.Type, System.Object))
  name.vb: InitializeServiceProvider(Func(Of Type, Object))
references:
- uid: System.ComponentModel.DataAnnotations
  isExternal: false
  name: System.ComponentModel.DataAnnotations
  fullName: System.ComponentModel.DataAnnotations
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Collections.Generic.IDictionary{System.Object,System.Object}
  definition: System.Collections.Generic.IDictionary`2
  name: Collections.Generic.IDictionary<Object, Object>
  fullName: System.Collections.Generic.IDictionary<System.Object, System.Object>
  fullname.vb: System.Collections.Generic.IDictionary(Of System.Object, System.Object)
  name.vb: Collections.Generic.IDictionary(Of Object, Object)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: Collections.Generic.IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: Collections.Generic.IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Collections.Generic.IDictionary`2
  isExternal: false
  name: Collections.Generic.IDictionary<, >
  fullName: System.Collections.Generic.IDictionary<, >
  fullname.vb: System.Collections.Generic.IDictionary(Of , )
  name.vb: Collections.Generic.IDictionary(Of , )
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: Collections.Generic.IDictionary
    fullName: System.Collections.Generic.IDictionary
  - name: <
    fullName: <
  - {}
  - name: ', '
    fullName: ', '
  - {}
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: Collections.Generic.IDictionary
    fullName: System.Collections.Generic.IDictionary
  - name: '(Of '
    fullName: '(Of '
  - {}
  - name: ', '
    fullName: ', '
  - {}
  - name: )
    fullName: )
- uid: System.IServiceProvider
  isExternal: false
  name: IServiceProvider
  fullName: System.IServiceProvider
- uid: System.String
  parent: System
  isExternal: false
  name: String
  fullName: System.String
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  fullName: System.Type
- uid: System.Func{System.Type,System.Object}
  definition: System.Func`2
  name: Func<Type, Object>
  fullName: System.Func<System.Type, System.Object>
  fullname.vb: System.Func(Of System.Type, System.Object)
  name.vb: Func(Of Type, Object)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Func`2
  isExternal: false
  name: Func<, >
  fullName: System.Func<, >
  fullname.vb: System.Func(Of , )
  name.vb: Func(Of , )
  spec.csharp:
  - uid: System.Func`2
    name: Func
    fullName: System.Func
  - name: <
    fullName: <
  - {}
  - name: ', '
    fullName: ', '
  - {}
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    fullName: System.Func
  - name: '(Of '
    fullName: '(Of '
  - {}
  - name: ', '
    fullName: ', '
  - {}
  - name: )
    fullName: )
