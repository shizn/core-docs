items:
- uid: System.ComponentModel.IListSource
  commentId: T:System.ComponentModel.IListSource
  id: IListSource
  parent: System.ComponentModel
  children:
  - System.ComponentModel.IListSource.ContainsListCollection
  - System.ComponentModel.IListSource.GetList
  langs:
  - csharp
  - vb
  name: IListSource
  fullName: System.ComponentModel.IListSource
  type: Interface
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/IListSource.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IListSource
    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/IListSource.cs
    startLine: 11
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: "\n<p>Provides functionality to an object to return a list that can be bound to a data source.</p>\n"
  remarks: "\n<p>You typically use this interface to return a list that can be bound to a data source, from an object that does not implement <xref href=\"System.Collections.IList\" data-throw-if-not-resolved=\"false\"></xref> itself.</p>\n<p>Binding to data can occur at either run time or in a designer, but there are rules for each. At run time, you can bind to data in any of the following: </p>\n<ul><li>\n<p>\n<xref href=\"System.Array\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</li><li>\n<p>Implementer of <xref href=\"System.Collections.IList\" data-throw-if-not-resolved=\"false\"></xref>, provided the implementer has a strongly typed <xref href=\"System.Collections.IList.Item(System.Int32)\" data-throw-if-not-resolved=\"false\"></xref> property (that is, the <xref href=\"System.Type\" data-throw-if-not-resolved=\"false\"></xref> is anything but <xref href=\"System.Object\" data-throw-if-not-resolved=\"false\"></xref>). You can accomplish this by making the default implementation of <xref href=\"System.Collections.IList.Item(System.Int32)\" data-throw-if-not-resolved=\"false\"></xref> private. If you want to create an <xref href=\"System.Collections.IList\" data-throw-if-not-resolved=\"false\"></xref> that follows the rules of a strongly typed collection, you should derive from <xref href=\"System.Collections.CollectionBase\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n</li><li>\n<p>Implementer of <xref href=\"System.ComponentModel.ITypedList\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n</li></ul>\n<p>In a designer, you can initialize binding to <xref href=\"System.ComponentModel.Component\" data-throw-if-not-resolved=\"false\"></xref> objects by following the same rules.</p>\n<p>Implementers of <xref href=\"System.ComponentModel.IListSource\" data-throw-if-not-resolved=\"false\"></xref> can return an <xref href=\"System.Collections.IList\" data-throw-if-not-resolved=\"false\"></xref> that contains a collection of <xref href=\"System.Collections.IList\" data-throw-if-not-resolved=\"false\"></xref> objects.</p>\n"
  example:
  - "\n<p>The following code example demonstrates how to implement the <xref href=\"System.ComponentModel.IListSource\" data-throw-if-not-resolved=\"false\"></xref> interface. A component named <code>EmployeeListSource</code> exposes an <xref href=\"System.Collections.IList\" data-throw-if-not-resolved=\"false\"></xref> for data binding by implementing the <xref href=\"System.ComponentModel.IListSource.GetList\" data-throw-if-not-resolved=\"false\"></xref> method. For a full code listing, see How to: Implement the IListSource Interface.</p>System.ComponentModel.IListSource#1"
  syntax:
    content: public interface IListSource
    content.vb: Public Interface IListSource
  seealso:
  - type: System.ComponentModel.IListSource
    commentId: T:System.ComponentModel.IListSource
  - type: System.ComponentModel.ITypedList
    commentId: T:System.ComponentModel.ITypedList
  - type: System.ComponentModel.BindingList`1
    commentId: T:System.ComponentModel.BindingList`1
  - type: System.ComponentModel.IBindingList
    commentId: T:System.ComponentModel.IBindingList
  - type: System.Collections.CollectionBase
    commentId: T:System.Collections.CollectionBase
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: System.ComponentModel.IListSource.ContainsListCollection
  commentId: P:System.ComponentModel.IListSource.ContainsListCollection
  id: ContainsListCollection
  parent: System.ComponentModel.IListSource
  langs:
  - csharp
  - vb
  name: ContainsListCollection
  fullName: System.ComponentModel.IListSource.ContainsListCollection
  type: Property
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/IListSource.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ContainsListCollection
    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/IListSource.cs
    startLine: 14
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: "\n<p>Gets a value indicating whether the collection is a collection of <xref href=\"System.Collections.IList\" data-throw-if-not-resolved=\"false\"></xref> objects.</p>\n"
  remarks: "\n<p>Using this property in <xref href=\"System.Data.DataSet\" data-throw-if-not-resolved=\"false\"></xref> returns <strong>true</strong> because the <xref href=\"System.Data.DataSet\" data-throw-if-not-resolved=\"false\"></xref> class contains a collection of collections. Using this property in <xref href=\"System.Data.DataTable\" data-throw-if-not-resolved=\"false\"></xref> returns <strong>false</strong> because the <xref href=\"System.Data.DataTable\" data-throw-if-not-resolved=\"false\"></xref> class contains a collection of objects.</p>\n"
  example:
  - "\n<p>The following code example demonstrates how to implement the <xref href=\"System.ComponentModel.IListSource\" data-throw-if-not-resolved=\"false\"></xref> interface. A component named <code>EmployeeListSource</code> indicates that it does not contain an <xref href=\"System.Collections.IList\" data-throw-if-not-resolved=\"false\"></xref> for data binding by returning <strong>false</strong> from the <xref href=\"System.ComponentModel.IListSource.ContainsListCollection\" data-throw-if-not-resolved=\"false\"></xref> method. For a full code listing, see How to: Implement the IListSource Interface.</p>System.ComponentModel.IListSource#3"
  syntax:
    content: bool ContainsListCollection { get; }
    content.vb: ReadOnly Property ContainsListCollection As Boolean
    parameters: []
    return:
      type: System.Boolean
  seealso:
  - type: System.ComponentModel.IListSource
    commentId: T:System.ComponentModel.IListSource
  - type: System.ComponentModel.ITypedList
    commentId: T:System.ComponentModel.ITypedList
  - type: System.ComponentModel.BindingList`1
    commentId: T:System.ComponentModel.BindingList`1
  - type: System.ComponentModel.IBindingList
    commentId: T:System.ComponentModel.IBindingList
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: System.ComponentModel.IListSource.GetList
  commentId: M:System.ComponentModel.IListSource.GetList
  id: GetList
  parent: System.ComponentModel.IListSource
  langs:
  - csharp
  - vb
  name: GetList()
  fullName: System.ComponentModel.IListSource.GetList()
  type: Method
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/IListSource.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetList
    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/IListSource.cs
    startLine: 16
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: "\n<p>Returns an <xref href=\"System.Collections.IList\" data-throw-if-not-resolved=\"false\"></xref> that can be bound to a data source from an object that does not implement an <xref href=\"System.Collections.IList\" data-throw-if-not-resolved=\"false\"></xref> itself.</p>\n"
  example:
  - "\n<p>The following code example demonstrates how to implement the <xref href=\"System.ComponentModel.IListSource\" data-throw-if-not-resolved=\"false\"></xref> interface. A component named <code>EmployeeListSource</code> exposes an <xref href=\"System.Collections.IList\" data-throw-if-not-resolved=\"false\"></xref> for data binding by implementing the <xref href=\"System.ComponentModel.IListSource.GetList\" data-throw-if-not-resolved=\"false\"></xref> method. For a full code listing, see How to: Implement the IListSource Interface.</p>System.ComponentModel.IListSource#4"
  syntax:
    content: IList GetList()
    content.vb: Function GetList As IList
    return:
      type: System.Collections.IList
  seealso:
  - type: System.ComponentModel.IListSource
    commentId: T:System.ComponentModel.IListSource
  - type: System.ComponentModel.ITypedList
    commentId: T:System.ComponentModel.ITypedList
  - type: System.ComponentModel.BindingList`1
    commentId: T:System.ComponentModel.BindingList`1
  - type: System.ComponentModel.IBindingList
    commentId: T:System.ComponentModel.IBindingList
references:
- uid: System.ComponentModel
  isExternal: false
  name: System.ComponentModel
  fullName: System.ComponentModel
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  fullName: System.Boolean
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Collections.IList
  parent: System.Collections
  isExternal: false
  name: IList
  fullName: System.Collections.IList
- uid: System.Collections
  isExternal: false
  name: System.Collections
  fullName: System.Collections
