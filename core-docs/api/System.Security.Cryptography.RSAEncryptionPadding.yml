items:
- uid: System.Security.Cryptography.RSAEncryptionPadding
  commentId: T:System.Security.Cryptography.RSAEncryptionPadding
  id: RSAEncryptionPadding
  parent: System.Security.Cryptography
  children:
  - System.Security.Cryptography.RSAEncryptionPadding.CreateOaep(System.Security.Cryptography.HashAlgorithmName)
  - System.Security.Cryptography.RSAEncryptionPadding.Equals(System.Object)
  - System.Security.Cryptography.RSAEncryptionPadding.Equals(System.Security.Cryptography.RSAEncryptionPadding)
  - System.Security.Cryptography.RSAEncryptionPadding.GetHashCode
  - System.Security.Cryptography.RSAEncryptionPadding.Mode
  - System.Security.Cryptography.RSAEncryptionPadding.OaepHashAlgorithm
  - System.Security.Cryptography.RSAEncryptionPadding.OaepSHA1
  - System.Security.Cryptography.RSAEncryptionPadding.OaepSHA256
  - System.Security.Cryptography.RSAEncryptionPadding.OaepSHA384
  - System.Security.Cryptography.RSAEncryptionPadding.OaepSHA512
  - System.Security.Cryptography.RSAEncryptionPadding.op_Equality(System.Security.Cryptography.RSAEncryptionPadding,System.Security.Cryptography.RSAEncryptionPadding)
  - System.Security.Cryptography.RSAEncryptionPadding.op_Inequality(System.Security.Cryptography.RSAEncryptionPadding,System.Security.Cryptography.RSAEncryptionPadding)
  - System.Security.Cryptography.RSAEncryptionPadding.Pkcs1
  - System.Security.Cryptography.RSAEncryptionPadding.ToString
  langs:
  - csharp
  - vb
  name: RSAEncryptionPadding
  fullName: System.Security.Cryptography.RSAEncryptionPadding
  type: Class
  source:
    remote:
      path: src/System.Security.Cryptography.Algorithms/src/System/Security/Cryptography/RSAEncryptionPadding.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: RSAEncryptionPadding
    path: src/System.Security.Cryptography.Algorithms/src/System/Security/Cryptography/RSAEncryptionPadding.cs
    startLine: 9
  assemblies:
  - System.Security.Cryptography.Algorithms
  namespace: System.Security.Cryptography
  summary: "\n<p>Specifies the padding mode and parameters to use with RSA encryption or decryption operations. </p>\n"
  syntax:
    content: 'public sealed class RSAEncryptionPadding : IEquatable<RSAEncryptionPadding>'
    content.vb: >-
      Public NotInheritable Class RSAEncryptionPadding
          Inherits IEquatable(Of RSAEncryptionPadding)
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: System.Security.Cryptography.RSAEncryptionPadding.Mode
  commentId: P:System.Security.Cryptography.RSAEncryptionPadding.Mode
  id: Mode
  parent: System.Security.Cryptography.RSAEncryptionPadding
  langs:
  - csharp
  - vb
  name: Mode
  fullName: System.Security.Cryptography.RSAEncryptionPadding.Mode
  type: Property
  source:
    remote:
      path: src/System.Security.Cryptography.Algorithms/src/System/Security/Cryptography/RSAEncryptionPadding.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Mode
    path: src/System.Security.Cryptography.Algorithms/src/System/Security/Cryptography/RSAEncryptionPadding.cs
    startLine: 68
  assemblies:
  - System.Security.Cryptography.Algorithms
  namespace: System.Security.Cryptography
  summary: "\n<p>Gets the padding mode represented by this <xref href=\"System.Security.Cryptography.RSAEncryptionPadding\" data-throw-if-not-resolved=\"false\"></xref> instance. </p>\n"
  syntax:
    content: public RSAEncryptionPaddingMode Mode { get; }
    content.vb: Public ReadOnly Property Mode As RSAEncryptionPaddingMode
    parameters: []
    return:
      type: System.Security.Cryptography.RSAEncryptionPaddingMode
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Security.Cryptography.RSAEncryptionPadding.OaepHashAlgorithm
  commentId: P:System.Security.Cryptography.RSAEncryptionPadding.OaepHashAlgorithm
  id: OaepHashAlgorithm
  parent: System.Security.Cryptography.RSAEncryptionPadding
  langs:
  - csharp
  - vb
  name: OaepHashAlgorithm
  fullName: System.Security.Cryptography.RSAEncryptionPadding.OaepHashAlgorithm
  type: Property
  source:
    remote:
      path: src/System.Security.Cryptography.Algorithms/src/System/Security/Cryptography/RSAEncryptionPadding.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: OaepHashAlgorithm
    path: src/System.Security.Cryptography.Algorithms/src/System/Security/Cryptography/RSAEncryptionPadding.cs
    startLine: 79
  assemblies:
  - System.Security.Cryptography.Algorithms
  namespace: System.Security.Cryptography
  summary: "\n<p>Gets the hash algorithm used in conjunction with the <xref href=\"System.Security.Cryptography.RSAEncryptionPaddingMode.Oaep\" data-throw-if-not-resolved=\"false\"></xref> padding mode. If the value of the <xref href=\"System.Security.Cryptography.RSAEncryptionPadding.Mode\" data-throw-if-not-resolved=\"false\"></xref> property is not <xref href=\"System.Security.Cryptography.RSAEncryptionPaddingMode.Oaep\" data-throw-if-not-resolved=\"false\"></xref>, <xref href=\"System.Security.Cryptography.HashAlgorithmName.Name\" data-throw-if-not-resolved=\"false\"></xref> is <strong>null</strong>. </p>\n"
  remarks: "\n<p></p>\n"
  syntax:
    content: public HashAlgorithmName OaepHashAlgorithm { get; }
    content.vb: Public ReadOnly Property OaepHashAlgorithm As HashAlgorithmName
    parameters: []
    return:
      type: HashAlgorithmName
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Security.Cryptography.RSAEncryptionPadding.OaepSHA1
  commentId: P:System.Security.Cryptography.RSAEncryptionPadding.OaepSHA1
  id: OaepSHA1
  parent: System.Security.Cryptography.RSAEncryptionPadding
  langs:
  - csharp
  - vb
  name: OaepSHA1
  fullName: System.Security.Cryptography.RSAEncryptionPadding.OaepSHA1
  type: Property
  source:
    remote:
      path: src/System.Security.Cryptography.Algorithms/src/System/Security/Cryptography/RSAEncryptionPadding.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: OaepSHA1
    path: src/System.Security.Cryptography.Algorithms/src/System/Security/Cryptography/RSAEncryptionPadding.cs
    startLine: 25
  assemblies:
  - System.Security.Cryptography.Algorithms
  namespace: System.Security.Cryptography
  summary: "\n<p>Gets an object that represents the Optimal Asymmetric Encryption Padding (OAEP) encryption standard with a SHA1 hash algorithm.</p>\n"
  syntax:
    content: public static RSAEncryptionPadding OaepSHA1 { get; }
    content.vb: Public Shared ReadOnly Property OaepSHA1 As RSAEncryptionPadding
    parameters: []
    return:
      type: System.Security.Cryptography.RSAEncryptionPadding
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: System.Security.Cryptography.RSAEncryptionPadding.OaepSHA256
  commentId: P:System.Security.Cryptography.RSAEncryptionPadding.OaepSHA256
  id: OaepSHA256
  parent: System.Security.Cryptography.RSAEncryptionPadding
  langs:
  - csharp
  - vb
  name: OaepSHA256
  fullName: System.Security.Cryptography.RSAEncryptionPadding.OaepSHA256
  type: Property
  source:
    remote:
      path: src/System.Security.Cryptography.Algorithms/src/System/Security/Cryptography/RSAEncryptionPadding.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: OaepSHA256
    path: src/System.Security.Cryptography.Algorithms/src/System/Security/Cryptography/RSAEncryptionPadding.cs
    startLine: 30
  assemblies:
  - System.Security.Cryptography.Algorithms
  namespace: System.Security.Cryptography
  summary: "\n<p>Gets an object that represents the Optimal Asymmetric Encryption Padding (OAEP) encryption standard with a SHA256 hash algorithm. </p>\n"
  syntax:
    content: public static RSAEncryptionPadding OaepSHA256 { get; }
    content.vb: Public Shared ReadOnly Property OaepSHA256 As RSAEncryptionPadding
    parameters: []
    return:
      type: System.Security.Cryptography.RSAEncryptionPadding
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: System.Security.Cryptography.RSAEncryptionPadding.OaepSHA384
  commentId: P:System.Security.Cryptography.RSAEncryptionPadding.OaepSHA384
  id: OaepSHA384
  parent: System.Security.Cryptography.RSAEncryptionPadding
  langs:
  - csharp
  - vb
  name: OaepSHA384
  fullName: System.Security.Cryptography.RSAEncryptionPadding.OaepSHA384
  type: Property
  source:
    remote:
      path: src/System.Security.Cryptography.Algorithms/src/System/Security/Cryptography/RSAEncryptionPadding.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: OaepSHA384
    path: src/System.Security.Cryptography.Algorithms/src/System/Security/Cryptography/RSAEncryptionPadding.cs
    startLine: 35
  assemblies:
  - System.Security.Cryptography.Algorithms
  namespace: System.Security.Cryptography
  summary: "\n<p>Gets an object that represents the Optimal Asymmetric Encryption Padding (OAEP) encryption standard with a SHA-384 hash algorithm.</p>\n"
  syntax:
    content: public static RSAEncryptionPadding OaepSHA384 { get; }
    content.vb: Public Shared ReadOnly Property OaepSHA384 As RSAEncryptionPadding
    parameters: []
    return:
      type: System.Security.Cryptography.RSAEncryptionPadding
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: System.Security.Cryptography.RSAEncryptionPadding.OaepSHA512
  commentId: P:System.Security.Cryptography.RSAEncryptionPadding.OaepSHA512
  id: OaepSHA512
  parent: System.Security.Cryptography.RSAEncryptionPadding
  langs:
  - csharp
  - vb
  name: OaepSHA512
  fullName: System.Security.Cryptography.RSAEncryptionPadding.OaepSHA512
  type: Property
  source:
    remote:
      path: src/System.Security.Cryptography.Algorithms/src/System/Security/Cryptography/RSAEncryptionPadding.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: OaepSHA512
    path: src/System.Security.Cryptography.Algorithms/src/System/Security/Cryptography/RSAEncryptionPadding.cs
    startLine: 40
  assemblies:
  - System.Security.Cryptography.Algorithms
  namespace: System.Security.Cryptography
  summary: "\n<p>Gets an object that represents the Optimal Asymmetric Encryption Padding (OAEP) encryption standard with a SHA512 hash algorithm. </p>\n"
  syntax:
    content: public static RSAEncryptionPadding OaepSHA512 { get; }
    content.vb: Public Shared ReadOnly Property OaepSHA512 As RSAEncryptionPadding
    parameters: []
    return:
      type: System.Security.Cryptography.RSAEncryptionPadding
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: System.Security.Cryptography.RSAEncryptionPadding.Pkcs1
  commentId: P:System.Security.Cryptography.RSAEncryptionPadding.Pkcs1
  id: Pkcs1
  parent: System.Security.Cryptography.RSAEncryptionPadding
  langs:
  - csharp
  - vb
  name: Pkcs1
  fullName: System.Security.Cryptography.RSAEncryptionPadding.Pkcs1
  type: Property
  source:
    remote:
      path: src/System.Security.Cryptography.Algorithms/src/System/Security/Cryptography/RSAEncryptionPadding.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Pkcs1
    path: src/System.Security.Cryptography.Algorithms/src/System/Security/Cryptography/RSAEncryptionPadding.cs
    startLine: 20
  assemblies:
  - System.Security.Cryptography.Algorithms
  namespace: System.Security.Cryptography
  summary: "\n<p>Gets an object that represents the PKCS #1 encryption standard. </p>\n"
  syntax:
    content: public static RSAEncryptionPadding Pkcs1 { get; }
    content.vb: Public Shared ReadOnly Property Pkcs1 As RSAEncryptionPadding
    parameters: []
    return:
      type: System.Security.Cryptography.RSAEncryptionPadding
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: System.Security.Cryptography.RSAEncryptionPadding.CreateOaep(System.Security.Cryptography.HashAlgorithmName)
  commentId: M:System.Security.Cryptography.RSAEncryptionPadding.CreateOaep(System.Security.Cryptography.HashAlgorithmName)
  id: CreateOaep(System.Security.Cryptography.HashAlgorithmName)
  parent: System.Security.Cryptography.RSAEncryptionPadding
  langs:
  - csharp
  - vb
  name: CreateOaep(HashAlgorithmName)
  fullName: System.Security.Cryptography.RSAEncryptionPadding.CreateOaep(System.Security.Cryptography.HashAlgorithmName)
  type: Method
  source:
    remote:
      path: src/System.Security.Cryptography.Algorithms/ref/4.0/System.Security.Cryptography.Algorithms.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CreateOaep
    path: src/System.Security.Cryptography.Algorithms/ref/4.0/System.Security.Cryptography.Algorithms.cs
    startLine: 146
  assemblies:
  - System.Security.Cryptography.Algorithms
  namespace: System.Security.Cryptography
  summary: "\n<p>Creates a new <xref href=\"System.Security.Cryptography.RSAEncryptionPadding\" data-throw-if-not-resolved=\"false\"></xref> instance whose <xref href=\"System.Security.Cryptography.RSAEncryptionPadding.Mode\" data-throw-if-not-resolved=\"false\"></xref> is <xref href=\"System.Security.Cryptography.RSAEncryptionPaddingMode.Oaep\" data-throw-if-not-resolved=\"false\"></xref> with the given hash algorithm. </p>\n"
  syntax:
    content: public static RSAEncryptionPadding CreateOaep(HashAlgorithmName hashAlgorithm)
    content.vb: Public Shared Function CreateOaep(hashAlgorithm As HashAlgorithmName) As RSAEncryptionPadding
    parameters:
    - id: hashAlgorithm
      type: System.Security.Cryptography.HashAlgorithmName
      description: "\n<p>The hash algorithm. </p>\n"
    return:
      type: System.Security.Cryptography.RSAEncryptionPadding
      description: "\n<p>An object whose mode is <xref href=\"System.Security.Cryptography.RSAEncryptionPadding.Mode\" data-throw-if-not-resolved=\"false\"></xref> is <xref href=\"System.Security.Cryptography.RSAEncryptionPaddingMode.Oaep\" data-throw-if-not-resolved=\"false\"></xref> with the hash algorithm specified by <em>hashAlgorithm</em>. .</p>\n"
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<p>The <xref href=\"System.Security.Cryptography.HashAlgorithmName.Name\" data-throw-if-not-resolved=\"false\"></xref> property of <em>hashAlgorithm</em> is either <strong>null</strong> or <xref href=\"System.String.Empty\" data-throw-if-not-resolved=\"false\"></xref>. </p>\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Security.Cryptography.RSAEncryptionPadding.Equals(System.Object)
  commentId: M:System.Security.Cryptography.RSAEncryptionPadding.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Security.Cryptography.RSAEncryptionPadding
  langs:
  - csharp
  - vb
  name: Equals(Object)
  fullName: System.Security.Cryptography.RSAEncryptionPadding.Equals(System.Object)
  type: Method
  source:
    remote:
      path: src/System.Security.Cryptography.Algorithms/src/System/Security/Cryptography/RSAEncryptionPadding.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Equals
    path: src/System.Security.Cryptography.Algorithms/src/System/Security/Cryptography/RSAEncryptionPadding.cs
    startLine: 95
  assemblies:
  - System.Security.Cryptography.Algorithms
  namespace: System.Security.Cryptography
  summary: "\n<p>Determines whether the current instance is equal to the specified object. </p>\n"
  remarks: "\n<p>\n<em>obj</em> is equal to the current instance if it is a <xref href=\"System.Security.Cryptography.RSAEncryptionPadding\" data-throw-if-not-resolved=\"false\"></xref> object and the two objects have identical <xref href=\"System.Security.Cryptography.RSAEncryptionPadding.Mode\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"System.Security.Cryptography.RSAEncryptionPadding.OaepHashAlgorithm\" data-throw-if-not-resolved=\"false\"></xref> property values. </p>\n"
  syntax:
    content: public override bool Equals(object obj)
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
    parameters:
    - id: obj
      type: System.Object
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Security.Cryptography.RSAEncryptionPadding.Equals(System.Security.Cryptography.RSAEncryptionPadding)
  commentId: M:System.Security.Cryptography.RSAEncryptionPadding.Equals(System.Security.Cryptography.RSAEncryptionPadding)
  id: Equals(System.Security.Cryptography.RSAEncryptionPadding)
  parent: System.Security.Cryptography.RSAEncryptionPadding
  langs:
  - csharp
  - vb
  name: Equals(RSAEncryptionPadding)
  fullName: System.Security.Cryptography.RSAEncryptionPadding.Equals(System.Security.Cryptography.RSAEncryptionPadding)
  type: Method
  source:
    remote:
      path: src/System.Security.Cryptography.Algorithms/src/System/Security/Cryptography/RSAEncryptionPadding.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Equals
    path: src/System.Security.Cryptography.Algorithms/src/System/Security/Cryptography/RSAEncryptionPadding.cs
    startLine: 100
  assemblies:
  - System.Security.Cryptography.Algorithms
  namespace: System.Security.Cryptography
  summary: "\n<p>Determines whether the current instance is equal to the specified <xref href=\"System.Security.Cryptography.RSAEncryptionPadding\" data-throw-if-not-resolved=\"false\"></xref> object. </p>\n"
  remarks: "\n<p>\n<em>instance</em> and the current instance are equal if they have identical <xref href=\"System.Security.Cryptography.RSAEncryptionPadding.Mode\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"System.Security.Cryptography.RSAEncryptionPadding.OaepHashAlgorithm\" data-throw-if-not-resolved=\"false\"></xref> property values. </p>\n"
  syntax:
    content: public bool Equals(RSAEncryptionPadding other)
    content.vb: Public Function Equals(other As RSAEncryptionPadding) As Boolean
    parameters:
    - id: other
      type: System.Security.Cryptography.RSAEncryptionPadding
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Security.Cryptography.RSAEncryptionPadding.GetHashCode
  commentId: M:System.Security.Cryptography.RSAEncryptionPadding.GetHashCode
  id: GetHashCode
  parent: System.Security.Cryptography.RSAEncryptionPadding
  langs:
  - csharp
  - vb
  name: GetHashCode()
  fullName: System.Security.Cryptography.RSAEncryptionPadding.GetHashCode()
  type: Method
  source:
    remote:
      path: src/System.Security.Cryptography.Algorithms/src/System/Security/Cryptography/RSAEncryptionPadding.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetHashCode
    path: src/System.Security.Cryptography.Algorithms/src/System/Security/Cryptography/RSAEncryptionPadding.cs
    startLine: 84
  assemblies:
  - System.Security.Cryptography.Algorithms
  namespace: System.Security.Cryptography
  summary: "\n<p>Returns the hash code of this <xref href=\"System.Security.Cryptography.RSAEncryptionPadding\" data-throw-if-not-resolved=\"false\"></xref> object. </p>\n"
  syntax:
    content: public override int GetHashCode()
    content.vb: Public Overrides Function GetHashCode As Integer
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Security.Cryptography.RSAEncryptionPadding.op_Equality(System.Security.Cryptography.RSAEncryptionPadding,System.Security.Cryptography.RSAEncryptionPadding)
  commentId: M:System.Security.Cryptography.RSAEncryptionPadding.op_Equality(System.Security.Cryptography.RSAEncryptionPadding,System.Security.Cryptography.RSAEncryptionPadding)
  id: op_Equality(System.Security.Cryptography.RSAEncryptionPadding,System.Security.Cryptography.RSAEncryptionPadding)
  parent: System.Security.Cryptography.RSAEncryptionPadding
  langs:
  - csharp
  - vb
  name: Equality(RSAEncryptionPadding, RSAEncryptionPadding)
  fullName: System.Security.Cryptography.RSAEncryptionPadding.Equality(System.Security.Cryptography.RSAEncryptionPadding, System.Security.Cryptography.RSAEncryptionPadding)
  type: Operator
  source:
    remote:
      path: src/System.Security.Cryptography.Algorithms/src/System/Security/Cryptography/RSAEncryptionPadding.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_Equality
    path: src/System.Security.Cryptography.Algorithms/src/System/Security/Cryptography/RSAEncryptionPadding.cs
    startLine: 107
  assemblies:
  - System.Security.Cryptography.Algorithms
  namespace: System.Security.Cryptography
  summary: "\n<p>Indicates whether two specified <xref href=\"System.Security.Cryptography.RSAEncryptionPadding\" data-throw-if-not-resolved=\"false\"></xref> objects are equal. </p>\n"
  remarks: "\n<p>Two <xref href=\"System.Security.Cryptography.RSAEncryptionPadding\" data-throw-if-not-resolved=\"false\"></xref> objects are equal if their <xref href=\"System.Security.Cryptography.RSAEncryptionPadding.Mode\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"System.Security.Cryptography.RSAEncryptionPadding.OaepHashAlgorithm\" data-throw-if-not-resolved=\"false\"></xref> property values are equal. </p>\n"
  syntax:
    content: public static bool operator ==(RSAEncryptionPadding left, RSAEncryptionPadding right)
    content.vb: Public Shared Operator =(left As RSAEncryptionPadding, right As RSAEncryptionPadding) As Boolean
    parameters:
    - id: left
      type: System.Security.Cryptography.RSAEncryptionPadding
    - id: right
      type: System.Security.Cryptography.RSAEncryptionPadding
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Security.Cryptography.RSAEncryptionPadding.op_Inequality(System.Security.Cryptography.RSAEncryptionPadding,System.Security.Cryptography.RSAEncryptionPadding)
  commentId: M:System.Security.Cryptography.RSAEncryptionPadding.op_Inequality(System.Security.Cryptography.RSAEncryptionPadding,System.Security.Cryptography.RSAEncryptionPadding)
  id: op_Inequality(System.Security.Cryptography.RSAEncryptionPadding,System.Security.Cryptography.RSAEncryptionPadding)
  parent: System.Security.Cryptography.RSAEncryptionPadding
  langs:
  - csharp
  - vb
  name: Inequality(RSAEncryptionPadding, RSAEncryptionPadding)
  fullName: System.Security.Cryptography.RSAEncryptionPadding.Inequality(System.Security.Cryptography.RSAEncryptionPadding, System.Security.Cryptography.RSAEncryptionPadding)
  type: Operator
  source:
    remote:
      path: src/System.Security.Cryptography.Algorithms/src/System/Security/Cryptography/RSAEncryptionPadding.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_Inequality
    path: src/System.Security.Cryptography.Algorithms/src/System/Security/Cryptography/RSAEncryptionPadding.cs
    startLine: 117
  assemblies:
  - System.Security.Cryptography.Algorithms
  namespace: System.Security.Cryptography
  summary: "\n<p>Indicates whether two specified <xref href=\"System.Security.Cryptography.RSAEncryptionPadding\" data-throw-if-not-resolved=\"false\"></xref> objects are unequal. </p>\n"
  remarks: "\n<p>Two <xref href=\"System.Security.Cryptography.RSAEncryptionPadding\" data-throw-if-not-resolved=\"false\"></xref> objects are not equal if their <xref href=\"System.Security.Cryptography.RSAEncryptionPadding.Mode\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"System.Security.Cryptography.RSAEncryptionPadding.OaepHashAlgorithm\" data-throw-if-not-resolved=\"false\"></xref> property values are not equal. </p>\n"
  syntax:
    content: public static bool operator !=(RSAEncryptionPadding left, RSAEncryptionPadding right)
    content.vb: Public Shared Operator <>(left As RSAEncryptionPadding, right As RSAEncryptionPadding) As Boolean
    parameters:
    - id: left
      type: System.Security.Cryptography.RSAEncryptionPadding
    - id: right
      type: System.Security.Cryptography.RSAEncryptionPadding
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Security.Cryptography.RSAEncryptionPadding.ToString
  commentId: M:System.Security.Cryptography.RSAEncryptionPadding.ToString
  id: ToString
  parent: System.Security.Cryptography.RSAEncryptionPadding
  langs:
  - csharp
  - vb
  name: ToString()
  fullName: System.Security.Cryptography.RSAEncryptionPadding.ToString()
  type: Method
  source:
    remote:
      path: src/System.Security.Cryptography.Algorithms/src/System/Security/Cryptography/RSAEncryptionPadding.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ToString
    path: src/System.Security.Cryptography.Algorithms/src/System/Security/Cryptography/RSAEncryptionPadding.cs
    startLine: 122
  assemblies:
  - System.Security.Cryptography.Algorithms
  namespace: System.Security.Cryptography
  summary: "\n<p>Returns the string representation of the current <xref href=\"System.Security.Cryptography.RSAEncryptionPadding\" data-throw-if-not-resolved=\"false\"></xref> instance. </p>\n"
  remarks: "\n<p>The string representation of a <xref href=\"System.Security.Cryptography.RSAEncryptionPadding\" data-throw-if-not-resolved=\"false\"></xref> object is the concatenation of its <xref href=\"System.Security.Cryptography.RSAEncryptionPadding.Mode\" data-throw-if-not-resolved=\"false\"></xref> and <strong>OaepHashAlgorithm.Name</strong> properties. </p>\n"
  syntax:
    content: public override string ToString()
    content.vb: Public Overrides Function ToString As String
    return:
      type: System.String
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: System.Security.Cryptography
  isExternal: false
  name: System.Security.Cryptography
  fullName: System.Security.Cryptography
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Security.Cryptography.RSAEncryptionPaddingMode
  parent: System.Security.Cryptography
  isExternal: false
  name: RSAEncryptionPaddingMode
  fullName: System.Security.Cryptography.RSAEncryptionPaddingMode
- uid: System.Security.Cryptography.HashAlgorithmName
  parent: System.Security.Cryptography
  isExternal: false
  name: HashAlgorithmName
  fullName: System.Security.Cryptography.HashAlgorithmName
- uid: System.Security.Cryptography.RSAEncryptionPadding
  parent: System.Security.Cryptography
  isExternal: false
  name: RSAEncryptionPadding
  fullName: System.Security.Cryptography.RSAEncryptionPadding
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  fullName: System.Boolean
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  fullName: System.Int32
- uid: System.String
  parent: System
  isExternal: false
  name: String
  fullName: System.String
- uid: System.ArgumentException
  parent: System
  isExternal: false
  name: ArgumentException
  fullName: System.ArgumentException
