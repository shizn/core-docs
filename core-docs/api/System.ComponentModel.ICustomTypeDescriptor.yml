items:
- uid: System.ComponentModel.ICustomTypeDescriptor
  commentId: T:System.ComponentModel.ICustomTypeDescriptor
  id: ICustomTypeDescriptor
  parent: System.ComponentModel
  children:
  - System.ComponentModel.ICustomTypeDescriptor.GetAttributes
  - System.ComponentModel.ICustomTypeDescriptor.GetClassName
  - System.ComponentModel.ICustomTypeDescriptor.GetComponentName
  - System.ComponentModel.ICustomTypeDescriptor.GetConverter
  - System.ComponentModel.ICustomTypeDescriptor.GetDefaultEvent
  - System.ComponentModel.ICustomTypeDescriptor.GetDefaultProperty
  - System.ComponentModel.ICustomTypeDescriptor.GetEditor(System.Type)
  - System.ComponentModel.ICustomTypeDescriptor.GetEvents
  - System.ComponentModel.ICustomTypeDescriptor.GetEvents(System.Attribute[])
  - System.ComponentModel.ICustomTypeDescriptor.GetProperties
  - System.ComponentModel.ICustomTypeDescriptor.GetProperties(System.Attribute[])
  - System.ComponentModel.ICustomTypeDescriptor.GetPropertyOwner(System.ComponentModel.PropertyDescriptor)
  langs:
  - csharp
  - vb
  name: ICustomTypeDescriptor
  fullName: System.ComponentModel.ICustomTypeDescriptor
  type: Interface
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/ICustomTypeDescriptor.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ICustomTypeDescriptor
    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/ICustomTypeDescriptor.cs
    startLine: 9
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: "\n<p>Provides an interface that supplies dynamic custom type information for an object.</p>\n"
  remarks: "\n<p>The <xref href=\"System.ComponentModel.ICustomTypeDescriptor\" data-throw-if-not-resolved=\"false\"></xref> interface allows an object to provide type information about itself. Typically, this interface is used when an object needs dynamic type information. In contrast, the <xref href=\"System.ComponentModel.TypeDescriptor\" data-throw-if-not-resolved=\"false\"></xref> class provides static type information that is obtained from metadata.</p>\n<p>For example, <xref href=\"System.ComponentModel.ICustomTypeDescriptor\" data-throw-if-not-resolved=\"false\"></xref> is used in the .NET Framework to provide type information for COM objects. COM objects do not support properties or attributes. Therefore, the .NET Framework uses <xref href=\"System.ComponentModel.ICustomTypeDescriptor\" data-throw-if-not-resolved=\"false\"></xref> to implement properties and attributes for COM objects. </p>\n<p>To provide dynamic custom type information, a class can implement <xref href=\"System.ComponentModel.ICustomTypeDescriptor\" data-throw-if-not-resolved=\"false\"></xref> or derive from the <xref href=\"System.ComponentModel.CustomTypeDescriptor\" data-throw-if-not-resolved=\"false\"></xref> class, which provides a simple implementation of this interface.</p>\n<p>There is no design-time support for data binding to objects that implement the <xref href=\"System.ComponentModel.ICustomTypeDescriptor\" data-throw-if-not-resolved=\"false\"></xref> interface. In addition, when binding to a runtime instance of <xref href=\"System.ComponentModel.ICustomTypeDescriptor\" data-throw-if-not-resolved=\"false\"></xref>, the public properties of the underlying type are ignored.</p>\n"
  syntax:
    content: public interface ICustomTypeDescriptor
    content.vb: Public Interface ICustomTypeDescriptor
  seealso:
  - type: System.ComponentModel.TypeDescriptor
    commentId: T:System.ComponentModel.TypeDescriptor
  - type: System.ComponentModel.CustomTypeDescriptor
    commentId: T:System.ComponentModel.CustomTypeDescriptor
  - type: System.ComponentModel.TypeDescriptionProvider
    commentId: T:System.ComponentModel.TypeDescriptionProvider
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: System.ComponentModel.ICustomTypeDescriptor.GetAttributes
  commentId: M:System.ComponentModel.ICustomTypeDescriptor.GetAttributes
  id: GetAttributes
  parent: System.ComponentModel.ICustomTypeDescriptor
  langs:
  - csharp
  - vb
  name: GetAttributes()
  fullName: System.ComponentModel.ICustomTypeDescriptor.GetAttributes()
  type: Method
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/ICustomTypeDescriptor.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetAttributes
    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/ICustomTypeDescriptor.cs
    startLine: 15
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: "\n<p>Returns a collection of custom attributes for this instance of a component.</p>\n"
  remarks: "\n<p>The return value is never <strong>null</strong>.</p>\n<p>Implementers can return an empty <xref href=\"System.ComponentModel.AttributeCollection\" data-throw-if-not-resolved=\"false\"></xref> if no custom attributes are specified for an object.</p>\n"
  syntax:
    content: AttributeCollection GetAttributes()
    content.vb: Function GetAttributes As AttributeCollection
    return:
      type: System.ComponentModel.AttributeCollection
  seealso:
  - type: System.Attribute
    commentId: T:System.Attribute
  - type: System.ComponentModel.AttributeCollection
    commentId: T:System.ComponentModel.AttributeCollection
- uid: System.ComponentModel.ICustomTypeDescriptor.GetClassName
  commentId: M:System.ComponentModel.ICustomTypeDescriptor.GetClassName
  id: GetClassName
  parent: System.ComponentModel.ICustomTypeDescriptor
  langs:
  - csharp
  - vb
  name: GetClassName()
  fullName: System.ComponentModel.ICustomTypeDescriptor.GetClassName()
  type: Method
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/ICustomTypeDescriptor.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetClassName
    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/ICustomTypeDescriptor.cs
    startLine: 20
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: "\n<p>Returns the class name of this instance of a component.</p>\n"
  remarks: "\n<p>If <strong>null</strong> is returned, use the type name from the <xref href=\"System.ComponentModel.ICustomTypeDescriptor.GetComponentName\" data-throw-if-not-resolved=\"false\"></xref> method.</p>\n"
  syntax:
    content: string GetClassName()
    content.vb: Function GetClassName As String
    return:
      type: System.String
  seealso:
  - type: System.ComponentModel.ICustomTypeDescriptor.GetComponentName
    commentId: M:System.ComponentModel.ICustomTypeDescriptor.GetComponentName
- uid: System.ComponentModel.ICustomTypeDescriptor.GetComponentName
  commentId: M:System.ComponentModel.ICustomTypeDescriptor.GetComponentName
  id: GetComponentName
  parent: System.ComponentModel.ICustomTypeDescriptor
  langs:
  - csharp
  - vb
  name: GetComponentName()
  fullName: System.ComponentModel.ICustomTypeDescriptor.GetComponentName()
  type: Method
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/ICustomTypeDescriptor.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetComponentName
    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/ICustomTypeDescriptor.cs
    startLine: 25
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: "\n<p>Returns the name of this instance of a component.</p>\n"
  remarks: "\n<p>If <strong>null</strong> is returned, use the default name.</p>\n"
  syntax:
    content: string GetComponentName()
    content.vb: Function GetComponentName As String
    return:
      type: System.String
  seealso:
  - type: System.ComponentModel.ICustomTypeDescriptor.GetClassName
    commentId: M:System.ComponentModel.ICustomTypeDescriptor.GetClassName
- uid: System.ComponentModel.ICustomTypeDescriptor.GetConverter
  commentId: M:System.ComponentModel.ICustomTypeDescriptor.GetConverter
  id: GetConverter
  parent: System.ComponentModel.ICustomTypeDescriptor
  langs:
  - csharp
  - vb
  name: GetConverter()
  fullName: System.ComponentModel.ICustomTypeDescriptor.GetConverter()
  type: Method
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/ICustomTypeDescriptor.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetConverter
    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/ICustomTypeDescriptor.cs
    startLine: 30
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: "\n<p>Returns a type converter for this instance of a component.</p>\n"
  remarks: "\n<p>If <strong>null</strong> is returned, use the default <xref href=\"System.ComponentModel.TypeConverter\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: TypeConverter GetConverter()
    content.vb: Function GetConverter As TypeConverter
    return:
      type: System.ComponentModel.TypeConverter
  seealso:
  - type: System.ComponentModel.TypeConverter
    commentId: T:System.ComponentModel.TypeConverter
  - type: System.ComponentModel.ICustomTypeDescriptor.GetEditor(System.Type)
    commentId: M:System.ComponentModel.ICustomTypeDescriptor.GetEditor(System.Type)
- uid: System.ComponentModel.ICustomTypeDescriptor.GetDefaultEvent
  commentId: M:System.ComponentModel.ICustomTypeDescriptor.GetDefaultEvent
  id: GetDefaultEvent
  parent: System.ComponentModel.ICustomTypeDescriptor
  langs:
  - csharp
  - vb
  name: GetDefaultEvent()
  fullName: System.ComponentModel.ICustomTypeDescriptor.GetDefaultEvent()
  type: Method
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/ICustomTypeDescriptor.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetDefaultEvent
    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/ICustomTypeDescriptor.cs
    startLine: 35
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: "\n<p>Returns the default event for this instance of a component.</p>\n"
  syntax:
    content: EventDescriptor GetDefaultEvent()
    content.vb: Function GetDefaultEvent As EventDescriptor
    return:
      type: System.ComponentModel.EventDescriptor
  seealso:
  - type: System.ComponentModel.EventDescriptor
    commentId: T:System.ComponentModel.EventDescriptor
  - type: System.ComponentModel.ICustomTypeDescriptor.GetDefaultProperty
    commentId: M:System.ComponentModel.ICustomTypeDescriptor.GetDefaultProperty
- uid: System.ComponentModel.ICustomTypeDescriptor.GetDefaultProperty
  commentId: M:System.ComponentModel.ICustomTypeDescriptor.GetDefaultProperty
  id: GetDefaultProperty
  parent: System.ComponentModel.ICustomTypeDescriptor
  langs:
  - csharp
  - vb
  name: GetDefaultProperty()
  fullName: System.ComponentModel.ICustomTypeDescriptor.GetDefaultProperty()
  type: Method
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/ICustomTypeDescriptor.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetDefaultProperty
    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/ICustomTypeDescriptor.cs
    startLine: 40
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: "\n<p>Returns the default property for this instance of a component.</p>\n"
  syntax:
    content: PropertyDescriptor GetDefaultProperty()
    content.vb: Function GetDefaultProperty As PropertyDescriptor
    return:
      type: System.ComponentModel.PropertyDescriptor
  seealso:
  - type: System.ComponentModel.PropertyDescriptor
    commentId: T:System.ComponentModel.PropertyDescriptor
  - type: System.ComponentModel.ICustomTypeDescriptor.GetDefaultEvent
    commentId: M:System.ComponentModel.ICustomTypeDescriptor.GetDefaultEvent
- uid: System.ComponentModel.ICustomTypeDescriptor.GetEditor(System.Type)
  commentId: M:System.ComponentModel.ICustomTypeDescriptor.GetEditor(System.Type)
  id: GetEditor(System.Type)
  parent: System.ComponentModel.ICustomTypeDescriptor
  langs:
  - csharp
  - vb
  name: GetEditor(Type)
  fullName: System.ComponentModel.ICustomTypeDescriptor.GetEditor(System.Type)
  type: Method
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/ICustomTypeDescriptor.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetEditor
    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/ICustomTypeDescriptor.cs
    startLine: 45
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: "\n<p>Returns an editor of the specified type for this instance of a component.</p>\n"
  remarks: "\n<p>The type of the <em>editorBaseType</em> parameter is usually <xref href=\"System.Drawing.Design.UITypeEditor\" data-throw-if-not-resolved=\"false\"></xref>, but you can also use other types (for example, <xref href=\"System.ComponentModel.ComponentEditor\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"System.ComponentModel.InstanceCreationEditor\" data-throw-if-not-resolved=\"false\"></xref>).</p>\n"
  syntax:
    content: object GetEditor(Type editorBaseType)
    content.vb: Function GetEditor(editorBaseType As Type) As Object
    parameters:
    - id: editorBaseType
      type: System.Type
    return:
      type: System.Object
  seealso:
  - type: System.ComponentModel.ICustomTypeDescriptor.GetConverter
    commentId: M:System.ComponentModel.ICustomTypeDescriptor.GetConverter
- uid: System.ComponentModel.ICustomTypeDescriptor.GetEvents
  commentId: M:System.ComponentModel.ICustomTypeDescriptor.GetEvents
  id: GetEvents
  parent: System.ComponentModel.ICustomTypeDescriptor
  langs:
  - csharp
  - vb
  name: GetEvents()
  fullName: System.ComponentModel.ICustomTypeDescriptor.GetEvents()
  type: Method
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/ICustomTypeDescriptor.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetEvents
    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/ICustomTypeDescriptor.cs
    startLine: 50
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: "\n<p>Returns the events for this instance of a component.</p>\n"
  remarks: "\n<p>The events for this instance can differ from the set of events that the class provides. For example, if the component is site-based, the site can add or remove additional events.</p>\n<p>Implementors can return <xref href=\"System.ComponentModel.EventDescriptorCollection.Empty\" data-throw-if-not-resolved=\"false\"></xref> if no properties are specified. This method should never return <strong>null</strong>.</p>\n"
  syntax:
    content: EventDescriptorCollection GetEvents()
    content.vb: Function GetEvents As EventDescriptorCollection
    return:
      type: System.ComponentModel.EventDescriptorCollection
  seealso:
  - type: System.ComponentModel.EventDescriptorCollection
    commentId: T:System.ComponentModel.EventDescriptorCollection
  - type: System.ComponentModel.ICustomTypeDescriptor.GetAttributes
    commentId: M:System.ComponentModel.ICustomTypeDescriptor.GetAttributes
  - type: System.ComponentModel.ICustomTypeDescriptor.GetDefaultEvent
    commentId: M:System.ComponentModel.ICustomTypeDescriptor.GetDefaultEvent
- uid: System.ComponentModel.ICustomTypeDescriptor.GetEvents(System.Attribute[])
  commentId: M:System.ComponentModel.ICustomTypeDescriptor.GetEvents(System.Attribute[])
  id: GetEvents(System.Attribute[])
  parent: System.ComponentModel.ICustomTypeDescriptor
  langs:
  - csharp
  - vb
  name: GetEvents(Attribute[])
  fullName: System.ComponentModel.ICustomTypeDescriptor.GetEvents(System.Attribute[])
  type: Method
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/ICustomTypeDescriptor.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetEvents
    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/ICustomTypeDescriptor.cs
    startLine: 56
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: "\n<p>Returns the events for this instance of a component using the specified attribute array as a filter.</p>\n"
  remarks: "\n<p>The events for this instance can differ from the set of events that the class provides. For example, if the component is site-based, the site can add or remove additional events.</p>\n<p>If an <xref href=\"System.Attribute\" data-throw-if-not-resolved=\"false\"></xref> is specified in the <em>attributes</em> array and the event does not have an instance of the class for that attribute, the returned array includes the event if the <xref href=\"System.Attribute\" data-throw-if-not-resolved=\"false\"></xref> is the default event.</p>\n"
  syntax:
    content: EventDescriptorCollection GetEvents(Attribute[] attributes)
    content.vb: Function GetEvents(attributes As Attribute()) As EventDescriptorCollection
    parameters:
    - id: attributes
      type: System.Attribute[]
    return:
      type: System.ComponentModel.EventDescriptorCollection
  seealso:
  - type: System.Attribute
    commentId: T:System.Attribute
  - type: System.ComponentModel.DefaultEventAttribute
    commentId: T:System.ComponentModel.DefaultEventAttribute
  - type: System.ComponentModel.EventDescriptorCollection
    commentId: T:System.ComponentModel.EventDescriptorCollection
  - type: System.ComponentModel.ICustomTypeDescriptor.GetAttributes
    commentId: M:System.ComponentModel.ICustomTypeDescriptor.GetAttributes
  - type: System.ComponentModel.ICustomTypeDescriptor.GetDefaultEvent
    commentId: M:System.ComponentModel.ICustomTypeDescriptor.GetDefaultEvent
  fullName.vb: System.ComponentModel.ICustomTypeDescriptor.GetEvents(System.Attribute())
  name.vb: GetEvents(Attribute())
- uid: System.ComponentModel.ICustomTypeDescriptor.GetProperties
  commentId: M:System.ComponentModel.ICustomTypeDescriptor.GetProperties
  id: GetProperties
  parent: System.ComponentModel.ICustomTypeDescriptor
  langs:
  - csharp
  - vb
  name: GetProperties()
  fullName: System.ComponentModel.ICustomTypeDescriptor.GetProperties()
  type: Method
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/ICustomTypeDescriptor.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetProperties
    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/ICustomTypeDescriptor.cs
    startLine: 61
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: "\n<p>Returns the properties for this instance of a component.</p>\n"
  remarks: "\n<p>The properties for this instance can differ from the set of properties that the class provides. For example, if the component is sited, the site can add or remove additional properties.</p>\n<p>Implementers can return <xref href=\"System.ComponentModel.PropertyDescriptorCollection.Empty\" data-throw-if-not-resolved=\"false\"></xref> if no properties are specified. This method should never return <strong>null</strong>.</p>\n"
  syntax:
    content: PropertyDescriptorCollection GetProperties()
    content.vb: Function GetProperties As PropertyDescriptorCollection
    return:
      type: System.ComponentModel.PropertyDescriptorCollection
  seealso:
  - type: System.ComponentModel.PropertyDescriptorCollection
    commentId: T:System.ComponentModel.PropertyDescriptorCollection
  - type: System.ComponentModel.ICustomTypeDescriptor.GetAttributes
    commentId: M:System.ComponentModel.ICustomTypeDescriptor.GetAttributes
  - type: System.ComponentModel.ICustomTypeDescriptor.GetDefaultProperty
    commentId: M:System.ComponentModel.ICustomTypeDescriptor.GetDefaultProperty
- uid: System.ComponentModel.ICustomTypeDescriptor.GetProperties(System.Attribute[])
  commentId: M:System.ComponentModel.ICustomTypeDescriptor.GetProperties(System.Attribute[])
  id: GetProperties(System.Attribute[])
  parent: System.ComponentModel.ICustomTypeDescriptor
  langs:
  - csharp
  - vb
  name: GetProperties(Attribute[])
  fullName: System.ComponentModel.ICustomTypeDescriptor.GetProperties(System.Attribute[])
  type: Method
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/ICustomTypeDescriptor.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetProperties
    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/ICustomTypeDescriptor.cs
    startLine: 66
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: "\n<p>Returns the properties for this instance of a component using the attribute array as a filter.</p>\n"
  remarks: "\n<p>The properties for this instance can differ from the set of properties that the class provides. For example, if the component is sited, the site can add or remove additional properties.</p>\n<p>If an <xref href=\"System.Attribute\" data-throw-if-not-resolved=\"false\"></xref> is specified in the <em>attributes</em> array and the property does not have an instance of the class for that attribute, the returned collection will include the property if the <xref href=\"System.Attribute\" data-throw-if-not-resolved=\"false\"></xref> is the default property.</p>\n<p>For filtering rules, see <xref href=\"System.ComponentModel.TypeDescriptor.GetProperties(System.Object,System.Attribute[])\" data-throw-if-not-resolved=\"false\"></xref>. </p>\n"
  syntax:
    content: PropertyDescriptorCollection GetProperties(Attribute[] attributes)
    content.vb: Function GetProperties(attributes As Attribute()) As PropertyDescriptorCollection
    parameters:
    - id: attributes
      type: System.Attribute[]
    return:
      type: System.ComponentModel.PropertyDescriptorCollection
  seealso:
  - type: System.ComponentModel.TypeDescriptor.GetProperties(System.Object,System.Attribute[])
    commentId: M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object,System.Attribute[])
  - type: System.Attribute
    commentId: T:System.Attribute
  - type: System.ComponentModel.DefaultPropertyAttribute
    commentId: T:System.ComponentModel.DefaultPropertyAttribute
  - type: System.ComponentModel.PropertyDescriptorCollection
    commentId: T:System.ComponentModel.PropertyDescriptorCollection
  - type: System.ComponentModel.ICustomTypeDescriptor.GetAttributes
    commentId: M:System.ComponentModel.ICustomTypeDescriptor.GetAttributes
  - type: System.ComponentModel.ICustomTypeDescriptor.GetDefaultProperty
    commentId: M:System.ComponentModel.ICustomTypeDescriptor.GetDefaultProperty
  fullName.vb: System.ComponentModel.ICustomTypeDescriptor.GetProperties(System.Attribute())
  name.vb: GetProperties(Attribute())
- uid: System.ComponentModel.ICustomTypeDescriptor.GetPropertyOwner(System.ComponentModel.PropertyDescriptor)
  commentId: M:System.ComponentModel.ICustomTypeDescriptor.GetPropertyOwner(System.ComponentModel.PropertyDescriptor)
  id: GetPropertyOwner(System.ComponentModel.PropertyDescriptor)
  parent: System.ComponentModel.ICustomTypeDescriptor
  langs:
  - csharp
  - vb
  name: GetPropertyOwner(PropertyDescriptor)
  fullName: System.ComponentModel.ICustomTypeDescriptor.GetPropertyOwner(System.ComponentModel.PropertyDescriptor)
  type: Method
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/ICustomTypeDescriptor.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetPropertyOwner
    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/ICustomTypeDescriptor.cs
    startLine: 71
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: "\n<p>Returns an object that contains the property described by the specified property descriptor.</p>\n"
  remarks: "\n<p>The <xref href=\"System.ComponentModel.ICustomTypeDescriptor.GetPropertyOwner(System.ComponentModel.PropertyDescriptor)\" data-throw-if-not-resolved=\"false\"></xref> method retrieves the object that contains the property member that is described by <xref href=\"System.ComponentModel.PropertyDescriptor\" data-throw-if-not-resolved=\"false\"></xref> parameter. Typically, this object is required for the <xref href=\"System.ComponentModel.PropertyDescriptor.GetValue(System.Object)\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"System.ComponentModel.PropertyDescriptor.SetValue(System.Object,System.Object)\" data-throw-if-not-resolved=\"false\"></xref> methods.</p>\n<p>This method should return an object that you can use as follows: </p>\n<pre><code> pd.GetValue(GetPropertyOwner(myPd));</code></pre>\n<p>If <code>myPd</code> is <strong>null</strong>, your implementation of the <xref href=\"System.ComponentModel.ICustomTypeDescriptor\" data-throw-if-not-resolved=\"false\"></xref> interface should return the default object (typically, the base object that exposes the properties and attributes).</p>\n"
  syntax:
    content: object GetPropertyOwner(PropertyDescriptor pd)
    content.vb: Function GetPropertyOwner(pd As PropertyDescriptor) As Object
    parameters:
    - id: pd
      type: System.ComponentModel.PropertyDescriptor
    return:
      type: System.Object
  seealso:
  - type: System.ComponentModel.PropertyDescriptor
    commentId: T:System.ComponentModel.PropertyDescriptor
references:
- uid: System.ComponentModel
  isExternal: false
  name: System.ComponentModel
  fullName: System.ComponentModel
- uid: System.ComponentModel.AttributeCollection
  parent: System.ComponentModel
  isExternal: false
  name: AttributeCollection
  fullName: System.ComponentModel.AttributeCollection
- uid: System.String
  parent: System
  isExternal: false
  name: String
  fullName: System.String
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.ComponentModel.TypeConverter
  parent: System.ComponentModel
  isExternal: false
  name: TypeConverter
  fullName: System.ComponentModel.TypeConverter
- uid: System.ComponentModel.EventDescriptor
  parent: System.ComponentModel
  isExternal: false
  name: EventDescriptor
  fullName: System.ComponentModel.EventDescriptor
- uid: System.ComponentModel.PropertyDescriptor
  parent: System.ComponentModel
  isExternal: false
  name: PropertyDescriptor
  fullName: System.ComponentModel.PropertyDescriptor
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  fullName: System.Type
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System.ComponentModel.EventDescriptorCollection
  parent: System.ComponentModel
  isExternal: false
  name: EventDescriptorCollection
  fullName: System.ComponentModel.EventDescriptorCollection
- uid: System.Attribute[]
  isExternal: true
  name: Attribute[]
  fullName: System.Attribute[]
  fullname.vb: System.Attribute()
  name.vb: Attribute()
  spec.csharp:
  - uid: System.Attribute
    name: Attribute
    fullName: System.Attribute
    isExternal: true
  - name: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Attribute
    name: Attribute
    fullName: System.Attribute
    isExternal: true
  - name: ()
    fullName: ()
- uid: System.ComponentModel.PropertyDescriptorCollection
  parent: System.ComponentModel
  isExternal: false
  name: PropertyDescriptorCollection
  fullName: System.ComponentModel.PropertyDescriptorCollection
