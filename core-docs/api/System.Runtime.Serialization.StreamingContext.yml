items:
- uid: System.Runtime.Serialization.StreamingContext
  commentId: T:System.Runtime.Serialization.StreamingContext
  id: StreamingContext
  parent: System.Runtime.Serialization
  children:
  - System.Runtime.Serialization.StreamingContext.Equals(System.Object)
  - System.Runtime.Serialization.StreamingContext.GetHashCode
  langs:
  - csharp
  - vb
  name: StreamingContext
  fullName: System.Runtime.Serialization.StreamingContext
  type: Struct
  source:
    remote:
      path: src/System.Runtime.Serialization.Primitives/src/System/Runtime/Serialization/StreamingContext.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: StreamingContext
    path: src/System.Runtime.Serialization.Primitives/src/System/Runtime/Serialization/StreamingContext.cs
    startLine: 18
  assemblies:
  - System.Runtime.Serialization.Primitives
  namespace: System.Runtime.Serialization
  summary: "\n<p>Describes the source and destination of a given serialized stream, and provides an additional caller-defined context.</p>\n"
  remarks: "\n<p>Indicates the source or destination of the bits that the formatter uses. Classes with surrogates or that implement <xref href=\"System.Runtime.Serialization.ISerializable\" data-throw-if-not-resolved=\"false\"></xref> can serialize or ignore fields and values based on the information stored in the streaming context. For example, a window handle is still valid if the <xref href=\"System.Runtime.Serialization.StreamingContext.State\" data-throw-if-not-resolved=\"false\"></xref> property is set to <strong>System.Runtime.Serialization.StreamingContextStates.CrossProcess</strong>. </p>\n"
  example:
  - "\n<p>The following code example demonstrates the <xref href=\"System.Runtime.Serialization.StreamingContext\" data-throw-if-not-resolved=\"false\"></xref> structure.</p>StreamingContext Example#1"
  syntax:
    content: public struct StreamingContext
    content.vb: Public Structure StreamingContext
  seealso:
  - type: System.Runtime.Serialization.StreamingContext.State
    commentId: P:System.Runtime.Serialization.StreamingContext.State
  modifiers.csharp:
  - public
  - struct
  modifiers.vb:
  - Public
  - Structure
- uid: System.Runtime.Serialization.StreamingContext.Equals(System.Object)
  commentId: M:System.Runtime.Serialization.StreamingContext.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Runtime.Serialization.StreamingContext
  langs:
  - csharp
  - vb
  name: Equals(Object)
  fullName: System.Runtime.Serialization.StreamingContext.Equals(System.Object)
  type: Method
  source:
    remote:
      path: src/System.Runtime.Serialization.Primitives/ref/System.Runtime.Serialization.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Equals
    path: src/System.Runtime.Serialization.Primitives/ref/System.Runtime.Serialization.Primitives.cs
    startLine: 116
  assemblies:
  - System.Runtime.Serialization.Primitives
  namespace: System.Runtime.Serialization
  summary: "\n<p>Determines whether two <xref href=\"System.Runtime.Serialization.StreamingContext\" data-throw-if-not-resolved=\"false\"></xref> instances contain the same values.</p>\n"
  remarks: "\n<p>Two code groups are equivalent if they have the same <xref href=\"System.Runtime.Serialization.StreamingContext.Context\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"System.Runtime.Serialization.StreamingContext.State\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: public override bool Equals(object obj)
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
    parameters:
    - id: obj
      type: System.Object
      description: "\n<p>An object to compare with the current instance. </p>\n"
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if the specified object is an instance of <xref href=\"System.Runtime.Serialization.StreamingContext\" data-throw-if-not-resolved=\"false\"></xref> and equals the value of the current instance; otherwise, <strong>false</strong>.</p>\n"
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Runtime.Serialization.StreamingContext.GetHashCode
  commentId: M:System.Runtime.Serialization.StreamingContext.GetHashCode
  id: GetHashCode
  parent: System.Runtime.Serialization.StreamingContext
  langs:
  - csharp
  - vb
  name: GetHashCode()
  fullName: System.Runtime.Serialization.StreamingContext.GetHashCode()
  type: Method
  source:
    remote:
      path: src/System.Runtime.Serialization.Primitives/src/System/Runtime/Serialization/StreamingContext.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetHashCode
    path: src/System.Runtime.Serialization.Primitives/src/System/Runtime/Serialization/StreamingContext.cs
    startLine: 49
  assemblies:
  - System.Runtime.Serialization.Primitives
  namespace: System.Runtime.Serialization
  summary: "\n<p>Returns a hash code of this object.</p>\n"
  syntax:
    content: public override int GetHashCode()
    content.vb: Public Overrides Function GetHashCode As Integer
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: System.Runtime.Serialization
  isExternal: false
  name: System.Runtime.Serialization
  fullName: System.Runtime.Serialization
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  fullName: System.Boolean
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  fullName: System.Int32
