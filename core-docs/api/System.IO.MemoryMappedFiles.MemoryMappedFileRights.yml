items:
- uid: System.IO.MemoryMappedFiles.MemoryMappedFileRights
  commentId: T:System.IO.MemoryMappedFiles.MemoryMappedFileRights
  id: MemoryMappedFileRights
  parent: System.IO.MemoryMappedFiles
  children:
  - System.IO.MemoryMappedFiles.MemoryMappedFileRights.AccessSystemSecurity
  - System.IO.MemoryMappedFiles.MemoryMappedFileRights.ChangePermissions
  - System.IO.MemoryMappedFiles.MemoryMappedFileRights.CopyOnWrite
  - System.IO.MemoryMappedFiles.MemoryMappedFileRights.Delete
  - System.IO.MemoryMappedFiles.MemoryMappedFileRights.Execute
  - System.IO.MemoryMappedFiles.MemoryMappedFileRights.FullControl
  - System.IO.MemoryMappedFiles.MemoryMappedFileRights.Read
  - System.IO.MemoryMappedFiles.MemoryMappedFileRights.ReadExecute
  - System.IO.MemoryMappedFiles.MemoryMappedFileRights.ReadPermissions
  - System.IO.MemoryMappedFiles.MemoryMappedFileRights.ReadWrite
  - System.IO.MemoryMappedFiles.MemoryMappedFileRights.ReadWriteExecute
  - System.IO.MemoryMappedFiles.MemoryMappedFileRights.TakeOwnership
  - System.IO.MemoryMappedFiles.MemoryMappedFileRights.Write
  langs:
  - csharp
  - vb
  name: MemoryMappedFileRights
  fullName: System.IO.MemoryMappedFiles.MemoryMappedFileRights
  type: Enum
  source:
    remote:
      path: src/System.IO.MemoryMappedFiles/ref/System.IO.MemoryMappedFiles.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: MemoryMappedFileRights
    path: src/System.IO.MemoryMappedFiles/ref/System.IO.MemoryMappedFiles.cs
    startLine: 66
  assemblies:
  - System.IO.MemoryMappedFiles
  namespace: System.IO.MemoryMappedFiles
  summary: "\n<p>Specifies access rights to a memory-mapped file that is not associated with a file on disk.</p>\n"
  remarks: "\n<p>You can specify access rights when you use the <see cref=\"Overload:System.IO.MemoryMappedFiles.MemoryMappedFile.OpenExisting\"></see> method to open an existing memory-mapped file. </p>\n"
  example:
  - 
  syntax:
    content: >-
      [Flags]

      public enum MemoryMappedFileRights
    content.vb: >-
      <Flags>

      Public Enum MemoryMappedFileRights
  attributes:
  - type: System.FlagsAttribute
    ctor: System.FlagsAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - enum
  modifiers.vb:
  - Public
  - Enum
- uid: System.IO.MemoryMappedFiles.MemoryMappedFileRights.AccessSystemSecurity
  commentId: F:System.IO.MemoryMappedFiles.MemoryMappedFileRights.AccessSystemSecurity
  id: AccessSystemSecurity
  parent: System.IO.MemoryMappedFiles.MemoryMappedFileRights
  langs:
  - csharp
  - vb
  name: AccessSystemSecurity
  fullName: System.IO.MemoryMappedFiles.MemoryMappedFileRights.AccessSystemSecurity
  type: Field
  source:
    remote:
      path: src/System.IO.MemoryMappedFiles/ref/System.IO.MemoryMappedFiles.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: AccessSystemSecurity
    path: src/System.IO.MemoryMappedFiles/ref/System.IO.MemoryMappedFiles.cs
    startLine: 69
  assemblies:
  - System.IO.MemoryMappedFiles
  namespace: System.IO.MemoryMappedFiles
  summary: "\n<p>The right to get or set permissions on a file.</p>\n"
  syntax:
    content: AccessSystemSecurity = 16777216
    return:
      type: System.IO.MemoryMappedFiles.MemoryMappedFileRights
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.IO.MemoryMappedFiles.MemoryMappedFileRights.ChangePermissions
  commentId: F:System.IO.MemoryMappedFiles.MemoryMappedFileRights.ChangePermissions
  id: ChangePermissions
  parent: System.IO.MemoryMappedFiles.MemoryMappedFileRights
  langs:
  - csharp
  - vb
  name: ChangePermissions
  fullName: System.IO.MemoryMappedFiles.MemoryMappedFileRights.ChangePermissions
  type: Field
  source:
    remote:
      path: src/System.IO.MemoryMappedFiles/ref/System.IO.MemoryMappedFiles.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ChangePermissions
    path: src/System.IO.MemoryMappedFiles/ref/System.IO.MemoryMappedFiles.cs
    startLine: 70
  assemblies:
  - System.IO.MemoryMappedFiles
  namespace: System.IO.MemoryMappedFiles
  summary: "\n<p>The right to change the security and audit rules associated with a file.</p>\n"
  syntax:
    content: ChangePermissions = 262144
    return:
      type: System.IO.MemoryMappedFiles.MemoryMappedFileRights
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.IO.MemoryMappedFiles.MemoryMappedFileRights.CopyOnWrite
  commentId: F:System.IO.MemoryMappedFiles.MemoryMappedFileRights.CopyOnWrite
  id: CopyOnWrite
  parent: System.IO.MemoryMappedFiles.MemoryMappedFileRights
  langs:
  - csharp
  - vb
  name: CopyOnWrite
  fullName: System.IO.MemoryMappedFiles.MemoryMappedFileRights.CopyOnWrite
  type: Field
  source:
    remote:
      path: src/System.IO.MemoryMappedFiles/ref/System.IO.MemoryMappedFiles.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CopyOnWrite
    path: src/System.IO.MemoryMappedFiles/ref/System.IO.MemoryMappedFiles.cs
    startLine: 71
  assemblies:
  - System.IO.MemoryMappedFiles
  namespace: System.IO.MemoryMappedFiles
  summary: "\n<p>The right to read and write to a file with the restriction that write operations will not be seen by other processes.</p>\n"
  syntax:
    content: CopyOnWrite = 1
    return:
      type: System.IO.MemoryMappedFiles.MemoryMappedFileRights
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.IO.MemoryMappedFiles.MemoryMappedFileRights.Delete
  commentId: F:System.IO.MemoryMappedFiles.MemoryMappedFileRights.Delete
  id: Delete
  parent: System.IO.MemoryMappedFiles.MemoryMappedFileRights
  langs:
  - csharp
  - vb
  name: Delete
  fullName: System.IO.MemoryMappedFiles.MemoryMappedFileRights.Delete
  type: Field
  source:
    remote:
      path: src/System.IO.MemoryMappedFiles/ref/System.IO.MemoryMappedFiles.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Delete
    path: src/System.IO.MemoryMappedFiles/ref/System.IO.MemoryMappedFiles.cs
    startLine: 72
  assemblies:
  - System.IO.MemoryMappedFiles
  namespace: System.IO.MemoryMappedFiles
  summary: "\n<p>The right to delete a file.</p>\n"
  syntax:
    content: Delete = 65536
    return:
      type: System.IO.MemoryMappedFiles.MemoryMappedFileRights
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.IO.MemoryMappedFiles.MemoryMappedFileRights.Execute
  commentId: F:System.IO.MemoryMappedFiles.MemoryMappedFileRights.Execute
  id: Execute
  parent: System.IO.MemoryMappedFiles.MemoryMappedFileRights
  langs:
  - csharp
  - vb
  name: Execute
  fullName: System.IO.MemoryMappedFiles.MemoryMappedFileRights.Execute
  type: Field
  source:
    remote:
      path: src/System.IO.MemoryMappedFiles/ref/System.IO.MemoryMappedFiles.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Execute
    path: src/System.IO.MemoryMappedFiles/ref/System.IO.MemoryMappedFiles.cs
    startLine: 73
  assemblies:
  - System.IO.MemoryMappedFiles
  namespace: System.IO.MemoryMappedFiles
  summary: "\n<p>The right to run an application file.</p>\n"
  syntax:
    content: Execute = 8
    return:
      type: System.IO.MemoryMappedFiles.MemoryMappedFileRights
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.IO.MemoryMappedFiles.MemoryMappedFileRights.FullControl
  commentId: F:System.IO.MemoryMappedFiles.MemoryMappedFileRights.FullControl
  id: FullControl
  parent: System.IO.MemoryMappedFiles.MemoryMappedFileRights
  langs:
  - csharp
  - vb
  name: FullControl
  fullName: System.IO.MemoryMappedFiles.MemoryMappedFileRights.FullControl
  type: Field
  source:
    remote:
      path: src/System.IO.MemoryMappedFiles/ref/System.IO.MemoryMappedFiles.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: FullControl
    path: src/System.IO.MemoryMappedFiles/ref/System.IO.MemoryMappedFiles.cs
    startLine: 74
  assemblies:
  - System.IO.MemoryMappedFiles
  namespace: System.IO.MemoryMappedFiles
  summary: "\n<p>The right to exert full control over a file, and to modify access control and audit rules. This value represents the right to do anything with a file and is the combination of all rights in this enumeration.</p>\n"
  syntax:
    content: FullControl = 983055
    return:
      type: System.IO.MemoryMappedFiles.MemoryMappedFileRights
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.IO.MemoryMappedFiles.MemoryMappedFileRights.Read
  commentId: F:System.IO.MemoryMappedFiles.MemoryMappedFileRights.Read
  id: Read
  parent: System.IO.MemoryMappedFiles.MemoryMappedFileRights
  langs:
  - csharp
  - vb
  name: Read
  fullName: System.IO.MemoryMappedFiles.MemoryMappedFileRights.Read
  type: Field
  source:
    remote:
      path: src/System.IO.MemoryMappedFiles/ref/System.IO.MemoryMappedFiles.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Read
    path: src/System.IO.MemoryMappedFiles/ref/System.IO.MemoryMappedFiles.cs
    startLine: 75
  assemblies:
  - System.IO.MemoryMappedFiles
  namespace: System.IO.MemoryMappedFiles
  summary: "\n<p>The right to open and copy a file as read-only.</p>\n"
  syntax:
    content: Read = 4
    return:
      type: System.IO.MemoryMappedFiles.MemoryMappedFileRights
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.IO.MemoryMappedFiles.MemoryMappedFileRights.ReadExecute
  commentId: F:System.IO.MemoryMappedFiles.MemoryMappedFileRights.ReadExecute
  id: ReadExecute
  parent: System.IO.MemoryMappedFiles.MemoryMappedFileRights
  langs:
  - csharp
  - vb
  name: ReadExecute
  fullName: System.IO.MemoryMappedFiles.MemoryMappedFileRights.ReadExecute
  type: Field
  source:
    remote:
      path: src/System.IO.MemoryMappedFiles/ref/System.IO.MemoryMappedFiles.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ReadExecute
    path: src/System.IO.MemoryMappedFiles/ref/System.IO.MemoryMappedFiles.cs
    startLine: 76
  assemblies:
  - System.IO.MemoryMappedFiles
  namespace: System.IO.MemoryMappedFiles
  summary: "\n<p>The right to open and copy a folder or file as read-only, and to run application files. This right includes the <xref href=\"System.IO.MemoryMappedFiles.MemoryMappedFileRights.Read\" data-throw-if-not-resolved=\"false\"></xref> right and the <xref href=\"System.IO.MemoryMappedFiles.MemoryMappedFileRights.Execute\" data-throw-if-not-resolved=\"false\"></xref> right.</p>\n"
  syntax:
    content: ReadExecute = 12
    return:
      type: System.IO.MemoryMappedFiles.MemoryMappedFileRights
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.IO.MemoryMappedFiles.MemoryMappedFileRights.ReadPermissions
  commentId: F:System.IO.MemoryMappedFiles.MemoryMappedFileRights.ReadPermissions
  id: ReadPermissions
  parent: System.IO.MemoryMappedFiles.MemoryMappedFileRights
  langs:
  - csharp
  - vb
  name: ReadPermissions
  fullName: System.IO.MemoryMappedFiles.MemoryMappedFileRights.ReadPermissions
  type: Field
  source:
    remote:
      path: src/System.IO.MemoryMappedFiles/ref/System.IO.MemoryMappedFiles.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ReadPermissions
    path: src/System.IO.MemoryMappedFiles/ref/System.IO.MemoryMappedFiles.cs
    startLine: 77
  assemblies:
  - System.IO.MemoryMappedFiles
  namespace: System.IO.MemoryMappedFiles
  summary: "\n<p>The right to open and copy access and audit rules from a file. This does not include the right to read data, file system attributes, or extended file system attributes.</p>\n"
  syntax:
    content: ReadPermissions = 131072
    return:
      type: System.IO.MemoryMappedFiles.MemoryMappedFileRights
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.IO.MemoryMappedFiles.MemoryMappedFileRights.ReadWrite
  commentId: F:System.IO.MemoryMappedFiles.MemoryMappedFileRights.ReadWrite
  id: ReadWrite
  parent: System.IO.MemoryMappedFiles.MemoryMappedFileRights
  langs:
  - csharp
  - vb
  name: ReadWrite
  fullName: System.IO.MemoryMappedFiles.MemoryMappedFileRights.ReadWrite
  type: Field
  source:
    remote:
      path: src/System.IO.MemoryMappedFiles/ref/System.IO.MemoryMappedFiles.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ReadWrite
    path: src/System.IO.MemoryMappedFiles/ref/System.IO.MemoryMappedFiles.cs
    startLine: 78
  assemblies:
  - System.IO.MemoryMappedFiles
  namespace: System.IO.MemoryMappedFiles
  summary: "\n<p>The right to open and copy a file, and the right to add data to a file or remove data from a file.</p>\n"
  syntax:
    content: ReadWrite = 6
    return:
      type: System.IO.MemoryMappedFiles.MemoryMappedFileRights
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.IO.MemoryMappedFiles.MemoryMappedFileRights.ReadWriteExecute
  commentId: F:System.IO.MemoryMappedFiles.MemoryMappedFileRights.ReadWriteExecute
  id: ReadWriteExecute
  parent: System.IO.MemoryMappedFiles.MemoryMappedFileRights
  langs:
  - csharp
  - vb
  name: ReadWriteExecute
  fullName: System.IO.MemoryMappedFiles.MemoryMappedFileRights.ReadWriteExecute
  type: Field
  source:
    remote:
      path: src/System.IO.MemoryMappedFiles/ref/System.IO.MemoryMappedFiles.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ReadWriteExecute
    path: src/System.IO.MemoryMappedFiles/ref/System.IO.MemoryMappedFiles.cs
    startLine: 79
  assemblies:
  - System.IO.MemoryMappedFiles
  namespace: System.IO.MemoryMappedFiles
  summary: "\n<p>The right to open and copy a file, the right to add data to a file or remove data from a file, and the right to run an application file.</p>\n"
  syntax:
    content: ReadWriteExecute = 14
    return:
      type: System.IO.MemoryMappedFiles.MemoryMappedFileRights
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.IO.MemoryMappedFiles.MemoryMappedFileRights.TakeOwnership
  commentId: F:System.IO.MemoryMappedFiles.MemoryMappedFileRights.TakeOwnership
  id: TakeOwnership
  parent: System.IO.MemoryMappedFiles.MemoryMappedFileRights
  langs:
  - csharp
  - vb
  name: TakeOwnership
  fullName: System.IO.MemoryMappedFiles.MemoryMappedFileRights.TakeOwnership
  type: Field
  source:
    remote:
      path: src/System.IO.MemoryMappedFiles/ref/System.IO.MemoryMappedFiles.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: TakeOwnership
    path: src/System.IO.MemoryMappedFiles/ref/System.IO.MemoryMappedFiles.cs
    startLine: 80
  assemblies:
  - System.IO.MemoryMappedFiles
  namespace: System.IO.MemoryMappedFiles
  summary: "\n<p>The right to change the owner of a file.</p>\n"
  syntax:
    content: TakeOwnership = 524288
    return:
      type: System.IO.MemoryMappedFiles.MemoryMappedFileRights
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.IO.MemoryMappedFiles.MemoryMappedFileRights.Write
  commentId: F:System.IO.MemoryMappedFiles.MemoryMappedFileRights.Write
  id: Write
  parent: System.IO.MemoryMappedFiles.MemoryMappedFileRights
  langs:
  - csharp
  - vb
  name: Write
  fullName: System.IO.MemoryMappedFiles.MemoryMappedFileRights.Write
  type: Field
  source:
    remote:
      path: src/System.IO.MemoryMappedFiles/ref/System.IO.MemoryMappedFiles.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Write
    path: src/System.IO.MemoryMappedFiles/ref/System.IO.MemoryMappedFiles.cs
    startLine: 81
  assemblies:
  - System.IO.MemoryMappedFiles
  namespace: System.IO.MemoryMappedFiles
  summary: "\n<p>The right to add data to a file or remove data from a file.</p>\n"
  syntax:
    content: Write = 2
    return:
      type: System.IO.MemoryMappedFiles.MemoryMappedFileRights
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
references:
- uid: System.IO.MemoryMappedFiles
  isExternal: false
  name: System.IO.MemoryMappedFiles
  fullName: System.IO.MemoryMappedFiles
- uid: System.IO.MemoryMappedFiles.MemoryMappedFileRights
  parent: System.IO.MemoryMappedFiles
  isExternal: false
  name: MemoryMappedFileRights
  fullName: System.IO.MemoryMappedFiles.MemoryMappedFileRights
