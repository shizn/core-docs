items:
- uid: System.Runtime.CompilerServices.AccessedThroughPropertyAttribute
  commentId: T:System.Runtime.CompilerServices.AccessedThroughPropertyAttribute
  id: AccessedThroughPropertyAttribute
  parent: System.Runtime.CompilerServices
  children:
  - System.Runtime.CompilerServices.AccessedThroughPropertyAttribute.#ctor(System.String)
  - System.Runtime.CompilerServices.AccessedThroughPropertyAttribute.PropertyName
  langs:
  - csharp
  - vb
  name: AccessedThroughPropertyAttribute
  fullName: System.Runtime.CompilerServices.AccessedThroughPropertyAttribute
  type: Class
  source:
    remote:
      path: src/mscorlib/src/System/Runtime/CompilerServices/AccessedThroughPropertyAttribute.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: AccessedThroughPropertyAttribute
    path: src/mscorlib/src/System/Runtime/CompilerServices/AccessedThroughPropertyAttribute.cs
    startLine: 10
  assemblies:
  - System.Runtime
  namespace: System.Runtime.CompilerServices
  summary: "\n<p>Specifies the name of the property that accesses the attributed field.</p>\n"
  remarks: "\n<p>You can apply this attribute to fields.</p>\n<p>This attribute is for use by browsers or tools, and is ignored by the common language runtime.</p>\n<p>The classes in System.Runtime.CompilerServices are for compiler writers use only.</p>\n"
  syntax:
    content: >-
      [AttributeUsage(AttributeTargets.Field)]

      [ComVisible(true)]

      public sealed class AccessedThroughPropertyAttribute : Attribute, _Attribute
    content.vb: >-
      <AttributeUsage(AttributeTargets.Field)>

      <ComVisible(True)>

      Public NotInheritable Class AccessedThroughPropertyAttribute
          Inherits Attribute
          Implements _Attribute
  inheritance:
  - System.Object
  - System.Attribute
  inheritedMembers:
  - System.Attribute.Equals(System.Object)
  - System.Attribute.GetHashCode
  - System.Object.ToString
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  attributes:
  - type: System.AttributeUsageAttribute
    ctor: System.AttributeUsageAttribute.#ctor(System.AttributeTargets)
    arguments:
    - type: System.AttributeTargets
      value: 256
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: System.Runtime.CompilerServices.AccessedThroughPropertyAttribute.#ctor(System.String)
  commentId: M:System.Runtime.CompilerServices.AccessedThroughPropertyAttribute.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Runtime.CompilerServices.AccessedThroughPropertyAttribute
  langs:
  - csharp
  - vb
  name: AccessedThroughPropertyAttribute(String)
  fullName: System.Runtime.CompilerServices.AccessedThroughPropertyAttribute.AccessedThroughPropertyAttribute(System.String)
  type: Constructor
  source:
    remote:
      path: src/mscorlib/src/System/Runtime/CompilerServices/AccessedThroughPropertyAttribute.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: .ctor
    path: src/mscorlib/src/System/Runtime/CompilerServices/AccessedThroughPropertyAttribute.cs
    startLine: 16
  assemblies:
  - System.Runtime
  namespace: System.Runtime.CompilerServices
  summary: "\n<p>Initializes a new instance of the <strong>AccessedThroughPropertyAttribute</strong> class with the name of the property used to access the attributed field.</p>\n"
  syntax:
    content: public AccessedThroughPropertyAttribute(string propertyName)
    content.vb: Public Sub New(propertyName As String)
    parameters:
    - id: propertyName
      type: System.String
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Runtime.CompilerServices.AccessedThroughPropertyAttribute.PropertyName
  commentId: P:System.Runtime.CompilerServices.AccessedThroughPropertyAttribute.PropertyName
  id: PropertyName
  parent: System.Runtime.CompilerServices.AccessedThroughPropertyAttribute
  langs:
  - csharp
  - vb
  name: PropertyName
  fullName: System.Runtime.CompilerServices.AccessedThroughPropertyAttribute.PropertyName
  type: Property
  source:
    remote:
      path: src/mscorlib/src/System/Runtime/CompilerServices/AccessedThroughPropertyAttribute.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: PropertyName
    path: src/mscorlib/src/System/Runtime/CompilerServices/AccessedThroughPropertyAttribute.cs
    startLine: 21
  assemblies:
  - System.Runtime
  namespace: System.Runtime.CompilerServices
  summary: "\n<p>Gets the name of the property used to access the attributed field.</p>\n"
  syntax:
    content: public string PropertyName { get; }
    content.vb: Public ReadOnly Property PropertyName As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: System.Runtime.CompilerServices
  isExternal: false
  name: System.Runtime.CompilerServices
  fullName: System.Runtime.CompilerServices
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System.Attribute
  parent: System
  isExternal: false
  name: Attribute
  fullName: System.Attribute
- uid: System.Attribute.Equals(System.Object)
  parent: System.Attribute
  isExternal: true
  name: Equals(Object)
  fullName: System.Attribute.Equals(System.Object)
  spec.csharp:
  - uid: System.Attribute.Equals(System.Object)
    name: Equals
    fullName: System.Attribute.Equals
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Attribute.Equals(System.Object)
    name: Equals
    fullName: System.Attribute.Equals
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Attribute.GetHashCode
  parent: System.Attribute
  isExternal: false
  name: GetHashCode()
  fullName: System.Attribute.GetHashCode()
  spec.csharp:
  - uid: System.Attribute.GetHashCode
    name: GetHashCode
    fullName: System.Attribute.GetHashCode
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Attribute.GetHashCode
    name: GetHashCode
    fullName: System.Attribute.GetHashCode
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.String
  parent: System
  isExternal: false
  name: String
  fullName: System.String
