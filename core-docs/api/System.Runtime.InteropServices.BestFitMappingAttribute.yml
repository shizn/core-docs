items:
- uid: System.Runtime.InteropServices.BestFitMappingAttribute
  commentId: T:System.Runtime.InteropServices.BestFitMappingAttribute
  id: BestFitMappingAttribute
  parent: System.Runtime.InteropServices
  children:
  - System.Runtime.InteropServices.BestFitMappingAttribute.#ctor(System.Boolean)
  - System.Runtime.InteropServices.BestFitMappingAttribute.BestFitMapping
  - System.Runtime.InteropServices.BestFitMappingAttribute.ThrowOnUnmappableChar
  langs:
  - csharp
  - vb
  name: BestFitMappingAttribute
  fullName: System.Runtime.InteropServices.BestFitMappingAttribute
  type: Class
  source:
    remote:
      path: src/System.Runtime.InteropServices/ref/System.Runtime.InteropServices.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: BestFitMappingAttribute
    path: src/System.Runtime.InteropServices/ref/System.Runtime.InteropServices.cs
    startLine: 48
  assemblies:
  - System.Runtime.InteropServices
  namespace: System.Runtime.InteropServices
  summary: "\n<p>Controls whether Unicode characters are converted to the closest matching ANSI characters.</p>\n"
  remarks: "\n<p>You can apply this attribute to an assembly, interface, class, or structure.</p>\n<p>By default, the common language runtime converts to ANSI characters any managed Unicode characters passed to an unmanaged method executing on Windows 98 or Windows Me. Best-fit mapping enables the interop marshaler to select a close-matching character when no exact match exists. For example, the marshaler converts the Unicode copyright character to 'c' for unmanaged methods that accept ANSI characters.</p>\n<p>Some characters lack a best-fit representation; these characters are called unmappable. Unmappable characters are usually converted to the default '?' ANSI character. Certain Unicode characters are converted to dangerous characters, such as the backslash '\\' character, which can inadvertently change a path.</p>\n<p>\n<xref href=\"System.Runtime.InteropServices.BestFitMappingAttribute\" data-throw-if-not-resolved=\"false\"></xref> provides two parameters to control aspects of best-fit mapping. You use the first parameter to toggle best-fit mapping on and off. The default value is <strong>true</strong>, which enables best-fit mapping on the assembly, interface, and class levels. An attribute applied to an interface or class overrides an assembly-level attribute. You can likewise enable or disable best-fit mapping for platform invoke calls by using the <xref href=\"System.Runtime.InteropServices.DllImportAttribute.BestFitMapping\" data-throw-if-not-resolved=\"false\"></xref> field. A value set by the platform invoke field overrides all levels of <xref href=\"System.Runtime.InteropServices.BestFitMappingAttribute\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>You can use the second parameter to control throwing an exception on unmappable characters. The default value for the <xref href=\"System.Runtime.InteropServices.BestFitMappingAttribute.ThrowOnUnmappableChar\" data-throw-if-not-resolved=\"false\"></xref> field is <strong>false</strong>, which disables throwing an exception each time the runtime encounters a Unicode character that has to be converted to the '?' ANSI character. Even if best-fit mapping is <strong>true</strong>, unmappable characters generate an exception when the <xref href=\"System.Runtime.InteropServices.BestFitMappingAttribute.ThrowOnUnmappableChar\" data-throw-if-not-resolved=\"false\"></xref> field is <strong>true</strong>. To tighten security, you can toggle the first parameter to <strong>false</strong> and the second parameter to <strong>true</strong>. This combination of parameter settings turns best-fit mapping off, but enables the exception-throwing mechanism as a safety precaution.</p>\n<p>You cannot change the default values provided by <xref href=\"System.Runtime.InteropServices.BestFitMappingAttribute\" data-throw-if-not-resolved=\"false\"></xref> when passing a managed array whose elements are ANSI Chars or LPSTRs to an unmanaged safe array. Best-fit mapping is always enabled and no exception can be thrown. Be aware that this combination can compromise your security model.</p>\n"
  example:
  - "\n<p>The following example shows how to disable best fit mapping and to throw an exception on the conversion of Unicode characters to the '?' ANSI character. Setting <xref href=\"System.Runtime.InteropServices.BestFitMappingAttribute\" data-throw-if-not-resolved=\"false\"></xref> parameters in this manner provides an added measure of security.</p>System.Runtime.InteropServices.BestFitMappingAttribute#1"
  syntax:
    content: 'public sealed class BestFitMappingAttribute : Attribute'
    content.vb: >-
      Public NotInheritable Class BestFitMappingAttribute
          Inherits Attribute
  seealso:
  - type: System.Runtime.InteropServices.DllImportAttribute.BestFitMapping
    commentId: F:System.Runtime.InteropServices.DllImportAttribute.BestFitMapping
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: System.Runtime.InteropServices.BestFitMappingAttribute.ThrowOnUnmappableChar
  commentId: F:System.Runtime.InteropServices.BestFitMappingAttribute.ThrowOnUnmappableChar
  id: ThrowOnUnmappableChar
  parent: System.Runtime.InteropServices.BestFitMappingAttribute
  langs:
  - csharp
  - vb
  name: ThrowOnUnmappableChar
  fullName: System.Runtime.InteropServices.BestFitMappingAttribute.ThrowOnUnmappableChar
  type: Field
  source:
    remote:
      path: src/System.Runtime.InteropServices/ref/System.Runtime.InteropServices.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ThrowOnUnmappableChar
    path: src/System.Runtime.InteropServices/ref/System.Runtime.InteropServices.cs
    startLine: 51
  assemblies:
  - System.Runtime.InteropServices
  namespace: System.Runtime.InteropServices
  summary: "\n<p>Enables or disables the throwing of an exception on an unmappable Unicode character that is converted to an ANSI '?' character.</p>\n"
  remarks: "\n<p>If <strong>false</strong>, the <xref href=\"System.Runtime.InteropServices.BestFitMappingAttribute.ThrowOnUnmappableChar\" data-throw-if-not-resolved=\"false\"></xref> field is disabled; otherwise, an exception is thrown each time the interop marshaler encounters an unmappable character. The default <strong>false</strong>.</p>\n"
  syntax:
    content: public bool ThrowOnUnmappableChar
    content.vb: Public ThrowOnUnmappableChar As Boolean
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Runtime.InteropServices.BestFitMappingAttribute.#ctor(System.Boolean)
  commentId: M:System.Runtime.InteropServices.BestFitMappingAttribute.#ctor(System.Boolean)
  id: '#ctor(System.Boolean)'
  parent: System.Runtime.InteropServices.BestFitMappingAttribute
  langs:
  - csharp
  - vb
  name: BestFitMappingAttribute(Boolean)
  fullName: System.Runtime.InteropServices.BestFitMappingAttribute.BestFitMappingAttribute(System.Boolean)
  type: Constructor
  source:
    remote:
      path: src/System.Runtime.InteropServices/ref/System.Runtime.InteropServices.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Runtime.InteropServices/ref/System.Runtime.InteropServices.cs
    startLine: 52
  assemblies:
  - System.Runtime.InteropServices
  namespace: System.Runtime.InteropServices
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Runtime.InteropServices.BestFitMappingAttribute\" data-throw-if-not-resolved=\"false\"></xref> class set to the value of the <xref href=\"System.Runtime.InteropServices.BestFitMappingAttribute.BestFitMapping\" data-throw-if-not-resolved=\"false\"></xref> property.</p>\n"
  syntax:
    content: public BestFitMappingAttribute(bool BestFitMapping)
    content.vb: Public Sub New(BestFitMapping As Boolean)
    parameters:
    - id: BestFitMapping
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> to indicate that best-fit mapping is enabled; otherwise, <strong>false</strong>. The default is <strong>true</strong>. </p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Runtime.InteropServices.BestFitMappingAttribute.BestFitMapping
  commentId: P:System.Runtime.InteropServices.BestFitMappingAttribute.BestFitMapping
  id: BestFitMapping
  parent: System.Runtime.InteropServices.BestFitMappingAttribute
  langs:
  - csharp
  - vb
  name: BestFitMapping
  fullName: System.Runtime.InteropServices.BestFitMappingAttribute.BestFitMapping
  type: Property
  source:
    remote:
      path: src/System.Runtime.InteropServices/ref/System.Runtime.InteropServices.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: BestFitMapping
    path: src/System.Runtime.InteropServices/ref/System.Runtime.InteropServices.cs
    startLine: 53
  assemblies:
  - System.Runtime.InteropServices
  namespace: System.Runtime.InteropServices
  summary: "\n<p>Gets the best-fit mapping behavior when converting Unicode characters to ANSI characters.</p>\n"
  remarks: "\n<p>If best-fit mapping is <strong>false</strong> and <xref href=\"System.Runtime.InteropServices.BestFitMappingAttribute.ThrowOnUnmappableChar\" data-throw-if-not-resolved=\"false\"></xref> is <strong>true</strong>, all Unicode characters that require conversion to ANSI format will generate an exception when passed to unmanaged code. Some characters are unmappable, even when best-fit mapping is <strong>true</strong>. Some characters lack a best-fit representation; these characters are called unmappable. Unmappable characters are usually converted to the default '?' ANSI character.</p>\n<p>Certain Unicode characters are converted to dangerous characters, such as the backslash '\\' character, which can inadvertently change a path.</p>\n"
  syntax:
    content: public bool BestFitMapping { get; }
    content.vb: Public ReadOnly Property BestFitMapping As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if best-fit mapping is enabled; otherwise, <strong>false</strong>. The default is <strong>true</strong>.</p>\n"
  seealso:
  - type: System.Runtime.InteropServices.BestFitMappingAttribute.ThrowOnUnmappableChar
    commentId: F:System.Runtime.InteropServices.BestFitMappingAttribute.ThrowOnUnmappableChar
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: System.Runtime.InteropServices
  isExternal: false
  name: System.Runtime.InteropServices
  fullName: System.Runtime.InteropServices
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  fullName: System.Boolean
