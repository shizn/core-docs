items:
- uid: System.InvalidTimeZoneException
  commentId: T:System.InvalidTimeZoneException
  id: InvalidTimeZoneException
  parent: System
  children:
  - System.InvalidTimeZoneException.#ctor
  - System.InvalidTimeZoneException.#ctor(System.String)
  - System.InvalidTimeZoneException.#ctor(System.String,System.Exception)
  langs:
  - csharp
  - vb
  name: InvalidTimeZoneException
  fullName: System.InvalidTimeZoneException
  type: Class
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: InvalidTimeZoneException
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 1181
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>The exception that is thrown when time zone information is invalid.</p>\n"
  remarks: "\n<p>This exception is thrown when a <xref href=\"System.TimeZoneInfo\" data-throw-if-not-resolved=\"false\"></xref> object contains invalid, incomplete, or missing data. It is thrown by the <xref href=\"System.TimeZoneInfo.FindSystemTimeZoneById(System.String)\" data-throw-if-not-resolved=\"false\"></xref> method when a time zone is found in the registry but contains corrupted data. It can also be thrown by the <xref href=\"System.TimeZoneInfo.CreateCustomTimeZone(System.String,System.TimeSpan,System.String,System.String)\" data-throw-if-not-resolved=\"false\"></xref> method under any of the following conditions:</p>\n<ul><li>\n<p>The adjustment rules overlap.</p>\n</li><li>\n<p>The adjustment rules contain one or more null elements.</p>\n</li><li>\n<p>The sum of the Coordinated Universal Time (UTC) offset and daylight delta is out of range. (It is either greater than 14 hours or less than -14 hours.) </p>\n</li><li>\n<p>A single date has multiple adjustment rules applied to it.</p>\n</li></ul>\n<p>This exception is not thrown to indicate that the time zone is not defined on a particular system; the <xref href=\"System.TimeZoneNotFoundException\" data-throw-if-not-resolved=\"false\"></xref> is used for this purpose.</p>\n"
  example:
  - 
  syntax:
    content: 'public class InvalidTimeZoneException : Exception'
    content.vb: >-
      Public Class InvalidTimeZoneException
          Inherits Exception
  inheritance:
  - System.Object
  - System.Exception
  inheritedMembers:
  - System.Exception.Data
  - System.Exception.HelpLink
  - System.Exception.HResult
  - System.Exception.InnerException
  - System.Exception.Message
  - System.Exception.Source
  - System.Exception.StackTrace
  - System.Exception.GetBaseException
  - System.Exception.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: System.InvalidTimeZoneException.#ctor
  commentId: M:System.InvalidTimeZoneException.#ctor
  id: '#ctor'
  parent: System.InvalidTimeZoneException
  langs:
  - csharp
  - vb
  name: InvalidTimeZoneException()
  fullName: System.InvalidTimeZoneException.InvalidTimeZoneException()
  type: Constructor
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 1183
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.InvalidTimeZoneException\" data-throw-if-not-resolved=\"false\"></xref> class with a system-supplied message.</p>\n"
  remarks: "\n<p>This is the default constructor of the <xref href=\"System.InvalidTimeZoneException\" data-throw-if-not-resolved=\"false\"></xref> class. It initializes the <xref href=\"System.Exception.Message\" data-throw-if-not-resolved=\"false\"></xref> property of the new instance to a system-supplied message that describes the error, such as \"Exception of type 'System.InvalidTimeZoneException' was thrown.\" This message is localized for the current system culture.</p>\n"
  example:
  - 
  syntax:
    content: public InvalidTimeZoneException()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.InvalidTimeZoneException.#ctor(System.String)
  commentId: M:System.InvalidTimeZoneException.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.InvalidTimeZoneException
  langs:
  - csharp
  - vb
  name: InvalidTimeZoneException(String)
  fullName: System.InvalidTimeZoneException.InvalidTimeZoneException(System.String)
  type: Constructor
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 1184
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.InvalidTimeZoneException\" data-throw-if-not-resolved=\"false\"></xref> class with the specified message string.</p>\n"
  remarks: "\n<p>The string supplied as the <em>message</em> parameter is assigned to the <xref href=\"System.Exception.Message\" data-throw-if-not-resolved=\"false\"></xref> property. It should be localized for the current culture. </p>\n"
  example:
  - 
  syntax:
    content: public InvalidTimeZoneException(string message)
    content.vb: Public Sub New(message As String)
    parameters:
    - id: message
      type: System.String
      description: "\n<p>A string that describes the exception.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.InvalidTimeZoneException.#ctor(System.String,System.Exception)
  commentId: M:System.InvalidTimeZoneException.#ctor(System.String,System.Exception)
  id: '#ctor(System.String,System.Exception)'
  parent: System.InvalidTimeZoneException
  langs:
  - csharp
  - vb
  name: InvalidTimeZoneException(String, Exception)
  fullName: System.InvalidTimeZoneException.InvalidTimeZoneException(System.String, System.Exception)
  type: Constructor
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 1185
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.InvalidTimeZoneException\" data-throw-if-not-resolved=\"false\"></xref> class with a specified error message and a reference to the inner exception that is the cause of this exception.</p>\n"
  remarks: "\n<p>Typically, you use this overload of the <xref href=\"System.InvalidTimeZoneException\" data-throw-if-not-resolved=\"false\"></xref> class to handle an exception in a <strong>try</strong>â€¦<strong>catch</strong> block. The <em>innerException</em> parameter should be a reference to the exception object handled in the <strong>catch</strong> block, or it can be <strong>null</strong>. This value is then assigned to the <xref href=\"System.InvalidTimeZoneException\" data-throw-if-not-resolved=\"false\"></xref> object's <xref href=\"System.Exception.InnerException\" data-throw-if-not-resolved=\"false\"></xref> property.</p>\n<p>The <em>message</em> string is assigned to the <xref href=\"System.Exception.Message\" data-throw-if-not-resolved=\"false\"></xref> property. The string should be localized for the current culture.</p>\n"
  example:
  - "\n<p>The following code tries to retrieve a <xref href=\"System.TimeZoneInfo\" data-throw-if-not-resolved=\"false\"></xref> object that represents the Central Standard Time zone. If an <xref href=\"System.InvalidTimeZoneException\" data-throw-if-not-resolved=\"false\"></xref> occurs in the <code>RetrieveTimeZone</code> method call, the exception handler wraps the exception in a new <xref href=\"System.InvalidTimeZoneException\" data-throw-if-not-resolved=\"false\"></xref> object, which it returns to the caller. The caller's exception handler then displays information about both the outer and inner exceptions.</p>System.TimeZoneNotFoundException.Class#1"
  syntax:
    content: public InvalidTimeZoneException(string message, Exception innerException)
    content.vb: Public Sub New(message As String, innerException As Exception)
    parameters:
    - id: message
      type: System.String
      description: "\n<p>A string that describes the exception.    </p>\n"
    - id: innerException
      type: System.Exception
      description: "\n<p>The exception that is the cause of the current exception.  </p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System.Exception
  parent: System
  isExternal: false
  name: Exception
  fullName: System.Exception
- uid: System.Exception.Data
  parent: System.Exception
  isExternal: false
  name: Data
  fullName: System.Exception.Data
- uid: System.Exception.HelpLink
  parent: System.Exception
  isExternal: false
  name: HelpLink
  fullName: System.Exception.HelpLink
- uid: System.Exception.HResult
  parent: System.Exception
  isExternal: false
  name: HResult
  fullName: System.Exception.HResult
- uid: System.Exception.InnerException
  parent: System.Exception
  isExternal: false
  name: InnerException
  fullName: System.Exception.InnerException
- uid: System.Exception.Message
  parent: System.Exception
  isExternal: false
  name: Message
  fullName: System.Exception.Message
- uid: System.Exception.Source
  parent: System.Exception
  isExternal: false
  name: Source
  fullName: System.Exception.Source
- uid: System.Exception.StackTrace
  parent: System.Exception
  isExternal: false
  name: StackTrace
  fullName: System.Exception.StackTrace
- uid: System.Exception.GetBaseException
  parent: System.Exception
  isExternal: false
  name: GetBaseException()
  fullName: System.Exception.GetBaseException()
  spec.csharp:
  - uid: System.Exception.GetBaseException
    name: GetBaseException
    fullName: System.Exception.GetBaseException
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Exception.GetBaseException
    name: GetBaseException
    fullName: System.Exception.GetBaseException
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Exception.ToString
  parent: System.Exception
  isExternal: false
  name: ToString()
  fullName: System.Exception.ToString()
  spec.csharp:
  - uid: System.Exception.ToString
    name: ToString
    fullName: System.Exception.ToString
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Exception.ToString
    name: ToString
    fullName: System.Exception.ToString
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: false
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: false
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: false
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
  - name: )
    fullName: )
- uid: System.String
  parent: System
  isExternal: false
  name: String
  fullName: System.String
