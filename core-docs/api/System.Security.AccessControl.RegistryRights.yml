items:
- uid: System.Security.AccessControl.RegistryRights
  commentId: T:System.Security.AccessControl.RegistryRights
  id: RegistryRights
  parent: System.Security.AccessControl
  children:
  - System.Security.AccessControl.RegistryRights.ChangePermissions
  - System.Security.AccessControl.RegistryRights.CreateLink
  - System.Security.AccessControl.RegistryRights.CreateSubKey
  - System.Security.AccessControl.RegistryRights.Delete
  - System.Security.AccessControl.RegistryRights.EnumerateSubKeys
  - System.Security.AccessControl.RegistryRights.ExecuteKey
  - System.Security.AccessControl.RegistryRights.FullControl
  - System.Security.AccessControl.RegistryRights.Notify
  - System.Security.AccessControl.RegistryRights.QueryValues
  - System.Security.AccessControl.RegistryRights.ReadKey
  - System.Security.AccessControl.RegistryRights.ReadPermissions
  - System.Security.AccessControl.RegistryRights.SetValue
  - System.Security.AccessControl.RegistryRights.TakeOwnership
  - System.Security.AccessControl.RegistryRights.WriteKey
  langs:
  - csharp
  - vb
  name: RegistryRights
  fullName: System.Security.AccessControl.RegistryRights
  type: Enum
  source:
    remote:
      path: src/Microsoft.Win32.Registry/ref/Microsoft.Win32.Registry.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: RegistryRights
    path: src/Microsoft.Win32.Registry/ref/Microsoft.Win32.Registry.cs
    startLine: 111
  assemblies:
  - Microsoft.Win32.Registry
  namespace: System.Security.AccessControl
  summary: "\n<p>Specifies the access control rights that can be applied to registry objects.</p>\n"
  remarks: "\n<p>Use the <xref href=\"System.Security.AccessControl.RegistryRights\" data-throw-if-not-resolved=\"false\"></xref> enumeration to specify registry access rights when you create <xref href=\"System.Security.AccessControl.RegistrySecurity\" data-throw-if-not-resolved=\"false\"></xref> objects. To apply access rights to a registry key, first add <xref href=\"System.Security.AccessControl.RegistryAccessRule\" data-throw-if-not-resolved=\"false\"></xref> objects to a <xref href=\"System.Security.AccessControl.RegistrySecurity\" data-throw-if-not-resolved=\"false\"></xref> object, then attach the <xref href=\"System.Security.AccessControl.RegistrySecurity\" data-throw-if-not-resolved=\"false\"></xref> object to the key using the <xref href=\"Microsoft.Win32.RegistryKey.SetAccessControl(System.Security.AccessControl.RegistrySecurity)\" data-throw-if-not-resolved=\"false\"></xref> method, or an appropriate overload of the <see cref=\"Overload:Microsoft.Win32.RegistryKey.CreateSubKey\"></see> method.</p>\n"
  example:
  - "\n<p>The following code example demonstrates the use of the <xref href=\"System.Security.AccessControl.RegistryRights\" data-throw-if-not-resolved=\"false\"></xref> enumeration. The code creates a test key, allowing the current user <xref href=\"System.Security.AccessControl.RegistryRights.ReadKey\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"System.Security.AccessControl.RegistryRights.Delete\" data-throw-if-not-resolved=\"false\"></xref> access rights but denying <xref href=\"System.Security.AccessControl.RegistryRights.ChangePermissions\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"System.Security.AccessControl.RegistryRights.WriteKey\" data-throw-if-not-resolved=\"false\"></xref> rights. Subsequent attempts to manipulate the key succeed or fail depending on these permissions. </p>\n<p>Before the key is deleted, the code pauses. You can switch to the Registry Editor (Regedit.exe or Regedt32.exe) and verify that the same access rights apply when the key is accessed using the Registry Editor. </p>\n<p>This example works best if you use RunAs from the command line to run the Registry Editor and the sample code as a local user without administrator rights. For example, if you have defined a local user named TestUser, the command <code>runas /user:TestUser cmd</code> opens a command window from which you can run the Registry Editor and then the example code.</p>RegistrySecurity101#1"
  syntax:
    content: >-
      [Flags]

      public enum RegistryRights
    content.vb: >-
      <Flags>

      Public Enum RegistryRights
  seealso:
  - type: System.Security.AccessControl.RegistryAccessRule
    commentId: T:System.Security.AccessControl.RegistryAccessRule
  - type: System.Security.AccessControl.RegistrySecurity
    commentId: T:System.Security.AccessControl.RegistrySecurity
  - type: System.Security.AccessControl.RegistryAuditRule
    commentId: T:System.Security.AccessControl.RegistryAuditRule
  attributes:
  - type: System.FlagsAttribute
    ctor: System.FlagsAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - enum
  modifiers.vb:
  - Public
  - Enum
- uid: System.Security.AccessControl.RegistryRights.ChangePermissions
  commentId: F:System.Security.AccessControl.RegistryRights.ChangePermissions
  id: ChangePermissions
  parent: System.Security.AccessControl.RegistryRights
  langs:
  - csharp
  - vb
  name: ChangePermissions
  fullName: System.Security.AccessControl.RegistryRights.ChangePermissions
  type: Field
  source:
    remote:
      path: src/Microsoft.Win32.Registry/ref/Microsoft.Win32.Registry.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ChangePermissions
    path: src/Microsoft.Win32.Registry/ref/Microsoft.Win32.Registry.cs
    startLine: 114
  assemblies:
  - Microsoft.Win32.Registry
  namespace: System.Security.AccessControl
  summary: "\n<p>The right to change the access rules and audit rules associated with a registry key.</p>\n"
  syntax:
    content: ChangePermissions = 262144
    return:
      type: System.Security.AccessControl.RegistryRights
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Security.AccessControl.RegistryRights.CreateLink
  commentId: F:System.Security.AccessControl.RegistryRights.CreateLink
  id: CreateLink
  parent: System.Security.AccessControl.RegistryRights
  langs:
  - csharp
  - vb
  name: CreateLink
  fullName: System.Security.AccessControl.RegistryRights.CreateLink
  type: Field
  source:
    remote:
      path: src/Microsoft.Win32.Registry/ref/Microsoft.Win32.Registry.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CreateLink
    path: src/Microsoft.Win32.Registry/ref/Microsoft.Win32.Registry.cs
    startLine: 115
  assemblies:
  - Microsoft.Win32.Registry
  namespace: System.Security.AccessControl
  summary: "\n<p>Reserved for system use.</p>\n"
  syntax:
    content: CreateLink = 32
    return:
      type: System.Security.AccessControl.RegistryRights
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Security.AccessControl.RegistryRights.CreateSubKey
  commentId: F:System.Security.AccessControl.RegistryRights.CreateSubKey
  id: CreateSubKey
  parent: System.Security.AccessControl.RegistryRights
  langs:
  - csharp
  - vb
  name: CreateSubKey
  fullName: System.Security.AccessControl.RegistryRights.CreateSubKey
  type: Field
  source:
    remote:
      path: src/Microsoft.Win32.Registry/ref/Microsoft.Win32.Registry.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CreateSubKey
    path: src/Microsoft.Win32.Registry/ref/Microsoft.Win32.Registry.cs
    startLine: 116
  assemblies:
  - Microsoft.Win32.Registry
  namespace: System.Security.AccessControl
  summary: "\n<p>The right to create subkeys of a registry key.</p>\n"
  syntax:
    content: CreateSubKey = 4
    return:
      type: System.Security.AccessControl.RegistryRights
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Security.AccessControl.RegistryRights.Delete
  commentId: F:System.Security.AccessControl.RegistryRights.Delete
  id: Delete
  parent: System.Security.AccessControl.RegistryRights
  langs:
  - csharp
  - vb
  name: Delete
  fullName: System.Security.AccessControl.RegistryRights.Delete
  type: Field
  source:
    remote:
      path: src/Microsoft.Win32.Registry/ref/Microsoft.Win32.Registry.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Delete
    path: src/Microsoft.Win32.Registry/ref/Microsoft.Win32.Registry.cs
    startLine: 117
  assemblies:
  - Microsoft.Win32.Registry
  namespace: System.Security.AccessControl
  summary: "\n<p>The right to delete a registry key.</p>\n"
  syntax:
    content: Delete = 65536
    return:
      type: System.Security.AccessControl.RegistryRights
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Security.AccessControl.RegistryRights.EnumerateSubKeys
  commentId: F:System.Security.AccessControl.RegistryRights.EnumerateSubKeys
  id: EnumerateSubKeys
  parent: System.Security.AccessControl.RegistryRights
  langs:
  - csharp
  - vb
  name: EnumerateSubKeys
  fullName: System.Security.AccessControl.RegistryRights.EnumerateSubKeys
  type: Field
  source:
    remote:
      path: src/Microsoft.Win32.Registry/ref/Microsoft.Win32.Registry.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: EnumerateSubKeys
    path: src/Microsoft.Win32.Registry/ref/Microsoft.Win32.Registry.cs
    startLine: 118
  assemblies:
  - Microsoft.Win32.Registry
  namespace: System.Security.AccessControl
  summary: "\n<p>The right to list the subkeys of a registry key.</p>\n"
  syntax:
    content: EnumerateSubKeys = 8
    return:
      type: System.Security.AccessControl.RegistryRights
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Security.AccessControl.RegistryRights.ExecuteKey
  commentId: F:System.Security.AccessControl.RegistryRights.ExecuteKey
  id: ExecuteKey
  parent: System.Security.AccessControl.RegistryRights
  langs:
  - csharp
  - vb
  name: ExecuteKey
  fullName: System.Security.AccessControl.RegistryRights.ExecuteKey
  type: Field
  source:
    remote:
      path: src/Microsoft.Win32.Registry/ref/Microsoft.Win32.Registry.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ExecuteKey
    path: src/Microsoft.Win32.Registry/ref/Microsoft.Win32.Registry.cs
    startLine: 119
  assemblies:
  - Microsoft.Win32.Registry
  namespace: System.Security.AccessControl
  summary: "\n<p>Same as <xref href=\"System.Security.AccessControl.RegistryRights.ReadKey\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: ExecuteKey = 131097
    return:
      type: System.Security.AccessControl.RegistryRights
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Security.AccessControl.RegistryRights.FullControl
  commentId: F:System.Security.AccessControl.RegistryRights.FullControl
  id: FullControl
  parent: System.Security.AccessControl.RegistryRights
  langs:
  - csharp
  - vb
  name: FullControl
  fullName: System.Security.AccessControl.RegistryRights.FullControl
  type: Field
  source:
    remote:
      path: src/Microsoft.Win32.Registry/ref/Microsoft.Win32.Registry.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: FullControl
    path: src/Microsoft.Win32.Registry/ref/Microsoft.Win32.Registry.cs
    startLine: 120
  assemblies:
  - Microsoft.Win32.Registry
  namespace: System.Security.AccessControl
  summary: "\n<p>The right to exert full control over a registry key, and to modify its access rules and audit rules.</p>\n"
  syntax:
    content: FullControl = 983103
    return:
      type: System.Security.AccessControl.RegistryRights
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Security.AccessControl.RegistryRights.Notify
  commentId: F:System.Security.AccessControl.RegistryRights.Notify
  id: Notify
  parent: System.Security.AccessControl.RegistryRights
  langs:
  - csharp
  - vb
  name: Notify
  fullName: System.Security.AccessControl.RegistryRights.Notify
  type: Field
  source:
    remote:
      path: src/Microsoft.Win32.Registry/ref/Microsoft.Win32.Registry.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Notify
    path: src/Microsoft.Win32.Registry/ref/Microsoft.Win32.Registry.cs
    startLine: 121
  assemblies:
  - Microsoft.Win32.Registry
  namespace: System.Security.AccessControl
  summary: "\n<p>The right to request notification of changes on a registry key.</p>\n"
  syntax:
    content: Notify = 16
    return:
      type: System.Security.AccessControl.RegistryRights
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Security.AccessControl.RegistryRights.QueryValues
  commentId: F:System.Security.AccessControl.RegistryRights.QueryValues
  id: QueryValues
  parent: System.Security.AccessControl.RegistryRights
  langs:
  - csharp
  - vb
  name: QueryValues
  fullName: System.Security.AccessControl.RegistryRights.QueryValues
  type: Field
  source:
    remote:
      path: src/Microsoft.Win32.Registry/ref/Microsoft.Win32.Registry.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: QueryValues
    path: src/Microsoft.Win32.Registry/ref/Microsoft.Win32.Registry.cs
    startLine: 122
  assemblies:
  - Microsoft.Win32.Registry
  namespace: System.Security.AccessControl
  summary: "\n<p>The right to query the name/value pairs in a registry key.</p>\n"
  syntax:
    content: QueryValues = 1
    return:
      type: System.Security.AccessControl.RegistryRights
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Security.AccessControl.RegistryRights.ReadKey
  commentId: F:System.Security.AccessControl.RegistryRights.ReadKey
  id: ReadKey
  parent: System.Security.AccessControl.RegistryRights
  langs:
  - csharp
  - vb
  name: ReadKey
  fullName: System.Security.AccessControl.RegistryRights.ReadKey
  type: Field
  source:
    remote:
      path: src/Microsoft.Win32.Registry/ref/Microsoft.Win32.Registry.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ReadKey
    path: src/Microsoft.Win32.Registry/ref/Microsoft.Win32.Registry.cs
    startLine: 123
  assemblies:
  - Microsoft.Win32.Registry
  namespace: System.Security.AccessControl
  summary: "\n<p>The right to query the name/value pairs in a registry key, to request notification of changes, to enumerate its subkeys, and to read its access rules and audit rules.</p>\n"
  syntax:
    content: ReadKey = 131097
    return:
      type: System.Security.AccessControl.RegistryRights
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Security.AccessControl.RegistryRights.ReadPermissions
  commentId: F:System.Security.AccessControl.RegistryRights.ReadPermissions
  id: ReadPermissions
  parent: System.Security.AccessControl.RegistryRights
  langs:
  - csharp
  - vb
  name: ReadPermissions
  fullName: System.Security.AccessControl.RegistryRights.ReadPermissions
  type: Field
  source:
    remote:
      path: src/Microsoft.Win32.Registry/ref/Microsoft.Win32.Registry.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ReadPermissions
    path: src/Microsoft.Win32.Registry/ref/Microsoft.Win32.Registry.cs
    startLine: 124
  assemblies:
  - Microsoft.Win32.Registry
  namespace: System.Security.AccessControl
  summary: "\n<p>The right to open and copy the access rules and audit rules for a registry key.</p>\n"
  syntax:
    content: ReadPermissions = 131072
    return:
      type: System.Security.AccessControl.RegistryRights
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Security.AccessControl.RegistryRights.SetValue
  commentId: F:System.Security.AccessControl.RegistryRights.SetValue
  id: SetValue
  parent: System.Security.AccessControl.RegistryRights
  langs:
  - csharp
  - vb
  name: SetValue
  fullName: System.Security.AccessControl.RegistryRights.SetValue
  type: Field
  source:
    remote:
      path: src/Microsoft.Win32.Registry/ref/Microsoft.Win32.Registry.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: SetValue
    path: src/Microsoft.Win32.Registry/ref/Microsoft.Win32.Registry.cs
    startLine: 125
  assemblies:
  - Microsoft.Win32.Registry
  namespace: System.Security.AccessControl
  summary: "\n<p>The right to create, delete, or set name/value pairs in a registry key.</p>\n"
  syntax:
    content: SetValue = 2
    return:
      type: System.Security.AccessControl.RegistryRights
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Security.AccessControl.RegistryRights.TakeOwnership
  commentId: F:System.Security.AccessControl.RegistryRights.TakeOwnership
  id: TakeOwnership
  parent: System.Security.AccessControl.RegistryRights
  langs:
  - csharp
  - vb
  name: TakeOwnership
  fullName: System.Security.AccessControl.RegistryRights.TakeOwnership
  type: Field
  source:
    remote:
      path: src/Microsoft.Win32.Registry/ref/Microsoft.Win32.Registry.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: TakeOwnership
    path: src/Microsoft.Win32.Registry/ref/Microsoft.Win32.Registry.cs
    startLine: 126
  assemblies:
  - Microsoft.Win32.Registry
  namespace: System.Security.AccessControl
  summary: "\n<p>The right to change the owner of a registry key.</p>\n"
  syntax:
    content: TakeOwnership = 524288
    return:
      type: System.Security.AccessControl.RegistryRights
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Security.AccessControl.RegistryRights.WriteKey
  commentId: F:System.Security.AccessControl.RegistryRights.WriteKey
  id: WriteKey
  parent: System.Security.AccessControl.RegistryRights
  langs:
  - csharp
  - vb
  name: WriteKey
  fullName: System.Security.AccessControl.RegistryRights.WriteKey
  type: Field
  source:
    remote:
      path: src/Microsoft.Win32.Registry/ref/Microsoft.Win32.Registry.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: WriteKey
    path: src/Microsoft.Win32.Registry/ref/Microsoft.Win32.Registry.cs
    startLine: 127
  assemblies:
  - Microsoft.Win32.Registry
  namespace: System.Security.AccessControl
  summary: "\n<p>The right to create, delete, and set the name/value pairs in a registry key, to create or delete subkeys, to request notification of changes, to enumerate its subkeys, and to read its access rules and audit rules.</p>\n"
  syntax:
    content: WriteKey = 131078
    return:
      type: System.Security.AccessControl.RegistryRights
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
references:
- uid: System.Security.AccessControl
  isExternal: false
  name: System.Security.AccessControl
  fullName: System.Security.AccessControl
- uid: System.Security.AccessControl.RegistryRights
  parent: System.Security.AccessControl
  isExternal: false
  name: RegistryRights
  fullName: System.Security.AccessControl.RegistryRights
