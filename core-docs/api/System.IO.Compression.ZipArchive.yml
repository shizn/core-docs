items:
- uid: System.IO.Compression.ZipArchive
  commentId: T:System.IO.Compression.ZipArchive
  id: ZipArchive
  parent: System.IO.Compression
  children:
  - System.IO.Compression.ZipArchive.#ctor(System.IO.Stream)
  - System.IO.Compression.ZipArchive.#ctor(System.IO.Stream,System.IO.Compression.ZipArchiveMode)
  - System.IO.Compression.ZipArchive.#ctor(System.IO.Stream,System.IO.Compression.ZipArchiveMode,System.Boolean)
  - System.IO.Compression.ZipArchive.#ctor(System.IO.Stream,System.IO.Compression.ZipArchiveMode,System.Boolean,System.Text.Encoding)
  - System.IO.Compression.ZipArchive.CreateEntry(System.String)
  - System.IO.Compression.ZipArchive.CreateEntry(System.String,System.IO.Compression.CompressionLevel)
  - System.IO.Compression.ZipArchive.Dispose
  - System.IO.Compression.ZipArchive.Dispose(System.Boolean)
  - System.IO.Compression.ZipArchive.Entries
  - System.IO.Compression.ZipArchive.GetEntry(System.String)
  - System.IO.Compression.ZipArchive.Mode
  langs:
  - csharp
  - vb
  name: ZipArchive
  fullName: System.IO.Compression.ZipArchive
  type: Class
  source:
    remote:
      path: src/System.IO.Compression/src/System/IO/Compression/ZipArchive.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ZipArchive
    path: src/System.IO.Compression/src/System/IO/Compression/ZipArchive.cs
    startLine: 15
  assemblies:
  - System.IO.Compression
  namespace: System.IO.Compression
  syntax:
    content: 'public class ZipArchive : IDisposable'
    content.vb: >-
      Public Class ZipArchive
          Inherits IDisposable
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: System.IO.Compression.ZipArchive.#ctor(System.IO.Stream)
  commentId: M:System.IO.Compression.ZipArchive.#ctor(System.IO.Stream)
  id: '#ctor(System.IO.Stream)'
  parent: System.IO.Compression.ZipArchive
  langs:
  - csharp
  - vb
  name: ZipArchive(Stream)
  fullName: System.IO.Compression.ZipArchive.ZipArchive(System.IO.Stream)
  type: Constructor
  source:
    remote:
      path: src/System.IO.Compression/ref/System.IO.Compression.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.IO.Compression/ref/System.IO.Compression.cs
    startLine: 65
  assemblies:
  - System.IO.Compression
  namespace: System.IO.Compression
  syntax:
    content: public ZipArchive(Stream stream)
    content.vb: Public Sub New(stream As Stream)
    parameters:
    - id: stream
      type: System.IO.Stream
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.IO.Compression.ZipArchive.#ctor(System.IO.Stream,System.IO.Compression.ZipArchiveMode)
  commentId: M:System.IO.Compression.ZipArchive.#ctor(System.IO.Stream,System.IO.Compression.ZipArchiveMode)
  id: '#ctor(System.IO.Stream,System.IO.Compression.ZipArchiveMode)'
  parent: System.IO.Compression.ZipArchive
  langs:
  - csharp
  - vb
  name: ZipArchive(Stream, ZipArchiveMode)
  fullName: System.IO.Compression.ZipArchive.ZipArchive(System.IO.Stream, System.IO.Compression.ZipArchiveMode)
  type: Constructor
  source:
    remote:
      path: src/System.IO.Compression/ref/System.IO.Compression.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.IO.Compression/ref/System.IO.Compression.cs
    startLine: 66
  assemblies:
  - System.IO.Compression
  namespace: System.IO.Compression
  syntax:
    content: public ZipArchive(Stream stream, ZipArchiveMode mode)
    content.vb: Public Sub New(stream As Stream, mode As ZipArchiveMode)
    parameters:
    - id: stream
      type: System.IO.Stream
    - id: mode
      type: System.IO.Compression.ZipArchiveMode
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.IO.Compression.ZipArchive.#ctor(System.IO.Stream,System.IO.Compression.ZipArchiveMode,System.Boolean)
  commentId: M:System.IO.Compression.ZipArchive.#ctor(System.IO.Stream,System.IO.Compression.ZipArchiveMode,System.Boolean)
  id: '#ctor(System.IO.Stream,System.IO.Compression.ZipArchiveMode,System.Boolean)'
  parent: System.IO.Compression.ZipArchive
  langs:
  - csharp
  - vb
  name: ZipArchive(Stream, ZipArchiveMode, Boolean)
  fullName: System.IO.Compression.ZipArchive.ZipArchive(System.IO.Stream, System.IO.Compression.ZipArchiveMode, System.Boolean)
  type: Constructor
  source:
    remote:
      path: src/System.IO.Compression/ref/System.IO.Compression.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.IO.Compression/ref/System.IO.Compression.cs
    startLine: 67
  assemblies:
  - System.IO.Compression
  namespace: System.IO.Compression
  syntax:
    content: public ZipArchive(Stream stream, ZipArchiveMode mode, bool leaveOpen)
    content.vb: Public Sub New(stream As Stream, mode As ZipArchiveMode, leaveOpen As Boolean)
    parameters:
    - id: stream
      type: System.IO.Stream
    - id: mode
      type: System.IO.Compression.ZipArchiveMode
    - id: leaveOpen
      type: System.Boolean
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.IO.Compression.ZipArchive.#ctor(System.IO.Stream,System.IO.Compression.ZipArchiveMode,System.Boolean,System.Text.Encoding)
  commentId: M:System.IO.Compression.ZipArchive.#ctor(System.IO.Stream,System.IO.Compression.ZipArchiveMode,System.Boolean,System.Text.Encoding)
  id: '#ctor(System.IO.Stream,System.IO.Compression.ZipArchiveMode,System.Boolean,System.Text.Encoding)'
  parent: System.IO.Compression.ZipArchive
  langs:
  - csharp
  - vb
  name: ZipArchive(Stream, ZipArchiveMode, Boolean, Text.Encoding)
  fullName: System.IO.Compression.ZipArchive.ZipArchive(System.IO.Stream, System.IO.Compression.ZipArchiveMode, System.Boolean, System.Text.Encoding)
  type: Constructor
  source:
    remote:
      path: src/System.IO.Compression/ref/System.IO.Compression.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.IO.Compression/ref/System.IO.Compression.cs
    startLine: 68
  assemblies:
  - System.IO.Compression
  namespace: System.IO.Compression
  syntax:
    content: public ZipArchive(Stream stream, ZipArchiveMode mode, bool leaveOpen, Text.Encoding entryNameEncoding)
    content.vb: Public Sub New(stream As Stream, mode As ZipArchiveMode, leaveOpen As Boolean, entryNameEncoding As Text.Encoding)
    parameters:
    - id: stream
      type: System.IO.Stream
    - id: mode
      type: System.IO.Compression.ZipArchiveMode
    - id: leaveOpen
      type: System.Boolean
    - id: entryNameEncoding
      type: System.Text.Encoding
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.IO.Compression.ZipArchive.Entries
  commentId: P:System.IO.Compression.ZipArchive.Entries
  id: Entries
  parent: System.IO.Compression.ZipArchive
  langs:
  - csharp
  - vb
  name: Entries
  fullName: System.IO.Compression.ZipArchive.Entries
  type: Property
  source:
    remote:
      path: src/System.IO.Compression/src/System/IO/Compression/ZipArchive.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Entries
    path: src/System.IO.Compression/src/System/IO/Compression/ZipArchive.cs
    startLine: 147
  assemblies:
  - System.IO.Compression
  namespace: System.IO.Compression
  syntax:
    content: public ReadOnlyCollection<ZipArchiveEntry> Entries { get; }
    content.vb: Public ReadOnly Property Entries As ReadOnlyCollection(Of ZipArchiveEntry)
    parameters: []
    return:
      type: ReadOnlyCollection{System.IO.Compression.ZipArchiveEntry}
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.IO.Compression.ZipArchive.Mode
  commentId: P:System.IO.Compression.ZipArchive.Mode
  id: Mode
  parent: System.IO.Compression.ZipArchive
  langs:
  - csharp
  - vb
  name: Mode
  fullName: System.IO.Compression.ZipArchive.Mode
  type: Property
  source:
    remote:
      path: src/System.IO.Compression/src/System/IO/Compression/ZipArchive.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Mode
    path: src/System.IO.Compression/src/System/IO/Compression/ZipArchive.cs
    startLine: 167
  assemblies:
  - System.IO.Compression
  namespace: System.IO.Compression
  syntax:
    content: public ZipArchiveMode Mode { get; }
    content.vb: Public ReadOnly Property Mode As ZipArchiveMode
    parameters: []
    return:
      type: System.IO.Compression.ZipArchiveMode
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.IO.Compression.ZipArchive.CreateEntry(System.String)
  commentId: M:System.IO.Compression.ZipArchive.CreateEntry(System.String)
  id: CreateEntry(System.String)
  parent: System.IO.Compression.ZipArchive
  langs:
  - csharp
  - vb
  name: CreateEntry(String)
  fullName: System.IO.Compression.ZipArchive.CreateEntry(System.String)
  type: Method
  source:
    remote:
      path: src/System.IO.Compression/ref/System.IO.Compression.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CreateEntry
    path: src/System.IO.Compression/ref/System.IO.Compression.cs
    startLine: 71
  assemblies:
  - System.IO.Compression
  namespace: System.IO.Compression
  syntax:
    content: public ZipArchiveEntry CreateEntry(string entryName)
    content.vb: Public Function CreateEntry(entryName As String) As ZipArchiveEntry
    parameters:
    - id: entryName
      type: System.String
    return:
      type: System.IO.Compression.ZipArchiveEntry
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.IO.Compression.ZipArchive.CreateEntry(System.String,System.IO.Compression.CompressionLevel)
  commentId: M:System.IO.Compression.ZipArchive.CreateEntry(System.String,System.IO.Compression.CompressionLevel)
  id: CreateEntry(System.String,System.IO.Compression.CompressionLevel)
  parent: System.IO.Compression.ZipArchive
  langs:
  - csharp
  - vb
  name: CreateEntry(String, CompressionLevel)
  fullName: System.IO.Compression.ZipArchive.CreateEntry(System.String, System.IO.Compression.CompressionLevel)
  type: Method
  source:
    remote:
      path: src/System.IO.Compression/ref/System.IO.Compression.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CreateEntry
    path: src/System.IO.Compression/ref/System.IO.Compression.cs
    startLine: 72
  assemblies:
  - System.IO.Compression
  namespace: System.IO.Compression
  syntax:
    content: public ZipArchiveEntry CreateEntry(string entryName, CompressionLevel compressionLevel)
    content.vb: Public Function CreateEntry(entryName As String, compressionLevel As CompressionLevel) As ZipArchiveEntry
    parameters:
    - id: entryName
      type: System.String
    - id: compressionLevel
      type: System.IO.Compression.CompressionLevel
    return:
      type: System.IO.Compression.ZipArchiveEntry
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.IO.Compression.ZipArchive.Dispose
  commentId: M:System.IO.Compression.ZipArchive.Dispose
  id: Dispose
  parent: System.IO.Compression.ZipArchive
  langs:
  - csharp
  - vb
  name: Dispose()
  fullName: System.IO.Compression.ZipArchive.Dispose()
  type: Method
  source:
    remote:
      path: src/System.IO.Compression/src/System/IO/Compression/ZipArchive.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Dispose
    path: src/System.IO.Compression/src/System/IO/Compression/ZipArchive.cs
    startLine: 262
  assemblies:
  - System.IO.Compression
  namespace: System.IO.Compression
  syntax:
    content: public void Dispose()
    content.vb: Public Sub Dispose
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.IO.Compression.ZipArchive.Dispose(System.Boolean)
  commentId: M:System.IO.Compression.ZipArchive.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.IO.Compression.ZipArchive
  langs:
  - csharp
  - vb
  name: Dispose(Boolean)
  fullName: System.IO.Compression.ZipArchive.Dispose(System.Boolean)
  type: Method
  source:
    remote:
      path: src/System.IO.Compression/ref/System.IO.Compression.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Dispose
    path: src/System.IO.Compression/ref/System.IO.Compression.cs
    startLine: 74
  assemblies:
  - System.IO.Compression
  namespace: System.IO.Compression
  syntax:
    content: protected virtual void Dispose(bool disposing)
    content.vb: Protected Overridable Sub Dispose(disposing As Boolean)
    parameters:
    - id: disposing
      type: System.Boolean
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: System.IO.Compression.ZipArchive.GetEntry(System.String)
  commentId: M:System.IO.Compression.ZipArchive.GetEntry(System.String)
  id: GetEntry(System.String)
  parent: System.IO.Compression.ZipArchive
  langs:
  - csharp
  - vb
  name: GetEntry(String)
  fullName: System.IO.Compression.ZipArchive.GetEntry(System.String)
  type: Method
  source:
    remote:
      path: src/System.IO.Compression/ref/System.IO.Compression.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetEntry
    path: src/System.IO.Compression/ref/System.IO.Compression.cs
    startLine: 75
  assemblies:
  - System.IO.Compression
  namespace: System.IO.Compression
  syntax:
    content: public ZipArchiveEntry GetEntry(string entryName)
    content.vb: Public Function GetEntry(entryName As String) As ZipArchiveEntry
    parameters:
    - id: entryName
      type: System.String
    return:
      type: System.IO.Compression.ZipArchiveEntry
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: System.IO.Compression
  isExternal: false
  name: System.IO.Compression
  fullName: System.IO.Compression
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.IO.Stream
  parent: System.IO
  isExternal: false
  name: IO.Stream
  fullName: System.IO.Stream
- uid: System.IO
  isExternal: false
  name: System.IO
  fullName: System.IO
- uid: System.IO.Compression.ZipArchiveMode
  parent: System.IO.Compression
  isExternal: false
  name: ZipArchiveMode
  fullName: System.IO.Compression.ZipArchiveMode
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  fullName: System.Boolean
- uid: System.Text.Encoding
  parent: System.Text
  isExternal: false
  name: Text.Encoding
  fullName: System.Text.Encoding
- uid: System.Text
  isExternal: false
  name: System.Text
  fullName: System.Text
- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.IO.Compression.ZipArchiveEntry}
  definition: System.Collections.ObjectModel.ReadOnlyCollection`1
  name: Collections.ObjectModel.ReadOnlyCollection<ZipArchiveEntry>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.IO.Compression.ZipArchiveEntry>
  fullname.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of System.IO.Compression.ZipArchiveEntry)
  name.vb: Collections.ObjectModel.ReadOnlyCollection(Of ZipArchiveEntry)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: Collections.ObjectModel.ReadOnlyCollection
    fullName: System.Collections.ObjectModel.ReadOnlyCollection
    isExternal: true
  - name: <
    fullName: <
  - uid: System.IO.Compression.ZipArchiveEntry
    name: ZipArchiveEntry
    fullName: System.IO.Compression.ZipArchiveEntry
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: Collections.ObjectModel.ReadOnlyCollection
    fullName: System.Collections.ObjectModel.ReadOnlyCollection
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.IO.Compression.ZipArchiveEntry
    name: ZipArchiveEntry
    fullName: System.IO.Compression.ZipArchiveEntry
  - name: )
    fullName: )
- uid: System.Collections.ObjectModel.ReadOnlyCollection`1
  parent: System.Collections.ObjectModel
  isExternal: false
  name: Collections.ObjectModel.ReadOnlyCollection<>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<>
  fullname.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of )
  name.vb: Collections.ObjectModel.ReadOnlyCollection(Of )
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: Collections.ObjectModel.ReadOnlyCollection
    fullName: System.Collections.ObjectModel.ReadOnlyCollection
  - name: <
    fullName: <
  - {}
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: Collections.ObjectModel.ReadOnlyCollection
    fullName: System.Collections.ObjectModel.ReadOnlyCollection
  - name: '(Of '
    fullName: '(Of '
  - {}
  - name: )
    fullName: )
- uid: System.Collections.ObjectModel
  isExternal: false
  name: System.Collections.ObjectModel
  fullName: System.Collections.ObjectModel
- uid: System.String
  parent: System
  isExternal: false
  name: String
  fullName: System.String
- uid: System.IO.Compression.ZipArchiveEntry
  parent: System.IO.Compression
  isExternal: false
  name: ZipArchiveEntry
  fullName: System.IO.Compression.ZipArchiveEntry
- uid: System.IO.Compression.CompressionLevel
  parent: System.IO.Compression
  isExternal: false
  name: CompressionLevel
  fullName: System.IO.Compression.CompressionLevel
