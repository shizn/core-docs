items:
- uid: System.Data.IDataParameterCollection
  commentId: T:System.Data.IDataParameterCollection
  id: IDataParameterCollection
  parent: System.Data
  children:
  - System.Data.IDataParameterCollection.Contains(System.String)
  - System.Data.IDataParameterCollection.IndexOf(System.String)
  - System.Data.IDataParameterCollection.Item(System.String)
  - System.Data.IDataParameterCollection.RemoveAt(System.String)
  langs:
  - csharp
  - vb
  name: IDataParameterCollection
  fullName: System.Data.IDataParameterCollection
  type: Interface
  source:
    remote:
      path: src/System.Data.Common/src/System/Data/IDataParameterCollection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IDataParameterCollection
    path: src/System.Data.Common/src/System/Data/IDataParameterCollection.cs
    startLine: 10
  assemblies:
  - System.Data.Common
  namespace: System.Data
  summary: "\n<p>Collects all parameters relevant to a Command object and their mappings to <xref href=\"System.Data.DataSet\" data-throw-if-not-resolved=\"false\"></xref> columns, and is implemented by .NET Framework data providers that access data sources.</p>\n"
  remarks: "\n<p>The <xref href=\"System.Data.IDataParameterCollection\" data-throw-if-not-resolved=\"false\"></xref> interface allows an inheriting class to implement a Parameter collection. For more information about Parameter classes, see Configuring Parameters and Parameter Data Types.</p>\n<p>An application does not create an instance of the <xref href=\"System.Data.IDataParameterCollection\" data-throw-if-not-resolved=\"false\"></xref> interface directly, but creates an instance of a class that inherits <xref href=\"System.Data.IDataParameterCollection\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>Classes that inherit <xref href=\"System.Data.IDataParameterCollection\" data-throw-if-not-resolved=\"false\"></xref> must implement the inherited members, and typically define additional members to add provider-specific functionality. For example, the <xref href=\"System.Data.IDataParameterCollection\" data-throw-if-not-resolved=\"false\"></xref> interface defines one implementation of the <xref href=\"System.Data.IDataParameterCollection.RemoveAt(System.String)\" data-throw-if-not-resolved=\"false\"></xref> method. In turn, the <xref href=\"System.Data.OleDb.OleDbParameterCollection\" data-throw-if-not-resolved=\"false\"></xref> class inherits this method, and defines two additional overloads of <strong>RemoveAt</strong>.</p>\n"
  syntax:
    content: 'public interface IDataParameterCollection : IList, ICollection, IEnumerable'
    content.vb: >-
      Public Interface IDataParameterCollection
          Inherits IList
  inheritedMembers:
  - System.Collections.IList.Add(System.Object)
  - System.Collections.IList.Contains(System.Object)
  - System.Collections.IList.Clear
  - System.Collections.IList.IndexOf(System.Object)
  - System.Collections.IList.Insert(System.Int32,System.Object)
  - System.Collections.IList.Remove(System.Object)
  - System.Collections.IList.RemoveAt(System.Int32)
  - System.Collections.IList.Item(System.Int32)
  - System.Collections.IList.IsReadOnly
  - System.Collections.IList.IsFixedSize
  - System.Collections.ICollection.CopyTo(System.Array,System.Int32)
  - System.Collections.ICollection.Count
  - System.Collections.ICollection.SyncRoot
  - System.Collections.ICollection.IsSynchronized
  - System.Collections.IEnumerable.GetEnumerator
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: System.Data.IDataParameterCollection.Item(System.String)
  commentId: P:System.Data.IDataParameterCollection.Item(System.String)
  id: Item(System.String)
  parent: System.Data.IDataParameterCollection
  langs:
  - csharp
  - vb
  name: Item[String]
  fullName: System.Data.IDataParameterCollection.Item[System.String]
  type: Property
  source:
    remote:
      path: src/System.Data.Common/src/System/Data/IDataParameterCollection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: this[]
    path: src/System.Data.Common/src/System/Data/IDataParameterCollection.cs
    startLine: 13
  assemblies:
  - System.Data.Common
  namespace: System.Data
  summary: "\n<p>Gets or sets the parameter at the specified index.</p>\n"
  syntax:
    content: object this[string parameterName] { get; set; }
    content.vb: Property Item(parameterName As String) As Object
    parameters:
    - id: parameterName
      type: System.String
    return:
      type: System.Object
  modifiers.csharp:
  - get
  - set
  fullName.vb: System.Data.IDataParameterCollection.Item(System.String)
  name.vb: Item(String)
- uid: System.Data.IDataParameterCollection.Contains(System.String)
  commentId: M:System.Data.IDataParameterCollection.Contains(System.String)
  id: Contains(System.String)
  parent: System.Data.IDataParameterCollection
  langs:
  - csharp
  - vb
  name: Contains(String)
  fullName: System.Data.IDataParameterCollection.Contains(System.String)
  type: Method
  source:
    remote:
      path: src/System.Data.Common/src/System/Data/IDataParameterCollection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Contains
    path: src/System.Data.Common/src/System/Data/IDataParameterCollection.cs
    startLine: 19
  assemblies:
  - System.Data.Common
  namespace: System.Data
  summary: "\n<p>Gets a value indicating whether a parameter in the collection has the specified name.</p>\n"
  syntax:
    content: bool Contains(string parameterName)
    content.vb: Function Contains(parameterName As String) As Boolean
    parameters:
    - id: parameterName
      type: System.String
    return:
      type: System.Boolean
- uid: System.Data.IDataParameterCollection.IndexOf(System.String)
  commentId: M:System.Data.IDataParameterCollection.IndexOf(System.String)
  id: IndexOf(System.String)
  parent: System.Data.IDataParameterCollection
  langs:
  - csharp
  - vb
  name: IndexOf(String)
  fullName: System.Data.IDataParameterCollection.IndexOf(System.String)
  type: Method
  source:
    remote:
      path: src/System.Data.Common/src/System/Data/IDataParameterCollection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IndexOf
    path: src/System.Data.Common/src/System/Data/IDataParameterCollection.cs
    startLine: 21
  assemblies:
  - System.Data.Common
  namespace: System.Data
  summary: "\n<p>Gets the location of the <xref href=\"System.Data.IDataParameter\" data-throw-if-not-resolved=\"false\"></xref> within the collection.</p>\n"
  syntax:
    content: int IndexOf(string parameterName)
    content.vb: Function IndexOf(parameterName As String) As Integer
    parameters:
    - id: parameterName
      type: System.String
    return:
      type: System.Int32
- uid: System.Data.IDataParameterCollection.RemoveAt(System.String)
  commentId: M:System.Data.IDataParameterCollection.RemoveAt(System.String)
  id: RemoveAt(System.String)
  parent: System.Data.IDataParameterCollection
  langs:
  - csharp
  - vb
  name: RemoveAt(String)
  fullName: System.Data.IDataParameterCollection.RemoveAt(System.String)
  type: Method
  source:
    remote:
      path: src/System.Data.Common/src/System/Data/IDataParameterCollection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: RemoveAt
    path: src/System.Data.Common/src/System/Data/IDataParameterCollection.cs
    startLine: 23
  assemblies:
  - System.Data.Common
  namespace: System.Data
  summary: "\n<p>Removes the <xref href=\"System.Data.IDataParameter\" data-throw-if-not-resolved=\"false\"></xref> from the collection.</p>\n"
  syntax:
    content: void RemoveAt(string parameterName)
    content.vb: Sub RemoveAt(parameterName As String)
    parameters:
    - id: parameterName
      type: System.String
references:
- uid: System.Data
  isExternal: false
  name: System.Data
  fullName: System.Data
- uid: System.Collections.IList.Add(System.Object)
  parent: System.Collections.IList
  isExternal: true
  name: Add(Object)
  fullName: System.Collections.IList.Add(System.Object)
  spec.csharp:
  - uid: System.Collections.IList.Add(System.Object)
    name: Add
    fullName: System.Collections.IList.Add
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Collections.IList.Add(System.Object)
    name: Add
    fullName: System.Collections.IList.Add
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Collections.IList.Contains(System.Object)
  parent: System.Collections.IList
  isExternal: true
  name: Contains(Object)
  fullName: System.Collections.IList.Contains(System.Object)
  spec.csharp:
  - uid: System.Collections.IList.Contains(System.Object)
    name: Contains
    fullName: System.Collections.IList.Contains
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Collections.IList.Contains(System.Object)
    name: Contains
    fullName: System.Collections.IList.Contains
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Collections.IList.Clear
  parent: System.Collections.IList
  isExternal: false
  name: Clear()
  fullName: System.Collections.IList.Clear()
  spec.csharp:
  - uid: System.Collections.IList.Clear
    name: Clear
    fullName: System.Collections.IList.Clear
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Collections.IList.Clear
    name: Clear
    fullName: System.Collections.IList.Clear
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Collections.IList.IndexOf(System.Object)
  parent: System.Collections.IList
  isExternal: true
  name: IndexOf(Object)
  fullName: System.Collections.IList.IndexOf(System.Object)
  spec.csharp:
  - uid: System.Collections.IList.IndexOf(System.Object)
    name: IndexOf
    fullName: System.Collections.IList.IndexOf
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Collections.IList.IndexOf(System.Object)
    name: IndexOf
    fullName: System.Collections.IList.IndexOf
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Collections.IList.Insert(System.Int32,System.Object)
  parent: System.Collections.IList
  isExternal: true
  name: Insert(Int32, Object)
  fullName: System.Collections.IList.Insert(System.Int32, System.Object)
  spec.csharp:
  - uid: System.Collections.IList.Insert(System.Int32,System.Object)
    name: Insert
    fullName: System.Collections.IList.Insert
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Collections.IList.Insert(System.Int32,System.Object)
    name: Insert
    fullName: System.Collections.IList.Insert
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Collections.IList.Remove(System.Object)
  parent: System.Collections.IList
  isExternal: true
  name: Remove(Object)
  fullName: System.Collections.IList.Remove(System.Object)
  spec.csharp:
  - uid: System.Collections.IList.Remove(System.Object)
    name: Remove
    fullName: System.Collections.IList.Remove
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Collections.IList.Remove(System.Object)
    name: Remove
    fullName: System.Collections.IList.Remove
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Collections.IList.RemoveAt(System.Int32)
  parent: System.Collections.IList
  isExternal: true
  name: RemoveAt(Int32)
  fullName: System.Collections.IList.RemoveAt(System.Int32)
  spec.csharp:
  - uid: System.Collections.IList.RemoveAt(System.Int32)
    name: RemoveAt
    fullName: System.Collections.IList.RemoveAt
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Collections.IList.RemoveAt(System.Int32)
    name: RemoveAt
    fullName: System.Collections.IList.RemoveAt
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
- uid: System.Collections.IList.Item(System.Int32)
  parent: System.Collections.IList
  isExternal: true
  name: Item[Int32]
  fullName: System.Collections.IList.Item[System.Int32]
  fullname.vb: System.Collections.IList.Item(System.Int32)
  name.vb: Item(Int32)
  spec.csharp:
  - uid: System.Collections.IList.Item(System.Int32)
    name: Item
    fullName: System.Collections.IList.Item
  - name: '['
    fullName: '['
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ']'
    fullName: ']'
  spec.vb:
  - uid: System.Collections.IList.Item(System.Int32)
    name: Item
    fullName: System.Collections.IList.Item
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
- uid: System.Collections.IList.IsReadOnly
  parent: System.Collections.IList
  isExternal: false
  name: IsReadOnly
  fullName: System.Collections.IList.IsReadOnly
- uid: System.Collections.IList.IsFixedSize
  parent: System.Collections.IList
  isExternal: false
  name: IsFixedSize
  fullName: System.Collections.IList.IsFixedSize
- uid: System.Collections.ICollection.CopyTo(System.Array,System.Int32)
  parent: System.Collections.ICollection
  isExternal: true
  name: CopyTo(Array, Int32)
  fullName: System.Collections.ICollection.CopyTo(System.Array, System.Int32)
  spec.csharp:
  - uid: System.Collections.ICollection.CopyTo(System.Array,System.Int32)
    name: CopyTo
    fullName: System.Collections.ICollection.CopyTo
  - name: (
    fullName: (
  - uid: System.Array
    name: Array
    fullName: System.Array
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ICollection.CopyTo(System.Array,System.Int32)
    name: CopyTo
    fullName: System.Collections.ICollection.CopyTo
  - name: (
    fullName: (
  - uid: System.Array
    name: Array
    fullName: System.Array
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
- uid: System.Collections.ICollection.Count
  parent: System.Collections.ICollection
  isExternal: false
  name: Count
  fullName: System.Collections.ICollection.Count
- uid: System.Collections.ICollection.SyncRoot
  parent: System.Collections.ICollection
  isExternal: false
  name: SyncRoot
  fullName: System.Collections.ICollection.SyncRoot
- uid: System.Collections.ICollection.IsSynchronized
  parent: System.Collections.ICollection
  isExternal: false
  name: IsSynchronized
  fullName: System.Collections.ICollection.IsSynchronized
- uid: System.Collections.IEnumerable.GetEnumerator
  parent: System.Collections.IEnumerable
  isExternal: false
  name: GetEnumerator()
  fullName: System.Collections.IEnumerable.GetEnumerator()
  spec.csharp:
  - uid: System.Collections.IEnumerable.GetEnumerator
    name: GetEnumerator
    fullName: System.Collections.IEnumerable.GetEnumerator
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Collections.IEnumerable.GetEnumerator
    name: GetEnumerator
    fullName: System.Collections.IEnumerable.GetEnumerator
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Collections.IList
  parent: System.Collections
  isExternal: false
  name: IList
  fullName: System.Collections.IList
- uid: System.Collections.ICollection
  parent: System.Collections
  isExternal: false
  name: ICollection
  fullName: System.Collections.ICollection
- uid: System.Collections.IEnumerable
  parent: System.Collections
  isExternal: false
  name: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: System.Collections
  isExternal: false
  name: System.Collections
  fullName: System.Collections
- uid: System.String
  parent: System
  isExternal: false
  name: String
  fullName: System.String
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  fullName: System.Boolean
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  fullName: System.Int32
