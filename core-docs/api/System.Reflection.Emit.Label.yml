items:
- uid: System.Reflection.Emit.Label
  commentId: T:System.Reflection.Emit.Label
  id: Label
  parent: System.Reflection.Emit
  children:
  - System.Reflection.Emit.Label.Equals(System.Object)
  - System.Reflection.Emit.Label.Equals(System.Reflection.Emit.Label)
  - System.Reflection.Emit.Label.GetHashCode
  - System.Reflection.Emit.Label.op_Equality(System.Reflection.Emit.Label,System.Reflection.Emit.Label)
  - System.Reflection.Emit.Label.op_Inequality(System.Reflection.Emit.Label,System.Reflection.Emit.Label)
  langs:
  - csharp
  - vb
  name: Label
  fullName: System.Reflection.Emit.Label
  type: Struct
  source:
    remote:
      path: src/System.Reflection.Emit.ILGeneration/ref/System.Reflection.Emit.ILGeneration.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Label
    path: src/System.Reflection.Emit.ILGeneration/ref/System.Reflection.Emit.ILGeneration.cs
    startLine: 66
  assemblies:
  - System.Reflection.Emit.ILGeneration
  namespace: System.Reflection.Emit
  summary: "\n<p>Represents a label in the instruction stream. <strong>Label</strong> is used in conjunction with the <xref href=\"System.Reflection.Emit.ILGenerator\" data-throw-if-not-resolved=\"false\"></xref> class.</p>\n"
  syntax:
    content: public struct Label
    content.vb: Public Structure Label
  modifiers.csharp:
  - public
  - struct
  modifiers.vb:
  - Public
  - Structure
- uid: System.Reflection.Emit.Label.Equals(System.Object)
  commentId: M:System.Reflection.Emit.Label.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Reflection.Emit.Label
  langs:
  - csharp
  - vb
  name: Equals(Object)
  fullName: System.Reflection.Emit.Label.Equals(System.Object)
  type: Method
  source:
    remote:
      path: src/System.Reflection.Emit.ILGeneration/ref/System.Reflection.Emit.ILGeneration.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Equals
    path: src/System.Reflection.Emit.ILGeneration/ref/System.Reflection.Emit.ILGeneration.cs
    startLine: 69
  assemblies:
  - System.Reflection.Emit.ILGeneration
  namespace: System.Reflection.Emit
  summary: "\n<p>Checks if the given object is an instance of <strong>Label</strong> and is equal to this instance.</p>\n"
  syntax:
    content: public override bool Equals(object obj)
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
    parameters:
    - id: obj
      type: System.Object
      description: "\n<p>The object to compare with this <strong>Label</strong> instance. </p>\n"
    return:
      type: System.Boolean
      description: "\n<p>Returns <strong>true</strong> if <em>obj</em> is an instance of <strong>Label</strong> and is equal to this object; otherwise, <strong>false</strong>.</p>\n"
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Reflection.Emit.Label.Equals(System.Reflection.Emit.Label)
  commentId: M:System.Reflection.Emit.Label.Equals(System.Reflection.Emit.Label)
  id: Equals(System.Reflection.Emit.Label)
  parent: System.Reflection.Emit.Label
  langs:
  - csharp
  - vb
  name: Equals(Label)
  fullName: System.Reflection.Emit.Label.Equals(System.Reflection.Emit.Label)
  type: Method
  source:
    remote:
      path: src/System.Reflection.Emit.ILGeneration/ref/System.Reflection.Emit.ILGeneration.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Equals
    path: src/System.Reflection.Emit.ILGeneration/ref/System.Reflection.Emit.ILGeneration.cs
    startLine: 70
  assemblies:
  - System.Reflection.Emit.ILGeneration
  namespace: System.Reflection.Emit
  summary: "\n<p>Indicates whether the current instance is equal to the specified <xref href=\"System.Reflection.Emit.Label\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: public bool Equals(Label obj)
    content.vb: Public Function Equals(obj As Label) As Boolean
    parameters:
    - id: obj
      type: System.Reflection.Emit.Label
      description: "\n<p>The <xref href=\"System.Reflection.Emit.Label\" data-throw-if-not-resolved=\"false\"></xref> to compare to the current instance.</p>\n"
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if the value of <em>obj</em> is equal to the value of the current instance; otherwise, <strong>false</strong>.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Reflection.Emit.Label.GetHashCode
  commentId: M:System.Reflection.Emit.Label.GetHashCode
  id: GetHashCode
  parent: System.Reflection.Emit.Label
  langs:
  - csharp
  - vb
  name: GetHashCode()
  fullName: System.Reflection.Emit.Label.GetHashCode()
  type: Method
  source:
    remote:
      path: src/System.Reflection.Emit.ILGeneration/ref/System.Reflection.Emit.ILGeneration.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetHashCode
    path: src/System.Reflection.Emit.ILGeneration/ref/System.Reflection.Emit.ILGeneration.cs
    startLine: 71
  assemblies:
  - System.Reflection.Emit.ILGeneration
  namespace: System.Reflection.Emit
  summary: "\n<p>Generates a hash code for this instance.</p>\n"
  syntax:
    content: public override int GetHashCode()
    content.vb: Public Overrides Function GetHashCode As Integer
    return:
      type: System.Int32
      description: "\n<p>Returns a hash code for this instance.</p>\n"
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Reflection.Emit.Label.op_Equality(System.Reflection.Emit.Label,System.Reflection.Emit.Label)
  commentId: M:System.Reflection.Emit.Label.op_Equality(System.Reflection.Emit.Label,System.Reflection.Emit.Label)
  id: op_Equality(System.Reflection.Emit.Label,System.Reflection.Emit.Label)
  parent: System.Reflection.Emit.Label
  langs:
  - csharp
  - vb
  name: Equality(Label, Label)
  fullName: System.Reflection.Emit.Label.Equality(System.Reflection.Emit.Label, System.Reflection.Emit.Label)
  type: Operator
  source:
    remote:
      path: src/System.Reflection.Emit.ILGeneration/ref/System.Reflection.Emit.ILGeneration.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_Equality
    path: src/System.Reflection.Emit.ILGeneration/ref/System.Reflection.Emit.ILGeneration.cs
    startLine: 72
  assemblies:
  - System.Reflection.Emit.ILGeneration
  namespace: System.Reflection.Emit
  summary: "\n<p>Indicates whether two <xref href=\"System.Reflection.Emit.Label\" data-throw-if-not-resolved=\"false\"></xref> structures are equal.</p>\n"
  syntax:
    content: public static bool operator ==(Label a, Label b)
    content.vb: Public Shared Operator =(a As Label, b As Label) As Boolean
    parameters:
    - id: a
      type: System.Reflection.Emit.Label
      description: "\n<p>The <xref href=\"System.Reflection.Emit.Label\" data-throw-if-not-resolved=\"false\"></xref> to compare to <em>b</em>.</p>\n"
    - id: b
      type: System.Reflection.Emit.Label
      description: "\n<p>The <xref href=\"System.Reflection.Emit.Label\" data-throw-if-not-resolved=\"false\"></xref> to compare to <em>a</em>.</p>\n"
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if <em>a</em> is equal to <em>b</em>; otherwise, <strong>false</strong>.</p>\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Reflection.Emit.Label.op_Inequality(System.Reflection.Emit.Label,System.Reflection.Emit.Label)
  commentId: M:System.Reflection.Emit.Label.op_Inequality(System.Reflection.Emit.Label,System.Reflection.Emit.Label)
  id: op_Inequality(System.Reflection.Emit.Label,System.Reflection.Emit.Label)
  parent: System.Reflection.Emit.Label
  langs:
  - csharp
  - vb
  name: Inequality(Label, Label)
  fullName: System.Reflection.Emit.Label.Inequality(System.Reflection.Emit.Label, System.Reflection.Emit.Label)
  type: Operator
  source:
    remote:
      path: src/System.Reflection.Emit.ILGeneration/ref/System.Reflection.Emit.ILGeneration.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_Inequality
    path: src/System.Reflection.Emit.ILGeneration/ref/System.Reflection.Emit.ILGeneration.cs
    startLine: 73
  assemblies:
  - System.Reflection.Emit.ILGeneration
  namespace: System.Reflection.Emit
  summary: "\n<p>Indicates whether two <xref href=\"System.Reflection.Emit.Label\" data-throw-if-not-resolved=\"false\"></xref> structures are not equal.</p>\n"
  syntax:
    content: public static bool operator !=(Label a, Label b)
    content.vb: Public Shared Operator <>(a As Label, b As Label) As Boolean
    parameters:
    - id: a
      type: System.Reflection.Emit.Label
      description: "\n<p>The <xref href=\"System.Reflection.Emit.Label\" data-throw-if-not-resolved=\"false\"></xref> to compare to <em>b</em>.</p>\n"
    - id: b
      type: System.Reflection.Emit.Label
      description: "\n<p>The <xref href=\"System.Reflection.Emit.Label\" data-throw-if-not-resolved=\"false\"></xref> to compare to <em>a</em>.</p>\n"
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if <em>a</em> is not equal to <em>b</em>; otherwise, <strong>false</strong>.</p>\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: System.Reflection.Emit
  isExternal: false
  name: System.Reflection.Emit
  fullName: System.Reflection.Emit
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  fullName: System.Boolean
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Reflection.Emit.Label
  parent: System.Reflection.Emit
  isExternal: false
  name: Label
  fullName: System.Reflection.Emit.Label
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  fullName: System.Int32
