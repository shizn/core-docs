items:
- uid: System.Xml.Serialization.IXmlSerializable
  commentId: T:System.Xml.Serialization.IXmlSerializable
  id: IXmlSerializable
  parent: System.Xml.Serialization
  children:
  - System.Xml.Serialization.IXmlSerializable.GetSchema
  - System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)
  - System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)
  langs:
  - csharp
  - vb
  name: IXmlSerializable
  fullName: System.Xml.Serialization.IXmlSerializable
  type: Interface
  source:
    remote:
      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IXmlSerializable
    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
    startLine: 511
  assemblies:
  - System.Xml.ReaderWriter
  namespace: System.Xml.Serialization
  summary: "\n<p>Provides custom formatting for XML serialization and deserialization.</p>\n"
  remarks: "\n<p>There are two reasons to implement this interface. The first is to control how your object is serialized or deserialized by the <xref href=\"System.Xml.Serialization.XmlSerializer\" data-throw-if-not-resolved=\"false\"></xref>. For example, you can chunk data into bytes instead of buffering large data sets, and also avoid the inflation that occurs when the data is encoded using Base64 encoding. To control the serialization, implement the <xref href=\"System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)\" data-throw-if-not-resolved=\"false\"></xref> methods to control the <xref href=\"System.Xml.XmlReader\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"System.Xml.XmlWriter\" data-throw-if-not-resolved=\"false\"></xref> classes used to read and write the XML. For an example of this, see How to: Chunk Serialized Data.</p>\n<p>The second reason is to be able to control the schema. To enable this, you must apply the <xref href=\"System.Xml.Serialization.XmlSchemaProviderAttribute\" data-throw-if-not-resolved=\"false\"></xref> to the serializable type, and specify the name of the static member that returns the schema. See the <xref href=\"System.Xml.Serialization.XmlSchemaProviderAttribute\" data-throw-if-not-resolved=\"false\"></xref> for an example.</p>\n<p>A class that implements the interface must have a parameterless constructor. This is a requirement of the <xref href=\"System.Xml.Serialization.XmlSerializer\" data-throw-if-not-resolved=\"false\"></xref> class.</p>\n"
  example:
  - "\n<p>The following example code shows an implementation of the <xref href=\"System.Xml.Serialization.IXmlSerializable\" data-throw-if-not-resolved=\"false\"></xref> interface that serializes a private field.</p>XmlSerialization_IXmlSerializable#0"
  syntax:
    content: public interface IXmlSerializable
    content.vb: Public Interface IXmlSerializable
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: System.Xml.Serialization.IXmlSerializable.GetSchema
  commentId: M:System.Xml.Serialization.IXmlSerializable.GetSchema
  id: GetSchema
  parent: System.Xml.Serialization.IXmlSerializable
  langs:
  - csharp
  - vb
  name: GetSchema()
  fullName: System.Xml.Serialization.IXmlSerializable.GetSchema()
  type: Method
  source:
    remote:
      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetSchema
    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
    startLine: 513
  assemblies:
  - System.Xml.ReaderWriter
  namespace: System.Xml.Serialization
  summary: "\n<p>This method is reserved and should not be used. When implementing the <strong>IXmlSerializable</strong> interface, you should return <strong>null</strong> (<strong>Nothing</strong> in Visual Basic) from this method, and instead, if specifying a custom schema is required, apply the <xref href=\"System.Xml.Serialization.XmlSchemaProviderAttribute\" data-throw-if-not-resolved=\"false\"></xref> to the class.</p>\n"
  remarks: "\n<p>When serializing or deserializing an object, the <xref href=\"System.Xml.Serialization.XmlSerializer\" data-throw-if-not-resolved=\"false\"></xref> class does not perform XML validation. For this reason, it is often safe to omit schema information by providing a trivial implementation of this method, for example by returning <strong>null</strong> (<strong>Nothing</strong> in Visual Basic).</p>\n<p>If providing schema information is necessary, you should use the <xref href=\"System.Xml.Serialization.XmlSchemaProviderAttribute\" data-throw-if-not-resolved=\"false\"></xref> attribute. The <strong>GetSchema</strong> method should still return <strong>null</strong> (or <strong>Nothing</strong>).</p>\n<p>Some .NET FrameworkÂ types as well as legacy custom types implementing the <strong>IXmlSerializable</strong> interface may be using <strong>GetSchema</strong> instead of <strong>XmlSchemaProvider</strong>. In this case, the method returns an accurate XML schema that describes the XML representation of the object generated by the <see cref=\"Overload:System.Data.DataSet.WriteXml\"></see> method.</p>\n"
  syntax:
    content: XmlSchema GetSchema()
    content.vb: Function GetSchema As XmlSchema
    return:
      type: System.Xml.Schema.XmlSchema
      description: "\n<p>An <xref href=\"System.Xml.Schema.XmlSchema\" data-throw-if-not-resolved=\"false\"></xref> that describes the XML representation of the object that is produced by the <xref href=\"System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)\" data-throw-if-not-resolved=\"false\"></xref> method and consumed by the <xref href=\"System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)\" data-throw-if-not-resolved=\"false\"></xref> method.</p>\n"
- uid: System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)
  commentId: M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)
  id: ReadXml(System.Xml.XmlReader)
  parent: System.Xml.Serialization.IXmlSerializable
  langs:
  - csharp
  - vb
  name: ReadXml(XmlReader)
  fullName: System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)
  type: Method
  source:
    remote:
      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ReadXml
    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
    startLine: 515
  assemblies:
  - System.Xml.ReaderWriter
  namespace: System.Xml.Serialization
  summary: "\n<p>Generates an object from its XML representation.</p>\n"
  remarks: "\n<p>The <xref href=\"System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)\" data-throw-if-not-resolved=\"false\"></xref> method must reconstitute your object using the information that was written by the <xref href=\"System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)\" data-throw-if-not-resolved=\"false\"></xref> method.</p>\n<p>When this method is called, the reader is positioned on the start tag that wraps the information for your type. That is, directly on the start tag that indicates the beginning of a serialized object. When this method returns, it must have read the entire element from beginning to end, including all of its contents. Unlike the <xref href=\"System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)\" data-throw-if-not-resolved=\"false\"></xref> method, the framework does not handle the wrapper element automatically. Your implementation must do so. Failing to observe these positioning rules may cause code to generate unexpected runtime exceptions or corrupt data.</p>\n<p>When implementing this method, you should consider the possibility that a malicious user might provide a well-formed but invalid XML representation in order to disable or otherwise alter the behavior of your application.</p>\n"
  example:
  - "\n<p>The following example illustrates an implementation of the <xref href=\"System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)\" data-throw-if-not-resolved=\"false\"></xref> method.</p>XmlSerialization_IXmlSerializable#2<p>The following example illustrates the use of the <xref href=\"System.Xml.Serialization.XmlSerializer\" data-throw-if-not-resolved=\"false\"></xref> class to deserialize this object.</p>XmlSerialization_IXmlSerializable#20"
  syntax:
    content: void ReadXml(XmlReader reader)
    content.vb: Sub ReadXml(reader As XmlReader)
    parameters:
    - id: reader
      type: System.Xml.XmlReader
      description: "\n<p>The <xref href=\"System.Xml.XmlReader\" data-throw-if-not-resolved=\"false\"></xref> stream from which the object is deserialized. </p>\n"
- uid: System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)
  commentId: M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)
  id: WriteXml(System.Xml.XmlWriter)
  parent: System.Xml.Serialization.IXmlSerializable
  langs:
  - csharp
  - vb
  name: WriteXml(XmlWriter)
  fullName: System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)
  type: Method
  source:
    remote:
      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: WriteXml
    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
    startLine: 516
  assemblies:
  - System.Xml.ReaderWriter
  namespace: System.Xml.Serialization
  summary: "\n<p>Converts an object into its XML representation.</p>\n"
  remarks: "\n<p>The <xref href=\"System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)\" data-throw-if-not-resolved=\"false\"></xref> implementation you provide should write out the XML representation of the object. The framework writes a wrapper element and positions the XML writer after its start. Your implementation may write its contents, including child elements. The framework then closes the wrapper element.</p>\n<p>Write sufficient information to the <xref href=\"System.Xml.XmlWriter\" data-throw-if-not-resolved=\"false\"></xref> stream to allow the <xref href=\"System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)\" data-throw-if-not-resolved=\"false\"></xref> method to reconstitute your object.</p>\n<p>For example, if your object state includes an array variable, be sure to write the length of the array, or use a parent element to contain the elements that describe the array values, so that you know how many values to read when the object is reconstituted.</p>\n"
  example:
  - "\n<p>The following example illustrates an implementation of the <xref href=\"System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)\" data-throw-if-not-resolved=\"false\"></xref> method.</p>XmlSerialization_IXmlSerializable#1<p>The following example illustrates the use of the <xref href=\"System.Xml.Serialization.XmlSerializer\" data-throw-if-not-resolved=\"false\"></xref> class to deserialize this object.</p>XmlSerialization_IXmlSerializable#10"
  syntax:
    content: void WriteXml(XmlWriter writer)
    content.vb: Sub WriteXml(writer As XmlWriter)
    parameters:
    - id: writer
      type: System.Xml.XmlWriter
      description: "\n<p>The <xref href=\"System.Xml.XmlWriter\" data-throw-if-not-resolved=\"false\"></xref> stream to which the object is serialized. </p>\n"
references:
- uid: System.Xml.Serialization
  isExternal: false
  name: System.Xml.Serialization
  fullName: System.Xml.Serialization
- uid: System.Xml.Schema.XmlSchema
  parent: System.Xml.Schema
  isExternal: false
  name: XmlSchema
  fullName: System.Xml.Schema.XmlSchema
- uid: System.Xml.Schema
  isExternal: false
  name: System.Xml.Schema
  fullName: System.Xml.Schema
- uid: System.Xml.XmlReader
  parent: System.Xml
  isExternal: false
  name: XmlReader
  fullName: System.Xml.XmlReader
- uid: System.Xml
  isExternal: false
  name: System.Xml
  fullName: System.Xml
- uid: System.Xml.XmlWriter
  parent: System.Xml
  isExternal: false
  name: XmlWriter
  fullName: System.Xml.XmlWriter
