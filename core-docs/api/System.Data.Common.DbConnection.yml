items:
- uid: System.Data.Common.DbConnection
  commentId: T:System.Data.Common.DbConnection
  id: DbConnection
  parent: System.Data.Common
  children:
  - System.Data.Common.DbConnection.#ctor
  - System.Data.Common.DbConnection.BeginDbTransaction(System.Data.IsolationLevel)
  - System.Data.Common.DbConnection.BeginTransaction
  - System.Data.Common.DbConnection.BeginTransaction(System.Data.IsolationLevel)
  - System.Data.Common.DbConnection.ChangeDatabase(System.String)
  - System.Data.Common.DbConnection.Close
  - System.Data.Common.DbConnection.ConnectionString
  - System.Data.Common.DbConnection.ConnectionTimeout
  - System.Data.Common.DbConnection.CreateCommand
  - System.Data.Common.DbConnection.CreateDbCommand
  - System.Data.Common.DbConnection.Database
  - System.Data.Common.DbConnection.DataSource
  - System.Data.Common.DbConnection.Dispose
  - System.Data.Common.DbConnection.Dispose(System.Boolean)
  - System.Data.Common.DbConnection.OnStateChange(System.Data.StateChangeEventArgs)
  - System.Data.Common.DbConnection.Open
  - System.Data.Common.DbConnection.OpenAsync
  - System.Data.Common.DbConnection.OpenAsync(System.Threading.CancellationToken)
  - System.Data.Common.DbConnection.ServerVersion
  - System.Data.Common.DbConnection.State
  - System.Data.Common.DbConnection.StateChange
  - System.Data.Common.DbConnection.System#Data#IDbConnection#BeginTransaction
  - System.Data.Common.DbConnection.System#Data#IDbConnection#BeginTransaction(System.Data.IsolationLevel)
  - System.Data.Common.DbConnection.System#Data#IDbConnection#CreateCommand
  langs:
  - csharp
  - vb
  name: DbConnection
  fullName: System.Data.Common.DbConnection
  type: Class
  source:
    remote:
      path: src/System.Data.Common/src/System/Data/Common/DbConnection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: DbConnection
    path: src/System.Data.Common/src/System/Data/Common/DbConnection.cs
    startLine: 16
  assemblies:
  - System.Data.Common
  namespace: System.Data.Common
  syntax:
    content: 'public abstract class DbConnection : object, IDbConnection, IDisposable'
    content.vb: >-
      Public MustInherit Class DbConnection
          Inherits Object
          Implements IDbConnection, IDisposable
  inheritance:
  - System.Object
  implements:
  - System.Data.IDbConnection
  - System.IDisposable
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: System.Data.Common.DbConnection.#ctor
  commentId: M:System.Data.Common.DbConnection.#ctor
  id: '#ctor'
  parent: System.Data.Common.DbConnection
  langs:
  - csharp
  - vb
  name: DbConnection()
  fullName: System.Data.Common.DbConnection.DbConnection()
  type: Constructor
  source:
    remote:
      path: src/System.Data.Common/src/System/Data/Common/DbConnection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Data.Common/src/System/Data/Common/DbConnection.cs
    startLine: 22
  assemblies:
  - System.Data.Common
  namespace: System.Data.Common
  syntax:
    content: protected DbConnection()
    content.vb: Protected Sub New
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: System.Data.Common.DbConnection.ConnectionString
  commentId: P:System.Data.Common.DbConnection.ConnectionString
  id: ConnectionString
  parent: System.Data.Common.DbConnection
  langs:
  - csharp
  - vb
  name: ConnectionString
  fullName: System.Data.Common.DbConnection.ConnectionString
  type: Property
  source:
    remote:
      path: src/System.Data.Common/src/System/Data/Common/DbConnection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ConnectionString
    path: src/System.Data.Common/src/System/Data/Common/DbConnection.cs
    startLine: 31
  assemblies:
  - System.Data.Common
  namespace: System.Data.Common
  syntax:
    content: public abstract string ConnectionString { get; set; }
    content.vb: Public MustOverride Property ConnectionString As String
    parameters: []
    return:
      type: System.String
  implements:
  - System.Data.IDbConnection.ConnectionString
  modifiers.csharp:
  - public
  - abstract
  - get
  - set
  modifiers.vb:
  - Public
  - MustOverride
- uid: System.Data.Common.DbConnection.ConnectionTimeout
  commentId: P:System.Data.Common.DbConnection.ConnectionTimeout
  id: ConnectionTimeout
  parent: System.Data.Common.DbConnection
  langs:
  - csharp
  - vb
  name: ConnectionTimeout
  fullName: System.Data.Common.DbConnection.ConnectionTimeout
  type: Property
  source:
    remote:
      path: src/System.Data.Common/src/System/Data/Common/DbConnection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ConnectionTimeout
    path: src/System.Data.Common/src/System/Data/Common/DbConnection.cs
    startLine: 37
  assemblies:
  - System.Data.Common
  namespace: System.Data.Common
  syntax:
    content: public virtual int ConnectionTimeout { get; }
    content.vb: Public Overridable ReadOnly Property ConnectionTimeout As Integer
    parameters: []
    return:
      type: System.Int32
  implements:
  - System.Data.IDbConnection.ConnectionTimeout
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: System.Data.Common.DbConnection.Database
  commentId: P:System.Data.Common.DbConnection.Database
  id: Database
  parent: System.Data.Common.DbConnection
  langs:
  - csharp
  - vb
  name: Database
  fullName: System.Data.Common.DbConnection.Database
  type: Property
  source:
    remote:
      path: src/System.Data.Common/src/System/Data/Common/DbConnection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Database
    path: src/System.Data.Common/src/System/Data/Common/DbConnection.cs
    startLine: 45
  assemblies:
  - System.Data.Common
  namespace: System.Data.Common
  syntax:
    content: public abstract string Database { get; }
    content.vb: Public MustOverride ReadOnly Property Database As String
    parameters: []
    return:
      type: System.String
  implements:
  - System.Data.IDbConnection.Database
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
- uid: System.Data.Common.DbConnection.DataSource
  commentId: P:System.Data.Common.DbConnection.DataSource
  id: DataSource
  parent: System.Data.Common.DbConnection
  langs:
  - csharp
  - vb
  name: DataSource
  fullName: System.Data.Common.DbConnection.DataSource
  type: Property
  source:
    remote:
      path: src/System.Data.Common/src/System/Data/Common/DbConnection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: DataSource
    path: src/System.Data.Common/src/System/Data/Common/DbConnection.cs
    startLine: 50
  assemblies:
  - System.Data.Common
  namespace: System.Data.Common
  syntax:
    content: public abstract string DataSource { get; }
    content.vb: Public MustOverride ReadOnly Property DataSource As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
- uid: System.Data.Common.DbConnection.ServerVersion
  commentId: P:System.Data.Common.DbConnection.ServerVersion
  id: ServerVersion
  parent: System.Data.Common.DbConnection
  langs:
  - csharp
  - vb
  name: ServerVersion
  fullName: System.Data.Common.DbConnection.ServerVersion
  type: Property
  source:
    remote:
      path: src/System.Data.Common/src/System/Data/Common/DbConnection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ServerVersion
    path: src/System.Data.Common/src/System/Data/Common/DbConnection.cs
    startLine: 57
  assemblies:
  - System.Data.Common
  namespace: System.Data.Common
  syntax:
    content: public abstract string ServerVersion { get; }
    content.vb: Public MustOverride ReadOnly Property ServerVersion As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
- uid: System.Data.Common.DbConnection.State
  commentId: P:System.Data.Common.DbConnection.State
  id: State
  parent: System.Data.Common.DbConnection
  langs:
  - csharp
  - vb
  name: State
  fullName: System.Data.Common.DbConnection.State
  type: Property
  source:
    remote:
      path: src/System.Data.Common/src/System/Data/Common/DbConnection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: State
    path: src/System.Data.Common/src/System/Data/Common/DbConnection.cs
    startLine: 62
  assemblies:
  - System.Data.Common
  namespace: System.Data.Common
  syntax:
    content: public abstract ConnectionState State { get; }
    content.vb: Public MustOverride ReadOnly Property State As ConnectionState
    parameters: []
    return:
      type: System.Data.ConnectionState
  implements:
  - System.Data.IDbConnection.State
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
- uid: System.Data.Common.DbConnection.StateChange
  commentId: E:System.Data.Common.DbConnection.StateChange
  id: StateChange
  parent: System.Data.Common.DbConnection
  langs:
  - csharp
  - vb
  name: StateChange
  fullName: System.Data.Common.DbConnection.StateChange
  type: Event
  source:
    remote:
      path: src/System.Data.Common/src/System/Data/Common/DbConnection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: StateChange
    path: src/System.Data.Common/src/System/Data/Common/DbConnection.cs
    startLine: 67
  assemblies:
  - System.Data.Common
  namespace: System.Data.Common
  syntax:
    content: public virtual event StateChangeEventHandler StateChange
    content.vb: Public Overridable Event StateChange As StateChangeEventHandler
    return:
      type: System.Data.StateChangeEventHandler
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Data.Common.DbConnection.BeginDbTransaction(System.Data.IsolationLevel)
  commentId: M:System.Data.Common.DbConnection.BeginDbTransaction(System.Data.IsolationLevel)
  id: BeginDbTransaction(System.Data.IsolationLevel)
  parent: System.Data.Common.DbConnection
  langs:
  - csharp
  - vb
  name: BeginDbTransaction(IsolationLevel)
  fullName: System.Data.Common.DbConnection.BeginDbTransaction(System.Data.IsolationLevel)
  type: Method
  source:
    remote:
      path: src/System.Data.Common/src/System/Data/Common/DbConnection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: BeginDbTransaction
    path: src/System.Data.Common/src/System/Data/Common/DbConnection.cs
    startLine: 79
  assemblies:
  - System.Data.Common
  namespace: System.Data.Common
  syntax:
    content: protected abstract DbTransaction BeginDbTransaction(IsolationLevel isolationLevel)
    content.vb: Protected MustOverride Function BeginDbTransaction(isolationLevel As IsolationLevel) As DbTransaction
    parameters:
    - id: isolationLevel
      type: System.Data.IsolationLevel
    return:
      type: System.Data.Common.DbTransaction
  modifiers.csharp:
  - protected
  - abstract
  modifiers.vb:
  - Protected
  - MustOverride
- uid: System.Data.Common.DbConnection.BeginTransaction
  commentId: M:System.Data.Common.DbConnection.BeginTransaction
  id: BeginTransaction
  parent: System.Data.Common.DbConnection
  langs:
  - csharp
  - vb
  name: BeginTransaction()
  fullName: System.Data.Common.DbConnection.BeginTransaction()
  type: Method
  source:
    remote:
      path: src/System.Data.Common/src/System/Data/Common/DbConnection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: BeginTransaction
    path: src/System.Data.Common/src/System/Data/Common/DbConnection.cs
    startLine: 81
  assemblies:
  - System.Data.Common
  namespace: System.Data.Common
  syntax:
    content: public DbTransaction BeginTransaction()
    content.vb: Public Function BeginTransaction As DbTransaction
    return:
      type: System.Data.Common.DbTransaction
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Data.Common.DbConnection.BeginTransaction(System.Data.IsolationLevel)
  commentId: M:System.Data.Common.DbConnection.BeginTransaction(System.Data.IsolationLevel)
  id: BeginTransaction(System.Data.IsolationLevel)
  parent: System.Data.Common.DbConnection
  langs:
  - csharp
  - vb
  name: BeginTransaction(IsolationLevel)
  fullName: System.Data.Common.DbConnection.BeginTransaction(System.Data.IsolationLevel)
  type: Method
  source:
    remote:
      path: src/System.Data.Common/src/System/Data/Common/DbConnection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: BeginTransaction
    path: src/System.Data.Common/src/System/Data/Common/DbConnection.cs
    startLine: 86
  assemblies:
  - System.Data.Common
  namespace: System.Data.Common
  syntax:
    content: public DbTransaction BeginTransaction(IsolationLevel isolationLevel)
    content.vb: Public Function BeginTransaction(isolationLevel As IsolationLevel) As DbTransaction
    parameters:
    - id: isolationLevel
      type: System.Data.IsolationLevel
    return:
      type: System.Data.Common.DbTransaction
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Data.Common.DbConnection.ChangeDatabase(System.String)
  commentId: M:System.Data.Common.DbConnection.ChangeDatabase(System.String)
  id: ChangeDatabase(System.String)
  parent: System.Data.Common.DbConnection
  langs:
  - csharp
  - vb
  name: ChangeDatabase(String)
  fullName: System.Data.Common.DbConnection.ChangeDatabase(System.String)
  type: Method
  source:
    remote:
      path: src/System.Data.Common/src/System/Data/Common/DbConnection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ChangeDatabase
    path: src/System.Data.Common/src/System/Data/Common/DbConnection.cs
    startLine: 94
  assemblies:
  - System.Data.Common
  namespace: System.Data.Common
  syntax:
    content: public abstract void ChangeDatabase(string databaseName)
    content.vb: Public MustOverride Sub ChangeDatabase(databaseName As String)
    parameters:
    - id: databaseName
      type: System.String
  implements:
  - System.Data.IDbConnection.ChangeDatabase(System.String)
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: System.Data.Common.DbConnection.Close
  commentId: M:System.Data.Common.DbConnection.Close
  id: Close
  parent: System.Data.Common.DbConnection
  langs:
  - csharp
  - vb
  name: Close()
  fullName: System.Data.Common.DbConnection.Close()
  type: Method
  source:
    remote:
      path: src/System.Data.Common/src/System/Data/Common/DbConnection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Close
    path: src/System.Data.Common/src/System/Data/Common/DbConnection.cs
    startLine: 92
  assemblies:
  - System.Data.Common
  namespace: System.Data.Common
  syntax:
    content: public abstract void Close()
    content.vb: Public MustOverride Sub Close
  implements:
  - System.Data.IDbConnection.Close
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: System.Data.Common.DbConnection.CreateCommand
  commentId: M:System.Data.Common.DbConnection.CreateCommand
  id: CreateCommand
  parent: System.Data.Common.DbConnection
  langs:
  - csharp
  - vb
  name: CreateCommand()
  fullName: System.Data.Common.DbConnection.CreateCommand()
  type: Method
  source:
    remote:
      path: src/System.Data.Common/src/System/Data/Common/DbConnection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CreateCommand
    path: src/System.Data.Common/src/System/Data/Common/DbConnection.cs
    startLine: 96
  assemblies:
  - System.Data.Common
  namespace: System.Data.Common
  syntax:
    content: public DbCommand CreateCommand()
    content.vb: Public Function CreateCommand As DbCommand
    return:
      type: System.Data.Common.DbCommand
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Data.Common.DbConnection.CreateDbCommand
  commentId: M:System.Data.Common.DbConnection.CreateDbCommand
  id: CreateDbCommand
  parent: System.Data.Common.DbConnection
  langs:
  - csharp
  - vb
  name: CreateDbCommand()
  fullName: System.Data.Common.DbConnection.CreateDbCommand()
  type: Method
  source:
    remote:
      path: src/System.Data.Common/src/System/Data/Common/DbConnection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CreateDbCommand
    path: src/System.Data.Common/src/System/Data/Common/DbConnection.cs
    startLine: 102
  assemblies:
  - System.Data.Common
  namespace: System.Data.Common
  syntax:
    content: protected abstract DbCommand CreateDbCommand()
    content.vb: Protected MustOverride Function CreateDbCommand As DbCommand
    return:
      type: System.Data.Common.DbCommand
  modifiers.csharp:
  - protected
  - abstract
  modifiers.vb:
  - Protected
  - MustOverride
- uid: System.Data.Common.DbConnection.OnStateChange(System.Data.StateChangeEventArgs)
  commentId: M:System.Data.Common.DbConnection.OnStateChange(System.Data.StateChangeEventArgs)
  id: OnStateChange(System.Data.StateChangeEventArgs)
  parent: System.Data.Common.DbConnection
  langs:
  - csharp
  - vb
  name: OnStateChange(StateChangeEventArgs)
  fullName: System.Data.Common.DbConnection.OnStateChange(System.Data.StateChangeEventArgs)
  type: Method
  source:
    remote:
      path: src/System.Data.Common/src/System/Data/Common/DbConnection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: OnStateChange
    path: src/System.Data.Common/src/System/Data/Common/DbConnection.cs
    startLine: 105
  assemblies:
  - System.Data.Common
  namespace: System.Data.Common
  syntax:
    content: protected virtual void OnStateChange(StateChangeEventArgs stateChange)
    content.vb: Protected Overridable Sub OnStateChange(stateChange As StateChangeEventArgs)
    parameters:
    - id: stateChange
      type: System.Data.StateChangeEventArgs
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: System.Data.Common.DbConnection.Open
  commentId: M:System.Data.Common.DbConnection.Open
  id: Open
  parent: System.Data.Common.DbConnection
  langs:
  - csharp
  - vb
  name: Open()
  fullName: System.Data.Common.DbConnection.Open()
  type: Method
  source:
    remote:
      path: src/System.Data.Common/src/System/Data/Common/DbConnection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Open
    path: src/System.Data.Common/src/System/Data/Common/DbConnection.cs
    startLine: 115
  assemblies:
  - System.Data.Common
  namespace: System.Data.Common
  syntax:
    content: public abstract void Open()
    content.vb: Public MustOverride Sub Open
  implements:
  - System.Data.IDbConnection.Open
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: System.Data.Common.DbConnection.OpenAsync
  commentId: M:System.Data.Common.DbConnection.OpenAsync
  id: OpenAsync
  parent: System.Data.Common.DbConnection
  langs:
  - csharp
  - vb
  name: OpenAsync()
  fullName: System.Data.Common.DbConnection.OpenAsync()
  type: Method
  source:
    remote:
      path: src/System.Data.Common/src/System/Data/Common/DbConnection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: OpenAsync
    path: src/System.Data.Common/src/System/Data/Common/DbConnection.cs
    startLine: 117
  assemblies:
  - System.Data.Common
  namespace: System.Data.Common
  syntax:
    content: public Task OpenAsync()
    content.vb: Public Function OpenAsync As Task
    return:
      type: Task
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Data.Common.DbConnection.OpenAsync(System.Threading.CancellationToken)
  commentId: M:System.Data.Common.DbConnection.OpenAsync(System.Threading.CancellationToken)
  id: OpenAsync(System.Threading.CancellationToken)
  parent: System.Data.Common.DbConnection
  langs:
  - csharp
  - vb
  name: OpenAsync(Threading.CancellationToken)
  fullName: System.Data.Common.DbConnection.OpenAsync(System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/System.Data.Common/ref/System.Data.Common.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: OpenAsync
    path: src/System.Data.Common/ref/System.Data.Common.cs
    startLine: 276
  assemblies:
  - System.Data.Common
  namespace: System.Data.Common
  syntax:
    content: public virtual Threading.Tasks.Task OpenAsync(Threading.CancellationToken cancellationToken)
    content.vb: Public Overridable Function OpenAsync(cancellationToken As Threading.CancellationToken) As Threading.Tasks.Task
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Data.Common.DbConnection.System#Data#IDbConnection#BeginTransaction
  commentId: M:System.Data.Common.DbConnection.System#Data#IDbConnection#BeginTransaction
  id: System#Data#IDbConnection#BeginTransaction
  isEii: true
  parent: System.Data.Common.DbConnection
  langs:
  - csharp
  - vb
  name: IDbConnection.BeginTransaction()
  fullName: System.Data.Common.DbConnection.System.Data.IDbConnection.BeginTransaction()
  type: Method
  source:
    remote:
      path: src/System.Data.Common/src/System/Data/Common/DbConnection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: System.Data.IDbConnection.BeginTransaction
    path: src/System.Data.Common/src/System/Data/Common/DbConnection.cs
    startLine: 156
  assemblies:
  - System.Data.Common
  namespace: System.Data.Common
  syntax:
    content: IDbTransaction IDbConnection.BeginTransaction()
    content.vb: Function System.Data.IDbConnection.BeginTransaction As IDbTransaction Implements IDbConnection.BeginTransaction
    return:
      type: System.Data.IDbTransaction
  implements:
  - System.Data.IDbConnection.BeginTransaction
  name.vb: System.Data.IDbConnection.BeginTransaction()
- uid: System.Data.Common.DbConnection.System#Data#IDbConnection#BeginTransaction(System.Data.IsolationLevel)
  commentId: M:System.Data.Common.DbConnection.System#Data#IDbConnection#BeginTransaction(System.Data.IsolationLevel)
  id: System#Data#IDbConnection#BeginTransaction(System.Data.IsolationLevel)
  isEii: true
  parent: System.Data.Common.DbConnection
  langs:
  - csharp
  - vb
  name: IDbConnection.BeginTransaction(IsolationLevel)
  fullName: System.Data.Common.DbConnection.System.Data.IDbConnection.BeginTransaction(System.Data.IsolationLevel)
  type: Method
  source:
    remote:
      path: src/System.Data.Common/src/System/Data/Common/DbConnection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: System.Data.IDbConnection.BeginTransaction
    path: src/System.Data.Common/src/System/Data/Common/DbConnection.cs
    startLine: 161
  assemblies:
  - System.Data.Common
  namespace: System.Data.Common
  syntax:
    content: IDbTransaction IDbConnection.BeginTransaction(IsolationLevel isolationLevel)
    content.vb: Function System.Data.IDbConnection.BeginTransaction(isolationLevel As IsolationLevel) As IDbTransaction Implements IDbConnection.BeginTransaction
    parameters:
    - id: isolationLevel
      type: System.Data.IsolationLevel
    return:
      type: System.Data.IDbTransaction
  implements:
  - System.Data.IDbConnection.BeginTransaction(System.Data.IsolationLevel)
  name.vb: System.Data.IDbConnection.BeginTransaction(IsolationLevel)
- uid: System.Data.Common.DbConnection.System#Data#IDbConnection#CreateCommand
  commentId: M:System.Data.Common.DbConnection.System#Data#IDbConnection#CreateCommand
  id: System#Data#IDbConnection#CreateCommand
  isEii: true
  parent: System.Data.Common.DbConnection
  langs:
  - csharp
  - vb
  name: IDbConnection.CreateCommand()
  fullName: System.Data.Common.DbConnection.System.Data.IDbConnection.CreateCommand()
  type: Method
  source:
    remote:
      path: src/System.Data.Common/src/System/Data/Common/DbConnection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: System.Data.IDbConnection.CreateCommand
    path: src/System.Data.Common/src/System/Data/Common/DbConnection.cs
    startLine: 166
  assemblies:
  - System.Data.Common
  namespace: System.Data.Common
  syntax:
    content: IDbCommand IDbConnection.CreateCommand()
    content.vb: Function System.Data.IDbConnection.CreateCommand As IDbCommand Implements IDbConnection.CreateCommand
    return:
      type: System.Data.IDbCommand
  implements:
  - System.Data.IDbConnection.CreateCommand
  name.vb: System.Data.IDbConnection.CreateCommand()
- uid: System.Data.Common.DbConnection.Dispose
  commentId: M:System.Data.Common.DbConnection.Dispose
  id: Dispose
  parent: System.Data.Common.DbConnection
  langs:
  - csharp
  - vb
  name: Dispose()
  fullName: System.Data.Common.DbConnection.Dispose()
  type: Method
  source:
    remote:
      path: src/System.Data.Common/src/System/Data/Common/DbConnection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Dispose
    path: src/System.Data.Common/src/System/Data/Common/DbConnection.cs
    startLine: 142
  assemblies:
  - System.Data.Common
  namespace: System.Data.Common
  syntax:
    content: public void Dispose()
    content.vb: Public Sub Dispose
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Data.Common.DbConnection.Dispose(System.Boolean)
  commentId: M:System.Data.Common.DbConnection.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Data.Common.DbConnection
  langs:
  - csharp
  - vb
  name: Dispose(Boolean)
  fullName: System.Data.Common.DbConnection.Dispose(System.Boolean)
  type: Method
  source:
    remote:
      path: src/System.Data.Common/src/System/Data/Common/DbConnection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Dispose
    path: src/System.Data.Common/src/System/Data/Common/DbConnection.cs
    startLine: 148
  assemblies:
  - System.Data.Common
  namespace: System.Data.Common
  syntax:
    content: protected virtual void Dispose(bool disposing)
    content.vb: Protected Overridable Sub Dispose(disposing As Boolean)
    parameters:
    - id: disposing
      type: System.Boolean
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
references:
- uid: System.Data.Common
  isExternal: false
  name: System.Data.Common
  fullName: System.Data.Common
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System.Data.IDbConnection
  parent: System.Data
  isExternal: false
  name: IDbConnection
  fullName: System.Data.IDbConnection
- uid: System.IDisposable
  parent: System
  isExternal: false
  name: IDisposable
  fullName: System.IDisposable
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Data
  isExternal: false
  name: System.Data
  fullName: System.Data
- uid: System.Data.IDbConnection.ConnectionString
  parent: System.Data.IDbConnection
  isExternal: false
  name: ConnectionString
  fullName: System.Data.IDbConnection.ConnectionString
- uid: System.String
  parent: System
  isExternal: false
  name: String
  fullName: System.String
- uid: System.Data.IDbConnection.ConnectionTimeout
  parent: System.Data.IDbConnection
  isExternal: false
  name: ConnectionTimeout
  fullName: System.Data.IDbConnection.ConnectionTimeout
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  fullName: System.Int32
- uid: System.Data.IDbConnection.Database
  parent: System.Data.IDbConnection
  isExternal: false
  name: Database
  fullName: System.Data.IDbConnection.Database
- uid: System.Data.IDbConnection.State
  parent: System.Data.IDbConnection
  isExternal: false
  name: State
  fullName: System.Data.IDbConnection.State
- uid: System.Data.ConnectionState
  parent: System.Data
  isExternal: false
  name: ConnectionState
  fullName: System.Data.ConnectionState
- uid: System.Data.StateChangeEventHandler
  parent: System.Data
  isExternal: false
  name: StateChangeEventHandler
  fullName: System.Data.StateChangeEventHandler
- uid: System.Data.IsolationLevel
  parent: System.Data
  isExternal: false
  name: IsolationLevel
  fullName: System.Data.IsolationLevel
- uid: System.Data.Common.DbTransaction
  parent: System.Data.Common
  isExternal: false
  name: DbTransaction
  fullName: System.Data.Common.DbTransaction
- uid: System.Data.IDbConnection.ChangeDatabase(System.String)
  parent: System.Data.IDbConnection
  isExternal: true
  name: ChangeDatabase(String)
  fullName: System.Data.IDbConnection.ChangeDatabase(System.String)
  spec.csharp:
  - uid: System.Data.IDbConnection.ChangeDatabase(System.String)
    name: ChangeDatabase
    fullName: System.Data.IDbConnection.ChangeDatabase
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Data.IDbConnection.ChangeDatabase(System.String)
    name: ChangeDatabase
    fullName: System.Data.IDbConnection.ChangeDatabase
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: System.Data.IDbConnection.Close
  parent: System.Data.IDbConnection
  isExternal: false
  name: Close()
  fullName: System.Data.IDbConnection.Close()
  spec.csharp:
  - uid: System.Data.IDbConnection.Close
    name: Close
    fullName: System.Data.IDbConnection.Close
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Data.IDbConnection.Close
    name: Close
    fullName: System.Data.IDbConnection.Close
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Data.Common.DbCommand
  parent: System.Data.Common
  isExternal: false
  name: DbCommand
  fullName: System.Data.Common.DbCommand
- uid: System.Data.StateChangeEventArgs
  parent: System.Data
  isExternal: false
  name: StateChangeEventArgs
  fullName: System.Data.StateChangeEventArgs
- uid: System.Data.IDbConnection.Open
  parent: System.Data.IDbConnection
  isExternal: false
  name: Open()
  fullName: System.Data.IDbConnection.Open()
  spec.csharp:
  - uid: System.Data.IDbConnection.Open
    name: Open
    fullName: System.Data.IDbConnection.Open
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Data.IDbConnection.Open
    name: Open
    fullName: System.Data.IDbConnection.Open
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: false
  name: Threading.Tasks.Task
  fullName: System.Threading.Tasks.Task
- uid: System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: System.Threading.CancellationToken
  parent: System.Threading
  isExternal: false
  name: Threading.CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading
  isExternal: false
  name: System.Threading
  fullName: System.Threading
- uid: System.Data.IDbConnection.BeginTransaction
  parent: System.Data.IDbConnection
  isExternal: false
  name: BeginTransaction()
  fullName: System.Data.IDbConnection.BeginTransaction()
  spec.csharp:
  - uid: System.Data.IDbConnection.BeginTransaction
    name: BeginTransaction
    fullName: System.Data.IDbConnection.BeginTransaction
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Data.IDbConnection.BeginTransaction
    name: BeginTransaction
    fullName: System.Data.IDbConnection.BeginTransaction
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Data.IDbTransaction
  parent: System.Data
  isExternal: false
  name: IDbTransaction
  fullName: System.Data.IDbTransaction
- uid: System.Data.IDbConnection.BeginTransaction(System.Data.IsolationLevel)
  parent: System.Data.IDbConnection
  isExternal: false
  name: BeginTransaction(IsolationLevel)
  fullName: System.Data.IDbConnection.BeginTransaction(System.Data.IsolationLevel)
  spec.csharp:
  - uid: System.Data.IDbConnection.BeginTransaction(System.Data.IsolationLevel)
    name: BeginTransaction
    fullName: System.Data.IDbConnection.BeginTransaction
  - name: (
    fullName: (
  - uid: System.Data.IsolationLevel
    name: IsolationLevel
    fullName: System.Data.IsolationLevel
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Data.IDbConnection.BeginTransaction(System.Data.IsolationLevel)
    name: BeginTransaction
    fullName: System.Data.IDbConnection.BeginTransaction
  - name: (
    fullName: (
  - uid: System.Data.IsolationLevel
    name: IsolationLevel
    fullName: System.Data.IsolationLevel
  - name: )
    fullName: )
- uid: System.Data.IDbConnection.CreateCommand
  parent: System.Data.IDbConnection
  isExternal: false
  name: CreateCommand()
  fullName: System.Data.IDbConnection.CreateCommand()
  spec.csharp:
  - uid: System.Data.IDbConnection.CreateCommand
    name: CreateCommand
    fullName: System.Data.IDbConnection.CreateCommand
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Data.IDbConnection.CreateCommand
    name: CreateCommand
    fullName: System.Data.IDbConnection.CreateCommand
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Data.IDbCommand
  parent: System.Data
  isExternal: false
  name: IDbCommand
  fullName: System.Data.IDbCommand
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  fullName: System.Boolean
