items:
- uid: Microsoft.Win32.Registry
  commentId: T:Microsoft.Win32.Registry
  id: Registry
  parent: Microsoft.Win32
  children:
  - Microsoft.Win32.Registry.ClassesRoot
  - Microsoft.Win32.Registry.CurrentConfig
  - Microsoft.Win32.Registry.CurrentUser
  - Microsoft.Win32.Registry.GetValue(System.String,System.String,System.Object)
  - Microsoft.Win32.Registry.LocalMachine
  - Microsoft.Win32.Registry.PerformanceData
  - Microsoft.Win32.Registry.SetValue(System.String,System.String,System.Object)
  - Microsoft.Win32.Registry.SetValue(System.String,System.String,System.Object,Microsoft.Win32.RegistryValueKind)
  - Microsoft.Win32.Registry.Users
  langs:
  - csharp
  - vb
  name: Registry
  fullName: Microsoft.Win32.Registry
  type: Class
  source:
    remote:
      path: src/mscorlib/src/Microsoft/Win32/Registry.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Registry
    path: src/mscorlib/src/Microsoft/Win32/Registry.cs
    startLine: 17
  assemblies:
  - Microsoft.Win32.Registry
  namespace: Microsoft.Win32
  summary: Provides <xref href="Microsoft.Win32.RegistryKey" data-throw-if-not-resolved="false"></xref> objects that represent the root keys in the Windows registry, and static methods to access key/value pairs.
  syntax:
    content: 'public class Registry : object'
    content.vb: >-
      Public Class Registry
          Inherits Object
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Win32.Registry.ClassesRoot
  commentId: F:Microsoft.Win32.Registry.ClassesRoot
  id: ClassesRoot
  parent: Microsoft.Win32.Registry
  langs:
  - csharp
  - vb
  name: ClassesRoot
  fullName: Microsoft.Win32.Registry.ClassesRoot
  type: Field
  source:
    remote:
      path: src/mscorlib/src/Microsoft/Win32/Registry.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ClassesRoot
    path: src/mscorlib/src/Microsoft/Win32/Registry.cs
    startLine: 43
  assemblies:
  - Microsoft.Win32.Registry
  namespace: Microsoft.Win32
  summary: Defines the types (or classes) of documents and the properties associated with those types. This field reads the Windows registry base key HKEY_CLASSES_ROOT.
  syntax:
    content: public static readonly RegistryKey ClassesRoot
    content.vb: Public Shared ReadOnly ClassesRoot As RegistryKey
    return:
      type: Microsoft.Win32.RegistryKey
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.Win32.Registry.CurrentConfig
  commentId: F:Microsoft.Win32.Registry.CurrentConfig
  id: CurrentConfig
  parent: Microsoft.Win32.Registry
  langs:
  - csharp
  - vb
  name: CurrentConfig
  fullName: Microsoft.Win32.Registry.CurrentConfig
  type: Field
  source:
    remote:
      path: src/mscorlib/src/Microsoft/Win32/Registry.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: CurrentConfig
    path: src/mscorlib/src/Microsoft/Win32/Registry.cs
    startLine: 64
  assemblies:
  - Microsoft.Win32.Registry
  namespace: Microsoft.Win32
  summary: Contains configuration information pertaining to the hardware that is not specific to the user. This field reads the Windows registry base key HKEY_CURRENT_CONFIG.
  syntax:
    content: public static readonly RegistryKey CurrentConfig
    content.vb: Public Shared ReadOnly CurrentConfig As RegistryKey
    return:
      type: Microsoft.Win32.RegistryKey
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.Win32.Registry.CurrentUser
  commentId: F:Microsoft.Win32.Registry.CurrentUser
  id: CurrentUser
  parent: Microsoft.Win32.Registry
  langs:
  - csharp
  - vb
  name: CurrentUser
  fullName: Microsoft.Win32.Registry.CurrentUser
  type: Field
  source:
    remote:
      path: src/mscorlib/src/Microsoft/Win32/Registry.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: CurrentUser
    path: src/mscorlib/src/Microsoft/Win32/Registry.cs
    startLine: 29
  assemblies:
  - Microsoft.Win32.Registry
  namespace: Microsoft.Win32
  summary: 'Contains information about the current user preferences. This field reads the Windows registry base key HKEY_CURRENT_USER '
  syntax:
    content: public static readonly RegistryKey CurrentUser
    content.vb: Public Shared ReadOnly CurrentUser As RegistryKey
    return:
      type: Microsoft.Win32.RegistryKey
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.Win32.Registry.LocalMachine
  commentId: F:Microsoft.Win32.Registry.LocalMachine
  id: LocalMachine
  parent: Microsoft.Win32.Registry
  langs:
  - csharp
  - vb
  name: LocalMachine
  fullName: Microsoft.Win32.Registry.LocalMachine
  type: Field
  source:
    remote:
      path: src/mscorlib/src/Microsoft/Win32/Registry.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: LocalMachine
    path: src/mscorlib/src/Microsoft/Win32/Registry.cs
    startLine: 36
  assemblies:
  - Microsoft.Win32.Registry
  namespace: Microsoft.Win32
  summary: Contains the configuration data for the local machine. This field reads the Windows registry base key HKEY_LOCAL_MACHINE.
  syntax:
    content: public static readonly RegistryKey LocalMachine
    content.vb: Public Shared ReadOnly LocalMachine As RegistryKey
    return:
      type: Microsoft.Win32.RegistryKey
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.Win32.Registry.PerformanceData
  commentId: F:Microsoft.Win32.Registry.PerformanceData
  id: PerformanceData
  parent: Microsoft.Win32.Registry
  langs:
  - csharp
  - vb
  name: PerformanceData
  fullName: Microsoft.Win32.Registry.PerformanceData
  type: Field
  source:
    remote:
      path: src/mscorlib/src/Microsoft/Win32/Registry.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: PerformanceData
    path: src/mscorlib/src/Microsoft/Win32/Registry.cs
    startLine: 57
  assemblies:
  - Microsoft.Win32.Registry
  namespace: Microsoft.Win32
  summary: Contains performance information for software components. This field reads the Windows registry base key HKEY_PERFORMANCE_DATA.
  syntax:
    content: public static readonly RegistryKey PerformanceData
    content.vb: Public Shared ReadOnly PerformanceData As RegistryKey
    return:
      type: Microsoft.Win32.RegistryKey
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.Win32.Registry.Users
  commentId: F:Microsoft.Win32.Registry.Users
  id: Users
  parent: Microsoft.Win32.Registry
  langs:
  - csharp
  - vb
  name: Users
  fullName: Microsoft.Win32.Registry.Users
  type: Field
  source:
    remote:
      path: src/mscorlib/src/Microsoft/Win32/Registry.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Users
    path: src/mscorlib/src/Microsoft/Win32/Registry.cs
    startLine: 50
  assemblies:
  - Microsoft.Win32.Registry
  namespace: Microsoft.Win32
  summary: Contains information about the default user configuration. This field reads the Windows registry base key HKEY_USERS.
  syntax:
    content: public static readonly RegistryKey Users
    content.vb: Public Shared ReadOnly Users As RegistryKey
    return:
      type: Microsoft.Win32.RegistryKey
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.Win32.Registry.GetValue(System.String,System.String,System.Object)
  commentId: M:Microsoft.Win32.Registry.GetValue(System.String,System.String,System.Object)
  id: GetValue(System.String,System.String,System.Object)
  parent: Microsoft.Win32.Registry
  langs:
  - csharp
  - vb
  name: GetValue(String, String, Object)
  fullName: Microsoft.Win32.Registry.GetValue(System.String, System.String, System.Object)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/Microsoft/Win32/Registry.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: GetValue
    path: src/mscorlib/src/Microsoft/Win32/Registry.cs
    startLine: 131
  assemblies:
  - Microsoft.Win32.Registry
  namespace: Microsoft.Win32
  summary: 'Retrieves the value associated with the specified name, in the specified registry key. If the name is not found in the specified key, returns a default value that you provide, or null if the specified key does not exist. '
  syntax:
    content: public static object GetValue(string keyName, string valueName, object defaultValue)
    content.vb: Public Shared Function GetValue(keyName As String, valueName As String, defaultValue As Object) As Object
    parameters:
    - id: keyName
      type: System.String
      description: The full registry path of the key, beginning with a valid registry root, such as "HKEY_CURRENT_USER".
    - id: valueName
      type: System.String
      description: The name of the name/value pair.
    - id: defaultValue
      type: System.Object
      description: The value to return if <em>valueName</em> does not exist.
    return:
      type: System.Object
      description: null if the subkey specified by <em>keyName</em> does not exist; otherwise, the value associated with <em>valueName</em>, or <em>defaultValue</em> if <em>valueName</em> is not found.
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: 'The user does not have the permissions required to read from the registry key. '
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: 'The <xref href="Microsoft.Win32.RegistryKey" data-throw-if-not-resolved="false"></xref> that contains the specified value has been marked for deletion. '
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<em>keyName</em> does not begin with a valid registry root. "
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Win32.Registry.SetValue(System.String,System.String,System.Object)
  commentId: M:Microsoft.Win32.Registry.SetValue(System.String,System.String,System.Object)
  id: SetValue(System.String,System.String,System.Object)
  parent: Microsoft.Win32.Registry
  langs:
  - csharp
  - vb
  name: SetValue(String, String, Object)
  fullName: Microsoft.Win32.Registry.SetValue(System.String, System.String, System.Object)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/Microsoft/Win32/Registry.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: SetValue
    path: src/mscorlib/src/Microsoft/Win32/Registry.cs
    startLine: 148
  assemblies:
  - Microsoft.Win32.Registry
  namespace: Microsoft.Win32
  summary: Sets the specified name/value pair on the specified registry key. If the specified key does not exist, it is created.
  syntax:
    content: public static void SetValue(string keyName, string valueName, object value)
    content.vb: Public Shared Sub SetValue(keyName As String, valueName As String, value As Object)
    parameters:
    - id: keyName
      type: System.String
      description: The full registry path of the key, beginning with a valid registry root, such as "HKEY_CURRENT_USER".
    - id: valueName
      type: System.String
      description: The name of the name/value pair.
    - id: value
      type: System.Object
      description: The value to be stored.
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>value</em> is null. "
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<em>keyName</em> does not begin with a valid registry root. -or-<em>keyName</em> is longer than the maximum length allowed (255 characters)."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: 'The <xref href="Microsoft.Win32.RegistryKey" data-throw-if-not-resolved="false"></xref> is read-only, and thus cannot be written to; for example, it is a root-level node. '
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: 'The user does not have the permissions required to create or modify registry keys. '
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Win32.Registry.SetValue(System.String,System.String,System.Object,Microsoft.Win32.RegistryValueKind)
  commentId: M:Microsoft.Win32.Registry.SetValue(System.String,System.String,System.Object,Microsoft.Win32.RegistryValueKind)
  id: SetValue(System.String,System.String,System.Object,Microsoft.Win32.RegistryValueKind)
  parent: Microsoft.Win32.Registry
  langs:
  - csharp
  - vb
  name: SetValue(String, String, Object, RegistryValueKind)
  fullName: Microsoft.Win32.Registry.SetValue(System.String, System.String, System.Object, Microsoft.Win32.RegistryValueKind)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/Microsoft/Win32/Registry.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: SetValue
    path: src/mscorlib/src/Microsoft/Win32/Registry.cs
    startLine: 152
  assemblies:
  - Microsoft.Win32.Registry
  namespace: Microsoft.Win32
  summary: Sets the name/value pair on the specified registry key, using the specified registry data type. If the specified key does not exist, it is created.
  syntax:
    content: public static void SetValue(string keyName, string valueName, object value, RegistryValueKind valueKind)
    content.vb: Public Shared Sub SetValue(keyName As String, valueName As String, value As Object, valueKind As RegistryValueKind)
    parameters:
    - id: keyName
      type: System.String
      description: The full registry path of the key, beginning with a valid registry root, such as "HKEY_CURRENT_USER".
    - id: valueName
      type: System.String
      description: The name of the name/value pair.
    - id: value
      type: System.Object
      description: The value to be stored.
    - id: valueKind
      type: Microsoft.Win32.RegistryValueKind
      description: The registry data type to use when storing the data.
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>value</em> is null. "
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<em>keyName</em> does not begin with a valid registry root.-or-<em>keyName</em> is longer than the maximum length allowed (255 characters).-or- The type of <em>value</em> did not match the registry data type specified by <em>valueKind</em>, therefore the data could not be converted properly. "
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: 'The <xref href="Microsoft.Win32.RegistryKey" data-throw-if-not-resolved="false"></xref> is read-only, and thus cannot be written to; for example, it is a root-level node, or the key has not been opened with write access. '
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: 'The user does not have the permissions required to create or modify registry keys. '
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Microsoft.Win32
  isExternal: false
  name: Microsoft.Win32
  fullName: Microsoft.Win32
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: Microsoft.Win32.RegistryKey
  parent: Microsoft.Win32
  isExternal: false
  name: RegistryKey
  fullName: Microsoft.Win32.RegistryKey
- uid: System.String
  parent: System
  isExternal: false
  name: String
  fullName: System.String
- uid: Microsoft.Win32.RegistryValueKind
  parent: Microsoft.Win32
  isExternal: false
  name: RegistryValueKind
  fullName: Microsoft.Win32.RegistryValueKind
- uid: System.Security.SecurityException
  isExternal: false
  name: SecurityException
  fullName: System.Security.SecurityException
- uid: System.IO.IOException
  parent: System.IO
  isExternal: false
  name: IOException
  fullName: System.IO.IOException
- uid: System.ArgumentException
  parent: System
  isExternal: false
  name: ArgumentException
  fullName: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: false
  name: ArgumentNullException
  fullName: System.ArgumentNullException
- uid: System.UnauthorizedAccessException
  isExternal: false
  name: UnauthorizedAccessException
  fullName: System.UnauthorizedAccessException
