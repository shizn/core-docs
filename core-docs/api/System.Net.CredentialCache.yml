items:
- uid: System.Net.CredentialCache
  commentId: T:System.Net.CredentialCache
  id: CredentialCache
  parent: System.Net
  children:
  - System.Net.CredentialCache.#ctor
  - System.Net.CredentialCache.Add(System.String,System.Int32,System.String,System.Net.NetworkCredential)
  - System.Net.CredentialCache.Add(System.Uri,System.String,System.Net.NetworkCredential)
  - System.Net.CredentialCache.DefaultCredentials
  - System.Net.CredentialCache.DefaultNetworkCredentials
  - System.Net.CredentialCache.GetCredential(System.String,System.Int32,System.String)
  - System.Net.CredentialCache.GetCredential(System.Uri,System.String)
  - System.Net.CredentialCache.GetEnumerator
  - System.Net.CredentialCache.Remove(System.String,System.Int32,System.String)
  - System.Net.CredentialCache.Remove(System.Uri,System.String)
  langs:
  - csharp
  - vb
  name: CredentialCache
  fullName: System.Net.CredentialCache
  type: Class
  source:
    remote:
      path: src/System.Net.Primitives/src/System/Net/CredentialCache.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CredentialCache
    path: src/System.Net.Primitives/src/System/Net/CredentialCache.cs
    startLine: 12
  assemblies:
  - System.Net.Primitives
  namespace: System.Net
  summary: Provides storage for multiple credentials.
  syntax:
    content: 'public class CredentialCache : Collections.IEnumerable, ICredentials, ICredentialsByHost'
    content.vb: >-
      Public Class CredentialCache
          Inherits Collections.IEnumerable
          Implements ICredentials, ICredentialsByHost
  inheritance:
  - System.Object
  implements:
  - System.Net.ICredentials
  - System.Net.ICredentialsByHost
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: System.Net.CredentialCache.#ctor
  commentId: M:System.Net.CredentialCache.#ctor
  id: '#ctor'
  parent: System.Net.CredentialCache
  langs:
  - csharp
  - vb
  name: CredentialCache()
  fullName: System.Net.CredentialCache.CredentialCache()
  type: Constructor
  source:
    remote:
      path: src/System.Net.Primitives/src/System/Net/CredentialCache.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Net.Primitives/src/System/Net/CredentialCache.cs
    startLine: 23
  assemblies:
  - System.Net.Primitives
  namespace: System.Net
  summary: Creates a new instance of the <xref href="System.Net.CredentialCache" data-throw-if-not-resolved="false"></xref> class.
  syntax:
    content: public CredentialCache()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Net.CredentialCache.DefaultCredentials
  commentId: P:System.Net.CredentialCache.DefaultCredentials
  id: DefaultCredentials
  parent: System.Net.CredentialCache
  langs:
  - csharp
  - vb
  name: DefaultCredentials
  fullName: System.Net.CredentialCache.DefaultCredentials
  type: Property
  source:
    remote:
      path: src/System.Net.Primitives/src/System/Net/CredentialCache.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: DefaultCredentials
    path: src/System.Net.Primitives/src/System/Net/CredentialCache.cs
    startLine: 255
  assemblies:
  - System.Net.Primitives
  namespace: System.Net
  summary: Gets the system credentials of the application.
  syntax:
    content: public static ICredentials DefaultCredentials { get; }
    content.vb: Public Shared ReadOnly Property DefaultCredentials As ICredentials
    parameters: []
    return:
      type: System.Net.ICredentials
      description: An <xref href="System.Net.ICredentials" data-throw-if-not-resolved="false"></xref> that represents the system credentials of the application.
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: System.Net.CredentialCache.DefaultNetworkCredentials
  commentId: P:System.Net.CredentialCache.DefaultNetworkCredentials
  id: DefaultNetworkCredentials
  parent: System.Net.CredentialCache
  langs:
  - csharp
  - vb
  name: DefaultNetworkCredentials
  fullName: System.Net.CredentialCache.DefaultNetworkCredentials
  type: Property
  source:
    remote:
      path: src/System.Net.Primitives/src/System/Net/CredentialCache.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: DefaultNetworkCredentials
    path: src/System.Net.Primitives/src/System/Net/CredentialCache.cs
    startLine: 263
  assemblies:
  - System.Net.Primitives
  namespace: System.Net
  summary: Gets the network credentials of the current security context.
  syntax:
    content: public static NetworkCredential DefaultNetworkCredentials { get; }
    content.vb: Public Shared ReadOnly Property DefaultNetworkCredentials As NetworkCredential
    parameters: []
    return:
      type: System.Net.NetworkCredential
      description: An <xref href="System.Net.NetworkCredential" data-throw-if-not-resolved="false"></xref> that represents the network credentials of the current user or application.
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: System.Net.CredentialCache.Add(System.String,System.Int32,System.String,System.Net.NetworkCredential)
  commentId: M:System.Net.CredentialCache.Add(System.String,System.Int32,System.String,System.Net.NetworkCredential)
  id: Add(System.String,System.Int32,System.String,System.Net.NetworkCredential)
  parent: System.Net.CredentialCache
  langs:
  - csharp
  - vb
  name: Add(String, Int32, String, NetworkCredential)
  fullName: System.Net.CredentialCache.Add(System.String, System.Int32, System.String, System.Net.NetworkCredential)
  type: Method
  source:
    remote:
      path: src/System.Net.Primitives/src/System/Net/CredentialCache.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Add
    path: src/System.Net.Primitives/src/System/Net/CredentialCache.cs
    startLine: 57
  assemblies:
  - System.Net.Primitives
  namespace: System.Net
  summary: Adds a <xref href="System.Net.NetworkCredential" data-throw-if-not-resolved="false"></xref> instance for use with SMTP to the credential cache and associates it with a host computer, port, and authentication protocol. Credentials added using this method are valid for SMTP only. This method does not work for HTTP or FTP requests.
  syntax:
    content: public void Add(string host, int port, string authenticationType, NetworkCredential credential)
    content.vb: Public Sub Add(host As String, port As Integer, authenticationType As String, credential As NetworkCredential)
    parameters:
    - id: host
      type: System.String
      description: A <xref href="System.String" data-throw-if-not-resolved="false"></xref> that identifies the host computer.
    - id: port
      type: System.Int32
      description: A <xref href="System.Int32" data-throw-if-not-resolved="false"></xref> that specifies the port to connect to on <em>host</em>.
    - id: authenticationType
      type: System.String
      description: A <xref href="System.String" data-throw-if-not-resolved="false"></xref> that identifies the authentication scheme used when connecting to <em>host</em> using <em>cred</em>. See Remarks.
    - id: credential
      type: System.Net.NetworkCredential
      description: 'The <xref href="System.Net.NetworkCredential" data-throw-if-not-resolved="false"></xref> to add to the credential cache. '
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>host</em> is null. -or-<em>authType</em> is null. "
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<em>authType</em> not an accepted value. See Remarks. "
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<em>port</em> is less than zero."
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Net.CredentialCache.Add(System.Uri,System.String,System.Net.NetworkCredential)
  commentId: M:System.Net.CredentialCache.Add(System.Uri,System.String,System.Net.NetworkCredential)
  id: Add(System.Uri,System.String,System.Net.NetworkCredential)
  parent: System.Net.CredentialCache
  langs:
  - csharp
  - vb
  name: Add(Uri, String, NetworkCredential)
  fullName: System.Net.CredentialCache.Add(System.Uri, System.String, System.Net.NetworkCredential)
  type: Method
  source:
    remote:
      path: src/System.Net.Primitives/ref/System.Net.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Add
    path: src/System.Net.Primitives/ref/System.Net.Primitives.cs
    startLine: 83
  assemblies:
  - System.Net.Primitives
  namespace: System.Net
  summary: 'Adds a <xref href="System.Net.NetworkCredential" data-throw-if-not-resolved="false"></xref> instance to the credential cache for use with protocols other than SMTP and associates it with a Uniform Resource Identifier (URI) prefix and authentication protocol. '
  syntax:
    content: public void Add(Uri uriPrefix, string authType, NetworkCredential cred)
    content.vb: Public Sub Add(uriPrefix As Uri, authType As String, cred As NetworkCredential)
    parameters:
    - id: uriPrefix
      type: System.Uri
      description: 'A <xref href="System.Uri" data-throw-if-not-resolved="false"></xref> that specifies the URI prefix of the resources that the credential grants access to. '
    - id: authType
      type: System.String
      description: 'The authentication scheme used by the resource named in <em>uriPrefix</em>. '
    - id: cred
      type: System.Net.NetworkCredential
      description: 'The <xref href="System.Net.NetworkCredential" data-throw-if-not-resolved="false"></xref> to add to the credential cache. '
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>uriPrefix</em> is null. -or- <em>authType</em> is null. "
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: 'The same credentials are added more than once. '
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Net.CredentialCache.GetCredential(System.String,System.Int32,System.String)
  commentId: M:System.Net.CredentialCache.GetCredential(System.String,System.Int32,System.String)
  id: GetCredential(System.String,System.Int32,System.String)
  parent: System.Net.CredentialCache
  langs:
  - csharp
  - vb
  name: GetCredential(String, Int32, String)
  fullName: System.Net.CredentialCache.GetCredential(System.String, System.Int32, System.String)
  type: Method
  source:
    remote:
      path: src/System.Net.Primitives/src/System/Net/CredentialCache.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetCredential
    path: src/System.Net.Primitives/src/System/Net/CredentialCache.cs
    startLine: 200
  assemblies:
  - System.Net.Primitives
  namespace: System.Net
  summary: Returns the <xref href="System.Net.NetworkCredential" data-throw-if-not-resolved="false"></xref> instance associated with the specified host, port, and authentication protocol.
  syntax:
    content: public NetworkCredential GetCredential(string host, int port, string authenticationType)
    content.vb: Public Function GetCredential(host As String, port As Integer, authenticationType As String) As NetworkCredential
    parameters:
    - id: host
      type: System.String
      description: A <xref href="System.String" data-throw-if-not-resolved="false"></xref> that identifies the host computer.
    - id: port
      type: System.Int32
      description: A <xref href="System.Int32" data-throw-if-not-resolved="false"></xref> that specifies the port to connect to on <em>host</em>.
    - id: authenticationType
      type: System.String
      description: A <xref href="System.String" data-throw-if-not-resolved="false"></xref> that identifies the authentication scheme used when connecting to <em>host</em>. See Remarks.
    return:
      type: System.Net.NetworkCredential
      description: A <xref href="System.Net.NetworkCredential" data-throw-if-not-resolved="false"></xref> or, if there is no matching credential in the cache, null.
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>host</em> is null. -or- <em>authType</em> is null. "
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<em>authType</em> not an accepted value. See Remarks. -or-<em>host</em> is equal to the empty string (\"\")."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<em>port</em> is less than zero."
  implements:
  - System.Net.ICredentialsByHost.GetCredential(System.String,System.Int32,System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Net.CredentialCache.GetCredential(System.Uri,System.String)
  commentId: M:System.Net.CredentialCache.GetCredential(System.Uri,System.String)
  id: GetCredential(System.Uri,System.String)
  parent: System.Net.CredentialCache
  langs:
  - csharp
  - vb
  name: GetCredential(Uri, String)
  fullName: System.Net.CredentialCache.GetCredential(System.Uri, System.String)
  type: Method
  source:
    remote:
      path: src/System.Net.Primitives/ref/System.Net.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetCredential
    path: src/System.Net.Primitives/ref/System.Net.Primitives.cs
    startLine: 85
  assemblies:
  - System.Net.Primitives
  namespace: System.Net
  summary: Returns the <xref href="System.Net.NetworkCredential" data-throw-if-not-resolved="false"></xref> instance associated with the specified Uniform Resource Identifier (URI) and authentication type.
  syntax:
    content: public NetworkCredential GetCredential(Uri uriPrefix, string authType)
    content.vb: Public Function GetCredential(uriPrefix As Uri, authType As String) As NetworkCredential
    parameters:
    - id: uriPrefix
      type: System.Uri
      description: 'A <xref href="System.Uri" data-throw-if-not-resolved="false"></xref> that specifies the URI prefix of the resources that the credential grants access to. '
    - id: authType
      type: System.String
      description: 'The authentication scheme used by the resource named in <em>uriPrefix</em>. '
    return:
      type: System.Net.NetworkCredential
      description: A <xref href="System.Net.NetworkCredential" data-throw-if-not-resolved="false"></xref> or, if there is no matching credential in the cache, null.
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>uriPrefix</em> or <em>authType</em> is null. "
  implements:
  - System.Net.ICredentials.GetCredential(System.Uri,System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Net.CredentialCache.GetEnumerator
  commentId: M:System.Net.CredentialCache.GetEnumerator
  id: GetEnumerator
  parent: System.Net.CredentialCache
  langs:
  - csharp
  - vb
  name: GetEnumerator()
  fullName: System.Net.CredentialCache.GetEnumerator()
  type: Method
  source:
    remote:
      path: src/System.Net.Primitives/src/System/Net/CredentialCache.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetEnumerator
    path: src/System.Net.Primitives/src/System/Net/CredentialCache.cs
    startLine: 245
  assemblies:
  - System.Net.Primitives
  namespace: System.Net
  summary: Returns an enumerator that can iterate through the <xref href="System.Net.CredentialCache" data-throw-if-not-resolved="false"></xref> instance.
  syntax:
    content: public Collections.IEnumerator GetEnumerator()
    content.vb: Public Function GetEnumerator As Collections.IEnumerator
    return:
      type: System.Collections.IEnumerator
      description: An <xref href="System.Collections.IEnumerator" data-throw-if-not-resolved="false"></xref> for the <xref href="System.Net.CredentialCache" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Net.CredentialCache.Remove(System.String,System.Int32,System.String)
  commentId: M:System.Net.CredentialCache.Remove(System.String,System.Int32,System.String)
  id: Remove(System.String,System.Int32,System.String)
  parent: System.Net.CredentialCache
  langs:
  - csharp
  - vb
  name: Remove(String, Int32, String)
  fullName: System.Net.CredentialCache.Remove(System.String, System.Int32, System.String)
  type: Method
  source:
    remote:
      path: src/System.Net.Primitives/src/System/Net/CredentialCache.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Remove
    path: src/System.Net.Primitives/src/System/Net/CredentialCache.cs
    startLine: 120
  assemblies:
  - System.Net.Primitives
  namespace: System.Net
  summary: Deletes a <xref href="System.Net.NetworkCredential" data-throw-if-not-resolved="false"></xref> instance from the cache if it is associated with the specified host, port, and authentication protocol.
  syntax:
    content: public void Remove(string host, int port, string authenticationType)
    content.vb: Public Sub Remove(host As String, port As Integer, authenticationType As String)
    parameters:
    - id: host
      type: System.String
      description: A <xref href="System.String" data-throw-if-not-resolved="false"></xref> that identifies the host computer.
    - id: port
      type: System.Int32
      description: A <xref href="System.Int32" data-throw-if-not-resolved="false"></xref> that specifies the port to connect to on <em>host</em>.
    - id: authenticationType
      type: System.String
      description: A <xref href="System.String" data-throw-if-not-resolved="false"></xref> that identifies the authentication scheme used when connecting to <em>host</em>. See Remarks.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Net.CredentialCache.Remove(System.Uri,System.String)
  commentId: M:System.Net.CredentialCache.Remove(System.Uri,System.String)
  id: Remove(System.Uri,System.String)
  parent: System.Net.CredentialCache
  langs:
  - csharp
  - vb
  name: Remove(Uri, String)
  fullName: System.Net.CredentialCache.Remove(System.Uri, System.String)
  type: Method
  source:
    remote:
      path: src/System.Net.Primitives/ref/System.Net.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Remove
    path: src/System.Net.Primitives/ref/System.Net.Primitives.cs
    startLine: 88
  assemblies:
  - System.Net.Primitives
  namespace: System.Net
  summary: Deletes a <xref href="System.Net.NetworkCredential" data-throw-if-not-resolved="false"></xref> instance from the cache if it is associated with the specified Uniform Resource Identifier (URI) prefix and authentication protocol.
  syntax:
    content: public void Remove(Uri uriPrefix, string authType)
    content.vb: Public Sub Remove(uriPrefix As Uri, authType As String)
    parameters:
    - id: uriPrefix
      type: System.Uri
      description: 'A <xref href="System.Uri" data-throw-if-not-resolved="false"></xref> that specifies the URI prefix of the resources that the credential is used for. '
    - id: authType
      type: System.String
      description: 'The authentication scheme used by the host named in <em>uriPrefix</em>. '
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: System.Net
  isExternal: false
  name: System.Net
  fullName: System.Net
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System.Net.ICredentials
  parent: System.Net
  isExternal: false
  name: ICredentials
  fullName: System.Net.ICredentials
- uid: System.Net.ICredentialsByHost
  parent: System.Net
  isExternal: false
  name: ICredentialsByHost
  fullName: System.Net.ICredentialsByHost
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Net.NetworkCredential
  parent: System.Net
  isExternal: false
  name: NetworkCredential
  fullName: System.Net.NetworkCredential
- uid: System.String
  parent: System
  isExternal: false
  name: String
  fullName: System.String
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  fullName: System.Int32
- uid: System.Uri
  parent: System
  isExternal: false
  name: Uri
  fullName: System.Uri
- uid: System.Net.ICredentialsByHost.GetCredential(System.String,System.Int32,System.String)
  parent: System.Net.ICredentialsByHost
  isExternal: true
  name: GetCredential(String, Int32, String)
  fullName: System.Net.ICredentialsByHost.GetCredential(System.String, System.Int32, System.String)
  spec.csharp:
  - uid: System.Net.ICredentialsByHost.GetCredential(System.String,System.Int32,System.String)
    name: GetCredential
    fullName: System.Net.ICredentialsByHost.GetCredential
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Net.ICredentialsByHost.GetCredential(System.String,System.Int32,System.String)
    name: GetCredential
    fullName: System.Net.ICredentialsByHost.GetCredential
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: System.Net.ICredentials.GetCredential(System.Uri,System.String)
  parent: System.Net.ICredentials
  isExternal: true
  name: GetCredential(Uri, String)
  fullName: System.Net.ICredentials.GetCredential(System.Uri, System.String)
  spec.csharp:
  - uid: System.Net.ICredentials.GetCredential(System.Uri,System.String)
    name: GetCredential
    fullName: System.Net.ICredentials.GetCredential
  - name: (
    fullName: (
  - uid: System.Uri
    name: Uri
    fullName: System.Uri
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Net.ICredentials.GetCredential(System.Uri,System.String)
    name: GetCredential
    fullName: System.Net.ICredentials.GetCredential
  - name: (
    fullName: (
  - uid: System.Uri
    name: Uri
    fullName: System.Uri
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: false
  name: Collections.IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Collections
  isExternal: false
  name: System.Collections
  fullName: System.Collections
- uid: System.ArgumentNullException
  isExternal: false
  name: ArgumentNullException
  fullName: System.ArgumentNullException
- uid: System.ArgumentException
  parent: System
  isExternal: false
  name: ArgumentException
  fullName: System.ArgumentException
- uid: System.ArgumentOutOfRangeException
  isExternal: false
  name: ArgumentOutOfRangeException
  fullName: System.ArgumentOutOfRangeException
