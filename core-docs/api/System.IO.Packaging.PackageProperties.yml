items:
- uid: System.IO.Packaging.PackageProperties
  commentId: T:System.IO.Packaging.PackageProperties
  id: PackageProperties
  parent: System.IO.Packaging
  children:
  - System.IO.Packaging.PackageProperties.#ctor
  - System.IO.Packaging.PackageProperties.Category
  - System.IO.Packaging.PackageProperties.ContentStatus
  - System.IO.Packaging.PackageProperties.ContentType
  - System.IO.Packaging.PackageProperties.Created
  - System.IO.Packaging.PackageProperties.Creator
  - System.IO.Packaging.PackageProperties.Description
  - System.IO.Packaging.PackageProperties.Dispose
  - System.IO.Packaging.PackageProperties.Dispose(System.Boolean)
  - System.IO.Packaging.PackageProperties.Identifier
  - System.IO.Packaging.PackageProperties.Keywords
  - System.IO.Packaging.PackageProperties.Language
  - System.IO.Packaging.PackageProperties.LastModifiedBy
  - System.IO.Packaging.PackageProperties.LastPrinted
  - System.IO.Packaging.PackageProperties.Modified
  - System.IO.Packaging.PackageProperties.Revision
  - System.IO.Packaging.PackageProperties.Subject
  - System.IO.Packaging.PackageProperties.Title
  - System.IO.Packaging.PackageProperties.Version
  langs:
  - csharp
  - vb
  name: PackageProperties
  fullName: System.IO.Packaging.PackageProperties
  type: Class
  source:
    remote:
      path: src/System.IO.Packaging/ref/System.IO.Packaging.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: PackageProperties
    path: src/System.IO.Packaging/ref/System.IO.Packaging.cs
    startLine: 101
  assemblies:
  - System.IO.Packaging
  namespace: System.IO.Packaging
  summary: "\n<p>Represents the core properties of a <xref href=\"System.IO.Packaging.Package\" data-throw-if-not-resolved=\"false\"></xref>.  </p>\n"
  example:
  - 
  syntax:
    content: 'public abstract class PackageProperties : IDisposable'
    content.vb: >-
      Public MustInherit Class PackageProperties
          Implements IDisposable
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: System.IO.Packaging.PackageProperties.#ctor
  commentId: M:System.IO.Packaging.PackageProperties.#ctor
  id: '#ctor'
  parent: System.IO.Packaging.PackageProperties
  langs:
  - csharp
  - vb
  name: PackageProperties()
  fullName: System.IO.Packaging.PackageProperties.PackageProperties()
  type: Constructor
  source:
    remote:
      path: src/System.IO.Packaging/ref/System.IO.Packaging.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.IO.Packaging/ref/System.IO.Packaging.cs
    startLine: 103
  assemblies:
  - System.IO.Packaging
  namespace: System.IO.Packaging
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.IO.Packaging.PackageProperties\" data-throw-if-not-resolved=\"false\"></xref> class. </p>\n"
  example:
  - 
  syntax:
    content: protected PackageProperties()
    content.vb: Protected Sub New
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: System.IO.Packaging.PackageProperties.Category
  commentId: P:System.IO.Packaging.PackageProperties.Category
  id: Category
  parent: System.IO.Packaging.PackageProperties
  langs:
  - csharp
  - vb
  name: Category
  fullName: System.IO.Packaging.PackageProperties.Category
  type: Property
  source:
    remote:
      path: src/System.IO.Packaging/ref/System.IO.Packaging.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Category
    path: src/System.IO.Packaging/ref/System.IO.Packaging.cs
    startLine: 104
  assemblies:
  - System.IO.Packaging
  namespace: System.IO.Packaging
  summary: "\n<p>When overridden in a derived class, gets or sets the category of the <xref href=\"System.IO.Packaging.Package\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  remarks: "\n<p>The <xref href=\"System.IO.Packaging.PackageProperties.Category\" data-throw-if-not-resolved=\"false\"></xref> value is typically used as part of the application user interface (UI)Â to create labels for navigation controls.</p>\n"
  example:
  - 
  syntax:
    content: public abstract string Category { get; set; }
    content.vb: Public MustOverride Property Category As String
    parameters: []
    return:
      type: System.String
      description: "\n<p>The category of the content that is contained in the <xref href=\"System.IO.Packaging.Package\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  seealso:
  - type: System.IO.Packaging.PackageProperties.ContentType
    commentId: P:System.IO.Packaging.PackageProperties.ContentType
  modifiers.csharp:
  - public
  - abstract
  - get
  - set
  modifiers.vb:
  - Public
  - MustOverride
- uid: System.IO.Packaging.PackageProperties.ContentStatus
  commentId: P:System.IO.Packaging.PackageProperties.ContentStatus
  id: ContentStatus
  parent: System.IO.Packaging.PackageProperties
  langs:
  - csharp
  - vb
  name: ContentStatus
  fullName: System.IO.Packaging.PackageProperties.ContentStatus
  type: Property
  source:
    remote:
      path: src/System.IO.Packaging/ref/System.IO.Packaging.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ContentStatus
    path: src/System.IO.Packaging/ref/System.IO.Packaging.cs
    startLine: 105
  assemblies:
  - System.IO.Packaging
  namespace: System.IO.Packaging
  summary: "\n<p>When overridden in a derived class, gets or sets a value that represents the status of the <xref href=\"System.IO.Packaging.Package\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  remarks: "\n<p>Example <xref href=\"System.IO.Packaging.PackageProperties.ContentStatus\" data-throw-if-not-resolved=\"false\"></xref> values include \"Draft\", \"Reviewed\", and \"Final\".</p>\n"
  example:
  - 
  syntax:
    content: public abstract string ContentStatus { get; set; }
    content.vb: Public MustOverride Property ContentStatus As String
    parameters: []
    return:
      type: System.String
      description: "\n<p>The status of the <xref href=\"System.IO.Packaging.Package\" data-throw-if-not-resolved=\"false\"></xref> content.</p>\n"
  modifiers.csharp:
  - public
  - abstract
  - get
  - set
  modifiers.vb:
  - Public
  - MustOverride
- uid: System.IO.Packaging.PackageProperties.ContentType
  commentId: P:System.IO.Packaging.PackageProperties.ContentType
  id: ContentType
  parent: System.IO.Packaging.PackageProperties
  langs:
  - csharp
  - vb
  name: ContentType
  fullName: System.IO.Packaging.PackageProperties.ContentType
  type: Property
  source:
    remote:
      path: src/System.IO.Packaging/ref/System.IO.Packaging.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ContentType
    path: src/System.IO.Packaging/ref/System.IO.Packaging.cs
    startLine: 106
  assemblies:
  - System.IO.Packaging
  namespace: System.IO.Packaging
  summary: "\n<p>When overridden in a derived class, gets or sets a value that represents the type of content that is contained in the <xref href=\"System.IO.Packaging.Package\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  remarks: "\n<p>Example <xref href=\"System.IO.Packaging.PackageProperties.ContentType\" data-throw-if-not-resolved=\"false\"></xref> values include \"Whitepaper\", \"Security Bulletin\", and \"Exam\".</p>\n<p>This <xref href=\"System.IO.Packaging.PackageProperties.ContentType\" data-throw-if-not-resolved=\"false\"></xref> property is distinct from Multipurpose Internet Mail Extensions (MIME) content types as defined in RFC 2616.</p>\n"
  example:
  - 
  syntax:
    content: public abstract string ContentType { get; set; }
    content.vb: Public MustOverride Property ContentType As String
    parameters: []
    return:
      type: System.String
      description: "\n<p>The type of content that is contained in the <xref href=\"System.IO.Packaging.Package\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  seealso:
  - type: System.IO.Packaging.PackageProperties.Category
    commentId: P:System.IO.Packaging.PackageProperties.Category
  modifiers.csharp:
  - public
  - abstract
  - get
  - set
  modifiers.vb:
  - Public
  - MustOverride
- uid: System.IO.Packaging.PackageProperties.Created
  commentId: P:System.IO.Packaging.PackageProperties.Created
  id: Created
  parent: System.IO.Packaging.PackageProperties
  langs:
  - csharp
  - vb
  name: Created
  fullName: System.IO.Packaging.PackageProperties.Created
  type: Property
  source:
    remote:
      path: src/System.IO.Packaging/ref/System.IO.Packaging.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Created
    path: src/System.IO.Packaging/ref/System.IO.Packaging.cs
    startLine: 107
  assemblies:
  - System.IO.Packaging
  namespace: System.IO.Packaging
  summary: "\n<p>When overridden in a derived class, gets or sets the date and time the <xref href=\"System.IO.Packaging.Package\" data-throw-if-not-resolved=\"false\"></xref> was created.</p>\n"
  example:
  - 
  syntax:
    content: public abstract DateTime? Created { get; set; }
    content.vb: Public MustOverride Property Created As Date?
    parameters: []
    return:
      type: System.Nullable{System.DateTime}
      description: "\n<p>The date and time the <xref href=\"System.IO.Packaging.Package\" data-throw-if-not-resolved=\"false\"></xref> was initially created.</p>\n"
  seealso:
  - type: System.IO.Packaging.PackageProperties.Creator
    commentId: P:System.IO.Packaging.PackageProperties.Creator
  - type: System.IO.Packaging.PackageProperties.Modified
    commentId: P:System.IO.Packaging.PackageProperties.Modified
  modifiers.csharp:
  - public
  - abstract
  - get
  - set
  modifiers.vb:
  - Public
  - MustOverride
- uid: System.IO.Packaging.PackageProperties.Creator
  commentId: P:System.IO.Packaging.PackageProperties.Creator
  id: Creator
  parent: System.IO.Packaging.PackageProperties
  langs:
  - csharp
  - vb
  name: Creator
  fullName: System.IO.Packaging.PackageProperties.Creator
  type: Property
  source:
    remote:
      path: src/System.IO.Packaging/ref/System.IO.Packaging.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Creator
    path: src/System.IO.Packaging/ref/System.IO.Packaging.cs
    startLine: 108
  assemblies:
  - System.IO.Packaging
  namespace: System.IO.Packaging
  summary: "\n<p>When overridden in a derived class, gets or sets a value that identifies the individual or entity that created the <xref href=\"System.IO.Packaging.Package\" data-throw-if-not-resolved=\"false\"></xref> and its content.</p>\n"
  example:
  - 
  syntax:
    content: public abstract string Creator { get; set; }
    content.vb: Public MustOverride Property Creator As String
    parameters: []
    return:
      type: System.String
      description: "\n<p>The individual or entity that created the <xref href=\"System.IO.Packaging.Package\" data-throw-if-not-resolved=\"false\"></xref> and its content.</p>\n"
  seealso:
  - type: System.IO.Packaging.PackageProperties.Created
    commentId: P:System.IO.Packaging.PackageProperties.Created
  modifiers.csharp:
  - public
  - abstract
  - get
  - set
  modifiers.vb:
  - Public
  - MustOverride
- uid: System.IO.Packaging.PackageProperties.Description
  commentId: P:System.IO.Packaging.PackageProperties.Description
  id: Description
  parent: System.IO.Packaging.PackageProperties
  langs:
  - csharp
  - vb
  name: Description
  fullName: System.IO.Packaging.PackageProperties.Description
  type: Property
  source:
    remote:
      path: src/System.IO.Packaging/ref/System.IO.Packaging.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Description
    path: src/System.IO.Packaging/ref/System.IO.Packaging.cs
    startLine: 109
  assemblies:
  - System.IO.Packaging
  namespace: System.IO.Packaging
  summary: "\n<p>When overridden in a derived class, gets or sets a description of the content contained in the <xref href=\"System.IO.Packaging.Package\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  remarks: "\n<p>The <xref href=\"System.IO.Packaging.PackageProperties.Description\" data-throw-if-not-resolved=\"false\"></xref> may include but is not limited to: an abstract, table of contents, reference to a graphical representation of content, or a free-text account of the content.</p>\n"
  example:
  - 
  syntax:
    content: public abstract string Description { get; set; }
    content.vb: Public MustOverride Property Description As String
    parameters: []
    return:
      type: System.String
      description: "\n<p>A description of the content contained in the <xref href=\"System.IO.Packaging.Package\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  modifiers.csharp:
  - public
  - abstract
  - get
  - set
  modifiers.vb:
  - Public
  - MustOverride
- uid: System.IO.Packaging.PackageProperties.Identifier
  commentId: P:System.IO.Packaging.PackageProperties.Identifier
  id: Identifier
  parent: System.IO.Packaging.PackageProperties
  langs:
  - csharp
  - vb
  name: Identifier
  fullName: System.IO.Packaging.PackageProperties.Identifier
  type: Property
  source:
    remote:
      path: src/System.IO.Packaging/ref/System.IO.Packaging.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Identifier
    path: src/System.IO.Packaging/ref/System.IO.Packaging.cs
    startLine: 110
  assemblies:
  - System.IO.Packaging
  namespace: System.IO.Packaging
  summary: "\n<p>When overridden in a derived class, gets or sets a value that unambiguously identifies the <xref href=\"System.IO.Packaging.Package\" data-throw-if-not-resolved=\"false\"></xref> and its content.</p>\n"
  example:
  - 
  syntax:
    content: public abstract string Identifier { get; set; }
    content.vb: Public MustOverride Property Identifier As String
    parameters: []
    return:
      type: System.String
      description: "\n<p>A value that unambiguously identifies the <xref href=\"System.IO.Packaging.Package\" data-throw-if-not-resolved=\"false\"></xref> and its content.</p>\n"
  modifiers.csharp:
  - public
  - abstract
  - get
  - set
  modifiers.vb:
  - Public
  - MustOverride
- uid: System.IO.Packaging.PackageProperties.Keywords
  commentId: P:System.IO.Packaging.PackageProperties.Keywords
  id: Keywords
  parent: System.IO.Packaging.PackageProperties
  langs:
  - csharp
  - vb
  name: Keywords
  fullName: System.IO.Packaging.PackageProperties.Keywords
  type: Property
  source:
    remote:
      path: src/System.IO.Packaging/ref/System.IO.Packaging.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Keywords
    path: src/System.IO.Packaging/ref/System.IO.Packaging.cs
    startLine: 111
  assemblies:
  - System.IO.Packaging
  namespace: System.IO.Packaging
  summary: "\n<p>When overridden in a derived class, gets or sets a value that define a delimited set of keywords to support searching and indexing the <xref href=\"System.IO.Packaging.Package\" data-throw-if-not-resolved=\"false\"></xref> and its content.</p>\n"
  remarks: "\n<p>The <xref href=\"System.IO.Packaging.PackageProperties.Keywords\" data-throw-if-not-resolved=\"false\"></xref> property typically contains a list of terms that are not available elsewhere in <xref href=\"System.IO.Packaging.PackageProperties\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  example:
  - 
  syntax:
    content: public abstract string Keywords { get; set; }
    content.vb: Public MustOverride Property Keywords As String
    parameters: []
    return:
      type: System.String
      description: "\n<p>A delimited set of keywords to support searching and indexing the <xref href=\"System.IO.Packaging.Package\" data-throw-if-not-resolved=\"false\"></xref> and content.</p>\n"
  modifiers.csharp:
  - public
  - abstract
  - get
  - set
  modifiers.vb:
  - Public
  - MustOverride
- uid: System.IO.Packaging.PackageProperties.Language
  commentId: P:System.IO.Packaging.PackageProperties.Language
  id: Language
  parent: System.IO.Packaging.PackageProperties
  langs:
  - csharp
  - vb
  name: Language
  fullName: System.IO.Packaging.PackageProperties.Language
  type: Property
  source:
    remote:
      path: src/System.IO.Packaging/ref/System.IO.Packaging.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Language
    path: src/System.IO.Packaging/ref/System.IO.Packaging.cs
    startLine: 112
  assemblies:
  - System.IO.Packaging
  namespace: System.IO.Packaging
  summary: "\n<p>When overridden in a derived class, gets or sets a value that identifies the language of the <xref href=\"System.IO.Packaging.Package\" data-throw-if-not-resolved=\"false\"></xref> content.</p>\n"
  example:
  - 
  syntax:
    content: public abstract string Language { get; set; }
    content.vb: Public MustOverride Property Language As String
    parameters: []
    return:
      type: System.String
      description: "\n<p>A value that identifies the <xref href=\"System.IO.Packaging.Package\" data-throw-if-not-resolved=\"false\"></xref> content language.</p>\n"
  modifiers.csharp:
  - public
  - abstract
  - get
  - set
  modifiers.vb:
  - Public
  - MustOverride
- uid: System.IO.Packaging.PackageProperties.LastModifiedBy
  commentId: P:System.IO.Packaging.PackageProperties.LastModifiedBy
  id: LastModifiedBy
  parent: System.IO.Packaging.PackageProperties
  langs:
  - csharp
  - vb
  name: LastModifiedBy
  fullName: System.IO.Packaging.PackageProperties.LastModifiedBy
  type: Property
  source:
    remote:
      path: src/System.IO.Packaging/ref/System.IO.Packaging.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: LastModifiedBy
    path: src/System.IO.Packaging/ref/System.IO.Packaging.cs
    startLine: 113
  assemblies:
  - System.IO.Packaging
  namespace: System.IO.Packaging
  summary: "\n<p>When overridden in a derived class, gets or sets a value that identifies the user who last modified the <xref href=\"System.IO.Packaging.Package\" data-throw-if-not-resolved=\"false\"></xref> content.</p>\n"
  example:
  - 
  syntax:
    content: public abstract string LastModifiedBy { get; set; }
    content.vb: Public MustOverride Property LastModifiedBy As String
    parameters: []
    return:
      type: System.String
      description: "\n<p>The user who last modified the <xref href=\"System.IO.Packaging.Package\" data-throw-if-not-resolved=\"false\"></xref> content.</p>\n"
  seealso:
  - type: System.IO.Packaging.PackageProperties.Modified
    commentId: P:System.IO.Packaging.PackageProperties.Modified
  - type: System.IO.Packaging.PackageProperties.Creator
    commentId: P:System.IO.Packaging.PackageProperties.Creator
  modifiers.csharp:
  - public
  - abstract
  - get
  - set
  modifiers.vb:
  - Public
  - MustOverride
- uid: System.IO.Packaging.PackageProperties.LastPrinted
  commentId: P:System.IO.Packaging.PackageProperties.LastPrinted
  id: LastPrinted
  parent: System.IO.Packaging.PackageProperties
  langs:
  - csharp
  - vb
  name: LastPrinted
  fullName: System.IO.Packaging.PackageProperties.LastPrinted
  type: Property
  source:
    remote:
      path: src/System.IO.Packaging/ref/System.IO.Packaging.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: LastPrinted
    path: src/System.IO.Packaging/ref/System.IO.Packaging.cs
    startLine: 114
  assemblies:
  - System.IO.Packaging
  namespace: System.IO.Packaging
  summary: "\n<p>When overridden in a derived class, gets or sets the date and time the <xref href=\"System.IO.Packaging.Package\" data-throw-if-not-resolved=\"false\"></xref> content was last printed.</p>\n"
  example:
  - 
  syntax:
    content: public abstract DateTime? LastPrinted { get; set; }
    content.vb: Public MustOverride Property LastPrinted As Date?
    parameters: []
    return:
      type: System.Nullable{System.DateTime}
      description: "\n<p>The date and time the <xref href=\"System.IO.Packaging.Package\" data-throw-if-not-resolved=\"false\"></xref> content was last printed.</p>\n"
  modifiers.csharp:
  - public
  - abstract
  - get
  - set
  modifiers.vb:
  - Public
  - MustOverride
- uid: System.IO.Packaging.PackageProperties.Modified
  commentId: P:System.IO.Packaging.PackageProperties.Modified
  id: Modified
  parent: System.IO.Packaging.PackageProperties
  langs:
  - csharp
  - vb
  name: Modified
  fullName: System.IO.Packaging.PackageProperties.Modified
  type: Property
  source:
    remote:
      path: src/System.IO.Packaging/ref/System.IO.Packaging.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Modified
    path: src/System.IO.Packaging/ref/System.IO.Packaging.cs
    startLine: 115
  assemblies:
  - System.IO.Packaging
  namespace: System.IO.Packaging
  summary: "\n<p>When overridden in a derived class, gets or sets the date and time the <xref href=\"System.IO.Packaging.Package\" data-throw-if-not-resolved=\"false\"></xref> was last changed.</p>\n"
  example:
  - 
  syntax:
    content: public abstract DateTime? Modified { get; set; }
    content.vb: Public MustOverride Property Modified As Date?
    parameters: []
    return:
      type: System.Nullable{System.DateTime}
      description: "\n<p>The date and time the <xref href=\"System.IO.Packaging.Package\" data-throw-if-not-resolved=\"false\"></xref> was last changed.</p>\n"
  seealso:
  - type: System.IO.Packaging.PackageProperties.LastModifiedBy
    commentId: P:System.IO.Packaging.PackageProperties.LastModifiedBy
  - type: System.IO.Packaging.PackageProperties.Created
    commentId: P:System.IO.Packaging.PackageProperties.Created
  modifiers.csharp:
  - public
  - abstract
  - get
  - set
  modifiers.vb:
  - Public
  - MustOverride
- uid: System.IO.Packaging.PackageProperties.Revision
  commentId: P:System.IO.Packaging.PackageProperties.Revision
  id: Revision
  parent: System.IO.Packaging.PackageProperties
  langs:
  - csharp
  - vb
  name: Revision
  fullName: System.IO.Packaging.PackageProperties.Revision
  type: Property
  source:
    remote:
      path: src/System.IO.Packaging/ref/System.IO.Packaging.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Revision
    path: src/System.IO.Packaging/ref/System.IO.Packaging.cs
    startLine: 116
  assemblies:
  - System.IO.Packaging
  namespace: System.IO.Packaging
  summary: "\n<p>When overridden in a derived class, gets or sets the revision number of the <xref href=\"System.IO.Packaging.Package\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  remarks: "\n<p>The <xref href=\"System.IO.Packaging.PackageProperties.Revision\" data-throw-if-not-resolved=\"false\"></xref> property indicates the number of changed saves or revisions.</p>\n<p>The application is responsible for updating the <xref href=\"System.IO.Packaging.PackageProperties.Revision\" data-throw-if-not-resolved=\"false\"></xref> property value after each revision.</p>\n"
  example:
  - 
  syntax:
    content: public abstract string Revision { get; set; }
    content.vb: Public MustOverride Property Revision As String
    parameters: []
    return:
      type: System.String
      description: "\n<p>The revision number of the <xref href=\"System.IO.Packaging.Package\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  seealso:
  - type: System.IO.Packaging.PackageProperties.Version
    commentId: P:System.IO.Packaging.PackageProperties.Version
  modifiers.csharp:
  - public
  - abstract
  - get
  - set
  modifiers.vb:
  - Public
  - MustOverride
- uid: System.IO.Packaging.PackageProperties.Subject
  commentId: P:System.IO.Packaging.PackageProperties.Subject
  id: Subject
  parent: System.IO.Packaging.PackageProperties
  langs:
  - csharp
  - vb
  name: Subject
  fullName: System.IO.Packaging.PackageProperties.Subject
  type: Property
  source:
    remote:
      path: src/System.IO.Packaging/ref/System.IO.Packaging.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Subject
    path: src/System.IO.Packaging/ref/System.IO.Packaging.cs
    startLine: 117
  assemblies:
  - System.IO.Packaging
  namespace: System.IO.Packaging
  summary: "\n<p>When overridden in a derived class, gets or sets the topic of the <xref href=\"System.IO.Packaging.Package\" data-throw-if-not-resolved=\"false\"></xref> content.</p>\n"
  example:
  - 
  syntax:
    content: public abstract string Subject { get; set; }
    content.vb: Public MustOverride Property Subject As String
    parameters: []
    return:
      type: System.String
      description: "\n<p>The topic of the <xref href=\"System.IO.Packaging.Package\" data-throw-if-not-resolved=\"false\"></xref> content.</p>\n"
  seealso:
  - type: System.IO.Packaging.PackageProperties.Title
    commentId: P:System.IO.Packaging.PackageProperties.Title
  modifiers.csharp:
  - public
  - abstract
  - get
  - set
  modifiers.vb:
  - Public
  - MustOverride
- uid: System.IO.Packaging.PackageProperties.Title
  commentId: P:System.IO.Packaging.PackageProperties.Title
  id: Title
  parent: System.IO.Packaging.PackageProperties
  langs:
  - csharp
  - vb
  name: Title
  fullName: System.IO.Packaging.PackageProperties.Title
  type: Property
  source:
    remote:
      path: src/System.IO.Packaging/ref/System.IO.Packaging.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Title
    path: src/System.IO.Packaging/ref/System.IO.Packaging.cs
    startLine: 118
  assemblies:
  - System.IO.Packaging
  namespace: System.IO.Packaging
  summary: "\n<p>When overridden in a derived class, gets or sets the name given to the <xref href=\"System.IO.Packaging.Package\" data-throw-if-not-resolved=\"false\"></xref> and its content.</p>\n"
  example:
  - 
  syntax:
    content: public abstract string Title { get; set; }
    content.vb: Public MustOverride Property Title As String
    parameters: []
    return:
      type: System.String
      description: "\n<p>The name given to the <xref href=\"System.IO.Packaging.Package\" data-throw-if-not-resolved=\"false\"></xref> and its content.</p>\n"
  seealso:
  - type: System.IO.Packaging.PackageProperties.Subject
    commentId: P:System.IO.Packaging.PackageProperties.Subject
  modifiers.csharp:
  - public
  - abstract
  - get
  - set
  modifiers.vb:
  - Public
  - MustOverride
- uid: System.IO.Packaging.PackageProperties.Version
  commentId: P:System.IO.Packaging.PackageProperties.Version
  id: Version
  parent: System.IO.Packaging.PackageProperties
  langs:
  - csharp
  - vb
  name: Version
  fullName: System.IO.Packaging.PackageProperties.Version
  type: Property
  source:
    remote:
      path: src/System.IO.Packaging/ref/System.IO.Packaging.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Version
    path: src/System.IO.Packaging/ref/System.IO.Packaging.cs
    startLine: 119
  assemblies:
  - System.IO.Packaging
  namespace: System.IO.Packaging
  summary: "\n<p>When overridden in a derived class, gets or sets the version number of the <xref href=\"System.IO.Packaging.Package\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  example:
  - 
  syntax:
    content: public abstract string Version { get; set; }
    content.vb: Public MustOverride Property Version As String
    parameters: []
    return:
      type: System.String
      description: "\n<p>The version number of the <xref href=\"System.IO.Packaging.Package\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  seealso:
  - type: System.IO.Packaging.PackageProperties.Revision
    commentId: P:System.IO.Packaging.PackageProperties.Revision
  modifiers.csharp:
  - public
  - abstract
  - get
  - set
  modifiers.vb:
  - Public
  - MustOverride
- uid: System.IO.Packaging.PackageProperties.Dispose
  commentId: M:System.IO.Packaging.PackageProperties.Dispose
  id: Dispose
  parent: System.IO.Packaging.PackageProperties
  langs:
  - csharp
  - vb
  name: Dispose()
  fullName: System.IO.Packaging.PackageProperties.Dispose()
  type: Method
  source:
    remote:
      path: src/System.IO.Packaging/ref/System.IO.Packaging.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Dispose
    path: src/System.IO.Packaging/ref/System.IO.Packaging.cs
    startLine: 120
  assemblies:
  - System.IO.Packaging
  namespace: System.IO.Packaging
  summary: "\n<p>Releases all resources used by the <xref href=\"System.IO.Packaging.PackageProperties\" data-throw-if-not-resolved=\"false\"></xref> instance.</p>\n"
  remarks: "\n<p>Call <xref href=\"System.IO.Packaging.PackageProperties.Dispose\" data-throw-if-not-resolved=\"false\"></xref> when you are finished using the <xref href=\"System.IO.Packaging.PackageProperties\" data-throw-if-not-resolved=\"false\"></xref>. The <xref href=\"System.IO.Packaging.PackageProperties.Dispose\" data-throw-if-not-resolved=\"false\"></xref> method leaves the <xref href=\"System.IO.Packaging.PackageProperties\" data-throw-if-not-resolved=\"false\"></xref> in an unusable state. After calling <xref href=\"System.IO.Packaging.PackageProperties.Dispose\" data-throw-if-not-resolved=\"false\"></xref>, you must release all references to the <xref href=\"System.IO.Packaging.PackageProperties\" data-throw-if-not-resolved=\"false\"></xref> so the garbage collector can reclaim the memory that the <xref href=\"System.IO.Packaging.PackageProperties\" data-throw-if-not-resolved=\"false\"></xref> was occupying. For more information, see Cleaning Up Unmanaged Resources and Implementing a Dispose Method. </p>\n<p>Always call <xref href=\"System.IO.Packaging.PackageProperties.Dispose\" data-throw-if-not-resolved=\"false\"></xref> before you release your last reference to the <xref href=\"System.IO.Packaging.PackageProperties\" data-throw-if-not-resolved=\"false\"></xref>. Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref href=\"System.IO.Packaging.PackageProperties\" data-throw-if-not-resolved=\"false\"></xref> object's <strong>Finalize</strong> method.</p>\n"
  example:
  - 
  syntax:
    content: public void Dispose()
    content.vb: Public Sub Dispose
  implements:
  - System.IDisposable.Dispose
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.IO.Packaging.PackageProperties.Dispose(System.Boolean)
  commentId: M:System.IO.Packaging.PackageProperties.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.IO.Packaging.PackageProperties
  langs:
  - csharp
  - vb
  name: Dispose(Boolean)
  fullName: System.IO.Packaging.PackageProperties.Dispose(System.Boolean)
  type: Method
  source:
    remote:
      path: src/System.IO.Packaging/ref/System.IO.Packaging.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Dispose
    path: src/System.IO.Packaging/ref/System.IO.Packaging.cs
    startLine: 121
  assemblies:
  - System.IO.Packaging
  namespace: System.IO.Packaging
  summary: "\n<p>Releases the unmanaged resources used by the <xref href=\"System.IO.Packaging.PackageProperties\" data-throw-if-not-resolved=\"false\"></xref> instance and optionally releases the managed resources. </p>\n"
  remarks: "\n<p>This method is called by the public <strong>Dispose()</strong><strong></strong>method and the <xref href=\"System.Object.Finalize\" data-throw-if-not-resolved=\"false\"></xref> method. <strong>Dispose()</strong> invokes the protected <strong>Dispose(Boolean)</strong> method with the <em>disposing</em> parameter set to <strong>true</strong>. <xref href=\"System.Object.Finalize\" data-throw-if-not-resolved=\"false\"></xref> invokes <strong>Dispose</strong> with <em>disposing</em> set to <strong>false</strong>.</p>\n<p>When the <em>disposing</em> parameter is true, this method releases all resources held by any managed objects that this <xref href=\"System.IO.Packaging.PackageProperties\" data-throw-if-not-resolved=\"false\"></xref> references. This method invokes the <strong>Dispose()</strong> method of each referenced object.</p>\n"
  example:
  - 
  syntax:
    content: protected virtual void Dispose(bool disposing)
    content.vb: Protected Overridable Sub Dispose(disposing As Boolean)
    parameters:
    - id: disposing
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> to release both managed and unmanaged resources; <strong>false</strong> to release only unmanaged resources. </p>\n"
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
references:
- uid: System.IO.Packaging
  isExternal: false
  name: System.IO.Packaging
  fullName: System.IO.Packaging
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System.IDisposable
  parent: System
  isExternal: false
  name: IDisposable
  fullName: System.IDisposable
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.String
  parent: System
  isExternal: false
  name: String
  fullName: System.String
- uid: System.Nullable{System.DateTime}
  parent: System
  definition: System.Nullable`1
  name: Nullable<DateTime>
  fullName: System.Nullable<System.DateTime>
  fullname.vb: System.Nullable(Of System.DateTime)
  name.vb: Nullable(Of DateTime)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.DateTime
    name: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.DateTime
    name: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: )
    fullName: )
- uid: System.Nullable`1
  parent: System
  isExternal: false
  name: Nullable<T>
  fullName: System.Nullable<T>
  fullname.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.IDisposable.Dispose
  parent: System.IDisposable
  isExternal: false
  name: Dispose()
  fullName: System.IDisposable.Dispose()
  spec.csharp:
  - uid: System.IDisposable.Dispose
    name: Dispose
    fullName: System.IDisposable.Dispose
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IDisposable.Dispose
    name: Dispose
    fullName: System.IDisposable.Dispose
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  fullName: System.Boolean
