items:
- uid: System.Net.WebSockets.ClientWebSocket
  commentId: T:System.Net.WebSockets.ClientWebSocket
  id: ClientWebSocket
  parent: System.Net.WebSockets
  children:
  - System.Net.WebSockets.ClientWebSocket.#ctor
  - System.Net.WebSockets.ClientWebSocket.Abort
  - System.Net.WebSockets.ClientWebSocket.CloseAsync(System.Net.WebSockets.WebSocketCloseStatus,System.String,System.Threading.CancellationToken)
  - System.Net.WebSockets.ClientWebSocket.CloseOutputAsync(System.Net.WebSockets.WebSocketCloseStatus,System.String,System.Threading.CancellationToken)
  - System.Net.WebSockets.ClientWebSocket.CloseStatus
  - System.Net.WebSockets.ClientWebSocket.CloseStatusDescription
  - System.Net.WebSockets.ClientWebSocket.ConnectAsync(System.Uri,System.Threading.CancellationToken)
  - System.Net.WebSockets.ClientWebSocket.Dispose
  - System.Net.WebSockets.ClientWebSocket.Options
  - System.Net.WebSockets.ClientWebSocket.ReceiveAsync(System.ArraySegment{System.Byte},System.Threading.CancellationToken)
  - System.Net.WebSockets.ClientWebSocket.SendAsync(System.ArraySegment{System.Byte},System.Net.WebSockets.WebSocketMessageType,System.Boolean,System.Threading.CancellationToken)
  - System.Net.WebSockets.ClientWebSocket.State
  - System.Net.WebSockets.ClientWebSocket.SubProtocol
  langs:
  - csharp
  - vb
  name: ClientWebSocket
  fullName: System.Net.WebSockets.ClientWebSocket
  type: Class
  source:
    remote:
      path: src/System.Net.WebSockets.Client/src/System/Net/WebSockets/ClientWebSocket.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ClientWebSocket
    path: src/System.Net.WebSockets.Client/src/System/Net/WebSockets/ClientWebSocket.cs
    startLine: 10
  assemblies:
  - System.Net.WebSockets.Client
  namespace: System.Net.WebSockets
  syntax:
    content: 'public sealed class ClientWebSocket : WebSocket'
    content.vb: >-
      Public NotInheritable Class ClientWebSocket
          Inherits WebSocket
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: System.Net.WebSockets.ClientWebSocket.#ctor
  commentId: M:System.Net.WebSockets.ClientWebSocket.#ctor
  id: '#ctor'
  parent: System.Net.WebSockets.ClientWebSocket
  langs:
  - csharp
  - vb
  name: ClientWebSocket()
  fullName: System.Net.WebSockets.ClientWebSocket.ClientWebSocket()
  type: Constructor
  source:
    remote:
      path: src/System.Net.WebSockets.Client/src/System/Net/WebSockets/ClientWebSocket.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Net.WebSockets.Client/src/System/Net/WebSockets/ClientWebSocket.cs
    startLine: 27
  assemblies:
  - System.Net.WebSockets.Client
  namespace: System.Net.WebSockets
  syntax:
    content: public ClientWebSocket()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Net.WebSockets.ClientWebSocket.CloseStatus
  commentId: P:System.Net.WebSockets.ClientWebSocket.CloseStatus
  id: CloseStatus
  parent: System.Net.WebSockets.ClientWebSocket
  langs:
  - csharp
  - vb
  name: CloseStatus
  fullName: System.Net.WebSockets.ClientWebSocket.CloseStatus
  type: Property
  source:
    remote:
      path: src/System.Net.WebSockets.Client/src/System/Net/WebSockets/ClientWebSocket.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CloseStatus
    path: src/System.Net.WebSockets.Client/src/System/Net/WebSockets/ClientWebSocket.cs
    startLine: 55
  assemblies:
  - System.Net.WebSockets.Client
  namespace: System.Net.WebSockets
  syntax:
    content: public override WebSocketCloseStatus? CloseStatus { get; }
    content.vb: Public Overrides ReadOnly Property CloseStatus As WebSocketCloseStatus?
    parameters: []
    return:
      type: System.Nullable{WebSocketCloseStatus}
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: System.Net.WebSockets.ClientWebSocket.CloseStatusDescription
  commentId: P:System.Net.WebSockets.ClientWebSocket.CloseStatusDescription
  id: CloseStatusDescription
  parent: System.Net.WebSockets.ClientWebSocket
  langs:
  - csharp
  - vb
  name: CloseStatusDescription
  fullName: System.Net.WebSockets.ClientWebSocket.CloseStatusDescription
  type: Property
  source:
    remote:
      path: src/System.Net.WebSockets.Client/src/System/Net/WebSockets/ClientWebSocket.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CloseStatusDescription
    path: src/System.Net.WebSockets.Client/src/System/Net/WebSockets/ClientWebSocket.cs
    startLine: 67
  assemblies:
  - System.Net.WebSockets.Client
  namespace: System.Net.WebSockets
  syntax:
    content: public override string CloseStatusDescription { get; }
    content.vb: Public Overrides ReadOnly Property CloseStatusDescription As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: System.Net.WebSockets.ClientWebSocket.Options
  commentId: P:System.Net.WebSockets.ClientWebSocket.Options
  id: Options
  parent: System.Net.WebSockets.ClientWebSocket
  langs:
  - csharp
  - vb
  name: Options
  fullName: System.Net.WebSockets.ClientWebSocket.Options
  type: Property
  source:
    remote:
      path: src/System.Net.WebSockets.Client/src/System/Net/WebSockets/ClientWebSocket.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Options
    path: src/System.Net.WebSockets.Client/src/System/Net/WebSockets/ClientWebSocket.cs
    startLine: 47
  assemblies:
  - System.Net.WebSockets.Client
  namespace: System.Net.WebSockets
  syntax:
    content: public ClientWebSocketOptions Options { get; }
    content.vb: Public ReadOnly Property Options As ClientWebSocketOptions
    parameters: []
    return:
      type: System.Net.WebSockets.ClientWebSocketOptions
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Net.WebSockets.ClientWebSocket.State
  commentId: P:System.Net.WebSockets.ClientWebSocket.State
  id: State
  parent: System.Net.WebSockets.ClientWebSocket
  langs:
  - csharp
  - vb
  name: State
  fullName: System.Net.WebSockets.ClientWebSocket.State
  type: Property
  source:
    remote:
      path: src/System.Net.WebSockets.Client/src/System/Net/WebSockets/ClientWebSocket.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: State
    path: src/System.Net.WebSockets.Client/src/System/Net/WebSockets/ClientWebSocket.cs
    startLine: 91
  assemblies:
  - System.Net.WebSockets.Client
  namespace: System.Net.WebSockets
  syntax:
    content: public override WebSocketState State { get; }
    content.vb: Public Overrides ReadOnly Property State As WebSocketState
    parameters: []
    return:
      type: WebSocketState
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: System.Net.WebSockets.ClientWebSocket.SubProtocol
  commentId: P:System.Net.WebSockets.ClientWebSocket.SubProtocol
  id: SubProtocol
  parent: System.Net.WebSockets.ClientWebSocket
  langs:
  - csharp
  - vb
  name: SubProtocol
  fullName: System.Net.WebSockets.ClientWebSocket.SubProtocol
  type: Property
  source:
    remote:
      path: src/System.Net.WebSockets.Client/src/System/Net/WebSockets/ClientWebSocket.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: SubProtocol
    path: src/System.Net.WebSockets.Client/src/System/Net/WebSockets/ClientWebSocket.cs
    startLine: 79
  assemblies:
  - System.Net.WebSockets.Client
  namespace: System.Net.WebSockets
  syntax:
    content: public override string SubProtocol { get; }
    content.vb: Public Overrides ReadOnly Property SubProtocol As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: System.Net.WebSockets.ClientWebSocket.Abort
  commentId: M:System.Net.WebSockets.ClientWebSocket.Abort
  id: Abort
  parent: System.Net.WebSockets.ClientWebSocket
  langs:
  - csharp
  - vb
  name: Abort()
  fullName: System.Net.WebSockets.ClientWebSocket.Abort()
  type: Method
  source:
    remote:
      path: src/System.Net.WebSockets.Client/src/System/Net/WebSockets/ClientWebSocket.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Abort
    path: src/System.Net.WebSockets.Client/src/System/Net/WebSockets/ClientWebSocket.cs
    startLine: 216
  assemblies:
  - System.Net.WebSockets.Client
  namespace: System.Net.WebSockets
  syntax:
    content: public override void Abort()
    content.vb: Public Overrides Sub Abort
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Net.WebSockets.ClientWebSocket.CloseAsync(System.Net.WebSockets.WebSocketCloseStatus,System.String,System.Threading.CancellationToken)
  commentId: M:System.Net.WebSockets.ClientWebSocket.CloseAsync(System.Net.WebSockets.WebSocketCloseStatus,System.String,System.Threading.CancellationToken)
  id: CloseAsync(System.Net.WebSockets.WebSocketCloseStatus,System.String,System.Threading.CancellationToken)
  parent: System.Net.WebSockets.ClientWebSocket
  langs:
  - csharp
  - vb
  name: CloseAsync(WebSocketCloseStatus, String, Threading.CancellationToken)
  fullName: System.Net.WebSockets.ClientWebSocket.CloseAsync(System.Net.WebSockets.WebSocketCloseStatus, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/System.Net.WebSockets.Client/ref/System.Net.WebSockets.Client.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CloseAsync
    path: src/System.Net.WebSockets.Client/ref/System.Net.WebSockets.Client.cs
    startLine: 19
  assemblies:
  - System.Net.WebSockets.Client
  namespace: System.Net.WebSockets
  syntax:
    content: public override Threading.Tasks.Task CloseAsync(WebSocketCloseStatus closeStatus, string statusDescription, Threading.CancellationToken cancellationToken)
    content.vb: Public Overrides Function CloseAsync(closeStatus As WebSocketCloseStatus, statusDescription As String, cancellationToken As Threading.CancellationToken) As Threading.Tasks.Task
    parameters:
    - id: closeStatus
      type: System.Net.WebSockets.WebSocketCloseStatus
    - id: statusDescription
      type: System.String
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Net.WebSockets.ClientWebSocket.CloseOutputAsync(System.Net.WebSockets.WebSocketCloseStatus,System.String,System.Threading.CancellationToken)
  commentId: M:System.Net.WebSockets.ClientWebSocket.CloseOutputAsync(System.Net.WebSockets.WebSocketCloseStatus,System.String,System.Threading.CancellationToken)
  id: CloseOutputAsync(System.Net.WebSockets.WebSocketCloseStatus,System.String,System.Threading.CancellationToken)
  parent: System.Net.WebSockets.ClientWebSocket
  langs:
  - csharp
  - vb
  name: CloseOutputAsync(WebSocketCloseStatus, String, Threading.CancellationToken)
  fullName: System.Net.WebSockets.ClientWebSocket.CloseOutputAsync(System.Net.WebSockets.WebSocketCloseStatus, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/System.Net.WebSockets.Client/ref/System.Net.WebSockets.Client.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CloseOutputAsync
    path: src/System.Net.WebSockets.Client/ref/System.Net.WebSockets.Client.cs
    startLine: 20
  assemblies:
  - System.Net.WebSockets.Client
  namespace: System.Net.WebSockets
  syntax:
    content: public override Threading.Tasks.Task CloseOutputAsync(WebSocketCloseStatus closeStatus, string statusDescription, Threading.CancellationToken cancellationToken)
    content.vb: Public Overrides Function CloseOutputAsync(closeStatus As WebSocketCloseStatus, statusDescription As String, cancellationToken As Threading.CancellationToken) As Threading.Tasks.Task
    parameters:
    - id: closeStatus
      type: System.Net.WebSockets.WebSocketCloseStatus
    - id: statusDescription
      type: System.String
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Net.WebSockets.ClientWebSocket.ConnectAsync(System.Uri,System.Threading.CancellationToken)
  commentId: M:System.Net.WebSockets.ClientWebSocket.ConnectAsync(System.Uri,System.Threading.CancellationToken)
  id: ConnectAsync(System.Uri,System.Threading.CancellationToken)
  parent: System.Net.WebSockets.ClientWebSocket
  langs:
  - csharp
  - vb
  name: ConnectAsync(Uri, Threading.CancellationToken)
  fullName: System.Net.WebSockets.ClientWebSocket.ConnectAsync(System.Uri, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/System.Net.WebSockets.Client/ref/System.Net.WebSockets.Client.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ConnectAsync
    path: src/System.Net.WebSockets.Client/ref/System.Net.WebSockets.Client.cs
    startLine: 21
  assemblies:
  - System.Net.WebSockets.Client
  namespace: System.Net.WebSockets
  syntax:
    content: public Threading.Tasks.Task ConnectAsync(Uri uri, Threading.CancellationToken cancellationToken)
    content.vb: Public Function ConnectAsync(uri As Uri, cancellationToken As Threading.CancellationToken) As Threading.Tasks.Task
    parameters:
    - id: uri
      type: System.Uri
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Net.WebSockets.ClientWebSocket.Dispose
  commentId: M:System.Net.WebSockets.ClientWebSocket.Dispose
  id: Dispose
  parent: System.Net.WebSockets.ClientWebSocket
  langs:
  - csharp
  - vb
  name: Dispose()
  fullName: System.Net.WebSockets.ClientWebSocket.Dispose()
  type: Method
  source:
    remote:
      path: src/System.Net.WebSockets.Client/src/System/Net/WebSockets/ClientWebSocket.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Dispose
    path: src/System.Net.WebSockets.Client/src/System/Net/WebSockets/ClientWebSocket.cs
    startLine: 229
  assemblies:
  - System.Net.WebSockets.Client
  namespace: System.Net.WebSockets
  syntax:
    content: public override void Dispose()
    content.vb: Public Overrides Sub Dispose
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Net.WebSockets.ClientWebSocket.ReceiveAsync(System.ArraySegment{System.Byte},System.Threading.CancellationToken)
  commentId: M:System.Net.WebSockets.ClientWebSocket.ReceiveAsync(System.ArraySegment{System.Byte},System.Threading.CancellationToken)
  id: ReceiveAsync(System.ArraySegment{System.Byte},System.Threading.CancellationToken)
  parent: System.Net.WebSockets.ClientWebSocket
  langs:
  - csharp
  - vb
  name: ReceiveAsync(ArraySegment<Byte>, Threading.CancellationToken)
  fullName: System.Net.WebSockets.ClientWebSocket.ReceiveAsync(System.ArraySegment<System.Byte>, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/System.Net.WebSockets.Client/ref/System.Net.WebSockets.Client.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ReceiveAsync
    path: src/System.Net.WebSockets.Client/ref/System.Net.WebSockets.Client.cs
    startLine: 23
  assemblies:
  - System.Net.WebSockets.Client
  namespace: System.Net.WebSockets
  syntax:
    content: public override Threading.Tasks.Task<WebSocketReceiveResult> ReceiveAsync(ArraySegment<byte> buffer, Threading.CancellationToken cancellationToken)
    content.vb: Public Overrides Function ReceiveAsync(buffer As ArraySegment(Of Byte), cancellationToken As Threading.CancellationToken) As Threading.Tasks.Task(Of WebSocketReceiveResult)
    parameters:
    - id: buffer
      type: System.ArraySegment{System.Byte}
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.Net.WebSockets.WebSocketReceiveResult}
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: System.Net.WebSockets.ClientWebSocket.ReceiveAsync(System.ArraySegment(Of System.Byte), System.Threading.CancellationToken)
  name.vb: ReceiveAsync(ArraySegment(Of Byte), Threading.CancellationToken)
- uid: System.Net.WebSockets.ClientWebSocket.SendAsync(System.ArraySegment{System.Byte},System.Net.WebSockets.WebSocketMessageType,System.Boolean,System.Threading.CancellationToken)
  commentId: M:System.Net.WebSockets.ClientWebSocket.SendAsync(System.ArraySegment{System.Byte},System.Net.WebSockets.WebSocketMessageType,System.Boolean,System.Threading.CancellationToken)
  id: SendAsync(System.ArraySegment{System.Byte},System.Net.WebSockets.WebSocketMessageType,System.Boolean,System.Threading.CancellationToken)
  parent: System.Net.WebSockets.ClientWebSocket
  langs:
  - csharp
  - vb
  name: SendAsync(ArraySegment<Byte>, WebSocketMessageType, Boolean, Threading.CancellationToken)
  fullName: System.Net.WebSockets.ClientWebSocket.SendAsync(System.ArraySegment<System.Byte>, System.Net.WebSockets.WebSocketMessageType, System.Boolean, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/System.Net.WebSockets.Client/ref/System.Net.WebSockets.Client.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: SendAsync
    path: src/System.Net.WebSockets.Client/ref/System.Net.WebSockets.Client.cs
    startLine: 24
  assemblies:
  - System.Net.WebSockets.Client
  namespace: System.Net.WebSockets
  syntax:
    content: public override Threading.Tasks.Task SendAsync(ArraySegment<byte> buffer, WebSocketMessageType messageType, bool endOfMessage, Threading.CancellationToken cancellationToken)
    content.vb: Public Overrides Function SendAsync(buffer As ArraySegment(Of Byte), messageType As WebSocketMessageType, endOfMessage As Boolean, cancellationToken As Threading.CancellationToken) As Threading.Tasks.Task
    parameters:
    - id: buffer
      type: System.ArraySegment{System.Byte}
    - id: messageType
      type: System.Net.WebSockets.WebSocketMessageType
    - id: endOfMessage
      type: System.Boolean
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: System.Net.WebSockets.ClientWebSocket.SendAsync(System.ArraySegment(Of System.Byte), System.Net.WebSockets.WebSocketMessageType, System.Boolean, System.Threading.CancellationToken)
  name.vb: SendAsync(ArraySegment(Of Byte), WebSocketMessageType, Boolean, Threading.CancellationToken)
references:
- uid: System.Net.WebSockets
  isExternal: false
  name: System.Net.WebSockets
  fullName: System.Net.WebSockets
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Nullable{System.Net.WebSockets.WebSocketCloseStatus}
  definition: System.Nullable`1
  name: Nullable<WebSocketCloseStatus>
  fullName: System.Nullable<System.Net.WebSockets.WebSocketCloseStatus>
  fullname.vb: System.Nullable(Of System.Net.WebSockets.WebSocketCloseStatus)
  name.vb: Nullable(Of WebSocketCloseStatus)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Net.WebSockets.WebSocketCloseStatus
    name: WebSocketCloseStatus
    fullName: System.Net.WebSockets.WebSocketCloseStatus
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Net.WebSockets.WebSocketCloseStatus
    name: WebSocketCloseStatus
    fullName: System.Net.WebSockets.WebSocketCloseStatus
  - name: )
    fullName: )
- uid: System.Nullable`1
  parent: System
  isExternal: false
  name: Nullable<>
  fullName: System.Nullable<>
  fullname.vb: System.Nullable(Of )
  name.vb: Nullable(Of )
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
  - name: <
    fullName: <
  - {}
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
  - name: '(Of '
    fullName: '(Of '
  - {}
  - name: )
    fullName: )
- uid: System.String
  parent: System
  isExternal: false
  name: String
  fullName: System.String
- uid: System.Net.WebSockets.ClientWebSocketOptions
  parent: System.Net.WebSockets
  isExternal: false
  name: ClientWebSocketOptions
  fullName: System.Net.WebSockets.ClientWebSocketOptions
- uid: System.Net.WebSockets.WebSocketState
  parent: System.Net.WebSockets
  isExternal: false
  name: WebSocketState
  fullName: System.Net.WebSockets.WebSocketState
- uid: System.Net.WebSockets.WebSocketCloseStatus
  parent: System.Net.WebSockets
  isExternal: false
  name: WebSocketCloseStatus
  fullName: System.Net.WebSockets.WebSocketCloseStatus
- uid: System.Threading.CancellationToken
  parent: System.Threading
  isExternal: false
  name: Threading.CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: false
  name: Threading.Tasks.Task
  fullName: System.Threading.Tasks.Task
- uid: System.Threading
  isExternal: false
  name: System.Threading
  fullName: System.Threading
- uid: System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: System.Uri
  parent: System
  isExternal: false
  name: Uri
  fullName: System.Uri
- uid: System.ArraySegment{System.Byte}
  definition: System.ArraySegment`1
  name: ArraySegment<Byte>
  fullName: System.ArraySegment<System.Byte>
  fullname.vb: System.ArraySegment(Of System.Byte)
  name.vb: ArraySegment(Of Byte)
  spec.csharp:
  - uid: System.ArraySegment`1
    name: ArraySegment
    fullName: System.ArraySegment
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.ArraySegment`1
    name: ArraySegment
    fullName: System.ArraySegment
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
    isExternal: true
  - name: )
    fullName: )
- uid: System.Threading.Tasks.Task{System.Net.WebSockets.WebSocketReceiveResult}
  definition: System.Threading.Tasks.Task`1
  name: Threading.Tasks.Task<WebSocketReceiveResult>
  fullName: System.Threading.Tasks.Task<System.Net.WebSockets.WebSocketReceiveResult>
  fullname.vb: System.Threading.Tasks.Task(Of System.Net.WebSockets.WebSocketReceiveResult)
  name.vb: Threading.Tasks.Task(Of WebSocketReceiveResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Threading.Tasks.Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Net.WebSockets.WebSocketReceiveResult
    name: WebSocketReceiveResult
    fullName: System.Net.WebSockets.WebSocketReceiveResult
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Threading.Tasks.Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Net.WebSockets.WebSocketReceiveResult
    name: WebSocketReceiveResult
    fullName: System.Net.WebSockets.WebSocketReceiveResult
  - name: )
    fullName: )
- uid: System.ArraySegment`1
  parent: System
  isExternal: false
  name: ArraySegment<>
  fullName: System.ArraySegment<>
  fullname.vb: System.ArraySegment(Of )
  name.vb: ArraySegment(Of )
  spec.csharp:
  - uid: System.ArraySegment`1
    name: ArraySegment
    fullName: System.ArraySegment
  - name: <
    fullName: <
  - {}
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.ArraySegment`1
    name: ArraySegment
    fullName: System.ArraySegment
  - name: '(Of '
    fullName: '(Of '
  - {}
  - name: )
    fullName: )
- uid: System.Threading.Tasks.Task`1
  parent: System.Threading.Tasks
  isExternal: false
  name: Threading.Tasks.Task<>
  fullName: System.Threading.Tasks.Task<>
  fullname.vb: System.Threading.Tasks.Task(Of )
  name.vb: Threading.Tasks.Task(Of )
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Threading.Tasks.Task
    fullName: System.Threading.Tasks.Task
  - name: <
    fullName: <
  - {}
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Threading.Tasks.Task
    fullName: System.Threading.Tasks.Task
  - name: '(Of '
    fullName: '(Of '
  - {}
  - name: )
    fullName: )
- uid: System.Net.WebSockets.WebSocketMessageType
  parent: System.Net.WebSockets
  isExternal: false
  name: WebSocketMessageType
  fullName: System.Net.WebSockets.WebSocketMessageType
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  fullName: System.Boolean
