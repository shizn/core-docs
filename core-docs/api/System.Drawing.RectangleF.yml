items:
- uid: System.Drawing.RectangleF
  commentId: T:System.Drawing.RectangleF
  id: RectangleF
  parent: System.Drawing
  children:
  - System.Drawing.RectangleF.#ctor(System.Drawing.PointF,System.Drawing.SizeF)
  - System.Drawing.RectangleF.#ctor(System.Single,System.Single,System.Single,System.Single)
  - System.Drawing.RectangleF.Bottom
  - System.Drawing.RectangleF.Contains(System.Drawing.PointF)
  - System.Drawing.RectangleF.Contains(System.Drawing.RectangleF)
  - System.Drawing.RectangleF.Contains(System.Single,System.Single)
  - System.Drawing.RectangleF.Empty
  - System.Drawing.RectangleF.Equals(System.Object)
  - System.Drawing.RectangleF.FromLTRB(System.Single,System.Single,System.Single,System.Single)
  - System.Drawing.RectangleF.GetHashCode
  - System.Drawing.RectangleF.Height
  - System.Drawing.RectangleF.Inflate(System.Drawing.RectangleF,System.Single,System.Single)
  - System.Drawing.RectangleF.Inflate(System.Drawing.SizeF)
  - System.Drawing.RectangleF.Inflate(System.Single,System.Single)
  - System.Drawing.RectangleF.Intersect(System.Drawing.RectangleF)
  - System.Drawing.RectangleF.Intersect(System.Drawing.RectangleF,System.Drawing.RectangleF)
  - System.Drawing.RectangleF.IntersectsWith(System.Drawing.RectangleF)
  - System.Drawing.RectangleF.IsEmpty
  - System.Drawing.RectangleF.Left
  - System.Drawing.RectangleF.Location
  - System.Drawing.RectangleF.Offset(System.Drawing.PointF)
  - System.Drawing.RectangleF.Offset(System.Single,System.Single)
  - System.Drawing.RectangleF.op_Equality(System.Drawing.RectangleF,System.Drawing.RectangleF)
  - System.Drawing.RectangleF.op_Implicit(System.Drawing.Rectangle)~System.Drawing.RectangleF
  - System.Drawing.RectangleF.op_Inequality(System.Drawing.RectangleF,System.Drawing.RectangleF)
  - System.Drawing.RectangleF.Right
  - System.Drawing.RectangleF.Size
  - System.Drawing.RectangleF.Top
  - System.Drawing.RectangleF.ToString
  - System.Drawing.RectangleF.Union(System.Drawing.RectangleF,System.Drawing.RectangleF)
  - System.Drawing.RectangleF.Width
  - System.Drawing.RectangleF.X
  - System.Drawing.RectangleF.Y
  langs:
  - csharp
  - vb
  name: RectangleF
  fullName: System.Drawing.RectangleF
  type: Struct
  source:
    remote:
      path: src/System.Drawing.Primitives/src/System/Drawing/RectangleF.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: RectangleF
    path: src/System.Drawing.Primitives/src/System/Drawing/RectangleF.cs
    startLine: 13
  assemblies:
  - System.Drawing.Primitives
  namespace: System.Drawing
  summary: "\n<p>Stores a set of four floating-point numbers that represent the location and size of a rectangle. For more advanced region functions, use a <xref href=\"System.Drawing.Region\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  remarks: "\n<p>A rectangle is defined by its width, height, and upper-left corner.</p>\n"
  syntax:
    content: public struct RectangleF
    content.vb: Public Structure RectangleF
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetType
  modifiers.csharp:
  - public
  - struct
  modifiers.vb:
  - Public
  - Structure
- uid: System.Drawing.RectangleF.Empty
  commentId: F:System.Drawing.RectangleF.Empty
  id: Empty
  parent: System.Drawing.RectangleF
  langs:
  - csharp
  - vb
  name: Empty
  fullName: System.Drawing.RectangleF.Empty
  type: Field
  source:
    remote:
      path: src/System.Drawing.Primitives/src/System/Drawing/RectangleF.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Empty
    path: src/System.Drawing.Primitives/src/System/Drawing/RectangleF.cs
    startLine: 19
  assemblies:
  - System.Drawing.Primitives
  namespace: System.Drawing
  summary: "\n<p>Represents an instance of the <xref href=\"System.Drawing.RectangleF\" data-throw-if-not-resolved=\"false\"></xref> class with its members uninitialized.</p>\n"
  remarks: "\n<p>The members of the new <xref href=\"System.Drawing.RectangleF\" data-throw-if-not-resolved=\"false\"></xref> are left uninitialized.</p>\n"
  syntax:
    content: public static readonly RectangleF Empty
    content.vb: Public Shared ReadOnly Empty As RectangleF
    return:
      type: System.Drawing.RectangleF
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: System.Drawing.RectangleF.#ctor(System.Drawing.PointF,System.Drawing.SizeF)
  commentId: M:System.Drawing.RectangleF.#ctor(System.Drawing.PointF,System.Drawing.SizeF)
  id: '#ctor(System.Drawing.PointF,System.Drawing.SizeF)'
  parent: System.Drawing.RectangleF
  langs:
  - csharp
  - vb
  name: RectangleF(PointF, SizeF)
  fullName: System.Drawing.RectangleF.RectangleF(System.Drawing.PointF, System.Drawing.SizeF)
  type: Constructor
  source:
    remote:
      path: src/System.Drawing.Primitives/src/System/Drawing/RectangleF.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Drawing.Primitives/src/System/Drawing/RectangleF.cs
    startLine: 47
  assemblies:
  - System.Drawing.Primitives
  namespace: System.Drawing
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Drawing.RectangleF\" data-throw-if-not-resolved=\"false\"></xref> class with the specified location and size.</p>\n"
  example:
  - "\n<p>The following code example demonstrates how to use the <xref href=\"System.Drawing.RectangleF.op_Implicit(System.Drawing.Rectangle)~System.Drawing.RectangleF\" data-throw-if-not-resolved=\"false\"></xref>, <xref href=\"System.Drawing.RectangleF.#ctor(System.Drawing.PointF,System.Drawing.SizeF)\" data-throw-if-not-resolved=\"false\"></xref>, and <xref href=\"System.Drawing.RectangleF.op_Equality(System.Drawing.RectangleF,System.Drawing.RectangleF)\" data-throw-if-not-resolved=\"false\"></xref> members. This example is designed for use with a Windows Form. Paste this code into a form and call the <code>ConvertRectangleToRectangleF</code> method when handling the form's <xref href=\"System.Windows.Forms.Control.Paint\" data-throw-if-not-resolved=\"false\"></xref> event, passing <em>e</em> as <xref href=\"System.Windows.Forms.PaintEventArgs\" data-throw-if-not-resolved=\"false\"></xref>.</p>System.Drawing.RectanglesAndPoints#6"
  syntax:
    content: public RectangleF(PointF location, SizeF size)
    content.vb: Public Sub New(location As PointF, size As SizeF)
    parameters:
    - id: location
      type: System.Drawing.PointF
    - id: size
      type: System.Drawing.SizeF
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Drawing.RectangleF.#ctor(System.Single,System.Single,System.Single,System.Single)
  commentId: M:System.Drawing.RectangleF.#ctor(System.Single,System.Single,System.Single,System.Single)
  id: '#ctor(System.Single,System.Single,System.Single,System.Single)'
  parent: System.Drawing.RectangleF
  langs:
  - csharp
  - vb
  name: RectangleF(Single, Single, Single, Single)
  fullName: System.Drawing.RectangleF.RectangleF(System.Single, System.Single, System.Single, System.Single)
  type: Constructor
  source:
    remote:
      path: src/System.Drawing.Primitives/src/System/Drawing/RectangleF.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Drawing.Primitives/src/System/Drawing/RectangleF.cs
    startLine: 32
  assemblies:
  - System.Drawing.Primitives
  namespace: System.Drawing
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Drawing.RectangleF\" data-throw-if-not-resolved=\"false\"></xref> class with the specified location and size.</p>\n"
  example:
  - "\n<p>The following code example demonstrates how to use the <xref href=\"System.Drawing.RectangleF.#ctor(System.Single,System.Single,System.Single,System.Single)\" data-throw-if-not-resolved=\"false\"></xref>, <xref href=\"System.Drawing.Rectangle.Round(System.Drawing.RectangleF)\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"System.Drawing.Rectangle.Truncate(System.Drawing.RectangleF)\" data-throw-if-not-resolved=\"false\"></xref> members. This example is designed for use with a Windows Form.  Paste this code into a form and call the <code>RoundingAndTruncatingRectangles</code> method when handling the form's <xref href=\"System.Windows.Forms.Control.Paint\" data-throw-if-not-resolved=\"false\"></xref> event, passing <em>e</em> as <xref href=\"System.Windows.Forms.PaintEventArgs\" data-throw-if-not-resolved=\"false\"></xref>.</p>System.Drawing.RectanglesAndPoints#5"
  syntax:
    content: public RectangleF(float x, float y, float width, float height)
    content.vb: Public Sub New(x As Single, y As Single, width As Single, height As Single)
    parameters:
    - id: x
      type: System.Single
    - id: y
      type: System.Single
    - id: width
      type: System.Single
    - id: height
      type: System.Single
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Drawing.RectangleF.Bottom
  commentId: P:System.Drawing.RectangleF.Bottom
  id: Bottom
  parent: System.Drawing.RectangleF
  langs:
  - csharp
  - vb
  name: Bottom
  fullName: System.Drawing.RectangleF.Bottom
  type: Property
  source:
    remote:
      path: src/System.Drawing.Primitives/src/System/Drawing/RectangleF.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Bottom
    path: src/System.Drawing.Primitives/src/System/Drawing/RectangleF.cs
    startLine: 226
  assemblies:
  - System.Drawing.Primitives
  namespace: System.Drawing
  summary: "\n<p>Gets the y-coordinate that is the sum of <xref href=\"System.Drawing.RectangleF.Y\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"System.Drawing.RectangleF.Height\" data-throw-if-not-resolved=\"false\"></xref> of this <xref href=\"System.Drawing.RectangleF\" data-throw-if-not-resolved=\"false\"></xref> structure.</p>\n"
  remarks: "\n<p>The <xref href=\"System.Drawing.RectangleF.Bottom\" data-throw-if-not-resolved=\"false\"></xref> value represents the y-coordinate of the first point at the bottom edge of the rectangle that is not contained in the rectangle.</p>\n"
  syntax:
    content: public float Bottom { get; }
    content.vb: Public ReadOnly Property Bottom As Single
    parameters: []
    return:
      type: System.Single
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Drawing.RectangleF.Height
  commentId: P:System.Drawing.RectangleF.Height
  id: Height
  parent: System.Drawing.RectangleF
  langs:
  - csharp
  - vb
  name: Height
  fullName: System.Drawing.RectangleF.Height
  type: Property
  source:
    remote:
      path: src/System.Drawing.Primitives/src/System/Drawing/RectangleF.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Height
    path: src/System.Drawing.Primitives/src/System/Drawing/RectangleF.cs
    startLine: 166
  assemblies:
  - System.Drawing.Primitives
  namespace: System.Drawing
  summary: "\n<p>Gets or sets the height of this <xref href=\"System.Drawing.RectangleF\" data-throw-if-not-resolved=\"false\"></xref> structure.</p>\n"
  syntax:
    content: public float Height { get; set; }
    content.vb: Public Property Height As Single
    parameters: []
    return:
      type: System.Single
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Drawing.RectangleF.IsEmpty
  commentId: P:System.Drawing.RectangleF.IsEmpty
  id: IsEmpty
  parent: System.Drawing.RectangleF
  langs:
  - csharp
  - vb
  name: IsEmpty
  fullName: System.Drawing.RectangleF.IsEmpty
  type: Property
  source:
    remote:
      path: src/System.Drawing.Primitives/src/System/Drawing/RectangleF.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IsEmpty
    path: src/System.Drawing.Primitives/src/System/Drawing/RectangleF.cs
    startLine: 239
  assemblies:
  - System.Drawing.Primitives
  namespace: System.Drawing
  summary: "\n<p>Tests whether the <xref href=\"System.Drawing.RectangleF.Width\" data-throw-if-not-resolved=\"false\"></xref> or <xref href=\"System.Drawing.RectangleF.Height\" data-throw-if-not-resolved=\"false\"></xref> property of this <xref href=\"System.Drawing.RectangleF\" data-throw-if-not-resolved=\"false\"></xref> has a value of zero.</p>\n"
  syntax:
    content: public bool IsEmpty { get; }
    content.vb: Public ReadOnly Property IsEmpty As Boolean
    parameters: []
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Drawing.RectangleF.Left
  commentId: P:System.Drawing.RectangleF.Left
  id: Left
  parent: System.Drawing.RectangleF
  langs:
  - csharp
  - vb
  name: Left
  fullName: System.Drawing.RectangleF.Left
  type: Property
  source:
    remote:
      path: src/System.Drawing.Primitives/src/System/Drawing/RectangleF.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Left
    path: src/System.Drawing.Primitives/src/System/Drawing/RectangleF.cs
    startLine: 184
  assemblies:
  - System.Drawing.Primitives
  namespace: System.Drawing
  summary: "\n<p>Gets the x-coordinate of the left edge of this <xref href=\"System.Drawing.RectangleF\" data-throw-if-not-resolved=\"false\"></xref> structure.</p>\n"
  syntax:
    content: public float Left { get; }
    content.vb: Public ReadOnly Property Left As Single
    parameters: []
    return:
      type: System.Single
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Drawing.RectangleF.Location
  commentId: P:System.Drawing.RectangleF.Location
  id: Location
  parent: System.Drawing.RectangleF
  langs:
  - csharp
  - vb
  name: Location
  fullName: System.Drawing.RectangleF.Location
  type: Property
  source:
    remote:
      path: src/System.Drawing.Primitives/src/System/Drawing/RectangleF.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Location
    path: src/System.Drawing.Primitives/src/System/Drawing/RectangleF.cs
    startLine: 75
  assemblies:
  - System.Drawing.Primitives
  namespace: System.Drawing
  summary: "\n<p>Gets or sets the coordinates of the upper-left corner of this <xref href=\"System.Drawing.RectangleF\" data-throw-if-not-resolved=\"false\"></xref> structure.</p>\n"
  syntax:
    content: public PointF Location { get; set; }
    content.vb: Public Property Location As PointF
    parameters: []
    return:
      type: System.Drawing.PointF
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Drawing.RectangleF.Right
  commentId: P:System.Drawing.RectangleF.Right
  id: Right
  parent: System.Drawing.RectangleF
  langs:
  - csharp
  - vb
  name: Right
  fullName: System.Drawing.RectangleF.Right
  type: Property
  source:
    remote:
      path: src/System.Drawing.Primitives/src/System/Drawing/RectangleF.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Right
    path: src/System.Drawing.Primitives/src/System/Drawing/RectangleF.cs
    startLine: 212
  assemblies:
  - System.Drawing.Primitives
  namespace: System.Drawing
  summary: "\n<p>Gets the x-coordinate that is the sum of <xref href=\"System.Drawing.RectangleF.X\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"System.Drawing.RectangleF.Width\" data-throw-if-not-resolved=\"false\"></xref> of this <xref href=\"System.Drawing.RectangleF\" data-throw-if-not-resolved=\"false\"></xref> structure.</p>\n"
  remarks: "\n<p>The <xref href=\"System.Drawing.RectangleF.Right\" data-throw-if-not-resolved=\"false\"></xref> value represents the x-coordinate of the first point at the right edge of the rectangle that is not contained in the rectangle.</p>\n"
  syntax:
    content: public float Right { get; }
    content.vb: Public ReadOnly Property Right As Single
    parameters: []
    return:
      type: System.Single
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Drawing.RectangleF.Size
  commentId: P:System.Drawing.RectangleF.Size
  id: Size
  parent: System.Drawing.RectangleF
  langs:
  - csharp
  - vb
  name: Size
  fullName: System.Drawing.RectangleF.Size
  type: Property
  source:
    remote:
      path: src/System.Drawing.Primitives/src/System/Drawing/RectangleF.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Size
    path: src/System.Drawing.Primitives/src/System/Drawing/RectangleF.cs
    startLine: 93
  assemblies:
  - System.Drawing.Primitives
  namespace: System.Drawing
  summary: "\n<p>Gets or sets the size of this <xref href=\"System.Drawing.RectangleF\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: public SizeF Size { get; set; }
    content.vb: Public Property Size As SizeF
    parameters: []
    return:
      type: System.Drawing.SizeF
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Drawing.RectangleF.Top
  commentId: P:System.Drawing.RectangleF.Top
  id: Top
  parent: System.Drawing.RectangleF
  langs:
  - csharp
  - vb
  name: Top
  fullName: System.Drawing.RectangleF.Top
  type: Property
  source:
    remote:
      path: src/System.Drawing.Primitives/src/System/Drawing/RectangleF.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Top
    path: src/System.Drawing.Primitives/src/System/Drawing/RectangleF.cs
    startLine: 198
  assemblies:
  - System.Drawing.Primitives
  namespace: System.Drawing
  summary: "\n<p>Gets the y-coordinate of the top edge of this <xref href=\"System.Drawing.RectangleF\" data-throw-if-not-resolved=\"false\"></xref> structure.</p>\n"
  syntax:
    content: public float Top { get; }
    content.vb: Public ReadOnly Property Top As Single
    parameters: []
    return:
      type: System.Single
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Drawing.RectangleF.Width
  commentId: P:System.Drawing.RectangleF.Width
  id: Width
  parent: System.Drawing.RectangleF
  langs:
  - csharp
  - vb
  name: Width
  fullName: System.Drawing.RectangleF.Width
  type: Property
  source:
    remote:
      path: src/System.Drawing.Primitives/src/System/Drawing/RectangleF.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Width
    path: src/System.Drawing.Primitives/src/System/Drawing/RectangleF.cs
    startLine: 148
  assemblies:
  - System.Drawing.Primitives
  namespace: System.Drawing
  summary: "\n<p>Gets or sets the width of this <xref href=\"System.Drawing.RectangleF\" data-throw-if-not-resolved=\"false\"></xref> structure.</p>\n"
  syntax:
    content: public float Width { get; set; }
    content.vb: Public Property Width As Single
    parameters: []
    return:
      type: System.Single
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Drawing.RectangleF.X
  commentId: P:System.Drawing.RectangleF.X
  id: X
  parent: System.Drawing.RectangleF
  langs:
  - csharp
  - vb
  name: X
  fullName: System.Drawing.RectangleF.X
  type: Property
  source:
    remote:
      path: src/System.Drawing.Primitives/src/System/Drawing/RectangleF.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: X
    path: src/System.Drawing.Primitives/src/System/Drawing/RectangleF.cs
    startLine: 112
  assemblies:
  - System.Drawing.Primitives
  namespace: System.Drawing
  summary: "\n<p>Gets or sets the x-coordinate of the upper-left corner of this <xref href=\"System.Drawing.RectangleF\" data-throw-if-not-resolved=\"false\"></xref> structure.</p>\n"
  syntax:
    content: public float X { get; set; }
    content.vb: Public Property X As Single
    parameters: []
    return:
      type: System.Single
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Drawing.RectangleF.Y
  commentId: P:System.Drawing.RectangleF.Y
  id: Y
  parent: System.Drawing.RectangleF
  langs:
  - csharp
  - vb
  name: Y
  fullName: System.Drawing.RectangleF.Y
  type: Property
  source:
    remote:
      path: src/System.Drawing.Primitives/src/System/Drawing/RectangleF.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Y
    path: src/System.Drawing.Primitives/src/System/Drawing/RectangleF.cs
    startLine: 130
  assemblies:
  - System.Drawing.Primitives
  namespace: System.Drawing
  summary: "\n<p>Gets or sets the y-coordinate of the upper-left corner of this <xref href=\"System.Drawing.RectangleF\" data-throw-if-not-resolved=\"false\"></xref> structure.</p>\n"
  syntax:
    content: public float Y { get; set; }
    content.vb: Public Property Y As Single
    parameters: []
    return:
      type: System.Single
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Drawing.RectangleF.Contains(System.Drawing.PointF)
  commentId: M:System.Drawing.RectangleF.Contains(System.Drawing.PointF)
  id: Contains(System.Drawing.PointF)
  parent: System.Drawing.RectangleF
  langs:
  - csharp
  - vb
  name: Contains(PointF)
  fullName: System.Drawing.RectangleF.Contains(System.Drawing.PointF)
  type: Method
  source:
    remote:
      path: src/System.Drawing.Primitives/src/System/Drawing/RectangleF.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Contains
    path: src/System.Drawing.Primitives/src/System/Drawing/RectangleF.cs
    startLine: 303
  assemblies:
  - System.Drawing.Primitives
  namespace: System.Drawing
  summary: "\n<p>Determines if the specified point is contained within this <xref href=\"System.Drawing.RectangleF\" data-throw-if-not-resolved=\"false\"></xref> structure.</p>\n"
  syntax:
    content: >-
      [Pure]

      public bool Contains(PointF pt)
    content.vb: >-
      <Pure>

      Public Function Contains(pt As PointF) As Boolean
    parameters:
    - id: pt
      type: System.Drawing.PointF
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Drawing.RectangleF.Contains(System.Drawing.RectangleF)
  commentId: M:System.Drawing.RectangleF.Contains(System.Drawing.RectangleF)
  id: Contains(System.Drawing.RectangleF)
  parent: System.Drawing.RectangleF
  langs:
  - csharp
  - vb
  name: Contains(RectangleF)
  fullName: System.Drawing.RectangleF.Contains(System.Drawing.RectangleF)
  type: Method
  source:
    remote:
      path: src/System.Drawing.Primitives/src/System/Drawing/RectangleF.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Contains
    path: src/System.Drawing.Primitives/src/System/Drawing/RectangleF.cs
    startLine: 316
  assemblies:
  - System.Drawing.Primitives
  namespace: System.Drawing
  summary: "\n<p>Determines if the rectangular region represented by <em>rect</em> is entirely contained within this <xref href=\"System.Drawing.RectangleF\" data-throw-if-not-resolved=\"false\"></xref> structure.</p>\n"
  syntax:
    content: >-
      [Pure]

      public bool Contains(RectangleF rect)
    content.vb: >-
      <Pure>

      Public Function Contains(rect As RectangleF) As Boolean
    parameters:
    - id: rect
      type: System.Drawing.RectangleF
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Drawing.RectangleF.Contains(System.Single,System.Single)
  commentId: M:System.Drawing.RectangleF.Contains(System.Single,System.Single)
  id: Contains(System.Single,System.Single)
  parent: System.Drawing.RectangleF
  langs:
  - csharp
  - vb
  name: Contains(Single, Single)
  fullName: System.Drawing.RectangleF.Contains(System.Single, System.Single)
  type: Method
  source:
    remote:
      path: src/System.Drawing.Primitives/src/System/Drawing/RectangleF.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Contains
    path: src/System.Drawing.Primitives/src/System/Drawing/RectangleF.cs
    startLine: 291
  assemblies:
  - System.Drawing.Primitives
  namespace: System.Drawing
  summary: "\n<p>Determines if the specified point is contained within this <xref href=\"System.Drawing.RectangleF\" data-throw-if-not-resolved=\"false\"></xref> structure.</p>\n"
  syntax:
    content: >-
      [Pure]

      public bool Contains(float x, float y)
    content.vb: >-
      <Pure>

      Public Function Contains(x As Single, y As Single) As Boolean
    parameters:
    - id: x
      type: System.Single
    - id: y
      type: System.Single
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Drawing.RectangleF.Equals(System.Object)
  commentId: M:System.Drawing.RectangleF.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Drawing.RectangleF
  langs:
  - csharp
  - vb
  name: Equals(Object)
  fullName: System.Drawing.RectangleF.Equals(System.Object)
  type: Method
  source:
    remote:
      path: src/System.Drawing.Primitives/src/System/Drawing/RectangleF.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Equals
    path: src/System.Drawing.Primitives/src/System/Drawing/RectangleF.cs
    startLine: 253
  assemblies:
  - System.Drawing.Primitives
  namespace: System.Drawing
  summary: "\n<p>Tests whether <em>obj</em> is a <xref href=\"System.Drawing.RectangleF\" data-throw-if-not-resolved=\"false\"></xref> with the same location and size of this <xref href=\"System.Drawing.RectangleF\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: public override bool Equals(object obj)
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
    parameters:
    - id: obj
      type: System.Object
    return:
      type: System.Boolean
  overridden: System.ValueType.Equals(System.Object)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Drawing.RectangleF.FromLTRB(System.Single,System.Single,System.Single,System.Single)
  commentId: M:System.Drawing.RectangleF.FromLTRB(System.Single,System.Single,System.Single,System.Single)
  id: FromLTRB(System.Single,System.Single,System.Single,System.Single)
  parent: System.Drawing.RectangleF
  langs:
  - csharp
  - vb
  name: FromLTRB(Single, Single, Single, Single)
  fullName: System.Drawing.RectangleF.FromLTRB(System.Single, System.Single, System.Single, System.Single)
  type: Method
  source:
    remote:
      path: src/System.Drawing.Primitives/src/System/Drawing/RectangleF.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: FromLTRB
    path: src/System.Drawing.Primitives/src/System/Drawing/RectangleF.cs
    startLine: 61
  assemblies:
  - System.Drawing.Primitives
  namespace: System.Drawing
  summary: "\n<p>Creates a <xref href=\"System.Drawing.RectangleF\" data-throw-if-not-resolved=\"false\"></xref> structure with upper-left corner and lower-right corner at the specified locations.</p>\n"
  remarks: "\n<p>This method creates a <xref href=\"System.Drawing.RectangleF\" data-throw-if-not-resolved=\"false\"></xref> with the specified upper-left and lower-right corners.</p>\n"
  syntax:
    content: public static RectangleF FromLTRB(float left, float top, float right, float bottom)
    content.vb: Public Shared Function FromLTRB(left As Single, top As Single, right As Single, bottom As Single) As RectangleF
    parameters:
    - id: left
      type: System.Single
    - id: top
      type: System.Single
    - id: right
      type: System.Single
    - id: bottom
      type: System.Single
    return:
      type: System.Drawing.RectangleF
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Drawing.RectangleF.GetHashCode
  commentId: M:System.Drawing.RectangleF.GetHashCode
  id: GetHashCode
  parent: System.Drawing.RectangleF
  langs:
  - csharp
  - vb
  name: GetHashCode()
  fullName: System.Drawing.RectangleF.GetHashCode()
  type: Method
  source:
    remote:
      path: src/System.Drawing.Primitives/src/System/Drawing/RectangleF.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetHashCode
    path: src/System.Drawing.Primitives/src/System/Drawing/RectangleF.cs
    startLine: 326
  assemblies:
  - System.Drawing.Primitives
  namespace: System.Drawing
  summary: "\n<p>Gets the hash code for this <xref href=\"System.Drawing.RectangleF\" data-throw-if-not-resolved=\"false\"></xref> structure. For information about the use of hash codes, see <strong>Object.GetHashCode</strong>.</p>\n"
  syntax:
    content: public override int GetHashCode()
    content.vb: Public Overrides Function GetHashCode As Integer
    return:
      type: System.Int32
  overridden: System.ValueType.GetHashCode
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Drawing.RectangleF.Inflate(System.Drawing.RectangleF,System.Single,System.Single)
  commentId: M:System.Drawing.RectangleF.Inflate(System.Drawing.RectangleF,System.Single,System.Single)
  id: Inflate(System.Drawing.RectangleF,System.Single,System.Single)
  parent: System.Drawing.RectangleF
  langs:
  - csharp
  - vb
  name: Inflate(RectangleF, Single, Single)
  fullName: System.Drawing.RectangleF.Inflate(System.Drawing.RectangleF, System.Single, System.Single)
  type: Method
  source:
    remote:
      path: src/System.Drawing.Primitives/src/System/Drawing/RectangleF.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Inflate
    path: src/System.Drawing.Primitives/src/System/Drawing/RectangleF.cs
    startLine: 360
  assemblies:
  - System.Drawing.Primitives
  namespace: System.Drawing
  summary: "\n<p>Creates and returns an enlarged copy of the specified <xref href=\"System.Drawing.RectangleF\" data-throw-if-not-resolved=\"false\"></xref> structure. The copy is enlarged by the specified amount and the original rectangle remains unmodified.</p>\n"
  remarks: "\n<p>This method makes a copy of <em>rect</em>, enlarges the copy, and then returns the enlarged copy. The rectangle is enlarged in both directions along an axis. For example, if a 50 by 50 rectangle is inflated by 50 in the x-axis, the resultant rectangle will be 150 units long (the original 50, the 50 in the minus direction, and the 50 in the plus direction) maintaining the rectangle's geometric center.</p>\n"
  syntax:
    content: public static RectangleF Inflate(RectangleF rect, float x, float y)
    content.vb: Public Shared Function Inflate(rect As RectangleF, x As Single, y As Single) As RectangleF
    parameters:
    - id: rect
      type: System.Drawing.RectangleF
    - id: x
      type: System.Single
    - id: y
      type: System.Single
    return:
      type: System.Drawing.RectangleF
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Drawing.RectangleF.Inflate(System.Drawing.SizeF)
  commentId: M:System.Drawing.RectangleF.Inflate(System.Drawing.SizeF)
  id: Inflate(System.Drawing.SizeF)
  parent: System.Drawing.RectangleF
  langs:
  - csharp
  - vb
  name: Inflate(SizeF)
  fullName: System.Drawing.RectangleF.Inflate(System.Drawing.SizeF)
  type: Method
  source:
    remote:
      path: src/System.Drawing.Primitives/src/System/Drawing/RectangleF.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Inflate
    path: src/System.Drawing.Primitives/src/System/Drawing/RectangleF.cs
    startLine: 349
  assemblies:
  - System.Drawing.Primitives
  namespace: System.Drawing
  summary: "\n<p>Enlarges this <xref href=\"System.Drawing.RectangleF\" data-throw-if-not-resolved=\"false\"></xref> by the specified amount.</p>\n"
  remarks: "\n<p>This method enlarges this rectangle, not a copy of it. The rectangle is enlarged in both directions along an axis. For example, if a 50 by 50 rectangle is inflated by 50 in the x-axis, the resultant rectangle will be 150 units long (the original 50, the 50 in the minus direction, and the 50 in the plus direction) maintaining the rectangle's geometric center.</p>\n"
  example:
  - "\n<p>This example is designed for use with Windows Forms, and it requires <xref href=\"System.Windows.Forms.PaintEventArgs\" data-throw-if-not-resolved=\"false\"></xref> e, an OnPaint event object. The code creates a <xref href=\"System.Drawing.RectangleF\" data-throw-if-not-resolved=\"false\"></xref> and draws it to the screen in black. Notice that it has to be converted to a <xref href=\"System.Drawing.Rectangle\" data-throw-if-not-resolved=\"false\"></xref> for drawing purposes. Then the code enlarges the <xref href=\"System.Drawing.RectangleF\" data-throw-if-not-resolved=\"false\"></xref>, again converts it to a <xref href=\"System.Drawing.Rectangle\" data-throw-if-not-resolved=\"false\"></xref>, and draws it to the screen in red. Notice that the original (black) rectangle is expanded in both directions along the x-axis by 100 points.</p>System.Drawing.ClassicRectangleFExamples#1"
  syntax:
    content: public void Inflate(SizeF size)
    content.vb: Public Sub Inflate(size As SizeF)
    parameters:
    - id: size
      type: System.Drawing.SizeF
  seealso:
  - type: System.Drawing.RectangleF.Inflate(System.Drawing.RectangleF,System.Single,System.Single)
    commentId: M:System.Drawing.RectangleF.Inflate(System.Drawing.RectangleF,System.Single,System.Single)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Drawing.RectangleF.Inflate(System.Single,System.Single)
  commentId: M:System.Drawing.RectangleF.Inflate(System.Single,System.Single)
  id: Inflate(System.Single,System.Single)
  parent: System.Drawing.RectangleF
  langs:
  - csharp
  - vb
  name: Inflate(Single, Single)
  fullName: System.Drawing.RectangleF.Inflate(System.Single, System.Single)
  type: Method
  source:
    remote:
      path: src/System.Drawing.Primitives/src/System/Drawing/RectangleF.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Inflate
    path: src/System.Drawing.Primitives/src/System/Drawing/RectangleF.cs
    startLine: 338
  assemblies:
  - System.Drawing.Primitives
  namespace: System.Drawing
  summary: "\n<p>Enlarges this <xref href=\"System.Drawing.RectangleF\" data-throw-if-not-resolved=\"false\"></xref> structure by the specified amount.</p>\n"
  remarks: "\n<p>This method enlarges this rectangle, not a copy of it. The rectangle is enlarged in both directions along an axis. For example, if a 50 by 50 rectangle is inflated by 50 in the x-axis, the resultant rectangle will be 150 units long (the original 50, the 50 in the minus direction, and the 50 in the plus direction) maintaining the rectangle's geometric center.</p>\n<p>If either <em>x</em> or <em>y</em> is negative, the <xref href=\"System.Drawing.RectangleF\" data-throw-if-not-resolved=\"false\"></xref> is deflated in the corresponding direction.</p>\n"
  syntax:
    content: public void Inflate(float x, float y)
    content.vb: Public Sub Inflate(x As Single, y As Single)
    parameters:
    - id: x
      type: System.Single
    - id: y
      type: System.Single
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Drawing.RectangleF.Intersect(System.Drawing.RectangleF)
  commentId: M:System.Drawing.RectangleF.Intersect(System.Drawing.RectangleF)
  id: Intersect(System.Drawing.RectangleF)
  parent: System.Drawing.RectangleF
  langs:
  - csharp
  - vb
  name: Intersect(RectangleF)
  fullName: System.Drawing.RectangleF.Intersect(System.Drawing.RectangleF)
  type: Method
  source:
    remote:
      path: src/System.Drawing.Primitives/src/System/Drawing/RectangleF.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Intersect
    path: src/System.Drawing.Primitives/src/System/Drawing/RectangleF.cs
    startLine: 369
  assemblies:
  - System.Drawing.Primitives
  namespace: System.Drawing
  summary: "\n<p>Replaces this <xref href=\"System.Drawing.RectangleF\" data-throw-if-not-resolved=\"false\"></xref> structure with the intersection of itself and the specified <xref href=\"System.Drawing.RectangleF\" data-throw-if-not-resolved=\"false\"></xref> structure.</p>\n"
  syntax:
    content: public void Intersect(RectangleF rect)
    content.vb: Public Sub Intersect(rect As RectangleF)
    parameters:
    - id: rect
      type: System.Drawing.RectangleF
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Drawing.RectangleF.Intersect(System.Drawing.RectangleF,System.Drawing.RectangleF)
  commentId: M:System.Drawing.RectangleF.Intersect(System.Drawing.RectangleF,System.Drawing.RectangleF)
  id: Intersect(System.Drawing.RectangleF,System.Drawing.RectangleF)
  parent: System.Drawing.RectangleF
  langs:
  - csharp
  - vb
  name: Intersect(RectangleF, RectangleF)
  fullName: System.Drawing.RectangleF.Intersect(System.Drawing.RectangleF, System.Drawing.RectangleF)
  type: Method
  source:
    remote:
      path: src/System.Drawing.Primitives/src/System/Drawing/RectangleF.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Intersect
    path: src/System.Drawing.Primitives/src/System/Drawing/RectangleF.cs
    startLine: 383
  assemblies:
  - System.Drawing.Primitives
  namespace: System.Drawing
  summary: "\n<p>Returns a <xref href=\"System.Drawing.RectangleF\" data-throw-if-not-resolved=\"false\"></xref> structure that represents the intersection of two rectangles. If there is no intersection, and empty <xref href=\"System.Drawing.RectangleF\" data-throw-if-not-resolved=\"false\"></xref> is returned.</p>\n"
  example:
  - "\n<p>This example is designed for use with Windows Forms, and it requires <xref href=\"System.Windows.Forms.PaintEventArgs\" data-throw-if-not-resolved=\"false\"></xref><em>e</em>, an <xref href=\"System.Windows.Forms.Control.OnPaint(System.Windows.Forms.PaintEventArgs)\" data-throw-if-not-resolved=\"false\"></xref> event object. The code creates two <xref href=\"System.Drawing.RectangleF\" data-throw-if-not-resolved=\"false\"></xref> objects and draws them to the screen in black and red. Notice that they have to be converted to <xref href=\"System.Drawing.Rectangle\" data-throw-if-not-resolved=\"false\"></xref> objects for drawing purposes. Then the code creates a third <xref href=\"System.Drawing.RectangleF\" data-throw-if-not-resolved=\"false\"></xref> using the <see cref=\"Overload:System.Drawing.RectangleF.Intersect\"></see> method, converts it to a <xref href=\"System.Drawing.Rectangle\" data-throw-if-not-resolved=\"false\"></xref>, and draws it to the screen in blue. Notice the third (blue) rectangle is the area of overlap of the other two rectangles: </p>System.Drawing.ClassicRectangleFExamples#2"
  syntax:
    content: >-
      [Pure]

      public static RectangleF Intersect(RectangleF a, RectangleF b)
    content.vb: >-
      <Pure>

      Public Shared Function Intersect(a As RectangleF, b As RectangleF) As RectangleF
    parameters:
    - id: a
      type: System.Drawing.RectangleF
    - id: b
      type: System.Drawing.RectangleF
    return:
      type: System.Drawing.RectangleF
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Drawing.RectangleF.IntersectsWith(System.Drawing.RectangleF)
  commentId: M:System.Drawing.RectangleF.IntersectsWith(System.Drawing.RectangleF)
  id: IntersectsWith(System.Drawing.RectangleF)
  parent: System.Drawing.RectangleF
  langs:
  - csharp
  - vb
  name: IntersectsWith(RectangleF)
  fullName: System.Drawing.RectangleF.IntersectsWith(System.Drawing.RectangleF)
  type: Method
  source:
    remote:
      path: src/System.Drawing.Primitives/src/System/Drawing/RectangleF.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IntersectsWith
    path: src/System.Drawing.Primitives/src/System/Drawing/RectangleF.cs
    startLine: 402
  assemblies:
  - System.Drawing.Primitives
  namespace: System.Drawing
  summary: "\n<p>Determines if this rectangle intersects with <em>rect</em>.</p>\n"
  syntax:
    content: >-
      [Pure]

      public bool IntersectsWith(RectangleF rect)
    content.vb: >-
      <Pure>

      Public Function IntersectsWith(rect As RectangleF) As Boolean
    parameters:
    - id: rect
      type: System.Drawing.RectangleF
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Drawing.RectangleF.Offset(System.Drawing.PointF)
  commentId: M:System.Drawing.RectangleF.Offset(System.Drawing.PointF)
  id: Offset(System.Drawing.PointF)
  parent: System.Drawing.RectangleF
  langs:
  - csharp
  - vb
  name: Offset(PointF)
  fullName: System.Drawing.RectangleF.Offset(System.Drawing.PointF)
  type: Method
  source:
    remote:
      path: src/System.Drawing.Primitives/src/System/Drawing/RectangleF.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Offset
    path: src/System.Drawing.Primitives/src/System/Drawing/RectangleF.cs
    startLine: 427
  assemblies:
  - System.Drawing.Primitives
  namespace: System.Drawing
  summary: "\n<p>Adjusts the location of this rectangle by the specified amount.</p>\n"
  syntax:
    content: public void Offset(PointF pos)
    content.vb: Public Sub Offset(pos As PointF)
    parameters:
    - id: pos
      type: System.Drawing.PointF
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Drawing.RectangleF.Offset(System.Single,System.Single)
  commentId: M:System.Drawing.RectangleF.Offset(System.Single,System.Single)
  id: Offset(System.Single,System.Single)
  parent: System.Drawing.RectangleF
  langs:
  - csharp
  - vb
  name: Offset(Single, Single)
  fullName: System.Drawing.RectangleF.Offset(System.Single, System.Single)
  type: Method
  source:
    remote:
      path: src/System.Drawing.Primitives/src/System/Drawing/RectangleF.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Offset
    path: src/System.Drawing.Primitives/src/System/Drawing/RectangleF.cs
    startLine: 435
  assemblies:
  - System.Drawing.Primitives
  namespace: System.Drawing
  summary: "\n<p>Adjusts the location of this rectangle by the specified amount.</p>\n"
  syntax:
    content: public void Offset(float x, float y)
    content.vb: Public Sub Offset(x As Single, y As Single)
    parameters:
    - id: x
      type: System.Single
    - id: y
      type: System.Single
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Drawing.RectangleF.op_Equality(System.Drawing.RectangleF,System.Drawing.RectangleF)
  commentId: M:System.Drawing.RectangleF.op_Equality(System.Drawing.RectangleF,System.Drawing.RectangleF)
  id: op_Equality(System.Drawing.RectangleF,System.Drawing.RectangleF)
  parent: System.Drawing.RectangleF
  langs:
  - csharp
  - vb
  name: Equality(RectangleF, RectangleF)
  fullName: System.Drawing.RectangleF.Equality(System.Drawing.RectangleF, System.Drawing.RectangleF)
  type: Operator
  source:
    remote:
      path: src/System.Drawing.Primitives/src/System/Drawing/RectangleF.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_Equality
    path: src/System.Drawing.Primitives/src/System/Drawing/RectangleF.cs
    startLine: 269
  assemblies:
  - System.Drawing.Primitives
  namespace: System.Drawing
  summary: "\n<p>Tests whether two <xref href=\"System.Drawing.RectangleF\" data-throw-if-not-resolved=\"false\"></xref> structures have equal location and size.</p>\n"
  example:
  - "\n<p>The following code example demonstrates how to use the <xref href=\"System.Drawing.RectangleF.op_Implicit(System.Drawing.Rectangle)~System.Drawing.RectangleF\" data-throw-if-not-resolved=\"false\"></xref>, <xref href=\"System.Drawing.RectangleF.#ctor(System.Drawing.PointF,System.Drawing.SizeF)\" data-throw-if-not-resolved=\"false\"></xref>and <xref href=\"System.Drawing.RectangleF.op_Equality(System.Drawing.RectangleF,System.Drawing.RectangleF)\" data-throw-if-not-resolved=\"false\"></xref> members. This example is designed for use with a Windows Form. Paste this code into a form and call the <code>ConvertRectangleToRectangleF</code> method when handling the form's <xref href=\"System.Windows.Forms.Control.Paint\" data-throw-if-not-resolved=\"false\"></xref> event, passing <em>e</em> as <xref href=\"System.Windows.Forms.PaintEventArgs\" data-throw-if-not-resolved=\"false\"></xref>.</p>System.Drawing.RectanglesAndPoints#6"
  syntax:
    content: public static bool operator ==(RectangleF left, RectangleF right)
    content.vb: Public Shared Operator =(left As RectangleF, right As RectangleF) As Boolean
    parameters:
    - id: left
      type: System.Drawing.RectangleF
    - id: right
      type: System.Drawing.RectangleF
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Drawing.RectangleF.op_Implicit(System.Drawing.Rectangle)~System.Drawing.RectangleF
  commentId: M:System.Drawing.RectangleF.op_Implicit(System.Drawing.Rectangle)~System.Drawing.RectangleF
  id: op_Implicit(System.Drawing.Rectangle)~System.Drawing.RectangleF
  parent: System.Drawing.RectangleF
  langs:
  - csharp
  - vb
  name: Implicit(Rectangle to RectangleF)
  fullName: System.Drawing.RectangleF.Implicit(System.Drawing.Rectangle to System.Drawing.RectangleF)
  type: Operator
  source:
    remote:
      path: src/System.Drawing.Primitives/src/System/Drawing/RectangleF.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_Implicit
    path: src/System.Drawing.Primitives/src/System/Drawing/RectangleF.cs
    startLine: 445
  assemblies:
  - System.Drawing.Primitives
  namespace: System.Drawing
  summary: "\n<p>Converts the specified <xref href=\"System.Drawing.Rectangle\" data-throw-if-not-resolved=\"false\"></xref> structure to a <xref href=\"System.Drawing.RectangleF\" data-throw-if-not-resolved=\"false\"></xref> structure.</p>\n"
  example:
  - "\n<p>The following code example demonstrates how to use the <xref href=\"System.Drawing.RectangleF.op_Implicit(System.Drawing.Rectangle)~System.Drawing.RectangleF\" data-throw-if-not-resolved=\"false\"></xref>, <xref href=\"System.Drawing.RectangleF.#ctor(System.Drawing.PointF,System.Drawing.SizeF)\" data-throw-if-not-resolved=\"false\"></xref>and <xref href=\"System.Drawing.RectangleF.op_Equality(System.Drawing.RectangleF,System.Drawing.RectangleF)\" data-throw-if-not-resolved=\"false\"></xref> members. This example is designed for use with a Windows Form. Paste this code into a form and call the <code>ConvertRectangleToRectangleF</code> method when handling the form's <xref href=\"System.Windows.Forms.Control.Paint\" data-throw-if-not-resolved=\"false\"></xref> event, passing <em>e</em> as <xref href=\"System.Windows.Forms.PaintEventArgs\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>System.Drawing.RectanglesAndPoints#6</p>\n"
  syntax:
    content: public static implicit operator RectangleF(Rectangle r)
    content.vb: Public Shared Widening Operator CType(r As Rectangle) As RectangleF
    parameters:
    - id: r
      type: System.Drawing.Rectangle
    return:
      type: System.Drawing.RectangleF
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Drawing.RectangleF.Widening(System.Drawing.Rectangle to System.Drawing.RectangleF)
  name.vb: Widening(Rectangle to RectangleF)
- uid: System.Drawing.RectangleF.op_Inequality(System.Drawing.RectangleF,System.Drawing.RectangleF)
  commentId: M:System.Drawing.RectangleF.op_Inequality(System.Drawing.RectangleF,System.Drawing.RectangleF)
  id: op_Inequality(System.Drawing.RectangleF,System.Drawing.RectangleF)
  parent: System.Drawing.RectangleF
  langs:
  - csharp
  - vb
  name: Inequality(RectangleF, RectangleF)
  fullName: System.Drawing.RectangleF.Inequality(System.Drawing.RectangleF, System.Drawing.RectangleF)
  type: Operator
  source:
    remote:
      path: src/System.Drawing.Primitives/src/System/Drawing/RectangleF.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_Inequality
    path: src/System.Drawing.Primitives/src/System/Drawing/RectangleF.cs
    startLine: 280
  assemblies:
  - System.Drawing.Primitives
  namespace: System.Drawing
  summary: "\n<p>Tests whether two <xref href=\"System.Drawing.RectangleF\" data-throw-if-not-resolved=\"false\"></xref> structures differ in location or size.</p>\n"
  syntax:
    content: public static bool operator !=(RectangleF left, RectangleF right)
    content.vb: Public Shared Operator <>(left As RectangleF, right As RectangleF) As Boolean
    parameters:
    - id: left
      type: System.Drawing.RectangleF
    - id: right
      type: System.Drawing.RectangleF
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Drawing.RectangleF.ToString
  commentId: M:System.Drawing.RectangleF.ToString
  id: ToString
  parent: System.Drawing.RectangleF
  langs:
  - csharp
  - vb
  name: ToString()
  fullName: System.Drawing.RectangleF.ToString()
  type: Method
  source:
    remote:
      path: src/System.Drawing.Primitives/src/System/Drawing/RectangleF.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ToString
    path: src/System.Drawing.Primitives/src/System/Drawing/RectangleF.cs
    startLine: 454
  assemblies:
  - System.Drawing.Primitives
  namespace: System.Drawing
  summary: "\n<p>Converts the <strong>Location</strong> and <xref href=\"System.Drawing.Size\" data-throw-if-not-resolved=\"false\"></xref> of this <xref href=\"System.Drawing.RectangleF\" data-throw-if-not-resolved=\"false\"></xref> to a human-readable string.</p>\n"
  syntax:
    content: public override string ToString()
    content.vb: Public Overrides Function ToString As String
    return:
      type: System.String
  overridden: System.ValueType.ToString
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Drawing.RectangleF.Union(System.Drawing.RectangleF,System.Drawing.RectangleF)
  commentId: M:System.Drawing.RectangleF.Union(System.Drawing.RectangleF,System.Drawing.RectangleF)
  id: Union(System.Drawing.RectangleF,System.Drawing.RectangleF)
  parent: System.Drawing.RectangleF
  langs:
  - csharp
  - vb
  name: Union(RectangleF, RectangleF)
  fullName: System.Drawing.RectangleF.Union(System.Drawing.RectangleF, System.Drawing.RectangleF)
  type: Method
  source:
    remote:
      path: src/System.Drawing.Primitives/src/System/Drawing/RectangleF.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Union
    path: src/System.Drawing.Primitives/src/System/Drawing/RectangleF.cs
    startLine: 413
  assemblies:
  - System.Drawing.Primitives
  namespace: System.Drawing
  summary: "\n<p>Creates the smallest possible third rectangle that can contain both of two rectangles that form a union.</p>\n"
  remarks: "\n<p>When one of the two rectangles is empty, meaning all of its values are zero, the <xref href=\"System.Drawing.Rectangle.Union(System.Drawing.Rectangle,System.Drawing.Rectangle)\" data-throw-if-not-resolved=\"false\"></xref> method returns a rectangle with a starting point of (0, 0), and the height and width of the non-empty rectangle. For example, if you have two rectangles A = (0, 0; 0, 0) and B = (1, 1; 2, 2), then the union of A and B is (0, 0; 2, 2).</p>\n"
  example:
  - "\n<p>This example is designed for use with Windows Forms, and it requires <xref href=\"System.Windows.Forms.PaintEventArgs\" data-throw-if-not-resolved=\"false\"></xref> e, an <xref href=\"System.Windows.Forms.Control.OnPaint(System.Windows.Forms.PaintEventArgs)\" data-throw-if-not-resolved=\"false\"></xref> event object. The code creates two <xref href=\"System.Drawing.RectangleF\" data-throw-if-not-resolved=\"false\"></xref> s and draws them to the screen in black and red. Notice that they have to be converted to <xref href=\"System.Drawing.Rectangle\" data-throw-if-not-resolved=\"false\"></xref> s for drawing purposes. Then the code creates a third <xref href=\"System.Drawing.RectangleF\" data-throw-if-not-resolved=\"false\"></xref> using the <xref href=\"System.Drawing.RectangleF.Union(System.Drawing.RectangleF,System.Drawing.RectangleF)\" data-throw-if-not-resolved=\"false\"></xref> method, converts it to a <xref href=\"System.Drawing.Rectangle\" data-throw-if-not-resolved=\"false\"></xref>, and draws it to the screen in blue. Notice the third (blue) rectangle is the smallest possible rectangle that can contain both of the other two rectangles: </p>System.Drawing.ClassicRectangleFExamples#3"
  syntax:
    content: >-
      [Pure]

      public static RectangleF Union(RectangleF a, RectangleF b)
    content.vb: >-
      <Pure>

      Public Shared Function Union(a As RectangleF, b As RectangleF) As RectangleF
    parameters:
    - id: a
      type: System.Drawing.RectangleF
    - id: b
      type: System.Drawing.RectangleF
    return:
      type: System.Drawing.RectangleF
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: System.Drawing
  isExternal: false
  name: System.Drawing
  fullName: System.Drawing
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Drawing.RectangleF
  parent: System.Drawing
  isExternal: false
  name: RectangleF
  fullName: System.Drawing.RectangleF
- uid: System.Drawing.PointF
  parent: System.Drawing
  isExternal: false
  name: PointF
  fullName: System.Drawing.PointF
- uid: System.Drawing.SizeF
  parent: System.Drawing
  isExternal: false
  name: SizeF
  fullName: System.Drawing.SizeF
- uid: System.Single
  parent: System
  isExternal: false
  name: Single
  fullName: System.Single
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  fullName: System.Boolean
- uid: System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  name: Equals(Object)
  fullName: System.ValueType.Equals(System.Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    fullName: System.ValueType.Equals
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    fullName: System.ValueType.Equals
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.ValueType
  parent: System
  isExternal: false
  name: ValueType
  fullName: System.ValueType
- uid: System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: false
  name: GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    fullName: System.ValueType.GetHashCode
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    fullName: System.ValueType.GetHashCode
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  fullName: System.Int32
- uid: System.Drawing.Rectangle
  parent: System.Drawing
  isExternal: false
  name: Rectangle
  fullName: System.Drawing.Rectangle
- uid: System.ValueType.ToString
  parent: System.ValueType
  isExternal: false
  name: ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    fullName: System.ValueType.ToString
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    fullName: System.ValueType.ToString
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.String
  parent: System
  isExternal: false
  name: String
  fullName: System.String
