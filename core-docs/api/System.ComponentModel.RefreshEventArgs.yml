items:
- uid: System.ComponentModel.RefreshEventArgs
  commentId: T:System.ComponentModel.RefreshEventArgs
  id: RefreshEventArgs
  parent: System.ComponentModel
  children:
  - System.ComponentModel.RefreshEventArgs.#ctor(System.Object)
  - System.ComponentModel.RefreshEventArgs.#ctor(System.Type)
  - System.ComponentModel.RefreshEventArgs.ComponentChanged
  - System.ComponentModel.RefreshEventArgs.TypeChanged
  langs:
  - csharp
  - vb
  name: RefreshEventArgs
  fullName: System.ComponentModel.RefreshEventArgs
  type: Class
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/RefreshEventArgs.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: RefreshEventArgs
    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/RefreshEventArgs.cs
    startLine: 11
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: "\n<p>Provides data for the <xref href=\"System.ComponentModel.TypeDescriptor.Refreshed\" data-throw-if-not-resolved=\"false\"></xref> event.</p>\n"
  remarks: "\n<p>Typically, component information does not change for the life of a process. During design time, however, you can change the component's properties or events. As a result, the component's information in <xref href=\"System.ComponentModel.TypeDescriptor\" data-throw-if-not-resolved=\"false\"></xref> becomes out-of-date, and a <xref href=\"System.ComponentModel.TypeDescriptor.Refreshed\" data-throw-if-not-resolved=\"false\"></xref> event is raised. A <xref href=\"System.ComponentModel.TypeDescriptor.Refreshed\" data-throw-if-not-resolved=\"false\"></xref> event is also raised when a <xref href=\"System.Type\" data-throw-if-not-resolved=\"false\"></xref> is changed during design time.</p>\n<p>A <xref href=\"System.ComponentModel.RefreshEventArgs\" data-throw-if-not-resolved=\"false\"></xref> object specifies the data associated with the <xref href=\"System.ComponentModel.TypeDescriptor.Refreshed\" data-throw-if-not-resolved=\"false\"></xref> event; that is, the component and the type of component that changed.</p>\n<p>The <xref href=\"System.ComponentModel.RefreshEventArgs\" data-throw-if-not-resolved=\"false\"></xref> class provides <xref href=\"System.ComponentModel.RefreshEventArgs.ComponentChanged\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"System.ComponentModel.RefreshEventArgs.TypeChanged\" data-throw-if-not-resolved=\"false\"></xref> properties to get the component or type that raised the event.</p>\n"
  example:
  - "\n<p>For an example of the <xref href=\"System.ComponentModel.RefreshEventArgs\" data-throw-if-not-resolved=\"false\"></xref> class, see the sample code in the <xref href=\"System.ComponentModel.RefreshEventHandler\" data-throw-if-not-resolved=\"false\"></xref> delegate.</p>\n"
  syntax:
    content: 'public class RefreshEventArgs : EventArgs'
    content.vb: >-
      Public Class RefreshEventArgs
          Inherits EventArgs
  seealso:
  - type: System.ComponentModel.RefreshEventHandler
    commentId: T:System.ComponentModel.RefreshEventHandler
  - type: System.ComponentModel.TypeDescriptor
    commentId: T:System.ComponentModel.TypeDescriptor
  - type: System.ComponentModel.TypeDescriptor.Refresh(System.Object)
    commentId: M:System.ComponentModel.TypeDescriptor.Refresh(System.Object)
  inheritance:
  - System.Object
  - System.EventArgs
  inheritedMembers:
  - System.EventArgs.Empty
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: System.ComponentModel.RefreshEventArgs.#ctor(System.Object)
  commentId: M:System.ComponentModel.RefreshEventArgs.#ctor(System.Object)
  id: '#ctor(System.Object)'
  parent: System.ComponentModel.RefreshEventArgs
  langs:
  - csharp
  - vb
  name: RefreshEventArgs(Object)
  fullName: System.ComponentModel.RefreshEventArgs.RefreshEventArgs(System.Object)
  type: Constructor
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/RefreshEventArgs.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/RefreshEventArgs.cs
    startLine: 22
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.ComponentModel.RefreshEventArgs\" data-throw-if-not-resolved=\"false\"></xref> class with the component that has changed.</p>\n"
  syntax:
    content: public RefreshEventArgs(object componentChanged)
    content.vb: Public Sub New(componentChanged As Object)
    parameters:
    - id: componentChanged
      type: System.Object
  seealso:
  - type: System.ComponentModel.RefreshEventHandler
    commentId: T:System.ComponentModel.RefreshEventHandler
  - type: System.ComponentModel.TypeDescriptor
    commentId: T:System.ComponentModel.TypeDescriptor
  - type: System.ComponentModel.TypeDescriptor.Refresh(System.Object)
    commentId: M:System.ComponentModel.TypeDescriptor.Refresh(System.Object)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.ComponentModel.RefreshEventArgs.#ctor(System.Type)
  commentId: M:System.ComponentModel.RefreshEventArgs.#ctor(System.Type)
  id: '#ctor(System.Type)'
  parent: System.ComponentModel.RefreshEventArgs
  langs:
  - csharp
  - vb
  name: RefreshEventArgs(Type)
  fullName: System.ComponentModel.RefreshEventArgs.RefreshEventArgs(System.Type)
  type: Constructor
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/RefreshEventArgs.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/RefreshEventArgs.cs
    startLine: 34
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.ComponentModel.RefreshEventArgs\" data-throw-if-not-resolved=\"false\"></xref> class with the type of component that has changed.</p>\n"
  syntax:
    content: public RefreshEventArgs(Type typeChanged)
    content.vb: Public Sub New(typeChanged As Type)
    parameters:
    - id: typeChanged
      type: System.Type
  seealso:
  - type: System.ComponentModel.RefreshEventHandler
    commentId: T:System.ComponentModel.RefreshEventHandler
  - type: System.ComponentModel.TypeDescriptor
    commentId: T:System.ComponentModel.TypeDescriptor
  - type: System.ComponentModel.TypeDescriptor.Refresh(System.Object)
    commentId: M:System.ComponentModel.TypeDescriptor.Refresh(System.Object)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.ComponentModel.RefreshEventArgs.ComponentChanged
  commentId: P:System.ComponentModel.RefreshEventArgs.ComponentChanged
  id: ComponentChanged
  parent: System.ComponentModel.RefreshEventArgs
  langs:
  - csharp
  - vb
  name: ComponentChanged
  fullName: System.ComponentModel.RefreshEventArgs.ComponentChanged
  type: Property
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/RefreshEventArgs.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ComponentChanged
    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/RefreshEventArgs.cs
    startLine: 44
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: "\n<p>Gets the component that changed its properties, events, or extenders.</p>\n"
  syntax:
    content: public object ComponentChanged { get; }
    content.vb: Public ReadOnly Property ComponentChanged As Object
    parameters: []
    return:
      type: System.Object
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.ComponentModel.RefreshEventArgs.TypeChanged
  commentId: P:System.ComponentModel.RefreshEventArgs.TypeChanged
  id: TypeChanged
  parent: System.ComponentModel.RefreshEventArgs
  langs:
  - csharp
  - vb
  name: TypeChanged
  fullName: System.ComponentModel.RefreshEventArgs.TypeChanged
  type: Property
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/RefreshEventArgs.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: TypeChanged
    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/RefreshEventArgs.cs
    startLine: 57
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: "\n<p>Gets the <xref href=\"System.Type\" data-throw-if-not-resolved=\"false\"></xref> that changed its properties or events.</p>\n"
  syntax:
    content: public Type TypeChanged { get; }
    content.vb: Public ReadOnly Property TypeChanged As Type
    parameters: []
    return:
      type: System.Type
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: System.ComponentModel
  isExternal: false
  name: System.ComponentModel
  fullName: System.ComponentModel
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System.EventArgs
  parent: System
  isExternal: false
  name: EventArgs
  fullName: System.EventArgs
- uid: System.EventArgs.Empty
  parent: System.EventArgs
  isExternal: true
  name: Empty
  fullName: System.EventArgs.Empty
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  fullName: System.Type
