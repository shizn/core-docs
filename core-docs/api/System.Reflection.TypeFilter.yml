items:
- uid: System.Reflection.TypeFilter
  commentId: T:System.Reflection.TypeFilter
  id: TypeFilter
  parent: System.Reflection
  children: []
  langs:
  - csharp
  - vb
  name: TypeFilter
  fullName: System.Reflection.TypeFilter
  type: Delegate
  source:
    remote:
      path: src/System.Reflection/ref/System.Reflection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: TypeFilter
    path: src/System.Reflection/ref/System.Reflection.cs
    startLine: 425
  assemblies:
  - System.Reflection
  namespace: System.Reflection
  summary: "\n<p>Filters the classes represented in an array of <xref href=\"System.Type\" data-throw-if-not-resolved=\"false\"></xref> objects.</p>\n"
  remarks: "\n<p>The <strong>TypeFilter</strong> delegate is used to filter a list of classes. Specifically, you use it to filter the classes represented in an array of <xref href=\"System.Type\" data-throw-if-not-resolved=\"false\"></xref> objects. The <xref href=\"System.Type.FindInterfaces(System.Reflection.TypeFilter,System.Object)\" data-throw-if-not-resolved=\"false\"></xref> method uses this delegate to filter the list of interfaces that it returns. Every derived class of <xref href=\"System.Delegate\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"System.MulticastDelegate\" data-throw-if-not-resolved=\"false\"></xref> has a constructor and a <strong>DynamicInvoke</strong> method. See the Visual C++ code example given in the description for <strong>Delegate</strong>.</p>\n"
  example:
  - "\n<p>This example shows how to define a method matching the <xref href=\"System.Reflection.TypeFilter\" data-throw-if-not-resolved=\"false\"></xref> delegate prototype allowing you to use reflection to filter or return a subset of matching entries.</p>Typefilter#1"
  syntax:
    content: public delegate bool TypeFilter(Type m, Object filterCriteria);
    content.vb: Public Delegate Function TypeFilter(m As Type, filterCriteria As Object) As Boolean
    parameters:
    - id: m
      type: Type
      description: "\n<p>The <strong>Type</strong> object to which the filter is applied. </p>\n"
    - id: filterCriteria
      type: Object
      description: "\n<p>An arbitrary object used to filter the list. </p>\n"
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> to include the <xref href=\"System.Type\" data-throw-if-not-resolved=\"false\"></xref> in the filtered list; otherwise <strong>false</strong>.</p>\n"
  seealso:
  - type: System.Type.FindInterfaces(System.Reflection.TypeFilter,System.Object)
    commentId: M:System.Type.FindInterfaces(System.Reflection.TypeFilter,System.Object)
  - type: System.Object
    commentId: T:System.Object
  - type: System.Delegate
    commentId: T:System.Delegate
  - type: System.MulticastDelegate
    commentId: T:System.MulticastDelegate
  modifiers.csharp:
  - public
  - delegate
  modifiers.vb:
  - Public
  - Delegate
references:
- uid: System.Reflection
  isExternal: false
  name: System.Reflection
  fullName: System.Reflection
- uid: Type
  isExternal: true
  name: Type
  fullName: Type
- uid: Object
  isExternal: true
  name: Object
  fullName: Object
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  fullName: System.Boolean
- uid: System
  isExternal: false
  name: System
  fullName: System
