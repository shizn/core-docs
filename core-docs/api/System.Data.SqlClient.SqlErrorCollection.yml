items:
- uid: System.Data.SqlClient.SqlErrorCollection
  commentId: T:System.Data.SqlClient.SqlErrorCollection
  id: SqlErrorCollection
  parent: System.Data.SqlClient
  children:
  - System.Data.SqlClient.SqlErrorCollection.CopyTo(System.Array,System.Int32)
  - System.Data.SqlClient.SqlErrorCollection.CopyTo(System.Data.SqlClient.SqlError[],System.Int32)
  - System.Data.SqlClient.SqlErrorCollection.Count
  - System.Data.SqlClient.SqlErrorCollection.GetEnumerator
  - System.Data.SqlClient.SqlErrorCollection.Item(System.Int32)
  - System.Data.SqlClient.SqlErrorCollection.System#Collections#ICollection#IsSynchronized
  - System.Data.SqlClient.SqlErrorCollection.System#Collections#ICollection#SyncRoot
  langs:
  - csharp
  - vb
  name: SqlErrorCollection
  fullName: System.Data.SqlClient.SqlErrorCollection
  type: Class
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlErrorCollection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: SqlErrorCollection
    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlErrorCollection.cs
    startLine: 9
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlClient
  summary: "\n<p>Collects all errors generated by the .NET Framework Data Provider for SQL Server. This class cannot be inherited. </p>\n"
  remarks: "\n<p>This class is created by <xref href=\"System.Data.SqlClient.SqlException\" data-throw-if-not-resolved=\"false\"></xref> to collect instances of the <xref href=\"System.Data.SqlClient.SqlError\" data-throw-if-not-resolved=\"false\"></xref> class. <xref href=\"System.Data.SqlClient.SqlErrorCollection\" data-throw-if-not-resolved=\"false\"></xref> always contains at least one instance of the <xref href=\"System.Data.SqlClient.SqlError\" data-throw-if-not-resolved=\"false\"></xref> class.</p>\n"
  example:
  - "\n<p>The following example displays each <xref href=\"System.Data.SqlClient.SqlError\" data-throw-if-not-resolved=\"false\"></xref> within the <xref href=\"System.Data.SqlClient.SqlErrorCollection\" data-throw-if-not-resolved=\"false\"></xref> collection.</p>Classic WebData SqlError Example#1"
  syntax:
    content: 'public sealed class SqlErrorCollection : ICollection, IEnumerable'
    content.vb: >-
      Public NotInheritable Class SqlErrorCollection
          Implements ICollection, IEnumerable
  seealso:
  - type: System.Data.SqlClient.SqlError
    commentId: T:System.Data.SqlClient.SqlError
  - type: System.Data.SqlClient.SqlException
    commentId: T:System.Data.SqlClient.SqlException
  inheritance:
  - System.Object
  implements:
  - System.Collections.ICollection
  - System.Collections.IEnumerable
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: System.Data.SqlClient.SqlErrorCollection.Count
  commentId: P:System.Data.SqlClient.SqlErrorCollection.Count
  id: Count
  parent: System.Data.SqlClient.SqlErrorCollection
  langs:
  - csharp
  - vb
  name: Count
  fullName: System.Data.SqlClient.SqlErrorCollection.Count
  type: Property
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlErrorCollection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Count
    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlErrorCollection.cs
    startLine: 24
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlClient
  summary: "\n<p>Gets the number of errors in the collection.</p>\n"
  example:
  - "\n<p>The following example displays each <xref href=\"System.Data.SqlClient.SqlError\" data-throw-if-not-resolved=\"false\"></xref> within the <xref href=\"System.Data.SqlClient.SqlErrorCollection\" data-throw-if-not-resolved=\"false\"></xref> collection.</p>Classic WebData SqlError Example#1"
  syntax:
    content: public int Count { get; }
    content.vb: Public ReadOnly Property Count As Integer
    parameters: []
    return:
      type: System.Int32
  implements:
  - System.Collections.ICollection.Count
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Data.SqlClient.SqlErrorCollection.Item(System.Int32)
  commentId: P:System.Data.SqlClient.SqlErrorCollection.Item(System.Int32)
  id: Item(System.Int32)
  parent: System.Data.SqlClient.SqlErrorCollection
  langs:
  - csharp
  - vb
  name: Item[Int32]
  fullName: System.Data.SqlClient.SqlErrorCollection.Item[System.Int32]
  type: Property
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlErrorCollection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: this[]
    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlErrorCollection.cs
    startLine: 30
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlClient
  summary: "\n<p>Gets the error at the specified index.</p>\n"
  example:
  - "\n<p>The following example displays each <xref href=\"System.Data.SqlClient.SqlError\" data-throw-if-not-resolved=\"false\"></xref> within the <xref href=\"System.Data.SqlClient.SqlErrorCollection\" data-throw-if-not-resolved=\"false\"></xref> collection.</p>Classic WebData SqlError Example#1"
  syntax:
    content: public SqlError this[int index] { get; }
    content.vb: Public ReadOnly Property Item(index As Integer) As SqlError
    parameters:
    - id: index
      type: System.Int32
    return:
      type: System.Data.SqlClient.SqlError
  exceptions:
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: "\n<p>Index parameter is outside array bounds. </p>\n"
  seealso:
  - type: System.Data.SqlClient.SqlErrorCollection.Count
    commentId: P:System.Data.SqlClient.SqlErrorCollection.Count
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: System.Data.SqlClient.SqlErrorCollection.Item(System.Int32)
  name.vb: Item(Int32)
- uid: System.Data.SqlClient.SqlErrorCollection.System#Collections#ICollection#IsSynchronized
  commentId: P:System.Data.SqlClient.SqlErrorCollection.System#Collections#ICollection#IsSynchronized
  id: System#Collections#ICollection#IsSynchronized
  isEii: true
  parent: System.Data.SqlClient.SqlErrorCollection
  langs:
  - csharp
  - vb
  name: ICollection.IsSynchronized
  fullName: System.Data.SqlClient.SqlErrorCollection.System.Collections.ICollection.IsSynchronized
  type: Property
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlErrorCollection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: System.Collections.ICollection.IsSynchronized
    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlErrorCollection.cs
    startLine: 28
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlClient
  summary: "\n<p>For a description of this member, see <xref href=\"System.Collections.ICollection.IsSynchronized\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  remarks: "\n<p>This member is an explicit interface member implementation. It can be used only when the <xref href=\"System.Data.SqlClient.SqlErrorCollection\" data-throw-if-not-resolved=\"false\"></xref> instance is cast to an <xref href=\"System.Collections.ICollection\" data-throw-if-not-resolved=\"false\"></xref> interface.</p>\n"
  example:
  - 
  syntax:
    content: bool ICollection.IsSynchronized { get; }
    content.vb: ReadOnly WriteOnly Property System.Collections.ICollection.IsSynchronized As Boolean Implements ICollection.IsSynchronized
    parameters: []
    return:
      type: System.Boolean
  implements:
  - System.Collections.ICollection.IsSynchronized
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
  name.vb: System.Collections.ICollection.IsSynchronized
- uid: System.Data.SqlClient.SqlErrorCollection.System#Collections#ICollection#SyncRoot
  commentId: P:System.Data.SqlClient.SqlErrorCollection.System#Collections#ICollection#SyncRoot
  id: System#Collections#ICollection#SyncRoot
  isEii: true
  parent: System.Data.SqlClient.SqlErrorCollection
  langs:
  - csharp
  - vb
  name: ICollection.SyncRoot
  fullName: System.Data.SqlClient.SqlErrorCollection.System.Collections.ICollection.SyncRoot
  type: Property
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlErrorCollection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: System.Collections.ICollection.SyncRoot
    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlErrorCollection.cs
    startLine: 26
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlClient
  summary: "\n<p>For a description of this member, see <xref href=\"System.Collections.ICollection.SyncRoot\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  remarks: "\n<p>This member is an explicit interface member implementation. It can be used only when the <xref href=\"System.Data.SqlClient.SqlErrorCollection\" data-throw-if-not-resolved=\"false\"></xref> instance is cast to an <xref href=\"System.Collections.ICollection\" data-throw-if-not-resolved=\"false\"></xref> interface.</p>\n"
  example:
  - 
  syntax:
    content: object ICollection.SyncRoot { get; }
    content.vb: ReadOnly WriteOnly Property System.Collections.ICollection.SyncRoot As Object Implements ICollection.SyncRoot
    parameters: []
    return:
      type: System.Object
  implements:
  - System.Collections.ICollection.SyncRoot
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
  name.vb: System.Collections.ICollection.SyncRoot
- uid: System.Data.SqlClient.SqlErrorCollection.CopyTo(System.Array,System.Int32)
  commentId: M:System.Data.SqlClient.SqlErrorCollection.CopyTo(System.Array,System.Int32)
  id: CopyTo(System.Array,System.Int32)
  parent: System.Data.SqlClient.SqlErrorCollection
  langs:
  - csharp
  - vb
  name: CopyTo(Array, Int32)
  fullName: System.Data.SqlClient.SqlErrorCollection.CopyTo(System.Array, System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlErrorCollection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CopyTo
    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlErrorCollection.cs
    startLine: 20
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlClient
  summary: "\n<p>Copies the elements of the <xref href=\"System.Data.SqlClient.SqlErrorCollection\" data-throw-if-not-resolved=\"false\"></xref> collection into an <xref href=\"System.Array\" data-throw-if-not-resolved=\"false\"></xref>, starting at the specified index.</p>\n"
  syntax:
    content: public void CopyTo(Array array, int index)
    content.vb: Public Sub CopyTo(array As Array, index As Integer)
    parameters:
    - id: array
      type: System.Array
    - id: index
      type: System.Int32
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<p>The sum of <em>index</em> and the number of elements in the <xref href=\"System.Data.SqlClient.SqlErrorCollection\" data-throw-if-not-resolved=\"false\"></xref> collection is greater than the <xref href=\"System.Array.Length\" data-throw-if-not-resolved=\"false\"></xref> of the <xref href=\"System.Array\" data-throw-if-not-resolved=\"false\"></xref>. </p>\n"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>The <em>array</em> is <strong>null</strong>. </p>\n"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>The <em>index</em> is not valid for <em>array</em>. </p>\n"
  implements:
  - System.Collections.ICollection.CopyTo(System.Array,System.Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Data.SqlClient.SqlErrorCollection.CopyTo(System.Data.SqlClient.SqlError[],System.Int32)
  commentId: M:System.Data.SqlClient.SqlErrorCollection.CopyTo(System.Data.SqlClient.SqlError[],System.Int32)
  id: CopyTo(System.Data.SqlClient.SqlError[],System.Int32)
  parent: System.Data.SqlClient.SqlErrorCollection
  langs:
  - csharp
  - vb
  name: CopyTo(SqlError[], Int32)
  fullName: System.Data.SqlClient.SqlErrorCollection.CopyTo(System.Data.SqlClient.SqlError[], System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlErrorCollection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CopyTo
    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlErrorCollection.cs
    startLine: 22
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlClient
  summary: "\n<p>Copies the elements of the <xref href=\"System.Data.SqlClient.SqlErrorCollection\" data-throw-if-not-resolved=\"false\"></xref> collection into a <xref href=\"System.Data.SqlClient.SqlErrorCollection\" data-throw-if-not-resolved=\"false\"></xref>, starting at the specified index.</p>\n"
  syntax:
    content: public void CopyTo(SqlError[] array, int index)
    content.vb: Public Sub CopyTo(array As SqlError(), index As Integer)
    parameters:
    - id: array
      type: System.Data.SqlClient.SqlError[]
    - id: index
      type: System.Int32
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<p>The sum of <em>index</em> and the number of elements in the <xref href=\"System.Data.SqlClient.SqlErrorCollection\" data-throw-if-not-resolved=\"false\"></xref> collection is greater than the length of the <xref href=\"System.Data.SqlClient.SqlErrorCollection\" data-throw-if-not-resolved=\"false\"></xref>. </p>\n"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>The <em>array</em> is <strong>null</strong>. </p>\n"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>The <em>index</em> is not valid for <em>array</em>. </p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Data.SqlClient.SqlErrorCollection.CopyTo(System.Data.SqlClient.SqlError(), System.Int32)
  name.vb: CopyTo(SqlError(), Int32)
- uid: System.Data.SqlClient.SqlErrorCollection.GetEnumerator
  commentId: M:System.Data.SqlClient.SqlErrorCollection.GetEnumerator
  id: GetEnumerator
  parent: System.Data.SqlClient.SqlErrorCollection
  langs:
  - csharp
  - vb
  name: GetEnumerator()
  fullName: System.Data.SqlClient.SqlErrorCollection.GetEnumerator()
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlErrorCollection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetEnumerator
    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlErrorCollection.cs
    startLine: 32
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlClient
  summary: "\n<p>Returns an enumerator that iterates through the <xref href=\"System.Data.SqlClient.SqlErrorCollection\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  remarks: "\n<p>Enumerators can be used to read the data in a collection, but they cannot be used to modify the underlying collection.</p>\n"
  syntax:
    content: public IEnumerator GetEnumerator()
    content.vb: Public Function GetEnumerator As IEnumerator
    return:
      type: System.Collections.IEnumerator
  implements:
  - System.Collections.IEnumerable.GetEnumerator
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: System.Data.SqlClient
  isExternal: false
  name: System.Data.SqlClient
  fullName: System.Data.SqlClient
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System.Collections.ICollection
  parent: System.Collections
  isExternal: false
  name: ICollection
  fullName: System.Collections.ICollection
- uid: System.Collections.IEnumerable
  parent: System.Collections
  isExternal: false
  name: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Collections
  isExternal: false
  name: System.Collections
  fullName: System.Collections
- uid: System.Collections.ICollection.Count
  parent: System.Collections.ICollection
  isExternal: false
  name: Count
  fullName: System.Collections.ICollection.Count
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  fullName: System.Int32
- uid: System.Data.SqlClient.SqlError
  parent: System.Data.SqlClient
  isExternal: false
  name: SqlError
  fullName: System.Data.SqlClient.SqlError
- uid: System.Collections.ICollection.IsSynchronized
  parent: System.Collections.ICollection
  isExternal: false
  name: IsSynchronized
  fullName: System.Collections.ICollection.IsSynchronized
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  fullName: System.Boolean
- uid: System.Collections.ICollection.SyncRoot
  parent: System.Collections.ICollection
  isExternal: false
  name: SyncRoot
  fullName: System.Collections.ICollection.SyncRoot
- uid: System.Collections.ICollection.CopyTo(System.Array,System.Int32)
  parent: System.Collections.ICollection
  isExternal: true
  name: CopyTo(Array, Int32)
  fullName: System.Collections.ICollection.CopyTo(System.Array, System.Int32)
  spec.csharp:
  - uid: System.Collections.ICollection.CopyTo(System.Array,System.Int32)
    name: CopyTo
    fullName: System.Collections.ICollection.CopyTo
  - name: (
    fullName: (
  - uid: System.Array
    name: Array
    fullName: System.Array
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ICollection.CopyTo(System.Array,System.Int32)
    name: CopyTo
    fullName: System.Collections.ICollection.CopyTo
  - name: (
    fullName: (
  - uid: System.Array
    name: Array
    fullName: System.Array
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
- uid: System.Array
  parent: System
  isExternal: false
  name: Array
  fullName: System.Array
- uid: System.Data.SqlClient.SqlError[]
  isExternal: false
  name: SqlError[]
  fullName: System.Data.SqlClient.SqlError[]
  fullname.vb: System.Data.SqlClient.SqlError()
  name.vb: SqlError()
  spec.csharp:
  - uid: System.Data.SqlClient.SqlError
    name: SqlError
    fullName: System.Data.SqlClient.SqlError
  - name: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Data.SqlClient.SqlError
    name: SqlError
    fullName: System.Data.SqlClient.SqlError
  - name: ()
    fullName: ()
- uid: System.Collections.IEnumerable.GetEnumerator
  parent: System.Collections.IEnumerable
  isExternal: false
  name: GetEnumerator()
  fullName: System.Collections.IEnumerable.GetEnumerator()
  spec.csharp:
  - uid: System.Collections.IEnumerable.GetEnumerator
    name: GetEnumerator
    fullName: System.Collections.IEnumerable.GetEnumerator
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Collections.IEnumerable.GetEnumerator
    name: GetEnumerator
    fullName: System.Collections.IEnumerable.GetEnumerator
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: false
  name: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.IndexOutOfRangeException
  isExternal: false
  name: IndexOutOfRangeException
  fullName: System.IndexOutOfRangeException
- uid: System.ArgumentException
  parent: System
  isExternal: false
  name: ArgumentException
  fullName: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: false
  name: ArgumentNullException
  fullName: System.ArgumentNullException
- uid: System.ArgumentOutOfRangeException
  isExternal: false
  name: ArgumentOutOfRangeException
  fullName: System.ArgumentOutOfRangeException
