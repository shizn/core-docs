items:
- uid: System.ComponentModel.DataAnnotations.ValidationException
  commentId: T:System.ComponentModel.DataAnnotations.ValidationException
  id: ValidationException
  parent: System.ComponentModel.DataAnnotations
  children:
  - System.ComponentModel.DataAnnotations.ValidationException.#ctor
  - System.ComponentModel.DataAnnotations.ValidationException.#ctor(System.ComponentModel.DataAnnotations.ValidationResult,System.ComponentModel.DataAnnotations.ValidationAttribute,System.Object)
  - System.ComponentModel.DataAnnotations.ValidationException.#ctor(System.String)
  - System.ComponentModel.DataAnnotations.ValidationException.#ctor(System.String,System.ComponentModel.DataAnnotations.ValidationAttribute,System.Object)
  - System.ComponentModel.DataAnnotations.ValidationException.#ctor(System.String,System.Exception)
  - System.ComponentModel.DataAnnotations.ValidationException.ValidationAttribute
  - System.ComponentModel.DataAnnotations.ValidationException.ValidationResult
  - System.ComponentModel.DataAnnotations.ValidationException.Value
  langs:
  - csharp
  - vb
  name: ValidationException
  fullName: System.ComponentModel.DataAnnotations.ValidationException
  type: Class
  source:
    remote:
      path: src/System.ComponentModel.Annotations/src/System/ComponentModel/DataAnnotations/ValidationException.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ValidationException
    path: src/System.ComponentModel.Annotations/src/System/ComponentModel/DataAnnotations/ValidationException.cs
    startLine: 9
  assemblies:
  - System.ComponentModel.Annotations
  namespace: System.ComponentModel.DataAnnotations
  summary: "\n<p>Represents the exception that occurs during validation of a data field when the <xref href=\"System.ComponentModel.DataAnnotations.ValidationAttribute\" data-throw-if-not-resolved=\"false\"></xref> class is used. </p>\n"
  remarks: "\n<p>A validation exception occurs if an input value does not match the expected data type, range or pattern of the data field. For example, if a user enters an integer value in a data field that expects a <xref href=\"System.Data.SqlDbType.DateTime\" data-throw-if-not-resolved=\"false\"></xref> value, a validation exception occurs. </p>\n<p>This class uses the <xref href=\"System.ComponentModel.DataAnnotations.ValidationAttribute\" data-throw-if-not-resolved=\"false\"></xref> class to customize validations. A <xref href=\"System.ComponentModel.DataAnnotations.ValidationException\" data-throw-if-not-resolved=\"false\"></xref> is thrown if a validation error occurs. The exception is thrown when the <xref href=\"System.ComponentModel.DataAnnotations.ValidationAttribute.Validate(System.Object,System.String)\" data-throw-if-not-resolved=\"false\"></xref> method is called. All the exceptions that are thrown during validation are contained in the <xref href=\"System.Web.DynamicData.IDynamicValidatorException.InnerExceptions\" data-throw-if-not-resolved=\"false\"></xref> collection. You can retrieve each validation exception by iterating through the <xref href=\"System.Web.DynamicData.IDynamicValidatorException.InnerExceptions\" data-throw-if-not-resolved=\"false\"></xref> collection.</p>\n"
  example:
  - 
  syntax:
    content: 'public class ValidationException : Exception, ISerializable, _Exception'
    content.vb: >-
      Public Class ValidationException
          Inherits Exception
          Implements ISerializable, _Exception
  inheritance:
  - System.Object
  - System.Exception
  implements:
  - System.Runtime.Serialization.ISerializable
  - System.Runtime.InteropServices._Exception
  inheritedMembers:
  - System.Exception.GetBaseException
  - System.Exception.ToString
  - System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Exception.GetType
  - System.Exception.Message
  - System.Exception.Data
  - System.Exception.InnerException
  - System.Exception.TargetSite
  - System.Exception.StackTrace
  - System.Exception.HelpLink
  - System.Exception.Source
  - System.Exception.HResult
  - System.Exception.SerializeObjectState
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: System.ComponentModel.DataAnnotations.ValidationException.#ctor
  commentId: M:System.ComponentModel.DataAnnotations.ValidationException.#ctor
  id: '#ctor'
  parent: System.ComponentModel.DataAnnotations.ValidationException
  langs:
  - csharp
  - vb
  name: ValidationException()
  fullName: System.ComponentModel.DataAnnotations.ValidationException.ValidationException()
  type: Constructor
  source:
    remote:
      path: src/System.ComponentModel.Annotations/src/System/ComponentModel/DataAnnotations/ValidationException.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.ComponentModel.Annotations/src/System/ComponentModel/DataAnnotations/ValidationException.cs
    startLine: 43
  assemblies:
  - System.ComponentModel.Annotations
  namespace: System.ComponentModel.DataAnnotations
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.ComponentModel.DataAnnotations.ValidationException\" data-throw-if-not-resolved=\"false\"></xref> class using an error message generated by the system.</p>\n"
  remarks: "\n<p>This method is the default constructor for the <xref href=\"System.ComponentModel.DataAnnotations.ValidationException\" data-throw-if-not-resolved=\"false\"></xref> class.</p>\n"
  example:
  - 
  syntax:
    content: public ValidationException()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.ComponentModel.DataAnnotations.ValidationException.#ctor(System.ComponentModel.DataAnnotations.ValidationResult,System.ComponentModel.DataAnnotations.ValidationAttribute,System.Object)
  commentId: M:System.ComponentModel.DataAnnotations.ValidationException.#ctor(System.ComponentModel.DataAnnotations.ValidationResult,System.ComponentModel.DataAnnotations.ValidationAttribute,System.Object)
  id: '#ctor(System.ComponentModel.DataAnnotations.ValidationResult,System.ComponentModel.DataAnnotations.ValidationAttribute,System.Object)'
  parent: System.ComponentModel.DataAnnotations.ValidationException
  langs:
  - csharp
  - vb
  name: ValidationException(ValidationResult, ValidationAttribute, Object)
  fullName: System.ComponentModel.DataAnnotations.ValidationException.ValidationException(System.ComponentModel.DataAnnotations.ValidationResult, System.ComponentModel.DataAnnotations.ValidationAttribute, System.Object)
  type: Constructor
  source:
    remote:
      path: src/System.ComponentModel.Annotations/src/System/ComponentModel/DataAnnotations/ValidationException.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.ComponentModel.Annotations/src/System/ComponentModel/DataAnnotations/ValidationException.cs
    startLine: 19
  assemblies:
  - System.ComponentModel.Annotations
  namespace: System.ComponentModel.DataAnnotations
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.ComponentModel.DataAnnotations.ValidationException\" data-throw-if-not-resolved=\"false\"></xref> class by using a validation result, a validation attribute, and the value of the current exception.</p>\n"
  example:
  - 
  syntax:
    content: public ValidationException(ValidationResult validationResult, ValidationAttribute validatingAttribute, object value)
    content.vb: Public Sub New(validationResult As ValidationResult, validatingAttribute As ValidationAttribute, value As Object)
    parameters:
    - id: validationResult
      type: System.ComponentModel.DataAnnotations.ValidationResult
      description: The value describing the validation error
    - id: validatingAttribute
      type: System.ComponentModel.DataAnnotations.ValidationAttribute
      description: The attribute that triggered this exception
    - id: value
      type: System.Object
      description: The value that caused the validating attribute to trigger the exception
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.ComponentModel.DataAnnotations.ValidationException.#ctor(System.String)
  commentId: M:System.ComponentModel.DataAnnotations.ValidationException.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.ComponentModel.DataAnnotations.ValidationException
  langs:
  - csharp
  - vb
  name: ValidationException(String)
  fullName: System.ComponentModel.DataAnnotations.ValidationException.ValidationException(System.String)
  type: Constructor
  source:
    remote:
      path: src/System.ComponentModel.Annotations/src/System/ComponentModel/DataAnnotations/ValidationException.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.ComponentModel.Annotations/src/System/ComponentModel/DataAnnotations/ValidationException.cs
    startLine: 53
  assemblies:
  - System.ComponentModel.Annotations
  namespace: System.ComponentModel.DataAnnotations
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.ComponentModel.DataAnnotations.ValidationException\" data-throw-if-not-resolved=\"false\"></xref> class using a specified error message.</p>\n"
  remarks: "\n<p>For more information about how to use this constructor, see How to: Customize Data Field Validation in the Data Model.</p>\n"
  example:
  - 
  syntax:
    content: public ValidationException(string message)
    content.vb: Public Sub New(message As String)
    parameters:
    - id: message
      type: System.String
      description: The localized message
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.ComponentModel.DataAnnotations.ValidationException.#ctor(System.String,System.ComponentModel.DataAnnotations.ValidationAttribute,System.Object)
  commentId: M:System.ComponentModel.DataAnnotations.ValidationException.#ctor(System.String,System.ComponentModel.DataAnnotations.ValidationAttribute,System.Object)
  id: '#ctor(System.String,System.ComponentModel.DataAnnotations.ValidationAttribute,System.Object)'
  parent: System.ComponentModel.DataAnnotations.ValidationException
  langs:
  - csharp
  - vb
  name: ValidationException(String, ValidationAttribute, Object)
  fullName: System.ComponentModel.DataAnnotations.ValidationException.ValidationException(System.String, System.ComponentModel.DataAnnotations.ValidationAttribute, System.Object)
  type: Constructor
  source:
    remote:
      path: src/System.ComponentModel.Annotations/src/System/ComponentModel/DataAnnotations/ValidationException.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.ComponentModel.Annotations/src/System/ComponentModel/DataAnnotations/ValidationException.cs
    startLine: 32
  assemblies:
  - System.ComponentModel.Annotations
  namespace: System.ComponentModel.DataAnnotations
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.ComponentModel.DataAnnotations.ValidationException\" data-throw-if-not-resolved=\"false\"></xref> class using a specified error message, a validation attribute, and the value of the current exception.</p>\n"
  remarks: "\n<p>For more information, see How to: Customize Data Field Validation in the Data Model.</p>\n"
  example:
  - 
  syntax:
    content: public ValidationException(string errorMessage, ValidationAttribute validatingAttribute, object value)
    content.vb: Public Sub New(errorMessage As String, validatingAttribute As ValidationAttribute, value As Object)
    parameters:
    - id: errorMessage
      type: System.String
      description: The localized error message
    - id: validatingAttribute
      type: System.ComponentModel.DataAnnotations.ValidationAttribute
      description: The attribute that triggered this exception
    - id: value
      type: System.Object
      description: The value that caused the validating attribute to trigger the exception
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.ComponentModel.DataAnnotations.ValidationException.#ctor(System.String,System.Exception)
  commentId: M:System.ComponentModel.DataAnnotations.ValidationException.#ctor(System.String,System.Exception)
  id: '#ctor(System.String,System.Exception)'
  parent: System.ComponentModel.DataAnnotations.ValidationException
  langs:
  - csharp
  - vb
  name: ValidationException(String, Exception)
  fullName: System.ComponentModel.DataAnnotations.ValidationException.ValidationException(System.String, System.Exception)
  type: Constructor
  source:
    remote:
      path: src/System.ComponentModel.Annotations/src/System/ComponentModel/DataAnnotations/ValidationException.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.ComponentModel.Annotations/src/System/ComponentModel/DataAnnotations/ValidationException.cs
    startLine: 64
  assemblies:
  - System.ComponentModel.Annotations
  namespace: System.ComponentModel.DataAnnotations
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.ComponentModel.DataAnnotations.ValidationException\" data-throw-if-not-resolved=\"false\"></xref> class using a specified error message and a collection of inner exception instances.</p>\n"
  remarks: "\n<p>You typically will not use this constructor because validation exceptions are stored in the <xref href=\"System.Web.DynamicData.IDynamicValidatorException.InnerExceptions\" data-throw-if-not-resolved=\"false\"></xref> property, not <em>innerException</em>.</p>\n"
  example:
  - 
  syntax:
    content: public ValidationException(string message, Exception innerException)
    content.vb: Public Sub New(message As String, innerException As Exception)
    parameters:
    - id: message
      type: System.String
      description: The localized error message
    - id: innerException
      type: System.Exception
      description: inner exception
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.ComponentModel.DataAnnotations.ValidationException.ValidationAttribute
  commentId: P:System.ComponentModel.DataAnnotations.ValidationException.ValidationAttribute
  id: ValidationAttribute
  parent: System.ComponentModel.DataAnnotations.ValidationException
  langs:
  - csharp
  - vb
  name: ValidationAttribute
  fullName: System.ComponentModel.DataAnnotations.ValidationException.ValidationAttribute
  type: Property
  source:
    remote:
      path: src/System.ComponentModel.Annotations/src/System/ComponentModel/DataAnnotations/ValidationException.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ValidationAttribute
    path: src/System.ComponentModel.Annotations/src/System/ComponentModel/DataAnnotations/ValidationException.cs
    startLine: 72
  assemblies:
  - System.ComponentModel.Annotations
  namespace: System.ComponentModel.DataAnnotations
  summary: "\n<p>Gets the instance of the <xref href=\"System.ComponentModel.DataAnnotations.ValidationAttribute\" data-throw-if-not-resolved=\"false\"></xref> class that triggered this exception.</p>\n"
  remarks: "\n<p>This type is used to enforce validation based on the metadata associated with the data table. If an error occurs, the <xref href=\"System.ComponentModel.DataAnnotations.ValidationAttribute\" data-throw-if-not-resolved=\"false\"></xref> class triggers a <xref href=\"System.ComponentModel.DataAnnotations.ValidationException\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>This class can be overridden to create custom validation attributes. </p>\n<p>\n<xref href=\"System.Web.UI.WebControls.LinqDataSourceValidationException\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n"
  example:
  - 
  syntax:
    content: public ValidationAttribute ValidationAttribute { get; }
    content.vb: Public ReadOnly Property ValidationAttribute As ValidationAttribute
    parameters: []
    return:
      type: System.ComponentModel.DataAnnotations.ValidationAttribute
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.ComponentModel.DataAnnotations.ValidationException.ValidationResult
  commentId: P:System.ComponentModel.DataAnnotations.ValidationException.ValidationResult
  id: ValidationResult
  parent: System.ComponentModel.DataAnnotations.ValidationException
  langs:
  - csharp
  - vb
  name: ValidationResult
  fullName: System.ComponentModel.DataAnnotations.ValidationException.ValidationResult
  type: Property
  source:
    remote:
      path: src/System.ComponentModel.Annotations/src/System/ComponentModel/DataAnnotations/ValidationException.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ValidationResult
    path: src/System.ComponentModel.Annotations/src/System/ComponentModel/DataAnnotations/ValidationException.cs
    startLine: 80
  assemblies:
  - System.ComponentModel.Annotations
  namespace: System.ComponentModel.DataAnnotations
  summary: "\n<p>Gets the <xref href=\"System.ComponentModel.DataAnnotations.ValidationException.ValidationResult\" data-throw-if-not-resolved=\"false\"></xref> instance that describes the validation error.</p>\n"
  example:
  - 
  syntax:
    content: public ValidationResult ValidationResult { get; }
    content.vb: Public ReadOnly Property ValidationResult As ValidationResult
    parameters: []
    return:
      type: System.ComponentModel.DataAnnotations.ValidationResult
      description: "\n    This property will never be null.\n"
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.ComponentModel.DataAnnotations.ValidationException.Value
  commentId: P:System.ComponentModel.DataAnnotations.ValidationException.Value
  id: Value
  parent: System.ComponentModel.DataAnnotations.ValidationException
  langs:
  - csharp
  - vb
  name: Value
  fullName: System.ComponentModel.DataAnnotations.ValidationException.Value
  type: Property
  source:
    remote:
      path: src/System.ComponentModel.Annotations/src/System/ComponentModel/DataAnnotations/ValidationException.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Value
    path: src/System.ComponentModel.Annotations/src/System/ComponentModel/DataAnnotations/ValidationException.cs
    startLine: 95
  assemblies:
  - System.ComponentModel.Annotations
  namespace: System.ComponentModel.DataAnnotations
  summary: "\n<p>Gets the value of the object that causes the <xref href=\"System.ComponentModel.DataAnnotations.ValidationAttribute\" data-throw-if-not-resolved=\"false\"></xref> class to trigger this exception.</p>\n"
  example:
  - 
  syntax:
    content: public object Value { get; }
    content.vb: Public ReadOnly Property Value As Object
    parameters: []
    return:
      type: System.Object
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: System.ComponentModel.DataAnnotations
  isExternal: false
  name: System.ComponentModel.DataAnnotations
  fullName: System.ComponentModel.DataAnnotations
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System.Exception
  parent: System
  isExternal: false
  name: Exception
  fullName: System.Exception
- uid: System.Runtime.Serialization.ISerializable
  parent: System.Runtime.Serialization
  isExternal: false
  name: ISerializable
  fullName: System.Runtime.Serialization.ISerializable
- uid: System.Runtime.InteropServices._Exception
  parent: System.Runtime.InteropServices
  isExternal: true
  name: _Exception
  fullName: System.Runtime.InteropServices._Exception
- uid: System.Exception.GetBaseException
  parent: System.Exception
  isExternal: false
  name: GetBaseException()
  fullName: System.Exception.GetBaseException()
  spec.csharp:
  - uid: System.Exception.GetBaseException
    name: GetBaseException
    fullName: System.Exception.GetBaseException
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Exception.GetBaseException
    name: GetBaseException
    fullName: System.Exception.GetBaseException
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Exception.ToString
  parent: System.Exception
  isExternal: false
  name: ToString()
  fullName: System.Exception.ToString()
  spec.csharp:
  - uid: System.Exception.ToString
    name: ToString
    fullName: System.Exception.ToString
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Exception.ToString
    name: ToString
    fullName: System.Exception.ToString
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Exception
  isExternal: true
  name: GetObjectData(SerializationInfo, StreamingContext)
  fullName: System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)
  spec.csharp:
  - uid: System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
    name: GetObjectData
    fullName: System.Exception.GetObjectData
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Runtime.Serialization.SerializationInfo
    name: SerializationInfo
    fullName: System.Runtime.Serialization.SerializationInfo
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Runtime.Serialization.StreamingContext
    name: StreamingContext
    fullName: System.Runtime.Serialization.StreamingContext
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
    name: GetObjectData
    fullName: System.Exception.GetObjectData
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Runtime.Serialization.SerializationInfo
    name: SerializationInfo
    fullName: System.Runtime.Serialization.SerializationInfo
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Runtime.Serialization.StreamingContext
    name: StreamingContext
    fullName: System.Runtime.Serialization.StreamingContext
    isExternal: true
  - name: )
    fullName: )
- uid: System.Exception.GetType
  parent: System.Exception
  isExternal: true
  name: GetType()
  fullName: System.Exception.GetType()
  spec.csharp:
  - uid: System.Exception.GetType
    name: GetType
    fullName: System.Exception.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Exception.GetType
    name: GetType
    fullName: System.Exception.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Exception.Message
  parent: System.Exception
  isExternal: false
  name: Message
  fullName: System.Exception.Message
- uid: System.Exception.Data
  parent: System.Exception
  isExternal: false
  name: Data
  fullName: System.Exception.Data
- uid: System.Exception.InnerException
  parent: System.Exception
  isExternal: false
  name: InnerException
  fullName: System.Exception.InnerException
- uid: System.Exception.TargetSite
  parent: System.Exception
  isExternal: true
  name: TargetSite
  fullName: System.Exception.TargetSite
- uid: System.Exception.StackTrace
  parent: System.Exception
  isExternal: false
  name: StackTrace
  fullName: System.Exception.StackTrace
- uid: System.Exception.HelpLink
  parent: System.Exception
  isExternal: false
  name: HelpLink
  fullName: System.Exception.HelpLink
- uid: System.Exception.Source
  parent: System.Exception
  isExternal: false
  name: Source
  fullName: System.Exception.Source
- uid: System.Exception.HResult
  parent: System.Exception
  isExternal: false
  name: HResult
  fullName: System.Exception.HResult
- uid: System.Exception.SerializeObjectState
  parent: System.Exception
  isExternal: true
  name: SerializeObjectState
  fullName: System.Exception.SerializeObjectState
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Runtime.Serialization
  isExternal: false
  name: System.Runtime.Serialization
  fullName: System.Runtime.Serialization
- uid: System.Runtime.InteropServices
  isExternal: false
  name: System.Runtime.InteropServices
  fullName: System.Runtime.InteropServices
- uid: System.ComponentModel.DataAnnotations.ValidationResult
  parent: System.ComponentModel.DataAnnotations
  isExternal: false
  name: ValidationResult
  fullName: System.ComponentModel.DataAnnotations.ValidationResult
- uid: System.ComponentModel.DataAnnotations.ValidationAttribute
  parent: System.ComponentModel.DataAnnotations
  isExternal: false
  name: ValidationAttribute
  fullName: System.ComponentModel.DataAnnotations.ValidationAttribute
- uid: System.String
  parent: System
  isExternal: false
  name: String
  fullName: System.String
