items:
- uid: System.Xml.XmlNode
  commentId: T:System.Xml.XmlNode
  id: XmlNode
  parent: System.Xml
  children:
  - System.Xml.XmlNode.AppendChild(System.Xml.XmlNode)
  - System.Xml.XmlNode.Attributes
  - System.Xml.XmlNode.BaseURI
  - System.Xml.XmlNode.ChildNodes
  - System.Xml.XmlNode.CloneNode(System.Boolean)
  - System.Xml.XmlNode.FirstChild
  - System.Xml.XmlNode.GetEnumerator
  - System.Xml.XmlNode.GetNamespaceOfPrefix(System.String)
  - System.Xml.XmlNode.GetPrefixOfNamespace(System.String)
  - System.Xml.XmlNode.HasChildNodes
  - System.Xml.XmlNode.InnerText
  - System.Xml.XmlNode.InnerXml
  - System.Xml.XmlNode.InsertAfter(System.Xml.XmlNode,System.Xml.XmlNode)
  - System.Xml.XmlNode.InsertBefore(System.Xml.XmlNode,System.Xml.XmlNode)
  - System.Xml.XmlNode.IsReadOnly
  - System.Xml.XmlNode.Item(System.String)
  - System.Xml.XmlNode.Item(System.String,System.String)
  - System.Xml.XmlNode.LastChild
  - System.Xml.XmlNode.LocalName
  - System.Xml.XmlNode.Name
  - System.Xml.XmlNode.NamespaceURI
  - System.Xml.XmlNode.NextSibling
  - System.Xml.XmlNode.NodeType
  - System.Xml.XmlNode.Normalize
  - System.Xml.XmlNode.OuterXml
  - System.Xml.XmlNode.OwnerDocument
  - System.Xml.XmlNode.ParentNode
  - System.Xml.XmlNode.Prefix
  - System.Xml.XmlNode.PrependChild(System.Xml.XmlNode)
  - System.Xml.XmlNode.PreviousSibling
  - System.Xml.XmlNode.PreviousText
  - System.Xml.XmlNode.RemoveAll
  - System.Xml.XmlNode.RemoveChild(System.Xml.XmlNode)
  - System.Xml.XmlNode.ReplaceChild(System.Xml.XmlNode,System.Xml.XmlNode)
  - System.Xml.XmlNode.Supports(System.String,System.String)
  - System.Xml.XmlNode.Value
  - System.Xml.XmlNode.WriteContentTo(System.Xml.XmlWriter)
  - System.Xml.XmlNode.WriteTo(System.Xml.XmlWriter)
  langs:
  - csharp
  - vb
  name: XmlNode
  fullName: System.Xml.XmlNode
  type: Class
  source:
    remote:
      path: src/System.Xml.XmlDocument/ref/System.Xml.XmlDocument.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: XmlNode
    path: src/System.Xml.XmlDocument/ref/System.Xml.XmlDocument.cs
    startLine: 241
  assemblies:
  - System.Xml.XmlDocument
  namespace: System.Xml
  syntax:
    content: 'public abstract class XmlNode : Collections.IEnumerable'
    content.vb: >-
      Public MustInherit Class XmlNode
          Inherits Collections.IEnumerable
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: System.Xml.XmlNode.Attributes
  commentId: P:System.Xml.XmlNode.Attributes
  id: Attributes
  parent: System.Xml.XmlNode
  langs:
  - csharp
  - vb
  name: Attributes
  fullName: System.Xml.XmlNode.Attributes
  type: Property
  source:
    remote:
      path: src/System.Xml.XmlDocument/ref/System.Xml.XmlDocument.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Attributes
    path: src/System.Xml.XmlDocument/ref/System.Xml.XmlDocument.cs
    startLine: 244
  assemblies:
  - System.Xml.XmlDocument
  namespace: System.Xml
  syntax:
    content: public virtual XmlAttributeCollection Attributes { get; }
    content.vb: Public Overridable ReadOnly Property Attributes As XmlAttributeCollection
    parameters: []
    return:
      type: System.Xml.XmlAttributeCollection
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: System.Xml.XmlNode.BaseURI
  commentId: P:System.Xml.XmlNode.BaseURI
  id: BaseURI
  parent: System.Xml.XmlNode
  langs:
  - csharp
  - vb
  name: BaseURI
  fullName: System.Xml.XmlNode.BaseURI
  type: Property
  source:
    remote:
      path: src/System.Xml.XmlDocument/ref/System.Xml.XmlDocument.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: BaseURI
    path: src/System.Xml.XmlDocument/ref/System.Xml.XmlDocument.cs
    startLine: 245
  assemblies:
  - System.Xml.XmlDocument
  namespace: System.Xml
  syntax:
    content: public virtual string BaseURI { get; }
    content.vb: Public Overridable ReadOnly Property BaseURI As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: System.Xml.XmlNode.ChildNodes
  commentId: P:System.Xml.XmlNode.ChildNodes
  id: ChildNodes
  parent: System.Xml.XmlNode
  langs:
  - csharp
  - vb
  name: ChildNodes
  fullName: System.Xml.XmlNode.ChildNodes
  type: Property
  source:
    remote:
      path: src/System.Xml.XmlDocument/ref/System.Xml.XmlDocument.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ChildNodes
    path: src/System.Xml.XmlDocument/ref/System.Xml.XmlDocument.cs
    startLine: 246
  assemblies:
  - System.Xml.XmlDocument
  namespace: System.Xml
  syntax:
    content: public virtual XmlNodeList ChildNodes { get; }
    content.vb: Public Overridable ReadOnly Property ChildNodes As XmlNodeList
    parameters: []
    return:
      type: System.Xml.XmlNodeList
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: System.Xml.XmlNode.FirstChild
  commentId: P:System.Xml.XmlNode.FirstChild
  id: FirstChild
  parent: System.Xml.XmlNode
  langs:
  - csharp
  - vb
  name: FirstChild
  fullName: System.Xml.XmlNode.FirstChild
  type: Property
  source:
    remote:
      path: src/System.Xml.XmlDocument/ref/System.Xml.XmlDocument.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: FirstChild
    path: src/System.Xml.XmlDocument/ref/System.Xml.XmlDocument.cs
    startLine: 247
  assemblies:
  - System.Xml.XmlDocument
  namespace: System.Xml
  syntax:
    content: public virtual XmlNode FirstChild { get; }
    content.vb: Public Overridable ReadOnly Property FirstChild As XmlNode
    parameters: []
    return:
      type: System.Xml.XmlNode
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: System.Xml.XmlNode.HasChildNodes
  commentId: P:System.Xml.XmlNode.HasChildNodes
  id: HasChildNodes
  parent: System.Xml.XmlNode
  langs:
  - csharp
  - vb
  name: HasChildNodes
  fullName: System.Xml.XmlNode.HasChildNodes
  type: Property
  source:
    remote:
      path: src/System.Xml.XmlDocument/ref/System.Xml.XmlDocument.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: HasChildNodes
    path: src/System.Xml.XmlDocument/ref/System.Xml.XmlDocument.cs
    startLine: 248
  assemblies:
  - System.Xml.XmlDocument
  namespace: System.Xml
  syntax:
    content: public virtual bool HasChildNodes { get; }
    content.vb: Public Overridable ReadOnly Property HasChildNodes As Boolean
    parameters: []
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: System.Xml.XmlNode.InnerText
  commentId: P:System.Xml.XmlNode.InnerText
  id: InnerText
  parent: System.Xml.XmlNode
  langs:
  - csharp
  - vb
  name: InnerText
  fullName: System.Xml.XmlNode.InnerText
  type: Property
  source:
    remote:
      path: src/System.Xml.XmlDocument/ref/System.Xml.XmlDocument.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: InnerText
    path: src/System.Xml.XmlDocument/ref/System.Xml.XmlDocument.cs
    startLine: 249
  assemblies:
  - System.Xml.XmlDocument
  namespace: System.Xml
  syntax:
    content: public virtual string InnerText { get; set; }
    content.vb: Public Overridable Property InnerText As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Xml.XmlNode.InnerXml
  commentId: P:System.Xml.XmlNode.InnerXml
  id: InnerXml
  parent: System.Xml.XmlNode
  langs:
  - csharp
  - vb
  name: InnerXml
  fullName: System.Xml.XmlNode.InnerXml
  type: Property
  source:
    remote:
      path: src/System.Xml.XmlDocument/ref/System.Xml.XmlDocument.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: InnerXml
    path: src/System.Xml.XmlDocument/ref/System.Xml.XmlDocument.cs
    startLine: 250
  assemblies:
  - System.Xml.XmlDocument
  namespace: System.Xml
  syntax:
    content: public virtual string InnerXml { get; set; }
    content.vb: Public Overridable Property InnerXml As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Xml.XmlNode.IsReadOnly
  commentId: P:System.Xml.XmlNode.IsReadOnly
  id: IsReadOnly
  parent: System.Xml.XmlNode
  langs:
  - csharp
  - vb
  name: IsReadOnly
  fullName: System.Xml.XmlNode.IsReadOnly
  type: Property
  source:
    remote:
      path: src/System.Xml.XmlDocument/ref/System.Xml.XmlDocument.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IsReadOnly
    path: src/System.Xml.XmlDocument/ref/System.Xml.XmlDocument.cs
    startLine: 251
  assemblies:
  - System.Xml.XmlDocument
  namespace: System.Xml
  syntax:
    content: public virtual bool IsReadOnly { get; }
    content.vb: Public Overridable ReadOnly Property IsReadOnly As Boolean
    parameters: []
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: System.Xml.XmlNode.Item(System.String)
  commentId: P:System.Xml.XmlNode.Item(System.String)
  id: Item(System.String)
  parent: System.Xml.XmlNode
  langs:
  - csharp
  - vb
  name: Item[String]
  fullName: System.Xml.XmlNode.Item[System.String]
  type: Property
  source:
    remote:
      path: src/System.Xml.XmlDocument/ref/System.Xml.XmlDocument.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: this[]
    path: src/System.Xml.XmlDocument/ref/System.Xml.XmlDocument.cs
    startLine: 252
  assemblies:
  - System.Xml.XmlDocument
  namespace: System.Xml
  syntax:
    content: public virtual XmlElement this[string name] { get; }
    content.vb: Public Overridable ReadOnly Property Item(name As String) As XmlElement
    parameters:
    - id: name
      type: System.String
    return:
      type: System.Xml.XmlElement
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
  fullName.vb: System.Xml.XmlNode.Item(System.String)
  name.vb: Item(String)
- uid: System.Xml.XmlNode.Item(System.String,System.String)
  commentId: P:System.Xml.XmlNode.Item(System.String,System.String)
  id: Item(System.String,System.String)
  parent: System.Xml.XmlNode
  langs:
  - csharp
  - vb
  name: Item[String, String]
  fullName: System.Xml.XmlNode.Item[System.String, System.String]
  type: Property
  source:
    remote:
      path: src/System.Xml.XmlDocument/ref/System.Xml.XmlDocument.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: this[]
    path: src/System.Xml.XmlDocument/ref/System.Xml.XmlDocument.cs
    startLine: 253
  assemblies:
  - System.Xml.XmlDocument
  namespace: System.Xml
  syntax:
    content: public virtual XmlElement this[string localname, string ns] { get; }
    content.vb: Public Overridable ReadOnly Property Item(localname As String, ns As String) As XmlElement
    parameters:
    - id: localname
      type: System.String
    - id: ns
      type: System.String
    return:
      type: System.Xml.XmlElement
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
  fullName.vb: System.Xml.XmlNode.Item(System.String, System.String)
  name.vb: Item(String, String)
- uid: System.Xml.XmlNode.LastChild
  commentId: P:System.Xml.XmlNode.LastChild
  id: LastChild
  parent: System.Xml.XmlNode
  langs:
  - csharp
  - vb
  name: LastChild
  fullName: System.Xml.XmlNode.LastChild
  type: Property
  source:
    remote:
      path: src/System.Xml.XmlDocument/ref/System.Xml.XmlDocument.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: LastChild
    path: src/System.Xml.XmlDocument/ref/System.Xml.XmlDocument.cs
    startLine: 254
  assemblies:
  - System.Xml.XmlDocument
  namespace: System.Xml
  syntax:
    content: public virtual XmlNode LastChild { get; }
    content.vb: Public Overridable ReadOnly Property LastChild As XmlNode
    parameters: []
    return:
      type: System.Xml.XmlNode
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: System.Xml.XmlNode.LocalName
  commentId: P:System.Xml.XmlNode.LocalName
  id: LocalName
  parent: System.Xml.XmlNode
  langs:
  - csharp
  - vb
  name: LocalName
  fullName: System.Xml.XmlNode.LocalName
  type: Property
  source:
    remote:
      path: src/System.Xml.XmlDocument/ref/System.Xml.XmlDocument.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: LocalName
    path: src/System.Xml.XmlDocument/ref/System.Xml.XmlDocument.cs
    startLine: 255
  assemblies:
  - System.Xml.XmlDocument
  namespace: System.Xml
  syntax:
    content: public abstract string LocalName { get; }
    content.vb: Public MustOverride ReadOnly Property LocalName As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
- uid: System.Xml.XmlNode.Name
  commentId: P:System.Xml.XmlNode.Name
  id: Name
  parent: System.Xml.XmlNode
  langs:
  - csharp
  - vb
  name: Name
  fullName: System.Xml.XmlNode.Name
  type: Property
  source:
    remote:
      path: src/System.Xml.XmlDocument/ref/System.Xml.XmlDocument.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Name
    path: src/System.Xml.XmlDocument/ref/System.Xml.XmlDocument.cs
    startLine: 256
  assemblies:
  - System.Xml.XmlDocument
  namespace: System.Xml
  syntax:
    content: public abstract string Name { get; }
    content.vb: Public MustOverride ReadOnly Property Name As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
- uid: System.Xml.XmlNode.NamespaceURI
  commentId: P:System.Xml.XmlNode.NamespaceURI
  id: NamespaceURI
  parent: System.Xml.XmlNode
  langs:
  - csharp
  - vb
  name: NamespaceURI
  fullName: System.Xml.XmlNode.NamespaceURI
  type: Property
  source:
    remote:
      path: src/System.Xml.XmlDocument/ref/System.Xml.XmlDocument.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: NamespaceURI
    path: src/System.Xml.XmlDocument/ref/System.Xml.XmlDocument.cs
    startLine: 257
  assemblies:
  - System.Xml.XmlDocument
  namespace: System.Xml
  syntax:
    content: public virtual string NamespaceURI { get; }
    content.vb: Public Overridable ReadOnly Property NamespaceURI As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: System.Xml.XmlNode.NextSibling
  commentId: P:System.Xml.XmlNode.NextSibling
  id: NextSibling
  parent: System.Xml.XmlNode
  langs:
  - csharp
  - vb
  name: NextSibling
  fullName: System.Xml.XmlNode.NextSibling
  type: Property
  source:
    remote:
      path: src/System.Xml.XmlDocument/ref/System.Xml.XmlDocument.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: NextSibling
    path: src/System.Xml.XmlDocument/ref/System.Xml.XmlDocument.cs
    startLine: 258
  assemblies:
  - System.Xml.XmlDocument
  namespace: System.Xml
  syntax:
    content: public virtual XmlNode NextSibling { get; }
    content.vb: Public Overridable ReadOnly Property NextSibling As XmlNode
    parameters: []
    return:
      type: System.Xml.XmlNode
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: System.Xml.XmlNode.NodeType
  commentId: P:System.Xml.XmlNode.NodeType
  id: NodeType
  parent: System.Xml.XmlNode
  langs:
  - csharp
  - vb
  name: NodeType
  fullName: System.Xml.XmlNode.NodeType
  type: Property
  source:
    remote:
      path: src/System.Xml.XmlDocument/ref/System.Xml.XmlDocument.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: NodeType
    path: src/System.Xml.XmlDocument/ref/System.Xml.XmlDocument.cs
    startLine: 259
  assemblies:
  - System.Xml.XmlDocument
  namespace: System.Xml
  syntax:
    content: public abstract XmlNodeType NodeType { get; }
    content.vb: Public MustOverride ReadOnly Property NodeType As XmlNodeType
    parameters: []
    return:
      type: System.Xml.XmlNodeType
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
- uid: System.Xml.XmlNode.OuterXml
  commentId: P:System.Xml.XmlNode.OuterXml
  id: OuterXml
  parent: System.Xml.XmlNode
  langs:
  - csharp
  - vb
  name: OuterXml
  fullName: System.Xml.XmlNode.OuterXml
  type: Property
  source:
    remote:
      path: src/System.Xml.XmlDocument/ref/System.Xml.XmlDocument.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: OuterXml
    path: src/System.Xml.XmlDocument/ref/System.Xml.XmlDocument.cs
    startLine: 260
  assemblies:
  - System.Xml.XmlDocument
  namespace: System.Xml
  syntax:
    content: public virtual string OuterXml { get; }
    content.vb: Public Overridable ReadOnly Property OuterXml As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: System.Xml.XmlNode.OwnerDocument
  commentId: P:System.Xml.XmlNode.OwnerDocument
  id: OwnerDocument
  parent: System.Xml.XmlNode
  langs:
  - csharp
  - vb
  name: OwnerDocument
  fullName: System.Xml.XmlNode.OwnerDocument
  type: Property
  source:
    remote:
      path: src/System.Xml.XmlDocument/ref/System.Xml.XmlDocument.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: OwnerDocument
    path: src/System.Xml.XmlDocument/ref/System.Xml.XmlDocument.cs
    startLine: 261
  assemblies:
  - System.Xml.XmlDocument
  namespace: System.Xml
  syntax:
    content: public virtual XmlDocument OwnerDocument { get; }
    content.vb: Public Overridable ReadOnly Property OwnerDocument As XmlDocument
    parameters: []
    return:
      type: System.Xml.XmlDocument
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: System.Xml.XmlNode.ParentNode
  commentId: P:System.Xml.XmlNode.ParentNode
  id: ParentNode
  parent: System.Xml.XmlNode
  langs:
  - csharp
  - vb
  name: ParentNode
  fullName: System.Xml.XmlNode.ParentNode
  type: Property
  source:
    remote:
      path: src/System.Xml.XmlDocument/ref/System.Xml.XmlDocument.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ParentNode
    path: src/System.Xml.XmlDocument/ref/System.Xml.XmlDocument.cs
    startLine: 262
  assemblies:
  - System.Xml.XmlDocument
  namespace: System.Xml
  syntax:
    content: public virtual XmlNode ParentNode { get; }
    content.vb: Public Overridable ReadOnly Property ParentNode As XmlNode
    parameters: []
    return:
      type: System.Xml.XmlNode
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: System.Xml.XmlNode.Prefix
  commentId: P:System.Xml.XmlNode.Prefix
  id: Prefix
  parent: System.Xml.XmlNode
  langs:
  - csharp
  - vb
  name: Prefix
  fullName: System.Xml.XmlNode.Prefix
  type: Property
  source:
    remote:
      path: src/System.Xml.XmlDocument/ref/System.Xml.XmlDocument.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Prefix
    path: src/System.Xml.XmlDocument/ref/System.Xml.XmlDocument.cs
    startLine: 263
  assemblies:
  - System.Xml.XmlDocument
  namespace: System.Xml
  syntax:
    content: public virtual string Prefix { get; set; }
    content.vb: Public Overridable Property Prefix As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Xml.XmlNode.PreviousSibling
  commentId: P:System.Xml.XmlNode.PreviousSibling
  id: PreviousSibling
  parent: System.Xml.XmlNode
  langs:
  - csharp
  - vb
  name: PreviousSibling
  fullName: System.Xml.XmlNode.PreviousSibling
  type: Property
  source:
    remote:
      path: src/System.Xml.XmlDocument/ref/System.Xml.XmlDocument.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: PreviousSibling
    path: src/System.Xml.XmlDocument/ref/System.Xml.XmlDocument.cs
    startLine: 264
  assemblies:
  - System.Xml.XmlDocument
  namespace: System.Xml
  syntax:
    content: public virtual XmlNode PreviousSibling { get; }
    content.vb: Public Overridable ReadOnly Property PreviousSibling As XmlNode
    parameters: []
    return:
      type: System.Xml.XmlNode
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: System.Xml.XmlNode.PreviousText
  commentId: P:System.Xml.XmlNode.PreviousText
  id: PreviousText
  parent: System.Xml.XmlNode
  langs:
  - csharp
  - vb
  name: PreviousText
  fullName: System.Xml.XmlNode.PreviousText
  type: Property
  source:
    remote:
      path: src/System.Xml.XmlDocument/ref/System.Xml.XmlDocument.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: PreviousText
    path: src/System.Xml.XmlDocument/ref/System.Xml.XmlDocument.cs
    startLine: 265
  assemblies:
  - System.Xml.XmlDocument
  namespace: System.Xml
  syntax:
    content: public virtual XmlNode PreviousText { get; }
    content.vb: Public Overridable ReadOnly Property PreviousText As XmlNode
    parameters: []
    return:
      type: System.Xml.XmlNode
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: System.Xml.XmlNode.Value
  commentId: P:System.Xml.XmlNode.Value
  id: Value
  parent: System.Xml.XmlNode
  langs:
  - csharp
  - vb
  name: Value
  fullName: System.Xml.XmlNode.Value
  type: Property
  source:
    remote:
      path: src/System.Xml.XmlDocument/ref/System.Xml.XmlDocument.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Value
    path: src/System.Xml.XmlDocument/ref/System.Xml.XmlDocument.cs
    startLine: 266
  assemblies:
  - System.Xml.XmlDocument
  namespace: System.Xml
  syntax:
    content: public virtual string Value { get; set; }
    content.vb: Public Overridable Property Value As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Xml.XmlNode.AppendChild(System.Xml.XmlNode)
  commentId: M:System.Xml.XmlNode.AppendChild(System.Xml.XmlNode)
  id: AppendChild(System.Xml.XmlNode)
  parent: System.Xml.XmlNode
  langs:
  - csharp
  - vb
  name: AppendChild(XmlNode)
  fullName: System.Xml.XmlNode.AppendChild(System.Xml.XmlNode)
  type: Method
  source:
    remote:
      path: src/System.Xml.XmlDocument/ref/System.Xml.XmlDocument.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: AppendChild
    path: src/System.Xml.XmlDocument/ref/System.Xml.XmlDocument.cs
    startLine: 267
  assemblies:
  - System.Xml.XmlDocument
  namespace: System.Xml
  syntax:
    content: public virtual XmlNode AppendChild(XmlNode newChild)
    content.vb: Public Overridable Function AppendChild(newChild As XmlNode) As XmlNode
    parameters:
    - id: newChild
      type: System.Xml.XmlNode
    return:
      type: System.Xml.XmlNode
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Xml.XmlNode.CloneNode(System.Boolean)
  commentId: M:System.Xml.XmlNode.CloneNode(System.Boolean)
  id: CloneNode(System.Boolean)
  parent: System.Xml.XmlNode
  langs:
  - csharp
  - vb
  name: CloneNode(Boolean)
  fullName: System.Xml.XmlNode.CloneNode(System.Boolean)
  type: Method
  source:
    remote:
      path: src/System.Xml.XmlDocument/ref/System.Xml.XmlDocument.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CloneNode
    path: src/System.Xml.XmlDocument/ref/System.Xml.XmlDocument.cs
    startLine: 268
  assemblies:
  - System.Xml.XmlDocument
  namespace: System.Xml
  syntax:
    content: public abstract XmlNode CloneNode(bool deep)
    content.vb: Public MustOverride Function CloneNode(deep As Boolean) As XmlNode
    parameters:
    - id: deep
      type: System.Boolean
    return:
      type: System.Xml.XmlNode
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: System.Xml.XmlNode.GetEnumerator
  commentId: M:System.Xml.XmlNode.GetEnumerator
  id: GetEnumerator
  parent: System.Xml.XmlNode
  langs:
  - csharp
  - vb
  name: GetEnumerator()
  fullName: System.Xml.XmlNode.GetEnumerator()
  type: Method
  source:
    remote:
      path: src/System.Xml.XmlDocument/ref/System.Xml.XmlDocument.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetEnumerator
    path: src/System.Xml.XmlDocument/ref/System.Xml.XmlDocument.cs
    startLine: 269
  assemblies:
  - System.Xml.XmlDocument
  namespace: System.Xml
  syntax:
    content: public Collections.IEnumerator GetEnumerator()
    content.vb: Public Function GetEnumerator As Collections.IEnumerator
    return:
      type: System.Collections.IEnumerator
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Xml.XmlNode.GetNamespaceOfPrefix(System.String)
  commentId: M:System.Xml.XmlNode.GetNamespaceOfPrefix(System.String)
  id: GetNamespaceOfPrefix(System.String)
  parent: System.Xml.XmlNode
  langs:
  - csharp
  - vb
  name: GetNamespaceOfPrefix(String)
  fullName: System.Xml.XmlNode.GetNamespaceOfPrefix(System.String)
  type: Method
  source:
    remote:
      path: src/System.Xml.XmlDocument/ref/System.Xml.XmlDocument.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetNamespaceOfPrefix
    path: src/System.Xml.XmlDocument/ref/System.Xml.XmlDocument.cs
    startLine: 270
  assemblies:
  - System.Xml.XmlDocument
  namespace: System.Xml
  syntax:
    content: public virtual string GetNamespaceOfPrefix(string prefix)
    content.vb: Public Overridable Function GetNamespaceOfPrefix(prefix As String) As String
    parameters:
    - id: prefix
      type: System.String
    return:
      type: System.String
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Xml.XmlNode.GetPrefixOfNamespace(System.String)
  commentId: M:System.Xml.XmlNode.GetPrefixOfNamespace(System.String)
  id: GetPrefixOfNamespace(System.String)
  parent: System.Xml.XmlNode
  langs:
  - csharp
  - vb
  name: GetPrefixOfNamespace(String)
  fullName: System.Xml.XmlNode.GetPrefixOfNamespace(System.String)
  type: Method
  source:
    remote:
      path: src/System.Xml.XmlDocument/ref/System.Xml.XmlDocument.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetPrefixOfNamespace
    path: src/System.Xml.XmlDocument/ref/System.Xml.XmlDocument.cs
    startLine: 271
  assemblies:
  - System.Xml.XmlDocument
  namespace: System.Xml
  syntax:
    content: public virtual string GetPrefixOfNamespace(string namespaceURI)
    content.vb: Public Overridable Function GetPrefixOfNamespace(namespaceURI As String) As String
    parameters:
    - id: namespaceURI
      type: System.String
    return:
      type: System.String
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Xml.XmlNode.InsertAfter(System.Xml.XmlNode,System.Xml.XmlNode)
  commentId: M:System.Xml.XmlNode.InsertAfter(System.Xml.XmlNode,System.Xml.XmlNode)
  id: InsertAfter(System.Xml.XmlNode,System.Xml.XmlNode)
  parent: System.Xml.XmlNode
  langs:
  - csharp
  - vb
  name: InsertAfter(XmlNode, XmlNode)
  fullName: System.Xml.XmlNode.InsertAfter(System.Xml.XmlNode, System.Xml.XmlNode)
  type: Method
  source:
    remote:
      path: src/System.Xml.XmlDocument/ref/System.Xml.XmlDocument.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: InsertAfter
    path: src/System.Xml.XmlDocument/ref/System.Xml.XmlDocument.cs
    startLine: 272
  assemblies:
  - System.Xml.XmlDocument
  namespace: System.Xml
  syntax:
    content: public virtual XmlNode InsertAfter(XmlNode newChild, XmlNode refChild)
    content.vb: Public Overridable Function InsertAfter(newChild As XmlNode, refChild As XmlNode) As XmlNode
    parameters:
    - id: newChild
      type: System.Xml.XmlNode
    - id: refChild
      type: System.Xml.XmlNode
    return:
      type: System.Xml.XmlNode
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Xml.XmlNode.InsertBefore(System.Xml.XmlNode,System.Xml.XmlNode)
  commentId: M:System.Xml.XmlNode.InsertBefore(System.Xml.XmlNode,System.Xml.XmlNode)
  id: InsertBefore(System.Xml.XmlNode,System.Xml.XmlNode)
  parent: System.Xml.XmlNode
  langs:
  - csharp
  - vb
  name: InsertBefore(XmlNode, XmlNode)
  fullName: System.Xml.XmlNode.InsertBefore(System.Xml.XmlNode, System.Xml.XmlNode)
  type: Method
  source:
    remote:
      path: src/System.Xml.XmlDocument/ref/System.Xml.XmlDocument.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: InsertBefore
    path: src/System.Xml.XmlDocument/ref/System.Xml.XmlDocument.cs
    startLine: 273
  assemblies:
  - System.Xml.XmlDocument
  namespace: System.Xml
  syntax:
    content: public virtual XmlNode InsertBefore(XmlNode newChild, XmlNode refChild)
    content.vb: Public Overridable Function InsertBefore(newChild As XmlNode, refChild As XmlNode) As XmlNode
    parameters:
    - id: newChild
      type: System.Xml.XmlNode
    - id: refChild
      type: System.Xml.XmlNode
    return:
      type: System.Xml.XmlNode
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Xml.XmlNode.Normalize
  commentId: M:System.Xml.XmlNode.Normalize
  id: Normalize
  parent: System.Xml.XmlNode
  langs:
  - csharp
  - vb
  name: Normalize()
  fullName: System.Xml.XmlNode.Normalize()
  type: Method
  source:
    remote:
      path: src/System.Xml.XmlDocument/ref/System.Xml.XmlDocument.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Normalize
    path: src/System.Xml.XmlDocument/ref/System.Xml.XmlDocument.cs
    startLine: 274
  assemblies:
  - System.Xml.XmlDocument
  namespace: System.Xml
  syntax:
    content: public virtual void Normalize()
    content.vb: Public Overridable Sub Normalize
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Xml.XmlNode.PrependChild(System.Xml.XmlNode)
  commentId: M:System.Xml.XmlNode.PrependChild(System.Xml.XmlNode)
  id: PrependChild(System.Xml.XmlNode)
  parent: System.Xml.XmlNode
  langs:
  - csharp
  - vb
  name: PrependChild(XmlNode)
  fullName: System.Xml.XmlNode.PrependChild(System.Xml.XmlNode)
  type: Method
  source:
    remote:
      path: src/System.Xml.XmlDocument/ref/System.Xml.XmlDocument.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: PrependChild
    path: src/System.Xml.XmlDocument/ref/System.Xml.XmlDocument.cs
    startLine: 275
  assemblies:
  - System.Xml.XmlDocument
  namespace: System.Xml
  syntax:
    content: public virtual XmlNode PrependChild(XmlNode newChild)
    content.vb: Public Overridable Function PrependChild(newChild As XmlNode) As XmlNode
    parameters:
    - id: newChild
      type: System.Xml.XmlNode
    return:
      type: System.Xml.XmlNode
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Xml.XmlNode.RemoveAll
  commentId: M:System.Xml.XmlNode.RemoveAll
  id: RemoveAll
  parent: System.Xml.XmlNode
  langs:
  - csharp
  - vb
  name: RemoveAll()
  fullName: System.Xml.XmlNode.RemoveAll()
  type: Method
  source:
    remote:
      path: src/System.Xml.XmlDocument/ref/System.Xml.XmlDocument.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: RemoveAll
    path: src/System.Xml.XmlDocument/ref/System.Xml.XmlDocument.cs
    startLine: 276
  assemblies:
  - System.Xml.XmlDocument
  namespace: System.Xml
  syntax:
    content: public virtual void RemoveAll()
    content.vb: Public Overridable Sub RemoveAll
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Xml.XmlNode.RemoveChild(System.Xml.XmlNode)
  commentId: M:System.Xml.XmlNode.RemoveChild(System.Xml.XmlNode)
  id: RemoveChild(System.Xml.XmlNode)
  parent: System.Xml.XmlNode
  langs:
  - csharp
  - vb
  name: RemoveChild(XmlNode)
  fullName: System.Xml.XmlNode.RemoveChild(System.Xml.XmlNode)
  type: Method
  source:
    remote:
      path: src/System.Xml.XmlDocument/ref/System.Xml.XmlDocument.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: RemoveChild
    path: src/System.Xml.XmlDocument/ref/System.Xml.XmlDocument.cs
    startLine: 277
  assemblies:
  - System.Xml.XmlDocument
  namespace: System.Xml
  syntax:
    content: public virtual XmlNode RemoveChild(XmlNode oldChild)
    content.vb: Public Overridable Function RemoveChild(oldChild As XmlNode) As XmlNode
    parameters:
    - id: oldChild
      type: System.Xml.XmlNode
    return:
      type: System.Xml.XmlNode
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Xml.XmlNode.ReplaceChild(System.Xml.XmlNode,System.Xml.XmlNode)
  commentId: M:System.Xml.XmlNode.ReplaceChild(System.Xml.XmlNode,System.Xml.XmlNode)
  id: ReplaceChild(System.Xml.XmlNode,System.Xml.XmlNode)
  parent: System.Xml.XmlNode
  langs:
  - csharp
  - vb
  name: ReplaceChild(XmlNode, XmlNode)
  fullName: System.Xml.XmlNode.ReplaceChild(System.Xml.XmlNode, System.Xml.XmlNode)
  type: Method
  source:
    remote:
      path: src/System.Xml.XmlDocument/ref/System.Xml.XmlDocument.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ReplaceChild
    path: src/System.Xml.XmlDocument/ref/System.Xml.XmlDocument.cs
    startLine: 278
  assemblies:
  - System.Xml.XmlDocument
  namespace: System.Xml
  syntax:
    content: public virtual XmlNode ReplaceChild(XmlNode newChild, XmlNode oldChild)
    content.vb: Public Overridable Function ReplaceChild(newChild As XmlNode, oldChild As XmlNode) As XmlNode
    parameters:
    - id: newChild
      type: System.Xml.XmlNode
    - id: oldChild
      type: System.Xml.XmlNode
    return:
      type: System.Xml.XmlNode
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Xml.XmlNode.Supports(System.String,System.String)
  commentId: M:System.Xml.XmlNode.Supports(System.String,System.String)
  id: Supports(System.String,System.String)
  parent: System.Xml.XmlNode
  langs:
  - csharp
  - vb
  name: Supports(String, String)
  fullName: System.Xml.XmlNode.Supports(System.String, System.String)
  type: Method
  source:
    remote:
      path: src/System.Xml.XmlDocument/ref/System.Xml.XmlDocument.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Supports
    path: src/System.Xml.XmlDocument/ref/System.Xml.XmlDocument.cs
    startLine: 279
  assemblies:
  - System.Xml.XmlDocument
  namespace: System.Xml
  syntax:
    content: public virtual bool Supports(string feature, string version)
    content.vb: Public Overridable Function Supports(feature As String, version As String) As Boolean
    parameters:
    - id: feature
      type: System.String
    - id: version
      type: System.String
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Xml.XmlNode.WriteContentTo(System.Xml.XmlWriter)
  commentId: M:System.Xml.XmlNode.WriteContentTo(System.Xml.XmlWriter)
  id: WriteContentTo(System.Xml.XmlWriter)
  parent: System.Xml.XmlNode
  langs:
  - csharp
  - vb
  name: WriteContentTo(XmlWriter)
  fullName: System.Xml.XmlNode.WriteContentTo(System.Xml.XmlWriter)
  type: Method
  source:
    remote:
      path: src/System.Xml.XmlDocument/ref/System.Xml.XmlDocument.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: WriteContentTo
    path: src/System.Xml.XmlDocument/ref/System.Xml.XmlDocument.cs
    startLine: 281
  assemblies:
  - System.Xml.XmlDocument
  namespace: System.Xml
  syntax:
    content: public abstract void WriteContentTo(XmlWriter w)
    content.vb: Public MustOverride Sub WriteContentTo(w As XmlWriter)
    parameters:
    - id: w
      type: System.Xml.XmlWriter
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: System.Xml.XmlNode.WriteTo(System.Xml.XmlWriter)
  commentId: M:System.Xml.XmlNode.WriteTo(System.Xml.XmlWriter)
  id: WriteTo(System.Xml.XmlWriter)
  parent: System.Xml.XmlNode
  langs:
  - csharp
  - vb
  name: WriteTo(XmlWriter)
  fullName: System.Xml.XmlNode.WriteTo(System.Xml.XmlWriter)
  type: Method
  source:
    remote:
      path: src/System.Xml.XmlDocument/ref/System.Xml.XmlDocument.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: WriteTo
    path: src/System.Xml.XmlDocument/ref/System.Xml.XmlDocument.cs
    startLine: 282
  assemblies:
  - System.Xml.XmlDocument
  namespace: System.Xml
  syntax:
    content: public abstract void WriteTo(XmlWriter w)
    content.vb: Public MustOverride Sub WriteTo(w As XmlWriter)
    parameters:
    - id: w
      type: System.Xml.XmlWriter
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
references:
- uid: System.Xml
  isExternal: false
  name: System.Xml
  fullName: System.Xml
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Xml.XmlAttributeCollection
  parent: System.Xml
  isExternal: false
  name: XmlAttributeCollection
  fullName: System.Xml.XmlAttributeCollection
- uid: System.String
  parent: System
  isExternal: false
  name: String
  fullName: System.String
- uid: System.Xml.XmlNodeList
  parent: System.Xml
  isExternal: false
  name: XmlNodeList
  fullName: System.Xml.XmlNodeList
- uid: System.Xml.XmlNode
  parent: System.Xml
  isExternal: false
  name: XmlNode
  fullName: System.Xml.XmlNode
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  fullName: System.Boolean
- uid: System.Xml.XmlElement
  parent: System.Xml
  isExternal: false
  name: XmlElement
  fullName: System.Xml.XmlElement
- uid: System.Xml.XmlNodeType
  parent: System.Xml
  isExternal: false
  name: XmlNodeType
  fullName: System.Xml.XmlNodeType
- uid: System.Xml.XmlDocument
  parent: System.Xml
  isExternal: false
  name: XmlDocument
  fullName: System.Xml.XmlDocument
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: false
  name: Collections.IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Collections
  isExternal: false
  name: System.Collections
  fullName: System.Collections
- uid: System.Xml.XmlWriter
  parent: System.Xml
  isExternal: false
  name: XmlWriter
  fullName: System.Xml.XmlWriter
