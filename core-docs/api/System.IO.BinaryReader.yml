items:
- uid: System.IO.BinaryReader
  commentId: T:System.IO.BinaryReader
  id: BinaryReader
  parent: System.IO
  children:
  - System.IO.BinaryReader.#ctor(System.IO.Stream)
  - System.IO.BinaryReader.#ctor(System.IO.Stream,System.Text.Encoding)
  - System.IO.BinaryReader.#ctor(System.IO.Stream,System.Text.Encoding,System.Boolean)
  - System.IO.BinaryReader.BaseStream
  - System.IO.BinaryReader.Dispose
  - System.IO.BinaryReader.Dispose(System.Boolean)
  - System.IO.BinaryReader.FillBuffer(System.Int32)
  - System.IO.BinaryReader.PeekChar
  - System.IO.BinaryReader.Read
  - System.IO.BinaryReader.Read(System.Byte[],System.Int32,System.Int32)
  - System.IO.BinaryReader.Read(System.Char[],System.Int32,System.Int32)
  - System.IO.BinaryReader.Read7BitEncodedInt
  - System.IO.BinaryReader.ReadBoolean
  - System.IO.BinaryReader.ReadByte
  - System.IO.BinaryReader.ReadBytes(System.Int32)
  - System.IO.BinaryReader.ReadChar
  - System.IO.BinaryReader.ReadChars(System.Int32)
  - System.IO.BinaryReader.ReadDecimal
  - System.IO.BinaryReader.ReadDouble
  - System.IO.BinaryReader.ReadInt16
  - System.IO.BinaryReader.ReadInt32
  - System.IO.BinaryReader.ReadInt64
  - System.IO.BinaryReader.ReadSByte
  - System.IO.BinaryReader.ReadSingle
  - System.IO.BinaryReader.ReadString
  - System.IO.BinaryReader.ReadUInt16
  - System.IO.BinaryReader.ReadUInt32
  - System.IO.BinaryReader.ReadUInt64
  langs:
  - csharp
  - vb
  name: BinaryReader
  fullName: System.IO.BinaryReader
  type: Class
  source:
    remote:
      path: src/mscorlib/src/System/IO/BinaryReader.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: BinaryReader
    path: src/mscorlib/src/System/IO/BinaryReader.cs
    startLine: 24
  assemblies:
  - System.IO
  namespace: System.IO
  summary: Reads primitive data types as binary values in a specific encoding.
  syntax:
    content: 'public class BinaryReader : IDisposable'
    content.vb: >-
      Public Class BinaryReader
          Inherits IDisposable
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: System.IO.BinaryReader.#ctor(System.IO.Stream)
  commentId: M:System.IO.BinaryReader.#ctor(System.IO.Stream)
  id: '#ctor(System.IO.Stream)'
  parent: System.IO.BinaryReader
  langs:
  - csharp
  - vb
  name: BinaryReader(Stream)
  fullName: System.IO.BinaryReader.BinaryReader(System.IO.Stream)
  type: Constructor
  source:
    remote:
      path: src/mscorlib/src/System/IO/BinaryReader.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: .ctor
    path: src/mscorlib/src/System/IO/BinaryReader.cs
    startLine: 42
  assemblies:
  - System.IO
  namespace: System.IO
  summary: Initializes a new instance of the <xref href="System.IO.BinaryReader" data-throw-if-not-resolved="false"></xref> class based on the specified stream and using UTF-8 encoding.
  syntax:
    content: public BinaryReader(Stream input)
    content.vb: Public Sub New(input As Stream)
    parameters:
    - id: input
      type: System.IO.Stream
      description: 'The input stream. '
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: 'The stream does not support reading, is null, or is already closed. '
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.IO.BinaryReader.#ctor(System.IO.Stream,System.Text.Encoding)
  commentId: M:System.IO.BinaryReader.#ctor(System.IO.Stream,System.Text.Encoding)
  id: '#ctor(System.IO.Stream,System.Text.Encoding)'
  parent: System.IO.BinaryReader
  langs:
  - csharp
  - vb
  name: BinaryReader(Stream, Text.Encoding)
  fullName: System.IO.BinaryReader.BinaryReader(System.IO.Stream, System.Text.Encoding)
  type: Constructor
  source:
    remote:
      path: src/mscorlib/src/System/IO/BinaryReader.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: .ctor
    path: src/mscorlib/src/System/IO/BinaryReader.cs
    startLine: 45
  assemblies:
  - System.IO
  namespace: System.IO
  summary: Initializes a new instance of the <xref href="System.IO.BinaryReader" data-throw-if-not-resolved="false"></xref> class based on the specified stream and character encoding.
  syntax:
    content: public BinaryReader(Stream input, Text.Encoding encoding)
    content.vb: Public Sub New(input As Stream, encoding As Text.Encoding)
    parameters:
    - id: input
      type: System.IO.Stream
      description: 'The input stream. '
    - id: encoding
      type: System.Text.Encoding
      description: 'The character encoding to use. '
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: 'The stream does not support reading, is null, or is already closed. '
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>encoding</em> is null. "
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.IO.BinaryReader.#ctor(System.IO.Stream,System.Text.Encoding,System.Boolean)
  commentId: M:System.IO.BinaryReader.#ctor(System.IO.Stream,System.Text.Encoding,System.Boolean)
  id: '#ctor(System.IO.Stream,System.Text.Encoding,System.Boolean)'
  parent: System.IO.BinaryReader
  langs:
  - csharp
  - vb
  name: BinaryReader(Stream, Text.Encoding, Boolean)
  fullName: System.IO.BinaryReader.BinaryReader(System.IO.Stream, System.Text.Encoding, System.Boolean)
  type: Constructor
  source:
    remote:
      path: src/mscorlib/src/System/IO/BinaryReader.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: .ctor
    path: src/mscorlib/src/System/IO/BinaryReader.cs
    startLine: 48
  assemblies:
  - System.IO
  namespace: System.IO
  summary: Initializes a new instance of the <xref href="System.IO.BinaryReader" data-throw-if-not-resolved="false"></xref> class based on the specified stream and character encoding, and optionally leaves the stream open.
  syntax:
    content: public BinaryReader(Stream input, Text.Encoding encoding, bool leaveOpen)
    content.vb: Public Sub New(input As Stream, encoding As Text.Encoding, leaveOpen As Boolean)
    parameters:
    - id: input
      type: System.IO.Stream
      description: The input stream.
    - id: encoding
      type: System.Text.Encoding
      description: The character encoding to use.
    - id: leaveOpen
      type: System.Boolean
      description: true to leave the stream open after the <xref href="System.IO.BinaryReader" data-throw-if-not-resolved="false"></xref> object is disposed; otherwise, false.
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: 'The stream does not support reading, is null, or is already closed. '
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>encoding</em> or <em>input</em> is null. "
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.IO.BinaryReader.BaseStream
  commentId: P:System.IO.BinaryReader.BaseStream
  id: BaseStream
  parent: System.IO.BinaryReader
  langs:
  - csharp
  - vb
  name: BaseStream
  fullName: System.IO.BinaryReader.BaseStream
  type: Property
  source:
    remote:
      path: src/mscorlib/src/System/IO/BinaryReader.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: BaseStream
    path: src/mscorlib/src/System/IO/BinaryReader.cs
    startLine: 78
  assemblies:
  - System.IO
  namespace: System.IO
  summary: Exposes access to the underlying stream of the <xref href="System.IO.BinaryReader" data-throw-if-not-resolved="false"></xref>.
  syntax:
    content: public virtual Stream BaseStream { get; }
    content.vb: Public Overridable ReadOnly Property BaseStream As Stream
    parameters: []
    return:
      type: System.IO.Stream
      description: The underlying stream associated with the BinaryReader.
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: System.IO.BinaryReader.Dispose
  commentId: M:System.IO.BinaryReader.Dispose
  id: Dispose
  parent: System.IO.BinaryReader
  langs:
  - csharp
  - vb
  name: Dispose()
  fullName: System.IO.BinaryReader.Dispose()
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/IO/BinaryReader.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Dispose
    path: src/mscorlib/src/System/IO/BinaryReader.cs
    startLine: 103
  assemblies:
  - System.IO
  namespace: System.IO
  summary: Releases all resources used by the current instance of the <xref href="System.IO.BinaryReader" data-throw-if-not-resolved="false"></xref> class.
  syntax:
    content: public void Dispose()
    content.vb: Public Sub Dispose
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.IO.BinaryReader.Dispose(System.Boolean)
  commentId: M:System.IO.BinaryReader.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.IO.BinaryReader
  langs:
  - csharp
  - vb
  name: Dispose(Boolean)
  fullName: System.IO.BinaryReader.Dispose(System.Boolean)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/IO/BinaryReader.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Dispose
    path: src/mscorlib/src/System/IO/BinaryReader.cs
    startLine: 88
  assemblies:
  - System.IO
  namespace: System.IO
  summary: Releases the unmanaged resources used by the <xref href="System.IO.BinaryReader" data-throw-if-not-resolved="false"></xref> class and optionally releases the managed resources.
  syntax:
    content: protected virtual void Dispose(bool disposing)
    content.vb: Protected Overridable Sub Dispose(disposing As Boolean)
    parameters:
    - id: disposing
      type: System.Boolean
      description: 'true to release both managed and unmanaged resources; false to release only unmanaged resources. '
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: System.IO.BinaryReader.FillBuffer(System.Int32)
  commentId: M:System.IO.BinaryReader.FillBuffer(System.Int32)
  id: FillBuffer(System.Int32)
  parent: System.IO.BinaryReader
  langs:
  - csharp
  - vb
  name: FillBuffer(Int32)
  fullName: System.IO.BinaryReader.FillBuffer(System.Int32)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/IO/BinaryReader.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: FillBuffer
    path: src/mscorlib/src/System/IO/BinaryReader.cs
    startLine: 537
  assemblies:
  - System.IO
  namespace: System.IO
  summary: Fills the internal buffer with the specified number of bytes read from the stream.
  syntax:
    content: protected virtual void FillBuffer(int numBytes)
    content.vb: Protected Overridable Sub FillBuffer(numBytes As Integer)
    parameters:
    - id: numBytes
      type: System.Int32
      description: 'The number of bytes to be read. '
  exceptions:
  - type: System.IO.EndOfStreamException
    commentId: T:System.IO.EndOfStreamException
    description: 'The end of the stream is reached before <em>numBytes</em> could be read. '
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: 'An I/O error occurs. '
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: Requested <em>numBytes</em> is larger than the internal buffer size.
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: System.IO.BinaryReader.PeekChar
  commentId: M:System.IO.BinaryReader.PeekChar
  id: PeekChar
  parent: System.IO.BinaryReader
  langs:
  - csharp
  - vb
  name: PeekChar()
  fullName: System.IO.BinaryReader.PeekChar()
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/IO/BinaryReader.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: PeekChar
    path: src/mscorlib/src/System/IO/BinaryReader.cs
    startLine: 108
  assemblies:
  - System.IO
  namespace: System.IO
  summary: Returns the next available character and does not advance the byte or character position.
  syntax:
    content: public virtual int PeekChar()
    content.vb: Public Overridable Function PeekChar As Integer
    return:
      type: System.Int32
      description: The next available character, or -1 if no more characters are available or the stream does not support seeking.
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: 'An I/O error occurs. '
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: The current character cannot be decoded into the internal character buffer by using the <xref href="System.Text.Encoding" data-throw-if-not-resolved="false"></xref> selected for the stream.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.IO.BinaryReader.Read
  commentId: M:System.IO.BinaryReader.Read
  id: Read
  parent: System.IO.BinaryReader
  langs:
  - csharp
  - vb
  name: Read()
  fullName: System.IO.BinaryReader.Read()
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/IO/BinaryReader.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Read
    path: src/mscorlib/src/System/IO/BinaryReader.cs
    startLine: 121
  assemblies:
  - System.IO
  namespace: System.IO
  summary: Reads characters from the underlying stream and advances the current position of the stream in accordance with the Encoding used and the specific character being read from the stream.
  syntax:
    content: public virtual int Read()
    content.vb: Public Overridable Function Read As Integer
    return:
      type: System.Int32
      description: The next character from the input stream, or -1 if no characters are currently available.
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: 'An I/O error occurs. '
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: 'The stream is closed. '
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.IO.BinaryReader.Read(System.Byte[],System.Int32,System.Int32)
  commentId: M:System.IO.BinaryReader.Read(System.Byte[],System.Int32,System.Int32)
  id: Read(System.Byte[],System.Int32,System.Int32)
  parent: System.IO.BinaryReader
  langs:
  - csharp
  - vb
  name: Read(Byte[], Int32, Int32)
  fullName: System.IO.BinaryReader.Read(System.Byte[], System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/IO/BinaryReader.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Read
    path: src/mscorlib/src/System/IO/BinaryReader.cs
    startLine: 488
  assemblies:
  - System.IO
  namespace: System.IO
  summary: 'Reads the specified number of bytes from the stream, starting from a specified point in the byte array. '
  syntax:
    content: public virtual int Read(byte[] buffer, int index, int count)
    content.vb: Public Overridable Function Read(buffer As Byte(), index As Integer, count As Integer) As Integer
    parameters:
    - id: buffer
      type: System.Byte[]
      description: 'The buffer to read data into. '
    - id: index
      type: System.Int32
      description: 'The starting point in the buffer at which to begin reading into the buffer. '
    - id: count
      type: System.Int32
      description: 'The number of bytes to read. '
    return:
      type: System.Int32
      description: The number of bytes read into <em>buffer</em>. This might be less than the number of bytes requested if that many bytes are not available, or it might be zero if the end of the stream is reached.
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: The buffer length minus <em>index</em> is less than <em>count</em>. -or-The number of decoded characters to read is greater than <em>count</em>. This can happen if a Unicode decoder returns fallback characters or a surrogate pair.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>buffer</em> is null. "
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<em>index</em> or <em>count</em> is negative. "
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: 'The stream is closed. '
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: 'An I/O error occurs. '
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: System.IO.BinaryReader.Read(System.Byte(), System.Int32, System.Int32)
  name.vb: Read(Byte(), Int32, Int32)
- uid: System.IO.BinaryReader.Read(System.Char[],System.Int32,System.Int32)
  commentId: M:System.IO.BinaryReader.Read(System.Char[],System.Int32,System.Int32)
  id: Read(System.Char[],System.Int32,System.Int32)
  parent: System.IO.BinaryReader
  langs:
  - csharp
  - vb
  name: Read(Char[], Int32, Int32)
  fullName: System.IO.BinaryReader.Read(System.Char[], System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/IO/BinaryReader.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Read
    path: src/mscorlib/src/System/IO/BinaryReader.cs
    startLine: 296
  assemblies:
  - System.IO
  namespace: System.IO
  summary: Reads the specified number of characters from the stream, starting from a specified point in the character array.
  syntax:
    content: public virtual int Read(char[] buffer, int index, int count)
    content.vb: Public Overridable Function Read(buffer As Char(), index As Integer, count As Integer) As Integer
    parameters:
    - id: buffer
      type: System.Char[]
      description: 'The buffer to read data into. '
    - id: index
      type: System.Int32
      description: 'The starting point in the buffer at which to begin reading into the buffer. '
    - id: count
      type: System.Int32
      description: 'The number of characters to read. '
    return:
      type: System.Int32
      description: The total number of characters read into the buffer. This might be less than the number of characters requested if that many characters are not currently available, or it might be zero if the end of the stream is reached.
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: The buffer length minus <em>index</em> is less than <em>count</em>. -or-The number of decoded characters to read is greater than <em>count</em>. This can happen if a Unicode decoder returns fallback characters or a surrogate pair.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>buffer</em> is null. "
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<em>index</em> or <em>count</em> is negative. "
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: 'The stream is closed. '
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: 'An I/O error occurs. '
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: System.IO.BinaryReader.Read(System.Char(), System.Int32, System.Int32)
  name.vb: Read(Char(), Int32, Int32)
- uid: System.IO.BinaryReader.Read7BitEncodedInt
  commentId: M:System.IO.BinaryReader.Read7BitEncodedInt
  id: Read7BitEncodedInt
  parent: System.IO.BinaryReader
  langs:
  - csharp
  - vb
  name: Read7BitEncodedInt()
  fullName: System.IO.BinaryReader.Read7BitEncodedInt()
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/IO/BinaryReader.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Read7BitEncodedInt
    path: src/mscorlib/src/System/IO/BinaryReader.cs
    startLine: 566
  assemblies:
  - System.IO
  namespace: System.IO
  summary: Reads in a 32-bit integer in compressed format.
  syntax:
    content: protected int Read7BitEncodedInt()
    content.vb: Protected Function Read7BitEncodedInt As Integer
    return:
      type: System.Int32
      description: A 32-bit integer in compressed format.
  exceptions:
  - type: System.IO.EndOfStreamException
    commentId: T:System.IO.EndOfStreamException
    description: 'The end of the stream is reached. '
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: 'The stream is closed. '
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: 'An I/O error occurs. '
  - type: System.FormatException
    commentId: T:System.FormatException
    description: The stream is corrupted.
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: System.IO.BinaryReader.ReadBoolean
  commentId: M:System.IO.BinaryReader.ReadBoolean
  id: ReadBoolean
  parent: System.IO.BinaryReader
  langs:
  - csharp
  - vb
  name: ReadBoolean()
  fullName: System.IO.BinaryReader.ReadBoolean()
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/IO/BinaryReader.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ReadBoolean
    path: src/mscorlib/src/System/IO/BinaryReader.cs
    startLine: 130
  assemblies:
  - System.IO
  namespace: System.IO
  summary: Reads a Boolean value from the current stream and advances the current position of the stream by one byte.
  syntax:
    content: public virtual bool ReadBoolean()
    content.vb: Public Overridable Function ReadBoolean As Boolean
    return:
      type: System.Boolean
      description: true if the byte is nonzero; otherwise, false.
  exceptions:
  - type: System.IO.EndOfStreamException
    commentId: T:System.IO.EndOfStreamException
    description: 'The end of the stream is reached. '
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: 'The stream is closed. '
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: 'An I/O error occurs. '
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.IO.BinaryReader.ReadByte
  commentId: M:System.IO.BinaryReader.ReadByte
  id: ReadByte
  parent: System.IO.BinaryReader
  langs:
  - csharp
  - vb
  name: ReadByte()
  fullName: System.IO.BinaryReader.ReadByte()
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/IO/BinaryReader.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ReadByte
    path: src/mscorlib/src/System/IO/BinaryReader.cs
    startLine: 135
  assemblies:
  - System.IO
  namespace: System.IO
  summary: Reads the next byte from the current stream and advances the current position of the stream by one byte.
  syntax:
    content: public virtual byte ReadByte()
    content.vb: Public Overridable Function ReadByte As Byte
    return:
      type: System.Byte
      description: The next byte read from the current stream.
  exceptions:
  - type: System.IO.EndOfStreamException
    commentId: T:System.IO.EndOfStreamException
    description: 'The end of the stream is reached. '
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: 'The stream is closed. '
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: 'An I/O error occurs. '
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.IO.BinaryReader.ReadBytes(System.Int32)
  commentId: M:System.IO.BinaryReader.ReadBytes(System.Int32)
  id: ReadBytes(System.Int32)
  parent: System.IO.BinaryReader
  langs:
  - csharp
  - vb
  name: ReadBytes(Int32)
  fullName: System.IO.BinaryReader.ReadBytes(System.Int32)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/IO/BinaryReader.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ReadBytes
    path: src/mscorlib/src/System/IO/BinaryReader.cs
    startLine: 505
  assemblies:
  - System.IO
  namespace: System.IO
  summary: Reads the specified number of bytes from the current stream into a byte array and advances the current position by that number of bytes.
  syntax:
    content: public virtual byte[] ReadBytes(int count)
    content.vb: Public Overridable Function ReadBytes(count As Integer) As Byte()
    parameters:
    - id: count
      type: System.Int32
      description: The number of bytes to read. This value must be 0 or a non-negative number or an exception will occur.
    return:
      type: System.Byte[]
      description: A byte array containing data read from the underlying stream. This might be less than the number of bytes requested if the end of the stream is reached.
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: The number of decoded characters to read is greater than <em>count</em>. This can happen if a Unicode decoder returns fallback characters or a surrogate pair.
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: 'An I/O error occurs. '
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: 'The stream is closed. '
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<em>count</em> is negative. "
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.IO.BinaryReader.ReadChar
  commentId: M:System.IO.BinaryReader.ReadChar
  id: ReadChar
  parent: System.IO.BinaryReader
  langs:
  - csharp
  - vb
  name: ReadChar()
  fullName: System.IO.BinaryReader.ReadChar()
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/IO/BinaryReader.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ReadChar
    path: src/mscorlib/src/System/IO/BinaryReader.cs
    startLine: 151
  assemblies:
  - System.IO
  namespace: System.IO
  summary: Reads the next character from the current stream and advances the current position of the stream in accordance with the Encoding used and the specific character being read from the stream.
  syntax:
    content: public virtual char ReadChar()
    content.vb: Public Overridable Function ReadChar As Char
    return:
      type: System.Char
      description: A character read from the current stream.
  exceptions:
  - type: System.IO.EndOfStreamException
    commentId: T:System.IO.EndOfStreamException
    description: 'The end of the stream is reached. '
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: 'The stream is closed. '
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: 'An I/O error occurs. '
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: 'A surrogate character was read. '
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.IO.BinaryReader.ReadChars(System.Int32)
  commentId: M:System.IO.BinaryReader.ReadChars(System.Int32)
  id: ReadChars(System.Int32)
  parent: System.IO.BinaryReader
  langs:
  - csharp
  - vb
  name: ReadChars(Int32)
  fullName: System.IO.BinaryReader.ReadChars(System.Int32)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/IO/BinaryReader.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ReadChars
    path: src/mscorlib/src/System/IO/BinaryReader.cs
    startLine: 460
  assemblies:
  - System.IO
  namespace: System.IO
  summary: Reads the specified number of characters from the current stream, returns the data in a character array, and advances the current position in accordance with the Encoding used and the specific character being read from the stream.
  syntax:
    content: public virtual char[] ReadChars(int count)
    content.vb: Public Overridable Function ReadChars(count As Integer) As Char()
    parameters:
    - id: count
      type: System.Int32
      description: 'The number of characters to read. '
    return:
      type: System.Char[]
      description: A character array containing data read from the underlying stream. This might be less than the number of characters requested if the end of the stream is reached.
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: The number of decoded characters to read is greater than <em>count</em>. This can happen if a Unicode decoder returns fallback characters or a surrogate pair.
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: 'The stream is closed. '
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: 'An I/O error occurs. '
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<em>count</em> is negative. "
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.IO.BinaryReader.ReadDecimal
  commentId: M:System.IO.BinaryReader.ReadDecimal
  id: ReadDecimal
  parent: System.IO.BinaryReader
  langs:
  - csharp
  - vb
  name: ReadDecimal()
  fullName: System.IO.BinaryReader.ReadDecimal()
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/IO/BinaryReader.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ReadDecimal
    path: src/mscorlib/src/System/IO/BinaryReader.cs
    startLine: 230
  assemblies:
  - System.IO
  namespace: System.IO
  summary: Reads a decimal value from the current stream and advances the current position of the stream by sixteen bytes.
  syntax:
    content: public virtual decimal ReadDecimal()
    content.vb: Public Overridable Function ReadDecimal As Decimal
    return:
      type: System.Decimal
      description: A decimal value read from the current stream.
  exceptions:
  - type: System.IO.EndOfStreamException
    commentId: T:System.IO.EndOfStreamException
    description: 'The end of the stream is reached. '
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: 'The stream is closed. '
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: 'An I/O error occurs. '
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.IO.BinaryReader.ReadDouble
  commentId: M:System.IO.BinaryReader.ReadDouble
  id: ReadDouble
  parent: System.IO.BinaryReader
  langs:
  - csharp
  - vb
  name: ReadDouble()
  fullName: System.IO.BinaryReader.ReadDouble()
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/IO/BinaryReader.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ReadDouble
    path: src/mscorlib/src/System/IO/BinaryReader.cs
    startLine: 218
  assemblies:
  - System.IO
  namespace: System.IO
  summary: Reads an 8-byte floating point value from the current stream and advances the current position of the stream by eight bytes.
  syntax:
    content: public virtual double ReadDouble()
    content.vb: Public Overridable Function ReadDouble As Double
    return:
      type: System.Double
      description: An 8-byte floating point value read from the current stream.
  exceptions:
  - type: System.IO.EndOfStreamException
    commentId: T:System.IO.EndOfStreamException
    description: 'The end of the stream is reached. '
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: 'The stream is closed. '
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: 'An I/O error occurs. '
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.IO.BinaryReader.ReadInt16
  commentId: M:System.IO.BinaryReader.ReadInt16
  id: ReadInt16
  parent: System.IO.BinaryReader
  langs:
  - csharp
  - vb
  name: ReadInt16()
  fullName: System.IO.BinaryReader.ReadInt16()
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/IO/BinaryReader.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ReadInt16
    path: src/mscorlib/src/System/IO/BinaryReader.cs
    startLine: 159
  assemblies:
  - System.IO
  namespace: System.IO
  summary: Reads a 2-byte signed integer from the current stream and advances the current position of the stream by two bytes.
  syntax:
    content: public virtual short ReadInt16()
    content.vb: Public Overridable Function ReadInt16 As Short
    return:
      type: System.Int16
      description: A 2-byte signed integer read from the current stream.
  exceptions:
  - type: System.IO.EndOfStreamException
    commentId: T:System.IO.EndOfStreamException
    description: 'The end of the stream is reached. '
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: 'The stream is closed. '
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: 'An I/O error occurs. '
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.IO.BinaryReader.ReadInt32
  commentId: M:System.IO.BinaryReader.ReadInt32
  id: ReadInt32
  parent: System.IO.BinaryReader
  langs:
  - csharp
  - vb
  name: ReadInt32()
  fullName: System.IO.BinaryReader.ReadInt32()
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/IO/BinaryReader.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ReadInt32
    path: src/mscorlib/src/System/IO/BinaryReader.cs
    startLine: 170
  assemblies:
  - System.IO
  namespace: System.IO
  summary: Reads a 4-byte signed integer from the current stream and advances the current position of the stream by four bytes.
  syntax:
    content: public virtual int ReadInt32()
    content.vb: Public Overridable Function ReadInt32 As Integer
    return:
      type: System.Int32
      description: A 4-byte signed integer read from the current stream.
  exceptions:
  - type: System.IO.EndOfStreamException
    commentId: T:System.IO.EndOfStreamException
    description: 'The end of the stream is reached. '
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: 'The stream is closed. '
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: 'An I/O error occurs. '
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.IO.BinaryReader.ReadInt64
  commentId: M:System.IO.BinaryReader.ReadInt64
  id: ReadInt64
  parent: System.IO.BinaryReader
  langs:
  - csharp
  - vb
  name: ReadInt64()
  fullName: System.IO.BinaryReader.ReadInt64()
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/IO/BinaryReader.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ReadInt64
    path: src/mscorlib/src/System/IO/BinaryReader.cs
    startLine: 192
  assemblies:
  - System.IO
  namespace: System.IO
  summary: Reads an 8-byte signed integer from the current stream and advances the current position of the stream by eight bytes.
  syntax:
    content: public virtual long ReadInt64()
    content.vb: Public Overridable Function ReadInt64 As Long
    return:
      type: System.Int64
      description: An 8-byte signed integer read from the current stream.
  exceptions:
  - type: System.IO.EndOfStreamException
    commentId: T:System.IO.EndOfStreamException
    description: 'The end of the stream is reached. '
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: 'The stream is closed. '
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: 'An I/O error occurs. '
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.IO.BinaryReader.ReadSByte
  commentId: M:System.IO.BinaryReader.ReadSByte
  id: ReadSByte
  parent: System.IO.BinaryReader
  langs:
  - csharp
  - vb
  name: ReadSByte()
  fullName: System.IO.BinaryReader.ReadSByte()
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/IO/BinaryReader.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ReadSByte
    path: src/mscorlib/src/System/IO/BinaryReader.cs
    startLine: 145
  assemblies:
  - System.IO
  namespace: System.IO
  summary: Reads a signed byte from this stream and advances the current position of the stream by one byte.
  syntax:
    content: public virtual sbyte ReadSByte()
    content.vb: Public Overridable Function ReadSByte As SByte
    return:
      type: System.SByte
      description: A signed byte read from the current stream.
  exceptions:
  - type: System.IO.EndOfStreamException
    commentId: T:System.IO.EndOfStreamException
    description: 'The end of the stream is reached. '
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: 'The stream is closed. '
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: 'An I/O error occurs. '
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.IO.BinaryReader.ReadSingle
  commentId: M:System.IO.BinaryReader.ReadSingle
  id: ReadSingle
  parent: System.IO.BinaryReader
  langs:
  - csharp
  - vb
  name: ReadSingle()
  fullName: System.IO.BinaryReader.ReadSingle()
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/IO/BinaryReader.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ReadSingle
    path: src/mscorlib/src/System/IO/BinaryReader.cs
    startLine: 211
  assemblies:
  - System.IO
  namespace: System.IO
  summary: Reads a 4-byte floating point value from the current stream and advances the current position of the stream by four bytes.
  syntax:
    content: public virtual float ReadSingle()
    content.vb: Public Overridable Function ReadSingle As Single
    return:
      type: System.Single
      description: A 4-byte floating point value read from the current stream.
  exceptions:
  - type: System.IO.EndOfStreamException
    commentId: T:System.IO.EndOfStreamException
    description: 'The end of the stream is reached. '
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: 'The stream is closed. '
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: 'An I/O error occurs. '
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.IO.BinaryReader.ReadString
  commentId: M:System.IO.BinaryReader.ReadString
  id: ReadString
  parent: System.IO.BinaryReader
  langs:
  - csharp
  - vb
  name: ReadString()
  fullName: System.IO.BinaryReader.ReadString()
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/IO/BinaryReader.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ReadString
    path: src/mscorlib/src/System/IO/BinaryReader.cs
    startLine: 241
  assemblies:
  - System.IO
  namespace: System.IO
  summary: Reads a string from the current stream. The string is prefixed with the length, encoded as an integer seven bits at a time.
  syntax:
    content: public virtual string ReadString()
    content.vb: Public Overridable Function ReadString As String
    return:
      type: System.String
      description: The string being read.
  exceptions:
  - type: System.IO.EndOfStreamException
    commentId: T:System.IO.EndOfStreamException
    description: 'The end of the stream is reached. '
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: 'The stream is closed. '
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: 'An I/O error occurs. '
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.IO.BinaryReader.ReadUInt16
  commentId: M:System.IO.BinaryReader.ReadUInt16
  id: ReadUInt16
  parent: System.IO.BinaryReader
  langs:
  - csharp
  - vb
  name: ReadUInt16()
  fullName: System.IO.BinaryReader.ReadUInt16()
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/IO/BinaryReader.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ReadUInt16
    path: src/mscorlib/src/System/IO/BinaryReader.cs
    startLine: 164
  assemblies:
  - System.IO
  namespace: System.IO
  summary: Reads a 2-byte unsigned integer from the current stream using little-endian encoding and advances the position of the stream by two bytes.
  syntax:
    content: public virtual ushort ReadUInt16()
    content.vb: Public Overridable Function ReadUInt16 As UShort
    return:
      type: System.UInt16
      description: A 2-byte unsigned integer read from this stream.
  exceptions:
  - type: System.IO.EndOfStreamException
    commentId: T:System.IO.EndOfStreamException
    description: 'The end of the stream is reached. '
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: 'The stream is closed. '
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: 'An I/O error occurs. '
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.IO.BinaryReader.ReadUInt32
  commentId: M:System.IO.BinaryReader.ReadUInt32
  id: ReadUInt32
  parent: System.IO.BinaryReader
  langs:
  - csharp
  - vb
  name: ReadUInt32()
  fullName: System.IO.BinaryReader.ReadUInt32()
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/IO/BinaryReader.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ReadUInt32
    path: src/mscorlib/src/System/IO/BinaryReader.cs
    startLine: 186
  assemblies:
  - System.IO
  namespace: System.IO
  summary: Reads a 4-byte unsigned integer from the current stream and advances the position of the stream by four bytes.
  syntax:
    content: public virtual uint ReadUInt32()
    content.vb: Public Overridable Function ReadUInt32 As UInteger
    return:
      type: System.UInt32
      description: A 4-byte unsigned integer read from this stream.
  exceptions:
  - type: System.IO.EndOfStreamException
    commentId: T:System.IO.EndOfStreamException
    description: 'The end of the stream is reached. '
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: 'The stream is closed. '
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: 'An I/O error occurs. '
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.IO.BinaryReader.ReadUInt64
  commentId: M:System.IO.BinaryReader.ReadUInt64
  id: ReadUInt64
  parent: System.IO.BinaryReader
  langs:
  - csharp
  - vb
  name: ReadUInt64()
  fullName: System.IO.BinaryReader.ReadUInt64()
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/IO/BinaryReader.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ReadUInt64
    path: src/mscorlib/src/System/IO/BinaryReader.cs
    startLine: 201
  assemblies:
  - System.IO
  namespace: System.IO
  summary: Reads an 8-byte unsigned integer from the current stream and advances the position of the stream by eight bytes.
  syntax:
    content: public virtual ulong ReadUInt64()
    content.vb: Public Overridable Function ReadUInt64 As ULong
    return:
      type: System.UInt64
      description: An 8-byte unsigned integer read from this stream.
  exceptions:
  - type: System.IO.EndOfStreamException
    commentId: T:System.IO.EndOfStreamException
    description: 'The end of the stream is reached. '
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: 'An I/O error occurs. '
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: 'The stream is closed. '
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
references:
- uid: System.IO
  isExternal: false
  name: System.IO
  fullName: System.IO
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.IO.Stream
  parent: System.IO
  isExternal: false
  name: IO.Stream
  fullName: System.IO.Stream
- uid: System.Text.Encoding
  parent: System.Text
  isExternal: false
  name: Text.Encoding
  fullName: System.Text.Encoding
- uid: System.Text
  isExternal: false
  name: System.Text
  fullName: System.Text
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  fullName: System.Boolean
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  fullName: System.Int32
- uid: System.Byte[]
  isExternal: false
  name: Byte[]
  fullName: System.Byte[]
  fullname.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
  - name: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
  - name: ()
    fullName: ()
- uid: System.Char[]
  isExternal: false
  name: Char[]
  fullName: System.Char[]
  fullname.vb: System.Char()
  name.vb: Char()
  spec.csharp:
  - uid: System.Char
    name: Char
    fullName: System.Char
  - name: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Char
    name: Char
    fullName: System.Char
  - name: ()
    fullName: ()
- uid: System.Byte
  parent: System
  isExternal: false
  name: Byte
  fullName: System.Byte
- uid: System.Char
  parent: System
  isExternal: false
  name: Char
  fullName: System.Char
- uid: System.Decimal
  parent: System
  isExternal: false
  name: Decimal
  fullName: System.Decimal
- uid: System.Double
  parent: System
  isExternal: false
  name: Double
  fullName: System.Double
- uid: System.Int16
  parent: System
  isExternal: false
  name: Int16
  fullName: System.Int16
- uid: System.Int64
  parent: System
  isExternal: false
  name: Int64
  fullName: System.Int64
- uid: System.SByte
  parent: System
  isExternal: false
  name: SByte
  fullName: System.SByte
- uid: System.Single
  parent: System
  isExternal: false
  name: Single
  fullName: System.Single
- uid: System.String
  parent: System
  isExternal: false
  name: String
  fullName: System.String
- uid: System.UInt16
  parent: System
  isExternal: false
  name: UInt16
  fullName: System.UInt16
- uid: System.UInt32
  parent: System
  isExternal: false
  name: UInt32
  fullName: System.UInt32
- uid: System.UInt64
  parent: System
  isExternal: false
  name: UInt64
  fullName: System.UInt64
- uid: System.ArgumentException
  parent: System
  isExternal: false
  name: ArgumentException
  fullName: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: false
  name: ArgumentNullException
  fullName: System.ArgumentNullException
- uid: System.IO.EndOfStreamException
  isExternal: false
  name: EndOfStreamException
  fullName: System.IO.EndOfStreamException
- uid: System.IO.IOException
  parent: System.IO
  isExternal: false
  name: IOException
  fullName: System.IO.IOException
- uid: System.ArgumentOutOfRangeException
  isExternal: false
  name: ArgumentOutOfRangeException
  fullName: System.ArgumentOutOfRangeException
- uid: System.ObjectDisposedException
  isExternal: false
  name: ObjectDisposedException
  fullName: System.ObjectDisposedException
- uid: System.FormatException
  parent: System
  isExternal: false
  name: FormatException
  fullName: System.FormatException
