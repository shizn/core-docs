items:
- uid: System.Runtime.InteropServices.InterfaceTypeAttribute
  commentId: T:System.Runtime.InteropServices.InterfaceTypeAttribute
  id: InterfaceTypeAttribute
  parent: System.Runtime.InteropServices
  children:
  - System.Runtime.InteropServices.InterfaceTypeAttribute.#ctor(System.Int16)
  - System.Runtime.InteropServices.InterfaceTypeAttribute.#ctor(System.Runtime.InteropServices.ComInterfaceType)
  - System.Runtime.InteropServices.InterfaceTypeAttribute.Value
  langs:
  - csharp
  - vb
  name: InterfaceTypeAttribute
  fullName: System.Runtime.InteropServices.InterfaceTypeAttribute
  type: Class
  source:
    remote:
      path: src/System.Runtime.InteropServices/ref/System.Runtime.InteropServices.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: InterfaceTypeAttribute
    path: src/System.Runtime.InteropServices/ref/System.Runtime.InteropServices.cs
    startLine: 323
  assemblies:
  - System.Runtime.InteropServices
  namespace: System.Runtime.InteropServices
  summary: "\n<p>Indicates whether a managed interface is dual, dispatch-only, or <strong>IUnknown</strong> -only when exposed to COM.</p>\n"
  remarks: "\n<p>You can apply this attribute to interfaces.</p>\n<p>By default, the Tlbexp.exe (Type Library Exporter) exposes a managed interface to COM as a dual interface, giving you the flexibility of late binding or the performance of early binding. The <xref href=\"System.Runtime.InteropServices.ComInterfaceType\" data-throw-if-not-resolved=\"false\"></xref> enumeration enables you to override the default behavior and specify late binding only or early binding only. For example, you can apply <code>InterfaceType (ComInterfaceType.InterfaceIsIDispatch)</code> to an interface to produce metadata to restrict callers to late binding only. Although interfaces that derive from the <strong>IDispatch</strong> interface are often dual, the <strong>InterfaceIsIDispatch</strong> enumeration member allows only late-bound calls to the interface methods. This attribute has no effect on the managed view of the interface. For additional information on how interfaces are exposed to COM, see Exported Type Conversion.</p>\n<p>The Tlbimp.exe (Type Library Importer) also applies this attribute to imported, nondual interfaces; it applies the appropriate enumeration member to indicate that the interface is dispatch-only or <strong>IUnknown</strong> -only.</p>\n"
  example:
  - "\n<p>The following example shows how <strong>InterfaceTypeAttribute</strong> controls how the interface is exposed to COM.</p>Classic InterfaceTypeAttribute Example#1"
  syntax:
    content: 'public sealed class InterfaceTypeAttribute : Attribute'
    content.vb: >-
      Public NotInheritable Class InterfaceTypeAttribute
          Inherits Attribute
  seealso:
  - type: System.Runtime.InteropServices.ComInterfaceType
    commentId: T:System.Runtime.InteropServices.ComInterfaceType
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: System.Runtime.InteropServices.InterfaceTypeAttribute.#ctor(System.Int16)
  commentId: M:System.Runtime.InteropServices.InterfaceTypeAttribute.#ctor(System.Int16)
  id: '#ctor(System.Int16)'
  parent: System.Runtime.InteropServices.InterfaceTypeAttribute
  langs:
  - csharp
  - vb
  name: InterfaceTypeAttribute(Int16)
  fullName: System.Runtime.InteropServices.InterfaceTypeAttribute.InterfaceTypeAttribute(System.Int16)
  type: Constructor
  source:
    remote:
      path: src/System.Runtime.InteropServices/ref/System.Runtime.InteropServices.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Runtime.InteropServices/ref/System.Runtime.InteropServices.cs
    startLine: 326
  assemblies:
  - System.Runtime.InteropServices
  namespace: System.Runtime.InteropServices
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Runtime.InteropServices.InterfaceTypeAttribute\" data-throw-if-not-resolved=\"false\"></xref> class with the specified <xref href=\"System.Runtime.InteropServices.ComInterfaceType\" data-throw-if-not-resolved=\"false\"></xref> enumeration member.</p>\n"
  remarks: "\n<p>This constructor takes an underlying 16-bit integer that represents each <xref href=\"System.Runtime.InteropServices.ComInterfaceType\" data-throw-if-not-resolved=\"false\"></xref> enumeration member. The Tlbimp.exe (Type Library Importer) uses this constructor.</p>\n"
  syntax:
    content: public InterfaceTypeAttribute(short interfaceType)
    content.vb: Public Sub New(interfaceType As Short)
    parameters:
    - id: interfaceType
      type: System.Int16
      description: "\n<p>Describes how the interface should be exposed to COM clients. </p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Runtime.InteropServices.InterfaceTypeAttribute.#ctor(System.Runtime.InteropServices.ComInterfaceType)
  commentId: M:System.Runtime.InteropServices.InterfaceTypeAttribute.#ctor(System.Runtime.InteropServices.ComInterfaceType)
  id: '#ctor(System.Runtime.InteropServices.ComInterfaceType)'
  parent: System.Runtime.InteropServices.InterfaceTypeAttribute
  langs:
  - csharp
  - vb
  name: InterfaceTypeAttribute(ComInterfaceType)
  fullName: System.Runtime.InteropServices.InterfaceTypeAttribute.InterfaceTypeAttribute(System.Runtime.InteropServices.ComInterfaceType)
  type: Constructor
  source:
    remote:
      path: src/System.Runtime.InteropServices/ref/System.Runtime.InteropServices.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Runtime.InteropServices/ref/System.Runtime.InteropServices.cs
    startLine: 327
  assemblies:
  - System.Runtime.InteropServices
  namespace: System.Runtime.InteropServices
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Runtime.InteropServices.InterfaceTypeAttribute\" data-throw-if-not-resolved=\"false\"></xref> class with the specified <xref href=\"System.Runtime.InteropServices.ComInterfaceType\" data-throw-if-not-resolved=\"false\"></xref> enumeration member.</p>\n"
  remarks: "\n<p>For readable code that is less prone to error, always use this constructor.</p>\n"
  syntax:
    content: public InterfaceTypeAttribute(ComInterfaceType interfaceType)
    content.vb: Public Sub New(interfaceType As ComInterfaceType)
    parameters:
    - id: interfaceType
      type: System.Runtime.InteropServices.ComInterfaceType
      description: "\n<p>One of the <xref href=\"System.Runtime.InteropServices.ComInterfaceType\" data-throw-if-not-resolved=\"false\"></xref> values that describes how the interface should be exposed to COM clients. </p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Runtime.InteropServices.InterfaceTypeAttribute.Value
  commentId: P:System.Runtime.InteropServices.InterfaceTypeAttribute.Value
  id: Value
  parent: System.Runtime.InteropServices.InterfaceTypeAttribute
  langs:
  - csharp
  - vb
  name: Value
  fullName: System.Runtime.InteropServices.InterfaceTypeAttribute.Value
  type: Property
  source:
    remote:
      path: src/System.Runtime.InteropServices/ref/System.Runtime.InteropServices.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Value
    path: src/System.Runtime.InteropServices/ref/System.Runtime.InteropServices.cs
    startLine: 328
  assemblies:
  - System.Runtime.InteropServices
  namespace: System.Runtime.InteropServices
  summary: "\n<p>Gets the <xref href=\"System.Runtime.InteropServices.ComInterfaceType\" data-throw-if-not-resolved=\"false\"></xref> value that describes how the interface should be exposed to COM.</p>\n"
  syntax:
    content: public ComInterfaceType Value { get; }
    content.vb: Public ReadOnly Property Value As ComInterfaceType
    parameters: []
    return:
      type: System.Runtime.InteropServices.ComInterfaceType
      description: "\n<p>The <xref href=\"System.Runtime.InteropServices.ComInterfaceType\" data-throw-if-not-resolved=\"false\"></xref> value that describes how the interface should be exposed to COM.</p>\n"
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: System.Runtime.InteropServices
  isExternal: false
  name: System.Runtime.InteropServices
  fullName: System.Runtime.InteropServices
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Int16
  parent: System
  isExternal: false
  name: Int16
  fullName: System.Int16
- uid: System.Runtime.InteropServices.ComInterfaceType
  parent: System.Runtime.InteropServices
  isExternal: false
  name: ComInterfaceType
  fullName: System.Runtime.InteropServices.ComInterfaceType
