items:
- uid: System.Net.Sockets.TcpClient
  commentId: T:System.Net.Sockets.TcpClient
  id: TcpClient
  parent: System.Net.Sockets
  children:
  - System.Net.Sockets.TcpClient.#ctor
  - System.Net.Sockets.TcpClient.#ctor(System.Net.Sockets.AddressFamily)
  - System.Net.Sockets.TcpClient.Active
  - System.Net.Sockets.TcpClient.Available
  - System.Net.Sockets.TcpClient.Client
  - System.Net.Sockets.TcpClient.ConnectAsync(System.Net.IPAddress,System.Int32)
  - System.Net.Sockets.TcpClient.ConnectAsync(System.Net.IPAddress[],System.Int32)
  - System.Net.Sockets.TcpClient.ConnectAsync(System.String,System.Int32)
  - System.Net.Sockets.TcpClient.Connected
  - System.Net.Sockets.TcpClient.Dispose
  - System.Net.Sockets.TcpClient.Dispose(System.Boolean)
  - System.Net.Sockets.TcpClient.ExclusiveAddressUse
  - System.Net.Sockets.TcpClient.Finalize
  - System.Net.Sockets.TcpClient.GetStream
  - System.Net.Sockets.TcpClient.LingerState
  - System.Net.Sockets.TcpClient.NoDelay
  - System.Net.Sockets.TcpClient.ReceiveBufferSize
  - System.Net.Sockets.TcpClient.ReceiveTimeout
  - System.Net.Sockets.TcpClient.SendBufferSize
  - System.Net.Sockets.TcpClient.SendTimeout
  langs:
  - csharp
  - vb
  name: TcpClient
  fullName: System.Net.Sockets.TcpClient
  type: Class
  source:
    remote:
      path: src/System.Net.Sockets/src/System/Net/Sockets/TCPClient.Windows.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: TcpClient
    path: src/System.Net.Sockets/src/System/Net/Sockets/TCPClient.Windows.cs
    startLine: 8
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  syntax:
    content: 'public class TcpClient : IDisposable'
    content.vb: >-
      Public Class TcpClient
          Inherits IDisposable
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: System.Net.Sockets.TcpClient.#ctor
  commentId: M:System.Net.Sockets.TcpClient.#ctor
  id: '#ctor'
  parent: System.Net.Sockets.TcpClient
  langs:
  - csharp
  - vb
  name: TcpClient()
  fullName: System.Net.Sockets.TcpClient.TcpClient()
  type: Constructor
  source:
    remote:
      path: src/System.Net.Sockets/src/System/Net/Sockets/TCPClient.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Net.Sockets/src/System/Net/Sockets/TCPClient.cs
    startLine: 21
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  syntax:
    content: public TcpClient()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Net.Sockets.TcpClient.#ctor(System.Net.Sockets.AddressFamily)
  commentId: M:System.Net.Sockets.TcpClient.#ctor(System.Net.Sockets.AddressFamily)
  id: '#ctor(System.Net.Sockets.AddressFamily)'
  parent: System.Net.Sockets.TcpClient
  langs:
  - csharp
  - vb
  name: TcpClient(AddressFamily)
  fullName: System.Net.Sockets.TcpClient.TcpClient(System.Net.Sockets.AddressFamily)
  type: Constructor
  source:
    remote:
      path: src/System.Net.Sockets/ref/System.Net.Sockets.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Net.Sockets/ref/System.Net.Sockets.cs
    startLine: 419
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  syntax:
    content: public TcpClient(AddressFamily family)
    content.vb: Public Sub New(family As AddressFamily)
    parameters:
    - id: family
      type: System.Net.Sockets.AddressFamily
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Net.Sockets.TcpClient.Active
  commentId: P:System.Net.Sockets.TcpClient.Active
  id: Active
  parent: System.Net.Sockets.TcpClient
  langs:
  - csharp
  - vb
  name: Active
  fullName: System.Net.Sockets.TcpClient.Active
  type: Property
  source:
    remote:
      path: src/System.Net.Sockets/src/System/Net/Sockets/TCPClient.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Active
    path: src/System.Net.Sockets/src/System/Net/Sockets/TCPClient.cs
    startLine: 66
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  syntax:
    content: protected bool Active { get; set; }
    content.vb: Protected Property Active As Boolean
    parameters: []
    return:
      type: System.Boolean
  modifiers.csharp:
  - protected
  - get
  - set
  modifiers.vb:
  - Protected
- uid: System.Net.Sockets.TcpClient.Available
  commentId: P:System.Net.Sockets.TcpClient.Available
  id: Available
  parent: System.Net.Sockets.TcpClient
  langs:
  - csharp
  - vb
  name: Available
  fullName: System.Net.Sockets.TcpClient.Available
  type: Property
  source:
    remote:
      path: src/System.Net.Sockets/src/System/Net/Sockets/TCPClient.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Available
    path: src/System.Net.Sockets/src/System/Net/Sockets/TCPClient.cs
    startLine: 72
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  syntax:
    content: public int Available { get; }
    content.vb: Public ReadOnly Property Available As Integer
    parameters: []
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Net.Sockets.TcpClient.Client
  commentId: P:System.Net.Sockets.TcpClient.Client
  id: Client
  parent: System.Net.Sockets.TcpClient
  langs:
  - csharp
  - vb
  name: Client
  fullName: System.Net.Sockets.TcpClient.Client
  type: Property
  source:
    remote:
      path: src/System.Net.Sockets/src/System/Net/Sockets/TCPClient.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Client
    path: src/System.Net.Sockets/src/System/Net/Sockets/TCPClient.cs
    startLine: 75
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  syntax:
    content: public Socket Client { get; set; }
    content.vb: Public Property Client As Socket
    parameters: []
    return:
      type: System.Net.Sockets.Socket
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Net.Sockets.TcpClient.Connected
  commentId: P:System.Net.Sockets.TcpClient.Connected
  id: Connected
  parent: System.Net.Sockets.TcpClient
  langs:
  - csharp
  - vb
  name: Connected
  fullName: System.Net.Sockets.TcpClient.Connected
  type: Property
  source:
    remote:
      path: src/System.Net.Sockets/src/System/Net/Sockets/TCPClient.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Connected
    path: src/System.Net.Sockets/src/System/Net/Sockets/TCPClient.cs
    startLine: 90
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  syntax:
    content: public bool Connected { get; }
    content.vb: Public ReadOnly Property Connected As Boolean
    parameters: []
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Net.Sockets.TcpClient.ExclusiveAddressUse
  commentId: P:System.Net.Sockets.TcpClient.ExclusiveAddressUse
  id: ExclusiveAddressUse
  parent: System.Net.Sockets.TcpClient
  langs:
  - csharp
  - vb
  name: ExclusiveAddressUse
  fullName: System.Net.Sockets.TcpClient.ExclusiveAddressUse
  type: Property
  source:
    remote:
      path: src/System.Net.Sockets/src/System/Net/Sockets/TCPClient.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ExclusiveAddressUse
    path: src/System.Net.Sockets/src/System/Net/Sockets/TCPClient.cs
    startLine: 92
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  syntax:
    content: public bool ExclusiveAddressUse { get; set; }
    content.vb: Public Property ExclusiveAddressUse As Boolean
    parameters: []
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Net.Sockets.TcpClient.LingerState
  commentId: P:System.Net.Sockets.TcpClient.LingerState
  id: LingerState
  parent: System.Net.Sockets.TcpClient
  langs:
  - csharp
  - vb
  name: LingerState
  fullName: System.Net.Sockets.TcpClient.LingerState
  type: Property
  source:
    remote:
      path: src/System.Net.Sockets/src/System/Net/Sockets/TCPClient.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: LingerState
    path: src/System.Net.Sockets/src/System/Net/Sockets/TCPClient.cs
    startLine: 282
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  syntax:
    content: public LingerOption LingerState { get; set; }
    content.vb: Public Property LingerState As LingerOption
    parameters: []
    return:
      type: System.Net.Sockets.LingerOption
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Net.Sockets.TcpClient.NoDelay
  commentId: P:System.Net.Sockets.TcpClient.NoDelay
  id: NoDelay
  parent: System.Net.Sockets.TcpClient
  langs:
  - csharp
  - vb
  name: NoDelay
  fullName: System.Net.Sockets.TcpClient.NoDelay
  type: Property
  source:
    remote:
      path: src/System.Net.Sockets/src/System/Net/Sockets/TCPClient.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: NoDelay
    path: src/System.Net.Sockets/src/System/Net/Sockets/TCPClient.cs
    startLine: 289
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  syntax:
    content: public bool NoDelay { get; set; }
    content.vb: Public Property NoDelay As Boolean
    parameters: []
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Net.Sockets.TcpClient.ReceiveBufferSize
  commentId: P:System.Net.Sockets.TcpClient.ReceiveBufferSize
  id: ReceiveBufferSize
  parent: System.Net.Sockets.TcpClient
  langs:
  - csharp
  - vb
  name: ReceiveBufferSize
  fullName: System.Net.Sockets.TcpClient.ReceiveBufferSize
  type: Property
  source:
    remote:
      path: src/System.Net.Sockets/src/System/Net/Sockets/TCPClient.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ReceiveBufferSize
    path: src/System.Net.Sockets/src/System/Net/Sockets/TCPClient.cs
    startLine: 254
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  syntax:
    content: public int ReceiveBufferSize { get; set; }
    content.vb: Public Property ReceiveBufferSize As Integer
    parameters: []
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Net.Sockets.TcpClient.ReceiveTimeout
  commentId: P:System.Net.Sockets.TcpClient.ReceiveTimeout
  id: ReceiveTimeout
  parent: System.Net.Sockets.TcpClient
  langs:
  - csharp
  - vb
  name: ReceiveTimeout
  fullName: System.Net.Sockets.TcpClient.ReceiveTimeout
  type: Property
  source:
    remote:
      path: src/System.Net.Sockets/src/System/Net/Sockets/TCPClient.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ReceiveTimeout
    path: src/System.Net.Sockets/src/System/Net/Sockets/TCPClient.cs
    startLine: 268
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  syntax:
    content: public int ReceiveTimeout { get; set; }
    content.vb: Public Property ReceiveTimeout As Integer
    parameters: []
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Net.Sockets.TcpClient.SendBufferSize
  commentId: P:System.Net.Sockets.TcpClient.SendBufferSize
  id: SendBufferSize
  parent: System.Net.Sockets.TcpClient
  langs:
  - csharp
  - vb
  name: SendBufferSize
  fullName: System.Net.Sockets.TcpClient.SendBufferSize
  type: Property
  source:
    remote:
      path: src/System.Net.Sockets/src/System/Net/Sockets/TCPClient.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: SendBufferSize
    path: src/System.Net.Sockets/src/System/Net/Sockets/TCPClient.cs
    startLine: 261
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  syntax:
    content: public int SendBufferSize { get; set; }
    content.vb: Public Property SendBufferSize As Integer
    parameters: []
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Net.Sockets.TcpClient.SendTimeout
  commentId: P:System.Net.Sockets.TcpClient.SendTimeout
  id: SendTimeout
  parent: System.Net.Sockets.TcpClient
  langs:
  - csharp
  - vb
  name: SendTimeout
  fullName: System.Net.Sockets.TcpClient.SendTimeout
  type: Property
  source:
    remote:
      path: src/System.Net.Sockets/src/System/Net/Sockets/TCPClient.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: SendTimeout
    path: src/System.Net.Sockets/src/System/Net/Sockets/TCPClient.cs
    startLine: 275
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  syntax:
    content: public int SendTimeout { get; set; }
    content.vb: Public Property SendTimeout As Integer
    parameters: []
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Net.Sockets.TcpClient.ConnectAsync(System.Net.IPAddress,System.Int32)
  commentId: M:System.Net.Sockets.TcpClient.ConnectAsync(System.Net.IPAddress,System.Int32)
  id: ConnectAsync(System.Net.IPAddress,System.Int32)
  parent: System.Net.Sockets.TcpClient
  langs:
  - csharp
  - vb
  name: ConnectAsync(IPAddress, Int32)
  fullName: System.Net.Sockets.TcpClient.ConnectAsync(System.Net.IPAddress, System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Net.Sockets/ref/System.Net.Sockets.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ConnectAsync
    path: src/System.Net.Sockets/ref/System.Net.Sockets.cs
    startLine: 431
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  syntax:
    content: public Threading.Tasks.Task ConnectAsync(IPAddress address, int port)
    content.vb: Public Function ConnectAsync(address As IPAddress, port As Integer) As Threading.Tasks.Task
    parameters:
    - id: address
      type: System.Net.IPAddress
    - id: port
      type: System.Int32
    return:
      type: System.Threading.Tasks.Task
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Net.Sockets.TcpClient.ConnectAsync(System.Net.IPAddress[],System.Int32)
  commentId: M:System.Net.Sockets.TcpClient.ConnectAsync(System.Net.IPAddress[],System.Int32)
  id: ConnectAsync(System.Net.IPAddress[],System.Int32)
  parent: System.Net.Sockets.TcpClient
  langs:
  - csharp
  - vb
  name: ConnectAsync(IPAddress[], Int32)
  fullName: System.Net.Sockets.TcpClient.ConnectAsync(System.Net.IPAddress[], System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Net.Sockets/ref/System.Net.Sockets.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ConnectAsync
    path: src/System.Net.Sockets/ref/System.Net.Sockets.cs
    startLine: 432
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  syntax:
    content: public Threading.Tasks.Task ConnectAsync(IPAddress[] addresses, int port)
    content.vb: Public Function ConnectAsync(addresses As IPAddress(), port As Integer) As Threading.Tasks.Task
    parameters:
    - id: addresses
      type: System.Net.IPAddress[]
    - id: port
      type: System.Int32
    return:
      type: System.Threading.Tasks.Task
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Net.Sockets.TcpClient.ConnectAsync(System.Net.IPAddress(), System.Int32)
  name.vb: ConnectAsync(IPAddress(), Int32)
- uid: System.Net.Sockets.TcpClient.ConnectAsync(System.String,System.Int32)
  commentId: M:System.Net.Sockets.TcpClient.ConnectAsync(System.String,System.Int32)
  id: ConnectAsync(System.String,System.Int32)
  parent: System.Net.Sockets.TcpClient
  langs:
  - csharp
  - vb
  name: ConnectAsync(String, Int32)
  fullName: System.Net.Sockets.TcpClient.ConnectAsync(System.String, System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Net.Sockets/src/System/Net/Sockets/TCPClient.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ConnectAsync
    path: src/System.Net.Sockets/src/System/Net/Sockets/TCPClient.cs
    startLine: 108
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  syntax:
    content: public Task ConnectAsync(string host, int port)
    content.vb: Public Function ConnectAsync(host As String, port As Integer) As Task
    parameters:
    - id: host
      type: System.String
    - id: port
      type: System.Int32
    return:
      type: Task
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Net.Sockets.TcpClient.Dispose
  commentId: M:System.Net.Sockets.TcpClient.Dispose
  id: Dispose
  parent: System.Net.Sockets.TcpClient
  langs:
  - csharp
  - vb
  name: Dispose()
  fullName: System.Net.Sockets.TcpClient.Dispose()
  type: Method
  source:
    remote:
      path: src/System.Net.Sockets/src/System/Net/Sockets/TCPClient.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Dispose
    path: src/System.Net.Sockets/src/System/Net/Sockets/TCPClient.cs
    startLine: 235
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  syntax:
    content: public void Dispose()
    content.vb: Public Sub Dispose
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Net.Sockets.TcpClient.Dispose(System.Boolean)
  commentId: M:System.Net.Sockets.TcpClient.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Net.Sockets.TcpClient
  langs:
  - csharp
  - vb
  name: Dispose(Boolean)
  fullName: System.Net.Sockets.TcpClient.Dispose(System.Boolean)
  type: Method
  source:
    remote:
      path: src/System.Net.Sockets/src/System/Net/Sockets/TCPClient.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Dispose
    path: src/System.Net.Sockets/src/System/Net/Sockets/TCPClient.cs
    startLine: 180
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  syntax:
    content: protected virtual void Dispose(bool disposing)
    content.vb: Protected Overridable Sub Dispose(disposing As Boolean)
    parameters:
    - id: disposing
      type: System.Boolean
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: System.Net.Sockets.TcpClient.Finalize
  commentId: M:System.Net.Sockets.TcpClient.Finalize
  id: Finalize
  parent: System.Net.Sockets.TcpClient
  langs:
  - csharp
  - vb
  name: Finalize()
  fullName: System.Net.Sockets.TcpClient.Finalize()
  type: Method
  source:
    remote:
      path: src/System.Net.Sockets/src/System/Net/Sockets/TCPClient.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Finalize
    path: src/System.Net.Sockets/src/System/Net/Sockets/TCPClient.cs
    startLine: 240
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  syntax:
    content: protected void Finalize()
    content.vb: Protected Sub Finalize
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: System.Net.Sockets.TcpClient.GetStream
  commentId: M:System.Net.Sockets.TcpClient.GetStream
  id: GetStream
  parent: System.Net.Sockets.TcpClient
  langs:
  - csharp
  - vb
  name: GetStream()
  fullName: System.Net.Sockets.TcpClient.GetStream()
  type: Method
  source:
    remote:
      path: src/System.Net.Sockets/src/System/Net/Sockets/TCPClient.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetStream
    path: src/System.Net.Sockets/src/System/Net/Sockets/TCPClient.cs
    startLine: 150
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  syntax:
    content: public NetworkStream GetStream()
    content.vb: Public Function GetStream As NetworkStream
    return:
      type: System.Net.Sockets.NetworkStream
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: System.Net.Sockets
  isExternal: false
  name: System.Net.Sockets
  fullName: System.Net.Sockets
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Net.Sockets.AddressFamily
  parent: System.Net.Sockets
  isExternal: false
  name: AddressFamily
  fullName: System.Net.Sockets.AddressFamily
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  fullName: System.Boolean
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  fullName: System.Int32
- uid: System.Net.Sockets.Socket
  parent: System.Net.Sockets
  isExternal: false
  name: Socket
  fullName: System.Net.Sockets.Socket
- uid: System.Net.Sockets.LingerOption
  parent: System.Net.Sockets
  isExternal: false
  name: LingerOption
  fullName: System.Net.Sockets.LingerOption
- uid: System.Net.IPAddress
  parent: System.Net
  isExternal: false
  name: IPAddress
  fullName: System.Net.IPAddress
- uid: System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: false
  name: Threading.Tasks.Task
  fullName: System.Threading.Tasks.Task
- uid: System.Net
  isExternal: false
  name: System.Net
  fullName: System.Net
- uid: System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: System.Net.IPAddress[]
  isExternal: false
  name: IPAddress[]
  fullName: System.Net.IPAddress[]
  fullname.vb: System.Net.IPAddress()
  name.vb: IPAddress()
  spec.csharp:
  - uid: System.Net.IPAddress
    name: IPAddress
    fullName: System.Net.IPAddress
  - name: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Net.IPAddress
    name: IPAddress
    fullName: System.Net.IPAddress
  - name: ()
    fullName: ()
- uid: System.String
  parent: System
  isExternal: false
  name: String
  fullName: System.String
- uid: System.Net.Sockets.NetworkStream
  parent: System.Net.Sockets
  isExternal: false
  name: NetworkStream
  fullName: System.Net.Sockets.NetworkStream
