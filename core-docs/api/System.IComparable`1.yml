items:
- uid: System.IComparable`1
  commentId: T:System.IComparable`1
  id: IComparable`1
  parent: System
  children:
  - System.IComparable`1.CompareTo(`0)
  langs:
  - csharp
  - vb
  name: IComparable<T>
  fullName: System.IComparable<T>
  type: Interface
  source:
    remote:
      path: src/mscorlib/src/System/IComparable.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: IComparable
    path: src/mscorlib/src/System/IComparable.cs
    startLine: 27
  assemblies:
  - System.Runtime
  namespace: System
  summary: Defines a generalized comparison method that a value type or class implements to create a type-specific comparison method for ordering or sorting its instances.
  syntax:
    content: public interface IComparable<in T>
    content.vb: Public Interface IComparable(Of In T)
    typeParameters:
    - id: T
      description: The type of object to compare. This type parameter is contravariant. That is, you can use either the type you specified or any type that is less derived. For more information about covariance and contravariance, see Covariance and Contravariance in Generics.
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
  fullName.vb: System.IComparable(Of T)
  name.vb: IComparable(Of T)
- uid: System.IComparable`1.CompareTo(`0)
  commentId: M:System.IComparable`1.CompareTo(`0)
  id: CompareTo(`0)
  parent: System.IComparable`1
  langs:
  - csharp
  - vb
  name: CompareTo(T)
  fullName: System.IComparable<T>.CompareTo(T)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/IComparable.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: CompareTo
    path: src/mscorlib/src/System/IComparable.cs
    startLine: 36
  assemblies:
  - System.Runtime
  namespace: System
  summary: 'Compares the current instance with another object of the same type and returns an integer that indicates whether the current instance precedes, follows, or occurs in the same position in the sort order as the other object. '
  syntax:
    content: int CompareTo(T other)
    content.vb: Function CompareTo(other As T) As Integer
    parameters:
    - id: other
      type: '{T}'
      description: 'An object to compare with this instance. '
    return:
      type: System.Int32
      description: 'A value that indicates the relative order of the objects being compared. The return value has these meanings: Value Meaning Less than zero This instance precedes <em>other</em> in the sort order.  Zero This instance occurs in the same position in the sort order as <em>other</em>. Greater than zero This instance follows <em>other</em> in the sort order. '
  fullName.vb: System.IComparable(Of T).CompareTo(T)
references:
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: '{T}'
  isExternal: false
  name: T
  fullName: T
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  fullName: System.Int32
