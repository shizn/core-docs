items:
- uid: System.IO.IsolatedStorage.IsolatedStorageFile
  commentId: T:System.IO.IsolatedStorage.IsolatedStorageFile
  id: IsolatedStorageFile
  parent: System.IO.IsolatedStorage
  children:
  - System.IO.IsolatedStorage.IsolatedStorageFile.CopyFile(System.String,System.String)
  - System.IO.IsolatedStorage.IsolatedStorageFile.CopyFile(System.String,System.String,System.Boolean)
  - System.IO.IsolatedStorage.IsolatedStorageFile.CreateDirectory(System.String)
  - System.IO.IsolatedStorage.IsolatedStorageFile.CreateFile(System.String)
  - System.IO.IsolatedStorage.IsolatedStorageFile.DeleteDirectory(System.String)
  - System.IO.IsolatedStorage.IsolatedStorageFile.DeleteFile(System.String)
  - System.IO.IsolatedStorage.IsolatedStorageFile.DirectoryExists(System.String)
  - System.IO.IsolatedStorage.IsolatedStorageFile.Dispose
  - System.IO.IsolatedStorage.IsolatedStorageFile.FileExists(System.String)
  - System.IO.IsolatedStorage.IsolatedStorageFile.GetCreationTime(System.String)
  - System.IO.IsolatedStorage.IsolatedStorageFile.GetDirectoryNames
  - System.IO.IsolatedStorage.IsolatedStorageFile.GetDirectoryNames(System.String)
  - System.IO.IsolatedStorage.IsolatedStorageFile.GetFileNames
  - System.IO.IsolatedStorage.IsolatedStorageFile.GetFileNames(System.String)
  - System.IO.IsolatedStorage.IsolatedStorageFile.GetLastAccessTime(System.String)
  - System.IO.IsolatedStorage.IsolatedStorageFile.GetLastWriteTime(System.String)
  - System.IO.IsolatedStorage.IsolatedStorageFile.GetUserStoreForApplication
  - System.IO.IsolatedStorage.IsolatedStorageFile.MoveDirectory(System.String,System.String)
  - System.IO.IsolatedStorage.IsolatedStorageFile.MoveFile(System.String,System.String)
  - System.IO.IsolatedStorage.IsolatedStorageFile.OpenFile(System.String,System.IO.FileMode)
  - System.IO.IsolatedStorage.IsolatedStorageFile.OpenFile(System.String,System.IO.FileMode,System.IO.FileAccess)
  - System.IO.IsolatedStorage.IsolatedStorageFile.OpenFile(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)
  langs:
  - csharp
  - vb
  name: IsolatedStorageFile
  fullName: System.IO.IsolatedStorage.IsolatedStorageFile
  type: Class
  source:
    remote:
      path: src/System.IO.IsolatedStorage/src/System/IO/IsolatedStorage/IsolatedStorageFile.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IsolatedStorageFile
    path: src/System.IO.IsolatedStorage/src/System/IO/IsolatedStorage/IsolatedStorageFile.cs
    startLine: 16
  assemblies:
  - System.IO.IsolatedStorage
  namespace: System.IO.IsolatedStorage
  summary: "\n<p>Represents an isolated storage area containing files and directories. </p>\n"
  remarks: "\n<p>This object corresponds to a specific isolated storage scope, where files represented by <xref href=\"System.IO.IsolatedStorage.IsolatedStorageFileStream\" data-throw-if-not-resolved=\"false\"></xref> objects exist. Applications can use isolated storage to save data in their own isolated portion of the file system, without having to specify a particular path within the file system. Since isolated stores are scoped to particular assemblies, most other managed code will not be able to access your code's data (highly trusted managed code and administration tools can access stores from other assemblies). Unmanaged code can access any isolated stores. </p>\n<p>For more information, see Isolated Storage.</p>\n<p>This type implements the <xref href=\"System.IDisposable\" data-throw-if-not-resolved=\"false\"></xref> interface. When you have finished using the type, you should dispose of it either directly or indirectly. To dispose of the type directly, call its <xref href=\"System.IDisposable.Dispose\" data-throw-if-not-resolved=\"false\"></xref> method in a <strong>try</strong>/<strong>catch</strong> block. To dispose of it indirectly, use a language construct such as <strong>using</strong> (in C#) or <strong>Using</strong> (in Visual Basic). For more information, see the “Using an Object that Implements IDisposable” section in the <xref href=\"System.IDisposable\" data-throw-if-not-resolved=\"false\"></xref> interface topic.</p>\n<p>Isolated storage is not available for Windows 8.x Store apps. Instead, use the application data classes in the <strong>Windows.Storage</strong> namespaces included in the Windows Runtime API to store local data and files. For more information, see <see href=\"http://go.microsoft.com/fwlink/?LinkId=229175\">Application data</see> in the Windows Dev Center.</p>\n"
  example:
  - "\n<p>The following code example illustrates how to create files and directories in an isolated store. First, a store that is isolated by user, domain, and assembly is retrieved and placed in the <code>isoStore</code> variable. The <xref href=\"System.IO.IsolatedStorage.IsolatedStorageFile.CreateDirectory(System.String)\" data-throw-if-not-resolved=\"false\"></xref> method is then called to create directories, and two instances of the <xref href=\"System.IO.IsolatedStorage.IsolatedStorageFileStream\" data-throw-if-not-resolved=\"false\"></xref> class create files in these directories.</p>Conceptual.IsolatedStorage#1"
  syntax:
    content: 'public sealed class IsolatedStorageFile : IDisposable'
    content.vb: >-
      Public NotInheritable Class IsolatedStorageFile
          Inherits IDisposable
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: System.IO.IsolatedStorage.IsolatedStorageFile.CopyFile(System.String,System.String)
  commentId: M:System.IO.IsolatedStorage.IsolatedStorageFile.CopyFile(System.String,System.String)
  id: CopyFile(System.String,System.String)
  parent: System.IO.IsolatedStorage.IsolatedStorageFile
  langs:
  - csharp
  - vb
  name: CopyFile(String, String)
  fullName: System.IO.IsolatedStorage.IsolatedStorageFile.CopyFile(System.String, System.String)
  type: Method
  source:
    remote:
      path: src/System.IO.IsolatedStorage/src/System/IO/IsolatedStorage/IsolatedStorageFile.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CopyFile
    path: src/System.IO.IsolatedStorage/src/System/IO/IsolatedStorage/IsolatedStorageFile.cs
    startLine: 344
  assemblies:
  - System.IO.IsolatedStorage
  namespace: System.IO.IsolatedStorage
  summary: "\n<p>Copies an existing file to a new file.  </p>\n"
  remarks: "\n<p>\n<em>sourceFileName</em> and <em>destinationFileName</em> must specify different file names. Use the <xref href=\"System.IO.IsolatedStorage.IsolatedStorageFile.CopyFile(System.String,System.String,System.Boolean)\" data-throw-if-not-resolved=\"false\"></xref> method overload to overwrite an existing file.</p>\n"
  syntax:
    content: public void CopyFile(string sourceFileName, string destinationFileName)
    content.vb: Public Sub CopyFile(sourceFileName As String, destinationFileName As String)
    parameters:
    - id: sourceFileName
      type: System.String
    - id: destinationFileName
      type: System.String
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<p>\n<em>sourceFileName </em>or<em> destinationFileName </em>is a zero-length string, contains only white space, or contains one or more invalid characters defined by the <xref href=\"System.IO.Path.GetInvalidPathChars\" data-throw-if-not-resolved=\"false\"></xref> method.</p>\n"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>sourceFileName </em>or<em> destinationFileName </em>is <strong>null</strong>.</p>\n"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "\n<p>The isolated store has been closed.</p>\n"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "\n<p>The isolated store has been disposed.</p>\n"
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "\n<p>\n<em>sourceFileName </em>was not found.</p>\n"
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "\n<p>\n<em>sourceFileName </em>was not found.</p>\n"
  - type: System.IO.IsolatedStorage.IsolatedStorageException
    commentId: T:System.IO.IsolatedStorage.IsolatedStorageException
    description: "\n<p>The isolated store has been removed.</p>\n<p>-or-</p>\n<p>Isolated storage is disabled.</p>\n<p>-or-</p>\n<p>\n<em>destinationFileName</em> exists.</p>\n<p>-or-</p>\n<p>An I/O error has occurred.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.IO.IsolatedStorage.IsolatedStorageFile.CopyFile(System.String,System.String,System.Boolean)
  commentId: M:System.IO.IsolatedStorage.IsolatedStorageFile.CopyFile(System.String,System.String,System.Boolean)
  id: CopyFile(System.String,System.String,System.Boolean)
  parent: System.IO.IsolatedStorage.IsolatedStorageFile
  langs:
  - csharp
  - vb
  name: CopyFile(String, String, Boolean)
  fullName: System.IO.IsolatedStorage.IsolatedStorageFile.CopyFile(System.String, System.String, System.Boolean)
  type: Method
  source:
    remote:
      path: src/System.IO.IsolatedStorage/src/System/IO/IsolatedStorage/IsolatedStorageFile.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CopyFile
    path: src/System.IO.IsolatedStorage/src/System/IO/IsolatedStorage/IsolatedStorageFile.cs
    startLine: 367
  assemblies:
  - System.IO.IsolatedStorage
  namespace: System.IO.IsolatedStorage
  summary: "\n<p>Copies an existing file to a new file, and optionally overwrites an existing file.</p>\n"
  remarks: "\n<p>\n<em>sourceFileName</em> and <em>destinationFileName</em> can have the same file name if <em>overwrite</em> is <strong>true</strong>.</p>\n"
  syntax:
    content: public void CopyFile(string sourceFileName, string destinationFileName, bool overwrite)
    content.vb: Public Sub CopyFile(sourceFileName As String, destinationFileName As String, overwrite As Boolean)
    parameters:
    - id: sourceFileName
      type: System.String
    - id: destinationFileName
      type: System.String
    - id: overwrite
      type: System.Boolean
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<p>\n<em>sourceFileName </em>or<em> destinationFileName </em>is a zero-length string, contains only white space, or contains one or more invalid characters defined by the <xref href=\"System.IO.Path.GetInvalidPathChars\" data-throw-if-not-resolved=\"false\"></xref> method.</p>\n"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>sourceFileName </em>or<em> destinationFileName </em>is <strong>null</strong>.</p>\n"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "\n<p>The isolated store has been closed.</p>\n"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "\n<p>The isolated store has been disposed.</p>\n"
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "\n<p>\n<em>sourceFileName </em>was not found.</p>\n"
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "\n<p>\n<em>sourceFileName </em>was not found.</p>\n"
  - type: System.IO.IsolatedStorage.IsolatedStorageException
    commentId: T:System.IO.IsolatedStorage.IsolatedStorageException
    description: "\n<p>The isolated store has been removed.</p>\n<p>-or-</p>\n<p>Isolated storage is disabled.</p>\n<p>-or-</p>\n<p>An I/O error has occurred.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.IO.IsolatedStorage.IsolatedStorageFile.CreateDirectory(System.String)
  commentId: M:System.IO.IsolatedStorage.IsolatedStorageFile.CreateDirectory(System.String)
  id: CreateDirectory(System.String)
  parent: System.IO.IsolatedStorage.IsolatedStorageFile
  langs:
  - csharp
  - vb
  name: CreateDirectory(String)
  fullName: System.IO.IsolatedStorage.IsolatedStorageFile.CreateDirectory(System.String)
  type: Method
  source:
    remote:
      path: src/System.IO.IsolatedStorage/ref/System.IO.IsolatedStorage.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CreateDirectory
    path: src/System.IO.IsolatedStorage/ref/System.IO.IsolatedStorage.cs
    startLine: 21
  assemblies:
  - System.IO.IsolatedStorage
  namespace: System.IO.IsolatedStorage
  summary: "\n<p>Creates a directory in the isolated storage scope.</p>\n"
  remarks: "\n<p>The created directory initially contains no files. If the directory already exists, the <xref href=\"System.IO.IsolatedStorage.IsolatedStorageFile.CreateDirectory(System.String)\" data-throw-if-not-resolved=\"false\"></xref> method returns without creating a new directory. The How to: Create Files and Directories in Isolated Storage example demonstrates the use of the <xref href=\"System.IO.IsolatedStorage.IsolatedStorageFile.CreateDirectory(System.String)\" data-throw-if-not-resolved=\"false\"></xref> method </p>\n"
  example:
  - "\n<p>The following code example demonstrates the <xref href=\"System.IO.IsolatedStorage.IsolatedStorageFile.CreateDirectory(System.String)\" data-throw-if-not-resolved=\"false\"></xref> method. For the complete context of this example, see the <xref href=\"System.IO.IsolatedStorage.IsolatedStorageFile\" data-throw-if-not-resolved=\"false\"></xref> overview.</p>System.IO.IsolatedStorage.IsolatedStorage#7"
  syntax:
    content: public void CreateDirectory(string dir)
    content.vb: Public Sub CreateDirectory(dir As String)
    parameters:
    - id: dir
      type: System.String
      description: "\n<p>The relative path of the directory to create within the isolated storage scope. </p>\n"
  exceptions:
  - type: System.IO.IsolatedStorage.IsolatedStorageException
    commentId: T:System.IO.IsolatedStorage.IsolatedStorageException
    description: "\n<p>The current code has insufficient permissions to create isolated storage directory. </p>\n"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>The directory path is <strong>null</strong>. </p>\n"
  see:
  - type: System.Security.Permissions.IsolatedStorageFilePermission
    commentId: T:System.Security.Permissions.IsolatedStorageFilePermission
  - type: System.Security.Permissions.ReflectionPermission
    commentId: T:System.Security.Permissions.ReflectionPermission
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.IO.IsolatedStorage.IsolatedStorageFile.CreateFile(System.String)
  commentId: M:System.IO.IsolatedStorage.IsolatedStorageFile.CreateFile(System.String)
  id: CreateFile(System.String)
  parent: System.IO.IsolatedStorage.IsolatedStorageFile
  langs:
  - csharp
  - vb
  name: CreateFile(String)
  fullName: System.IO.IsolatedStorage.IsolatedStorageFile.CreateFile(System.String)
  type: Method
  source:
    remote:
      path: src/System.IO.IsolatedStorage/src/System/IO/IsolatedStorage/IsolatedStorageFile.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CreateFile
    path: src/System.IO.IsolatedStorage/src/System/IO/IsolatedStorage/IsolatedStorageFile.cs
    startLine: 265
  assemblies:
  - System.IO.IsolatedStorage
  namespace: System.IO.IsolatedStorage
  summary: "\n<p>Creates a file in the isolated store.</p>\n"
  remarks: "\n<p>This method is equivalent to using the <xref href=\"System.IO.IsolatedStorage.IsolatedStorageFileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.IO.IsolatedStorage.IsolatedStorageFile)\" data-throw-if-not-resolved=\"false\"></xref> constructor.</p>\n"
  example:
  - 
  syntax:
    content: public IsolatedStorageFileStream CreateFile(string path)
    content.vb: Public Function CreateFile(path As String) As IsolatedStorageFileStream
    parameters:
    - id: path
      type: System.String
    return:
      type: System.IO.IsolatedStorage.IsolatedStorageFileStream
  exceptions:
  - type: System.IO.IsolatedStorage.IsolatedStorageException
    commentId: T:System.IO.IsolatedStorage.IsolatedStorageException
    description: "\n<p>The isolated store has been removed. </p>\n<p>-or-</p>\n<p>Isolated storage is disabled.</p>\n"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<p>\n<em>path</em> is malformed.</p>\n"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>path</em> is <strong>null</strong>.</p>\n"
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "\n<p>The directory in <em>path</em> does not exist.</p>\n"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "\n<p>The isolated store has been disposed.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.IO.IsolatedStorage.IsolatedStorageFile.DeleteDirectory(System.String)
  commentId: M:System.IO.IsolatedStorage.IsolatedStorageFile.DeleteDirectory(System.String)
  id: DeleteDirectory(System.String)
  parent: System.IO.IsolatedStorage.IsolatedStorageFile
  langs:
  - csharp
  - vb
  name: DeleteDirectory(String)
  fullName: System.IO.IsolatedStorage.IsolatedStorageFile.DeleteDirectory(System.String)
  type: Method
  source:
    remote:
      path: src/System.IO.IsolatedStorage/ref/System.IO.IsolatedStorage.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: DeleteDirectory
    path: src/System.IO.IsolatedStorage/ref/System.IO.IsolatedStorage.cs
    startLine: 23
  assemblies:
  - System.IO.IsolatedStorage
  namespace: System.IO.IsolatedStorage
  summary: "\n<p>Deletes a directory in the isolated storage scope.</p>\n"
  remarks: "\n<p>A directory must be empty before it is deleted. The deleted directory cannot be recovered once deleted.</p>\n<p>The How to: Delete Files and Directories in Isolated Storage example demonstrates the use of the <xref href=\"System.IO.IsolatedStorage.IsolatedStorageFile.DeleteDirectory(System.String)\" data-throw-if-not-resolved=\"false\"></xref> method.</p>\n"
  example:
  - System.IO.IsolatedStorage.IsolatedStorage#8
  syntax:
    content: public void DeleteDirectory(string dir)
    content.vb: Public Sub DeleteDirectory(dir As String)
    parameters:
    - id: dir
      type: System.String
      description: "\n<p>The relative path of the directory to delete within the isolated storage scope. </p>\n"
  exceptions:
  - type: System.IO.IsolatedStorage.IsolatedStorageException
    commentId: T:System.IO.IsolatedStorage.IsolatedStorageException
    description: "\n<p>The directory could not be deleted. </p>\n"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>The directory path was <strong>null</strong>. </p>\n"
  see:
  - type: System.Security.Permissions.IsolatedStorageFilePermission
    commentId: T:System.Security.Permissions.IsolatedStorageFilePermission
  - type: System.Security.Permissions.ReflectionPermission
    commentId: T:System.Security.Permissions.ReflectionPermission
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.IO.IsolatedStorage.IsolatedStorageFile.DeleteFile(System.String)
  commentId: M:System.IO.IsolatedStorage.IsolatedStorageFile.DeleteFile(System.String)
  id: DeleteFile(System.String)
  parent: System.IO.IsolatedStorage.IsolatedStorageFile
  langs:
  - csharp
  - vb
  name: DeleteFile(String)
  fullName: System.IO.IsolatedStorage.IsolatedStorageFile.DeleteFile(System.String)
  type: Method
  source:
    remote:
      path: src/System.IO.IsolatedStorage/ref/System.IO.IsolatedStorage.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: DeleteFile
    path: src/System.IO.IsolatedStorage/ref/System.IO.IsolatedStorage.cs
    startLine: 24
  assemblies:
  - System.IO.IsolatedStorage
  namespace: System.IO.IsolatedStorage
  summary: "\n<p>Deletes a file in the isolated storage scope.</p>\n"
  remarks: "\n<p>The deleted file cannot be recovered once deleted.</p>\n<p>The How to: Delete Files and Directories in Isolated Storage example demonstrates the use of the <xref href=\"System.IO.IsolatedStorage.IsolatedStorageFile.DeleteFile(System.String)\" data-throw-if-not-resolved=\"false\"></xref> method.</p>\n"
  example:
  - "\n<p>The following code example uses the <xref href=\"System.IO.IsolatedStorage.IsolatedStorageFile.DeleteFile(System.String)\" data-throw-if-not-resolved=\"false\"></xref> method to delete a number of files in isolated storage.</p>System.IO.IsolatedStorage.IsolatedStorage#6"
  syntax:
    content: public void DeleteFile(string file)
    content.vb: Public Sub DeleteFile(file As String)
    parameters:
    - id: file
      type: System.String
      description: "\n<p>The relative path of the file to delete within the isolated storage scope. </p>\n"
  exceptions:
  - type: System.IO.IsolatedStorage.IsolatedStorageException
    commentId: T:System.IO.IsolatedStorage.IsolatedStorageException
    description: "\n<p>The target file is open or the path is incorrect. </p>\n"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>The file path is <strong>null</strong>. </p>\n"
  see:
  - type: System.Security.Permissions.IsolatedStorageFilePermission
    commentId: T:System.Security.Permissions.IsolatedStorageFilePermission
  - type: System.Security.Permissions.ReflectionPermission
    commentId: T:System.Security.Permissions.ReflectionPermission
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.IO.IsolatedStorage.IsolatedStorageFile.DirectoryExists(System.String)
  commentId: M:System.IO.IsolatedStorage.IsolatedStorageFile.DirectoryExists(System.String)
  id: DirectoryExists(System.String)
  parent: System.IO.IsolatedStorage.IsolatedStorageFile
  langs:
  - csharp
  - vb
  name: DirectoryExists(String)
  fullName: System.IO.IsolatedStorage.IsolatedStorageFile.DirectoryExists(System.String)
  type: Method
  source:
    remote:
      path: src/System.IO.IsolatedStorage/src/System/IO/IsolatedStorage/IsolatedStorageFile.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: DirectoryExists
    path: src/System.IO.IsolatedStorage/src/System/IO/IsolatedStorage/IsolatedStorageFile.cs
    startLine: 123
  assemblies:
  - System.IO.IsolatedStorage
  namespace: System.IO.IsolatedStorage
  summary: "\n<p>Determines whether the specified path refers to an existing directory in the isolated store.</p>\n"
  example:
  - 
  syntax:
    content: public bool DirectoryExists(string path)
    content.vb: Public Function DirectoryExists(path As String) As Boolean
    parameters:
    - id: path
      type: System.String
    return:
      type: System.Boolean
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>path</em> is <strong>null</strong>.</p>\n"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "\n<p>The isolated store is closed.</p>\n"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "\n<p>The isolated store has been disposed.</p>\n"
  - type: System.IO.IsolatedStorage.IsolatedStorageException
    commentId: T:System.IO.IsolatedStorage.IsolatedStorageException
    description: "\n<p>The isolated store has been removed. </p>\n<p>-or-</p>\n<p>Isolated storage is disabled.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.IO.IsolatedStorage.IsolatedStorageFile.Dispose
  commentId: M:System.IO.IsolatedStorage.IsolatedStorageFile.Dispose
  id: Dispose
  parent: System.IO.IsolatedStorage.IsolatedStorageFile
  langs:
  - csharp
  - vb
  name: Dispose()
  fullName: System.IO.IsolatedStorage.IsolatedStorageFile.Dispose()
  type: Method
  source:
    remote:
      path: src/System.IO.IsolatedStorage/src/System/IO/IsolatedStorage/IsolatedStorageFile.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Dispose
    path: src/System.IO.IsolatedStorage/src/System/IO/IsolatedStorage/IsolatedStorageFile.cs
    startLine: 592
  assemblies:
  - System.IO.IsolatedStorage
  namespace: System.IO.IsolatedStorage
  summary: "\n<p>Releases all resources used by the <xref href=\"System.IO.IsolatedStorage.IsolatedStorageFile\" data-throw-if-not-resolved=\"false\"></xref>. </p>\n"
  remarks: "\n<p>Call <strong>Dispose</strong> when you are finished using the <xref href=\"System.IO.IsolatedStorage.IsolatedStorageFile\" data-throw-if-not-resolved=\"false\"></xref>. The <strong>Dispose</strong> method leaves the <xref href=\"System.IO.IsolatedStorage.IsolatedStorageFile\" data-throw-if-not-resolved=\"false\"></xref> in an unusable state. After calling <strong>Dispose</strong>, you must release all references to the <xref href=\"System.IO.IsolatedStorage.IsolatedStorageFile\" data-throw-if-not-resolved=\"false\"></xref> so the garbage collector can reclaim the memory that <xref href=\"System.IO.IsolatedStorage.IsolatedStorageFile\" data-throw-if-not-resolved=\"false\"></xref> was occupying.</p>\n<p>Always call Dispose before you release your last reference to the <xref href=\"System.IO.IsolatedStorage.IsolatedStorageFile\" data-throw-if-not-resolved=\"false\"></xref>. Otherwise, the resources the <xref href=\"System.IO.IsolatedStorage.IsolatedStorageFileStream\" data-throw-if-not-resolved=\"false\"></xref> is using will not be freed until garbage collection calls the <xref href=\"System.IO.IsolatedStorage.IsolatedStorageFileStream\" data-throw-if-not-resolved=\"false\"></xref> object's <xref href=\"System.Object.Finalize\" data-throw-if-not-resolved=\"false\"></xref> method.</p>\n"
  example:
  - "\n<p>The following code example opens an isolated storage file, uses it to write information to a stream, closes the file, and then uses the <xref href=\"System.IO.IsolatedStorage.IsolatedStorageFile.Dispose\" data-throw-if-not-resolved=\"false\"></xref> method to release all resources.</p>System.IO.IsolatedStorage.IsolatedStorage#10"
  syntax:
    content: public void Dispose()
    content.vb: Public Sub Dispose
  see:
  - type: System.Security.Permissions.ReflectionPermission
    commentId: T:System.Security.Permissions.ReflectionPermission
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.IO.IsolatedStorage.IsolatedStorageFile.FileExists(System.String)
  commentId: M:System.IO.IsolatedStorage.IsolatedStorageFile.FileExists(System.String)
  id: FileExists(System.String)
  parent: System.IO.IsolatedStorage.IsolatedStorageFile
  langs:
  - csharp
  - vb
  name: FileExists(String)
  fullName: System.IO.IsolatedStorage.IsolatedStorageFile.FileExists(System.String)
  type: Method
  source:
    remote:
      path: src/System.IO.IsolatedStorage/src/System/IO/IsolatedStorage/IsolatedStorageFile.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: FileExists
    path: src/System.IO.IsolatedStorage/src/System/IO/IsolatedStorage/IsolatedStorageFile.cs
    startLine: 111
  assemblies:
  - System.IO.IsolatedStorage
  namespace: System.IO.IsolatedStorage
  summary: "\n<p>Determines whether the specified path refers to an existing file in the isolated store.</p>\n"
  syntax:
    content: public bool FileExists(string path)
    content.vb: Public Function FileExists(path As String) As Boolean
    parameters:
    - id: path
      type: System.String
    return:
      type: System.Boolean
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>path</em> is <strong>null</strong>.</p>\n"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "\n<p>The isolated store is closed.</p>\n"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "\n<p>The isolated store has been disposed.</p>\n"
  - type: System.IO.IsolatedStorage.IsolatedStorageException
    commentId: T:System.IO.IsolatedStorage.IsolatedStorageException
    description: "\n<p>The isolated store has been removed. </p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.IO.IsolatedStorage.IsolatedStorageFile.GetCreationTime(System.String)
  commentId: M:System.IO.IsolatedStorage.IsolatedStorageFile.GetCreationTime(System.String)
  id: GetCreationTime(System.String)
  parent: System.IO.IsolatedStorage.IsolatedStorageFile
  langs:
  - csharp
  - vb
  name: GetCreationTime(String)
  fullName: System.IO.IsolatedStorage.IsolatedStorageFile.GetCreationTime(System.String)
  type: Method
  source:
    remote:
      path: src/System.IO.IsolatedStorage/src/System/IO/IsolatedStorage/IsolatedStorageFile.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetCreationTime
    path: src/System.IO.IsolatedStorage/src/System/IO/IsolatedStorage/IsolatedStorageFile.cs
    startLine: 271
  assemblies:
  - System.IO.IsolatedStorage
  namespace: System.IO.IsolatedStorage
  summary: "\n<p>Returns the creation date and time of a specified file or directory.</p>\n"
  remarks: "\n<p>If the file described by path does not exist, this method returns 12:00 midnight, January 1, 1601 A.D. (C.E.) Coordinated Universal Time (UTC), adjusted to local time.</p>\n"
  syntax:
    content: public DateTimeOffset GetCreationTime(string path)
    content.vb: Public Function GetCreationTime(path As String) As DateTimeOffset
    parameters:
    - id: path
      type: System.String
    return:
      type: DateTimeOffset
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<p>\n<em>path </em>is a zero-length string, contains only white space, or contains one or more invalid characters defined by the <xref href=\"System.IO.Path.GetInvalidPathChars\" data-throw-if-not-resolved=\"false\"></xref> method.</p>\n"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>path </em>is <strong>null</strong>.</p>\n"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "\n<p>The isolated store has been closed.</p>\n"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "\n<p>The isolated store has been disposed.</p>\n"
  - type: System.IO.IsolatedStorage.IsolatedStorageException
    commentId: T:System.IO.IsolatedStorage.IsolatedStorageException
    description: "\n<p>The isolated store has been removed.</p>\n<p>-or-</p>\n<p>Isolated storage is disabled.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.IO.IsolatedStorage.IsolatedStorageFile.GetDirectoryNames
  commentId: M:System.IO.IsolatedStorage.IsolatedStorageFile.GetDirectoryNames
  id: GetDirectoryNames
  parent: System.IO.IsolatedStorage.IsolatedStorageFile
  langs:
  - csharp
  - vb
  name: GetDirectoryNames()
  fullName: System.IO.IsolatedStorage.IsolatedStorageFile.GetDirectoryNames()
  type: Method
  source:
    remote:
      path: src/System.IO.IsolatedStorage/src/System/IO/IsolatedStorage/IsolatedStorageFile.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetDirectoryNames
    path: src/System.IO.IsolatedStorage/src/System/IO/IsolatedStorage/IsolatedStorageFile.cs
    startLine: 218
  assemblies:
  - System.IO.IsolatedStorage
  namespace: System.IO.IsolatedStorage
  summary: "\n<p>Enumerates the directories at the root of an isolated store.</p>\n"
  remarks: "\n<p>This method is equivalent to using the <xref href=\"System.IO.IsolatedStorage.IsolatedStorageFile.GetDirectoryNames(System.String)\" data-throw-if-not-resolved=\"false\"></xref> method with \"*\" specified for the search pattern.</p>\n"
  syntax:
    content: public String[] GetDirectoryNames()
    content.vb: Public Function GetDirectoryNames As String()
    return:
      type: String[]
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "\n<p>The isolated store has been disposed.</p>\n"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "\n<p>The isolated store is closed.</p>\n"
  - type: System.IO.IsolatedStorage.IsolatedStorageException
    commentId: T:System.IO.IsolatedStorage.IsolatedStorageException
    description: "\n<p>The isolated store has been removed. </p>\n"
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "\n<p>Caller does not have permission to enumerate directories.</p>\n"
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "\n<p>One or more directories are not found.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.IO.IsolatedStorage.IsolatedStorageFile.GetDirectoryNames(System.String)
  commentId: M:System.IO.IsolatedStorage.IsolatedStorageFile.GetDirectoryNames(System.String)
  id: GetDirectoryNames(System.String)
  parent: System.IO.IsolatedStorage.IsolatedStorageFile
  langs:
  - csharp
  - vb
  name: GetDirectoryNames(String)
  fullName: System.IO.IsolatedStorage.IsolatedStorageFile.GetDirectoryNames(System.String)
  type: Method
  source:
    remote:
      path: src/System.IO.IsolatedStorage/ref/System.IO.IsolatedStorage.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetDirectoryNames
    path: src/System.IO.IsolatedStorage/ref/System.IO.IsolatedStorage.cs
    startLine: 30
  assemblies:
  - System.IO.IsolatedStorage
  namespace: System.IO.IsolatedStorage
  summary: "\n<p>Enumerates the directories in an isolated storage scope that match a given search pattern.</p>\n"
  remarks: "\n<p>Wildcard characters must only be in the final element of a <em>searchPattern</em>. For instance, \"directory1/*etc*\" is a valid search string, but \"*etc*/directory\" is not.</p>\n<p>The <em>searchPattern</em> \"Project\\Data*\" will give all subdirectories of Project beginning with Data in the isolated storage scope. The <em>searchPattern</em> \"*\" will return all directories located in the root. For complete description of search string criteria, see the <xref href=\"System.IO.Directory\" data-throw-if-not-resolved=\"false\"></xref> class.</p>\n<p>For information on getting file names, see the <xref href=\"System.IO.IsolatedStorage.IsolatedStorageFile.GetFileNames(System.String)\" data-throw-if-not-resolved=\"false\"></xref> method.</p>\n<p>The How to: Find Existing Files and Directories in Isolated Storage example demonstrates the use of the <xref href=\"System.IO.IsolatedStorage.IsolatedStorageFile.GetDirectoryNames(System.String)\" data-throw-if-not-resolved=\"false\"></xref> method.</p>\n"
  example:
  - "\n<p>The following code example demonstrates the <xref href=\"System.IO.IsolatedStorage.IsolatedStorageFile.GetDirectoryNames(System.String)\" data-throw-if-not-resolved=\"false\"></xref> method. For the complete context of this example, see the <xref href=\"System.IO.IsolatedStorage.IsolatedStorageFile\" data-throw-if-not-resolved=\"false\"></xref> overview.</p>System.IO.IsolatedStorage.IsolatedStorage#16"
  syntax:
    content: public string[] GetDirectoryNames(string searchPattern)
    content.vb: Public Function GetDirectoryNames(searchPattern As String) As String()
    parameters:
    - id: searchPattern
      type: System.String
      description: "\n<p>A search pattern. Both single-character (\"?\") and multi-character (\"*\") wildcards are supported. </p>\n"
    return:
      type: System.String[]
      description: "\n<p>An array of the relative paths of directories in the isolated storage scope that match <em>searchPattern</em>. A zero-length array specifies that there are no directories that match.</p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>searchPattern</em> is <strong>null</strong>. </p>\n"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "\n<p>The isolated store is closed.</p>\n"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "\n<p>The isolated store has been disposed.</p>\n"
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "\n<p>Caller does not have permission to enumerate directories resolved from <em>searchPattern</em>.</p>\n"
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "\n<p>The directory or directories specified by <em>searchPattern</em> are not found.</p>\n"
  - type: System.IO.IsolatedStorage.IsolatedStorageException
    commentId: T:System.IO.IsolatedStorage.IsolatedStorageException
    description: "\n<p>The isolated store has been removed. </p>\n"
  see:
  - type: System.Security.Permissions.ReflectionPermission
    commentId: T:System.Security.Permissions.ReflectionPermission
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.IO.IsolatedStorage.IsolatedStorageFile.GetFileNames
  commentId: M:System.IO.IsolatedStorage.IsolatedStorageFile.GetFileNames
  id: GetFileNames
  parent: System.IO.IsolatedStorage.IsolatedStorageFile
  langs:
  - csharp
  - vb
  name: GetFileNames()
  fullName: System.IO.IsolatedStorage.IsolatedStorageFile.GetFileNames()
  type: Method
  source:
    remote:
      path: src/System.IO.IsolatedStorage/src/System/IO/IsolatedStorage/IsolatedStorageFile.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetFileNames
    path: src/System.IO.IsolatedStorage/src/System/IO/IsolatedStorage/IsolatedStorageFile.cs
    startLine: 190
  assemblies:
  - System.IO.IsolatedStorage
  namespace: System.IO.IsolatedStorage
  summary: "\n<p>Enumerates the file names at the root of an isolated store.</p>\n"
  remarks: "\n<p>This method is equivalent to using the <xref href=\"System.IO.IsolatedStorage.IsolatedStorageFile.GetFileNames(System.String)\" data-throw-if-not-resolved=\"false\"></xref> method with \"*\" specified for the search pattern.</p>\n"
  syntax:
    content: public String[] GetFileNames()
    content.vb: Public Function GetFileNames As String()
    return:
      type: String[]
  exceptions:
  - type: System.IO.IsolatedStorage.IsolatedStorageException
    commentId: T:System.IO.IsolatedStorage.IsolatedStorageException
    description: "\n<p>The isolated store has been removed. </p>\n"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "\n<p>The isolated store has been disposed.</p>\n"
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "\n<p>File paths from the isolated store root cannot be determined.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.IO.IsolatedStorage.IsolatedStorageFile.GetFileNames(System.String)
  commentId: M:System.IO.IsolatedStorage.IsolatedStorageFile.GetFileNames(System.String)
  id: GetFileNames(System.String)
  parent: System.IO.IsolatedStorage.IsolatedStorageFile
  langs:
  - csharp
  - vb
  name: GetFileNames(String)
  fullName: System.IO.IsolatedStorage.IsolatedStorageFile.GetFileNames(System.String)
  type: Method
  source:
    remote:
      path: src/System.IO.IsolatedStorage/ref/System.IO.IsolatedStorage.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetFileNames
    path: src/System.IO.IsolatedStorage/ref/System.IO.IsolatedStorage.cs
    startLine: 32
  assemblies:
  - System.IO.IsolatedStorage
  namespace: System.IO.IsolatedStorage
  summary: "\n<p>Gets the file names that match a search pattern.</p>\n"
  remarks: "\n<p>The <em>searchPattern</em> \"Project\\Data*.txt\" will give all \".txt\" files beginning with Data in the Project directory of the isolated storage scope. For complete description of search pattern strings, see <xref href=\"System.IO.Directory\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>For information about how to find directory names, see the <xref href=\"System.IO.IsolatedStorage.IsolatedStorageFile.GetDirectoryNames(System.String)\" data-throw-if-not-resolved=\"false\"></xref> method.</p>\n<p>The How to: Find Existing Files and Directories in Isolated Storage example demonstrates the use of the <xref href=\"System.IO.IsolatedStorage.IsolatedStorageFile.GetFileNames(System.String)\" data-throw-if-not-resolved=\"false\"></xref> method.</p>\n"
  example:
  - "\n<p>The following code example demonstrates the <xref href=\"System.IO.IsolatedStorage.IsolatedStorageFile.GetFileNames(System.String)\" data-throw-if-not-resolved=\"false\"></xref> method. For the complete context of this example, see the <xref href=\"System.IO.IsolatedStorage.IsolatedStorageFile\" data-throw-if-not-resolved=\"false\"></xref> overview.</p>System.IO.IsolatedStorage.IsolatedStorage#16"
  syntax:
    content: public string[] GetFileNames(string searchPattern)
    content.vb: Public Function GetFileNames(searchPattern As String) As String()
    parameters:
    - id: searchPattern
      type: System.String
      description: "\n<p>A search pattern. Both single-character (\"?\") and multi-character (\"*\") wildcards are supported. </p>\n"
    return:
      type: System.String[]
      description: "\n<p>An array of relative paths of files in the isolated storage scope that match <em>searchPattern</em>. A zero-length array specifies that there are no files that match.</p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>searchPattern</em> is <strong>null</strong>. </p>\n"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "\n<p>The isolated store has been disposed.</p>\n"
  - type: System.IO.IsolatedStorage.IsolatedStorageException
    commentId: T:System.IO.IsolatedStorage.IsolatedStorageException
    description: "\n<p>The isolated store has been removed. </p>\n"
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "\n<p>The file path specified by <em>searchPattern</em> cannot be found. </p>\n"
  see:
  - type: System.Security.Permissions.ReflectionPermission
    commentId: T:System.Security.Permissions.ReflectionPermission
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.IO.IsolatedStorage.IsolatedStorageFile.GetLastAccessTime(System.String)
  commentId: M:System.IO.IsolatedStorage.IsolatedStorageFile.GetLastAccessTime(System.String)
  id: GetLastAccessTime(System.String)
  parent: System.IO.IsolatedStorage.IsolatedStorageFile
  langs:
  - csharp
  - vb
  name: GetLastAccessTime(String)
  fullName: System.IO.IsolatedStorage.IsolatedStorageFile.GetLastAccessTime(System.String)
  type: Method
  source:
    remote:
      path: src/System.IO.IsolatedStorage/src/System/IO/IsolatedStorage/IsolatedStorageFile.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetLastAccessTime
    path: src/System.IO.IsolatedStorage/src/System/IO/IsolatedStorage/IsolatedStorageFile.cs
    startLine: 295
  assemblies:
  - System.IO.IsolatedStorage
  namespace: System.IO.IsolatedStorage
  summary: "\n<p>Returns the date and time a specified file or directory was last accessed.</p>\n"
  remarks: "\n<p>If the file described by <em>path</em> does not exist, this method returns 12:00 midnight, January 1, 1601 A.D. (C.E.) Coordinated Universal Time (UTC), adjusted to local time.</p>\n"
  syntax:
    content: public DateTimeOffset GetLastAccessTime(string path)
    content.vb: Public Function GetLastAccessTime(path As String) As DateTimeOffset
    parameters:
    - id: path
      type: System.String
    return:
      type: DateTimeOffset
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<p>\n<em>path </em>is a zero-length string, contains only white space, or contains one or more invalid characters defined by the <xref href=\"System.IO.Path.GetInvalidPathChars\" data-throw-if-not-resolved=\"false\"></xref> method.</p>\n"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>path </em>is <strong>null</strong>.</p>\n"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "\n<p>The isolated store has been closed.</p>\n"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "\n<p>The isolated store has been disposed.</p>\n"
  - type: System.IO.IsolatedStorage.IsolatedStorageException
    commentId: T:System.IO.IsolatedStorage.IsolatedStorageException
    description: "\n<p>The isolated store has been removed.</p>\n<p>-or-</p>\n<p>Isolated storage is disabled.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.IO.IsolatedStorage.IsolatedStorageFile.GetLastWriteTime(System.String)
  commentId: M:System.IO.IsolatedStorage.IsolatedStorageFile.GetLastWriteTime(System.String)
  id: GetLastWriteTime(System.String)
  parent: System.IO.IsolatedStorage.IsolatedStorageFile
  langs:
  - csharp
  - vb
  name: GetLastWriteTime(String)
  fullName: System.IO.IsolatedStorage.IsolatedStorageFile.GetLastWriteTime(System.String)
  type: Method
  source:
    remote:
      path: src/System.IO.IsolatedStorage/src/System/IO/IsolatedStorage/IsolatedStorageFile.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetLastWriteTime
    path: src/System.IO.IsolatedStorage/src/System/IO/IsolatedStorage/IsolatedStorageFile.cs
    startLine: 319
  assemblies:
  - System.IO.IsolatedStorage
  namespace: System.IO.IsolatedStorage
  summary: "\n<p>Returns the date and time a specified file or directory was last written to.</p>\n"
  remarks: "\n<p>If the file described by <em>path</em> does not exist, this method returns 12:00 midnight, January 1, 1601 A.D. (C.E.) Coordinated Universal Time (UTC), adjusted to local time.</p>\n"
  syntax:
    content: public DateTimeOffset GetLastWriteTime(string path)
    content.vb: Public Function GetLastWriteTime(path As String) As DateTimeOffset
    parameters:
    - id: path
      type: System.String
    return:
      type: DateTimeOffset
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<p>\n<em>path </em>is a zero-length string, contains only white space, or contains one or more invalid characters defined by the <xref href=\"System.IO.Path.GetInvalidPathChars\" data-throw-if-not-resolved=\"false\"></xref> method.</p>\n"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>path </em>is <strong>null</strong>.</p>\n"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "\n<p>The isolated store has been closed.</p>\n"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "\n<p>The isolated store has been disposed.</p>\n"
  - type: System.IO.IsolatedStorage.IsolatedStorageException
    commentId: T:System.IO.IsolatedStorage.IsolatedStorageException
    description: "\n<p>The isolated store has been removed.</p>\n<p>-or-</p>\n<p>Isolated storage is disabled.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.IO.IsolatedStorage.IsolatedStorageFile.GetUserStoreForApplication
  commentId: M:System.IO.IsolatedStorage.IsolatedStorageFile.GetUserStoreForApplication
  id: GetUserStoreForApplication
  parent: System.IO.IsolatedStorage.IsolatedStorageFile
  langs:
  - csharp
  - vb
  name: GetUserStoreForApplication()
  fullName: System.IO.IsolatedStorage.IsolatedStorageFile.GetUserStoreForApplication()
  type: Method
  source:
    remote:
      path: src/System.IO.IsolatedStorage/src/System/IO/IsolatedStorage/IsolatedStorageFile.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetUserStoreForApplication
    path: src/System.IO.IsolatedStorage/src/System/IO/IsolatedStorage/IsolatedStorageFile.cs
    startLine: 499
  assemblies:
  - System.IO.IsolatedStorage
  namespace: System.IO.IsolatedStorage
  summary: "\n<p>Obtains user-scoped isolated storage corresponding to the calling code's application identity.</p>\n"
  remarks: "\n<p>All assemblies associated with an application use the same isolated store when using this method. This method can be used only when the application identity can be determined - for example, when the application is published through ClickOnce deployment or is a Silverlight-based application. If you attempt to use this method outside a ClickOnce or Silverlight-based application, you will receive an <xref href=\"System.IO.IsolatedStorage.IsolatedStorageException\" data-throw-if-not-resolved=\"false\"></xref> exception, because the application identity of the caller cannot be determined.</p>\n<p>\n<xref href=\"System.IO.IsolatedStorage.IsolatedStorageFile.GetUserStoreForApplication\" data-throw-if-not-resolved=\"false\"></xref> is functionally equivalent to the following code: </p>System.IO.IsolatedStorage.IsolatedStorage#21<p>In this code, the <em>applicationIdentity</em> parameter for <code>GetStore(IsolatedStorageScope scope, Object applicationIdentity)</code> is <strong>null</strong>.</p>"
  syntax:
    content: public static IsolatedStorageFile GetUserStoreForApplication()
    content.vb: Public Shared Function GetUserStoreForApplication As IsolatedStorageFile
    return:
      type: System.IO.IsolatedStorage.IsolatedStorageFile
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "\n<p>Sufficient isolated storage permissions have not been granted. </p>\n"
  - type: System.IO.IsolatedStorage.IsolatedStorageException
    commentId: T:System.IO.IsolatedStorage.IsolatedStorageException
    description: "\n<p>An isolated storage location cannot be initialized.</p>\n<p>-or-</p>\n<p>The application identity of the caller cannot be determined, because the <xref href=\"System.AppDomain.ActivationContext\" data-throw-if-not-resolved=\"false\"></xref> property returned <strong>null</strong>.</p>\n<p>-or-</p>\n<p>The permissions for the application domain cannot be determined.</p>\n"
  see:
  - type: System.Security.Permissions.IsolatedStorageFilePermission
    commentId: T:System.Security.Permissions.IsolatedStorageFilePermission
  - type: System.Security.Permissions.ReflectionPermission
    commentId: T:System.Security.Permissions.ReflectionPermission
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.IO.IsolatedStorage.IsolatedStorageFile.MoveDirectory(System.String,System.String)
  commentId: M:System.IO.IsolatedStorage.IsolatedStorageFile.MoveDirectory(System.String,System.String)
  id: MoveDirectory(System.String,System.String)
  parent: System.IO.IsolatedStorage.IsolatedStorageFile
  langs:
  - csharp
  - vb
  name: MoveDirectory(String, String)
  fullName: System.IO.IsolatedStorage.IsolatedStorageFile.MoveDirectory(System.String, System.String)
  type: Method
  source:
    remote:
      path: src/System.IO.IsolatedStorage/src/System/IO/IsolatedStorage/IsolatedStorageFile.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: MoveDirectory
    path: src/System.IO.IsolatedStorage/src/System/IO/IsolatedStorage/IsolatedStorageFile.cs
    startLine: 453
  assemblies:
  - System.IO.IsolatedStorage
  namespace: System.IO.IsolatedStorage
  summary: "\n<p>Moves a specified directory and its contents to a new location.</p>\n"
  remarks: "\n<p>\n<em>sourceFileName</em> and <em>destinationFileName</em> must specify different directory names. </p>\n"
  syntax:
    content: public void MoveDirectory(string sourceDirectoryName, string destinationDirectoryName)
    content.vb: Public Sub MoveDirectory(sourceDirectoryName As String, destinationDirectoryName As String)
    parameters:
    - id: sourceDirectoryName
      type: System.String
    - id: destinationDirectoryName
      type: System.String
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<p>\n<em>sourceFileName </em>or<em> destinationFileName </em>is a zero-length string, contains only white space, or contains one or more invalid characters defined by the <xref href=\"System.IO.Path.GetInvalidPathChars\" data-throw-if-not-resolved=\"false\"></xref> method.</p>\n"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>sourceFileName </em>or<em> destinationFileName </em>is <strong>null</strong>.</p>\n"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "\n<p>The isolated store has been closed.</p>\n"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "\n<p>The isolated store has been disposed.</p>\n"
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "\n<p>\n<em>sourceDirectoryName</em> does not exist.</p>\n"
  - type: System.IO.IsolatedStorage.IsolatedStorageException
    commentId: T:System.IO.IsolatedStorage.IsolatedStorageException
    description: "\n<p>The isolated store has been removed.</p>\n<p>-or-</p>\n<p>Isolated storage is disabled.</p>\n<p>-or-</p>\n<p>\n<em>destinationDirectoryName</em> already exists.</p>\n<p>-or-</p>\n<p>\n<em>sourceDirectoryName</em> and <em>destinationDirectoryName</em> refer to the same directory.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.IO.IsolatedStorage.IsolatedStorageFile.MoveFile(System.String,System.String)
  commentId: M:System.IO.IsolatedStorage.IsolatedStorageFile.MoveFile(System.String,System.String)
  id: MoveFile(System.String,System.String)
  parent: System.IO.IsolatedStorage.IsolatedStorageFile
  langs:
  - csharp
  - vb
  name: MoveFile(String, String)
  fullName: System.IO.IsolatedStorage.IsolatedStorageFile.MoveFile(System.String, System.String)
  type: Method
  source:
    remote:
      path: src/System.IO.IsolatedStorage/src/System/IO/IsolatedStorage/IsolatedStorageFile.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: MoveFile
    path: src/System.IO.IsolatedStorage/src/System/IO/IsolatedStorage/IsolatedStorageFile.cs
    startLine: 410
  assemblies:
  - System.IO.IsolatedStorage
  namespace: System.IO.IsolatedStorage
  summary: "\n<p>Moves a specified file to a new location, and optionally lets you specify a new file name.</p>\n"
  remarks: "\n<p>This method does not throw an exception if <em>sourceFileName</em> and <em>destinationFileName</em> are the same.</p>\n"
  syntax:
    content: public void MoveFile(string sourceFileName, string destinationFileName)
    content.vb: Public Sub MoveFile(sourceFileName As String, destinationFileName As String)
    parameters:
    - id: sourceFileName
      type: System.String
    - id: destinationFileName
      type: System.String
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<p>\n<em>sourceFileName </em>or<em> destinationFileName </em>is a zero-length string, contains only white space, or contains one or more invalid characters defined by the <xref href=\"System.IO.Path.GetInvalidPathChars\" data-throw-if-not-resolved=\"false\"></xref> method.</p>\n"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>sourceFileName </em>or<em> destinationFileName </em>is <strong>null</strong>.</p>\n"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "\n<p>The isolated store has been closed.</p>\n"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "\n<p>The isolated store has been disposed.</p>\n"
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "\n<p>\n<em>sourceFileName</em> was not found.</p>\n"
  - type: System.IO.IsolatedStorage.IsolatedStorageException
    commentId: T:System.IO.IsolatedStorage.IsolatedStorageException
    description: "\n<p>The isolated store has been removed.</p>\n<p>-or-</p>\n<p>Isolated storage is disabled.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.IO.IsolatedStorage.IsolatedStorageFile.OpenFile(System.String,System.IO.FileMode)
  commentId: M:System.IO.IsolatedStorage.IsolatedStorageFile.OpenFile(System.String,System.IO.FileMode)
  id: OpenFile(System.String,System.IO.FileMode)
  parent: System.IO.IsolatedStorage.IsolatedStorageFile
  langs:
  - csharp
  - vb
  name: OpenFile(String, FileMode)
  fullName: System.IO.IsolatedStorage.IsolatedStorageFile.OpenFile(System.String, System.IO.FileMode)
  type: Method
  source:
    remote:
      path: src/System.IO.IsolatedStorage/ref/System.IO.IsolatedStorage.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: OpenFile
    path: src/System.IO.IsolatedStorage/ref/System.IO.IsolatedStorage.cs
    startLine: 38
  assemblies:
  - System.IO.IsolatedStorage
  namespace: System.IO.IsolatedStorage
  summary: "\n<p>Opens a file in the specified mode.</p>\n"
  remarks: "\n<p>This method is equivalent to using the <xref href=\"System.IO.IsolatedStorage.IsolatedStorageFileStream.#ctor(System.String,System.IO.FileMode,System.IO.IsolatedStorage.IsolatedStorageFile)\" data-throw-if-not-resolved=\"false\"></xref> constructor.</p>\n"
  syntax:
    content: public IsolatedStorageFileStream OpenFile(string path, FileMode mode)
    content.vb: Public Function OpenFile(path As String, mode As FileMode) As IsolatedStorageFileStream
    parameters:
    - id: path
      type: System.String
      description: "\n<p>The relative path of the file within the isolated store.</p>\n"
    - id: mode
      type: System.IO.FileMode
      description: "\n<p>One of the enumeration values that specifies how to open the file. </p>\n"
    return:
      type: System.IO.IsolatedStorage.IsolatedStorageFileStream
      description: "\n<p>A file that is opened in the specified mode, with read/write access, and is unshared.</p>\n"
  exceptions:
  - type: System.IO.IsolatedStorage.IsolatedStorageException
    commentId: T:System.IO.IsolatedStorage.IsolatedStorageException
    description: "\n<p>The isolated store has been removed. </p>\n<p>-or-</p>\n<p>Isolated storage is disabled.</p>\n"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<p>\n<em>path</em> is malformed.</p>\n"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>path</em> is <strong>null</strong>.</p>\n"
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "\n<p>The directory in <em>path</em> does not exist.</p>\n"
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "\n<p>No file was found and the <em>mode</em> is set to <xref href=\"System.IO.FileMode.Open\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "\n<p>The isolated store has been disposed.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.IO.IsolatedStorage.IsolatedStorageFile.OpenFile(System.String,System.IO.FileMode,System.IO.FileAccess)
  commentId: M:System.IO.IsolatedStorage.IsolatedStorageFile.OpenFile(System.String,System.IO.FileMode,System.IO.FileAccess)
  id: OpenFile(System.String,System.IO.FileMode,System.IO.FileAccess)
  parent: System.IO.IsolatedStorage.IsolatedStorageFile
  langs:
  - csharp
  - vb
  name: OpenFile(String, FileMode, FileAccess)
  fullName: System.IO.IsolatedStorage.IsolatedStorageFile.OpenFile(System.String, System.IO.FileMode, System.IO.FileAccess)
  type: Method
  source:
    remote:
      path: src/System.IO.IsolatedStorage/ref/System.IO.IsolatedStorage.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: OpenFile
    path: src/System.IO.IsolatedStorage/ref/System.IO.IsolatedStorage.cs
    startLine: 39
  assemblies:
  - System.IO.IsolatedStorage
  namespace: System.IO.IsolatedStorage
  summary: "\n<p>Opens a file in the specified mode with the specified read/write access.</p>\n"
  remarks: "\n<p>This method is equivalent to using the <xref href=\"System.IO.IsolatedStorage.IsolatedStorageFileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.IsolatedStorage.IsolatedStorageFile)\" data-throw-if-not-resolved=\"false\"></xref> constructor.</p>\n"
  syntax:
    content: public IsolatedStorageFileStream OpenFile(string path, FileMode mode, FileAccess access)
    content.vb: Public Function OpenFile(path As String, mode As FileMode, access As FileAccess) As IsolatedStorageFileStream
    parameters:
    - id: path
      type: System.String
      description: "\n<p>The relative path of the file within the isolated store.</p>\n"
    - id: mode
      type: System.IO.FileMode
      description: "\n<p>One of the enumeration values that specifies how to open the file.</p>\n"
    - id: access
      type: System.IO.FileAccess
      description: "\n<p>One of the enumeration values that specifies whether the file will be opened with read, write, or read/write access.</p>\n"
    return:
      type: System.IO.IsolatedStorage.IsolatedStorageFileStream
      description: "\n<p>A file that is opened in the specified mode and access, and is unshared.</p>\n"
  exceptions:
  - type: System.IO.IsolatedStorage.IsolatedStorageException
    commentId: T:System.IO.IsolatedStorage.IsolatedStorageException
    description: "\n<p>The isolated store has been removed. </p>\n<p>-or-</p>\n<p>Isolated storage is disabled.</p>\n"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<p>\n<em>path</em> is malformed.</p>\n"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>path</em> is <strong>null</strong>.</p>\n"
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "\n<p>The directory in <em>path</em> does not exist.</p>\n"
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "\n<p>No file was found and the <em>mode</em> is set to <xref href=\"System.IO.FileMode.Open\" data-throw-if-not-resolved=\"false\"></xref>. </p>\n"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "\n<p>The isolated store has been disposed.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.IO.IsolatedStorage.IsolatedStorageFile.OpenFile(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)
  commentId: M:System.IO.IsolatedStorage.IsolatedStorageFile.OpenFile(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)
  id: OpenFile(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)
  parent: System.IO.IsolatedStorage.IsolatedStorageFile
  langs:
  - csharp
  - vb
  name: OpenFile(String, FileMode, FileAccess, FileShare)
  fullName: System.IO.IsolatedStorage.IsolatedStorageFile.OpenFile(System.String, System.IO.FileMode, System.IO.FileAccess, System.IO.FileShare)
  type: Method
  source:
    remote:
      path: src/System.IO.IsolatedStorage/ref/System.IO.IsolatedStorage.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: OpenFile
    path: src/System.IO.IsolatedStorage/ref/System.IO.IsolatedStorage.cs
    startLine: 40
  assemblies:
  - System.IO.IsolatedStorage
  namespace: System.IO.IsolatedStorage
  summary: "\n<p>Opens a file in the specified mode, with the specified read/write access and sharing permission.</p>\n"
  remarks: "\n<p>This method is equivalent to using the <xref href=\"System.IO.IsolatedStorage.IsolatedStorageFileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.IO.IsolatedStorage.IsolatedStorageFile)\" data-throw-if-not-resolved=\"false\"></xref> constructor.</p>\n"
  syntax:
    content: public IsolatedStorageFileStream OpenFile(string path, FileMode mode, FileAccess access, FileShare share)
    content.vb: Public Function OpenFile(path As String, mode As FileMode, access As FileAccess, share As FileShare) As IsolatedStorageFileStream
    parameters:
    - id: path
      type: System.String
      description: "\n<p>The relative path of the file within the isolated store.</p>\n"
    - id: mode
      type: System.IO.FileMode
      description: "\n<p>One of the enumeration values that specifies how to open or create the file.</p>\n"
    - id: access
      type: System.IO.FileAccess
      description: "\n<p>One of the enumeration values that specifies whether the file will be opened with read, write, or read/write access</p>\n"
    - id: share
      type: System.IO.FileShare
      description: "\n<p>A bitwise combination of enumeration values that specify the type of access other <xref href=\"System.IO.IsolatedStorage.IsolatedStorageFileStream\" data-throw-if-not-resolved=\"false\"></xref>   objects have to this file.</p>\n"
    return:
      type: System.IO.IsolatedStorage.IsolatedStorageFileStream
      description: "\n<p>A file that is opened in the specified mode and access, and with the specified sharing options.</p>\n"
  exceptions:
  - type: System.IO.IsolatedStorage.IsolatedStorageException
    commentId: T:System.IO.IsolatedStorage.IsolatedStorageException
    description: "\n<p>The isolated store has been removed. </p>\n<p>-or-</p>\n<p>Isolated storage is disabled.</p>\n"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<p>\n<em>path</em> is malformed.</p>\n"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>path</em> is <strong>null</strong>.</p>\n"
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "\n<p>The directory in <em>path</em> does not exist.</p>\n"
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "\n<p>No file was found and the <em>mode</em> is set to <xref href=\"System.IO.FileInfo.Open(System.IO.FileMode)\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "\n<p>The isolated store has been disposed.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: System.IO.IsolatedStorage
  isExternal: false
  name: System.IO.IsolatedStorage
  fullName: System.IO.IsolatedStorage
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.String
  parent: System
  isExternal: false
  name: String
  fullName: System.String
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  fullName: System.Boolean
- uid: System.IO.IsolatedStorage.IsolatedStorageFileStream
  parent: System.IO.IsolatedStorage
  isExternal: false
  name: IsolatedStorageFileStream
  fullName: System.IO.IsolatedStorage.IsolatedStorageFileStream
- uid: System.DateTimeOffset
  parent: System
  isExternal: false
  name: DateTimeOffset
  fullName: System.DateTimeOffset
- uid: System.String[]
  isExternal: false
  name: String[]
  fullName: System.String[]
  fullname.vb: System.String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: String
    fullName: System.String
  - name: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.String
    name: String
    fullName: System.String
  - name: ()
    fullName: ()
- uid: System.IO.IsolatedStorage.IsolatedStorageFile
  parent: System.IO.IsolatedStorage
  isExternal: false
  name: IsolatedStorageFile
  fullName: System.IO.IsolatedStorage.IsolatedStorageFile
- uid: System.IO.FileMode
  parent: System.IO
  isExternal: false
  name: FileMode
  fullName: System.IO.FileMode
- uid: System.IO
  isExternal: false
  name: System.IO
  fullName: System.IO
- uid: System.IO.FileAccess
  parent: System.IO
  isExternal: false
  name: FileAccess
  fullName: System.IO.FileAccess
- uid: System.IO.FileShare
  parent: System.IO
  isExternal: false
  name: FileShare
  fullName: System.IO.FileShare
- uid: System.ArgumentException
  parent: System
  isExternal: false
  name: ArgumentException
  fullName: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: false
  name: ArgumentNullException
  fullName: System.ArgumentNullException
- uid: System.InvalidOperationException
  parent: System
  isExternal: false
  name: InvalidOperationException
  fullName: System.InvalidOperationException
- uid: System.ObjectDisposedException
  isExternal: false
  name: ObjectDisposedException
  fullName: System.ObjectDisposedException
- uid: System.IO.FileNotFoundException
  isExternal: false
  name: FileNotFoundException
  fullName: System.IO.FileNotFoundException
- uid: System.IO.DirectoryNotFoundException
  isExternal: false
  name: DirectoryNotFoundException
  fullName: System.IO.DirectoryNotFoundException
- uid: System.IO.IsolatedStorage.IsolatedStorageException
  isExternal: false
  name: IsolatedStorageException
  fullName: System.IO.IsolatedStorage.IsolatedStorageException
- uid: System.UnauthorizedAccessException
  isExternal: false
  name: UnauthorizedAccessException
  fullName: System.UnauthorizedAccessException
- uid: System.Security.SecurityException
  isExternal: false
  name: SecurityException
  fullName: System.Security.SecurityException
