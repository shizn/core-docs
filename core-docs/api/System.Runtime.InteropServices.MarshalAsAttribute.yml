items:
- uid: System.Runtime.InteropServices.MarshalAsAttribute
  commentId: T:System.Runtime.InteropServices.MarshalAsAttribute
  id: MarshalAsAttribute
  parent: System.Runtime.InteropServices
  children:
  - System.Runtime.InteropServices.MarshalAsAttribute.#ctor(System.Int16)
  - System.Runtime.InteropServices.MarshalAsAttribute.#ctor(System.Runtime.InteropServices.UnmanagedType)
  - System.Runtime.InteropServices.MarshalAsAttribute.ArraySubType
  - System.Runtime.InteropServices.MarshalAsAttribute.IidParameterIndex
  - System.Runtime.InteropServices.MarshalAsAttribute.MarshalCookie
  - System.Runtime.InteropServices.MarshalAsAttribute.MarshalType
  - System.Runtime.InteropServices.MarshalAsAttribute.MarshalTypeRef
  - System.Runtime.InteropServices.MarshalAsAttribute.SafeArraySubType
  - System.Runtime.InteropServices.MarshalAsAttribute.SafeArrayUserDefinedSubType
  - System.Runtime.InteropServices.MarshalAsAttribute.SizeConst
  - System.Runtime.InteropServices.MarshalAsAttribute.SizeParamIndex
  - System.Runtime.InteropServices.MarshalAsAttribute.Value
  langs:
  - csharp
  - vb
  name: MarshalAsAttribute
  fullName: System.Runtime.InteropServices.MarshalAsAttribute
  type: Class
  source:
    remote:
      path: src/System.Runtime.InteropServices/ref/System.Runtime.InteropServices.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: MarshalAsAttribute
    path: src/System.Runtime.InteropServices/ref/System.Runtime.InteropServices.cs
    startLine: 655
  assemblies:
  - System.Runtime.InteropServices
  namespace: System.Runtime.InteropServices
  summary: "\n<p>Indicates how to marshal the data between managed and unmanaged code.</p>\n"
  remarks: "\n<p>You can apply this attribute to parameters, fields, or return values.</p>\n<p>This attribute is optional, as each data type has a default marshaling behavior. This attribute is only necessary when a given type can be marshaled to multiple types. For example, you can marshal a string to unmanaged code as either a <xref href=\"System.Runtime.InteropServices.UnmanagedType.LPStr\" data-throw-if-not-resolved=\"false\"></xref>, a <xref href=\"System.Runtime.InteropServices.UnmanagedType.LPWStr\" data-throw-if-not-resolved=\"false\"></xref>, a <xref href=\"System.Runtime.InteropServices.UnmanagedType.LPTStr\" data-throw-if-not-resolved=\"false\"></xref>, or a <xref href=\"System.Runtime.InteropServices.UnmanagedType.BStr\" data-throw-if-not-resolved=\"false\"></xref>. By default, the common language runtime marshals a string parameter as a <xref href=\"System.Runtime.InteropServices.UnmanagedType.BStr\" data-throw-if-not-resolved=\"false\"></xref> to COM methods. You can apply the <xref href=\"System.Runtime.InteropServices.MarshalAsAttribute\" data-throw-if-not-resolved=\"false\"></xref> attribute to an individual field or parameter to cause that particular string to be marshaled as a <xref href=\"System.Runtime.InteropServices.UnmanagedType.LPStr\" data-throw-if-not-resolved=\"false\"></xref> instead of a <xref href=\"System.Runtime.InteropServices.UnmanagedType.BStr\" data-throw-if-not-resolved=\"false\"></xref>. The Tlbexp.exe (Type Library Exporter) passes your marshaling preferences to the common language runtime.</p>\n<p>Some parameters and return values have different default marshaling behavior when used with COM interop or platform invoke. By default, the runtime marshals a string parameter (and fields in a value type) as a <xref href=\"System.Runtime.InteropServices.UnmanagedType.LPStr\" data-throw-if-not-resolved=\"false\"></xref> to a platform invoke method or function. For additional information, see Default Marshaling Behavior.</p>\n<p>In most cases, the attribute simply identifies the format of the unmanaged data using the <xref href=\"System.Runtime.InteropServices.UnmanagedType\" data-throw-if-not-resolved=\"false\"></xref> enumeration, as shown in the following C# signature: </p>system.runtime.interopservices.MarshalAsAttribute#2<p>Some <xref href=\"System.Runtime.InteropServices.UnmanagedType\" data-throw-if-not-resolved=\"false\"></xref> enumeration members require additional information. For example, additional information is needed when the <xref href=\"System.Runtime.InteropServices.UnmanagedType\" data-throw-if-not-resolved=\"false\"></xref> is <xref href=\"System.Runtime.InteropServices.UnmanagedType.LPArray\" data-throw-if-not-resolved=\"false\"></xref>. For a complete description of how to use this attribute with arrays, see Default Marshaling for Arrays.</p><p>The Tlbimp.exe (Type Library Importer) also applies this attribute to parameters, fields, and return values to indicate that the data type in the input type library is not the default type for the corresponding managed data type. Tlbimp.exe always applies the <xref href=\"System.Runtime.InteropServices.MarshalAsAttribute\" data-throw-if-not-resolved=\"false\"></xref> to <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"System.Object\" data-throw-if-not-resolved=\"false\"></xref> types for clarity, regardless of the type specified in the input type library.</p><p>The <xref href=\"System.Runtime.InteropServices.MarshalAsAttribute\" data-throw-if-not-resolved=\"false\"></xref> does not support marshaling of generic types.</p>"
  example:
  - "\n<p>The following example applies the <xref href=\"System.Runtime.InteropServices.MarshalAsAttribute\" data-throw-if-not-resolved=\"false\"></xref> to a field, a method parameter, and a method return value in a managed type.</p>System.Runtime.InteropServices.MarshalAsAttribute#1<p>The following example applies the <xref href=\"System.Runtime.InteropServices.MarshalAsAttribute\" data-throw-if-not-resolved=\"false\"></xref> attribute to a property:</p>System.Runtime.InteropServices.MarshalAsAttribute#3"
  syntax:
    content: 'public sealed class MarshalAsAttribute : Attribute'
    content.vb: >-
      Public NotInheritable Class MarshalAsAttribute
          Inherits Attribute
  seealso:
  - type: System.Runtime.InteropServices.UnmanagedType
    commentId: T:System.Runtime.InteropServices.UnmanagedType
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: System.Runtime.InteropServices.MarshalAsAttribute.ArraySubType
  commentId: F:System.Runtime.InteropServices.MarshalAsAttribute.ArraySubType
  id: ArraySubType
  parent: System.Runtime.InteropServices.MarshalAsAttribute
  langs:
  - csharp
  - vb
  name: ArraySubType
  fullName: System.Runtime.InteropServices.MarshalAsAttribute.ArraySubType
  type: Field
  source:
    remote:
      path: src/System.Runtime.InteropServices/ref/System.Runtime.InteropServices.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ArraySubType
    path: src/System.Runtime.InteropServices/ref/System.Runtime.InteropServices.cs
    startLine: 658
  assemblies:
  - System.Runtime.InteropServices
  namespace: System.Runtime.InteropServices
  summary: "\n<p>Specifies the element type of the unmanaged <xref href=\"System.Runtime.InteropServices.UnmanagedType.LPArray\" data-throw-if-not-resolved=\"false\"></xref> or <xref href=\"System.Runtime.InteropServices.UnmanagedType.ByValArray\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  remarks: "\n<p>You can set this parameter to a value from the <xref href=\"System.Runtime.InteropServices.UnmanagedType\" data-throw-if-not-resolved=\"false\"></xref> enumeration to specify the type of the array's elements. If a type is not specified, the default unmanaged type corresponding to the managed array's element type is used. For example, the <strong>ArraySubType</strong> for a <strong>LPWStr</strong> array in COM is <xref href=\"System.Runtime.InteropServices.UnmanagedType.LPWStr\" data-throw-if-not-resolved=\"false\"></xref>. For additional information, see Default Marshaling for Arrays.</p>\n"
  syntax:
    content: public UnmanagedType ArraySubType
    content.vb: Public ArraySubType As UnmanagedType
    return:
      type: System.Runtime.InteropServices.UnmanagedType
  seealso:
  - type: System.Runtime.InteropServices.UnmanagedType
    commentId: T:System.Runtime.InteropServices.UnmanagedType
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Runtime.InteropServices.MarshalAsAttribute.IidParameterIndex
  commentId: F:System.Runtime.InteropServices.MarshalAsAttribute.IidParameterIndex
  id: IidParameterIndex
  parent: System.Runtime.InteropServices.MarshalAsAttribute
  langs:
  - csharp
  - vb
  name: IidParameterIndex
  fullName: System.Runtime.InteropServices.MarshalAsAttribute.IidParameterIndex
  type: Field
  source:
    remote:
      path: src/System.Runtime.InteropServices/ref/System.Runtime.InteropServices.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IidParameterIndex
    path: src/System.Runtime.InteropServices/ref/System.Runtime.InteropServices.cs
    startLine: 659
  assemblies:
  - System.Runtime.InteropServices
  namespace: System.Runtime.InteropServices
  summary: "\n<p>Specifies the parameter index of the unmanaged <strong>iid_is</strong> attribute used by COM.</p>\n"
  example:
  - 
  syntax:
    content: public int IidParameterIndex
    content.vb: Public IidParameterIndex As Integer
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Runtime.InteropServices.MarshalAsAttribute.MarshalCookie
  commentId: F:System.Runtime.InteropServices.MarshalAsAttribute.MarshalCookie
  id: MarshalCookie
  parent: System.Runtime.InteropServices.MarshalAsAttribute
  langs:
  - csharp
  - vb
  name: MarshalCookie
  fullName: System.Runtime.InteropServices.MarshalAsAttribute.MarshalCookie
  type: Field
  source:
    remote:
      path: src/System.Runtime.InteropServices/ref/System.Runtime.InteropServices.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: MarshalCookie
    path: src/System.Runtime.InteropServices/ref/System.Runtime.InteropServices.cs
    startLine: 660
  assemblies:
  - System.Runtime.InteropServices
  namespace: System.Runtime.InteropServices
  summary: "\n<p>Provides additional information to a custom marshaler.</p>\n"
  remarks: "\n<p>This field is optional when using a custom marshaler.</p>\n<p>You can set this field to a string that supplies additional information to a custom marshaler. For example, the same marshaler can be used to provide a number of wrappers, where the cookie is used to indicate the specific wrapper.</p>\n"
  syntax:
    content: public string MarshalCookie
    content.vb: Public MarshalCookie As String
    return:
      type: System.String
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Runtime.InteropServices.MarshalAsAttribute.MarshalType
  commentId: F:System.Runtime.InteropServices.MarshalAsAttribute.MarshalType
  id: MarshalType
  parent: System.Runtime.InteropServices.MarshalAsAttribute
  langs:
  - csharp
  - vb
  name: MarshalType
  fullName: System.Runtime.InteropServices.MarshalAsAttribute.MarshalType
  type: Field
  source:
    remote:
      path: src/System.Runtime.InteropServices/ref/System.Runtime.InteropServices.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: MarshalType
    path: src/System.Runtime.InteropServices/ref/System.Runtime.InteropServices.cs
    startLine: 661
  assemblies:
  - System.Runtime.InteropServices
  namespace: System.Runtime.InteropServices
  summary: "\n<p>Specifies the fully qualified name of a custom marshaler.</p>\n"
  remarks: "\n<p>You can use either the <xref href=\"System.Runtime.InteropServices.MarshalAsAttribute.MarshalType\" data-throw-if-not-resolved=\"false\"></xref> or <xref href=\"System.Runtime.InteropServices.MarshalAsAttribute.MarshalTypeRef\" data-throw-if-not-resolved=\"false\"></xref> field specify a custom marshaler type for the attributed parameter, field, or return type. The <xref href=\"System.Runtime.InteropServices.MarshalAsAttribute.MarshalType\" data-throw-if-not-resolved=\"false\"></xref> field enables you to specify a string representing the fully qualified name of a custom marshaler. It is useful for late-bound references, but is less preferred than <xref href=\"System.Runtime.InteropServices.MarshalAsAttribute.MarshalTypeRef\" data-throw-if-not-resolved=\"false\"></xref> for specifying a custom marshaler. For additional information about creating and using custom marshalers, see Custom Marshaling.</p>\n"
  syntax:
    content: public string MarshalType
    content.vb: Public MarshalType As String
    return:
      type: System.String
  seealso:
  - type: System.Runtime.InteropServices.MarshalAsAttribute.MarshalTypeRef
    commentId: F:System.Runtime.InteropServices.MarshalAsAttribute.MarshalTypeRef
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Runtime.InteropServices.MarshalAsAttribute.MarshalTypeRef
  commentId: F:System.Runtime.InteropServices.MarshalAsAttribute.MarshalTypeRef
  id: MarshalTypeRef
  parent: System.Runtime.InteropServices.MarshalAsAttribute
  langs:
  - csharp
  - vb
  name: MarshalTypeRef
  fullName: System.Runtime.InteropServices.MarshalAsAttribute.MarshalTypeRef
  type: Field
  source:
    remote:
      path: src/System.Runtime.InteropServices/ref/System.Runtime.InteropServices.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: MarshalTypeRef
    path: src/System.Runtime.InteropServices/ref/System.Runtime.InteropServices.cs
    startLine: 662
  assemblies:
  - System.Runtime.InteropServices
  namespace: System.Runtime.InteropServices
  summary: "\n<p>Implements <xref href=\"System.Runtime.InteropServices.MarshalAsAttribute.MarshalType\" data-throw-if-not-resolved=\"false\"></xref> as a type.</p>\n"
  remarks: "\n<p>You can use either the <xref href=\"System.Runtime.InteropServices.MarshalAsAttribute.MarshalTypeRef\" data-throw-if-not-resolved=\"false\"></xref> or <xref href=\"System.Runtime.InteropServices.MarshalAsAttribute.MarshalType\" data-throw-if-not-resolved=\"false\"></xref> field to specify a custom marshaler type for the attributed parameter, field, or return type. The <xref href=\"System.Runtime.InteropServices.MarshalAsAttribute.MarshalTypeRef\" data-throw-if-not-resolved=\"false\"></xref> field allows easier usage of <xref href=\"System.Runtime.InteropServices.MarshalAsAttribute.MarshalType\" data-throw-if-not-resolved=\"false\"></xref> by shortening the syntax. In the following example, the first line represents syntax using <xref href=\"System.Runtime.InteropServices.MarshalAsAttribute.MarshalType\" data-throw-if-not-resolved=\"false\"></xref> and the second line represents syntax using <xref href=\"System.Runtime.InteropServices.MarshalAsAttribute.MarshalTypeRef\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<pre><code>[MarshalAs(UnmanagedType.CustomMarshaler, MarshalType = \"Assembly, NameSpace.TypeName\")] </code></pre>\n<pre><code>[MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(NameSpace.TypeName)]</code></pre>\n<p>You can set a <xref href=\"System.Type\" data-throw-if-not-resolved=\"false\"></xref> object using <strong>typeof</strong> in C#, <strong>GetType</strong> in Visual Basic, or <strong>typeid</strong> in C++. For additional information about creating and using custom marshalers, see Custom Marshaling.</p>\n"
  syntax:
    content: public Type MarshalTypeRef
    content.vb: Public MarshalTypeRef As Type
    return:
      type: System.Type
  seealso:
  - type: System.Runtime.InteropServices.MarshalAsAttribute.MarshalType
    commentId: F:System.Runtime.InteropServices.MarshalAsAttribute.MarshalType
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Runtime.InteropServices.MarshalAsAttribute.SafeArraySubType
  commentId: F:System.Runtime.InteropServices.MarshalAsAttribute.SafeArraySubType
  id: SafeArraySubType
  parent: System.Runtime.InteropServices.MarshalAsAttribute
  langs:
  - csharp
  - vb
  name: SafeArraySubType
  fullName: System.Runtime.InteropServices.MarshalAsAttribute.SafeArraySubType
  type: Field
  source:
    remote:
      path: src/System.Runtime.InteropServices/ref/System.Runtime.InteropServices.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: SafeArraySubType
    path: src/System.Runtime.InteropServices/ref/System.Runtime.InteropServices.cs
    startLine: 663
  assemblies:
  - System.Runtime.InteropServices
  namespace: System.Runtime.InteropServices
  summary: "\n<p>Indicates the element type of the <xref href=\"System.Runtime.InteropServices.UnmanagedType.SafeArray\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  remarks: "\n<p>You can set this field to a value from the <xref href=\"System.Runtime.InteropServices.VarEnum\" data-throw-if-not-resolved=\"false\"></xref> enumeration to specify the type of the safe array's elements. If a type is not specified, the managed element type's default type (if passed as a VARIANT) is used. For example, the <strong>SafeArraySubType</strong> for an <strong>int</strong> array in COM is <xref href=\"System.Runtime.InteropServices.VarEnum.VT_I4\" data-throw-if-not-resolved=\"false\"></xref>. For additional information, see Default Marshaling for Arrays.</p>\n"
  syntax:
    content: public VarEnum SafeArraySubType
    content.vb: Public SafeArraySubType As VarEnum
    return:
      type: System.Runtime.InteropServices.VarEnum
  seealso:
  - type: System.Runtime.InteropServices.UnmanagedType.SafeArray
    commentId: F:System.Runtime.InteropServices.UnmanagedType.SafeArray
  - type: System.Runtime.InteropServices.VarEnum
    commentId: T:System.Runtime.InteropServices.VarEnum
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Runtime.InteropServices.MarshalAsAttribute.SafeArrayUserDefinedSubType
  commentId: F:System.Runtime.InteropServices.MarshalAsAttribute.SafeArrayUserDefinedSubType
  id: SafeArrayUserDefinedSubType
  parent: System.Runtime.InteropServices.MarshalAsAttribute
  langs:
  - csharp
  - vb
  name: SafeArrayUserDefinedSubType
  fullName: System.Runtime.InteropServices.MarshalAsAttribute.SafeArrayUserDefinedSubType
  type: Field
  source:
    remote:
      path: src/System.Runtime.InteropServices/ref/System.Runtime.InteropServices.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: SafeArrayUserDefinedSubType
    path: src/System.Runtime.InteropServices/ref/System.Runtime.InteropServices.cs
    startLine: 664
  assemblies:
  - System.Runtime.InteropServices
  namespace: System.Runtime.InteropServices
  summary: "\n<p>Indicates the user-defined element type of the <xref href=\"System.Runtime.InteropServices.UnmanagedType.SafeArray\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  remarks: "\n<p>Initialize this field with your custom type to enable the elements of the <strong>SAFEARRAY</strong> to be marshaled successfully. This field is only needed when the <xref href=\"System.Runtime.InteropServices.MarshalAsAttribute.SafeArraySubType\" data-throw-if-not-resolved=\"false\"></xref> is either <xref href=\"System.Runtime.InteropServices.VarEnum.VT_UNKNOWN\" data-throw-if-not-resolved=\"false\"></xref>, <xref href=\"System.Runtime.InteropServices.VarEnum.VT_DISPATCH\" data-throw-if-not-resolved=\"false\"></xref>, or <xref href=\"System.Runtime.InteropServices.VarEnum.VT_RECORD\" data-throw-if-not-resolved=\"false\"></xref>. For additional information, see Default Marshaling for Arrays.</p>\n"
  syntax:
    content: public Type SafeArrayUserDefinedSubType
    content.vb: Public SafeArrayUserDefinedSubType As Type
    return:
      type: System.Type
  seealso:
  - type: System.Runtime.InteropServices.UnmanagedType.SafeArray
    commentId: F:System.Runtime.InteropServices.UnmanagedType.SafeArray
  - type: System.Runtime.InteropServices.MarshalAsAttribute.SafeArraySubType
    commentId: F:System.Runtime.InteropServices.MarshalAsAttribute.SafeArraySubType
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Runtime.InteropServices.MarshalAsAttribute.SizeConst
  commentId: F:System.Runtime.InteropServices.MarshalAsAttribute.SizeConst
  id: SizeConst
  parent: System.Runtime.InteropServices.MarshalAsAttribute
  langs:
  - csharp
  - vb
  name: SizeConst
  fullName: System.Runtime.InteropServices.MarshalAsAttribute.SizeConst
  type: Field
  source:
    remote:
      path: src/System.Runtime.InteropServices/ref/System.Runtime.InteropServices.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: SizeConst
    path: src/System.Runtime.InteropServices/ref/System.Runtime.InteropServices.cs
    startLine: 665
  assemblies:
  - System.Runtime.InteropServices
  namespace: System.Runtime.InteropServices
  summary: "\n<p>Indicates the number of elements in the fixed-length array or the number of characters (not bytes) in a string to import.</p>\n"
  remarks: "\n<p>This field is required for the <xref href=\"System.Runtime.InteropServices.UnmanagedType.ByValArray\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"System.Runtime.InteropServices.UnmanagedType.ByValTStr\" data-throw-if-not-resolved=\"false\"></xref> members of the <xref href=\"System.Runtime.InteropServices.UnmanagedType\" data-throw-if-not-resolved=\"false\"></xref> enumeration. Because the compressed format of the metadata is limited to 0x1FFFFFFF, the range of allowed values for <xref href=\"System.Runtime.InteropServices.MarshalAsAttribute.SizeConst\" data-throw-if-not-resolved=\"false\"></xref> are (>= 0 and <= 0x1FFFFFFF).</p>\n<p>For additional information, see Default Marshaling for Arrays.</p>\n"
  syntax:
    content: public int SizeConst
    content.vb: Public SizeConst As Integer
    return:
      type: System.Int32
  seealso:
  - type: System.Runtime.InteropServices.UnmanagedType
    commentId: T:System.Runtime.InteropServices.UnmanagedType
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Runtime.InteropServices.MarshalAsAttribute.SizeParamIndex
  commentId: F:System.Runtime.InteropServices.MarshalAsAttribute.SizeParamIndex
  id: SizeParamIndex
  parent: System.Runtime.InteropServices.MarshalAsAttribute
  langs:
  - csharp
  - vb
  name: SizeParamIndex
  fullName: System.Runtime.InteropServices.MarshalAsAttribute.SizeParamIndex
  type: Field
  source:
    remote:
      path: src/System.Runtime.InteropServices/ref/System.Runtime.InteropServices.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: SizeParamIndex
    path: src/System.Runtime.InteropServices/ref/System.Runtime.InteropServices.cs
    startLine: 666
  assemblies:
  - System.Runtime.InteropServices
  namespace: System.Runtime.InteropServices
  summary: "\n<p>Indicates the zero-based parameter that contains the count of array elements, similar to <strong>size_is</strong> in COM.</p>\n"
  remarks: "\n<p>The <xref href=\"System.Runtime.InteropServices.MarshalAsAttribute.SizeParamIndex\" data-throw-if-not-resolved=\"false\"></xref> field supports managed-to-unmanaged and unmanaged-to-managed calls. It does not have any effect on managed code that calls COM objects.</p>\n<p>Depending on the managed type and the attributes applied to it, the array can be passed as a safe array or C-style array.</p>\n<p>When arrays are passed as C-style arrays, the marshaler cannot determine the size of the array. Therefore, to pass an managed array to an unmanaged function or method, you must provide two arguments:</p>\n<ul><li>\n<p>The array, defined by reference or value.</p>\n</li><li>\n<p>The array size, defined by reference or value.</p>\n</li></ul>\n<p>The zero-based index of the array size parameter is defined by using the <xref href=\"System.Runtime.InteropServices.MarshalAsAttribute.SizeParamIndex\" data-throw-if-not-resolved=\"false\"></xref> field.</p>\n<p>If you specify both <xref href=\"System.Runtime.InteropServices.MarshalAsAttribute.SizeParamIndex\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"System.Runtime.InteropServices.MarshalAsAttribute.SizeConst\" data-throw-if-not-resolved=\"false\"></xref> with a <xref href=\"System.Runtime.InteropServices.UnmanagedType.LPArray\" data-throw-if-not-resolved=\"false\"></xref> field, the sum of the fields' values produces a size total.</p>\n<p>For more information, see Default Marshaling for Arrays.</p>\n"
  example:
  - System.Runtime.InteropServices.MarshalAsAttribute.SizeParamIndex#1
  syntax:
    content: public short SizeParamIndex
    content.vb: Public SizeParamIndex As Short
    return:
      type: System.Int16
  seealso:
  - type: System.Runtime.InteropServices.MarshalAsAttribute.SizeConst
    commentId: F:System.Runtime.InteropServices.MarshalAsAttribute.SizeConst
  - type: System.Runtime.InteropServices.UnmanagedType.LPArray
    commentId: F:System.Runtime.InteropServices.UnmanagedType.LPArray
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Runtime.InteropServices.MarshalAsAttribute.#ctor(System.Int16)
  commentId: M:System.Runtime.InteropServices.MarshalAsAttribute.#ctor(System.Int16)
  id: '#ctor(System.Int16)'
  parent: System.Runtime.InteropServices.MarshalAsAttribute
  langs:
  - csharp
  - vb
  name: MarshalAsAttribute(Int16)
  fullName: System.Runtime.InteropServices.MarshalAsAttribute.MarshalAsAttribute(System.Int16)
  type: Constructor
  source:
    remote:
      path: src/System.Runtime.InteropServices/ref/System.Runtime.InteropServices.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Runtime.InteropServices/ref/System.Runtime.InteropServices.cs
    startLine: 667
  assemblies:
  - System.Runtime.InteropServices
  namespace: System.Runtime.InteropServices
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Runtime.InteropServices.MarshalAsAttribute\" data-throw-if-not-resolved=\"false\"></xref> class with the specified <xref href=\"System.Runtime.InteropServices.UnmanagedType\" data-throw-if-not-resolved=\"false\"></xref> value.</p>\n"
  remarks: "\n<p>This constructor takes an underlying 16-bit signed integer that represents each <xref href=\"System.Runtime.InteropServices.UnmanagedType\" data-throw-if-not-resolved=\"false\"></xref> enumeration member. The Tlbimp.exe (Type Library Importer)  uses this constructor.</p>\n"
  syntax:
    content: public MarshalAsAttribute(short unmanagedType)
    content.vb: Public Sub New(unmanagedType As Short)
    parameters:
    - id: unmanagedType
      type: System.Int16
      description: "\n<p>The value the data is to be marshaled as. </p>\n"
  seealso:
  - type: System.Runtime.InteropServices.UnmanagedType
    commentId: T:System.Runtime.InteropServices.UnmanagedType
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Runtime.InteropServices.MarshalAsAttribute.#ctor(System.Runtime.InteropServices.UnmanagedType)
  commentId: M:System.Runtime.InteropServices.MarshalAsAttribute.#ctor(System.Runtime.InteropServices.UnmanagedType)
  id: '#ctor(System.Runtime.InteropServices.UnmanagedType)'
  parent: System.Runtime.InteropServices.MarshalAsAttribute
  langs:
  - csharp
  - vb
  name: MarshalAsAttribute(UnmanagedType)
  fullName: System.Runtime.InteropServices.MarshalAsAttribute.MarshalAsAttribute(System.Runtime.InteropServices.UnmanagedType)
  type: Constructor
  source:
    remote:
      path: src/System.Runtime.InteropServices/ref/System.Runtime.InteropServices.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Runtime.InteropServices/ref/System.Runtime.InteropServices.cs
    startLine: 668
  assemblies:
  - System.Runtime.InteropServices
  namespace: System.Runtime.InteropServices
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Runtime.InteropServices.MarshalAsAttribute\" data-throw-if-not-resolved=\"false\"></xref> class with the specified <xref href=\"System.Runtime.InteropServices.UnmanagedType\" data-throw-if-not-resolved=\"false\"></xref> enumeration member.</p>\n"
  remarks: "\n<p>For readable code that is less prone to error, always use this constructor.</p>\n"
  syntax:
    content: public MarshalAsAttribute(UnmanagedType unmanagedType)
    content.vb: Public Sub New(unmanagedType As UnmanagedType)
    parameters:
    - id: unmanagedType
      type: System.Runtime.InteropServices.UnmanagedType
      description: "\n<p>The value the data is to be marshaled as. </p>\n"
  seealso:
  - type: System.Runtime.InteropServices.UnmanagedType
    commentId: T:System.Runtime.InteropServices.UnmanagedType
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Runtime.InteropServices.MarshalAsAttribute.Value
  commentId: P:System.Runtime.InteropServices.MarshalAsAttribute.Value
  id: Value
  parent: System.Runtime.InteropServices.MarshalAsAttribute
  langs:
  - csharp
  - vb
  name: Value
  fullName: System.Runtime.InteropServices.MarshalAsAttribute.Value
  type: Property
  source:
    remote:
      path: src/System.Runtime.InteropServices/ref/System.Runtime.InteropServices.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Value
    path: src/System.Runtime.InteropServices/ref/System.Runtime.InteropServices.cs
    startLine: 669
  assemblies:
  - System.Runtime.InteropServices
  namespace: System.Runtime.InteropServices
  summary: "\n<p>Gets the <xref href=\"System.Runtime.InteropServices.UnmanagedType\" data-throw-if-not-resolved=\"false\"></xref> value the data is to be marshaled as.</p>\n"
  remarks: "\n<p>This value is used with <xref href=\"System.Runtime.InteropServices.MarshalAsAttribute\" data-throw-if-not-resolved=\"false\"></xref> to indicate how types should be marshaled between managed and unmanaged code. In some cases, you can use this field with certain <strong>UnmanagedType</strong> enumeration members. For <xref href=\"System.Runtime.InteropServices.UnmanagedType.CustomMarshaler\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"System.Runtime.InteropServices.UnmanagedType.ByValArray\" data-throw-if-not-resolved=\"false\"></xref>, you must use additional named parameters.</p>\n"
  syntax:
    content: public UnmanagedType Value { get; }
    content.vb: Public ReadOnly Property Value As UnmanagedType
    parameters: []
    return:
      type: System.Runtime.InteropServices.UnmanagedType
      description: "\n<p>The <xref href=\"System.Runtime.InteropServices.UnmanagedType\" data-throw-if-not-resolved=\"false\"></xref> value the data is to be marshaled as.</p>\n"
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: System.Runtime.InteropServices
  isExternal: false
  name: System.Runtime.InteropServices
  fullName: System.Runtime.InteropServices
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Runtime.InteropServices.UnmanagedType
  parent: System.Runtime.InteropServices
  isExternal: false
  name: UnmanagedType
  fullName: System.Runtime.InteropServices.UnmanagedType
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  fullName: System.Int32
- uid: System.String
  parent: System
  isExternal: false
  name: String
  fullName: System.String
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  fullName: System.Type
- uid: System.Runtime.InteropServices.VarEnum
  parent: System.Runtime.InteropServices
  isExternal: false
  name: VarEnum
  fullName: System.Runtime.InteropServices.VarEnum
- uid: System.Int16
  parent: System
  isExternal: false
  name: Int16
  fullName: System.Int16
