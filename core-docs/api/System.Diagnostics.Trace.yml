items:
- uid: System.Diagnostics.Trace
  commentId: T:System.Diagnostics.Trace
  id: Trace
  parent: System.Diagnostics
  children:
  - System.Diagnostics.Trace.Assert(System.Boolean)
  - System.Diagnostics.Trace.Assert(System.Boolean,System.String)
  - System.Diagnostics.Trace.Assert(System.Boolean,System.String,System.String)
  - System.Diagnostics.Trace.AutoFlush
  - System.Diagnostics.Trace.Close
  - System.Diagnostics.Trace.Fail(System.String)
  - System.Diagnostics.Trace.Fail(System.String,System.String)
  - System.Diagnostics.Trace.Flush
  - System.Diagnostics.Trace.Indent
  - System.Diagnostics.Trace.IndentLevel
  - System.Diagnostics.Trace.IndentSize
  - System.Diagnostics.Trace.Listeners
  - System.Diagnostics.Trace.Refresh
  - System.Diagnostics.Trace.TraceError(System.String)
  - System.Diagnostics.Trace.TraceError(System.String,System.Object[])
  - System.Diagnostics.Trace.TraceInformation(System.String)
  - System.Diagnostics.Trace.TraceInformation(System.String,System.Object[])
  - System.Diagnostics.Trace.TraceWarning(System.String)
  - System.Diagnostics.Trace.TraceWarning(System.String,System.Object[])
  - System.Diagnostics.Trace.Unindent
  - System.Diagnostics.Trace.UseGlobalLock
  - System.Diagnostics.Trace.Write(System.Object)
  - System.Diagnostics.Trace.Write(System.Object,System.String)
  - System.Diagnostics.Trace.Write(System.String)
  - System.Diagnostics.Trace.Write(System.String,System.String)
  - System.Diagnostics.Trace.WriteIf(System.Boolean,System.Object)
  - System.Diagnostics.Trace.WriteIf(System.Boolean,System.Object,System.String)
  - System.Diagnostics.Trace.WriteIf(System.Boolean,System.String)
  - System.Diagnostics.Trace.WriteIf(System.Boolean,System.String,System.String)
  - System.Diagnostics.Trace.WriteLine(System.Object)
  - System.Diagnostics.Trace.WriteLine(System.Object,System.String)
  - System.Diagnostics.Trace.WriteLine(System.String)
  - System.Diagnostics.Trace.WriteLine(System.String,System.String)
  - System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.Object)
  - System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.Object,System.String)
  - System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.String)
  - System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.String,System.String)
  langs:
  - csharp
  - vb
  name: Trace
  fullName: System.Diagnostics.Trace
  type: Class
  source:
    remote:
      path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/Trace.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Trace
    path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/Trace.cs
    startLine: 13
  assemblies:
  - System.Diagnostics.TraceSource
  namespace: System.Diagnostics
  summary: "\n<p>Provides a set of methods and properties that help you trace the execution of your code. This class cannot be inherited.</p>\n"
  remarks: "\n<p>You can use the properties and methods in the <xref href=\"System.Diagnostics.Trace\" data-throw-if-not-resolved=\"false\"></xref> class to instrument release builds. Instrumentation allows you to monitor the health of your application running in real-life settings. Tracing helps you isolate problems and fix them without disturbing a running system.</p>\n<p>This class provides methods to display an <xref href=\"System.Diagnostics.Trace.Assert(System.Boolean)\" data-throw-if-not-resolved=\"false\"></xref> dialog box, and to emit an assertion that will always <xref href=\"System.Diagnostics.Trace.Fail(System.String)\" data-throw-if-not-resolved=\"false\"></xref>. This class provides write methods in the following variations: <xref href=\"System.Diagnostics.Trace.Write(System.String)\" data-throw-if-not-resolved=\"false\"></xref>, <xref href=\"System.Diagnostics.Trace.WriteLine(System.String)\" data-throw-if-not-resolved=\"false\"></xref>, <xref href=\"System.Diagnostics.Trace.WriteIf(System.Boolean,System.String)\" data-throw-if-not-resolved=\"false\"></xref>, and <xref href=\"System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.String)\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>The <xref href=\"System.Diagnostics.BooleanSwitch\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"System.Diagnostics.TraceSwitch\" data-throw-if-not-resolved=\"false\"></xref> classes provide means to dynamically control the tracing output. You can modify the values of these switches without recompiling your application. For information on using the configuration file to set a switch, see the <xref href=\"System.Diagnostics.Switch\" data-throw-if-not-resolved=\"false\"></xref> class and the How to: Create, Initialize and Configure Trace Switches topic.</p>\n<p>You can customize the tracing output's target by adding <xref href=\"System.Diagnostics.TraceListener\" data-throw-if-not-resolved=\"false\"></xref> instances to or removing instances from the <xref href=\"System.Diagnostics.Trace.Listeners\" data-throw-if-not-resolved=\"false\"></xref> collection. The <xref href=\"System.Diagnostics.Trace.Listeners\" data-throw-if-not-resolved=\"false\"></xref> collection is shared by both the <xref href=\"System.Diagnostics.Debug\" data-throw-if-not-resolved=\"false\"></xref> and the <xref href=\"System.Diagnostics.Trace\" data-throw-if-not-resolved=\"false\"></xref> classes; adding a trace listener to either class adds the listener to both. By default, trace output is emitted using the <xref href=\"System.Diagnostics.DefaultTraceListener\" data-throw-if-not-resolved=\"false\"></xref> class.</p>\n<p>Adding a trace listener to the <xref href=\"System.Diagnostics.Trace.Listeners\" data-throw-if-not-resolved=\"false\"></xref> collection can cause an exception to be thrown while tracing, if a resource used by the trace listener is not available. The conditions and the exception thrown depend on the trace listener and cannot be enumerated in this topic. It may be useful to place calls to the <xref href=\"System.Diagnostics.Trace\" data-throw-if-not-resolved=\"false\"></xref> methods in <strong>try</strong>/<strong>catch</strong> blocks to detect and handle any exceptions from trace listeners.</p>\n<p>If you add trace listeners to partially trusted code, you will get a <xref href=\"System.Security.SecurityException\" data-throw-if-not-resolved=\"false\"></xref> exception, because adding trace listeners requires <xref href=\"System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode\" data-throw-if-not-resolved=\"false\"></xref> permission. To trace partially trusted code that is running in a sandbox in Visual Studio, do not add trace listeners. Instead, view the <xref href=\"System.Diagnostics.Trace\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"System.Diagnostics.Debug\" data-throw-if-not-resolved=\"false\"></xref> messages in the Output window.</p>\n<p>The <xref href=\"System.Diagnostics.Trace\" data-throw-if-not-resolved=\"false\"></xref> class provides properties to get or set the level of <xref href=\"System.Diagnostics.Trace.Indent\" data-throw-if-not-resolved=\"false\"></xref>, the <xref href=\"System.Diagnostics.Trace.IndentSize\" data-throw-if-not-resolved=\"false\"></xref>, and whether to <xref href=\"System.Diagnostics.Trace.AutoFlush\" data-throw-if-not-resolved=\"false\"></xref> after each write.</p>\n<p>To set the <xref href=\"System.Diagnostics.Trace.AutoFlush\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"System.Diagnostics.Trace.IndentSize\" data-throw-if-not-resolved=\"false\"></xref> for <xref href=\"System.Diagnostics.Trace\" data-throw-if-not-resolved=\"false\"></xref>, you can edit the configuration file that corresponds to the name of your application. The configuration file should be formatted like the following example: </p>\n<pre><code><configuration>\n<system.diagnostics>\n<trace autoflush=\"false\" indentsize=\"3\" />\n</system.diagnostics>\n</configuration></code></pre>\n<p>The <xref href=\"System.Diagnostics.ConditionalAttribute\" data-throw-if-not-resolved=\"false\"></xref> attribute is applied to the methods of <xref href=\"System.Diagnostics.Trace\" data-throw-if-not-resolved=\"false\"></xref>. Compilers that support <xref href=\"System.Diagnostics.ConditionalAttribute\" data-throw-if-not-resolved=\"false\"></xref> ignore calls to these methods unless \"TRACE\" is defined as a conditional compilation symbol. Refer to a compiler's documentation to determine whether <xref href=\"System.Diagnostics.ConditionalAttribute\" data-throw-if-not-resolved=\"false\"></xref> is supported and the syntax for defining a conditional compilation symbol.</p>\n<p>In Visual Studio projects, by default, the \"DEBUG\" conditional compilation symbol is defined for debug builds, and the \"TRACE\" symbol is defined for both debug and release builds. For information about how to disable this behavior, see the Visual Studio documentation.</p>\n<p>To define the \"TRACE\" conditional compilation symbol in C#, add the <strong>/d:TRACE</strong> option to the compiler command line when you compile your code using a command line, or add <strong>#define TRACE</strong> to the top of your file. In Visual Basic, add the <strong>/d:TRACE=True</strong> option to the compiler command line or add <strong>#Const TRACE=True</strong> to the file. </p>\n<p>\n<xref href=\"System.Diagnostics.ConditionalAttribute\" data-throw-if-not-resolved=\"false\"></xref> is not supported by the C++ compiler. To provide equivalent functionality, you must enclose calls to the methods of <xref href=\"System.Diagnostics.Trace\" data-throw-if-not-resolved=\"false\"></xref> in an <strong>#if defined(TRACE) ... #endif</strong> block, and add the <strong>/DTRACE</strong> option to the compiler command line or add <strong>#define TRACE</strong> to the file.</p>\n"
  example:
  - "\n<p>The following example uses <xref href=\"System.Diagnostics.Trace\" data-throw-if-not-resolved=\"false\"></xref> to indicate the beginning and the end of a program's execution. The example also uses the <xref href=\"System.Diagnostics.Trace.Indent\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"System.Diagnostics.Trace.Unindent\" data-throw-if-not-resolved=\"false\"></xref> methods to distinguish the tracing output. For a more complete example of the use of <xref href=\"System.Diagnostics.Trace\" data-throw-if-not-resolved=\"false\"></xref>, see How to: Add Trace Statements to Application Code.</p>Classic Trace Example#1"
  syntax:
    content: public sealed class Trace
    content.vb: Public NotInheritable Class Trace
  seealso:
  - type: System.Diagnostics.Debug
    commentId: T:System.Diagnostics.Debug
  - type: System.Diagnostics.Switch
    commentId: T:System.Diagnostics.Switch
  - type: System.Diagnostics.BooleanSwitch
    commentId: T:System.Diagnostics.BooleanSwitch
  - type: System.Diagnostics.TraceSwitch
    commentId: T:System.Diagnostics.TraceSwitch
  - type: System.Diagnostics.TraceListener
    commentId: T:System.Diagnostics.TraceListener
  - type: System.Diagnostics.DefaultTraceListener
    commentId: T:System.Diagnostics.DefaultTraceListener
  - type: System.Diagnostics.EventLogTraceListener
    commentId: T:System.Diagnostics.EventLogTraceListener
  - type: System.Diagnostics.TraceListenerCollection
    commentId: T:System.Diagnostics.TraceListenerCollection
  - type: System.Diagnostics.ConditionalAttribute
    commentId: T:System.Diagnostics.ConditionalAttribute
  see:
  - type: System.Security.Permissions.SecurityPermission
    commentId: T:System.Security.Permissions.SecurityPermission
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: System.Diagnostics.Trace.AutoFlush
  commentId: P:System.Diagnostics.Trace.AutoFlush
  id: AutoFlush
  parent: System.Diagnostics.Trace
  langs:
  - csharp
  - vb
  name: AutoFlush
  fullName: System.Diagnostics.Trace.AutoFlush
  type: Property
  source:
    remote:
      path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/Trace.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: AutoFlush
    path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/Trace.cs
    startLine: 37
  assemblies:
  - System.Diagnostics.TraceSource
  namespace: System.Diagnostics
  summary: "\n<p>Gets or sets whether <xref href=\"System.Diagnostics.Trace.Flush\" data-throw-if-not-resolved=\"false\"></xref> should be called on the <xref href=\"System.Diagnostics.Trace.Listeners\" data-throw-if-not-resolved=\"false\"></xref> after every write.</p>\n"
  remarks: "\n<p>The default is <strong>false</strong>.</p>\n<p>Flushing the stream will not flush its underlying encoder unless you explicitly call <xref href=\"System.Diagnostics.Trace.Flush\" data-throw-if-not-resolved=\"false\"></xref> or <xref href=\"System.Diagnostics.Trace.Close\" data-throw-if-not-resolved=\"false\"></xref>. Setting <xref href=\"System.Diagnostics.Trace.AutoFlush\" data-throw-if-not-resolved=\"false\"></xref> to <strong>true</strong> means that data will be flushed from the buffer to the stream, but the encoder state will not be flushed. This allows the encoder to keep its state (partial characters) so that it can encode the next block of characters correctly. This scenario affects UTF8 and UTF7 where certain characters can only be encoded after the encoder receives the adjacent character or characters.</p>\n<p>To set the <xref href=\"System.Diagnostics.Trace.AutoFlush\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"System.Diagnostics.Trace.IndentSize\" data-throw-if-not-resolved=\"false\"></xref> for <xref href=\"System.Diagnostics.Trace\" data-throw-if-not-resolved=\"false\"></xref>, you can also edit the configuration file that corresponds to the name of your application. The configuration file should be formatted like the following example: </p>\n<pre><code><configuration>\n<system.diagnostics>\n<trace autoflush=\"false\" indentsize=\"3\" />\n</system.diagnostics>\n</configuration></code></pre>\n"
  syntax:
    content: public static bool AutoFlush { get; set; }
    content.vb: Public Shared Property AutoFlush As Boolean
    parameters: []
    return:
      type: System.Boolean
  seealso:
  - type: System.Diagnostics.Debug
    commentId: T:System.Diagnostics.Debug
  - type: System.Diagnostics.Trace
    commentId: T:System.Diagnostics.Trace
  - type: System.Diagnostics.BooleanSwitch
    commentId: T:System.Diagnostics.BooleanSwitch
  - type: System.Diagnostics.TraceSwitch
    commentId: T:System.Diagnostics.TraceSwitch
  - type: System.Diagnostics.TraceListener
    commentId: T:System.Diagnostics.TraceListener
  - type: System.Diagnostics.DefaultTraceListener
    commentId: T:System.Diagnostics.DefaultTraceListener
  - type: System.Diagnostics.ConditionalAttribute
    commentId: T:System.Diagnostics.ConditionalAttribute
  see:
  - type: System.Security.Permissions.SecurityPermission
    commentId: T:System.Security.Permissions.SecurityPermission
  modifiers.csharp:
  - public
  - static
  - get
  - set
  modifiers.vb:
  - Public
  - Shared
- uid: System.Diagnostics.Trace.IndentLevel
  commentId: P:System.Diagnostics.Trace.IndentLevel
  id: IndentLevel
  parent: System.Diagnostics.Trace
  langs:
  - csharp
  - vb
  name: IndentLevel
  fullName: System.Diagnostics.Trace.IndentLevel
  type: Property
  source:
    remote:
      path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/Trace.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IndentLevel
    path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/Trace.cs
    startLine: 64
  assemblies:
  - System.Diagnostics.TraceSource
  namespace: System.Diagnostics
  summary: "\n<p>Gets or sets the indent level.</p>\n"
  remarks: "\n<p>The <xref href=\"System.Diagnostics.Trace.IndentLevel\" data-throw-if-not-resolved=\"false\"></xref> property represents the number of times the indent of size <xref href=\"System.Diagnostics.Trace.IndentSize\" data-throw-if-not-resolved=\"false\"></xref> is applied. This property is stored on per-thread/per-request basis.</p>\n"
  example:
  - "\n<p>The following example increments and decrements the indent level and emits tracing messages.</p>Classic Trace.IndentLevel Example#1<p>This example produces the following output: </p><pre><code>List of errors:\nError 1: File not found\nError 2: Directory not found\nEnd of list of errors   </code></pre>"
  syntax:
    content: public static int IndentLevel { get; set; }
    content.vb: Public Shared Property IndentLevel As Integer
    parameters: []
    return:
      type: System.Int32
  seealso:
  - type: System.Diagnostics.Trace.IndentSize
    commentId: P:System.Diagnostics.Trace.IndentSize
  - type: System.Diagnostics.Debug
    commentId: T:System.Diagnostics.Debug
  - type: System.Diagnostics.Trace
    commentId: T:System.Diagnostics.Trace
  - type: System.Diagnostics.BooleanSwitch
    commentId: T:System.Diagnostics.BooleanSwitch
  - type: System.Diagnostics.TraceSwitch
    commentId: T:System.Diagnostics.TraceSwitch
  - type: System.Diagnostics.TraceListener
    commentId: T:System.Diagnostics.TraceListener
  - type: System.Diagnostics.DefaultTraceListener
    commentId: T:System.Diagnostics.DefaultTraceListener
  - type: System.Diagnostics.ConditionalAttribute
    commentId: T:System.Diagnostics.ConditionalAttribute
  modifiers.csharp:
  - public
  - static
  - get
  - set
  modifiers.vb:
  - Public
  - Shared
- uid: System.Diagnostics.Trace.IndentSize
  commentId: P:System.Diagnostics.Trace.IndentSize
  id: IndentSize
  parent: System.Diagnostics.Trace
  langs:
  - csharp
  - vb
  name: IndentSize
  fullName: System.Diagnostics.Trace.IndentSize
  type: Property
  source:
    remote:
      path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/Trace.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IndentSize
    path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/Trace.cs
    startLine: 77
  assemblies:
  - System.Diagnostics.TraceSource
  namespace: System.Diagnostics
  summary: "\n<p>Gets or sets the number of spaces in an indent.</p>\n"
  remarks: "\n<p>A <xref href=\"System.Diagnostics.TextWriterTraceListener\" data-throw-if-not-resolved=\"false\"></xref> interprets this number as spaces. An <xref href=\"System.Diagnostics.EventLogTraceListener\" data-throw-if-not-resolved=\"false\"></xref> ignores this value.</p>\n<p>This property is stored on per-thread/per-request basis.</p>\n<p>To set the <xref href=\"System.Diagnostics.Trace.AutoFlush\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"System.Diagnostics.Trace.IndentSize\" data-throw-if-not-resolved=\"false\"></xref> for <xref href=\"System.Diagnostics.Trace\" data-throw-if-not-resolved=\"false\"></xref>, you can also edit the configuration file that corresponds to the name of your application. The configuration file should be formatted like the following example: </p>\n<pre><code><configuration>\n<system.diagnostics>\n<trace autoflush=\"false\" indentsize=\"3\" />\n</system.diagnostics>\n</configuration></code></pre>\n"
  syntax:
    content: public static int IndentSize { get; set; }
    content.vb: Public Shared Property IndentSize As Integer
    parameters: []
    return:
      type: System.Int32
  seealso:
  - type: System.Diagnostics.Trace.IndentLevel
    commentId: P:System.Diagnostics.Trace.IndentLevel
  - type: System.Diagnostics.Debug
    commentId: T:System.Diagnostics.Debug
  - type: System.Diagnostics.Trace
    commentId: T:System.Diagnostics.Trace
  - type: System.Diagnostics.BooleanSwitch
    commentId: T:System.Diagnostics.BooleanSwitch
  - type: System.Diagnostics.TraceSwitch
    commentId: T:System.Diagnostics.TraceSwitch
  - type: System.Diagnostics.TraceListener
    commentId: T:System.Diagnostics.TraceListener
  - type: System.Diagnostics.DefaultTraceListener
    commentId: T:System.Diagnostics.DefaultTraceListener
  - type: System.Diagnostics.ConditionalAttribute
    commentId: T:System.Diagnostics.ConditionalAttribute
  modifiers.csharp:
  - public
  - static
  - get
  - set
  modifiers.vb:
  - Public
  - Shared
- uid: System.Diagnostics.Trace.Listeners
  commentId: P:System.Diagnostics.Trace.Listeners
  id: Listeners
  parent: System.Diagnostics.Trace
  langs:
  - csharp
  - vb
  name: Listeners
  fullName: System.Diagnostics.Trace.Listeners
  type: Property
  source:
    remote:
      path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/Trace.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Listeners
    path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/Trace.cs
    startLine: 24
  assemblies:
  - System.Diagnostics.TraceSource
  namespace: System.Diagnostics
  summary: "\n<p>Gets the collection of listeners that is monitoring the trace output.</p>\n"
  remarks: "\n<p>The listeners produce formatted output from the trace output. By default, the collection contains an instance of the <xref href=\"System.Diagnostics.DefaultTraceListener\" data-throw-if-not-resolved=\"false\"></xref> class. If you want to remove the default listener, call the <xref href=\"System.Diagnostics.TraceListenerCollection.Remove(System.String)\" data-throw-if-not-resolved=\"false\"></xref> method, and pass it the instance of the <xref href=\"System.Diagnostics.DefaultTraceListener\" data-throw-if-not-resolved=\"false\"></xref>. To redirect output to the console window, add an instance of the <xref href=\"System.Diagnostics.ConsoleTraceListener\" data-throw-if-not-resolved=\"false\"></xref> class.</p>\n<p>The <xref href=\"System.Diagnostics.Trace.Listeners\" data-throw-if-not-resolved=\"false\"></xref> collection is shared by both the <xref href=\"System.Diagnostics.Debug\" data-throw-if-not-resolved=\"false\"></xref> and the <xref href=\"System.Diagnostics.Trace\" data-throw-if-not-resolved=\"false\"></xref> classes; adding a trace listener to either class adds the listener to both.</p>\n"
  example:
  - "\n<p>The following example creates a <xref href=\"System.Diagnostics.ConsoleTraceListener\" data-throw-if-not-resolved=\"false\"></xref> that outputs to the console screen. The code then adds the new listener to the <xref href=\"System.Diagnostics.Trace.Listeners\" data-throw-if-not-resolved=\"false\"></xref>.</p>Classic Trace.Listeners Example#1"
  syntax:
    content: public static TraceListenerCollection Listeners { get; }
    content.vb: Public Shared ReadOnly Property Listeners As TraceListenerCollection
    parameters: []
    return:
      type: System.Diagnostics.TraceListenerCollection
  seealso:
  - type: System.Diagnostics.Debug
    commentId: T:System.Diagnostics.Debug
  - type: System.Diagnostics.Trace
    commentId: T:System.Diagnostics.Trace
  - type: System.Diagnostics.BooleanSwitch
    commentId: T:System.Diagnostics.BooleanSwitch
  - type: System.Diagnostics.TraceSwitch
    commentId: T:System.Diagnostics.TraceSwitch
  - type: System.Diagnostics.TraceListener
    commentId: T:System.Diagnostics.TraceListener
  - type: System.Diagnostics.DefaultTraceListener
    commentId: T:System.Diagnostics.DefaultTraceListener
  - type: System.Diagnostics.ConditionalAttribute
    commentId: T:System.Diagnostics.ConditionalAttribute
  see:
  - type: System.Security.Permissions.SecurityPermission
    commentId: T:System.Security.Permissions.SecurityPermission
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: System.Diagnostics.Trace.UseGlobalLock
  commentId: P:System.Diagnostics.Trace.UseGlobalLock
  id: UseGlobalLock
  parent: System.Diagnostics.Trace
  langs:
  - csharp
  - vb
  name: UseGlobalLock
  fullName: System.Diagnostics.Trace.UseGlobalLock
  type: Property
  source:
    remote:
      path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/Trace.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: UseGlobalLock
    path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/Trace.cs
    startLine: 49
  assemblies:
  - System.Diagnostics.TraceSource
  namespace: System.Diagnostics
  summary: "\n<p>Gets or sets a value indicating whether the global lock should be used.  </p>\n"
  remarks: "\n<p>The global lock is always used if the trace listener is not thread safe, regardless of the value of <xref href=\"System.Diagnostics.Trace.UseGlobalLock\" data-throw-if-not-resolved=\"false\"></xref>. The <xref href=\"System.Diagnostics.TraceListener.IsThreadSafe\" data-throw-if-not-resolved=\"false\"></xref> property is used to determine if the listener is thread safe. The global lock is not used only if the value of <xref href=\"System.Diagnostics.Trace.UseGlobalLock\" data-throw-if-not-resolved=\"false\"></xref> is <strong>false</strong> and the value of <xref href=\"System.Diagnostics.TraceListener.IsThreadSafe\" data-throw-if-not-resolved=\"false\"></xref> is <strong>true</strong>. The default behavior is to use the global lock.</p>\n<p>To set the <xref href=\"System.Diagnostics.Trace.UseGlobalLock\" data-throw-if-not-resolved=\"false\"></xref> for <xref href=\"System.Diagnostics.Trace\" data-throw-if-not-resolved=\"false\"></xref>, you can also edit the configuration file that corresponds to the name of your application. The configuration file should be formatted like the following example: </p>\n<pre><code><configuration>\n<system.diagnostics>\n<trace useGlobalLock=\"false\" />\n</system.diagnostics>\n</configuration></code></pre>\n"
  syntax:
    content: public static bool UseGlobalLock { get; set; }
    content.vb: Public Shared Property UseGlobalLock As Boolean
    parameters: []
    return:
      type: System.Boolean
  see:
  - type: System.Security.Permissions.SecurityPermission
    commentId: T:System.Security.Permissions.SecurityPermission
  modifiers.csharp:
  - public
  - static
  - get
  - set
  modifiers.vb:
  - Public
  - Shared
- uid: System.Diagnostics.Trace.Assert(System.Boolean)
  commentId: M:System.Diagnostics.Trace.Assert(System.Boolean)
  id: Assert(System.Boolean)
  parent: System.Diagnostics.Trace
  langs:
  - csharp
  - vb
  name: Assert(Boolean)
  fullName: System.Diagnostics.Trace.Assert(System.Boolean)
  type: Method
  source:
    remote:
      path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/Trace.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Assert
    path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/Trace.cs
    startLine: 109
  assemblies:
  - System.Diagnostics.TraceSource
  namespace: System.Diagnostics
  summary: "\n<p>Checks for a condition; if the condition is <strong>false</strong>, displays a message box that shows the call stack.</p>\n"
  remarks: "\n<p>Use the <see cref=\"Overload:System.Diagnostics.Trace.Assert\"></see> method if you want to do assertions in release builds. The <see cref=\"Overload:System.Diagnostics.Debug.Assert\"></see> method works only in debug builds. For more information, see Assertions in Managed Code.</p>\n<p>Typically, the <xref href=\"System.Diagnostics.Trace.Assert(System.Boolean)\" data-throw-if-not-resolved=\"false\"></xref> method is used to identify logic errors during program development. <xref href=\"System.Diagnostics.Trace.Assert(System.Boolean)\" data-throw-if-not-resolved=\"false\"></xref> evaluates the condition. If the result is <strong>false</strong>, it sends a failure message to the <xref href=\"System.Diagnostics.Trace.Listeners\" data-throw-if-not-resolved=\"false\"></xref> collection. You can customize this behavior by adding a <xref href=\"System.Diagnostics.TraceListener\" data-throw-if-not-resolved=\"false\"></xref> to, or removing one from, the <xref href=\"System.Diagnostics.Trace.Listeners\" data-throw-if-not-resolved=\"false\"></xref> collection. </p>\n<p>When the application runs in user-interface mode, it displays a message box that shows the call stack with file and line numbers. The message box contains three buttons: Abort, Retry, and Ignore. Clicking the Abort button terminates the application. Clicking Retry sends you to the code in the debugger if your application is running in a debugger, or offers to open a debugger if it is not. Clicking Ignore continues with the next instruction in the code. </p>\n<p>The display of the message box depends on the presence of the <xref href=\"System.Diagnostics.DefaultTraceListener\" data-throw-if-not-resolved=\"false\"></xref>. If the <xref href=\"System.Diagnostics.DefaultTraceListener\" data-throw-if-not-resolved=\"false\"></xref> is not in the <xref href=\"System.Diagnostics.Trace.Listeners\" data-throw-if-not-resolved=\"false\"></xref> collection, the message box is not displayed. The <xref href=\"System.Diagnostics.DefaultTraceListener\" data-throw-if-not-resolved=\"false\"></xref> can be removed by the <clear> Element for <listeners> for <trace>, the <remove> Element for <listeners> for <trace>, or by calling the <xref href=\"System.Diagnostics.TraceListenerCollection.Clear\" data-throw-if-not-resolved=\"false\"></xref> method on the <xref href=\"System.Diagnostics.Trace.Listeners\" data-throw-if-not-resolved=\"false\"></xref> property (<code>System.Diagnostics.Trace.Listeners.Clear()</code>).</p>\n<p>You can change the behavior of the <xref href=\"System.Diagnostics.DefaultTraceListener\" data-throw-if-not-resolved=\"false\"></xref> in the configuration file that corresponds to the name of your application. In this file, you can enable and disable the assert message box or set the <xref href=\"System.Diagnostics.DefaultTraceListener.LogFileName\" data-throw-if-not-resolved=\"false\"></xref> property. The configuration file should be formatted as follows:</p>\n<pre><code><configuration>\n<system.diagnostics>\n<switches>\n<add name=\"mySwitch\" value=\"4\"/>\n</switches>\n<trace autoflush=\"false\" indentsize=\"4\"/>\n<assert assertuienabled=\"true\" logfilename=\".\\TraceLog.txt\"/>\n</system.diagnostics>\n</configuration></code></pre>\n"
  example:
  - "\n<p>The following example creates an index for an array. Then some action is performed that sets the value of the index. Next the code calls <xref href=\"System.Diagnostics.Trace.Assert(System.Boolean)\" data-throw-if-not-resolved=\"false\"></xref> to verify the index value is valid. If it is not valid, the <xref href=\"System.Diagnostics.Trace.Assert(System.Boolean)\" data-throw-if-not-resolved=\"false\"></xref> outputs the call stack.</p>Classic Trace.Assert Example#1"
  syntax:
    content: >-
      [Conditional("TRACE")]

      public static void Assert(bool condition)
    content.vb: >-
      <Conditional("TRACE")>

      Public Shared Sub Assert(condition As Boolean)
    parameters:
    - id: condition
      type: System.Boolean
  seealso:
  - type: System.Diagnostics.Debug
    commentId: T:System.Diagnostics.Debug
  - type: System.Diagnostics.Trace
    commentId: T:System.Diagnostics.Trace
  - type: System.Diagnostics.BooleanSwitch
    commentId: T:System.Diagnostics.BooleanSwitch
  - type: System.Diagnostics.TraceSwitch
    commentId: T:System.Diagnostics.TraceSwitch
  - type: System.Diagnostics.TraceListener
    commentId: T:System.Diagnostics.TraceListener
  - type: System.Diagnostics.DefaultTraceListener
    commentId: T:System.Diagnostics.DefaultTraceListener
  - type: System.Diagnostics.ConditionalAttribute
    commentId: T:System.Diagnostics.ConditionalAttribute
  - type: System.Diagnostics.ConditionalAttribute
    commentId: T:System.Diagnostics.ConditionalAttribute
  - type: System.Diagnostics.ConditionalAttribute
    commentId: T:System.Diagnostics.ConditionalAttribute
  - type: System.Diagnostics.ConditionalAttribute
    commentId: T:System.Diagnostics.ConditionalAttribute
  attributes:
  - type: System.Diagnostics.ConditionalAttribute
    ctor: System.Diagnostics.ConditionalAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: TRACE
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Diagnostics.Trace.Assert(System.Boolean,System.String)
  commentId: M:System.Diagnostics.Trace.Assert(System.Boolean,System.String)
  id: Assert(System.Boolean,System.String)
  parent: System.Diagnostics.Trace
  langs:
  - csharp
  - vb
  name: Assert(Boolean, String)
  fullName: System.Diagnostics.Trace.Assert(System.Boolean, System.String)
  type: Method
  source:
    remote:
      path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/Trace.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Assert
    path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/Trace.cs
    startLine: 119
  assemblies:
  - System.Diagnostics.TraceSource
  namespace: System.Diagnostics
  summary: "\n<p>Checks for a condition; if the condition is <strong>false</strong>, outputs a specified message and displays a message box that shows the call stack.</p>\n"
  remarks: "\n<p>Use the <see cref=\"Overload:System.Diagnostics.Trace.Assert\"></see> method if you want to do assertions in release builds. The <see cref=\"Overload:System.Diagnostics.Debug.Assert\"></see> method works only in debug builds. For more information, see Assertions in Managed Code.</p>\n<p>Typically, the <xref href=\"System.Diagnostics.Trace.Assert(System.Boolean,System.String)\" data-throw-if-not-resolved=\"false\"></xref> method is used to identify logic errors during program development. <xref href=\"System.Diagnostics.Trace.Assert(System.Boolean,System.String)\" data-throw-if-not-resolved=\"false\"></xref> evaluates the condition. If the result is <strong>false</strong>, it sends the specified diagnostic message to the <xref href=\"System.Diagnostics.Trace.Listeners\" data-throw-if-not-resolved=\"false\"></xref> collection. You can customize this behavior by adding a <xref href=\"System.Diagnostics.TraceListener\" data-throw-if-not-resolved=\"false\"></xref> to, or removing one from, the <xref href=\"System.Diagnostics.Trace.Listeners\" data-throw-if-not-resolved=\"false\"></xref> collection. </p>\n<p>When the application runs in user-interface mode, it displays a message box that shows the call stack with file and line numbers. The message box contains three buttons: Abort, Retry, and Ignore. Clicking the Abort button terminates the application. Clicking Retry sends you to the code in the debugger if your application is running in a debugger, or offers to open a debugger if it is not. Clicking Ignore continues with the next instruction in the code.</p>\n<p>The display of the message box depends on the presence of the <xref href=\"System.Diagnostics.DefaultTraceListener\" data-throw-if-not-resolved=\"false\"></xref>. If the <xref href=\"System.Diagnostics.DefaultTraceListener\" data-throw-if-not-resolved=\"false\"></xref> is not in the <xref href=\"System.Diagnostics.Trace.Listeners\" data-throw-if-not-resolved=\"false\"></xref> collection, the message box is not displayed. The <xref href=\"System.Diagnostics.DefaultTraceListener\" data-throw-if-not-resolved=\"false\"></xref> can be removed by the <clear> Element for <listeners> for <trace>, the <remove> Element for <listeners> for <trace>, or by calling the <xref href=\"System.Diagnostics.TraceListenerCollection.Clear\" data-throw-if-not-resolved=\"false\"></xref> method on the <xref href=\"System.Diagnostics.Trace.Listeners\" data-throw-if-not-resolved=\"false\"></xref> property (<code>System.Diagnostics.Trace.Listeners.Clear()</code>).</p>\n<p>You can change the behavior of the <xref href=\"System.Diagnostics.DefaultTraceListener\" data-throw-if-not-resolved=\"false\"></xref> in the configuration file that corresponds to the name of your application. In this file, you can enable and disable the assert message box or set the <xref href=\"System.Diagnostics.DefaultTraceListener.LogFileName\" data-throw-if-not-resolved=\"false\"></xref> property. The configuration file should be formatted as follows:</p>\n<pre><code><configuration>\n<system.diagnostics>\n<switches>\n<add name=\"mySwitch\" value=\"4\"/>\n</switches>\n<trace autoflush=\"false\" indentsize=\"4\"/>\n<assert assertuienabled=\"true\" logfilename=\".\\TraceLog.txt\"/>\n</system.diagnostics>\n</configuration></code></pre>\n"
  example:
  - "\n<p>The following example checks to see that the <code>type</code> parameter is valid. If the <code>type</code> passed in is <strong>null</strong>, the <xref href=\"System.Diagnostics.Trace.Assert(System.Boolean)\" data-throw-if-not-resolved=\"false\"></xref> outputs a message.</p>Classic Trace.Assert1 Example#1"
  syntax:
    content: >-
      [Conditional("TRACE")]

      public static void Assert(bool condition, string message)
    content.vb: >-
      <Conditional("TRACE")>

      Public Shared Sub Assert(condition As Boolean, message As String)
    parameters:
    - id: condition
      type: System.Boolean
    - id: message
      type: System.String
  seealso:
  - type: System.Diagnostics.Debug
    commentId: T:System.Diagnostics.Debug
  - type: System.Diagnostics.Trace
    commentId: T:System.Diagnostics.Trace
  - type: System.Diagnostics.BooleanSwitch
    commentId: T:System.Diagnostics.BooleanSwitch
  - type: System.Diagnostics.TraceSwitch
    commentId: T:System.Diagnostics.TraceSwitch
  - type: System.Diagnostics.TraceListener
    commentId: T:System.Diagnostics.TraceListener
  - type: System.Diagnostics.DefaultTraceListener
    commentId: T:System.Diagnostics.DefaultTraceListener
  - type: System.Diagnostics.ConditionalAttribute
    commentId: T:System.Diagnostics.ConditionalAttribute
  attributes:
  - type: System.Diagnostics.ConditionalAttribute
    ctor: System.Diagnostics.ConditionalAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: TRACE
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Diagnostics.Trace.Assert(System.Boolean,System.String,System.String)
  commentId: M:System.Diagnostics.Trace.Assert(System.Boolean,System.String,System.String)
  id: Assert(System.Boolean,System.String,System.String)
  parent: System.Diagnostics.Trace
  langs:
  - csharp
  - vb
  name: Assert(Boolean, String, String)
  fullName: System.Diagnostics.Trace.Assert(System.Boolean, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/Trace.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Assert
    path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/Trace.cs
    startLine: 129
  assemblies:
  - System.Diagnostics.TraceSource
  namespace: System.Diagnostics
  summary: "\n<p>Checks for a condition; if the condition is <strong>false</strong>, outputs two specified messages and displays a message box that shows the call stack.</p>\n"
  remarks: "\n<p>Use the <see cref=\"Overload:System.Diagnostics.Trace.Assert\"></see> method if you want to do assertions in release builds. The <see cref=\"Overload:System.Diagnostics.Debug.Assert\"></see> method works only in debug builds. For more information, see Assertions in Managed Code.</p>\n<p>Typically, the <xref href=\"System.Diagnostics.Trace.Assert(System.Boolean,System.String,System.String)\" data-throw-if-not-resolved=\"false\"></xref> method is used to identify logic errors during program development. <xref href=\"System.Diagnostics.Trace.Assert(System.Boolean,System.String,System.String)\" data-throw-if-not-resolved=\"false\"></xref> evaluates the condition. If the result is <strong>false</strong>, it sends the specified diagnostic message and detailed message to the <xref href=\"System.Diagnostics.Trace.Listeners\" data-throw-if-not-resolved=\"false\"></xref> collection. You can customize this behavior by adding a <xref href=\"System.Diagnostics.TraceListener\" data-throw-if-not-resolved=\"false\"></xref> to, or removing one from, the <xref href=\"System.Diagnostics.Trace.Listeners\" data-throw-if-not-resolved=\"false\"></xref> collection. </p>\n<p>When the application runs in user-interface mode, it displays a message box that shows the call stack with file and line numbers. The message box contains three buttons: Abort, Retry, and Ignore. Clicking the Abort button terminates the application. Clicking Retry sends you to the code in the debugger if your application is running in a debugger, or offers to open a debugger if it is not. Clicking Ignore continues with the next instruction in the code.</p>\n<p>The display of the message box depends on the presence of the <xref href=\"System.Diagnostics.DefaultTraceListener\" data-throw-if-not-resolved=\"false\"></xref>. If the <xref href=\"System.Diagnostics.DefaultTraceListener\" data-throw-if-not-resolved=\"false\"></xref> is not in the <xref href=\"System.Diagnostics.Trace.Listeners\" data-throw-if-not-resolved=\"false\"></xref> collection, the message box is not displayed. The <xref href=\"System.Diagnostics.DefaultTraceListener\" data-throw-if-not-resolved=\"false\"></xref> can be removed by the <clear> Element for <listeners> for <trace>, the <remove> Element for <listeners> for <trace>, or by calling the <xref href=\"System.Diagnostics.TraceListenerCollection.Clear\" data-throw-if-not-resolved=\"false\"></xref> method on the <xref href=\"System.Diagnostics.Trace.Listeners\" data-throw-if-not-resolved=\"false\"></xref> property (<code>System.Diagnostics.Trace.Listeners.Clear()</code>).</p>\n<p>You can change the behavior of the <xref href=\"System.Diagnostics.DefaultTraceListener\" data-throw-if-not-resolved=\"false\"></xref> in the configuration file that corresponds to the name of your application. In this file, you can enable and disable the assert message box or set the <xref href=\"System.Diagnostics.DefaultTraceListener.LogFileName\" data-throw-if-not-resolved=\"false\"></xref> property. The configuration file should be formatted as follows:</p>\n<pre><code><configuration>\n<system.diagnostics>\n<switches>\n<add name=\"mySwitch\" value=\"4\"/>\n</switches>\n<trace autoflush=\"false\" indentsize=\"4\"/>\n<assert assertuienabled=\"true\" logfilename=\".\\TraceLog.txt\"/>\n</system.diagnostics>\n</configuration></code></pre>\n"
  example:
  - "\n<p>The following example checks to see that the <code>type</code> parameter is valid. If the <code>type</code> passed in is <strong>null</strong>, the <xref href=\"System.Diagnostics.Trace.Assert(System.Boolean)\" data-throw-if-not-resolved=\"false\"></xref> outputs a message.</p>Classic Trace.Assert2 Example#1"
  syntax:
    content: >-
      [Conditional("TRACE")]

      public static void Assert(bool condition, string message, string detailMessage)
    content.vb: >-
      <Conditional("TRACE")>

      Public Shared Sub Assert(condition As Boolean, message As String, detailMessage As String)
    parameters:
    - id: condition
      type: System.Boolean
    - id: message
      type: System.String
    - id: detailMessage
      type: System.String
  seealso:
  - type: System.Diagnostics.Debug
    commentId: T:System.Diagnostics.Debug
  - type: System.Diagnostics.Trace
    commentId: T:System.Diagnostics.Trace
  - type: System.Diagnostics.BooleanSwitch
    commentId: T:System.Diagnostics.BooleanSwitch
  - type: System.Diagnostics.TraceSwitch
    commentId: T:System.Diagnostics.TraceSwitch
  - type: System.Diagnostics.TraceListener
    commentId: T:System.Diagnostics.TraceListener
  - type: System.Diagnostics.DefaultTraceListener
    commentId: T:System.Diagnostics.DefaultTraceListener
  - type: System.Diagnostics.ConditionalAttribute
    commentId: T:System.Diagnostics.ConditionalAttribute
  attributes:
  - type: System.Diagnostics.ConditionalAttribute
    ctor: System.Diagnostics.ConditionalAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: TRACE
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Diagnostics.Trace.Close
  commentId: M:System.Diagnostics.Trace.Close
  id: Close
  parent: System.Diagnostics.Trace
  langs:
  - csharp
  - vb
  name: Close()
  fullName: System.Diagnostics.Trace.Close()
  type: Method
  source:
    remote:
      path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/Trace.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Close
    path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/Trace.cs
    startLine: 98
  assemblies:
  - System.Diagnostics.TraceSource
  namespace: System.Diagnostics
  summary: "\n<p>Flushes the output buffer, and then closes the <xref href=\"System.Diagnostics.Trace.Listeners\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  remarks: "\n<p>Use this method when the output is going to a file, such as to the <xref href=\"System.Diagnostics.TextWriterTraceListener\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>Flushing the stream will not flush its underlying encoder unless you explicitly call <xref href=\"System.Diagnostics.Trace.Flush\" data-throw-if-not-resolved=\"false\"></xref> or <xref href=\"System.Diagnostics.Trace.Close\" data-throw-if-not-resolved=\"false\"></xref>. Setting <xref href=\"System.Diagnostics.Trace.AutoFlush\" data-throw-if-not-resolved=\"false\"></xref> to <strong>true</strong> means that data will be flushed from the buffer to the stream, but the encoder state will not be flushed. This allows the encoder to keep its state (partial characters) so that it can encode the next block of characters correctly. This scenario affects UTF8 and UTF7 where certain characters can only be encoded after the encoder receives the adjacent character or characters.</p>\n"
  example:
  - "\n<p>The following example creates a <xref href=\"System.Diagnostics.TextWriterTraceListener\" data-throw-if-not-resolved=\"false\"></xref> named <code>myTextListener</code>. <code>myTextListener</code> uses a <xref href=\"System.IO.StreamWriter\" data-throw-if-not-resolved=\"false\"></xref> called <code>myOutputWriter</code> to write to a file named <code>TestFile.txt</code>. The example creates the file, stream and text writer, writes one line of text to the file, and then flushes and closes the output.</p>Classic Trace.Flush Example#1"
  syntax:
    content: >-
      [Conditional("TRACE")]

      public static void Close()
    content.vb: >-
      <Conditional("TRACE")>

      Public Shared Sub Close
  seealso:
  - type: System.Diagnostics.Debug
    commentId: T:System.Diagnostics.Debug
  - type: System.Diagnostics.Trace
    commentId: T:System.Diagnostics.Trace
  - type: System.Diagnostics.BooleanSwitch
    commentId: T:System.Diagnostics.BooleanSwitch
  - type: System.Diagnostics.TraceSwitch
    commentId: T:System.Diagnostics.TraceSwitch
  - type: System.Diagnostics.TraceListener
    commentId: T:System.Diagnostics.TraceListener
  - type: System.Diagnostics.DefaultTraceListener
    commentId: T:System.Diagnostics.DefaultTraceListener
  - type: System.Diagnostics.ConditionalAttribute
    commentId: T:System.Diagnostics.ConditionalAttribute
  see:
  - type: System.Security.Permissions.SecurityPermission
    commentId: T:System.Security.Permissions.SecurityPermission
  attributes:
  - type: System.Diagnostics.ConditionalAttribute
    ctor: System.Diagnostics.ConditionalAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: TRACE
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Diagnostics.Trace.Fail(System.String)
  commentId: M:System.Diagnostics.Trace.Fail(System.String)
  id: Fail(System.String)
  parent: System.Diagnostics.Trace
  langs:
  - csharp
  - vb
  name: Fail(String)
  fullName: System.Diagnostics.Trace.Fail(System.String)
  type: Method
  source:
    remote:
      path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/Trace.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Fail
    path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/Trace.cs
    startLine: 138
  assemblies:
  - System.Diagnostics.TraceSource
  namespace: System.Diagnostics
  summary: "\n<p>Emits the specified error message.</p>\n"
  remarks: "\n<p>The default behavior for the default trace listener is to output the <em>message</em> parameter to a message box when the application runs in user-interface mode, and to the <xref href=\"System.Diagnostics.TraceListener\" data-throw-if-not-resolved=\"false\"></xref> instances in the <xref href=\"System.Diagnostics.Trace.Listeners\" data-throw-if-not-resolved=\"false\"></xref> collection. </p>\n<p>The display of the message box is dependent on the presence of the <xref href=\"System.Diagnostics.DefaultTraceListener\" data-throw-if-not-resolved=\"false\"></xref>. If the <xref href=\"System.Diagnostics.DefaultTraceListener\" data-throw-if-not-resolved=\"false\"></xref> is not in the <xref href=\"System.Diagnostics.Trace.Listeners\" data-throw-if-not-resolved=\"false\"></xref> collection, the message box is not displayed. The <xref href=\"System.Diagnostics.DefaultTraceListener\" data-throw-if-not-resolved=\"false\"></xref> can be removed by the <clear> Element for <listeners> for <trace>, the <remove> Element for <listeners> for <trace>, or by calling the <xref href=\"System.Diagnostics.TraceListenerCollection.Clear\" data-throw-if-not-resolved=\"false\"></xref> method on the <xref href=\"System.Diagnostics.Trace.Listeners\" data-throw-if-not-resolved=\"false\"></xref> property (<code>System.Diagnostics.Trace.Listeners.Clear()</code>).</p>\n<p>You can customize this behavior by adding a <xref href=\"System.Diagnostics.TraceListener\" data-throw-if-not-resolved=\"false\"></xref> to, or by removing one from, the <xref href=\"System.Diagnostics.Trace.Listeners\" data-throw-if-not-resolved=\"false\"></xref> collection.</p>\n"
  example:
  - "\n<p>The following example uses the <xref href=\"System.Diagnostics.Trace.Fail(System.String)\" data-throw-if-not-resolved=\"false\"></xref> method to print a message during exception handling.</p>Classic Trace.Fail Example#1<p>You can also use the <xref href=\"System.Diagnostics.Trace.Fail(System.String)\" data-throw-if-not-resolved=\"false\"></xref> method in a switch statement.</p>Classic Trace.Fail Example#2"
  syntax:
    content: >-
      [Conditional("TRACE")]

      public static void Fail(string message)
    content.vb: >-
      <Conditional("TRACE")>

      Public Shared Sub Fail(message As String)
    parameters:
    - id: message
      type: System.String
  seealso:
  - type: System.Diagnostics.Debug
    commentId: T:System.Diagnostics.Debug
  - type: System.Diagnostics.Trace
    commentId: T:System.Diagnostics.Trace
  - type: System.Diagnostics.BooleanSwitch
    commentId: T:System.Diagnostics.BooleanSwitch
  - type: System.Diagnostics.TraceSwitch
    commentId: T:System.Diagnostics.TraceSwitch
  - type: System.Diagnostics.TraceListener
    commentId: T:System.Diagnostics.TraceListener
  - type: System.Diagnostics.DefaultTraceListener
    commentId: T:System.Diagnostics.DefaultTraceListener
  - type: System.Diagnostics.ConditionalAttribute
    commentId: T:System.Diagnostics.ConditionalAttribute
  attributes:
  - type: System.Diagnostics.ConditionalAttribute
    ctor: System.Diagnostics.ConditionalAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: TRACE
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Diagnostics.Trace.Fail(System.String,System.String)
  commentId: M:System.Diagnostics.Trace.Fail(System.String,System.String)
  id: Fail(System.String,System.String)
  parent: System.Diagnostics.Trace
  langs:
  - csharp
  - vb
  name: Fail(String, String)
  fullName: System.Diagnostics.Trace.Fail(System.String, System.String)
  type: Method
  source:
    remote:
      path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/Trace.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Fail
    path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/Trace.cs
    startLine: 147
  assemblies:
  - System.Diagnostics.TraceSource
  namespace: System.Diagnostics
  summary: "\n<p>Emits an error message, and a detailed error message.</p>\n"
  remarks: "\n<p>The default behavior is for the default trace listener to output the <em>message</em> parameter and the <em>detailedMessage</em> parameter to a message box when the application runs in user-interface mode, and to the <xref href=\"System.Diagnostics.TraceListener\" data-throw-if-not-resolved=\"false\"></xref> instances in the <xref href=\"System.Diagnostics.Trace.Listeners\" data-throw-if-not-resolved=\"false\"></xref> collection. </p>\n<p>The display of the message box is dependent on the presence of the <xref href=\"System.Diagnostics.DefaultTraceListener\" data-throw-if-not-resolved=\"false\"></xref>. If the <xref href=\"System.Diagnostics.DefaultTraceListener\" data-throw-if-not-resolved=\"false\"></xref> is not in the <xref href=\"System.Diagnostics.Trace.Listeners\" data-throw-if-not-resolved=\"false\"></xref> collection, the message box is not displayed. The <xref href=\"System.Diagnostics.DefaultTraceListener\" data-throw-if-not-resolved=\"false\"></xref> can be removed by the <clear> Element for <listeners> for <trace>, the <remove> Element for <listeners> for <trace>, or by calling the <xref href=\"System.Diagnostics.TraceListenerCollection.Clear\" data-throw-if-not-resolved=\"false\"></xref> method on the <xref href=\"System.Diagnostics.Trace.Listeners\" data-throw-if-not-resolved=\"false\"></xref> property (<code>System.Diagnostics.Trace.Listeners.Clear()</code>).</p>\n<p>You can customize this behavior by adding a <xref href=\"System.Diagnostics.TraceListener\" data-throw-if-not-resolved=\"false\"></xref> to, or by removing one from, the <xref href=\"System.Diagnostics.Trace.Listeners\" data-throw-if-not-resolved=\"false\"></xref> collection.</p>\n"
  example:
  - "\n<p>The following example uses the <xref href=\"System.Diagnostics.Trace.Fail(System.String)\" data-throw-if-not-resolved=\"false\"></xref> method to print a message during exception handling.</p>Classic Trace.Fail1 Example#1<p>You can also use the <xref href=\"System.Diagnostics.Trace.Fail(System.String)\" data-throw-if-not-resolved=\"false\"></xref> method in a switch statement.</p>Classic Trace.Fail1 Example#2"
  syntax:
    content: >-
      [Conditional("TRACE")]

      public static void Fail(string message, string detailMessage)
    content.vb: >-
      <Conditional("TRACE")>

      Public Shared Sub Fail(message As String, detailMessage As String)
    parameters:
    - id: message
      type: System.String
    - id: detailMessage
      type: System.String
  seealso:
  - type: System.Diagnostics.Debug
    commentId: T:System.Diagnostics.Debug
  - type: System.Diagnostics.Trace
    commentId: T:System.Diagnostics.Trace
  - type: System.Diagnostics.BooleanSwitch
    commentId: T:System.Diagnostics.BooleanSwitch
  - type: System.Diagnostics.TraceSwitch
    commentId: T:System.Diagnostics.TraceSwitch
  - type: System.Diagnostics.TraceListener
    commentId: T:System.Diagnostics.TraceListener
  - type: System.Diagnostics.DefaultTraceListener
    commentId: T:System.Diagnostics.DefaultTraceListener
  - type: System.Diagnostics.ConditionalAttribute
    commentId: T:System.Diagnostics.ConditionalAttribute
  attributes:
  - type: System.Diagnostics.ConditionalAttribute
    ctor: System.Diagnostics.ConditionalAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: TRACE
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Diagnostics.Trace.Flush
  commentId: M:System.Diagnostics.Trace.Flush
  id: Flush
  parent: System.Diagnostics.Trace
  langs:
  - csharp
  - vb
  name: Flush()
  fullName: System.Diagnostics.Trace.Flush()
  type: Method
  source:
    remote:
      path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/Trace.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Flush
    path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/Trace.cs
    startLine: 88
  assemblies:
  - System.Diagnostics.TraceSource
  namespace: System.Diagnostics
  summary: "\n<p>Flushes the output buffer, and causes buffered data to be written to the <xref href=\"System.Diagnostics.Trace.Listeners\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  remarks: "\n<p>Flushing the stream will not flush its underlying encoder unless you explicitly call <xref href=\"System.Diagnostics.Trace.Flush\" data-throw-if-not-resolved=\"false\"></xref> or <xref href=\"System.Diagnostics.Trace.Close\" data-throw-if-not-resolved=\"false\"></xref>. Setting <xref href=\"System.Diagnostics.Trace.AutoFlush\" data-throw-if-not-resolved=\"false\"></xref> to <strong>true</strong> means that data will be flushed from the buffer to the stream, but the encoder state will not be flushed. This allows the encoder to keep its state (partial characters) so that it can encode the next block of characters correctly. This scenario affects UTF8 and UTF7 where certain characters can only be encoded after the encoder receives the adjacent character or characters.</p>\n"
  example:
  - "\n<p>The following example creates a <xref href=\"System.Diagnostics.TextWriterTraceListener\" data-throw-if-not-resolved=\"false\"></xref> named <code>myTextListener</code>. <code>myTextListener</code> uses a <xref href=\"System.IO.StreamWriter\" data-throw-if-not-resolved=\"false\"></xref> called <code>myOutputWriter</code> to write to a file named <code>TestFile.txt</code>. The example creates the file, stream and text writer, writes one line of text to the file, and then flushes and closes the output.</p>Classic Trace.Flush Example#1"
  syntax:
    content: >-
      [Conditional("TRACE")]

      public static void Flush()
    content.vb: >-
      <Conditional("TRACE")>

      Public Shared Sub Flush
  seealso:
  - type: System.Diagnostics.Debug
    commentId: T:System.Diagnostics.Debug
  - type: System.Diagnostics.Trace
    commentId: T:System.Diagnostics.Trace
  - type: System.Diagnostics.BooleanSwitch
    commentId: T:System.Diagnostics.BooleanSwitch
  - type: System.Diagnostics.TraceSwitch
    commentId: T:System.Diagnostics.TraceSwitch
  - type: System.Diagnostics.TraceListener
    commentId: T:System.Diagnostics.TraceListener
  - type: System.Diagnostics.DefaultTraceListener
    commentId: T:System.Diagnostics.DefaultTraceListener
  - type: System.Diagnostics.ConditionalAttribute
    commentId: T:System.Diagnostics.ConditionalAttribute
  attributes:
  - type: System.Diagnostics.ConditionalAttribute
    ctor: System.Diagnostics.ConditionalAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: TRACE
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Diagnostics.Trace.Indent
  commentId: M:System.Diagnostics.Trace.Indent
  id: Indent
  parent: System.Diagnostics.Trace
  langs:
  - csharp
  - vb
  name: Indent()
  fullName: System.Diagnostics.Trace.Indent()
  type: Method
  source:
    remote:
      path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/Trace.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Indent
    path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/Trace.cs
    startLine: 373
  assemblies:
  - System.Diagnostics.TraceSource
  namespace: System.Diagnostics
  summary: "\n<p>Increases the current <xref href=\"System.Diagnostics.Trace.IndentLevel\" data-throw-if-not-resolved=\"false\"></xref> by one.</p>\n"
  example:
  - "\n<p>The following example increments and decrements the indent level and emits tracing messages.</p>Classic Trace.IndentLevel Example#1<p>This example produces the following output: </p><pre><code>List of errors:\nError 1: File not found\nError 2: Directory not found\nEnd of list of errors</code></pre>"
  syntax:
    content: >-
      [Conditional("TRACE")]

      public static void Indent()
    content.vb: >-
      <Conditional("TRACE")>

      Public Shared Sub Indent
  seealso:
  - type: System.Diagnostics.Trace.Unindent
    commentId: M:System.Diagnostics.Trace.Unindent
  - type: System.Diagnostics.Trace.IndentLevel
    commentId: P:System.Diagnostics.Trace.IndentLevel
  - type: System.Diagnostics.Trace.IndentSize
    commentId: P:System.Diagnostics.Trace.IndentSize
  attributes:
  - type: System.Diagnostics.ConditionalAttribute
    ctor: System.Diagnostics.ConditionalAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: TRACE
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Diagnostics.Trace.Refresh
  commentId: M:System.Diagnostics.Trace.Refresh
  id: Refresh
  parent: System.Diagnostics.Trace
  langs:
  - csharp
  - vb
  name: Refresh()
  fullName: System.Diagnostics.Trace.Refresh()
  type: Method
  source:
    remote:
      path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/Trace.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Refresh
    path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/Trace.cs
    startLine: 153
  assemblies:
  - System.Diagnostics.TraceSource
  namespace: System.Diagnostics
  summary: "\n<p>Refreshes the trace configuration data.</p>\n"
  remarks: "\n<p>Trace configuration data is captured when the application is started. If the configuration data is changed after the application is started, call the <xref href=\"System.Diagnostics.Trace.Refresh\" data-throw-if-not-resolved=\"false\"></xref> method to update the trace configuration data.</p>\n"
  syntax:
    content: public static void Refresh()
    content.vb: Public Shared Sub Refresh
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Diagnostics.Trace.TraceError(System.String)
  commentId: M:System.Diagnostics.Trace.TraceError(System.String)
  id: TraceError(System.String)
  parent: System.Diagnostics.Trace
  langs:
  - csharp
  - vb
  name: TraceError(String)
  fullName: System.Diagnostics.Trace.TraceError(System.String)
  type: Method
  source:
    remote:
      path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/Trace.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: TraceError
    path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/Trace.cs
    startLine: 184
  assemblies:
  - System.Diagnostics.TraceSource
  namespace: System.Diagnostics
  summary: "\n<p>Writes an error message to the trace listeners in the <xref href=\"System.Diagnostics.Trace.Listeners\" data-throw-if-not-resolved=\"false\"></xref> collection using the specified message.</p>\n"
  remarks: "\n<p>\n<xref href=\"System.Diagnostics.Trace.TraceError(System.String)\" data-throw-if-not-resolved=\"false\"></xref> calls the <strong>TraceEvent</strong> method for each trace listener, with the trace event type <xref href=\"System.Diagnostics.TraceEventType.Error\" data-throw-if-not-resolved=\"false\"></xref>, passing the informative message as the message string.</p>\n"
  syntax:
    content: >-
      [Conditional("TRACE")]

      public static void TraceError(string message)
    content.vb: >-
      <Conditional("TRACE")>

      Public Shared Sub TraceError(message As String)
    parameters:
    - id: message
      type: System.String
  seealso:
  - type: System.Diagnostics.Debug
    commentId: T:System.Diagnostics.Debug
  - type: System.Diagnostics.Trace
    commentId: T:System.Diagnostics.Trace
  - type: System.Diagnostics.BooleanSwitch
    commentId: T:System.Diagnostics.BooleanSwitch
  - type: System.Diagnostics.TraceSwitch
    commentId: T:System.Diagnostics.TraceSwitch
  - type: System.Diagnostics.TraceListener
    commentId: T:System.Diagnostics.TraceListener
  - type: System.Diagnostics.DefaultTraceListener
    commentId: T:System.Diagnostics.DefaultTraceListener
  - type: System.Diagnostics.ConditionalAttribute
    commentId: T:System.Diagnostics.ConditionalAttribute
  attributes:
  - type: System.Diagnostics.ConditionalAttribute
    ctor: System.Diagnostics.ConditionalAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: TRACE
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Diagnostics.Trace.TraceError(System.String,System.Object[])
  commentId: M:System.Diagnostics.Trace.TraceError(System.String,System.Object[])
  id: TraceError(System.String,System.Object[])
  parent: System.Diagnostics.Trace
  langs:
  - csharp
  - vb
  name: TraceError(String, Object[])
  fullName: System.Diagnostics.Trace.TraceError(System.String, System.Object[])
  type: Method
  source:
    remote:
      path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/Trace.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: TraceError
    path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/Trace.cs
    startLine: 190
  assemblies:
  - System.Diagnostics.TraceSource
  namespace: System.Diagnostics
  summary: "\n<p>Writes an error message to the trace listeners in the <xref href=\"System.Diagnostics.Trace.Listeners\" data-throw-if-not-resolved=\"false\"></xref> collection using the specified array of objects and formatting information.</p>\n"
  remarks: "\n<p>\n<xref href=\"System.Diagnostics.Trace.TraceError(System.String,System.Object[])\" data-throw-if-not-resolved=\"false\"></xref> calls the <strong>TraceEvent</strong> methods in the trace listeners with the trace event type <xref href=\"System.Diagnostics.TraceEventType.Error\" data-throw-if-not-resolved=\"false\"></xref>, passing the message content as an object array with formatting information. See the <xref href=\"System.String.Format(System.String,System.Object[])\" data-throw-if-not-resolved=\"false\"></xref> method for more information about the <em>format</em> and <em>args</em> parameters.</p>\n"
  syntax:
    content: >-
      [Conditional("TRACE")]

      public static void TraceError(string format, params object[] args)
    content.vb: >-
      <Conditional("TRACE")>

      Public Shared Sub TraceError(format As String, ParamArray args As Object())
    parameters:
    - id: format
      type: System.String
    - id: args
      type: System.Object[]
  seealso:
  - type: System.Diagnostics.Debug
    commentId: T:System.Diagnostics.Debug
  - type: System.Diagnostics.Trace
    commentId: T:System.Diagnostics.Trace
  - type: System.Diagnostics.BooleanSwitch
    commentId: T:System.Diagnostics.BooleanSwitch
  - type: System.Diagnostics.TraceSwitch
    commentId: T:System.Diagnostics.TraceSwitch
  - type: System.Diagnostics.TraceListener
    commentId: T:System.Diagnostics.TraceListener
  - type: System.Diagnostics.DefaultTraceListener
    commentId: T:System.Diagnostics.DefaultTraceListener
  - type: System.Diagnostics.ConditionalAttribute
    commentId: T:System.Diagnostics.ConditionalAttribute
  attributes:
  - type: System.Diagnostics.ConditionalAttribute
    ctor: System.Diagnostics.ConditionalAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: TRACE
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Diagnostics.Trace.TraceError(System.String, System.Object())
  name.vb: TraceError(String, Object())
- uid: System.Diagnostics.Trace.TraceInformation(System.String)
  commentId: M:System.Diagnostics.Trace.TraceInformation(System.String)
  id: TraceInformation(System.String)
  parent: System.Diagnostics.Trace
  langs:
  - csharp
  - vb
  name: TraceInformation(String)
  fullName: System.Diagnostics.Trace.TraceInformation(System.String)
  type: Method
  source:
    remote:
      path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/Trace.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: TraceInformation
    path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/Trace.cs
    startLine: 160
  assemblies:
  - System.Diagnostics.TraceSource
  namespace: System.Diagnostics
  summary: "\n<p>Writes an informational message to the trace listeners in the <xref href=\"System.Diagnostics.Trace.Listeners\" data-throw-if-not-resolved=\"false\"></xref> collection using the specified message.</p>\n"
  remarks: "\n<p>\n<xref href=\"System.Diagnostics.Trace.TraceInformation(System.String)\" data-throw-if-not-resolved=\"false\"></xref> calls the <strong>TraceEvent</strong> method for each trace listener, with the trace event type <xref href=\"System.Diagnostics.TraceEventType.Information\" data-throw-if-not-resolved=\"false\"></xref>, passing the informative message as the message string.</p>\n"
  syntax:
    content: >-
      [Conditional("TRACE")]

      public static void TraceInformation(string message)
    content.vb: >-
      <Conditional("TRACE")>

      Public Shared Sub TraceInformation(message As String)
    parameters:
    - id: message
      type: System.String
  seealso:
  - type: System.Diagnostics.Debug
    commentId: T:System.Diagnostics.Debug
  - type: System.Diagnostics.Trace
    commentId: T:System.Diagnostics.Trace
  - type: System.Diagnostics.BooleanSwitch
    commentId: T:System.Diagnostics.BooleanSwitch
  - type: System.Diagnostics.TraceSwitch
    commentId: T:System.Diagnostics.TraceSwitch
  - type: System.Diagnostics.TraceListener
    commentId: T:System.Diagnostics.TraceListener
  - type: System.Diagnostics.DefaultTraceListener
    commentId: T:System.Diagnostics.DefaultTraceListener
  - type: System.Diagnostics.ConditionalAttribute
    commentId: T:System.Diagnostics.ConditionalAttribute
  attributes:
  - type: System.Diagnostics.ConditionalAttribute
    ctor: System.Diagnostics.ConditionalAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: TRACE
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Diagnostics.Trace.TraceInformation(System.String,System.Object[])
  commentId: M:System.Diagnostics.Trace.TraceInformation(System.String,System.Object[])
  id: TraceInformation(System.String,System.Object[])
  parent: System.Diagnostics.Trace
  langs:
  - csharp
  - vb
  name: TraceInformation(String, Object[])
  fullName: System.Diagnostics.Trace.TraceInformation(System.String, System.Object[])
  type: Method
  source:
    remote:
      path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/Trace.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: TraceInformation
    path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/Trace.cs
    startLine: 166
  assemblies:
  - System.Diagnostics.TraceSource
  namespace: System.Diagnostics
  summary: "\n<p>Writes an informational message to the trace listeners in the <xref href=\"System.Diagnostics.Trace.Listeners\" data-throw-if-not-resolved=\"false\"></xref> collection using the specified array of objects and formatting information.</p>\n"
  remarks: "\n<p>\n<xref href=\"System.Diagnostics.Trace.TraceInformation(System.String,System.Object[])\" data-throw-if-not-resolved=\"false\"></xref> calls the <strong>TraceEvent</strong> methods in the trace listeners with the trace event type <xref href=\"System.Diagnostics.TraceEventType.Information\" data-throw-if-not-resolved=\"false\"></xref>, passing the message content as an object array with formatting information. See the <xref href=\"System.String.Format(System.String,System.Object[])\" data-throw-if-not-resolved=\"false\"></xref> method for more information about the <em>format</em> and <em>args</em> parameters.</p>\n"
  syntax:
    content: >-
      [Conditional("TRACE")]

      public static void TraceInformation(string format, params object[] args)
    content.vb: >-
      <Conditional("TRACE")>

      Public Shared Sub TraceInformation(format As String, ParamArray args As Object())
    parameters:
    - id: format
      type: System.String
    - id: args
      type: System.Object[]
  seealso:
  - type: System.Diagnostics.Debug
    commentId: T:System.Diagnostics.Debug
  - type: System.Diagnostics.Trace
    commentId: T:System.Diagnostics.Trace
  - type: System.Diagnostics.BooleanSwitch
    commentId: T:System.Diagnostics.BooleanSwitch
  - type: System.Diagnostics.TraceSwitch
    commentId: T:System.Diagnostics.TraceSwitch
  - type: System.Diagnostics.TraceListener
    commentId: T:System.Diagnostics.TraceListener
  - type: System.Diagnostics.DefaultTraceListener
    commentId: T:System.Diagnostics.DefaultTraceListener
  - type: System.Diagnostics.ConditionalAttribute
    commentId: T:System.Diagnostics.ConditionalAttribute
  attributes:
  - type: System.Diagnostics.ConditionalAttribute
    ctor: System.Diagnostics.ConditionalAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: TRACE
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Diagnostics.Trace.TraceInformation(System.String, System.Object())
  name.vb: TraceInformation(String, Object())
- uid: System.Diagnostics.Trace.TraceWarning(System.String)
  commentId: M:System.Diagnostics.Trace.TraceWarning(System.String)
  id: TraceWarning(System.String)
  parent: System.Diagnostics.Trace
  langs:
  - csharp
  - vb
  name: TraceWarning(String)
  fullName: System.Diagnostics.Trace.TraceWarning(System.String)
  type: Method
  source:
    remote:
      path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/Trace.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: TraceWarning
    path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/Trace.cs
    startLine: 172
  assemblies:
  - System.Diagnostics.TraceSource
  namespace: System.Diagnostics
  summary: "\n<p>Writes a warning message to the trace listeners in the <xref href=\"System.Diagnostics.Trace.Listeners\" data-throw-if-not-resolved=\"false\"></xref> collection using the specified message.</p>\n"
  remarks: "\n<p>\n<xref href=\"System.Diagnostics.Trace.TraceWarning(System.String)\" data-throw-if-not-resolved=\"false\"></xref> calls the <strong>TraceEvent</strong> method for each trace listener with the trace event type <xref href=\"System.Diagnostics.TraceEventType.Warning\" data-throw-if-not-resolved=\"false\"></xref>, passing the informative message as the message string.</p>\n"
  syntax:
    content: >-
      [Conditional("TRACE")]

      public static void TraceWarning(string message)
    content.vb: >-
      <Conditional("TRACE")>

      Public Shared Sub TraceWarning(message As String)
    parameters:
    - id: message
      type: System.String
  seealso:
  - type: System.Diagnostics.Debug
    commentId: T:System.Diagnostics.Debug
  - type: System.Diagnostics.Trace
    commentId: T:System.Diagnostics.Trace
  - type: System.Diagnostics.BooleanSwitch
    commentId: T:System.Diagnostics.BooleanSwitch
  - type: System.Diagnostics.TraceSwitch
    commentId: T:System.Diagnostics.TraceSwitch
  - type: System.Diagnostics.TraceListener
    commentId: T:System.Diagnostics.TraceListener
  - type: System.Diagnostics.DefaultTraceListener
    commentId: T:System.Diagnostics.DefaultTraceListener
  - type: System.Diagnostics.ConditionalAttribute
    commentId: T:System.Diagnostics.ConditionalAttribute
  attributes:
  - type: System.Diagnostics.ConditionalAttribute
    ctor: System.Diagnostics.ConditionalAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: TRACE
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Diagnostics.Trace.TraceWarning(System.String,System.Object[])
  commentId: M:System.Diagnostics.Trace.TraceWarning(System.String,System.Object[])
  id: TraceWarning(System.String,System.Object[])
  parent: System.Diagnostics.Trace
  langs:
  - csharp
  - vb
  name: TraceWarning(String, Object[])
  fullName: System.Diagnostics.Trace.TraceWarning(System.String, System.Object[])
  type: Method
  source:
    remote:
      path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/Trace.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: TraceWarning
    path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/Trace.cs
    startLine: 178
  assemblies:
  - System.Diagnostics.TraceSource
  namespace: System.Diagnostics
  summary: "\n<p>Writes a warning message to the trace listeners in the <xref href=\"System.Diagnostics.Trace.Listeners\" data-throw-if-not-resolved=\"false\"></xref> collection using the specified array of objects and formatting information.</p>\n"
  remarks: "\n<p>\n<xref href=\"System.Diagnostics.Trace.TraceWarning(System.String,System.Object[])\" data-throw-if-not-resolved=\"false\"></xref> calls the <strong>TraceEvent</strong> methods in the trace listeners with the trace event type <xref href=\"System.Diagnostics.TraceEventType.Warning\" data-throw-if-not-resolved=\"false\"></xref>, passing the message content as an object array with formatting information. See the <xref href=\"System.String.Format(System.String,System.Object[])\" data-throw-if-not-resolved=\"false\"></xref> method for more information about the <em>format</em> and <em>args</em> parameters.</p>\n"
  syntax:
    content: >-
      [Conditional("TRACE")]

      public static void TraceWarning(string format, params object[] args)
    content.vb: >-
      <Conditional("TRACE")>

      Public Shared Sub TraceWarning(format As String, ParamArray args As Object())
    parameters:
    - id: format
      type: System.String
    - id: args
      type: System.Object[]
  seealso:
  - type: System.Diagnostics.Debug
    commentId: T:System.Diagnostics.Debug
  - type: System.Diagnostics.Trace
    commentId: T:System.Diagnostics.Trace
  - type: System.Diagnostics.BooleanSwitch
    commentId: T:System.Diagnostics.BooleanSwitch
  - type: System.Diagnostics.TraceSwitch
    commentId: T:System.Diagnostics.TraceSwitch
  - type: System.Diagnostics.TraceListener
    commentId: T:System.Diagnostics.TraceListener
  - type: System.Diagnostics.DefaultTraceListener
    commentId: T:System.Diagnostics.DefaultTraceListener
  - type: System.Diagnostics.ConditionalAttribute
    commentId: T:System.Diagnostics.ConditionalAttribute
  attributes:
  - type: System.Diagnostics.ConditionalAttribute
    ctor: System.Diagnostics.ConditionalAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: TRACE
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Diagnostics.Trace.TraceWarning(System.String, System.Object())
  name.vb: TraceWarning(String, Object())
- uid: System.Diagnostics.Trace.Unindent
  commentId: M:System.Diagnostics.Trace.Unindent
  id: Unindent
  parent: System.Diagnostics.Trace
  langs:
  - csharp
  - vb
  name: Unindent()
  fullName: System.Diagnostics.Trace.Unindent()
  type: Method
  source:
    remote:
      path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/Trace.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Unindent
    path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/Trace.cs
    startLine: 382
  assemblies:
  - System.Diagnostics.TraceSource
  namespace: System.Diagnostics
  summary: "\n<p>Decreases the current <xref href=\"System.Diagnostics.Trace.IndentLevel\" data-throw-if-not-resolved=\"false\"></xref> by one.</p>\n"
  example:
  - "\n<p>The following example increments and decrements the indent level and emits tracing messages.</p>Classic Trace.IndentLevel Example#1<p>This example produces the following output: </p><pre><code>List of errors:\nError 1: File not found\nError 2: Directory not found\nEnd of list of errors   </code></pre>"
  syntax:
    content: >-
      [Conditional("TRACE")]

      public static void Unindent()
    content.vb: >-
      <Conditional("TRACE")>

      Public Shared Sub Unindent
  seealso:
  - type: System.Diagnostics.Trace.Indent
    commentId: M:System.Diagnostics.Trace.Indent
  - type: System.Diagnostics.Trace.IndentLevel
    commentId: P:System.Diagnostics.Trace.IndentLevel
  - type: System.Diagnostics.Trace.IndentSize
    commentId: P:System.Diagnostics.Trace.IndentSize
  attributes:
  - type: System.Diagnostics.ConditionalAttribute
    ctor: System.Diagnostics.ConditionalAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: TRACE
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Diagnostics.Trace.Write(System.Object)
  commentId: M:System.Diagnostics.Trace.Write(System.Object)
  id: Write(System.Object)
  parent: System.Diagnostics.Trace
  langs:
  - csharp
  - vb
  name: Write(Object)
  fullName: System.Diagnostics.Trace.Write(System.Object)
  type: Method
  source:
    remote:
      path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/Trace.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Write
    path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/Trace.cs
    startLine: 210
  assemblies:
  - System.Diagnostics.TraceSource
  namespace: System.Diagnostics
  summary: "\n<p>Writes the value of the object's <xref href=\"System.Object.ToString\" data-throw-if-not-resolved=\"false\"></xref> method to the trace listeners in the <xref href=\"System.Diagnostics.Trace.Listeners\" data-throw-if-not-resolved=\"false\"></xref> collection.</p>\n"
  remarks: "\n<p>By default, the output is written to an instance of <xref href=\"System.Diagnostics.DefaultTraceListener\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>This method calls the <xref href=\"System.Diagnostics.TraceListener.Write(System.String)\" data-throw-if-not-resolved=\"false\"></xref> method of the trace listener.</p>\n<p> ASP.NET supplies tracing functionality tailored for Web pages. To write trace messages in ASP.NET pages, use the <xref href=\"System.Web.UI.Page.Trace\" data-throw-if-not-resolved=\"false\"></xref> property. </p>\n<p>By default, in code associated with an ASP.NET Web page, the statement <code>Trace.Write(\"...\")</code> is a call to the <see cref=\"Overload:System.Web.TraceContext.Write\"></see> method of the <xref href=\"System.Web.UI.Page.Trace\" data-throw-if-not-resolved=\"false\"></xref> property. To use the <xref href=\"System.Diagnostics.Trace\" data-throw-if-not-resolved=\"false\"></xref> class in Web pages, you must include the namespace, for example, <code>System.Diagnostics.Trace.Write(\"...\")</code>.</p>\n"
  example:
  - "\n<p>The following example creates a <xref href=\"System.Diagnostics.TraceSwitch\" data-throw-if-not-resolved=\"false\"></xref> named <code>generalSwitch</code>. This switch is set outside the code sample.</p>\n<p>If the switch is set to the <xref href=\"System.Diagnostics.TraceLevel\" data-throw-if-not-resolved=\"false\"></xref><strong>Error</strong> or higher, the example outputs the first name of the <em>value</em> parameter to the <xref href=\"System.Diagnostics.Trace.Listeners\" data-throw-if-not-resolved=\"false\"></xref>. For information on adding a listener to the <xref href=\"System.Diagnostics.Trace.Listeners\" data-throw-if-not-resolved=\"false\"></xref> collection, see the <xref href=\"System.Diagnostics.TraceListenerCollection\" data-throw-if-not-resolved=\"false\"></xref> class.</p>\n<p>Then, if the <xref href=\"System.Diagnostics.TraceLevel\" data-throw-if-not-resolved=\"false\"></xref> is set to <strong>Verbose</strong>, the example outputs a message on the same line as the first message. The second message is followed by a line terminator.</p>Classic Trace.Write1 Example#1"
  syntax:
    content: >-
      [Conditional("TRACE")]

      public static void Write(object value)
    content.vb: >-
      <Conditional("TRACE")>

      Public Shared Sub Write(value As Object)
    parameters:
    - id: value
      type: System.Object
  seealso:
  - type: System.Diagnostics.Debug
    commentId: T:System.Diagnostics.Debug
  - type: System.Diagnostics.Trace
    commentId: T:System.Diagnostics.Trace
  - type: System.Diagnostics.BooleanSwitch
    commentId: T:System.Diagnostics.BooleanSwitch
  - type: System.Diagnostics.TraceSwitch
    commentId: T:System.Diagnostics.TraceSwitch
  - type: System.Diagnostics.TraceListener
    commentId: T:System.Diagnostics.TraceListener
  - type: System.Diagnostics.DefaultTraceListener
    commentId: T:System.Diagnostics.DefaultTraceListener
  - type: System.Diagnostics.ConditionalAttribute
    commentId: T:System.Diagnostics.ConditionalAttribute
  attributes:
  - type: System.Diagnostics.ConditionalAttribute
    ctor: System.Diagnostics.ConditionalAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: TRACE
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Diagnostics.Trace.Write(System.Object,System.String)
  commentId: M:System.Diagnostics.Trace.Write(System.Object,System.String)
  id: Write(System.Object,System.String)
  parent: System.Diagnostics.Trace
  langs:
  - csharp
  - vb
  name: Write(Object, String)
  fullName: System.Diagnostics.Trace.Write(System.Object, System.String)
  type: Method
  source:
    remote:
      path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/Trace.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Write
    path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/Trace.cs
    startLine: 230
  assemblies:
  - System.Diagnostics.TraceSource
  namespace: System.Diagnostics
  summary: "\n<p>Writes a category name and the value of the object's <xref href=\"System.Object.ToString\" data-throw-if-not-resolved=\"false\"></xref> method to the trace listeners in the <xref href=\"System.Diagnostics.Trace.Listeners\" data-throw-if-not-resolved=\"false\"></xref> collection.</p>\n"
  remarks: "\n<p>By default, the output is written to an instance of <xref href=\"System.Diagnostics.DefaultTraceListener\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>The <em>category</em> parameter can be used to group output messages.</p>\n<p>This method calls the <xref href=\"System.Diagnostics.TraceListener.Write(System.String)\" data-throw-if-not-resolved=\"false\"></xref> method of the trace listener.</p>\n<p> ASP.NET supplies tracing functionality tailored for Web pages. To write trace messages in ASP.NET pages, use the <xref href=\"System.Web.UI.Page.Trace\" data-throw-if-not-resolved=\"false\"></xref> property. </p>\n<p>By default, in code associated with an ASP.NET Web page, the statement <code>Trace.Write(\"...\")</code> is a call to the <see cref=\"Overload:System.Web.TraceContext.Write\"></see> method of the <xref href=\"System.Web.UI.Page.Trace\" data-throw-if-not-resolved=\"false\"></xref> property. To use the <xref href=\"System.Diagnostics.Trace\" data-throw-if-not-resolved=\"false\"></xref> class in Web pages, you must include the namespace, for example, <code>System.Diagnostics.Trace.Write(\"...\")</code>.</p>\n"
  example:
  - "\n<p>The following example creates a <xref href=\"System.Diagnostics.TraceSwitch\" data-throw-if-not-resolved=\"false\"></xref> named <code>generalSwitch</code>. This switch is set outside the code sample.</p>\n<p>If the switch is set to the <xref href=\"System.Diagnostics.TraceLevel\" data-throw-if-not-resolved=\"false\"></xref><strong>Verbose</strong>, the example outputs the name of the <code>myObject</code> and the <code>category</code> to the <xref href=\"System.Diagnostics.Trace.Listeners\" data-throw-if-not-resolved=\"false\"></xref>. For information on adding a listener to the <xref href=\"System.Diagnostics.Trace.Listeners\" data-throw-if-not-resolved=\"false\"></xref> collection, see the <xref href=\"System.Diagnostics.TraceListenerCollection\" data-throw-if-not-resolved=\"false\"></xref> class.</p>\n<p>Then, if the <xref href=\"System.Diagnostics.TraceLevel\" data-throw-if-not-resolved=\"false\"></xref> is set to <strong>Error</strong> or higher, the example outputs the second error message on the same line as the first message. The second message is followed by a line terminator.</p>Classic Trace.Write3 Example#1"
  syntax:
    content: >-
      [Conditional("TRACE")]

      public static void Write(object value, string category)
    content.vb: >-
      <Conditional("TRACE")>

      Public Shared Sub Write(value As Object, category As String)
    parameters:
    - id: value
      type: System.Object
    - id: category
      type: System.String
  seealso:
  - type: System.Diagnostics.Debug
    commentId: T:System.Diagnostics.Debug
  - type: System.Diagnostics.Trace
    commentId: T:System.Diagnostics.Trace
  - type: System.Diagnostics.BooleanSwitch
    commentId: T:System.Diagnostics.BooleanSwitch
  - type: System.Diagnostics.TraceSwitch
    commentId: T:System.Diagnostics.TraceSwitch
  - type: System.Diagnostics.TraceListener
    commentId: T:System.Diagnostics.TraceListener
  - type: System.Diagnostics.DefaultTraceListener
    commentId: T:System.Diagnostics.DefaultTraceListener
  - type: System.Diagnostics.ConditionalAttribute
    commentId: T:System.Diagnostics.ConditionalAttribute
  attributes:
  - type: System.Diagnostics.ConditionalAttribute
    ctor: System.Diagnostics.ConditionalAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: TRACE
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Diagnostics.Trace.Write(System.String)
  commentId: M:System.Diagnostics.Trace.Write(System.String)
  id: Write(System.String)
  parent: System.Diagnostics.Trace
  langs:
  - csharp
  - vb
  name: Write(String)
  fullName: System.Diagnostics.Trace.Write(System.String)
  type: Method
  source:
    remote:
      path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/Trace.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Write
    path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/Trace.cs
    startLine: 200
  assemblies:
  - System.Diagnostics.TraceSource
  namespace: System.Diagnostics
  summary: "\n<p>Writes a message to the trace listeners in the <xref href=\"System.Diagnostics.Trace.Listeners\" data-throw-if-not-resolved=\"false\"></xref> collection.</p>\n"
  remarks: "\n<p>By default, the output is written to an instance of <xref href=\"System.Diagnostics.DefaultTraceListener\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>This method calls the <xref href=\"System.Diagnostics.TraceListener.Write(System.String)\" data-throw-if-not-resolved=\"false\"></xref> method of the trace listener.</p>\n<p> ASP.NET supplies tracing functionality tailored for Web pages. To write trace messages in ASP.NET pages, use the <xref href=\"System.Web.UI.Page.Trace\" data-throw-if-not-resolved=\"false\"></xref> property. </p>\n<p>By default, in code associated with an ASP.NET Web page, the statement <code>Trace.Write(\"...\")</code> is a call to the <see cref=\"Overload:System.Web.TraceContext.Write\"></see> method of the <xref href=\"System.Web.UI.Page.Trace\" data-throw-if-not-resolved=\"false\"></xref> property. To use the <xref href=\"System.Diagnostics.Trace\" data-throw-if-not-resolved=\"false\"></xref> class in Web pages, you must include the namespace, for example, <code>System.Diagnostics.Trace.Write(\"...\")</code>.</p>\n"
  example:
  - "\n<p>The following example creates a <xref href=\"System.Diagnostics.TraceSwitch\" data-throw-if-not-resolved=\"false\"></xref> named <code>generalSwitch</code>. This switch is set outside the code sample.</p>\n<p>If the switch is set to the <xref href=\"System.Diagnostics.TraceLevel\" data-throw-if-not-resolved=\"false\"></xref><strong>Error</strong> or higher, the example outputs the first error message to the <xref href=\"System.Diagnostics.Trace.Listeners\" data-throw-if-not-resolved=\"false\"></xref>. For information on adding a listener to the <xref href=\"System.Diagnostics.Trace.Listeners\" data-throw-if-not-resolved=\"false\"></xref> collection, see the <xref href=\"System.Diagnostics.TraceListenerCollection\" data-throw-if-not-resolved=\"false\"></xref> class.</p>\n<p>Then, if the <xref href=\"System.Diagnostics.TraceLevel\" data-throw-if-not-resolved=\"false\"></xref> is set to <strong>Verbose</strong>, the example outputs the second error message on the same line as the first message. A line terminator follows the second message.</p>Classic Trace.Write Example#1"
  syntax:
    content: >-
      [Conditional("TRACE")]

      public static void Write(string message)
    content.vb: >-
      <Conditional("TRACE")>

      Public Shared Sub Write(message As String)
    parameters:
    - id: message
      type: System.String
  seealso:
  - type: System.Diagnostics.Debug
    commentId: T:System.Diagnostics.Debug
  - type: System.Diagnostics.Trace
    commentId: T:System.Diagnostics.Trace
  - type: System.Diagnostics.BooleanSwitch
    commentId: T:System.Diagnostics.BooleanSwitch
  - type: System.Diagnostics.TraceSwitch
    commentId: T:System.Diagnostics.TraceSwitch
  - type: System.Diagnostics.TraceListener
    commentId: T:System.Diagnostics.TraceListener
  - type: System.Diagnostics.DefaultTraceListener
    commentId: T:System.Diagnostics.DefaultTraceListener
  - type: System.Diagnostics.ConditionalAttribute
    commentId: T:System.Diagnostics.ConditionalAttribute
  attributes:
  - type: System.Diagnostics.ConditionalAttribute
    ctor: System.Diagnostics.ConditionalAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: TRACE
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Diagnostics.Trace.Write(System.String,System.String)
  commentId: M:System.Diagnostics.Trace.Write(System.String,System.String)
  id: Write(System.String,System.String)
  parent: System.Diagnostics.Trace
  langs:
  - csharp
  - vb
  name: Write(String, String)
  fullName: System.Diagnostics.Trace.Write(System.String, System.String)
  type: Method
  source:
    remote:
      path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/Trace.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Write
    path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/Trace.cs
    startLine: 220
  assemblies:
  - System.Diagnostics.TraceSource
  namespace: System.Diagnostics
  summary: "\n<p>Writes a category name and a message to the trace listeners in the <xref href=\"System.Diagnostics.Trace.Listeners\" data-throw-if-not-resolved=\"false\"></xref> collection.</p>\n"
  remarks: "\n<p>By default, the output is written to an instance of <xref href=\"System.Diagnostics.DefaultTraceListener\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>The <em>category</em> parameter can be used to group output messages.</p>\n<p>This method calls the <xref href=\"System.Diagnostics.TraceListener.Write(System.String)\" data-throw-if-not-resolved=\"false\"></xref> method of the trace listener.</p>\n<p> ASP.NET supplies tracing functionality tailored for Web pages. To write trace messages in ASP.NET pages, use the <xref href=\"System.Web.UI.Page.Trace\" data-throw-if-not-resolved=\"false\"></xref> property. </p>\n<p>By default, in code associated with an ASP.NET Web page, the statement <code>Trace.Write(\"...\")</code> is a call to the <see cref=\"Overload:System.Web.TraceContext.Write\"></see> method of the <xref href=\"System.Web.UI.Page.Trace\" data-throw-if-not-resolved=\"false\"></xref> property. To use the <xref href=\"System.Diagnostics.Trace\" data-throw-if-not-resolved=\"false\"></xref> class in Web pages, you must include the namespace, for example, <code>System.Diagnostics.Trace.Write(\"...\")</code>.</p>\n"
  example:
  - "\n<p>The following example creates a <xref href=\"System.Diagnostics.TraceSwitch\" data-throw-if-not-resolved=\"false\"></xref> named <code>generalSwitch</code>. This switch is set outside the code sample.</p>\n<p>If the switch is set to the <xref href=\"System.Diagnostics.TraceLevel\" data-throw-if-not-resolved=\"false\"></xref><strong>Verbose</strong>, the example outputs the first error message to the <xref href=\"System.Diagnostics.Trace.Listeners\" data-throw-if-not-resolved=\"false\"></xref>. For information on adding a listener to the <xref href=\"System.Diagnostics.Trace.Listeners\" data-throw-if-not-resolved=\"false\"></xref> collection, see the <xref href=\"System.Diagnostics.TraceListenerCollection\" data-throw-if-not-resolved=\"false\"></xref> class.</p>\n<p>Then, if the <xref href=\"System.Diagnostics.TraceLevel\" data-throw-if-not-resolved=\"false\"></xref> is set to <strong>Error</strong> or higher, the example outputs the second error message on the same line as the first message. The second message is followed by a line terminator.</p>Classic Trace.Write2 Example#1"
  syntax:
    content: >-
      [Conditional("TRACE")]

      public static void Write(string message, string category)
    content.vb: >-
      <Conditional("TRACE")>

      Public Shared Sub Write(message As String, category As String)
    parameters:
    - id: message
      type: System.String
    - id: category
      type: System.String
  seealso:
  - type: System.Diagnostics.Debug
    commentId: T:System.Diagnostics.Debug
  - type: System.Diagnostics.Trace
    commentId: T:System.Diagnostics.Trace
  - type: System.Diagnostics.BooleanSwitch
    commentId: T:System.Diagnostics.BooleanSwitch
  - type: System.Diagnostics.TraceSwitch
    commentId: T:System.Diagnostics.TraceSwitch
  - type: System.Diagnostics.TraceListener
    commentId: T:System.Diagnostics.TraceListener
  - type: System.Diagnostics.DefaultTraceListener
    commentId: T:System.Diagnostics.DefaultTraceListener
  - type: System.Diagnostics.ConditionalAttribute
    commentId: T:System.Diagnostics.ConditionalAttribute
  attributes:
  - type: System.Diagnostics.ConditionalAttribute
    ctor: System.Diagnostics.ConditionalAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: TRACE
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Diagnostics.Trace.WriteIf(System.Boolean,System.Object)
  commentId: M:System.Diagnostics.Trace.WriteIf(System.Boolean,System.Object)
  id: WriteIf(System.Boolean,System.Object)
  parent: System.Diagnostics.Trace
  langs:
  - csharp
  - vb
  name: WriteIf(Boolean, Object)
  fullName: System.Diagnostics.Trace.WriteIf(System.Boolean, System.Object)
  type: Method
  source:
    remote:
      path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/Trace.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: WriteIf
    path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/Trace.cs
    startLine: 295
  assemblies:
  - System.Diagnostics.TraceSource
  namespace: System.Diagnostics
  summary: "\n<p>Writes the value of the object's <xref href=\"System.Object.ToString\" data-throw-if-not-resolved=\"false\"></xref> method to the trace listeners in the <xref href=\"System.Diagnostics.Trace.Listeners\" data-throw-if-not-resolved=\"false\"></xref> collection if a condition is <strong>true</strong>.</p>\n"
  remarks: "\n<p>By default, the output is written to an instance of <xref href=\"System.Diagnostics.DefaultTraceListener\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>This method calls the <xref href=\"System.Diagnostics.TraceListener.Write(System.String)\" data-throw-if-not-resolved=\"false\"></xref> method of the trace listener.</p>\n"
  example:
  - "\n<p>The following example creates a <xref href=\"System.Diagnostics.TraceSwitch\" data-throw-if-not-resolved=\"false\"></xref> named <code>generalSwitch</code>. This switch is set outside the code sample.</p>\n<p>If the switch is set to the <xref href=\"System.Diagnostics.TraceLevel\" data-throw-if-not-resolved=\"false\"></xref><strong>Error</strong> or higher, the example outputs the first name of the value parameter to the <xref href=\"System.Diagnostics.Trace.Listeners\" data-throw-if-not-resolved=\"false\"></xref>. For information on adding a listener to the <xref href=\"System.Diagnostics.Trace.Listeners\" data-throw-if-not-resolved=\"false\"></xref> collection, see the <xref href=\"System.Diagnostics.TraceListenerCollection\" data-throw-if-not-resolved=\"false\"></xref> class.</p>\n<p>Then, if the <xref href=\"System.Diagnostics.TraceLevel\" data-throw-if-not-resolved=\"false\"></xref> is set to <strong>Verbose</strong>, the example outputs a message on the same line as the first message. The second message is followed by a line terminator.</p>Classic Trace.WriteIf1 Example#1"
  syntax:
    content: >-
      [Conditional("TRACE")]

      public static void WriteIf(bool condition, object value)
    content.vb: >-
      <Conditional("TRACE")>

      Public Shared Sub WriteIf(condition As Boolean, value As Object)
    parameters:
    - id: condition
      type: System.Boolean
    - id: value
      type: System.Object
  seealso:
  - type: System.Diagnostics.Debug
    commentId: T:System.Diagnostics.Debug
  - type: System.Diagnostics.Trace
    commentId: T:System.Diagnostics.Trace
  - type: System.Diagnostics.BooleanSwitch
    commentId: T:System.Diagnostics.BooleanSwitch
  - type: System.Diagnostics.TraceSwitch
    commentId: T:System.Diagnostics.TraceSwitch
  - type: System.Diagnostics.TraceListener
    commentId: T:System.Diagnostics.TraceListener
  - type: System.Diagnostics.DefaultTraceListener
    commentId: T:System.Diagnostics.DefaultTraceListener
  - type: System.Diagnostics.ConditionalAttribute
    commentId: T:System.Diagnostics.ConditionalAttribute
  attributes:
  - type: System.Diagnostics.ConditionalAttribute
    ctor: System.Diagnostics.ConditionalAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: TRACE
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Diagnostics.Trace.WriteIf(System.Boolean,System.Object,System.String)
  commentId: M:System.Diagnostics.Trace.WriteIf(System.Boolean,System.Object,System.String)
  id: WriteIf(System.Boolean,System.Object,System.String)
  parent: System.Diagnostics.Trace
  langs:
  - csharp
  - vb
  name: WriteIf(Boolean, Object, String)
  fullName: System.Diagnostics.Trace.WriteIf(System.Boolean, System.Object, System.String)
  type: Method
  source:
    remote:
      path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/Trace.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: WriteIf
    path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/Trace.cs
    startLine: 316
  assemblies:
  - System.Diagnostics.TraceSource
  namespace: System.Diagnostics
  summary: "\n<p>Writes a category name and the value of the object's <xref href=\"System.Object.ToString\" data-throw-if-not-resolved=\"false\"></xref> method to the trace listeners in the <xref href=\"System.Diagnostics.Trace.Listeners\" data-throw-if-not-resolved=\"false\"></xref> collection if a condition is <strong>true</strong>.</p>\n"
  remarks: "\n<p>By default, the output is written to an instance of <xref href=\"System.Diagnostics.DefaultTraceListener\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>The <em>category</em> parameter can be used to group output messages.</p>\n<p>This method calls the <xref href=\"System.Diagnostics.TraceListener.Write(System.String)\" data-throw-if-not-resolved=\"false\"></xref> method of the trace listener.</p>\n"
  example:
  - "\n<p>The following example creates a <xref href=\"System.Diagnostics.TraceSwitch\" data-throw-if-not-resolved=\"false\"></xref> named <code>generalSwitch</code>. This switch is set outside the code sample.</p>\n<p>If the switch is set to the <xref href=\"System.Diagnostics.TraceLevel\" data-throw-if-not-resolved=\"false\"></xref><strong>Verbose</strong>, the example outputs the name of the <code>myObject</code> and the <code>category</code> to the <xref href=\"System.Diagnostics.Trace.Listeners\" data-throw-if-not-resolved=\"false\"></xref>. For information on adding a listener to the <xref href=\"System.Diagnostics.Trace.Listeners\" data-throw-if-not-resolved=\"false\"></xref> collection, see the <xref href=\"System.Diagnostics.TraceListenerCollection\" data-throw-if-not-resolved=\"false\"></xref> class.</p>\n<p>Then, if the <xref href=\"System.Diagnostics.TraceLevel\" data-throw-if-not-resolved=\"false\"></xref> is set to <strong>Error</strong> or higher, the example outputs the second error message on the same line as the first message. The second message is followed by a line terminator.</p>Classic Trace.WriteIf3 Example#1"
  syntax:
    content: >-
      [Conditional("TRACE")]

      public static void WriteIf(bool condition, object value, string category)
    content.vb: >-
      <Conditional("TRACE")>

      Public Shared Sub WriteIf(condition As Boolean, value As Object, category As String)
    parameters:
    - id: condition
      type: System.Boolean
    - id: value
      type: System.Object
    - id: category
      type: System.String
  seealso:
  - type: System.Diagnostics.Debug
    commentId: T:System.Diagnostics.Debug
  - type: System.Diagnostics.Trace
    commentId: T:System.Diagnostics.Trace
  - type: System.Diagnostics.BooleanSwitch
    commentId: T:System.Diagnostics.BooleanSwitch
  - type: System.Diagnostics.TraceSwitch
    commentId: T:System.Diagnostics.TraceSwitch
  - type: System.Diagnostics.TraceListener
    commentId: T:System.Diagnostics.TraceListener
  - type: System.Diagnostics.DefaultTraceListener
    commentId: T:System.Diagnostics.DefaultTraceListener
  - type: System.Diagnostics.ConditionalAttribute
    commentId: T:System.Diagnostics.ConditionalAttribute
  attributes:
  - type: System.Diagnostics.ConditionalAttribute
    ctor: System.Diagnostics.ConditionalAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: TRACE
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Diagnostics.Trace.WriteIf(System.Boolean,System.String)
  commentId: M:System.Diagnostics.Trace.WriteIf(System.Boolean,System.String)
  id: WriteIf(System.Boolean,System.String)
  parent: System.Diagnostics.Trace
  langs:
  - csharp
  - vb
  name: WriteIf(Boolean, String)
  fullName: System.Diagnostics.Trace.WriteIf(System.Boolean, System.String)
  type: Method
  source:
    remote:
      path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/Trace.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: WriteIf
    path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/Trace.cs
    startLine: 284
  assemblies:
  - System.Diagnostics.TraceSource
  namespace: System.Diagnostics
  summary: "\n<p>Writes a message to the trace listeners in the <xref href=\"System.Diagnostics.Trace.Listeners\" data-throw-if-not-resolved=\"false\"></xref> collection if a condition is <strong>true</strong>.</p>\n"
  remarks: "\n<p>By default, the output is written to an instance of <xref href=\"System.Diagnostics.DefaultTraceListener\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>This method calls the <xref href=\"System.Diagnostics.TraceListener.Write(System.String)\" data-throw-if-not-resolved=\"false\"></xref> method of the trace listener.</p>\n"
  example:
  - "\n<p>The following example creates a <xref href=\"System.Diagnostics.TraceSwitch\" data-throw-if-not-resolved=\"false\"></xref> named <code>generalSwitch</code>. This switch is set outside the code sample.</p>\n<p>If the switch is set to the <xref href=\"System.Diagnostics.TraceLevel\" data-throw-if-not-resolved=\"false\"></xref><strong>Error</strong> or higher, the example outputs the first error message to the <xref href=\"System.Diagnostics.Trace.Listeners\" data-throw-if-not-resolved=\"false\"></xref>. For information on adding a listener to the <xref href=\"System.Diagnostics.Trace.Listeners\" data-throw-if-not-resolved=\"false\"></xref> collection, see the <xref href=\"System.Diagnostics.TraceListenerCollection\" data-throw-if-not-resolved=\"false\"></xref> class.</p>\n<p>Then, if the <xref href=\"System.Diagnostics.TraceLevel\" data-throw-if-not-resolved=\"false\"></xref> is set to <strong>Verbose</strong>, the example outputs the second error message on the same line as the first message. The second message is followed by a line terminator.</p>Classic Trace.WriteIf Example#1"
  syntax:
    content: >-
      [Conditional("TRACE")]

      public static void WriteIf(bool condition, string message)
    content.vb: >-
      <Conditional("TRACE")>

      Public Shared Sub WriteIf(condition As Boolean, message As String)
    parameters:
    - id: condition
      type: System.Boolean
    - id: message
      type: System.String
  seealso:
  - type: System.Diagnostics.Debug
    commentId: T:System.Diagnostics.Debug
  - type: System.Diagnostics.Trace
    commentId: T:System.Diagnostics.Trace
  - type: System.Diagnostics.BooleanSwitch
    commentId: T:System.Diagnostics.BooleanSwitch
  - type: System.Diagnostics.TraceSwitch
    commentId: T:System.Diagnostics.TraceSwitch
  - type: System.Diagnostics.TraceListener
    commentId: T:System.Diagnostics.TraceListener
  - type: System.Diagnostics.DefaultTraceListener
    commentId: T:System.Diagnostics.DefaultTraceListener
  - type: System.Diagnostics.ConditionalAttribute
    commentId: T:System.Diagnostics.ConditionalAttribute
  attributes:
  - type: System.Diagnostics.ConditionalAttribute
    ctor: System.Diagnostics.ConditionalAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: TRACE
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Diagnostics.Trace.WriteIf(System.Boolean,System.String,System.String)
  commentId: M:System.Diagnostics.Trace.WriteIf(System.Boolean,System.String,System.String)
  id: WriteIf(System.Boolean,System.String,System.String)
  parent: System.Diagnostics.Trace
  langs:
  - csharp
  - vb
  name: WriteIf(Boolean, String, String)
  fullName: System.Diagnostics.Trace.WriteIf(System.Boolean, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/Trace.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: WriteIf
    path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/Trace.cs
    startLine: 305
  assemblies:
  - System.Diagnostics.TraceSource
  namespace: System.Diagnostics
  summary: "\n<p>Writes a category name and message to the trace listeners in the <xref href=\"System.Diagnostics.Trace.Listeners\" data-throw-if-not-resolved=\"false\"></xref> collection if a condition is <strong>true</strong>.</p>\n"
  remarks: "\n<p>By default, the output is written to an instance of <xref href=\"System.Diagnostics.DefaultTraceListener\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>The <em>category</em> parameter can be used to group output messages.</p>\n<p>This method calls the <xref href=\"System.Diagnostics.TraceListener.Write(System.String)\" data-throw-if-not-resolved=\"false\"></xref> method of the trace listener.</p>\n"
  example:
  - "\n<p>The following example creates a <xref href=\"System.Diagnostics.TraceSwitch\" data-throw-if-not-resolved=\"false\"></xref> named <code>generalSwitch</code>. This switch is set outside the code sample.</p>\n<p>If the switch is set to the <xref href=\"System.Diagnostics.TraceLevel\" data-throw-if-not-resolved=\"false\"></xref><strong>Verbose</strong>, the example outputs the first error message to the <xref href=\"System.Diagnostics.Trace.Listeners\" data-throw-if-not-resolved=\"false\"></xref>. For information on adding a listener to the <xref href=\"System.Diagnostics.Trace.Listeners\" data-throw-if-not-resolved=\"false\"></xref> collection, see the <xref href=\"System.Diagnostics.TraceListenerCollection\" data-throw-if-not-resolved=\"false\"></xref> class.</p>\n<p>Then, if the <xref href=\"System.Diagnostics.TraceLevel\" data-throw-if-not-resolved=\"false\"></xref> is set to <strong>Error</strong> or higher, the example outputs the second error message on the same line as the first message. The second message is followed by a line terminator.</p>Classic Trace.WriteIf2 Example#1"
  syntax:
    content: >-
      [Conditional("TRACE")]

      public static void WriteIf(bool condition, string message, string category)
    content.vb: >-
      <Conditional("TRACE")>

      Public Shared Sub WriteIf(condition As Boolean, message As String, category As String)
    parameters:
    - id: condition
      type: System.Boolean
    - id: message
      type: System.String
    - id: category
      type: System.String
  seealso:
  - type: System.Diagnostics.Debug
    commentId: T:System.Diagnostics.Debug
  - type: System.Diagnostics.Trace
    commentId: T:System.Diagnostics.Trace
  - type: System.Diagnostics.BooleanSwitch
    commentId: T:System.Diagnostics.BooleanSwitch
  - type: System.Diagnostics.TraceSwitch
    commentId: T:System.Diagnostics.TraceSwitch
  - type: System.Diagnostics.TraceListener
    commentId: T:System.Diagnostics.TraceListener
  - type: System.Diagnostics.DefaultTraceListener
    commentId: T:System.Diagnostics.DefaultTraceListener
  - type: System.Diagnostics.ConditionalAttribute
    commentId: T:System.Diagnostics.ConditionalAttribute
  attributes:
  - type: System.Diagnostics.ConditionalAttribute
    ctor: System.Diagnostics.ConditionalAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: TRACE
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Diagnostics.Trace.WriteLine(System.Object)
  commentId: M:System.Diagnostics.Trace.WriteLine(System.Object)
  id: WriteLine(System.Object)
  parent: System.Diagnostics.Trace
  langs:
  - csharp
  - vb
  name: WriteLine(Object)
  fullName: System.Diagnostics.Trace.WriteLine(System.Object)
  type: Method
  source:
    remote:
      path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/Trace.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: WriteLine
    path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/Trace.cs
    startLine: 251
  assemblies:
  - System.Diagnostics.TraceSource
  namespace: System.Diagnostics
  summary: "\n<p>Writes the value of the object's <xref href=\"System.Object.ToString\" data-throw-if-not-resolved=\"false\"></xref> method to the trace listeners in the <xref href=\"System.Diagnostics.Trace.Listeners\" data-throw-if-not-resolved=\"false\"></xref> collection.</p>\n"
  remarks: "\n<p>By default, the output is written to an instance of <xref href=\"System.Diagnostics.DefaultTraceListener\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>This method calls the <xref href=\"System.Diagnostics.TraceListener.WriteLine(System.String)\" data-throw-if-not-resolved=\"false\"></xref> method of the trace listener.</p>\n"
  example:
  - "\n<p>The following example creates a <xref href=\"System.Diagnostics.TraceSwitch\" data-throw-if-not-resolved=\"false\"></xref> named <code>generalSwitch</code>. This switch is set outside the code sample.</p>\n<p>If the switch is set to the <xref href=\"System.Diagnostics.TraceLevel\" data-throw-if-not-resolved=\"false\"></xref><strong>Error</strong> or higher, the example outputs the first error message to the <xref href=\"System.Diagnostics.Trace.Listeners\" data-throw-if-not-resolved=\"false\"></xref>. For information on adding a listener to the <xref href=\"System.Diagnostics.Trace.Listeners\" data-throw-if-not-resolved=\"false\"></xref> collection, see the <xref href=\"System.Diagnostics.TraceListenerCollection\" data-throw-if-not-resolved=\"false\"></xref> class.</p>\n<p>Then, if the <xref href=\"System.Diagnostics.TraceLevel\" data-throw-if-not-resolved=\"false\"></xref> is set to <strong>Verbose</strong>, the example outputs the name of the object on the same line as the first message. The second message is followed by a line terminator.</p>Classic Trace.WriteLine1 Example#1"
  syntax:
    content: >-
      [Conditional("TRACE")]

      public static void WriteLine(object value)
    content.vb: >-
      <Conditional("TRACE")>

      Public Shared Sub WriteLine(value As Object)
    parameters:
    - id: value
      type: System.Object
  seealso:
  - type: System.Diagnostics.Debug
    commentId: T:System.Diagnostics.Debug
  - type: System.Diagnostics.Trace
    commentId: T:System.Diagnostics.Trace
  - type: System.Diagnostics.BooleanSwitch
    commentId: T:System.Diagnostics.BooleanSwitch
  - type: System.Diagnostics.TraceSwitch
    commentId: T:System.Diagnostics.TraceSwitch
  - type: System.Diagnostics.TraceListener
    commentId: T:System.Diagnostics.TraceListener
  - type: System.Diagnostics.DefaultTraceListener
    commentId: T:System.Diagnostics.DefaultTraceListener
  - type: System.Diagnostics.ConditionalAttribute
    commentId: T:System.Diagnostics.ConditionalAttribute
  attributes:
  - type: System.Diagnostics.ConditionalAttribute
    ctor: System.Diagnostics.ConditionalAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: TRACE
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Diagnostics.Trace.WriteLine(System.Object,System.String)
  commentId: M:System.Diagnostics.Trace.WriteLine(System.Object,System.String)
  id: WriteLine(System.Object,System.String)
  parent: System.Diagnostics.Trace
  langs:
  - csharp
  - vb
  name: WriteLine(Object, String)
  fullName: System.Diagnostics.Trace.WriteLine(System.Object, System.String)
  type: Method
  source:
    remote:
      path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/Trace.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: WriteLine
    path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/Trace.cs
    startLine: 274
  assemblies:
  - System.Diagnostics.TraceSource
  namespace: System.Diagnostics
  summary: "\n<p>Writes a category name and the value of the object's <xref href=\"System.Object.ToString\" data-throw-if-not-resolved=\"false\"></xref> method to the trace listeners in the <xref href=\"System.Diagnostics.Trace.Listeners\" data-throw-if-not-resolved=\"false\"></xref> collection.</p>\n"
  remarks: "\n<p>By default, the output is written to an instance of <xref href=\"System.Diagnostics.DefaultTraceListener\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>The <em>category</em> parameter can be used to group output messages.</p>\n<p>This method calls the <xref href=\"System.Diagnostics.TraceListener.WriteLine(System.String)\" data-throw-if-not-resolved=\"false\"></xref> method of the trace listener.</p>\n"
  example:
  - "\n<p>The following example creates a <xref href=\"System.Diagnostics.TraceSwitch\" data-throw-if-not-resolved=\"false\"></xref> named <code>generalSwitch</code>. This switch is set outside the code sample.</p>\n<p>If the switch is set to the <xref href=\"System.Diagnostics.TraceLevel\" data-throw-if-not-resolved=\"false\"></xref><strong>Error</strong> or higher, the example outputs the first error message to the <xref href=\"System.Diagnostics.Trace.Listeners\" data-throw-if-not-resolved=\"false\"></xref>. For information on adding a listener to the <xref href=\"System.Diagnostics.Trace.Listeners\" data-throw-if-not-resolved=\"false\"></xref> collection, see the <xref href=\"System.Diagnostics.TraceListenerCollection\" data-throw-if-not-resolved=\"false\"></xref> class.</p>\n<p>Then, if the <xref href=\"System.Diagnostics.TraceLevel\" data-throw-if-not-resolved=\"false\"></xref> is set to <strong>Verbose</strong>, the example outputs the second error message on the same line as the first message. The second message is followed by a line terminator.</p>Classic Trace.WriteLine3 Example#1"
  syntax:
    content: >-
      [Conditional("TRACE")]

      public static void WriteLine(object value, string category)
    content.vb: >-
      <Conditional("TRACE")>

      Public Shared Sub WriteLine(value As Object, category As String)
    parameters:
    - id: value
      type: System.Object
    - id: category
      type: System.String
  seealso:
  - type: System.Diagnostics.Debug
    commentId: T:System.Diagnostics.Debug
  - type: System.Diagnostics.Trace
    commentId: T:System.Diagnostics.Trace
  - type: System.Diagnostics.BooleanSwitch
    commentId: T:System.Diagnostics.BooleanSwitch
  - type: System.Diagnostics.TraceSwitch
    commentId: T:System.Diagnostics.TraceSwitch
  - type: System.Diagnostics.TraceListener
    commentId: T:System.Diagnostics.TraceListener
  - type: System.Diagnostics.DefaultTraceListener
    commentId: T:System.Diagnostics.DefaultTraceListener
  - type: System.Diagnostics.ConditionalAttribute
    commentId: T:System.Diagnostics.ConditionalAttribute
  attributes:
  - type: System.Diagnostics.ConditionalAttribute
    ctor: System.Diagnostics.ConditionalAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: TRACE
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Diagnostics.Trace.WriteLine(System.String)
  commentId: M:System.Diagnostics.Trace.WriteLine(System.String)
  id: WriteLine(System.String)
  parent: System.Diagnostics.Trace
  langs:
  - csharp
  - vb
  name: WriteLine(String)
  fullName: System.Diagnostics.Trace.WriteLine(System.String)
  type: Method
  source:
    remote:
      path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/Trace.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: WriteLine
    path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/Trace.cs
    startLine: 241
  assemblies:
  - System.Diagnostics.TraceSource
  namespace: System.Diagnostics
  summary: "\n<p>Writes a message to the trace listeners in the <xref href=\"System.Diagnostics.Trace.Listeners\" data-throw-if-not-resolved=\"false\"></xref> collection.</p>\n"
  remarks: "\n<p>By default, the output is written to an instance of <xref href=\"System.Diagnostics.DefaultTraceListener\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>This method calls the <xref href=\"System.Diagnostics.TraceListener.WriteLine(System.String)\" data-throw-if-not-resolved=\"false\"></xref> method of the trace listener.</p>\n"
  example:
  - "\n<p>The following example creates a <xref href=\"System.Diagnostics.TraceSwitch\" data-throw-if-not-resolved=\"false\"></xref> named <code>generalSwitch</code>. This switch is set outside the code sample.</p>\n<p>If the switch is set to the <xref href=\"System.Diagnostics.TraceLevel\" data-throw-if-not-resolved=\"false\"></xref><strong>Error</strong> or higher, the example outputs the first error message to the <xref href=\"System.Diagnostics.Trace.Listeners\" data-throw-if-not-resolved=\"false\"></xref>. For information on adding a listener to the <xref href=\"System.Diagnostics.Trace.Listeners\" data-throw-if-not-resolved=\"false\"></xref> collection, see the <xref href=\"System.Diagnostics.TraceListenerCollection\" data-throw-if-not-resolved=\"false\"></xref> class.</p>\n<p>Then, if the <xref href=\"System.Diagnostics.TraceLevel\" data-throw-if-not-resolved=\"false\"></xref> is set to <strong>Verbose</strong>, the example outputs the second error message on the same line as the first message. The second message is followed by a line terminator.</p>Classic Trace.Write Example#1"
  syntax:
    content: >-
      [Conditional("TRACE")]

      public static void WriteLine(string message)
    content.vb: >-
      <Conditional("TRACE")>

      Public Shared Sub WriteLine(message As String)
    parameters:
    - id: message
      type: System.String
  seealso:
  - type: System.Diagnostics.Debug
    commentId: T:System.Diagnostics.Debug
  - type: System.Diagnostics.Trace
    commentId: T:System.Diagnostics.Trace
  - type: System.Diagnostics.BooleanSwitch
    commentId: T:System.Diagnostics.BooleanSwitch
  - type: System.Diagnostics.TraceSwitch
    commentId: T:System.Diagnostics.TraceSwitch
  - type: System.Diagnostics.TraceListener
    commentId: T:System.Diagnostics.TraceListener
  - type: System.Diagnostics.DefaultTraceListener
    commentId: T:System.Diagnostics.DefaultTraceListener
  - type: System.Diagnostics.ConditionalAttribute
    commentId: T:System.Diagnostics.ConditionalAttribute
  attributes:
  - type: System.Diagnostics.ConditionalAttribute
    ctor: System.Diagnostics.ConditionalAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: TRACE
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Diagnostics.Trace.WriteLine(System.String,System.String)
  commentId: M:System.Diagnostics.Trace.WriteLine(System.String,System.String)
  id: WriteLine(System.String,System.String)
  parent: System.Diagnostics.Trace
  langs:
  - csharp
  - vb
  name: WriteLine(String, String)
  fullName: System.Diagnostics.Trace.WriteLine(System.String, System.String)
  type: Method
  source:
    remote:
      path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/Trace.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: WriteLine
    path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/Trace.cs
    startLine: 263
  assemblies:
  - System.Diagnostics.TraceSource
  namespace: System.Diagnostics
  summary: "\n<p>Writes a category name and message to the trace listeners in the <xref href=\"System.Diagnostics.Trace.Listeners\" data-throw-if-not-resolved=\"false\"></xref> collection.</p>\n"
  remarks: "\n<p>By default, the output is written to an instance of <xref href=\"System.Diagnostics.DefaultTraceListener\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>The <em>category</em> parameter can be used to group output messages.</p>\n<p>This method calls the <xref href=\"System.Diagnostics.TraceListener.WriteLine(System.String)\" data-throw-if-not-resolved=\"false\"></xref> method of the trace listener.</p>\n"
  example:
  - "\n<p>The following example creates a <xref href=\"System.Diagnostics.TraceSwitch\" data-throw-if-not-resolved=\"false\"></xref> named <code>generalSwitch</code>. This switch is set outside the code sample.</p>\n<p>If the switch is set to the <xref href=\"System.Diagnostics.TraceLevel\" data-throw-if-not-resolved=\"false\"></xref><strong>Error</strong> or higher, the example outputs the first error message to the <xref href=\"System.Diagnostics.Trace.Listeners\" data-throw-if-not-resolved=\"false\"></xref>. For information on adding a listener to the <xref href=\"System.Diagnostics.Trace.Listeners\" data-throw-if-not-resolved=\"false\"></xref> collection, see the <xref href=\"System.Diagnostics.TraceListenerCollection\" data-throw-if-not-resolved=\"false\"></xref> class.</p>\n<p>Then, if the <xref href=\"System.Diagnostics.TraceLevel\" data-throw-if-not-resolved=\"false\"></xref> is set to <strong>Verbose</strong>, the example outputs the second error message and the <code>category</code> on the same line as the first message. The second message is followed by a line terminator.</p>Classic Trace.WriteLine2 Example#1"
  syntax:
    content: >-
      [Conditional("TRACE")]

      public static void WriteLine(string message, string category)
    content.vb: >-
      <Conditional("TRACE")>

      Public Shared Sub WriteLine(message As String, category As String)
    parameters:
    - id: message
      type: System.String
    - id: category
      type: System.String
  seealso:
  - type: System.Diagnostics.Debug
    commentId: T:System.Diagnostics.Debug
  - type: System.Diagnostics.Trace
    commentId: T:System.Diagnostics.Trace
  - type: System.Diagnostics.BooleanSwitch
    commentId: T:System.Diagnostics.BooleanSwitch
  - type: System.Diagnostics.TraceSwitch
    commentId: T:System.Diagnostics.TraceSwitch
  - type: System.Diagnostics.TraceListener
    commentId: T:System.Diagnostics.TraceListener
  - type: System.Diagnostics.DefaultTraceListener
    commentId: T:System.Diagnostics.DefaultTraceListener
  - type: System.Diagnostics.ConditionalAttribute
    commentId: T:System.Diagnostics.ConditionalAttribute
  attributes:
  - type: System.Diagnostics.ConditionalAttribute
    ctor: System.Diagnostics.ConditionalAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: TRACE
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.Object)
  commentId: M:System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.Object)
  id: WriteLineIf(System.Boolean,System.Object)
  parent: System.Diagnostics.Trace
  langs:
  - csharp
  - vb
  name: WriteLineIf(Boolean, Object)
  fullName: System.Diagnostics.Trace.WriteLineIf(System.Boolean, System.Object)
  type: Method
  source:
    remote:
      path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/Trace.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: WriteLineIf
    path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/Trace.cs
    startLine: 341
  assemblies:
  - System.Diagnostics.TraceSource
  namespace: System.Diagnostics
  summary: "\n<p>Writes the value of the object's <xref href=\"System.Object.ToString\" data-throw-if-not-resolved=\"false\"></xref> method to the trace listeners in the <xref href=\"System.Diagnostics.Trace.Listeners\" data-throw-if-not-resolved=\"false\"></xref> collection if a condition is <strong>true</strong>.</p>\n"
  remarks: "\n<p>By default, the output is written to an instance of <xref href=\"System.Diagnostics.DefaultTraceListener\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>This method calls the <xref href=\"System.Diagnostics.TraceListener.WriteLine(System.String)\" data-throw-if-not-resolved=\"false\"></xref> method of the trace listener.</p>\n"
  example:
  - "\n<p>The following example creates a <xref href=\"System.Diagnostics.TraceSwitch\" data-throw-if-not-resolved=\"false\"></xref> named <code>generalSwitch</code>. This switch is set outside the code sample.</p>\n<p>If the switch is set to the <xref href=\"System.Diagnostics.TraceLevel\" data-throw-if-not-resolved=\"false\"></xref><strong>Error</strong> or higher, the example outputs the first error message to the <xref href=\"System.Diagnostics.Trace.Listeners\" data-throw-if-not-resolved=\"false\"></xref>. For information on adding a listener to the <xref href=\"System.Diagnostics.Trace.Listeners\" data-throw-if-not-resolved=\"false\"></xref> collection, see the <xref href=\"System.Diagnostics.TraceListenerCollection\" data-throw-if-not-resolved=\"false\"></xref> class.</p>\n<p>Then, if the <xref href=\"System.Diagnostics.TraceLevel\" data-throw-if-not-resolved=\"false\"></xref> is set to <strong>Verbose</strong>, the example outputs the name of the object on the same line as the first message. The second message is followed by a line terminator.</p>Classic Trace.WriteLineIf1 Example#1"
  syntax:
    content: >-
      [Conditional("TRACE")]

      public static void WriteLineIf(bool condition, object value)
    content.vb: >-
      <Conditional("TRACE")>

      Public Shared Sub WriteLineIf(condition As Boolean, value As Object)
    parameters:
    - id: condition
      type: System.Boolean
    - id: value
      type: System.Object
  seealso:
  - type: System.Diagnostics.Debug
    commentId: T:System.Diagnostics.Debug
  - type: System.Diagnostics.Trace
    commentId: T:System.Diagnostics.Trace
  - type: System.Diagnostics.BooleanSwitch
    commentId: T:System.Diagnostics.BooleanSwitch
  - type: System.Diagnostics.TraceSwitch
    commentId: T:System.Diagnostics.TraceSwitch
  - type: System.Diagnostics.TraceListener
    commentId: T:System.Diagnostics.TraceListener
  - type: System.Diagnostics.DefaultTraceListener
    commentId: T:System.Diagnostics.DefaultTraceListener
  - type: System.Diagnostics.ConditionalAttribute
    commentId: T:System.Diagnostics.ConditionalAttribute
  attributes:
  - type: System.Diagnostics.ConditionalAttribute
    ctor: System.Diagnostics.ConditionalAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: TRACE
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.Object,System.String)
  commentId: M:System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.Object,System.String)
  id: WriteLineIf(System.Boolean,System.Object,System.String)
  parent: System.Diagnostics.Trace
  langs:
  - csharp
  - vb
  name: WriteLineIf(Boolean, Object, String)
  fullName: System.Diagnostics.Trace.WriteLineIf(System.Boolean, System.Object, System.String)
  type: Method
  source:
    remote:
      path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/Trace.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: WriteLineIf
    path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/Trace.cs
    startLine: 364
  assemblies:
  - System.Diagnostics.TraceSource
  namespace: System.Diagnostics
  summary: "\n<p>Writes a category name and the value of the object's <xref href=\"System.Object.ToString\" data-throw-if-not-resolved=\"false\"></xref> method to the trace listeners in the <xref href=\"System.Diagnostics.Trace.Listeners\" data-throw-if-not-resolved=\"false\"></xref> collection if a condition is <strong>true</strong>.</p>\n"
  remarks: "\n<p>By default, the output is written to an instance of <xref href=\"System.Diagnostics.DefaultTraceListener\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>The <em>category</em> parameter can be used to group output messages.</p>\n<p>This method calls the <xref href=\"System.Diagnostics.TraceListener.WriteLine(System.String)\" data-throw-if-not-resolved=\"false\"></xref> method of the trace listener.</p>\n"
  example:
  - "\n<p>The following example creates a <xref href=\"System.Diagnostics.TraceSwitch\" data-throw-if-not-resolved=\"false\"></xref> named <code>generalSwitch</code>. This switch is set outside the code sample.</p>\n<p>If the switch is set to the <xref href=\"System.Diagnostics.TraceLevel\" data-throw-if-not-resolved=\"false\"></xref><strong>Error</strong> or higher, the example outputs the first error message to the <xref href=\"System.Diagnostics.Trace.Listeners\" data-throw-if-not-resolved=\"false\"></xref>. For information on adding a listener to the <xref href=\"System.Diagnostics.Trace.Listeners\" data-throw-if-not-resolved=\"false\"></xref> collection, see the <xref href=\"System.Diagnostics.TraceListenerCollection\" data-throw-if-not-resolved=\"false\"></xref> class.</p>\n<p>Then, if the <xref href=\"System.Diagnostics.TraceLevel\" data-throw-if-not-resolved=\"false\"></xref> is set to <strong>Verbose</strong>, the example outputs the second error message on the same line as the first message. The second message is followed by a line terminator.</p>Classic Trace.WriteLineIf3 Example#1"
  syntax:
    content: >-
      [Conditional("TRACE")]

      public static void WriteLineIf(bool condition, object value, string category)
    content.vb: >-
      <Conditional("TRACE")>

      Public Shared Sub WriteLineIf(condition As Boolean, value As Object, category As String)
    parameters:
    - id: condition
      type: System.Boolean
    - id: value
      type: System.Object
    - id: category
      type: System.String
  seealso:
  - type: System.Diagnostics.Debug
    commentId: T:System.Diagnostics.Debug
  - type: System.Diagnostics.Trace
    commentId: T:System.Diagnostics.Trace
  - type: System.Diagnostics.BooleanSwitch
    commentId: T:System.Diagnostics.BooleanSwitch
  - type: System.Diagnostics.TraceSwitch
    commentId: T:System.Diagnostics.TraceSwitch
  - type: System.Diagnostics.TraceListener
    commentId: T:System.Diagnostics.TraceListener
  - type: System.Diagnostics.DefaultTraceListener
    commentId: T:System.Diagnostics.DefaultTraceListener
  - type: System.Diagnostics.ConditionalAttribute
    commentId: T:System.Diagnostics.ConditionalAttribute
  attributes:
  - type: System.Diagnostics.ConditionalAttribute
    ctor: System.Diagnostics.ConditionalAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: TRACE
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.String)
  commentId: M:System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.String)
  id: WriteLineIf(System.Boolean,System.String)
  parent: System.Diagnostics.Trace
  langs:
  - csharp
  - vb
  name: WriteLineIf(Boolean, String)
  fullName: System.Diagnostics.Trace.WriteLineIf(System.Boolean, System.String)
  type: Method
  source:
    remote:
      path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/Trace.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: WriteLineIf
    path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/Trace.cs
    startLine: 328
  assemblies:
  - System.Diagnostics.TraceSource
  namespace: System.Diagnostics
  summary: "\n<p>Writes a message to the trace listeners in the <xref href=\"System.Diagnostics.Trace.Listeners\" data-throw-if-not-resolved=\"false\"></xref> collection if a condition is <strong>true</strong>.</p>\n"
  remarks: "\n<p>By default, the output is written to an instance of <xref href=\"System.Diagnostics.DefaultTraceListener\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>This method calls the <xref href=\"System.Diagnostics.TraceListener.WriteLine(System.String)\" data-throw-if-not-resolved=\"false\"></xref> method of the trace listener.</p>\n"
  example:
  - "\n<p>The following example creates a <xref href=\"System.Diagnostics.TraceSwitch\" data-throw-if-not-resolved=\"false\"></xref> named <code>generalSwitch</code>. This switch is set outside the code sample.</p>\n<p>If the switch is set to the <xref href=\"System.Diagnostics.TraceLevel\" data-throw-if-not-resolved=\"false\"></xref><strong>Error</strong> or higher, the example outputs the first error message to the <xref href=\"System.Diagnostics.Trace.Listeners\" data-throw-if-not-resolved=\"false\"></xref>. For information on adding a listener to the <xref href=\"System.Diagnostics.Trace.Listeners\" data-throw-if-not-resolved=\"false\"></xref> collection, see the <xref href=\"System.Diagnostics.TraceListenerCollection\" data-throw-if-not-resolved=\"false\"></xref> class.</p>\n<p>Then, if the <xref href=\"System.Diagnostics.TraceLevel\" data-throw-if-not-resolved=\"false\"></xref> is set to <strong>Verbose</strong>, the example outputs the second error message on the same line as the first message. The second message is followed by a line terminator.</p>Classic Trace.WriteIf Example#1"
  syntax:
    content: >-
      [Conditional("TRACE")]

      public static void WriteLineIf(bool condition, string message)
    content.vb: >-
      <Conditional("TRACE")>

      Public Shared Sub WriteLineIf(condition As Boolean, message As String)
    parameters:
    - id: condition
      type: System.Boolean
    - id: message
      type: System.String
  seealso:
  - type: System.Diagnostics.Debug
    commentId: T:System.Diagnostics.Debug
  - type: System.Diagnostics.Trace
    commentId: T:System.Diagnostics.Trace
  - type: System.Diagnostics.BooleanSwitch
    commentId: T:System.Diagnostics.BooleanSwitch
  - type: System.Diagnostics.TraceSwitch
    commentId: T:System.Diagnostics.TraceSwitch
  - type: System.Diagnostics.TraceListener
    commentId: T:System.Diagnostics.TraceListener
  - type: System.Diagnostics.DefaultTraceListener
    commentId: T:System.Diagnostics.DefaultTraceListener
  - type: System.Diagnostics.ConditionalAttribute
    commentId: T:System.Diagnostics.ConditionalAttribute
  attributes:
  - type: System.Diagnostics.ConditionalAttribute
    ctor: System.Diagnostics.ConditionalAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: TRACE
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.String,System.String)
  commentId: M:System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.String,System.String)
  id: WriteLineIf(System.Boolean,System.String,System.String)
  parent: System.Diagnostics.Trace
  langs:
  - csharp
  - vb
  name: WriteLineIf(Boolean, String, String)
  fullName: System.Diagnostics.Trace.WriteLineIf(System.Boolean, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/Trace.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: WriteLineIf
    path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/Trace.cs
    startLine: 352
  assemblies:
  - System.Diagnostics.TraceSource
  namespace: System.Diagnostics
  summary: "\n<p>Writes a category name and message to the trace listeners in the <xref href=\"System.Diagnostics.Trace.Listeners\" data-throw-if-not-resolved=\"false\"></xref> collection if a condition is <strong>true</strong>.</p>\n"
  remarks: "\n<p>By default, the output is written to an instance of <xref href=\"System.Diagnostics.DefaultTraceListener\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>The <em>category</em> parameter can be used to group output messages.</p>\n<p>This method calls the <xref href=\"System.Diagnostics.TraceListener.WriteLine(System.String)\" data-throw-if-not-resolved=\"false\"></xref> method of the trace listener.</p>\n"
  example:
  - "\n<p>The following example creates a <xref href=\"System.Diagnostics.TraceSwitch\" data-throw-if-not-resolved=\"false\"></xref> named <code>generalSwitch</code>. This switch is set outside the code sample.</p>\n<p>If the switch is set to the <xref href=\"System.Diagnostics.TraceLevel\" data-throw-if-not-resolved=\"false\"></xref><strong>Error</strong> or higher, the example outputs the first error message to the <xref href=\"System.Diagnostics.Trace.Listeners\" data-throw-if-not-resolved=\"false\"></xref>. For information on adding a listener to the <xref href=\"System.Diagnostics.Trace.Listeners\" data-throw-if-not-resolved=\"false\"></xref> collection, see the <xref href=\"System.Diagnostics.TraceListenerCollection\" data-throw-if-not-resolved=\"false\"></xref> class.</p>\n<p>Then, if the <xref href=\"System.Diagnostics.TraceLevel\" data-throw-if-not-resolved=\"false\"></xref> is set to <strong>Verbose</strong>, the example outputs the second error message and the <code>category</code> on the same line as the first message. The second message is followed by a line terminator.</p>Classic Trace.WriteLineIf2 Example#1"
  syntax:
    content: >-
      [Conditional("TRACE")]

      public static void WriteLineIf(bool condition, string message, string category)
    content.vb: >-
      <Conditional("TRACE")>

      Public Shared Sub WriteLineIf(condition As Boolean, message As String, category As String)
    parameters:
    - id: condition
      type: System.Boolean
    - id: message
      type: System.String
    - id: category
      type: System.String
  seealso:
  - type: System.Diagnostics.Debug
    commentId: T:System.Diagnostics.Debug
  - type: System.Diagnostics.Trace
    commentId: T:System.Diagnostics.Trace
  - type: System.Diagnostics.BooleanSwitch
    commentId: T:System.Diagnostics.BooleanSwitch
  - type: System.Diagnostics.TraceSwitch
    commentId: T:System.Diagnostics.TraceSwitch
  - type: System.Diagnostics.TraceListener
    commentId: T:System.Diagnostics.TraceListener
  - type: System.Diagnostics.DefaultTraceListener
    commentId: T:System.Diagnostics.DefaultTraceListener
  - type: System.Diagnostics.ConditionalAttribute
    commentId: T:System.Diagnostics.ConditionalAttribute
  attributes:
  - type: System.Diagnostics.ConditionalAttribute
    ctor: System.Diagnostics.ConditionalAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: TRACE
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: System.Diagnostics
  isExternal: false
  name: System.Diagnostics
  fullName: System.Diagnostics
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  fullName: System.Boolean
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  fullName: System.Int32
- uid: System.Diagnostics.TraceListenerCollection
  parent: System.Diagnostics
  isExternal: false
  name: TraceListenerCollection
  fullName: System.Diagnostics.TraceListenerCollection
- uid: System.String
  parent: System
  isExternal: false
  name: String
  fullName: System.String
- uid: System.Object[]
  isExternal: true
  name: Object[]
  fullName: System.Object[]
  fullname.vb: System.Object()
  name.vb: Object()
  spec.csharp:
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    fullName: ()
