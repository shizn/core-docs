items:
- uid: System.Numerics.Vector4
  commentId: T:System.Numerics.Vector4
  id: Vector4
  parent: System.Numerics
  children:
  - System.Numerics.Vector4.#ctor(System.Numerics.Vector2,System.Single,System.Single)
  - System.Numerics.Vector4.#ctor(System.Numerics.Vector3,System.Single)
  - System.Numerics.Vector4.#ctor(System.Single)
  - System.Numerics.Vector4.#ctor(System.Single,System.Single,System.Single,System.Single)
  - System.Numerics.Vector4.Abs(System.Numerics.Vector4)
  - System.Numerics.Vector4.Add(System.Numerics.Vector4,System.Numerics.Vector4)
  - System.Numerics.Vector4.Clamp(System.Numerics.Vector4,System.Numerics.Vector4,System.Numerics.Vector4)
  - System.Numerics.Vector4.CopyTo(System.Single[])
  - System.Numerics.Vector4.CopyTo(System.Single[],System.Int32)
  - System.Numerics.Vector4.Distance(System.Numerics.Vector4,System.Numerics.Vector4)
  - System.Numerics.Vector4.DistanceSquared(System.Numerics.Vector4,System.Numerics.Vector4)
  - System.Numerics.Vector4.Divide(System.Numerics.Vector4,System.Numerics.Vector4)
  - System.Numerics.Vector4.Divide(System.Numerics.Vector4,System.Single)
  - System.Numerics.Vector4.Dot(System.Numerics.Vector4,System.Numerics.Vector4)
  - System.Numerics.Vector4.Equals(System.Numerics.Vector4)
  - System.Numerics.Vector4.Equals(System.Object)
  - System.Numerics.Vector4.GetHashCode
  - System.Numerics.Vector4.Length
  - System.Numerics.Vector4.LengthSquared
  - System.Numerics.Vector4.Lerp(System.Numerics.Vector4,System.Numerics.Vector4,System.Single)
  - System.Numerics.Vector4.Max(System.Numerics.Vector4,System.Numerics.Vector4)
  - System.Numerics.Vector4.Min(System.Numerics.Vector4,System.Numerics.Vector4)
  - System.Numerics.Vector4.Multiply(System.Numerics.Vector4,System.Numerics.Vector4)
  - System.Numerics.Vector4.Multiply(System.Numerics.Vector4,System.Single)
  - System.Numerics.Vector4.Multiply(System.Single,System.Numerics.Vector4)
  - System.Numerics.Vector4.Negate(System.Numerics.Vector4)
  - System.Numerics.Vector4.Normalize(System.Numerics.Vector4)
  - System.Numerics.Vector4.One
  - System.Numerics.Vector4.op_Addition(System.Numerics.Vector4,System.Numerics.Vector4)
  - System.Numerics.Vector4.op_Division(System.Numerics.Vector4,System.Numerics.Vector4)
  - System.Numerics.Vector4.op_Division(System.Numerics.Vector4,System.Single)
  - System.Numerics.Vector4.op_Equality(System.Numerics.Vector4,System.Numerics.Vector4)
  - System.Numerics.Vector4.op_Inequality(System.Numerics.Vector4,System.Numerics.Vector4)
  - System.Numerics.Vector4.op_Multiply(System.Numerics.Vector4,System.Numerics.Vector4)
  - System.Numerics.Vector4.op_Multiply(System.Numerics.Vector4,System.Single)
  - System.Numerics.Vector4.op_Multiply(System.Single,System.Numerics.Vector4)
  - System.Numerics.Vector4.op_Subtraction(System.Numerics.Vector4,System.Numerics.Vector4)
  - System.Numerics.Vector4.op_UnaryNegation(System.Numerics.Vector4)
  - System.Numerics.Vector4.SquareRoot(System.Numerics.Vector4)
  - System.Numerics.Vector4.Subtract(System.Numerics.Vector4,System.Numerics.Vector4)
  - System.Numerics.Vector4.ToString
  - System.Numerics.Vector4.ToString(System.String)
  - System.Numerics.Vector4.ToString(System.String,System.IFormatProvider)
  - System.Numerics.Vector4.Transform(System.Numerics.Vector2,System.Numerics.Matrix4x4)
  - System.Numerics.Vector4.Transform(System.Numerics.Vector2,System.Numerics.Quaternion)
  - System.Numerics.Vector4.Transform(System.Numerics.Vector3,System.Numerics.Matrix4x4)
  - System.Numerics.Vector4.Transform(System.Numerics.Vector3,System.Numerics.Quaternion)
  - System.Numerics.Vector4.Transform(System.Numerics.Vector4,System.Numerics.Matrix4x4)
  - System.Numerics.Vector4.Transform(System.Numerics.Vector4,System.Numerics.Quaternion)
  - System.Numerics.Vector4.UnitW
  - System.Numerics.Vector4.UnitX
  - System.Numerics.Vector4.UnitY
  - System.Numerics.Vector4.UnitZ
  - System.Numerics.Vector4.W
  - System.Numerics.Vector4.X
  - System.Numerics.Vector4.Y
  - System.Numerics.Vector4.Z
  - System.Numerics.Vector4.Zero
  langs:
  - csharp
  - vb
  name: Vector4
  fullName: System.Numerics.Vector4
  type: Struct
  source:
    remote:
      path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Vector4
    path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs
    startLine: 427
  assemblies:
  - System.Numerics.Vectors
  namespace: System.Numerics
  summary: "\n<p>Represents a vector with four single-precision floating-point values. </p>\n"
  remarks: "\n<p>The <xref href=\"System.Numerics.Vector4\" data-throw-if-not-resolved=\"false\"></xref> structure provides support for hardware acceleration. </p>\n"
  syntax:
    content: >-
      [StructLayout(LayoutKind.Sequential)]

      public struct Vector4 : IEquatable<Vector4>, IFormattable
    content.vb: >-
      <StructLayout(LayoutKind.Sequential)>

      Public Structure Vector4
          Implements IEquatable(Of Vector4), IFormattable
  implements:
  - System.IEquatable{System.Numerics.Vector4}
  - System.IFormattable
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetType
  attributes:
  - type: System.Runtime.InteropServices.StructLayoutAttribute
    ctor: System.Runtime.InteropServices.StructLayoutAttribute.#ctor(System.Runtime.InteropServices.LayoutKind)
    arguments:
    - type: System.Runtime.InteropServices.LayoutKind
      value: 0
  modifiers.csharp:
  - public
  - struct
  modifiers.vb:
  - Public
  - Structure
- uid: System.Numerics.Vector4.W
  commentId: F:System.Numerics.Vector4.W
  id: W
  parent: System.Numerics.Vector4
  langs:
  - csharp
  - vb
  name: W
  fullName: System.Numerics.Vector4.W
  type: Field
  source:
    remote:
      path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: W
    path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs
    startLine: 430
  assemblies:
  - System.Numerics.Vectors
  namespace: System.Numerics
  summary: "\n<p>The W component of the vector. </p>\n"
  syntax:
    content: public float W
    content.vb: Public W As Single
    return:
      type: System.Single
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Numerics.Vector4.X
  commentId: F:System.Numerics.Vector4.X
  id: X
  parent: System.Numerics.Vector4
  langs:
  - csharp
  - vb
  name: X
  fullName: System.Numerics.Vector4.X
  type: Field
  source:
    remote:
      path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: X
    path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs
    startLine: 431
  assemblies:
  - System.Numerics.Vectors
  namespace: System.Numerics
  summary: "\n<p>The X component of the vector. </p>\n"
  syntax:
    content: public float X
    content.vb: Public X As Single
    return:
      type: System.Single
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Numerics.Vector4.Y
  commentId: F:System.Numerics.Vector4.Y
  id: Y
  parent: System.Numerics.Vector4
  langs:
  - csharp
  - vb
  name: Y
  fullName: System.Numerics.Vector4.Y
  type: Field
  source:
    remote:
      path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Y
    path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs
    startLine: 432
  assemblies:
  - System.Numerics.Vectors
  namespace: System.Numerics
  summary: "\n<p>The Y component of the vector. </p>\n"
  syntax:
    content: public float Y
    content.vb: Public Y As Single
    return:
      type: System.Single
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Numerics.Vector4.Z
  commentId: F:System.Numerics.Vector4.Z
  id: Z
  parent: System.Numerics.Vector4
  langs:
  - csharp
  - vb
  name: Z
  fullName: System.Numerics.Vector4.Z
  type: Field
  source:
    remote:
      path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Z
    path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs
    startLine: 433
  assemblies:
  - System.Numerics.Vectors
  namespace: System.Numerics
  summary: "\n<p>The Z component of the vector. </p>\n"
  syntax:
    content: public float Z
    content.vb: Public Z As Single
    return:
      type: System.Single
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Numerics.Vector4.#ctor(System.Numerics.Vector2,System.Single,System.Single)
  commentId: M:System.Numerics.Vector4.#ctor(System.Numerics.Vector2,System.Single,System.Single)
  id: '#ctor(System.Numerics.Vector2,System.Single,System.Single)'
  parent: System.Numerics.Vector4
  langs:
  - csharp
  - vb
  name: Vector4(Vector2, Single, Single)
  fullName: System.Numerics.Vector4.Vector4(System.Numerics.Vector2, System.Single, System.Single)
  type: Constructor
  source:
    remote:
      path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs
    startLine: 434
  assemblies:
  - System.Numerics.Vectors
  namespace: System.Numerics
  summary: "\n<p>Creates a   new <xref href=\"System.Numerics.Vector4\" data-throw-if-not-resolved=\"false\"></xref> object from the specified <xref href=\"System.Numerics.Vector2\" data-throw-if-not-resolved=\"false\"></xref> object and a Z and a W component. </p>\n"
  syntax:
    content: public Vector4(Vector2 value, float z, float w)
    content.vb: Public Sub New(value As Vector2, z As Single, w As Single)
    parameters:
    - id: value
      type: System.Numerics.Vector2
      description: "\n<p>The vector to use for the X and Y components. </p>\n"
    - id: z
      type: System.Single
      description: "\n<p>The Z component. </p>\n"
    - id: w
      type: System.Single
      description: "\n<p>The W component. </p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Numerics.Vector4.#ctor(System.Numerics.Vector3,System.Single)
  commentId: M:System.Numerics.Vector4.#ctor(System.Numerics.Vector3,System.Single)
  id: '#ctor(System.Numerics.Vector3,System.Single)'
  parent: System.Numerics.Vector4
  langs:
  - csharp
  - vb
  name: Vector4(Vector3, Single)
  fullName: System.Numerics.Vector4.Vector4(System.Numerics.Vector3, System.Single)
  type: Constructor
  source:
    remote:
      path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs
    startLine: 435
  assemblies:
  - System.Numerics.Vectors
  namespace: System.Numerics
  summary: "\n<p>Constructs a new <xref href=\"System.Numerics.Vector4\" data-throw-if-not-resolved=\"false\"></xref> object from the specified <xref href=\"System.Numerics.Vector3\" data-throw-if-not-resolved=\"false\"></xref> object and a W component.  </p>\n"
  syntax:
    content: public Vector4(Vector3 value, float w)
    content.vb: Public Sub New(value As Vector3, w As Single)
    parameters:
    - id: value
      type: System.Numerics.Vector3
      description: "\n<p>The vector to use for the X, Y, and Z components. </p>\n"
    - id: w
      type: System.Single
      description: "\n<p>The W component. </p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Numerics.Vector4.#ctor(System.Single)
  commentId: M:System.Numerics.Vector4.#ctor(System.Single)
  id: '#ctor(System.Single)'
  parent: System.Numerics.Vector4
  langs:
  - csharp
  - vb
  name: Vector4(Single)
  fullName: System.Numerics.Vector4.Vector4(System.Single)
  type: Constructor
  source:
    remote:
      path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs
    startLine: 436
  assemblies:
  - System.Numerics.Vectors
  namespace: System.Numerics
  summary: "\n<p>Creates a new <xref href=\"System.Numerics.Vector4\" data-throw-if-not-resolved=\"false\"></xref> object whose four elements have the same value.</p>\n"
  syntax:
    content: public Vector4(float value)
    content.vb: Public Sub New(value As Single)
    parameters:
    - id: value
      type: System.Single
      description: "\n<p>The value to assign to all four elements. </p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Numerics.Vector4.#ctor(System.Single,System.Single,System.Single,System.Single)
  commentId: M:System.Numerics.Vector4.#ctor(System.Single,System.Single,System.Single,System.Single)
  id: '#ctor(System.Single,System.Single,System.Single,System.Single)'
  parent: System.Numerics.Vector4
  langs:
  - csharp
  - vb
  name: Vector4(Single, Single, Single, Single)
  fullName: System.Numerics.Vector4.Vector4(System.Single, System.Single, System.Single, System.Single)
  type: Constructor
  source:
    remote:
      path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs
    startLine: 437
  assemblies:
  - System.Numerics.Vectors
  namespace: System.Numerics
  summary: "\n<p>Creates a vector whose elements have the specified values. </p>\n"
  syntax:
    content: public Vector4(float x, float y, float z, float w)
    content.vb: Public Sub New(x As Single, y As Single, z As Single, w As Single)
    parameters:
    - id: x
      type: System.Single
      description: "\n<p>The value to assign to the <xref href=\"System.Numerics.Vector4.X\" data-throw-if-not-resolved=\"false\"></xref> field. </p>\n"
    - id: y
      type: System.Single
      description: "\n<p>The value to assign to the <xref href=\"System.Numerics.Vector4.Y\" data-throw-if-not-resolved=\"false\"></xref> field. </p>\n"
    - id: z
      type: System.Single
      description: "\n<p>The value to assign to the <xref href=\"System.Numerics.Vector4.Z\" data-throw-if-not-resolved=\"false\"></xref> field. </p>\n"
    - id: w
      type: System.Single
      description: "\n<p>The value to assign to the <xref href=\"System.Numerics.Vector4.W\" data-throw-if-not-resolved=\"false\"></xref> field. </p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Numerics.Vector4.One
  commentId: P:System.Numerics.Vector4.One
  id: One
  parent: System.Numerics.Vector4
  langs:
  - csharp
  - vb
  name: One
  fullName: System.Numerics.Vector4.One
  type: Property
  source:
    remote:
      path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: One
    path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs
    startLine: 438
  assemblies:
  - System.Numerics.Vectors
  namespace: System.Numerics
  summary: "\n<p>Gets a vector whose 4 elements are equal to one. </p>\n"
  remarks: "\n<p>A vector whose four elements are equal to one (that is, it returns the vector <code>(1,1,1,1)</code>.</p>\n"
  syntax:
    content: public static Vector4 One { get; }
    content.vb: Public Shared ReadOnly Property One As Vector4
    parameters: []
    return:
      type: System.Numerics.Vector4
      description: "\n<p>Returns <xref href=\"System.Numerics.Vector4\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: System.Numerics.Vector4.UnitW
  commentId: P:System.Numerics.Vector4.UnitW
  id: UnitW
  parent: System.Numerics.Vector4
  langs:
  - csharp
  - vb
  name: UnitW
  fullName: System.Numerics.Vector4.UnitW
  type: Property
  source:
    remote:
      path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: UnitW
    path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs
    startLine: 439
  assemblies:
  - System.Numerics.Vectors
  namespace: System.Numerics
  summary: "\n<p>Gets the vector (0,0,0,1).</p>\n"
  syntax:
    content: public static Vector4 UnitW { get; }
    content.vb: Public Shared ReadOnly Property UnitW As Vector4
    parameters: []
    return:
      type: System.Numerics.Vector4
      description: "\n<p>The vector <code>(0,0,0,1)</code>.</p>\n"
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: System.Numerics.Vector4.UnitX
  commentId: P:System.Numerics.Vector4.UnitX
  id: UnitX
  parent: System.Numerics.Vector4
  langs:
  - csharp
  - vb
  name: UnitX
  fullName: System.Numerics.Vector4.UnitX
  type: Property
  source:
    remote:
      path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: UnitX
    path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs
    startLine: 440
  assemblies:
  - System.Numerics.Vectors
  namespace: System.Numerics
  summary: "\n<p>Gets the vector (1,0,0,0).</p>\n"
  syntax:
    content: public static Vector4 UnitX { get; }
    content.vb: Public Shared ReadOnly Property UnitX As Vector4
    parameters: []
    return:
      type: System.Numerics.Vector4
      description: "\n<p>The vector <code>(1,0,0,0)</code>.</p>\n"
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: System.Numerics.Vector4.UnitY
  commentId: P:System.Numerics.Vector4.UnitY
  id: UnitY
  parent: System.Numerics.Vector4
  langs:
  - csharp
  - vb
  name: UnitY
  fullName: System.Numerics.Vector4.UnitY
  type: Property
  source:
    remote:
      path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: UnitY
    path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs
    startLine: 441
  assemblies:
  - System.Numerics.Vectors
  namespace: System.Numerics
  summary: "\n<p>Gets the vector (0,1,0,0).</p>\n"
  syntax:
    content: public static Vector4 UnitY { get; }
    content.vb: Public Shared ReadOnly Property UnitY As Vector4
    parameters: []
    return:
      type: System.Numerics.Vector4
      description: "\n<p>The vector <code>(0,1,0,0)</code>..</p>\n"
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: System.Numerics.Vector4.UnitZ
  commentId: P:System.Numerics.Vector4.UnitZ
  id: UnitZ
  parent: System.Numerics.Vector4
  langs:
  - csharp
  - vb
  name: UnitZ
  fullName: System.Numerics.Vector4.UnitZ
  type: Property
  source:
    remote:
      path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: UnitZ
    path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs
    startLine: 442
  assemblies:
  - System.Numerics.Vectors
  namespace: System.Numerics
  summary: "\n<p>Gets the vector <code>(0,0,1,0)</code>. </p>\n"
  syntax:
    content: public static Vector4 UnitZ { get; }
    content.vb: Public Shared ReadOnly Property UnitZ As Vector4
    parameters: []
    return:
      type: System.Numerics.Vector4
      description: "\n<p>The vector <code>(0,0,1,0)</code>.</p>\n"
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: System.Numerics.Vector4.Zero
  commentId: P:System.Numerics.Vector4.Zero
  id: Zero
  parent: System.Numerics.Vector4
  langs:
  - csharp
  - vb
  name: Zero
  fullName: System.Numerics.Vector4.Zero
  type: Property
  source:
    remote:
      path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Zero
    path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs
    startLine: 443
  assemblies:
  - System.Numerics.Vectors
  namespace: System.Numerics
  summary: "\n<p>Gets a vector whose 4 elements are equal to zero. </p>\n"
  syntax:
    content: public static Vector4 Zero { get; }
    content.vb: Public Shared ReadOnly Property Zero As Vector4
    parameters: []
    return:
      type: System.Numerics.Vector4
      description: "\n<p>A vector whose four elements are equal to zero (that is, it returns the vector <code>(0,0,0,0)</code>. </p>\n"
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: System.Numerics.Vector4.Abs(System.Numerics.Vector4)
  commentId: M:System.Numerics.Vector4.Abs(System.Numerics.Vector4)
  id: Abs(System.Numerics.Vector4)
  parent: System.Numerics.Vector4
  langs:
  - csharp
  - vb
  name: Abs(Vector4)
  fullName: System.Numerics.Vector4.Abs(System.Numerics.Vector4)
  type: Method
  source:
    remote:
      path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Abs
    path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs
    startLine: 444
  assemblies:
  - System.Numerics.Vectors
  namespace: System.Numerics
  summary: "\n<p>Returns a vector whose elements are the absolute values of each of the specified vector's elements. </p>\n"
  syntax:
    content: public static Vector4 Abs(Vector4 value)
    content.vb: Public Shared Function Abs(value As Vector4) As Vector4
    parameters:
    - id: value
      type: System.Numerics.Vector4
      description: "\n<p>A vector. </p>\n"
    return:
      type: System.Numerics.Vector4
      description: "\n<p>The absolute value vector. </p>\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Numerics.Vector4.Add(System.Numerics.Vector4,System.Numerics.Vector4)
  commentId: M:System.Numerics.Vector4.Add(System.Numerics.Vector4,System.Numerics.Vector4)
  id: Add(System.Numerics.Vector4,System.Numerics.Vector4)
  parent: System.Numerics.Vector4
  langs:
  - csharp
  - vb
  name: Add(Vector4, Vector4)
  fullName: System.Numerics.Vector4.Add(System.Numerics.Vector4, System.Numerics.Vector4)
  type: Method
  source:
    remote:
      path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Add
    path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs
    startLine: 445
  assemblies:
  - System.Numerics.Vectors
  namespace: System.Numerics
  summary: "\n<p>Adds two vectors together. </p>\n"
  syntax:
    content: public static Vector4 Add(Vector4 left, Vector4 right)
    content.vb: Public Shared Function Add(left As Vector4, right As Vector4) As Vector4
    parameters:
    - id: left
      type: System.Numerics.Vector4
      description: "\n<p>The first vector to add. </p>\n"
    - id: right
      type: System.Numerics.Vector4
      description: "\n<p>The second vector to add. </p>\n"
    return:
      type: System.Numerics.Vector4
      description: "\n<p>The summed vector. </p>\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Numerics.Vector4.Clamp(System.Numerics.Vector4,System.Numerics.Vector4,System.Numerics.Vector4)
  commentId: M:System.Numerics.Vector4.Clamp(System.Numerics.Vector4,System.Numerics.Vector4,System.Numerics.Vector4)
  id: Clamp(System.Numerics.Vector4,System.Numerics.Vector4,System.Numerics.Vector4)
  parent: System.Numerics.Vector4
  langs:
  - csharp
  - vb
  name: Clamp(Vector4, Vector4, Vector4)
  fullName: System.Numerics.Vector4.Clamp(System.Numerics.Vector4, System.Numerics.Vector4, System.Numerics.Vector4)
  type: Method
  source:
    remote:
      path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Clamp
    path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs
    startLine: 446
  assemblies:
  - System.Numerics.Vectors
  namespace: System.Numerics
  summary: "\n<p>Restricts a vector between a minimum and a maximum value. </p>\n"
  syntax:
    content: public static Vector4 Clamp(Vector4 value1, Vector4 min, Vector4 max)
    content.vb: Public Shared Function Clamp(value1 As Vector4, min As Vector4, max As Vector4) As Vector4
    parameters:
    - id: value1
      type: System.Numerics.Vector4
      description: "\n<p>The vector to restrict. </p>\n"
    - id: min
      type: System.Numerics.Vector4
      description: "\n<p>The minimum value. </p>\n"
    - id: max
      type: System.Numerics.Vector4
      description: "\n<p>The maximum value. </p>\n"
    return:
      type: System.Numerics.Vector4
      description: "\n<p>The restricted vector. </p>\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Numerics.Vector4.CopyTo(System.Single[])
  commentId: M:System.Numerics.Vector4.CopyTo(System.Single[])
  id: CopyTo(System.Single[])
  parent: System.Numerics.Vector4
  langs:
  - csharp
  - vb
  name: CopyTo(Single[])
  fullName: System.Numerics.Vector4.CopyTo(System.Single[])
  type: Method
  source:
    remote:
      path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CopyTo
    path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs
    startLine: 447
  assemblies:
  - System.Numerics.Vectors
  namespace: System.Numerics
  summary: "\n<p>Copies the elements of the vector to a specified array. </p>\n"
  remarks: "\n<p>\n<em>array</em> must have at least four elements. The method copies the vector's elements starting at index 0. </p>\n"
  syntax:
    content: public void CopyTo(float[] array)
    content.vb: Public Sub CopyTo(array As Single())
    parameters:
    - id: array
      type: System.Single[]
      description: "\n<p>The destination array. </p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>array</em> is <strong>null</strong>. </p>\n"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<p>The number of elements in the current instance is greater than in the array. </p>\n"
  - type: System.RankException
    commentId: T:System.RankException
    description: "\n<p>\n<em>array</em> is multidimensional.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Numerics.Vector4.CopyTo(System.Single())
  name.vb: CopyTo(Single())
- uid: System.Numerics.Vector4.CopyTo(System.Single[],System.Int32)
  commentId: M:System.Numerics.Vector4.CopyTo(System.Single[],System.Int32)
  id: CopyTo(System.Single[],System.Int32)
  parent: System.Numerics.Vector4
  langs:
  - csharp
  - vb
  name: CopyTo(Single[], Int32)
  fullName: System.Numerics.Vector4.CopyTo(System.Single[], System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CopyTo
    path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs
    startLine: 448
  assemblies:
  - System.Numerics.Vectors
  namespace: System.Numerics
  summary: "\n<p>Copies the elements of the vector to a specified array starting at a specified index position. </p>\n"
  remarks: "\n<p>\n<em>array</em> must have a sufficient number of elements to accommodate the four vector elements. In other words, elements <em>index</em> through <em>index</em> + 3 must already exist in <em>array</em>. </p>\n"
  syntax:
    content: public void CopyTo(float[] array, int index)
    content.vb: Public Sub CopyTo(array As Single(), index As Integer)
    parameters:
    - id: array
      type: System.Single[]
      description: "\n<p>The destination array.</p>\n"
    - id: index
      type: System.Int32
      description: "\n<p>The index at which to copy the first element of the vector. </p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>array</em> is <strong>null</strong>. </p>\n"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<p>The number of elements in the current instance is greater than in the array. </p>\n"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>\n<em>index</em> is less than zero.</p>\n<p>-or-</p>\n<p>\n<em>index</em> is greater than or equal to the array length. </p>\n"
  - type: System.RankException
    commentId: T:System.RankException
    description: "\n<p>\n<em>array</em> is multidimensional.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Numerics.Vector4.CopyTo(System.Single(), System.Int32)
  name.vb: CopyTo(Single(), Int32)
- uid: System.Numerics.Vector4.Distance(System.Numerics.Vector4,System.Numerics.Vector4)
  commentId: M:System.Numerics.Vector4.Distance(System.Numerics.Vector4,System.Numerics.Vector4)
  id: Distance(System.Numerics.Vector4,System.Numerics.Vector4)
  parent: System.Numerics.Vector4
  langs:
  - csharp
  - vb
  name: Distance(Vector4, Vector4)
  fullName: System.Numerics.Vector4.Distance(System.Numerics.Vector4, System.Numerics.Vector4)
  type: Method
  source:
    remote:
      path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Distance
    path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs
    startLine: 449
  assemblies:
  - System.Numerics.Vectors
  namespace: System.Numerics
  summary: "\n<p>Computes the Euclidean distance between the two given points. </p>\n"
  syntax:
    content: public static float Distance(Vector4 value1, Vector4 value2)
    content.vb: Public Shared Function Distance(value1 As Vector4, value2 As Vector4) As Single
    parameters:
    - id: value1
      type: System.Numerics.Vector4
      description: "\n<p>The first point. </p>\n"
    - id: value2
      type: System.Numerics.Vector4
      description: "\n<p>The second point. </p>\n"
    return:
      type: System.Single
      description: "\n<p>The distance. </p>\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Numerics.Vector4.DistanceSquared(System.Numerics.Vector4,System.Numerics.Vector4)
  commentId: M:System.Numerics.Vector4.DistanceSquared(System.Numerics.Vector4,System.Numerics.Vector4)
  id: DistanceSquared(System.Numerics.Vector4,System.Numerics.Vector4)
  parent: System.Numerics.Vector4
  langs:
  - csharp
  - vb
  name: DistanceSquared(Vector4, Vector4)
  fullName: System.Numerics.Vector4.DistanceSquared(System.Numerics.Vector4, System.Numerics.Vector4)
  type: Method
  source:
    remote:
      path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: DistanceSquared
    path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs
    startLine: 450
  assemblies:
  - System.Numerics.Vectors
  namespace: System.Numerics
  summary: "\n<p>Returns the Euclidean distance squared between two specified points. </p>\n"
  syntax:
    content: public static float DistanceSquared(Vector4 value1, Vector4 value2)
    content.vb: Public Shared Function DistanceSquared(value1 As Vector4, value2 As Vector4) As Single
    parameters:
    - id: value1
      type: System.Numerics.Vector4
      description: "\n<p>The first point. </p>\n"
    - id: value2
      type: System.Numerics.Vector4
      description: "\n<p>The second point. </p>\n"
    return:
      type: System.Single
      description: "\n<p>The distance squared. </p>\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Numerics.Vector4.Divide(System.Numerics.Vector4,System.Numerics.Vector4)
  commentId: M:System.Numerics.Vector4.Divide(System.Numerics.Vector4,System.Numerics.Vector4)
  id: Divide(System.Numerics.Vector4,System.Numerics.Vector4)
  parent: System.Numerics.Vector4
  langs:
  - csharp
  - vb
  name: Divide(Vector4, Vector4)
  fullName: System.Numerics.Vector4.Divide(System.Numerics.Vector4, System.Numerics.Vector4)
  type: Method
  source:
    remote:
      path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Divide
    path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs
    startLine: 451
  assemblies:
  - System.Numerics.Vectors
  namespace: System.Numerics
  summary: "\n<p>Divides the first vector by the second. </p>\n"
  syntax:
    content: public static Vector4 Divide(Vector4 left, Vector4 right)
    content.vb: Public Shared Function Divide(left As Vector4, right As Vector4) As Vector4
    parameters:
    - id: left
      type: System.Numerics.Vector4
      description: "\n<p>The first vector. </p>\n"
    - id: right
      type: System.Numerics.Vector4
      description: "\n<p>The second vector. </p>\n"
    return:
      type: System.Numerics.Vector4
      description: "\n<p>The vector resulting from the division. </p>\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Numerics.Vector4.Divide(System.Numerics.Vector4,System.Single)
  commentId: M:System.Numerics.Vector4.Divide(System.Numerics.Vector4,System.Single)
  id: Divide(System.Numerics.Vector4,System.Single)
  parent: System.Numerics.Vector4
  langs:
  - csharp
  - vb
  name: Divide(Vector4, Single)
  fullName: System.Numerics.Vector4.Divide(System.Numerics.Vector4, System.Single)
  type: Method
  source:
    remote:
      path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Divide
    path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs
    startLine: 452
  assemblies:
  - System.Numerics.Vectors
  namespace: System.Numerics
  summary: "\n<p>Divides the specified vector by a specified scalar value. </p>\n"
  syntax:
    content: public static Vector4 Divide(Vector4 left, float divisor)
    content.vb: Public Shared Function Divide(left As Vector4, divisor As Single) As Vector4
    parameters:
    - id: left
      type: System.Numerics.Vector4
      description: "\n<p>The vector. </p>\n"
    - id: divisor
      type: System.Single
      description: "\n<p>The scalar value. </p>\n"
    return:
      type: System.Numerics.Vector4
      description: "\n<p>The vector that results from the division. </p>\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Numerics.Vector4.Dot(System.Numerics.Vector4,System.Numerics.Vector4)
  commentId: M:System.Numerics.Vector4.Dot(System.Numerics.Vector4,System.Numerics.Vector4)
  id: Dot(System.Numerics.Vector4,System.Numerics.Vector4)
  parent: System.Numerics.Vector4
  langs:
  - csharp
  - vb
  name: Dot(Vector4, Vector4)
  fullName: System.Numerics.Vector4.Dot(System.Numerics.Vector4, System.Numerics.Vector4)
  type: Method
  source:
    remote:
      path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Dot
    path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs
    startLine: 453
  assemblies:
  - System.Numerics.Vectors
  namespace: System.Numerics
  summary: "\n<p>Returns the dot product of two vectors. </p>\n"
  syntax:
    content: public static float Dot(Vector4 vector1, Vector4 vector2)
    content.vb: Public Shared Function Dot(vector1 As Vector4, vector2 As Vector4) As Single
    parameters:
    - id: vector1
      type: System.Numerics.Vector4
      description: "\n<p>The first vector. </p>\n"
    - id: vector2
      type: System.Numerics.Vector4
      description: "\n<p>The second vector. </p>\n"
    return:
      type: System.Single
      description: "\n<p>The dot product. </p>\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Numerics.Vector4.Equals(System.Numerics.Vector4)
  commentId: M:System.Numerics.Vector4.Equals(System.Numerics.Vector4)
  id: Equals(System.Numerics.Vector4)
  parent: System.Numerics.Vector4
  langs:
  - csharp
  - vb
  name: Equals(Vector4)
  fullName: System.Numerics.Vector4.Equals(System.Numerics.Vector4)
  type: Method
  source:
    remote:
      path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Equals
    path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs
    startLine: 454
  assemblies:
  - System.Numerics.Vectors
  namespace: System.Numerics
  summary: "\n<p>Returns a value that indicates whether this instance and another vector are equal. </p>\n"
  remarks: "\n<p>Two vectors are equal if their <xref href=\"System.Numerics.Vector4.X\" data-throw-if-not-resolved=\"false\"></xref>, <xref href=\"System.Numerics.Vector4.Y\" data-throw-if-not-resolved=\"false\"></xref>, <xref href=\"System.Numerics.Vector4.Z\" data-throw-if-not-resolved=\"false\"></xref>, and <xref href=\"System.Numerics.Vector4.W\" data-throw-if-not-resolved=\"false\"></xref> elements are equal. </p>\n"
  syntax:
    content: public bool Equals(Vector4 other)
    content.vb: Public Function Equals(other As Vector4) As Boolean
    parameters:
    - id: other
      type: System.Numerics.Vector4
      description: "\n<p>The other vector. </p>\n"
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if the two vectors are equal; otherwise, <strong>false</strong>. </p>\n"
  implements:
  - System.IEquatable{System.Numerics.Vector4}.Equals(System.Numerics.Vector4)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Numerics.Vector4.Equals(System.Object)
  commentId: M:System.Numerics.Vector4.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Numerics.Vector4
  langs:
  - csharp
  - vb
  name: Equals(Object)
  fullName: System.Numerics.Vector4.Equals(System.Object)
  type: Method
  source:
    remote:
      path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Equals
    path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs
    startLine: 455
  assemblies:
  - System.Numerics.Vectors
  namespace: System.Numerics
  summary: "\n<p>Returns a value that indicates whether this instance and a specified object are equal.</p>\n"
  remarks: "\n<p>The current instance and <em>obj</em> are equal if <em>obj</em> is a <xref href=\"System.Numerics.Vector4\" data-throw-if-not-resolved=\"false\"></xref> object and their corresponding elements are equal. </p>\n"
  syntax:
    content: public override bool Equals(object obj)
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
    parameters:
    - id: obj
      type: System.Object
      description: "\n<p>The object to compare with the current instance. </p>\n"
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if the current instance and <em>obj</em> are equal; otherwise, <strong>false</strong><strong></strong>. If <em>obj</em> is <strong>null</strong>, the method returns <strong>false</strong>. </p>\n"
  overridden: System.ValueType.Equals(System.Object)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Numerics.Vector4.GetHashCode
  commentId: M:System.Numerics.Vector4.GetHashCode
  id: GetHashCode
  parent: System.Numerics.Vector4
  langs:
  - csharp
  - vb
  name: GetHashCode()
  fullName: System.Numerics.Vector4.GetHashCode()
  type: Method
  source:
    remote:
      path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetHashCode
    path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs
    startLine: 456
  assemblies:
  - System.Numerics.Vectors
  namespace: System.Numerics
  summary: "\n<p>Returns the hash code for this instance. </p>\n"
  syntax:
    content: public override int GetHashCode()
    content.vb: Public Overrides Function GetHashCode As Integer
    return:
      type: System.Int32
      description: "\n<p>The hash code. </p>\n"
  overridden: System.ValueType.GetHashCode
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Numerics.Vector4.Length
  commentId: M:System.Numerics.Vector4.Length
  id: Length
  parent: System.Numerics.Vector4
  langs:
  - csharp
  - vb
  name: Length()
  fullName: System.Numerics.Vector4.Length()
  type: Method
  source:
    remote:
      path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Length
    path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs
    startLine: 457
  assemblies:
  - System.Numerics.Vectors
  namespace: System.Numerics
  summary: "\n<p>Returns the length of this vector object. </p>\n"
  syntax:
    content: public float Length()
    content.vb: Public Function Length As Single
    return:
      type: System.Single
      description: "\n<p>The vector's length. </p>\n"
  seealso:
  - type: System.Numerics.Vector4.LengthSquared
    commentId: M:System.Numerics.Vector4.LengthSquared
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Numerics.Vector4.LengthSquared
  commentId: M:System.Numerics.Vector4.LengthSquared
  id: LengthSquared
  parent: System.Numerics.Vector4
  langs:
  - csharp
  - vb
  name: LengthSquared()
  fullName: System.Numerics.Vector4.LengthSquared()
  type: Method
  source:
    remote:
      path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: LengthSquared
    path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs
    startLine: 458
  assemblies:
  - System.Numerics.Vectors
  namespace: System.Numerics
  summary: "\n<p>Returns the length of the vector squared. </p>\n"
  remarks: "\n<p>This operation offers better performance than a call to the <xref href=\"System.Numerics.Vector4.Length\" data-throw-if-not-resolved=\"false\"></xref> method. </p>\n"
  syntax:
    content: public float LengthSquared()
    content.vb: Public Function LengthSquared As Single
    return:
      type: System.Single
      description: "\n<p>The vector's length squared. </p>\n"
  seealso:
  - type: System.Numerics.Vector4.Length
    commentId: M:System.Numerics.Vector4.Length
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Numerics.Vector4.Lerp(System.Numerics.Vector4,System.Numerics.Vector4,System.Single)
  commentId: M:System.Numerics.Vector4.Lerp(System.Numerics.Vector4,System.Numerics.Vector4,System.Single)
  id: Lerp(System.Numerics.Vector4,System.Numerics.Vector4,System.Single)
  parent: System.Numerics.Vector4
  langs:
  - csharp
  - vb
  name: Lerp(Vector4, Vector4, Single)
  fullName: System.Numerics.Vector4.Lerp(System.Numerics.Vector4, System.Numerics.Vector4, System.Single)
  type: Method
  source:
    remote:
      path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Lerp
    path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs
    startLine: 459
  assemblies:
  - System.Numerics.Vectors
  namespace: System.Numerics
  summary: "\n<p>Performs a linear interpolation between two vectors based on the given weighting. </p>\n"
  syntax:
    content: public static Vector4 Lerp(Vector4 value1, Vector4 value2, float amount)
    content.vb: Public Shared Function Lerp(value1 As Vector4, value2 As Vector4, amount As Single) As Vector4
    parameters:
    - id: value1
      type: System.Numerics.Vector4
      description: "\n<p>The first vector. </p>\n"
    - id: value2
      type: System.Numerics.Vector4
      description: "\n<p>The second vector. </p>\n"
    - id: amount
      type: System.Single
      description: "\n<p>A value between 0 and 1 that indicates the weight of <em>value2</em>. </p>\n"
    return:
      type: System.Numerics.Vector4
      description: "\n<p>The interpolated vector. </p>\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Numerics.Vector4.Max(System.Numerics.Vector4,System.Numerics.Vector4)
  commentId: M:System.Numerics.Vector4.Max(System.Numerics.Vector4,System.Numerics.Vector4)
  id: Max(System.Numerics.Vector4,System.Numerics.Vector4)
  parent: System.Numerics.Vector4
  langs:
  - csharp
  - vb
  name: Max(Vector4, Vector4)
  fullName: System.Numerics.Vector4.Max(System.Numerics.Vector4, System.Numerics.Vector4)
  type: Method
  source:
    remote:
      path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Max
    path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs
    startLine: 460
  assemblies:
  - System.Numerics.Vectors
  namespace: System.Numerics
  summary: "\n<p>Returns a vector whose elements are the maximum of each of the pairs of elements in two specified vectors.</p>\n"
  syntax:
    content: public static Vector4 Max(Vector4 value1, Vector4 value2)
    content.vb: Public Shared Function Max(value1 As Vector4, value2 As Vector4) As Vector4
    parameters:
    - id: value1
      type: System.Numerics.Vector4
      description: "\n<p>The first vector. </p>\n"
    - id: value2
      type: System.Numerics.Vector4
      description: "\n<p>The second vector. </p>\n"
    return:
      type: System.Numerics.Vector4
      description: "\n<p>The maximized vector. </p>\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Numerics.Vector4.Min(System.Numerics.Vector4,System.Numerics.Vector4)
  commentId: M:System.Numerics.Vector4.Min(System.Numerics.Vector4,System.Numerics.Vector4)
  id: Min(System.Numerics.Vector4,System.Numerics.Vector4)
  parent: System.Numerics.Vector4
  langs:
  - csharp
  - vb
  name: Min(Vector4, Vector4)
  fullName: System.Numerics.Vector4.Min(System.Numerics.Vector4, System.Numerics.Vector4)
  type: Method
  source:
    remote:
      path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Min
    path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs
    startLine: 461
  assemblies:
  - System.Numerics.Vectors
  namespace: System.Numerics
  summary: "\n<p>Returns a vector whose elements are the minimum of each of the pairs of elements in two specified vectors.</p>\n"
  syntax:
    content: public static Vector4 Min(Vector4 value1, Vector4 value2)
    content.vb: Public Shared Function Min(value1 As Vector4, value2 As Vector4) As Vector4
    parameters:
    - id: value1
      type: System.Numerics.Vector4
      description: "\n<p>The first vector. </p>\n"
    - id: value2
      type: System.Numerics.Vector4
      description: "\n<p>The second vector. </p>\n"
    return:
      type: System.Numerics.Vector4
      description: "\n<p>The minimized vector. </p>\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Numerics.Vector4.Multiply(System.Numerics.Vector4,System.Numerics.Vector4)
  commentId: M:System.Numerics.Vector4.Multiply(System.Numerics.Vector4,System.Numerics.Vector4)
  id: Multiply(System.Numerics.Vector4,System.Numerics.Vector4)
  parent: System.Numerics.Vector4
  langs:
  - csharp
  - vb
  name: Multiply(Vector4, Vector4)
  fullName: System.Numerics.Vector4.Multiply(System.Numerics.Vector4, System.Numerics.Vector4)
  type: Method
  source:
    remote:
      path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Multiply
    path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs
    startLine: 462
  assemblies:
  - System.Numerics.Vectors
  namespace: System.Numerics
  summary: "\n<p>Multiplies two vectors together. </p>\n"
  syntax:
    content: public static Vector4 Multiply(Vector4 left, Vector4 right)
    content.vb: Public Shared Function Multiply(left As Vector4, right As Vector4) As Vector4
    parameters:
    - id: left
      type: System.Numerics.Vector4
      description: "\n<p>The first vector. </p>\n"
    - id: right
      type: System.Numerics.Vector4
      description: "\n<p>The second vector. </p>\n"
    return:
      type: System.Numerics.Vector4
      description: "\n<p>The product vector. </p>\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Numerics.Vector4.Multiply(System.Numerics.Vector4,System.Single)
  commentId: M:System.Numerics.Vector4.Multiply(System.Numerics.Vector4,System.Single)
  id: Multiply(System.Numerics.Vector4,System.Single)
  parent: System.Numerics.Vector4
  langs:
  - csharp
  - vb
  name: Multiply(Vector4, Single)
  fullName: System.Numerics.Vector4.Multiply(System.Numerics.Vector4, System.Single)
  type: Method
  source:
    remote:
      path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Multiply
    path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs
    startLine: 463
  assemblies:
  - System.Numerics.Vectors
  namespace: System.Numerics
  summary: "\n<p>Multiplies a vector by a specified scalar. </p>\n"
  syntax:
    content: public static Vector4 Multiply(Vector4 left, float right)
    content.vb: Public Shared Function Multiply(left As Vector4, right As Single) As Vector4
    parameters:
    - id: left
      type: System.Numerics.Vector4
      description: "\n<p>The vector to multiply. </p>\n"
    - id: right
      type: System.Single
      description: "\n<p>The scalar value. </p>\n"
    return:
      type: System.Numerics.Vector4
      description: "\n<p>The scaled vector. </p>\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Numerics.Vector4.Multiply(System.Single,System.Numerics.Vector4)
  commentId: M:System.Numerics.Vector4.Multiply(System.Single,System.Numerics.Vector4)
  id: Multiply(System.Single,System.Numerics.Vector4)
  parent: System.Numerics.Vector4
  langs:
  - csharp
  - vb
  name: Multiply(Single, Vector4)
  fullName: System.Numerics.Vector4.Multiply(System.Single, System.Numerics.Vector4)
  type: Method
  source:
    remote:
      path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Multiply
    path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs
    startLine: 464
  assemblies:
  - System.Numerics.Vectors
  namespace: System.Numerics
  summary: "\n<p>Multiplies a scalar value by a specified vector.</p>\n"
  syntax:
    content: public static Vector4 Multiply(float left, Vector4 right)
    content.vb: Public Shared Function Multiply(left As Single, right As Vector4) As Vector4
    parameters:
    - id: left
      type: System.Single
      description: "\n<p>The scaled value. </p>\n"
    - id: right
      type: System.Numerics.Vector4
      description: "\n<p>The vector. </p>\n"
    return:
      type: System.Numerics.Vector4
      description: "\n<p>The scaled vector. </p>\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Numerics.Vector4.Negate(System.Numerics.Vector4)
  commentId: M:System.Numerics.Vector4.Negate(System.Numerics.Vector4)
  id: Negate(System.Numerics.Vector4)
  parent: System.Numerics.Vector4
  langs:
  - csharp
  - vb
  name: Negate(Vector4)
  fullName: System.Numerics.Vector4.Negate(System.Numerics.Vector4)
  type: Method
  source:
    remote:
      path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Negate
    path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs
    startLine: 465
  assemblies:
  - System.Numerics.Vectors
  namespace: System.Numerics
  summary: "\n<p>Negates a specified vector. </p>\n"
  syntax:
    content: public static Vector4 Negate(Vector4 value)
    content.vb: Public Shared Function Negate(value As Vector4) As Vector4
    parameters:
    - id: value
      type: System.Numerics.Vector4
      description: "\n<p>The vector to negate. </p>\n"
    return:
      type: System.Numerics.Vector4
      description: "\n<p>The negated vector. </p>\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Numerics.Vector4.Normalize(System.Numerics.Vector4)
  commentId: M:System.Numerics.Vector4.Normalize(System.Numerics.Vector4)
  id: Normalize(System.Numerics.Vector4)
  parent: System.Numerics.Vector4
  langs:
  - csharp
  - vb
  name: Normalize(Vector4)
  fullName: System.Numerics.Vector4.Normalize(System.Numerics.Vector4)
  type: Method
  source:
    remote:
      path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Normalize
    path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs
    startLine: 466
  assemblies:
  - System.Numerics.Vectors
  namespace: System.Numerics
  summary: "\n<p>Returns a vector with the same direction as the specified vector, but with a length of one. </p>\n"
  syntax:
    content: public static Vector4 Normalize(Vector4 vector)
    content.vb: Public Shared Function Normalize(vector As Vector4) As Vector4
    parameters:
    - id: vector
      type: System.Numerics.Vector4
      description: "\n<p>The vector to normalize. </p>\n"
    return:
      type: System.Numerics.Vector4
      description: "\n<p>The normalized vector. </p>\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Numerics.Vector4.op_Addition(System.Numerics.Vector4,System.Numerics.Vector4)
  commentId: M:System.Numerics.Vector4.op_Addition(System.Numerics.Vector4,System.Numerics.Vector4)
  id: op_Addition(System.Numerics.Vector4,System.Numerics.Vector4)
  parent: System.Numerics.Vector4
  langs:
  - csharp
  - vb
  name: Addition(Vector4, Vector4)
  fullName: System.Numerics.Vector4.Addition(System.Numerics.Vector4, System.Numerics.Vector4)
  type: Operator
  source:
    remote:
      path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_Addition
    path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs
    startLine: 467
  assemblies:
  - System.Numerics.Vectors
  namespace: System.Numerics
  summary: "\n<p>Adds two vectors together. </p>\n"
  remarks: "\n<p>The <xref href=\"System.Numerics.Vector4.op_Addition(System.Numerics.Vector4,System.Numerics.Vector4)\" data-throw-if-not-resolved=\"false\"></xref> method defines the addition operation for <xref href=\"System.Numerics.Vector4\" data-throw-if-not-resolved=\"false\"></xref> objects. </p>\n"
  syntax:
    content: public static Vector4 operator +(Vector4 left, Vector4 right)
    content.vb: Public Shared Operator +(left As Vector4, right As Vector4) As Vector4
    parameters:
    - id: left
      type: System.Numerics.Vector4
      description: "\n<p>The first vector to add. </p>\n"
    - id: right
      type: System.Numerics.Vector4
      description: "\n<p>The second vector to add. </p>\n"
    return:
      type: System.Numerics.Vector4
      description: "\n<p>The summed vector. </p>\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Numerics.Vector4.op_Division(System.Numerics.Vector4,System.Numerics.Vector4)
  commentId: M:System.Numerics.Vector4.op_Division(System.Numerics.Vector4,System.Numerics.Vector4)
  id: op_Division(System.Numerics.Vector4,System.Numerics.Vector4)
  parent: System.Numerics.Vector4
  langs:
  - csharp
  - vb
  name: Division(Vector4, Vector4)
  fullName: System.Numerics.Vector4.Division(System.Numerics.Vector4, System.Numerics.Vector4)
  type: Operator
  source:
    remote:
      path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_Division
    path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs
    startLine: 468
  assemblies:
  - System.Numerics.Vectors
  namespace: System.Numerics
  summary: "\n<p>Divides the first vector by the second. </p>\n"
  remarks: "\n<p>The <xref href=\"System.Numerics.Vector4.op_Division(System.Numerics.Vector4,System.Numerics.Vector4)\" data-throw-if-not-resolved=\"false\"></xref> method defines the division operation for <xref href=\"System.Numerics.Vector4\" data-throw-if-not-resolved=\"false\"></xref> objects. </p>\n"
  syntax:
    content: public static Vector4 operator /(Vector4 left, Vector4 right)
    content.vb: Public Shared Operator /(left As Vector4, right As Vector4) As Vector4
    parameters:
    - id: left
      type: System.Numerics.Vector4
      description: "\n<p>The first vector. </p>\n"
    - id: right
      type: System.Numerics.Vector4
      description: "\n<p>The second vector. </p>\n"
    return:
      type: System.Numerics.Vector4
      description: "\n<p>The vector that results from dividing <em>left</em> by <em>right</em>. </p>\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Numerics.Vector4.op_Division(System.Numerics.Vector4,System.Single)
  commentId: M:System.Numerics.Vector4.op_Division(System.Numerics.Vector4,System.Single)
  id: op_Division(System.Numerics.Vector4,System.Single)
  parent: System.Numerics.Vector4
  langs:
  - csharp
  - vb
  name: Division(Vector4, Single)
  fullName: System.Numerics.Vector4.Division(System.Numerics.Vector4, System.Single)
  type: Operator
  source:
    remote:
      path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_Division
    path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs
    startLine: 469
  assemblies:
  - System.Numerics.Vectors
  namespace: System.Numerics
  summary: "\n<p>Divides the specified vector by a specified scalar value.</p>\n"
  remarks: "\n<p>The <xref href=\"System.Numerics.Vector4.op_Division(System.Numerics.Vector4,System.Single)\" data-throw-if-not-resolved=\"false\"></xref> method defines the division operation for <xref href=\"System.Numerics.Vector4\" data-throw-if-not-resolved=\"false\"></xref> objects. </p>\n"
  syntax:
    content: public static Vector4 operator /(Vector4 value1, float value2)
    content.vb: Public Shared Operator /(value1 As Vector4, value2 As Single) As Vector4
    parameters:
    - id: value1
      type: System.Numerics.Vector4
      description: "\n<p>The vector. </p>\n"
    - id: value2
      type: System.Single
      description: "\n<p>The scalar value. </p>\n"
    return:
      type: System.Numerics.Vector4
      description: "\n<p>The result of the division. </p>\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Numerics.Vector4.op_Equality(System.Numerics.Vector4,System.Numerics.Vector4)
  commentId: M:System.Numerics.Vector4.op_Equality(System.Numerics.Vector4,System.Numerics.Vector4)
  id: op_Equality(System.Numerics.Vector4,System.Numerics.Vector4)
  parent: System.Numerics.Vector4
  langs:
  - csharp
  - vb
  name: Equality(Vector4, Vector4)
  fullName: System.Numerics.Vector4.Equality(System.Numerics.Vector4, System.Numerics.Vector4)
  type: Operator
  source:
    remote:
      path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_Equality
    path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs
    startLine: 470
  assemblies:
  - System.Numerics.Vectors
  namespace: System.Numerics
  summary: "\n<p>Returns a value that indicates whether each pair of elements in two specified vectors is equal.  </p>\n"
  remarks: "\n<p>Two <xref href=\"System.Numerics.Vector4\" data-throw-if-not-resolved=\"false\"></xref> objects are equal if each element in <em>left</em> is equal to the corresponding element in <em>right</em>. </p>\n"
  syntax:
    content: public static bool operator ==(Vector4 left, Vector4 right)
    content.vb: Public Shared Operator =(left As Vector4, right As Vector4) As Boolean
    parameters:
    - id: left
      type: System.Numerics.Vector4
      description: "\n<p>The first vector to compare. </p>\n"
    - id: right
      type: System.Numerics.Vector4
      description: "\n<p>The second vector to compare. </p>\n"
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if <em>left</em> and <em>right</em> are equal; otherwise, <strong>false</strong>.</p>\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Numerics.Vector4.op_Inequality(System.Numerics.Vector4,System.Numerics.Vector4)
  commentId: M:System.Numerics.Vector4.op_Inequality(System.Numerics.Vector4,System.Numerics.Vector4)
  id: op_Inequality(System.Numerics.Vector4,System.Numerics.Vector4)
  parent: System.Numerics.Vector4
  langs:
  - csharp
  - vb
  name: Inequality(Vector4, Vector4)
  fullName: System.Numerics.Vector4.Inequality(System.Numerics.Vector4, System.Numerics.Vector4)
  type: Operator
  source:
    remote:
      path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_Inequality
    path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs
    startLine: 471
  assemblies:
  - System.Numerics.Vectors
  namespace: System.Numerics
  summary: "\n<p>Returns a value that indicates whether two specified vectors are not equal.  </p>\n"
  syntax:
    content: public static bool operator !=(Vector4 left, Vector4 right)
    content.vb: Public Shared Operator <>(left As Vector4, right As Vector4) As Boolean
    parameters:
    - id: left
      type: System.Numerics.Vector4
      description: "\n<p>The first vector to compare. </p>\n"
    - id: right
      type: System.Numerics.Vector4
      description: "\n<p>The second vector to compare. </p>\n"
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if <em>left</em> and <em>right</em> are not equal; otherwise, <strong>false</strong>. </p>\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Numerics.Vector4.op_Multiply(System.Numerics.Vector4,System.Numerics.Vector4)
  commentId: M:System.Numerics.Vector4.op_Multiply(System.Numerics.Vector4,System.Numerics.Vector4)
  id: op_Multiply(System.Numerics.Vector4,System.Numerics.Vector4)
  parent: System.Numerics.Vector4
  langs:
  - csharp
  - vb
  name: Multiply(Vector4, Vector4)
  fullName: System.Numerics.Vector4.Multiply(System.Numerics.Vector4, System.Numerics.Vector4)
  type: Operator
  source:
    remote:
      path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_Multiply
    path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs
    startLine: 472
  assemblies:
  - System.Numerics.Vectors
  namespace: System.Numerics
  summary: "\n<p>Multiplies two vectors together. </p>\n"
  remarks: "\n<p>The <xref href=\"System.Numerics.Vector4.op_Multiply(System.Numerics.Vector4,System.Numerics.Vector4)\" data-throw-if-not-resolved=\"false\"></xref> method defines the multiplication operation for <xref href=\"System.Numerics.Vector4\" data-throw-if-not-resolved=\"false\"></xref> objects. </p>\n"
  syntax:
    content: public static Vector4 operator *(Vector4 left, Vector4 right)
    content.vb: Public Shared Operator *(left As Vector4, right As Vector4) As Vector4
    parameters:
    - id: left
      type: System.Numerics.Vector4
      description: "\n<p>The first vector. </p>\n"
    - id: right
      type: System.Numerics.Vector4
      description: "\n<p>The second vector. </p>\n"
    return:
      type: System.Numerics.Vector4
      description: "\n<p>The product vector. </p>\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Numerics.Vector4.op_Multiply(System.Numerics.Vector4,System.Single)
  commentId: M:System.Numerics.Vector4.op_Multiply(System.Numerics.Vector4,System.Single)
  id: op_Multiply(System.Numerics.Vector4,System.Single)
  parent: System.Numerics.Vector4
  langs:
  - csharp
  - vb
  name: Multiply(Vector4, Single)
  fullName: System.Numerics.Vector4.Multiply(System.Numerics.Vector4, System.Single)
  type: Operator
  source:
    remote:
      path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_Multiply
    path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs
    startLine: 473
  assemblies:
  - System.Numerics.Vectors
  namespace: System.Numerics
  summary: "\n<p>Multiples the specified vector by the specified scalar value. </p>\n"
  remarks: "\n<p>The <xref href=\"System.Numerics.Vector4.op_Multiply(System.Numerics.Vector4,System.Single)\" data-throw-if-not-resolved=\"false\"></xref> method defines the multiplication operation for <xref href=\"System.Numerics.Vector4\" data-throw-if-not-resolved=\"false\"></xref> objects. </p>\n"
  syntax:
    content: public static Vector4 operator *(Vector4 left, float right)
    content.vb: Public Shared Operator *(left As Vector4, right As Single) As Vector4
    parameters:
    - id: left
      type: System.Numerics.Vector4
      description: "\n<p>The vector. </p>\n"
    - id: right
      type: System.Single
      description: "\n<p>The scalar value. </p>\n"
    return:
      type: System.Numerics.Vector4
      description: "\n<p>The scaled vector. </p>\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Numerics.Vector4.op_Multiply(System.Single,System.Numerics.Vector4)
  commentId: M:System.Numerics.Vector4.op_Multiply(System.Single,System.Numerics.Vector4)
  id: op_Multiply(System.Single,System.Numerics.Vector4)
  parent: System.Numerics.Vector4
  langs:
  - csharp
  - vb
  name: Multiply(Single, Vector4)
  fullName: System.Numerics.Vector4.Multiply(System.Single, System.Numerics.Vector4)
  type: Operator
  source:
    remote:
      path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_Multiply
    path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs
    startLine: 474
  assemblies:
  - System.Numerics.Vectors
  namespace: System.Numerics
  summary: "\n<p>Multiples the scalar value by the specified vector. </p>\n"
  remarks: "\n<p>The <xref href=\"System.Numerics.Vector4.op_Multiply(System.Single,System.Numerics.Vector4)\" data-throw-if-not-resolved=\"false\"></xref> method defines the multiplication operation for <xref href=\"System.Numerics.Vector4\" data-throw-if-not-resolved=\"false\"></xref> objects. </p>\n"
  syntax:
    content: public static Vector4 operator *(float left, Vector4 right)
    content.vb: Public Shared Operator *(left As Single, right As Vector4) As Vector4
    parameters:
    - id: left
      type: System.Single
      description: "\n<p>The vector. </p>\n"
    - id: right
      type: System.Numerics.Vector4
      description: "\n<p>The scalar value. </p>\n"
    return:
      type: System.Numerics.Vector4
      description: "\n<p>The scaled vector. </p>\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Numerics.Vector4.op_Subtraction(System.Numerics.Vector4,System.Numerics.Vector4)
  commentId: M:System.Numerics.Vector4.op_Subtraction(System.Numerics.Vector4,System.Numerics.Vector4)
  id: op_Subtraction(System.Numerics.Vector4,System.Numerics.Vector4)
  parent: System.Numerics.Vector4
  langs:
  - csharp
  - vb
  name: Subtraction(Vector4, Vector4)
  fullName: System.Numerics.Vector4.Subtraction(System.Numerics.Vector4, System.Numerics.Vector4)
  type: Operator
  source:
    remote:
      path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_Subtraction
    path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs
    startLine: 475
  assemblies:
  - System.Numerics.Vectors
  namespace: System.Numerics
  summary: "\n<p>Subtracts the second vector from the first. </p>\n"
  remarks: "\n<p>The <xref href=\"System.Numerics.Vector4.op_Subtraction(System.Numerics.Vector4,System.Numerics.Vector4)\" data-throw-if-not-resolved=\"false\"></xref> method defines the subtraction operation for <xref href=\"System.Numerics.Vector4\" data-throw-if-not-resolved=\"false\"></xref> objects.</p>\n"
  syntax:
    content: public static Vector4 operator -(Vector4 left, Vector4 right)
    content.vb: Public Shared Operator -(left As Vector4, right As Vector4) As Vector4
    parameters:
    - id: left
      type: System.Numerics.Vector4
      description: "\n<p>The first vector. </p>\n"
    - id: right
      type: System.Numerics.Vector4
      description: "\n<p>The second vector. </p>\n"
    return:
      type: System.Numerics.Vector4
      description: "\n<p>The vector that results from subtracting <em>right</em> from <em>left</em>. </p>\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Numerics.Vector4.op_UnaryNegation(System.Numerics.Vector4)
  commentId: M:System.Numerics.Vector4.op_UnaryNegation(System.Numerics.Vector4)
  id: op_UnaryNegation(System.Numerics.Vector4)
  parent: System.Numerics.Vector4
  langs:
  - csharp
  - vb
  name: UnaryNegation(Vector4)
  fullName: System.Numerics.Vector4.UnaryNegation(System.Numerics.Vector4)
  type: Operator
  source:
    remote:
      path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_UnaryNegation
    path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs
    startLine: 476
  assemblies:
  - System.Numerics.Vectors
  namespace: System.Numerics
  summary: "\n<p>Negates the specified vector. </p>\n"
  remarks: "\n<p>The <xref href=\"System.Numerics.Vector4.op_UnaryNegation(System.Numerics.Vector4)\" data-throw-if-not-resolved=\"false\"></xref> method defines the unary negation operation for <xref href=\"System.Numerics.Vector4\" data-throw-if-not-resolved=\"false\"></xref> objects. </p>\n"
  syntax:
    content: public static Vector4 operator -(Vector4 value)
    content.vb: Public Shared Operator -(value As Vector4) As Vector4
    parameters:
    - id: value
      type: System.Numerics.Vector4
      description: "\n<p>The vector to negate. </p>\n"
    return:
      type: System.Numerics.Vector4
      description: "\n<p>The negated vector. </p>\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Numerics.Vector4.SquareRoot(System.Numerics.Vector4)
  commentId: M:System.Numerics.Vector4.SquareRoot(System.Numerics.Vector4)
  id: SquareRoot(System.Numerics.Vector4)
  parent: System.Numerics.Vector4
  langs:
  - csharp
  - vb
  name: SquareRoot(Vector4)
  fullName: System.Numerics.Vector4.SquareRoot(System.Numerics.Vector4)
  type: Method
  source:
    remote:
      path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: SquareRoot
    path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs
    startLine: 477
  assemblies:
  - System.Numerics.Vectors
  namespace: System.Numerics
  summary: "\n<p>Returns a vector whose elements are the square root of each of a specified vector's elements.</p>\n"
  syntax:
    content: public static Vector4 SquareRoot(Vector4 value)
    content.vb: Public Shared Function SquareRoot(value As Vector4) As Vector4
    parameters:
    - id: value
      type: System.Numerics.Vector4
      description: "\n<p>A vector. </p>\n"
    return:
      type: System.Numerics.Vector4
      description: "\n<p>The square root vector. </p>\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Numerics.Vector4.Subtract(System.Numerics.Vector4,System.Numerics.Vector4)
  commentId: M:System.Numerics.Vector4.Subtract(System.Numerics.Vector4,System.Numerics.Vector4)
  id: Subtract(System.Numerics.Vector4,System.Numerics.Vector4)
  parent: System.Numerics.Vector4
  langs:
  - csharp
  - vb
  name: Subtract(Vector4, Vector4)
  fullName: System.Numerics.Vector4.Subtract(System.Numerics.Vector4, System.Numerics.Vector4)
  type: Method
  source:
    remote:
      path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Subtract
    path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs
    startLine: 478
  assemblies:
  - System.Numerics.Vectors
  namespace: System.Numerics
  summary: "\n<p>Subtracts the second vector from the first. </p>\n"
  syntax:
    content: public static Vector4 Subtract(Vector4 left, Vector4 right)
    content.vb: Public Shared Function Subtract(left As Vector4, right As Vector4) As Vector4
    parameters:
    - id: left
      type: System.Numerics.Vector4
      description: "\n<p>The first vector. </p>\n"
    - id: right
      type: System.Numerics.Vector4
      description: "\n<p>The second vector. </p>\n"
    return:
      type: System.Numerics.Vector4
      description: "\n<p>The difference vector. </p>\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Numerics.Vector4.ToString
  commentId: M:System.Numerics.Vector4.ToString
  id: ToString
  parent: System.Numerics.Vector4
  langs:
  - csharp
  - vb
  name: ToString()
  fullName: System.Numerics.Vector4.ToString()
  type: Method
  source:
    remote:
      path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ToString
    path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs
    startLine: 479
  assemblies:
  - System.Numerics.Vectors
  namespace: System.Numerics
  summary: "\n<p>Returns the string representation of the current instance using default formatting. </p>\n"
  remarks: "\n<p>This method returns a string in which each element of the vector is formatted using the \"G\" (general) format string and the formatting conventions of the current thread culture. The \"<\" and \">\" characters are used to begin and end the string, and the current culture's <xref href=\"System.Globalization.NumberFormatInfo.NumberGroupSeparator\" data-throw-if-not-resolved=\"false\"></xref> property followed by a space is used to separate each element. </p>\n"
  syntax:
    content: public override string ToString()
    content.vb: Public Overrides Function ToString As String
    return:
      type: System.String
      description: "\n<p>The string representation of the current instance. </p>\n"
  overridden: System.ValueType.ToString
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Numerics.Vector4.ToString(System.String)
  commentId: M:System.Numerics.Vector4.ToString(System.String)
  id: ToString(System.String)
  parent: System.Numerics.Vector4
  langs:
  - csharp
  - vb
  name: ToString(String)
  fullName: System.Numerics.Vector4.ToString(System.String)
  type: Method
  source:
    remote:
      path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ToString
    path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs
    startLine: 480
  assemblies:
  - System.Numerics.Vectors
  namespace: System.Numerics
  summary: "\n<p>Returns the string representation of the current instance using the specified format string to format individual elements. </p>\n"
  remarks: "\n<p>This method returns a string in which each element of the vector is formatted using <em>format</em> and the current culture's formatting conventions. The \"<\" and \">\" characters are used to begin and end the string, and the current culture's <xref href=\"System.Globalization.NumberFormatInfo.NumberGroupSeparator\" data-throw-if-not-resolved=\"false\"></xref> property followed by a space is used to separate each element.</p>\n"
  syntax:
    content: public string ToString(string format)
    content.vb: Public Function ToString(format As String) As String
    parameters:
    - id: format
      type: System.String
      description: "\n<p>A standard or custom numeric format string that defines the format of individual elements.</p>\n"
    return:
      type: System.String
      description: "\n<p>The string representation of the current instance. </p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Numerics.Vector4.ToString(System.String,System.IFormatProvider)
  commentId: M:System.Numerics.Vector4.ToString(System.String,System.IFormatProvider)
  id: ToString(System.String,System.IFormatProvider)
  parent: System.Numerics.Vector4
  langs:
  - csharp
  - vb
  name: ToString(String, IFormatProvider)
  fullName: System.Numerics.Vector4.ToString(System.String, System.IFormatProvider)
  type: Method
  source:
    remote:
      path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ToString
    path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs
    startLine: 481
  assemblies:
  - System.Numerics.Vectors
  namespace: System.Numerics
  summary: "\n<p>Returns the string representation of the current instance using the specified format string to format individual elements and the specified format provider to define culture-specific formatting.</p>\n"
  remarks: "\n<p>This method returns a string in which each element of the vector is formatted using <em>format</em> and <em>formatProvider</em>. The \"<\" and \">\" characters are used to begin and end the string, and the format provider's <xref href=\"System.Globalization.NumberFormatInfo.NumberGroupSeparator\" data-throw-if-not-resolved=\"false\"></xref> property followed by a space is used to separate each element. </p>\n"
  syntax:
    content: public string ToString(string format, IFormatProvider formatProvider)
    content.vb: Public Function ToString(format As String, formatProvider As IFormatProvider) As String
    parameters:
    - id: format
      type: System.String
      description: "\n<p>A standard or custom numeric format string that defines the format of individual elements. </p>\n"
    - id: formatProvider
      type: System.IFormatProvider
      description: "\n<p>A format provider that supplies culture-specific formatting information. </p>\n"
    return:
      type: System.String
      description: "\n<p>The string representation of the current instance. </p>\n"
  implements:
  - System.IFormattable.ToString(System.String,System.IFormatProvider)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Numerics.Vector4.Transform(System.Numerics.Vector2,System.Numerics.Matrix4x4)
  commentId: M:System.Numerics.Vector4.Transform(System.Numerics.Vector2,System.Numerics.Matrix4x4)
  id: Transform(System.Numerics.Vector2,System.Numerics.Matrix4x4)
  parent: System.Numerics.Vector4
  langs:
  - csharp
  - vb
  name: Transform(Vector2, Matrix4x4)
  fullName: System.Numerics.Vector4.Transform(System.Numerics.Vector2, System.Numerics.Matrix4x4)
  type: Method
  source:
    remote:
      path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Transform
    path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs
    startLine: 482
  assemblies:
  - System.Numerics.Vectors
  namespace: System.Numerics
  summary: "\n<p>Transforms a two-dimensional vector by a specified 4x4 matrix. </p>\n"
  syntax:
    content: public static Vector4 Transform(Vector2 position, Matrix4x4 matrix)
    content.vb: Public Shared Function Transform(position As Vector2, matrix As Matrix4x4) As Vector4
    parameters:
    - id: position
      type: System.Numerics.Vector2
      description: "\n<p>The vector to transform. </p>\n"
    - id: matrix
      type: System.Numerics.Matrix4x4
      description: "\n<p>The transformation matrix. </p>\n"
    return:
      type: System.Numerics.Vector4
      description: "\n<p>The transformed vector. </p>\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Numerics.Vector4.Transform(System.Numerics.Vector2,System.Numerics.Quaternion)
  commentId: M:System.Numerics.Vector4.Transform(System.Numerics.Vector2,System.Numerics.Quaternion)
  id: Transform(System.Numerics.Vector2,System.Numerics.Quaternion)
  parent: System.Numerics.Vector4
  langs:
  - csharp
  - vb
  name: Transform(Vector2, Quaternion)
  fullName: System.Numerics.Vector4.Transform(System.Numerics.Vector2, System.Numerics.Quaternion)
  type: Method
  source:
    remote:
      path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Transform
    path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs
    startLine: 483
  assemblies:
  - System.Numerics.Vectors
  namespace: System.Numerics
  summary: "\n<p>Transforms a two-dimensional vector by the specified Quaternion rotation value. </p>\n"
  syntax:
    content: public static Vector4 Transform(Vector2 value, Quaternion rotation)
    content.vb: Public Shared Function Transform(value As Vector2, rotation As Quaternion) As Vector4
    parameters:
    - id: value
      type: System.Numerics.Vector2
      description: "\n<p>The vector to rotate. </p>\n"
    - id: rotation
      type: System.Numerics.Quaternion
      description: "\n<p>The rotation to apply. </p>\n"
    return:
      type: System.Numerics.Vector4
      description: "\n<p>The transformed vector. </p>\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Numerics.Vector4.Transform(System.Numerics.Vector3,System.Numerics.Matrix4x4)
  commentId: M:System.Numerics.Vector4.Transform(System.Numerics.Vector3,System.Numerics.Matrix4x4)
  id: Transform(System.Numerics.Vector3,System.Numerics.Matrix4x4)
  parent: System.Numerics.Vector4
  langs:
  - csharp
  - vb
  name: Transform(Vector3, Matrix4x4)
  fullName: System.Numerics.Vector4.Transform(System.Numerics.Vector3, System.Numerics.Matrix4x4)
  type: Method
  source:
    remote:
      path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Transform
    path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs
    startLine: 484
  assemblies:
  - System.Numerics.Vectors
  namespace: System.Numerics
  summary: "\n<p>Transforms a three-dimensional vector by a specified 4x4 matrix. </p>\n"
  syntax:
    content: public static Vector4 Transform(Vector3 position, Matrix4x4 matrix)
    content.vb: Public Shared Function Transform(position As Vector3, matrix As Matrix4x4) As Vector4
    parameters:
    - id: position
      type: System.Numerics.Vector3
      description: "\n<p>The vector to transform. </p>\n"
    - id: matrix
      type: System.Numerics.Matrix4x4
      description: "\n<p>The transformation matrix. </p>\n"
    return:
      type: System.Numerics.Vector4
      description: "\n<p>The transformed vector. </p>\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Numerics.Vector4.Transform(System.Numerics.Vector3,System.Numerics.Quaternion)
  commentId: M:System.Numerics.Vector4.Transform(System.Numerics.Vector3,System.Numerics.Quaternion)
  id: Transform(System.Numerics.Vector3,System.Numerics.Quaternion)
  parent: System.Numerics.Vector4
  langs:
  - csharp
  - vb
  name: Transform(Vector3, Quaternion)
  fullName: System.Numerics.Vector4.Transform(System.Numerics.Vector3, System.Numerics.Quaternion)
  type: Method
  source:
    remote:
      path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Transform
    path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs
    startLine: 485
  assemblies:
  - System.Numerics.Vectors
  namespace: System.Numerics
  summary: "\n<p>Transforms a three-dimensional vector by the specified Quaternion rotation value. </p>\n"
  syntax:
    content: public static Vector4 Transform(Vector3 value, Quaternion rotation)
    content.vb: Public Shared Function Transform(value As Vector3, rotation As Quaternion) As Vector4
    parameters:
    - id: value
      type: System.Numerics.Vector3
      description: "\n<p>The vector to rotate. </p>\n"
    - id: rotation
      type: System.Numerics.Quaternion
      description: "\n<p>The rotation to apply. </p>\n"
    return:
      type: System.Numerics.Vector4
      description: "\n<p>The transformed vector. </p>\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Numerics.Vector4.Transform(System.Numerics.Vector4,System.Numerics.Matrix4x4)
  commentId: M:System.Numerics.Vector4.Transform(System.Numerics.Vector4,System.Numerics.Matrix4x4)
  id: Transform(System.Numerics.Vector4,System.Numerics.Matrix4x4)
  parent: System.Numerics.Vector4
  langs:
  - csharp
  - vb
  name: Transform(Vector4, Matrix4x4)
  fullName: System.Numerics.Vector4.Transform(System.Numerics.Vector4, System.Numerics.Matrix4x4)
  type: Method
  source:
    remote:
      path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Transform
    path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs
    startLine: 486
  assemblies:
  - System.Numerics.Vectors
  namespace: System.Numerics
  summary: "\n<p>Transforms a four-dimensional vector by a specified 4x4 matrix. </p>\n"
  syntax:
    content: public static Vector4 Transform(Vector4 vector, Matrix4x4 matrix)
    content.vb: Public Shared Function Transform(vector As Vector4, matrix As Matrix4x4) As Vector4
    parameters:
    - id: vector
      type: System.Numerics.Vector4
      description: "\n<p>The vector to transform. </p>\n"
    - id: matrix
      type: System.Numerics.Matrix4x4
      description: "\n<p>The transformation matrix. </p>\n"
    return:
      type: System.Numerics.Vector4
      description: "\n<p>The transformed vector. </p>\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Numerics.Vector4.Transform(System.Numerics.Vector4,System.Numerics.Quaternion)
  commentId: M:System.Numerics.Vector4.Transform(System.Numerics.Vector4,System.Numerics.Quaternion)
  id: Transform(System.Numerics.Vector4,System.Numerics.Quaternion)
  parent: System.Numerics.Vector4
  langs:
  - csharp
  - vb
  name: Transform(Vector4, Quaternion)
  fullName: System.Numerics.Vector4.Transform(System.Numerics.Vector4, System.Numerics.Quaternion)
  type: Method
  source:
    remote:
      path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Transform
    path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs
    startLine: 487
  assemblies:
  - System.Numerics.Vectors
  namespace: System.Numerics
  summary: "\n<p>Transforms a four-dimensional vector by the specified Quaternion rotation value. </p>\n"
  syntax:
    content: public static Vector4 Transform(Vector4 value, Quaternion rotation)
    content.vb: Public Shared Function Transform(value As Vector4, rotation As Quaternion) As Vector4
    parameters:
    - id: value
      type: System.Numerics.Vector4
      description: "\n<p>The vector to rotate. </p>\n"
    - id: rotation
      type: System.Numerics.Quaternion
      description: "\n<p>The rotation to apply. </p>\n"
    return:
      type: System.Numerics.Vector4
      description: "\n<p>The transformed vector. </p>\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: System.Numerics
  isExternal: false
  name: System.Numerics
  fullName: System.Numerics
- uid: System.IEquatable{System.Numerics.Vector4}
  parent: System
  definition: System.IEquatable`1
  name: IEquatable<Vector4>
  fullName: System.IEquatable<System.Numerics.Vector4>
  fullname.vb: System.IEquatable(Of System.Numerics.Vector4)
  name.vb: IEquatable(Of Vector4)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Numerics.Vector4
    name: Vector4
    fullName: System.Numerics.Vector4
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Numerics.Vector4
    name: Vector4
    fullName: System.Numerics.Vector4
  - name: )
    fullName: )
- uid: System.IFormattable
  parent: System
  isExternal: false
  name: IFormattable
  fullName: System.IFormattable
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.IEquatable`1
  parent: System
  isExternal: false
  name: IEquatable<T>
  fullName: System.IEquatable<T>
  fullname.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    fullName: System.IEquatable
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    fullName: System.IEquatable
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System.Single
  parent: System
  isExternal: false
  name: Single
  fullName: System.Single
- uid: System.Numerics.Vector2
  parent: System.Numerics
  isExternal: false
  name: Vector2
  fullName: System.Numerics.Vector2
- uid: System.Numerics.Vector3
  parent: System.Numerics
  isExternal: false
  name: Vector3
  fullName: System.Numerics.Vector3
- uid: System.Numerics.Vector4
  parent: System.Numerics
  isExternal: false
  name: Vector4
  fullName: System.Numerics.Vector4
- uid: System.Single[]
  isExternal: true
  name: Single[]
  fullName: System.Single[]
  fullname.vb: System.Single()
  name.vb: Single()
  spec.csharp:
  - uid: System.Single
    name: Single
    fullName: System.Single
    isExternal: true
  - name: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Single
    name: Single
    fullName: System.Single
    isExternal: true
  - name: ()
    fullName: ()
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  fullName: System.Int32
- uid: System.IEquatable{System.Numerics.Vector4}.Equals(System.Numerics.Vector4)
  parent: System.IEquatable{System.Numerics.Vector4}
  definition: System.IEquatable`1.Equals(`0)
  name: Equals(Vector4)
  fullName: System.IEquatable<System.Numerics.Vector4>.Equals(System.Numerics.Vector4)
  fullname.vb: System.IEquatable(Of System.Numerics.Vector4).Equals(System.Numerics.Vector4)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    fullName: System.IEquatable<System.Numerics.Vector4>.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Numerics.Vector4
    name: Vector4
    fullName: System.Numerics.Vector4
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    fullName: System.IEquatable(Of System.Numerics.Vector4).Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Numerics.Vector4
    name: Vector4
    fullName: System.Numerics.Vector4
  - name: )
    fullName: )
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  fullName: System.Boolean
- uid: System.IEquatable`1.Equals(`0)
  parent: System.IEquatable`1
  isExternal: false
  name: Equals(T)
  fullName: System.IEquatable<T>.Equals(T)
  fullname.vb: System.IEquatable(Of T).Equals(T)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    fullName: System.IEquatable<T>.Equals
  - name: (
    fullName: (
  - name: T
    fullName: T
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    fullName: System.IEquatable(Of T).Equals
  - name: (
    fullName: (
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  name: Equals(Object)
  fullName: System.ValueType.Equals(System.Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    fullName: System.ValueType.Equals
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    fullName: System.ValueType.Equals
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.ValueType
  parent: System
  isExternal: false
  name: ValueType
  fullName: System.ValueType
- uid: System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: false
  name: GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    fullName: System.ValueType.GetHashCode
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    fullName: System.ValueType.GetHashCode
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.ValueType.ToString
  parent: System.ValueType
  isExternal: false
  name: ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    fullName: System.ValueType.ToString
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    fullName: System.ValueType.ToString
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.String
  parent: System
  isExternal: false
  name: String
  fullName: System.String
- uid: System.IFormattable.ToString(System.String,System.IFormatProvider)
  parent: System.IFormattable
  isExternal: true
  name: ToString(String, IFormatProvider)
  fullName: System.IFormattable.ToString(System.String, System.IFormatProvider)
  spec.csharp:
  - uid: System.IFormattable.ToString(System.String,System.IFormatProvider)
    name: ToString
    fullName: System.IFormattable.ToString
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.IFormatProvider
    name: IFormatProvider
    fullName: System.IFormatProvider
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IFormattable.ToString(System.String,System.IFormatProvider)
    name: ToString
    fullName: System.IFormattable.ToString
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.IFormatProvider
    name: IFormatProvider
    fullName: System.IFormatProvider
  - name: )
    fullName: )
- uid: System.IFormatProvider
  parent: System
  isExternal: false
  name: IFormatProvider
  fullName: System.IFormatProvider
- uid: System.Numerics.Matrix4x4
  parent: System.Numerics
  isExternal: false
  name: Matrix4x4
  fullName: System.Numerics.Matrix4x4
- uid: System.Numerics.Quaternion
  parent: System.Numerics
  isExternal: false
  name: Quaternion
  fullName: System.Numerics.Quaternion
- uid: System.ArgumentNullException
  isExternal: false
  name: ArgumentNullException
  fullName: System.ArgumentNullException
- uid: System.ArgumentException
  parent: System
  isExternal: false
  name: ArgumentException
  fullName: System.ArgumentException
- uid: System.RankException
  isExternal: false
  name: RankException
  fullName: System.RankException
- uid: System.ArgumentOutOfRangeException
  isExternal: false
  name: ArgumentOutOfRangeException
  fullName: System.ArgumentOutOfRangeException
