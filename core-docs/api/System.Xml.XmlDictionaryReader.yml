items:
- uid: System.Xml.XmlDictionaryReader
  commentId: T:System.Xml.XmlDictionaryReader
  id: XmlDictionaryReader
  parent: System.Xml
  children:
  - System.Xml.XmlDictionaryReader.#ctor
  - System.Xml.XmlDictionaryReader.CanCanonicalize
  - System.Xml.XmlDictionaryReader.CreateBinaryReader(System.Byte[],System.Int32,System.Int32,System.Xml.IXmlDictionary,System.Xml.XmlDictionaryReaderQuotas)
  - System.Xml.XmlDictionaryReader.CreateBinaryReader(System.Byte[],System.Int32,System.Int32,System.Xml.IXmlDictionary,System.Xml.XmlDictionaryReaderQuotas,System.Xml.XmlBinaryReaderSession)
  - System.Xml.XmlDictionaryReader.CreateBinaryReader(System.Byte[],System.Int32,System.Int32,System.Xml.XmlDictionaryReaderQuotas)
  - System.Xml.XmlDictionaryReader.CreateBinaryReader(System.Byte[],System.Xml.XmlDictionaryReaderQuotas)
  - System.Xml.XmlDictionaryReader.CreateBinaryReader(System.IO.Stream,System.Xml.IXmlDictionary,System.Xml.XmlDictionaryReaderQuotas)
  - System.Xml.XmlDictionaryReader.CreateBinaryReader(System.IO.Stream,System.Xml.IXmlDictionary,System.Xml.XmlDictionaryReaderQuotas,System.Xml.XmlBinaryReaderSession)
  - System.Xml.XmlDictionaryReader.CreateBinaryReader(System.IO.Stream,System.Xml.XmlDictionaryReaderQuotas)
  - System.Xml.XmlDictionaryReader.CreateDictionaryReader(System.Xml.XmlReader)
  - System.Xml.XmlDictionaryReader.CreateTextReader(System.Byte[],System.Int32,System.Int32,System.Xml.XmlDictionaryReaderQuotas)
  - System.Xml.XmlDictionaryReader.CreateTextReader(System.Byte[],System.Xml.XmlDictionaryReaderQuotas)
  - System.Xml.XmlDictionaryReader.CreateTextReader(System.IO.Stream,System.Text.Encoding,System.Xml.XmlDictionaryReaderQuotas,System.Xml.OnXmlDictionaryReaderClose)
  - System.Xml.XmlDictionaryReader.CreateTextReader(System.IO.Stream,System.Xml.XmlDictionaryReaderQuotas)
  - System.Xml.XmlDictionaryReader.EndCanonicalization
  - System.Xml.XmlDictionaryReader.GetAttribute(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)
  - System.Xml.XmlDictionaryReader.IndexOfLocalName(System.String[],System.String)
  - System.Xml.XmlDictionaryReader.IndexOfLocalName(System.Xml.XmlDictionaryString[],System.Xml.XmlDictionaryString)
  - System.Xml.XmlDictionaryReader.IsLocalName(System.String)
  - System.Xml.XmlDictionaryReader.IsLocalName(System.Xml.XmlDictionaryString)
  - System.Xml.XmlDictionaryReader.IsNamespaceUri(System.String)
  - System.Xml.XmlDictionaryReader.IsNamespaceUri(System.Xml.XmlDictionaryString)
  - System.Xml.XmlDictionaryReader.IsStartArray(System.Type@)
  - System.Xml.XmlDictionaryReader.IsStartElement(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)
  - System.Xml.XmlDictionaryReader.IsTextNode(System.Xml.XmlNodeType)
  - System.Xml.XmlDictionaryReader.MoveToStartElement
  - System.Xml.XmlDictionaryReader.MoveToStartElement(System.String)
  - System.Xml.XmlDictionaryReader.MoveToStartElement(System.String,System.String)
  - System.Xml.XmlDictionaryReader.MoveToStartElement(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)
  - System.Xml.XmlDictionaryReader.Quotas
  - System.Xml.XmlDictionaryReader.ReadArray(System.String,System.String,System.Boolean[],System.Int32,System.Int32)
  - System.Xml.XmlDictionaryReader.ReadArray(System.String,System.String,System.DateTime[],System.Int32,System.Int32)
  - System.Xml.XmlDictionaryReader.ReadArray(System.String,System.String,System.Decimal[],System.Int32,System.Int32)
  - System.Xml.XmlDictionaryReader.ReadArray(System.String,System.String,System.Double[],System.Int32,System.Int32)
  - System.Xml.XmlDictionaryReader.ReadArray(System.String,System.String,System.Guid[],System.Int32,System.Int32)
  - System.Xml.XmlDictionaryReader.ReadArray(System.String,System.String,System.Int16[],System.Int32,System.Int32)
  - System.Xml.XmlDictionaryReader.ReadArray(System.String,System.String,System.Int32[],System.Int32,System.Int32)
  - System.Xml.XmlDictionaryReader.ReadArray(System.String,System.String,System.Int64[],System.Int32,System.Int32)
  - System.Xml.XmlDictionaryReader.ReadArray(System.String,System.String,System.Single[],System.Int32,System.Int32)
  - System.Xml.XmlDictionaryReader.ReadArray(System.String,System.String,System.TimeSpan[],System.Int32,System.Int32)
  - System.Xml.XmlDictionaryReader.ReadArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Boolean[],System.Int32,System.Int32)
  - System.Xml.XmlDictionaryReader.ReadArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.DateTime[],System.Int32,System.Int32)
  - System.Xml.XmlDictionaryReader.ReadArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Decimal[],System.Int32,System.Int32)
  - System.Xml.XmlDictionaryReader.ReadArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Double[],System.Int32,System.Int32)
  - System.Xml.XmlDictionaryReader.ReadArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Guid[],System.Int32,System.Int32)
  - System.Xml.XmlDictionaryReader.ReadArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Int16[],System.Int32,System.Int32)
  - System.Xml.XmlDictionaryReader.ReadArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Int32[],System.Int32,System.Int32)
  - System.Xml.XmlDictionaryReader.ReadArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Int64[],System.Int32,System.Int32)
  - System.Xml.XmlDictionaryReader.ReadArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Single[],System.Int32,System.Int32)
  - System.Xml.XmlDictionaryReader.ReadArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.TimeSpan[],System.Int32,System.Int32)
  - System.Xml.XmlDictionaryReader.ReadBooleanArray(System.String,System.String)
  - System.Xml.XmlDictionaryReader.ReadBooleanArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)
  - System.Xml.XmlDictionaryReader.ReadContentAs(System.Type,System.Xml.IXmlNamespaceResolver)
  - System.Xml.XmlDictionaryReader.ReadContentAsBase64
  - System.Xml.XmlDictionaryReader.ReadContentAsBinHex
  - System.Xml.XmlDictionaryReader.ReadContentAsBinHex(System.Int32)
  - System.Xml.XmlDictionaryReader.ReadContentAsChars(System.Char[],System.Int32,System.Int32)
  - System.Xml.XmlDictionaryReader.ReadContentAsDecimal
  - System.Xml.XmlDictionaryReader.ReadContentAsFloat
  - System.Xml.XmlDictionaryReader.ReadContentAsGuid
  - System.Xml.XmlDictionaryReader.ReadContentAsQualifiedName(System.String@,System.String@)
  - System.Xml.XmlDictionaryReader.ReadContentAsString
  - System.Xml.XmlDictionaryReader.ReadContentAsString(System.Int32)
  - System.Xml.XmlDictionaryReader.ReadContentAsString(System.String[],System.Int32@)
  - System.Xml.XmlDictionaryReader.ReadContentAsString(System.Xml.XmlDictionaryString[],System.Int32@)
  - System.Xml.XmlDictionaryReader.ReadContentAsTimeSpan
  - System.Xml.XmlDictionaryReader.ReadContentAsUniqueId
  - System.Xml.XmlDictionaryReader.ReadDateTimeArray(System.String,System.String)
  - System.Xml.XmlDictionaryReader.ReadDateTimeArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)
  - System.Xml.XmlDictionaryReader.ReadDecimalArray(System.String,System.String)
  - System.Xml.XmlDictionaryReader.ReadDecimalArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)
  - System.Xml.XmlDictionaryReader.ReadDoubleArray(System.String,System.String)
  - System.Xml.XmlDictionaryReader.ReadDoubleArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)
  - System.Xml.XmlDictionaryReader.ReadElementContentAsBase64
  - System.Xml.XmlDictionaryReader.ReadElementContentAsBinHex
  - System.Xml.XmlDictionaryReader.ReadElementContentAsBoolean
  - System.Xml.XmlDictionaryReader.ReadElementContentAsDecimal
  - System.Xml.XmlDictionaryReader.ReadElementContentAsDouble
  - System.Xml.XmlDictionaryReader.ReadElementContentAsFloat
  - System.Xml.XmlDictionaryReader.ReadElementContentAsGuid
  - System.Xml.XmlDictionaryReader.ReadElementContentAsInt
  - System.Xml.XmlDictionaryReader.ReadElementContentAsLong
  - System.Xml.XmlDictionaryReader.ReadElementContentAsString
  - System.Xml.XmlDictionaryReader.ReadElementContentAsTimeSpan
  - System.Xml.XmlDictionaryReader.ReadElementContentAsUniqueId
  - System.Xml.XmlDictionaryReader.ReadFullStartElement
  - System.Xml.XmlDictionaryReader.ReadFullStartElement(System.String)
  - System.Xml.XmlDictionaryReader.ReadFullStartElement(System.String,System.String)
  - System.Xml.XmlDictionaryReader.ReadFullStartElement(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)
  - System.Xml.XmlDictionaryReader.ReadGuidArray(System.String,System.String)
  - System.Xml.XmlDictionaryReader.ReadGuidArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)
  - System.Xml.XmlDictionaryReader.ReadInt16Array(System.String,System.String)
  - System.Xml.XmlDictionaryReader.ReadInt16Array(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)
  - System.Xml.XmlDictionaryReader.ReadInt32Array(System.String,System.String)
  - System.Xml.XmlDictionaryReader.ReadInt32Array(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)
  - System.Xml.XmlDictionaryReader.ReadInt64Array(System.String,System.String)
  - System.Xml.XmlDictionaryReader.ReadInt64Array(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)
  - System.Xml.XmlDictionaryReader.ReadSingleArray(System.String,System.String)
  - System.Xml.XmlDictionaryReader.ReadSingleArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)
  - System.Xml.XmlDictionaryReader.ReadStartElement(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)
  - System.Xml.XmlDictionaryReader.ReadTimeSpanArray(System.String,System.String)
  - System.Xml.XmlDictionaryReader.ReadTimeSpanArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)
  - System.Xml.XmlDictionaryReader.ReadValueAsBase64(System.Byte[],System.Int32,System.Int32)
  - System.Xml.XmlDictionaryReader.StartCanonicalization(System.IO.Stream,System.Boolean,System.String[])
  - System.Xml.XmlDictionaryReader.TryGetArrayLength(System.Int32@)
  - System.Xml.XmlDictionaryReader.TryGetBase64ContentLength(System.Int32@)
  - System.Xml.XmlDictionaryReader.TryGetLocalNameAsDictionaryString(System.Xml.XmlDictionaryString@)
  - System.Xml.XmlDictionaryReader.TryGetNamespaceUriAsDictionaryString(System.Xml.XmlDictionaryString@)
  - System.Xml.XmlDictionaryReader.TryGetValueAsDictionaryString(System.Xml.XmlDictionaryString@)
  langs:
  - csharp
  - vb
  name: XmlDictionaryReader
  fullName: System.Xml.XmlDictionaryReader
  type: Class
  source:
    remote:
      path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: XmlDictionaryReader
    path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
    startLine: 133
  assemblies:
  - System.Runtime.Serialization.Xml
  namespace: System.Xml
  summary: "\n<p>An <strong>abstract</strong> class that the Windows Communication Foundation (WCF) derives from <xref href=\"System.Xml.XmlReader\" data-throw-if-not-resolved=\"false\"></xref> to do serialization and deserialization.</p>\n"
  remarks: "\n<p>Methods in this class read <xref href=\"System.Xml.XmlDictionary\" data-throw-if-not-resolved=\"false\"></xref> objects.</p>\n<p>This class is derived from <xref href=\"System.Xml.XmlReader\" data-throw-if-not-resolved=\"false\"></xref>. </p>\n<p>Note that there is a known issue with the normalization of linefeed characters inside of CDATA sections that you may encounter.</p>\n"
  example:
  - 
  syntax:
    content: 'public abstract class XmlDictionaryReader : XmlReader'
    content.vb: >-
      Public MustInherit Class XmlDictionaryReader
          Inherits XmlReader
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: System.Xml.XmlDictionaryReader.#ctor
  commentId: M:System.Xml.XmlDictionaryReader.#ctor
  id: '#ctor'
  parent: System.Xml.XmlDictionaryReader
  langs:
  - csharp
  - vb
  name: XmlDictionaryReader()
  fullName: System.Xml.XmlDictionaryReader.XmlDictionaryReader()
  type: Constructor
  source:
    remote:
      path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
    startLine: 135
  assemblies:
  - System.Runtime.Serialization.Xml
  namespace: System.Xml
  summary: "\n<p>Creates an instance of this class.  Invoked only by its derived classes.</p>\n"
  remarks: "\n<p>The only constructor for this class is the default constructor.</p>\n"
  example:
  - 
  syntax:
    content: protected XmlDictionaryReader()
    content.vb: Protected Sub New
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: System.Xml.XmlDictionaryReader.CanCanonicalize
  commentId: P:System.Xml.XmlDictionaryReader.CanCanonicalize
  id: CanCanonicalize
  parent: System.Xml.XmlDictionaryReader
  langs:
  - csharp
  - vb
  name: CanCanonicalize
  fullName: System.Xml.XmlDictionaryReader.CanCanonicalize
  type: Property
  source:
    remote:
      path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CanCanonicalize
    path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
    startLine: 136
  assemblies:
  - System.Runtime.Serialization.Xml
  namespace: System.Xml
  summary: "\n<p>This property always returns <strong>false</strong>. Its derived classes can override to return <strong>true</strong> if they support canonicalization.</p>\n"
  remarks: "\n<p>This property always returns <strong>false</strong>.</p>\n"
  example:
  - 
  syntax:
    content: public virtual bool CanCanonicalize { get; }
    content.vb: Public Overridable ReadOnly Property CanCanonicalize As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: "\n<p>Returns <strong>false</strong>.</p>\n"
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: System.Xml.XmlDictionaryReader.Quotas
  commentId: P:System.Xml.XmlDictionaryReader.Quotas
  id: Quotas
  parent: System.Xml.XmlDictionaryReader
  langs:
  - csharp
  - vb
  name: Quotas
  fullName: System.Xml.XmlDictionaryReader.Quotas
  type: Property
  source:
    remote:
      path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Quotas
    path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
    startLine: 137
  assemblies:
  - System.Runtime.Serialization.Xml
  namespace: System.Xml
  summary: "\n<p>Gets the quota values that apply to the current instance of this class.</p>\n"
  example:
  - 
  syntax:
    content: public virtual XmlDictionaryReaderQuotas Quotas { get; }
    content.vb: Public Overridable ReadOnly Property Quotas As XmlDictionaryReaderQuotas
    parameters: []
    return:
      type: System.Xml.XmlDictionaryReaderQuotas
      description: "\n<p>The <xref href=\"System.Xml.XmlDictionaryReaderQuotas\" data-throw-if-not-resolved=\"false\"></xref> that applies to the current instance of this class. </p>\n"
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: System.Xml.XmlDictionaryReader.CreateBinaryReader(System.Byte[],System.Int32,System.Int32,System.Xml.IXmlDictionary,System.Xml.XmlDictionaryReaderQuotas)
  commentId: M:System.Xml.XmlDictionaryReader.CreateBinaryReader(System.Byte[],System.Int32,System.Int32,System.Xml.IXmlDictionary,System.Xml.XmlDictionaryReaderQuotas)
  id: CreateBinaryReader(System.Byte[],System.Int32,System.Int32,System.Xml.IXmlDictionary,System.Xml.XmlDictionaryReaderQuotas)
  parent: System.Xml.XmlDictionaryReader
  langs:
  - csharp
  - vb
  name: CreateBinaryReader(Byte[], Int32, Int32, IXmlDictionary, XmlDictionaryReaderQuotas)
  fullName: System.Xml.XmlDictionaryReader.CreateBinaryReader(System.Byte[], System.Int32, System.Int32, System.Xml.IXmlDictionary, System.Xml.XmlDictionaryReaderQuotas)
  type: Method
  source:
    remote:
      path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CreateBinaryReader
    path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
    startLine: 138
  assemblies:
  - System.Runtime.Serialization.Xml
  namespace: System.Xml
  summary: "\n<p>Creates an instance of <xref href=\"System.Xml.XmlDictionaryReader\" data-throw-if-not-resolved=\"false\"></xref> that can read .NET Binary XML Format.</p>\n"
  remarks: "\n<p>Other <xref href=\"System.Xml.XmlDictionaryReader\" data-throw-if-not-resolved=\"false\"></xref> properties are set to default values or <strong>null</strong>.</p>\n"
  example:
  - 
  syntax:
    content: public static XmlDictionaryReader CreateBinaryReader(byte[] buffer, int offset, int count, IXmlDictionary dictionary, XmlDictionaryReaderQuotas quotas)
    content.vb: Public Shared Function CreateBinaryReader(buffer As Byte(), offset As Integer, count As Integer, dictionary As IXmlDictionary, quotas As XmlDictionaryReaderQuotas) As XmlDictionaryReader
    parameters:
    - id: buffer
      type: System.Byte[]
      description: "\n<p>The buffer from which to read.</p>\n"
    - id: offset
      type: System.Int32
      description: "\n<p>The starting position from which to read in <em>buffer</em>.</p>\n"
    - id: count
      type: System.Int32
      description: "\n<p>The number of bytes that can be read from <em>buffer</em>.</p>\n"
    - id: dictionary
      type: System.Xml.IXmlDictionary
      description: "\n<p>\n<xref href=\"System.Xml.XmlDictionary\" data-throw-if-not-resolved=\"false\"></xref> to use.</p>\n"
    - id: quotas
      type: System.Xml.XmlDictionaryReaderQuotas
      description: "\n<p>The quotas that apply to this operation.</p>\n"
    return:
      type: System.Xml.XmlDictionaryReader
      description: "\n<p>An instance of <xref href=\"System.Xml.XmlDictionaryReader\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>buffer</em> is <strong>null</strong>.</p>\n"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>\n<em>offset</em> is less than zero or greater than the buffer length.</p>\n"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>\n<em>count</em> is less than zero or greater than the buffer length minus the offset.</p>\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Xml.XmlDictionaryReader.CreateBinaryReader(System.Byte(), System.Int32, System.Int32, System.Xml.IXmlDictionary, System.Xml.XmlDictionaryReaderQuotas)
  name.vb: CreateBinaryReader(Byte(), Int32, Int32, IXmlDictionary, XmlDictionaryReaderQuotas)
- uid: System.Xml.XmlDictionaryReader.CreateBinaryReader(System.Byte[],System.Int32,System.Int32,System.Xml.IXmlDictionary,System.Xml.XmlDictionaryReaderQuotas,System.Xml.XmlBinaryReaderSession)
  commentId: M:System.Xml.XmlDictionaryReader.CreateBinaryReader(System.Byte[],System.Int32,System.Int32,System.Xml.IXmlDictionary,System.Xml.XmlDictionaryReaderQuotas,System.Xml.XmlBinaryReaderSession)
  id: CreateBinaryReader(System.Byte[],System.Int32,System.Int32,System.Xml.IXmlDictionary,System.Xml.XmlDictionaryReaderQuotas,System.Xml.XmlBinaryReaderSession)
  parent: System.Xml.XmlDictionaryReader
  langs:
  - csharp
  - vb
  name: CreateBinaryReader(Byte[], Int32, Int32, IXmlDictionary, XmlDictionaryReaderQuotas, XmlBinaryReaderSession)
  fullName: System.Xml.XmlDictionaryReader.CreateBinaryReader(System.Byte[], System.Int32, System.Int32, System.Xml.IXmlDictionary, System.Xml.XmlDictionaryReaderQuotas, System.Xml.XmlBinaryReaderSession)
  type: Method
  source:
    remote:
      path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CreateBinaryReader
    path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
    startLine: 139
  assemblies:
  - System.Runtime.Serialization.Xml
  namespace: System.Xml
  summary: "\n<p>Creates an instance of <xref href=\"System.Xml.XmlDictionaryReader\" data-throw-if-not-resolved=\"false\"></xref> that can read .NET Binary XML Format.</p>\n"
  remarks: "\n<p>Other <xref href=\"System.Xml.XmlDictionaryReader\" data-throw-if-not-resolved=\"false\"></xref> properties are set to default values or <strong>null</strong>.</p>\n"
  example:
  - 
  syntax:
    content: public static XmlDictionaryReader CreateBinaryReader(byte[] buffer, int offset, int count, IXmlDictionary dictionary, XmlDictionaryReaderQuotas quotas, XmlBinaryReaderSession session)
    content.vb: Public Shared Function CreateBinaryReader(buffer As Byte(), offset As Integer, count As Integer, dictionary As IXmlDictionary, quotas As XmlDictionaryReaderQuotas, session As XmlBinaryReaderSession) As XmlDictionaryReader
    parameters:
    - id: buffer
      type: System.Byte[]
      description: "\n<p>The buffer from which to read.</p>\n"
    - id: offset
      type: System.Int32
      description: "\n<p>The starting position from which to read in <em>buffer</em>.</p>\n"
    - id: count
      type: System.Int32
      description: "\n<p>The number of bytes that can be read from <em>buffer</em>.</p>\n"
    - id: dictionary
      type: System.Xml.IXmlDictionary
      description: "\n<p>The <xref href=\"System.Xml.XmlDictionary\" data-throw-if-not-resolved=\"false\"></xref> to use.</p>\n"
    - id: quotas
      type: System.Xml.XmlDictionaryReaderQuotas
      description: "\n<p>The <xref href=\"System.Xml.XmlDictionaryReaderQuotas\" data-throw-if-not-resolved=\"false\"></xref> to apply.</p>\n"
    - id: session
      type: System.Xml.XmlBinaryReaderSession
      description: "\n<p>The <xref href=\"System.Xml.XmlBinaryReaderSession\" data-throw-if-not-resolved=\"false\"></xref> to use.</p>\n"
    return:
      type: System.Xml.XmlDictionaryReader
      description: "\n<p>An instance of <xref href=\"System.Xml.XmlDictionaryReader\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>buffer</em> is <strong>null</strong>.</p>\n"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>\n<em>offset</em> is less than zero or greater than the buffer length.</p>\n"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>\n<em>count</em> is less than zero or greater than the buffer length minus the offset.</p>\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Xml.XmlDictionaryReader.CreateBinaryReader(System.Byte(), System.Int32, System.Int32, System.Xml.IXmlDictionary, System.Xml.XmlDictionaryReaderQuotas, System.Xml.XmlBinaryReaderSession)
  name.vb: CreateBinaryReader(Byte(), Int32, Int32, IXmlDictionary, XmlDictionaryReaderQuotas, XmlBinaryReaderSession)
- uid: System.Xml.XmlDictionaryReader.CreateBinaryReader(System.Byte[],System.Int32,System.Int32,System.Xml.XmlDictionaryReaderQuotas)
  commentId: M:System.Xml.XmlDictionaryReader.CreateBinaryReader(System.Byte[],System.Int32,System.Int32,System.Xml.XmlDictionaryReaderQuotas)
  id: CreateBinaryReader(System.Byte[],System.Int32,System.Int32,System.Xml.XmlDictionaryReaderQuotas)
  parent: System.Xml.XmlDictionaryReader
  langs:
  - csharp
  - vb
  name: CreateBinaryReader(Byte[], Int32, Int32, XmlDictionaryReaderQuotas)
  fullName: System.Xml.XmlDictionaryReader.CreateBinaryReader(System.Byte[], System.Int32, System.Int32, System.Xml.XmlDictionaryReaderQuotas)
  type: Method
  source:
    remote:
      path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CreateBinaryReader
    path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
    startLine: 140
  assemblies:
  - System.Runtime.Serialization.Xml
  namespace: System.Xml
  summary: "\n<p>Creates an instance of <xref href=\"System.Xml.XmlDictionaryReader\" data-throw-if-not-resolved=\"false\"></xref> that can read .NET Binary XML Format.</p>\n"
  remarks: "\n<p>Other <xref href=\"System.Xml.XmlDictionaryReader\" data-throw-if-not-resolved=\"false\"></xref> properties are set to default values or <strong>null</strong>.</p>\n"
  example:
  - 
  syntax:
    content: public static XmlDictionaryReader CreateBinaryReader(byte[] buffer, int offset, int count, XmlDictionaryReaderQuotas quotas)
    content.vb: Public Shared Function CreateBinaryReader(buffer As Byte(), offset As Integer, count As Integer, quotas As XmlDictionaryReaderQuotas) As XmlDictionaryReader
    parameters:
    - id: buffer
      type: System.Byte[]
      description: "\n<p>The buffer from which to read.</p>\n"
    - id: offset
      type: System.Int32
      description: "\n<p>The starting position from which to read in <em>buffer</em>.</p>\n"
    - id: count
      type: System.Int32
      description: "\n<p>The number of bytes that can be read from <em>buffer</em>.</p>\n"
    - id: quotas
      type: System.Xml.XmlDictionaryReaderQuotas
      description: "\n<p>The quotas that apply to this operation.</p>\n"
    return:
      type: System.Xml.XmlDictionaryReader
      description: "\n<p>An instance of <xref href=\"System.Xml.XmlDictionaryReader\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>buffer</em> is <strong>null</strong>.</p>\n"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>\n<em>offset</em> is less than zero or greater than the buffer length.</p>\n"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>\n<em>count</em> is less than zero or greater than the buffer length minus the offset.</p>\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Xml.XmlDictionaryReader.CreateBinaryReader(System.Byte(), System.Int32, System.Int32, System.Xml.XmlDictionaryReaderQuotas)
  name.vb: CreateBinaryReader(Byte(), Int32, Int32, XmlDictionaryReaderQuotas)
- uid: System.Xml.XmlDictionaryReader.CreateBinaryReader(System.Byte[],System.Xml.XmlDictionaryReaderQuotas)
  commentId: M:System.Xml.XmlDictionaryReader.CreateBinaryReader(System.Byte[],System.Xml.XmlDictionaryReaderQuotas)
  id: CreateBinaryReader(System.Byte[],System.Xml.XmlDictionaryReaderQuotas)
  parent: System.Xml.XmlDictionaryReader
  langs:
  - csharp
  - vb
  name: CreateBinaryReader(Byte[], XmlDictionaryReaderQuotas)
  fullName: System.Xml.XmlDictionaryReader.CreateBinaryReader(System.Byte[], System.Xml.XmlDictionaryReaderQuotas)
  type: Method
  source:
    remote:
      path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CreateBinaryReader
    path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
    startLine: 141
  assemblies:
  - System.Runtime.Serialization.Xml
  namespace: System.Xml
  summary: "\n<p>Creates an instance of <xref href=\"System.Xml.XmlDictionaryReader\" data-throw-if-not-resolved=\"false\"></xref> that can read .NET Binary XML Format.</p>\n"
  remarks: "\n<p>Other <xref href=\"System.Xml.XmlDictionaryReader\" data-throw-if-not-resolved=\"false\"></xref> properties are set to default values or <strong>null</strong>.</p>\n"
  example:
  - 
  syntax:
    content: public static XmlDictionaryReader CreateBinaryReader(byte[] buffer, XmlDictionaryReaderQuotas quotas)
    content.vb: Public Shared Function CreateBinaryReader(buffer As Byte(), quotas As XmlDictionaryReaderQuotas) As XmlDictionaryReader
    parameters:
    - id: buffer
      type: System.Byte[]
      description: "\n<p>The buffer from which to read.</p>\n"
    - id: quotas
      type: System.Xml.XmlDictionaryReaderQuotas
      description: "\n<p>The quotas that apply to this operation.</p>\n"
    return:
      type: System.Xml.XmlDictionaryReader
      description: "\n<p>An instance of <xref href=\"System.Xml.XmlDictionaryReader\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>buffer</em> is <strong>null</strong>.</p>\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Xml.XmlDictionaryReader.CreateBinaryReader(System.Byte(), System.Xml.XmlDictionaryReaderQuotas)
  name.vb: CreateBinaryReader(Byte(), XmlDictionaryReaderQuotas)
- uid: System.Xml.XmlDictionaryReader.CreateBinaryReader(System.IO.Stream,System.Xml.IXmlDictionary,System.Xml.XmlDictionaryReaderQuotas)
  commentId: M:System.Xml.XmlDictionaryReader.CreateBinaryReader(System.IO.Stream,System.Xml.IXmlDictionary,System.Xml.XmlDictionaryReaderQuotas)
  id: CreateBinaryReader(System.IO.Stream,System.Xml.IXmlDictionary,System.Xml.XmlDictionaryReaderQuotas)
  parent: System.Xml.XmlDictionaryReader
  langs:
  - csharp
  - vb
  name: CreateBinaryReader(Stream, IXmlDictionary, XmlDictionaryReaderQuotas)
  fullName: System.Xml.XmlDictionaryReader.CreateBinaryReader(System.IO.Stream, System.Xml.IXmlDictionary, System.Xml.XmlDictionaryReaderQuotas)
  type: Method
  source:
    remote:
      path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CreateBinaryReader
    path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
    startLine: 142
  assemblies:
  - System.Runtime.Serialization.Xml
  namespace: System.Xml
  summary: "\n<p>Creates an instance of <xref href=\"System.Xml.XmlDictionaryReader\" data-throw-if-not-resolved=\"false\"></xref> that can read .NET Binary XML Format.</p>\n"
  remarks: "\n<p>Other <xref href=\"System.Xml.XmlDictionaryReader\" data-throw-if-not-resolved=\"false\"></xref> properties are set to default values or <strong>null</strong>.</p>\n"
  example:
  - 
  syntax:
    content: public static XmlDictionaryReader CreateBinaryReader(Stream stream, IXmlDictionary dictionary, XmlDictionaryReaderQuotas quotas)
    content.vb: Public Shared Function CreateBinaryReader(stream As Stream, dictionary As IXmlDictionary, quotas As XmlDictionaryReaderQuotas) As XmlDictionaryReader
    parameters:
    - id: stream
      type: System.IO.Stream
      description: "\n<p>The stream from which to read.</p>\n"
    - id: dictionary
      type: System.Xml.IXmlDictionary
      description: "\n<p>\n<xref href=\"System.Xml.XmlDictionary\" data-throw-if-not-resolved=\"false\"></xref> to use.</p>\n"
    - id: quotas
      type: System.Xml.XmlDictionaryReaderQuotas
      description: "\n<p>The quotas that apply to this operation.</p>\n"
    return:
      type: System.Xml.XmlDictionaryReader
      description: "\n<p>An instance of <xref href=\"System.Xml.XmlDictionaryReader\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>stream</em> or <em>quotas</em> is <strong>null</strong>.</p>\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Xml.XmlDictionaryReader.CreateBinaryReader(System.IO.Stream,System.Xml.IXmlDictionary,System.Xml.XmlDictionaryReaderQuotas,System.Xml.XmlBinaryReaderSession)
  commentId: M:System.Xml.XmlDictionaryReader.CreateBinaryReader(System.IO.Stream,System.Xml.IXmlDictionary,System.Xml.XmlDictionaryReaderQuotas,System.Xml.XmlBinaryReaderSession)
  id: CreateBinaryReader(System.IO.Stream,System.Xml.IXmlDictionary,System.Xml.XmlDictionaryReaderQuotas,System.Xml.XmlBinaryReaderSession)
  parent: System.Xml.XmlDictionaryReader
  langs:
  - csharp
  - vb
  name: CreateBinaryReader(Stream, IXmlDictionary, XmlDictionaryReaderQuotas, XmlBinaryReaderSession)
  fullName: System.Xml.XmlDictionaryReader.CreateBinaryReader(System.IO.Stream, System.Xml.IXmlDictionary, System.Xml.XmlDictionaryReaderQuotas, System.Xml.XmlBinaryReaderSession)
  type: Method
  source:
    remote:
      path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CreateBinaryReader
    path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
    startLine: 143
  assemblies:
  - System.Runtime.Serialization.Xml
  namespace: System.Xml
  summary: "\n<p>Creates an instance of <xref href=\"System.Xml.XmlDictionaryReader\" data-throw-if-not-resolved=\"false\"></xref> that can read .NET Binary XML Format.</p>\n"
  remarks: "\n<p>Other <xref href=\"System.Xml.XmlDictionaryReader\" data-throw-if-not-resolved=\"false\"></xref> properties are set to default values or <strong>null</strong>.</p>\n"
  example:
  - 
  syntax:
    content: public static XmlDictionaryReader CreateBinaryReader(Stream stream, IXmlDictionary dictionary, XmlDictionaryReaderQuotas quotas, XmlBinaryReaderSession session)
    content.vb: Public Shared Function CreateBinaryReader(stream As Stream, dictionary As IXmlDictionary, quotas As XmlDictionaryReaderQuotas, session As XmlBinaryReaderSession) As XmlDictionaryReader
    parameters:
    - id: stream
      type: System.IO.Stream
      description: "\n<p>The stream from which to read.</p>\n"
    - id: dictionary
      type: System.Xml.IXmlDictionary
      description: "\n<p>\n<xref href=\"System.Xml.XmlDictionary\" data-throw-if-not-resolved=\"false\"></xref> to use.</p>\n"
    - id: quotas
      type: System.Xml.XmlDictionaryReaderQuotas
      description: "\n<p>The quotas that apply to this operation.</p>\n"
    - id: session
      type: System.Xml.XmlBinaryReaderSession
      description: "\n<p>\n<xref href=\"System.Xml.XmlBinaryReaderSession\" data-throw-if-not-resolved=\"false\"></xref> to use.</p>\n"
    return:
      type: System.Xml.XmlDictionaryReader
      description: "\n<p>An instance of <xref href=\"System.Xml.XmlDictionaryReader\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>stream</em> is <strong>null</strong>.</p>\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Xml.XmlDictionaryReader.CreateBinaryReader(System.IO.Stream,System.Xml.XmlDictionaryReaderQuotas)
  commentId: M:System.Xml.XmlDictionaryReader.CreateBinaryReader(System.IO.Stream,System.Xml.XmlDictionaryReaderQuotas)
  id: CreateBinaryReader(System.IO.Stream,System.Xml.XmlDictionaryReaderQuotas)
  parent: System.Xml.XmlDictionaryReader
  langs:
  - csharp
  - vb
  name: CreateBinaryReader(Stream, XmlDictionaryReaderQuotas)
  fullName: System.Xml.XmlDictionaryReader.CreateBinaryReader(System.IO.Stream, System.Xml.XmlDictionaryReaderQuotas)
  type: Method
  source:
    remote:
      path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CreateBinaryReader
    path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
    startLine: 144
  assemblies:
  - System.Runtime.Serialization.Xml
  namespace: System.Xml
  summary: "\n<p>Creates an instance of <xref href=\"System.Xml.XmlDictionaryReader\" data-throw-if-not-resolved=\"false\"></xref> that can read .NET Binary XML Format.</p>\n"
  remarks: "\n<p>Other <xref href=\"System.Xml.XmlDictionaryReader\" data-throw-if-not-resolved=\"false\"></xref> properties are set to default values or <strong>null</strong>.</p>\n"
  example:
  - 
  syntax:
    content: public static XmlDictionaryReader CreateBinaryReader(Stream stream, XmlDictionaryReaderQuotas quotas)
    content.vb: Public Shared Function CreateBinaryReader(stream As Stream, quotas As XmlDictionaryReaderQuotas) As XmlDictionaryReader
    parameters:
    - id: stream
      type: System.IO.Stream
      description: "\n<p>The stream from which to read.</p>\n"
    - id: quotas
      type: System.Xml.XmlDictionaryReaderQuotas
      description: "\n<p>The quotas that apply to this operation.</p>\n"
    return:
      type: System.Xml.XmlDictionaryReader
      description: "\n<p>An instance of <xref href=\"System.Xml.XmlDictionaryReader\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>stream</em> is <strong>null</strong>.</p>\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Xml.XmlDictionaryReader.CreateDictionaryReader(System.Xml.XmlReader)
  commentId: M:System.Xml.XmlDictionaryReader.CreateDictionaryReader(System.Xml.XmlReader)
  id: CreateDictionaryReader(System.Xml.XmlReader)
  parent: System.Xml.XmlDictionaryReader
  langs:
  - csharp
  - vb
  name: CreateDictionaryReader(XmlReader)
  fullName: System.Xml.XmlDictionaryReader.CreateDictionaryReader(System.Xml.XmlReader)
  type: Method
  source:
    remote:
      path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CreateDictionaryReader
    path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
    startLine: 145
  assemblies:
  - System.Runtime.Serialization.Xml
  namespace: System.Xml
  summary: "\n<p>Creates an instance of <xref href=\"System.Xml.XmlDictionaryReader\" data-throw-if-not-resolved=\"false\"></xref> from an existing <xref href=\"System.Xml.XmlReader\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  example:
  - 
  syntax:
    content: public static XmlDictionaryReader CreateDictionaryReader(XmlReader reader)
    content.vb: Public Shared Function CreateDictionaryReader(reader As XmlReader) As XmlDictionaryReader
    parameters:
    - id: reader
      type: System.Xml.XmlReader
      description: "\n<p>An instance of <xref href=\"System.Xml.XmlReader\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
    return:
      type: System.Xml.XmlDictionaryReader
      description: "\n<p>An instance of <xref href=\"System.Xml.XmlDictionaryReader\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>reader</em> is <strong>null</strong>.</p>\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Xml.XmlDictionaryReader.CreateTextReader(System.Byte[],System.Int32,System.Int32,System.Xml.XmlDictionaryReaderQuotas)
  commentId: M:System.Xml.XmlDictionaryReader.CreateTextReader(System.Byte[],System.Int32,System.Int32,System.Xml.XmlDictionaryReaderQuotas)
  id: CreateTextReader(System.Byte[],System.Int32,System.Int32,System.Xml.XmlDictionaryReaderQuotas)
  parent: System.Xml.XmlDictionaryReader
  langs:
  - csharp
  - vb
  name: CreateTextReader(Byte[], Int32, Int32, XmlDictionaryReaderQuotas)
  fullName: System.Xml.XmlDictionaryReader.CreateTextReader(System.Byte[], System.Int32, System.Int32, System.Xml.XmlDictionaryReaderQuotas)
  type: Method
  source:
    remote:
      path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CreateTextReader
    path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
    startLine: 146
  assemblies:
  - System.Runtime.Serialization.Xml
  namespace: System.Xml
  summary: "\n<p>Creates an instance of <xref href=\"System.Xml.XmlDictionaryReader\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  remarks: "\n<p>The reader created is optimized for reading UTF-8 text.</p>\n"
  example:
  - 
  syntax:
    content: public static XmlDictionaryReader CreateTextReader(byte[] buffer, int offset, int count, XmlDictionaryReaderQuotas quotas)
    content.vb: Public Shared Function CreateTextReader(buffer As Byte(), offset As Integer, count As Integer, quotas As XmlDictionaryReaderQuotas) As XmlDictionaryReader
    parameters:
    - id: buffer
      type: System.Byte[]
      description: "\n<p>The buffer from which to read.</p>\n"
    - id: offset
      type: System.Int32
      description: "\n<p>The starting position from which to read in <em>buffer</em>.</p>\n"
    - id: count
      type: System.Int32
      description: "\n<p>The number of bytes that can be read from <em>buffer</em>.</p>\n"
    - id: quotas
      type: System.Xml.XmlDictionaryReaderQuotas
      description: "\n<p>The quotas applied to the reader.</p>\n"
    return:
      type: System.Xml.XmlDictionaryReader
      description: "\n<p>An instance of <xref href=\"System.Xml.XmlDictionaryReader\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Xml.XmlDictionaryReader.CreateTextReader(System.Byte(), System.Int32, System.Int32, System.Xml.XmlDictionaryReaderQuotas)
  name.vb: CreateTextReader(Byte(), Int32, Int32, XmlDictionaryReaderQuotas)
- uid: System.Xml.XmlDictionaryReader.CreateTextReader(System.Byte[],System.Xml.XmlDictionaryReaderQuotas)
  commentId: M:System.Xml.XmlDictionaryReader.CreateTextReader(System.Byte[],System.Xml.XmlDictionaryReaderQuotas)
  id: CreateTextReader(System.Byte[],System.Xml.XmlDictionaryReaderQuotas)
  parent: System.Xml.XmlDictionaryReader
  langs:
  - csharp
  - vb
  name: CreateTextReader(Byte[], XmlDictionaryReaderQuotas)
  fullName: System.Xml.XmlDictionaryReader.CreateTextReader(System.Byte[], System.Xml.XmlDictionaryReaderQuotas)
  type: Method
  source:
    remote:
      path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CreateTextReader
    path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
    startLine: 147
  assemblies:
  - System.Runtime.Serialization.Xml
  namespace: System.Xml
  summary: "\n<p>Creates an instance of <xref href=\"System.Xml.XmlDictionaryReader\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  remarks: "\n<p>The reader created is optimized for reading UTF-8 text.</p>\n"
  example:
  - 
  syntax:
    content: public static XmlDictionaryReader CreateTextReader(byte[] buffer, XmlDictionaryReaderQuotas quotas)
    content.vb: Public Shared Function CreateTextReader(buffer As Byte(), quotas As XmlDictionaryReaderQuotas) As XmlDictionaryReader
    parameters:
    - id: buffer
      type: System.Byte[]
      description: "\n<p>The buffer from which to read.</p>\n"
    - id: quotas
      type: System.Xml.XmlDictionaryReaderQuotas
      description: "\n<p>The quotas applied to the reader.</p>\n"
    return:
      type: System.Xml.XmlDictionaryReader
      description: "\n<p>An instance of <xref href=\"System.Xml.XmlDictionaryReader\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>buffer</em> is <strong>null</strong>.</p>\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Xml.XmlDictionaryReader.CreateTextReader(System.Byte(), System.Xml.XmlDictionaryReaderQuotas)
  name.vb: CreateTextReader(Byte(), XmlDictionaryReaderQuotas)
- uid: System.Xml.XmlDictionaryReader.CreateTextReader(System.IO.Stream,System.Text.Encoding,System.Xml.XmlDictionaryReaderQuotas,System.Xml.OnXmlDictionaryReaderClose)
  commentId: M:System.Xml.XmlDictionaryReader.CreateTextReader(System.IO.Stream,System.Text.Encoding,System.Xml.XmlDictionaryReaderQuotas,System.Xml.OnXmlDictionaryReaderClose)
  id: CreateTextReader(System.IO.Stream,System.Text.Encoding,System.Xml.XmlDictionaryReaderQuotas,System.Xml.OnXmlDictionaryReaderClose)
  parent: System.Xml.XmlDictionaryReader
  langs:
  - csharp
  - vb
  name: CreateTextReader(Stream, Encoding, XmlDictionaryReaderQuotas, OnXmlDictionaryReaderClose)
  fullName: System.Xml.XmlDictionaryReader.CreateTextReader(System.IO.Stream, System.Text.Encoding, System.Xml.XmlDictionaryReaderQuotas, System.Xml.OnXmlDictionaryReaderClose)
  type: Method
  source:
    remote:
      path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CreateTextReader
    path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
    startLine: 148
  assemblies:
  - System.Runtime.Serialization.Xml
  namespace: System.Xml
  summary: "\n<p>Creates an instance of <xref href=\"System.Xml.XmlDictionaryReader\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  remarks: "\n<p>The reader created is optimized for reading UTF-8 text.</p>\n"
  example:
  - 
  syntax:
    content: public static XmlDictionaryReader CreateTextReader(Stream stream, Encoding encoding, XmlDictionaryReaderQuotas quotas, OnXmlDictionaryReaderClose onClose)
    content.vb: Public Shared Function CreateTextReader(stream As Stream, encoding As Encoding, quotas As XmlDictionaryReaderQuotas, onClose As OnXmlDictionaryReaderClose) As XmlDictionaryReader
    parameters:
    - id: stream
      type: System.IO.Stream
      description: "\n<p>The stream from which to read.</p>\n"
    - id: encoding
      type: System.Text.Encoding
      description: "\n<p>The <xref href=\"System.Text.Encoding\" data-throw-if-not-resolved=\"false\"></xref> object that specifies the encoding properties to apply.</p>\n"
    - id: quotas
      type: System.Xml.XmlDictionaryReaderQuotas
      description: "\n<p>The <xref href=\"System.Xml.XmlDictionaryReaderQuotas\" data-throw-if-not-resolved=\"false\"></xref> to apply.</p>\n"
    - id: onClose
      type: System.Xml.OnXmlDictionaryReaderClose
      description: "\n<p>The delegate to be called when the reader is closed.</p>\n"
    return:
      type: System.Xml.XmlDictionaryReader
      description: "\n<p>An instance of <xref href=\"System.Xml.XmlDictionaryReader\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Xml.XmlDictionaryReader.CreateTextReader(System.IO.Stream,System.Xml.XmlDictionaryReaderQuotas)
  commentId: M:System.Xml.XmlDictionaryReader.CreateTextReader(System.IO.Stream,System.Xml.XmlDictionaryReaderQuotas)
  id: CreateTextReader(System.IO.Stream,System.Xml.XmlDictionaryReaderQuotas)
  parent: System.Xml.XmlDictionaryReader
  langs:
  - csharp
  - vb
  name: CreateTextReader(Stream, XmlDictionaryReaderQuotas)
  fullName: System.Xml.XmlDictionaryReader.CreateTextReader(System.IO.Stream, System.Xml.XmlDictionaryReaderQuotas)
  type: Method
  source:
    remote:
      path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CreateTextReader
    path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
    startLine: 149
  assemblies:
  - System.Runtime.Serialization.Xml
  namespace: System.Xml
  summary: "\n<p>Creates an instance of <xref href=\"System.Xml.XmlDictionaryReader\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  remarks: "\n<p>The reader created is optimized for reading UTF-8 text.</p>\n"
  example:
  - 
  syntax:
    content: public static XmlDictionaryReader CreateTextReader(Stream stream, XmlDictionaryReaderQuotas quotas)
    content.vb: Public Shared Function CreateTextReader(stream As Stream, quotas As XmlDictionaryReaderQuotas) As XmlDictionaryReader
    parameters:
    - id: stream
      type: System.IO.Stream
      description: "\n<p>The stream from which to read.</p>\n"
    - id: quotas
      type: System.Xml.XmlDictionaryReaderQuotas
      description: "\n<p>The quotas applied to the reader.</p>\n"
    return:
      type: System.Xml.XmlDictionaryReader
      description: "\n<p>An instance of <xref href=\"System.Xml.XmlDictionaryReader\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Xml.XmlDictionaryReader.EndCanonicalization
  commentId: M:System.Xml.XmlDictionaryReader.EndCanonicalization
  id: EndCanonicalization
  parent: System.Xml.XmlDictionaryReader
  langs:
  - csharp
  - vb
  name: EndCanonicalization()
  fullName: System.Xml.XmlDictionaryReader.EndCanonicalization()
  type: Method
  source:
    remote:
      path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: EndCanonicalization
    path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
    startLine: 150
  assemblies:
  - System.Runtime.Serialization.Xml
  namespace: System.Xml
  summary: "\n<p>This method is not yet implemented.</p>\n"
  example:
  - 
  syntax:
    content: public virtual void EndCanonicalization()
    content.vb: Public Overridable Sub
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "\n<p>Always.</p>\n"
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Xml.XmlDictionaryReader.GetAttribute(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)
  commentId: M:System.Xml.XmlDictionaryReader.GetAttribute(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)
  id: GetAttribute(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)
  parent: System.Xml.XmlDictionaryReader
  langs:
  - csharp
  - vb
  name: GetAttribute(XmlDictionaryString, XmlDictionaryString)
  fullName: System.Xml.XmlDictionaryReader.GetAttribute(System.Xml.XmlDictionaryString, System.Xml.XmlDictionaryString)
  type: Method
  source:
    remote:
      path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetAttribute
    path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
    startLine: 151
  assemblies:
  - System.Runtime.Serialization.Xml
  namespace: System.Xml
  summary: "\n<p>When overridden in a derived class, gets the value of an attribute.</p>\n"
  example:
  - 
  syntax:
    content: public virtual string GetAttribute(XmlDictionaryString localName, XmlDictionaryString namespaceUri)
    content.vb: Public Overridable Function GetAttribute(localName As XmlDictionaryString, namespaceUri As XmlDictionaryString) As String
    parameters:
    - id: localName
      type: System.Xml.XmlDictionaryString
      description: "\n<p>An <xref href=\"System.Xml.XmlDictionaryString\" data-throw-if-not-resolved=\"false\"></xref> that represents the local name of the attribute.</p>\n"
    - id: namespaceUri
      type: System.Xml.XmlDictionaryString
      description: "\n<p>An <xref href=\"System.Xml.XmlDictionaryString\" data-throw-if-not-resolved=\"false\"></xref> that represents the namespace of the attribute.</p>\n"
    return:
      type: System.String
      description: "\n<p>The value of the attribute.</p>\n"
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Xml.XmlDictionaryReader.IndexOfLocalName(System.String[],System.String)
  commentId: M:System.Xml.XmlDictionaryReader.IndexOfLocalName(System.String[],System.String)
  id: IndexOfLocalName(System.String[],System.String)
  parent: System.Xml.XmlDictionaryReader
  langs:
  - csharp
  - vb
  name: IndexOfLocalName(String[], String)
  fullName: System.Xml.XmlDictionaryReader.IndexOfLocalName(System.String[], System.String)
  type: Method
  source:
    remote:
      path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IndexOfLocalName
    path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
    startLine: 152
  assemblies:
  - System.Runtime.Serialization.Xml
  namespace: System.Xml
  summary: "\n<p>Gets the index of the local name of the current node within an array of names.</p>\n"
  remarks: "\n<p>\n<em>localNames</em> is an array of strings, and <em>namespaceUri</em> is a string.</p>\n"
  example:
  - 
  syntax:
    content: public virtual int IndexOfLocalName(string[] localNames, string namespaceUri)
    content.vb: Public Overridable Function IndexOfLocalName(localNames As String(), namespaceUri As String) As Integer
    parameters:
    - id: localNames
      type: System.String[]
      description: "\n<p>The string array of local names to be searched.</p>\n"
    - id: namespaceUri
      type: System.String
      description: "\n<p>The namespace of current node.</p>\n"
    return:
      type: System.Int32
      description: "\n<p>The index of the local name of the current node within an array of names.</p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>localNames</em> or any of the names in the array is <strong>null</strong>.</p>\n"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>namespaceUri</em> is <strong>null</strong>.</p>\n"
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: System.Xml.XmlDictionaryReader.IndexOfLocalName(System.String(), System.String)
  name.vb: IndexOfLocalName(String(), String)
- uid: System.Xml.XmlDictionaryReader.IndexOfLocalName(System.Xml.XmlDictionaryString[],System.Xml.XmlDictionaryString)
  commentId: M:System.Xml.XmlDictionaryReader.IndexOfLocalName(System.Xml.XmlDictionaryString[],System.Xml.XmlDictionaryString)
  id: IndexOfLocalName(System.Xml.XmlDictionaryString[],System.Xml.XmlDictionaryString)
  parent: System.Xml.XmlDictionaryReader
  langs:
  - csharp
  - vb
  name: IndexOfLocalName(XmlDictionaryString[], XmlDictionaryString)
  fullName: System.Xml.XmlDictionaryReader.IndexOfLocalName(System.Xml.XmlDictionaryString[], System.Xml.XmlDictionaryString)
  type: Method
  source:
    remote:
      path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IndexOfLocalName
    path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
    startLine: 153
  assemblies:
  - System.Runtime.Serialization.Xml
  namespace: System.Xml
  summary: "\n<p>Gets the index of the local name of the current node within an array of names.</p>\n"
  remarks: "\n<p>\n<em>localNames</em> is an array of <xref href=\"System.Xml.XmlDictionaryString\" data-throw-if-not-resolved=\"false\"></xref>, and <em>namespaceUri</em> is an <xref href=\"System.Xml.XmlDictionaryString\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  example:
  - 
  syntax:
    content: public virtual int IndexOfLocalName(XmlDictionaryString[] localNames, XmlDictionaryString namespaceUri)
    content.vb: Public Overridable Function IndexOfLocalName(localNames As XmlDictionaryString(), namespaceUri As XmlDictionaryString) As Integer
    parameters:
    - id: localNames
      type: System.Xml.XmlDictionaryString[]
      description: "\n<p>The <xref href=\"System.Xml.XmlDictionaryString\" data-throw-if-not-resolved=\"false\"></xref> array of local names to be searched.</p>\n"
    - id: namespaceUri
      type: System.Xml.XmlDictionaryString
      description: "\n<p>The namespace of current node.</p>\n"
    return:
      type: System.Int32
      description: "\n<p>The index of the local name of the current node within an array of names.</p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>localNames</em> or any of the names in the array is <strong>null</strong>.</p>\n"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>namespaceUri</em> is <strong>null</strong>.</p>\n"
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: System.Xml.XmlDictionaryReader.IndexOfLocalName(System.Xml.XmlDictionaryString(), System.Xml.XmlDictionaryString)
  name.vb: IndexOfLocalName(XmlDictionaryString(), XmlDictionaryString)
- uid: System.Xml.XmlDictionaryReader.IsLocalName(System.String)
  commentId: M:System.Xml.XmlDictionaryReader.IsLocalName(System.String)
  id: IsLocalName(System.String)
  parent: System.Xml.XmlDictionaryReader
  langs:
  - csharp
  - vb
  name: IsLocalName(String)
  fullName: System.Xml.XmlDictionaryReader.IsLocalName(System.String)
  type: Method
  source:
    remote:
      path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IsLocalName
    path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
    startLine: 154
  assemblies:
  - System.Runtime.Serialization.Xml
  namespace: System.Xml
  summary: "\n<p>Checks whether the parameter, <em>localName</em>, is the local name of the current node.</p>\n"
  example:
  - 
  syntax:
    content: public virtual bool IsLocalName(string localName)
    content.vb: Public Overridable Function IsLocalName(localName As String) As Boolean
    parameters:
    - id: localName
      type: System.String
      description: "\n<p>The local name of the current node.</p>\n"
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if <em>localName</em> matches local name of the current node; otherwise <strong>false</strong>.</p>\n"
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Xml.XmlDictionaryReader.IsLocalName(System.Xml.XmlDictionaryString)
  commentId: M:System.Xml.XmlDictionaryReader.IsLocalName(System.Xml.XmlDictionaryString)
  id: IsLocalName(System.Xml.XmlDictionaryString)
  parent: System.Xml.XmlDictionaryReader
  langs:
  - csharp
  - vb
  name: IsLocalName(XmlDictionaryString)
  fullName: System.Xml.XmlDictionaryReader.IsLocalName(System.Xml.XmlDictionaryString)
  type: Method
  source:
    remote:
      path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IsLocalName
    path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
    startLine: 155
  assemblies:
  - System.Runtime.Serialization.Xml
  namespace: System.Xml
  summary: "\n<p>Checks whether the parameter, <em>localName</em>, is the local name of the current node.</p>\n"
  example:
  - 
  syntax:
    content: public virtual bool IsLocalName(XmlDictionaryString localName)
    content.vb: Public Overridable Function IsLocalName(localName As XmlDictionaryString) As Boolean
    parameters:
    - id: localName
      type: System.Xml.XmlDictionaryString
      description: "\n<p>An <xref href=\"System.Xml.XmlDictionaryString\" data-throw-if-not-resolved=\"false\"></xref> that represents the local name of the current node.</p>\n"
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if <em>localName</em> matches local name of the current node; otherwise <strong>false</strong>.</p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>localName</em> is <strong>null</strong>.</p>\n"
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Xml.XmlDictionaryReader.IsNamespaceUri(System.String)
  commentId: M:System.Xml.XmlDictionaryReader.IsNamespaceUri(System.String)
  id: IsNamespaceUri(System.String)
  parent: System.Xml.XmlDictionaryReader
  langs:
  - csharp
  - vb
  name: IsNamespaceUri(String)
  fullName: System.Xml.XmlDictionaryReader.IsNamespaceUri(System.String)
  type: Method
  source:
    remote:
      path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IsNamespaceUri
    path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
    startLine: 156
  assemblies:
  - System.Runtime.Serialization.Xml
  namespace: System.Xml
  summary: "\n<p>Checks whether the parameter, <em>namespaceUri</em>, is the namespace of the current node.</p>\n"
  example:
  - 
  syntax:
    content: public virtual bool IsNamespaceUri(string namespaceUri)
    content.vb: Public Overridable Function IsNamespaceUri(namespaceUri As String) As Boolean
    parameters:
    - id: namespaceUri
      type: System.String
      description: "\n<p>The namespace of current node.</p>\n"
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if <em>namespaceUri</em> matches namespace of the current node; otherwise <strong>false</strong>.</p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>namespaceUri</em> is <strong>null</strong>.</p>\n"
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Xml.XmlDictionaryReader.IsNamespaceUri(System.Xml.XmlDictionaryString)
  commentId: M:System.Xml.XmlDictionaryReader.IsNamespaceUri(System.Xml.XmlDictionaryString)
  id: IsNamespaceUri(System.Xml.XmlDictionaryString)
  parent: System.Xml.XmlDictionaryReader
  langs:
  - csharp
  - vb
  name: IsNamespaceUri(XmlDictionaryString)
  fullName: System.Xml.XmlDictionaryReader.IsNamespaceUri(System.Xml.XmlDictionaryString)
  type: Method
  source:
    remote:
      path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IsNamespaceUri
    path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
    startLine: 157
  assemblies:
  - System.Runtime.Serialization.Xml
  namespace: System.Xml
  summary: "\n<p>Checks whether the parameter, <em>namespaceUri</em>, is the namespace of the current node.</p>\n"
  example:
  - 
  syntax:
    content: public virtual bool IsNamespaceUri(XmlDictionaryString namespaceUri)
    content.vb: Public Overridable Function IsNamespaceUri(namespaceUri As XmlDictionaryString) As Boolean
    parameters:
    - id: namespaceUri
      type: System.Xml.XmlDictionaryString
      description: "\n<p>Namespace of current node.</p>\n"
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if <em>namespaceUri</em> matches namespace of the current node; otherwise <strong>false</strong>.</p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>namespaceUri</em> is <strong>null</strong>.</p>\n"
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Xml.XmlDictionaryReader.IsStartArray(System.Type@)
  commentId: M:System.Xml.XmlDictionaryReader.IsStartArray(System.Type@)
  id: IsStartArray(System.Type@)
  parent: System.Xml.XmlDictionaryReader
  langs:
  - csharp
  - vb
  name: IsStartArray(out Type)
  fullName: System.Xml.XmlDictionaryReader.IsStartArray(out System.Type)
  type: Method
  source:
    remote:
      path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IsStartArray
    path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
    startLine: 158
  assemblies:
  - System.Runtime.Serialization.Xml
  namespace: System.Xml
  summary: "\n<p>Checks whether the reader is positioned at the start of an array. This class returns <strong>false</strong>, but derived classes that have the concept of arrays might return <strong>true</strong>.</p>\n"
  example:
  - 
  syntax:
    content: public virtual bool IsStartArray(out Type type)
    content.vb: Public Overridable Function IsStartArray(ByRef type As Type) As Boolean
    parameters:
    - id: type
      type: System.Type
      description: "\n<p>Type of the node, if a valid node; otherwise <strong>null</strong>.</p>\n"
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if the reader is positioned at the start of an array node; otherwise <strong>false</strong>.</p>\n"
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: System.Xml.XmlDictionaryReader.IsStartArray(ByRef System.Type)
  name.vb: IsStartArray(ByRef Type)
- uid: System.Xml.XmlDictionaryReader.IsStartElement(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)
  commentId: M:System.Xml.XmlDictionaryReader.IsStartElement(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)
  id: IsStartElement(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)
  parent: System.Xml.XmlDictionaryReader
  langs:
  - csharp
  - vb
  name: IsStartElement(XmlDictionaryString, XmlDictionaryString)
  fullName: System.Xml.XmlDictionaryReader.IsStartElement(System.Xml.XmlDictionaryString, System.Xml.XmlDictionaryString)
  type: Method
  source:
    remote:
      path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IsStartElement
    path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
    startLine: 159
  assemblies:
  - System.Runtime.Serialization.Xml
  namespace: System.Xml
  summary: "\n<p>Tests whether the first tag is a start tag or empty element tag and if the local name and namespace URI match those of the current node.</p>\n"
  example:
  - 
  syntax:
    content: public virtual bool IsStartElement(XmlDictionaryString localName, XmlDictionaryString namespaceUri)
    content.vb: Public Overridable Function IsStartElement(localName As XmlDictionaryString, namespaceUri As XmlDictionaryString) As Boolean
    parameters:
    - id: localName
      type: System.Xml.XmlDictionaryString
      description: "\n<p>An <xref href=\"System.Xml.XmlDictionaryString\" data-throw-if-not-resolved=\"false\"></xref> that represents the local name of the attribute.</p>\n"
    - id: namespaceUri
      type: System.Xml.XmlDictionaryString
      description: "\n<p>An <xref href=\"System.Xml.XmlDictionaryString\" data-throw-if-not-resolved=\"false\"></xref> that represents the namespace of the attribute.</p>\n"
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if the first tag in the array is a start tag or empty element tag and matches <em>localName</em> and <em>namespaceUri</em>; otherwise <strong>false</strong>.</p>\n"
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Xml.XmlDictionaryReader.IsTextNode(System.Xml.XmlNodeType)
  commentId: M:System.Xml.XmlDictionaryReader.IsTextNode(System.Xml.XmlNodeType)
  id: IsTextNode(System.Xml.XmlNodeType)
  parent: System.Xml.XmlDictionaryReader
  langs:
  - csharp
  - vb
  name: IsTextNode(XmlNodeType)
  fullName: System.Xml.XmlDictionaryReader.IsTextNode(System.Xml.XmlNodeType)
  type: Method
  source:
    remote:
      path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IsTextNode
    path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
    startLine: 160
  assemblies:
  - System.Runtime.Serialization.Xml
  namespace: System.Xml
  summary: "\n<p>Tests whether the current node is a text node.</p>\n"
  example:
  - 
  syntax:
    content: protected bool IsTextNode(XmlNodeType nodeType)
    content.vb: Protected Function IsTextNode(nodeType As XmlNodeType) As Boolean
    parameters:
    - id: nodeType
      type: System.Xml.XmlNodeType
      description: "\n<p>Type of the node being tested.</p>\n"
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if the node type is <xref href=\"System.Xml.XmlNodeType.Text\" data-throw-if-not-resolved=\"false\"></xref>, <xref href=\"System.Xml.XmlNodeType.Whitespace\" data-throw-if-not-resolved=\"false\"></xref>, <xref href=\"System.Xml.XmlNodeType.SignificantWhitespace\" data-throw-if-not-resolved=\"false\"></xref>, <xref href=\"System.Xml.XmlNodeType.CDATA\" data-throw-if-not-resolved=\"false\"></xref>, or <xref href=\"System.Xml.XmlNodeType.Attribute\" data-throw-if-not-resolved=\"false\"></xref>; otherwise <strong>false</strong>.</p>\n"
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: System.Xml.XmlDictionaryReader.MoveToStartElement
  commentId: M:System.Xml.XmlDictionaryReader.MoveToStartElement
  id: MoveToStartElement
  parent: System.Xml.XmlDictionaryReader
  langs:
  - csharp
  - vb
  name: MoveToStartElement()
  fullName: System.Xml.XmlDictionaryReader.MoveToStartElement()
  type: Method
  source:
    remote:
      path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: MoveToStartElement
    path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
    startLine: 161
  assemblies:
  - System.Runtime.Serialization.Xml
  namespace: System.Xml
  summary: "\n<p>Tests whether the current content node is a start element or an empty element.</p>\n"
  example:
  - 
  syntax:
    content: public virtual void MoveToStartElement()
    content.vb: Public Overridable Sub MoveToStartElement
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Xml.XmlDictionaryReader.MoveToStartElement(System.String)
  commentId: M:System.Xml.XmlDictionaryReader.MoveToStartElement(System.String)
  id: MoveToStartElement(System.String)
  parent: System.Xml.XmlDictionaryReader
  langs:
  - csharp
  - vb
  name: MoveToStartElement(String)
  fullName: System.Xml.XmlDictionaryReader.MoveToStartElement(System.String)
  type: Method
  source:
    remote:
      path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: MoveToStartElement
    path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
    startLine: 162
  assemblies:
  - System.Runtime.Serialization.Xml
  namespace: System.Xml
  summary: "\n<p>Tests whether the current content node is a start element or an empty element and if the <xref href=\"System.Xml.XmlReader.Name\" data-throw-if-not-resolved=\"false\"></xref> property of the element matches the given argument.</p>\n"
  example:
  - 
  syntax:
    content: public virtual void MoveToStartElement(string name)
    content.vb: Public Overridable Sub MoveToStartElement(name As String)
    parameters:
    - id: name
      type: System.String
      description: "\n<p>The <xref href=\"System.Xml.XmlReader.Name\" data-throw-if-not-resolved=\"false\"></xref> property of the element.</p>\n"
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Xml.XmlDictionaryReader.MoveToStartElement(System.String,System.String)
  commentId: M:System.Xml.XmlDictionaryReader.MoveToStartElement(System.String,System.String)
  id: MoveToStartElement(System.String,System.String)
  parent: System.Xml.XmlDictionaryReader
  langs:
  - csharp
  - vb
  name: MoveToStartElement(String, String)
  fullName: System.Xml.XmlDictionaryReader.MoveToStartElement(System.String, System.String)
  type: Method
  source:
    remote:
      path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: MoveToStartElement
    path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
    startLine: 163
  assemblies:
  - System.Runtime.Serialization.Xml
  namespace: System.Xml
  summary: "\n<p>Tests whether the current content node is a start element or an empty element and if the <xref href=\"System.Xml.XmlReader.LocalName\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"System.Xml.XmlReader.NamespaceURI\" data-throw-if-not-resolved=\"false\"></xref> properties of the element matches the given arguments.</p>\n"
  example:
  - 
  syntax:
    content: public virtual void MoveToStartElement(string localName, string namespaceUri)
    content.vb: Public Overridable Sub MoveToStartElement(localName As String, namespaceUri As String)
    parameters:
    - id: localName
      type: System.String
      description: "\n<p>The local name of the element.</p>\n"
    - id: namespaceUri
      type: System.String
      description: "\n<p>The namespace URI of the element.</p>\n"
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Xml.XmlDictionaryReader.MoveToStartElement(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)
  commentId: M:System.Xml.XmlDictionaryReader.MoveToStartElement(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)
  id: MoveToStartElement(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)
  parent: System.Xml.XmlDictionaryReader
  langs:
  - csharp
  - vb
  name: MoveToStartElement(XmlDictionaryString, XmlDictionaryString)
  fullName: System.Xml.XmlDictionaryReader.MoveToStartElement(System.Xml.XmlDictionaryString, System.Xml.XmlDictionaryString)
  type: Method
  source:
    remote:
      path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: MoveToStartElement
    path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
    startLine: 164
  assemblies:
  - System.Runtime.Serialization.Xml
  namespace: System.Xml
  summary: "\n<p>Tests whether the current content node is a start element or an empty element and if the <xref href=\"System.Xml.XmlReader.LocalName\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"System.Xml.XmlReader.NamespaceURI\" data-throw-if-not-resolved=\"false\"></xref> properties of the element matches the given argument.</p>\n"
  example:
  - 
  syntax:
    content: public virtual void MoveToStartElement(XmlDictionaryString localName, XmlDictionaryString namespaceUri)
    content.vb: Public Overridable Sub MoveToStartElement(localName As XmlDictionaryString, namespaceUri As XmlDictionaryString)
    parameters:
    - id: localName
      type: System.Xml.XmlDictionaryString
      description: "\n<p>The local name of the element.</p>\n"
    - id: namespaceUri
      type: System.Xml.XmlDictionaryString
      description: "\n<p>The namespace URI of the element.</p>\n"
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Xml.XmlDictionaryReader.ReadArray(System.String,System.String,System.Boolean[],System.Int32,System.Int32)
  commentId: M:System.Xml.XmlDictionaryReader.ReadArray(System.String,System.String,System.Boolean[],System.Int32,System.Int32)
  id: ReadArray(System.String,System.String,System.Boolean[],System.Int32,System.Int32)
  parent: System.Xml.XmlDictionaryReader
  langs:
  - csharp
  - vb
  name: ReadArray(String, String, Boolean[], Int32, Int32)
  fullName: System.Xml.XmlDictionaryReader.ReadArray(System.String, System.String, System.Boolean[], System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ReadArray
    path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
    startLine: 165
  assemblies:
  - System.Runtime.Serialization.Xml
  namespace: System.Xml
  summary: "\n<p>Reads repeated occurrences of <xref href=\"System.Boolean\" data-throw-if-not-resolved=\"false\"></xref> nodes into a typed array.</p>\n"
  example:
  - 
  syntax:
    content: public virtual int ReadArray(string localName, string namespaceUri, bool[] array, int offset, int count)
    content.vb: Public Overridable Function ReadArray(localName As String, namespaceUri As String, array As Boolean(), offset As Integer, count As Integer) As Integer
    parameters:
    - id: localName
      type: System.String
      description: "\n<p>The local name of the element.</p>\n"
    - id: namespaceUri
      type: System.String
      description: "\n<p>The local name of the element.</p>\n"
    - id: array
      type: System.Boolean[]
      description: "\n<p>The array into which the nodes are put.</p>\n"
    - id: offset
      type: System.Int32
      description: "\n<p>The starting index in the array.</p>\n"
    - id: count
      type: System.Int32
      description: "\n<p>The number of nodes to put in the array.</p>\n"
    return:
      type: System.Int32
      description: "\n<p>The number of nodes put in the array.</p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>array</em> is <strong>null</strong>.</p>\n"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>\n<em>offset</em> is < 0 or > <em>array</em> length.</p>\n"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>\n<em>count</em> is < 0 or > <em>array</em> length minus <em>offset</em>.</p>\n"
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: System.Xml.XmlDictionaryReader.ReadArray(System.String, System.String, System.Boolean(), System.Int32, System.Int32)
  name.vb: ReadArray(String, String, Boolean(), Int32, Int32)
- uid: System.Xml.XmlDictionaryReader.ReadArray(System.String,System.String,System.DateTime[],System.Int32,System.Int32)
  commentId: M:System.Xml.XmlDictionaryReader.ReadArray(System.String,System.String,System.DateTime[],System.Int32,System.Int32)
  id: ReadArray(System.String,System.String,System.DateTime[],System.Int32,System.Int32)
  parent: System.Xml.XmlDictionaryReader
  langs:
  - csharp
  - vb
  name: ReadArray(String, String, DateTime[], Int32, Int32)
  fullName: System.Xml.XmlDictionaryReader.ReadArray(System.String, System.String, System.DateTime[], System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ReadArray
    path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
    startLine: 166
  assemblies:
  - System.Runtime.Serialization.Xml
  namespace: System.Xml
  summary: "\n<p>Reads repeated occurrences of <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> nodes into a typed array.</p>\n"
  example:
  - 
  syntax:
    content: public virtual int ReadArray(string localName, string namespaceUri, DateTime[] array, int offset, int count)
    content.vb: Public Overridable Function ReadArray(localName As String, namespaceUri As String, array As Date(), offset As Integer, count As Integer) As Integer
    parameters:
    - id: localName
      type: System.String
      description: "\n<p>The local name of the element.</p>\n"
    - id: namespaceUri
      type: System.String
      description: "\n<p>The namespace URI of the element.</p>\n"
    - id: array
      type: System.DateTime[]
      description: "\n<p>The array into which the nodes are put.</p>\n"
    - id: offset
      type: System.Int32
      description: "\n<p>The starting index in the array.</p>\n"
    - id: count
      type: System.Int32
      description: "\n<p>The number of nodes to put in the array.</p>\n"
    return:
      type: System.Int32
      description: "\n<p>The number of nodes put in the array.</p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>array</em> is <strong>null</strong>.</p>\n"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>\n<em>offset</em> is < 0 or > <em>array</em> length.</p>\n"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>\n<em>count</em> is < 0 or > <em>array</em> length minus <em>offset</em>.</p>\n"
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: System.Xml.XmlDictionaryReader.ReadArray(System.String, System.String, System.DateTime(), System.Int32, System.Int32)
  name.vb: ReadArray(String, String, DateTime(), Int32, Int32)
- uid: System.Xml.XmlDictionaryReader.ReadArray(System.String,System.String,System.Decimal[],System.Int32,System.Int32)
  commentId: M:System.Xml.XmlDictionaryReader.ReadArray(System.String,System.String,System.Decimal[],System.Int32,System.Int32)
  id: ReadArray(System.String,System.String,System.Decimal[],System.Int32,System.Int32)
  parent: System.Xml.XmlDictionaryReader
  langs:
  - csharp
  - vb
  name: ReadArray(String, String, Decimal[], Int32, Int32)
  fullName: System.Xml.XmlDictionaryReader.ReadArray(System.String, System.String, System.Decimal[], System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ReadArray
    path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
    startLine: 167
  assemblies:
  - System.Runtime.Serialization.Xml
  namespace: System.Xml
  summary: "\n<p>Reads repeated occurrences of <xref href=\"System.Decimal\" data-throw-if-not-resolved=\"false\"></xref> nodes into a typed array.</p>\n"
  example:
  - 
  syntax:
    content: public virtual int ReadArray(string localName, string namespaceUri, decimal[] array, int offset, int count)
    content.vb: Public Overridable Function ReadArray(localName As String, namespaceUri As String, array As Decimal(), offset As Integer, count As Integer) As Integer
    parameters:
    - id: localName
      type: System.String
      description: "\n<p>The local name of the element.</p>\n"
    - id: namespaceUri
      type: System.String
      description: "\n<p>The namespace URI of the element.</p>\n"
    - id: array
      type: System.Decimal[]
      description: "\n<p>The array into which the nodes are put.</p>\n"
    - id: offset
      type: System.Int32
      description: "\n<p>The starting index in the array.</p>\n"
    - id: count
      type: System.Int32
      description: "\n<p>The number of nodes to put in the array.</p>\n"
    return:
      type: System.Int32
      description: "\n<p>The number of nodes put in the array.</p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>array</em> is <strong>null</strong>.</p>\n"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>\n<em>offset</em> is < 0 or > <em>array</em> length.</p>\n"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>\n<em>count</em> is < 0 or > <em>array</em> length minus <em>offset</em>.</p>\n"
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: System.Xml.XmlDictionaryReader.ReadArray(System.String, System.String, System.Decimal(), System.Int32, System.Int32)
  name.vb: ReadArray(String, String, Decimal(), Int32, Int32)
- uid: System.Xml.XmlDictionaryReader.ReadArray(System.String,System.String,System.Double[],System.Int32,System.Int32)
  commentId: M:System.Xml.XmlDictionaryReader.ReadArray(System.String,System.String,System.Double[],System.Int32,System.Int32)
  id: ReadArray(System.String,System.String,System.Double[],System.Int32,System.Int32)
  parent: System.Xml.XmlDictionaryReader
  langs:
  - csharp
  - vb
  name: ReadArray(String, String, Double[], Int32, Int32)
  fullName: System.Xml.XmlDictionaryReader.ReadArray(System.String, System.String, System.Double[], System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ReadArray
    path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
    startLine: 168
  assemblies:
  - System.Runtime.Serialization.Xml
  namespace: System.Xml
  summary: "\n<p>Reads repeated occurrences of <xref href=\"System.Double\" data-throw-if-not-resolved=\"false\"></xref> nodes into a typed array.</p>\n"
  example:
  - 
  syntax:
    content: public virtual int ReadArray(string localName, string namespaceUri, double[] array, int offset, int count)
    content.vb: Public Overridable Function ReadArray(localName As String, namespaceUri As String, array As Double(), offset As Integer, count As Integer) As Integer
    parameters:
    - id: localName
      type: System.String
      description: "\n<p>The local name of the element.</p>\n"
    - id: namespaceUri
      type: System.String
      description: "\n<p>The namespace URI of the element.</p>\n"
    - id: array
      type: System.Double[]
      description: "\n<p>The array into which the nodes are put.</p>\n"
    - id: offset
      type: System.Int32
      description: "\n<p>The starting index in the array.</p>\n"
    - id: count
      type: System.Int32
      description: "\n<p>The number of nodes to put in the array.</p>\n"
    return:
      type: System.Int32
      description: "\n<p>The number of nodes put in the array.</p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>array</em> is <strong>null</strong>.</p>\n"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>\n<em>offset</em> is < 0 or > <em>array</em> length.</p>\n"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>\n<em>count</em> is < 0 or > <em>array</em> length minus <em>offset</em>.</p>\n"
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: System.Xml.XmlDictionaryReader.ReadArray(System.String, System.String, System.Double(), System.Int32, System.Int32)
  name.vb: ReadArray(String, String, Double(), Int32, Int32)
- uid: System.Xml.XmlDictionaryReader.ReadArray(System.String,System.String,System.Guid[],System.Int32,System.Int32)
  commentId: M:System.Xml.XmlDictionaryReader.ReadArray(System.String,System.String,System.Guid[],System.Int32,System.Int32)
  id: ReadArray(System.String,System.String,System.Guid[],System.Int32,System.Int32)
  parent: System.Xml.XmlDictionaryReader
  langs:
  - csharp
  - vb
  name: ReadArray(String, String, Guid[], Int32, Int32)
  fullName: System.Xml.XmlDictionaryReader.ReadArray(System.String, System.String, System.Guid[], System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ReadArray
    path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
    startLine: 169
  assemblies:
  - System.Runtime.Serialization.Xml
  namespace: System.Xml
  summary: "\n<p>Reads repeated occurrences of <xref href=\"System.Guid\" data-throw-if-not-resolved=\"false\"></xref> nodes into a typed array.</p>\n"
  example:
  - 
  syntax:
    content: public virtual int ReadArray(string localName, string namespaceUri, Guid[] array, int offset, int count)
    content.vb: Public Overridable Function ReadArray(localName As String, namespaceUri As String, array As Guid(), offset As Integer, count As Integer) As Integer
    parameters:
    - id: localName
      type: System.String
      description: "\n<p>The local name of the element.</p>\n"
    - id: namespaceUri
      type: System.String
      description: "\n<p>The namespace URI of the element.</p>\n"
    - id: array
      type: System.Guid[]
      description: "\n<p>The array into which the nodes are put.</p>\n"
    - id: offset
      type: System.Int32
      description: "\n<p>The starting index in the array.</p>\n"
    - id: count
      type: System.Int32
      description: "\n<p>The number of nodes to put in the array.</p>\n"
    return:
      type: System.Int32
      description: "\n<p>The number of nodes put in the array.</p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>array</em> is <strong>null</strong>.</p>\n"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>\n<em>offset</em> is < 0 or > <em>array</em> length.</p>\n"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>\n<em>count</em> is < 0 or > <em>array</em> length minus <em>offset</em>.</p>\n"
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: System.Xml.XmlDictionaryReader.ReadArray(System.String, System.String, System.Guid(), System.Int32, System.Int32)
  name.vb: ReadArray(String, String, Guid(), Int32, Int32)
- uid: System.Xml.XmlDictionaryReader.ReadArray(System.String,System.String,System.Int16[],System.Int32,System.Int32)
  commentId: M:System.Xml.XmlDictionaryReader.ReadArray(System.String,System.String,System.Int16[],System.Int32,System.Int32)
  id: ReadArray(System.String,System.String,System.Int16[],System.Int32,System.Int32)
  parent: System.Xml.XmlDictionaryReader
  langs:
  - csharp
  - vb
  name: ReadArray(String, String, Int16[], Int32, Int32)
  fullName: System.Xml.XmlDictionaryReader.ReadArray(System.String, System.String, System.Int16[], System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ReadArray
    path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
    startLine: 170
  assemblies:
  - System.Runtime.Serialization.Xml
  namespace: System.Xml
  summary: "\n<p>Reads repeated occurrences of <strong>short</strong> integers into a typed array.</p>\n"
  example:
  - 
  syntax:
    content: public virtual int ReadArray(string localName, string namespaceUri, short[] array, int offset, int count)
    content.vb: Public Overridable Function ReadArray(localName As String, namespaceUri As String, array As Short(), offset As Integer, count As Integer) As Integer
    parameters:
    - id: localName
      type: System.String
      description: "\n<p>The local name of the element.</p>\n"
    - id: namespaceUri
      type: System.String
      description: "\n<p>The namespace URI of the element.</p>\n"
    - id: array
      type: System.Int16[]
      description: "\n<p>The array into which the integers are put.</p>\n"
    - id: offset
      type: System.Int32
      description: "\n<p>The starting index in the array.</p>\n"
    - id: count
      type: System.Int32
      description: "\n<p>The number of integers to put in the array.</p>\n"
    return:
      type: System.Int32
      description: "\n<p>The number of integers put in the array.</p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>array</em> is <strong>null</strong>.</p>\n"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>\n<em>offset</em> is < 0 or > <em>array</em> length.</p>\n"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>\n<em>count</em> is < 0 or > <em>array</em> length minus <em>offset</em>.</p>\n"
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: System.Xml.XmlDictionaryReader.ReadArray(System.String, System.String, System.Int16(), System.Int32, System.Int32)
  name.vb: ReadArray(String, String, Int16(), Int32, Int32)
- uid: System.Xml.XmlDictionaryReader.ReadArray(System.String,System.String,System.Int32[],System.Int32,System.Int32)
  commentId: M:System.Xml.XmlDictionaryReader.ReadArray(System.String,System.String,System.Int32[],System.Int32,System.Int32)
  id: ReadArray(System.String,System.String,System.Int32[],System.Int32,System.Int32)
  parent: System.Xml.XmlDictionaryReader
  langs:
  - csharp
  - vb
  name: ReadArray(String, String, Int32[], Int32, Int32)
  fullName: System.Xml.XmlDictionaryReader.ReadArray(System.String, System.String, System.Int32[], System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ReadArray
    path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
    startLine: 171
  assemblies:
  - System.Runtime.Serialization.Xml
  namespace: System.Xml
  summary: "\n<p>Reads repeated occurrences of integers into a typed array.</p>\n"
  example:
  - 
  syntax:
    content: public virtual int ReadArray(string localName, string namespaceUri, int[] array, int offset, int count)
    content.vb: Public Overridable Function ReadArray(localName As String, namespaceUri As String, array As Integer(), offset As Integer, count As Integer) As Integer
    parameters:
    - id: localName
      type: System.String
      description: "\n<p>The local name of the element.</p>\n"
    - id: namespaceUri
      type: System.String
      description: "\n<p>The namespace URI of the element.</p>\n"
    - id: array
      type: System.Int32[]
      description: "\n<p>The array into which the integers are put.</p>\n"
    - id: offset
      type: System.Int32
      description: "\n<p>The starting index in the array.</p>\n"
    - id: count
      type: System.Int32
      description: "\n<p>The number of integers to put in the array.</p>\n"
    return:
      type: System.Int32
      description: "\n<p>The number of integers put in the array.</p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>array</em> is <strong>null</strong>.</p>\n"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>\n<em>offset</em> is < 0 or > <em>array</em> length.</p>\n"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>\n<em>count</em> is < 0 or > <em>array</em> length minus <em>offset</em>.</p>\n"
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: System.Xml.XmlDictionaryReader.ReadArray(System.String, System.String, System.Int32(), System.Int32, System.Int32)
  name.vb: ReadArray(String, String, Int32(), Int32, Int32)
- uid: System.Xml.XmlDictionaryReader.ReadArray(System.String,System.String,System.Int64[],System.Int32,System.Int32)
  commentId: M:System.Xml.XmlDictionaryReader.ReadArray(System.String,System.String,System.Int64[],System.Int32,System.Int32)
  id: ReadArray(System.String,System.String,System.Int64[],System.Int32,System.Int32)
  parent: System.Xml.XmlDictionaryReader
  langs:
  - csharp
  - vb
  name: ReadArray(String, String, Int64[], Int32, Int32)
  fullName: System.Xml.XmlDictionaryReader.ReadArray(System.String, System.String, System.Int64[], System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ReadArray
    path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
    startLine: 172
  assemblies:
  - System.Runtime.Serialization.Xml
  namespace: System.Xml
  summary: "\n<p>Reads repeated occurrences of <strong>long</strong> integers into a typed array.</p>\n"
  example:
  - 
  syntax:
    content: public virtual int ReadArray(string localName, string namespaceUri, long[] array, int offset, int count)
    content.vb: Public Overridable Function ReadArray(localName As String, namespaceUri As String, array As Long(), offset As Integer, count As Integer) As Integer
    parameters:
    - id: localName
      type: System.String
      description: "\n<p>The local name of the element.</p>\n"
    - id: namespaceUri
      type: System.String
      description: "\n<p>The namespace URI of the element.</p>\n"
    - id: array
      type: System.Int64[]
      description: "\n<p>The array into which the integers are put.</p>\n"
    - id: offset
      type: System.Int32
      description: "\n<p>The starting index in the array.</p>\n"
    - id: count
      type: System.Int32
      description: "\n<p>The number of integers to put in the array.</p>\n"
    return:
      type: System.Int32
      description: "\n<p>The number of integers put in the array.</p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>array</em> is <strong>null</strong>.</p>\n"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>\n<em>offset</em> is < 0 or > <em>array</em> length.</p>\n"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>\n<em>count</em> is < 0 or > <em>array</em> length minus <em>offset</em>.</p>\n"
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: System.Xml.XmlDictionaryReader.ReadArray(System.String, System.String, System.Int64(), System.Int32, System.Int32)
  name.vb: ReadArray(String, String, Int64(), Int32, Int32)
- uid: System.Xml.XmlDictionaryReader.ReadArray(System.String,System.String,System.Single[],System.Int32,System.Int32)
  commentId: M:System.Xml.XmlDictionaryReader.ReadArray(System.String,System.String,System.Single[],System.Int32,System.Int32)
  id: ReadArray(System.String,System.String,System.Single[],System.Int32,System.Int32)
  parent: System.Xml.XmlDictionaryReader
  langs:
  - csharp
  - vb
  name: ReadArray(String, String, Single[], Int32, Int32)
  fullName: System.Xml.XmlDictionaryReader.ReadArray(System.String, System.String, System.Single[], System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ReadArray
    path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
    startLine: 173
  assemblies:
  - System.Runtime.Serialization.Xml
  namespace: System.Xml
  summary: "\n<p>Reads repeated occurrences of <strong>float</strong> numbers into a typed array.</p>\n"
  example:
  - 
  syntax:
    content: public virtual int ReadArray(string localName, string namespaceUri, float[] array, int offset, int count)
    content.vb: Public Overridable Function ReadArray(localName As String, namespaceUri As String, array As Single(), offset As Integer, count As Integer) As Integer
    parameters:
    - id: localName
      type: System.String
      description: "\n<p>The local name of the element.</p>\n"
    - id: namespaceUri
      type: System.String
      description: "\n<p>The namespace URI of the element.</p>\n"
    - id: array
      type: System.Single[]
      description: "\n<p>The array into which the float numbers are put.</p>\n"
    - id: offset
      type: System.Int32
      description: "\n<p>The starting index in the array.</p>\n"
    - id: count
      type: System.Int32
      description: "\n<p>The number of float numbers to put in the array.</p>\n"
    return:
      type: System.Int32
      description: "\n<p>The umber of float numbers put in the array.</p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>array</em> is <strong>null</strong>.</p>\n"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>\n<em>offset</em> is < 0 or > <em>array</em> length.</p>\n"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>\n<em>count</em> is < 0 or > <em>array</em> length minus <em>offset</em>.</p>\n"
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: System.Xml.XmlDictionaryReader.ReadArray(System.String, System.String, System.Single(), System.Int32, System.Int32)
  name.vb: ReadArray(String, String, Single(), Int32, Int32)
- uid: System.Xml.XmlDictionaryReader.ReadArray(System.String,System.String,System.TimeSpan[],System.Int32,System.Int32)
  commentId: M:System.Xml.XmlDictionaryReader.ReadArray(System.String,System.String,System.TimeSpan[],System.Int32,System.Int32)
  id: ReadArray(System.String,System.String,System.TimeSpan[],System.Int32,System.Int32)
  parent: System.Xml.XmlDictionaryReader
  langs:
  - csharp
  - vb
  name: ReadArray(String, String, TimeSpan[], Int32, Int32)
  fullName: System.Xml.XmlDictionaryReader.ReadArray(System.String, System.String, System.TimeSpan[], System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ReadArray
    path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
    startLine: 174
  assemblies:
  - System.Runtime.Serialization.Xml
  namespace: System.Xml
  summary: "\n<p>Reads repeated occurrences of <xref href=\"System.TimeSpan\" data-throw-if-not-resolved=\"false\"></xref> nodes into a typed array.</p>\n"
  example:
  - 
  syntax:
    content: public virtual int ReadArray(string localName, string namespaceUri, TimeSpan[] array, int offset, int count)
    content.vb: Public Overridable Function ReadArray(localName As String, namespaceUri As String, array As TimeSpan(), offset As Integer, count As Integer) As Integer
    parameters:
    - id: localName
      type: System.String
      description: "\n<p>The local name of the element.</p>\n"
    - id: namespaceUri
      type: System.String
      description: "\n<p>The namespace URI of the element.</p>\n"
    - id: array
      type: System.TimeSpan[]
      description: "\n<p>The array into which the nodes are put.</p>\n"
    - id: offset
      type: System.Int32
      description: "\n<p>The starting index in the array.</p>\n"
    - id: count
      type: System.Int32
      description: "\n<p>The number of nodes to put in the array.</p>\n"
    return:
      type: System.Int32
      description: "\n<p>The number of nodes put in the array.</p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>array</em> is <strong>null</strong>.</p>\n"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>\n<em>offset</em> is < 0 or > <em>array</em> length.</p>\n"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>\n<em>count</em> is < 0 or > <em>array</em> length minus <em>offset</em>.</p>\n"
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: System.Xml.XmlDictionaryReader.ReadArray(System.String, System.String, System.TimeSpan(), System.Int32, System.Int32)
  name.vb: ReadArray(String, String, TimeSpan(), Int32, Int32)
- uid: System.Xml.XmlDictionaryReader.ReadArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Boolean[],System.Int32,System.Int32)
  commentId: M:System.Xml.XmlDictionaryReader.ReadArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Boolean[],System.Int32,System.Int32)
  id: ReadArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Boolean[],System.Int32,System.Int32)
  parent: System.Xml.XmlDictionaryReader
  langs:
  - csharp
  - vb
  name: ReadArray(XmlDictionaryString, XmlDictionaryString, Boolean[], Int32, Int32)
  fullName: System.Xml.XmlDictionaryReader.ReadArray(System.Xml.XmlDictionaryString, System.Xml.XmlDictionaryString, System.Boolean[], System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ReadArray
    path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
    startLine: 175
  assemblies:
  - System.Runtime.Serialization.Xml
  namespace: System.Xml
  summary: "\n<p>Reads repeated occurrences of <xref href=\"System.Boolean\" data-throw-if-not-resolved=\"false\"></xref> nodes into a typed array.</p>\n"
  example:
  - 
  syntax:
    content: public virtual int ReadArray(XmlDictionaryString localName, XmlDictionaryString namespaceUri, bool[] array, int offset, int count)
    content.vb: Public Overridable Function ReadArray(localName As XmlDictionaryString, namespaceUri As XmlDictionaryString, array As Boolean(), offset As Integer, count As Integer) As Integer
    parameters:
    - id: localName
      type: System.Xml.XmlDictionaryString
      description: "\n<p>The local name of the element.</p>\n"
    - id: namespaceUri
      type: System.Xml.XmlDictionaryString
      description: "\n<p>The namespace URI of the element.</p>\n"
    - id: array
      type: System.Boolean[]
      description: "\n<p>The array into which the nodes are put.</p>\n"
    - id: offset
      type: System.Int32
      description: "\n<p>The starting index in the array.</p>\n"
    - id: count
      type: System.Int32
      description: "\n<p>The number of nodes to put in the array.</p>\n"
    return:
      type: System.Int32
      description: "\n<p>The number of nodes put in the array.</p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>array</em> is <strong>null</strong>.</p>\n"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>\n<em>offset</em> is < 0 or > <em>array</em> length.</p>\n"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>\n<em>count</em> is < 0 or > <em>array</em> length minus <em>offset</em>.</p>\n"
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: System.Xml.XmlDictionaryReader.ReadArray(System.Xml.XmlDictionaryString, System.Xml.XmlDictionaryString, System.Boolean(), System.Int32, System.Int32)
  name.vb: ReadArray(XmlDictionaryString, XmlDictionaryString, Boolean(), Int32, Int32)
- uid: System.Xml.XmlDictionaryReader.ReadArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.DateTime[],System.Int32,System.Int32)
  commentId: M:System.Xml.XmlDictionaryReader.ReadArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.DateTime[],System.Int32,System.Int32)
  id: ReadArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.DateTime[],System.Int32,System.Int32)
  parent: System.Xml.XmlDictionaryReader
  langs:
  - csharp
  - vb
  name: ReadArray(XmlDictionaryString, XmlDictionaryString, DateTime[], Int32, Int32)
  fullName: System.Xml.XmlDictionaryReader.ReadArray(System.Xml.XmlDictionaryString, System.Xml.XmlDictionaryString, System.DateTime[], System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ReadArray
    path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
    startLine: 176
  assemblies:
  - System.Runtime.Serialization.Xml
  namespace: System.Xml
  summary: "\n<p>Reads repeated occurrences of <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> nodes into a typed array.</p>\n"
  example:
  - 
  syntax:
    content: public virtual int ReadArray(XmlDictionaryString localName, XmlDictionaryString namespaceUri, DateTime[] array, int offset, int count)
    content.vb: Public Overridable Function ReadArray(localName As XmlDictionaryString, namespaceUri As XmlDictionaryString, array As Date(), offset As Integer, count As Integer) As Integer
    parameters:
    - id: localName
      type: System.Xml.XmlDictionaryString
      description: "\n<p>The local name of the element.</p>\n"
    - id: namespaceUri
      type: System.Xml.XmlDictionaryString
      description: "\n<p>The namespace URI of the element.</p>\n"
    - id: array
      type: System.DateTime[]
      description: "\n<p>The array into which the nodes are put.</p>\n"
    - id: offset
      type: System.Int32
      description: "\n<p>The starting index in the array.</p>\n"
    - id: count
      type: System.Int32
      description: "\n<p>The number of nodes to put in the array.</p>\n"
    return:
      type: System.Int32
      description: "\n<p>The number of nodes put in the array.</p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>array</em> is <strong>null</strong>.</p>\n"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>\n<em>offset</em> is < 0 or > <em>array</em> length.</p>\n"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>\n<em>count</em> is < 0 or > <em>array</em> length minus <em>offset</em>.</p>\n"
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: System.Xml.XmlDictionaryReader.ReadArray(System.Xml.XmlDictionaryString, System.Xml.XmlDictionaryString, System.DateTime(), System.Int32, System.Int32)
  name.vb: ReadArray(XmlDictionaryString, XmlDictionaryString, DateTime(), Int32, Int32)
- uid: System.Xml.XmlDictionaryReader.ReadArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Decimal[],System.Int32,System.Int32)
  commentId: M:System.Xml.XmlDictionaryReader.ReadArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Decimal[],System.Int32,System.Int32)
  id: ReadArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Decimal[],System.Int32,System.Int32)
  parent: System.Xml.XmlDictionaryReader
  langs:
  - csharp
  - vb
  name: ReadArray(XmlDictionaryString, XmlDictionaryString, Decimal[], Int32, Int32)
  fullName: System.Xml.XmlDictionaryReader.ReadArray(System.Xml.XmlDictionaryString, System.Xml.XmlDictionaryString, System.Decimal[], System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ReadArray
    path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
    startLine: 177
  assemblies:
  - System.Runtime.Serialization.Xml
  namespace: System.Xml
  summary: "\n<p>Reads repeated occurrences of <xref href=\"System.Decimal\" data-throw-if-not-resolved=\"false\"></xref> nodes into a typed array.</p>\n"
  example:
  - 
  syntax:
    content: public virtual int ReadArray(XmlDictionaryString localName, XmlDictionaryString namespaceUri, decimal[] array, int offset, int count)
    content.vb: Public Overridable Function ReadArray(localName As XmlDictionaryString, namespaceUri As XmlDictionaryString, array As Decimal(), offset As Integer, count As Integer) As Integer
    parameters:
    - id: localName
      type: System.Xml.XmlDictionaryString
      description: "\n<p>The local name of the element.</p>\n"
    - id: namespaceUri
      type: System.Xml.XmlDictionaryString
      description: "\n<p>The namespace URI of the element.</p>\n"
    - id: array
      type: System.Decimal[]
      description: "\n<p>The array into which the nodes are put.</p>\n"
    - id: offset
      type: System.Int32
      description: "\n<p>The starting index in the array.</p>\n"
    - id: count
      type: System.Int32
      description: "\n<p>The number of nodes to put in the array.</p>\n"
    return:
      type: System.Int32
      description: "\n<p>The number of nodes put in the array.</p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>array</em> is <strong>null</strong>.</p>\n"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>\n<em>offset</em> is < 0 or > <em>array</em> length.</p>\n"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>\n<em>count</em> is < 0 or > <em>array</em> length minus <em>offset</em>.</p>\n"
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: System.Xml.XmlDictionaryReader.ReadArray(System.Xml.XmlDictionaryString, System.Xml.XmlDictionaryString, System.Decimal(), System.Int32, System.Int32)
  name.vb: ReadArray(XmlDictionaryString, XmlDictionaryString, Decimal(), Int32, Int32)
- uid: System.Xml.XmlDictionaryReader.ReadArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Double[],System.Int32,System.Int32)
  commentId: M:System.Xml.XmlDictionaryReader.ReadArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Double[],System.Int32,System.Int32)
  id: ReadArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Double[],System.Int32,System.Int32)
  parent: System.Xml.XmlDictionaryReader
  langs:
  - csharp
  - vb
  name: ReadArray(XmlDictionaryString, XmlDictionaryString, Double[], Int32, Int32)
  fullName: System.Xml.XmlDictionaryReader.ReadArray(System.Xml.XmlDictionaryString, System.Xml.XmlDictionaryString, System.Double[], System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ReadArray
    path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
    startLine: 178
  assemblies:
  - System.Runtime.Serialization.Xml
  namespace: System.Xml
  summary: "\n<p>Reads repeated occurrences of <xref href=\"System.Double\" data-throw-if-not-resolved=\"false\"></xref> nodes type into a typed array.</p>\n"
  example:
  - 
  syntax:
    content: public virtual int ReadArray(XmlDictionaryString localName, XmlDictionaryString namespaceUri, double[] array, int offset, int count)
    content.vb: Public Overridable Function ReadArray(localName As XmlDictionaryString, namespaceUri As XmlDictionaryString, array As Double(), offset As Integer, count As Integer) As Integer
    parameters:
    - id: localName
      type: System.Xml.XmlDictionaryString
      description: "\n<p>The local name of the element.</p>\n"
    - id: namespaceUri
      type: System.Xml.XmlDictionaryString
      description: "\n<p>The namespace URI of the element.</p>\n"
    - id: array
      type: System.Double[]
      description: "\n<p>The array into which the nodes are put.</p>\n"
    - id: offset
      type: System.Int32
      description: "\n<p>The starting index in the array.</p>\n"
    - id: count
      type: System.Int32
      description: "\n<p>The number of nodes to put in the array.</p>\n"
    return:
      type: System.Int32
      description: "\n<p>The number of nodes put in the array.</p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>array</em> is <strong>null</strong>.</p>\n"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>\n<em>offset</em> is < 0 or > <em>array</em> length.</p>\n"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>\n<em>count</em> is < 0 or > <em>array</em> length minus <em>offset</em>.</p>\n"
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: System.Xml.XmlDictionaryReader.ReadArray(System.Xml.XmlDictionaryString, System.Xml.XmlDictionaryString, System.Double(), System.Int32, System.Int32)
  name.vb: ReadArray(XmlDictionaryString, XmlDictionaryString, Double(), Int32, Int32)
- uid: System.Xml.XmlDictionaryReader.ReadArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Guid[],System.Int32,System.Int32)
  commentId: M:System.Xml.XmlDictionaryReader.ReadArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Guid[],System.Int32,System.Int32)
  id: ReadArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Guid[],System.Int32,System.Int32)
  parent: System.Xml.XmlDictionaryReader
  langs:
  - csharp
  - vb
  name: ReadArray(XmlDictionaryString, XmlDictionaryString, Guid[], Int32, Int32)
  fullName: System.Xml.XmlDictionaryReader.ReadArray(System.Xml.XmlDictionaryString, System.Xml.XmlDictionaryString, System.Guid[], System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ReadArray
    path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
    startLine: 179
  assemblies:
  - System.Runtime.Serialization.Xml
  namespace: System.Xml
  summary: "\n<p>Reads repeated occurrences of <xref href=\"System.Guid\" data-throw-if-not-resolved=\"false\"></xref> nodes into a typed array.</p>\n"
  example:
  - 
  syntax:
    content: public virtual int ReadArray(XmlDictionaryString localName, XmlDictionaryString namespaceUri, Guid[] array, int offset, int count)
    content.vb: Public Overridable Function ReadArray(localName As XmlDictionaryString, namespaceUri As XmlDictionaryString, array As Guid(), offset As Integer, count As Integer) As Integer
    parameters:
    - id: localName
      type: System.Xml.XmlDictionaryString
      description: "\n<p>The local name of the element.</p>\n"
    - id: namespaceUri
      type: System.Xml.XmlDictionaryString
      description: "\n<p>The namespace URI of the element.</p>\n"
    - id: array
      type: System.Guid[]
      description: "\n<p>The array into which the nodes are put.</p>\n"
    - id: offset
      type: System.Int32
      description: "\n<p>The starting index in the array.</p>\n"
    - id: count
      type: System.Int32
      description: "\n<p>The number of nodes to put in the array.</p>\n"
    return:
      type: System.Int32
      description: "\n<p>The number of nodes put in the array.</p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>array</em> is <strong>null</strong>.</p>\n"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>\n<em>offset</em> is < 0 or > <em>array</em> length.</p>\n"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>\n<em>count</em> is < 0 or > <em>array</em> length minus <em>offset</em>.</p>\n"
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: System.Xml.XmlDictionaryReader.ReadArray(System.Xml.XmlDictionaryString, System.Xml.XmlDictionaryString, System.Guid(), System.Int32, System.Int32)
  name.vb: ReadArray(XmlDictionaryString, XmlDictionaryString, Guid(), Int32, Int32)
- uid: System.Xml.XmlDictionaryReader.ReadArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Int16[],System.Int32,System.Int32)
  commentId: M:System.Xml.XmlDictionaryReader.ReadArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Int16[],System.Int32,System.Int32)
  id: ReadArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Int16[],System.Int32,System.Int32)
  parent: System.Xml.XmlDictionaryReader
  langs:
  - csharp
  - vb
  name: ReadArray(XmlDictionaryString, XmlDictionaryString, Int16[], Int32, Int32)
  fullName: System.Xml.XmlDictionaryReader.ReadArray(System.Xml.XmlDictionaryString, System.Xml.XmlDictionaryString, System.Int16[], System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ReadArray
    path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
    startLine: 180
  assemblies:
  - System.Runtime.Serialization.Xml
  namespace: System.Xml
  summary: "\n<p>Reads repeated occurrences of <strong>short</strong> integers into a typed array.</p>\n"
  example:
  - 
  syntax:
    content: public virtual int ReadArray(XmlDictionaryString localName, XmlDictionaryString namespaceUri, short[] array, int offset, int count)
    content.vb: Public Overridable Function ReadArray(localName As XmlDictionaryString, namespaceUri As XmlDictionaryString, array As Short(), offset As Integer, count As Integer) As Integer
    parameters:
    - id: localName
      type: System.Xml.XmlDictionaryString
      description: "\n<p>The local name of the element.</p>\n"
    - id: namespaceUri
      type: System.Xml.XmlDictionaryString
      description: "\n<p>The namespace URI of the element.</p>\n"
    - id: array
      type: System.Int16[]
      description: "\n<p>The array into which the integers are put.</p>\n"
    - id: offset
      type: System.Int32
      description: "\n<p>The starting index in the array.</p>\n"
    - id: count
      type: System.Int32
      description: "\n<p>The number of integers to put in the array.</p>\n"
    return:
      type: System.Int32
      description: "\n<p>The number of integers put in the array.</p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>array</em> is <strong>null</strong>.</p>\n"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>\n<em>offset</em> is < 0 or > <em>array</em> length.</p>\n"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>\n<em>count</em> is < 0 or > <em>array</em> length minus <em>offset</em>.</p>\n"
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: System.Xml.XmlDictionaryReader.ReadArray(System.Xml.XmlDictionaryString, System.Xml.XmlDictionaryString, System.Int16(), System.Int32, System.Int32)
  name.vb: ReadArray(XmlDictionaryString, XmlDictionaryString, Int16(), Int32, Int32)
- uid: System.Xml.XmlDictionaryReader.ReadArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Int32[],System.Int32,System.Int32)
  commentId: M:System.Xml.XmlDictionaryReader.ReadArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Int32[],System.Int32,System.Int32)
  id: ReadArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Int32[],System.Int32,System.Int32)
  parent: System.Xml.XmlDictionaryReader
  langs:
  - csharp
  - vb
  name: ReadArray(XmlDictionaryString, XmlDictionaryString, Int32[], Int32, Int32)
  fullName: System.Xml.XmlDictionaryReader.ReadArray(System.Xml.XmlDictionaryString, System.Xml.XmlDictionaryString, System.Int32[], System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ReadArray
    path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
    startLine: 181
  assemblies:
  - System.Runtime.Serialization.Xml
  namespace: System.Xml
  summary: "\n<p>Reads repeated occurrences of integers into a typed array.</p>\n"
  example:
  - 
  syntax:
    content: public virtual int ReadArray(XmlDictionaryString localName, XmlDictionaryString namespaceUri, int[] array, int offset, int count)
    content.vb: Public Overridable Function ReadArray(localName As XmlDictionaryString, namespaceUri As XmlDictionaryString, array As Integer(), offset As Integer, count As Integer) As Integer
    parameters:
    - id: localName
      type: System.Xml.XmlDictionaryString
      description: "\n<p>The local name of the element.</p>\n"
    - id: namespaceUri
      type: System.Xml.XmlDictionaryString
      description: "\n<p>The namespace URI of the element.</p>\n"
    - id: array
      type: System.Int32[]
      description: "\n<p>The array into which the integers are put.</p>\n"
    - id: offset
      type: System.Int32
      description: "\n<p>The starting index in the array.</p>\n"
    - id: count
      type: System.Int32
      description: "\n<p>The number of integers to put in the array.</p>\n"
    return:
      type: System.Int32
      description: "\n<p>The number of integers put in the array.</p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>array</em> is <strong>null</strong>.</p>\n"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>\n<em>offset</em> is < 0 or > <em>array</em> length.</p>\n"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>\n<em>count</em> is < 0 or > <em>array</em> length minus <em>offset</em>.</p>\n"
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: System.Xml.XmlDictionaryReader.ReadArray(System.Xml.XmlDictionaryString, System.Xml.XmlDictionaryString, System.Int32(), System.Int32, System.Int32)
  name.vb: ReadArray(XmlDictionaryString, XmlDictionaryString, Int32(), Int32, Int32)
- uid: System.Xml.XmlDictionaryReader.ReadArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Int64[],System.Int32,System.Int32)
  commentId: M:System.Xml.XmlDictionaryReader.ReadArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Int64[],System.Int32,System.Int32)
  id: ReadArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Int64[],System.Int32,System.Int32)
  parent: System.Xml.XmlDictionaryReader
  langs:
  - csharp
  - vb
  name: ReadArray(XmlDictionaryString, XmlDictionaryString, Int64[], Int32, Int32)
  fullName: System.Xml.XmlDictionaryReader.ReadArray(System.Xml.XmlDictionaryString, System.Xml.XmlDictionaryString, System.Int64[], System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ReadArray
    path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
    startLine: 182
  assemblies:
  - System.Runtime.Serialization.Xml
  namespace: System.Xml
  summary: "\n<p>Reads repeated occurrences of <strong>long</strong> integers into a typed array.</p>\n"
  example:
  - 
  syntax:
    content: public virtual int ReadArray(XmlDictionaryString localName, XmlDictionaryString namespaceUri, long[] array, int offset, int count)
    content.vb: Public Overridable Function ReadArray(localName As XmlDictionaryString, namespaceUri As XmlDictionaryString, array As Long(), offset As Integer, count As Integer) As Integer
    parameters:
    - id: localName
      type: System.Xml.XmlDictionaryString
      description: "\n<p>The local name of the element.</p>\n"
    - id: namespaceUri
      type: System.Xml.XmlDictionaryString
      description: "\n<p>The namespace URI of the element.</p>\n"
    - id: array
      type: System.Int64[]
      description: "\n<p>The array into which the integers are put.</p>\n"
    - id: offset
      type: System.Int32
      description: "\n<p>The starting index in the array.</p>\n"
    - id: count
      type: System.Int32
      description: "\n<p>The number of integers to put in the array.</p>\n"
    return:
      type: System.Int32
      description: "\n<p>The number of integers put in the array.</p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>array</em> is <strong>null</strong>.</p>\n"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>\n<em>offset</em> is < 0 or > <em>array</em> length.</p>\n"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>\n<em>count</em> is < 0 or > <em>array</em> length minus <em>offset</em>.</p>\n"
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: System.Xml.XmlDictionaryReader.ReadArray(System.Xml.XmlDictionaryString, System.Xml.XmlDictionaryString, System.Int64(), System.Int32, System.Int32)
  name.vb: ReadArray(XmlDictionaryString, XmlDictionaryString, Int64(), Int32, Int32)
- uid: System.Xml.XmlDictionaryReader.ReadArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Single[],System.Int32,System.Int32)
  commentId: M:System.Xml.XmlDictionaryReader.ReadArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Single[],System.Int32,System.Int32)
  id: ReadArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Single[],System.Int32,System.Int32)
  parent: System.Xml.XmlDictionaryReader
  langs:
  - csharp
  - vb
  name: ReadArray(XmlDictionaryString, XmlDictionaryString, Single[], Int32, Int32)
  fullName: System.Xml.XmlDictionaryReader.ReadArray(System.Xml.XmlDictionaryString, System.Xml.XmlDictionaryString, System.Single[], System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ReadArray
    path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
    startLine: 183
  assemblies:
  - System.Runtime.Serialization.Xml
  namespace: System.Xml
  summary: "\n<p>Reads repeated occurrences of <strong>float</strong> numbers into a typed array.</p>\n"
  example:
  - 
  syntax:
    content: public virtual int ReadArray(XmlDictionaryString localName, XmlDictionaryString namespaceUri, float[] array, int offset, int count)
    content.vb: Public Overridable Function ReadArray(localName As XmlDictionaryString, namespaceUri As XmlDictionaryString, array As Single(), offset As Integer, count As Integer) As Integer
    parameters:
    - id: localName
      type: System.Xml.XmlDictionaryString
      description: "\n<p>The local name of the element.</p>\n"
    - id: namespaceUri
      type: System.Xml.XmlDictionaryString
      description: "\n<p>The namespace URI of the element.</p>\n"
    - id: array
      type: System.Single[]
      description: "\n<p>The array into which the float numbers are put.</p>\n"
    - id: offset
      type: System.Int32
      description: "\n<p>The starting index in the array.</p>\n"
    - id: count
      type: System.Int32
      description: "\n<p>The number of float numbers to put in the array.</p>\n"
    return:
      type: System.Int32
      description: "\n<p>The number of float numbers put in the array.</p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>array</em> is <strong>null</strong>.</p>\n"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>\n<em>offset</em> is < 0 or > <em>array</em> length.</p>\n"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>\n<em>count</em> is < 0 or > <em>array</em> length minus <em>offset</em>.</p>\n"
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: System.Xml.XmlDictionaryReader.ReadArray(System.Xml.XmlDictionaryString, System.Xml.XmlDictionaryString, System.Single(), System.Int32, System.Int32)
  name.vb: ReadArray(XmlDictionaryString, XmlDictionaryString, Single(), Int32, Int32)
- uid: System.Xml.XmlDictionaryReader.ReadArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.TimeSpan[],System.Int32,System.Int32)
  commentId: M:System.Xml.XmlDictionaryReader.ReadArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.TimeSpan[],System.Int32,System.Int32)
  id: ReadArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.TimeSpan[],System.Int32,System.Int32)
  parent: System.Xml.XmlDictionaryReader
  langs:
  - csharp
  - vb
  name: ReadArray(XmlDictionaryString, XmlDictionaryString, TimeSpan[], Int32, Int32)
  fullName: System.Xml.XmlDictionaryReader.ReadArray(System.Xml.XmlDictionaryString, System.Xml.XmlDictionaryString, System.TimeSpan[], System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ReadArray
    path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
    startLine: 184
  assemblies:
  - System.Runtime.Serialization.Xml
  namespace: System.Xml
  summary: "\n<p>Reads repeated occurrences of <xref href=\"System.TimeSpan\" data-throw-if-not-resolved=\"false\"></xref> nodes into a typed array.</p>\n"
  example:
  - 
  syntax:
    content: public virtual int ReadArray(XmlDictionaryString localName, XmlDictionaryString namespaceUri, TimeSpan[] array, int offset, int count)
    content.vb: Public Overridable Function ReadArray(localName As XmlDictionaryString, namespaceUri As XmlDictionaryString, array As TimeSpan(), offset As Integer, count As Integer) As Integer
    parameters:
    - id: localName
      type: System.Xml.XmlDictionaryString
      description: "\n<p>The local name of the element.</p>\n"
    - id: namespaceUri
      type: System.Xml.XmlDictionaryString
      description: "\n<p>The namespace URI of the element.</p>\n"
    - id: array
      type: System.TimeSpan[]
      description: "\n<p>The array into which the nodes are put.</p>\n"
    - id: offset
      type: System.Int32
      description: "\n<p>The starting index in the array.</p>\n"
    - id: count
      type: System.Int32
      description: "\n<p>The number of nodes to put in the array.</p>\n"
    return:
      type: System.Int32
      description: "\n<p>The number of nodes put in the array.</p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>array</em> is <strong>null</strong>.</p>\n"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>\n<em>offset</em> is < 0 or > <em>array</em> length.</p>\n"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>\n<em>count</em> is < 0 or > <em>array</em> length minus <em>offset</em>.</p>\n"
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: System.Xml.XmlDictionaryReader.ReadArray(System.Xml.XmlDictionaryString, System.Xml.XmlDictionaryString, System.TimeSpan(), System.Int32, System.Int32)
  name.vb: ReadArray(XmlDictionaryString, XmlDictionaryString, TimeSpan(), Int32, Int32)
- uid: System.Xml.XmlDictionaryReader.ReadBooleanArray(System.String,System.String)
  commentId: M:System.Xml.XmlDictionaryReader.ReadBooleanArray(System.String,System.String)
  id: ReadBooleanArray(System.String,System.String)
  parent: System.Xml.XmlDictionaryReader
  langs:
  - csharp
  - vb
  name: ReadBooleanArray(String, String)
  fullName: System.Xml.XmlDictionaryReader.ReadBooleanArray(System.String, System.String)
  type: Method
  source:
    remote:
      path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ReadBooleanArray
    path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
    startLine: 185
  assemblies:
  - System.Runtime.Serialization.Xml
  namespace: System.Xml
  summary: "\n<p>Reads repeated occurrences of <xref href=\"System.Boolean\" data-throw-if-not-resolved=\"false\"></xref> nodes into a typed array.</p>\n"
  remarks: "\n<p>The buffer allocated by this read operation is limited by the MaxArrayLength quota. </p>\n"
  example:
  - 
  syntax:
    content: public virtual bool[] ReadBooleanArray(string localName, string namespaceUri)
    content.vb: Public Overridable Function ReadBooleanArray(localName As String, namespaceUri As String) As Boolean()
    parameters:
    - id: localName
      type: System.String
      description: "\n<p>The local name of the element.</p>\n"
    - id: namespaceUri
      type: System.String
      description: "\n<p>The namespace URI of the element.</p>\n"
    return:
      type: System.Boolean[]
      description: "\n<p>A <xref href=\"System.Boolean\" data-throw-if-not-resolved=\"false\"></xref> array of the <xref href=\"System.Boolean\" data-throw-if-not-resolved=\"false\"></xref> nodes.</p>\n"
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Xml.XmlDictionaryReader.ReadBooleanArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)
  commentId: M:System.Xml.XmlDictionaryReader.ReadBooleanArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)
  id: ReadBooleanArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)
  parent: System.Xml.XmlDictionaryReader
  langs:
  - csharp
  - vb
  name: ReadBooleanArray(XmlDictionaryString, XmlDictionaryString)
  fullName: System.Xml.XmlDictionaryReader.ReadBooleanArray(System.Xml.XmlDictionaryString, System.Xml.XmlDictionaryString)
  type: Method
  source:
    remote:
      path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ReadBooleanArray
    path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
    startLine: 186
  assemblies:
  - System.Runtime.Serialization.Xml
  namespace: System.Xml
  summary: "\n<p>Reads repeated occurrences of <xref href=\"System.Boolean\" data-throw-if-not-resolved=\"false\"></xref> nodes into a typed array.</p>\n"
  remarks: "\n<p>The buffer allocated by this read operation is limited by the MaxArrayLength quota.</p>\n"
  example:
  - 
  syntax:
    content: public virtual bool[] ReadBooleanArray(XmlDictionaryString localName, XmlDictionaryString namespaceUri)
    content.vb: Public Overridable Function ReadBooleanArray(localName As XmlDictionaryString, namespaceUri As XmlDictionaryString) As Boolean()
    parameters:
    - id: localName
      type: System.Xml.XmlDictionaryString
      description: "\n<p>The local name of the element.</p>\n"
    - id: namespaceUri
      type: System.Xml.XmlDictionaryString
      description: "\n<p>The namespace URI of the element.</p>\n"
    return:
      type: System.Boolean[]
      description: "\n<p>A <xref href=\"System.Boolean\" data-throw-if-not-resolved=\"false\"></xref> array of the <xref href=\"System.Boolean\" data-throw-if-not-resolved=\"false\"></xref> nodes.</p>\n"
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Xml.XmlDictionaryReader.ReadContentAs(System.Type,System.Xml.IXmlNamespaceResolver)
  commentId: M:System.Xml.XmlDictionaryReader.ReadContentAs(System.Type,System.Xml.IXmlNamespaceResolver)
  id: ReadContentAs(System.Type,System.Xml.IXmlNamespaceResolver)
  parent: System.Xml.XmlDictionaryReader
  langs:
  - csharp
  - vb
  name: ReadContentAs(Type, IXmlNamespaceResolver)
  fullName: System.Xml.XmlDictionaryReader.ReadContentAs(System.Type, System.Xml.IXmlNamespaceResolver)
  type: Method
  source:
    remote:
      path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ReadContentAs
    path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
    startLine: 187
  assemblies:
  - System.Runtime.Serialization.Xml
  namespace: System.Xml
  summary: "\n<p>Converts a node's content to a specified type.</p>\n"
  example:
  - 
  syntax:
    content: public override object ReadContentAs(Type type, IXmlNamespaceResolver namespaceResolver)
    content.vb: Public Overrides Function ReadContentAs(type As Type, namespaceResolver As IXmlNamespaceResolver) As Object
    parameters:
    - id: type
      type: System.Type
      description: "\n<p>The <xref href=\"System.Type\" data-throw-if-not-resolved=\"false\"></xref> of the value to be returned.</p>\n"
    - id: namespaceResolver
      type: System.Xml.IXmlNamespaceResolver
      description: "\n<p>An <xref href=\"System.Xml.IXmlNamespaceResolver\" data-throw-if-not-resolved=\"false\"></xref> object that is used to resolve any namespace prefixes related to type conversion. For example, this can be used when converting an <xref href=\"System.Xml.XmlQualifiedName\" data-throw-if-not-resolved=\"false\"></xref> object to an <code>xs:string</code>. This value can be a null reference.</p>\n"
    return:
      type: System.Object
      description: "\n<p>The concatenated text content or attribute value converted to the requested type.</p>\n"
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Xml.XmlDictionaryReader.ReadContentAsBase64
  commentId: M:System.Xml.XmlDictionaryReader.ReadContentAsBase64
  id: ReadContentAsBase64
  parent: System.Xml.XmlDictionaryReader
  langs:
  - csharp
  - vb
  name: ReadContentAsBase64()
  fullName: System.Xml.XmlDictionaryReader.ReadContentAsBase64()
  type: Method
  source:
    remote:
      path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ReadContentAsBase64
    path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
    startLine: 188
  assemblies:
  - System.Runtime.Serialization.Xml
  namespace: System.Xml
  summary: "\n<p>Reads the content and returns the Base64 decoded binary bytes.</p>\n"
  remarks: "\n<p>The buffer allocated by this read operation is limited by the MaxArrayLength quota.</p>\n"
  example:
  - 
  syntax:
    content: public virtual byte[] ReadContentAsBase64()
    content.vb: Public Overridable Function ReadContentAsBase64 As Byte()
    return:
      type: System.Byte[]
      description: "\n<p>A byte array that contains the Base64 decoded binary bytes.</p>\n"
  exceptions:
  - type: System.Xml.XmlException
    commentId: T:System.Xml.XmlException
    description: "\n<p>The array size is greater than the MaxArrayLength quota for this reader.</p>\n"
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Xml.XmlDictionaryReader.ReadContentAsBinHex
  commentId: M:System.Xml.XmlDictionaryReader.ReadContentAsBinHex
  id: ReadContentAsBinHex
  parent: System.Xml.XmlDictionaryReader
  langs:
  - csharp
  - vb
  name: ReadContentAsBinHex()
  fullName: System.Xml.XmlDictionaryReader.ReadContentAsBinHex()
  type: Method
  source:
    remote:
      path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ReadContentAsBinHex
    path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
    startLine: 189
  assemblies:
  - System.Runtime.Serialization.Xml
  namespace: System.Xml
  summary: "\n<p>Reads the content and returns the <strong>BinHex</strong> decoded binary bytes.</p>\n"
  remarks: "\n<p>The buffer allocated by this read operation is limited by the MaxArrayLength quota.</p>\n"
  example:
  - 
  syntax:
    content: public virtual byte[] ReadContentAsBinHex()
    content.vb: Public Overridable Function ReadContentAsBinHex As Byte()
    return:
      type: System.Byte[]
      description: "\n<p>A byte array that contains the <strong>BinHex</strong> decoded binary bytes.</p>\n"
  exceptions:
  - type: System.Xml.XmlException
    commentId: T:System.Xml.XmlException
    description: "\n<p>The array size is greater than <xref href=\"System.Int32.MaxValue\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Xml.XmlDictionaryReader.ReadContentAsBinHex(System.Int32)
  commentId: M:System.Xml.XmlDictionaryReader.ReadContentAsBinHex(System.Int32)
  id: ReadContentAsBinHex(System.Int32)
  parent: System.Xml.XmlDictionaryReader
  langs:
  - csharp
  - vb
  name: ReadContentAsBinHex(Int32)
  fullName: System.Xml.XmlDictionaryReader.ReadContentAsBinHex(System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ReadContentAsBinHex
    path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
    startLine: 190
  assemblies:
  - System.Runtime.Serialization.Xml
  namespace: System.Xml
  summary: "\n<p>Reads the content and returns the <strong>BinHex</strong> decoded binary bytes.</p>\n"
  example:
  - 
  syntax:
    content: protected byte[] ReadContentAsBinHex(int maxByteArrayContentLength)
    content.vb: Protected Function ReadContentAsBinHex(maxByteArrayContentLength As Integer) As Byte()
    parameters:
    - id: maxByteArrayContentLength
      type: System.Int32
      description: "\n<p>The maximum array length.</p>\n"
    return:
      type: System.Byte[]
      description: "\n<p>A byte array that contains the <strong>BinHex</strong> decoded binary bytes.</p>\n"
  exceptions:
  - type: System.Xml.XmlException
    commentId: T:System.Xml.XmlException
    description: "\n<p>The array size is greater than <em>maxByteArrayContentLength</em>.</p>\n"
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: System.Xml.XmlDictionaryReader.ReadContentAsChars(System.Char[],System.Int32,System.Int32)
  commentId: M:System.Xml.XmlDictionaryReader.ReadContentAsChars(System.Char[],System.Int32,System.Int32)
  id: ReadContentAsChars(System.Char[],System.Int32,System.Int32)
  parent: System.Xml.XmlDictionaryReader
  langs:
  - csharp
  - vb
  name: ReadContentAsChars(Char[], Int32, Int32)
  fullName: System.Xml.XmlDictionaryReader.ReadContentAsChars(System.Char[], System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ReadContentAsChars
    path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
    startLine: 191
  assemblies:
  - System.Runtime.Serialization.Xml
  namespace: System.Xml
  summary: "\n<p>Reads the content into a <strong>char</strong> array.</p>\n"
  example:
  - 
  syntax:
    content: public virtual int ReadContentAsChars(char[] chars, int offset, int count)
    content.vb: Public Overridable Function ReadContentAsChars(chars As Char(), offset As Integer, count As Integer) As Integer
    parameters:
    - id: chars
      type: System.Char[]
      description: "\n<p>The array into which the characters are put.</p>\n"
    - id: offset
      type: System.Int32
      description: "\n<p>The starting index in the array.</p>\n"
    - id: count
      type: System.Int32
      description: "\n<p>The number of characters to put in the array.</p>\n"
    return:
      type: System.Int32
      description: "\n<p>Number of characters read.</p>\n"
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: System.Xml.XmlDictionaryReader.ReadContentAsChars(System.Char(), System.Int32, System.Int32)
  name.vb: ReadContentAsChars(Char(), Int32, Int32)
- uid: System.Xml.XmlDictionaryReader.ReadContentAsDecimal
  commentId: M:System.Xml.XmlDictionaryReader.ReadContentAsDecimal
  id: ReadContentAsDecimal
  parent: System.Xml.XmlDictionaryReader
  langs:
  - csharp
  - vb
  name: ReadContentAsDecimal()
  fullName: System.Xml.XmlDictionaryReader.ReadContentAsDecimal()
  type: Method
  source:
    remote:
      path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ReadContentAsDecimal
    path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
    startLine: 192
  assemblies:
  - System.Runtime.Serialization.Xml
  namespace: System.Xml
  summary: "\n<p>Converts a node's content to <strong>decimal</strong>.</p>\n"
  example:
  - 
  syntax:
    content: public override decimal ReadContentAsDecimal()
    content.vb: Public Overrides Function ReadContentAsDecimal As Decimal
    return:
      type: System.Decimal
      description: "\n<p>The <strong>decimal</strong> representation of node's content.</p>\n"
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Xml.XmlDictionaryReader.ReadContentAsFloat
  commentId: M:System.Xml.XmlDictionaryReader.ReadContentAsFloat
  id: ReadContentAsFloat
  parent: System.Xml.XmlDictionaryReader
  langs:
  - csharp
  - vb
  name: ReadContentAsFloat()
  fullName: System.Xml.XmlDictionaryReader.ReadContentAsFloat()
  type: Method
  source:
    remote:
      path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ReadContentAsFloat
    path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
    startLine: 193
  assemblies:
  - System.Runtime.Serialization.Xml
  namespace: System.Xml
  summary: "\n<p>Converts a node's content to <strong>float</strong>.</p>\n"
  example:
  - 
  syntax:
    content: public override float ReadContentAsFloat()
    content.vb: Public Overrides Function ReadContentAsFloat As Single
    return:
      type: System.Single
      description: "\n<p>The <strong>float</strong> representation of node's content.</p>\n"
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Xml.XmlDictionaryReader.ReadContentAsGuid
  commentId: M:System.Xml.XmlDictionaryReader.ReadContentAsGuid
  id: ReadContentAsGuid
  parent: System.Xml.XmlDictionaryReader
  langs:
  - csharp
  - vb
  name: ReadContentAsGuid()
  fullName: System.Xml.XmlDictionaryReader.ReadContentAsGuid()
  type: Method
  source:
    remote:
      path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ReadContentAsGuid
    path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
    startLine: 194
  assemblies:
  - System.Runtime.Serialization.Xml
  namespace: System.Xml
  summary: "\n<p>Converts a node's content to <strong>guid</strong>.</p>\n"
  example:
  - 
  syntax:
    content: public virtual Guid ReadContentAsGuid()
    content.vb: Public Overridable Function ReadContentAsGuid As Guid
    return:
      type: System.Guid
      description: "\n<p>The <strong>guid</strong> representation of node's content.</p>\n"
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Xml.XmlDictionaryReader.ReadContentAsQualifiedName(System.String@,System.String@)
  commentId: M:System.Xml.XmlDictionaryReader.ReadContentAsQualifiedName(System.String@,System.String@)
  id: ReadContentAsQualifiedName(System.String@,System.String@)
  parent: System.Xml.XmlDictionaryReader
  langs:
  - csharp
  - vb
  name: ReadContentAsQualifiedName(out String, out String)
  fullName: System.Xml.XmlDictionaryReader.ReadContentAsQualifiedName(out System.String, out System.String)
  type: Method
  source:
    remote:
      path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ReadContentAsQualifiedName
    path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
    startLine: 195
  assemblies:
  - System.Runtime.Serialization.Xml
  namespace: System.Xml
  summary: "\n<p>Converts a node's content to a qualified name representation.</p>\n"
  example:
  - 
  syntax:
    content: public virtual void ReadContentAsQualifiedName(out string localName, out string namespaceUri)
    content.vb: Public Overridable Sub ReadContentAsQualifiedName(ByRef localName As String, ByRef namespaceUri As String)
    parameters:
    - id: localName
      type: System.String
      description: "\n<p>The <xref href=\"System.Xml.XmlReader.LocalName\" data-throw-if-not-resolved=\"false\"></xref> part of the qualified name (<strong>out</strong> parameter).</p>\n"
    - id: namespaceUri
      type: System.String
      description: "\n<p>The <xref href=\"System.Xml.XmlReader.NamespaceURI\" data-throw-if-not-resolved=\"false\"></xref> part of the qualified name (<strong>out</strong> parameter).</p>\n"
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: System.Xml.XmlDictionaryReader.ReadContentAsQualifiedName(ByRef System.String, ByRef System.String)
  name.vb: ReadContentAsQualifiedName(ByRef String, ByRef String)
- uid: System.Xml.XmlDictionaryReader.ReadContentAsString
  commentId: M:System.Xml.XmlDictionaryReader.ReadContentAsString
  id: ReadContentAsString
  parent: System.Xml.XmlDictionaryReader
  langs:
  - csharp
  - vb
  name: ReadContentAsString()
  fullName: System.Xml.XmlDictionaryReader.ReadContentAsString()
  type: Method
  source:
    remote:
      path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ReadContentAsString
    path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
    startLine: 196
  assemblies:
  - System.Runtime.Serialization.Xml
  namespace: System.Xml
  summary: "\n<p>Converts a node's content to a string.</p>\n"
  remarks: "\n<p>The string returned by this read operation is limited by the MaxStringContentLength quota</p>\n"
  example:
  - 
  syntax:
    content: public override string ReadContentAsString()
    content.vb: Public Overrides Function ReadContentAsString As String
    return:
      type: System.String
      description: "\n<p>The node content in a string representation.</p>\n"
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Xml.XmlDictionaryReader.ReadContentAsString(System.Int32)
  commentId: M:System.Xml.XmlDictionaryReader.ReadContentAsString(System.Int32)
  id: ReadContentAsString(System.Int32)
  parent: System.Xml.XmlDictionaryReader
  langs:
  - csharp
  - vb
  name: ReadContentAsString(Int32)
  fullName: System.Xml.XmlDictionaryReader.ReadContentAsString(System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ReadContentAsString
    path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
    startLine: 197
  assemblies:
  - System.Runtime.Serialization.Xml
  namespace: System.Xml
  summary: "\n<p>Converts a node's content to a string.</p>\n"
  remarks: "\n<p>The string returned by this read operation is limited by the MaxStringContentLength quota.</p>\n"
  example:
  - 
  syntax:
    content: protected string ReadContentAsString(int maxStringContentLength)
    content.vb: Protected Function ReadContentAsString(maxStringContentLength As Integer) As String
    parameters:
    - id: maxStringContentLength
      type: System.Int32
      description: "\n<p>The maximum string length.</p>\n"
    return:
      type: System.String
      description: "\n<p>Node content in string representation.</p>\n"
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: System.Xml.XmlDictionaryReader.ReadContentAsString(System.String[],System.Int32@)
  commentId: M:System.Xml.XmlDictionaryReader.ReadContentAsString(System.String[],System.Int32@)
  id: ReadContentAsString(System.String[],System.Int32@)
  parent: System.Xml.XmlDictionaryReader
  langs:
  - csharp
  - vb
  name: ReadContentAsString(String[], out Int32)
  fullName: System.Xml.XmlDictionaryReader.ReadContentAsString(System.String[], out System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ReadContentAsString
    path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
    startLine: 198
  assemblies:
  - System.Runtime.Serialization.Xml
  namespace: System.Xml
  summary: "\n<p>Converts a node's content to a string.</p>\n"
  example:
  - 
  syntax:
    content: public virtual string ReadContentAsString(string[] strings, out int index)
    content.vb: Public Overridable Function ReadContentAsString(strings As String(), ByRef index As Integer) As String
    parameters:
    - id: strings
      type: System.String[]
      description: "\n<p>The array of strings to match content against.</p>\n"
    - id: index
      type: System.Int32
      description: "\n<p>The index of the entry in <em>strings</em> that matches the content.</p>\n"
    return:
      type: System.String
      description: "\n<p>The node content in a string representation.</p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>strings</em> is <strong>null</strong>.</p>\n"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>An entry in<em> strings</em> is <strong>null</strong>.</p>\n"
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: System.Xml.XmlDictionaryReader.ReadContentAsString(System.String(), ByRef System.Int32)
  name.vb: ReadContentAsString(String(), ByRef Int32)
- uid: System.Xml.XmlDictionaryReader.ReadContentAsString(System.Xml.XmlDictionaryString[],System.Int32@)
  commentId: M:System.Xml.XmlDictionaryReader.ReadContentAsString(System.Xml.XmlDictionaryString[],System.Int32@)
  id: ReadContentAsString(System.Xml.XmlDictionaryString[],System.Int32@)
  parent: System.Xml.XmlDictionaryReader
  langs:
  - csharp
  - vb
  name: ReadContentAsString(XmlDictionaryString[], out Int32)
  fullName: System.Xml.XmlDictionaryReader.ReadContentAsString(System.Xml.XmlDictionaryString[], out System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ReadContentAsString
    path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
    startLine: 199
  assemblies:
  - System.Runtime.Serialization.Xml
  namespace: System.Xml
  summary: "\n<p>Converts a node's content to a string.</p>\n"
  example:
  - 
  syntax:
    content: public virtual string ReadContentAsString(XmlDictionaryString[] strings, out int index)
    content.vb: Public Overridable Function ReadContentAsString(strings As XmlDictionaryString(), ByRef index As Integer) As String
    parameters:
    - id: strings
      type: System.Xml.XmlDictionaryString[]
      description: "\n<p>The array of <xref href=\"System.Xml.XmlDictionaryString\" data-throw-if-not-resolved=\"false\"></xref> objects to match content against.</p>\n"
    - id: index
      type: System.Int32
      description: "\n<p>The index of the entry in <em>strings</em> that matches the content.</p>\n"
    return:
      type: System.String
      description: "\n<p>The node content in a string representation.</p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>strings</em> is <strong>null</strong>.</p>\n"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>An entry in<em> strings</em> is <strong>null</strong>.</p>\n"
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: System.Xml.XmlDictionaryReader.ReadContentAsString(System.Xml.XmlDictionaryString(), ByRef System.Int32)
  name.vb: ReadContentAsString(XmlDictionaryString(), ByRef Int32)
- uid: System.Xml.XmlDictionaryReader.ReadContentAsTimeSpan
  commentId: M:System.Xml.XmlDictionaryReader.ReadContentAsTimeSpan
  id: ReadContentAsTimeSpan
  parent: System.Xml.XmlDictionaryReader
  langs:
  - csharp
  - vb
  name: ReadContentAsTimeSpan()
  fullName: System.Xml.XmlDictionaryReader.ReadContentAsTimeSpan()
  type: Method
  source:
    remote:
      path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ReadContentAsTimeSpan
    path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
    startLine: 200
  assemblies:
  - System.Runtime.Serialization.Xml
  namespace: System.Xml
  summary: "\n<p>Converts a node's content to <xref href=\"System.TimeSpan\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  example:
  - 
  syntax:
    content: public virtual TimeSpan ReadContentAsTimeSpan()
    content.vb: Public Overridable Function ReadContentAsTimeSpan As TimeSpan
    return:
      type: System.TimeSpan
      description: "\n<p>\n<xref href=\"System.TimeSpan\" data-throw-if-not-resolved=\"false\"></xref> representation of node's content.</p>\n"
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Xml.XmlDictionaryReader.ReadContentAsUniqueId
  commentId: M:System.Xml.XmlDictionaryReader.ReadContentAsUniqueId
  id: ReadContentAsUniqueId
  parent: System.Xml.XmlDictionaryReader
  langs:
  - csharp
  - vb
  name: ReadContentAsUniqueId()
  fullName: System.Xml.XmlDictionaryReader.ReadContentAsUniqueId()
  type: Method
  source:
    remote:
      path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ReadContentAsUniqueId
    path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
    startLine: 201
  assemblies:
  - System.Runtime.Serialization.Xml
  namespace: System.Xml
  summary: "\n<p>Converts a node's content to a unique identifier.</p>\n"
  example:
  - 
  syntax:
    content: public virtual UniqueId ReadContentAsUniqueId()
    content.vb: Public Overridable Function ReadContentAsUniqueId As UniqueId
    return:
      type: System.Xml.UniqueId
      description: "\n<p>The node's content represented as a unique identifier.</p>\n"
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Xml.XmlDictionaryReader.ReadDateTimeArray(System.String,System.String)
  commentId: M:System.Xml.XmlDictionaryReader.ReadDateTimeArray(System.String,System.String)
  id: ReadDateTimeArray(System.String,System.String)
  parent: System.Xml.XmlDictionaryReader
  langs:
  - csharp
  - vb
  name: ReadDateTimeArray(String, String)
  fullName: System.Xml.XmlDictionaryReader.ReadDateTimeArray(System.String, System.String)
  type: Method
  source:
    remote:
      path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ReadDateTimeArray
    path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
    startLine: 202
  assemblies:
  - System.Runtime.Serialization.Xml
  namespace: System.Xml
  summary: "\n<p>Converts a node's content to a <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> array.</p>\n"
  remarks: "\n<p>The buffer allocated by this read operation is limited by the MaxArrayLength quota.</p>\n"
  example:
  - 
  syntax:
    content: public virtual DateTime[] ReadDateTimeArray(string localName, string namespaceUri)
    content.vb: Public Overridable Function ReadDateTimeArray(localName As String, namespaceUri As String) As Date()
    parameters:
    - id: localName
      type: System.String
      description: "\n<p>The local name of the element.</p>\n"
    - id: namespaceUri
      type: System.String
      description: "\n<p>The namespace URI of the element.</p>\n"
    return:
      type: System.DateTime[]
      description: "\n<p>The node's content represented as a <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> array.</p>\n"
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Xml.XmlDictionaryReader.ReadDateTimeArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)
  commentId: M:System.Xml.XmlDictionaryReader.ReadDateTimeArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)
  id: ReadDateTimeArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)
  parent: System.Xml.XmlDictionaryReader
  langs:
  - csharp
  - vb
  name: ReadDateTimeArray(XmlDictionaryString, XmlDictionaryString)
  fullName: System.Xml.XmlDictionaryReader.ReadDateTimeArray(System.Xml.XmlDictionaryString, System.Xml.XmlDictionaryString)
  type: Method
  source:
    remote:
      path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ReadDateTimeArray
    path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
    startLine: 203
  assemblies:
  - System.Runtime.Serialization.Xml
  namespace: System.Xml
  summary: "\n<p>Converts a node's content to a <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> array.</p>\n"
  example:
  - 
  syntax:
    content: public virtual DateTime[] ReadDateTimeArray(XmlDictionaryString localName, XmlDictionaryString namespaceUri)
    content.vb: Public Overridable Function ReadDateTimeArray(localName As XmlDictionaryString, namespaceUri As XmlDictionaryString) As Date()
    parameters:
    - id: localName
      type: System.Xml.XmlDictionaryString
      description: "\n<p>The local name of the element.</p>\n"
    - id: namespaceUri
      type: System.Xml.XmlDictionaryString
      description: "\n<p>The namespace URI of the element.</p>\n"
    return:
      type: System.DateTime[]
      description: "\n<p>The node's content represented as a <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> array.</p>\n"
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Xml.XmlDictionaryReader.ReadDecimalArray(System.String,System.String)
  commentId: M:System.Xml.XmlDictionaryReader.ReadDecimalArray(System.String,System.String)
  id: ReadDecimalArray(System.String,System.String)
  parent: System.Xml.XmlDictionaryReader
  langs:
  - csharp
  - vb
  name: ReadDecimalArray(String, String)
  fullName: System.Xml.XmlDictionaryReader.ReadDecimalArray(System.String, System.String)
  type: Method
  source:
    remote:
      path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ReadDecimalArray
    path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
    startLine: 204
  assemblies:
  - System.Runtime.Serialization.Xml
  namespace: System.Xml
  summary: "\n<p>Converts a node's content to a <xref href=\"System.Decimal\" data-throw-if-not-resolved=\"false\"></xref> array.</p>\n"
  remarks: "\n<p>The buffer allocated by this read operation is limited by the MaxArrayLength quota.</p>\n"
  example:
  - 
  syntax:
    content: public virtual decimal[] ReadDecimalArray(string localName, string namespaceUri)
    content.vb: Public Overridable Function ReadDecimalArray(localName As String, namespaceUri As String) As Decimal()
    parameters:
    - id: localName
      type: System.String
      description: "\n<p>The local name of the element.</p>\n"
    - id: namespaceUri
      type: System.String
      description: "\n<p>The namespace URI of the element.</p>\n"
    return:
      type: System.Decimal[]
      description: "\n<p>The node's content represented as a <xref href=\"System.Decimal\" data-throw-if-not-resolved=\"false\"></xref> array.</p>\n"
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Xml.XmlDictionaryReader.ReadDecimalArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)
  commentId: M:System.Xml.XmlDictionaryReader.ReadDecimalArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)
  id: ReadDecimalArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)
  parent: System.Xml.XmlDictionaryReader
  langs:
  - csharp
  - vb
  name: ReadDecimalArray(XmlDictionaryString, XmlDictionaryString)
  fullName: System.Xml.XmlDictionaryReader.ReadDecimalArray(System.Xml.XmlDictionaryString, System.Xml.XmlDictionaryString)
  type: Method
  source:
    remote:
      path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ReadDecimalArray
    path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
    startLine: 205
  assemblies:
  - System.Runtime.Serialization.Xml
  namespace: System.Xml
  summary: "\n<p>Converts a node's content to a <xref href=\"System.Decimal\" data-throw-if-not-resolved=\"false\"></xref> array.</p>\n"
  remarks: "\n<p>The buffer allocated by this read operation is limited by the MaxArrayLength quota.</p>\n"
  example:
  - 
  syntax:
    content: public virtual decimal[] ReadDecimalArray(XmlDictionaryString localName, XmlDictionaryString namespaceUri)
    content.vb: Public Overridable Function ReadDecimalArray(localName As XmlDictionaryString, namespaceUri As XmlDictionaryString) As Decimal()
    parameters:
    - id: localName
      type: System.Xml.XmlDictionaryString
      description: "\n<p>The local name of the element.</p>\n"
    - id: namespaceUri
      type: System.Xml.XmlDictionaryString
      description: "\n<p>The namespace URI of the element.</p>\n"
    return:
      type: System.Decimal[]
      description: "\n<p>The node's content represented as a <xref href=\"System.Decimal\" data-throw-if-not-resolved=\"false\"></xref> array.</p>\n"
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Xml.XmlDictionaryReader.ReadDoubleArray(System.String,System.String)
  commentId: M:System.Xml.XmlDictionaryReader.ReadDoubleArray(System.String,System.String)
  id: ReadDoubleArray(System.String,System.String)
  parent: System.Xml.XmlDictionaryReader
  langs:
  - csharp
  - vb
  name: ReadDoubleArray(String, String)
  fullName: System.Xml.XmlDictionaryReader.ReadDoubleArray(System.String, System.String)
  type: Method
  source:
    remote:
      path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ReadDoubleArray
    path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
    startLine: 206
  assemblies:
  - System.Runtime.Serialization.Xml
  namespace: System.Xml
  summary: "\n<p>Converts a node's content to a <xref href=\"System.Double\" data-throw-if-not-resolved=\"false\"></xref> array.</p>\n"
  remarks: "\n<p>The buffer allocated by this read operation is limited by the MaxArrayLength quota.</p>\n"
  example:
  - 
  syntax:
    content: public virtual double[] ReadDoubleArray(string localName, string namespaceUri)
    content.vb: Public Overridable Function ReadDoubleArray(localName As String, namespaceUri As String) As Double()
    parameters:
    - id: localName
      type: System.String
      description: "\n<p>The local name of the element.</p>\n"
    - id: namespaceUri
      type: System.String
      description: "\n<p>The namespace URI of the element.</p>\n"
    return:
      type: System.Double[]
      description: "\n<p>The node's content represented as a <xref href=\"System.Double\" data-throw-if-not-resolved=\"false\"></xref> array.</p>\n"
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Xml.XmlDictionaryReader.ReadDoubleArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)
  commentId: M:System.Xml.XmlDictionaryReader.ReadDoubleArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)
  id: ReadDoubleArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)
  parent: System.Xml.XmlDictionaryReader
  langs:
  - csharp
  - vb
  name: ReadDoubleArray(XmlDictionaryString, XmlDictionaryString)
  fullName: System.Xml.XmlDictionaryReader.ReadDoubleArray(System.Xml.XmlDictionaryString, System.Xml.XmlDictionaryString)
  type: Method
  source:
    remote:
      path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ReadDoubleArray
    path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
    startLine: 207
  assemblies:
  - System.Runtime.Serialization.Xml
  namespace: System.Xml
  summary: "\n<p>Converts a node's content to a <xref href=\"System.Double\" data-throw-if-not-resolved=\"false\"></xref> array.</p>\n"
  remarks: "\n<p>The buffer allocated by this read operation is limited by the MaxArrayLength quota.</p>\n"
  example:
  - 
  syntax:
    content: public virtual double[] ReadDoubleArray(XmlDictionaryString localName, XmlDictionaryString namespaceUri)
    content.vb: Public Overridable Function ReadDoubleArray(localName As XmlDictionaryString, namespaceUri As XmlDictionaryString) As Double()
    parameters:
    - id: localName
      type: System.Xml.XmlDictionaryString
      description: "\n<p>The local name of the element.</p>\n"
    - id: namespaceUri
      type: System.Xml.XmlDictionaryString
      description: "\n<p>The namespace URI of the element.</p>\n"
    return:
      type: System.Double[]
      description: "\n<p>The node's content represented as a <xref href=\"System.Double\" data-throw-if-not-resolved=\"false\"></xref> array.</p>\n"
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Xml.XmlDictionaryReader.ReadElementContentAsBase64
  commentId: M:System.Xml.XmlDictionaryReader.ReadElementContentAsBase64
  id: ReadElementContentAsBase64
  parent: System.Xml.XmlDictionaryReader
  langs:
  - csharp
  - vb
  name: ReadElementContentAsBase64()
  fullName: System.Xml.XmlDictionaryReader.ReadElementContentAsBase64()
  type: Method
  source:
    remote:
      path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ReadElementContentAsBase64
    path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
    startLine: 208
  assemblies:
  - System.Runtime.Serialization.Xml
  namespace: System.Xml
  summary: "\n<p>Converts a node's content to a array of Base64 bytes.</p>\n"
  remarks: "\n<p>The string returned by this read operation is limited by the MaxArrayLength quota.</p>\n"
  example:
  - 
  syntax:
    content: public virtual byte[] ReadElementContentAsBase64()
    content.vb: Public Overridable Function ReadElementContentAsBase64 As Byte()
    return:
      type: System.Byte[]
      description: "\n<p>The node's content represented as an array of Base64 bytes.</p>\n"
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Xml.XmlDictionaryReader.ReadElementContentAsBinHex
  commentId: M:System.Xml.XmlDictionaryReader.ReadElementContentAsBinHex
  id: ReadElementContentAsBinHex
  parent: System.Xml.XmlDictionaryReader
  langs:
  - csharp
  - vb
  name: ReadElementContentAsBinHex()
  fullName: System.Xml.XmlDictionaryReader.ReadElementContentAsBinHex()
  type: Method
  source:
    remote:
      path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ReadElementContentAsBinHex
    path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
    startLine: 209
  assemblies:
  - System.Runtime.Serialization.Xml
  namespace: System.Xml
  summary: "\n<p>Converts a node's content to an array of <strong>BinHex</strong> bytes.</p>\n"
  remarks: "\n<p>The string returned by this read operation is limited by the MaxArrayLength quota.</p>\n"
  example:
  - 
  syntax:
    content: public virtual byte[] ReadElementContentAsBinHex()
    content.vb: Public Overridable Function ReadElementContentAsBinHex As Byte()
    return:
      type: System.Byte[]
      description: "\n<p>The node's content represented as an array of <strong>BinHex</strong> bytes.</p>\n"
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Xml.XmlDictionaryReader.ReadElementContentAsBoolean
  commentId: M:System.Xml.XmlDictionaryReader.ReadElementContentAsBoolean
  id: ReadElementContentAsBoolean
  parent: System.Xml.XmlDictionaryReader
  langs:
  - csharp
  - vb
  name: ReadElementContentAsBoolean()
  fullName: System.Xml.XmlDictionaryReader.ReadElementContentAsBoolean()
  type: Method
  source:
    remote:
      path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ReadElementContentAsBoolean
    path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
    startLine: 210
  assemblies:
  - System.Runtime.Serialization.Xml
  namespace: System.Xml
  summary: "\n<p>Converts an element's content to a <xref href=\"System.Boolean\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  example:
  - 
  syntax:
    content: public override bool ReadElementContentAsBoolean()
    content.vb: Public Overrides Function ReadElementContentAsBoolean As Boolean
    return:
      type: System.Boolean
      description: "\n<p>The node's content represented as a <xref href=\"System.Boolean\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Xml.XmlDictionaryReader.ReadElementContentAsDecimal
  commentId: M:System.Xml.XmlDictionaryReader.ReadElementContentAsDecimal
  id: ReadElementContentAsDecimal
  parent: System.Xml.XmlDictionaryReader
  langs:
  - csharp
  - vb
  name: ReadElementContentAsDecimal()
  fullName: System.Xml.XmlDictionaryReader.ReadElementContentAsDecimal()
  type: Method
  source:
    remote:
      path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ReadElementContentAsDecimal
    path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
    startLine: 211
  assemblies:
  - System.Runtime.Serialization.Xml
  namespace: System.Xml
  summary: "\n<p>Converts an element's content to a <xref href=\"System.Decimal\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  example:
  - 
  syntax:
    content: public override decimal ReadElementContentAsDecimal()
    content.vb: Public Overrides Function ReadElementContentAsDecimal As Decimal
    return:
      type: System.Decimal
      description: "\n<p>The node's content represented as a <xref href=\"System.Decimal\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Xml.XmlDictionaryReader.ReadElementContentAsDouble
  commentId: M:System.Xml.XmlDictionaryReader.ReadElementContentAsDouble
  id: ReadElementContentAsDouble
  parent: System.Xml.XmlDictionaryReader
  langs:
  - csharp
  - vb
  name: ReadElementContentAsDouble()
  fullName: System.Xml.XmlDictionaryReader.ReadElementContentAsDouble()
  type: Method
  source:
    remote:
      path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ReadElementContentAsDouble
    path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
    startLine: 212
  assemblies:
  - System.Runtime.Serialization.Xml
  namespace: System.Xml
  summary: "\n<p>Converts an element's content to a <xref href=\"System.Double\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  example:
  - 
  syntax:
    content: public override double ReadElementContentAsDouble()
    content.vb: Public Overrides Function ReadElementContentAsDouble As Double
    return:
      type: System.Double
      description: "\n<p>The node's content represented as a <xref href=\"System.Double\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Xml.XmlDictionaryReader.ReadElementContentAsFloat
  commentId: M:System.Xml.XmlDictionaryReader.ReadElementContentAsFloat
  id: ReadElementContentAsFloat
  parent: System.Xml.XmlDictionaryReader
  langs:
  - csharp
  - vb
  name: ReadElementContentAsFloat()
  fullName: System.Xml.XmlDictionaryReader.ReadElementContentAsFloat()
  type: Method
  source:
    remote:
      path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ReadElementContentAsFloat
    path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
    startLine: 213
  assemblies:
  - System.Runtime.Serialization.Xml
  namespace: System.Xml
  summary: "\n<p>Converts an element's content to a floating point number (<xref href=\"System.Single\" data-throw-if-not-resolved=\"false\"></xref>).</p>\n"
  example:
  - 
  syntax:
    content: public override float ReadElementContentAsFloat()
    content.vb: Public Overrides Function ReadElementContentAsFloat As Single
    return:
      type: System.Single
      description: "\n<p>The node's content represented as a floating point number (<xref href=\"System.Single\" data-throw-if-not-resolved=\"false\"></xref>).</p>\n"
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Xml.XmlDictionaryReader.ReadElementContentAsGuid
  commentId: M:System.Xml.XmlDictionaryReader.ReadElementContentAsGuid
  id: ReadElementContentAsGuid
  parent: System.Xml.XmlDictionaryReader
  langs:
  - csharp
  - vb
  name: ReadElementContentAsGuid()
  fullName: System.Xml.XmlDictionaryReader.ReadElementContentAsGuid()
  type: Method
  source:
    remote:
      path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ReadElementContentAsGuid
    path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
    startLine: 214
  assemblies:
  - System.Runtime.Serialization.Xml
  namespace: System.Xml
  summary: "\n<p>Converts an element's content to a <xref href=\"System.Guid\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  example:
  - 
  syntax:
    content: public virtual Guid ReadElementContentAsGuid()
    content.vb: Public Overridable Function ReadElementContentAsGuid As Guid
    return:
      type: System.Guid
      description: "\n<p>The node's content represented as a <xref href=\"System.Guid\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<p>The element is not in valid format.</p>\n"
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "\n<p>The element is not in valid format.</p>\n"
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Xml.XmlDictionaryReader.ReadElementContentAsInt
  commentId: M:System.Xml.XmlDictionaryReader.ReadElementContentAsInt
  id: ReadElementContentAsInt
  parent: System.Xml.XmlDictionaryReader
  langs:
  - csharp
  - vb
  name: ReadElementContentAsInt()
  fullName: System.Xml.XmlDictionaryReader.ReadElementContentAsInt()
  type: Method
  source:
    remote:
      path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ReadElementContentAsInt
    path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
    startLine: 215
  assemblies:
  - System.Runtime.Serialization.Xml
  namespace: System.Xml
  summary: "\n<p>Converts an element's content to an integer (<xref href=\"System.Int32\" data-throw-if-not-resolved=\"false\"></xref>).</p>\n"
  example:
  - 
  syntax:
    content: public override int ReadElementContentAsInt()
    content.vb: Public Overrides Function ReadElementContentAsInt As Integer
    return:
      type: System.Int32
      description: "\n<p>The node's content represented as an integer (<xref href=\"System.Int32\" data-throw-if-not-resolved=\"false\"></xref>).</p>\n"
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Xml.XmlDictionaryReader.ReadElementContentAsLong
  commentId: M:System.Xml.XmlDictionaryReader.ReadElementContentAsLong
  id: ReadElementContentAsLong
  parent: System.Xml.XmlDictionaryReader
  langs:
  - csharp
  - vb
  name: ReadElementContentAsLong()
  fullName: System.Xml.XmlDictionaryReader.ReadElementContentAsLong()
  type: Method
  source:
    remote:
      path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ReadElementContentAsLong
    path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
    startLine: 216
  assemblies:
  - System.Runtime.Serialization.Xml
  namespace: System.Xml
  summary: "\n<p>Converts an element's content to a long integer (<xref href=\"System.Int64\" data-throw-if-not-resolved=\"false\"></xref>).</p>\n"
  example:
  - 
  syntax:
    content: public override long ReadElementContentAsLong()
    content.vb: Public Overrides Function ReadElementContentAsLong As Long
    return:
      type: System.Int64
      description: "\n<p>The node's content represented as a long integer (<xref href=\"System.Int64\" data-throw-if-not-resolved=\"false\"></xref>).</p>\n"
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Xml.XmlDictionaryReader.ReadElementContentAsString
  commentId: M:System.Xml.XmlDictionaryReader.ReadElementContentAsString
  id: ReadElementContentAsString
  parent: System.Xml.XmlDictionaryReader
  langs:
  - csharp
  - vb
  name: ReadElementContentAsString()
  fullName: System.Xml.XmlDictionaryReader.ReadElementContentAsString()
  type: Method
  source:
    remote:
      path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ReadElementContentAsString
    path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
    startLine: 217
  assemblies:
  - System.Runtime.Serialization.Xml
  namespace: System.Xml
  summary: "\n<p>Converts an element's content to a <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  remarks: "\n<p>The string returned by this read operation is limited by the MaxStringContentLength quota.</p>\n"
  example:
  - 
  syntax:
    content: public override string ReadElementContentAsString()
    content.vb: Public Overrides Function ReadElementContentAsString As String
    return:
      type: System.String
      description: "\n<p>The node's content represented as a <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Xml.XmlDictionaryReader.ReadElementContentAsTimeSpan
  commentId: M:System.Xml.XmlDictionaryReader.ReadElementContentAsTimeSpan
  id: ReadElementContentAsTimeSpan
  parent: System.Xml.XmlDictionaryReader
  langs:
  - csharp
  - vb
  name: ReadElementContentAsTimeSpan()
  fullName: System.Xml.XmlDictionaryReader.ReadElementContentAsTimeSpan()
  type: Method
  source:
    remote:
      path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ReadElementContentAsTimeSpan
    path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
    startLine: 218
  assemblies:
  - System.Runtime.Serialization.Xml
  namespace: System.Xml
  summary: "\n<p>Converts an element's content to a <xref href=\"System.TimeSpan\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  example:
  - 
  syntax:
    content: public virtual TimeSpan ReadElementContentAsTimeSpan()
    content.vb: Public Overridable Function ReadElementContentAsTimeSpan As TimeSpan
    return:
      type: System.TimeSpan
      description: "\n<p>The node's content represented as a <xref href=\"System.TimeSpan\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Xml.XmlDictionaryReader.ReadElementContentAsUniqueId
  commentId: M:System.Xml.XmlDictionaryReader.ReadElementContentAsUniqueId
  id: ReadElementContentAsUniqueId
  parent: System.Xml.XmlDictionaryReader
  langs:
  - csharp
  - vb
  name: ReadElementContentAsUniqueId()
  fullName: System.Xml.XmlDictionaryReader.ReadElementContentAsUniqueId()
  type: Method
  source:
    remote:
      path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ReadElementContentAsUniqueId
    path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
    startLine: 219
  assemblies:
  - System.Runtime.Serialization.Xml
  namespace: System.Xml
  summary: "\n<p>Converts an element's content to a unique identifier.</p>\n"
  example:
  - 
  syntax:
    content: public virtual UniqueId ReadElementContentAsUniqueId()
    content.vb: Public Overridable Function ReadElementContentAsUniqueId As UniqueId
    return:
      type: System.Xml.UniqueId
      description: "\n<p>The node's content represented as a unique identifier.</p>\n"
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<p>The element is not in valid format.</p>\n"
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "\n<p>The element is not in valid format.</p>\n"
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Xml.XmlDictionaryReader.ReadFullStartElement
  commentId: M:System.Xml.XmlDictionaryReader.ReadFullStartElement
  id: ReadFullStartElement
  parent: System.Xml.XmlDictionaryReader
  langs:
  - csharp
  - vb
  name: ReadFullStartElement()
  fullName: System.Xml.XmlDictionaryReader.ReadFullStartElement()
  type: Method
  source:
    remote:
      path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ReadFullStartElement
    path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
    startLine: 220
  assemblies:
  - System.Runtime.Serialization.Xml
  namespace: System.Xml
  summary: "\n<p>Checks whether the current node is an element and advances the reader to the next node.</p>\n"
  example:
  - 
  syntax:
    content: public virtual void ReadFullStartElement()
    content.vb: Public Overridable Sub ReadFullStartElement
  exceptions:
  - type: System.Xml.XmlException
    commentId: T:System.Xml.XmlException
    description: "\n<p>\n<xref href=\"System.Xml.XmlDictionaryReader.IsStartElement(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)\" data-throw-if-not-resolved=\"false\"></xref> returns <strong>false</strong>.</p>\n"
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Xml.XmlDictionaryReader.ReadFullStartElement(System.String)
  commentId: M:System.Xml.XmlDictionaryReader.ReadFullStartElement(System.String)
  id: ReadFullStartElement(System.String)
  parent: System.Xml.XmlDictionaryReader
  langs:
  - csharp
  - vb
  name: ReadFullStartElement(String)
  fullName: System.Xml.XmlDictionaryReader.ReadFullStartElement(System.String)
  type: Method
  source:
    remote:
      path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ReadFullStartElement
    path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
    startLine: 221
  assemblies:
  - System.Runtime.Serialization.Xml
  namespace: System.Xml
  summary: "\n<p>Checks whether the current node is an element with the given <em>name</em> and advances the reader to the next node.</p>\n"
  example:
  - 
  syntax:
    content: public virtual void ReadFullStartElement(string name)
    content.vb: Public Overridable Sub ReadFullStartElement(name As String)
    parameters:
    - id: name
      type: System.String
      description: "\n<p>The qualified name of the element.</p>\n"
  exceptions:
  - type: System.Xml.XmlException
    commentId: T:System.Xml.XmlException
    description: "\n<p>\n<xref href=\"System.Xml.XmlDictionaryReader.IsStartElement(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)\" data-throw-if-not-resolved=\"false\"></xref> returns <strong>false</strong>.</p>\n"
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Xml.XmlDictionaryReader.ReadFullStartElement(System.String,System.String)
  commentId: M:System.Xml.XmlDictionaryReader.ReadFullStartElement(System.String,System.String)
  id: ReadFullStartElement(System.String,System.String)
  parent: System.Xml.XmlDictionaryReader
  langs:
  - csharp
  - vb
  name: ReadFullStartElement(String, String)
  fullName: System.Xml.XmlDictionaryReader.ReadFullStartElement(System.String, System.String)
  type: Method
  source:
    remote:
      path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ReadFullStartElement
    path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
    startLine: 222
  assemblies:
  - System.Runtime.Serialization.Xml
  namespace: System.Xml
  summary: "\n<p>Checks whether the current node is an element with the given <em>localName</em> and <em>namespaceUri</em> and advances the reader to the next node.</p>\n"
  example:
  - 
  syntax:
    content: public virtual void ReadFullStartElement(string localName, string namespaceUri)
    content.vb: Public Overridable Sub ReadFullStartElement(localName As String, namespaceUri As String)
    parameters:
    - id: localName
      type: System.String
      description: "\n<p>The local name of the element.</p>\n"
    - id: namespaceUri
      type: System.String
      description: "\n<p>The namespace URI of the element.</p>\n"
  exceptions:
  - type: System.Xml.XmlException
    commentId: T:System.Xml.XmlException
    description: "\n<p>\n<xref href=\"System.Xml.XmlDictionaryReader.IsStartElement(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)\" data-throw-if-not-resolved=\"false\"></xref> returns <strong>false</strong>.</p>\n"
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Xml.XmlDictionaryReader.ReadFullStartElement(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)
  commentId: M:System.Xml.XmlDictionaryReader.ReadFullStartElement(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)
  id: ReadFullStartElement(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)
  parent: System.Xml.XmlDictionaryReader
  langs:
  - csharp
  - vb
  name: ReadFullStartElement(XmlDictionaryString, XmlDictionaryString)
  fullName: System.Xml.XmlDictionaryReader.ReadFullStartElement(System.Xml.XmlDictionaryString, System.Xml.XmlDictionaryString)
  type: Method
  source:
    remote:
      path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ReadFullStartElement
    path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
    startLine: 223
  assemblies:
  - System.Runtime.Serialization.Xml
  namespace: System.Xml
  summary: "\n<p>Checks whether the current node is an element with the given <em>localName</em> and <em>namespaceUri</em> and advances the reader to the next node.</p>\n"
  example:
  - 
  syntax:
    content: public virtual void ReadFullStartElement(XmlDictionaryString localName, XmlDictionaryString namespaceUri)
    content.vb: Public Overridable Sub ReadFullStartElement(localName As XmlDictionaryString, namespaceUri As XmlDictionaryString)
    parameters:
    - id: localName
      type: System.Xml.XmlDictionaryString
      description: "\n<p>The local name of the element.</p>\n"
    - id: namespaceUri
      type: System.Xml.XmlDictionaryString
      description: "\n<p>The namespace URI of the element.</p>\n"
  exceptions:
  - type: System.Xml.XmlException
    commentId: T:System.Xml.XmlException
    description: "\n<p>\n<xref href=\"System.Xml.XmlDictionaryReader.IsStartElement(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)\" data-throw-if-not-resolved=\"false\"></xref> returns <strong>false</strong>.</p>\n"
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Xml.XmlDictionaryReader.ReadGuidArray(System.String,System.String)
  commentId: M:System.Xml.XmlDictionaryReader.ReadGuidArray(System.String,System.String)
  id: ReadGuidArray(System.String,System.String)
  parent: System.Xml.XmlDictionaryReader
  langs:
  - csharp
  - vb
  name: ReadGuidArray(String, String)
  fullName: System.Xml.XmlDictionaryReader.ReadGuidArray(System.String, System.String)
  type: Method
  source:
    remote:
      path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ReadGuidArray
    path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
    startLine: 224
  assemblies:
  - System.Runtime.Serialization.Xml
  namespace: System.Xml
  summary: "\n<p>Reads the contents of a series of nodes with the given <em>localName</em> and <em>namespaceUri</em> into an array of <xref href=\"System.Guid\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  remarks: "\n<p>The buffer allocated by this read operation is limited by the MaxArrayLength quota.</p>\n"
  example:
  - 
  syntax:
    content: public virtual Guid[] ReadGuidArray(string localName, string namespaceUri)
    content.vb: Public Overridable Function ReadGuidArray(localName As String, namespaceUri As String) As Guid()
    parameters:
    - id: localName
      type: System.String
      description: "\n<p>The local name of the element.</p>\n"
    - id: namespaceUri
      type: System.String
      description: "\n<p>The namespace URI of the element.</p>\n"
    return:
      type: System.Guid[]
      description: "\n<p>An array of <xref href=\"System.Guid\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Xml.XmlDictionaryReader.ReadGuidArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)
  commentId: M:System.Xml.XmlDictionaryReader.ReadGuidArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)
  id: ReadGuidArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)
  parent: System.Xml.XmlDictionaryReader
  langs:
  - csharp
  - vb
  name: ReadGuidArray(XmlDictionaryString, XmlDictionaryString)
  fullName: System.Xml.XmlDictionaryReader.ReadGuidArray(System.Xml.XmlDictionaryString, System.Xml.XmlDictionaryString)
  type: Method
  source:
    remote:
      path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ReadGuidArray
    path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
    startLine: 225
  assemblies:
  - System.Runtime.Serialization.Xml
  namespace: System.Xml
  summary: "\n<p>Reads the contents of a series of nodes with the given <em>localName</em> and <em>namespaceUri</em> into an array of <xref href=\"System.Guid\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  remarks: "\n<p>The buffer allocated by this read operation is limited by the MaxArrayLength quota.</p>\n"
  example:
  - 
  syntax:
    content: public virtual Guid[] ReadGuidArray(XmlDictionaryString localName, XmlDictionaryString namespaceUri)
    content.vb: Public Overridable Function ReadGuidArray(localName As XmlDictionaryString, namespaceUri As XmlDictionaryString) As Guid()
    parameters:
    - id: localName
      type: System.Xml.XmlDictionaryString
      description: "\n<p>The local name of the element.</p>\n"
    - id: namespaceUri
      type: System.Xml.XmlDictionaryString
      description: "\n<p>The namespace URI of the element.</p>\n"
    return:
      type: System.Guid[]
      description: "\n<p>An array of <xref href=\"System.Guid\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Xml.XmlDictionaryReader.ReadInt16Array(System.String,System.String)
  commentId: M:System.Xml.XmlDictionaryReader.ReadInt16Array(System.String,System.String)
  id: ReadInt16Array(System.String,System.String)
  parent: System.Xml.XmlDictionaryReader
  langs:
  - csharp
  - vb
  name: ReadInt16Array(String, String)
  fullName: System.Xml.XmlDictionaryReader.ReadInt16Array(System.String, System.String)
  type: Method
  source:
    remote:
      path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ReadInt16Array
    path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
    startLine: 226
  assemblies:
  - System.Runtime.Serialization.Xml
  namespace: System.Xml
  summary: "\n<p>Reads the contents of a series of nodes with the given <em>localName</em> and <em>namespaceUri</em> into an array of <strong>short</strong> integers (<xref href=\"System.Int16\" data-throw-if-not-resolved=\"false\"></xref>).</p>\n"
  remarks: "\n<p>The buffer allocated by this read operation is limited by the MaxArrayLength quota.</p>\n"
  example:
  - 
  syntax:
    content: public virtual short[] ReadInt16Array(string localName, string namespaceUri)
    content.vb: Public Overridable Function ReadInt16Array(localName As String, namespaceUri As String) As Short()
    parameters:
    - id: localName
      type: System.String
      description: "\n<p>The local name of the element.</p>\n"
    - id: namespaceUri
      type: System.String
      description: "\n<p>The namespace URI of the element.</p>\n"
    return:
      type: System.Int16[]
      description: "\n<p>An array of <strong>short</strong> integers (<xref href=\"System.Int16\" data-throw-if-not-resolved=\"false\"></xref>).</p>\n"
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Xml.XmlDictionaryReader.ReadInt16Array(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)
  commentId: M:System.Xml.XmlDictionaryReader.ReadInt16Array(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)
  id: ReadInt16Array(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)
  parent: System.Xml.XmlDictionaryReader
  langs:
  - csharp
  - vb
  name: ReadInt16Array(XmlDictionaryString, XmlDictionaryString)
  fullName: System.Xml.XmlDictionaryReader.ReadInt16Array(System.Xml.XmlDictionaryString, System.Xml.XmlDictionaryString)
  type: Method
  source:
    remote:
      path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ReadInt16Array
    path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
    startLine: 227
  assemblies:
  - System.Runtime.Serialization.Xml
  namespace: System.Xml
  summary: "\n<p>Reads the contents of a series of nodes with the given <em>localName</em> and <em>namespaceUri</em> into an array of <strong>short</strong> integers (<xref href=\"System.Int16\" data-throw-if-not-resolved=\"false\"></xref>).</p>\n"
  remarks: "\n<p>The buffer allocated by this read operation is limited by the MaxArrayLength quota.</p>\n"
  example:
  - 
  syntax:
    content: public virtual short[] ReadInt16Array(XmlDictionaryString localName, XmlDictionaryString namespaceUri)
    content.vb: Public Overridable Function ReadInt16Array(localName As XmlDictionaryString, namespaceUri As XmlDictionaryString) As Short()
    parameters:
    - id: localName
      type: System.Xml.XmlDictionaryString
      description: "\n<p>The local name of the element.</p>\n"
    - id: namespaceUri
      type: System.Xml.XmlDictionaryString
      description: "\n<p>The namespace URI of the element.</p>\n"
    return:
      type: System.Int16[]
      description: "\n<p>An array of <strong>short</strong> integers (<xref href=\"System.Int16\" data-throw-if-not-resolved=\"false\"></xref>).</p>\n"
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Xml.XmlDictionaryReader.ReadInt32Array(System.String,System.String)
  commentId: M:System.Xml.XmlDictionaryReader.ReadInt32Array(System.String,System.String)
  id: ReadInt32Array(System.String,System.String)
  parent: System.Xml.XmlDictionaryReader
  langs:
  - csharp
  - vb
  name: ReadInt32Array(String, String)
  fullName: System.Xml.XmlDictionaryReader.ReadInt32Array(System.String, System.String)
  type: Method
  source:
    remote:
      path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ReadInt32Array
    path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
    startLine: 228
  assemblies:
  - System.Runtime.Serialization.Xml
  namespace: System.Xml
  summary: "\n<p>Reads the contents of a series of nodes with the given <em>localName</em> and <em>namespaceUri</em> into an array of integers (<xref href=\"System.Int32\" data-throw-if-not-resolved=\"false\"></xref>).</p>\n"
  remarks: "\n<p>The buffer allocated by this read operation is limited by the MaxArrayLength quota.</p>\n"
  example:
  - 
  syntax:
    content: public virtual int[] ReadInt32Array(string localName, string namespaceUri)
    content.vb: Public Overridable Function ReadInt32Array(localName As String, namespaceUri As String) As Integer()
    parameters:
    - id: localName
      type: System.String
      description: "\n<p>The local name of the element.</p>\n"
    - id: namespaceUri
      type: System.String
      description: "\n<p>The namespace URI of the element.</p>\n"
    return:
      type: System.Int32[]
      description: "\n<p>An array of integers (<xref href=\"System.Int32\" data-throw-if-not-resolved=\"false\"></xref>).</p>\n"
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Xml.XmlDictionaryReader.ReadInt32Array(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)
  commentId: M:System.Xml.XmlDictionaryReader.ReadInt32Array(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)
  id: ReadInt32Array(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)
  parent: System.Xml.XmlDictionaryReader
  langs:
  - csharp
  - vb
  name: ReadInt32Array(XmlDictionaryString, XmlDictionaryString)
  fullName: System.Xml.XmlDictionaryReader.ReadInt32Array(System.Xml.XmlDictionaryString, System.Xml.XmlDictionaryString)
  type: Method
  source:
    remote:
      path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ReadInt32Array
    path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
    startLine: 229
  assemblies:
  - System.Runtime.Serialization.Xml
  namespace: System.Xml
  summary: "\n<p>Reads the contents of a series of nodes with the given <em>localName</em> and <em>namespaceUri</em> into an array of integers (<xref href=\"System.Int32\" data-throw-if-not-resolved=\"false\"></xref>).</p>\n"
  remarks: "\n<p>The buffer allocated by this read operation is limited by the MaxArrayLength quota.</p>\n"
  example:
  - 
  syntax:
    content: public virtual int[] ReadInt32Array(XmlDictionaryString localName, XmlDictionaryString namespaceUri)
    content.vb: Public Overridable Function ReadInt32Array(localName As XmlDictionaryString, namespaceUri As XmlDictionaryString) As Integer()
    parameters:
    - id: localName
      type: System.Xml.XmlDictionaryString
      description: "\n<p>The local name of the element.</p>\n"
    - id: namespaceUri
      type: System.Xml.XmlDictionaryString
      description: "\n<p>The namespace URI of the element.</p>\n"
    return:
      type: System.Int32[]
      description: "\n<p>An array of integers (<xref href=\"System.Int32\" data-throw-if-not-resolved=\"false\"></xref>).</p>\n"
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Xml.XmlDictionaryReader.ReadInt64Array(System.String,System.String)
  commentId: M:System.Xml.XmlDictionaryReader.ReadInt64Array(System.String,System.String)
  id: ReadInt64Array(System.String,System.String)
  parent: System.Xml.XmlDictionaryReader
  langs:
  - csharp
  - vb
  name: ReadInt64Array(String, String)
  fullName: System.Xml.XmlDictionaryReader.ReadInt64Array(System.String, System.String)
  type: Method
  source:
    remote:
      path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ReadInt64Array
    path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
    startLine: 230
  assemblies:
  - System.Runtime.Serialization.Xml
  namespace: System.Xml
  summary: "\n<p>Reads the contents of a series of nodes with the given <em>localName</em> and <em>namespaceUri</em> into an array of <strong>long</strong> integers (<xref href=\"System.Int64\" data-throw-if-not-resolved=\"false\"></xref>).</p>\n"
  remarks: "\n<p>The buffer allocated by this read operation is limited by the MaxArrayLength quota.</p>\n"
  example:
  - 
  syntax:
    content: public virtual long[] ReadInt64Array(string localName, string namespaceUri)
    content.vb: Public Overridable Function ReadInt64Array(localName As String, namespaceUri As String) As Long()
    parameters:
    - id: localName
      type: System.String
      description: "\n<p>The local name of the element.</p>\n"
    - id: namespaceUri
      type: System.String
      description: "\n<p>The namespace URI of the element.</p>\n"
    return:
      type: System.Int64[]
      description: "\n<p>An array of <strong>long</strong> integers (<xref href=\"System.Int64\" data-throw-if-not-resolved=\"false\"></xref>).</p>\n"
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Xml.XmlDictionaryReader.ReadInt64Array(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)
  commentId: M:System.Xml.XmlDictionaryReader.ReadInt64Array(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)
  id: ReadInt64Array(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)
  parent: System.Xml.XmlDictionaryReader
  langs:
  - csharp
  - vb
  name: ReadInt64Array(XmlDictionaryString, XmlDictionaryString)
  fullName: System.Xml.XmlDictionaryReader.ReadInt64Array(System.Xml.XmlDictionaryString, System.Xml.XmlDictionaryString)
  type: Method
  source:
    remote:
      path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ReadInt64Array
    path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
    startLine: 231
  assemblies:
  - System.Runtime.Serialization.Xml
  namespace: System.Xml
  summary: "\n<p>Reads the contents of a series of nodes with the given <em>localName</em> and <em>namespaceUri</em> into an array of <strong>long</strong> integers (<xref href=\"System.Int64\" data-throw-if-not-resolved=\"false\"></xref>).</p>\n"
  remarks: "\n<p>The buffer allocated by this read operation is limited by the MaxArrayLength quota.</p>\n"
  example:
  - 
  syntax:
    content: public virtual long[] ReadInt64Array(XmlDictionaryString localName, XmlDictionaryString namespaceUri)
    content.vb: Public Overridable Function ReadInt64Array(localName As XmlDictionaryString, namespaceUri As XmlDictionaryString) As Long()
    parameters:
    - id: localName
      type: System.Xml.XmlDictionaryString
      description: "\n<p>The local name of the element.</p>\n"
    - id: namespaceUri
      type: System.Xml.XmlDictionaryString
      description: "\n<p>The namespace URI of the element.</p>\n"
    return:
      type: System.Int64[]
      description: "\n<p>An array of <strong>long</strong> integers (<xref href=\"System.Int64\" data-throw-if-not-resolved=\"false\"></xref>).</p>\n"
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Xml.XmlDictionaryReader.ReadSingleArray(System.String,System.String)
  commentId: M:System.Xml.XmlDictionaryReader.ReadSingleArray(System.String,System.String)
  id: ReadSingleArray(System.String,System.String)
  parent: System.Xml.XmlDictionaryReader
  langs:
  - csharp
  - vb
  name: ReadSingleArray(String, String)
  fullName: System.Xml.XmlDictionaryReader.ReadSingleArray(System.String, System.String)
  type: Method
  source:
    remote:
      path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ReadSingleArray
    path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
    startLine: 232
  assemblies:
  - System.Runtime.Serialization.Xml
  namespace: System.Xml
  summary: "\n<p>Reads the contents of a series of nodes with the given <em>localName</em> and <em>namespaceUri</em> into an array of <strong>float</strong> numbers (<xref href=\"System.Single\" data-throw-if-not-resolved=\"false\"></xref>).</p>\n"
  remarks: "\n<p>The buffer allocated by this read operation is limited by the MaxArrayLength quota.</p>\n"
  example:
  - 
  syntax:
    content: public virtual float[] ReadSingleArray(string localName, string namespaceUri)
    content.vb: Public Overridable Function ReadSingleArray(localName As String, namespaceUri As String) As Single()
    parameters:
    - id: localName
      type: System.String
      description: "\n<p>The local name of the element.</p>\n"
    - id: namespaceUri
      type: System.String
      description: "\n<p>The namespace URI of the element.</p>\n"
    return:
      type: System.Single[]
      description: "\n<p>An array of <strong>float</strong> numbers (<xref href=\"System.Single\" data-throw-if-not-resolved=\"false\"></xref>).</p>\n"
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Xml.XmlDictionaryReader.ReadSingleArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)
  commentId: M:System.Xml.XmlDictionaryReader.ReadSingleArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)
  id: ReadSingleArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)
  parent: System.Xml.XmlDictionaryReader
  langs:
  - csharp
  - vb
  name: ReadSingleArray(XmlDictionaryString, XmlDictionaryString)
  fullName: System.Xml.XmlDictionaryReader.ReadSingleArray(System.Xml.XmlDictionaryString, System.Xml.XmlDictionaryString)
  type: Method
  source:
    remote:
      path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ReadSingleArray
    path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
    startLine: 233
  assemblies:
  - System.Runtime.Serialization.Xml
  namespace: System.Xml
  summary: "\n<p>Reads the contents of a series of nodes with the given <em>localName</em> and <em>namespaceUri</em> into an array of <strong>float</strong> numbers (<xref href=\"System.Single\" data-throw-if-not-resolved=\"false\"></xref>).</p>\n"
  remarks: "\n<p>The buffer allocated by this read operation is limited by the MaxArrayLength quota.</p>\n"
  example:
  - 
  syntax:
    content: public virtual float[] ReadSingleArray(XmlDictionaryString localName, XmlDictionaryString namespaceUri)
    content.vb: Public Overridable Function ReadSingleArray(localName As XmlDictionaryString, namespaceUri As XmlDictionaryString) As Single()
    parameters:
    - id: localName
      type: System.Xml.XmlDictionaryString
      description: "\n<p>The local name of the element.</p>\n"
    - id: namespaceUri
      type: System.Xml.XmlDictionaryString
      description: "\n<p>The namespace URI of the element.</p>\n"
    return:
      type: System.Single[]
      description: "\n<p>An array of <strong>float</strong> numbers (<xref href=\"System.Single\" data-throw-if-not-resolved=\"false\"></xref>).</p>\n"
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Xml.XmlDictionaryReader.ReadStartElement(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)
  commentId: M:System.Xml.XmlDictionaryReader.ReadStartElement(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)
  id: ReadStartElement(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)
  parent: System.Xml.XmlDictionaryReader
  langs:
  - csharp
  - vb
  name: ReadStartElement(XmlDictionaryString, XmlDictionaryString)
  fullName: System.Xml.XmlDictionaryReader.ReadStartElement(System.Xml.XmlDictionaryString, System.Xml.XmlDictionaryString)
  type: Method
  source:
    remote:
      path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ReadStartElement
    path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
    startLine: 234
  assemblies:
  - System.Runtime.Serialization.Xml
  namespace: System.Xml
  summary: "\n<p>Checks whether the current node is an element with the given <em>localName</em> and <em>namespaceUri</em> and advances the reader to the next node.</p>\n"
  example:
  - 
  syntax:
    content: public virtual void ReadStartElement(XmlDictionaryString localName, XmlDictionaryString namespaceUri)
    content.vb: Public Overridable Sub ReadStartElement(localName As XmlDictionaryString, namespaceUri As XmlDictionaryString)
    parameters:
    - id: localName
      type: System.Xml.XmlDictionaryString
      description: "\n<p>The local name of the element.</p>\n"
    - id: namespaceUri
      type: System.Xml.XmlDictionaryString
      description: "\n<p>The namespace URI of the element.</p>\n"
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Xml.XmlDictionaryReader.ReadTimeSpanArray(System.String,System.String)
  commentId: M:System.Xml.XmlDictionaryReader.ReadTimeSpanArray(System.String,System.String)
  id: ReadTimeSpanArray(System.String,System.String)
  parent: System.Xml.XmlDictionaryReader
  langs:
  - csharp
  - vb
  name: ReadTimeSpanArray(String, String)
  fullName: System.Xml.XmlDictionaryReader.ReadTimeSpanArray(System.String, System.String)
  type: Method
  source:
    remote:
      path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ReadTimeSpanArray
    path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
    startLine: 235
  assemblies:
  - System.Runtime.Serialization.Xml
  namespace: System.Xml
  summary: "\n<p>Reads the contents of a series of nodes with the given <em>localName</em> and <em>namespaceUri</em> into a <xref href=\"System.TimeSpan\" data-throw-if-not-resolved=\"false\"></xref> array.</p>\n"
  remarks: "\n<p>The buffer allocated by this read operation is limited by the MaxArrayLength quota.</p>\n"
  example:
  - 
  syntax:
    content: public virtual TimeSpan[] ReadTimeSpanArray(string localName, string namespaceUri)
    content.vb: Public Overridable Function ReadTimeSpanArray(localName As String, namespaceUri As String) As TimeSpan()
    parameters:
    - id: localName
      type: System.String
      description: "\n<p>The local name of the element.</p>\n"
    - id: namespaceUri
      type: System.String
      description: "\n<p>The namespace URI of the element.</p>\n"
    return:
      type: System.TimeSpan[]
      description: "\n<p>A <xref href=\"System.TimeSpan\" data-throw-if-not-resolved=\"false\"></xref> array.</p>\n"
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Xml.XmlDictionaryReader.ReadTimeSpanArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)
  commentId: M:System.Xml.XmlDictionaryReader.ReadTimeSpanArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)
  id: ReadTimeSpanArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)
  parent: System.Xml.XmlDictionaryReader
  langs:
  - csharp
  - vb
  name: ReadTimeSpanArray(XmlDictionaryString, XmlDictionaryString)
  fullName: System.Xml.XmlDictionaryReader.ReadTimeSpanArray(System.Xml.XmlDictionaryString, System.Xml.XmlDictionaryString)
  type: Method
  source:
    remote:
      path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ReadTimeSpanArray
    path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
    startLine: 236
  assemblies:
  - System.Runtime.Serialization.Xml
  namespace: System.Xml
  summary: "\n<p>Reads the contents of a series of nodes with the given <em>localName</em> and <em>namespaceUri</em> into a <xref href=\"System.TimeSpan\" data-throw-if-not-resolved=\"false\"></xref> array.</p>\n"
  remarks: "\n<p>The buffer allocated by this read operation is limited by the MaxArrayLength quota.</p>\n"
  example:
  - 
  syntax:
    content: public virtual TimeSpan[] ReadTimeSpanArray(XmlDictionaryString localName, XmlDictionaryString namespaceUri)
    content.vb: Public Overridable Function ReadTimeSpanArray(localName As XmlDictionaryString, namespaceUri As XmlDictionaryString) As TimeSpan()
    parameters:
    - id: localName
      type: System.Xml.XmlDictionaryString
      description: "\n<p>The local name of the element.</p>\n"
    - id: namespaceUri
      type: System.Xml.XmlDictionaryString
      description: "\n<p>The namespace URI of the element.</p>\n"
    return:
      type: System.TimeSpan[]
      description: "\n<p>A <xref href=\"System.TimeSpan\" data-throw-if-not-resolved=\"false\"></xref> array.</p>\n"
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Xml.XmlDictionaryReader.ReadValueAsBase64(System.Byte[],System.Int32,System.Int32)
  commentId: M:System.Xml.XmlDictionaryReader.ReadValueAsBase64(System.Byte[],System.Int32,System.Int32)
  id: ReadValueAsBase64(System.Byte[],System.Int32,System.Int32)
  parent: System.Xml.XmlDictionaryReader
  langs:
  - csharp
  - vb
  name: ReadValueAsBase64(Byte[], Int32, Int32)
  fullName: System.Xml.XmlDictionaryReader.ReadValueAsBase64(System.Byte[], System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ReadValueAsBase64
    path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
    startLine: 237
  assemblies:
  - System.Runtime.Serialization.Xml
  namespace: System.Xml
  summary: "\n<p>Not implemented.</p>\n"
  example:
  - 
  syntax:
    content: public virtual int ReadValueAsBase64(byte[] buffer, int offset, int count)
    content.vb: Public Overridable Function ReadValueAsBase64(buffer As Byte(), offset As Integer, count As Integer) As Integer
    parameters:
    - id: buffer
      type: System.Byte[]
      description: "\n<p>The buffer from which to read.</p>\n"
    - id: offset
      type: System.Int32
      description: "\n<p>The starting position from which to read in <em>buffer</em>.</p>\n"
    - id: count
      type: System.Int32
      description: "\n<p>The number of bytes that can be read from <em>buffer</em>.</p>\n"
    return:
      type: System.Int32
      description: "\n<p>Not implemented.</p>\n"
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "\n<p>Always.</p>\n"
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: System.Xml.XmlDictionaryReader.ReadValueAsBase64(System.Byte(), System.Int32, System.Int32)
  name.vb: ReadValueAsBase64(Byte(), Int32, Int32)
- uid: System.Xml.XmlDictionaryReader.StartCanonicalization(System.IO.Stream,System.Boolean,System.String[])
  commentId: M:System.Xml.XmlDictionaryReader.StartCanonicalization(System.IO.Stream,System.Boolean,System.String[])
  id: StartCanonicalization(System.IO.Stream,System.Boolean,System.String[])
  parent: System.Xml.XmlDictionaryReader
  langs:
  - csharp
  - vb
  name: StartCanonicalization(Stream, Boolean, String[])
  fullName: System.Xml.XmlDictionaryReader.StartCanonicalization(System.IO.Stream, System.Boolean, System.String[])
  type: Method
  source:
    remote:
      path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: StartCanonicalization
    path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
    startLine: 238
  assemblies:
  - System.Runtime.Serialization.Xml
  namespace: System.Xml
  summary: "\n<p>This method is not yet implemented.</p>\n"
  remarks: "\n<p>Start reading the canonical octets of the XML being read to this reader from the supplied stream until the matching <strong>EndCanonicalization</strong> call is made. The content read from the main reader stream is unaffected by this call. <em>includeComments</em> defines whether comments are to be included in the canonical input and <em>inclusivePrefixes</em> provides the list of prefixes to be treated as inclusive prefixes with the exclusive canonicalization algorithm.</p>\n"
  syntax:
    content: public virtual void StartCanonicalization(Stream stream, bool includeComments, string[] inclusivePrefixes)
    content.vb: Public Overridable Sub StartCanonicalization(stream As Stream, includeComments As Boolean, inclusivePrefixes As String())
    parameters:
    - id: stream
      type: System.IO.Stream
      description: "\n<p>The stream to read from.</p>\n"
    - id: includeComments
      type: System.Boolean
      description: "\n<p>Determines whether comments are included.</p>\n"
    - id: inclusivePrefixes
      type: System.String[]
      description: "\n<p>The prefixes to be included.</p>\n"
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "\n<p>Always.</p>\n"
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: System.Xml.XmlDictionaryReader.StartCanonicalization(System.IO.Stream, System.Boolean, System.String())
  name.vb: StartCanonicalization(Stream, Boolean, String())
- uid: System.Xml.XmlDictionaryReader.TryGetArrayLength(System.Int32@)
  commentId: M:System.Xml.XmlDictionaryReader.TryGetArrayLength(System.Int32@)
  id: TryGetArrayLength(System.Int32@)
  parent: System.Xml.XmlDictionaryReader
  langs:
  - csharp
  - vb
  name: TryGetArrayLength(out Int32)
  fullName: System.Xml.XmlDictionaryReader.TryGetArrayLength(out System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: TryGetArrayLength
    path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
    startLine: 239
  assemblies:
  - System.Runtime.Serialization.Xml
  namespace: System.Xml
  summary: "\n<p>Not implemented in this class (it always returns <strong>false</strong>). May be overridden in derived classes.</p>\n"
  example:
  - 
  syntax:
    content: public virtual bool TryGetArrayLength(out int count)
    content.vb: Public Overridable Function TryGetArrayLength(ByRef count As Integer) As Boolean
    parameters:
    - id: count
      type: System.Int32
      description: "\n<p>Returns 0, unless overridden in a derived class.</p>\n"
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>false</strong>, unless overridden in a derived class.</p>\n"
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: System.Xml.XmlDictionaryReader.TryGetArrayLength(ByRef System.Int32)
  name.vb: TryGetArrayLength(ByRef Int32)
- uid: System.Xml.XmlDictionaryReader.TryGetBase64ContentLength(System.Int32@)
  commentId: M:System.Xml.XmlDictionaryReader.TryGetBase64ContentLength(System.Int32@)
  id: TryGetBase64ContentLength(System.Int32@)
  parent: System.Xml.XmlDictionaryReader
  langs:
  - csharp
  - vb
  name: TryGetBase64ContentLength(out Int32)
  fullName: System.Xml.XmlDictionaryReader.TryGetBase64ContentLength(out System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: TryGetBase64ContentLength
    path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
    startLine: 240
  assemblies:
  - System.Runtime.Serialization.Xml
  namespace: System.Xml
  summary: "\n<p>Not implemented in this class (it always returns <strong>false</strong>). May be overridden in derived classes.</p>\n"
  example:
  - 
  syntax:
    content: public virtual bool TryGetBase64ContentLength(out int length)
    content.vb: Public Overridable Function TryGetBase64ContentLength(ByRef length As Integer) As Boolean
    parameters:
    - id: length
      type: System.Int32
      description: "\n<p>Returns 0, unless overridden in a derived class.</p>\n"
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>false</strong>, unless overridden in a derived class.</p>\n"
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: System.Xml.XmlDictionaryReader.TryGetBase64ContentLength(ByRef System.Int32)
  name.vb: TryGetBase64ContentLength(ByRef Int32)
- uid: System.Xml.XmlDictionaryReader.TryGetLocalNameAsDictionaryString(System.Xml.XmlDictionaryString@)
  commentId: M:System.Xml.XmlDictionaryReader.TryGetLocalNameAsDictionaryString(System.Xml.XmlDictionaryString@)
  id: TryGetLocalNameAsDictionaryString(System.Xml.XmlDictionaryString@)
  parent: System.Xml.XmlDictionaryReader
  langs:
  - csharp
  - vb
  name: TryGetLocalNameAsDictionaryString(out XmlDictionaryString)
  fullName: System.Xml.XmlDictionaryReader.TryGetLocalNameAsDictionaryString(out System.Xml.XmlDictionaryString)
  type: Method
  source:
    remote:
      path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: TryGetLocalNameAsDictionaryString
    path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
    startLine: 241
  assemblies:
  - System.Runtime.Serialization.Xml
  namespace: System.Xml
  summary: "\n<p>Not implemented in this class (it always returns <strong>false</strong>). May be overridden in derived classes.</p>\n"
  example:
  - 
  syntax:
    content: public virtual bool TryGetLocalNameAsDictionaryString(out XmlDictionaryString localName)
    content.vb: Public Overridable Function TryGetLocalNameAsDictionaryString(ByRef localName As XmlDictionaryString) As Boolean
    parameters:
    - id: localName
      type: System.Xml.XmlDictionaryString
      description: "\n<p>Returns <strong>null</strong>, unless overridden in a derived class. .</p>\n"
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>false</strong>, unless overridden in a derived class.</p>\n"
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: System.Xml.XmlDictionaryReader.TryGetLocalNameAsDictionaryString(ByRef System.Xml.XmlDictionaryString)
  name.vb: TryGetLocalNameAsDictionaryString(ByRef XmlDictionaryString)
- uid: System.Xml.XmlDictionaryReader.TryGetNamespaceUriAsDictionaryString(System.Xml.XmlDictionaryString@)
  commentId: M:System.Xml.XmlDictionaryReader.TryGetNamespaceUriAsDictionaryString(System.Xml.XmlDictionaryString@)
  id: TryGetNamespaceUriAsDictionaryString(System.Xml.XmlDictionaryString@)
  parent: System.Xml.XmlDictionaryReader
  langs:
  - csharp
  - vb
  name: TryGetNamespaceUriAsDictionaryString(out XmlDictionaryString)
  fullName: System.Xml.XmlDictionaryReader.TryGetNamespaceUriAsDictionaryString(out System.Xml.XmlDictionaryString)
  type: Method
  source:
    remote:
      path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: TryGetNamespaceUriAsDictionaryString
    path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
    startLine: 242
  assemblies:
  - System.Runtime.Serialization.Xml
  namespace: System.Xml
  summary: "\n<p>Not implemented in this class (it always returns <strong>false</strong>). May be overridden in derived classes.</p>\n"
  example:
  - 
  syntax:
    content: public virtual bool TryGetNamespaceUriAsDictionaryString(out XmlDictionaryString namespaceUri)
    content.vb: Public Overridable Function TryGetNamespaceUriAsDictionaryString(ByRef namespaceUri As XmlDictionaryString) As Boolean
    parameters:
    - id: namespaceUri
      type: System.Xml.XmlDictionaryString
      description: "\n<p>Returns <strong>null</strong>, unless overridden in a derived class.</p>\n"
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>false</strong>, unless overridden in a derived class.</p>\n"
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: System.Xml.XmlDictionaryReader.TryGetNamespaceUriAsDictionaryString(ByRef System.Xml.XmlDictionaryString)
  name.vb: TryGetNamespaceUriAsDictionaryString(ByRef XmlDictionaryString)
- uid: System.Xml.XmlDictionaryReader.TryGetValueAsDictionaryString(System.Xml.XmlDictionaryString@)
  commentId: M:System.Xml.XmlDictionaryReader.TryGetValueAsDictionaryString(System.Xml.XmlDictionaryString@)
  id: TryGetValueAsDictionaryString(System.Xml.XmlDictionaryString@)
  parent: System.Xml.XmlDictionaryReader
  langs:
  - csharp
  - vb
  name: TryGetValueAsDictionaryString(out XmlDictionaryString)
  fullName: System.Xml.XmlDictionaryReader.TryGetValueAsDictionaryString(out System.Xml.XmlDictionaryString)
  type: Method
  source:
    remote:
      path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: TryGetValueAsDictionaryString
    path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
    startLine: 243
  assemblies:
  - System.Runtime.Serialization.Xml
  namespace: System.Xml
  summary: "\n<p>Not implemented in this class (it always returns <strong>false</strong>). May be overridden in derived classes.</p>\n"
  example:
  - 
  syntax:
    content: public virtual bool TryGetValueAsDictionaryString(out XmlDictionaryString value)
    content.vb: Public Overridable Function TryGetValueAsDictionaryString(ByRef value As XmlDictionaryString) As Boolean
    parameters:
    - id: value
      type: System.Xml.XmlDictionaryString
      description: "\n<p>Returns <strong>null</strong>, unless overridden in a derived class.</p>\n"
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>false</strong>, unless overridden in a derived class.</p>\n"
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: System.Xml.XmlDictionaryReader.TryGetValueAsDictionaryString(ByRef System.Xml.XmlDictionaryString)
  name.vb: TryGetValueAsDictionaryString(ByRef XmlDictionaryString)
references:
- uid: System.Xml
  isExternal: false
  name: System.Xml
  fullName: System.Xml
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  fullName: System.Boolean
- uid: System.Xml.XmlDictionaryReaderQuotas
  parent: System.Xml
  isExternal: false
  name: XmlDictionaryReaderQuotas
  fullName: System.Xml.XmlDictionaryReaderQuotas
- uid: System.Byte[]
  isExternal: true
  name: Byte[]
  fullName: System.Byte[]
  fullname.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    fullName: ()
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  fullName: System.Int32
- uid: System.Xml.IXmlDictionary
  parent: System.Xml
  isExternal: false
  name: IXmlDictionary
  fullName: System.Xml.IXmlDictionary
- uid: System.Xml.XmlDictionaryReader
  parent: System.Xml
  isExternal: false
  name: XmlDictionaryReader
  fullName: System.Xml.XmlDictionaryReader
- uid: System.Xml.XmlBinaryReaderSession
  parent: System.Xml
  isExternal: false
  name: XmlBinaryReaderSession
  fullName: System.Xml.XmlBinaryReaderSession
- uid: System.IO.Stream
  parent: System.IO
  isExternal: false
  name: Stream
  fullName: System.IO.Stream
- uid: System.IO
  isExternal: false
  name: System.IO
  fullName: System.IO
- uid: System.Xml.XmlReader
  parent: System.Xml
  isExternal: false
  name: XmlReader
  fullName: System.Xml.XmlReader
- uid: System.Text.Encoding
  parent: System.Text
  isExternal: false
  name: Encoding
  fullName: System.Text.Encoding
- uid: System.Xml.OnXmlDictionaryReaderClose
  parent: System.Xml
  isExternal: false
  name: OnXmlDictionaryReaderClose
  fullName: System.Xml.OnXmlDictionaryReaderClose
- uid: System.Text
  isExternal: false
  name: System.Text
  fullName: System.Text
- uid: System.Xml.XmlDictionaryString
  parent: System.Xml
  isExternal: false
  name: XmlDictionaryString
  fullName: System.Xml.XmlDictionaryString
- uid: System.String
  parent: System
  isExternal: false
  name: String
  fullName: System.String
- uid: System.String[]
  isExternal: true
  name: String[]
  fullName: System.String[]
  fullname.vb: System.String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ()
    fullName: ()
- uid: System.Xml.XmlDictionaryString[]
  isExternal: false
  name: XmlDictionaryString[]
  fullName: System.Xml.XmlDictionaryString[]
  fullname.vb: System.Xml.XmlDictionaryString()
  name.vb: XmlDictionaryString()
  spec.csharp:
  - uid: System.Xml.XmlDictionaryString
    name: XmlDictionaryString
    fullName: System.Xml.XmlDictionaryString
  - name: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Xml.XmlDictionaryString
    name: XmlDictionaryString
    fullName: System.Xml.XmlDictionaryString
  - name: ()
    fullName: ()
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  fullName: System.Type
- uid: System.Xml.XmlNodeType
  parent: System.Xml
  isExternal: false
  name: XmlNodeType
  fullName: System.Xml.XmlNodeType
- uid: System.Boolean[]
  isExternal: true
  name: Boolean[]
  fullName: System.Boolean[]
  fullname.vb: System.Boolean()
  name.vb: Boolean()
  spec.csharp:
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ()
    fullName: ()
- uid: System.DateTime[]
  isExternal: true
  name: DateTime[]
  fullName: System.DateTime[]
  fullname.vb: System.DateTime()
  name.vb: DateTime()
  spec.csharp:
  - uid: System.DateTime
    name: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.DateTime
    name: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: ()
    fullName: ()
- uid: System.Decimal[]
  isExternal: true
  name: Decimal[]
  fullName: System.Decimal[]
  fullname.vb: System.Decimal()
  name.vb: Decimal()
  spec.csharp:
  - uid: System.Decimal
    name: Decimal
    fullName: System.Decimal
    isExternal: true
  - name: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Decimal
    name: Decimal
    fullName: System.Decimal
    isExternal: true
  - name: ()
    fullName: ()
- uid: System.Double[]
  isExternal: true
  name: Double[]
  fullName: System.Double[]
  fullname.vb: System.Double()
  name.vb: Double()
  spec.csharp:
  - uid: System.Double
    name: Double
    fullName: System.Double
    isExternal: true
  - name: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Double
    name: Double
    fullName: System.Double
    isExternal: true
  - name: ()
    fullName: ()
- uid: System.Guid[]
  isExternal: true
  name: Guid[]
  fullName: System.Guid[]
  fullname.vb: System.Guid()
  name.vb: Guid()
  spec.csharp:
  - uid: System.Guid
    name: Guid
    fullName: System.Guid
    isExternal: true
  - name: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Guid
    name: Guid
    fullName: System.Guid
    isExternal: true
  - name: ()
    fullName: ()
- uid: System.Int16[]
  isExternal: true
  name: Int16[]
  fullName: System.Int16[]
  fullname.vb: System.Int16()
  name.vb: Int16()
  spec.csharp:
  - uid: System.Int16
    name: Int16
    fullName: System.Int16
    isExternal: true
  - name: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Int16
    name: Int16
    fullName: System.Int16
    isExternal: true
  - name: ()
    fullName: ()
- uid: System.Int32[]
  isExternal: true
  name: Int32[]
  fullName: System.Int32[]
  fullname.vb: System.Int32()
  name.vb: Int32()
  spec.csharp:
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ()
    fullName: ()
- uid: System.Int64[]
  isExternal: true
  name: Int64[]
  fullName: System.Int64[]
  fullname.vb: System.Int64()
  name.vb: Int64()
  spec.csharp:
  - uid: System.Int64
    name: Int64
    fullName: System.Int64
    isExternal: true
  - name: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Int64
    name: Int64
    fullName: System.Int64
    isExternal: true
  - name: ()
    fullName: ()
- uid: System.Single[]
  isExternal: true
  name: Single[]
  fullName: System.Single[]
  fullname.vb: System.Single()
  name.vb: Single()
  spec.csharp:
  - uid: System.Single
    name: Single
    fullName: System.Single
    isExternal: true
  - name: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Single
    name: Single
    fullName: System.Single
    isExternal: true
  - name: ()
    fullName: ()
- uid: System.TimeSpan[]
  isExternal: false
  name: TimeSpan[]
  fullName: System.TimeSpan[]
  fullname.vb: System.TimeSpan()
  name.vb: TimeSpan()
  spec.csharp:
  - uid: System.TimeSpan
    name: TimeSpan
    fullName: System.TimeSpan
  - name: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.TimeSpan
    name: TimeSpan
    fullName: System.TimeSpan
  - name: ()
    fullName: ()
- uid: System.Xml.IXmlNamespaceResolver
  parent: System.Xml
  isExternal: false
  name: IXmlNamespaceResolver
  fullName: System.Xml.IXmlNamespaceResolver
- uid: System.Char[]
  isExternal: true
  name: Char[]
  fullName: System.Char[]
  fullname.vb: System.Char()
  name.vb: Char()
  spec.csharp:
  - uid: System.Char
    name: Char
    fullName: System.Char
    isExternal: true
  - name: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Char
    name: Char
    fullName: System.Char
    isExternal: true
  - name: ()
    fullName: ()
- uid: System.Decimal
  parent: System
  isExternal: false
  name: Decimal
  fullName: System.Decimal
- uid: System.Single
  parent: System
  isExternal: false
  name: Single
  fullName: System.Single
- uid: System.Guid
  parent: System
  isExternal: false
  name: Guid
  fullName: System.Guid
- uid: System.TimeSpan
  parent: System
  isExternal: false
  name: TimeSpan
  fullName: System.TimeSpan
- uid: System.Xml.UniqueId
  parent: System.Xml
  isExternal: false
  name: UniqueId
  fullName: System.Xml.UniqueId
- uid: System.Double
  parent: System
  isExternal: false
  name: Double
  fullName: System.Double
- uid: System.Int64
  parent: System
  isExternal: false
  name: Int64
  fullName: System.Int64
- uid: System.ArgumentNullException
  isExternal: false
  name: ArgumentNullException
  fullName: System.ArgumentNullException
- uid: System.ArgumentOutOfRangeException
  isExternal: false
  name: ArgumentOutOfRangeException
  fullName: System.ArgumentOutOfRangeException
- uid: System.NotSupportedException
  parent: System
  isExternal: false
  name: NotSupportedException
  fullName: System.NotSupportedException
- uid: System.Xml.XmlException
  isExternal: false
  name: XmlException
  fullName: System.Xml.XmlException
- uid: System.ArgumentException
  parent: System
  isExternal: false
  name: ArgumentException
  fullName: System.ArgumentException
- uid: System.FormatException
  parent: System
  isExternal: false
  name: FormatException
  fullName: System.FormatException
