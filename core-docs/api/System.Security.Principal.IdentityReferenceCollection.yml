items:
- uid: System.Security.Principal.IdentityReferenceCollection
  commentId: T:System.Security.Principal.IdentityReferenceCollection
  id: IdentityReferenceCollection
  parent: System.Security.Principal
  children:
  - System.Security.Principal.IdentityReferenceCollection.#ctor
  - System.Security.Principal.IdentityReferenceCollection.#ctor(System.Int32)
  - System.Security.Principal.IdentityReferenceCollection.Add(System.Security.Principal.IdentityReference)
  - System.Security.Principal.IdentityReferenceCollection.Clear
  - System.Security.Principal.IdentityReferenceCollection.Contains(System.Security.Principal.IdentityReference)
  - System.Security.Principal.IdentityReferenceCollection.CopyTo(System.Security.Principal.IdentityReference[],System.Int32)
  - System.Security.Principal.IdentityReferenceCollection.Count
  - System.Security.Principal.IdentityReferenceCollection.GetEnumerator
  - System.Security.Principal.IdentityReferenceCollection.Item(System.Int32)
  - System.Security.Principal.IdentityReferenceCollection.Remove(System.Security.Principal.IdentityReference)
  - System.Security.Principal.IdentityReferenceCollection.Translate(System.Type)
  - System.Security.Principal.IdentityReferenceCollection.Translate(System.Type,System.Boolean)
  langs:
  - csharp
  - vb
  name: IdentityReferenceCollection
  fullName: System.Security.Principal.IdentityReferenceCollection
  type: Class
  source:
    remote:
      path: src/System.Security.Principal.Windows/src/System/Security/Principal/IRCollection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IdentityReferenceCollection
    path: src/System.Security.Principal.Windows/src/System/Security/Principal/IRCollection.cs
    startLine: 13
  assemblies:
  - System.Security.Principal.Windows
  namespace: System.Security.Principal
  summary: "\n<p>Represents a collection of <xref href=\"System.Security.Principal.IdentityReference\" data-throw-if-not-resolved=\"false\"></xref> objects and provides a means of converting sets of <xref href=\"System.Security.Principal.IdentityReference\" data-throw-if-not-resolved=\"false\"></xref>-derived objects to <xref href=\"System.Security.Principal.IdentityReference\" data-throw-if-not-resolved=\"false\"></xref>-derived types. </p>\n"
  example:
  - 
  syntax:
    content: 'public class IdentityReferenceCollection : ICollection<IdentityReference>'
    content.vb: >-
      Public Class IdentityReferenceCollection
          Inherits ICollection(Of IdentityReference)
  inheritance:
  - System.Object
  implements:
  - System.Collections.Generic.IEnumerable{System.Security.Principal.IdentityReference}
  - System.Collections.IEnumerable
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: System.Security.Principal.IdentityReferenceCollection.#ctor
  commentId: M:System.Security.Principal.IdentityReferenceCollection.#ctor
  id: '#ctor'
  parent: System.Security.Principal.IdentityReferenceCollection
  langs:
  - csharp
  - vb
  name: IdentityReferenceCollection()
  fullName: System.Security.Principal.IdentityReferenceCollection.IdentityReferenceCollection()
  type: Constructor
  source:
    remote:
      path: src/System.Security.Principal.Windows/src/System/Security/Principal/IRCollection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Security.Principal.Windows/src/System/Security/Principal/IRCollection.cs
    startLine: 31
  assemblies:
  - System.Security.Principal.Windows
  namespace: System.Security.Principal
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Security.Principal.IdentityReferenceCollection\" data-throw-if-not-resolved=\"false\"></xref> class with zero items in the collection.</p>\n"
  example:
  - 
  syntax:
    content: public IdentityReferenceCollection()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Security.Principal.IdentityReferenceCollection.#ctor(System.Int32)
  commentId: M:System.Security.Principal.IdentityReferenceCollection.#ctor(System.Int32)
  id: '#ctor(System.Int32)'
  parent: System.Security.Principal.IdentityReferenceCollection
  langs:
  - csharp
  - vb
  name: IdentityReferenceCollection(Int32)
  fullName: System.Security.Principal.IdentityReferenceCollection.IdentityReferenceCollection(System.Int32)
  type: Constructor
  source:
    remote:
      path: src/System.Security.Principal.Windows/src/System/Security/Principal/IRCollection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Security.Principal.Windows/src/System/Security/Principal/IRCollection.cs
    startLine: 40
  assemblies:
  - System.Security.Principal.Windows
  namespace: System.Security.Principal
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Security.Principal.IdentityReferenceCollection\" data-throw-if-not-resolved=\"false\"></xref> class by using the specified initial size.</p>\n"
  example:
  - 
  syntax:
    content: public IdentityReferenceCollection(int capacity)
    content.vb: Public Sub New(capacity As Integer)
    parameters:
    - id: capacity
      type: System.Int32
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Security.Principal.IdentityReferenceCollection.Count
  commentId: P:System.Security.Principal.IdentityReferenceCollection.Count
  id: Count
  parent: System.Security.Principal.IdentityReferenceCollection
  langs:
  - csharp
  - vb
  name: Count
  fullName: System.Security.Principal.IdentityReferenceCollection.Count
  type: Property
  source:
    remote:
      path: src/System.Security.Principal.Windows/src/System/Security/Principal/IRCollection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Count
    path: src/System.Security.Principal.Windows/src/System/Security/Principal/IRCollection.cs
    startLine: 54
  assemblies:
  - System.Security.Principal.Windows
  namespace: System.Security.Principal
  summary: "\n<p>Gets the number of items in the <xref href=\"System.Security.Principal.IdentityReferenceCollection\" data-throw-if-not-resolved=\"false\"></xref> collection.</p>\n"
  example:
  - 
  syntax:
    content: public int Count { get; }
    content.vb: Public ReadOnly Property Count As Integer
    parameters: []
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Security.Principal.IdentityReferenceCollection.Item(System.Int32)
  commentId: P:System.Security.Principal.IdentityReferenceCollection.Item(System.Int32)
  id: Item(System.Int32)
  parent: System.Security.Principal.IdentityReferenceCollection
  langs:
  - csharp
  - vb
  name: Item[Int32]
  fullName: System.Security.Principal.IdentityReferenceCollection.Item[System.Int32]
  type: Property
  source:
    remote:
      path: src/System.Security.Principal.Windows/src/System/Security/Principal/IRCollection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: this[]
    path: src/System.Security.Principal.Windows/src/System/Security/Principal/IRCollection.cs
    startLine: 131
  assemblies:
  - System.Security.Principal.Windows
  namespace: System.Security.Principal
  summary: "\n<p>Sets or gets the node at the specified index of the <xref href=\"System.Security.Principal.IdentityReferenceCollection\" data-throw-if-not-resolved=\"false\"></xref> collection.</p>\n"
  example:
  - 
  syntax:
    content: public IdentityReference this[int index] { get; set; }
    content.vb: Public Property Item(index As Integer) As IdentityReference
    parameters:
    - id: index
      type: System.Int32
    return:
      type: System.Security.Principal.IdentityReference
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: System.Security.Principal.IdentityReferenceCollection.Item(System.Int32)
  name.vb: Item(Int32)
- uid: System.Security.Principal.IdentityReferenceCollection.Add(System.Security.Principal.IdentityReference)
  commentId: M:System.Security.Principal.IdentityReferenceCollection.Add(System.Security.Principal.IdentityReference)
  id: Add(System.Security.Principal.IdentityReference)
  parent: System.Security.Principal.IdentityReferenceCollection
  langs:
  - csharp
  - vb
  name: Add(IdentityReference)
  fullName: System.Security.Principal.IdentityReferenceCollection.Add(System.Security.Principal.IdentityReference)
  type: Method
  source:
    remote:
      path: src/System.Security.Principal.Windows/src/System/Security/Principal/IRCollection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Add
    path: src/System.Security.Principal.Windows/src/System/Security/Principal/IRCollection.cs
    startLine: 70
  assemblies:
  - System.Security.Principal.Windows
  namespace: System.Security.Principal
  summary: "\n<p>Adds an <xref href=\"System.Security.Principal.IdentityReference\" data-throw-if-not-resolved=\"false\"></xref> object to the <xref href=\"System.Security.Principal.IdentityReferenceCollection\" data-throw-if-not-resolved=\"false\"></xref> collection.</p>\n"
  example:
  - 
  syntax:
    content: public void Add(IdentityReference identity)
    content.vb: Public Sub Add(identity As IdentityReference)
    parameters:
    - id: identity
      type: System.Security.Principal.IdentityReference
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>identity</em> is <strong>null</strong>. </p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Security.Principal.IdentityReferenceCollection.Clear
  commentId: M:System.Security.Principal.IdentityReferenceCollection.Clear
  id: Clear
  parent: System.Security.Principal.IdentityReferenceCollection
  langs:
  - csharp
  - vb
  name: Clear()
  fullName: System.Security.Principal.IdentityReferenceCollection.Clear()
  type: Method
  source:
    remote:
      path: src/System.Security.Principal.Windows/src/System/Security/Principal/IRCollection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Clear
    path: src/System.Security.Principal.Windows/src/System/Security/Principal/IRCollection.cs
    startLine: 97
  assemblies:
  - System.Security.Principal.Windows
  namespace: System.Security.Principal
  summary: "\n<p>Clears all <xref href=\"System.Security.Principal.IdentityReference\" data-throw-if-not-resolved=\"false\"></xref> objects from the <xref href=\"System.Security.Principal.IdentityReferenceCollection\" data-throw-if-not-resolved=\"false\"></xref> collection.</p>\n"
  example:
  - 
  syntax:
    content: public void Clear()
    content.vb: Public Sub Clear
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Security.Principal.IdentityReferenceCollection.Contains(System.Security.Principal.IdentityReference)
  commentId: M:System.Security.Principal.IdentityReferenceCollection.Contains(System.Security.Principal.IdentityReference)
  id: Contains(System.Security.Principal.IdentityReference)
  parent: System.Security.Principal.IdentityReferenceCollection
  langs:
  - csharp
  - vb
  name: Contains(IdentityReference)
  fullName: System.Security.Principal.IdentityReferenceCollection.Contains(System.Security.Principal.IdentityReference)
  type: Method
  source:
    remote:
      path: src/System.Security.Principal.Windows/src/System/Security/Principal/IRCollection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Contains
    path: src/System.Security.Principal.Windows/src/System/Security/Principal/IRCollection.cs
    startLine: 102
  assemblies:
  - System.Security.Principal.Windows
  namespace: System.Security.Principal
  summary: "\n<p>Indicates whether the <xref href=\"System.Security.Principal.IdentityReferenceCollection\" data-throw-if-not-resolved=\"false\"></xref> collection contains the specified <xref href=\"System.Security.Principal.IdentityReference\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  example:
  - 
  syntax:
    content: public bool Contains(IdentityReference identity)
    content.vb: Public Function Contains(identity As IdentityReference) As Boolean
    parameters:
    - id: identity
      type: System.Security.Principal.IdentityReference
    return:
      type: System.Boolean
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>identity</em> is <strong>null</strong>. </p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Security.Principal.IdentityReferenceCollection.CopyTo(System.Security.Principal.IdentityReference[],System.Int32)
  commentId: M:System.Security.Principal.IdentityReferenceCollection.CopyTo(System.Security.Principal.IdentityReference[],System.Int32)
  id: CopyTo(System.Security.Principal.IdentityReference[],System.Int32)
  parent: System.Security.Principal.IdentityReferenceCollection
  langs:
  - csharp
  - vb
  name: CopyTo(IdentityReference[], Int32)
  fullName: System.Security.Principal.IdentityReferenceCollection.CopyTo(System.Security.Principal.IdentityReference[], System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Security.Principal.Windows/src/System/Security/Principal/IRCollection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CopyTo
    path: src/System.Security.Principal.Windows/src/System/Security/Principal/IRCollection.cs
    startLine: 49
  assemblies:
  - System.Security.Principal.Windows
  namespace: System.Security.Principal
  summary: "\n<p>Copies the <xref href=\"System.Security.Principal.IdentityReferenceCollection\" data-throw-if-not-resolved=\"false\"></xref> collection to an <xref href=\"System.Security.Principal.IdentityReferenceCollection\" data-throw-if-not-resolved=\"false\"></xref> array, starting at the specified index.</p>\n"
  example:
  - 
  syntax:
    content: public void CopyTo(IdentityReference[] array, int offset)
    content.vb: Public Sub CopyTo(array As IdentityReference(), offset As Integer)
    parameters:
    - id: array
      type: System.Security.Principal.IdentityReference[]
    - id: offset
      type: System.Int32
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Security.Principal.IdentityReferenceCollection.CopyTo(System.Security.Principal.IdentityReference(), System.Int32)
  name.vb: CopyTo(IdentityReference(), Int32)
- uid: System.Security.Principal.IdentityReferenceCollection.GetEnumerator
  commentId: M:System.Security.Principal.IdentityReferenceCollection.GetEnumerator
  id: GetEnumerator
  parent: System.Security.Principal.IdentityReferenceCollection
  langs:
  - csharp
  - vb
  name: GetEnumerator()
  fullName: System.Security.Principal.IdentityReferenceCollection.GetEnumerator()
  type: Method
  source:
    remote:
      path: src/System.Security.Principal.Windows/src/System/Security/Principal/IRCollection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetEnumerator
    path: src/System.Security.Principal.Windows/src/System/Security/Principal/IRCollection.cs
    startLine: 122
  assemblies:
  - System.Security.Principal.Windows
  namespace: System.Security.Principal
  summary: "\n<p>Gets an enumerator that can be used to iterate through the <xref href=\"System.Security.Principal.IdentityReferenceCollection\" data-throw-if-not-resolved=\"false\"></xref> collection.</p>\n"
  example:
  - 
  syntax:
    content: public IEnumerator<IdentityReference> GetEnumerator()
    content.vb: Public Function GetEnumerator As IEnumerator(Of IdentityReference)
    return:
      type: IEnumerator{System.Security.Principal.IdentityReference}
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Security.Principal.IdentityReferenceCollection.Remove(System.Security.Principal.IdentityReference)
  commentId: M:System.Security.Principal.IdentityReferenceCollection.Remove(System.Security.Principal.IdentityReference)
  id: Remove(System.Security.Principal.IdentityReference)
  parent: System.Security.Principal.IdentityReferenceCollection
  langs:
  - csharp
  - vb
  name: Remove(IdentityReference)
  fullName: System.Security.Principal.IdentityReferenceCollection.Remove(System.Security.Principal.IdentityReference)
  type: Method
  source:
    remote:
      path: src/System.Security.Principal.Windows/src/System/Security/Principal/IRCollection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Remove
    path: src/System.Security.Principal.Windows/src/System/Security/Principal/IRCollection.cs
    startLine: 81
  assemblies:
  - System.Security.Principal.Windows
  namespace: System.Security.Principal
  summary: "\n<p>Removes the specified <xref href=\"System.Security.Principal.IdentityReference\" data-throw-if-not-resolved=\"false\"></xref> object from the collection.</p>\n"
  example:
  - 
  syntax:
    content: public bool Remove(IdentityReference identity)
    content.vb: Public Function Remove(identity As IdentityReference) As Boolean
    parameters:
    - id: identity
      type: System.Security.Principal.IdentityReference
    return:
      type: System.Boolean
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>identity</em> is <strong>null</strong>. </p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Security.Principal.IdentityReferenceCollection.Translate(System.Type)
  commentId: M:System.Security.Principal.IdentityReferenceCollection.Translate(System.Type)
  id: Translate(System.Type)
  parent: System.Security.Principal.IdentityReferenceCollection
  langs:
  - csharp
  - vb
  name: Translate(Type)
  fullName: System.Security.Principal.IdentityReferenceCollection.Translate(System.Type)
  type: Method
  source:
    remote:
      path: src/System.Security.Principal.Windows/ref/System.Security.Principal.Windows.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Translate
    path: src/System.Security.Principal.Windows/ref/System.Security.Principal.Windows.cs
    startLine: 55
  assemblies:
  - System.Security.Principal.Windows
  namespace: System.Security.Principal
  summary: "\n<p>Converts the objects in the collection to the specified type. Calling this method is the same as calling <xref href=\"System.Security.Principal.IdentityReferenceCollection.Translate(System.Type,System.Boolean)\" data-throw-if-not-resolved=\"false\"></xref> with the second parameter set to <strong>false</strong>, which means that exceptions will not be thrown for items that fail conversion.</p>\n"
  remarks: "\n<p>Order is preserved in the returned collection, That is, the first item in the returned collection corresponds to the first item in the source collection, and so on, for each item in the collection. </p>\n<p>The items in the source collection are not required to be of the same type.</p>\n"
  example:
  - 
  syntax:
    content: public IdentityReferenceCollection Translate(Type targetType)
    content.vb: Public Function Translate(targetType As Type) As IdentityReferenceCollection
    parameters:
    - id: targetType
      type: System.Type
      description: "\n<p>The type to which items in the collection are being converted.</p>\n"
    return:
      type: System.Security.Principal.IdentityReferenceCollection
      description: "\n<p>A <xref href=\"System.Security.Principal.IdentityReferenceCollection\" data-throw-if-not-resolved=\"false\"></xref> collection that represents the converted contents of the original collection.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Security.Principal.IdentityReferenceCollection.Translate(System.Type,System.Boolean)
  commentId: M:System.Security.Principal.IdentityReferenceCollection.Translate(System.Type,System.Boolean)
  id: Translate(System.Type,System.Boolean)
  parent: System.Security.Principal.IdentityReferenceCollection
  langs:
  - csharp
  - vb
  name: Translate(Type, Boolean)
  fullName: System.Security.Principal.IdentityReferenceCollection.Translate(System.Type, System.Boolean)
  type: Method
  source:
    remote:
      path: src/System.Security.Principal.Windows/ref/System.Security.Principal.Windows.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Translate
    path: src/System.Security.Principal.Windows/ref/System.Security.Principal.Windows.cs
    startLine: 56
  assemblies:
  - System.Security.Principal.Windows
  namespace: System.Security.Principal
  summary: "\n<p>Converts the objects in the collection to the specified type and uses the specified fault tolerance to handle or ignore errors associated with a type not having a conversion mapping.</p>\n"
  remarks: "\n<p>Order is preserved in the returned collection, That is, the first item in the returned collection corresponds to the first item in the source collection, and so on, for each item in the collection. </p>\n<p>The items in the source collection are not required to be of the same type.</p>\n"
  example:
  - 
  syntax:
    content: public IdentityReferenceCollection Translate(Type targetType, bool forceSuccess)
    content.vb: Public Function Translate(targetType As Type, forceSuccess As Boolean) As IdentityReferenceCollection
    parameters:
    - id: targetType
      type: System.Type
      description: "\n<p>The type to which items in the collection are being converted.</p>\n"
    - id: forceSuccess
      type: System.Boolean
      description: "\n<p>A Boolean value that determines how conversion errors are handled.</p>\n<p>If <em>forceSuccess</em> is <strong>true</strong>, conversion errors due to a mapping not being found for the translation result in a failed conversion and exceptions being thrown.</p>\n<p>If <em>forceSuccess</em> is <strong>false</strong>, types that failed to convert due to a mapping not being found for the translation are copied without being converted into the collection being returned.</p>\n"
    return:
      type: System.Security.Principal.IdentityReferenceCollection
      description: "\n<p>A <xref href=\"System.Security.Principal.IdentityReferenceCollection\" data-throw-if-not-resolved=\"false\"></xref> collection that represents the converted contents of the original collection.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: System.Security.Principal
  isExternal: false
  name: System.Security.Principal
  fullName: System.Security.Principal
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System.Collections.Generic.IEnumerable{System.Security.Principal.IdentityReference}
  definition: System.Collections.Generic.IEnumerable`1
  name: Collections.Generic.IEnumerable<IdentityReference>
  fullName: System.Collections.Generic.IEnumerable<System.Security.Principal.IdentityReference>
  fullname.vb: System.Collections.Generic.IEnumerable(Of System.Security.Principal.IdentityReference)
  name.vb: Collections.Generic.IEnumerable(Of IdentityReference)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: Collections.Generic.IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Security.Principal.IdentityReference
    name: IdentityReference
    fullName: System.Security.Principal.IdentityReference
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: Collections.Generic.IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Security.Principal.IdentityReference
    name: IdentityReference
    fullName: System.Security.Principal.IdentityReference
  - name: )
    fullName: )
- uid: System.Collections.IEnumerable
  parent: System.Collections
  isExternal: false
  name: Collections.IEnumerable
  fullName: System.Collections.IEnumerable
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Collections.Generic.IEnumerable`1
  parent: System.Collections.Generic
  isExternal: false
  name: Collections.Generic.IEnumerable<>
  fullName: System.Collections.Generic.IEnumerable<>
  fullname.vb: System.Collections.Generic.IEnumerable(Of )
  name.vb: Collections.Generic.IEnumerable(Of )
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: Collections.Generic.IEnumerable
    fullName: System.Collections.Generic.IEnumerable
  - name: <
    fullName: <
  - {}
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: Collections.Generic.IEnumerable
    fullName: System.Collections.Generic.IEnumerable
  - name: '(Of '
    fullName: '(Of '
  - {}
  - name: )
    fullName: )
- uid: System.Collections
  isExternal: false
  name: System.Collections
  fullName: System.Collections
- uid: System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  fullName: System.Int32
- uid: System.Security.Principal.IdentityReference
  parent: System.Security.Principal
  isExternal: false
  name: Principal.IdentityReference
  fullName: System.Security.Principal.IdentityReference
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  fullName: System.Boolean
- uid: System.Security.Principal.IdentityReference[]
  isExternal: false
  name: IdentityReference[]
  fullName: System.Security.Principal.IdentityReference[]
  fullname.vb: System.Security.Principal.IdentityReference()
  name.vb: IdentityReference()
  spec.csharp:
  - uid: System.Security.Principal.IdentityReference
    name: IdentityReference
    fullName: System.Security.Principal.IdentityReference
  - name: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Security.Principal.IdentityReference
    name: IdentityReference
    fullName: System.Security.Principal.IdentityReference
  - name: ()
    fullName: ()
- uid: System.Collections.Generic.IEnumerator{System.Security.Principal.IdentityReference}
  definition: System.Collections.Generic.IEnumerator`1
  name: Collections.Generic.IEnumerator<IdentityReference>
  fullName: System.Collections.Generic.IEnumerator<System.Security.Principal.IdentityReference>
  fullname.vb: System.Collections.Generic.IEnumerator(Of System.Security.Principal.IdentityReference)
  name.vb: Collections.Generic.IEnumerator(Of IdentityReference)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: Collections.Generic.IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Security.Principal.IdentityReference
    name: IdentityReference
    fullName: System.Security.Principal.IdentityReference
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: Collections.Generic.IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Security.Principal.IdentityReference
    name: IdentityReference
    fullName: System.Security.Principal.IdentityReference
  - name: )
    fullName: )
- uid: System.Collections.Generic.IEnumerator`1
  parent: System.Collections.Generic
  isExternal: false
  name: Collections.Generic.IEnumerator<>
  fullName: System.Collections.Generic.IEnumerator<>
  fullname.vb: System.Collections.Generic.IEnumerator(Of )
  name.vb: Collections.Generic.IEnumerator(Of )
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: Collections.Generic.IEnumerator
    fullName: System.Collections.Generic.IEnumerator
  - name: <
    fullName: <
  - {}
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: Collections.Generic.IEnumerator
    fullName: System.Collections.Generic.IEnumerator
  - name: '(Of '
    fullName: '(Of '
  - {}
  - name: )
    fullName: )
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  fullName: System.Type
- uid: System.Security.Principal.IdentityReferenceCollection
  parent: System.Security.Principal
  isExternal: false
  name: IdentityReferenceCollection
  fullName: System.Security.Principal.IdentityReferenceCollection
- uid: System.ArgumentNullException
  isExternal: false
  name: ArgumentNullException
  fullName: System.ArgumentNullException
