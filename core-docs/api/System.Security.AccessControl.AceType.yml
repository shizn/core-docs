items:
- uid: System.Security.AccessControl.AceType
  commentId: T:System.Security.AccessControl.AceType
  id: AceType
  parent: System.Security.AccessControl
  children:
  - System.Security.AccessControl.AceType.AccessAllowed
  - System.Security.AccessControl.AceType.AccessAllowedCallback
  - System.Security.AccessControl.AceType.AccessAllowedCallbackObject
  - System.Security.AccessControl.AceType.AccessAllowedCompound
  - System.Security.AccessControl.AceType.AccessAllowedObject
  - System.Security.AccessControl.AceType.AccessDenied
  - System.Security.AccessControl.AceType.AccessDeniedCallback
  - System.Security.AccessControl.AceType.AccessDeniedCallbackObject
  - System.Security.AccessControl.AceType.AccessDeniedObject
  - System.Security.AccessControl.AceType.MaxDefinedAceType
  - System.Security.AccessControl.AceType.SystemAlarm
  - System.Security.AccessControl.AceType.SystemAlarmCallback
  - System.Security.AccessControl.AceType.SystemAlarmCallbackObject
  - System.Security.AccessControl.AceType.SystemAlarmObject
  - System.Security.AccessControl.AceType.SystemAudit
  - System.Security.AccessControl.AceType.SystemAuditCallback
  - System.Security.AccessControl.AceType.SystemAuditCallbackObject
  - System.Security.AccessControl.AceType.SystemAuditObject
  langs:
  - csharp
  - vb
  name: AceType
  fullName: System.Security.AccessControl.AceType
  type: Enum
  source:
    remote:
      path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: AceType
    path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs
    startLine: 83
  assemblies:
  - System.Security.AccessControl
  namespace: System.Security.AccessControl
  summary: "\n<p>Defines the available access control entry (ACE) types.</p>\n"
  remarks: "\n<p>\n<xref href=\"System.Security.AccessControl.AceType.MaxDefinedAceType\" data-throw-if-not-resolved=\"false\"></xref> is the largest currently defined ACE type. Custom ACE types must be defined to have values larger than <xref href=\"System.Security.AccessControl.AceType.MaxDefinedAceType\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  example:
  - "\n<p></p>\n"
  syntax:
    content: 'public enum AceType : byte'
    content.vb: Public Enum AceType As Byte
  modifiers.csharp:
  - public
  - enum
  modifiers.vb:
  - Public
  - Enum
- uid: System.Security.AccessControl.AceType.AccessAllowed
  commentId: F:System.Security.AccessControl.AceType.AccessAllowed
  id: AccessAllowed
  parent: System.Security.AccessControl.AceType
  langs:
  - csharp
  - vb
  name: AccessAllowed
  fullName: System.Security.AccessControl.AceType.AccessAllowed
  type: Field
  source:
    remote:
      path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: AccessAllowed
    path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs
    startLine: 85
  assemblies:
  - System.Security.AccessControl
  namespace: System.Security.AccessControl
  summary: "\n<p>Allows access to an object for a specific trustee identified by an <xref href=\"System.Security.Principal.IdentityReference\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  syntax:
    content: AccessAllowed = null
    content.vb: AccessAllowed = Nothing
    return:
      type: System.Security.AccessControl.AceType
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Security.AccessControl.AceType.AccessAllowedCallback
  commentId: F:System.Security.AccessControl.AceType.AccessAllowedCallback
  id: AccessAllowedCallback
  parent: System.Security.AccessControl.AceType
  langs:
  - csharp
  - vb
  name: AccessAllowedCallback
  fullName: System.Security.AccessControl.AceType.AccessAllowedCallback
  type: Field
  source:
    remote:
      path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: AccessAllowedCallback
    path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs
    startLine: 86
  assemblies:
  - System.Security.AccessControl
  namespace: System.Security.AccessControl
  summary: "\n<p>Allows access to an object for a specific trustee identified by an <xref href=\"System.Security.Principal.IdentityReference\" data-throw-if-not-resolved=\"false\"></xref> object. This ACE type may contain optional callback data. The callback data is a resource manager–specific BLOB that is not interpreted.</p>\n"
  syntax:
    content: AccessAllowedCallback = null
    content.vb: AccessAllowedCallback = Nothing
    return:
      type: System.Security.AccessControl.AceType
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Security.AccessControl.AceType.AccessAllowedCallbackObject
  commentId: F:System.Security.AccessControl.AceType.AccessAllowedCallbackObject
  id: AccessAllowedCallbackObject
  parent: System.Security.AccessControl.AceType
  langs:
  - csharp
  - vb
  name: AccessAllowedCallbackObject
  fullName: System.Security.AccessControl.AceType.AccessAllowedCallbackObject
  type: Field
  source:
    remote:
      path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: AccessAllowedCallbackObject
    path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs
    startLine: 87
  assemblies:
  - System.Security.AccessControl
  namespace: System.Security.AccessControl
  summary: "\n<p>Allows access to an object, property set, or property. The ACE contains a set of access rights, a GUID that identifies the type of object, and an <xref href=\"System.Security.Principal.IdentityReference\" data-throw-if-not-resolved=\"false\"></xref> object that identifies the trustee to whom the system will grant access. The ACE also contains a GUID and a set of flags that control inheritance of the ACE by child objects. This ACE type may contain optional callback data. The callback data is a resource manager–specific BLOB that is not interpreted.</p>\n"
  syntax:
    content: AccessAllowedCallbackObject = null
    content.vb: AccessAllowedCallbackObject = Nothing
    return:
      type: System.Security.AccessControl.AceType
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Security.AccessControl.AceType.AccessAllowedCompound
  commentId: F:System.Security.AccessControl.AceType.AccessAllowedCompound
  id: AccessAllowedCompound
  parent: System.Security.AccessControl.AceType
  langs:
  - csharp
  - vb
  name: AccessAllowedCompound
  fullName: System.Security.AccessControl.AceType.AccessAllowedCompound
  type: Field
  source:
    remote:
      path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: AccessAllowedCompound
    path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs
    startLine: 88
  assemblies:
  - System.Security.AccessControl
  namespace: System.Security.AccessControl
  summary: "\n<p>Defined but never used. Included here for completeness.</p>\n"
  syntax:
    content: AccessAllowedCompound = null
    content.vb: AccessAllowedCompound = Nothing
    return:
      type: System.Security.AccessControl.AceType
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Security.AccessControl.AceType.AccessAllowedObject
  commentId: F:System.Security.AccessControl.AceType.AccessAllowedObject
  id: AccessAllowedObject
  parent: System.Security.AccessControl.AceType
  langs:
  - csharp
  - vb
  name: AccessAllowedObject
  fullName: System.Security.AccessControl.AceType.AccessAllowedObject
  type: Field
  source:
    remote:
      path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: AccessAllowedObject
    path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs
    startLine: 89
  assemblies:
  - System.Security.AccessControl
  namespace: System.Security.AccessControl
  summary: "\n<p>Allows access to an object, property set, or property. The ACE contains a set of access rights, a GUID that identifies the type of object, and an <xref href=\"System.Security.Principal.IdentityReference\" data-throw-if-not-resolved=\"false\"></xref> object that identifies the trustee to whom the system will grant access. The ACE also contains a GUID and a set of flags that control inheritance of the ACE by child objects.</p>\n"
  syntax:
    content: AccessAllowedObject = null
    content.vb: AccessAllowedObject = Nothing
    return:
      type: System.Security.AccessControl.AceType
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Security.AccessControl.AceType.AccessDenied
  commentId: F:System.Security.AccessControl.AceType.AccessDenied
  id: AccessDenied
  parent: System.Security.AccessControl.AceType
  langs:
  - csharp
  - vb
  name: AccessDenied
  fullName: System.Security.AccessControl.AceType.AccessDenied
  type: Field
  source:
    remote:
      path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: AccessDenied
    path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs
    startLine: 90
  assemblies:
  - System.Security.AccessControl
  namespace: System.Security.AccessControl
  summary: "\n<p>Denies access to an object for a specific trustee identified by an <xref href=\"System.Security.Principal.IdentityReference\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  syntax:
    content: AccessDenied = null
    content.vb: AccessDenied = Nothing
    return:
      type: System.Security.AccessControl.AceType
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Security.AccessControl.AceType.AccessDeniedCallback
  commentId: F:System.Security.AccessControl.AceType.AccessDeniedCallback
  id: AccessDeniedCallback
  parent: System.Security.AccessControl.AceType
  langs:
  - csharp
  - vb
  name: AccessDeniedCallback
  fullName: System.Security.AccessControl.AceType.AccessDeniedCallback
  type: Field
  source:
    remote:
      path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: AccessDeniedCallback
    path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs
    startLine: 91
  assemblies:
  - System.Security.AccessControl
  namespace: System.Security.AccessControl
  summary: "\n<p>Denies access to an object for a specific trustee identified by an <xref href=\"System.Security.Principal.IdentityReference\" data-throw-if-not-resolved=\"false\"></xref> object. This ACE type can contain optional callback data. The callback data is a resource manager–specific BLOB that is not interpreted.</p>\n"
  syntax:
    content: AccessDeniedCallback = null
    content.vb: AccessDeniedCallback = Nothing
    return:
      type: System.Security.AccessControl.AceType
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Security.AccessControl.AceType.AccessDeniedCallbackObject
  commentId: F:System.Security.AccessControl.AceType.AccessDeniedCallbackObject
  id: AccessDeniedCallbackObject
  parent: System.Security.AccessControl.AceType
  langs:
  - csharp
  - vb
  name: AccessDeniedCallbackObject
  fullName: System.Security.AccessControl.AceType.AccessDeniedCallbackObject
  type: Field
  source:
    remote:
      path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: AccessDeniedCallbackObject
    path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs
    startLine: 92
  assemblies:
  - System.Security.AccessControl
  namespace: System.Security.AccessControl
  summary: "\n<p>Denies access to an object, property set, or property. The ACE contains a set of access rights, a GUID that identifies the type of object, and an <xref href=\"System.Security.Principal.IdentityReference\" data-throw-if-not-resolved=\"false\"></xref> object that identifies the trustee to whom the system will grant access. The ACE also contains a GUID and a set of flags that control inheritance of the ACE by child objects. This ACE type can contain optional callback data. The callback data is a resource manager–specific BLOB that is not interpreted.</p>\n"
  syntax:
    content: AccessDeniedCallbackObject = null
    content.vb: AccessDeniedCallbackObject = Nothing
    return:
      type: System.Security.AccessControl.AceType
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Security.AccessControl.AceType.AccessDeniedObject
  commentId: F:System.Security.AccessControl.AceType.AccessDeniedObject
  id: AccessDeniedObject
  parent: System.Security.AccessControl.AceType
  langs:
  - csharp
  - vb
  name: AccessDeniedObject
  fullName: System.Security.AccessControl.AceType.AccessDeniedObject
  type: Field
  source:
    remote:
      path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: AccessDeniedObject
    path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs
    startLine: 93
  assemblies:
  - System.Security.AccessControl
  namespace: System.Security.AccessControl
  summary: "\n<p>Denies access to an object, property set, or property. The ACE contains a set of access rights, a GUID that identifies the type of object, and an <xref href=\"System.Security.Principal.IdentityReference\" data-throw-if-not-resolved=\"false\"></xref> object that identifies the trustee to whom the system will grant access. The ACE also contains a GUID and a set of flags that control inheritance of the ACE by child objects.</p>\n"
  syntax:
    content: AccessDeniedObject = null
    content.vb: AccessDeniedObject = Nothing
    return:
      type: System.Security.AccessControl.AceType
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Security.AccessControl.AceType.MaxDefinedAceType
  commentId: F:System.Security.AccessControl.AceType.MaxDefinedAceType
  id: MaxDefinedAceType
  parent: System.Security.AccessControl.AceType
  langs:
  - csharp
  - vb
  name: MaxDefinedAceType
  fullName: System.Security.AccessControl.AceType.MaxDefinedAceType
  type: Field
  source:
    remote:
      path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: MaxDefinedAceType
    path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs
    startLine: 94
  assemblies:
  - System.Security.AccessControl
  namespace: System.Security.AccessControl
  summary: "\n<p>Tracks the maximum defined ACE type in the enumeration.</p>\n"
  syntax:
    content: MaxDefinedAceType = null
    content.vb: MaxDefinedAceType = Nothing
    return:
      type: System.Security.AccessControl.AceType
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Security.AccessControl.AceType.SystemAlarm
  commentId: F:System.Security.AccessControl.AceType.SystemAlarm
  id: SystemAlarm
  parent: System.Security.AccessControl.AceType
  langs:
  - csharp
  - vb
  name: SystemAlarm
  fullName: System.Security.AccessControl.AceType.SystemAlarm
  type: Field
  source:
    remote:
      path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: SystemAlarm
    path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs
    startLine: 95
  assemblies:
  - System.Security.AccessControl
  namespace: System.Security.AccessControl
  summary: "\n<p>Reserved for future use.</p>\n"
  syntax:
    content: SystemAlarm = null
    content.vb: SystemAlarm = Nothing
    return:
      type: System.Security.AccessControl.AceType
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Security.AccessControl.AceType.SystemAlarmCallback
  commentId: F:System.Security.AccessControl.AceType.SystemAlarmCallback
  id: SystemAlarmCallback
  parent: System.Security.AccessControl.AceType
  langs:
  - csharp
  - vb
  name: SystemAlarmCallback
  fullName: System.Security.AccessControl.AceType.SystemAlarmCallback
  type: Field
  source:
    remote:
      path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: SystemAlarmCallback
    path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs
    startLine: 96
  assemblies:
  - System.Security.AccessControl
  namespace: System.Security.AccessControl
  summary: "\n<p>Reserved for future use.</p>\n"
  syntax:
    content: SystemAlarmCallback = null
    content.vb: SystemAlarmCallback = Nothing
    return:
      type: System.Security.AccessControl.AceType
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Security.AccessControl.AceType.SystemAlarmCallbackObject
  commentId: F:System.Security.AccessControl.AceType.SystemAlarmCallbackObject
  id: SystemAlarmCallbackObject
  parent: System.Security.AccessControl.AceType
  langs:
  - csharp
  - vb
  name: SystemAlarmCallbackObject
  fullName: System.Security.AccessControl.AceType.SystemAlarmCallbackObject
  type: Field
  source:
    remote:
      path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: SystemAlarmCallbackObject
    path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs
    startLine: 97
  assemblies:
  - System.Security.AccessControl
  namespace: System.Security.AccessControl
  summary: "\n<p>Reserved for future use.</p>\n"
  syntax:
    content: SystemAlarmCallbackObject = null
    content.vb: SystemAlarmCallbackObject = Nothing
    return:
      type: System.Security.AccessControl.AceType
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Security.AccessControl.AceType.SystemAlarmObject
  commentId: F:System.Security.AccessControl.AceType.SystemAlarmObject
  id: SystemAlarmObject
  parent: System.Security.AccessControl.AceType
  langs:
  - csharp
  - vb
  name: SystemAlarmObject
  fullName: System.Security.AccessControl.AceType.SystemAlarmObject
  type: Field
  source:
    remote:
      path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: SystemAlarmObject
    path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs
    startLine: 98
  assemblies:
  - System.Security.AccessControl
  namespace: System.Security.AccessControl
  summary: "\n<p>Reserved for future use.</p>\n"
  syntax:
    content: SystemAlarmObject = null
    content.vb: SystemAlarmObject = Nothing
    return:
      type: System.Security.AccessControl.AceType
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Security.AccessControl.AceType.SystemAudit
  commentId: F:System.Security.AccessControl.AceType.SystemAudit
  id: SystemAudit
  parent: System.Security.AccessControl.AceType
  langs:
  - csharp
  - vb
  name: SystemAudit
  fullName: System.Security.AccessControl.AceType.SystemAudit
  type: Field
  source:
    remote:
      path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: SystemAudit
    path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs
    startLine: 99
  assemblies:
  - System.Security.AccessControl
  namespace: System.Security.AccessControl
  summary: "\n<p>Causes an audit message to be logged when a specified trustee attempts to gain access to an object. The trustee is identified by an <xref href=\"System.Security.Principal.IdentityReference\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  syntax:
    content: SystemAudit = null
    content.vb: SystemAudit = Nothing
    return:
      type: System.Security.AccessControl.AceType
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Security.AccessControl.AceType.SystemAuditCallback
  commentId: F:System.Security.AccessControl.AceType.SystemAuditCallback
  id: SystemAuditCallback
  parent: System.Security.AccessControl.AceType
  langs:
  - csharp
  - vb
  name: SystemAuditCallback
  fullName: System.Security.AccessControl.AceType.SystemAuditCallback
  type: Field
  source:
    remote:
      path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: SystemAuditCallback
    path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs
    startLine: 100
  assemblies:
  - System.Security.AccessControl
  namespace: System.Security.AccessControl
  summary: "\n<p>Causes an audit message to be logged when a specified trustee attempts to gain access to an object. The trustee is identified by an <xref href=\"System.Security.Principal.IdentityReference\" data-throw-if-not-resolved=\"false\"></xref> object. This ACE type can contain optional callback data. The callback data is a resource manager–specific BLOB that is not interpreted.</p>\n"
  syntax:
    content: SystemAuditCallback = null
    content.vb: SystemAuditCallback = Nothing
    return:
      type: System.Security.AccessControl.AceType
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Security.AccessControl.AceType.SystemAuditCallbackObject
  commentId: F:System.Security.AccessControl.AceType.SystemAuditCallbackObject
  id: SystemAuditCallbackObject
  parent: System.Security.AccessControl.AceType
  langs:
  - csharp
  - vb
  name: SystemAuditCallbackObject
  fullName: System.Security.AccessControl.AceType.SystemAuditCallbackObject
  type: Field
  source:
    remote:
      path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: SystemAuditCallbackObject
    path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs
    startLine: 101
  assemblies:
  - System.Security.AccessControl
  namespace: System.Security.AccessControl
  summary: "\n<p>Causes an audit message to be logged when a specified trustee attempts to gain access to an object or subobjects such as property sets or properties. The ACE contains a set of access rights, a GUID that identifies the type of object or subobject, and an <xref href=\"System.Security.Principal.IdentityReference\" data-throw-if-not-resolved=\"false\"></xref> object that identifies the trustee for whom the system will audit access. The ACE also contains a GUID and a set of flags that control inheritance of the ACE by child objects. This ACE type can contain optional callback data. The callback data is a resource manager–specific BLOB that is not interpreted.</p>\n"
  syntax:
    content: SystemAuditCallbackObject = null
    content.vb: SystemAuditCallbackObject = Nothing
    return:
      type: System.Security.AccessControl.AceType
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Security.AccessControl.AceType.SystemAuditObject
  commentId: F:System.Security.AccessControl.AceType.SystemAuditObject
  id: SystemAuditObject
  parent: System.Security.AccessControl.AceType
  langs:
  - csharp
  - vb
  name: SystemAuditObject
  fullName: System.Security.AccessControl.AceType.SystemAuditObject
  type: Field
  source:
    remote:
      path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: SystemAuditObject
    path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs
    startLine: 102
  assemblies:
  - System.Security.AccessControl
  namespace: System.Security.AccessControl
  summary: "\n<p>Causes an audit message to be logged when a specified trustee attempts to gain access to an object or subobjects such as property sets or properties. The ACE contains a set of access rights, a GUID that identifies the type of object or subobject, and an <xref href=\"System.Security.Principal.IdentityReference\" data-throw-if-not-resolved=\"false\"></xref> object that identifies the trustee for whom the system will audit access. The ACE also contains a GUID and a set of flags that control inheritance of the ACE by child objects.</p>\n"
  syntax:
    content: SystemAuditObject = null
    content.vb: SystemAuditObject = Nothing
    return:
      type: System.Security.AccessControl.AceType
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
references:
- uid: System.Security.AccessControl
  isExternal: false
  name: System.Security.AccessControl
  fullName: System.Security.AccessControl
- uid: System.Security.AccessControl.AceType
  parent: System.Security.AccessControl
  isExternal: false
  name: AceType
  fullName: System.Security.AccessControl.AceType
