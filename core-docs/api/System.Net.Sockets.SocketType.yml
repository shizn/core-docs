items:
- uid: System.Net.Sockets.SocketType
  commentId: T:System.Net.Sockets.SocketType
  id: SocketType
  parent: System.Net.Sockets
  children:
  - System.Net.Sockets.SocketType.Dgram
  - System.Net.Sockets.SocketType.Raw
  - System.Net.Sockets.SocketType.Rdm
  - System.Net.Sockets.SocketType.Seqpacket
  - System.Net.Sockets.SocketType.Stream
  - System.Net.Sockets.SocketType.Unknown
  langs:
  - csharp
  - vb
  name: SocketType
  fullName: System.Net.Sockets.SocketType
  type: Enum
  source:
    remote:
      path: src/System.Net.Sockets/ref/System.Net.Sockets.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: SocketType
    path: src/System.Net.Sockets/ref/System.Net.Sockets.cs
    startLine: 407
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  summary: "\n<p>Specifies the type of socket that an instance of the <xref href=\"System.Net.Sockets.Socket\" data-throw-if-not-resolved=\"false\"></xref> class represents.</p>\n"
  remarks: "\n<p>Before a <xref href=\"System.Net.Sockets.Socket\" data-throw-if-not-resolved=\"false\"></xref> can send and receive data, it must first be created using an <xref href=\"System.Net.Sockets.AddressFamily\" data-throw-if-not-resolved=\"false\"></xref>, a <xref href=\"System.Net.Sockets.SocketType\" data-throw-if-not-resolved=\"false\"></xref>, and a <xref href=\"System.Net.Sockets.ProtocolType\" data-throw-if-not-resolved=\"false\"></xref>. The <xref href=\"System.Net.Sockets.SocketType\" data-throw-if-not-resolved=\"false\"></xref> enumeration provides several options for defining the type of <xref href=\"System.Net.Sockets.Socket\" data-throw-if-not-resolved=\"false\"></xref> that you intend to open.</p>\n<p>\n<xref href=\"System.Net.Sockets.SocketType\" data-throw-if-not-resolved=\"false\"></xref> will sometimes implicitly indicate which <xref href=\"System.Net.Sockets.ProtocolType\" data-throw-if-not-resolved=\"false\"></xref> will be used within an <xref href=\"System.Net.Sockets.AddressFamily\" data-throw-if-not-resolved=\"false\"></xref>. For example when the <xref href=\"System.Net.Sockets.SocketType\" data-throw-if-not-resolved=\"false\"></xref> is <xref href=\"System.Net.Sockets.SocketType.Dgram\" data-throw-if-not-resolved=\"false\"></xref>, the <xref href=\"System.Net.Sockets.ProtocolType\" data-throw-if-not-resolved=\"false\"></xref> is always <xref href=\"System.Net.Sockets.ProtocolType.Udp\" data-throw-if-not-resolved=\"false\"></xref>.When the <xref href=\"System.Net.Sockets.SocketType\" data-throw-if-not-resolved=\"false\"></xref> is <xref href=\"System.Net.Sockets.SocketType.Stream\" data-throw-if-not-resolved=\"false\"></xref>, the <xref href=\"System.Net.Sockets.ProtocolType\" data-throw-if-not-resolved=\"false\"></xref> is always <xref href=\"System.Net.Sockets.ProtocolType.Tcp\" data-throw-if-not-resolved=\"false\"></xref>. If you try to create a <xref href=\"System.Net.Sockets.Socket\" data-throw-if-not-resolved=\"false\"></xref> with an incompatible combination, <xref href=\"System.Net.Sockets.Socket\" data-throw-if-not-resolved=\"false\"></xref> will throw a <xref href=\"System.Net.Sockets.SocketException\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  example:
  - "\n<p>The following example uses the <xref href=\"System.Net.Sockets.SocketType.Stream\" data-throw-if-not-resolved=\"false\"></xref> enumerated member as a parameter to the <xref href=\"System.Net.Sockets.Socket\" data-throw-if-not-resolved=\"false\"></xref> constructor.</p>SelectModeExample#1"
  syntax:
    content: public enum SocketType
    content.vb: Public Enum SocketType
  seealso:
  - type: System.Net.Sockets.AddressFamily
    commentId: T:System.Net.Sockets.AddressFamily
  - type: System.Net.Sockets.ProtocolType
    commentId: T:System.Net.Sockets.ProtocolType
  - type: System.Net.Sockets.Socket
    commentId: T:System.Net.Sockets.Socket
  modifiers.csharp:
  - public
  - enum
  modifiers.vb:
  - Public
  - Enum
- uid: System.Net.Sockets.SocketType.Dgram
  commentId: F:System.Net.Sockets.SocketType.Dgram
  id: Dgram
  parent: System.Net.Sockets.SocketType
  langs:
  - csharp
  - vb
  name: Dgram
  fullName: System.Net.Sockets.SocketType.Dgram
  type: Field
  source:
    remote:
      path: src/System.Net.Sockets/ref/System.Net.Sockets.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Dgram
    path: src/System.Net.Sockets/ref/System.Net.Sockets.cs
    startLine: 409
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  summary: "\n<p>Supports datagrams, which are connectionless, unreliable messages of a fixed (typically small) maximum length. Messages might be lost or duplicated and might arrive out of order. A <xref href=\"System.Net.Sockets.Socket\" data-throw-if-not-resolved=\"false\"></xref> of type <xref href=\"System.Net.Sockets.SocketType.Dgram\" data-throw-if-not-resolved=\"false\"></xref> requires no connection prior to sending and receiving data, and can communicate with multiple peers. <xref href=\"System.Net.Sockets.SocketType.Dgram\" data-throw-if-not-resolved=\"false\"></xref> uses the Datagram Protocol (<xref href=\"System.Net.Sockets.ProtocolType.Udp\" data-throw-if-not-resolved=\"false\"></xref>) and the <xref href=\"System.Net.Sockets.AddressFamily.InterNetwork\" data-throw-if-not-resolved=\"false\"></xref><xref href=\"System.Net.Sockets.AddressFamily\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: Dgram = 2
    return:
      type: System.Net.Sockets.SocketType
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Net.Sockets.SocketType.Raw
  commentId: F:System.Net.Sockets.SocketType.Raw
  id: Raw
  parent: System.Net.Sockets.SocketType
  langs:
  - csharp
  - vb
  name: Raw
  fullName: System.Net.Sockets.SocketType.Raw
  type: Field
  source:
    remote:
      path: src/System.Net.Sockets/ref/System.Net.Sockets.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Raw
    path: src/System.Net.Sockets/ref/System.Net.Sockets.cs
    startLine: 410
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  summary: "\n<p>Supports access to the underlying transport protocol. Using the <xref href=\"System.Net.Sockets.SocketType\" data-throw-if-not-resolved=\"false\"></xref><xref href=\"System.Net.Sockets.SocketType.Raw\" data-throw-if-not-resolved=\"false\"></xref>, you can communicate using protocols like Internet Control Message Protocol (<xref href=\"System.Net.Sockets.ProtocolType.Icmp\" data-throw-if-not-resolved=\"false\"></xref>) and Internet Group Management Protocol (<xref href=\"System.Net.Sockets.ProtocolType.Igmp\" data-throw-if-not-resolved=\"false\"></xref>). Your application must provide a complete IP header when sending. Received datagrams return with the IP header and options intact.</p>\n"
  syntax:
    content: Raw = 3
    return:
      type: System.Net.Sockets.SocketType
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Net.Sockets.SocketType.Rdm
  commentId: F:System.Net.Sockets.SocketType.Rdm
  id: Rdm
  parent: System.Net.Sockets.SocketType
  langs:
  - csharp
  - vb
  name: Rdm
  fullName: System.Net.Sockets.SocketType.Rdm
  type: Field
  source:
    remote:
      path: src/System.Net.Sockets/ref/System.Net.Sockets.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Rdm
    path: src/System.Net.Sockets/ref/System.Net.Sockets.cs
    startLine: 411
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  summary: "\n<p>Supports connectionless, message-oriented, reliably delivered messages, and preserves message boundaries in data. Rdm (Reliably Delivered Messages) messages arrive unduplicated and in order. Furthermore, the sender is notified if messages are lost. If you initialize a <strong>Socket</strong> using <xref href=\"System.Net.Sockets.SocketType.Rdm\" data-throw-if-not-resolved=\"false\"></xref>, you do not require a remote host connection before sending and receiving data. With <xref href=\"System.Net.Sockets.SocketType.Rdm\" data-throw-if-not-resolved=\"false\"></xref>, you can communicate with multiple peers.</p>\n"
  syntax:
    content: Rdm = 4
    return:
      type: System.Net.Sockets.SocketType
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Net.Sockets.SocketType.Seqpacket
  commentId: F:System.Net.Sockets.SocketType.Seqpacket
  id: Seqpacket
  parent: System.Net.Sockets.SocketType
  langs:
  - csharp
  - vb
  name: Seqpacket
  fullName: System.Net.Sockets.SocketType.Seqpacket
  type: Field
  source:
    remote:
      path: src/System.Net.Sockets/ref/System.Net.Sockets.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Seqpacket
    path: src/System.Net.Sockets/ref/System.Net.Sockets.cs
    startLine: 412
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  summary: "\n<p>Provides connection-oriented and reliable two-way transfer of ordered byte streams across a network. <xref href=\"System.Net.Sockets.SocketType.Seqpacket\" data-throw-if-not-resolved=\"false\"></xref> does not duplicate data, and it preserves boundaries within the data stream. A <strong>Socket</strong> of type <xref href=\"System.Net.Sockets.SocketType.Seqpacket\" data-throw-if-not-resolved=\"false\"></xref> communicates with a single peer and requires a remote host connection before communication can begin.</p>\n"
  syntax:
    content: Seqpacket = 5
    return:
      type: System.Net.Sockets.SocketType
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Net.Sockets.SocketType.Stream
  commentId: F:System.Net.Sockets.SocketType.Stream
  id: Stream
  parent: System.Net.Sockets.SocketType
  langs:
  - csharp
  - vb
  name: Stream
  fullName: System.Net.Sockets.SocketType.Stream
  type: Field
  source:
    remote:
      path: src/System.Net.Sockets/ref/System.Net.Sockets.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Stream
    path: src/System.Net.Sockets/ref/System.Net.Sockets.cs
    startLine: 413
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  summary: "\n<p>Supports reliable, two-way, connection-based byte streams without the duplication of data and without preservation of boundaries. A <strong>Socket</strong> of this type communicates with a single peer and requires a remote host connection before communication can begin. <xref href=\"System.Net.Sockets.SocketType.Stream\" data-throw-if-not-resolved=\"false\"></xref> uses the Transmission Control Protocol (<xref href=\"System.Net.Sockets.ProtocolType.Tcp\" data-throw-if-not-resolved=\"false\"></xref>) <xref href=\"System.Net.Sockets.ProtocolType\" data-throw-if-not-resolved=\"false\"></xref> and the <strong>InterNetwork</strong><xref href=\"System.Net.Sockets.AddressFamily\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: Stream = 1
    return:
      type: System.Net.Sockets.SocketType
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Net.Sockets.SocketType.Unknown
  commentId: F:System.Net.Sockets.SocketType.Unknown
  id: Unknown
  parent: System.Net.Sockets.SocketType
  langs:
  - csharp
  - vb
  name: Unknown
  fullName: System.Net.Sockets.SocketType.Unknown
  type: Field
  source:
    remote:
      path: src/System.Net.Sockets/ref/System.Net.Sockets.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Unknown
    path: src/System.Net.Sockets/ref/System.Net.Sockets.cs
    startLine: 414
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  summary: "\n<p>Specifies an unknown <strong>Socket</strong> type.</p>\n"
  syntax:
    content: Unknown = -1
    return:
      type: System.Net.Sockets.SocketType
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
references:
- uid: System.Net.Sockets
  isExternal: false
  name: System.Net.Sockets
  fullName: System.Net.Sockets
- uid: System.Net.Sockets.SocketType
  parent: System.Net.Sockets
  isExternal: false
  name: SocketType
  fullName: System.Net.Sockets.SocketType
