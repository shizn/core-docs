items:
- uid: System.Net.NetworkInformation.IPInterfaceProperties
  commentId: T:System.Net.NetworkInformation.IPInterfaceProperties
  id: IPInterfaceProperties
  parent: System.Net.NetworkInformation
  children:
  - System.Net.NetworkInformation.IPInterfaceProperties.#ctor
  - System.Net.NetworkInformation.IPInterfaceProperties.AnycastAddresses
  - System.Net.NetworkInformation.IPInterfaceProperties.DhcpServerAddresses
  - System.Net.NetworkInformation.IPInterfaceProperties.DnsAddresses
  - System.Net.NetworkInformation.IPInterfaceProperties.DnsSuffix
  - System.Net.NetworkInformation.IPInterfaceProperties.GatewayAddresses
  - System.Net.NetworkInformation.IPInterfaceProperties.GetIPv4Properties
  - System.Net.NetworkInformation.IPInterfaceProperties.GetIPv6Properties
  - System.Net.NetworkInformation.IPInterfaceProperties.IsDnsEnabled
  - System.Net.NetworkInformation.IPInterfaceProperties.IsDynamicDnsEnabled
  - System.Net.NetworkInformation.IPInterfaceProperties.MulticastAddresses
  - System.Net.NetworkInformation.IPInterfaceProperties.UnicastAddresses
  - System.Net.NetworkInformation.IPInterfaceProperties.WinsServersAddresses
  langs:
  - csharp
  - vb
  name: IPInterfaceProperties
  fullName: System.Net.NetworkInformation.IPInterfaceProperties
  type: Class
  source:
    remote:
      path: src/System.Net.NetworkInformation/src/System/Net/NetworkInformation/IPInterfaceProperties.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IPInterfaceProperties
    path: src/System.Net.NetworkInformation/src/System/Net/NetworkInformation/IPInterfaceProperties.cs
    startLine: 10
  assemblies:
  - System.Net.NetworkInformation
  namespace: System.Net.NetworkInformation
  summary: Provides information about network interfaces that support Internet Protocol version 4 (IPv4) or Internet Protocol version 6 (IPv6).
  syntax:
    content: 'public abstract class IPInterfaceProperties : object'
    content.vb: >-
      Public MustInherit Class IPInterfaceProperties
          Inherits Object
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: System.Net.NetworkInformation.IPInterfaceProperties.#ctor
  commentId: M:System.Net.NetworkInformation.IPInterfaceProperties.#ctor
  id: '#ctor'
  parent: System.Net.NetworkInformation.IPInterfaceProperties
  langs:
  - csharp
  - vb
  name: IPInterfaceProperties()
  fullName: System.Net.NetworkInformation.IPInterfaceProperties.IPInterfaceProperties()
  type: Constructor
  source:
    remote:
      path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs
    startLine: 174
  assemblies:
  - System.Net.NetworkInformation
  namespace: System.Net.NetworkInformation
  summary: Initializes a new instance of the <xref href="System.Net.NetworkInformation.IPInterfaceProperties" data-throw-if-not-resolved="false"></xref> class.
  syntax:
    content: protected IPInterfaceProperties()
    content.vb: Protected Sub New
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: System.Net.NetworkInformation.IPInterfaceProperties.AnycastAddresses
  commentId: P:System.Net.NetworkInformation.IPInterfaceProperties.AnycastAddresses
  id: AnycastAddresses
  parent: System.Net.NetworkInformation.IPInterfaceProperties
  langs:
  - csharp
  - vb
  name: AnycastAddresses
  fullName: System.Net.NetworkInformation.IPInterfaceProperties.AnycastAddresses
  type: Property
  source:
    remote:
      path: src/System.Net.NetworkInformation/src/System/Net/NetworkInformation/IPInterfaceProperties.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: AnycastAddresses
    path: src/System.Net.NetworkInformation/src/System/Net/NetworkInformation/IPInterfaceProperties.cs
    startLine: 40
  assemblies:
  - System.Net.NetworkInformation
  namespace: System.Net.NetworkInformation
  summary: Gets the anycast IP addresses assigned to this interface.
  syntax:
    content: public abstract IPAddressInformationCollection AnycastAddresses { get; }
    content.vb: Public MustOverride ReadOnly Property AnycastAddresses As IPAddressInformationCollection
    parameters: []
    return:
      type: System.Net.NetworkInformation.IPAddressInformationCollection
      description: An <xref href="System.Net.NetworkInformation.IPAddressInformationCollection" data-throw-if-not-resolved="false"></xref> that contains the anycast addresses for this interface.
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
- uid: System.Net.NetworkInformation.IPInterfaceProperties.DhcpServerAddresses
  commentId: P:System.Net.NetworkInformation.IPInterfaceProperties.DhcpServerAddresses
  id: DhcpServerAddresses
  parent: System.Net.NetworkInformation.IPInterfaceProperties
  langs:
  - csharp
  - vb
  name: DhcpServerAddresses
  fullName: System.Net.NetworkInformation.IPInterfaceProperties.DhcpServerAddresses
  type: Property
  source:
    remote:
      path: src/System.Net.NetworkInformation/src/System/Net/NetworkInformation/IPInterfaceProperties.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: DhcpServerAddresses
    path: src/System.Net.NetworkInformation/src/System/Net/NetworkInformation/IPInterfaceProperties.cs
    startLine: 55
  assemblies:
  - System.Net.NetworkInformation
  namespace: System.Net.NetworkInformation
  summary: Gets the addresses of Dynamic Host Configuration Protocol (DHCP) servers for this interface.
  syntax:
    content: public abstract IPAddressCollection DhcpServerAddresses { get; }
    content.vb: Public MustOverride ReadOnly Property DhcpServerAddresses As IPAddressCollection
    parameters: []
    return:
      type: System.Net.NetworkInformation.IPAddressCollection
      description: An <xref href="System.Net.NetworkInformation.IPAddressCollection" data-throw-if-not-resolved="false"></xref> that contains the address information for DHCP servers, or an empty array if no servers are found.
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
- uid: System.Net.NetworkInformation.IPInterfaceProperties.DnsAddresses
  commentId: P:System.Net.NetworkInformation.IPInterfaceProperties.DnsAddresses
  id: DnsAddresses
  parent: System.Net.NetworkInformation.IPInterfaceProperties
  langs:
  - csharp
  - vb
  name: DnsAddresses
  fullName: System.Net.NetworkInformation.IPInterfaceProperties.DnsAddresses
  type: Property
  source:
    remote:
      path: src/System.Net.NetworkInformation/src/System/Net/NetworkInformation/IPInterfaceProperties.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: DnsAddresses
    path: src/System.Net.NetworkInformation/src/System/Net/NetworkInformation/IPInterfaceProperties.cs
    startLine: 45
  assemblies:
  - System.Net.NetworkInformation
  namespace: System.Net.NetworkInformation
  summary: Gets the addresses of Domain Name System (DNS) servers for this interface.
  syntax:
    content: public abstract IPAddressCollection DnsAddresses { get; }
    content.vb: Public MustOverride ReadOnly Property DnsAddresses As IPAddressCollection
    parameters: []
    return:
      type: System.Net.NetworkInformation.IPAddressCollection
      description: A <xref href="System.Net.NetworkInformation.IPAddressCollection" data-throw-if-not-resolved="false"></xref> that contains the DNS server addresses.
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
- uid: System.Net.NetworkInformation.IPInterfaceProperties.DnsSuffix
  commentId: P:System.Net.NetworkInformation.IPInterfaceProperties.DnsSuffix
  id: DnsSuffix
  parent: System.Net.NetworkInformation.IPInterfaceProperties
  langs:
  - csharp
  - vb
  name: DnsSuffix
  fullName: System.Net.NetworkInformation.IPInterfaceProperties.DnsSuffix
  type: Property
  source:
    remote:
      path: src/System.Net.NetworkInformation/src/System/Net/NetworkInformation/IPInterfaceProperties.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: DnsSuffix
    path: src/System.Net.NetworkInformation/src/System/Net/NetworkInformation/IPInterfaceProperties.cs
    startLine: 20
  assemblies:
  - System.Net.NetworkInformation
  namespace: System.Net.NetworkInformation
  summary: Gets the Domain Name System (DNS) suffix associated with this interface.
  syntax:
    content: public abstract string DnsSuffix { get; }
    content.vb: Public MustOverride ReadOnly Property DnsSuffix As String
    parameters: []
    return:
      type: System.String
      description: A <xref href="System.String" data-throw-if-not-resolved="false"></xref> that contains the DNS suffix for this interface, or <xref href="System.String.Empty" data-throw-if-not-resolved="false"></xref> if there is no DNS suffix for the interface.
  exceptions:
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: 'This property is not valid on computers running operating systems earlier than Windows 2000. '
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
- uid: System.Net.NetworkInformation.IPInterfaceProperties.GatewayAddresses
  commentId: P:System.Net.NetworkInformation.IPInterfaceProperties.GatewayAddresses
  id: GatewayAddresses
  parent: System.Net.NetworkInformation.IPInterfaceProperties
  langs:
  - csharp
  - vb
  name: GatewayAddresses
  fullName: System.Net.NetworkInformation.IPInterfaceProperties.GatewayAddresses
  type: Property
  source:
    remote:
      path: src/System.Net.NetworkInformation/src/System/Net/NetworkInformation/IPInterfaceProperties.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GatewayAddresses
    path: src/System.Net.NetworkInformation/src/System/Net/NetworkInformation/IPInterfaceProperties.cs
    startLine: 50
  assemblies:
  - System.Net.NetworkInformation
  namespace: System.Net.NetworkInformation
  summary: Gets the IPv4 network gateway addresses for this interface.
  syntax:
    content: public abstract GatewayIPAddressInformationCollection GatewayAddresses { get; }
    content.vb: Public MustOverride ReadOnly Property GatewayAddresses As GatewayIPAddressInformationCollection
    parameters: []
    return:
      type: System.Net.NetworkInformation.GatewayIPAddressInformationCollection
      description: An <xref href="System.Net.NetworkInformation.GatewayIPAddressInformationCollection" data-throw-if-not-resolved="false"></xref> that contains the address information for network gateways, or an empty array if no gateways are found.
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
- uid: System.Net.NetworkInformation.IPInterfaceProperties.IsDnsEnabled
  commentId: P:System.Net.NetworkInformation.IPInterfaceProperties.IsDnsEnabled
  id: IsDnsEnabled
  parent: System.Net.NetworkInformation.IPInterfaceProperties
  langs:
  - csharp
  - vb
  name: IsDnsEnabled
  fullName: System.Net.NetworkInformation.IPInterfaceProperties.IsDnsEnabled
  type: Property
  source:
    remote:
      path: src/System.Net.NetworkInformation/src/System/Net/NetworkInformation/IPInterfaceProperties.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IsDnsEnabled
    path: src/System.Net.NetworkInformation/src/System/Net/NetworkInformation/IPInterfaceProperties.cs
    startLine: 15
  assemblies:
  - System.Net.NetworkInformation
  namespace: System.Net.NetworkInformation
  summary: Gets a <xref href="System.Boolean" data-throw-if-not-resolved="false"></xref> value that indicates whether NetBt is configured to use DNS name resolution on this interface.
  syntax:
    content: public abstract bool IsDnsEnabled { get; }
    content.vb: Public MustOverride ReadOnly Property IsDnsEnabled As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: true if NetBt is configured to use DNS name resolution on this interface; otherwise, false.
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
- uid: System.Net.NetworkInformation.IPInterfaceProperties.IsDynamicDnsEnabled
  commentId: P:System.Net.NetworkInformation.IPInterfaceProperties.IsDynamicDnsEnabled
  id: IsDynamicDnsEnabled
  parent: System.Net.NetworkInformation.IPInterfaceProperties
  langs:
  - csharp
  - vb
  name: IsDynamicDnsEnabled
  fullName: System.Net.NetworkInformation.IPInterfaceProperties.IsDynamicDnsEnabled
  type: Property
  source:
    remote:
      path: src/System.Net.NetworkInformation/src/System/Net/NetworkInformation/IPInterfaceProperties.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IsDynamicDnsEnabled
    path: src/System.Net.NetworkInformation/src/System/Net/NetworkInformation/IPInterfaceProperties.cs
    startLine: 25
  assemblies:
  - System.Net.NetworkInformation
  namespace: System.Net.NetworkInformation
  summary: Gets a <xref href="System.Boolean" data-throw-if-not-resolved="false"></xref> value that indicates whether this interface is configured to automatically register its IP address information with the Domain Name System (DNS).
  syntax:
    content: public abstract bool IsDynamicDnsEnabled { get; }
    content.vb: Public MustOverride ReadOnly Property IsDynamicDnsEnabled As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: true if this interface is configured to automatically register a mapping between its dynamic IP address and static domain names; otherwise, false.
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
- uid: System.Net.NetworkInformation.IPInterfaceProperties.MulticastAddresses
  commentId: P:System.Net.NetworkInformation.IPInterfaceProperties.MulticastAddresses
  id: MulticastAddresses
  parent: System.Net.NetworkInformation.IPInterfaceProperties
  langs:
  - csharp
  - vb
  name: MulticastAddresses
  fullName: System.Net.NetworkInformation.IPInterfaceProperties.MulticastAddresses
  type: Property
  source:
    remote:
      path: src/System.Net.NetworkInformation/src/System/Net/NetworkInformation/IPInterfaceProperties.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: MulticastAddresses
    path: src/System.Net.NetworkInformation/src/System/Net/NetworkInformation/IPInterfaceProperties.cs
    startLine: 35
  assemblies:
  - System.Net.NetworkInformation
  namespace: System.Net.NetworkInformation
  summary: Gets the multicast addresses assigned to this interface.
  syntax:
    content: public abstract MulticastIPAddressInformationCollection MulticastAddresses { get; }
    content.vb: Public MustOverride ReadOnly Property MulticastAddresses As MulticastIPAddressInformationCollection
    parameters: []
    return:
      type: System.Net.NetworkInformation.MulticastIPAddressInformationCollection
      description: An <xref href="System.Net.NetworkInformation.MulticastIPAddressInformationCollection" data-throw-if-not-resolved="false"></xref> that contains the multicast addresses for this interface.
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
- uid: System.Net.NetworkInformation.IPInterfaceProperties.UnicastAddresses
  commentId: P:System.Net.NetworkInformation.IPInterfaceProperties.UnicastAddresses
  id: UnicastAddresses
  parent: System.Net.NetworkInformation.IPInterfaceProperties
  langs:
  - csharp
  - vb
  name: UnicastAddresses
  fullName: System.Net.NetworkInformation.IPInterfaceProperties.UnicastAddresses
  type: Property
  source:
    remote:
      path: src/System.Net.NetworkInformation/src/System/Net/NetworkInformation/IPInterfaceProperties.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: UnicastAddresses
    path: src/System.Net.NetworkInformation/src/System/Net/NetworkInformation/IPInterfaceProperties.cs
    startLine: 30
  assemblies:
  - System.Net.NetworkInformation
  namespace: System.Net.NetworkInformation
  summary: Gets the unicast addresses assigned to this interface.
  syntax:
    content: public abstract UnicastIPAddressInformationCollection UnicastAddresses { get; }
    content.vb: Public MustOverride ReadOnly Property UnicastAddresses As UnicastIPAddressInformationCollection
    parameters: []
    return:
      type: System.Net.NetworkInformation.UnicastIPAddressInformationCollection
      description: An <xref href="System.Net.NetworkInformation.UnicastIPAddressInformationCollection" data-throw-if-not-resolved="false"></xref> that contains the unicast addresses for this interface.
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
- uid: System.Net.NetworkInformation.IPInterfaceProperties.WinsServersAddresses
  commentId: P:System.Net.NetworkInformation.IPInterfaceProperties.WinsServersAddresses
  id: WinsServersAddresses
  parent: System.Net.NetworkInformation.IPInterfaceProperties
  langs:
  - csharp
  - vb
  name: WinsServersAddresses
  fullName: System.Net.NetworkInformation.IPInterfaceProperties.WinsServersAddresses
  type: Property
  source:
    remote:
      path: src/System.Net.NetworkInformation/src/System/Net/NetworkInformation/IPInterfaceProperties.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: WinsServersAddresses
    path: src/System.Net.NetworkInformation/src/System/Net/NetworkInformation/IPInterfaceProperties.cs
    startLine: 60
  assemblies:
  - System.Net.NetworkInformation
  namespace: System.Net.NetworkInformation
  summary: Gets the addresses of Windows Internet Name Service (WINS) servers.
  syntax:
    content: public abstract IPAddressCollection WinsServersAddresses { get; }
    content.vb: Public MustOverride ReadOnly Property WinsServersAddresses As IPAddressCollection
    parameters: []
    return:
      type: System.Net.NetworkInformation.IPAddressCollection
      description: An <xref href="System.Net.NetworkInformation.IPAddressCollection" data-throw-if-not-resolved="false"></xref> that contains the address information for WINS servers, or an empty array if no servers are found.
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
- uid: System.Net.NetworkInformation.IPInterfaceProperties.GetIPv4Properties
  commentId: M:System.Net.NetworkInformation.IPInterfaceProperties.GetIPv4Properties
  id: GetIPv4Properties
  parent: System.Net.NetworkInformation.IPInterfaceProperties
  langs:
  - csharp
  - vb
  name: GetIPv4Properties()
  fullName: System.Net.NetworkInformation.IPInterfaceProperties.GetIPv4Properties()
  type: Method
  source:
    remote:
      path: src/System.Net.NetworkInformation/src/System/Net/NetworkInformation/IPInterfaceProperties.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetIPv4Properties
    path: src/System.Net.NetworkInformation/src/System/Net/NetworkInformation/IPInterfaceProperties.cs
    startLine: 66
  assemblies:
  - System.Net.NetworkInformation
  namespace: System.Net.NetworkInformation
  summary: Provides Internet Protocol version 4 (IPv4) configuration data for this network interface.
  syntax:
    content: public abstract IPv4InterfaceProperties GetIPv4Properties()
    content.vb: Public MustOverride Function GetIPv4Properties As IPv4InterfaceProperties
    return:
      type: System.Net.NetworkInformation.IPv4InterfaceProperties
      description: An <xref href="System.Net.NetworkInformation.IPv4InterfaceProperties" data-throw-if-not-resolved="false"></xref> object that contains IPv4 configuration data, or null if no data is available for the interface.
  exceptions:
  - type: System.Net.NetworkInformation.NetworkInformationException
    commentId: T:System.Net.NetworkInformation.NetworkInformationException
    description: The interface does not support the IPv4 protocol.
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: System.Net.NetworkInformation.IPInterfaceProperties.GetIPv6Properties
  commentId: M:System.Net.NetworkInformation.IPInterfaceProperties.GetIPv6Properties
  id: GetIPv6Properties
  parent: System.Net.NetworkInformation.IPInterfaceProperties
  langs:
  - csharp
  - vb
  name: GetIPv6Properties()
  fullName: System.Net.NetworkInformation.IPInterfaceProperties.GetIPv6Properties()
  type: Method
  source:
    remote:
      path: src/System.Net.NetworkInformation/src/System/Net/NetworkInformation/IPInterfaceProperties.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetIPv6Properties
    path: src/System.Net.NetworkInformation/src/System/Net/NetworkInformation/IPInterfaceProperties.cs
    startLine: 72
  assemblies:
  - System.Net.NetworkInformation
  namespace: System.Net.NetworkInformation
  summary: Provides Internet Protocol version 6 (IPv6) configuration data for this network interface.
  syntax:
    content: public abstract IPv6InterfaceProperties GetIPv6Properties()
    content.vb: Public MustOverride Function GetIPv6Properties As IPv6InterfaceProperties
    return:
      type: System.Net.NetworkInformation.IPv6InterfaceProperties
      description: An <xref href="System.Net.NetworkInformation.IPv6InterfaceProperties" data-throw-if-not-resolved="false"></xref> object that contains IPv6 configuration data.
  exceptions:
  - type: System.Net.NetworkInformation.NetworkInformationException
    commentId: T:System.Net.NetworkInformation.NetworkInformationException
    description: The interface does not support the IPv6 protocol.
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
references:
- uid: System.Net.NetworkInformation
  isExternal: false
  name: System.Net.NetworkInformation
  fullName: System.Net.NetworkInformation
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Net.NetworkInformation.IPAddressInformationCollection
  parent: System.Net.NetworkInformation
  isExternal: false
  name: IPAddressInformationCollection
  fullName: System.Net.NetworkInformation.IPAddressInformationCollection
- uid: System.Net.NetworkInformation.IPAddressCollection
  isExternal: false
  name: IPAddressCollection
  fullName: System.Net.NetworkInformation.IPAddressCollection
- uid: System.String
  parent: System
  isExternal: false
  name: String
  fullName: System.String
- uid: System.Net.NetworkInformation.GatewayIPAddressInformationCollection
  parent: System.Net.NetworkInformation
  isExternal: false
  name: GatewayIPAddressInformationCollection
  fullName: System.Net.NetworkInformation.GatewayIPAddressInformationCollection
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  fullName: System.Boolean
- uid: System.Net.NetworkInformation.MulticastIPAddressInformationCollection
  parent: System.Net.NetworkInformation
  isExternal: false
  name: MulticastIPAddressInformationCollection
  fullName: System.Net.NetworkInformation.MulticastIPAddressInformationCollection
- uid: System.Net.NetworkInformation.UnicastIPAddressInformationCollection
  parent: System.Net.NetworkInformation
  isExternal: false
  name: UnicastIPAddressInformationCollection
  fullName: System.Net.NetworkInformation.UnicastIPAddressInformationCollection
- uid: System.Net.NetworkInformation.IPv4InterfaceProperties
  parent: System.Net.NetworkInformation
  isExternal: false
  name: IPv4InterfaceProperties
  fullName: System.Net.NetworkInformation.IPv4InterfaceProperties
- uid: System.Net.NetworkInformation.IPv6InterfaceProperties
  parent: System.Net.NetworkInformation
  isExternal: false
  name: IPv6InterfaceProperties
  fullName: System.Net.NetworkInformation.IPv6InterfaceProperties
- uid: System.PlatformNotSupportedException
  isExternal: false
  name: PlatformNotSupportedException
  fullName: System.PlatformNotSupportedException
- uid: System.Net.NetworkInformation.NetworkInformationException
  isExternal: false
  name: NetworkInformationException
  fullName: System.Net.NetworkInformation.NetworkInformationException
