items:
- uid: System.Security.Cryptography.Pkcs.RecipientInfoCollection
  commentId: T:System.Security.Cryptography.Pkcs.RecipientInfoCollection
  id: RecipientInfoCollection
  parent: System.Security.Cryptography.Pkcs
  children:
  - System.Security.Cryptography.Pkcs.RecipientInfoCollection.CopyTo(System.Array,System.Int32)
  - System.Security.Cryptography.Pkcs.RecipientInfoCollection.CopyTo(System.Security.Cryptography.Pkcs.RecipientInfo[],System.Int32)
  - System.Security.Cryptography.Pkcs.RecipientInfoCollection.Count
  - System.Security.Cryptography.Pkcs.RecipientInfoCollection.GetEnumerator
  - System.Security.Cryptography.Pkcs.RecipientInfoCollection.Item(System.Int32)
  - System.Security.Cryptography.Pkcs.RecipientInfoCollection.System#Collections#ICollection#IsSynchronized
  - System.Security.Cryptography.Pkcs.RecipientInfoCollection.System#Collections#ICollection#SyncRoot
  - System.Security.Cryptography.Pkcs.RecipientInfoCollection.System#Collections#IEnumerable#GetEnumerator
  langs:
  - csharp
  - vb
  name: RecipientInfoCollection
  fullName: System.Security.Cryptography.Pkcs.RecipientInfoCollection
  type: Class
  source:
    remote:
      path: src/System.Security.Cryptography.Pkcs/ref/System.Security.Cryptography.Pkcs.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: RecipientInfoCollection
    path: src/System.Security.Cryptography.Pkcs/ref/System.Security.Cryptography.Pkcs.cs
    startLine: 189
  assemblies:
  - System.Security.Cryptography.Pkcs
  namespace: System.Security.Cryptography.Pkcs
  summary: "\n<p>The <xref href=\"System.Security.Cryptography.Pkcs.RecipientInfoCollection\" data-throw-if-not-resolved=\"false\"></xref> class represents a collection of <xref href=\"System.Security.Cryptography.Pkcs.RecipientInfo\" data-throw-if-not-resolved=\"false\"></xref> objects. <xref href=\"System.Security.Cryptography.Pkcs.RecipientInfoCollection\" data-throw-if-not-resolved=\"false\"></xref> implements the <xref href=\"System.Collections.ICollection\" data-throw-if-not-resolved=\"false\"></xref> interface. </p>\n"
  remarks: "\n<p>This class does not have a public constructor; therefore, it cannot be publicly instantiated. It is a read-only class accessible from the <xref href=\"System.Security.Cryptography.Pkcs.EnvelopedCms.RecipientInfos\" data-throw-if-not-resolved=\"false\"></xref> property.</p>\n"
  syntax:
    content: 'public sealed class RecipientInfoCollection : ICollection, IEnumerable'
    content.vb: >-
      Public NotInheritable Class RecipientInfoCollection
          Implements ICollection, IEnumerable
  inheritance:
  - System.Object
  implements:
  - System.Collections.ICollection
  - System.Collections.IEnumerable
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: System.Security.Cryptography.Pkcs.RecipientInfoCollection.Count
  commentId: P:System.Security.Cryptography.Pkcs.RecipientInfoCollection.Count
  id: Count
  parent: System.Security.Cryptography.Pkcs.RecipientInfoCollection
  langs:
  - csharp
  - vb
  name: Count
  fullName: System.Security.Cryptography.Pkcs.RecipientInfoCollection.Count
  type: Property
  source:
    remote:
      path: src/System.Security.Cryptography.Pkcs/ref/System.Security.Cryptography.Pkcs.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Count
    path: src/System.Security.Cryptography.Pkcs/ref/System.Security.Cryptography.Pkcs.cs
    startLine: 192
  assemblies:
  - System.Security.Cryptography.Pkcs
  namespace: System.Security.Cryptography.Pkcs
  summary: "\n<p>The <xref href=\"System.Security.Cryptography.Pkcs.RecipientInfoCollection.Count\" data-throw-if-not-resolved=\"false\"></xref> property retrieves the number of items in the <xref href=\"System.Security.Cryptography.Pkcs.RecipientInfoCollection\" data-throw-if-not-resolved=\"false\"></xref> collection.</p>\n"
  syntax:
    content: public int Count { get; }
    content.vb: Public ReadOnly Property Count As Integer
    parameters: []
    return:
      type: System.Int32
      description: "\n<p>An int value that represents the number of items in the collection.</p>\n"
  implements:
  - System.Collections.ICollection.Count
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Security.Cryptography.Pkcs.RecipientInfoCollection.Item(System.Int32)
  commentId: P:System.Security.Cryptography.Pkcs.RecipientInfoCollection.Item(System.Int32)
  id: Item(System.Int32)
  parent: System.Security.Cryptography.Pkcs.RecipientInfoCollection
  langs:
  - csharp
  - vb
  name: Item[Int32]
  fullName: System.Security.Cryptography.Pkcs.RecipientInfoCollection.Item[System.Int32]
  type: Property
  source:
    remote:
      path: src/System.Security.Cryptography.Pkcs/ref/System.Security.Cryptography.Pkcs.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: this[]
    path: src/System.Security.Cryptography.Pkcs/ref/System.Security.Cryptography.Pkcs.cs
    startLine: 193
  assemblies:
  - System.Security.Cryptography.Pkcs
  namespace: System.Security.Cryptography.Pkcs
  summary: "\n<p>The <xref href=\"System.Security.Cryptography.Pkcs.RecipientInfoCollection.Item(System.Int32)\" data-throw-if-not-resolved=\"false\"></xref> property retrieves the <xref href=\"System.Security.Cryptography.Pkcs.RecipientInfo\" data-throw-if-not-resolved=\"false\"></xref> object at the specified index in the collection.</p>\n"
  syntax:
    content: public RecipientInfo this[int index] { get; }
    content.vb: Public ReadOnly Property Item(index As Integer) As RecipientInfo
    parameters:
    - id: index
      type: System.Int32
      description: "\n<p>An int value that represents the index in the collection. The index is zero based.</p>\n"
    return:
      type: System.Security.Cryptography.Pkcs.RecipientInfo
      description: "\n<p>A <xref href=\"System.Security.Cryptography.Pkcs.RecipientInfo\" data-throw-if-not-resolved=\"false\"></xref> object at the specified index.</p>\n"
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>The value of an argument was outside the allowable range of values as defined by the called method.</p>\n"
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: System.Security.Cryptography.Pkcs.RecipientInfoCollection.Item(System.Int32)
  name.vb: Item(Int32)
- uid: System.Security.Cryptography.Pkcs.RecipientInfoCollection.System#Collections#ICollection#IsSynchronized
  commentId: P:System.Security.Cryptography.Pkcs.RecipientInfoCollection.System#Collections#ICollection#IsSynchronized
  id: System#Collections#ICollection#IsSynchronized
  isEii: true
  parent: System.Security.Cryptography.Pkcs.RecipientInfoCollection
  langs:
  - csharp
  - vb
  name: ICollection.IsSynchronized
  fullName: System.Security.Cryptography.Pkcs.RecipientInfoCollection.System.Collections.ICollection.IsSynchronized
  type: Property
  source:
    remote:
      path: src/System.Security.Cryptography.Pkcs/ref/System.Security.Cryptography.Pkcs.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: System.Collections.ICollection.IsSynchronized
    path: src/System.Security.Cryptography.Pkcs/ref/System.Security.Cryptography.Pkcs.cs
    startLine: 194
  assemblies:
  - System.Security.Cryptography.Pkcs
  namespace: System.Security.Cryptography.Pkcs
  syntax:
    content: bool ICollection.IsSynchronized { get; }
    content.vb: ReadOnly WriteOnly Property System.Collections.ICollection.IsSynchronized As Boolean Implements ICollection.IsSynchronized
    parameters: []
    return:
      type: System.Boolean
  implements:
  - System.Collections.ICollection.IsSynchronized
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
  name.vb: System.Collections.ICollection.IsSynchronized
- uid: System.Security.Cryptography.Pkcs.RecipientInfoCollection.System#Collections#ICollection#SyncRoot
  commentId: P:System.Security.Cryptography.Pkcs.RecipientInfoCollection.System#Collections#ICollection#SyncRoot
  id: System#Collections#ICollection#SyncRoot
  isEii: true
  parent: System.Security.Cryptography.Pkcs.RecipientInfoCollection
  langs:
  - csharp
  - vb
  name: ICollection.SyncRoot
  fullName: System.Security.Cryptography.Pkcs.RecipientInfoCollection.System.Collections.ICollection.SyncRoot
  type: Property
  source:
    remote:
      path: src/System.Security.Cryptography.Pkcs/ref/System.Security.Cryptography.Pkcs.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: System.Collections.ICollection.SyncRoot
    path: src/System.Security.Cryptography.Pkcs/ref/System.Security.Cryptography.Pkcs.cs
    startLine: 195
  assemblies:
  - System.Security.Cryptography.Pkcs
  namespace: System.Security.Cryptography.Pkcs
  syntax:
    content: object ICollection.SyncRoot { get; }
    content.vb: ReadOnly WriteOnly Property System.Collections.ICollection.SyncRoot As Object Implements ICollection.SyncRoot
    parameters: []
    return:
      type: System.Object
  implements:
  - System.Collections.ICollection.SyncRoot
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
  name.vb: System.Collections.ICollection.SyncRoot
- uid: System.Security.Cryptography.Pkcs.RecipientInfoCollection.CopyTo(System.Array,System.Int32)
  commentId: M:System.Security.Cryptography.Pkcs.RecipientInfoCollection.CopyTo(System.Array,System.Int32)
  id: CopyTo(System.Array,System.Int32)
  parent: System.Security.Cryptography.Pkcs.RecipientInfoCollection
  langs:
  - csharp
  - vb
  name: CopyTo(Array, Int32)
  fullName: System.Security.Cryptography.Pkcs.RecipientInfoCollection.CopyTo(System.Array, System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Security.Cryptography.Pkcs/ref/System.Security.Cryptography.Pkcs.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CopyTo
    path: src/System.Security.Cryptography.Pkcs/ref/System.Security.Cryptography.Pkcs.cs
    startLine: 196
  assemblies:
  - System.Security.Cryptography.Pkcs
  namespace: System.Security.Cryptography.Pkcs
  summary: "\n<p>The <xref href=\"System.Security.Cryptography.Pkcs.RecipientInfoCollection.CopyTo(System.Array,System.Int32)\" data-throw-if-not-resolved=\"false\"></xref> method copies the <xref href=\"System.Security.Cryptography.Pkcs.RecipientInfoCollection\" data-throw-if-not-resolved=\"false\"></xref> collection to an array.</p>\n"
  syntax:
    content: public void CopyTo(Array array, int index)
    content.vb: Public Sub CopyTo(array As Array, index As Integer)
    parameters:
    - id: array
      type: System.Array
      description: "\n<p>An <xref href=\"System.Array\" data-throw-if-not-resolved=\"false\"></xref> object to which  the <xref href=\"System.Security.Cryptography.Pkcs.RecipientInfoCollection\" data-throw-if-not-resolved=\"false\"></xref> collection is to be copied.</p>\n"
    - id: index
      type: System.Int32
      description: "\n<p>The zero-based index in <em>array</em> where the <xref href=\"System.Security.Cryptography.Pkcs.RecipientInfoCollection\" data-throw-if-not-resolved=\"false\"></xref> collection is copied.</p>\n"
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<p>One of the arguments provided to a method was not valid.</p>\n"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>A null reference was passed to a method that does not accept it as a valid argument. </p>\n"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>The value of an argument was outside the allowable range of values as defined by the called method.</p>\n"
  implements:
  - System.Collections.ICollection.CopyTo(System.Array,System.Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Security.Cryptography.Pkcs.RecipientInfoCollection.CopyTo(System.Security.Cryptography.Pkcs.RecipientInfo[],System.Int32)
  commentId: M:System.Security.Cryptography.Pkcs.RecipientInfoCollection.CopyTo(System.Security.Cryptography.Pkcs.RecipientInfo[],System.Int32)
  id: CopyTo(System.Security.Cryptography.Pkcs.RecipientInfo[],System.Int32)
  parent: System.Security.Cryptography.Pkcs.RecipientInfoCollection
  langs:
  - csharp
  - vb
  name: CopyTo(RecipientInfo[], Int32)
  fullName: System.Security.Cryptography.Pkcs.RecipientInfoCollection.CopyTo(System.Security.Cryptography.Pkcs.RecipientInfo[], System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Security.Cryptography.Pkcs/ref/System.Security.Cryptography.Pkcs.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CopyTo
    path: src/System.Security.Cryptography.Pkcs/ref/System.Security.Cryptography.Pkcs.cs
    startLine: 197
  assemblies:
  - System.Security.Cryptography.Pkcs
  namespace: System.Security.Cryptography.Pkcs
  summary: "\n<p>The <xref href=\"System.Security.Cryptography.Pkcs.RecipientInfoCollection.CopyTo(System.Security.Cryptography.Pkcs.RecipientInfo[],System.Int32)\" data-throw-if-not-resolved=\"false\"></xref> method copies the <xref href=\"System.Security.Cryptography.Pkcs.RecipientInfoCollection\" data-throw-if-not-resolved=\"false\"></xref> collection to a <xref href=\"System.Security.Cryptography.Pkcs.RecipientInfo\" data-throw-if-not-resolved=\"false\"></xref> array.</p>\n"
  syntax:
    content: public void CopyTo(RecipientInfo[] array, int index)
    content.vb: Public Sub CopyTo(array As RecipientInfo(), index As Integer)
    parameters:
    - id: array
      type: System.Security.Cryptography.Pkcs.RecipientInfo[]
      description: "\n<p>An array of <xref href=\"System.Security.Cryptography.Pkcs.RecipientInfo\" data-throw-if-not-resolved=\"false\"></xref> objects where the <xref href=\"System.Security.Cryptography.Pkcs.RecipientInfoCollection\" data-throw-if-not-resolved=\"false\"></xref> collection is to be copied.</p>\n"
    - id: index
      type: System.Int32
      description: "\n<p>The zero-based index in <em>array</em> where the <xref href=\"System.Security.Cryptography.Pkcs.RecipientInfoCollection\" data-throw-if-not-resolved=\"false\"></xref> collection is copied.</p>\n"
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<p>One of the arguments provided to a method was not valid.</p>\n"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>A null reference was passed to a method that does not accept it as a valid argument. </p>\n"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>The value of an argument was outside the allowable range of values as defined by the called method.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Security.Cryptography.Pkcs.RecipientInfoCollection.CopyTo(System.Security.Cryptography.Pkcs.RecipientInfo(), System.Int32)
  name.vb: CopyTo(RecipientInfo(), Int32)
- uid: System.Security.Cryptography.Pkcs.RecipientInfoCollection.GetEnumerator
  commentId: M:System.Security.Cryptography.Pkcs.RecipientInfoCollection.GetEnumerator
  id: GetEnumerator
  parent: System.Security.Cryptography.Pkcs.RecipientInfoCollection
  langs:
  - csharp
  - vb
  name: GetEnumerator()
  fullName: System.Security.Cryptography.Pkcs.RecipientInfoCollection.GetEnumerator()
  type: Method
  source:
    remote:
      path: src/System.Security.Cryptography.Pkcs/ref/System.Security.Cryptography.Pkcs.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetEnumerator
    path: src/System.Security.Cryptography.Pkcs/ref/System.Security.Cryptography.Pkcs.cs
    startLine: 198
  assemblies:
  - System.Security.Cryptography.Pkcs
  namespace: System.Security.Cryptography.Pkcs
  summary: "\n<p>The <xref href=\"System.Security.Cryptography.Pkcs.RecipientInfoCollection.GetEnumerator\" data-throw-if-not-resolved=\"false\"></xref> method returns a <xref href=\"System.Security.Cryptography.Pkcs.RecipientInfoEnumerator\" data-throw-if-not-resolved=\"false\"></xref> object for the <xref href=\"System.Security.Cryptography.Pkcs.RecipientInfoCollection\" data-throw-if-not-resolved=\"false\"></xref> collection.</p>\n"
  syntax:
    content: public RecipientInfoEnumerator GetEnumerator()
    content.vb: Public Function GetEnumerator As RecipientInfoEnumerator
    return:
      type: System.Security.Cryptography.Pkcs.RecipientInfoEnumerator
      description: "\n<p>A <xref href=\"System.Security.Cryptography.Pkcs.RecipientInfoEnumerator\" data-throw-if-not-resolved=\"false\"></xref> object that can be used to enumerate the <xref href=\"System.Security.Cryptography.Pkcs.RecipientInfoCollection\" data-throw-if-not-resolved=\"false\"></xref> collection.</p>\n"
  seealso:
  - type: System.Security.Cryptography.Pkcs.RecipientInfoEnumerator
    commentId: T:System.Security.Cryptography.Pkcs.RecipientInfoEnumerator
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Security.Cryptography.Pkcs.RecipientInfoCollection.System#Collections#IEnumerable#GetEnumerator
  commentId: M:System.Security.Cryptography.Pkcs.RecipientInfoCollection.System#Collections#IEnumerable#GetEnumerator
  id: System#Collections#IEnumerable#GetEnumerator
  isEii: true
  parent: System.Security.Cryptography.Pkcs.RecipientInfoCollection
  langs:
  - csharp
  - vb
  name: IEnumerable.GetEnumerator()
  fullName: System.Security.Cryptography.Pkcs.RecipientInfoCollection.System.Collections.IEnumerable.GetEnumerator()
  type: Method
  source:
    remote:
      path: src/System.Security.Cryptography.Pkcs/ref/System.Security.Cryptography.Pkcs.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: System.Collections.IEnumerable.GetEnumerator
    path: src/System.Security.Cryptography.Pkcs/ref/System.Security.Cryptography.Pkcs.cs
    startLine: 199
  assemblies:
  - System.Security.Cryptography.Pkcs
  namespace: System.Security.Cryptography.Pkcs
  summary: "\n<p>The <xref href=\"System.Security.Cryptography.Pkcs.RecipientInfoCollection.System#Collections#IEnumerable#GetEnumerator\" data-throw-if-not-resolved=\"false\"></xref> method returns a <xref href=\"System.Security.Cryptography.Pkcs.RecipientInfoEnumerator\" data-throw-if-not-resolved=\"false\"></xref> object for the <xref href=\"System.Security.Cryptography.Pkcs.RecipientInfoCollection\" data-throw-if-not-resolved=\"false\"></xref> collection.</p>\n"
  example:
  - 
  syntax:
    content: IEnumerator IEnumerable.GetEnumerator()
    content.vb: Function System.Collections.IEnumerable.GetEnumerator As IEnumerator Implements IEnumerable.GetEnumerator
    return:
      type: System.Collections.IEnumerator
      description: "\n<p>A <xref href=\"System.Security.Cryptography.Pkcs.RecipientInfoEnumerator\" data-throw-if-not-resolved=\"false\"></xref> object that can be used to enumerate the <xref href=\"System.Security.Cryptography.Pkcs.RecipientInfoCollection\" data-throw-if-not-resolved=\"false\"></xref> collection.</p>\n"
  seealso:
  - type: System.Security.Cryptography.Pkcs.RecipientInfoCollection
    commentId: T:System.Security.Cryptography.Pkcs.RecipientInfoCollection
  implements:
  - System.Collections.IEnumerable.GetEnumerator
  name.vb: System.Collections.IEnumerable.GetEnumerator()
references:
- uid: System.Security.Cryptography.Pkcs
  isExternal: false
  name: System.Security.Cryptography.Pkcs
  fullName: System.Security.Cryptography.Pkcs
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System.Collections.ICollection
  parent: System.Collections
  isExternal: false
  name: ICollection
  fullName: System.Collections.ICollection
- uid: System.Collections.IEnumerable
  parent: System.Collections
  isExternal: false
  name: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Collections
  isExternal: false
  name: System.Collections
  fullName: System.Collections
- uid: System.Collections.ICollection.Count
  parent: System.Collections.ICollection
  isExternal: false
  name: Count
  fullName: System.Collections.ICollection.Count
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  fullName: System.Int32
- uid: System.Security.Cryptography.Pkcs.RecipientInfo
  parent: System.Security.Cryptography.Pkcs
  isExternal: false
  name: RecipientInfo
  fullName: System.Security.Cryptography.Pkcs.RecipientInfo
- uid: System.Collections.ICollection.IsSynchronized
  parent: System.Collections.ICollection
  isExternal: false
  name: IsSynchronized
  fullName: System.Collections.ICollection.IsSynchronized
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  fullName: System.Boolean
- uid: System.Collections.ICollection.SyncRoot
  parent: System.Collections.ICollection
  isExternal: false
  name: SyncRoot
  fullName: System.Collections.ICollection.SyncRoot
- uid: System.Collections.ICollection.CopyTo(System.Array,System.Int32)
  parent: System.Collections.ICollection
  isExternal: true
  name: CopyTo(Array, Int32)
  fullName: System.Collections.ICollection.CopyTo(System.Array, System.Int32)
  spec.csharp:
  - uid: System.Collections.ICollection.CopyTo(System.Array,System.Int32)
    name: CopyTo
    fullName: System.Collections.ICollection.CopyTo
  - name: (
    fullName: (
  - uid: System.Array
    name: Array
    fullName: System.Array
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ICollection.CopyTo(System.Array,System.Int32)
    name: CopyTo
    fullName: System.Collections.ICollection.CopyTo
  - name: (
    fullName: (
  - uid: System.Array
    name: Array
    fullName: System.Array
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
- uid: System.Array
  parent: System
  isExternal: false
  name: Array
  fullName: System.Array
- uid: System.Security.Cryptography.Pkcs.RecipientInfo[]
  isExternal: false
  name: RecipientInfo[]
  fullName: System.Security.Cryptography.Pkcs.RecipientInfo[]
  fullname.vb: System.Security.Cryptography.Pkcs.RecipientInfo()
  name.vb: RecipientInfo()
  spec.csharp:
  - uid: System.Security.Cryptography.Pkcs.RecipientInfo
    name: RecipientInfo
    fullName: System.Security.Cryptography.Pkcs.RecipientInfo
  - name: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Security.Cryptography.Pkcs.RecipientInfo
    name: RecipientInfo
    fullName: System.Security.Cryptography.Pkcs.RecipientInfo
  - name: ()
    fullName: ()
- uid: System.Security.Cryptography.Pkcs.RecipientInfoEnumerator
  parent: System.Security.Cryptography.Pkcs
  isExternal: false
  name: RecipientInfoEnumerator
  fullName: System.Security.Cryptography.Pkcs.RecipientInfoEnumerator
- uid: System.Collections.IEnumerable.GetEnumerator
  parent: System.Collections.IEnumerable
  isExternal: false
  name: GetEnumerator()
  fullName: System.Collections.IEnumerable.GetEnumerator()
  spec.csharp:
  - uid: System.Collections.IEnumerable.GetEnumerator
    name: GetEnumerator
    fullName: System.Collections.IEnumerable.GetEnumerator
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Collections.IEnumerable.GetEnumerator
    name: GetEnumerator
    fullName: System.Collections.IEnumerable.GetEnumerator
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: false
  name: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.ArgumentOutOfRangeException
  isExternal: false
  name: ArgumentOutOfRangeException
  fullName: System.ArgumentOutOfRangeException
- uid: System.ArgumentException
  parent: System
  isExternal: false
  name: ArgumentException
  fullName: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: false
  name: ArgumentNullException
  fullName: System.ArgumentNullException
