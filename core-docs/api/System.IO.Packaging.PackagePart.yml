items:
- uid: System.IO.Packaging.PackagePart
  commentId: T:System.IO.Packaging.PackagePart
  id: PackagePart
  parent: System.IO.Packaging
  children:
  - System.IO.Packaging.PackagePart.#ctor(System.IO.Packaging.Package,System.Uri)
  - System.IO.Packaging.PackagePart.#ctor(System.IO.Packaging.Package,System.Uri,System.String)
  - System.IO.Packaging.PackagePart.#ctor(System.IO.Packaging.Package,System.Uri,System.String,System.IO.Packaging.CompressionOption)
  - System.IO.Packaging.PackagePart.CompressionOption
  - System.IO.Packaging.PackagePart.ContentType
  - System.IO.Packaging.PackagePart.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String)
  - System.IO.Packaging.PackagePart.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String,System.String)
  - System.IO.Packaging.PackagePart.DeleteRelationship(System.String)
  - System.IO.Packaging.PackagePart.GetContentTypeCore
  - System.IO.Packaging.PackagePart.GetRelationship(System.String)
  - System.IO.Packaging.PackagePart.GetRelationships
  - System.IO.Packaging.PackagePart.GetRelationshipsByType(System.String)
  - System.IO.Packaging.PackagePart.GetStream
  - System.IO.Packaging.PackagePart.GetStream(System.IO.FileMode)
  - System.IO.Packaging.PackagePart.GetStream(System.IO.FileMode,System.IO.FileAccess)
  - System.IO.Packaging.PackagePart.GetStreamCore(System.IO.FileMode,System.IO.FileAccess)
  - System.IO.Packaging.PackagePart.Package
  - System.IO.Packaging.PackagePart.RelationshipExists(System.String)
  - System.IO.Packaging.PackagePart.Uri
  langs:
  - csharp
  - vb
  name: PackagePart
  fullName: System.IO.Packaging.PackagePart
  type: Class
  source:
    remote:
      path: src/System.IO.Packaging/src/System/IO/Packaging/PackagePart.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: PackagePart
    path: src/System.IO.Packaging/src/System/IO/Packaging/PackagePart.cs
    startLine: 16
  assemblies:
  - System.IO.Packaging
  namespace: System.IO.Packaging
  syntax:
    content: 'public abstract class PackagePart : object'
    content.vb: >-
      Public MustInherit Class PackagePart
          Inherits Object
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: System.IO.Packaging.PackagePart.#ctor(System.IO.Packaging.Package,System.Uri)
  commentId: M:System.IO.Packaging.PackagePart.#ctor(System.IO.Packaging.Package,System.Uri)
  id: '#ctor(System.IO.Packaging.Package,System.Uri)'
  parent: System.IO.Packaging.PackagePart
  langs:
  - csharp
  - vb
  name: PackagePart(Package, Uri)
  fullName: System.IO.Packaging.PackagePart.PackagePart(System.IO.Packaging.Package, System.Uri)
  type: Constructor
  source:
    remote:
      path: src/System.IO.Packaging/ref/System.IO.Packaging.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.IO.Packaging/ref/System.IO.Packaging.cs
    startLine: 74
  assemblies:
  - System.IO.Packaging
  namespace: System.IO.Packaging
  syntax:
    content: protected PackagePart(Package package, Uri partUri)
    content.vb: Protected Sub New(package As Package, partUri As Uri)
    parameters:
    - id: package
      type: System.IO.Packaging.Package
    - id: partUri
      type: System.Uri
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: System.IO.Packaging.PackagePart.#ctor(System.IO.Packaging.Package,System.Uri,System.String)
  commentId: M:System.IO.Packaging.PackagePart.#ctor(System.IO.Packaging.Package,System.Uri,System.String)
  id: '#ctor(System.IO.Packaging.Package,System.Uri,System.String)'
  parent: System.IO.Packaging.PackagePart
  langs:
  - csharp
  - vb
  name: PackagePart(Package, Uri, String)
  fullName: System.IO.Packaging.PackagePart.PackagePart(System.IO.Packaging.Package, System.Uri, System.String)
  type: Constructor
  source:
    remote:
      path: src/System.IO.Packaging/ref/System.IO.Packaging.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.IO.Packaging/ref/System.IO.Packaging.cs
    startLine: 75
  assemblies:
  - System.IO.Packaging
  namespace: System.IO.Packaging
  syntax:
    content: protected PackagePart(Package package, Uri partUri, string contentType)
    content.vb: Protected Sub New(package As Package, partUri As Uri, contentType As String)
    parameters:
    - id: package
      type: System.IO.Packaging.Package
    - id: partUri
      type: System.Uri
    - id: contentType
      type: System.String
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: System.IO.Packaging.PackagePart.#ctor(System.IO.Packaging.Package,System.Uri,System.String,System.IO.Packaging.CompressionOption)
  commentId: M:System.IO.Packaging.PackagePart.#ctor(System.IO.Packaging.Package,System.Uri,System.String,System.IO.Packaging.CompressionOption)
  id: '#ctor(System.IO.Packaging.Package,System.Uri,System.String,System.IO.Packaging.CompressionOption)'
  parent: System.IO.Packaging.PackagePart
  langs:
  - csharp
  - vb
  name: PackagePart(Package, Uri, String, CompressionOption)
  fullName: System.IO.Packaging.PackagePart.PackagePart(System.IO.Packaging.Package, System.Uri, System.String, System.IO.Packaging.CompressionOption)
  type: Constructor
  source:
    remote:
      path: src/System.IO.Packaging/ref/System.IO.Packaging.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.IO.Packaging/ref/System.IO.Packaging.cs
    startLine: 76
  assemblies:
  - System.IO.Packaging
  namespace: System.IO.Packaging
  syntax:
    content: protected PackagePart(Package package, Uri partUri, string contentType, CompressionOption compressionOption)
    content.vb: Protected Sub New(package As Package, partUri As Uri, contentType As String, compressionOption As CompressionOption)
    parameters:
    - id: package
      type: System.IO.Packaging.Package
    - id: partUri
      type: System.Uri
    - id: contentType
      type: System.String
    - id: compressionOption
      type: System.IO.Packaging.CompressionOption
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: System.IO.Packaging.PackagePart.CompressionOption
  commentId: P:System.IO.Packaging.PackagePart.CompressionOption
  id: CompressionOption
  parent: System.IO.Packaging.PackagePart
  langs:
  - csharp
  - vb
  name: CompressionOption
  fullName: System.IO.Packaging.PackagePart.CompressionOption
  type: Property
  source:
    remote:
      path: src/System.IO.Packaging/src/System/IO/Packaging/PackagePart.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CompressionOption
    path: src/System.IO.Packaging/src/System/IO/Packaging/PackagePart.cs
    startLine: 215
  assemblies:
  - System.IO.Packaging
  namespace: System.IO.Packaging
  syntax:
    content: public CompressionOption CompressionOption { get; }
    content.vb: Public ReadOnly Property CompressionOption As CompressionOption
    parameters: []
    return:
      type: System.IO.Packaging.CompressionOption
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.IO.Packaging.PackagePart.ContentType
  commentId: P:System.IO.Packaging.PackagePart.ContentType
  id: ContentType
  parent: System.IO.Packaging.PackagePart
  langs:
  - csharp
  - vb
  name: ContentType
  fullName: System.IO.Packaging.PackagePart.ContentType
  type: Property
  source:
    remote:
      path: src/System.IO.Packaging/src/System/IO/Packaging/PackagePart.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ContentType
    path: src/System.IO.Packaging/src/System/IO/Packaging/PackagePart.cs
    startLine: 159
  assemblies:
  - System.IO.Packaging
  namespace: System.IO.Packaging
  syntax:
    content: public string ContentType { get; }
    content.vb: Public ReadOnly Property ContentType As String
    parameters: []
    return:
      type: System.String
      description: 'Content Type of the Part [can never return null] '
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.IO.Packaging.PackagePart.Package
  commentId: P:System.IO.Packaging.PackagePart.Package
  id: Package
  parent: System.IO.Packaging.PackagePart
  langs:
  - csharp
  - vb
  name: Package
  fullName: System.IO.Packaging.PackagePart.Package
  type: Property
  source:
    remote:
      path: src/System.IO.Packaging/src/System/IO/Packaging/PackagePart.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Package
    path: src/System.IO.Packaging/src/System/IO/Packaging/PackagePart.cs
    startLine: 200
  assemblies:
  - System.IO.Packaging
  namespace: System.IO.Packaging
  syntax:
    content: public Package Package { get; }
    content.vb: Public ReadOnly Property Package As Package
    parameters: []
    return:
      type: System.IO.Packaging.Package
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.IO.Packaging.PackagePart.Uri
  commentId: P:System.IO.Packaging.PackagePart.Uri
  id: Uri
  parent: System.IO.Packaging.PackagePart
  langs:
  - csharp
  - vb
  name: Uri
  fullName: System.IO.Packaging.PackagePart.Uri
  type: Property
  source:
    remote:
      path: src/System.IO.Packaging/src/System/IO/Packaging/PackagePart.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Uri
    path: src/System.IO.Packaging/src/System/IO/Packaging/PackagePart.cs
    startLine: 135
  assemblies:
  - System.IO.Packaging
  namespace: System.IO.Packaging
  syntax:
    content: public Uri Uri { get; }
    content.vb: Public ReadOnly Property Uri As Uri
    parameters: []
    return:
      type: Uri
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.IO.Packaging.PackagePart.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String)
  commentId: M:System.IO.Packaging.PackagePart.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String)
  id: CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String)
  parent: System.IO.Packaging.PackagePart
  langs:
  - csharp
  - vb
  name: CreateRelationship(Uri, TargetMode, String)
  fullName: System.IO.Packaging.PackagePart.CreateRelationship(System.Uri, System.IO.Packaging.TargetMode, System.String)
  type: Method
  source:
    remote:
      path: src/System.IO.Packaging/ref/System.IO.Packaging.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CreateRelationship
    path: src/System.IO.Packaging/ref/System.IO.Packaging.cs
    startLine: 81
  assemblies:
  - System.IO.Packaging
  namespace: System.IO.Packaging
  syntax:
    content: public PackageRelationship CreateRelationship(Uri targetUri, TargetMode targetMode, string relationshipType)
    content.vb: Public Function CreateRelationship(targetUri As Uri, targetMode As TargetMode, relationshipType As String) As PackageRelationship
    parameters:
    - id: targetUri
      type: System.Uri
    - id: targetMode
      type: System.IO.Packaging.TargetMode
    - id: relationshipType
      type: System.String
    return:
      type: System.IO.Packaging.PackageRelationship
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.IO.Packaging.PackagePart.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String,System.String)
  commentId: M:System.IO.Packaging.PackagePart.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String,System.String)
  id: CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String,System.String)
  parent: System.IO.Packaging.PackagePart
  langs:
  - csharp
  - vb
  name: CreateRelationship(Uri, TargetMode, String, String)
  fullName: System.IO.Packaging.PackagePart.CreateRelationship(System.Uri, System.IO.Packaging.TargetMode, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/System.IO.Packaging/ref/System.IO.Packaging.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CreateRelationship
    path: src/System.IO.Packaging/ref/System.IO.Packaging.cs
    startLine: 82
  assemblies:
  - System.IO.Packaging
  namespace: System.IO.Packaging
  syntax:
    content: public PackageRelationship CreateRelationship(Uri targetUri, TargetMode targetMode, string relationshipType, string id)
    content.vb: Public Function CreateRelationship(targetUri As Uri, targetMode As TargetMode, relationshipType As String, id As String) As PackageRelationship
    parameters:
    - id: targetUri
      type: System.Uri
    - id: targetMode
      type: System.IO.Packaging.TargetMode
    - id: relationshipType
      type: System.String
    - id: id
      type: System.String
    return:
      type: System.IO.Packaging.PackageRelationship
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.IO.Packaging.PackagePart.DeleteRelationship(System.String)
  commentId: M:System.IO.Packaging.PackagePart.DeleteRelationship(System.String)
  id: DeleteRelationship(System.String)
  parent: System.IO.Packaging.PackagePart
  langs:
  - csharp
  - vb
  name: DeleteRelationship(String)
  fullName: System.IO.Packaging.PackagePart.DeleteRelationship(System.String)
  type: Method
  source:
    remote:
      path: src/System.IO.Packaging/src/System/IO/Packaging/PackagePart.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: DeleteRelationship
    path: src/System.IO.Packaging/src/System/IO/Packaging/PackagePart.cs
    startLine: 424
  assemblies:
  - System.IO.Packaging
  namespace: System.IO.Packaging
  syntax:
    content: public void DeleteRelationship(string id)
    content.vb: Public Sub DeleteRelationship(id As String)
    parameters:
    - id: id
      type: System.String
      description: >-
        The ID of the relationship to delete. An invalid ID will not

        throw an exception, but nothing will be deleted.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.IO.Packaging.PackagePart.GetContentTypeCore
  commentId: M:System.IO.Packaging.PackagePart.GetContentTypeCore
  id: GetContentTypeCore
  parent: System.IO.Packaging.PackagePart
  langs:
  - csharp
  - vb
  name: GetContentTypeCore()
  fullName: System.IO.Packaging.PackagePart.GetContentTypeCore()
  type: Method
  source:
    remote:
      path: src/System.IO.Packaging/src/System/IO/Packaging/PackagePart.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetContentTypeCore
    path: src/System.IO.Packaging/src/System/IO/Packaging/PackagePart.cs
    startLine: 245
  assemblies:
  - System.IO.Packaging
  namespace: System.IO.Packaging
  syntax:
    content: protected virtual string GetContentTypeCore()
    content.vb: Protected Overridable Function GetContentTypeCore As String
    return:
      type: System.String
      description: Content type for the Part
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: System.IO.Packaging.PackagePart.GetRelationship(System.String)
  commentId: M:System.IO.Packaging.PackagePart.GetRelationship(System.String)
  id: GetRelationship(System.String)
  parent: System.IO.Packaging.PackagePart
  langs:
  - csharp
  - vb
  name: GetRelationship(String)
  fullName: System.IO.Packaging.PackagePart.GetRelationship(System.String)
  type: Method
  source:
    remote:
      path: src/System.IO.Packaging/src/System/IO/Packaging/PackagePart.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetRelationship
    path: src/System.IO.Packaging/src/System/IO/Packaging/PackagePart.cs
    startLine: 492
  assemblies:
  - System.IO.Packaging
  namespace: System.IO.Packaging
  syntax:
    content: public PackageRelationship GetRelationship(string id)
    content.vb: Public Function GetRelationship(id As String) As PackageRelationship
    parameters:
    - id: id
      type: System.String
      description: The relationship ID.
    return:
      type: System.IO.Packaging.PackageRelationship
      description: The relationship with ID 'id' or throw an exception if not found.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.IO.Packaging.PackagePart.GetRelationships
  commentId: M:System.IO.Packaging.PackagePart.GetRelationships
  id: GetRelationships
  parent: System.IO.Packaging.PackagePart
  langs:
  - csharp
  - vb
  name: GetRelationships()
  fullName: System.IO.Packaging.PackagePart.GetRelationships()
  type: Method
  source:
    remote:
      path: src/System.IO.Packaging/src/System/IO/Packaging/PackagePart.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetRelationships
    path: src/System.IO.Packaging/src/System/IO/Packaging/PackagePart.cs
    startLine: 446
  assemblies:
  - System.IO.Packaging
  namespace: System.IO.Packaging
  syntax:
    content: public PackageRelationshipCollection GetRelationships()
    content.vb: Public Function GetRelationships As PackageRelationshipCollection
    return:
      type: System.IO.Packaging.PackageRelationshipCollection
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.IO.Packaging.PackagePart.GetRelationshipsByType(System.String)
  commentId: M:System.IO.Packaging.PackagePart.GetRelationshipsByType(System.String)
  id: GetRelationshipsByType(System.String)
  parent: System.IO.Packaging.PackagePart
  langs:
  - csharp
  - vb
  name: GetRelationshipsByType(String)
  fullName: System.IO.Packaging.PackagePart.GetRelationshipsByType(System.String)
  type: Method
  source:
    remote:
      path: src/System.IO.Packaging/src/System/IO/Packaging/PackagePart.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetRelationshipsByType
    path: src/System.IO.Packaging/src/System/IO/Packaging/PackagePart.cs
    startLine: 466
  assemblies:
  - System.IO.Packaging
  namespace: System.IO.Packaging
  syntax:
    content: public PackageRelationshipCollection GetRelationshipsByType(string relationshipType)
    content.vb: Public Function GetRelationshipsByType(relationshipType As String) As PackageRelationshipCollection
    parameters:
    - id: relationshipType
      type: System.String
    return:
      type: System.IO.Packaging.PackageRelationshipCollection
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.IO.Packaging.PackagePart.GetStream
  commentId: M:System.IO.Packaging.PackagePart.GetStream
  id: GetStream
  parent: System.IO.Packaging.PackagePart
  langs:
  - csharp
  - vb
  name: GetStream()
  fullName: System.IO.Packaging.PackagePart.GetStream()
  type: Method
  source:
    remote:
      path: src/System.IO.Packaging/src/System/IO/Packaging/PackagePart.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetStream
    path: src/System.IO.Packaging/src/System/IO/Packaging/PackagePart.cs
    startLine: 266
  assemblies:
  - System.IO.Packaging
  namespace: System.IO.Packaging
  syntax:
    content: public Stream GetStream()
    content.vb: Public Function GetStream As Stream
    return:
      type: Stream
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.IO.Packaging.PackagePart.GetStream(System.IO.FileMode)
  commentId: M:System.IO.Packaging.PackagePart.GetStream(System.IO.FileMode)
  id: GetStream(System.IO.FileMode)
  parent: System.IO.Packaging.PackagePart
  langs:
  - csharp
  - vb
  name: GetStream(FileMode)
  fullName: System.IO.Packaging.PackagePart.GetStream(System.IO.FileMode)
  type: Method
  source:
    remote:
      path: src/System.IO.Packaging/ref/System.IO.Packaging.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetStream
    path: src/System.IO.Packaging/ref/System.IO.Packaging.cs
    startLine: 89
  assemblies:
  - System.IO.Packaging
  namespace: System.IO.Packaging
  syntax:
    content: public Stream GetStream(FileMode mode)
    content.vb: Public Function GetStream(mode As FileMode) As Stream
    parameters:
    - id: mode
      type: System.IO.FileMode
    return:
      type: System.IO.Stream
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.IO.Packaging.PackagePart.GetStream(System.IO.FileMode,System.IO.FileAccess)
  commentId: M:System.IO.Packaging.PackagePart.GetStream(System.IO.FileMode,System.IO.FileAccess)
  id: GetStream(System.IO.FileMode,System.IO.FileAccess)
  parent: System.IO.Packaging.PackagePart
  langs:
  - csharp
  - vb
  name: GetStream(FileMode, FileAccess)
  fullName: System.IO.Packaging.PackagePart.GetStream(System.IO.FileMode, System.IO.FileAccess)
  type: Method
  source:
    remote:
      path: src/System.IO.Packaging/ref/System.IO.Packaging.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetStream
    path: src/System.IO.Packaging/ref/System.IO.Packaging.cs
    startLine: 90
  assemblies:
  - System.IO.Packaging
  namespace: System.IO.Packaging
  syntax:
    content: public Stream GetStream(FileMode mode, FileAccess access)
    content.vb: Public Function GetStream(mode As FileMode, access As FileAccess) As Stream
    parameters:
    - id: mode
      type: System.IO.FileMode
    - id: access
      type: System.IO.FileAccess
    return:
      type: System.IO.Stream
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.IO.Packaging.PackagePart.GetStreamCore(System.IO.FileMode,System.IO.FileAccess)
  commentId: M:System.IO.Packaging.PackagePart.GetStreamCore(System.IO.FileMode,System.IO.FileAccess)
  id: GetStreamCore(System.IO.FileMode,System.IO.FileAccess)
  parent: System.IO.Packaging.PackagePart
  langs:
  - csharp
  - vb
  name: GetStreamCore(FileMode, FileAccess)
  fullName: System.IO.Packaging.PackagePart.GetStreamCore(System.IO.FileMode, System.IO.FileAccess)
  type: Method
  source:
    remote:
      path: src/System.IO.Packaging/ref/System.IO.Packaging.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetStreamCore
    path: src/System.IO.Packaging/ref/System.IO.Packaging.cs
    startLine: 91
  assemblies:
  - System.IO.Packaging
  namespace: System.IO.Packaging
  syntax:
    content: protected abstract Stream GetStreamCore(FileMode mode, FileAccess access)
    content.vb: Protected MustOverride Function GetStreamCore(mode As FileMode, access As FileAccess) As Stream
    parameters:
    - id: mode
      type: System.IO.FileMode
    - id: access
      type: System.IO.FileAccess
    return:
      type: System.IO.Stream
  modifiers.csharp:
  - protected
  - abstract
  modifiers.vb:
  - Protected
  - MustOverride
- uid: System.IO.Packaging.PackagePart.RelationshipExists(System.String)
  commentId: M:System.IO.Packaging.PackagePart.RelationshipExists(System.String)
  id: RelationshipExists(System.String)
  parent: System.IO.Packaging.PackagePart
  langs:
  - csharp
  - vb
  name: RelationshipExists(String)
  fullName: System.IO.Packaging.PackagePart.RelationshipExists(System.String)
  type: Method
  source:
    remote:
      path: src/System.IO.Packaging/src/System/IO/Packaging/PackagePart.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: RelationshipExists
    path: src/System.IO.Packaging/src/System/IO/Packaging/PackagePart.cs
    startLine: 514
  assemblies:
  - System.IO.Packaging
  namespace: System.IO.Packaging
  syntax:
    content: public bool RelationshipExists(string id)
    content.vb: Public Function RelationshipExists(id As String) As Boolean
    parameters:
    - id: id
      type: System.String
      description: The relationship ID.
    return:
      type: System.Boolean
      description: true iff a relationship with ID 'id' is defined on this source.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: System.IO.Packaging
  isExternal: false
  name: System.IO.Packaging
  fullName: System.IO.Packaging
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.IO.Packaging.Package
  parent: System.IO.Packaging
  isExternal: false
  name: Package
  fullName: System.IO.Packaging.Package
- uid: System.Uri
  parent: System
  isExternal: false
  name: Uri
  fullName: System.Uri
- uid: System.String
  parent: System
  isExternal: false
  name: String
  fullName: System.String
- uid: System.IO.Packaging.CompressionOption
  parent: System.IO.Packaging
  isExternal: false
  name: CompressionOption
  fullName: System.IO.Packaging.CompressionOption
- uid: System.IO.Packaging.TargetMode
  parent: System.IO.Packaging
  isExternal: false
  name: TargetMode
  fullName: System.IO.Packaging.TargetMode
- uid: System.IO.Packaging.PackageRelationship
  parent: System.IO.Packaging
  isExternal: false
  name: PackageRelationship
  fullName: System.IO.Packaging.PackageRelationship
- uid: System.IO.Packaging.PackageRelationshipCollection
  parent: System.IO.Packaging
  isExternal: false
  name: PackageRelationshipCollection
  fullName: System.IO.Packaging.PackageRelationshipCollection
- uid: System.IO.Stream
  parent: System.IO
  isExternal: false
  name: IO.Stream
  fullName: System.IO.Stream
- uid: System.IO
  isExternal: false
  name: System.IO
  fullName: System.IO
- uid: System.IO.FileMode
  parent: System.IO
  isExternal: false
  name: FileMode
  fullName: System.IO.FileMode
- uid: System.IO.FileAccess
  parent: System.IO
  isExternal: false
  name: FileAccess
  fullName: System.IO.FileAccess
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  fullName: System.Boolean
