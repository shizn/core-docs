items:
- uid: System.IO.WaitForChangedResult
  commentId: T:System.IO.WaitForChangedResult
  id: WaitForChangedResult
  parent: System.IO
  children:
  - System.IO.WaitForChangedResult.ChangeType
  - System.IO.WaitForChangedResult.Name
  - System.IO.WaitForChangedResult.OldName
  - System.IO.WaitForChangedResult.TimedOut
  langs:
  - csharp
  - vb
  name: WaitForChangedResult
  fullName: System.IO.WaitForChangedResult
  type: Struct
  source:
    remote:
      path: src/System.IO.FileSystem.Watcher/ref/System.IO.FileSystem.Watcher.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: WaitForChangedResult
    path: src/System.IO.FileSystem.Watcher/ref/System.IO.FileSystem.Watcher.cs
    startLine: 67
  assemblies:
  - System.IO.FileSystem.Watcher
  namespace: System.IO
  summary: "\n<p>Contains information on the change that occurred.</p>\n"
  example:
  - "\n<p>This example shows how to use a <xref href=\"System.IO.FileSystemWatcher\" data-throw-if-not-resolved=\"false\"></xref> synchronously by having it wait for a specific file change notification to occur.</p>WaitForChangedResult#1"
  syntax:
    content: public struct WaitForChangedResult
    content.vb: Public Structure WaitForChangedResult
  seealso:
  - type: System.IO.FileSystemEventArgs
    commentId: T:System.IO.FileSystemEventArgs
  - type: System.IO.FileSystemEventHandler
    commentId: T:System.IO.FileSystemEventHandler
  - type: System.IO.FileSystemWatcher
    commentId: T:System.IO.FileSystemWatcher
  - type: System.IO.InternalBufferOverflowException
    commentId: T:System.IO.InternalBufferOverflowException
  - type: System.IO.NotifyFilters
    commentId: T:System.IO.NotifyFilters
  - type: System.IO.RenamedEventArgs
    commentId: T:System.IO.RenamedEventArgs
  - type: System.IO.RenamedEventHandler
    commentId: T:System.IO.RenamedEventHandler
  - type: System.IO.FileSystemWatcher.WaitForChanged(System.IO.WatcherChangeTypes)
    commentId: M:System.IO.FileSystemWatcher.WaitForChanged(System.IO.WatcherChangeTypes)
  - type: System.IO.WatcherChangeTypes
    commentId: T:System.IO.WatcherChangeTypes
  inheritedMembers:
  - System.ValueType.Equals(System.Object)
  - System.ValueType.GetHashCode
  - System.ValueType.ToString
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetType
  modifiers.csharp:
  - public
  - struct
  modifiers.vb:
  - Public
  - Structure
- uid: System.IO.WaitForChangedResult.ChangeType
  commentId: P:System.IO.WaitForChangedResult.ChangeType
  id: ChangeType
  parent: System.IO.WaitForChangedResult
  langs:
  - csharp
  - vb
  name: ChangeType
  fullName: System.IO.WaitForChangedResult.ChangeType
  type: Property
  source:
    remote:
      path: src/System.IO.FileSystem.Watcher/ref/System.IO.FileSystem.Watcher.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ChangeType
    path: src/System.IO.FileSystem.Watcher/ref/System.IO.FileSystem.Watcher.cs
    startLine: 69
  assemblies:
  - System.IO.FileSystem.Watcher
  namespace: System.IO
  summary: "\n<p>Gets or sets the type of change that occurred.</p>\n"
  syntax:
    content: public WatcherChangeTypes ChangeType { get; set; }
    content.vb: Public Property ChangeType As WatcherChangeTypes
    parameters: []
    return:
      type: System.IO.WatcherChangeTypes
      description: "\n<p>One of the <xref href=\"System.IO.WatcherChangeTypes\" data-throw-if-not-resolved=\"false\"></xref> values.</p>\n"
  seealso:
  - type: System.IO.WatcherChangeTypes
    commentId: T:System.IO.WatcherChangeTypes
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.IO.WaitForChangedResult.Name
  commentId: P:System.IO.WaitForChangedResult.Name
  id: Name
  parent: System.IO.WaitForChangedResult
  langs:
  - csharp
  - vb
  name: Name
  fullName: System.IO.WaitForChangedResult.Name
  type: Property
  source:
    remote:
      path: src/System.IO.FileSystem.Watcher/ref/System.IO.FileSystem.Watcher.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Name
    path: src/System.IO.FileSystem.Watcher/ref/System.IO.FileSystem.Watcher.cs
    startLine: 70
  assemblies:
  - System.IO.FileSystem.Watcher
  namespace: System.IO
  summary: "\n<p>Gets or sets the name of the file or directory that changed.</p>\n"
  example:
  - "\n<p>The following example demonstrates the <xref href=\"System.IO.WaitForChangedResult.Name\" data-throw-if-not-resolved=\"false\"></xref> property. This code example is part of a larger example provided for the <xref href=\"System.IO.WaitForChangedResult\" data-throw-if-not-resolved=\"false\"></xref> structure.</p>WaitForChangedResult#2"
  syntax:
    content: public string Name { get; set; }
    content.vb: Public Property Name As String
    parameters: []
    return:
      type: System.String
      description: "\n<p>The name of the file or directory that changed.</p>\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.IO.WaitForChangedResult.OldName
  commentId: P:System.IO.WaitForChangedResult.OldName
  id: OldName
  parent: System.IO.WaitForChangedResult
  langs:
  - csharp
  - vb
  name: OldName
  fullName: System.IO.WaitForChangedResult.OldName
  type: Property
  source:
    remote:
      path: src/System.IO.FileSystem.Watcher/ref/System.IO.FileSystem.Watcher.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: OldName
    path: src/System.IO.FileSystem.Watcher/ref/System.IO.FileSystem.Watcher.cs
    startLine: 71
  assemblies:
  - System.IO.FileSystem.Watcher
  namespace: System.IO
  summary: "\n<p>Gets or sets the original name of the file or directory that was renamed.</p>\n"
  syntax:
    content: public string OldName { get; set; }
    content.vb: Public Property OldName As String
    parameters: []
    return:
      type: System.String
      description: "\n<p>The original name of the file or directory that was renamed.</p>\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.IO.WaitForChangedResult.TimedOut
  commentId: P:System.IO.WaitForChangedResult.TimedOut
  id: TimedOut
  parent: System.IO.WaitForChangedResult
  langs:
  - csharp
  - vb
  name: TimedOut
  fullName: System.IO.WaitForChangedResult.TimedOut
  type: Property
  source:
    remote:
      path: src/System.IO.FileSystem.Watcher/ref/System.IO.FileSystem.Watcher.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: TimedOut
    path: src/System.IO.FileSystem.Watcher/ref/System.IO.FileSystem.Watcher.cs
    startLine: 72
  assemblies:
  - System.IO.FileSystem.Watcher
  namespace: System.IO
  summary: "\n<p>Gets or sets a value indicating whether the wait operation timed out.</p>\n"
  syntax:
    content: public bool TimedOut { get; set; }
    content.vb: Public Property TimedOut As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if the <xref href=\"System.IO.FileSystemWatcher.WaitForChanged(System.IO.WatcherChangeTypes)\" data-throw-if-not-resolved=\"false\"></xref> method timed out; otherwise, <strong>false</strong>.</p>\n"
  seealso:
  - type: System.IO.FileSystemWatcher.WaitForChanged(System.IO.WatcherChangeTypes)
    commentId: M:System.IO.FileSystemWatcher.WaitForChanged(System.IO.WatcherChangeTypes)
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: System.IO
  isExternal: false
  name: System.IO
  fullName: System.IO
- uid: System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  name: Equals(Object)
  fullName: System.ValueType.Equals(System.Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    fullName: System.ValueType.Equals
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    fullName: System.ValueType.Equals
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: false
  name: GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    fullName: System.ValueType.GetHashCode
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    fullName: System.ValueType.GetHashCode
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.ValueType.ToString
  parent: System.ValueType
  isExternal: false
  name: ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    fullName: System.ValueType.ToString
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    fullName: System.ValueType.ToString
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.ValueType
  parent: System
  isExternal: false
  name: ValueType
  fullName: System.ValueType
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.IO.WatcherChangeTypes
  parent: System.IO
  isExternal: false
  name: WatcherChangeTypes
  fullName: System.IO.WatcherChangeTypes
- uid: System.String
  parent: System
  isExternal: false
  name: String
  fullName: System.String
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  fullName: System.Boolean
