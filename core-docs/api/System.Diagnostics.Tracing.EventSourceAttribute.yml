items:
- uid: System.Diagnostics.Tracing.EventSourceAttribute
  commentId: T:System.Diagnostics.Tracing.EventSourceAttribute
  id: EventSourceAttribute
  parent: System.Diagnostics.Tracing
  children:
  - System.Diagnostics.Tracing.EventSourceAttribute.#ctor
  - System.Diagnostics.Tracing.EventSourceAttribute.Guid
  - System.Diagnostics.Tracing.EventSourceAttribute.LocalizationResources
  - System.Diagnostics.Tracing.EventSourceAttribute.Name
  langs:
  - csharp
  - vb
  name: EventSourceAttribute
  fullName: System.Diagnostics.Tracing.EventSourceAttribute
  type: Class
  source:
    remote:
      path: src/System.Diagnostics.Tracing/ref/System.Diagnostics.Tracing.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: EventSourceAttribute
    path: src/System.Diagnostics.Tracing/ref/System.Diagnostics.Tracing.cs
    startLine: 220
  assemblies:
  - System.Diagnostics.Tracing
  namespace: System.Diagnostics.Tracing
  summary: "\n<p>Allows the event tracing for Windows (ETW) name to be defined independently of the name of the event source class.   </p>\n"
  remarks: "\n<p>By default, in event tracing for Windows (ETW), the name of an event source matches the name of the event source class, but without the namespace name. This is sufficient for private event sources, but for more visible event sources it is better to have a hierarchical namespace such as: CompanyName.ProviderName.  The <xref href=\"System.Diagnostics.Tracing.EventSourceAttribute\" data-throw-if-not-resolved=\"false\"></xref> attribute lets you define the ETW name independently of the name of the class.</p>\n<p>The <xref href=\"System.Diagnostics.Tracing.EventSourceAttribute\" data-throw-if-not-resolved=\"false\"></xref> attribute also lets you define a GUID explicitly for the event source.  In standard usage, you don’t need to specify a GUID when defining an event source or referring to it, because a GUID is implicitly derived from the name of the event source class. Explicitly defining a GUID is discouraged, except when upgrading existing ETW providers to using event sources.</p>\n"
  syntax:
    content: 'public sealed class EventSourceAttribute : Attribute'
    content.vb: >-
      Public NotInheritable Class EventSourceAttribute
          Inherits Attribute
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: System.Diagnostics.Tracing.EventSourceAttribute.#ctor
  commentId: M:System.Diagnostics.Tracing.EventSourceAttribute.#ctor
  id: '#ctor'
  parent: System.Diagnostics.Tracing.EventSourceAttribute
  langs:
  - csharp
  - vb
  name: EventSourceAttribute()
  fullName: System.Diagnostics.Tracing.EventSourceAttribute.EventSourceAttribute()
  type: Constructor
  source:
    remote:
      path: src/System.Diagnostics.Tracing/ref/System.Diagnostics.Tracing.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Diagnostics.Tracing/ref/System.Diagnostics.Tracing.cs
    startLine: 223
  assemblies:
  - System.Diagnostics.Tracing
  namespace: System.Diagnostics.Tracing
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Diagnostics.Tracing.EventSourceAttribute\" data-throw-if-not-resolved=\"false\"></xref> class.</p>\n"
  syntax:
    content: public EventSourceAttribute()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Diagnostics.Tracing.EventSourceAttribute.Guid
  commentId: P:System.Diagnostics.Tracing.EventSourceAttribute.Guid
  id: Guid
  parent: System.Diagnostics.Tracing.EventSourceAttribute
  langs:
  - csharp
  - vb
  name: Guid
  fullName: System.Diagnostics.Tracing.EventSourceAttribute.Guid
  type: Property
  source:
    remote:
      path: src/System.Diagnostics.Tracing/ref/System.Diagnostics.Tracing.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Guid
    path: src/System.Diagnostics.Tracing/ref/System.Diagnostics.Tracing.cs
    startLine: 224
  assemblies:
  - System.Diagnostics.Tracing
  namespace: System.Diagnostics.Tracing
  summary: "\n<p>Gets or sets the event source identifier.</p>\n"
  remarks: "\n<p>In standard usage, you don’t need to specify a GUID when defining an event source or referring to it, because a GUID is implicitly derived from the name of the event source class. Explicitly defining a GUID is discouraged, except when upgrading existing ETW providers to using event sources.</p>\n"
  syntax:
    content: public string Guid { get; set; }
    content.vb: Public Property Guid As String
    parameters: []
    return:
      type: System.String
      description: "\n<p>The event source identifier.</p>\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Diagnostics.Tracing.EventSourceAttribute.LocalizationResources
  commentId: P:System.Diagnostics.Tracing.EventSourceAttribute.LocalizationResources
  id: LocalizationResources
  parent: System.Diagnostics.Tracing.EventSourceAttribute
  langs:
  - csharp
  - vb
  name: LocalizationResources
  fullName: System.Diagnostics.Tracing.EventSourceAttribute.LocalizationResources
  type: Property
  source:
    remote:
      path: src/System.Diagnostics.Tracing/ref/System.Diagnostics.Tracing.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: LocalizationResources
    path: src/System.Diagnostics.Tracing/ref/System.Diagnostics.Tracing.cs
    startLine: 225
  assemblies:
  - System.Diagnostics.Tracing
  namespace: System.Diagnostics.Tracing
  summary: "\n<p>Gets or sets the name of the localization resource file.</p>\n"
  remarks: "\n<p>Event sources support the localization of events. You can localize the names used for events, operation codes, tasks, keywords, and maps to multiple languages. To localize events, create a .ResX style string table by adding a resource file to your project.  The resource file is given a name (for example, DefaultNameSpace.ResourceFileName) that can be passed to the <see cref=\"Overload:System.Resources.ResourceManager.#ctor\"></see> constructor that will read the resources.  This name is the value of the <xref href=\"System.Diagnostics.Tracing.EventSourceAttribute.LocalizationResources\" data-throw-if-not-resolved=\"false\"></xref> property. If the <xref href=\"System.Diagnostics.Tracing.EventSourceAttribute.LocalizationResources\" data-throw-if-not-resolved=\"false\"></xref> property is not <strong>null</strong>, the <xref href=\"System.Diagnostics.Tracing.EventSource\" data-throw-if-not-resolved=\"false\"></xref> object looks up the localized strings for events by using the following resource naming scheme, where the terms in uppercase represent the name of the event, task, keyword, or map value that should be localized:</p>\n<ul><li>\n<p>event_EVENTNAME</p>\n</li><li>\n<p>task_TASKNAME</p>\n</li><li>\n<p>keyword_KEYWORDNAME</p>\n</li><li>\n<p>map_MAPNAME</p>\n</li></ul>\n<p>Note that the localized string for an event corresponds to the message string and can have {0} values, which represent the payload values.  </p>\n"
  syntax:
    content: public string LocalizationResources { get; set; }
    content.vb: Public Property LocalizationResources As String
    parameters: []
    return:
      type: System.String
      description: "\n<p>The name of the localization resource file, or <strong>null</strong> if the localization resource file does not exist.</p>\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Diagnostics.Tracing.EventSourceAttribute.Name
  commentId: P:System.Diagnostics.Tracing.EventSourceAttribute.Name
  id: Name
  parent: System.Diagnostics.Tracing.EventSourceAttribute
  langs:
  - csharp
  - vb
  name: Name
  fullName: System.Diagnostics.Tracing.EventSourceAttribute.Name
  type: Property
  source:
    remote:
      path: src/System.Diagnostics.Tracing/ref/System.Diagnostics.Tracing.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Name
    path: src/System.Diagnostics.Tracing/ref/System.Diagnostics.Tracing.cs
    startLine: 226
  assemblies:
  - System.Diagnostics.Tracing
  namespace: System.Diagnostics.Tracing
  summary: "\n<p>Gets or sets the name of the event source.</p>\n"
  syntax:
    content: public string Name { get; set; }
    content.vb: Public Property Name As String
    parameters: []
    return:
      type: System.String
      description: "\n<p>The name of the event source.</p>\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: System.Diagnostics.Tracing
  isExternal: false
  name: System.Diagnostics.Tracing
  fullName: System.Diagnostics.Tracing
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.String
  parent: System
  isExternal: false
  name: String
  fullName: System.String
