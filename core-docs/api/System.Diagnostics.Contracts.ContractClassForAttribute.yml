items:
- uid: System.Diagnostics.Contracts.ContractClassForAttribute
  commentId: T:System.Diagnostics.Contracts.ContractClassForAttribute
  id: ContractClassForAttribute
  parent: System.Diagnostics.Contracts
  children:
  - System.Diagnostics.Contracts.ContractClassForAttribute.#ctor(System.Type)
  - System.Diagnostics.Contracts.ContractClassForAttribute.TypeContractsAreFor
  langs:
  - csharp
  - vb
  name: ContractClassForAttribute
  fullName: System.Diagnostics.Contracts.ContractClassForAttribute
  type: Class
  source:
    remote:
      path: src/System.Diagnostics.Contracts/ref/System.Diagnostics.Contracts.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ContractClassForAttribute
    path: src/System.Diagnostics.Contracts/ref/System.Diagnostics.Contracts.cs
    startLine: 73
  assemblies:
  - System.Diagnostics.Contracts
  namespace: System.Diagnostics.Contracts
  summary: "\n<p>Specifies that a class is a contract for a type.</p>\n"
  remarks: "\n<p>Types that are marked with this attribute represent a code contract for another type. The type that the contract applies to is specified in the constructor. </p>\n"
  example:
  - "\n<p>The following example shows how to use the <xref href=\"System.Diagnostics.Contracts.ContractClassForAttribute\" data-throw-if-not-resolved=\"false\"></xref> attribute to specify the contracts for another type. This code example is part of a larger example provided for the <xref href=\"System.Diagnostics.Contracts.ContractClassAttribute\" data-throw-if-not-resolved=\"false\"></xref> class.</p>ContractExample#4"
  syntax:
    content: 'public sealed class ContractClassForAttribute : Attribute'
    content.vb: >-
      Public NotInheritable Class ContractClassForAttribute
          Inherits Attribute
  seealso:
  - type: System.Diagnostics.Contracts.ContractClassAttribute
    commentId: T:System.Diagnostics.Contracts.ContractClassAttribute
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: System.Diagnostics.Contracts.ContractClassForAttribute.#ctor(System.Type)
  commentId: M:System.Diagnostics.Contracts.ContractClassForAttribute.#ctor(System.Type)
  id: '#ctor(System.Type)'
  parent: System.Diagnostics.Contracts.ContractClassForAttribute
  langs:
  - csharp
  - vb
  name: ContractClassForAttribute(Type)
  fullName: System.Diagnostics.Contracts.ContractClassForAttribute.ContractClassForAttribute(System.Type)
  type: Constructor
  source:
    remote:
      path: src/System.Diagnostics.Contracts/ref/System.Diagnostics.Contracts.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Diagnostics.Contracts/ref/System.Diagnostics.Contracts.cs
    startLine: 77
  assemblies:
  - System.Diagnostics.Contracts
  namespace: System.Diagnostics.Contracts
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Diagnostics.Contracts.ContractClassForAttribute\" data-throw-if-not-resolved=\"false\"></xref> class, specifying the type the current class is a contract for. </p>\n"
  remarks: "\n<p>The following example shows how to use the <xref href=\"System.Diagnostics.Contracts.ContractClassAttribute.#ctor(System.Type)\" data-throw-if-not-resolved=\"false\"></xref> constructor to specify that the contracts in the type apply to the <code>IArray</code> interface. This code example is part of a larger example provided for the <xref href=\"System.Diagnostics.Contracts.ContractClassAttribute\" data-throw-if-not-resolved=\"false\"></xref> class.</p>ContractExample#4"
  example:
  - 
  syntax:
    content: public ContractClassForAttribute(Type typeContractsAreFor)
    content.vb: Public Sub New(typeContractsAreFor As Type)
    parameters:
    - id: typeContractsAreFor
      type: System.Type
      description: "\n<p>The type the current class is a contract for.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Diagnostics.Contracts.ContractClassForAttribute.TypeContractsAreFor
  commentId: P:System.Diagnostics.Contracts.ContractClassForAttribute.TypeContractsAreFor
  id: TypeContractsAreFor
  parent: System.Diagnostics.Contracts.ContractClassForAttribute
  langs:
  - csharp
  - vb
  name: TypeContractsAreFor
  fullName: System.Diagnostics.Contracts.ContractClassForAttribute.TypeContractsAreFor
  type: Property
  source:
    remote:
      path: src/System.Diagnostics.Contracts/ref/System.Diagnostics.Contracts.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: TypeContractsAreFor
    path: src/System.Diagnostics.Contracts/ref/System.Diagnostics.Contracts.cs
    startLine: 78
  assemblies:
  - System.Diagnostics.Contracts
  namespace: System.Diagnostics.Contracts
  summary: "\n<p>Gets the type that this code contract applies to. </p>\n"
  example:
  - 
  syntax:
    content: public Type TypeContractsAreFor { get; }
    content.vb: Public ReadOnly Property TypeContractsAreFor As Type
    parameters: []
    return:
      type: System.Type
      description: "\n<p>The type that this contract applies to.</p>\n"
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: System.Diagnostics.Contracts
  isExternal: false
  name: System.Diagnostics.Contracts
  fullName: System.Diagnostics.Contracts
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  fullName: System.Type
