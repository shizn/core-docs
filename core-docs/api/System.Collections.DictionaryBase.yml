items:
- uid: System.Collections.DictionaryBase
  commentId: T:System.Collections.DictionaryBase
  id: DictionaryBase
  parent: System.Collections
  children:
  - System.Collections.DictionaryBase.#ctor
  - System.Collections.DictionaryBase.Clear
  - System.Collections.DictionaryBase.CopyTo(System.Array,System.Int32)
  - System.Collections.DictionaryBase.Count
  - System.Collections.DictionaryBase.Dictionary
  - System.Collections.DictionaryBase.GetEnumerator
  - System.Collections.DictionaryBase.InnerHashtable
  - System.Collections.DictionaryBase.OnClear
  - System.Collections.DictionaryBase.OnClearComplete
  - System.Collections.DictionaryBase.OnGet(System.Object,System.Object)
  - System.Collections.DictionaryBase.OnInsert(System.Object,System.Object)
  - System.Collections.DictionaryBase.OnInsertComplete(System.Object,System.Object)
  - System.Collections.DictionaryBase.OnRemove(System.Object,System.Object)
  - System.Collections.DictionaryBase.OnRemoveComplete(System.Object,System.Object)
  - System.Collections.DictionaryBase.OnSet(System.Object,System.Object,System.Object)
  - System.Collections.DictionaryBase.OnSetComplete(System.Object,System.Object,System.Object)
  - System.Collections.DictionaryBase.OnValidate(System.Object,System.Object)
  langs:
  - csharp
  - vb
  name: DictionaryBase
  fullName: System.Collections.DictionaryBase
  type: Class
  source:
    remote:
      path: src/System.Collections.NonGeneric/src/System/Collections/DictionaryBase.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: DictionaryBase
    path: src/System.Collections.NonGeneric/src/System/Collections/DictionaryBase.cs
    startLine: 17
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  summary: "\n<p>Provides the <strong>abstract</strong> base class for a strongly typed collection of key/value pairs.</p>\n"
  remarks: "\n<p>The foreach statement of the C# language (for each in Visual Basic) returns an object of the type of the elements in the collection. Since each element of the <xref href=\"System.Collections.DictionaryBase\" data-throw-if-not-resolved=\"false\"></xref> is a key/value pair, the element type is not the type of the key or the type of the value. Instead, the element type is <xref href=\"System.Collections.DictionaryEntry\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>The <strong>foreach</strong> statement is a wrapper around the enumerator, which only allows reading from, not writing to, the collection.</p>\n<p>Because keys can be inherited and their behavior changed, their absolute uniqueness cannot be guaranteed by comparisons using the <xref href=\"System.Type.Equals(System.Object)\" data-throw-if-not-resolved=\"false\"></xref> method.</p>\n"
  example:
  - "\n<p>The following code example implements the <xref href=\"System.Collections.DictionaryBase\" data-throw-if-not-resolved=\"false\"></xref> class and uses that implementation to create a dictionary of <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref> keys and values that have a <xref href=\"System.String.Length\" data-throw-if-not-resolved=\"false\"></xref> of 5 characters or less.</p>System.Collections.DictionaryBase#1"
  syntax:
    content: 'public abstract class DictionaryBase : IDictionary'
    content.vb: >-
      Public MustInherit Class DictionaryBase
          Inherits IDictionary
  seealso:
  - type: System.Collections.Hashtable
    commentId: T:System.Collections.Hashtable
  - type: System.Collections.IDictionary
    commentId: T:System.Collections.IDictionary
  - type: System.Collections.Generic
    commentId: N:System.Collections.Generic
  inheritance:
  - System.Object
  implements:
  - System.Collections.IDictionary
  - System.Collections.IEnumerable
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: System.Collections.DictionaryBase.#ctor
  commentId: M:System.Collections.DictionaryBase.#ctor
  id: '#ctor'
  parent: System.Collections.DictionaryBase
  langs:
  - csharp
  - vb
  name: DictionaryBase()
  fullName: System.Collections.DictionaryBase.DictionaryBase()
  type: Constructor
  source:
    remote:
      path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
    startLine: 114
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Collections.DictionaryBase\" data-throw-if-not-resolved=\"false\"></xref> class.</p>\n"
  remarks: "\n<p>This constructor is an O(1) operation.</p>\n"
  syntax:
    content: protected DictionaryBase()
    content.vb: Protected Sub New
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: System.Collections.DictionaryBase.Count
  commentId: P:System.Collections.DictionaryBase.Count
  id: Count
  parent: System.Collections.DictionaryBase
  langs:
  - csharp
  - vb
  name: Count
  fullName: System.Collections.DictionaryBase.Count
  type: Property
  source:
    remote:
      path: src/System.Collections.NonGeneric/src/System/Collections/DictionaryBase.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Count
    path: src/System.Collections.NonGeneric/src/System/Collections/DictionaryBase.cs
    startLine: 36
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  summary: "\n<p>Gets the number of elements contained in the <xref href=\"System.Collections.DictionaryBase\" data-throw-if-not-resolved=\"false\"></xref> instance.</p>\n"
  remarks: "\n<p>Retrieving the value of this property is an O(1) operation.</p>\n"
  syntax:
    content: public int Count { get; }
    content.vb: Public ReadOnly Property Count As Integer
    parameters: []
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Collections.DictionaryBase.Dictionary
  commentId: P:System.Collections.DictionaryBase.Dictionary
  id: Dictionary
  parent: System.Collections.DictionaryBase
  langs:
  - csharp
  - vb
  name: Dictionary
  fullName: System.Collections.DictionaryBase.Dictionary
  type: Property
  source:
    remote:
      path: src/System.Collections.NonGeneric/src/System/Collections/DictionaryBase.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Dictionary
    path: src/System.Collections.NonGeneric/src/System/Collections/DictionaryBase.cs
    startLine: 31
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  summary: "\n<p>Gets the list of elements contained in the <xref href=\"System.Collections.DictionaryBase\" data-throw-if-not-resolved=\"false\"></xref> instance.</p>\n"
  remarks: "\n<p>The On* methods are invoked only on the instance returned by the <xref href=\"System.Collections.DictionaryBase.Dictionary\" data-throw-if-not-resolved=\"false\"></xref> property, but not on the instance returned by the <xref href=\"System.Collections.DictionaryBase.InnerHashtable\" data-throw-if-not-resolved=\"false\"></xref> property.</p>\n<p>Retrieving the value of this property is an O(1) operation.</p>\n"
  example:
  - "\n<p>The following code example implements the <xref href=\"System.Collections.DictionaryBase\" data-throw-if-not-resolved=\"false\"></xref> class and uses that implementation to create a dictionary of <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref> keys and values that have a <xref href=\"System.String.Length\" data-throw-if-not-resolved=\"false\"></xref> of 5 characters or less.</p>System.Collections.DictionaryBase#1"
  syntax:
    content: protected IDictionary Dictionary { get; }
    content.vb: Protected ReadOnly Property Dictionary As IDictionary
    parameters: []
    return:
      type: IDictionary
  modifiers.csharp:
  - protected
  - get
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: System.Collections.DictionaryBase.InnerHashtable
  commentId: P:System.Collections.DictionaryBase.InnerHashtable
  id: InnerHashtable
  parent: System.Collections.DictionaryBase
  langs:
  - csharp
  - vb
  name: InnerHashtable
  fullName: System.Collections.DictionaryBase.InnerHashtable
  type: Property
  source:
    remote:
      path: src/System.Collections.NonGeneric/src/System/Collections/DictionaryBase.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: InnerHashtable
    path: src/System.Collections.NonGeneric/src/System/Collections/DictionaryBase.cs
    startLine: 21
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  summary: "\n<p>Gets the list of elements contained in the <xref href=\"System.Collections.DictionaryBase\" data-throw-if-not-resolved=\"false\"></xref> instance.</p>\n"
  remarks: "\n<p>The On* methods are invoked only on the instance returned by the <xref href=\"System.Collections.DictionaryBase.Dictionary\" data-throw-if-not-resolved=\"false\"></xref> property, but not on the instance returned by the <xref href=\"System.Collections.DictionaryBase.InnerHashtable\" data-throw-if-not-resolved=\"false\"></xref> property.</p>\n<p>Retrieving the value of this property is an O(1) operation.</p>\n"
  syntax:
    content: protected Hashtable InnerHashtable { get; }
    content.vb: Protected ReadOnly Property InnerHashtable As Hashtable
    parameters: []
    return:
      type: System.Collections.Hashtable
  modifiers.csharp:
  - protected
  - get
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: System.Collections.DictionaryBase.Clear
  commentId: M:System.Collections.DictionaryBase.Clear
  id: Clear
  parent: System.Collections.DictionaryBase
  langs:
  - csharp
  - vb
  name: Clear()
  fullName: System.Collections.DictionaryBase.Clear()
  type: Method
  source:
    remote:
      path: src/System.Collections.NonGeneric/src/System/Collections/DictionaryBase.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Clear
    path: src/System.Collections.NonGeneric/src/System/Collections/DictionaryBase.cs
    startLine: 137
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  summary: "\n<p>Clears the contents of the <xref href=\"System.Collections.DictionaryBase\" data-throw-if-not-resolved=\"false\"></xref> instance.</p>\n"
  remarks: "\n<p>\n<xref href=\"System.Collections.DictionaryBase.Count\" data-throw-if-not-resolved=\"false\"></xref> is set to zero, and references to other objects from elements of the collection are also released.</p>\n<p>This method is an O(<em>n</em>) operation, where <em>n</em> is <xref href=\"System.Collections.DictionaryBase.Count\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: public void Clear()
    content.vb: Public Sub Clear
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Collections.DictionaryBase.CopyTo(System.Array,System.Int32)
  commentId: M:System.Collections.DictionaryBase.CopyTo(System.Array,System.Int32)
  id: CopyTo(System.Array,System.Int32)
  parent: System.Collections.DictionaryBase
  langs:
  - csharp
  - vb
  name: CopyTo(Array, Int32)
  fullName: System.Collections.DictionaryBase.CopyTo(System.Array, System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CopyTo
    path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
    startLine: 126
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  summary: "\n<p>Copies the <xref href=\"System.Collections.DictionaryBase\" data-throw-if-not-resolved=\"false\"></xref> elements to a one-dimensional <xref href=\"System.Array\" data-throw-if-not-resolved=\"false\"></xref> at the specified index.</p>\n"
  remarks: "\n<p>The elements are copied to the <xref href=\"System.Array\" data-throw-if-not-resolved=\"false\"></xref> in the same order in which the enumerator iterates through the <xref href=\"System.Collections.DictionaryBase\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>This method is an O(<em>n</em>) operation, where <em>n</em> is <xref href=\"System.Collections.DictionaryBase.Count\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: public void CopyTo(Array array, int index)
    content.vb: Public Sub CopyTo(array As Array, index As Integer)
    parameters:
    - id: array
      type: System.Array
      description: "\n<p>The one-dimensional <xref href=\"System.Array\" data-throw-if-not-resolved=\"false\"></xref> that is the destination of the <xref href=\"System.Collections.DictionaryEntry\" data-throw-if-not-resolved=\"false\"></xref> objects copied from the <xref href=\"System.Collections.DictionaryBase\" data-throw-if-not-resolved=\"false\"></xref> instance. The <xref href=\"System.Array\" data-throw-if-not-resolved=\"false\"></xref> must have zero-based indexing. </p>\n"
    - id: index
      type: System.Int32
      description: "\n<p>The zero-based index in <em>array</em> at which copying begins. </p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>array</em> is <strong>null</strong>. </p>\n"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>\n<em>index</em> is less than zero. </p>\n"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<p>\n<em>array</em> is multidimensional.</p>\n<p>-or- </p>\n<p>The number of elements in the source <xref href=\"System.Collections.DictionaryBase\" data-throw-if-not-resolved=\"false\"></xref> is greater than the available space from <em>index</em> to the end of the destination <em>array</em>. </p>\n"
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "\n<p>The type of the source <xref href=\"System.Collections.DictionaryBase\" data-throw-if-not-resolved=\"false\"></xref> cannot be cast automatically to the type of the destination <em>array</em>. </p>\n"
  seealso:
  - type: System.Array
    commentId: T:System.Array
  - type: System.Collections.DictionaryEntry
    commentId: T:System.Collections.DictionaryEntry
  - type: System.Collections.DictionaryBase.GetEnumerator
    commentId: M:System.Collections.DictionaryBase.GetEnumerator
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Collections.DictionaryBase.GetEnumerator
  commentId: M:System.Collections.DictionaryBase.GetEnumerator
  id: GetEnumerator
  parent: System.Collections.DictionaryBase
  langs:
  - csharp
  - vb
  name: GetEnumerator()
  fullName: System.Collections.DictionaryBase.GetEnumerator()
  type: Method
  source:
    remote:
      path: src/System.Collections.NonGeneric/src/System/Collections/DictionaryBase.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetEnumerator
    path: src/System.Collections.NonGeneric/src/System/Collections/DictionaryBase.cs
    startLine: 165
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  summary: "\n<p>Returns an <xref href=\"System.Collections.IDictionaryEnumerator\" data-throw-if-not-resolved=\"false\"></xref> that iterates through the <xref href=\"System.Collections.DictionaryBase\" data-throw-if-not-resolved=\"false\"></xref> instance.</p>\n"
  remarks: "\n<p>The <strong>foreach</strong> statement of the C# language (<strong>for each</strong> in Visual Basic) hides the complexity of the enumerators.  Therefore, using <strong>foreach</strong> is recommended, instead of directly manipulating the enumerator.</p>\n<p>Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</p>\n<p>Initially, the enumerator is positioned before the first element in the collection. <xref href=\"System.Collections.IEnumerator.Reset\" data-throw-if-not-resolved=\"false\"></xref> also brings the enumerator back to this position.  At this position, <xref href=\"System.Collections.IEnumerator.Current\" data-throw-if-not-resolved=\"false\"></xref> is undefined. Therefore, you must call <xref href=\"System.Collections.IEnumerator.MoveNext\" data-throw-if-not-resolved=\"false\"></xref> to advance the enumerator to the first element of the collection before reading the value of <xref href=\"System.Collections.IEnumerator.Current\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>\n<xref href=\"System.Collections.IEnumerator.Current\" data-throw-if-not-resolved=\"false\"></xref> returns the same object until either <xref href=\"System.Collections.IEnumerator.MoveNext\" data-throw-if-not-resolved=\"false\"></xref> or <xref href=\"System.Collections.IEnumerator.Reset\" data-throw-if-not-resolved=\"false\"></xref> is called. <xref href=\"System.Collections.IEnumerator.MoveNext\" data-throw-if-not-resolved=\"false\"></xref> sets <xref href=\"System.Collections.IEnumerator.Current\" data-throw-if-not-resolved=\"false\"></xref> to the next element.</p>\n<p>If <xref href=\"System.Collections.IEnumerator.MoveNext\" data-throw-if-not-resolved=\"false\"></xref> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref href=\"System.Collections.IEnumerator.MoveNext\" data-throw-if-not-resolved=\"false\"></xref> returns <strong>false</strong>. When the enumerator is at this position, subsequent calls to <xref href=\"System.Collections.IEnumerator.MoveNext\" data-throw-if-not-resolved=\"false\"></xref> also return <strong>false</strong>. If the last call to <xref href=\"System.Collections.IEnumerator.MoveNext\" data-throw-if-not-resolved=\"false\"></xref> returned <strong>false</strong>, <xref href=\"System.Collections.IEnumerator.Current\" data-throw-if-not-resolved=\"false\"></xref> is undefined. To set <xref href=\"System.Collections.IEnumerator.Current\" data-throw-if-not-resolved=\"false\"></xref> to the first element of the collection again, you can call <xref href=\"System.Collections.IEnumerator.Reset\" data-throw-if-not-resolved=\"false\"></xref> followed by <xref href=\"System.Collections.IEnumerator.MoveNext\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>An enumerator remains valid as long as the collection remains unchanged. If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and its behavior is undefined.</p>\n<p>The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.  To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.  To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</p>\n<p>This method is an O(1) operation.</p>\n"
  example:
  - "\n<p>The following code example implements the <xref href=\"System.Collections.DictionaryBase\" data-throw-if-not-resolved=\"false\"></xref> class and uses that implementation to create a dictionary of <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref> keys and values that have a <xref href=\"System.String.Length\" data-throw-if-not-resolved=\"false\"></xref> of 5 characters or less.</p>System.Collections.DictionaryBase#1"
  syntax:
    content: public IDictionaryEnumerator GetEnumerator()
    content.vb: Public Function GetEnumerator As IDictionaryEnumerator
    return:
      type: IDictionaryEnumerator
  seealso:
  - type: System.Collections.IDictionaryEnumerator
    commentId: T:System.Collections.IDictionaryEnumerator
  - type: System.Collections.IEnumerator
    commentId: T:System.Collections.IEnumerator
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Collections.DictionaryBase.OnClear
  commentId: M:System.Collections.DictionaryBase.OnClear
  id: OnClear
  parent: System.Collections.DictionaryBase
  langs:
  - csharp
  - vb
  name: OnClear()
  fullName: System.Collections.DictionaryBase.OnClear()
  type: Method
  source:
    remote:
      path: src/System.Collections.NonGeneric/src/System/Collections/DictionaryBase.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: OnClear
    path: src/System.Collections.NonGeneric/src/System/Collections/DictionaryBase.cs
    startLine: 188
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  summary: "\n<p>Performs additional custom processes before clearing the contents of the <xref href=\"System.Collections.DictionaryBase\" data-throw-if-not-resolved=\"false\"></xref> instance.</p>\n"
  remarks: "\n<p>The default implementation of this method is intended to be overridden by a derived class to perform some action before the collection is cleared.</p>\n<p>The On* methods are invoked only on the instance returned by the <xref href=\"System.Collections.DictionaryBase.Dictionary\" data-throw-if-not-resolved=\"false\"></xref> property, but not on the instance returned by the <xref href=\"System.Collections.DictionaryBase.InnerHashtable\" data-throw-if-not-resolved=\"false\"></xref> property.</p>\n<p>The default implementation of this method is an O(1) operation.</p>\n"
  syntax:
    content: protected virtual void OnClear()
    content.vb: Protected Overridable Sub OnClear
  seealso:
  - type: System.Collections.DictionaryBase.OnClearComplete
    commentId: M:System.Collections.DictionaryBase.OnClearComplete
  - type: System.Collections.DictionaryBase.OnRemove(System.Object,System.Object)
    commentId: M:System.Collections.DictionaryBase.OnRemove(System.Object,System.Object)
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: System.Collections.DictionaryBase.OnClearComplete
  commentId: M:System.Collections.DictionaryBase.OnClearComplete
  id: OnClearComplete
  parent: System.Collections.DictionaryBase
  langs:
  - csharp
  - vb
  name: OnClearComplete()
  fullName: System.Collections.DictionaryBase.OnClearComplete()
  type: Method
  source:
    remote:
      path: src/System.Collections.NonGeneric/src/System/Collections/DictionaryBase.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: OnClearComplete
    path: src/System.Collections.NonGeneric/src/System/Collections/DictionaryBase.cs
    startLine: 208
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  summary: "\n<p>Performs additional custom processes after clearing the contents of the <xref href=\"System.Collections.DictionaryBase\" data-throw-if-not-resolved=\"false\"></xref> instance.</p>\n"
  remarks: "\n<p>The default implementation of this method is intended to be overridden by a derived class to perform some action after the collection is cleared.</p>\n<p>The On* methods are invoked only on the instance returned by the <xref href=\"System.Collections.DictionaryBase.Dictionary\" data-throw-if-not-resolved=\"false\"></xref> property, but not on the instance returned by the <xref href=\"System.Collections.DictionaryBase.InnerHashtable\" data-throw-if-not-resolved=\"false\"></xref> property.</p>\n<p>The default implementation of this method is an O(1) operation.</p>\n"
  syntax:
    content: protected virtual void OnClearComplete()
    content.vb: Protected Overridable Sub OnClearComplete
  seealso:
  - type: System.Collections.DictionaryBase.OnClear
    commentId: M:System.Collections.DictionaryBase.OnClear
  - type: System.Collections.DictionaryBase.OnRemoveComplete(System.Object,System.Object)
    commentId: M:System.Collections.DictionaryBase.OnRemoveComplete(System.Object,System.Object)
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: System.Collections.DictionaryBase.OnGet(System.Object,System.Object)
  commentId: M:System.Collections.DictionaryBase.OnGet(System.Object,System.Object)
  id: OnGet(System.Object,System.Object)
  parent: System.Collections.DictionaryBase
  langs:
  - csharp
  - vb
  name: OnGet(Object, Object)
  fullName: System.Collections.DictionaryBase.OnGet(System.Object, System.Object)
  type: Method
  source:
    remote:
      path: src/System.Collections.NonGeneric/src/System/Collections/DictionaryBase.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: OnGet
    path: src/System.Collections.NonGeneric/src/System/Collections/DictionaryBase.cs
    startLine: 175
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  summary: "\n<p>Gets the element with the specified key and value in the <xref href=\"System.Collections.DictionaryBase\" data-throw-if-not-resolved=\"false\"></xref> instance.</p>\n"
  remarks: "\n<p>The default implementation of this method returns <em>currentValue</em>. It is intended to be overridden by a derived class to perform additional action when the specified element is retrieved.</p>\n<p>The On* methods are invoked only on the instance returned by the <xref href=\"System.Collections.DictionaryBase.Dictionary\" data-throw-if-not-resolved=\"false\"></xref> property, but not on the instance returned by the <xref href=\"System.Collections.DictionaryBase.InnerHashtable\" data-throw-if-not-resolved=\"false\"></xref> property.</p>\n<p>The default implementation of this method is an O(1) operation.</p>\n"
  syntax:
    content: protected virtual object OnGet(object key, object currentValue)
    content.vb: Protected Overridable Function OnGet(key As Object, currentValue As Object) As Object
    parameters:
    - id: key
      type: System.Object
    - id: currentValue
      type: System.Object
    return:
      type: System.Object
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: System.Collections.DictionaryBase.OnInsert(System.Object,System.Object)
  commentId: M:System.Collections.DictionaryBase.OnInsert(System.Object,System.Object)
  id: OnInsert(System.Object,System.Object)
  parent: System.Collections.DictionaryBase
  langs:
  - csharp
  - vb
  name: OnInsert(Object, Object)
  fullName: System.Collections.DictionaryBase.OnInsert(System.Object, System.Object)
  type: Method
  source:
    remote:
      path: src/System.Collections.NonGeneric/src/System/Collections/DictionaryBase.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: OnInsert
    path: src/System.Collections.NonGeneric/src/System/Collections/DictionaryBase.cs
    startLine: 184
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  summary: "\n<p>Performs additional custom processes before inserting a new element into the <xref href=\"System.Collections.DictionaryBase\" data-throw-if-not-resolved=\"false\"></xref> instance.</p>\n"
  remarks: "\n<p>The default implementation of this method is intended to be overridden by a derived class to perform some action before the specified element is inserted.</p>\n<p>The On* methods are invoked only on the instance returned by the <xref href=\"System.Collections.DictionaryBase.Dictionary\" data-throw-if-not-resolved=\"false\"></xref> property, but not on the instance returned by the <xref href=\"System.Collections.DictionaryBase.InnerHashtable\" data-throw-if-not-resolved=\"false\"></xref> property.</p>\n<p>The default implementation of this method is an O(1) operation.</p>\n"
  example:
  - "\n<p>The following code example implements the <xref href=\"System.Collections.DictionaryBase\" data-throw-if-not-resolved=\"false\"></xref> class and uses that implementation to create a dictionary of <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref> keys and values that have a <xref href=\"System.String.Length\" data-throw-if-not-resolved=\"false\"></xref> of 5 characters or less.</p>System.Collections.DictionaryBase#1"
  syntax:
    content: protected virtual void OnInsert(object key, object value)
    content.vb: Protected Overridable Sub OnInsert(key As Object, value As Object)
    parameters:
    - id: key
      type: System.Object
    - id: value
      type: System.Object
  seealso:
  - type: System.Collections.DictionaryBase.OnInsertComplete(System.Object,System.Object)
    commentId: M:System.Collections.DictionaryBase.OnInsertComplete(System.Object,System.Object)
  - type: System.Collections.DictionaryBase.OnSet(System.Object,System.Object,System.Object)
    commentId: M:System.Collections.DictionaryBase.OnSet(System.Object,System.Object,System.Object)
  - type: System.Collections.DictionaryBase.OnValidate(System.Object,System.Object)
    commentId: M:System.Collections.DictionaryBase.OnValidate(System.Object,System.Object)
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: System.Collections.DictionaryBase.OnInsertComplete(System.Object,System.Object)
  commentId: M:System.Collections.DictionaryBase.OnInsertComplete(System.Object,System.Object)
  id: OnInsertComplete(System.Object,System.Object)
  parent: System.Collections.DictionaryBase
  langs:
  - csharp
  - vb
  name: OnInsertComplete(Object, Object)
  fullName: System.Collections.DictionaryBase.OnInsertComplete(System.Object, System.Object)
  type: Method
  source:
    remote:
      path: src/System.Collections.NonGeneric/src/System/Collections/DictionaryBase.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: OnInsertComplete
    path: src/System.Collections.NonGeneric/src/System/Collections/DictionaryBase.cs
    startLine: 204
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  summary: "\n<p>Performs additional custom processes after inserting a new element into the <xref href=\"System.Collections.DictionaryBase\" data-throw-if-not-resolved=\"false\"></xref> instance.</p>\n"
  remarks: "\n<p>The default implementation of this method is intended to be overridden by a derived class to perform some action after the specified element is inserted.</p>\n<p>The On* methods are invoked only on the instance returned by the <xref href=\"System.Collections.DictionaryBase.Dictionary\" data-throw-if-not-resolved=\"false\"></xref> property, but not on the instance returned by the <xref href=\"System.Collections.DictionaryBase.InnerHashtable\" data-throw-if-not-resolved=\"false\"></xref> property.</p>\n<p>The default implementation of this method is an O(1) operation.</p>\n"
  syntax:
    content: protected virtual void OnInsertComplete(object key, object value)
    content.vb: Protected Overridable Sub OnInsertComplete(key As Object, value As Object)
    parameters:
    - id: key
      type: System.Object
    - id: value
      type: System.Object
  seealso:
  - type: System.Collections.DictionaryBase.OnInsert(System.Object,System.Object)
    commentId: M:System.Collections.DictionaryBase.OnInsert(System.Object,System.Object)
  - type: System.Collections.DictionaryBase.OnSetComplete(System.Object,System.Object,System.Object)
    commentId: M:System.Collections.DictionaryBase.OnSetComplete(System.Object,System.Object,System.Object)
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: System.Collections.DictionaryBase.OnRemove(System.Object,System.Object)
  commentId: M:System.Collections.DictionaryBase.OnRemove(System.Object,System.Object)
  id: OnRemove(System.Object,System.Object)
  parent: System.Collections.DictionaryBase
  langs:
  - csharp
  - vb
  name: OnRemove(Object, Object)
  fullName: System.Collections.DictionaryBase.OnRemove(System.Object, System.Object)
  type: Method
  source:
    remote:
      path: src/System.Collections.NonGeneric/src/System/Collections/DictionaryBase.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: OnRemove
    path: src/System.Collections.NonGeneric/src/System/Collections/DictionaryBase.cs
    startLine: 192
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  summary: "\n<p>Performs additional custom processes before removing an element from the <xref href=\"System.Collections.DictionaryBase\" data-throw-if-not-resolved=\"false\"></xref> instance.</p>\n"
  remarks: "\n<p>The default implementation of this method is intended to be overridden by a derived class to perform some action before the specified element is removed.</p>\n<p>The On* methods are invoked only on the instance returned by the <xref href=\"System.Collections.DictionaryBase.Dictionary\" data-throw-if-not-resolved=\"false\"></xref> property, but not on the instance returned by the <xref href=\"System.Collections.DictionaryBase.InnerHashtable\" data-throw-if-not-resolved=\"false\"></xref> property.</p>\n<p>The default implementation of this method is an O(1) operation.</p>\n"
  example:
  - "\n<p>The following code example implements the <xref href=\"System.Collections.DictionaryBase\" data-throw-if-not-resolved=\"false\"></xref> class and uses that implementation to create a dictionary of <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref> keys and values that have a <xref href=\"System.String.Length\" data-throw-if-not-resolved=\"false\"></xref> of 5 characters or less.</p>System.Collections.DictionaryBase#1"
  syntax:
    content: protected virtual void OnRemove(object key, object value)
    content.vb: Protected Overridable Sub OnRemove(key As Object, value As Object)
    parameters:
    - id: key
      type: System.Object
    - id: value
      type: System.Object
  seealso:
  - type: System.Collections.DictionaryBase.OnRemoveComplete(System.Object,System.Object)
    commentId: M:System.Collections.DictionaryBase.OnRemoveComplete(System.Object,System.Object)
  - type: System.Collections.DictionaryBase.OnClear
    commentId: M:System.Collections.DictionaryBase.OnClear
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: System.Collections.DictionaryBase.OnRemoveComplete(System.Object,System.Object)
  commentId: M:System.Collections.DictionaryBase.OnRemoveComplete(System.Object,System.Object)
  id: OnRemoveComplete(System.Object,System.Object)
  parent: System.Collections.DictionaryBase
  langs:
  - csharp
  - vb
  name: OnRemoveComplete(Object, Object)
  fullName: System.Collections.DictionaryBase.OnRemoveComplete(System.Object, System.Object)
  type: Method
  source:
    remote:
      path: src/System.Collections.NonGeneric/src/System/Collections/DictionaryBase.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: OnRemoveComplete
    path: src/System.Collections.NonGeneric/src/System/Collections/DictionaryBase.cs
    startLine: 212
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  summary: "\n<p>Performs additional custom processes after removing an element from the <xref href=\"System.Collections.DictionaryBase\" data-throw-if-not-resolved=\"false\"></xref> instance.</p>\n"
  remarks: "\n<p>The default implementation of this method is intended to be overridden by a derived class to perform some action after the specified element is removed.</p>\n<p>The On* methods are invoked only on the instance returned by the <xref href=\"System.Collections.DictionaryBase.Dictionary\" data-throw-if-not-resolved=\"false\"></xref> property, but not on the instance returned by the <xref href=\"System.Collections.DictionaryBase.InnerHashtable\" data-throw-if-not-resolved=\"false\"></xref> property.</p>\n<p>The default implementation of this method is an O(1) operation.</p>\n"
  syntax:
    content: protected virtual void OnRemoveComplete(object key, object value)
    content.vb: Protected Overridable Sub OnRemoveComplete(key As Object, value As Object)
    parameters:
    - id: key
      type: System.Object
    - id: value
      type: System.Object
  seealso:
  - type: System.Collections.DictionaryBase.OnRemove(System.Object,System.Object)
    commentId: M:System.Collections.DictionaryBase.OnRemove(System.Object,System.Object)
  - type: System.Collections.DictionaryBase.OnClearComplete
    commentId: M:System.Collections.DictionaryBase.OnClearComplete
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: System.Collections.DictionaryBase.OnSet(System.Object,System.Object,System.Object)
  commentId: M:System.Collections.DictionaryBase.OnSet(System.Object,System.Object,System.Object)
  id: OnSet(System.Object,System.Object,System.Object)
  parent: System.Collections.DictionaryBase
  langs:
  - csharp
  - vb
  name: OnSet(Object, Object, Object)
  fullName: System.Collections.DictionaryBase.OnSet(System.Object, System.Object, System.Object)
  type: Method
  source:
    remote:
      path: src/System.Collections.NonGeneric/src/System/Collections/DictionaryBase.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: OnSet
    path: src/System.Collections.NonGeneric/src/System/Collections/DictionaryBase.cs
    startLine: 180
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  summary: "\n<p>Performs additional custom processes before setting a value in the <xref href=\"System.Collections.DictionaryBase\" data-throw-if-not-resolved=\"false\"></xref> instance.</p>\n"
  remarks: "\n<p>The default implementation of this method is intended to be overridden by a derived class to perform some action before the specified element is set.</p>\n<p>The On* methods are invoked only on the instance returned by the <xref href=\"System.Collections.DictionaryBase.Dictionary\" data-throw-if-not-resolved=\"false\"></xref> property, but not on the instance returned by the <xref href=\"System.Collections.DictionaryBase.InnerHashtable\" data-throw-if-not-resolved=\"false\"></xref> property.</p>\n<p>The default implementation of this method is an O(1) operation.</p>\n"
  example:
  - "\n<p>The following code example implements the <xref href=\"System.Collections.DictionaryBase\" data-throw-if-not-resolved=\"false\"></xref> class and uses that implementation to create a dictionary of <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref> keys and values that have a <xref href=\"System.String.Length\" data-throw-if-not-resolved=\"false\"></xref> of 5 characters or less.</p>System.Collections.DictionaryBase#1"
  syntax:
    content: protected virtual void OnSet(object key, object oldValue, object newValue)
    content.vb: Protected Overridable Sub OnSet(key As Object, oldValue As Object, newValue As Object)
    parameters:
    - id: key
      type: System.Object
    - id: oldValue
      type: System.Object
    - id: newValue
      type: System.Object
  seealso:
  - type: System.Collections.DictionaryBase.OnSetComplete(System.Object,System.Object,System.Object)
    commentId: M:System.Collections.DictionaryBase.OnSetComplete(System.Object,System.Object,System.Object)
  - type: System.Collections.DictionaryBase.OnInsert(System.Object,System.Object)
    commentId: M:System.Collections.DictionaryBase.OnInsert(System.Object,System.Object)
  - type: System.Collections.DictionaryBase.OnValidate(System.Object,System.Object)
    commentId: M:System.Collections.DictionaryBase.OnValidate(System.Object,System.Object)
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: System.Collections.DictionaryBase.OnSetComplete(System.Object,System.Object,System.Object)
  commentId: M:System.Collections.DictionaryBase.OnSetComplete(System.Object,System.Object,System.Object)
  id: OnSetComplete(System.Object,System.Object,System.Object)
  parent: System.Collections.DictionaryBase
  langs:
  - csharp
  - vb
  name: OnSetComplete(Object, Object, Object)
  fullName: System.Collections.DictionaryBase.OnSetComplete(System.Object, System.Object, System.Object)
  type: Method
  source:
    remote:
      path: src/System.Collections.NonGeneric/src/System/Collections/DictionaryBase.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: OnSetComplete
    path: src/System.Collections.NonGeneric/src/System/Collections/DictionaryBase.cs
    startLine: 200
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  summary: "\n<p>Performs additional custom processes after setting a value in the <xref href=\"System.Collections.DictionaryBase\" data-throw-if-not-resolved=\"false\"></xref> instance.</p>\n"
  remarks: "\n<p>The default implementation of this method is intended to be overridden by a derived class to perform some action after the specified element is set.</p>\n<p>The On* methods are invoked only on the instance returned by the <xref href=\"System.Collections.DictionaryBase.Dictionary\" data-throw-if-not-resolved=\"false\"></xref> property, but not on the instance returned by the <xref href=\"System.Collections.DictionaryBase.InnerHashtable\" data-throw-if-not-resolved=\"false\"></xref> property.</p>\n<p>The default implementation of this method is an O(1) operation.</p>\n"
  syntax:
    content: protected virtual void OnSetComplete(object key, object oldValue, object newValue)
    content.vb: Protected Overridable Sub OnSetComplete(key As Object, oldValue As Object, newValue As Object)
    parameters:
    - id: key
      type: System.Object
    - id: oldValue
      type: System.Object
    - id: newValue
      type: System.Object
  seealso:
  - type: System.Collections.DictionaryBase.OnSet(System.Object,System.Object,System.Object)
    commentId: M:System.Collections.DictionaryBase.OnSet(System.Object,System.Object,System.Object)
  - type: System.Collections.DictionaryBase.OnInsertComplete(System.Object,System.Object)
    commentId: M:System.Collections.DictionaryBase.OnInsertComplete(System.Object,System.Object)
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: System.Collections.DictionaryBase.OnValidate(System.Object,System.Object)
  commentId: M:System.Collections.DictionaryBase.OnValidate(System.Object,System.Object)
  id: OnValidate(System.Object,System.Object)
  parent: System.Collections.DictionaryBase
  langs:
  - csharp
  - vb
  name: OnValidate(Object, Object)
  fullName: System.Collections.DictionaryBase.OnValidate(System.Object, System.Object)
  type: Method
  source:
    remote:
      path: src/System.Collections.NonGeneric/src/System/Collections/DictionaryBase.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: OnValidate
    path: src/System.Collections.NonGeneric/src/System/Collections/DictionaryBase.cs
    startLine: 196
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  summary: "\n<p>Performs additional custom processes when validating the element with the specified key and value.</p>\n"
  remarks: "\n<p>The default implementation of this method is intended to be overridden by a derived class to perform some action when the specified element is validated.</p>\n<p>The On* methods are invoked only on the instance returned by the <xref href=\"System.Collections.DictionaryBase.Dictionary\" data-throw-if-not-resolved=\"false\"></xref> property, but not on the instance returned by the <xref href=\"System.Collections.DictionaryBase.InnerHashtable\" data-throw-if-not-resolved=\"false\"></xref> property.</p>\n<p>The default implementation of this method is an O(1) operation.</p>\n"
  example:
  - "\n<p>The following code example implements the <xref href=\"System.Collections.DictionaryBase\" data-throw-if-not-resolved=\"false\"></xref> class and uses that implementation to create a dictionary of <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref> keys and values that have a <xref href=\"System.String.Length\" data-throw-if-not-resolved=\"false\"></xref> of 5 characters or less.</p>System.Collections.DictionaryBase#1"
  syntax:
    content: protected virtual void OnValidate(object key, object value)
    content.vb: Protected Overridable Sub OnValidate(key As Object, value As Object)
    parameters:
    - id: key
      type: System.Object
    - id: value
      type: System.Object
  seealso:
  - type: System.Collections.DictionaryBase.OnSet(System.Object,System.Object,System.Object)
    commentId: M:System.Collections.DictionaryBase.OnSet(System.Object,System.Object,System.Object)
  - type: System.Collections.DictionaryBase.OnInsert(System.Object,System.Object)
    commentId: M:System.Collections.DictionaryBase.OnInsert(System.Object,System.Object)
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
references:
- uid: System.Collections
  isExternal: false
  name: System.Collections
  fullName: System.Collections
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System.Collections.IDictionary
  parent: System.Collections
  isExternal: false
  name: IDictionary
  fullName: System.Collections.IDictionary
- uid: System.Collections.IEnumerable
  parent: System.Collections
  isExternal: false
  name: Collections.IEnumerable
  fullName: System.Collections.IEnumerable
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  fullName: System.Int32
- uid: System.Collections.Hashtable
  parent: System.Collections
  isExternal: false
  name: Collections.Hashtable
  fullName: System.Collections.Hashtable
- uid: System.Array
  parent: System
  isExternal: false
  name: Array
  fullName: System.Array
- uid: System.Collections.IDictionaryEnumerator
  parent: System.Collections
  isExternal: false
  name: Collections.IDictionaryEnumerator
  fullName: System.Collections.IDictionaryEnumerator
- uid: System.ArgumentNullException
  isExternal: false
  name: ArgumentNullException
  fullName: System.ArgumentNullException
- uid: System.ArgumentOutOfRangeException
  isExternal: false
  name: ArgumentOutOfRangeException
  fullName: System.ArgumentOutOfRangeException
- uid: System.ArgumentException
  parent: System
  isExternal: false
  name: ArgumentException
  fullName: System.ArgumentException
- uid: System.InvalidCastException
  isExternal: false
  name: InvalidCastException
  fullName: System.InvalidCastException
