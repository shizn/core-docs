items:
- uid: System.Net.Http.Headers.NameValueWithParametersHeaderValue
  commentId: T:System.Net.Http.Headers.NameValueWithParametersHeaderValue
  id: NameValueWithParametersHeaderValue
  parent: System.Net.Http.Headers
  children:
  - System.Net.Http.Headers.NameValueWithParametersHeaderValue.#ctor(System.Net.Http.Headers.NameValueWithParametersHeaderValue)
  - System.Net.Http.Headers.NameValueWithParametersHeaderValue.#ctor(System.String)
  - System.Net.Http.Headers.NameValueWithParametersHeaderValue.#ctor(System.String,System.String)
  - System.Net.Http.Headers.NameValueWithParametersHeaderValue.Equals(System.Object)
  - System.Net.Http.Headers.NameValueWithParametersHeaderValue.GetHashCode
  - System.Net.Http.Headers.NameValueWithParametersHeaderValue.Parameters
  - System.Net.Http.Headers.NameValueWithParametersHeaderValue.Parse(System.String)
  - System.Net.Http.Headers.NameValueWithParametersHeaderValue.ToString
  - System.Net.Http.Headers.NameValueWithParametersHeaderValue.TryParse(System.String,System.Net.Http.Headers.NameValueWithParametersHeaderValue@)
  langs:
  - csharp
  - vb
  name: NameValueWithParametersHeaderValue
  fullName: System.Net.Http.Headers.NameValueWithParametersHeaderValue
  type: Class
  source:
    remote:
      path: src/System.Net.Http/ref/System.Net.Http.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: NameValueWithParametersHeaderValue
    path: src/System.Net.Http/ref/System.Net.Http.cs
    startLine: 470
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: "\n<p>Represents a name/value pair with parameters used in various headers as defined in RFC 2616.</p>\n"
  remarks: "\n<p>The <xref href=\"System.Net.Http.Headers.NameValueWithParametersHeaderValue\" data-throw-if-not-resolved=\"false\"></xref> class provides support for a name/value pair with parameters used in various headers  as defined in <see href=\"http://go.microsoft.com/fwlink/?LinkID=241642\">RFC 2616</see> by the IETF.</p>\n"
  syntax:
    content: 'public class NameValueWithParametersHeaderValue : NameValueHeaderValue'
    content.vb: >-
      Public Class NameValueWithParametersHeaderValue
          Inherits NameValueHeaderValue
  inheritance:
  - System.Object
  - System.Net.Http.Headers.NameValueHeaderValue
  inheritedMembers:
  - System.Net.Http.Headers.NameValueHeaderValue.Name
  - System.Net.Http.Headers.NameValueHeaderValue.Value
  - System.Net.Http.Headers.NameValueHeaderValue.TryParse(System.String,System.Net.Http.Headers.NameValueHeaderValue@)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: System.Net.Http.Headers.NameValueWithParametersHeaderValue.#ctor(System.Net.Http.Headers.NameValueWithParametersHeaderValue)
  commentId: M:System.Net.Http.Headers.NameValueWithParametersHeaderValue.#ctor(System.Net.Http.Headers.NameValueWithParametersHeaderValue)
  id: '#ctor(System.Net.Http.Headers.NameValueWithParametersHeaderValue)'
  parent: System.Net.Http.Headers.NameValueWithParametersHeaderValue
  langs:
  - csharp
  - vb
  name: NameValueWithParametersHeaderValue(NameValueWithParametersHeaderValue)
  fullName: System.Net.Http.Headers.NameValueWithParametersHeaderValue.NameValueWithParametersHeaderValue(System.Net.Http.Headers.NameValueWithParametersHeaderValue)
  type: Constructor
  source:
    remote:
      path: src/System.Net.Http/ref/System.Net.Http.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Net.Http/ref/System.Net.Http.cs
    startLine: 472
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Net.Http.Headers.NameValueWithParametersHeaderValue\" data-throw-if-not-resolved=\"false\"></xref> class.</p>\n"
  syntax:
    content: protected NameValueWithParametersHeaderValue(NameValueWithParametersHeaderValue source)
    content.vb: Protected Sub New(source As NameValueWithParametersHeaderValue)
    parameters:
    - id: source
      type: System.Net.Http.Headers.NameValueWithParametersHeaderValue
      description: "\n<p>A <xref href=\"System.Net.Http.Headers.NameValueWithParametersHeaderValue\" data-throw-if-not-resolved=\"false\"></xref> object used to initialize the new instance.</p>\n"
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: System.Net.Http.Headers.NameValueWithParametersHeaderValue.#ctor(System.String)
  commentId: M:System.Net.Http.Headers.NameValueWithParametersHeaderValue.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Net.Http.Headers.NameValueWithParametersHeaderValue
  langs:
  - csharp
  - vb
  name: NameValueWithParametersHeaderValue(String)
  fullName: System.Net.Http.Headers.NameValueWithParametersHeaderValue.NameValueWithParametersHeaderValue(System.String)
  type: Constructor
  source:
    remote:
      path: src/System.Net.Http/ref/System.Net.Http.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Net.Http/ref/System.Net.Http.cs
    startLine: 473
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Net.Http.Headers.NameValueWithParametersHeaderValue\" data-throw-if-not-resolved=\"false\"></xref> class.</p>\n"
  syntax:
    content: public NameValueWithParametersHeaderValue(string name)
    content.vb: Public Sub New(name As String)
    parameters:
    - id: name
      type: System.String
      description: "\n<p>The header name.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Net.Http.Headers.NameValueWithParametersHeaderValue.#ctor(System.String,System.String)
  commentId: M:System.Net.Http.Headers.NameValueWithParametersHeaderValue.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: System.Net.Http.Headers.NameValueWithParametersHeaderValue
  langs:
  - csharp
  - vb
  name: NameValueWithParametersHeaderValue(String, String)
  fullName: System.Net.Http.Headers.NameValueWithParametersHeaderValue.NameValueWithParametersHeaderValue(System.String, System.String)
  type: Constructor
  source:
    remote:
      path: src/System.Net.Http/ref/System.Net.Http.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Net.Http/ref/System.Net.Http.cs
    startLine: 474
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Net.Http.Headers.NameValueWithParametersHeaderValue\" data-throw-if-not-resolved=\"false\"></xref> class.</p>\n"
  syntax:
    content: public NameValueWithParametersHeaderValue(string name, string value)
    content.vb: Public Sub New(name As String, value As String)
    parameters:
    - id: name
      type: System.String
      description: "\n<p>The header name.</p>\n"
    - id: value
      type: System.String
      description: "\n<p>The header value.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Net.Http.Headers.NameValueWithParametersHeaderValue.Parameters
  commentId: P:System.Net.Http.Headers.NameValueWithParametersHeaderValue.Parameters
  id: Parameters
  parent: System.Net.Http.Headers.NameValueWithParametersHeaderValue
  langs:
  - csharp
  - vb
  name: Parameters
  fullName: System.Net.Http.Headers.NameValueWithParametersHeaderValue.Parameters
  type: Property
  source:
    remote:
      path: src/System.Net.Http/ref/System.Net.Http.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Parameters
    path: src/System.Net.Http/ref/System.Net.Http.cs
    startLine: 475
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: "\n<p>Gets the parameters from the <xref href=\"System.Net.Http.Headers.NameValueWithParametersHeaderValue\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  syntax:
    content: public ICollection<NameValueHeaderValue> Parameters { get; }
    content.vb: Public ReadOnly Property Parameters As ICollection(Of NameValueHeaderValue)
    parameters: []
    return:
      type: System.Collections.Generic.ICollection{System.Net.Http.Headers.NameValueHeaderValue}
      description: "\n<p>Returns <xref href=\"System.Collections.Generic.ICollection`1\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>A collection containing the parameters.</p>\n"
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Net.Http.Headers.NameValueWithParametersHeaderValue.Equals(System.Object)
  commentId: M:System.Net.Http.Headers.NameValueWithParametersHeaderValue.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Net.Http.Headers.NameValueWithParametersHeaderValue
  langs:
  - csharp
  - vb
  name: Equals(Object)
  fullName: System.Net.Http.Headers.NameValueWithParametersHeaderValue.Equals(System.Object)
  type: Method
  source:
    remote:
      path: src/System.Net.Http/ref/System.Net.Http.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Equals
    path: src/System.Net.Http/ref/System.Net.Http.cs
    startLine: 476
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: "\n<p>Determines whether the specified <xref href=\"System.Object\" data-throw-if-not-resolved=\"false\"></xref> is equal to the current <xref href=\"System.Net.Http.Headers.NameValueWithParametersHeaderValue\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  syntax:
    content: public override bool Equals(object obj)
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
    parameters:
    - id: obj
      type: System.Object
      description: "\n<p>The object to compare with the current object.</p>\n"
    return:
      type: System.Boolean
      description: "\n<p>Returns <xref href=\"System.Boolean\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>\n<strong>true</strong> if the specified <xref href=\"System.Object\" data-throw-if-not-resolved=\"false\"></xref> is equal to the current object; otherwise, <strong>false</strong>.</p>\n"
  overridden: System.Net.Http.Headers.NameValueHeaderValue.Equals(System.Object)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Net.Http.Headers.NameValueWithParametersHeaderValue.GetHashCode
  commentId: M:System.Net.Http.Headers.NameValueWithParametersHeaderValue.GetHashCode
  id: GetHashCode
  parent: System.Net.Http.Headers.NameValueWithParametersHeaderValue
  langs:
  - csharp
  - vb
  name: GetHashCode()
  fullName: System.Net.Http.Headers.NameValueWithParametersHeaderValue.GetHashCode()
  type: Method
  source:
    remote:
      path: src/System.Net.Http/ref/System.Net.Http.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetHashCode
    path: src/System.Net.Http/ref/System.Net.Http.cs
    startLine: 477
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: "\n<p>Serves as a hash function for an <xref href=\"System.Net.Http.Headers.NameValueWithParametersHeaderValue\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  remarks: "\n<p>A hash code is a numeric value that is used to identify an object during equality testing. It can also serve as an index for an object in a collection.</p>\n<p>The <xref href=\"System.Net.Http.Headers.NameValueWithParametersHeaderValue.GetHashCode\" data-throw-if-not-resolved=\"false\"></xref> method is suitable for use in hashing algorithms and data structures such as a hash table.</p>\n"
  syntax:
    content: public override int GetHashCode()
    content.vb: Public Overrides Function GetHashCode As Integer
    return:
      type: System.Int32
      description: "\n<p>Returns <xref href=\"System.Int32\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>A hash code for the current object.</p>\n"
  overridden: System.Net.Http.Headers.NameValueHeaderValue.GetHashCode
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Net.Http.Headers.NameValueWithParametersHeaderValue.Parse(System.String)
  commentId: M:System.Net.Http.Headers.NameValueWithParametersHeaderValue.Parse(System.String)
  id: Parse(System.String)
  parent: System.Net.Http.Headers.NameValueWithParametersHeaderValue
  langs:
  - csharp
  - vb
  name: Parse(String)
  fullName: System.Net.Http.Headers.NameValueWithParametersHeaderValue.Parse(System.String)
  type: Method
  source:
    remote:
      path: src/System.Net.Http/ref/System.Net.Http.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Parse
    path: src/System.Net.Http/ref/System.Net.Http.cs
    startLine: 478
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: "\n<p>Converts a string to an <xref href=\"System.Net.Http.Headers.NameValueWithParametersHeaderValue\" data-throw-if-not-resolved=\"false\"></xref> instance.</p>\n"
  syntax:
    content: public static NameValueWithParametersHeaderValue Parse(string input)
    content.vb: Public Shared Function Parse(input As String) As NameValueWithParametersHeaderValue
    parameters:
    - id: input
      type: System.String
      description: "\n<p>A string that represents name value with parameter header value information.</p>\n"
    return:
      type: System.Net.Http.Headers.NameValueWithParametersHeaderValue
      description: "\n<p>Returns <xref href=\"System.Net.Http.Headers.NameValueWithParametersHeaderValue\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>An <xref href=\"System.Net.Http.Headers.NameValueWithParametersHeaderValue\" data-throw-if-not-resolved=\"false\"></xref> instance.</p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>input</em> is a <strong>null</strong> reference.</p>\n"
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "\n<p>\n<em>input</em> is not valid name value with parameter header value information.</p>\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Net.Http.Headers.NameValueWithParametersHeaderValue.ToString
  commentId: M:System.Net.Http.Headers.NameValueWithParametersHeaderValue.ToString
  id: ToString
  parent: System.Net.Http.Headers.NameValueWithParametersHeaderValue
  langs:
  - csharp
  - vb
  name: ToString()
  fullName: System.Net.Http.Headers.NameValueWithParametersHeaderValue.ToString()
  type: Method
  source:
    remote:
      path: src/System.Net.Http/ref/System.Net.Http.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ToString
    path: src/System.Net.Http/ref/System.Net.Http.cs
    startLine: 479
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: "\n<p>Returns a string that represents the current <xref href=\"System.Net.Http.Headers.NameValueWithParametersHeaderValue\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  syntax:
    content: public override string ToString()
    content.vb: Public Overrides Function ToString As String
    return:
      type: System.String
      description: "\n<p>Returns <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>A string that represents the current object.</p>\n"
  overridden: System.Net.Http.Headers.NameValueHeaderValue.ToString
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Net.Http.Headers.NameValueWithParametersHeaderValue.TryParse(System.String,System.Net.Http.Headers.NameValueWithParametersHeaderValue@)
  commentId: M:System.Net.Http.Headers.NameValueWithParametersHeaderValue.TryParse(System.String,System.Net.Http.Headers.NameValueWithParametersHeaderValue@)
  id: TryParse(System.String,System.Net.Http.Headers.NameValueWithParametersHeaderValue@)
  parent: System.Net.Http.Headers.NameValueWithParametersHeaderValue
  langs:
  - csharp
  - vb
  name: TryParse(String, out NameValueWithParametersHeaderValue)
  fullName: System.Net.Http.Headers.NameValueWithParametersHeaderValue.TryParse(System.String, out System.Net.Http.Headers.NameValueWithParametersHeaderValue)
  type: Method
  source:
    remote:
      path: src/System.Net.Http/ref/System.Net.Http.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: TryParse
    path: src/System.Net.Http/ref/System.Net.Http.cs
    startLine: 480
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: "\n<p>Determines whether a string is valid <xref href=\"System.Net.Http.Headers.NameValueWithParametersHeaderValue\" data-throw-if-not-resolved=\"false\"></xref> information.</p>\n"
  syntax:
    content: public static bool TryParse(string input, out NameValueWithParametersHeaderValue parsedValue)
    content.vb: Public Shared Function TryParse(input As String, ByRef parsedValue As NameValueWithParametersHeaderValue) As Boolean
    parameters:
    - id: input
      type: System.String
      description: "\n<p>The string to validate.</p>\n"
    - id: parsedValue
      type: System.Net.Http.Headers.NameValueWithParametersHeaderValue
      description: "\n<p>The <xref href=\"System.Net.Http.Headers.NameValueWithParametersHeaderValue\" data-throw-if-not-resolved=\"false\"></xref> version of the string.</p>\n"
    return:
      type: System.Boolean
      description: "\n<p>Returns <xref href=\"System.Boolean\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>\n<strong>true</strong> if <em>input</em> is valid <xref href=\"System.Net.Http.Headers.NameValueWithParametersHeaderValue\" data-throw-if-not-resolved=\"false\"></xref> information; otherwise, <strong>false</strong>.</p>\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Net.Http.Headers.NameValueWithParametersHeaderValue.TryParse(System.String, ByRef System.Net.Http.Headers.NameValueWithParametersHeaderValue)
  name.vb: TryParse(String, ByRef NameValueWithParametersHeaderValue)
references:
- uid: System.Net.Http.Headers
  isExternal: false
  name: System.Net.Http.Headers
  fullName: System.Net.Http.Headers
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System.Net.Http.Headers.NameValueHeaderValue
  parent: System.Net.Http.Headers
  isExternal: false
  name: NameValueHeaderValue
  fullName: System.Net.Http.Headers.NameValueHeaderValue
- uid: System.Net.Http.Headers.NameValueHeaderValue.Name
  parent: System.Net.Http.Headers.NameValueHeaderValue
  isExternal: false
  name: Name
  fullName: System.Net.Http.Headers.NameValueHeaderValue.Name
- uid: System.Net.Http.Headers.NameValueHeaderValue.Value
  parent: System.Net.Http.Headers.NameValueHeaderValue
  isExternal: false
  name: Value
  fullName: System.Net.Http.Headers.NameValueHeaderValue.Value
- uid: System.Net.Http.Headers.NameValueHeaderValue.TryParse(System.String,System.Net.Http.Headers.NameValueHeaderValue@)
  parent: System.Net.Http.Headers.NameValueHeaderValue
  isExternal: true
  name: TryParse(String, NameValueHeaderValue)
  fullName: System.Net.Http.Headers.NameValueHeaderValue.TryParse(System.String, System.Net.Http.Headers.NameValueHeaderValue)
  spec.csharp:
  - uid: System.Net.Http.Headers.NameValueHeaderValue.TryParse(System.String,System.Net.Http.Headers.NameValueHeaderValue@)
    name: TryParse
    fullName: System.Net.Http.Headers.NameValueHeaderValue.TryParse
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Net.Http.Headers.NameValueHeaderValue
    name: NameValueHeaderValue
    fullName: System.Net.Http.Headers.NameValueHeaderValue
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Net.Http.Headers.NameValueHeaderValue.TryParse(System.String,System.Net.Http.Headers.NameValueHeaderValue@)
    name: TryParse
    fullName: System.Net.Http.Headers.NameValueHeaderValue.TryParse
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Net.Http.Headers.NameValueHeaderValue
    name: NameValueHeaderValue
    fullName: System.Net.Http.Headers.NameValueHeaderValue
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Net.Http.Headers.NameValueWithParametersHeaderValue
  parent: System.Net.Http.Headers
  isExternal: false
  name: NameValueWithParametersHeaderValue
  fullName: System.Net.Http.Headers.NameValueWithParametersHeaderValue
- uid: System.String
  parent: System
  isExternal: false
  name: String
  fullName: System.String
- uid: System.Collections.Generic.ICollection{System.Net.Http.Headers.NameValueHeaderValue}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  name: ICollection<NameValueHeaderValue>
  fullName: System.Collections.Generic.ICollection<System.Net.Http.Headers.NameValueHeaderValue>
  fullname.vb: System.Collections.Generic.ICollection(Of System.Net.Http.Headers.NameValueHeaderValue)
  name.vb: ICollection(Of NameValueHeaderValue)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Net.Http.Headers.NameValueHeaderValue
    name: NameValueHeaderValue
    fullName: System.Net.Http.Headers.NameValueHeaderValue
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Net.Http.Headers.NameValueHeaderValue
    name: NameValueHeaderValue
    fullName: System.Net.Http.Headers.NameValueHeaderValue
  - name: )
    fullName: )
- uid: System.Collections.Generic.ICollection`1
  parent: System.Collections.Generic
  isExternal: false
  name: ICollection<T>
  fullName: System.Collections.Generic.ICollection<T>
  fullname.vb: System.Collections.Generic.ICollection(Of T)
  name.vb: ICollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    fullName: System.Collections.Generic.ICollection
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    fullName: System.Collections.Generic.ICollection
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Net.Http.Headers.NameValueHeaderValue.Equals(System.Object)
  parent: System.Net.Http.Headers.NameValueHeaderValue
  isExternal: true
  name: Equals(Object)
  fullName: System.Net.Http.Headers.NameValueHeaderValue.Equals(System.Object)
  spec.csharp:
  - uid: System.Net.Http.Headers.NameValueHeaderValue.Equals(System.Object)
    name: Equals
    fullName: System.Net.Http.Headers.NameValueHeaderValue.Equals
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Net.Http.Headers.NameValueHeaderValue.Equals(System.Object)
    name: Equals
    fullName: System.Net.Http.Headers.NameValueHeaderValue.Equals
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  fullName: System.Boolean
- uid: System.Net.Http.Headers.NameValueHeaderValue.GetHashCode
  parent: System.Net.Http.Headers.NameValueHeaderValue
  isExternal: false
  name: GetHashCode()
  fullName: System.Net.Http.Headers.NameValueHeaderValue.GetHashCode()
  spec.csharp:
  - uid: System.Net.Http.Headers.NameValueHeaderValue.GetHashCode
    name: GetHashCode
    fullName: System.Net.Http.Headers.NameValueHeaderValue.GetHashCode
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Net.Http.Headers.NameValueHeaderValue.GetHashCode
    name: GetHashCode
    fullName: System.Net.Http.Headers.NameValueHeaderValue.GetHashCode
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  fullName: System.Int32
- uid: System.Net.Http.Headers.NameValueHeaderValue.ToString
  parent: System.Net.Http.Headers.NameValueHeaderValue
  isExternal: false
  name: ToString()
  fullName: System.Net.Http.Headers.NameValueHeaderValue.ToString()
  spec.csharp:
  - uid: System.Net.Http.Headers.NameValueHeaderValue.ToString
    name: ToString
    fullName: System.Net.Http.Headers.NameValueHeaderValue.ToString
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Net.Http.Headers.NameValueHeaderValue.ToString
    name: ToString
    fullName: System.Net.Http.Headers.NameValueHeaderValue.ToString
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.ArgumentNullException
  isExternal: false
  name: ArgumentNullException
  fullName: System.ArgumentNullException
- uid: System.FormatException
  parent: System
  isExternal: false
  name: FormatException
  fullName: System.FormatException
