items:
- uid: System.EventArgs
  commentId: T:System.EventArgs
  id: EventArgs
  parent: System
  children:
  - System.EventArgs.#ctor
  - System.EventArgs.Empty
  langs:
  - csharp
  - vb
  name: EventArgs
  fullName: System.EventArgs
  type: Class
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: EventArgs
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 829
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Represents the base class for classes that contain event data, and provides a value to use for events that do not include event data. </p>\n"
  remarks: "\n<p>This class serves as the base class for all classes that represent event data. For example, the <xref href=\"System.AssemblyLoadEventArgs\" data-throw-if-not-resolved=\"false\"></xref> class derives from <xref href=\"System.EventArgs\" data-throw-if-not-resolved=\"false\"></xref> and is used to hold the data for assembly load events. To create a custom event data class, create a class that derives from the <xref href=\"System.EventArgs\" data-throw-if-not-resolved=\"false\"></xref> class and provide the properties to store the necessary data. The name of your custom event data class should end with <strong>EventArgs</strong>.</p>\n<p>To pass an object that does not contain any data, use the <xref href=\"System.EventArgs.Empty\" data-throw-if-not-resolved=\"false\"></xref> field.</p>\n<p>For more information about events, see the Handling and Raising Events article.</p>\n"
  example:
  - "\n<p>The following example shows a custom event data class named <code>ThresholdReachedEventArgs</code> that derives from the <xref href=\"System.EventArgs\" data-throw-if-not-resolved=\"false\"></xref> class. An instance of the event data class is passed to the event handler for the <code>ThresholdReached</code> event.</p>EventsOverview#6"
  syntax:
    content: public class EventArgs
    content.vb: Public Class EventArgs
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: System.EventArgs.Empty
  commentId: F:System.EventArgs.Empty
  id: Empty
  parent: System.EventArgs
  langs:
  - csharp
  - vb
  name: Empty
  fullName: System.EventArgs.Empty
  type: Field
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Empty
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 831
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Provides a value to use with events that do not have event data.</p>\n"
  remarks: "\n<p>Pass this value to event handlers that are associated with events that do not have data.</p>\n"
  example:
  - "\n<p>The following example shows a simple counting application that raises an event when a threshold is equaled or exceeded. The <xref href=\"System.EventArgs.Empty\" data-throw-if-not-resolved=\"false\"></xref> field is passed to the <code>OnThresholdReached</code> method.</p>EventsOverview#5"
  syntax:
    content: public static readonly EventArgs Empty
    content.vb: Public Shared ReadOnly Empty As EventArgs
    return:
      type: System.EventArgs
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: System.EventArgs.#ctor
  commentId: M:System.EventArgs.#ctor
  id: '#ctor'
  parent: System.EventArgs
  langs:
  - csharp
  - vb
  name: EventArgs()
  fullName: System.EventArgs.EventArgs()
  type: Constructor
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 832
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.EventArgs\" data-throw-if-not-resolved=\"false\"></xref> class.</p>\n"
  remarks: "\n<p>To pass an object that does not contain any data, use the <xref href=\"System.EventArgs.Empty\" data-throw-if-not-resolved=\"false\"></xref> field.</p>\n"
  syntax:
    content: public EventArgs()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: false
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: false
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: false
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
  - name: )
    fullName: )
- uid: System.Object.ToString
  parent: System.Object
  isExternal: false
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.EventArgs
  parent: System
  isExternal: false
  name: EventArgs
  fullName: System.EventArgs
