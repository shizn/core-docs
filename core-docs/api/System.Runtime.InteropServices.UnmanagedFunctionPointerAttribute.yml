items:
- uid: System.Runtime.InteropServices.UnmanagedFunctionPointerAttribute
  commentId: T:System.Runtime.InteropServices.UnmanagedFunctionPointerAttribute
  id: UnmanagedFunctionPointerAttribute
  parent: System.Runtime.InteropServices
  children:
  - System.Runtime.InteropServices.UnmanagedFunctionPointerAttribute.#ctor(System.Runtime.InteropServices.CallingConvention)
  - System.Runtime.InteropServices.UnmanagedFunctionPointerAttribute.BestFitMapping
  - System.Runtime.InteropServices.UnmanagedFunctionPointerAttribute.CallingConvention
  - System.Runtime.InteropServices.UnmanagedFunctionPointerAttribute.CharSet
  - System.Runtime.InteropServices.UnmanagedFunctionPointerAttribute.SetLastError
  - System.Runtime.InteropServices.UnmanagedFunctionPointerAttribute.ThrowOnUnmappableChar
  langs:
  - csharp
  - vb
  name: UnmanagedFunctionPointerAttribute
  fullName: System.Runtime.InteropServices.UnmanagedFunctionPointerAttribute
  type: Class
  source:
    remote:
      path: src/System.Runtime.InteropServices/ref/System.Runtime.InteropServices.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: UnmanagedFunctionPointerAttribute
    path: src/System.Runtime.InteropServices/ref/System.Runtime.InteropServices.cs
    startLine: 747
  assemblies:
  - System.Runtime.InteropServices
  namespace: System.Runtime.InteropServices
  summary: "\n<p>Controls the marshaling behavior of a delegate signature passed as an unmanaged function pointer to or from unmanaged code. This class cannot be inherited. </p>\n"
  remarks: "\n<p>The fields of the <xref href=\"System.Runtime.InteropServices.UnmanagedFunctionPointerAttribute\" data-throw-if-not-resolved=\"false\"></xref> attribute control various aspects of the transition of a delegate to an unmanaged function pointer, and are the same as the fields with identical names in the <xref href=\"System.Runtime.InteropServices.DllImportAttribute\" data-throw-if-not-resolved=\"false\"></xref> attribute. These fields are optional, but if you do not specify a field name, <xref href=\"System.Runtime.InteropServices.UnmanagedFunctionPointerAttribute\" data-throw-if-not-resolved=\"false\"></xref> is ignored.</p>\n<p>For more information about using attributes, see Extending Metadata Using Attributes.</p>\n"
  syntax:
    content: 'public sealed class UnmanagedFunctionPointerAttribute : Attribute'
    content.vb: >-
      Public NotInheritable Class UnmanagedFunctionPointerAttribute
          Inherits Attribute
  seealso:
  - type: System.Runtime.InteropServices.DllImportAttribute
    commentId: T:System.Runtime.InteropServices.DllImportAttribute
  - type: System.Runtime.InteropServices.Marshal.GetDelegateForFunctionPointer(System.IntPtr,System.Type)
    commentId: M:System.Runtime.InteropServices.Marshal.GetDelegateForFunctionPointer(System.IntPtr,System.Type)
  - type: System.Runtime.InteropServices.Marshal.GetFunctionPointerForDelegate(System.Delegate)
    commentId: M:System.Runtime.InteropServices.Marshal.GetFunctionPointerForDelegate(System.Delegate)
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: System.Runtime.InteropServices.UnmanagedFunctionPointerAttribute.BestFitMapping
  commentId: F:System.Runtime.InteropServices.UnmanagedFunctionPointerAttribute.BestFitMapping
  id: BestFitMapping
  parent: System.Runtime.InteropServices.UnmanagedFunctionPointerAttribute
  langs:
  - csharp
  - vb
  name: BestFitMapping
  fullName: System.Runtime.InteropServices.UnmanagedFunctionPointerAttribute.BestFitMapping
  type: Field
  source:
    remote:
      path: src/System.Runtime.InteropServices/ref/System.Runtime.InteropServices.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: BestFitMapping
    path: src/System.Runtime.InteropServices/ref/System.Runtime.InteropServices.cs
    startLine: 750
  assemblies:
  - System.Runtime.InteropServices
  namespace: System.Runtime.InteropServices
  summary: "\n<p>Enables or disables best-fit mapping behavior when converting Unicode characters to ANSI characters.</p>\n"
  remarks: "\n<p>The <xref href=\"System.Runtime.InteropServices.UnmanagedFunctionPointerAttribute.BestFitMapping\" data-throw-if-not-resolved=\"false\"></xref> field is <strong>true</strong> by default, which means that best-fit mapping behavior is enabled. If the field is <strong>false</strong>, best-fit mapping is disabled. Settings for this field override any level settings for the <xref href=\"System.Runtime.InteropServices.BestFitMappingAttribute\" data-throw-if-not-resolved=\"false\"></xref> attribute.</p>\n<p>For more information, see <xref href=\"System.Runtime.InteropServices.DllImportAttribute.BestFitMapping\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: public bool BestFitMapping
    content.vb: Public BestFitMapping As Boolean
    return:
      type: System.Boolean
  seealso:
  - type: System.Runtime.InteropServices.DllImportAttribute
    commentId: T:System.Runtime.InteropServices.DllImportAttribute
  - type: System.Runtime.InteropServices.DllImportAttribute.BestFitMapping
    commentId: F:System.Runtime.InteropServices.DllImportAttribute.BestFitMapping
  - type: System.Runtime.InteropServices.BestFitMappingAttribute
    commentId: T:System.Runtime.InteropServices.BestFitMappingAttribute
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Runtime.InteropServices.UnmanagedFunctionPointerAttribute.CharSet
  commentId: F:System.Runtime.InteropServices.UnmanagedFunctionPointerAttribute.CharSet
  id: CharSet
  parent: System.Runtime.InteropServices.UnmanagedFunctionPointerAttribute
  langs:
  - csharp
  - vb
  name: CharSet
  fullName: System.Runtime.InteropServices.UnmanagedFunctionPointerAttribute.CharSet
  type: Field
  source:
    remote:
      path: src/System.Runtime.InteropServices/ref/System.Runtime.InteropServices.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CharSet
    path: src/System.Runtime.InteropServices/ref/System.Runtime.InteropServices.cs
    startLine: 751
  assemblies:
  - System.Runtime.InteropServices
  namespace: System.Runtime.InteropServices
  summary: "\n<p>Indicates how to marshal string parameters to the method, and controls name mangling.</p>\n"
  remarks: "\n<p>Use this field with a member of the <xref href=\"System.Runtime.InteropServices.CharSet\" data-throw-if-not-resolved=\"false\"></xref> enumeration to specify the marshaling behavior of string parameters and to specify which entry-point name to invoke (the exact name given or a name ending with \"A\" or \"W\").</p>\n<p>For more information, see <xref href=\"System.Runtime.InteropServices.DllImportAttribute.CharSet\" data-throw-if-not-resolved=\"false\"></xref>. </p>\n"
  syntax:
    content: public CharSet CharSet
    content.vb: Public CharSet As CharSet
    return:
      type: System.Runtime.InteropServices.CharSet
  seealso:
  - type: System.Runtime.InteropServices.DllImportAttribute
    commentId: T:System.Runtime.InteropServices.DllImportAttribute
  - type: System.Runtime.InteropServices.DllImportAttribute.CharSet
    commentId: F:System.Runtime.InteropServices.DllImportAttribute.CharSet
  - type: System.Runtime.InteropServices.CharSet
    commentId: T:System.Runtime.InteropServices.CharSet
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Runtime.InteropServices.UnmanagedFunctionPointerAttribute.SetLastError
  commentId: F:System.Runtime.InteropServices.UnmanagedFunctionPointerAttribute.SetLastError
  id: SetLastError
  parent: System.Runtime.InteropServices.UnmanagedFunctionPointerAttribute
  langs:
  - csharp
  - vb
  name: SetLastError
  fullName: System.Runtime.InteropServices.UnmanagedFunctionPointerAttribute.SetLastError
  type: Field
  source:
    remote:
      path: src/System.Runtime.InteropServices/ref/System.Runtime.InteropServices.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: SetLastError
    path: src/System.Runtime.InteropServices/ref/System.Runtime.InteropServices.cs
    startLine: 752
  assemblies:
  - System.Runtime.InteropServices
  namespace: System.Runtime.InteropServices
  summary: "\n<p>Indicates whether the callee calls the <strong>SetLastError</strong> Win32 API function before returning from the attributed method.</p>\n"
  remarks: "\n<p>The <xref href=\"System.Runtime.InteropServices.UnmanagedFunctionPointerAttribute.SetLastError\" data-throw-if-not-resolved=\"false\"></xref> field is <strong>false</strong> by default, which means the caller calls <strong>SetLastError</strong>. Set this field to <strong>true</strong> to indicate that the callee calls <strong>SetLastError</strong> before returning from the attributed method.</p>\n<p>For more information, see <xref href=\"System.Runtime.InteropServices.DllImportAttribute.SetLastError\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: public bool SetLastError
    content.vb: Public SetLastError As Boolean
    return:
      type: System.Boolean
  seealso:
  - type: System.Runtime.InteropServices.DllImportAttribute
    commentId: T:System.Runtime.InteropServices.DllImportAttribute
  - type: System.Runtime.InteropServices.DllImportAttribute.SetLastError
    commentId: F:System.Runtime.InteropServices.DllImportAttribute.SetLastError
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Runtime.InteropServices.UnmanagedFunctionPointerAttribute.ThrowOnUnmappableChar
  commentId: F:System.Runtime.InteropServices.UnmanagedFunctionPointerAttribute.ThrowOnUnmappableChar
  id: ThrowOnUnmappableChar
  parent: System.Runtime.InteropServices.UnmanagedFunctionPointerAttribute
  langs:
  - csharp
  - vb
  name: ThrowOnUnmappableChar
  fullName: System.Runtime.InteropServices.UnmanagedFunctionPointerAttribute.ThrowOnUnmappableChar
  type: Field
  source:
    remote:
      path: src/System.Runtime.InteropServices/ref/System.Runtime.InteropServices.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ThrowOnUnmappableChar
    path: src/System.Runtime.InteropServices/ref/System.Runtime.InteropServices.cs
    startLine: 753
  assemblies:
  - System.Runtime.InteropServices
  namespace: System.Runtime.InteropServices
  summary: "\n<p>Enables or disables the throwing of an exception on an unmappable Unicode character that is converted to an ANSI \"?\" character.</p>\n"
  remarks: "\n<p>The <xref href=\"System.Runtime.InteropServices.UnmanagedFunctionPointerAttribute.ThrowOnUnmappableChar\" data-throw-if-not-resolved=\"false\"></xref> field is <strong>false</strong> by default, which means that the field is disabled. Set this field to <strong>true</strong> to indicate that an exception is thrown each time the interop marshaler converts an unmappable character.</p>\n<p>For more information, see <xref href=\"System.Runtime.InteropServices.DllImportAttribute.ThrowOnUnmappableChar\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: public bool ThrowOnUnmappableChar
    content.vb: Public ThrowOnUnmappableChar As Boolean
    return:
      type: System.Boolean
  seealso:
  - type: System.Runtime.InteropServices.DllImportAttribute
    commentId: T:System.Runtime.InteropServices.DllImportAttribute
  - type: System.Runtime.InteropServices.DllImportAttribute.ThrowOnUnmappableChar
    commentId: F:System.Runtime.InteropServices.DllImportAttribute.ThrowOnUnmappableChar
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Runtime.InteropServices.UnmanagedFunctionPointerAttribute.#ctor(System.Runtime.InteropServices.CallingConvention)
  commentId: M:System.Runtime.InteropServices.UnmanagedFunctionPointerAttribute.#ctor(System.Runtime.InteropServices.CallingConvention)
  id: '#ctor(System.Runtime.InteropServices.CallingConvention)'
  parent: System.Runtime.InteropServices.UnmanagedFunctionPointerAttribute
  langs:
  - csharp
  - vb
  name: UnmanagedFunctionPointerAttribute(CallingConvention)
  fullName: System.Runtime.InteropServices.UnmanagedFunctionPointerAttribute.UnmanagedFunctionPointerAttribute(System.Runtime.InteropServices.CallingConvention)
  type: Constructor
  source:
    remote:
      path: src/System.Runtime.InteropServices/ref/System.Runtime.InteropServices.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Runtime.InteropServices/ref/System.Runtime.InteropServices.cs
    startLine: 754
  assemblies:
  - System.Runtime.InteropServices
  namespace: System.Runtime.InteropServices
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Runtime.InteropServices.UnmanagedFunctionPointerAttribute\" data-throw-if-not-resolved=\"false\"></xref> class with the specified calling convention. </p>\n"
  remarks: "\n<p>This method specifies the calling convention for the delegate in unmanaged code and is the most common use of the <xref href=\"System.Runtime.InteropServices.UnmanagedFunctionPointerAttribute\" data-throw-if-not-resolved=\"false\"></xref> attribute. You can set the <em>callingConvention</em> parameter to one of the values in the <xref href=\"System.Runtime.InteropServices.CallingConvention\" data-throw-if-not-resolved=\"false\"></xref> enumeration.</p>\n"
  syntax:
    content: public UnmanagedFunctionPointerAttribute(CallingConvention callingConvention)
    content.vb: Public Sub New(callingConvention As CallingConvention)
    parameters:
    - id: callingConvention
      type: System.Runtime.InteropServices.CallingConvention
      description: "\n<p>The specified calling convention.</p>\n"
  seealso:
  - type: System.Runtime.InteropServices.DllImportAttribute
    commentId: T:System.Runtime.InteropServices.DllImportAttribute
  - type: System.Runtime.InteropServices.CallingConvention
    commentId: T:System.Runtime.InteropServices.CallingConvention
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Runtime.InteropServices.UnmanagedFunctionPointerAttribute.CallingConvention
  commentId: P:System.Runtime.InteropServices.UnmanagedFunctionPointerAttribute.CallingConvention
  id: CallingConvention
  parent: System.Runtime.InteropServices.UnmanagedFunctionPointerAttribute
  langs:
  - csharp
  - vb
  name: CallingConvention
  fullName: System.Runtime.InteropServices.UnmanagedFunctionPointerAttribute.CallingConvention
  type: Property
  source:
    remote:
      path: src/System.Runtime.InteropServices/ref/System.Runtime.InteropServices.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CallingConvention
    path: src/System.Runtime.InteropServices/ref/System.Runtime.InteropServices.cs
    startLine: 755
  assemblies:
  - System.Runtime.InteropServices
  namespace: System.Runtime.InteropServices
  summary: "\n<p>Gets the value of the calling convention.</p>\n"
  syntax:
    content: public CallingConvention CallingConvention { get; }
    content.vb: Public ReadOnly Property CallingConvention As CallingConvention
    parameters: []
    return:
      type: System.Runtime.InteropServices.CallingConvention
      description: "\n<p>The value of the calling convention specified by the <xref href=\"System.Runtime.InteropServices.UnmanagedFunctionPointerAttribute.#ctor(System.Runtime.InteropServices.CallingConvention)\" data-throw-if-not-resolved=\"false\"></xref> constructor.</p>\n"
  seealso:
  - type: System.Runtime.InteropServices.DllImportAttribute
    commentId: T:System.Runtime.InteropServices.DllImportAttribute
  - type: System.Runtime.InteropServices.CallingConvention
    commentId: T:System.Runtime.InteropServices.CallingConvention
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: System.Runtime.InteropServices
  isExternal: false
  name: System.Runtime.InteropServices
  fullName: System.Runtime.InteropServices
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  fullName: System.Boolean
- uid: System.Runtime.InteropServices.CharSet
  parent: System.Runtime.InteropServices
  isExternal: false
  name: CharSet
  fullName: System.Runtime.InteropServices.CharSet
- uid: System.Runtime.InteropServices.CallingConvention
  parent: System.Runtime.InteropServices
  isExternal: false
  name: CallingConvention
  fullName: System.Runtime.InteropServices.CallingConvention
