items:
- uid: System.Net.HttpWebResponse
  commentId: T:System.Net.HttpWebResponse
  id: HttpWebResponse
  parent: System.Net
  children:
  - System.Net.HttpWebResponse.ContentLength
  - System.Net.HttpWebResponse.ContentType
  - System.Net.HttpWebResponse.Cookies
  - System.Net.HttpWebResponse.Dispose(System.Boolean)
  - System.Net.HttpWebResponse.GetResponseStream
  - System.Net.HttpWebResponse.Headers
  - System.Net.HttpWebResponse.Method
  - System.Net.HttpWebResponse.ResponseUri
  - System.Net.HttpWebResponse.StatusCode
  - System.Net.HttpWebResponse.StatusDescription
  - System.Net.HttpWebResponse.SupportsHeaders
  langs:
  - csharp
  - vb
  name: HttpWebResponse
  fullName: System.Net.HttpWebResponse
  type: Class
  source:
    remote:
      path: src/System.Net.Requests/ref/System.Net.Requests.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: HttpWebResponse
    path: src/System.Net.Requests/ref/System.Net.Requests.cs
    startLine: 31
  assemblies:
  - System.Net.Requests
  namespace: System.Net
  summary: "\n<p>Provides an HTTP-specific implementation of the <xref href=\"System.Net.WebResponse\" data-throw-if-not-resolved=\"false\"></xref> class.</p>\n"
  remarks: "\n<p>This class contains support for HTTP-specific uses of the properties and methods of the <xref href=\"System.Net.WebResponse\" data-throw-if-not-resolved=\"false\"></xref> class. The <xref href=\"System.Net.HttpWebResponse\" data-throw-if-not-resolved=\"false\"></xref> class is used to build HTTP stand-alone client applications that send HTTP requests and receive HTTP responses.</p>\n<p>Do not confuse <xref href=\"System.Net.HttpWebResponse\" data-throw-if-not-resolved=\"false\"></xref> with the <xref href=\"System.Web.HttpResponse\" data-throw-if-not-resolved=\"false\"></xref> class that is used in ASP.NET applications and whose methods and properties are exposed through ASP.NET's intrinsic <strong>Response</strong> object.</p>\n<p>You should never directly create an instance of the <xref href=\"System.Net.HttpWebResponse\" data-throw-if-not-resolved=\"false\"></xref> class. Instead, use the instance returned by a call to <xref href=\"System.Net.HttpWebRequest.GetResponse\" data-throw-if-not-resolved=\"false\"></xref>. You must call either the <xref href=\"System.IO.Stream.Close\" data-throw-if-not-resolved=\"false\"></xref> or the <xref href=\"System.Net.HttpWebResponse.Close\" data-throw-if-not-resolved=\"false\"></xref> method to close the response and release the connection for reuse. It is not necessary to call both <xref href=\"System.IO.Stream.Close\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"System.Net.HttpWebResponse.Close\" data-throw-if-not-resolved=\"false\"></xref>, but doing so does not cause an error.</p>\n<p>Common header information returned from the Internet resource is exposed as properties of the class. See the following table for a complete list. Other headers can be read from the <xref href=\"System.Net.HttpWebResponse.Headers\" data-throw-if-not-resolved=\"false\"></xref> property as name/value pairs.</p>\n<p>The following table shows the common HTTP headers that are available through properties of the <xref href=\"System.Net.HttpWebResponse\" data-throw-if-not-resolved=\"false\"></xref> class.</p>\n<p>Header </p>\n<p>Property </p>\n<table><tbody><tr><td>\n<p>Content-Encoding </p>\n</td><td>\n<p>\n<xref href=\"System.Net.HttpWebResponse.ContentEncoding\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td></tr><tr><td>\n<p>Content-Length </p>\n</td><td>\n<p>\n<xref href=\"System.Net.HttpWebResponse.ContentLength\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td></tr><tr><td>\n<p>Content-Type </p>\n</td><td>\n<p>\n<xref href=\"System.Net.HttpWebResponse.ContentType\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td></tr><tr><td>\n<p>Last-Modified </p>\n</td><td>\n<p>\n<xref href=\"System.Net.HttpWebResponse.LastModified\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td></tr><tr><td>\n<p>Server </p>\n</td><td>\n<p>\n<xref href=\"System.Net.HttpWebResponse.Server\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td></tr></tbody></table>\n<p>The contents of the response from the Internet resource are returned as a <xref href=\"System.IO.Stream\" data-throw-if-not-resolved=\"false\"></xref> by calling the <xref href=\"System.Net.HttpWebResponse.GetResponseStream\" data-throw-if-not-resolved=\"false\"></xref> method.</p>\n"
  example:
  - "\n<p>The following example returns an <xref href=\"System.Net.HttpWebResponse\" data-throw-if-not-resolved=\"false\"></xref> from an <xref href=\"System.Net.HttpWebRequest\" data-throw-if-not-resolved=\"false\"></xref>. </p>Classic HttpWebResponse Example#1"
  syntax:
    content: 'public class HttpWebResponse : WebResponse, IDisposable'
    content.vb: >-
      Public Class HttpWebResponse
          Inherits WebResponse
          Implements IDisposable
  seealso:
  - type: System.Net.WebResponse
    commentId: T:System.Net.WebResponse
  inheritance:
  - System.Object
  - System.Net.WebResponse
  implements:
  - System.IDisposable
  inheritedMembers:
  - System.Net.WebResponse.Dispose
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: System.Net.HttpWebResponse.ContentLength
  commentId: P:System.Net.HttpWebResponse.ContentLength
  id: ContentLength
  parent: System.Net.HttpWebResponse
  langs:
  - csharp
  - vb
  name: ContentLength
  fullName: System.Net.HttpWebResponse.ContentLength
  type: Property
  source:
    remote:
      path: src/System.Net.Requests/ref/System.Net.Requests.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ContentLength
    path: src/System.Net.Requests/ref/System.Net.Requests.cs
    startLine: 34
  assemblies:
  - System.Net.Requests
  namespace: System.Net
  summary: "\n<p>Gets the length of the content returned by the request.</p>\n"
  remarks: "\n<p>The <xref href=\"System.Net.HttpWebResponse.ContentLength\" data-throw-if-not-resolved=\"false\"></xref> property contains the value of the Content-Length header returned with the response. If the Content-Length header is not set in the response, <xref href=\"System.Net.HttpWebResponse.ContentLength\" data-throw-if-not-resolved=\"false\"></xref> is set to the value -1.</p>\n"
  example:
  - "\n<p>The following example displays the value of this property.</p>NCLResponse1#1"
  syntax:
    content: public override long ContentLength { get; }
    content.vb: Public Overrides ReadOnly Property ContentLength As Long
    parameters: []
    return:
      type: System.Int64
      description: "\n<p>The number of bytes returned by the request. Content length does not include header information.</p>\n"
  overridden: System.Net.WebResponse.ContentLength
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "\n<p>The current instance has been disposed. </p>\n"
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: System.Net.HttpWebResponse.ContentType
  commentId: P:System.Net.HttpWebResponse.ContentType
  id: ContentType
  parent: System.Net.HttpWebResponse
  langs:
  - csharp
  - vb
  name: ContentType
  fullName: System.Net.HttpWebResponse.ContentType
  type: Property
  source:
    remote:
      path: src/System.Net.Requests/ref/System.Net.Requests.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ContentType
    path: src/System.Net.Requests/ref/System.Net.Requests.cs
    startLine: 35
  assemblies:
  - System.Net.Requests
  namespace: System.Net
  summary: "\n<p>Gets the content type of the response.</p>\n"
  remarks: "\n<p>The <xref href=\"System.Net.HttpWebResponse.ContentType\" data-throw-if-not-resolved=\"false\"></xref> property contains the value of the Content-Type header returned with the response.</p>\n"
  example:
  - "\n<p>The following example displays the value of this property.</p>NCLResponse1#1"
  syntax:
    content: public override string ContentType { get; }
    content.vb: Public Overrides ReadOnly Property ContentType As String
    parameters: []
    return:
      type: System.String
      description: "\n<p>A string that contains the content type of the response.</p>\n"
  overridden: System.Net.WebResponse.ContentType
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "\n<p>The current instance has been disposed. </p>\n"
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: System.Net.HttpWebResponse.Cookies
  commentId: P:System.Net.HttpWebResponse.Cookies
  id: Cookies
  parent: System.Net.HttpWebResponse
  langs:
  - csharp
  - vb
  name: Cookies
  fullName: System.Net.HttpWebResponse.Cookies
  type: Property
  source:
    remote:
      path: src/System.Net.Requests/ref/System.Net.Requests.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Cookies
    path: src/System.Net.Requests/ref/System.Net.Requests.cs
    startLine: 36
  assemblies:
  - System.Net.Requests
  namespace: System.Net
  summary: "\n<p>Gets or sets the cookies that are associated with this response.</p>\n"
  remarks: "\n<p>The <xref href=\"System.Net.HttpWebResponse.Cookies\" data-throw-if-not-resolved=\"false\"></xref> property provides an instance of the <xref href=\"System.Net.CookieCollection\" data-throw-if-not-resolved=\"false\"></xref> class that holds the cookies associated with this response.</p>\n<p>If the <xref href=\"System.Net.HttpWebRequest.CookieContainer\" data-throw-if-not-resolved=\"false\"></xref> property of the associated <xref href=\"System.Net.HttpWebRequest\" data-throw-if-not-resolved=\"false\"></xref> is <strong>null</strong>, the <xref href=\"System.Net.HttpWebResponse.Cookies\" data-throw-if-not-resolved=\"false\"></xref> property will also be <strong>null</strong>. Any cookie information sent by the server will be available in the <xref href=\"System.Net.HttpWebResponse.Headers\" data-throw-if-not-resolved=\"false\"></xref> property, however.</p>\n"
  example:
  - "\n<p>The following example sends a request to a URL and displays the cookies returned in the response.</p>NCLCookies#1"
  syntax:
    content: public virtual CookieCollection Cookies { get; }
    content.vb: Public Overridable ReadOnly Property Cookies As CookieCollection
    parameters: []
    return:
      type: System.Net.CookieCollection
      description: "\n<p>A <xref href=\"System.Net.CookieCollection\" data-throw-if-not-resolved=\"false\"></xref> that contains the cookies that are associated with this response.</p>\n"
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "\n<p>The current instance has been disposed. </p>\n"
  seealso:
  - type: System.Net.CookieContainer
    commentId: T:System.Net.CookieContainer
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: System.Net.HttpWebResponse.Headers
  commentId: P:System.Net.HttpWebResponse.Headers
  id: Headers
  parent: System.Net.HttpWebResponse
  langs:
  - csharp
  - vb
  name: Headers
  fullName: System.Net.HttpWebResponse.Headers
  type: Property
  source:
    remote:
      path: src/System.Net.Requests/ref/System.Net.Requests.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Headers
    path: src/System.Net.Requests/ref/System.Net.Requests.cs
    startLine: 37
  assemblies:
  - System.Net.Requests
  namespace: System.Net
  summary: "\n<p>Gets the headers that are associated with this response from the server.</p>\n"
  remarks: "\n<p>The <xref href=\"System.Net.HttpWebResponse.Headers\" data-throw-if-not-resolved=\"false\"></xref> property is a collection of name/value pairs that contain the HTTP header values returned with the response. Common header information returned from the Internet resource is exposed as properties of the <xref href=\"System.Net.HttpWebResponse\" data-throw-if-not-resolved=\"false\"></xref> class. The following table lists common headers that the API exposes as properties.</p>\n<p>Header </p>\n<p>Property </p>\n<table><tbody><tr><td>\n<p>Content-Encoding </p>\n</td><td>\n<p>\n<xref href=\"System.Net.HttpWebResponse.ContentEncoding\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td></tr><tr><td>\n<p>Content-Length </p>\n</td><td>\n<p>\n<xref href=\"System.Net.HttpWebResponse.ContentLength\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td></tr><tr><td>\n<p>Content-Type </p>\n</td><td>\n<p>\n<xref href=\"System.Net.HttpWebResponse.ContentType\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td></tr><tr><td>\n<p>Last-Modified </p>\n</td><td>\n<p>\n<xref href=\"System.Net.HttpWebResponse.LastModified\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td></tr><tr><td>\n<p>Server </p>\n</td><td>\n<p>\n<xref href=\"System.Net.HttpWebResponse.Server\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td></tr></tbody></table>\n"
  example:
  - "\n<p>The following example writes the contents of all of the response headers to the console.</p>HttpWebResponse_Headers#1"
  syntax:
    content: public override WebHeaderCollection Headers { get; }
    content.vb: Public Overrides ReadOnly Property Headers As WebHeaderCollection
    parameters: []
    return:
      type: System.Net.WebHeaderCollection
      description: "\n<p>A <xref href=\"System.Net.WebHeaderCollection\" data-throw-if-not-resolved=\"false\"></xref> that contains the header information returned with the response.</p>\n"
  overridden: System.Net.WebResponse.Headers
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "\n<p>The current instance has been disposed. </p>\n"
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: System.Net.HttpWebResponse.Method
  commentId: P:System.Net.HttpWebResponse.Method
  id: Method
  parent: System.Net.HttpWebResponse
  langs:
  - csharp
  - vb
  name: Method
  fullName: System.Net.HttpWebResponse.Method
  type: Property
  source:
    remote:
      path: src/System.Net.Requests/ref/System.Net.Requests.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Method
    path: src/System.Net.Requests/ref/System.Net.Requests.cs
    startLine: 38
  assemblies:
  - System.Net.Requests
  namespace: System.Net
  summary: "\n<p>Gets the method that is used to return the response.</p>\n"
  remarks: "\n<p>\n<xref href=\"System.Net.HttpWebResponse.Method\" data-throw-if-not-resolved=\"false\"></xref> returns the method that is used to return the response. Common HTTP methods are GET, HEAD, POST, PUT, and DELETE.</p>\n"
  example:
  - "\n<p>The following example checks the string contained in <xref href=\"System.Net.HttpWebResponse.Method\" data-throw-if-not-resolved=\"false\"></xref>, to determine the Http method invoked by the Web server.</p>HttpWebResponse_Method_Server#1"
  syntax:
    content: public virtual string Method { get; }
    content.vb: Public Overridable ReadOnly Property Method As String
    parameters: []
    return:
      type: System.String
      description: "\n<p>A string that contains the HTTP method that is used to return the response.</p>\n"
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "\n<p>The current instance has been disposed. </p>\n"
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: System.Net.HttpWebResponse.ResponseUri
  commentId: P:System.Net.HttpWebResponse.ResponseUri
  id: ResponseUri
  parent: System.Net.HttpWebResponse
  langs:
  - csharp
  - vb
  name: ResponseUri
  fullName: System.Net.HttpWebResponse.ResponseUri
  type: Property
  source:
    remote:
      path: src/System.Net.Requests/ref/System.Net.Requests.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ResponseUri
    path: src/System.Net.Requests/ref/System.Net.Requests.cs
    startLine: 39
  assemblies:
  - System.Net.Requests
  namespace: System.Net
  summary: "\n<p>Gets the URI of the Internet resource that responded to the request.</p>\n"
  remarks: "\n<p>The <xref href=\"System.Net.HttpWebResponse.ResponseUri\" data-throw-if-not-resolved=\"false\"></xref> property contains the URI of the Internet resource that actually responded to the request. This URI might not be the same as the originally requested URI, if the original server redirected the request.</p>\n<p>The <xref href=\"System.Net.HttpWebResponse.ResponseUri\" data-throw-if-not-resolved=\"false\"></xref> property will use the Content-Location header if present.</p>\n<p>Applications that need to access the last redirected <xref href=\"System.Net.HttpWebResponse.ResponseUri\" data-throw-if-not-resolved=\"false\"></xref> should use the <xref href=\"System.Net.HttpWebRequest.Address\" data-throw-if-not-resolved=\"false\"></xref> property rather than <xref href=\"System.Net.HttpWebResponse.ResponseUri\" data-throw-if-not-resolved=\"false\"></xref>, since the use of <xref href=\"System.Net.HttpWebResponse.ResponseUri\" data-throw-if-not-resolved=\"false\"></xref> property may open security vulnerabilities.</p>\n"
  example:
  - "\n<p>This example creates a <xref href=\"System.Net.HttpWebRequest\" data-throw-if-not-resolved=\"false\"></xref> and queries for an <xref href=\"System.Net.HttpWebResponse\" data-throw-if-not-resolved=\"false\"></xref> and then checks to see whether the original URI was redirected by the server.</p>HttpWebResponse_ResponseUri#1"
  syntax:
    content: public override Uri ResponseUri { get; }
    content.vb: Public Overrides ReadOnly Property ResponseUri As Uri
    parameters: []
    return:
      type: System.Uri
      description: "\n<p>A <xref href=\"System.Uri\" data-throw-if-not-resolved=\"false\"></xref> that contains the URI of the Internet resource that responded to the request.</p>\n"
  overridden: System.Net.WebResponse.ResponseUri
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "\n<p>The current instance has been disposed. </p>\n"
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: System.Net.HttpWebResponse.StatusCode
  commentId: P:System.Net.HttpWebResponse.StatusCode
  id: StatusCode
  parent: System.Net.HttpWebResponse
  langs:
  - csharp
  - vb
  name: StatusCode
  fullName: System.Net.HttpWebResponse.StatusCode
  type: Property
  source:
    remote:
      path: src/System.Net.Requests/ref/System.Net.Requests.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: StatusCode
    path: src/System.Net.Requests/ref/System.Net.Requests.cs
    startLine: 40
  assemblies:
  - System.Net.Requests
  namespace: System.Net
  summary: "\n<p>Gets the status of the response.</p>\n"
  remarks: "\n<p>The <xref href=\"System.Net.HttpWebResponse.StatusCode\" data-throw-if-not-resolved=\"false\"></xref> parameter is a number that indicates the status of the HTTP response. The expected values for status are defined in the <xref href=\"System.Net.HttpStatusCode\" data-throw-if-not-resolved=\"false\"></xref> class.</p>\n"
  example:
  - "\n<p>The following example uses <xref href=\"System.Net.HttpWebResponse.StatusCode\" data-throw-if-not-resolved=\"false\"></xref> to verify that the status of the <xref href=\"System.Net.HttpWebResponse\" data-throw-if-not-resolved=\"false\"></xref> is OK.</p>HttpWebResponse_StatusCode_StatusDescription#1"
  syntax:
    content: public virtual HttpStatusCode StatusCode { get; }
    content.vb: Public Overridable ReadOnly Property StatusCode As HttpStatusCode
    parameters: []
    return:
      type: System.Net.HttpStatusCode
      description: "\n<p>One of the <xref href=\"System.Net.HttpStatusCode\" data-throw-if-not-resolved=\"false\"></xref> values.</p>\n"
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "\n<p>The current instance has been disposed. </p>\n"
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: System.Net.HttpWebResponse.StatusDescription
  commentId: P:System.Net.HttpWebResponse.StatusDescription
  id: StatusDescription
  parent: System.Net.HttpWebResponse
  langs:
  - csharp
  - vb
  name: StatusDescription
  fullName: System.Net.HttpWebResponse.StatusDescription
  type: Property
  source:
    remote:
      path: src/System.Net.Requests/ref/System.Net.Requests.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: StatusDescription
    path: src/System.Net.Requests/ref/System.Net.Requests.cs
    startLine: 41
  assemblies:
  - System.Net.Requests
  namespace: System.Net
  summary: "\n<p>Gets the status description returned with the response.</p>\n"
  remarks: "\n<p>A common status message is OK.</p>\n"
  example:
  - "\n<p>The following example uses <xref href=\"System.Net.HttpWebResponse.StatusDescription\" data-throw-if-not-resolved=\"false\"></xref> to verify that the status of the <xref href=\"System.Net.HttpWebResponse\" data-throw-if-not-resolved=\"false\"></xref> is OK.</p>HttpWebResponse_StatusCode_StatusDescription#2"
  syntax:
    content: public virtual string StatusDescription { get; }
    content.vb: Public Overridable ReadOnly Property StatusDescription As String
    parameters: []
    return:
      type: System.String
      description: "\n<p>A string that describes the status of the response.</p>\n"
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "\n<p>The current instance has been disposed. </p>\n"
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: System.Net.HttpWebResponse.SupportsHeaders
  commentId: P:System.Net.HttpWebResponse.SupportsHeaders
  id: SupportsHeaders
  parent: System.Net.HttpWebResponse
  langs:
  - csharp
  - vb
  name: SupportsHeaders
  fullName: System.Net.HttpWebResponse.SupportsHeaders
  type: Property
  source:
    remote:
      path: src/System.Net.Requests/ref/System.Net.Requests.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: SupportsHeaders
    path: src/System.Net.Requests/ref/System.Net.Requests.cs
    startLine: 42
  assemblies:
  - System.Net.Requests
  namespace: System.Net
  summary: "\n<p>Gets a value that indicates if headers are supported.</p>\n"
  remarks: "\n<p>This property is always true for .NET Framework 4.5.</p>\n"
  syntax:
    content: public override bool SupportsHeaders { get; }
    content.vb: Public Overrides ReadOnly Property SupportsHeaders As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: "\n<p>Returns <xref href=\"System.Boolean\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>\n<strong>true</strong> if headers are supported; otherwise, <strong>false</strong>.</p>\n"
  overridden: System.Net.WebResponse.SupportsHeaders
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: System.Net.HttpWebResponse.Dispose(System.Boolean)
  commentId: M:System.Net.HttpWebResponse.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Net.HttpWebResponse
  langs:
  - csharp
  - vb
  name: Dispose(Boolean)
  fullName: System.Net.HttpWebResponse.Dispose(System.Boolean)
  type: Method
  source:
    remote:
      path: src/System.Net.Requests/ref/System.Net.Requests.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Dispose
    path: src/System.Net.Requests/ref/System.Net.Requests.cs
    startLine: 43
  assemblies:
  - System.Net.Requests
  namespace: System.Net
  summary: "\n<p>Releases the unmanaged resources used by the <xref href=\"System.Net.HttpWebResponse\" data-throw-if-not-resolved=\"false\"></xref>, and optionally disposes of the managed resources.</p>\n"
  remarks: "\n<p>This method is called by the public <strong>Dispose()</strong> method and the <xref href=\"System.Object.Finalize\" data-throw-if-not-resolved=\"false\"></xref> method. <strong>Dispose()</strong> invokes the protected <strong>Dispose(Boolean)</strong> method with the <em>disposing</em> parameter set to <strong>true</strong>. <xref href=\"System.Object.Finalize\" data-throw-if-not-resolved=\"false\"></xref> invokes <strong>Dispose</strong> with <em>disposing</em> set to <strong>false</strong>.</p>\n<p>When the <em>disposing</em> parameter is <strong>true</strong>, this method releases all resources held by any managed objects that this <xref href=\"System.Net.WebResponse\" data-throw-if-not-resolved=\"false\"></xref> references. This method invokes the <strong>Dispose()</strong> method of each referenced object.</p>\n<p>This member outputs trace information when you enable network tracing in your application. For more information, see Network Tracing in the .NET Framework.</p>\n"
  syntax:
    content: protected override void Dispose(bool disposing)
    content.vb: Protected Overrides Sub Dispose(disposing As Boolean)
    parameters:
    - id: disposing
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> to release both managed and unmanaged resources; <strong>false</strong> to releases only unmanaged resources. </p>\n"
  overridden: System.Net.WebResponse.Dispose(System.Boolean)
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: System.Net.HttpWebResponse.GetResponseStream
  commentId: M:System.Net.HttpWebResponse.GetResponseStream
  id: GetResponseStream
  parent: System.Net.HttpWebResponse
  langs:
  - csharp
  - vb
  name: GetResponseStream()
  fullName: System.Net.HttpWebResponse.GetResponseStream()
  type: Method
  source:
    remote:
      path: src/System.Net.Requests/ref/System.Net.Requests.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetResponseStream
    path: src/System.Net.Requests/ref/System.Net.Requests.cs
    startLine: 44
  assemblies:
  - System.Net.Requests
  namespace: System.Net
  summary: "\n<p>Gets the stream that is used to read the body of the response from the server.</p>\n"
  remarks: "\n<p>The <xref href=\"System.Net.HttpWebResponse.GetResponseStream\" data-throw-if-not-resolved=\"false\"></xref> method returns the data stream from the requested Internet resource.</p>\n<p>You must call either the <xref href=\"System.IO.Stream.Close\" data-throw-if-not-resolved=\"false\"></xref> or the  <xref href=\"System.Net.HttpWebResponse.Close\" data-throw-if-not-resolved=\"false\"></xref> method to close the stream and release the connection for reuse. It is not necessary to call both <xref href=\"System.IO.Stream.Close\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"System.Net.HttpWebResponse.Close\" data-throw-if-not-resolved=\"false\"></xref>, but doing so does not cause an error. Failure to close the stream will cause your application to run out of connections.</p>\n<p>This member outputs trace information when you enable network tracing in your application. For more information, see Network Tracing in the .NET Framework.</p>\n"
  example:
  - "\n<p>The following example demonstrates how to use <xref href=\"System.Net.HttpWebResponse.GetResponseStream\" data-throw-if-not-resolved=\"false\"></xref> to return the <xref href=\"System.IO.Stream\" data-throw-if-not-resolved=\"false\"></xref> instance used to read the response from the server.</p>HttpWebResponse_GetResponseStream#1"
  syntax:
    content: public override Stream GetResponseStream()
    content.vb: Public Overrides Function GetResponseStream As Stream
    return:
      type: System.IO.Stream
      description: "\n<p>A <xref href=\"System.IO.Stream\" data-throw-if-not-resolved=\"false\"></xref> containing the body of the response.</p>\n"
  overridden: System.Net.WebResponse.GetResponseStream
  exceptions:
  - type: System.Net.ProtocolViolationException
    commentId: T:System.Net.ProtocolViolationException
    description: "\n<p>There is no response stream. </p>\n"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "\n<p>The current instance has been disposed. </p>\n"
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: System.Net
  isExternal: false
  name: System.Net
  fullName: System.Net
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System.Net.WebResponse
  parent: System.Net
  isExternal: false
  name: WebResponse
  fullName: System.Net.WebResponse
- uid: System.IDisposable
  parent: System
  isExternal: false
  name: IDisposable
  fullName: System.IDisposable
- uid: System.Net.WebResponse.Dispose
  parent: System.Net.WebResponse
  isExternal: false
  name: Dispose()
  fullName: System.Net.WebResponse.Dispose()
  spec.csharp:
  - uid: System.Net.WebResponse.Dispose
    name: Dispose
    fullName: System.Net.WebResponse.Dispose
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Net.WebResponse.Dispose
    name: Dispose
    fullName: System.Net.WebResponse.Dispose
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Net.WebResponse.ContentLength
  parent: System.Net.WebResponse
  isExternal: false
  name: ContentLength
  fullName: System.Net.WebResponse.ContentLength
- uid: System.Int64
  parent: System
  isExternal: false
  name: Int64
  fullName: System.Int64
- uid: System.Net.WebResponse.ContentType
  parent: System.Net.WebResponse
  isExternal: false
  name: ContentType
  fullName: System.Net.WebResponse.ContentType
- uid: System.String
  parent: System
  isExternal: false
  name: String
  fullName: System.String
- uid: System.Net.CookieCollection
  parent: System.Net
  isExternal: false
  name: CookieCollection
  fullName: System.Net.CookieCollection
- uid: System.Net.WebResponse.Headers
  parent: System.Net.WebResponse
  isExternal: false
  name: Headers
  fullName: System.Net.WebResponse.Headers
- uid: System.Net.WebHeaderCollection
  isExternal: false
  name: WebHeaderCollection
  fullName: System.Net.WebHeaderCollection
- uid: System.Net.WebResponse.ResponseUri
  parent: System.Net.WebResponse
  isExternal: false
  name: ResponseUri
  fullName: System.Net.WebResponse.ResponseUri
- uid: System.Uri
  parent: System
  isExternal: false
  name: Uri
  fullName: System.Uri
- uid: System.Net.HttpStatusCode
  parent: System.Net
  isExternal: false
  name: HttpStatusCode
  fullName: System.Net.HttpStatusCode
- uid: System.Net.WebResponse.SupportsHeaders
  parent: System.Net.WebResponse
  isExternal: false
  name: SupportsHeaders
  fullName: System.Net.WebResponse.SupportsHeaders
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  fullName: System.Boolean
- uid: System.Net.WebResponse.Dispose(System.Boolean)
  parent: System.Net.WebResponse
  isExternal: true
  name: Dispose(Boolean)
  fullName: System.Net.WebResponse.Dispose(System.Boolean)
  spec.csharp:
  - uid: System.Net.WebResponse.Dispose(System.Boolean)
    name: Dispose
    fullName: System.Net.WebResponse.Dispose
  - name: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Net.WebResponse.Dispose(System.Boolean)
    name: Dispose
    fullName: System.Net.WebResponse.Dispose
  - name: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
- uid: System.Net.WebResponse.GetResponseStream
  parent: System.Net.WebResponse
  isExternal: false
  name: GetResponseStream()
  fullName: System.Net.WebResponse.GetResponseStream()
  spec.csharp:
  - uid: System.Net.WebResponse.GetResponseStream
    name: GetResponseStream
    fullName: System.Net.WebResponse.GetResponseStream
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Net.WebResponse.GetResponseStream
    name: GetResponseStream
    fullName: System.Net.WebResponse.GetResponseStream
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.IO.Stream
  parent: System.IO
  isExternal: false
  name: Stream
  fullName: System.IO.Stream
- uid: System.IO
  isExternal: false
  name: System.IO
  fullName: System.IO
- uid: System.ObjectDisposedException
  isExternal: false
  name: ObjectDisposedException
  fullName: System.ObjectDisposedException
- uid: System.Net.ProtocolViolationException
  isExternal: false
  name: ProtocolViolationException
  fullName: System.Net.ProtocolViolationException
