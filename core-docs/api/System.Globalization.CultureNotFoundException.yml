items:
- uid: System.Globalization.CultureNotFoundException
  commentId: T:System.Globalization.CultureNotFoundException
  id: CultureNotFoundException
  parent: System.Globalization
  children:
  - System.Globalization.CultureNotFoundException.#ctor
  - System.Globalization.CultureNotFoundException.#ctor(System.String)
  - System.Globalization.CultureNotFoundException.#ctor(System.String,System.Exception)
  - System.Globalization.CultureNotFoundException.#ctor(System.String,System.String)
  - System.Globalization.CultureNotFoundException.#ctor(System.String,System.String,System.Exception)
  - System.Globalization.CultureNotFoundException.#ctor(System.String,System.String,System.String)
  - System.Globalization.CultureNotFoundException.InvalidCultureName
  - System.Globalization.CultureNotFoundException.Message
  langs:
  - csharp
  - vb
  name: CultureNotFoundException
  fullName: System.Globalization.CultureNotFoundException
  type: Class
  source:
    remote:
      path: src/mscorlib/src/System/Globalization/CultureNotFoundException.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: CultureNotFoundException
    path: src/mscorlib/src/System/Globalization/CultureNotFoundException.cs
    startLine: 12
  assemblies:
  - System.Globalization
  namespace: System.Globalization
  summary: "\n<p>The exception that is thrown when a method attempts to construct a culture that is not available.</p>\n"
  remarks: "\n<p>A <xref href=\"System.Globalization.CultureNotFoundException\" data-throw-if-not-resolved=\"false\"></xref> exception is thrown whenever the construction of an invalid culture is eventually attempted within a method. Most commonly, this exception is thrown when a call to one of the following methods fails to create or return a culture: </p>\n<ul><li>\n<p>\n<xref href=\"System.Globalization.CultureInfo.#ctor(System.String)\" data-throw-if-not-resolved=\"false\"></xref> constructors. </p>\n</li><li>\n<p>The <xref href=\"System.Globalization.CultureInfo.CreateSpecificCulture(System.String)\" data-throw-if-not-resolved=\"false\"></xref> method. </p>\n</li><li>\n<p>The <xref href=\"System.Globalization.CultureInfo.GetCultureInfo(System.String)\" data-throw-if-not-resolved=\"false\"></xref> method. </p>\n</li></ul>\n<p>On Windows 7 and later operating systems, the .NET Framework retrieves culture data from the operating system. The <xref href=\"System.Globalization.CultureNotFoundException\" data-throw-if-not-resolved=\"false\"></xref> exception is thrown if the operating system is unable to find the culture, and the culture is not a custom culture or a replacement culture. </p>\n<p>If the calling code attempted to instantiate a <xref href=\"System.Globalization.CultureInfo\" data-throw-if-not-resolved=\"false\"></xref> object by using a culture name, the <xref href=\"System.Globalization.CultureNotFoundException.InvalidCultureName\" data-throw-if-not-resolved=\"false\"></xref> property contains the invalid name, and the <xref href=\"System.Nullable`1.HasValue\" data-throw-if-not-resolved=\"false\"></xref> property of the <xref href=\"System.Nullable`1\" data-throw-if-not-resolved=\"false\"></xref> object returned by the <xref href=\"System.Globalization.CultureNotFoundException.InvalidCultureId\" data-throw-if-not-resolved=\"false\"></xref> property is <strong>false</strong>. If the calling code attempted to instantiate a <xref href=\"System.Globalization.CultureInfo\" data-throw-if-not-resolved=\"false\"></xref> object by using a culture identifier, the <xref href=\"System.Nullable`1.Value\" data-throw-if-not-resolved=\"false\"></xref> property of the <xref href=\"System.Nullable`1\" data-throw-if-not-resolved=\"false\"></xref> object returned by the <xref href=\"System.Globalization.CultureNotFoundException.InvalidCultureId\" data-throw-if-not-resolved=\"false\"></xref> property contains the invalid identifier, and the value of the <xref href=\"System.Globalization.CultureNotFoundException.InvalidCultureName\" data-throw-if-not-resolved=\"false\"></xref> property is <strong>null</strong>. </p>\n<p>\n<xref href=\"System.Globalization.CultureNotFoundException\" data-throw-if-not-resolved=\"false\"></xref> uses the HRESULT COR_E_ARGUMENT, which has the value 0x80070057. </p>\n"
  example:
  - 
  syntax:
    content: >-
      [ComVisible(true)]

      [Serializable]

      public class CultureNotFoundException : ArgumentException, _Exception, ISerializable
    content.vb: >-
      <ComVisible(True)>

      <Serializable>

      Public Class CultureNotFoundException
          Inherits ArgumentException
          Implements _Exception, ISerializable
  inheritance:
  - System.Object
  - System.Exception
  - System.SystemException
  - System.ArgumentException
  implements:
  - System.Runtime.InteropServices._Exception
  - System.Runtime.Serialization.ISerializable
  inheritedMembers:
  - System.ArgumentException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.ArgumentException.ParamName
  - System.Exception.GetBaseException
  - System.Exception.ToString
  - System.Exception.GetType
  - System.Exception.Data
  - System.Exception.InnerException
  - System.Exception.TargetSite
  - System.Exception.StackTrace
  - System.Exception.HelpLink
  - System.Exception.Source
  - System.Exception.HResult
  - System.Exception.SerializeObjectState
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: System.Globalization.CultureNotFoundException.#ctor
  commentId: M:System.Globalization.CultureNotFoundException.#ctor
  id: '#ctor'
  parent: System.Globalization.CultureNotFoundException
  langs:
  - csharp
  - vb
  name: CultureNotFoundException()
  fullName: System.Globalization.CultureNotFoundException.CultureNotFoundException()
  type: Constructor
  source:
    remote:
      path: src/mscorlib/src/System/Globalization/CultureNotFoundException.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: .ctor
    path: src/mscorlib/src/System/Globalization/CultureNotFoundException.cs
    startLine: 21
  assemblies:
  - System.Globalization
  namespace: System.Globalization
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Globalization.CultureNotFoundException\" data-throw-if-not-resolved=\"false\"></xref> class with its message string set to a system-supplied message.</p>\n"
  remarks: "\n<p>\n<xref href=\"System.Globalization.CultureNotFoundException\" data-throw-if-not-resolved=\"false\"></xref> uses the HRESULT COR_E_ARGUMENT, which has the value 0x80070057.</p>\n"
  example:
  - 
  syntax:
    content: public CultureNotFoundException()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Globalization.CultureNotFoundException.#ctor(System.String)
  commentId: M:System.Globalization.CultureNotFoundException.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Globalization.CultureNotFoundException
  langs:
  - csharp
  - vb
  name: CultureNotFoundException(String)
  fullName: System.Globalization.CultureNotFoundException.CultureNotFoundException(System.String)
  type: Constructor
  source:
    remote:
      path: src/mscorlib/src/System/Globalization/CultureNotFoundException.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: .ctor
    path: src/mscorlib/src/System/Globalization/CultureNotFoundException.cs
    startLine: 26
  assemblies:
  - System.Globalization
  namespace: System.Globalization
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Globalization.CultureNotFoundException\" data-throw-if-not-resolved=\"false\"></xref> class with the specified error message.</p>\n"
  remarks: "\n<p>This constructor initializes the <xref href=\"System.Globalization.CultureNotFoundException.Message\" data-throw-if-not-resolved=\"false\"></xref> property of the new instance using the value of the <em>message</em> parameter. The content of the <em>message</em> parameter is intended to be understood by humans. The caller of this constructor is required to ensure that this string has been localized for the current system culture.</p>\n<p>\n<xref href=\"System.Globalization.CultureNotFoundException\" data-throw-if-not-resolved=\"false\"></xref> uses the HRESULT COR_E_ARGUMENT, which has the value 0x80070057.</p>\n"
  example:
  - 
  syntax:
    content: public CultureNotFoundException(string message)
    content.vb: Public Sub New(message As String)
    parameters:
    - id: message
      type: System.String
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Globalization.CultureNotFoundException.#ctor(System.String,System.Exception)
  commentId: M:System.Globalization.CultureNotFoundException.#ctor(System.String,System.Exception)
  id: '#ctor(System.String,System.Exception)'
  parent: System.Globalization.CultureNotFoundException
  langs:
  - csharp
  - vb
  name: CultureNotFoundException(String, Exception)
  fullName: System.Globalization.CultureNotFoundException.CultureNotFoundException(System.String, System.Exception)
  type: Constructor
  source:
    remote:
      path: src/mscorlib/src/System/Globalization/CultureNotFoundException.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: .ctor
    path: src/mscorlib/src/System/Globalization/CultureNotFoundException.cs
    startLine: 36
  assemblies:
  - System.Globalization
  namespace: System.Globalization
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Globalization.CultureNotFoundException\" data-throw-if-not-resolved=\"false\"></xref> class with a specified error message and a reference to the inner exception that is the cause of this exception.</p>\n"
  remarks: "\n<p>This constructor initializes the <xref href=\"System.Globalization.CultureNotFoundException.Message\" data-throw-if-not-resolved=\"false\"></xref> property of the new instance using the value of the <em>message</em> parameter. The content of the <em>message</em> parameter is intended to be understood by humans. The caller of this constructor is required to ensure that this string has been localized for the current system culture.</p>\n<p>An exception that is thrown as a direct result of a previous exception should include a reference to the previous exception in the <xref href=\"System.Exception.InnerException\" data-throw-if-not-resolved=\"false\"></xref> property. The <xref href=\"System.Exception.InnerException\" data-throw-if-not-resolved=\"false\"></xref> property returns the same value that is passed into the constructor, or <strong>null</strong> if the <xref href=\"System.Exception.InnerException\" data-throw-if-not-resolved=\"false\"></xref> property does not supply the inner exception value to the constructor.</p>\n"
  example:
  - 
  syntax:
    content: public CultureNotFoundException(string message, Exception innerException)
    content.vb: Public Sub New(message As String, innerException As Exception)
    parameters:
    - id: message
      type: System.String
    - id: innerException
      type: System.Exception
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Globalization.CultureNotFoundException.#ctor(System.String,System.String)
  commentId: M:System.Globalization.CultureNotFoundException.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: System.Globalization.CultureNotFoundException
  langs:
  - csharp
  - vb
  name: CultureNotFoundException(String, String)
  fullName: System.Globalization.CultureNotFoundException.CultureNotFoundException(System.String, System.String)
  type: Constructor
  source:
    remote:
      path: src/mscorlib/src/System/Globalization/CultureNotFoundException.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: .ctor
    path: src/mscorlib/src/System/Globalization/CultureNotFoundException.cs
    startLine: 31
  assemblies:
  - System.Globalization
  namespace: System.Globalization
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Globalization.CultureNotFoundException\" data-throw-if-not-resolved=\"false\"></xref> class with a specified error message and the name of the parameter that is the cause this exception.</p>\n"
  remarks: "\n<p>This constructor initializes the <xref href=\"System.Globalization.CultureNotFoundException.Message\" data-throw-if-not-resolved=\"false\"></xref> property of the new instance using the value of the <em>message</em> parameter. The content of the <em>message</em> parameter is intended to be understood by humans. The caller of this constructor is required to ensure that this string has been localized for the current system culture.</p>\n<p>This constructor initializes the <xref href=\"System.ArgumentException.ParamName\" data-throw-if-not-resolved=\"false\"></xref> property of the new instance using <em>paramName</em>. The content of <em>paramName</em> is intended to be understood by humans.</p>\n<p>\n<xref href=\"System.Globalization.CultureNotFoundException\" data-throw-if-not-resolved=\"false\"></xref> uses the HRESULT COR_E_ARGUMENT, which has the value 0x80070057.</p>\n"
  example:
  - 
  syntax:
    content: public CultureNotFoundException(string paramName, string message)
    content.vb: Public Sub New(paramName As String, message As String)
    parameters:
    - id: paramName
      type: System.String
    - id: message
      type: System.String
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Globalization.CultureNotFoundException.#ctor(System.String,System.String,System.Exception)
  commentId: M:System.Globalization.CultureNotFoundException.#ctor(System.String,System.String,System.Exception)
  id: '#ctor(System.String,System.String,System.Exception)'
  parent: System.Globalization.CultureNotFoundException
  langs:
  - csharp
  - vb
  name: CultureNotFoundException(String, String, Exception)
  fullName: System.Globalization.CultureNotFoundException.CultureNotFoundException(System.String, System.String, System.Exception)
  type: Constructor
  source:
    remote:
      path: src/mscorlib/src/System/Globalization/CultureNotFoundException.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: .ctor
    path: src/mscorlib/src/System/Globalization/CultureNotFoundException.cs
    startLine: 60
  assemblies:
  - System.Globalization
  namespace: System.Globalization
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Globalization.CultureNotFoundException\" data-throw-if-not-resolved=\"false\"></xref> class with a specified error message, the invalid Culture Name, and a reference to the inner exception that is the cause of this exception.</p>\n"
  remarks: "\n<p>This constructor initializes the <xref href=\"System.Globalization.CultureNotFoundException.Message\" data-throw-if-not-resolved=\"false\"></xref> property of the new instance using the value of the <em>message</em> parameter. The content of the <em>message</em> parameter is intended to be understood by humans. The caller of this constructor is required to ensure that this string has been localized for the current system culture.</p>\n<p>\n<xref href=\"System.Exception.InnerException\" data-throw-if-not-resolved=\"false\"></xref> property. The <xref href=\"System.Exception.InnerException\" data-throw-if-not-resolved=\"false\"></xref> property returns the same value that is passed into the constructor, or <strong>null</strong> if the <xref href=\"System.Exception.InnerException\" data-throw-if-not-resolved=\"false\"></xref> property does not supply the inner exception value to the constructor.</p>\n"
  example:
  - 
  syntax:
    content: public CultureNotFoundException(string message, string invalidCultureName, Exception innerException)
    content.vb: Public Sub New(message As String, invalidCultureName As String, innerException As Exception)
    parameters:
    - id: message
      type: System.String
    - id: invalidCultureName
      type: System.String
    - id: innerException
      type: System.Exception
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Globalization.CultureNotFoundException.#ctor(System.String,System.String,System.String)
  commentId: M:System.Globalization.CultureNotFoundException.#ctor(System.String,System.String,System.String)
  id: '#ctor(System.String,System.String,System.String)'
  parent: System.Globalization.CultureNotFoundException
  langs:
  - csharp
  - vb
  name: CultureNotFoundException(String, String, String)
  fullName: System.Globalization.CultureNotFoundException.CultureNotFoundException(System.String, System.String, System.String)
  type: Constructor
  source:
    remote:
      path: src/mscorlib/src/System/Globalization/CultureNotFoundException.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: .ctor
    path: src/mscorlib/src/System/Globalization/CultureNotFoundException.cs
    startLine: 54
  assemblies:
  - System.Globalization
  namespace: System.Globalization
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Globalization.CultureNotFoundException\" data-throw-if-not-resolved=\"false\"></xref> class with a specified error message, the invalid Culture Name, and the name of the parameter that is the cause this exception.</p>\n"
  remarks: "\n<p>This constructor initializes the <xref href=\"System.Globalization.CultureNotFoundException.Message\" data-throw-if-not-resolved=\"false\"></xref> property of the new instance using the value of the <em>message</em> parameter. The content of the <em>message</em> parameter is intended to be understood by humans. The caller of this constructor is required to ensure that this string has been localized for the current system culture.</p>\n<p>This constructor initializes the <xref href=\"System.ArgumentException.ParamName\" data-throw-if-not-resolved=\"false\"></xref> property of the new instance using <em>paramName</em>. The content of <em>paramName</em> is intended to be understood by humans.</p>\n<p>\n<xref href=\"System.Globalization.CultureNotFoundException\" data-throw-if-not-resolved=\"false\"></xref> uses the HRESULT COR_E_ARGUMENT, which has the value 0x80070057.</p>\n"
  example:
  - 
  syntax:
    content: public CultureNotFoundException(string paramName, string invalidCultureName, string message)
    content.vb: Public Sub New(paramName As String, invalidCultureName As String, message As String)
    parameters:
    - id: paramName
      type: System.String
    - id: invalidCultureName
      type: System.String
    - id: message
      type: System.String
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Globalization.CultureNotFoundException.InvalidCultureName
  commentId: P:System.Globalization.CultureNotFoundException.InvalidCultureName
  id: InvalidCultureName
  parent: System.Globalization.CultureNotFoundException
  langs:
  - csharp
  - vb
  name: InvalidCultureName
  fullName: System.Globalization.CultureNotFoundException.InvalidCultureName
  type: Property
  source:
    remote:
      path: src/mscorlib/src/System/Globalization/CultureNotFoundException.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: InvalidCultureName
    path: src/mscorlib/src/System/Globalization/CultureNotFoundException.cs
    startLine: 94
  assemblies:
  - System.Globalization
  namespace: System.Globalization
  summary: "\n<p>Gets the culture name that cannot be found.</p>\n"
  remarks: "\n<p>If the calling code attempted to instantiate a <xref href=\"System.Globalization.CultureInfo\" data-throw-if-not-resolved=\"false\"></xref> object by using a culture name, the <xref href=\"System.Globalization.CultureNotFoundException.InvalidCultureName\" data-throw-if-not-resolved=\"false\"></xref> property contains the invalid name. Otherwise, its value is <strong>null</strong>. </p>\n"
  example:
  - 
  syntax:
    content: public virtual string InvalidCultureName { get; }
    content.vb: Public Overridable ReadOnly Property InvalidCultureName As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: System.Globalization.CultureNotFoundException.Message
  commentId: P:System.Globalization.CultureNotFoundException.Message
  id: Message
  parent: System.Globalization.CultureNotFoundException
  langs:
  - csharp
  - vb
  name: Message
  fullName: System.Globalization.CultureNotFoundException.Message
  type: Property
  source:
    remote:
      path: src/mscorlib/src/System/Globalization/CultureNotFoundException.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Message
    path: src/mscorlib/src/System/Globalization/CultureNotFoundException.cs
    startLine: 122
  assemblies:
  - System.Globalization
  namespace: System.Globalization
  summary: "\n<p>Gets the error message that explains the reason for the exception.</p>\n"
  example:
  - 
  syntax:
    content: public override string Message { get; }
    content.vb: Public Overrides ReadOnly Property Message As String
    parameters: []
    return:
      type: System.String
  overridden: System.ArgumentException.Message
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
references:
- uid: System.Globalization
  isExternal: false
  name: System.Globalization
  fullName: System.Globalization
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System.Exception
  parent: System
  isExternal: false
  name: Exception
  fullName: System.Exception
- uid: System.SystemException
  parent: System
  isExternal: true
  name: SystemException
  fullName: System.SystemException
- uid: System.ArgumentException
  parent: System
  isExternal: false
  name: ArgumentException
  fullName: System.ArgumentException
- uid: System.Runtime.InteropServices._Exception
  parent: System.Runtime.InteropServices
  isExternal: true
  name: _Exception
  fullName: System.Runtime.InteropServices._Exception
- uid: System.Runtime.Serialization.ISerializable
  parent: System.Runtime.Serialization
  isExternal: false
  name: ISerializable
  fullName: System.Runtime.Serialization.ISerializable
- uid: System.ArgumentException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.ArgumentException
  isExternal: true
  name: GetObjectData(SerializationInfo, StreamingContext)
  fullName: System.ArgumentException.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)
  spec.csharp:
  - uid: System.ArgumentException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
    name: GetObjectData
    fullName: System.ArgumentException.GetObjectData
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Runtime.Serialization.SerializationInfo
    name: SerializationInfo
    fullName: System.Runtime.Serialization.SerializationInfo
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Runtime.Serialization.StreamingContext
    name: StreamingContext
    fullName: System.Runtime.Serialization.StreamingContext
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ArgumentException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
    name: GetObjectData
    fullName: System.ArgumentException.GetObjectData
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Runtime.Serialization.SerializationInfo
    name: SerializationInfo
    fullName: System.Runtime.Serialization.SerializationInfo
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Runtime.Serialization.StreamingContext
    name: StreamingContext
    fullName: System.Runtime.Serialization.StreamingContext
    isExternal: true
  - name: )
    fullName: )
- uid: System.ArgumentException.ParamName
  parent: System.ArgumentException
  isExternal: false
  name: ParamName
  fullName: System.ArgumentException.ParamName
- uid: System.Exception.GetBaseException
  parent: System.Exception
  isExternal: false
  name: GetBaseException()
  fullName: System.Exception.GetBaseException()
  spec.csharp:
  - uid: System.Exception.GetBaseException
    name: GetBaseException
    fullName: System.Exception.GetBaseException
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Exception.GetBaseException
    name: GetBaseException
    fullName: System.Exception.GetBaseException
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Exception.ToString
  parent: System.Exception
  isExternal: false
  name: ToString()
  fullName: System.Exception.ToString()
  spec.csharp:
  - uid: System.Exception.ToString
    name: ToString
    fullName: System.Exception.ToString
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Exception.ToString
    name: ToString
    fullName: System.Exception.ToString
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Exception.GetType
  parent: System.Exception
  isExternal: true
  name: GetType()
  fullName: System.Exception.GetType()
  spec.csharp:
  - uid: System.Exception.GetType
    name: GetType
    fullName: System.Exception.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Exception.GetType
    name: GetType
    fullName: System.Exception.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Exception.Data
  parent: System.Exception
  isExternal: false
  name: Data
  fullName: System.Exception.Data
- uid: System.Exception.InnerException
  parent: System.Exception
  isExternal: false
  name: InnerException
  fullName: System.Exception.InnerException
- uid: System.Exception.TargetSite
  parent: System.Exception
  isExternal: true
  name: TargetSite
  fullName: System.Exception.TargetSite
- uid: System.Exception.StackTrace
  parent: System.Exception
  isExternal: false
  name: StackTrace
  fullName: System.Exception.StackTrace
- uid: System.Exception.HelpLink
  parent: System.Exception
  isExternal: false
  name: HelpLink
  fullName: System.Exception.HelpLink
- uid: System.Exception.Source
  parent: System.Exception
  isExternal: false
  name: Source
  fullName: System.Exception.Source
- uid: System.Exception.HResult
  parent: System.Exception
  isExternal: false
  name: HResult
  fullName: System.Exception.HResult
- uid: System.Exception.SerializeObjectState
  parent: System.Exception
  isExternal: true
  name: SerializeObjectState
  fullName: System.Exception.SerializeObjectState
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Runtime.InteropServices
  isExternal: false
  name: System.Runtime.InteropServices
  fullName: System.Runtime.InteropServices
- uid: System.Runtime.Serialization
  isExternal: false
  name: System.Runtime.Serialization
  fullName: System.Runtime.Serialization
- uid: System.String
  parent: System
  isExternal: false
  name: String
  fullName: System.String
- uid: System.ArgumentException.Message
  parent: System.ArgumentException
  isExternal: false
  name: Message
  fullName: System.ArgumentException.Message
