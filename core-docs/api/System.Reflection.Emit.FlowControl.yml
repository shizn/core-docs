items:
- uid: System.Reflection.Emit.FlowControl
  commentId: T:System.Reflection.Emit.FlowControl
  id: FlowControl
  parent: System.Reflection.Emit
  children:
  - System.Reflection.Emit.FlowControl.Branch
  - System.Reflection.Emit.FlowControl.Break
  - System.Reflection.Emit.FlowControl.Call
  - System.Reflection.Emit.FlowControl.Cond_Branch
  - System.Reflection.Emit.FlowControl.Meta
  - System.Reflection.Emit.FlowControl.Next
  - System.Reflection.Emit.FlowControl.Return
  - System.Reflection.Emit.FlowControl.Throw
  langs:
  - csharp
  - vb
  name: FlowControl
  fullName: System.Reflection.Emit.FlowControl
  type: Enum
  source:
    remote:
      path: src/mscorlib/src/System/Reflection/Emit/FlowControl.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: FlowControl
    path: src/mscorlib/src/System/Reflection/Emit/FlowControl.cs
    startLine: 17
  assemblies:
  - System.Reflection.Primitives
  namespace: System.Reflection.Emit
  summary: "\n<p>Describes how an instruction alters the flow of control.</p>\n"
  syntax:
    content: >-
      [Serializable]

      [ComVisible(true)]

      public enum FlowControl
    content.vb: >-
      <Serializable>

      <ComVisible(True)>

      Public Enum FlowControl
  modifiers.csharp:
  - public
  - enum
  modifiers.vb:
  - Public
  - Enum
- uid: System.Reflection.Emit.FlowControl.Branch
  commentId: F:System.Reflection.Emit.FlowControl.Branch
  id: Branch
  parent: System.Reflection.Emit.FlowControl
  langs:
  - csharp
  - vb
  name: Branch
  fullName: System.Reflection.Emit.FlowControl.Branch
  type: Field
  source:
    remote:
      path: src/mscorlib/src/System/Reflection/Emit/FlowControl.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Branch
    path: src/mscorlib/src/System/Reflection/Emit/FlowControl.cs
    startLine: 22
  assemblies:
  - System.Reflection.Primitives
  namespace: System.Reflection.Emit
  summary: "\n<p>Branch instruction.</p>\n"
  syntax:
    content: Branch = 0
    return:
      type: System.Reflection.Emit.FlowControl
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Reflection.Emit.FlowControl.Break
  commentId: F:System.Reflection.Emit.FlowControl.Break
  id: Break
  parent: System.Reflection.Emit.FlowControl
  langs:
  - csharp
  - vb
  name: Break
  fullName: System.Reflection.Emit.FlowControl.Break
  type: Field
  source:
    remote:
      path: src/mscorlib/src/System/Reflection/Emit/FlowControl.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Break
    path: src/mscorlib/src/System/Reflection/Emit/FlowControl.cs
    startLine: 23
  assemblies:
  - System.Reflection.Primitives
  namespace: System.Reflection.Emit
  summary: "\n<p>Break instruction.</p>\n"
  syntax:
    content: Break = 1
    return:
      type: System.Reflection.Emit.FlowControl
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Reflection.Emit.FlowControl.Call
  commentId: F:System.Reflection.Emit.FlowControl.Call
  id: Call
  parent: System.Reflection.Emit.FlowControl
  langs:
  - csharp
  - vb
  name: Call
  fullName: System.Reflection.Emit.FlowControl.Call
  type: Field
  source:
    remote:
      path: src/mscorlib/src/System/Reflection/Emit/FlowControl.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Call
    path: src/mscorlib/src/System/Reflection/Emit/FlowControl.cs
    startLine: 24
  assemblies:
  - System.Reflection.Primitives
  namespace: System.Reflection.Emit
  summary: "\n<p>Call instruction.</p>\n"
  syntax:
    content: Call = 2
    return:
      type: System.Reflection.Emit.FlowControl
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Reflection.Emit.FlowControl.Cond_Branch
  commentId: F:System.Reflection.Emit.FlowControl.Cond_Branch
  id: Cond_Branch
  parent: System.Reflection.Emit.FlowControl
  langs:
  - csharp
  - vb
  name: Cond_Branch
  fullName: System.Reflection.Emit.FlowControl.Cond_Branch
  type: Field
  source:
    remote:
      path: src/mscorlib/src/System/Reflection/Emit/FlowControl.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Cond_Branch
    path: src/mscorlib/src/System/Reflection/Emit/FlowControl.cs
    startLine: 25
  assemblies:
  - System.Reflection.Primitives
  namespace: System.Reflection.Emit
  summary: "\n<p>Conditional branch instruction.</p>\n"
  syntax:
    content: Cond_Branch = 3
    return:
      type: System.Reflection.Emit.FlowControl
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Reflection.Emit.FlowControl.Meta
  commentId: F:System.Reflection.Emit.FlowControl.Meta
  id: Meta
  parent: System.Reflection.Emit.FlowControl
  langs:
  - csharp
  - vb
  name: Meta
  fullName: System.Reflection.Emit.FlowControl.Meta
  type: Field
  source:
    remote:
      path: src/mscorlib/src/System/Reflection/Emit/FlowControl.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Meta
    path: src/mscorlib/src/System/Reflection/Emit/FlowControl.cs
    startLine: 26
  assemblies:
  - System.Reflection.Primitives
  namespace: System.Reflection.Emit
  summary: "\n<p>Provides information about a subsequent instruction. For example, the <strong>Unaligned</strong> instruction of <strong>Reflection.Emit.Opcodes</strong> has <strong>FlowControl.Meta</strong> and specifies that the subsequent pointer instruction might be unaligned.</p>\n"
  syntax:
    content: Meta = 4
    return:
      type: System.Reflection.Emit.FlowControl
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Reflection.Emit.FlowControl.Next
  commentId: F:System.Reflection.Emit.FlowControl.Next
  id: Next
  parent: System.Reflection.Emit.FlowControl
  langs:
  - csharp
  - vb
  name: Next
  fullName: System.Reflection.Emit.FlowControl.Next
  type: Field
  source:
    remote:
      path: src/mscorlib/src/System/Reflection/Emit/FlowControl.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Next
    path: src/mscorlib/src/System/Reflection/Emit/FlowControl.cs
    startLine: 27
  assemblies:
  - System.Reflection.Primitives
  namespace: System.Reflection.Emit
  summary: "\n<p>Normal flow of control.</p>\n"
  syntax:
    content: Next = 5
    return:
      type: System.Reflection.Emit.FlowControl
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Reflection.Emit.FlowControl.Return
  commentId: F:System.Reflection.Emit.FlowControl.Return
  id: Return
  parent: System.Reflection.Emit.FlowControl
  langs:
  - csharp
  - vb
  name: Return
  fullName: System.Reflection.Emit.FlowControl.Return
  type: Field
  source:
    remote:
      path: src/mscorlib/src/System/Reflection/Emit/FlowControl.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Return
    path: src/mscorlib/src/System/Reflection/Emit/FlowControl.cs
    startLine: 33
  assemblies:
  - System.Reflection.Primitives
  namespace: System.Reflection.Emit
  summary: "\n<p>Return instruction.</p>\n"
  syntax:
    content: Return = 7
    return:
      type: System.Reflection.Emit.FlowControl
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Reflection.Emit.FlowControl.Throw
  commentId: F:System.Reflection.Emit.FlowControl.Throw
  id: Throw
  parent: System.Reflection.Emit.FlowControl
  langs:
  - csharp
  - vb
  name: Throw
  fullName: System.Reflection.Emit.FlowControl.Throw
  type: Field
  source:
    remote:
      path: src/mscorlib/src/System/Reflection/Emit/FlowControl.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Throw
    path: src/mscorlib/src/System/Reflection/Emit/FlowControl.cs
    startLine: 34
  assemblies:
  - System.Reflection.Primitives
  namespace: System.Reflection.Emit
  summary: "\n<p>Exception throw instruction.</p>\n"
  syntax:
    content: Throw = 8
    return:
      type: System.Reflection.Emit.FlowControl
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
references:
- uid: System.Reflection.Emit
  isExternal: false
  name: System.Reflection.Emit
  fullName: System.Reflection.Emit
- uid: System.Reflection.Emit.FlowControl
  parent: System.Reflection.Emit
  isExternal: false
  name: FlowControl
  fullName: System.Reflection.Emit.FlowControl
