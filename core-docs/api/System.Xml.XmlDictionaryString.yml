items:
- uid: System.Xml.XmlDictionaryString
  commentId: T:System.Xml.XmlDictionaryString
  id: XmlDictionaryString
  parent: System.Xml
  children:
  - System.Xml.XmlDictionaryString.#ctor(System.Xml.IXmlDictionary,System.String,System.Int32)
  - System.Xml.XmlDictionaryString.Dictionary
  - System.Xml.XmlDictionaryString.Empty
  - System.Xml.XmlDictionaryString.Key
  - System.Xml.XmlDictionaryString.ToString
  - System.Xml.XmlDictionaryString.Value
  langs:
  - csharp
  - vb
  name: XmlDictionaryString
  fullName: System.Xml.XmlDictionaryString
  type: Class
  source:
    remote:
      path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: XmlDictionaryString
    path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
    startLine: 271
  assemblies:
  - System.Runtime.Serialization.Xml
  namespace: System.Xml
  summary: "\n<p>Represents an entry stored in a <xref href=\"System.Xml.XmlDictionary\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  remarks: "\n<p>This class represents an entry in an <xref href=\"System.Xml.IXmlDictionary\" data-throw-if-not-resolved=\"false\"></xref>.  It associates an integer value with a string value for use by <xref href=\"System.Xml.XmlDictionaryReader\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"System.Xml.XmlDictionaryWriter\" data-throw-if-not-resolved=\"false\"></xref> implementations.</p>\n"
  example:
  - 
  syntax:
    content: public class XmlDictionaryString
    content.vb: Public Class XmlDictionaryString
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: System.Xml.XmlDictionaryString.#ctor(System.Xml.IXmlDictionary,System.String,System.Int32)
  commentId: M:System.Xml.XmlDictionaryString.#ctor(System.Xml.IXmlDictionary,System.String,System.Int32)
  id: '#ctor(System.Xml.IXmlDictionary,System.String,System.Int32)'
  parent: System.Xml.XmlDictionaryString
  langs:
  - csharp
  - vb
  name: XmlDictionaryString(IXmlDictionary, String, Int32)
  fullName: System.Xml.XmlDictionaryString.XmlDictionaryString(System.Xml.IXmlDictionary, System.String, System.Int32)
  type: Constructor
  source:
    remote:
      path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
    startLine: 273
  assemblies:
  - System.Runtime.Serialization.Xml
  namespace: System.Xml
  summary: "\n<p>Creates an instance of this class. </p>\n"
  remarks: "\n<p>The <xref href=\"System.Xml.XmlDictionaryString\" data-throw-if-not-resolved=\"false\"></xref> does not automatically add itself to the specified dictionary.</p>\n"
  example:
  - 
  syntax:
    content: public XmlDictionaryString(IXmlDictionary dictionary, string value, int key)
    content.vb: Public Sub New(dictionary As IXmlDictionary, value As String, key As Integer)
    parameters:
    - id: dictionary
      type: System.Xml.IXmlDictionary
      description: "\n<p>The <xref href=\"System.Xml.IXmlDictionary\" data-throw-if-not-resolved=\"false\"></xref> containing this instance.</p>\n"
    - id: value
      type: System.String
      description: "\n<p>The string that is the value of the dictionary entry.</p>\n"
    - id: key
      type: System.Int32
      description: "\n<p>The integer that is the key of the dictionary entry.</p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>dictionary</em> is <strong>null</strong>.</p>\n"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>value</em> is <strong>null</strong>.</p>\n"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>\n<em>key</em> is less than 0 or greater than <xref href=\"System.Int32.MaxValue\" data-throw-if-not-resolved=\"false\"></xref> / 4.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Xml.XmlDictionaryString.Dictionary
  commentId: P:System.Xml.XmlDictionaryString.Dictionary
  id: Dictionary
  parent: System.Xml.XmlDictionaryString
  langs:
  - csharp
  - vb
  name: Dictionary
  fullName: System.Xml.XmlDictionaryString.Dictionary
  type: Property
  source:
    remote:
      path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Dictionary
    path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
    startLine: 274
  assemblies:
  - System.Runtime.Serialization.Xml
  namespace: System.Xml
  summary: "\n<p>Represents the <xref href=\"System.Xml.IXmlDictionary\" data-throw-if-not-resolved=\"false\"></xref> passed to the constructor of this instance of <xref href=\"System.Xml.XmlDictionaryString\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  example:
  - 
  syntax:
    content: public IXmlDictionary Dictionary { get; }
    content.vb: Public ReadOnly Property Dictionary As IXmlDictionary
    parameters: []
    return:
      type: System.Xml.IXmlDictionary
      description: "\n<p>The <xref href=\"System.Xml.IXmlDictionary\" data-throw-if-not-resolved=\"false\"></xref> for this dictionary entry.</p>\n"
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Xml.XmlDictionaryString.Empty
  commentId: P:System.Xml.XmlDictionaryString.Empty
  id: Empty
  parent: System.Xml.XmlDictionaryString
  langs:
  - csharp
  - vb
  name: Empty
  fullName: System.Xml.XmlDictionaryString.Empty
  type: Property
  source:
    remote:
      path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Empty
    path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
    startLine: 275
  assemblies:
  - System.Runtime.Serialization.Xml
  namespace: System.Xml
  summary: "\n<p>Gets an <xref href=\"System.Xml.XmlDictionaryString\" data-throw-if-not-resolved=\"false\"></xref> representing the empty string.</p>\n"
  example:
  - 
  syntax:
    content: public static XmlDictionaryString Empty { get; }
    content.vb: Public Shared ReadOnly Property Empty As XmlDictionaryString
    parameters: []
    return:
      type: System.Xml.XmlDictionaryString
      description: "\n<p>An <xref href=\"System.Xml.XmlDictionaryString\" data-throw-if-not-resolved=\"false\"></xref> representing the empty string.</p>\n"
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: System.Xml.XmlDictionaryString.Key
  commentId: P:System.Xml.XmlDictionaryString.Key
  id: Key
  parent: System.Xml.XmlDictionaryString
  langs:
  - csharp
  - vb
  name: Key
  fullName: System.Xml.XmlDictionaryString.Key
  type: Property
  source:
    remote:
      path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Key
    path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
    startLine: 276
  assemblies:
  - System.Runtime.Serialization.Xml
  namespace: System.Xml
  summary: "\n<p>Gets the integer key for this instance of the class.  </p>\n"
  remarks: "\n<p>This property must be greater than 0 and less than <xref href=\"System.Int32.MaxValue\" data-throw-if-not-resolved=\"false\"></xref> / 4.</p>\n"
  example:
  - 
  syntax:
    content: public int Key { get; }
    content.vb: Public ReadOnly Property Key As Integer
    parameters: []
    return:
      type: System.Int32
      description: "\n<p>The integer key for this instance of the class. </p>\n"
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Xml.XmlDictionaryString.Value
  commentId: P:System.Xml.XmlDictionaryString.Value
  id: Value
  parent: System.Xml.XmlDictionaryString
  langs:
  - csharp
  - vb
  name: Value
  fullName: System.Xml.XmlDictionaryString.Value
  type: Property
  source:
    remote:
      path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Value
    path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
    startLine: 277
  assemblies:
  - System.Runtime.Serialization.Xml
  namespace: System.Xml
  summary: "\n<p>Gets the string value for this instance of the class.  </p>\n"
  example:
  - 
  syntax:
    content: public string Value { get; }
    content.vb: Public ReadOnly Property Value As String
    parameters: []
    return:
      type: System.String
      description: "\n<p>The string value for this instance of the class. </p>\n"
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Xml.XmlDictionaryString.ToString
  commentId: M:System.Xml.XmlDictionaryString.ToString
  id: ToString
  parent: System.Xml.XmlDictionaryString
  langs:
  - csharp
  - vb
  name: ToString()
  fullName: System.Xml.XmlDictionaryString.ToString()
  type: Method
  source:
    remote:
      path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ToString
    path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
    startLine: 278
  assemblies:
  - System.Runtime.Serialization.Xml
  namespace: System.Xml
  summary: "\n<p>Displays a text representation of this object.</p>\n"
  example:
  - 
  syntax:
    content: public override string ToString()
    content.vb: Public Overrides Function ToString As String
    return:
      type: System.String
      description: "\n<p>The string value for this instance of the class. </p>\n"
  overridden: System.Object.ToString
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: System.Xml
  isExternal: false
  name: System.Xml
  fullName: System.Xml
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Xml.IXmlDictionary
  parent: System.Xml
  isExternal: false
  name: IXmlDictionary
  fullName: System.Xml.IXmlDictionary
- uid: System.String
  parent: System
  isExternal: false
  name: String
  fullName: System.String
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  fullName: System.Int32
- uid: System.Xml.XmlDictionaryString
  parent: System.Xml
  isExternal: false
  name: XmlDictionaryString
  fullName: System.Xml.XmlDictionaryString
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.ArgumentNullException
  isExternal: false
  name: ArgumentNullException
  fullName: System.ArgumentNullException
- uid: System.ArgumentOutOfRangeException
  isExternal: false
  name: ArgumentOutOfRangeException
  fullName: System.ArgumentOutOfRangeException
