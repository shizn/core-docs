items:
- uid: System.Net.NetworkCredential
  commentId: T:System.Net.NetworkCredential
  id: NetworkCredential
  parent: System.Net
  children:
  - System.Net.NetworkCredential.#ctor
  - System.Net.NetworkCredential.#ctor(System.String,System.String)
  - System.Net.NetworkCredential.#ctor(System.String,System.String,System.String)
  - System.Net.NetworkCredential.Domain
  - System.Net.NetworkCredential.GetCredential(System.String,System.Int32,System.String)
  - System.Net.NetworkCredential.GetCredential(System.Uri,System.String)
  - System.Net.NetworkCredential.Password
  - System.Net.NetworkCredential.UserName
  langs:
  - csharp
  - vb
  name: NetworkCredential
  fullName: System.Net.NetworkCredential
  type: Class
  source:
    remote:
      path: src/System.Net.Primitives/src/System/Net/NetworkCredential.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: NetworkCredential
    path: src/System.Net.Primitives/src/System/Net/NetworkCredential.cs
    startLine: 19
  assemblies:
  - System.Net.Primitives
  namespace: System.Net
  summary: Provides credentials for password-based authentication schemes such as basic, digest, NTLM, and Kerberos authentication.
  syntax:
    content: 'public class NetworkCredential : object, ICredentials, ICredentialsByHost'
    content.vb: >-
      Public Class NetworkCredential
          Inherits Object
          Implements ICredentials, ICredentialsByHost
  inheritance:
  - System.Object
  implements:
  - System.Net.ICredentials
  - System.Net.ICredentialsByHost
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: System.Net.NetworkCredential.#ctor
  commentId: M:System.Net.NetworkCredential.#ctor
  id: '#ctor'
  parent: System.Net.NetworkCredential
  langs:
  - csharp
  - vb
  name: NetworkCredential()
  fullName: System.Net.NetworkCredential.NetworkCredential()
  type: Constructor
  source:
    remote:
      path: src/System.Net.Primitives/src/System/Net/NetworkCredential.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Net.Primitives/src/System/Net/NetworkCredential.cs
    startLine: 25
  assemblies:
  - System.Net.Primitives
  namespace: System.Net
  summary: Initializes a new instance of the <xref href="System.Net.NetworkCredential" data-throw-if-not-resolved="false"></xref> class.
  syntax:
    content: public NetworkCredential()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Net.NetworkCredential.#ctor(System.String,System.String)
  commentId: M:System.Net.NetworkCredential.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: System.Net.NetworkCredential
  langs:
  - csharp
  - vb
  name: NetworkCredential(String, String)
  fullName: System.Net.NetworkCredential.NetworkCredential(System.String, System.String)
  type: Constructor
  source:
    remote:
      path: src/System.Net.Primitives/src/System/Net/NetworkCredential.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Net.Primitives/src/System/Net/NetworkCredential.cs
    startLine: 36
  assemblies:
  - System.Net.Primitives
  namespace: System.Net
  summary: Initializes a new instance of the <xref href="System.Net.NetworkCredential" data-throw-if-not-resolved="false"></xref> class with the specified user name and password.
  syntax:
    content: public NetworkCredential(string userName, string password)
    content.vb: Public Sub New(userName As String, password As String)
    parameters:
    - id: userName
      type: System.String
      description: 'The user name associated with the credentials. '
    - id: password
      type: System.String
      description: 'The password for the user name associated with the credentials. '
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Net.NetworkCredential.#ctor(System.String,System.String,System.String)
  commentId: M:System.Net.NetworkCredential.#ctor(System.String,System.String,System.String)
  id: '#ctor(System.String,System.String,System.String)'
  parent: System.Net.NetworkCredential
  langs:
  - csharp
  - vb
  name: NetworkCredential(String, String, String)
  fullName: System.Net.NetworkCredential.NetworkCredential(System.String, System.String, System.String)
  type: Constructor
  source:
    remote:
      path: src/System.Net.Primitives/src/System/Net/NetworkCredential.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Net.Primitives/src/System/Net/NetworkCredential.cs
    startLine: 47
  assemblies:
  - System.Net.Primitives
  namespace: System.Net
  summary: Initializes a new instance of the <xref href="System.Net.NetworkCredential" data-throw-if-not-resolved="false"></xref> class with the specified user name, password, and domain.
  syntax:
    content: public NetworkCredential(string userName, string password, string domain)
    content.vb: Public Sub New(userName As String, password As String, domain As String)
    parameters:
    - id: userName
      type: System.String
      description: 'The user name associated with the credentials. '
    - id: password
      type: System.String
      description: 'The password for the user name associated with the credentials. '
    - id: domain
      type: System.String
      description: 'The domain associated with these credentials. '
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Net.NetworkCredential.Domain
  commentId: P:System.Net.NetworkCredential.Domain
  id: Domain
  parent: System.Net.NetworkCredential
  langs:
  - csharp
  - vb
  name: Domain
  fullName: System.Net.NetworkCredential.Domain
  type: Property
  source:
    remote:
      path: src/System.Net.Primitives/src/System/Net/NetworkCredential.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Domain
    path: src/System.Net.Primitives/src/System/Net/NetworkCredential.cs
    startLine: 94
  assemblies:
  - System.Net.Primitives
  namespace: System.Net
  summary: Gets or sets the domain or computer name that verifies the credentials.
  syntax:
    content: public string Domain { get; set; }
    content.vb: Public Property Domain As String
    parameters: []
    return:
      type: System.String
      description: The name of the domain associated with the credentials.
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Net.NetworkCredential.Password
  commentId: P:System.Net.NetworkCredential.Password
  id: Password
  parent: System.Net.NetworkCredential
  langs:
  - csharp
  - vb
  name: Password
  fullName: System.Net.NetworkCredential.Password
  type: Property
  source:
    remote:
      path: src/System.Net.Primitives/src/System/Net/NetworkCredential.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Password
    path: src/System.Net.Primitives/src/System/Net/NetworkCredential.cs
    startLine: 76
  assemblies:
  - System.Net.Primitives
  namespace: System.Net
  summary: Gets or sets the password for the user name associated with the credentials.
  syntax:
    content: public string Password { get; set; }
    content.vb: Public Property Password As String
    parameters: []
    return:
      type: System.String
      description: The password associated with the credentials. If this <xref href="System.Net.NetworkCredential" data-throw-if-not-resolved="false"></xref> instance was initialized with the <em>password</em> parameter set to null, then the <xref href="System.Net.NetworkCredential.Password" data-throw-if-not-resolved="false"></xref> property will return an empty string.
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Net.NetworkCredential.UserName
  commentId: P:System.Net.NetworkCredential.UserName
  id: UserName
  parent: System.Net.NetworkCredential
  langs:
  - csharp
  - vb
  name: UserName
  fullName: System.Net.NetworkCredential.UserName
  type: Property
  source:
    remote:
      path: src/System.Net.Primitives/src/System/Net/NetworkCredential.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: UserName
    path: src/System.Net.Primitives/src/System/Net/NetworkCredential.cs
    startLine: 59
  assemblies:
  - System.Net.Primitives
  namespace: System.Net
  summary: Gets or sets the user name associated with the credentials.
  syntax:
    content: public string UserName { get; set; }
    content.vb: Public Property UserName As String
    parameters: []
    return:
      type: System.String
      description: The user name associated with the credentials.
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Net.NetworkCredential.GetCredential(System.String,System.Int32,System.String)
  commentId: M:System.Net.NetworkCredential.GetCredential(System.String,System.Int32,System.String)
  id: GetCredential(System.String,System.Int32,System.String)
  parent: System.Net.NetworkCredential
  langs:
  - csharp
  - vb
  name: GetCredential(String, Int32, String)
  fullName: System.Net.NetworkCredential.GetCredential(System.String, System.Int32, System.String)
  type: Method
  source:
    remote:
      path: src/System.Net.Primitives/ref/System.Net.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetCredential
    path: src/System.Net.Primitives/ref/System.Net.Primitives.cs
    startLine: 237
  assemblies:
  - System.Net.Primitives
  namespace: System.Net
  summary: Returns an instance of the <xref href="System.Net.NetworkCredential" data-throw-if-not-resolved="false"></xref> class for the specified host, port, and authentication type.
  syntax:
    content: public NetworkCredential GetCredential(string host, int port, string authenticationType)
    content.vb: Public Function GetCredential(host As String, port As Integer, authenticationType As String) As NetworkCredential
    parameters:
    - id: host
      type: System.String
      description: The host computer that authenticates the client.
    - id: port
      type: System.Int32
      description: The port on the <em>host</em> that the client communicates with.
    - id: authenticationType
      type: System.String
      description: 'The type of authentication requested, as defined in the <xref href="System.Net.IAuthenticationModule.AuthenticationType" data-throw-if-not-resolved="false"></xref> property. '
    return:
      type: System.Net.NetworkCredential
      description: A <xref href="System.Net.NetworkCredential" data-throw-if-not-resolved="false"></xref> for the specified host, port, and authentication protocol, or null if there are no credentials available for the specified host, port, and authentication protocol.
  implements:
  - System.Net.ICredentialsByHost.GetCredential(System.String,System.Int32,System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Net.NetworkCredential.GetCredential(System.Uri,System.String)
  commentId: M:System.Net.NetworkCredential.GetCredential(System.Uri,System.String)
  id: GetCredential(System.Uri,System.String)
  parent: System.Net.NetworkCredential
  langs:
  - csharp
  - vb
  name: GetCredential(Uri, String)
  fullName: System.Net.NetworkCredential.GetCredential(System.Uri, System.String)
  type: Method
  source:
    remote:
      path: src/System.Net.Primitives/ref/System.Net.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetCredential
    path: src/System.Net.Primitives/ref/System.Net.Primitives.cs
    startLine: 238
  assemblies:
  - System.Net.Primitives
  namespace: System.Net
  summary: Returns an instance of the <xref href="System.Net.NetworkCredential" data-throw-if-not-resolved="false"></xref> class for the specified Uniform Resource Identifier (URI) and authentication type.
  syntax:
    content: public NetworkCredential GetCredential(Uri uri, string authType)
    content.vb: Public Function GetCredential(uri As Uri, authType As String) As NetworkCredential
    parameters:
    - id: uri
      type: System.Uri
      description: 'The URI that the client provides authentication for. '
    - id: authType
      type: System.String
      description: 'The type of authentication requested, as defined in the <xref href="System.Net.IAuthenticationModule.AuthenticationType" data-throw-if-not-resolved="false"></xref> property. '
    return:
      type: System.Net.NetworkCredential
      description: A <xref href="System.Net.NetworkCredential" data-throw-if-not-resolved="false"></xref> object.
  implements:
  - System.Net.ICredentials.GetCredential(System.Uri,System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: System.Net
  isExternal: false
  name: System.Net
  fullName: System.Net
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System.Net.ICredentials
  parent: System.Net
  isExternal: false
  name: ICredentials
  fullName: System.Net.ICredentials
- uid: System.Net.ICredentialsByHost
  parent: System.Net
  isExternal: false
  name: ICredentialsByHost
  fullName: System.Net.ICredentialsByHost
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.String
  parent: System
  isExternal: false
  name: String
  fullName: System.String
- uid: System.Net.ICredentialsByHost.GetCredential(System.String,System.Int32,System.String)
  parent: System.Net.ICredentialsByHost
  isExternal: true
  name: GetCredential(String, Int32, String)
  fullName: System.Net.ICredentialsByHost.GetCredential(System.String, System.Int32, System.String)
  spec.csharp:
  - uid: System.Net.ICredentialsByHost.GetCredential(System.String,System.Int32,System.String)
    name: GetCredential
    fullName: System.Net.ICredentialsByHost.GetCredential
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Net.ICredentialsByHost.GetCredential(System.String,System.Int32,System.String)
    name: GetCredential
    fullName: System.Net.ICredentialsByHost.GetCredential
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  fullName: System.Int32
- uid: System.Net.NetworkCredential
  parent: System.Net
  isExternal: false
  name: NetworkCredential
  fullName: System.Net.NetworkCredential
- uid: System.Net.ICredentials.GetCredential(System.Uri,System.String)
  parent: System.Net.ICredentials
  isExternal: true
  name: GetCredential(Uri, String)
  fullName: System.Net.ICredentials.GetCredential(System.Uri, System.String)
  spec.csharp:
  - uid: System.Net.ICredentials.GetCredential(System.Uri,System.String)
    name: GetCredential
    fullName: System.Net.ICredentials.GetCredential
  - name: (
    fullName: (
  - uid: System.Uri
    name: Uri
    fullName: System.Uri
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Net.ICredentials.GetCredential(System.Uri,System.String)
    name: GetCredential
    fullName: System.Net.ICredentials.GetCredential
  - name: (
    fullName: (
  - uid: System.Uri
    name: Uri
    fullName: System.Uri
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: System.Uri
  parent: System
  isExternal: false
  name: Uri
  fullName: System.Uri
