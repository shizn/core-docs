items:
- uid: System.Collections.StructuralComparisons
  commentId: T:System.Collections.StructuralComparisons
  id: StructuralComparisons
  parent: System.Collections
  children:
  - System.Collections.StructuralComparisons.StructuralComparer
  - System.Collections.StructuralComparisons.StructuralEqualityComparer
  langs:
  - csharp
  - vb
  name: StructuralComparisons
  fullName: System.Collections.StructuralComparisons
  type: Class
  source:
    remote:
      path: src/mscorlib/src/System/Collections/StructuralComparisons.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: StructuralComparisons
    path: src/mscorlib/src/System/Collections/StructuralComparisons.cs
    startLine: 9
  assemblies:
  - System.Collections
  namespace: System.Collections
  summary: "\n<p>Provides objects for performing a structural comparison of two collection objects.</p>\n"
  remarks: "\n<p>The <xref href=\"System.Collections.StructuralComparisons\" data-throw-if-not-resolved=\"false\"></xref> class returns the following two predefined comparison objects:</p>\n<ul><li>\n<p>An <xref href=\"System.Collections.IComparer\" data-throw-if-not-resolved=\"false\"></xref> implementation that can be passed to a method such as <xref href=\"System.Array.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)\" data-throw-if-not-resolved=\"false\"></xref> or <xref href=\"System.Tuple`3.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)\" data-throw-if-not-resolved=\"false\"></xref> to perform a structural comparison of two objects. It is designed to indicate whether the first object precedes, follows, or occurs in the same position as the second object in the sort order. </p>\n</li><li>\n<p>An <xref href=\"System.Collections.IEqualityComparer\" data-throw-if-not-resolved=\"false\"></xref> implementation that can be passed to a method such as <xref href=\"System.Array.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)\" data-throw-if-not-resolved=\"false\"></xref> or <xref href=\"System.Tuple`3.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)\" data-throw-if-not-resolved=\"false\"></xref> to perform a comparison for structural equality.</p>\n</li></ul>\n<p>The objects can be used to perform a structural comparison or a structural equality comparison of two collection objects, such as array or tuple objects. In structural comparison, two objects are compared based on their values. Objects can be ordered based on some criteria, and two objects are considered equal when they have equal values, not because they reference the same physical object </p>\n"
  example:
  - 
  syntax:
    content: public class StructuralComparisons
    content.vb: Public Class StructuralComparisons
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: System.Collections.StructuralComparisons.StructuralComparer
  commentId: P:System.Collections.StructuralComparisons.StructuralComparer
  id: StructuralComparer
  parent: System.Collections.StructuralComparisons
  langs:
  - csharp
  - vb
  name: StructuralComparer
  fullName: System.Collections.StructuralComparisons.StructuralComparer
  type: Property
  source:
    remote:
      path: src/mscorlib/src/System/Collections/StructuralComparisons.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: StructuralComparer
    path: src/mscorlib/src/System/Collections/StructuralComparisons.cs
    startLine: 14
  assemblies:
  - System.Collections
  namespace: System.Collections
  summary: "\n<p>Gets a predefined object that performs a structural comparison of two objects.</p>\n"
  remarks: "\n<p>When the <xref href=\"System.Collections.IComparer\" data-throw-if-not-resolved=\"false\"></xref> object returned by this property is passed to the comparison method of a collection object, such as <xref href=\"System.Array.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)\" data-throw-if-not-resolved=\"false\"></xref> or <xref href=\"System.Tuple`3.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)\" data-throw-if-not-resolved=\"false\"></xref>, its <xref href=\"System.Collections.IComparer.Compare(System.Object,System.Object)\" data-throw-if-not-resolved=\"false\"></xref> method is called for each member of an array or for each component of a tuple. This implementation of the <xref href=\"System.Collections.IComparer.Compare(System.Object,System.Object)\" data-throw-if-not-resolved=\"false\"></xref> method behaves as follows when it compares each item of a collection object with the corresponding item of another collection object:</p>\n<ul><li>\n<p>It considers two items that are <strong>null</strong> to be equal, and considers a null item to be less than an item that is not null.</p>\n</li><li>\n<p>If the first item in the comparison can be cast to an <xref href=\"System.Collections.IStructuralComparable\" data-throw-if-not-resolved=\"false\"></xref> object (in other words, if it is a collection object that implements the <xref href=\"System.Collections.IStructuralComparable\" data-throw-if-not-resolved=\"false\"></xref> interface), it calls the <xref href=\"System.Collections.IStructuralComparable.CompareTo(System.Object,System.Collections.IComparer)\" data-throw-if-not-resolved=\"false\"></xref> method.</p>\n</li><li>\n<p>If the first item in the comparison cannot be cast to an <xref href=\"System.Collections.IStructuralComparable\" data-throw-if-not-resolved=\"false\"></xref> object (in other words, if it is not a collection object that implements the <xref href=\"System.Collections.IStructuralComparable\" data-throw-if-not-resolved=\"false\"></xref> interface), it calls the <strong>Comparer.Default.Compare</strong> method.</p>\n</li></ul>\n"
  example:
  - 
  syntax:
    content: public static IComparer StructuralComparer { get; }
    content.vb: Public Shared ReadOnly Property StructuralComparer As IComparer
    parameters: []
    return:
      type: System.Collections.IComparer
  seealso:
  - type: System.Collections.Comparer
    commentId: T:System.Collections.Comparer
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: System.Collections.StructuralComparisons.StructuralEqualityComparer
  commentId: P:System.Collections.StructuralComparisons.StructuralEqualityComparer
  id: StructuralEqualityComparer
  parent: System.Collections.StructuralComparisons
  langs:
  - csharp
  - vb
  name: StructuralEqualityComparer
  fullName: System.Collections.StructuralComparisons.StructuralEqualityComparer
  type: Property
  source:
    remote:
      path: src/mscorlib/src/System/Collections/StructuralComparisons.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: StructuralEqualityComparer
    path: src/mscorlib/src/System/Collections/StructuralComparisons.cs
    startLine: 25
  assemblies:
  - System.Collections
  namespace: System.Collections
  summary: "\n<p>Gets a predefined object that compares two objects for structural equality.</p>\n"
  remarks: "\n<p>When the <xref href=\"System.Collections.IComparer\" data-throw-if-not-resolved=\"false\"></xref> object returned by this property is passed to the equality comparison method of a collection object, such as <xref href=\"System.Array.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)\" data-throw-if-not-resolved=\"false\"></xref> or <xref href=\"System.Tuple`3.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)\" data-throw-if-not-resolved=\"false\"></xref>, its <xref href=\"System.Collections.IEqualityComparer.Equals(System.Object,System.Object)\" data-throw-if-not-resolved=\"false\"></xref> method is called for each member of an array or for each component of a tuple. This implementation of the <xref href=\"System.Collections.IEqualityComparer.Equals(System.Object,System.Object)\" data-throw-if-not-resolved=\"false\"></xref> method behaves as follows when it compares each item of a collection object with the corresponding item of another collection object:</p>\n<ul><li>\n<p>If both items are <strong>null</strong>, it considers the two items to be equal.</p>\n</li><li>\n<p>If one item is null but the other item is not, it considers the two items to be unequal.</p>\n</li><li>\n<p>If the first item in the comparison can be cast to an <xref href=\"System.Collections.IStructuralEquatable\" data-throw-if-not-resolved=\"false\"></xref> object (in other words, if it is a collection object that implements the <xref href=\"System.Collections.IStructuralEquatable\" data-throw-if-not-resolved=\"false\"></xref> interface), it calls the <xref href=\"System.Collections.IStructuralEquatable.Equals(System.Object,System.Collections.IEqualityComparer)\" data-throw-if-not-resolved=\"false\"></xref> method.</p>\n</li><li>\n<p>If the first item in the comparison cannot be cast to an <xref href=\"System.Collections.IStructuralEquatable\" data-throw-if-not-resolved=\"false\"></xref> object (in other words, if it is not a collection object that implements the <xref href=\"System.Collections.IStructuralEquatable\" data-throw-if-not-resolved=\"false\"></xref> interface), it calls the item's <strong>Equals</strong> method.</p>\n</li></ul>\n"
  example:
  - 
  syntax:
    content: public static IEqualityComparer StructuralEqualityComparer { get; }
    content.vb: Public Shared ReadOnly Property StructuralEqualityComparer As IEqualityComparer
    parameters: []
    return:
      type: System.Collections.IEqualityComparer
  seealso:
  - type: System.Collections.Comparer
    commentId: T:System.Collections.Comparer
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
references:
- uid: System.Collections
  isExternal: false
  name: System.Collections
  fullName: System.Collections
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Collections.IComparer
  parent: System.Collections
  isExternal: false
  name: IComparer
  fullName: System.Collections.IComparer
- uid: System.Collections.IEqualityComparer
  parent: System.Collections
  isExternal: false
  name: IEqualityComparer
  fullName: System.Collections.IEqualityComparer
