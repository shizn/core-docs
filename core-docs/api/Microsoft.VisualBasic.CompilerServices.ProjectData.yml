items:
- uid: Microsoft.VisualBasic.CompilerServices.ProjectData
  commentId: T:Microsoft.VisualBasic.CompilerServices.ProjectData
  id: ProjectData
  parent: Microsoft.VisualBasic.CompilerServices
  children:
  - Microsoft.VisualBasic.CompilerServices.ProjectData.ClearProjectError
  - Microsoft.VisualBasic.CompilerServices.ProjectData.SetProjectError(System.Exception)
  - Microsoft.VisualBasic.CompilerServices.ProjectData.SetProjectError(System.Exception,System.Int32)
  langs:
  - csharp
  - vb
  name: ProjectData
  fullName: Microsoft.VisualBasic.CompilerServices.ProjectData
  type: Class
  source:
    remote:
      path: src/Microsoft.VisualBasic/ref/Microsoft.VisualBasic.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ProjectData
    path: src/Microsoft.VisualBasic/ref/Microsoft.VisualBasic.cs
    startLine: 196
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.CompilerServices
  summary: "\n<p>Provides helpers for the Visual Basic <strong>Err</strong> object. </p>\n"
  remarks: "\n<p>For more information, see <xref href=\"Microsoft.VisualBasic.Information.Err\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: public sealed class ProjectData
    content.vb: Public NotInheritable Class ProjectData
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: Microsoft.VisualBasic.CompilerServices.ProjectData.ClearProjectError
  commentId: M:Microsoft.VisualBasic.CompilerServices.ProjectData.ClearProjectError
  id: ClearProjectError
  parent: Microsoft.VisualBasic.CompilerServices.ProjectData
  langs:
  - csharp
  - vb
  name: ClearProjectError()
  fullName: Microsoft.VisualBasic.CompilerServices.ProjectData.ClearProjectError()
  type: Method
  source:
    remote:
      path: src/Microsoft.VisualBasic/ref/Microsoft.VisualBasic.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ClearProjectError
    path: src/Microsoft.VisualBasic/ref/Microsoft.VisualBasic.cs
    startLine: 200
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.CompilerServices
  summary: "\n<p>Performs the work for the <strong>Clear</strong> method of the <strong>Err</strong> object. A helper method.</p>\n"
  remarks: "\n<p>For more information, see <xref href=\"Microsoft.VisualBasic.ErrObject.Clear\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: >-
      [SecuritySafeCritical]

      public static void ClearProjectError()
    content.vb: >-
      <SecuritySafeCritical>

      Public Shared Sub ClearProjectError
  attributes:
  - type: System.Security.SecuritySafeCriticalAttribute
    ctor: System.Security.SecuritySafeCriticalAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.VisualBasic.CompilerServices.ProjectData.SetProjectError(System.Exception)
  commentId: M:Microsoft.VisualBasic.CompilerServices.ProjectData.SetProjectError(System.Exception)
  id: SetProjectError(System.Exception)
  parent: Microsoft.VisualBasic.CompilerServices.ProjectData
  langs:
  - csharp
  - vb
  name: SetProjectError(Exception)
  fullName: Microsoft.VisualBasic.CompilerServices.ProjectData.SetProjectError(System.Exception)
  type: Method
  source:
    remote:
      path: src/Microsoft.VisualBasic/ref/Microsoft.VisualBasic.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: SetProjectError
    path: src/Microsoft.VisualBasic/ref/Microsoft.VisualBasic.cs
    startLine: 202
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.CompilerServices
  summary: "\n<p>The Visual Basic compiler uses this helper method to capture exceptions in the <strong>Err</strong> object.</p>\n"
  remarks: "\n<p>For more information, see <xref href=\"Microsoft.VisualBasic.Information.Err\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: >-
      [SecuritySafeCritical]

      public static void SetProjectError(Exception ex)
    content.vb: >-
      <SecuritySafeCritical>

      Public Shared Sub SetProjectError(ex As Exception)
    parameters:
    - id: ex
      type: System.Exception
      description: "\n<p>The <xref href=\"System.Exception\" data-throw-if-not-resolved=\"false\"></xref> object to be caught.</p>\n"
  attributes:
  - type: System.Security.SecuritySafeCriticalAttribute
    ctor: System.Security.SecuritySafeCriticalAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.VisualBasic.CompilerServices.ProjectData.SetProjectError(System.Exception,System.Int32)
  commentId: M:Microsoft.VisualBasic.CompilerServices.ProjectData.SetProjectError(System.Exception,System.Int32)
  id: SetProjectError(System.Exception,System.Int32)
  parent: Microsoft.VisualBasic.CompilerServices.ProjectData
  langs:
  - csharp
  - vb
  name: SetProjectError(Exception, Int32)
  fullName: Microsoft.VisualBasic.CompilerServices.ProjectData.SetProjectError(System.Exception, System.Int32)
  type: Method
  source:
    remote:
      path: src/Microsoft.VisualBasic/ref/Microsoft.VisualBasic.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: SetProjectError
    path: src/Microsoft.VisualBasic/ref/Microsoft.VisualBasic.cs
    startLine: 204
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.CompilerServices
  summary: "\n<p>The Visual Basic compiler uses this helper method to capture exceptions in the <strong>Err</strong> object.</p>\n"
  remarks: "\n<p>For more information, see <xref href=\"Microsoft.VisualBasic.Information.Err\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: >-
      [SecuritySafeCritical]

      public static void SetProjectError(Exception ex, int lErl)
    content.vb: >-
      <SecuritySafeCritical>

      Public Shared Sub SetProjectError(ex As Exception, lErl As Integer)
    parameters:
    - id: ex
      type: System.Exception
      description: "\n<p>The <xref href=\"System.Exception\" data-throw-if-not-resolved=\"false\"></xref> object to be caught.</p>\n"
    - id: lErl
      type: System.Int32
      description: "\n<p>The line number of the exception.</p>\n"
  attributes:
  - type: System.Security.SecuritySafeCriticalAttribute
    ctor: System.Security.SecuritySafeCriticalAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Microsoft.VisualBasic.CompilerServices
  isExternal: false
  name: Microsoft.VisualBasic.CompilerServices
  fullName: Microsoft.VisualBasic.CompilerServices
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Exception
  parent: System
  isExternal: false
  name: Exception
  fullName: System.Exception
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  fullName: System.Int32
