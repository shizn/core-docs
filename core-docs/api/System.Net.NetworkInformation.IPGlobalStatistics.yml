items:
- uid: System.Net.NetworkInformation.IPGlobalStatistics
  commentId: T:System.Net.NetworkInformation.IPGlobalStatistics
  id: IPGlobalStatistics
  parent: System.Net.NetworkInformation
  children:
  - System.Net.NetworkInformation.IPGlobalStatistics.#ctor
  - System.Net.NetworkInformation.IPGlobalStatistics.DefaultTtl
  - System.Net.NetworkInformation.IPGlobalStatistics.ForwardingEnabled
  - System.Net.NetworkInformation.IPGlobalStatistics.NumberOfInterfaces
  - System.Net.NetworkInformation.IPGlobalStatistics.NumberOfIPAddresses
  - System.Net.NetworkInformation.IPGlobalStatistics.NumberOfRoutes
  - System.Net.NetworkInformation.IPGlobalStatistics.OutputPacketRequests
  - System.Net.NetworkInformation.IPGlobalStatistics.OutputPacketRoutingDiscards
  - System.Net.NetworkInformation.IPGlobalStatistics.OutputPacketsDiscarded
  - System.Net.NetworkInformation.IPGlobalStatistics.OutputPacketsWithNoRoute
  - System.Net.NetworkInformation.IPGlobalStatistics.PacketFragmentFailures
  - System.Net.NetworkInformation.IPGlobalStatistics.PacketReassembliesRequired
  - System.Net.NetworkInformation.IPGlobalStatistics.PacketReassemblyFailures
  - System.Net.NetworkInformation.IPGlobalStatistics.PacketReassemblyTimeout
  - System.Net.NetworkInformation.IPGlobalStatistics.PacketsFragmented
  - System.Net.NetworkInformation.IPGlobalStatistics.PacketsReassembled
  - System.Net.NetworkInformation.IPGlobalStatistics.ReceivedPackets
  - System.Net.NetworkInformation.IPGlobalStatistics.ReceivedPacketsDelivered
  - System.Net.NetworkInformation.IPGlobalStatistics.ReceivedPacketsDiscarded
  - System.Net.NetworkInformation.IPGlobalStatistics.ReceivedPacketsForwarded
  - System.Net.NetworkInformation.IPGlobalStatistics.ReceivedPacketsWithAddressErrors
  - System.Net.NetworkInformation.IPGlobalStatistics.ReceivedPacketsWithHeadersErrors
  - System.Net.NetworkInformation.IPGlobalStatistics.ReceivedPacketsWithUnknownProtocol
  langs:
  - csharp
  - vb
  name: IPGlobalStatistics
  fullName: System.Net.NetworkInformation.IPGlobalStatistics
  type: Class
  source:
    remote:
      path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IPGlobalStatistics
    path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs
    startLine: 146
  assemblies:
  - System.Net.NetworkInformation
  namespace: System.Net.NetworkInformation
  summary: "\n<p>Provides Internet Protocol (IP) statistical data.</p>\n"
  remarks: "\n<p>This class is used by the <xref href=\"System.Net.NetworkInformation.IPGlobalProperties.GetIPv4GlobalStatistics\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"System.Net.NetworkInformation.IPGlobalProperties.GetIPv6GlobalStatistics\" data-throw-if-not-resolved=\"false\"></xref> methods to return IP traffic information.</p>\n<p>The Internet protocol is used to move IP packets from a source computer to a destination computer. IP also handles dividing a packet that is too large into multiple packets that are small enough for transport, in a process known as fragmentation.</p>\n<p>The properties in this class correlate to the Management Information Base objects for IP defined in IETF RFC 2011.</p>\n"
  example:
  - "\n<p>The following code code example displays IP statistics.</p>NCLNetInfoReport#1"
  syntax:
    content: public abstract class IPGlobalStatistics
    content.vb: Public MustInherit Class IPGlobalStatistics
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: System.Net.NetworkInformation.IPGlobalStatistics.#ctor
  commentId: M:System.Net.NetworkInformation.IPGlobalStatistics.#ctor
  id: '#ctor'
  parent: System.Net.NetworkInformation.IPGlobalStatistics
  langs:
  - csharp
  - vb
  name: IPGlobalStatistics()
  fullName: System.Net.NetworkInformation.IPGlobalStatistics.IPGlobalStatistics()
  type: Constructor
  source:
    remote:
      path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs
    startLine: 148
  assemblies:
  - System.Net.NetworkInformation
  namespace: System.Net.NetworkInformation
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Net.NetworkInformation.IPGlobalStatistics\" data-throw-if-not-resolved=\"false\"></xref> class.</p>\n"
  remarks: "\n<p>This constructor can be called only by classes that derive from <xref href=\"System.Net.NetworkInformation.IPGlobalStatistics\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: protected IPGlobalStatistics()
    content.vb: Protected Sub New
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: System.Net.NetworkInformation.IPGlobalStatistics.DefaultTtl
  commentId: P:System.Net.NetworkInformation.IPGlobalStatistics.DefaultTtl
  id: DefaultTtl
  parent: System.Net.NetworkInformation.IPGlobalStatistics
  langs:
  - csharp
  - vb
  name: DefaultTtl
  fullName: System.Net.NetworkInformation.IPGlobalStatistics.DefaultTtl
  type: Property
  source:
    remote:
      path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: DefaultTtl
    path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs
    startLine: 149
  assemblies:
  - System.Net.NetworkInformation
  namespace: System.Net.NetworkInformation
  summary: "\n<p>Gets the default time-to-live (TTL) value for Internet Protocol (IP) packets.</p>\n"
  remarks: "\n<p>The TTL value is reported as the number of routing nodes that can forward a packet before it is discarded. Each node decrements the current TTL value in a packet before forwarding it. If the TTL value reaches zero, the packet is deemed undeliverable and is discarded. Note that when a packet travels from one node to another, this is also known as a \"hop\".</p>\n"
  example:
  - "\n<p>The following code example displays the value of this property.</p>NCLNetInfo2#14"
  syntax:
    content: public abstract int DefaultTtl { get; }
    content.vb: Public MustOverride ReadOnly Property DefaultTtl As Integer
    parameters: []
    return:
      type: System.Int32
      description: "\n<p>An <xref href=\"System.Int64\" data-throw-if-not-resolved=\"false\"></xref> value that specifies the TTL.</p>\n"
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
- uid: System.Net.NetworkInformation.IPGlobalStatistics.ForwardingEnabled
  commentId: P:System.Net.NetworkInformation.IPGlobalStatistics.ForwardingEnabled
  id: ForwardingEnabled
  parent: System.Net.NetworkInformation.IPGlobalStatistics
  langs:
  - csharp
  - vb
  name: ForwardingEnabled
  fullName: System.Net.NetworkInformation.IPGlobalStatistics.ForwardingEnabled
  type: Property
  source:
    remote:
      path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ForwardingEnabled
    path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs
    startLine: 150
  assemblies:
  - System.Net.NetworkInformation
  namespace: System.Net.NetworkInformation
  summary: "\n<p>Gets a <xref href=\"System.Boolean\" data-throw-if-not-resolved=\"false\"></xref> value that specifies whether Internet Protocol (IP) packet forwarding is enabled.</p>\n"
  remarks: "\n<p>This value determines whether the computer forwards IP datagrams destined for another computer. Typically, routers forward packets and host computers do not.</p>\n"
  example:
  - "\n<p>The following code example displays the value of this property.</p>NCLNetInfo2#14"
  syntax:
    content: public abstract bool ForwardingEnabled { get; }
    content.vb: Public MustOverride ReadOnly Property ForwardingEnabled As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: "\n<p>A <xref href=\"System.Boolean\" data-throw-if-not-resolved=\"false\"></xref> value that specifies whether packet forwarding is enabled.</p>\n"
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
- uid: System.Net.NetworkInformation.IPGlobalStatistics.NumberOfInterfaces
  commentId: P:System.Net.NetworkInformation.IPGlobalStatistics.NumberOfInterfaces
  id: NumberOfInterfaces
  parent: System.Net.NetworkInformation.IPGlobalStatistics
  langs:
  - csharp
  - vb
  name: NumberOfInterfaces
  fullName: System.Net.NetworkInformation.IPGlobalStatistics.NumberOfInterfaces
  type: Property
  source:
    remote:
      path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: NumberOfInterfaces
    path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs
    startLine: 151
  assemblies:
  - System.Net.NetworkInformation
  namespace: System.Net.NetworkInformation
  summary: "\n<p>Gets the number of network interfaces.</p>\n"
  remarks: "\n<p>The data returned by this property includes loopback interfaces. </p>\n<p>Network interfaces are also known as network adapters.</p>\n"
  syntax:
    content: public abstract int NumberOfInterfaces { get; }
    content.vb: Public MustOverride ReadOnly Property NumberOfInterfaces As Integer
    parameters: []
    return:
      type: System.Int32
      description: "\n<p>An <xref href=\"System.Int64\" data-throw-if-not-resolved=\"false\"></xref> value containing the number of network interfaces for the address family used to obtain this <xref href=\"System.Net.NetworkInformation.IPGlobalStatistics\" data-throw-if-not-resolved=\"false\"></xref> instance.</p>\n"
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
- uid: System.Net.NetworkInformation.IPGlobalStatistics.NumberOfIPAddresses
  commentId: P:System.Net.NetworkInformation.IPGlobalStatistics.NumberOfIPAddresses
  id: NumberOfIPAddresses
  parent: System.Net.NetworkInformation.IPGlobalStatistics
  langs:
  - csharp
  - vb
  name: NumberOfIPAddresses
  fullName: System.Net.NetworkInformation.IPGlobalStatistics.NumberOfIPAddresses
  type: Property
  source:
    remote:
      path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: NumberOfIPAddresses
    path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs
    startLine: 152
  assemblies:
  - System.Net.NetworkInformation
  namespace: System.Net.NetworkInformation
  summary: "\n<p>Gets the number of Internet Protocol (IP) addresses assigned to the local computer.</p>\n"
  remarks: "\n<p>The data returned by this property includes addresses of pseudo network interfaces such as tunnels.</p>\n<p>If this instance was obtained by calling <xref href=\"System.Net.NetworkInformation.IPGlobalProperties.GetIPv4GlobalStatistics\" data-throw-if-not-resolved=\"false\"></xref>, this property returns the number of IPv4 addresses assigned to the local computer. Similarly, if this instance was obtained by calling <xref href=\"System.Net.NetworkInformation.IPGlobalProperties.GetIPv6GlobalStatistics\" data-throw-if-not-resolved=\"false\"></xref>, this property returns the number of IPv6 addresses assigned to the local computer.</p>\n"
  syntax:
    content: public abstract int NumberOfIPAddresses { get; }
    content.vb: Public MustOverride ReadOnly Property NumberOfIPAddresses As Integer
    parameters: []
    return:
      type: System.Int32
      description: "\n<p>An <xref href=\"System.Int64\" data-throw-if-not-resolved=\"false\"></xref> value that indicates the number of IP addresses assigned to the address family (Internet Protocol version 4 or Internet Protocol version 6) described by this object.</p>\n"
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
- uid: System.Net.NetworkInformation.IPGlobalStatistics.NumberOfRoutes
  commentId: P:System.Net.NetworkInformation.IPGlobalStatistics.NumberOfRoutes
  id: NumberOfRoutes
  parent: System.Net.NetworkInformation.IPGlobalStatistics
  langs:
  - csharp
  - vb
  name: NumberOfRoutes
  fullName: System.Net.NetworkInformation.IPGlobalStatistics.NumberOfRoutes
  type: Property
  source:
    remote:
      path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: NumberOfRoutes
    path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs
    startLine: 153
  assemblies:
  - System.Net.NetworkInformation
  namespace: System.Net.NetworkInformation
  summary: "\n<p>Gets the number of routes in the Internet Protocol (IP) routing table.</p>\n"
  syntax:
    content: public abstract int NumberOfRoutes { get; }
    content.vb: Public MustOverride ReadOnly Property NumberOfRoutes As Integer
    parameters: []
    return:
      type: System.Int32
      description: "\n<p>An <xref href=\"System.Int64\" data-throw-if-not-resolved=\"false\"></xref> value that specifies the total number of routes in the routing table.</p>\n"
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
- uid: System.Net.NetworkInformation.IPGlobalStatistics.OutputPacketRequests
  commentId: P:System.Net.NetworkInformation.IPGlobalStatistics.OutputPacketRequests
  id: OutputPacketRequests
  parent: System.Net.NetworkInformation.IPGlobalStatistics
  langs:
  - csharp
  - vb
  name: OutputPacketRequests
  fullName: System.Net.NetworkInformation.IPGlobalStatistics.OutputPacketRequests
  type: Property
  source:
    remote:
      path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: OutputPacketRequests
    path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs
    startLine: 154
  assemblies:
  - System.Net.NetworkInformation
  namespace: System.Net.NetworkInformation
  summary: "\n<p>Gets the number of outbound Internet Protocol (IP) packets.</p>\n"
  remarks: "\n<p>The number of outbound packets does not include the number of packets that have been forwarded.</p>\n"
  example:
  - "\n<p>The following code example displays statistics for outbound IP packets.</p>NCLNetInfo2#17"
  syntax:
    content: public abstract long OutputPacketRequests { get; }
    content.vb: Public MustOverride ReadOnly Property OutputPacketRequests As Long
    parameters: []
    return:
      type: System.Int64
      description: "\n<p>An <xref href=\"System.Int64\" data-throw-if-not-resolved=\"false\"></xref> value that specifies the total number of outgoing packets.</p>\n"
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
- uid: System.Net.NetworkInformation.IPGlobalStatistics.OutputPacketRoutingDiscards
  commentId: P:System.Net.NetworkInformation.IPGlobalStatistics.OutputPacketRoutingDiscards
  id: OutputPacketRoutingDiscards
  parent: System.Net.NetworkInformation.IPGlobalStatistics
  langs:
  - csharp
  - vb
  name: OutputPacketRoutingDiscards
  fullName: System.Net.NetworkInformation.IPGlobalStatistics.OutputPacketRoutingDiscards
  type: Property
  source:
    remote:
      path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: OutputPacketRoutingDiscards
    path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs
    startLine: 155
  assemblies:
  - System.Net.NetworkInformation
  namespace: System.Net.NetworkInformation
  summary: "\n<p>Gets the number of routes that have been discarded from the routing table.</p>\n"
  remarks: "\n<p>One possible reason for discarding a valid routing table entry could be to free buffer space for other entries.</p>\n"
  example:
  - "\n<p>The following code example displays statistics for outbound IP packets.</p>NCLNetInfo2#17"
  syntax:
    content: public abstract long OutputPacketRoutingDiscards { get; }
    content.vb: Public MustOverride ReadOnly Property OutputPacketRoutingDiscards As Long
    parameters: []
    return:
      type: System.Int64
      description: "\n<p>An <xref href=\"System.Int64\" data-throw-if-not-resolved=\"false\"></xref> value that specifies the total number of valid routes that have been discarded.</p>\n"
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
- uid: System.Net.NetworkInformation.IPGlobalStatistics.OutputPacketsDiscarded
  commentId: P:System.Net.NetworkInformation.IPGlobalStatistics.OutputPacketsDiscarded
  id: OutputPacketsDiscarded
  parent: System.Net.NetworkInformation.IPGlobalStatistics
  langs:
  - csharp
  - vb
  name: OutputPacketsDiscarded
  fullName: System.Net.NetworkInformation.IPGlobalStatistics.OutputPacketsDiscarded
  type: Property
  source:
    remote:
      path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: OutputPacketsDiscarded
    path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs
    startLine: 156
  assemblies:
  - System.Net.NetworkInformation
  namespace: System.Net.NetworkInformation
  summary: "\n<p>Gets the number of transmitted Internet Protocol (IP) packets that have been discarded.</p>\n"
  remarks: "\n<p>The data returned by this property does not include packets discarded because of errors that made the packets undeliverable. Packets included in this data are typically discarded due to network issues, such as insufficient buffer space.</p>\n"
  example:
  - "\n<p>The following code example displays statistics for outbound IP packets.</p>NCLNetInfo2#17"
  syntax:
    content: public abstract long OutputPacketsDiscarded { get; }
    content.vb: Public MustOverride ReadOnly Property OutputPacketsDiscarded As Long
    parameters: []
    return:
      type: System.Int64
      description: "\n<p>An <xref href=\"System.Int64\" data-throw-if-not-resolved=\"false\"></xref> value that specifies the total number of outgoing packets that have been discarded.</p>\n"
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
- uid: System.Net.NetworkInformation.IPGlobalStatistics.OutputPacketsWithNoRoute
  commentId: P:System.Net.NetworkInformation.IPGlobalStatistics.OutputPacketsWithNoRoute
  id: OutputPacketsWithNoRoute
  parent: System.Net.NetworkInformation.IPGlobalStatistics
  langs:
  - csharp
  - vb
  name: OutputPacketsWithNoRoute
  fullName: System.Net.NetworkInformation.IPGlobalStatistics.OutputPacketsWithNoRoute
  type: Property
  source:
    remote:
      path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: OutputPacketsWithNoRoute
    path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs
    startLine: 157
  assemblies:
  - System.Net.NetworkInformation
  namespace: System.Net.NetworkInformation
  summary: "\n<p>Gets the number of Internet Protocol (IP) packets for which the local computer could not determine a route to the destination address.</p>\n"
  remarks: "\n<p>IP packets that fall into this category are discarded.</p>\n"
  example:
  - "\n<p>The following code example displays statistics for outbound IP packets.</p>NCLNetInfo2#17"
  syntax:
    content: public abstract long OutputPacketsWithNoRoute { get; }
    content.vb: Public MustOverride ReadOnly Property OutputPacketsWithNoRoute As Long
    parameters: []
    return:
      type: System.Int64
      description: "\n<p>An <xref href=\"System.Int64\" data-throw-if-not-resolved=\"false\"></xref> value that specifies the number of packets that could not be sent because a route could not be found.</p>\n"
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
- uid: System.Net.NetworkInformation.IPGlobalStatistics.PacketFragmentFailures
  commentId: P:System.Net.NetworkInformation.IPGlobalStatistics.PacketFragmentFailures
  id: PacketFragmentFailures
  parent: System.Net.NetworkInformation.IPGlobalStatistics
  langs:
  - csharp
  - vb
  name: PacketFragmentFailures
  fullName: System.Net.NetworkInformation.IPGlobalStatistics.PacketFragmentFailures
  type: Property
  source:
    remote:
      path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: PacketFragmentFailures
    path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs
    startLine: 158
  assemblies:
  - System.Net.NetworkInformation
  namespace: System.Net.NetworkInformation
  summary: "\n<p>Gets the number of Internet Protocol (IP) packets that could not be fragmented.</p>\n"
  remarks: "\n<p>Packets that exceed the maximum size for IP transport are broken into fragments and reassembled at the destination. The value returned by this property indicates the number of packets that needed to be fragmented for IP transport but could not be because the packet header specified that the packet not be fragmented.</p>\n"
  example:
  - "\n<p>The following code example displays reassembly statistics for IP packets.</p>NCLNetInfo2#18"
  syntax:
    content: public abstract long PacketFragmentFailures { get; }
    content.vb: Public MustOverride ReadOnly Property PacketFragmentFailures As Long
    parameters: []
    return:
      type: System.Int64
      description: "\n<p>An <xref href=\"System.Int64\" data-throw-if-not-resolved=\"false\"></xref> value that specifies the total number of packets that required fragmentation but had the \"Don't Fragment\" bit set.</p>\n"
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
- uid: System.Net.NetworkInformation.IPGlobalStatistics.PacketReassembliesRequired
  commentId: P:System.Net.NetworkInformation.IPGlobalStatistics.PacketReassembliesRequired
  id: PacketReassembliesRequired
  parent: System.Net.NetworkInformation.IPGlobalStatistics
  langs:
  - csharp
  - vb
  name: PacketReassembliesRequired
  fullName: System.Net.NetworkInformation.IPGlobalStatistics.PacketReassembliesRequired
  type: Property
  source:
    remote:
      path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: PacketReassembliesRequired
    path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs
    startLine: 159
  assemblies:
  - System.Net.NetworkInformation
  namespace: System.Net.NetworkInformation
  summary: "\n<p>Gets the number of Internet Protocol (IP) packets that required reassembly.</p>\n"
  remarks: "\n<p>Packets that exceed the maximum size for IP transport are broken into fragments and reassembled at the destination.</p>\n"
  example:
  - "\n<p>The following code example displays reassembly statistics for IP packets.</p>NCLNetInfo2#18"
  syntax:
    content: public abstract long PacketReassembliesRequired { get; }
    content.vb: Public MustOverride ReadOnly Property PacketReassembliesRequired As Long
    parameters: []
    return:
      type: System.Int64
      description: "\n<p>An <xref href=\"System.Int64\" data-throw-if-not-resolved=\"false\"></xref> value that specifies the total number of packet reassemblies required.</p>\n"
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
- uid: System.Net.NetworkInformation.IPGlobalStatistics.PacketReassemblyFailures
  commentId: P:System.Net.NetworkInformation.IPGlobalStatistics.PacketReassemblyFailures
  id: PacketReassemblyFailures
  parent: System.Net.NetworkInformation.IPGlobalStatistics
  langs:
  - csharp
  - vb
  name: PacketReassemblyFailures
  fullName: System.Net.NetworkInformation.IPGlobalStatistics.PacketReassemblyFailures
  type: Property
  source:
    remote:
      path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: PacketReassemblyFailures
    path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs
    startLine: 160
  assemblies:
  - System.Net.NetworkInformation
  namespace: System.Net.NetworkInformation
  summary: "\n<p>Gets the number of Internet Protocol (IP) packets that were not successfully reassembled.</p>\n"
  remarks: "\n<p>Packets that exceed the maximum size for IP transport are broken into fragments and reassembled at the destination. If some fragments are lost or do not arrive within a set time, the reassembly does not succeed.</p>\n"
  example:
  - "\n<p>The following code example displays reassembly statistics for IP packets.</p>NCLNetInfo2#18"
  syntax:
    content: public abstract long PacketReassemblyFailures { get; }
    content.vb: Public MustOverride ReadOnly Property PacketReassemblyFailures As Long
    parameters: []
    return:
      type: System.Int64
      description: "\n<p>An <xref href=\"System.Int64\" data-throw-if-not-resolved=\"false\"></xref> value that specifies the total number of packets that could not be reassembled.</p>\n"
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
- uid: System.Net.NetworkInformation.IPGlobalStatistics.PacketReassemblyTimeout
  commentId: P:System.Net.NetworkInformation.IPGlobalStatistics.PacketReassemblyTimeout
  id: PacketReassemblyTimeout
  parent: System.Net.NetworkInformation.IPGlobalStatistics
  langs:
  - csharp
  - vb
  name: PacketReassemblyTimeout
  fullName: System.Net.NetworkInformation.IPGlobalStatistics.PacketReassemblyTimeout
  type: Property
  source:
    remote:
      path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: PacketReassemblyTimeout
    path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs
    startLine: 161
  assemblies:
  - System.Net.NetworkInformation
  namespace: System.Net.NetworkInformation
  summary: "\n<p>Gets the maximum amount of time within which all fragments of an Internet Protocol (IP) packet must arrive.</p>\n"
  remarks: "\n<p>Packets that exceed the maximum size for IP transport are broken into fragments and reassembled at the destination. If all fragments that make up a fragmented IP packet do not arrive within the allowed time, the packet is discarded.</p>\n"
  example:
  - "\n<p>The following code example displays reassembly statistics for IP packets.</p>NCLNetInfo2#18"
  syntax:
    content: public abstract long PacketReassemblyTimeout { get; }
    content.vb: Public MustOverride ReadOnly Property PacketReassemblyTimeout As Long
    parameters: []
    return:
      type: System.Int64
      description: "\n<p>An <xref href=\"System.Int64\" data-throw-if-not-resolved=\"false\"></xref> value that specifies the maximum number of milliseconds within which all fragments of a packet must arrive to avoid being discarded.</p>\n"
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
- uid: System.Net.NetworkInformation.IPGlobalStatistics.PacketsFragmented
  commentId: P:System.Net.NetworkInformation.IPGlobalStatistics.PacketsFragmented
  id: PacketsFragmented
  parent: System.Net.NetworkInformation.IPGlobalStatistics
  langs:
  - csharp
  - vb
  name: PacketsFragmented
  fullName: System.Net.NetworkInformation.IPGlobalStatistics.PacketsFragmented
  type: Property
  source:
    remote:
      path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: PacketsFragmented
    path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs
    startLine: 162
  assemblies:
  - System.Net.NetworkInformation
  namespace: System.Net.NetworkInformation
  summary: "\n<p>Gets the number of Internet Protocol (IP) packets fragmented.</p>\n"
  remarks: "\n<p>Packets that exceed the maximum size for IP transport are broken into fragments and reassembled at the destination.</p>\n"
  example:
  - "\n<p>The following code example displays reassembly statistics for IP packets.</p>NCLNetInfo2#18"
  syntax:
    content: public abstract long PacketsFragmented { get; }
    content.vb: Public MustOverride ReadOnly Property PacketsFragmented As Long
    parameters: []
    return:
      type: System.Int64
      description: "\n<p>An <xref href=\"System.Int64\" data-throw-if-not-resolved=\"false\"></xref> value that specifies the total number of fragmented packets.</p>\n"
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
- uid: System.Net.NetworkInformation.IPGlobalStatistics.PacketsReassembled
  commentId: P:System.Net.NetworkInformation.IPGlobalStatistics.PacketsReassembled
  id: PacketsReassembled
  parent: System.Net.NetworkInformation.IPGlobalStatistics
  langs:
  - csharp
  - vb
  name: PacketsReassembled
  fullName: System.Net.NetworkInformation.IPGlobalStatistics.PacketsReassembled
  type: Property
  source:
    remote:
      path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: PacketsReassembled
    path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs
    startLine: 163
  assemblies:
  - System.Net.NetworkInformation
  namespace: System.Net.NetworkInformation
  summary: "\n<p>Gets the number of Internet Protocol (IP) packets reassembled.</p>\n"
  remarks: "\n<p>Session layer packets that exceed the maximum size for IP transport are broken into fragments and reassembled at the destination. If some fragments are lost or do not arrive within a set time, the reassembly does not succeed.</p>\n"
  example:
  - "\n<p>The following code example displays reassembly statistics for IP packets.</p>NCLNetInfo2#18"
  syntax:
    content: public abstract long PacketsReassembled { get; }
    content.vb: Public MustOverride ReadOnly Property PacketsReassembled As Long
    parameters: []
    return:
      type: System.Int64
      description: "\n<p>An <xref href=\"System.Int64\" data-throw-if-not-resolved=\"false\"></xref> value that specifies the total number of fragmented packets that have been successfully reassembled.</p>\n"
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
- uid: System.Net.NetworkInformation.IPGlobalStatistics.ReceivedPackets
  commentId: P:System.Net.NetworkInformation.IPGlobalStatistics.ReceivedPackets
  id: ReceivedPackets
  parent: System.Net.NetworkInformation.IPGlobalStatistics
  langs:
  - csharp
  - vb
  name: ReceivedPackets
  fullName: System.Net.NetworkInformation.IPGlobalStatistics.ReceivedPackets
  type: Property
  source:
    remote:
      path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ReceivedPackets
    path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs
    startLine: 164
  assemblies:
  - System.Net.NetworkInformation
  namespace: System.Net.NetworkInformation
  summary: "\n<p>Gets the number of Internet Protocol (IP) packets received.</p>\n"
  remarks: "\n<p>The value returned by this property includes packets received in error.</p>\n"
  example:
  - "\n<p>The following code example displays statistics for received IP packets.</p>NCLNetInfo2#15"
  syntax:
    content: public abstract long ReceivedPackets { get; }
    content.vb: Public MustOverride ReadOnly Property ReceivedPackets As Long
    parameters: []
    return:
      type: System.Int64
      description: "\n<p>An <xref href=\"System.Int64\" data-throw-if-not-resolved=\"false\"></xref> value that specifies the total number of IP packets received.</p>\n"
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
- uid: System.Net.NetworkInformation.IPGlobalStatistics.ReceivedPacketsDelivered
  commentId: P:System.Net.NetworkInformation.IPGlobalStatistics.ReceivedPacketsDelivered
  id: ReceivedPacketsDelivered
  parent: System.Net.NetworkInformation.IPGlobalStatistics
  langs:
  - csharp
  - vb
  name: ReceivedPacketsDelivered
  fullName: System.Net.NetworkInformation.IPGlobalStatistics.ReceivedPacketsDelivered
  type: Property
  source:
    remote:
      path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ReceivedPacketsDelivered
    path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs
    startLine: 165
  assemblies:
  - System.Net.NetworkInformation
  namespace: System.Net.NetworkInformation
  summary: "\n<p>Gets the number of Internet Protocol (IP) packets delivered.</p>\n"
  remarks: "\n<p>The value returned by this property includes Internet Control Message Protocol (ICMP) messages.</p>\n"
  example:
  - "\n<p>The following code example displays statistics for received IP packets.</p>NCLNetInfo2#15"
  syntax:
    content: public abstract long ReceivedPacketsDelivered { get; }
    content.vb: Public MustOverride ReadOnly Property ReceivedPacketsDelivered As Long
    parameters: []
    return:
      type: System.Int64
      description: "\n<p>An <xref href=\"System.Int64\" data-throw-if-not-resolved=\"false\"></xref> value that specifies the total number of IP packets delivered.</p>\n"
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
- uid: System.Net.NetworkInformation.IPGlobalStatistics.ReceivedPacketsDiscarded
  commentId: P:System.Net.NetworkInformation.IPGlobalStatistics.ReceivedPacketsDiscarded
  id: ReceivedPacketsDiscarded
  parent: System.Net.NetworkInformation.IPGlobalStatistics
  langs:
  - csharp
  - vb
  name: ReceivedPacketsDiscarded
  fullName: System.Net.NetworkInformation.IPGlobalStatistics.ReceivedPacketsDiscarded
  type: Property
  source:
    remote:
      path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ReceivedPacketsDiscarded
    path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs
    startLine: 166
  assemblies:
  - System.Net.NetworkInformation
  namespace: System.Net.NetworkInformation
  summary: "\n<p>Gets the number of Internet Protocol (IP) packets that have been received and discarded.</p>\n"
  remarks: "\n<p>The value returned by this property includes only those packets that were discarded even though they did not contain errors that prevented reassembly or delivery. Typically, packets in this category are discarded because of insufficient buffer space.</p>\n"
  example:
  - "\n<p>The following code example displays statistics for received IP packets.</p>NCLNetInfo2#15"
  syntax:
    content: public abstract long ReceivedPacketsDiscarded { get; }
    content.vb: Public MustOverride ReadOnly Property ReceivedPacketsDiscarded As Long
    parameters: []
    return:
      type: System.Int64
      description: "\n<p>An <xref href=\"System.Int64\" data-throw-if-not-resolved=\"false\"></xref> value that specifies the total number of incoming packets that have been discarded.</p>\n"
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
- uid: System.Net.NetworkInformation.IPGlobalStatistics.ReceivedPacketsForwarded
  commentId: P:System.Net.NetworkInformation.IPGlobalStatistics.ReceivedPacketsForwarded
  id: ReceivedPacketsForwarded
  parent: System.Net.NetworkInformation.IPGlobalStatistics
  langs:
  - csharp
  - vb
  name: ReceivedPacketsForwarded
  fullName: System.Net.NetworkInformation.IPGlobalStatistics.ReceivedPacketsForwarded
  type: Property
  source:
    remote:
      path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ReceivedPacketsForwarded
    path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs
    startLine: 167
  assemblies:
  - System.Net.NetworkInformation
  namespace: System.Net.NetworkInformation
  summary: "\n<p>Gets the number of Internet Protocol (IP) packets forwarded.</p>\n"
  remarks: "\n<p>If the local computer is not a router, the value returned by this property includes packets that were successfully source-routed via the local computer. Source routing is an IP option whereby the source of the packet can specify the route to the destination address.</p>\n"
  example:
  - "\n<p>The following code example displays statistics for received IP packets.</p>NCLNetInfo2#15"
  syntax:
    content: public abstract long ReceivedPacketsForwarded { get; }
    content.vb: Public MustOverride ReadOnly Property ReceivedPacketsForwarded As Long
    parameters: []
    return:
      type: System.Int64
      description: "\n<p>An <xref href=\"System.Int64\" data-throw-if-not-resolved=\"false\"></xref> value that specifies the total number of forwarded packets.</p>\n"
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
- uid: System.Net.NetworkInformation.IPGlobalStatistics.ReceivedPacketsWithAddressErrors
  commentId: P:System.Net.NetworkInformation.IPGlobalStatistics.ReceivedPacketsWithAddressErrors
  id: ReceivedPacketsWithAddressErrors
  parent: System.Net.NetworkInformation.IPGlobalStatistics
  langs:
  - csharp
  - vb
  name: ReceivedPacketsWithAddressErrors
  fullName: System.Net.NetworkInformation.IPGlobalStatistics.ReceivedPacketsWithAddressErrors
  type: Property
  source:
    remote:
      path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ReceivedPacketsWithAddressErrors
    path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs
    startLine: 168
  assemblies:
  - System.Net.NetworkInformation
  namespace: System.Net.NetworkInformation
  summary: "\n<p>Gets the number of Internet Protocol (IP) packets with address errors that were received.</p>\n"
  remarks: "\n<p>The value returned by this property includes packets discarded for address related issues in the header fields, such as invalid addresses. If packet forwarding is not enabled, the value returned by this property includes packets that were discarded because the destination address was not a local address.</p>\n"
  example:
  - "\n<p>The following code example displays statistics for received IP packets with errors.</p>NCLNetInfo2#16"
  syntax:
    content: public abstract long ReceivedPacketsWithAddressErrors { get; }
    content.vb: Public MustOverride ReadOnly Property ReceivedPacketsWithAddressErrors As Long
    parameters: []
    return:
      type: System.Int64
      description: "\n<p>An <xref href=\"System.Int64\" data-throw-if-not-resolved=\"false\"></xref> value that specifies the total number of IP packets received with errors in the address portion of the header.</p>\n"
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
- uid: System.Net.NetworkInformation.IPGlobalStatistics.ReceivedPacketsWithHeadersErrors
  commentId: P:System.Net.NetworkInformation.IPGlobalStatistics.ReceivedPacketsWithHeadersErrors
  id: ReceivedPacketsWithHeadersErrors
  parent: System.Net.NetworkInformation.IPGlobalStatistics
  langs:
  - csharp
  - vb
  name: ReceivedPacketsWithHeadersErrors
  fullName: System.Net.NetworkInformation.IPGlobalStatistics.ReceivedPacketsWithHeadersErrors
  type: Property
  source:
    remote:
      path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ReceivedPacketsWithHeadersErrors
    path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs
    startLine: 169
  assemblies:
  - System.Net.NetworkInformation
  namespace: System.Net.NetworkInformation
  summary: "\n<p>Gets the number of Internet Protocol (IP) packets with header errors that were received.</p>\n"
  remarks: "\n<p>The value returned by this property includes packets discarded for non-address related issues in the header fields, such as bad checksums, time-to-live value exceeded, and incorrect IP options.</p>\n"
  example:
  - "\n<p>The following code example displays statistics for received IP packets with errors.</p>NCLNetInfo2#16"
  syntax:
    content: public abstract long ReceivedPacketsWithHeadersErrors { get; }
    content.vb: Public MustOverride ReadOnly Property ReceivedPacketsWithHeadersErrors As Long
    parameters: []
    return:
      type: System.Int64
      description: "\n<p>An <xref href=\"System.Int64\" data-throw-if-not-resolved=\"false\"></xref> value that specifies the total number of IP packets received and discarded due to errors in the header.</p>\n"
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
- uid: System.Net.NetworkInformation.IPGlobalStatistics.ReceivedPacketsWithUnknownProtocol
  commentId: P:System.Net.NetworkInformation.IPGlobalStatistics.ReceivedPacketsWithUnknownProtocol
  id: ReceivedPacketsWithUnknownProtocol
  parent: System.Net.NetworkInformation.IPGlobalStatistics
  langs:
  - csharp
  - vb
  name: ReceivedPacketsWithUnknownProtocol
  fullName: System.Net.NetworkInformation.IPGlobalStatistics.ReceivedPacketsWithUnknownProtocol
  type: Property
  source:
    remote:
      path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ReceivedPacketsWithUnknownProtocol
    path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs
    startLine: 170
  assemblies:
  - System.Net.NetworkInformation
  namespace: System.Net.NetworkInformation
  summary: "\n<p>Gets the number of Internet Protocol (IP) packets received on the local machine with an unknown protocol in the header.</p>\n"
  remarks: "\n<p>The protocol field in the IP header indicates the next-level protocol used in the data portion of the IP datagram. If the protocol is not recognized, the data cannot be passed to the correct application.</p>\n"
  example:
  - "\n<p>The following code example displays statistics for received IP packets with errors.</p>NCLNetInfo2#16"
  syntax:
    content: public abstract long ReceivedPacketsWithUnknownProtocol { get; }
    content.vb: Public MustOverride ReadOnly Property ReceivedPacketsWithUnknownProtocol As Long
    parameters: []
    return:
      type: System.Int64
      description: "\n<p>An <xref href=\"System.Int64\" data-throw-if-not-resolved=\"false\"></xref> value that indicates the total number of IP packets received with an unknown protocol.</p>\n"
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
references:
- uid: System.Net.NetworkInformation
  isExternal: false
  name: System.Net.NetworkInformation
  fullName: System.Net.NetworkInformation
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  fullName: System.Int32
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  fullName: System.Boolean
- uid: System.Int64
  parent: System
  isExternal: false
  name: Int64
  fullName: System.Int64
