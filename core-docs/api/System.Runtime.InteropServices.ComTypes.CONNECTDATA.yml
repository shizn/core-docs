items:
- uid: System.Runtime.InteropServices.ComTypes.CONNECTDATA
  commentId: T:System.Runtime.InteropServices.ComTypes.CONNECTDATA
  id: CONNECTDATA
  parent: System.Runtime.InteropServices.ComTypes
  children:
  - System.Runtime.InteropServices.ComTypes.CONNECTDATA.dwCookie
  - System.Runtime.InteropServices.ComTypes.CONNECTDATA.pUnk
  langs:
  - csharp
  - vb
  name: CONNECTDATA
  fullName: System.Runtime.InteropServices.ComTypes.CONNECTDATA
  type: Struct
  source:
    remote:
      path: src/mscorlib/src/System/Runtime/InteropServices/ComTypes/IEnumConnections.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: CONNECTDATA
    path: src/mscorlib/src/System/Runtime/InteropServices/ComTypes/IEnumConnections.cs
    startLine: 17
  assemblies:
  - System.Runtime.InteropServices
  namespace: System.Runtime.InteropServices.ComTypes
  summary: "\n<p>Describes a connection that exists to a given connection point.</p>\n"
  remarks: "\n<p>The <strong>CONNECTDATA</strong> structure is the type enumerated through the <xref href=\"System.Runtime.InteropServices.ComTypes.IEnumConnections.Next(System.Int32,System.Runtime.InteropServices.ComTypes.CONNECTDATA[],System.IntPtr)\" data-throw-if-not-resolved=\"false\"></xref> method.</p>\n<p>For more information about <strong>CONNECTDATA</strong>, see the MSDN Library.</p>\n<p>The common language runtime throws an exception when a COM method in native code returns an HRESULT. For more information, see How to: Map HRESULTs and Exceptions.</p>\n"
  syntax:
    content: >-
      [StructLayout(LayoutKind.Sequential, CharSet = CharSet.Unicode)]

      public struct CONNECTDATA
    content.vb: >-
      <StructLayout(LayoutKind.Sequential, CharSet:=CharSet.Unicode)>

      Public Structure CONNECTDATA
  inheritedMembers:
  - System.ValueType.Equals(System.Object)
  - System.ValueType.GetHashCode
  - System.ValueType.ToString
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetType
  attributes:
  - type: System.Runtime.InteropServices.StructLayoutAttribute
    ctor: System.Runtime.InteropServices.StructLayoutAttribute.#ctor(System.Runtime.InteropServices.LayoutKind)
    arguments:
    - type: System.Runtime.InteropServices.LayoutKind
      value: 0
  modifiers.csharp:
  - public
  - struct
  modifiers.vb:
  - Public
  - Structure
- uid: System.Runtime.InteropServices.ComTypes.CONNECTDATA.dwCookie
  commentId: F:System.Runtime.InteropServices.ComTypes.CONNECTDATA.dwCookie
  id: dwCookie
  parent: System.Runtime.InteropServices.ComTypes.CONNECTDATA
  langs:
  - csharp
  - vb
  name: dwCookie
  fullName: System.Runtime.InteropServices.ComTypes.CONNECTDATA.dwCookie
  type: Field
  source:
    remote:
      path: src/mscorlib/src/System/Runtime/InteropServices/ComTypes/IEnumConnections.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: dwCookie
    path: src/mscorlib/src/System/Runtime/InteropServices/ComTypes/IEnumConnections.cs
    startLine: 23
  assemblies:
  - System.Runtime.InteropServices
  namespace: System.Runtime.InteropServices.ComTypes
  summary: "\n<p>Represents a connection token that is returned from a call to <xref href=\"System.Runtime.InteropServices.ComTypes.IConnectionPoint.Advise(System.Object,System.Int32@)\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: public int dwCookie
    content.vb: Public dwCookie As Integer
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Runtime.InteropServices.ComTypes.CONNECTDATA.pUnk
  commentId: F:System.Runtime.InteropServices.ComTypes.CONNECTDATA.pUnk
  id: pUnk
  parent: System.Runtime.InteropServices.ComTypes.CONNECTDATA
  langs:
  - csharp
  - vb
  name: pUnk
  fullName: System.Runtime.InteropServices.ComTypes.CONNECTDATA.pUnk
  type: Field
  source:
    remote:
      path: src/mscorlib/src/System/Runtime/InteropServices/ComTypes/IEnumConnections.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: pUnk
    path: src/mscorlib/src/System/Runtime/InteropServices/ComTypes/IEnumConnections.cs
    startLine: 22
  assemblies:
  - System.Runtime.InteropServices
  namespace: System.Runtime.InteropServices.ComTypes
  summary: "\n<p>Represents a pointer to the <strong>IUnknown</strong> interface on a connected advisory sink. The caller must call <strong>IUnknown::Release</strong> on this pointer when the <strong>CONNECTDATA</strong> structure is no longer needed.</p>\n"
  syntax:
    content: >-
      [MarshalAs(UnmanagedType.Interface)]

      public object pUnk
    content.vb: >-
      <MarshalAs(UnmanagedType.Interface)>

      Public pUnk As Object
    return:
      type: System.Object
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: System.Runtime.InteropServices.ComTypes
  isExternal: false
  name: System.Runtime.InteropServices.ComTypes
  fullName: System.Runtime.InteropServices.ComTypes
- uid: System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  name: Equals(Object)
  fullName: System.ValueType.Equals(System.Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    fullName: System.ValueType.Equals
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    fullName: System.ValueType.Equals
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: false
  name: GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    fullName: System.ValueType.GetHashCode
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    fullName: System.ValueType.GetHashCode
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.ValueType.ToString
  parent: System.ValueType
  isExternal: false
  name: ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    fullName: System.ValueType.ToString
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    fullName: System.ValueType.ToString
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.ValueType
  parent: System
  isExternal: false
  name: ValueType
  fullName: System.ValueType
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  fullName: System.Int32
