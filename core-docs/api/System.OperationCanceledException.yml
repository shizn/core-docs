items:
- uid: System.OperationCanceledException
  commentId: T:System.OperationCanceledException
  id: OperationCanceledException
  parent: System
  children:
  - System.OperationCanceledException.#ctor
  - System.OperationCanceledException.#ctor(System.String)
  - System.OperationCanceledException.#ctor(System.String,System.Exception)
  - System.OperationCanceledException.#ctor(System.String,System.Exception,System.Threading.CancellationToken)
  - System.OperationCanceledException.#ctor(System.String,System.Threading.CancellationToken)
  - System.OperationCanceledException.#ctor(System.Threading.CancellationToken)
  - System.OperationCanceledException.CancellationToken
  langs:
  - csharp
  - vb
  name: OperationCanceledException
  fullName: System.OperationCanceledException
  type: Class
  source:
    remote:
      path: src/System.Threading.Tasks/ref/System.Threading.Tasks.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: OperationCanceledException
    path: src/System.Threading.Tasks/ref/System.Threading.Tasks.cs
    startLine: 25
  assemblies:
  - System.Threading.Tasks
  namespace: System
  summary: "\n<p>The exception that is thrown in a thread upon cancellation of an operation that the thread was executing.</p>\n"
  remarks: "\n<p>If the task that was canceled had an associated cancellation token, it is returned by the <xref href=\"System.OperationCanceledException.CancellationToken\" data-throw-if-not-resolved=\"false\"></xref> property, and the <xref href=\"System.Threading.CancellationToken.IsCancellationRequested\" data-throw-if-not-resolved=\"false\"></xref> property of the token is set to <strong>true</strong>.</p>\n"
  syntax:
    content: 'public class OperationCanceledException : Exception'
    content.vb: >-
      Public Class OperationCanceledException
          Inherits Exception
  seealso:
  - type: System.Exception
    commentId: T:System.Exception
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: System.OperationCanceledException.#ctor
  commentId: M:System.OperationCanceledException.#ctor
  id: '#ctor'
  parent: System.OperationCanceledException
  langs:
  - csharp
  - vb
  name: OperationCanceledException()
  fullName: System.OperationCanceledException.OperationCanceledException()
  type: Constructor
  source:
    remote:
      path: src/System.Threading.Tasks/ref/System.Threading.Tasks.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Threading.Tasks/ref/System.Threading.Tasks.cs
    startLine: 27
  assemblies:
  - System.Threading.Tasks
  namespace: System
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.OperationCanceledException\" data-throw-if-not-resolved=\"false\"></xref> class with a system-supplied error message.</p>\n"
  remarks: "\n<p>This constructor initializes the <xref href=\"System.Exception.Message\" data-throw-if-not-resolved=\"false\"></xref> property of the new instance to a system-supplied message that describes the error, such as \"The operation was canceled.\" This message takes into account the current system culture.</p>\n<p>The following table shows the initial property values for an instance of <xref href=\"System.OperationCanceledException\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>Property </p>\n<p>Value </p>\n<table><tbody><tr><td>\n<p>\n<xref href=\"System.Exception.InnerException\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td><td>\n<p>A null<strong></strong>reference (<strong>Nothing</strong> in Visual Basic). </p>\n</td></tr><tr><td>\n<p>\n<xref href=\"System.Exception.Message\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td><td>\n<p>The localized error message string. </p>\n</td></tr><tr><td>\n<p>\n<xref href=\"System.OperationCanceledException.CancellationToken\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td><td>\n<p>A cancellation token created in the non-canceled state.</p>\n</td></tr></tbody></table>\n"
  syntax:
    content: public OperationCanceledException()
    content.vb: Public Sub New
  seealso:
  - type: System.Exception
    commentId: T:System.Exception
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.OperationCanceledException.#ctor(System.String)
  commentId: M:System.OperationCanceledException.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.OperationCanceledException
  langs:
  - csharp
  - vb
  name: OperationCanceledException(String)
  fullName: System.OperationCanceledException.OperationCanceledException(System.String)
  type: Constructor
  source:
    remote:
      path: src/System.Threading.Tasks/ref/System.Threading.Tasks.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Threading.Tasks/ref/System.Threading.Tasks.cs
    startLine: 28
  assemblies:
  - System.Threading.Tasks
  namespace: System
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.OperationCanceledException\" data-throw-if-not-resolved=\"false\"></xref> class with a specified error message.</p>\n"
  remarks: "\n<p>The content of <em>message</em> is intended to be understood by humans. The caller of this constructor is required to ensure that this string has been localized for the current system culture.</p>\n<p>The following table shows the initial property values for an instance of <xref href=\"System.OperationCanceledException\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>Property </p>\n<p>Value </p>\n<table><tbody><tr><td>\n<p>\n<xref href=\"System.Exception.InnerException\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td><td>\n<p>A null reference (<strong>Nothing</strong> in Visual Basic). </p>\n</td></tr><tr><td>\n<p>\n<xref href=\"System.Exception.Message\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td><td>\n<p>The error message string. </p>\n</td></tr><tr><td>\n<p>\n<xref href=\"System.OperationCanceledException.CancellationToken\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td><td>\n<p>A cancellation token created in the non-canceled state.</p>\n</td></tr></tbody></table>\n"
  syntax:
    content: public OperationCanceledException(string message)
    content.vb: Public Sub New(message As String)
    parameters:
    - id: message
      type: System.String
      description: "\n<p>A <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref> that describes the error.</p>\n"
  seealso:
  - type: System.Exception
    commentId: T:System.Exception
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.OperationCanceledException.#ctor(System.String,System.Exception)
  commentId: M:System.OperationCanceledException.#ctor(System.String,System.Exception)
  id: '#ctor(System.String,System.Exception)'
  parent: System.OperationCanceledException
  langs:
  - csharp
  - vb
  name: OperationCanceledException(String, Exception)
  fullName: System.OperationCanceledException.OperationCanceledException(System.String, System.Exception)
  type: Constructor
  source:
    remote:
      path: src/System.Threading.Tasks/ref/System.Threading.Tasks.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Threading.Tasks/ref/System.Threading.Tasks.cs
    startLine: 29
  assemblies:
  - System.Threading.Tasks
  namespace: System
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.OperationCanceledException\" data-throw-if-not-resolved=\"false\"></xref> class with a specified error message and a reference to the inner exception that is the cause of this exception.</p>\n"
  remarks: "\n<p>The content of <em>message</em> is intended to be understood by humans. The caller of this constructor is required to ensure that this string has been localized for the current system culture.</p>\n<p>An exception that is thrown as a direct result of a previous exception should include a reference to the previous exception in the <xref href=\"System.Exception.InnerException\" data-throw-if-not-resolved=\"false\"></xref> property. The <xref href=\"System.Exception.InnerException\" data-throw-if-not-resolved=\"false\"></xref> property returns the same value that is passed into the constructor, or <strong>null</strong> if the <xref href=\"System.Exception.InnerException\" data-throw-if-not-resolved=\"false\"></xref> property does not supply the inner exception value to the constructor.</p>\n<p>The following table shows the initial property values for an instance of <xref href=\"System.OperationCanceledException\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>Property Type </p>\n<p>Condition </p>\n<table><tbody><tr><td>\n<p>\n<xref href=\"System.Exception.InnerException\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td><td>\n<p>\n<em>innerException</em>. </p>\n</td></tr><tr><td>\n<p>\n<xref href=\"System.Exception.Message\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td><td>\n<p>\n<em>message</em>. </p>\n</td></tr><tr><td>\n<p>\n<xref href=\"System.OperationCanceledException.CancellationToken\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td><td>\n<p>A cancellation token created in the non-canceled state.</p>\n</td></tr></tbody></table>\n"
  syntax:
    content: public OperationCanceledException(string message, Exception innerException)
    content.vb: Public Sub New(message As String, innerException As Exception)
    parameters:
    - id: message
      type: System.String
      description: "\n<p>The error message that explains the reason for the exception. </p>\n"
    - id: innerException
      type: System.Exception
      description: "\n<p>The exception that is the cause of the current exception. If the <em>innerException</em> parameter is not <strong>null</strong>, the current exception is raised in a <strong>catch</strong> block that handles the inner exception. </p>\n"
  seealso:
  - type: System.Exception
    commentId: T:System.Exception
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.OperationCanceledException.#ctor(System.String,System.Exception,System.Threading.CancellationToken)
  commentId: M:System.OperationCanceledException.#ctor(System.String,System.Exception,System.Threading.CancellationToken)
  id: '#ctor(System.String,System.Exception,System.Threading.CancellationToken)'
  parent: System.OperationCanceledException
  langs:
  - csharp
  - vb
  name: OperationCanceledException(String, Exception, CancellationToken)
  fullName: System.OperationCanceledException.OperationCanceledException(System.String, System.Exception, System.Threading.CancellationToken)
  type: Constructor
  source:
    remote:
      path: src/System.Threading.Tasks/ref/System.Threading.Tasks.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Threading.Tasks/ref/System.Threading.Tasks.cs
    startLine: 30
  assemblies:
  - System.Threading.Tasks
  namespace: System
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.OperationCanceledException\" data-throw-if-not-resolved=\"false\"></xref> class with a specified error message, a reference to the inner exception that is the cause of this exception, and a cancellation token.</p>\n"
  remarks: "\n<p>The content of <em>message</em> is intended to be understood by humans. The caller of this constructor is required to ensure that this string has been localized for the current system culture.</p>\n<p>An exception that is thrown as a direct result of a previous exception should include a reference to the previous exception in the <xref href=\"System.Exception.InnerException\" data-throw-if-not-resolved=\"false\"></xref> property. The <xref href=\"System.Exception.InnerException\" data-throw-if-not-resolved=\"false\"></xref> property returns the same value that is passed into the constructor, or <strong>null</strong> if the <xref href=\"System.Exception.InnerException\" data-throw-if-not-resolved=\"false\"></xref> property does not supply the inner exception value to the constructor.</p>\n<p>The following table shows the initial property values for an instance of <xref href=\"System.OperationCanceledException\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>Property Type </p>\n<p>Condition </p>\n<table><tbody><tr><td>\n<p>\n<xref href=\"System.Exception.InnerException\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td><td>\n<p>\n<em>innerException</em>. </p>\n</td></tr><tr><td>\n<p>\n<xref href=\"System.Exception.Message\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td><td>\n<p>\n<em>message</em>. </p>\n</td></tr><tr><td>\n<p>\n<xref href=\"System.OperationCanceledException.CancellationToken\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td><td>\n<p>\n<em>token</em>.</p>\n</td></tr></tbody></table>\n"
  syntax:
    content: public OperationCanceledException(string message, Exception innerException, CancellationToken token)
    content.vb: Public Sub New(message As String, innerException As Exception, token As CancellationToken)
    parameters:
    - id: message
      type: System.String
      description: "\n<p>The error message that explains the reason for the exception. </p>\n"
    - id: innerException
      type: System.Exception
      description: "\n<p>The exception that is the cause of the current exception. If the <em>innerException</em> parameter is not <strong>null</strong>, the current exception is raised in a <strong>catch</strong> block that handles the inner exception. </p>\n"
    - id: token
      type: System.Threading.CancellationToken
      description: "\n<p>A cancellation token associated with the operation that was canceled.</p>\n"
  seealso:
  - type: System.Exception
    commentId: T:System.Exception
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.OperationCanceledException.#ctor(System.String,System.Threading.CancellationToken)
  commentId: M:System.OperationCanceledException.#ctor(System.String,System.Threading.CancellationToken)
  id: '#ctor(System.String,System.Threading.CancellationToken)'
  parent: System.OperationCanceledException
  langs:
  - csharp
  - vb
  name: OperationCanceledException(String, CancellationToken)
  fullName: System.OperationCanceledException.OperationCanceledException(System.String, System.Threading.CancellationToken)
  type: Constructor
  source:
    remote:
      path: src/System.Threading.Tasks/ref/System.Threading.Tasks.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Threading.Tasks/ref/System.Threading.Tasks.cs
    startLine: 31
  assemblies:
  - System.Threading.Tasks
  namespace: System
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.OperationCanceledException\" data-throw-if-not-resolved=\"false\"></xref> class with a specified error message and a cancellation token.</p>\n"
  remarks: "\n<p>The content of <em>message</em> is intended to be understood by humans. The caller of this constructor is required to ensure that this string has been localized for the current system culture.</p>\n<p>The following table shows the initial property values for an instance of <xref href=\"System.OperationCanceledException\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>Property </p>\n<p>Value </p>\n<table><tbody><tr><td>\n<p>\n<xref href=\"System.Exception.InnerException\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td><td>\n<p>A null reference (<strong>Nothing</strong> in Visual Basic). </p>\n</td></tr><tr><td>\n<p>\n<xref href=\"System.Exception.Message\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td><td>\n<p>\n<em>message</em>. </p>\n</td></tr><tr><td>\n<p>\n<xref href=\"System.OperationCanceledException.CancellationToken\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td><td>\n<p>\n<em>token</em>.</p>\n</td></tr></tbody></table>\n"
  syntax:
    content: public OperationCanceledException(string message, CancellationToken token)
    content.vb: Public Sub New(message As String, token As CancellationToken)
    parameters:
    - id: message
      type: System.String
      description: "\n<p>The error message that explains the reason for the exception.</p>\n"
    - id: token
      type: System.Threading.CancellationToken
      description: "\n<p>A cancellation token associated with the operation that was canceled.</p>\n"
  seealso:
  - type: System.Exception
    commentId: T:System.Exception
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.OperationCanceledException.#ctor(System.Threading.CancellationToken)
  commentId: M:System.OperationCanceledException.#ctor(System.Threading.CancellationToken)
  id: '#ctor(System.Threading.CancellationToken)'
  parent: System.OperationCanceledException
  langs:
  - csharp
  - vb
  name: OperationCanceledException(CancellationToken)
  fullName: System.OperationCanceledException.OperationCanceledException(System.Threading.CancellationToken)
  type: Constructor
  source:
    remote:
      path: src/System.Threading.Tasks/ref/System.Threading.Tasks.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Threading.Tasks/ref/System.Threading.Tasks.cs
    startLine: 32
  assemblies:
  - System.Threading.Tasks
  namespace: System
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.OperationCanceledException\" data-throw-if-not-resolved=\"false\"></xref> class with a cancellation token.</p>\n"
  remarks: "\n<p>This constructor initializes the <xref href=\"System.Exception.Message\" data-throw-if-not-resolved=\"false\"></xref> property of the new instance to a system-supplied message that describes the error, such as \"The operation was canceled.\" This message takes into account the current system culture.</p>\n<p>The following table shows the initial property values for an instance of <xref href=\"System.OperationCanceledException\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>Property </p>\n<p>Value </p>\n<table><tbody><tr><td>\n<p>\n<xref href=\"System.Exception.InnerException\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td><td>\n<p>A null<strong></strong>reference (<strong>Nothing</strong> in Visual Basic). </p>\n</td></tr><tr><td>\n<p>\n<xref href=\"System.Exception.Message\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td><td>\n<p>The localized error message string. </p>\n</td></tr><tr><td>\n<p>\n<xref href=\"System.OperationCanceledException.CancellationToken\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td><td>\n<p>\n<em>token</em>.</p>\n</td></tr></tbody></table>\n"
  syntax:
    content: public OperationCanceledException(CancellationToken token)
    content.vb: Public Sub New(token As CancellationToken)
    parameters:
    - id: token
      type: System.Threading.CancellationToken
      description: "\n<p>A cancellation token associated with the operation that was canceled.</p>\n"
  seealso:
  - type: System.Exception
    commentId: T:System.Exception
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.OperationCanceledException.CancellationToken
  commentId: P:System.OperationCanceledException.CancellationToken
  id: CancellationToken
  parent: System.OperationCanceledException
  langs:
  - csharp
  - vb
  name: CancellationToken
  fullName: System.OperationCanceledException.CancellationToken
  type: Property
  source:
    remote:
      path: src/System.Threading.Tasks/ref/System.Threading.Tasks.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CancellationToken
    path: src/System.Threading.Tasks/ref/System.Threading.Tasks.cs
    startLine: 33
  assemblies:
  - System.Threading.Tasks
  namespace: System
  summary: "\n<p>Gets a token associated with the operation that was canceled.</p>\n"
  remarks: "\n<p>If the token is associated with a canceled operation, the <xref href=\"System.Threading.CancellationToken.IsCancellationRequested\" data-throw-if-not-resolved=\"false\"></xref> property of the token returns <strong>true</strong>.</p>\n"
  syntax:
    content: public CancellationToken CancellationToken { get; }
    content.vb: Public ReadOnly Property CancellationToken As CancellationToken
    parameters: []
    return:
      type: System.Threading.CancellationToken
      description: "\n<p>A token associated with the operation that was canceled, or a default token.</p>\n"
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System.String
  parent: System
  isExternal: false
  name: String
  fullName: System.String
- uid: System.Exception
  parent: System
  isExternal: false
  name: Exception
  fullName: System.Exception
- uid: System.Threading.CancellationToken
  parent: System.Threading
  isExternal: false
  name: Threading.CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading
  isExternal: false
  name: System.Threading
  fullName: System.Threading
