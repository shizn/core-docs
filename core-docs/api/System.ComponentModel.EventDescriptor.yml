items:
- uid: System.ComponentModel.EventDescriptor
  commentId: T:System.ComponentModel.EventDescriptor
  id: EventDescriptor
  parent: System.ComponentModel
  children:
  - System.ComponentModel.EventDescriptor.#ctor(System.ComponentModel.MemberDescriptor)
  - System.ComponentModel.EventDescriptor.#ctor(System.ComponentModel.MemberDescriptor,System.Attribute[])
  - System.ComponentModel.EventDescriptor.#ctor(System.String,System.Attribute[])
  - System.ComponentModel.EventDescriptor.AddEventHandler(System.Object,System.Delegate)
  - System.ComponentModel.EventDescriptor.ComponentType
  - System.ComponentModel.EventDescriptor.EventType
  - System.ComponentModel.EventDescriptor.IsMulticast
  - System.ComponentModel.EventDescriptor.RemoveEventHandler(System.Object,System.Delegate)
  langs:
  - csharp
  - vb
  name: EventDescriptor
  fullName: System.ComponentModel.EventDescriptor
  type: Class
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/EventDescriptor.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: EventDescriptor
    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/EventDescriptor.cs
    startLine: 11
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: "\n<p>Provides information about an event.</p>\n"
  remarks: "\n<p>An <xref href=\"System.ComponentModel.EventDescriptor\" data-throw-if-not-resolved=\"false\"></xref> consists of a name, its attributes, the component that the event is bound to, the event delegate, the type of delegate, and whether the delegate is multicast.</p>\n<p>\n<xref href=\"System.ComponentModel.EventDescriptor\" data-throw-if-not-resolved=\"false\"></xref> provides the following <strong>abstract</strong> properties and methods: </p>\n<ul><li>\n<p>\n<xref href=\"System.ComponentModel.EventDescriptor.ComponentType\" data-throw-if-not-resolved=\"false\"></xref> contains the type of the component this event is declared on.</p>\n</li><li>\n<p>\n<xref href=\"System.ComponentModel.EventDescriptor.EventType\" data-throw-if-not-resolved=\"false\"></xref> contains the type of delegate for the event.</p>\n</li><li>\n<p>\n<xref href=\"System.ComponentModel.EventDescriptor.IsMulticast\" data-throw-if-not-resolved=\"false\"></xref> contains a value indicating whether the event delegate is a multicast delegate.</p>\n</li><li>\n<p>\n<xref href=\"System.ComponentModel.EventDescriptor.AddEventHandler(System.Object,System.Delegate)\" data-throw-if-not-resolved=\"false\"></xref> binds the event to a component.</p>\n</li><li>\n<p>\n<xref href=\"System.ComponentModel.EventDescriptor.RemoveEventHandler(System.Object,System.Delegate)\" data-throw-if-not-resolved=\"false\"></xref> unbinds the delegate from the component so that the delegate no longer receives events from the component.</p>\n</li></ul>\n<p>For more information about events, see NIB: Raising an Event. For more information about reflection, see the topics in Reflection in the .NET Framework.</p>\n"
  example:
  - "\n<p>The following code example is built upon the example in the <xref href=\"System.ComponentModel.EventDescriptorCollection\" data-throw-if-not-resolved=\"false\"></xref> class. It prints the information (category, description, and display name) of each event on a button in a text box. It requires that <code>button1</code> and <code>textbox1</code> have been instantiated on a form.</p>EventDescriptor#1"
  syntax:
    content: 'public abstract class EventDescriptor : MemberDescriptor'
    content.vb: >-
      Public MustInherit Class EventDescriptor
          Inherits MemberDescriptor
  seealso:
  - type: System.ComponentModel.MemberDescriptor
    commentId: T:System.ComponentModel.MemberDescriptor
  - type: System.Attribute
    commentId: T:System.Attribute
  inheritance:
  - System.Object
  - System.ComponentModel.MemberDescriptor
  inheritedMembers:
  - System.ComponentModel.MemberDescriptor.AttributeArray
  - System.ComponentModel.MemberDescriptor.Attributes
  - System.ComponentModel.MemberDescriptor.Category
  - System.ComponentModel.MemberDescriptor.Description
  - System.ComponentModel.MemberDescriptor.DesignTimeOnly
  - System.ComponentModel.MemberDescriptor.DisplayName
  - System.ComponentModel.MemberDescriptor.IsBrowsable
  - System.ComponentModel.MemberDescriptor.Name
  - System.ComponentModel.MemberDescriptor.NameHashCode
  - System.ComponentModel.MemberDescriptor.CreateAttributeCollection
  - System.ComponentModel.MemberDescriptor.Equals(System.Object)
  - System.ComponentModel.MemberDescriptor.FillAttributes(System.Collections.IList)
  - System.ComponentModel.MemberDescriptor.FindMethod(System.Type,System.String,System.Type[],System.Type)
  - System.ComponentModel.MemberDescriptor.FindMethod(System.Type,System.String,System.Type[],System.Type,System.Boolean)
  - System.ComponentModel.MemberDescriptor.GetHashCode
  - System.ComponentModel.MemberDescriptor.GetInvocationTarget(System.Type,System.Object)
  - System.ComponentModel.MemberDescriptor.GetSite(System.Object)
  - System.Object.ToString
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: System.ComponentModel.EventDescriptor.#ctor(System.ComponentModel.MemberDescriptor)
  commentId: M:System.ComponentModel.EventDescriptor.#ctor(System.ComponentModel.MemberDescriptor)
  id: '#ctor(System.ComponentModel.MemberDescriptor)'
  parent: System.ComponentModel.EventDescriptor
  langs:
  - csharp
  - vb
  name: EventDescriptor(MemberDescriptor)
  fullName: System.ComponentModel.EventDescriptor.EventDescriptor(System.ComponentModel.MemberDescriptor)
  type: Constructor
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/EventDescriptor.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/EventDescriptor.cs
    startLine: 30
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.ComponentModel.EventDescriptor\" data-throw-if-not-resolved=\"false\"></xref> class with the name and attributes in the specified <xref href=\"System.ComponentModel.MemberDescriptor\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: protected EventDescriptor(MemberDescriptor descr)
    content.vb: Protected Sub New(descr As MemberDescriptor)
    parameters:
    - id: descr
      type: System.ComponentModel.MemberDescriptor
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: System.ComponentModel.EventDescriptor.#ctor(System.ComponentModel.MemberDescriptor,System.Attribute[])
  commentId: M:System.ComponentModel.EventDescriptor.#ctor(System.ComponentModel.MemberDescriptor,System.Attribute[])
  id: '#ctor(System.ComponentModel.MemberDescriptor,System.Attribute[])'
  parent: System.ComponentModel.EventDescriptor
  langs:
  - csharp
  - vb
  name: EventDescriptor(MemberDescriptor, Attribute[])
  fullName: System.ComponentModel.EventDescriptor.EventDescriptor(System.ComponentModel.MemberDescriptor, System.Attribute[])
  type: Constructor
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/EventDescriptor.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/EventDescriptor.cs
    startLine: 42
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.ComponentModel.EventDescriptor\" data-throw-if-not-resolved=\"false\"></xref> class with the name in the specified <xref href=\"System.ComponentModel.MemberDescriptor\" data-throw-if-not-resolved=\"false\"></xref> and the attributes in both the <xref href=\"System.ComponentModel.MemberDescriptor\" data-throw-if-not-resolved=\"false\"></xref> and the <xref href=\"System.Attribute\" data-throw-if-not-resolved=\"false\"></xref> array.</p>\n"
  remarks: "\n<p>This constructor appends the attributes in the <xref href=\"System.Attribute\" data-throw-if-not-resolved=\"false\"></xref> array to the attributes in the <xref href=\"System.ComponentModel.MemberDescriptor\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: protected EventDescriptor(MemberDescriptor descr, Attribute[] attrs)
    content.vb: Protected Sub New(descr As MemberDescriptor, attrs As Attribute())
    parameters:
    - id: descr
      type: System.ComponentModel.MemberDescriptor
    - id: attrs
      type: System.Attribute[]
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: System.ComponentModel.EventDescriptor.EventDescriptor(System.ComponentModel.MemberDescriptor, System.Attribute())
  name.vb: EventDescriptor(MemberDescriptor, Attribute())
- uid: System.ComponentModel.EventDescriptor.#ctor(System.String,System.Attribute[])
  commentId: M:System.ComponentModel.EventDescriptor.#ctor(System.String,System.Attribute[])
  id: '#ctor(System.String,System.Attribute[])'
  parent: System.ComponentModel.EventDescriptor
  langs:
  - csharp
  - vb
  name: EventDescriptor(String, Attribute[])
  fullName: System.ComponentModel.EventDescriptor.EventDescriptor(System.String, System.Attribute[])
  type: Constructor
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/EventDescriptor.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/EventDescriptor.cs
    startLine: 19
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.ComponentModel.EventDescriptor\" data-throw-if-not-resolved=\"false\"></xref> class with the specified name and attribute array.</p>\n"
  syntax:
    content: protected EventDescriptor(string name, Attribute[] attrs)
    content.vb: Protected Sub New(name As String, attrs As Attribute())
    parameters:
    - id: name
      type: System.String
    - id: attrs
      type: System.Attribute[]
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: System.ComponentModel.EventDescriptor.EventDescriptor(System.String, System.Attribute())
  name.vb: EventDescriptor(String, Attribute())
- uid: System.ComponentModel.EventDescriptor.AddEventHandler(System.Object,System.Delegate)
  commentId: M:System.ComponentModel.EventDescriptor.AddEventHandler(System.Object,System.Delegate)
  id: AddEventHandler(System.Object,System.Delegate)
  parent: System.ComponentModel.EventDescriptor
  langs:
  - csharp
  - vb
  name: AddEventHandler(Object, Delegate)
  fullName: System.ComponentModel.EventDescriptor.AddEventHandler(System.Object, System.Delegate)
  type: Method
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/EventDescriptor.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: AddEventHandler
    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/EventDescriptor.cs
    startLine: 75
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: "\n<p>When overridden in a derived class, binds the event to the component.</p>\n"
  remarks: "\n<p>Typically, this method is implemented through reflection. For more information about reflection, see the topics in Reflection in the .NET Framework.</p>\n<p>For more information about delegates, see NIB: Events and Delegates.</p>\n"
  syntax:
    content: public abstract void AddEventHandler(object component, Delegate value)
    content.vb: Public MustOverride Sub AddEventHandler(component As Object, value As  Delegate)
    parameters:
    - id: component
      type: System.Object
    - id: value
      type: System.Delegate
  seealso:
  - type: System.ComponentModel.EventDescriptor.AddEventHandler(System.Object,System.Delegate)
    commentId: M:System.ComponentModel.EventDescriptor.AddEventHandler(System.Object,System.Delegate)
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: System.ComponentModel.EventDescriptor.ComponentType
  commentId: P:System.ComponentModel.EventDescriptor.ComponentType
  id: ComponentType
  parent: System.ComponentModel.EventDescriptor
  langs:
  - csharp
  - vb
  name: ComponentType
  fullName: System.ComponentModel.EventDescriptor.ComponentType
  type: Property
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/EventDescriptor.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ComponentType
    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/EventDescriptor.cs
    startLine: 52
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: "\n<p>When overridden in a derived class, gets the type of component this event is bound to.</p>\n"
  remarks: "\n<p>Typically, this property is implemented through reflection.</p>\n"
  syntax:
    content: public abstract Type ComponentType { get; }
    content.vb: Public MustOverride ReadOnly Property ComponentType As Type
    parameters: []
    return:
      type: System.Type
  seealso:
  - type: System.ComponentModel.EventDescriptor.EventType
    commentId: P:System.ComponentModel.EventDescriptor.EventType
  - type: System.ComponentModel.EventDescriptor.IsMulticast
    commentId: P:System.ComponentModel.EventDescriptor.IsMulticast
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
- uid: System.ComponentModel.EventDescriptor.EventType
  commentId: P:System.ComponentModel.EventDescriptor.EventType
  id: EventType
  parent: System.ComponentModel.EventDescriptor
  langs:
  - csharp
  - vb
  name: EventType
  fullName: System.ComponentModel.EventDescriptor.EventType
  type: Property
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/EventDescriptor.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: EventType
    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/EventDescriptor.cs
    startLine: 59
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: "\n<p>When overridden in a derived class, gets the type of delegate for the event.</p>\n"
  remarks: "\n<p>Typically, this property is implemented through reflection.</p>\n"
  syntax:
    content: public abstract Type EventType { get; }
    content.vb: Public MustOverride ReadOnly Property EventType As Type
    parameters: []
    return:
      type: System.Type
  seealso:
  - type: System.ComponentModel.EventDescriptor.ComponentType
    commentId: P:System.ComponentModel.EventDescriptor.ComponentType
  - type: System.ComponentModel.EventDescriptor.IsMulticast
    commentId: P:System.ComponentModel.EventDescriptor.IsMulticast
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
- uid: System.ComponentModel.EventDescriptor.IsMulticast
  commentId: P:System.ComponentModel.EventDescriptor.IsMulticast
  id: IsMulticast
  parent: System.ComponentModel.EventDescriptor
  langs:
  - csharp
  - vb
  name: IsMulticast
  fullName: System.ComponentModel.EventDescriptor.IsMulticast
  type: Property
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/EventDescriptor.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IsMulticast
    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/EventDescriptor.cs
    startLine: 68
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: "\n<p>When overridden in a derived class, gets a value indicating whether the event delegate is a multicast delegate.</p>\n"
  remarks: "\n<p>Typically, this property is implemented through reflection.</p>\n<p>A multicast delegate differs from a regular delegate in that it can contain references to more than just one method. Methods in a multicast delegate are executed synchronously when the delegate is invoked, in the order in which they appear. If one of the called methods raises an exception, then the delegate ceases and the exception is propagated to the delegate caller.</p>\n"
  syntax:
    content: public abstract bool IsMulticast { get; }
    content.vb: Public MustOverride ReadOnly Property IsMulticast As Boolean
    parameters: []
    return:
      type: System.Boolean
  seealso:
  - type: System.ComponentModel.EventDescriptor.EventType
    commentId: P:System.ComponentModel.EventDescriptor.EventType
  - type: System.ComponentModel.EventDescriptor.ComponentType
    commentId: P:System.ComponentModel.EventDescriptor.ComponentType
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
- uid: System.ComponentModel.EventDescriptor.RemoveEventHandler(System.Object,System.Delegate)
  commentId: M:System.ComponentModel.EventDescriptor.RemoveEventHandler(System.Object,System.Delegate)
  id: RemoveEventHandler(System.Object,System.Delegate)
  parent: System.ComponentModel.EventDescriptor
  langs:
  - csharp
  - vb
  name: RemoveEventHandler(Object, Delegate)
  fullName: System.ComponentModel.EventDescriptor.RemoveEventHandler(System.Object, System.Delegate)
  type: Method
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/EventDescriptor.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: RemoveEventHandler
    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/EventDescriptor.cs
    startLine: 83
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: "\n<p>When overridden in a derived class, unbinds the delegate from the component so that the delegate will no longer receive events from the component.</p>\n"
  remarks: "\n<p>Typically, this method is implemented through reflection. For more information, see the topics in Reflection in the .NET Framework.</p>\n<p>For more information about delegates, see NIB: Events and Delegates.</p>\n"
  syntax:
    content: public abstract void RemoveEventHandler(object component, Delegate value)
    content.vb: Public MustOverride Sub RemoveEventHandler(component As Object, value As  Delegate)
    parameters:
    - id: component
      type: System.Object
    - id: value
      type: System.Delegate
  seealso:
  - type: System.ComponentModel.EventDescriptor.AddEventHandler(System.Object,System.Delegate)
    commentId: M:System.ComponentModel.EventDescriptor.AddEventHandler(System.Object,System.Delegate)
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
references:
- uid: System.ComponentModel
  isExternal: false
  name: System.ComponentModel
  fullName: System.ComponentModel
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System.ComponentModel.MemberDescriptor
  parent: System.ComponentModel
  isExternal: false
  name: MemberDescriptor
  fullName: System.ComponentModel.MemberDescriptor
- uid: System.ComponentModel.MemberDescriptor.AttributeArray
  parent: System.ComponentModel.MemberDescriptor
  isExternal: false
  name: AttributeArray
  fullName: System.ComponentModel.MemberDescriptor.AttributeArray
- uid: System.ComponentModel.MemberDescriptor.Attributes
  parent: System.ComponentModel.MemberDescriptor
  isExternal: false
  name: Attributes
  fullName: System.ComponentModel.MemberDescriptor.Attributes
- uid: System.ComponentModel.MemberDescriptor.Category
  parent: System.ComponentModel.MemberDescriptor
  isExternal: false
  name: Category
  fullName: System.ComponentModel.MemberDescriptor.Category
- uid: System.ComponentModel.MemberDescriptor.Description
  parent: System.ComponentModel.MemberDescriptor
  isExternal: false
  name: Description
  fullName: System.ComponentModel.MemberDescriptor.Description
- uid: System.ComponentModel.MemberDescriptor.DesignTimeOnly
  parent: System.ComponentModel.MemberDescriptor
  isExternal: false
  name: DesignTimeOnly
  fullName: System.ComponentModel.MemberDescriptor.DesignTimeOnly
- uid: System.ComponentModel.MemberDescriptor.DisplayName
  parent: System.ComponentModel.MemberDescriptor
  isExternal: false
  name: DisplayName
  fullName: System.ComponentModel.MemberDescriptor.DisplayName
- uid: System.ComponentModel.MemberDescriptor.IsBrowsable
  parent: System.ComponentModel.MemberDescriptor
  isExternal: false
  name: IsBrowsable
  fullName: System.ComponentModel.MemberDescriptor.IsBrowsable
- uid: System.ComponentModel.MemberDescriptor.Name
  parent: System.ComponentModel.MemberDescriptor
  isExternal: false
  name: Name
  fullName: System.ComponentModel.MemberDescriptor.Name
- uid: System.ComponentModel.MemberDescriptor.NameHashCode
  parent: System.ComponentModel.MemberDescriptor
  isExternal: false
  name: NameHashCode
  fullName: System.ComponentModel.MemberDescriptor.NameHashCode
- uid: System.ComponentModel.MemberDescriptor.CreateAttributeCollection
  parent: System.ComponentModel.MemberDescriptor
  isExternal: false
  name: CreateAttributeCollection()
  fullName: System.ComponentModel.MemberDescriptor.CreateAttributeCollection()
  spec.csharp:
  - uid: System.ComponentModel.MemberDescriptor.CreateAttributeCollection
    name: CreateAttributeCollection
    fullName: System.ComponentModel.MemberDescriptor.CreateAttributeCollection
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ComponentModel.MemberDescriptor.CreateAttributeCollection
    name: CreateAttributeCollection
    fullName: System.ComponentModel.MemberDescriptor.CreateAttributeCollection
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.ComponentModel.MemberDescriptor.Equals(System.Object)
  parent: System.ComponentModel.MemberDescriptor
  isExternal: true
  name: Equals(Object)
  fullName: System.ComponentModel.MemberDescriptor.Equals(System.Object)
  spec.csharp:
  - uid: System.ComponentModel.MemberDescriptor.Equals(System.Object)
    name: Equals
    fullName: System.ComponentModel.MemberDescriptor.Equals
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ComponentModel.MemberDescriptor.Equals(System.Object)
    name: Equals
    fullName: System.ComponentModel.MemberDescriptor.Equals
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.ComponentModel.MemberDescriptor.FillAttributes(System.Collections.IList)
  parent: System.ComponentModel.MemberDescriptor
  isExternal: true
  name: FillAttributes(IList)
  fullName: System.ComponentModel.MemberDescriptor.FillAttributes(System.Collections.IList)
  spec.csharp:
  - uid: System.ComponentModel.MemberDescriptor.FillAttributes(System.Collections.IList)
    name: FillAttributes
    fullName: System.ComponentModel.MemberDescriptor.FillAttributes
  - name: (
    fullName: (
  - uid: System.Collections.IList
    name: IList
    fullName: System.Collections.IList
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ComponentModel.MemberDescriptor.FillAttributes(System.Collections.IList)
    name: FillAttributes
    fullName: System.ComponentModel.MemberDescriptor.FillAttributes
  - name: (
    fullName: (
  - uid: System.Collections.IList
    name: IList
    fullName: System.Collections.IList
    isExternal: true
  - name: )
    fullName: )
- uid: System.ComponentModel.MemberDescriptor.FindMethod(System.Type,System.String,System.Type[],System.Type)
  parent: System.ComponentModel.MemberDescriptor
  isExternal: true
  name: FindMethod(Type, String, Type[], Type)
  fullName: System.ComponentModel.MemberDescriptor.FindMethod(System.Type, System.String, System.Type[], System.Type)
  fullname.vb: System.ComponentModel.MemberDescriptor.FindMethod(System.Type, System.String, System.Type(), System.Type)
  name.vb: FindMethod(Type, String, Type(), Type)
  spec.csharp:
  - uid: System.ComponentModel.MemberDescriptor.FindMethod(System.Type,System.String,System.Type[],System.Type)
    name: FindMethod
    fullName: System.ComponentModel.MemberDescriptor.FindMethod
  - name: (
    fullName: (
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: '[]'
    fullName: '[]'
  - name: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ComponentModel.MemberDescriptor.FindMethod(System.Type,System.String,System.Type[],System.Type)
    name: FindMethod
    fullName: System.ComponentModel.MemberDescriptor.FindMethod
  - name: (
    fullName: (
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: ()
    fullName: ()
  - name: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: )
    fullName: )
- uid: System.ComponentModel.MemberDescriptor.FindMethod(System.Type,System.String,System.Type[],System.Type,System.Boolean)
  parent: System.ComponentModel.MemberDescriptor
  isExternal: true
  name: FindMethod(Type, String, Type[], Type, Boolean)
  fullName: System.ComponentModel.MemberDescriptor.FindMethod(System.Type, System.String, System.Type[], System.Type, System.Boolean)
  fullname.vb: System.ComponentModel.MemberDescriptor.FindMethod(System.Type, System.String, System.Type(), System.Type, System.Boolean)
  name.vb: FindMethod(Type, String, Type(), Type, Boolean)
  spec.csharp:
  - uid: System.ComponentModel.MemberDescriptor.FindMethod(System.Type,System.String,System.Type[],System.Type,System.Boolean)
    name: FindMethod
    fullName: System.ComponentModel.MemberDescriptor.FindMethod
  - name: (
    fullName: (
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: '[]'
    fullName: '[]'
  - name: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ComponentModel.MemberDescriptor.FindMethod(System.Type,System.String,System.Type[],System.Type,System.Boolean)
    name: FindMethod
    fullName: System.ComponentModel.MemberDescriptor.FindMethod
  - name: (
    fullName: (
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: ()
    fullName: ()
  - name: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
- uid: System.ComponentModel.MemberDescriptor.GetHashCode
  parent: System.ComponentModel.MemberDescriptor
  isExternal: false
  name: GetHashCode()
  fullName: System.ComponentModel.MemberDescriptor.GetHashCode()
  spec.csharp:
  - uid: System.ComponentModel.MemberDescriptor.GetHashCode
    name: GetHashCode
    fullName: System.ComponentModel.MemberDescriptor.GetHashCode
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ComponentModel.MemberDescriptor.GetHashCode
    name: GetHashCode
    fullName: System.ComponentModel.MemberDescriptor.GetHashCode
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.ComponentModel.MemberDescriptor.GetInvocationTarget(System.Type,System.Object)
  parent: System.ComponentModel.MemberDescriptor
  isExternal: true
  name: GetInvocationTarget(Type, Object)
  fullName: System.ComponentModel.MemberDescriptor.GetInvocationTarget(System.Type, System.Object)
  spec.csharp:
  - uid: System.ComponentModel.MemberDescriptor.GetInvocationTarget(System.Type,System.Object)
    name: GetInvocationTarget
    fullName: System.ComponentModel.MemberDescriptor.GetInvocationTarget
  - name: (
    fullName: (
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ComponentModel.MemberDescriptor.GetInvocationTarget(System.Type,System.Object)
    name: GetInvocationTarget
    fullName: System.ComponentModel.MemberDescriptor.GetInvocationTarget
  - name: (
    fullName: (
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.ComponentModel.MemberDescriptor.GetSite(System.Object)
  parent: System.ComponentModel.MemberDescriptor
  isExternal: true
  name: GetSite(Object)
  fullName: System.ComponentModel.MemberDescriptor.GetSite(System.Object)
  spec.csharp:
  - uid: System.ComponentModel.MemberDescriptor.GetSite(System.Object)
    name: GetSite
    fullName: System.ComponentModel.MemberDescriptor.GetSite
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ComponentModel.MemberDescriptor.GetSite(System.Object)
    name: GetSite
    fullName: System.ComponentModel.MemberDescriptor.GetSite
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Attribute[]
  isExternal: true
  name: Attribute[]
  fullName: System.Attribute[]
  fullname.vb: System.Attribute()
  name.vb: Attribute()
  spec.csharp:
  - uid: System.Attribute
    name: Attribute
    fullName: System.Attribute
    isExternal: true
  - name: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Attribute
    name: Attribute
    fullName: System.Attribute
    isExternal: true
  - name: ()
    fullName: ()
- uid: System.String
  parent: System
  isExternal: false
  name: String
  fullName: System.String
- uid: System.Delegate
  parent: System
  isExternal: false
  name: Delegate
  fullName: System.Delegate
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  fullName: System.Type
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  fullName: System.Boolean
