items:
- uid: System.Data.SqlClient.SqlClientFactory
  commentId: T:System.Data.SqlClient.SqlClientFactory
  id: SqlClientFactory
  parent: System.Data.SqlClient
  children:
  - System.Data.SqlClient.SqlClientFactory.CreateCommand
  - System.Data.SqlClient.SqlClientFactory.CreateConnection
  - System.Data.SqlClient.SqlClientFactory.CreateConnectionStringBuilder
  - System.Data.SqlClient.SqlClientFactory.CreateParameter
  - System.Data.SqlClient.SqlClientFactory.Instance
  langs:
  - csharp
  - vb
  name: SqlClientFactory
  fullName: System.Data.SqlClient.SqlClientFactory
  type: Class
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlClientFactory.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: SqlClientFactory
    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlClientFactory.cs
    startLine: 13
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlClient
  summary: "\n<p>Represents a set of methods for creating instances of the <xref href=\"System.Data.SqlClient\" data-throw-if-not-resolved=\"false\"></xref> provider's implementation of the data source classes.</p>\n"
  syntax:
    content: 'public sealed class SqlClientFactory : DbProviderFactory'
    content.vb: >-
      Public NotInheritable Class SqlClientFactory
          Inherits DbProviderFactory
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: System.Data.SqlClient.SqlClientFactory.Instance
  commentId: F:System.Data.SqlClient.SqlClientFactory.Instance
  id: Instance
  parent: System.Data.SqlClient.SqlClientFactory
  langs:
  - csharp
  - vb
  name: Instance
  fullName: System.Data.SqlClient.SqlClientFactory.Instance
  type: Field
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlClientFactory.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Instance
    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlClientFactory.cs
    startLine: 15
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlClient
  summary: "\n<p>Gets an instance of the <xref href=\"System.Data.SqlClient.SqlClientFactory\" data-throw-if-not-resolved=\"false\"></xref>. This can be used to retrieve strongly typed data objects.</p>\n"
  example:
  - "\n<p>The following code fragment uses the <xref href=\"System.Data.SqlClient.SqlClientFactory.Instance\" data-throw-if-not-resolved=\"false\"></xref> property to retrieve a <strong>SqlClientFactory</strong> instance, and then return a strongly typed <xref href=\"System.Data.Common.DbCommand\" data-throw-if-not-resolved=\"false\"></xref> instance:</p>\n<pre><code class=\"vb#\">Dim newFactory As SqlClientFactory = SqlClientFactory.Instance\nDim cmd As DbCommand = newFactory.CreateCommand()</code></pre>\n<pre><code class=\"c#\">SqlClientFactory newFactory = SqlClientFactory.Instance;\nDbCommand cmd = newFactory.CreateCommand();</code></pre>\n"
  syntax:
    content: public static readonly SqlClientFactory Instance
    content.vb: Public Shared ReadOnly Instance As SqlClientFactory
    return:
      type: System.Data.SqlClient.SqlClientFactory
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: System.Data.SqlClient.SqlClientFactory.CreateCommand
  commentId: M:System.Data.SqlClient.SqlClientFactory.CreateCommand
  id: CreateCommand
  parent: System.Data.SqlClient.SqlClientFactory
  langs:
  - csharp
  - vb
  name: CreateCommand()
  fullName: System.Data.SqlClient.SqlClientFactory.CreateCommand()
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlClientFactory.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CreateCommand
    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlClientFactory.cs
    startLine: 22
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlClient
  summary: "\n<p>Returns a strongly typed <xref href=\"System.Data.Common.DbCommand\" data-throw-if-not-resolved=\"false\"></xref> instance.</p>\n"
  example:
  - "\n<p>The following code fragment returns a strongly typed <xref href=\"System.Data.Common.DbCommand\" data-throw-if-not-resolved=\"false\"></xref> instance:</p>\n<pre><code class=\"vb#\">Dim newFactory As SqlClientFactory = SqlClientFactory.Instance\nDim cmd As DbCommand = newFactory.CreateCommand()</code></pre>\n<pre><code class=\"c#\">SqlClientFactory newFactory = SqlClientFactory.Instance;\nDbCommand cmd = newFactory.CreateCommand();</code></pre>\n"
  syntax:
    content: public override DbCommand CreateCommand()
    content.vb: Public Overrides Function CreateCommand As DbCommand
    return:
      type: DbCommand
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Data.SqlClient.SqlClientFactory.CreateConnection
  commentId: M:System.Data.SqlClient.SqlClientFactory.CreateConnection
  id: CreateConnection
  parent: System.Data.SqlClient.SqlClientFactory
  langs:
  - csharp
  - vb
  name: CreateConnection()
  fullName: System.Data.SqlClient.SqlClientFactory.CreateConnection()
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlClientFactory.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CreateConnection
    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlClientFactory.cs
    startLine: 28
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlClient
  summary: "\n<p>Returns a strongly typed <xref href=\"System.Data.Common.DbConnection\" data-throw-if-not-resolved=\"false\"></xref> instance.</p>\n"
  example:
  - "\n<p>The following code fragment returns a strongly typed <xref href=\"System.Data.Common.DbConnection\" data-throw-if-not-resolved=\"false\"></xref> instance:</p>\n<pre><code class=\"vb#\">Dim newFactory As SqlClientFactory = SqlClientFactory.Instance\nDim cmd As DbConnection = newFactory.CreateConnection()</code></pre>\n<pre><code class=\"c#\">SqlClientFactory newFactory = SqlClientFactory.Instance;\nDbConnection cmd = newFactory.CreateConnection();</code></pre>\n"
  syntax:
    content: public override DbConnection CreateConnection()
    content.vb: Public Overrides Function CreateConnection As DbConnection
    return:
      type: DbConnection
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Data.SqlClient.SqlClientFactory.CreateConnectionStringBuilder
  commentId: M:System.Data.SqlClient.SqlClientFactory.CreateConnectionStringBuilder
  id: CreateConnectionStringBuilder
  parent: System.Data.SqlClient.SqlClientFactory
  langs:
  - csharp
  - vb
  name: CreateConnectionStringBuilder()
  fullName: System.Data.SqlClient.SqlClientFactory.CreateConnectionStringBuilder()
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlClientFactory.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CreateConnectionStringBuilder
    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlClientFactory.cs
    startLine: 33
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlClient
  summary: "\n<p>Returns a strongly typed <xref href=\"System.Data.Common.DbConnectionStringBuilder\" data-throw-if-not-resolved=\"false\"></xref> instance.</p>\n"
  example:
  - "\n<p>The following code fragment returns a strongly typed <xref href=\"System.Data.Common.DbConnectionStringBuilder\" data-throw-if-not-resolved=\"false\"></xref> instance:</p>\n<pre><code class=\"vb#\">Dim newFactory As SqlClientFactory = SqlClientFactory.Instance\nDim cmd As DbConnectionStringBuilder = _\nnewFactory.CreateConnectionStringBuilder()</code></pre>\n<pre><code class=\"c#\">SqlClientFactory newFactory = SqlClientFactory.Instance;\nDbConnectionStringBuilder cmd = \nnewFactory.CreateConnectionStringBuilder();</code></pre>\n"
  syntax:
    content: public override DbConnectionStringBuilder CreateConnectionStringBuilder()
    content.vb: Public Overrides Function CreateConnectionStringBuilder As DbConnectionStringBuilder
    return:
      type: DbConnectionStringBuilder
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Data.SqlClient.SqlClientFactory.CreateParameter
  commentId: M:System.Data.SqlClient.SqlClientFactory.CreateParameter
  id: CreateParameter
  parent: System.Data.SqlClient.SqlClientFactory
  langs:
  - csharp
  - vb
  name: CreateParameter()
  fullName: System.Data.SqlClient.SqlClientFactory.CreateParameter()
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlClientFactory.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CreateParameter
    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlClientFactory.cs
    startLine: 39
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlClient
  summary: "\n<p>Returns a strongly typed <xref href=\"System.Data.Common.DbParameter\" data-throw-if-not-resolved=\"false\"></xref> instance.</p>\n"
  example:
  - "\n<p>The following code fragment returns a strongly typed <xref href=\"System.Data.Common.DbParameter\" data-throw-if-not-resolved=\"false\"></xref> instance:</p>\n<pre><code class=\"vb#\">Dim newFactory As SqlClientFactory = SqlClientFactory.Instance\nDim cmd As DbParameter = newFactory.CreateParameter()</code></pre>\n<pre><code class=\"c#\">SqlClientFactory newFactory = SqlClientFactory.Instance;\nDbParameter cmd = newFactory.CreateParameter();</code></pre>\n"
  syntax:
    content: public override DbParameter CreateParameter()
    content.vb: Public Overrides Function CreateParameter As DbParameter
    return:
      type: DbParameter
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: System.Data.SqlClient
  isExternal: false
  name: System.Data.SqlClient
  fullName: System.Data.SqlClient
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Data.SqlClient.SqlClientFactory
  parent: System.Data.SqlClient
  isExternal: false
  name: SqlClientFactory
  fullName: System.Data.SqlClient.SqlClientFactory
- uid: System.Data.Common.DbCommand
  parent: System.Data.Common
  isExternal: false
  name: DbCommand
  fullName: System.Data.Common.DbCommand
- uid: System.Data.Common
  isExternal: false
  name: System.Data.Common
  fullName: System.Data.Common
- uid: System.Data.Common.DbConnection
  parent: System.Data.Common
  isExternal: false
  name: DbConnection
  fullName: System.Data.Common.DbConnection
- uid: System.Data.Common.DbConnectionStringBuilder
  parent: System.Data.Common
  isExternal: false
  name: DbConnectionStringBuilder
  fullName: System.Data.Common.DbConnectionStringBuilder
- uid: System.Data.Common.DbParameter
  parent: System.Data.Common
  isExternal: false
  name: DbParameter
  fullName: System.Data.Common.DbParameter
