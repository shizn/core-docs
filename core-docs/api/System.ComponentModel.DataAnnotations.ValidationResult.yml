items:
- uid: System.ComponentModel.DataAnnotations.ValidationResult
  commentId: T:System.ComponentModel.DataAnnotations.ValidationResult
  id: ValidationResult
  parent: System.ComponentModel.DataAnnotations
  children:
  - System.ComponentModel.DataAnnotations.ValidationResult.#ctor(System.ComponentModel.DataAnnotations.ValidationResult)
  - System.ComponentModel.DataAnnotations.ValidationResult.#ctor(System.String)
  - System.ComponentModel.DataAnnotations.ValidationResult.#ctor(System.String,System.Collections.Generic.IEnumerable{System.String})
  - System.ComponentModel.DataAnnotations.ValidationResult.ErrorMessage
  - System.ComponentModel.DataAnnotations.ValidationResult.MemberNames
  - System.ComponentModel.DataAnnotations.ValidationResult.Success
  - System.ComponentModel.DataAnnotations.ValidationResult.ToString
  langs:
  - csharp
  - vb
  name: ValidationResult
  fullName: System.ComponentModel.DataAnnotations.ValidationResult
  type: Class
  source:
    remote:
      path: src/System.ComponentModel.Annotations/src/System/ComponentModel/DataAnnotations/ValidationResult.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ValidationResult
    path: src/System.ComponentModel.Annotations/src/System/ComponentModel/DataAnnotations/ValidationResult.cs
    startLine: 15
  assemblies:
  - System.ComponentModel.Annotations
  namespace: System.ComponentModel.DataAnnotations
  summary: "\n<p>Represents a container for the results of a validation request.</p>\n"
  example:
  - 
  syntax:
    content: public class ValidationResult
    content.vb: Public Class ValidationResult
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: System.ComponentModel.DataAnnotations.ValidationResult.Success
  commentId: F:System.ComponentModel.DataAnnotations.ValidationResult.Success
  id: Success
  parent: System.ComponentModel.DataAnnotations.ValidationResult
  langs:
  - csharp
  - vb
  name: Success
  fullName: System.ComponentModel.DataAnnotations.ValidationResult.Success
  type: Field
  source:
    remote:
      path: src/System.ComponentModel.Annotations/src/System/ComponentModel/DataAnnotations/ValidationResult.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Success
    path: src/System.ComponentModel.Annotations/src/System/ComponentModel/DataAnnotations/ValidationResult.cs
    startLine: 26
  assemblies:
  - System.ComponentModel.Annotations
  namespace: System.ComponentModel.DataAnnotations
  summary: "\n<p>Represents the success of the validation (<strong>true</strong> if validation was successful; otherwise, <strong>false</strong>).</p>\n"
  syntax:
    content: public static readonly ValidationResult Success
    content.vb: Public Shared ReadOnly Success As ValidationResult
    return:
      type: System.ComponentModel.DataAnnotations.ValidationResult
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: System.ComponentModel.DataAnnotations.ValidationResult.#ctor(System.ComponentModel.DataAnnotations.ValidationResult)
  commentId: M:System.ComponentModel.DataAnnotations.ValidationResult.#ctor(System.ComponentModel.DataAnnotations.ValidationResult)
  id: '#ctor(System.ComponentModel.DataAnnotations.ValidationResult)'
  parent: System.ComponentModel.DataAnnotations.ValidationResult
  langs:
  - csharp
  - vb
  name: ValidationResult(ValidationResult)
  fullName: System.ComponentModel.DataAnnotations.ValidationResult.ValidationResult(System.ComponentModel.DataAnnotations.ValidationResult)
  type: Constructor
  source:
    remote:
      path: src/System.ComponentModel.Annotations/src/System/ComponentModel/DataAnnotations/ValidationResult.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.ComponentModel.Annotations/src/System/ComponentModel/DataAnnotations/ValidationResult.cs
    startLine: 71
  assemblies:
  - System.ComponentModel.Annotations
  namespace: System.ComponentModel.DataAnnotations
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.ComponentModel.DataAnnotations.ValidationResult\" data-throw-if-not-resolved=\"false\"></xref> class by using a <xref href=\"System.ComponentModel.DataAnnotations.ValidationResult\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  remarks: "\n<p>The method creates a copy of an exiting <xref href=\"System.ComponentModel.DataAnnotations.ValidationResult\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  example:
  - 
  syntax:
    content: protected ValidationResult(ValidationResult validationResult)
    content.vb: Protected Sub New(validationResult As ValidationResult)
    parameters:
    - id: validationResult
      type: System.ComponentModel.DataAnnotations.ValidationResult
      description: The validation result.
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: System.ComponentModel.DataAnnotations.ValidationResult.#ctor(System.String)
  commentId: M:System.ComponentModel.DataAnnotations.ValidationResult.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.ComponentModel.DataAnnotations.ValidationResult
  langs:
  - csharp
  - vb
  name: ValidationResult(String)
  fullName: System.ComponentModel.DataAnnotations.ValidationResult.ValidationResult(System.String)
  type: Constructor
  source:
    remote:
      path: src/System.ComponentModel.Annotations/src/System/ComponentModel/DataAnnotations/ValidationResult.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.ComponentModel.Annotations/src/System/ComponentModel/DataAnnotations/ValidationResult.cs
    startLine: 43
  assemblies:
  - System.ComponentModel.Annotations
  namespace: System.ComponentModel.DataAnnotations
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.ComponentModel.DataAnnotations.ValidationResult\" data-throw-if-not-resolved=\"false\"></xref> class by using an error message.</p>\n"
  example:
  - 
  syntax:
    content: public ValidationResult(string errorMessage)
    content.vb: Public Sub New(errorMessage As String)
    parameters:
    - id: errorMessage
      type: System.String
      description: "\n    The user-visible error message.  If null, <xref href=\"System.ComponentModel.DataAnnotations.ValidationAttribute.GetValidationResult(System.Object,System.ComponentModel.DataAnnotations.ValidationContext)\" data-throw-if-not-resolved=\"false\"></xref>\n    will use <xref href=\"System.ComponentModel.DataAnnotations.ValidationAttribute.FormatErrorMessage(System.String)\" data-throw-if-not-resolved=\"false\"></xref> for its error message.\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.ComponentModel.DataAnnotations.ValidationResult.#ctor(System.String,System.Collections.Generic.IEnumerable{System.String})
  commentId: M:System.ComponentModel.DataAnnotations.ValidationResult.#ctor(System.String,System.Collections.Generic.IEnumerable{System.String})
  id: '#ctor(System.String,System.Collections.Generic.IEnumerable{System.String})'
  parent: System.ComponentModel.DataAnnotations.ValidationResult
  langs:
  - csharp
  - vb
  name: ValidationResult(String, IEnumerable<String>)
  fullName: System.ComponentModel.DataAnnotations.ValidationResult.ValidationResult(System.String, System.Collections.Generic.IEnumerable<System.String>)
  type: Constructor
  source:
    remote:
      path: src/System.ComponentModel.Annotations/src/System/ComponentModel/DataAnnotations/ValidationResult.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.ComponentModel.Annotations/src/System/ComponentModel/DataAnnotations/ValidationResult.cs
    startLine: 60
  assemblies:
  - System.ComponentModel.Annotations
  namespace: System.ComponentModel.DataAnnotations
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.ComponentModel.DataAnnotations.ValidationResult\" data-throw-if-not-resolved=\"false\"></xref> class by using an error message and a list of members that have validation errors.</p>\n"
  example:
  - 
  syntax:
    content: public ValidationResult(string errorMessage, IEnumerable<string> memberNames)
    content.vb: Public Sub New(errorMessage As String, memberNames As IEnumerable(Of String))
    parameters:
    - id: errorMessage
      type: System.String
      description: "\n    The user-visible error message.  If null, <xref href=\"System.ComponentModel.DataAnnotations.ValidationAttribute.GetValidationResult(System.Object,System.ComponentModel.DataAnnotations.ValidationContext)\" data-throw-if-not-resolved=\"false\"></xref>\n    will use <xref href=\"System.ComponentModel.DataAnnotations.ValidationAttribute.FormatErrorMessage(System.String)\" data-throw-if-not-resolved=\"false\"></xref> for its error message.\n"
    - id: memberNames
      type: System.Collections.Generic.IEnumerable{System.String}
      description: "\n    The list of member names affected by this result.\n    This list of member names is meant to be used by presentation layers to indicate which fields are in error.\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.ComponentModel.DataAnnotations.ValidationResult.ValidationResult(System.String, System.Collections.Generic.IEnumerable(Of System.String))
  name.vb: ValidationResult(String, IEnumerable(Of String))
- uid: System.ComponentModel.DataAnnotations.ValidationResult.ErrorMessage
  commentId: P:System.ComponentModel.DataAnnotations.ValidationResult.ErrorMessage
  id: ErrorMessage
  parent: System.ComponentModel.DataAnnotations.ValidationResult
  langs:
  - csharp
  - vb
  name: ErrorMessage
  fullName: System.ComponentModel.DataAnnotations.ValidationResult.ErrorMessage
  type: Property
  source:
    remote:
      path: src/System.ComponentModel.Annotations/src/System/ComponentModel/DataAnnotations/ValidationResult.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ErrorMessage
    path: src/System.ComponentModel.Annotations/src/System/ComponentModel/DataAnnotations/ValidationResult.cs
    startLine: 97
  assemblies:
  - System.ComponentModel.Annotations
  namespace: System.ComponentModel.DataAnnotations
  summary: "\n<p>Gets the error message for the validation.</p>\n"
  remarks: "\n<p>You can set the <xref href=\"System.ComponentModel.DataAnnotations.ValidationResult.ErrorMessage\" data-throw-if-not-resolved=\"false\"></xref> property to <strong>null</strong>.</p>\n"
  example:
  - 
  syntax:
    content: public string ErrorMessage { get; set; }
    content.vb: Public Property ErrorMessage As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.ComponentModel.DataAnnotations.ValidationResult.MemberNames
  commentId: P:System.ComponentModel.DataAnnotations.ValidationResult.MemberNames
  id: MemberNames
  parent: System.ComponentModel.DataAnnotations.ValidationResult
  langs:
  - csharp
  - vb
  name: MemberNames
  fullName: System.ComponentModel.DataAnnotations.ValidationResult.MemberNames
  type: Property
  source:
    remote:
      path: src/System.ComponentModel.Annotations/src/System/ComponentModel/DataAnnotations/ValidationResult.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: MemberNames
    path: src/System.ComponentModel.Annotations/src/System/ComponentModel/DataAnnotations/ValidationResult.cs
    startLine: 89
  assemblies:
  - System.ComponentModel.Annotations
  namespace: System.ComponentModel.DataAnnotations
  summary: "\n<p>Gets the collection of member names that indicate which fields have validation errors.</p>\n"
  remarks: "\n<p>The collection can be empty, but it will never be <strong>null</strong>.</p>\n"
  example:
  - "\n<p></p>\n<p></p>\n"
  syntax:
    content: public IEnumerable<string> MemberNames { get; }
    content.vb: Public ReadOnly Property MemberNames As IEnumerable(Of String)
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{System.String}
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.ComponentModel.DataAnnotations.ValidationResult.ToString
  commentId: M:System.ComponentModel.DataAnnotations.ValidationResult.ToString
  id: ToString
  parent: System.ComponentModel.DataAnnotations.ValidationResult
  langs:
  - csharp
  - vb
  name: ToString()
  fullName: System.ComponentModel.DataAnnotations.ValidationResult.ToString()
  type: Method
  source:
    remote:
      path: src/System.ComponentModel.Annotations/src/System/ComponentModel/DataAnnotations/ValidationResult.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ToString
    path: src/System.ComponentModel.Annotations/src/System/ComponentModel/DataAnnotations/ValidationResult.cs
    startLine: 120
  assemblies:
  - System.ComponentModel.Annotations
  namespace: System.ComponentModel.DataAnnotations
  summary: "\n<p>Returns a string representation of the current validation result.</p>\n"
  syntax:
    content: public override string ToString()
    content.vb: Public Overrides Function ToString As String
    return:
      type: System.String
      description: "\n    The <xref href=\"System.ComponentModel.DataAnnotations.ValidationResult.ErrorMessage\" data-throw-if-not-resolved=\"false\"></xref> property value if specified,\n    otherwise, the base <xref href=\"System.Object.ToString\" data-throw-if-not-resolved=\"false\"></xref> result.\n"
  overridden: System.Object.ToString
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: System.ComponentModel.DataAnnotations
  isExternal: false
  name: System.ComponentModel.DataAnnotations
  fullName: System.ComponentModel.DataAnnotations
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.ComponentModel.DataAnnotations.ValidationResult
  parent: System.ComponentModel.DataAnnotations
  isExternal: false
  name: ValidationResult
  fullName: System.ComponentModel.DataAnnotations.ValidationResult
- uid: System.String
  parent: System
  isExternal: false
  name: String
  fullName: System.String
- uid: System.Collections.Generic.IEnumerable{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<String>
  fullName: System.Collections.Generic.IEnumerable<System.String>
  fullname.vb: System.Collections.Generic.IEnumerable(Of System.String)
  name.vb: IEnumerable(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
  - name: <
    fullName: <
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
  - name: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  parent: System.Collections.Generic
  isExternal: false
  name: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  fullname.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
