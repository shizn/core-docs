items:
- uid: System.IFormattable
  commentId: T:System.IFormattable
  id: IFormattable
  parent: System
  children:
  - System.IFormattable.ToString(System.String,System.IFormatProvider)
  langs:
  - csharp
  - vb
  name: IFormattable
  fullName: System.IFormattable
  type: Interface
  source:
    remote:
      path: src/mscorlib/src/System/IFormattable.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: IFormattable
    path: src/mscorlib/src/System/IFormattable.cs
    startLine: 9
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Provides functionality to format the value of an object into a string representation.</p>\n"
  remarks: "\n<p>The <xref href=\"System.IFormattable\" data-throw-if-not-resolved=\"false\"></xref> interface converts an object to its string representation based on a format string and a format provider. </p>\n<p>A format string typically defines the general appearance of an object. For example, the .NET Framework supports the following:</p>\n<ul><li>\n<p>Standard format strings for formatting enumeration values (see Enumeration Format Strings).</p>\n</li><li>\n<p>Standard and custom format strings for formatting numeric values (see Standard Numeric Format Strings and Custom Numeric Format Strings).</p>\n</li><li>\n<p>Standard and custom format strings for formatting date and time values (see Standard Date and Time Format Strings and Custom Date and Time Format Strings).</p>\n</li><li>\n<p>Standard and custom format strings for formatting time intervals (see Standard TimeSpan Format Strings and Custom TimeSpan Format Strings).</p>\n</li></ul>\n<p>You can also define your own format strings to support formatting of your application-defined types.</p>\n<p>A format provider returns a formatting object that typically defines the symbols used in converting an object to its string representation. For example, when you convert a number to a currency value, a format provider defines the currency symbol that appears in the result string. The .NET Framework defines three format providers:</p>\n<ul><li>\n<p>The <xref href=\"System.Globalization.CultureInfo\" data-throw-if-not-resolved=\"false\"></xref> class, which returns either a <xref href=\"System.Globalization.NumberFormatInfo\" data-throw-if-not-resolved=\"false\"></xref> object for formatting numeric values, or a <xref href=\"System.Globalization.DateTimeFormatInfo\" data-throw-if-not-resolved=\"false\"></xref> object for formatting date and time values.</p>\n</li><li>\n<p>The <xref href=\"System.Globalization.NumberFormatInfo\" data-throw-if-not-resolved=\"false\"></xref> class, which returns an instance of itself for formatting numeric values.</p>\n</li><li>\n<p>The <xref href=\"System.Globalization.DateTimeFormatInfo\" data-throw-if-not-resolved=\"false\"></xref> class, which returns an instance of itself for formatting date and time values. </p>\n</li></ul>\n<p>In addition, you can define your own custom format providers to supply culture-specific, profession-specific, or industry-specific information used in formatting. For more information about implementing custom formatting by using a custom format provider, see <xref href=\"System.ICustomFormatter\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>The <xref href=\"System.IFormattable\" data-throw-if-not-resolved=\"false\"></xref> interface defines a single method, <xref href=\"System.IFormattable.ToString(System.String,System.IFormatProvider)\" data-throw-if-not-resolved=\"false\"></xref>, that supplies formatting services for the implementing type. The <xref href=\"System.IFormattable.ToString(System.String,System.IFormatProvider)\" data-throw-if-not-resolved=\"false\"></xref> method can be called directly. In addition, it is called automatically by the <xref href=\"System.Convert.ToString(System.Object)\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"System.Convert.ToString(System.Object,System.IFormatProvider)\" data-throw-if-not-resolved=\"false\"></xref> methods, and by methods that use the composite formatting feature in the .NET Framework. Such methods include <xref href=\"System.Console.WriteLine(System.String,System.Object)\" data-throw-if-not-resolved=\"false\"></xref>, <xref href=\"System.String.Format(System.String,System.Object[])\" data-throw-if-not-resolved=\"false\"></xref>, and <xref href=\"System.Text.StringBuilder.AppendFormat(System.String,System.Object)\" data-throw-if-not-resolved=\"false\"></xref>, among others. The <xref href=\"System.IFormattable.ToString(System.String,System.IFormatProvider)\" data-throw-if-not-resolved=\"false\"></xref> method is called for each format item in the method's format string. </p>\n<p>The <xref href=\"System.IFormattable\" data-throw-if-not-resolved=\"false\"></xref> interface is implemented by the base data types.</p>\n"
  example:
  - "\n<p>The following example defines a <code>Temperature</code> class that implements the <xref href=\"System.IFormattable\" data-throw-if-not-resolved=\"false\"></xref> interface. The class supports four format specifiers: \"G\" and \"C\", which indicate that the temperature is to be displayed in Celsius; \"F\", which indicates that the temperature is to be displayed in Fahrenheit; and \"K\", which indicates that the temperature is to be displayed in Kelvin. In addition, the <xref href=\"System.IFormattable.ToString(System.String,System.IFormatProvider)\" data-throw-if-not-resolved=\"false\"></xref> implementation also can handle a format string that is <strong>null</strong> or empty. The other two <code>ToString</code> methods defined by the <code>Temperature</code> class simply wrap a call to the <xref href=\"System.IFormattable.ToString(System.String,System.IFormatProvider)\" data-throw-if-not-resolved=\"false\"></xref> implementation.</p>System.IFormattable#1<p>The following example then calls the <xref href=\"System.IFormattable.ToString(System.String,System.IFormatProvider)\" data-throw-if-not-resolved=\"false\"></xref> implementation either directly or by using a composite format string.</p>System.IFormattable#2"
  syntax:
    content: >-
      [ComVisible(true)]

      public interface IFormattable
    content.vb: >-
      <ComVisible(True)>

      Public Interface IFormattable
  seealso:
  - type: System.IFormatProvider
    commentId: T:System.IFormatProvider
  - type: System.Object.ToString
    commentId: M:System.Object.ToString
  - type: System.Threading.Thread.CurrentCulture
    commentId: P:System.Threading.Thread.CurrentCulture
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: System.IFormattable.ToString(System.String,System.IFormatProvider)
  commentId: M:System.IFormattable.ToString(System.String,System.IFormatProvider)
  id: ToString(System.String,System.IFormatProvider)
  parent: System.IFormattable
  langs:
  - csharp
  - vb
  name: ToString(String, IFormatProvider)
  fullName: System.IFormattable.ToString(System.String, System.IFormatProvider)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/IFormattable.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToString
    path: src/mscorlib/src/System/IFormattable.cs
    startLine: 12
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Formats the value of the current instance using the specified format.</p>\n"
  remarks: "\n<p>The <xref href=\"System.IFormattable.ToString(System.String,System.IFormatProvider)\" data-throw-if-not-resolved=\"false\"></xref> method converts a value to a string representation that can be expressed in multiple ways. Its precise format depends on specific symbols or a specified order defined by specific cultures, professions, or industries. You can call the method directly. It is also called automatically by the <xref href=\"System.Convert.ToString(System.Object)\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"System.Convert.ToString(System.Object,System.IFormatProvider)\" data-throw-if-not-resolved=\"false\"></xref> methods, and by methods that use the composite formatting feature in the .NET Framework, such as <xref href=\"System.String.Format(System.String,System.Object[])\" data-throw-if-not-resolved=\"false\"></xref>, <xref href=\"System.Console.WriteLine(System.String,System.Object[])\" data-throw-if-not-resolved=\"false\"></xref>, and <xref href=\"System.Text.StringBuilder.AppendFormat(System.String,System.Object[])\" data-throw-if-not-resolved=\"false\"></xref>. (For more information, see Composite Formatting.)</p>\n<p>Composite formatting methods call the <xref href=\"System.IFormattable.ToString(System.String,System.IFormatProvider)\" data-throw-if-not-resolved=\"false\"></xref> method once for each format item in a format string. The parameters passed to the method depend on the specific formatting method that is called and on the content of the format item, as follows:</p>\n<ul><li>\n<p>If the format item does not include a format string (for example, if the format item is simply <strong>{0}</strong>), it is passed <strong>null</strong> as the value of the <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref> parameter.</p>\n</li><li>\n<p>If the format item includes a format string (for example, <strong>{0:G}</strong>), that format string is passed as the value of the <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref> parameter.</p>\n</li><li>\n<p>If the original method call does not include an <xref href=\"System.IFormatProvider\" data-throw-if-not-resolved=\"false\"></xref> parameter, <xref href=\"System.Globalization.CultureInfo.CurrentCulture\" data-throw-if-not-resolved=\"false\"></xref> is passed as the value of the <xref href=\"System.IFormatProvider\" data-throw-if-not-resolved=\"false\"></xref> parameter.</p>\n</li><li>\n<p>If the original method call includes an <xref href=\"System.IFormatProvider\" data-throw-if-not-resolved=\"false\"></xref> parameter, the provider that is supplied in the method call is passed as the value of the <xref href=\"System.IFormatProvider\" data-throw-if-not-resolved=\"false\"></xref> parameter.</p>\n</li></ul>\n<p>An object's <xref href=\"System.IFormattable.ToString(System.String,System.IFormatProvider)\" data-throw-if-not-resolved=\"false\"></xref> implementation is called by composite formatting methods only if they are not passed an <xref href=\"System.ICustomFormatter\" data-throw-if-not-resolved=\"false\"></xref> format provider, or if the <xref href=\"System.ICustomFormatter.Format(System.String,System.Object,System.IFormatProvider)\" data-throw-if-not-resolved=\"false\"></xref> method of the custom format provider returns <strong>null</strong>.</p>\n<p>The .NET Framework includes three format providers, all of which implement the <xref href=\"System.IFormatProvider\" data-throw-if-not-resolved=\"false\"></xref> interface:</p>\n<ul><li>\n<p>\n<xref href=\"System.Globalization.NumberFormatInfo\" data-throw-if-not-resolved=\"false\"></xref> supplies numeric formatting information, such as the characters to use for decimal and group separators, and the spelling and placement of currency symbols in monetary values.</p>\n</li><li>\n<p>\n<xref href=\"System.Globalization.DateTimeFormatInfo\" data-throw-if-not-resolved=\"false\"></xref> supplies date-related and time-related formatting information, such as the position of the month, the day, and the year in a date pattern.</p>\n</li><li>\n<p>\n<xref href=\"System.Globalization.CultureInfo\" data-throw-if-not-resolved=\"false\"></xref> contains the default formatting information in a specific culture, including the numeric format information, and date-related and time-related formatting information.</p>\n</li></ul>\n<p>In addition, you can define your own custom format provider.</p>\n"
  example:
  - "\n<p>The following example demonstrates a <code>Temperature</code> class that implements the <xref href=\"System.IFormattable.ToString(System.String,System.IFormatProvider)\" data-throw-if-not-resolved=\"false\"></xref> method. This code example is part of a larger example provided for the <xref href=\"System.IFormattable\" data-throw-if-not-resolved=\"false\"></xref> class.</p>System.IFormattable#1"
  syntax:
    content: string ToString(string format, IFormatProvider formatProvider)
    content.vb: Function ToString(format As String, formatProvider As IFormatProvider) As String
    parameters:
    - id: format
      type: System.String
    - id: formatProvider
      type: System.IFormatProvider
    return:
      type: System.String
  seealso:
  - type: System.String
    commentId: T:System.String
  - type: System.IFormatProvider
    commentId: T:System.IFormatProvider
  - type: System.Globalization.NumberFormatInfo
    commentId: T:System.Globalization.NumberFormatInfo
  - type: System.Globalization.DateTimeFormatInfo
    commentId: T:System.Globalization.DateTimeFormatInfo
  - type: System.Globalization.CultureInfo
    commentId: T:System.Globalization.CultureInfo
references:
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.String
  parent: System
  isExternal: false
  name: String
  fullName: System.String
- uid: System.IFormatProvider
  parent: System
  isExternal: false
  name: IFormatProvider
  fullName: System.IFormatProvider
