items:
- uid: System.IO.MemoryMappedFiles.MemoryMappedFileAccess
  commentId: T:System.IO.MemoryMappedFiles.MemoryMappedFileAccess
  id: MemoryMappedFileAccess
  parent: System.IO.MemoryMappedFiles
  children:
  - System.IO.MemoryMappedFiles.MemoryMappedFileAccess.CopyOnWrite
  - System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Read
  - System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadExecute
  - System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadWrite
  - System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadWriteExecute
  - System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write
  langs:
  - csharp
  - vb
  name: MemoryMappedFileAccess
  fullName: System.IO.MemoryMappedFiles.MemoryMappedFileAccess
  type: Enum
  source:
    remote:
      path: src/System.IO.MemoryMappedFiles/ref/System.IO.MemoryMappedFiles.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: MemoryMappedFileAccess
    path: src/System.IO.MemoryMappedFiles/ref/System.IO.MemoryMappedFiles.cs
    startLine: 51
  assemblies:
  - System.IO.MemoryMappedFiles
  namespace: System.IO.MemoryMappedFiles
  summary: "\n<p>Specifies access capabilities and restrictions for a memory-mapped file or view. </p>\n"
  example:
  - 
  syntax:
    content: public enum MemoryMappedFileAccess
    content.vb: Public Enum MemoryMappedFileAccess
  modifiers.csharp:
  - public
  - enum
  modifiers.vb:
  - Public
  - Enum
- uid: System.IO.MemoryMappedFiles.MemoryMappedFileAccess.CopyOnWrite
  commentId: F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.CopyOnWrite
  id: CopyOnWrite
  parent: System.IO.MemoryMappedFiles.MemoryMappedFileAccess
  langs:
  - csharp
  - vb
  name: CopyOnWrite
  fullName: System.IO.MemoryMappedFiles.MemoryMappedFileAccess.CopyOnWrite
  type: Field
  source:
    remote:
      path: src/System.IO.MemoryMappedFiles/ref/System.IO.MemoryMappedFiles.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CopyOnWrite
    path: src/System.IO.MemoryMappedFiles/ref/System.IO.MemoryMappedFiles.cs
    startLine: 53
  assemblies:
  - System.IO.MemoryMappedFiles
  namespace: System.IO.MemoryMappedFiles
  summary: "\n<p>Read and write access to the file, with the restriction that any write operations will not be seen by other processes. </p>\n"
  syntax:
    content: CopyOnWrite = 3
    return:
      type: System.IO.MemoryMappedFiles.MemoryMappedFileAccess
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Read
  commentId: F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Read
  id: Read
  parent: System.IO.MemoryMappedFiles.MemoryMappedFileAccess
  langs:
  - csharp
  - vb
  name: Read
  fullName: System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Read
  type: Field
  source:
    remote:
      path: src/System.IO.MemoryMappedFiles/ref/System.IO.MemoryMappedFiles.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Read
    path: src/System.IO.MemoryMappedFiles/ref/System.IO.MemoryMappedFiles.cs
    startLine: 54
  assemblies:
  - System.IO.MemoryMappedFiles
  namespace: System.IO.MemoryMappedFiles
  summary: "\n<p>Read-only access to the file.</p>\n"
  syntax:
    content: Read = 1
    return:
      type: System.IO.MemoryMappedFiles.MemoryMappedFileAccess
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadExecute
  commentId: F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadExecute
  id: ReadExecute
  parent: System.IO.MemoryMappedFiles.MemoryMappedFileAccess
  langs:
  - csharp
  - vb
  name: ReadExecute
  fullName: System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadExecute
  type: Field
  source:
    remote:
      path: src/System.IO.MemoryMappedFiles/ref/System.IO.MemoryMappedFiles.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ReadExecute
    path: src/System.IO.MemoryMappedFiles/ref/System.IO.MemoryMappedFiles.cs
    startLine: 55
  assemblies:
  - System.IO.MemoryMappedFiles
  namespace: System.IO.MemoryMappedFiles
  summary: "\n<p>Read access to the file that can store and run executable code.</p>\n"
  syntax:
    content: ReadExecute = 4
    return:
      type: System.IO.MemoryMappedFiles.MemoryMappedFileAccess
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadWrite
  commentId: F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadWrite
  id: ReadWrite
  parent: System.IO.MemoryMappedFiles.MemoryMappedFileAccess
  langs:
  - csharp
  - vb
  name: ReadWrite
  fullName: System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadWrite
  type: Field
  source:
    remote:
      path: src/System.IO.MemoryMappedFiles/ref/System.IO.MemoryMappedFiles.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ReadWrite
    path: src/System.IO.MemoryMappedFiles/ref/System.IO.MemoryMappedFiles.cs
    startLine: 56
  assemblies:
  - System.IO.MemoryMappedFiles
  namespace: System.IO.MemoryMappedFiles
  summary: "\n<p>Read and write access to the file.</p>\n"
  syntax:
    content: ReadWrite = 0
    return:
      type: System.IO.MemoryMappedFiles.MemoryMappedFileAccess
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadWriteExecute
  commentId: F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadWriteExecute
  id: ReadWriteExecute
  parent: System.IO.MemoryMappedFiles.MemoryMappedFileAccess
  langs:
  - csharp
  - vb
  name: ReadWriteExecute
  fullName: System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadWriteExecute
  type: Field
  source:
    remote:
      path: src/System.IO.MemoryMappedFiles/ref/System.IO.MemoryMappedFiles.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ReadWriteExecute
    path: src/System.IO.MemoryMappedFiles/ref/System.IO.MemoryMappedFiles.cs
    startLine: 57
  assemblies:
  - System.IO.MemoryMappedFiles
  namespace: System.IO.MemoryMappedFiles
  summary: "\n<p>Read and write access to the file that can can store and run executable code.</p>\n"
  syntax:
    content: ReadWriteExecute = 5
    return:
      type: System.IO.MemoryMappedFiles.MemoryMappedFileAccess
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write
  commentId: F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write
  id: Write
  parent: System.IO.MemoryMappedFiles.MemoryMappedFileAccess
  langs:
  - csharp
  - vb
  name: Write
  fullName: System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write
  type: Field
  source:
    remote:
      path: src/System.IO.MemoryMappedFiles/ref/System.IO.MemoryMappedFiles.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Write
    path: src/System.IO.MemoryMappedFiles/ref/System.IO.MemoryMappedFiles.cs
    startLine: 58
  assemblies:
  - System.IO.MemoryMappedFiles
  namespace: System.IO.MemoryMappedFiles
  summary: "\n<p>Write-only access to file.</p>\n"
  syntax:
    content: Write = 2
    return:
      type: System.IO.MemoryMappedFiles.MemoryMappedFileAccess
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
references:
- uid: System.IO.MemoryMappedFiles
  isExternal: false
  name: System.IO.MemoryMappedFiles
  fullName: System.IO.MemoryMappedFiles
- uid: System.IO.MemoryMappedFiles.MemoryMappedFileAccess
  parent: System.IO.MemoryMappedFiles
  isExternal: false
  name: MemoryMappedFileAccess
  fullName: System.IO.MemoryMappedFiles.MemoryMappedFileAccess
