items:
- uid: System.Numerics.Matrix3x2
  commentId: T:System.Numerics.Matrix3x2
  id: Matrix3x2
  parent: System.Numerics
  children:
  - System.Numerics.Matrix3x2.#ctor(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)
  - System.Numerics.Matrix3x2.Add(System.Numerics.Matrix3x2,System.Numerics.Matrix3x2)
  - System.Numerics.Matrix3x2.CreateRotation(System.Single)
  - System.Numerics.Matrix3x2.CreateRotation(System.Single,System.Numerics.Vector2)
  - System.Numerics.Matrix3x2.CreateScale(System.Numerics.Vector2)
  - System.Numerics.Matrix3x2.CreateScale(System.Numerics.Vector2,System.Numerics.Vector2)
  - System.Numerics.Matrix3x2.CreateScale(System.Single)
  - System.Numerics.Matrix3x2.CreateScale(System.Single,System.Numerics.Vector2)
  - System.Numerics.Matrix3x2.CreateScale(System.Single,System.Single)
  - System.Numerics.Matrix3x2.CreateScale(System.Single,System.Single,System.Numerics.Vector2)
  - System.Numerics.Matrix3x2.CreateSkew(System.Single,System.Single)
  - System.Numerics.Matrix3x2.CreateSkew(System.Single,System.Single,System.Numerics.Vector2)
  - System.Numerics.Matrix3x2.CreateTranslation(System.Numerics.Vector2)
  - System.Numerics.Matrix3x2.CreateTranslation(System.Single,System.Single)
  - System.Numerics.Matrix3x2.Equals(System.Numerics.Matrix3x2)
  - System.Numerics.Matrix3x2.Equals(System.Object)
  - System.Numerics.Matrix3x2.GetDeterminant
  - System.Numerics.Matrix3x2.GetHashCode
  - System.Numerics.Matrix3x2.Identity
  - System.Numerics.Matrix3x2.Invert(System.Numerics.Matrix3x2,System.Numerics.Matrix3x2@)
  - System.Numerics.Matrix3x2.IsIdentity
  - System.Numerics.Matrix3x2.Lerp(System.Numerics.Matrix3x2,System.Numerics.Matrix3x2,System.Single)
  - System.Numerics.Matrix3x2.M11
  - System.Numerics.Matrix3x2.M12
  - System.Numerics.Matrix3x2.M21
  - System.Numerics.Matrix3x2.M22
  - System.Numerics.Matrix3x2.M31
  - System.Numerics.Matrix3x2.M32
  - System.Numerics.Matrix3x2.Multiply(System.Numerics.Matrix3x2,System.Numerics.Matrix3x2)
  - System.Numerics.Matrix3x2.Multiply(System.Numerics.Matrix3x2,System.Single)
  - System.Numerics.Matrix3x2.Negate(System.Numerics.Matrix3x2)
  - System.Numerics.Matrix3x2.op_Addition(System.Numerics.Matrix3x2,System.Numerics.Matrix3x2)
  - System.Numerics.Matrix3x2.op_Equality(System.Numerics.Matrix3x2,System.Numerics.Matrix3x2)
  - System.Numerics.Matrix3x2.op_Inequality(System.Numerics.Matrix3x2,System.Numerics.Matrix3x2)
  - System.Numerics.Matrix3x2.op_Multiply(System.Numerics.Matrix3x2,System.Numerics.Matrix3x2)
  - System.Numerics.Matrix3x2.op_Multiply(System.Numerics.Matrix3x2,System.Single)
  - System.Numerics.Matrix3x2.op_Subtraction(System.Numerics.Matrix3x2,System.Numerics.Matrix3x2)
  - System.Numerics.Matrix3x2.op_UnaryNegation(System.Numerics.Matrix3x2)
  - System.Numerics.Matrix3x2.Subtract(System.Numerics.Matrix3x2,System.Numerics.Matrix3x2)
  - System.Numerics.Matrix3x2.ToString
  - System.Numerics.Matrix3x2.Translation
  langs:
  - csharp
  - vb
  name: Matrix3x2
  fullName: System.Numerics.Matrix3x2
  type: Struct
  source:
    remote:
      path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Matrix3x2
    path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs
    startLine: 10
  assemblies:
  - System.Numerics.Vectors
  namespace: System.Numerics
  summary: "\n<p>Represents a 3x2 matrix. </p>\n"
  syntax:
    content: >-
      [StructLayout(LayoutKind.Sequential)]

      public struct Matrix3x2 : IEquatable<Matrix3x2>
    content.vb: >-
      <StructLayout(LayoutKind.Sequential)>

      Public Structure Matrix3x2
          Implements IEquatable(Of Matrix3x2)
  implements:
  - System.IEquatable{System.Numerics.Matrix3x2}
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetType
  attributes:
  - type: System.Runtime.InteropServices.StructLayoutAttribute
    ctor: System.Runtime.InteropServices.StructLayoutAttribute.#ctor(System.Runtime.InteropServices.LayoutKind)
    arguments:
    - type: System.Runtime.InteropServices.LayoutKind
      value: 0
  modifiers.csharp:
  - public
  - struct
  modifiers.vb:
  - Public
  - Structure
- uid: System.Numerics.Matrix3x2.M11
  commentId: F:System.Numerics.Matrix3x2.M11
  id: M11
  parent: System.Numerics.Matrix3x2
  langs:
  - csharp
  - vb
  name: M11
  fullName: System.Numerics.Matrix3x2.M11
  type: Field
  source:
    remote:
      path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: M11
    path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs
    startLine: 13
  assemblies:
  - System.Numerics.Vectors
  namespace: System.Numerics
  summary: "\n<p>The first element of the first row. </p>\n"
  syntax:
    content: public float M11
    content.vb: Public M11 As Single
    return:
      type: System.Single
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Numerics.Matrix3x2.M12
  commentId: F:System.Numerics.Matrix3x2.M12
  id: M12
  parent: System.Numerics.Matrix3x2
  langs:
  - csharp
  - vb
  name: M12
  fullName: System.Numerics.Matrix3x2.M12
  type: Field
  source:
    remote:
      path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: M12
    path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs
    startLine: 14
  assemblies:
  - System.Numerics.Vectors
  namespace: System.Numerics
  summary: "\n<p>The second element of the first row. </p>\n"
  syntax:
    content: public float M12
    content.vb: Public M12 As Single
    return:
      type: System.Single
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Numerics.Matrix3x2.M21
  commentId: F:System.Numerics.Matrix3x2.M21
  id: M21
  parent: System.Numerics.Matrix3x2
  langs:
  - csharp
  - vb
  name: M21
  fullName: System.Numerics.Matrix3x2.M21
  type: Field
  source:
    remote:
      path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: M21
    path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs
    startLine: 15
  assemblies:
  - System.Numerics.Vectors
  namespace: System.Numerics
  summary: "\n<p>The first element of the second row. </p>\n"
  syntax:
    content: public float M21
    content.vb: Public M21 As Single
    return:
      type: System.Single
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Numerics.Matrix3x2.M22
  commentId: F:System.Numerics.Matrix3x2.M22
  id: M22
  parent: System.Numerics.Matrix3x2
  langs:
  - csharp
  - vb
  name: M22
  fullName: System.Numerics.Matrix3x2.M22
  type: Field
  source:
    remote:
      path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: M22
    path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs
    startLine: 16
  assemblies:
  - System.Numerics.Vectors
  namespace: System.Numerics
  summary: "\n<p>The second element of the second row. </p>\n"
  syntax:
    content: public float M22
    content.vb: Public M22 As Single
    return:
      type: System.Single
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Numerics.Matrix3x2.M31
  commentId: F:System.Numerics.Matrix3x2.M31
  id: M31
  parent: System.Numerics.Matrix3x2
  langs:
  - csharp
  - vb
  name: M31
  fullName: System.Numerics.Matrix3x2.M31
  type: Field
  source:
    remote:
      path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: M31
    path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs
    startLine: 17
  assemblies:
  - System.Numerics.Vectors
  namespace: System.Numerics
  summary: "\n<p>The first element of the third row. </p>\n"
  syntax:
    content: public float M31
    content.vb: Public M31 As Single
    return:
      type: System.Single
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Numerics.Matrix3x2.M32
  commentId: F:System.Numerics.Matrix3x2.M32
  id: M32
  parent: System.Numerics.Matrix3x2
  langs:
  - csharp
  - vb
  name: M32
  fullName: System.Numerics.Matrix3x2.M32
  type: Field
  source:
    remote:
      path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: M32
    path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs
    startLine: 18
  assemblies:
  - System.Numerics.Vectors
  namespace: System.Numerics
  summary: "\n<p>The second element of the third row. </p>\n"
  syntax:
    content: public float M32
    content.vb: Public M32 As Single
    return:
      type: System.Single
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Numerics.Matrix3x2.#ctor(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)
  commentId: M:System.Numerics.Matrix3x2.#ctor(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)
  id: '#ctor(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)'
  parent: System.Numerics.Matrix3x2
  langs:
  - csharp
  - vb
  name: Matrix3x2(Single, Single, Single, Single, Single, Single)
  fullName: System.Numerics.Matrix3x2.Matrix3x2(System.Single, System.Single, System.Single, System.Single, System.Single, System.Single)
  type: Constructor
  source:
    remote:
      path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs
    startLine: 19
  assemblies:
  - System.Numerics.Vectors
  namespace: System.Numerics
  summary: "\n<p>Creates a 3x2 matrix from the specified components. </p>\n"
  syntax:
    content: public Matrix3x2(float m11, float m12, float m21, float m22, float m31, float m32)
    content.vb: Public Sub New(m11 As Single, m12 As Single, m21 As Single, m22 As Single, m31 As Single, m32 As Single)
    parameters:
    - id: m11
      type: System.Single
      description: "\n<p>The value to assign to the first element in the first row. </p>\n"
    - id: m12
      type: System.Single
      description: "\n<p>The value to assign to the second element in the first row. </p>\n"
    - id: m21
      type: System.Single
      description: "\n<p>The value to assign to the first element in the second row. </p>\n"
    - id: m22
      type: System.Single
      description: "\n<p>The value to assign to the second element in the second row. </p>\n"
    - id: m31
      type: System.Single
      description: "\n<p>The value to assign to the first element in the third row. </p>\n"
    - id: m32
      type: System.Single
      description: "\n<p>The value to assign to the second element in the third row. </p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Numerics.Matrix3x2.Identity
  commentId: P:System.Numerics.Matrix3x2.Identity
  id: Identity
  parent: System.Numerics.Matrix3x2
  langs:
  - csharp
  - vb
  name: Identity
  fullName: System.Numerics.Matrix3x2.Identity
  type: Property
  source:
    remote:
      path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Identity
    path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs
    startLine: 20
  assemblies:
  - System.Numerics.Vectors
  namespace: System.Numerics
  summary: "\n<p>Gets the multiplicative identity matrix. </p>\n"
  syntax:
    content: public static Matrix3x2 Identity { get; }
    content.vb: Public Shared ReadOnly Property Identity As Matrix3x2
    parameters: []
    return:
      type: System.Numerics.Matrix3x2
      description: "\n<p>The multiplicative identify matrix. </p>\n"
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: System.Numerics.Matrix3x2.IsIdentity
  commentId: P:System.Numerics.Matrix3x2.IsIdentity
  id: IsIdentity
  parent: System.Numerics.Matrix3x2
  langs:
  - csharp
  - vb
  name: IsIdentity
  fullName: System.Numerics.Matrix3x2.IsIdentity
  type: Property
  source:
    remote:
      path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IsIdentity
    path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs
    startLine: 21
  assemblies:
  - System.Numerics.Vectors
  namespace: System.Numerics
  summary: "\n<p>Indicates whether the current matrix is the identity matrix. </p>\n"
  syntax:
    content: public bool IsIdentity { get; }
    content.vb: Public ReadOnly Property IsIdentity As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if the current matrix is the identity matrix; otherwise, <strong>false</strong>. </p>\n"
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Numerics.Matrix3x2.Translation
  commentId: P:System.Numerics.Matrix3x2.Translation
  id: Translation
  parent: System.Numerics.Matrix3x2
  langs:
  - csharp
  - vb
  name: Translation
  fullName: System.Numerics.Matrix3x2.Translation
  type: Property
  source:
    remote:
      path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Translation
    path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs
    startLine: 22
  assemblies:
  - System.Numerics.Vectors
  namespace: System.Numerics
  summary: "\n<p>Gets or sets the translation component of this matrix. </p>\n"
  syntax:
    content: public Vector2 Translation { get; set; }
    content.vb: Public Property Translation As Vector2
    parameters: []
    return:
      type: System.Numerics.Vector2
      description: "\n<p>The translation component of the current instance. </p>\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Numerics.Matrix3x2.Add(System.Numerics.Matrix3x2,System.Numerics.Matrix3x2)
  commentId: M:System.Numerics.Matrix3x2.Add(System.Numerics.Matrix3x2,System.Numerics.Matrix3x2)
  id: Add(System.Numerics.Matrix3x2,System.Numerics.Matrix3x2)
  parent: System.Numerics.Matrix3x2
  langs:
  - csharp
  - vb
  name: Add(Matrix3x2, Matrix3x2)
  fullName: System.Numerics.Matrix3x2.Add(System.Numerics.Matrix3x2, System.Numerics.Matrix3x2)
  type: Method
  source:
    remote:
      path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Add
    path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs
    startLine: 23
  assemblies:
  - System.Numerics.Vectors
  namespace: System.Numerics
  summary: "\n<p>Adds each element in one matrix with its corresponding element in a second matrix. </p>\n"
  syntax:
    content: public static Matrix3x2 Add(Matrix3x2 value1, Matrix3x2 value2)
    content.vb: Public Shared Function Add(value1 As Matrix3x2, value2 As Matrix3x2) As Matrix3x2
    parameters:
    - id: value1
      type: System.Numerics.Matrix3x2
      description: "\n<p>The first matrix. </p>\n"
    - id: value2
      type: System.Numerics.Matrix3x2
      description: "\n<p>The second matrix. </p>\n"
    return:
      type: System.Numerics.Matrix3x2
      description: "\n<p>The matrix that contains the summed values of <em>value1</em> and <em>value2</em>. </p>\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Numerics.Matrix3x2.CreateRotation(System.Single)
  commentId: M:System.Numerics.Matrix3x2.CreateRotation(System.Single)
  id: CreateRotation(System.Single)
  parent: System.Numerics.Matrix3x2
  langs:
  - csharp
  - vb
  name: CreateRotation(Single)
  fullName: System.Numerics.Matrix3x2.CreateRotation(System.Single)
  type: Method
  source:
    remote:
      path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CreateRotation
    path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs
    startLine: 24
  assemblies:
  - System.Numerics.Vectors
  namespace: System.Numerics
  summary: "\n<p>Creates a rotation matrix using the given rotation in radians. </p>\n"
  syntax:
    content: public static Matrix3x2 CreateRotation(float radians)
    content.vb: Public Shared Function CreateRotation(radians As Single) As Matrix3x2
    parameters:
    - id: radians
      type: System.Single
      description: "\n<p>The amount of rotation, in radians. </p>\n"
    return:
      type: System.Numerics.Matrix3x2
      description: "\n<p>The rotation matrix. </p>\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Numerics.Matrix3x2.CreateRotation(System.Single,System.Numerics.Vector2)
  commentId: M:System.Numerics.Matrix3x2.CreateRotation(System.Single,System.Numerics.Vector2)
  id: CreateRotation(System.Single,System.Numerics.Vector2)
  parent: System.Numerics.Matrix3x2
  langs:
  - csharp
  - vb
  name: CreateRotation(Single, Vector2)
  fullName: System.Numerics.Matrix3x2.CreateRotation(System.Single, System.Numerics.Vector2)
  type: Method
  source:
    remote:
      path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CreateRotation
    path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs
    startLine: 25
  assemblies:
  - System.Numerics.Vectors
  namespace: System.Numerics
  summary: "\n<p>Creates a rotation matrix using the specified rotation in radians and a center point. </p>\n"
  syntax:
    content: public static Matrix3x2 CreateRotation(float radians, Vector2 centerPoint)
    content.vb: Public Shared Function CreateRotation(radians As Single, centerPoint As Vector2) As Matrix3x2
    parameters:
    - id: radians
      type: System.Single
      description: "\n<p>The amount of rotation, in radians. </p>\n"
    - id: centerPoint
      type: System.Numerics.Vector2
      description: "\n<p>The center point. </p>\n"
    return:
      type: System.Numerics.Matrix3x2
      description: "\n<p>The rotation matrix. </p>\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Numerics.Matrix3x2.CreateScale(System.Numerics.Vector2)
  commentId: M:System.Numerics.Matrix3x2.CreateScale(System.Numerics.Vector2)
  id: CreateScale(System.Numerics.Vector2)
  parent: System.Numerics.Matrix3x2
  langs:
  - csharp
  - vb
  name: CreateScale(Vector2)
  fullName: System.Numerics.Matrix3x2.CreateScale(System.Numerics.Vector2)
  type: Method
  source:
    remote:
      path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CreateScale
    path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs
    startLine: 26
  assemblies:
  - System.Numerics.Vectors
  namespace: System.Numerics
  summary: "\n<p>Creates a scaling matrix from the specified vector scale. </p>\n"
  syntax:
    content: public static Matrix3x2 CreateScale(Vector2 scales)
    content.vb: Public Shared Function CreateScale(scales As Vector2) As Matrix3x2
    parameters:
    - id: scales
      type: System.Numerics.Vector2
      description: "\n<p>The scale to use. </p>\n"
    return:
      type: System.Numerics.Matrix3x2
      description: "\n<p>The scaling matrix. </p>\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Numerics.Matrix3x2.CreateScale(System.Numerics.Vector2,System.Numerics.Vector2)
  commentId: M:System.Numerics.Matrix3x2.CreateScale(System.Numerics.Vector2,System.Numerics.Vector2)
  id: CreateScale(System.Numerics.Vector2,System.Numerics.Vector2)
  parent: System.Numerics.Matrix3x2
  langs:
  - csharp
  - vb
  name: CreateScale(Vector2, Vector2)
  fullName: System.Numerics.Matrix3x2.CreateScale(System.Numerics.Vector2, System.Numerics.Vector2)
  type: Method
  source:
    remote:
      path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CreateScale
    path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs
    startLine: 27
  assemblies:
  - System.Numerics.Vectors
  namespace: System.Numerics
  summary: "\n<p>Creates a scaling matrix from the specified vector scale with an offset from the specified center point. </p>\n"
  syntax:
    content: public static Matrix3x2 CreateScale(Vector2 scales, Vector2 centerPoint)
    content.vb: Public Shared Function CreateScale(scales As Vector2, centerPoint As Vector2) As Matrix3x2
    parameters:
    - id: scales
      type: System.Numerics.Vector2
      description: "\n<p>The scale to use. </p>\n"
    - id: centerPoint
      type: System.Numerics.Vector2
      description: "\n<p>The center offset. </p>\n"
    return:
      type: System.Numerics.Matrix3x2
      description: "\n<p>The scaling matrix. </p>\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Numerics.Matrix3x2.CreateScale(System.Single)
  commentId: M:System.Numerics.Matrix3x2.CreateScale(System.Single)
  id: CreateScale(System.Single)
  parent: System.Numerics.Matrix3x2
  langs:
  - csharp
  - vb
  name: CreateScale(Single)
  fullName: System.Numerics.Matrix3x2.CreateScale(System.Single)
  type: Method
  source:
    remote:
      path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CreateScale
    path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs
    startLine: 28
  assemblies:
  - System.Numerics.Vectors
  namespace: System.Numerics
  summary: "\n<p>Creates a scaling matrix that scales uniformly with the given scale. </p>\n"
  syntax:
    content: public static Matrix3x2 CreateScale(float scale)
    content.vb: Public Shared Function CreateScale(scale As Single) As Matrix3x2
    parameters:
    - id: scale
      type: System.Single
      description: "\n<p>The uniform scale to use. </p>\n"
    return:
      type: System.Numerics.Matrix3x2
      description: "\n<p>The scaling matrix. </p>\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Numerics.Matrix3x2.CreateScale(System.Single,System.Numerics.Vector2)
  commentId: M:System.Numerics.Matrix3x2.CreateScale(System.Single,System.Numerics.Vector2)
  id: CreateScale(System.Single,System.Numerics.Vector2)
  parent: System.Numerics.Matrix3x2
  langs:
  - csharp
  - vb
  name: CreateScale(Single, Vector2)
  fullName: System.Numerics.Matrix3x2.CreateScale(System.Single, System.Numerics.Vector2)
  type: Method
  source:
    remote:
      path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CreateScale
    path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs
    startLine: 29
  assemblies:
  - System.Numerics.Vectors
  namespace: System.Numerics
  summary: "\n<p>Creates a scaling matrix that scales uniformly with the specified scale with an offset from the specified center. </p>\n"
  syntax:
    content: public static Matrix3x2 CreateScale(float scale, Vector2 centerPoint)
    content.vb: Public Shared Function CreateScale(scale As Single, centerPoint As Vector2) As Matrix3x2
    parameters:
    - id: scale
      type: System.Single
      description: "\n<p>The uniform scale to use. </p>\n"
    - id: centerPoint
      type: System.Numerics.Vector2
      description: "\n<p>The center offset. </p>\n"
    return:
      type: System.Numerics.Matrix3x2
      description: "\n<p>The scaling matrix. </p>\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Numerics.Matrix3x2.CreateScale(System.Single,System.Single)
  commentId: M:System.Numerics.Matrix3x2.CreateScale(System.Single,System.Single)
  id: CreateScale(System.Single,System.Single)
  parent: System.Numerics.Matrix3x2
  langs:
  - csharp
  - vb
  name: CreateScale(Single, Single)
  fullName: System.Numerics.Matrix3x2.CreateScale(System.Single, System.Single)
  type: Method
  source:
    remote:
      path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CreateScale
    path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs
    startLine: 30
  assemblies:
  - System.Numerics.Vectors
  namespace: System.Numerics
  summary: "\n<p>Creates a scaling matrix from the specified X and Y components. </p>\n"
  syntax:
    content: public static Matrix3x2 CreateScale(float xScale, float yScale)
    content.vb: Public Shared Function CreateScale(xScale As Single, yScale As Single) As Matrix3x2
    parameters:
    - id: xScale
      type: System.Single
      description: "\n<p>The value to scale by on the X axis. </p>\n"
    - id: yScale
      type: System.Single
      description: "\n<p>The value to scale by on the Y axis. </p>\n"
    return:
      type: System.Numerics.Matrix3x2
      description: "\n<p>The scaling matrix. </p>\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Numerics.Matrix3x2.CreateScale(System.Single,System.Single,System.Numerics.Vector2)
  commentId: M:System.Numerics.Matrix3x2.CreateScale(System.Single,System.Single,System.Numerics.Vector2)
  id: CreateScale(System.Single,System.Single,System.Numerics.Vector2)
  parent: System.Numerics.Matrix3x2
  langs:
  - csharp
  - vb
  name: CreateScale(Single, Single, Vector2)
  fullName: System.Numerics.Matrix3x2.CreateScale(System.Single, System.Single, System.Numerics.Vector2)
  type: Method
  source:
    remote:
      path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CreateScale
    path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs
    startLine: 31
  assemblies:
  - System.Numerics.Vectors
  namespace: System.Numerics
  summary: "\n<p>Creates a scaling matrix that is offset by a given center point. </p>\n"
  syntax:
    content: public static Matrix3x2 CreateScale(float xScale, float yScale, Vector2 centerPoint)
    content.vb: Public Shared Function CreateScale(xScale As Single, yScale As Single, centerPoint As Vector2) As Matrix3x2
    parameters:
    - id: xScale
      type: System.Single
      description: "\n<p>The value to scale by on the X axis. </p>\n"
    - id: yScale
      type: System.Single
      description: "\n<p>The value to scale by on the Y axis. </p>\n"
    - id: centerPoint
      type: System.Numerics.Vector2
      description: "\n<p>The center point. </p>\n"
    return:
      type: System.Numerics.Matrix3x2
      description: "\n<p>The scaling matrix. </p>\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Numerics.Matrix3x2.CreateSkew(System.Single,System.Single)
  commentId: M:System.Numerics.Matrix3x2.CreateSkew(System.Single,System.Single)
  id: CreateSkew(System.Single,System.Single)
  parent: System.Numerics.Matrix3x2
  langs:
  - csharp
  - vb
  name: CreateSkew(Single, Single)
  fullName: System.Numerics.Matrix3x2.CreateSkew(System.Single, System.Single)
  type: Method
  source:
    remote:
      path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CreateSkew
    path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs
    startLine: 32
  assemblies:
  - System.Numerics.Vectors
  namespace: System.Numerics
  summary: "\n<p>Creates a skew matrix from the specified angles in radians. </p>\n"
  syntax:
    content: public static Matrix3x2 CreateSkew(float radiansX, float radiansY)
    content.vb: Public Shared Function CreateSkew(radiansX As Single, radiansY As Single) As Matrix3x2
    parameters:
    - id: radiansX
      type: System.Single
      description: "\n<p>The X angle, in radians. </p>\n"
    - id: radiansY
      type: System.Single
      description: "\n<p>The Y angle, in radians. </p>\n"
    return:
      type: System.Numerics.Matrix3x2
      description: "\n<p>The skew matrix. </p>\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Numerics.Matrix3x2.CreateSkew(System.Single,System.Single,System.Numerics.Vector2)
  commentId: M:System.Numerics.Matrix3x2.CreateSkew(System.Single,System.Single,System.Numerics.Vector2)
  id: CreateSkew(System.Single,System.Single,System.Numerics.Vector2)
  parent: System.Numerics.Matrix3x2
  langs:
  - csharp
  - vb
  name: CreateSkew(Single, Single, Vector2)
  fullName: System.Numerics.Matrix3x2.CreateSkew(System.Single, System.Single, System.Numerics.Vector2)
  type: Method
  source:
    remote:
      path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CreateSkew
    path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs
    startLine: 33
  assemblies:
  - System.Numerics.Vectors
  namespace: System.Numerics
  summary: "\n<p>Creates a skew matrix from the specified angles in radians and a center point. </p>\n"
  syntax:
    content: public static Matrix3x2 CreateSkew(float radiansX, float radiansY, Vector2 centerPoint)
    content.vb: Public Shared Function CreateSkew(radiansX As Single, radiansY As Single, centerPoint As Vector2) As Matrix3x2
    parameters:
    - id: radiansX
      type: System.Single
      description: "\n<p>The X angle, in radians. </p>\n"
    - id: radiansY
      type: System.Single
      description: "\n<p>The Y angle, in radians. </p>\n"
    - id: centerPoint
      type: System.Numerics.Vector2
      description: "\n<p>The center point. </p>\n"
    return:
      type: System.Numerics.Matrix3x2
      description: "\n<p>The skew matrix. </p>\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Numerics.Matrix3x2.CreateTranslation(System.Numerics.Vector2)
  commentId: M:System.Numerics.Matrix3x2.CreateTranslation(System.Numerics.Vector2)
  id: CreateTranslation(System.Numerics.Vector2)
  parent: System.Numerics.Matrix3x2
  langs:
  - csharp
  - vb
  name: CreateTranslation(Vector2)
  fullName: System.Numerics.Matrix3x2.CreateTranslation(System.Numerics.Vector2)
  type: Method
  source:
    remote:
      path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CreateTranslation
    path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs
    startLine: 34
  assemblies:
  - System.Numerics.Vectors
  namespace: System.Numerics
  summary: "\n<p>Creates a translation matrix from the specified 2-dimensional vector. </p>\n"
  syntax:
    content: public static Matrix3x2 CreateTranslation(Vector2 position)
    content.vb: Public Shared Function CreateTranslation(position As Vector2) As Matrix3x2
    parameters:
    - id: position
      type: System.Numerics.Vector2
      description: "\n<p>The translation position. </p>\n"
    return:
      type: System.Numerics.Matrix3x2
      description: "\n<p>The translation matrix. </p>\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Numerics.Matrix3x2.CreateTranslation(System.Single,System.Single)
  commentId: M:System.Numerics.Matrix3x2.CreateTranslation(System.Single,System.Single)
  id: CreateTranslation(System.Single,System.Single)
  parent: System.Numerics.Matrix3x2
  langs:
  - csharp
  - vb
  name: CreateTranslation(Single, Single)
  fullName: System.Numerics.Matrix3x2.CreateTranslation(System.Single, System.Single)
  type: Method
  source:
    remote:
      path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CreateTranslation
    path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs
    startLine: 35
  assemblies:
  - System.Numerics.Vectors
  namespace: System.Numerics
  summary: "\n<p>Creates a translation matrix from the specified X and Y components. </p>\n"
  syntax:
    content: public static Matrix3x2 CreateTranslation(float xPosition, float yPosition)
    content.vb: Public Shared Function CreateTranslation(xPosition As Single, yPosition As Single) As Matrix3x2
    parameters:
    - id: xPosition
      type: System.Single
      description: "\n<p>The X position. </p>\n"
    - id: yPosition
      type: System.Single
      description: "\n<p>The Y position. </p>\n"
    return:
      type: System.Numerics.Matrix3x2
      description: "\n<p>The translation matrix. </p>\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Numerics.Matrix3x2.Equals(System.Numerics.Matrix3x2)
  commentId: M:System.Numerics.Matrix3x2.Equals(System.Numerics.Matrix3x2)
  id: Equals(System.Numerics.Matrix3x2)
  parent: System.Numerics.Matrix3x2
  langs:
  - csharp
  - vb
  name: Equals(Matrix3x2)
  fullName: System.Numerics.Matrix3x2.Equals(System.Numerics.Matrix3x2)
  type: Method
  source:
    remote:
      path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Equals
    path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs
    startLine: 36
  assemblies:
  - System.Numerics.Vectors
  namespace: System.Numerics
  summary: "\n<p>Returns a value that indicates whether this instance and another 3x2 matrix are equal. </p>\n"
  remarks: "\n<p>Two matrices are equal if all their corresponding elements are equal.</p>\n"
  syntax:
    content: public bool Equals(Matrix3x2 other)
    content.vb: Public Function Equals(other As Matrix3x2) As Boolean
    parameters:
    - id: other
      type: System.Numerics.Matrix3x2
      description: "\n<p>The other matrix. </p>\n"
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if the two matrices are equal; otherwise, <strong>false</strong>.</p>\n"
  implements:
  - System.IEquatable{System.Numerics.Matrix3x2}.Equals(System.Numerics.Matrix3x2)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Numerics.Matrix3x2.Equals(System.Object)
  commentId: M:System.Numerics.Matrix3x2.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Numerics.Matrix3x2
  langs:
  - csharp
  - vb
  name: Equals(Object)
  fullName: System.Numerics.Matrix3x2.Equals(System.Object)
  type: Method
  source:
    remote:
      path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Equals
    path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs
    startLine: 37
  assemblies:
  - System.Numerics.Vectors
  namespace: System.Numerics
  summary: "\n<p>Returns a value that indicates whether this instance and a specified object are equal. </p>\n"
  remarks: "\n<p>The current instance and <em>obj</em> are equal if <em>obj</em> is a <xref href=\"System.Numerics.Matrix3x2\" data-throw-if-not-resolved=\"false\"></xref> object and the corresponding elements of each matrix are equal. </p>\n"
  syntax:
    content: public override bool Equals(object obj)
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
    parameters:
    - id: obj
      type: System.Object
      description: "\n<p>The object to compare with the current instance. </p>\n"
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if the current instance and <em>obj</em> are equal; otherwise, <strong>false</strong><strong></strong>. If <em>obj</em> is <strong>null</strong>, the method returns <strong>false</strong>. </p>\n"
  overridden: System.ValueType.Equals(System.Object)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Numerics.Matrix3x2.GetDeterminant
  commentId: M:System.Numerics.Matrix3x2.GetDeterminant
  id: GetDeterminant
  parent: System.Numerics.Matrix3x2
  langs:
  - csharp
  - vb
  name: GetDeterminant()
  fullName: System.Numerics.Matrix3x2.GetDeterminant()
  type: Method
  source:
    remote:
      path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetDeterminant
    path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs
    startLine: 38
  assemblies:
  - System.Numerics.Vectors
  namespace: System.Numerics
  summary: "\n<p>Calculates the determinant for this matrix. </p>\n"
  remarks: "\n<p>The determinant is calculated by expanding the matrix with a third column whose values are (0,0,1). </p>\n"
  syntax:
    content: public float GetDeterminant()
    content.vb: Public Function GetDeterminant As Single
    return:
      type: System.Single
      description: "\n<p>The determinant. </p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Numerics.Matrix3x2.GetHashCode
  commentId: M:System.Numerics.Matrix3x2.GetHashCode
  id: GetHashCode
  parent: System.Numerics.Matrix3x2
  langs:
  - csharp
  - vb
  name: GetHashCode()
  fullName: System.Numerics.Matrix3x2.GetHashCode()
  type: Method
  source:
    remote:
      path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetHashCode
    path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs
    startLine: 39
  assemblies:
  - System.Numerics.Vectors
  namespace: System.Numerics
  summary: "\n<p>Returns the hash code for this instance. </p>\n"
  syntax:
    content: public override int GetHashCode()
    content.vb: Public Overrides Function GetHashCode As Integer
    return:
      type: System.Int32
      description: "\n<p>The hash code. </p>\n"
  overridden: System.ValueType.GetHashCode
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Numerics.Matrix3x2.Invert(System.Numerics.Matrix3x2,System.Numerics.Matrix3x2@)
  commentId: M:System.Numerics.Matrix3x2.Invert(System.Numerics.Matrix3x2,System.Numerics.Matrix3x2@)
  id: Invert(System.Numerics.Matrix3x2,System.Numerics.Matrix3x2@)
  parent: System.Numerics.Matrix3x2
  langs:
  - csharp
  - vb
  name: Invert(Matrix3x2, out Matrix3x2)
  fullName: System.Numerics.Matrix3x2.Invert(System.Numerics.Matrix3x2, out System.Numerics.Matrix3x2)
  type: Method
  source:
    remote:
      path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Invert
    path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs
    startLine: 40
  assemblies:
  - System.Numerics.Vectors
  namespace: System.Numerics
  summary: "\n<p>Inverts the specified matrix. The return value indicates whether the operation succeeded. </p>\n"
  syntax:
    content: public static bool Invert(Matrix3x2 matrix, out Matrix3x2 result)
    content.vb: Public Shared Function Invert(matrix As Matrix3x2, ByRef result As Matrix3x2) As Boolean
    parameters:
    - id: matrix
      type: System.Numerics.Matrix3x2
      description: "\n<p>The matrix to invert. </p>\n"
    - id: result
      type: System.Numerics.Matrix3x2
      description: "\n<p>When this method returns, contains the inverted matrix if the operation succeeded. </p>\n"
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if <em>matrix</em> was converted successfully; otherwise,  <strong>false</strong>. </p>\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Numerics.Matrix3x2.Invert(System.Numerics.Matrix3x2, ByRef System.Numerics.Matrix3x2)
  name.vb: Invert(Matrix3x2, ByRef Matrix3x2)
- uid: System.Numerics.Matrix3x2.Lerp(System.Numerics.Matrix3x2,System.Numerics.Matrix3x2,System.Single)
  commentId: M:System.Numerics.Matrix3x2.Lerp(System.Numerics.Matrix3x2,System.Numerics.Matrix3x2,System.Single)
  id: Lerp(System.Numerics.Matrix3x2,System.Numerics.Matrix3x2,System.Single)
  parent: System.Numerics.Matrix3x2
  langs:
  - csharp
  - vb
  name: Lerp(Matrix3x2, Matrix3x2, Single)
  fullName: System.Numerics.Matrix3x2.Lerp(System.Numerics.Matrix3x2, System.Numerics.Matrix3x2, System.Single)
  type: Method
  source:
    remote:
      path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Lerp
    path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs
    startLine: 41
  assemblies:
  - System.Numerics.Vectors
  namespace: System.Numerics
  summary: "\n<p>Performs a linear interpolation from one matrix to a second matrix based on a value that specifies the weighting of the second matrix. </p>\n"
  syntax:
    content: public static Matrix3x2 Lerp(Matrix3x2 matrix1, Matrix3x2 matrix2, float amount)
    content.vb: Public Shared Function Lerp(matrix1 As Matrix3x2, matrix2 As Matrix3x2, amount As Single) As Matrix3x2
    parameters:
    - id: matrix1
      type: System.Numerics.Matrix3x2
      description: "\n<p>The first matrix. </p>\n"
    - id: matrix2
      type: System.Numerics.Matrix3x2
      description: "\n<p>The second matrix. </p>\n"
    - id: amount
      type: System.Single
      description: "\n<p>The relative weighting of <em>matrix2</em>. </p>\n"
    return:
      type: System.Numerics.Matrix3x2
      description: "\n<p>The interpolated matrix. </p>\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Numerics.Matrix3x2.Multiply(System.Numerics.Matrix3x2,System.Numerics.Matrix3x2)
  commentId: M:System.Numerics.Matrix3x2.Multiply(System.Numerics.Matrix3x2,System.Numerics.Matrix3x2)
  id: Multiply(System.Numerics.Matrix3x2,System.Numerics.Matrix3x2)
  parent: System.Numerics.Matrix3x2
  langs:
  - csharp
  - vb
  name: Multiply(Matrix3x2, Matrix3x2)
  fullName: System.Numerics.Matrix3x2.Multiply(System.Numerics.Matrix3x2, System.Numerics.Matrix3x2)
  type: Method
  source:
    remote:
      path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Multiply
    path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs
    startLine: 42
  assemblies:
  - System.Numerics.Vectors
  namespace: System.Numerics
  summary: "\n<p>Returns the matrix that results from multiplying two matrices together. </p>\n"
  syntax:
    content: public static Matrix3x2 Multiply(Matrix3x2 value1, Matrix3x2 value2)
    content.vb: Public Shared Function Multiply(value1 As Matrix3x2, value2 As Matrix3x2) As Matrix3x2
    parameters:
    - id: value1
      type: System.Numerics.Matrix3x2
      description: "\n<p>The first matrix. </p>\n"
    - id: value2
      type: System.Numerics.Matrix3x2
      description: "\n<p>The second matrix. </p>\n"
    return:
      type: System.Numerics.Matrix3x2
      description: "\n<p>The product matrix. </p>\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Numerics.Matrix3x2.Multiply(System.Numerics.Matrix3x2,System.Single)
  commentId: M:System.Numerics.Matrix3x2.Multiply(System.Numerics.Matrix3x2,System.Single)
  id: Multiply(System.Numerics.Matrix3x2,System.Single)
  parent: System.Numerics.Matrix3x2
  langs:
  - csharp
  - vb
  name: Multiply(Matrix3x2, Single)
  fullName: System.Numerics.Matrix3x2.Multiply(System.Numerics.Matrix3x2, System.Single)
  type: Method
  source:
    remote:
      path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Multiply
    path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs
    startLine: 43
  assemblies:
  - System.Numerics.Vectors
  namespace: System.Numerics
  summary: "\n<p>Returns the matrix that results from scaling all the elements of a specified matrix by a scalar factor. </p>\n"
  syntax:
    content: public static Matrix3x2 Multiply(Matrix3x2 value1, float value2)
    content.vb: Public Shared Function Multiply(value1 As Matrix3x2, value2 As Single) As Matrix3x2
    parameters:
    - id: value1
      type: System.Numerics.Matrix3x2
      description: "\n<p>The matrix to scale. </p>\n"
    - id: value2
      type: System.Single
      description: "\n<p>The scaling value to use. </p>\n"
    return:
      type: System.Numerics.Matrix3x2
      description: "\n<p>The scaled matrix. </p>\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Numerics.Matrix3x2.Negate(System.Numerics.Matrix3x2)
  commentId: M:System.Numerics.Matrix3x2.Negate(System.Numerics.Matrix3x2)
  id: Negate(System.Numerics.Matrix3x2)
  parent: System.Numerics.Matrix3x2
  langs:
  - csharp
  - vb
  name: Negate(Matrix3x2)
  fullName: System.Numerics.Matrix3x2.Negate(System.Numerics.Matrix3x2)
  type: Method
  source:
    remote:
      path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Negate
    path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs
    startLine: 44
  assemblies:
  - System.Numerics.Vectors
  namespace: System.Numerics
  summary: "\n<p>Negates the specified matrix by multiplying all its values by -1. </p>\n"
  syntax:
    content: public static Matrix3x2 Negate(Matrix3x2 value)
    content.vb: Public Shared Function Negate(value As Matrix3x2) As Matrix3x2
    parameters:
    - id: value
      type: System.Numerics.Matrix3x2
      description: "\n<p>The matrix to negate. </p>\n"
    return:
      type: System.Numerics.Matrix3x2
      description: "\n<p>The negated matrix. </p>\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Numerics.Matrix3x2.op_Addition(System.Numerics.Matrix3x2,System.Numerics.Matrix3x2)
  commentId: M:System.Numerics.Matrix3x2.op_Addition(System.Numerics.Matrix3x2,System.Numerics.Matrix3x2)
  id: op_Addition(System.Numerics.Matrix3x2,System.Numerics.Matrix3x2)
  parent: System.Numerics.Matrix3x2
  langs:
  - csharp
  - vb
  name: Addition(Matrix3x2, Matrix3x2)
  fullName: System.Numerics.Matrix3x2.Addition(System.Numerics.Matrix3x2, System.Numerics.Matrix3x2)
  type: Operator
  source:
    remote:
      path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_Addition
    path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs
    startLine: 45
  assemblies:
  - System.Numerics.Vectors
  namespace: System.Numerics
  summary: "\n<p>Adds each element in one matrix with its corresponding element in a second matrix. </p>\n"
  remarks: "\n<p>The <xref href=\"System.Numerics.Matrix3x2.op_Addition(System.Numerics.Matrix3x2,System.Numerics.Matrix3x2)\" data-throw-if-not-resolved=\"false\"></xref> method defines the operation of the addition operator for <xref href=\"System.Numerics.Matrix3x2\" data-throw-if-not-resolved=\"false\"></xref> objects. </p>\n"
  syntax:
    content: public static Matrix3x2 operator +(Matrix3x2 value1, Matrix3x2 value2)
    content.vb: Public Shared Operator +(value1 As Matrix3x2, value2 As Matrix3x2) As Matrix3x2
    parameters:
    - id: value1
      type: System.Numerics.Matrix3x2
      description: "\n<p>The first matrix. </p>\n"
    - id: value2
      type: System.Numerics.Matrix3x2
      description: "\n<p>The second matrix. </p>\n"
    return:
      type: System.Numerics.Matrix3x2
      description: "\n<p>The matrix that contains the summed values. </p>\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Numerics.Matrix3x2.op_Equality(System.Numerics.Matrix3x2,System.Numerics.Matrix3x2)
  commentId: M:System.Numerics.Matrix3x2.op_Equality(System.Numerics.Matrix3x2,System.Numerics.Matrix3x2)
  id: op_Equality(System.Numerics.Matrix3x2,System.Numerics.Matrix3x2)
  parent: System.Numerics.Matrix3x2
  langs:
  - csharp
  - vb
  name: Equality(Matrix3x2, Matrix3x2)
  fullName: System.Numerics.Matrix3x2.Equality(System.Numerics.Matrix3x2, System.Numerics.Matrix3x2)
  type: Operator
  source:
    remote:
      path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_Equality
    path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs
    startLine: 46
  assemblies:
  - System.Numerics.Vectors
  namespace: System.Numerics
  summary: "\n<p>Returns a value that indicates whether the specified matrices are equal. </p>\n"
  remarks: "\n<p>Two matrices are equal if all their corresponding elements are equal. </p>\n"
  syntax:
    content: public static bool operator ==(Matrix3x2 value1, Matrix3x2 value2)
    content.vb: Public Shared Operator =(value1 As Matrix3x2, value2 As Matrix3x2) As Boolean
    parameters:
    - id: value1
      type: System.Numerics.Matrix3x2
      description: "\n<p>The first matrix to compare. </p>\n"
    - id: value2
      type: System.Numerics.Matrix3x2
      description: "\n<p>The second matrix to compare. </p>\n"
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if <em>value1</em> and <em>value2</em> are equal; otherwise, <strong>false</strong>. </p>\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Numerics.Matrix3x2.op_Inequality(System.Numerics.Matrix3x2,System.Numerics.Matrix3x2)
  commentId: M:System.Numerics.Matrix3x2.op_Inequality(System.Numerics.Matrix3x2,System.Numerics.Matrix3x2)
  id: op_Inequality(System.Numerics.Matrix3x2,System.Numerics.Matrix3x2)
  parent: System.Numerics.Matrix3x2
  langs:
  - csharp
  - vb
  name: Inequality(Matrix3x2, Matrix3x2)
  fullName: System.Numerics.Matrix3x2.Inequality(System.Numerics.Matrix3x2, System.Numerics.Matrix3x2)
  type: Operator
  source:
    remote:
      path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_Inequality
    path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs
    startLine: 47
  assemblies:
  - System.Numerics.Vectors
  namespace: System.Numerics
  summary: "\n<p>Returns a value that indicates whether the specified matrices are not equal. </p>\n"
  syntax:
    content: public static bool operator !=(Matrix3x2 value1, Matrix3x2 value2)
    content.vb: Public Shared Operator <>(value1 As Matrix3x2, value2 As Matrix3x2) As Boolean
    parameters:
    - id: value1
      type: System.Numerics.Matrix3x2
      description: "\n<p>The first matrix to compare. </p>\n"
    - id: value2
      type: System.Numerics.Matrix3x2
      description: "\n<p>The second matrix to compare. </p>\n"
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if <em>value1</em> and <em>value2</em> are not equal; otherwise, <strong>false</strong>. </p>\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Numerics.Matrix3x2.op_Multiply(System.Numerics.Matrix3x2,System.Numerics.Matrix3x2)
  commentId: M:System.Numerics.Matrix3x2.op_Multiply(System.Numerics.Matrix3x2,System.Numerics.Matrix3x2)
  id: op_Multiply(System.Numerics.Matrix3x2,System.Numerics.Matrix3x2)
  parent: System.Numerics.Matrix3x2
  langs:
  - csharp
  - vb
  name: Multiply(Matrix3x2, Matrix3x2)
  fullName: System.Numerics.Matrix3x2.Multiply(System.Numerics.Matrix3x2, System.Numerics.Matrix3x2)
  type: Operator
  source:
    remote:
      path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_Multiply
    path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs
    startLine: 48
  assemblies:
  - System.Numerics.Vectors
  namespace: System.Numerics
  summary: "\n<p>Returns the matrix that results from multiplying two matrices together. </p>\n"
  remarks: "\n<p>The <xref href=\"System.Numerics.Matrix3x2.op_Multiply(System.Numerics.Matrix3x2,System.Numerics.Matrix3x2)\" data-throw-if-not-resolved=\"false\"></xref> method defines the operation of the multiplication operator for <xref href=\"System.Numerics.Matrix3x2\" data-throw-if-not-resolved=\"false\"></xref> objects. </p>\n"
  syntax:
    content: public static Matrix3x2 operator *(Matrix3x2 value1, Matrix3x2 value2)
    content.vb: Public Shared Operator *(value1 As Matrix3x2, value2 As Matrix3x2) As Matrix3x2
    parameters:
    - id: value1
      type: System.Numerics.Matrix3x2
      description: "\n<p>The first matrix. </p>\n"
    - id: value2
      type: System.Numerics.Matrix3x2
      description: "\n<p>The second matrix. </p>\n"
    return:
      type: System.Numerics.Matrix3x2
      description: "\n<p>The product matrix. </p>\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Numerics.Matrix3x2.op_Multiply(System.Numerics.Matrix3x2,System.Single)
  commentId: M:System.Numerics.Matrix3x2.op_Multiply(System.Numerics.Matrix3x2,System.Single)
  id: op_Multiply(System.Numerics.Matrix3x2,System.Single)
  parent: System.Numerics.Matrix3x2
  langs:
  - csharp
  - vb
  name: Multiply(Matrix3x2, Single)
  fullName: System.Numerics.Matrix3x2.Multiply(System.Numerics.Matrix3x2, System.Single)
  type: Operator
  source:
    remote:
      path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_Multiply
    path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs
    startLine: 49
  assemblies:
  - System.Numerics.Vectors
  namespace: System.Numerics
  summary: "\n<p>Returns the matrix that results from scaling all the elements of a specified matrix by a scalar factor. </p>\n"
  remarks: "\n<p>The <xref href=\"System.Numerics.Matrix3x2.op_Multiply(System.Numerics.Matrix3x2,System.Single)\" data-throw-if-not-resolved=\"false\"></xref> method defines the operation of the multiplication operator for <xref href=\"System.Numerics.Matrix3x2\" data-throw-if-not-resolved=\"false\"></xref> objects. </p>\n"
  syntax:
    content: public static Matrix3x2 operator *(Matrix3x2 value1, float value2)
    content.vb: Public Shared Operator *(value1 As Matrix3x2, value2 As Single) As Matrix3x2
    parameters:
    - id: value1
      type: System.Numerics.Matrix3x2
      description: "\n<p>The matrix to scale. </p>\n"
    - id: value2
      type: System.Single
      description: "\n<p>The scaling value to use. </p>\n"
    return:
      type: System.Numerics.Matrix3x2
      description: "\n<p>The scaled matrix. </p>\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Numerics.Matrix3x2.op_Subtraction(System.Numerics.Matrix3x2,System.Numerics.Matrix3x2)
  commentId: M:System.Numerics.Matrix3x2.op_Subtraction(System.Numerics.Matrix3x2,System.Numerics.Matrix3x2)
  id: op_Subtraction(System.Numerics.Matrix3x2,System.Numerics.Matrix3x2)
  parent: System.Numerics.Matrix3x2
  langs:
  - csharp
  - vb
  name: Subtraction(Matrix3x2, Matrix3x2)
  fullName: System.Numerics.Matrix3x2.Subtraction(System.Numerics.Matrix3x2, System.Numerics.Matrix3x2)
  type: Operator
  source:
    remote:
      path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_Subtraction
    path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs
    startLine: 50
  assemblies:
  - System.Numerics.Vectors
  namespace: System.Numerics
  summary: "\n<p>Subtracts each element in a second matrix from its corresponding element in a first matrix. </p>\n"
  remarks: "\n<p>The <xref href=\"System.Numerics.Matrix3x2.Subtract(System.Numerics.Matrix3x2,System.Numerics.Matrix3x2)\" data-throw-if-not-resolved=\"false\"></xref> method defines the operation of the subtraction operator for <xref href=\"System.Numerics.Matrix3x2\" data-throw-if-not-resolved=\"false\"></xref> objects. </p>\n"
  syntax:
    content: public static Matrix3x2 operator -(Matrix3x2 value1, Matrix3x2 value2)
    content.vb: Public Shared Operator -(value1 As Matrix3x2, value2 As Matrix3x2) As Matrix3x2
    parameters:
    - id: value1
      type: System.Numerics.Matrix3x2
      description: "\n<p>The first matrix. </p>\n"
    - id: value2
      type: System.Numerics.Matrix3x2
      description: "\n<p>The second matrix. </p>\n"
    return:
      type: System.Numerics.Matrix3x2
      description: "\n<p>The matrix containing the values that result from subtracting each element in <em>value2</em> from its corresponding element in <em>value1</em>. </p>\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Numerics.Matrix3x2.op_UnaryNegation(System.Numerics.Matrix3x2)
  commentId: M:System.Numerics.Matrix3x2.op_UnaryNegation(System.Numerics.Matrix3x2)
  id: op_UnaryNegation(System.Numerics.Matrix3x2)
  parent: System.Numerics.Matrix3x2
  langs:
  - csharp
  - vb
  name: UnaryNegation(Matrix3x2)
  fullName: System.Numerics.Matrix3x2.UnaryNegation(System.Numerics.Matrix3x2)
  type: Operator
  source:
    remote:
      path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_UnaryNegation
    path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs
    startLine: 51
  assemblies:
  - System.Numerics.Vectors
  namespace: System.Numerics
  summary: "\n<p>Negates the specified matrix by multiplying all its values by -1. </p>\n"
  syntax:
    content: public static Matrix3x2 operator -(Matrix3x2 value)
    content.vb: Public Shared Operator -(value As Matrix3x2) As Matrix3x2
    parameters:
    - id: value
      type: System.Numerics.Matrix3x2
      description: "\n<p>The matrix to negate. </p>\n"
    return:
      type: System.Numerics.Matrix3x2
      description: "\n<p>The negated matrix. </p>\n"
  seealso:
  - type: System.Numerics.Matrix3x2.Negate(System.Numerics.Matrix3x2)
    commentId: M:System.Numerics.Matrix3x2.Negate(System.Numerics.Matrix3x2)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Numerics.Matrix3x2.Subtract(System.Numerics.Matrix3x2,System.Numerics.Matrix3x2)
  commentId: M:System.Numerics.Matrix3x2.Subtract(System.Numerics.Matrix3x2,System.Numerics.Matrix3x2)
  id: Subtract(System.Numerics.Matrix3x2,System.Numerics.Matrix3x2)
  parent: System.Numerics.Matrix3x2
  langs:
  - csharp
  - vb
  name: Subtract(Matrix3x2, Matrix3x2)
  fullName: System.Numerics.Matrix3x2.Subtract(System.Numerics.Matrix3x2, System.Numerics.Matrix3x2)
  type: Method
  source:
    remote:
      path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Subtract
    path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs
    startLine: 52
  assemblies:
  - System.Numerics.Vectors
  namespace: System.Numerics
  summary: "\n<p>Subtracts each element in a second matrix from its corresponding element in a first matrix. </p>\n"
  syntax:
    content: public static Matrix3x2 Subtract(Matrix3x2 value1, Matrix3x2 value2)
    content.vb: Public Shared Function Subtract(value1 As Matrix3x2, value2 As Matrix3x2) As Matrix3x2
    parameters:
    - id: value1
      type: System.Numerics.Matrix3x2
      description: "\n<p>The first matrix. </p>\n"
    - id: value2
      type: System.Numerics.Matrix3x2
      description: "\n<p>The second matrix. </p>\n"
    return:
      type: System.Numerics.Matrix3x2
      description: "\n<p>The matrix containing the values that result from subtracting each element in <em>value2</em> from its corresponding element in <em>value1</em>. </p>\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Numerics.Matrix3x2.ToString
  commentId: M:System.Numerics.Matrix3x2.ToString
  id: ToString
  parent: System.Numerics.Matrix3x2
  langs:
  - csharp
  - vb
  name: ToString()
  fullName: System.Numerics.Matrix3x2.ToString()
  type: Method
  source:
    remote:
      path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ToString
    path: src/System.Numerics.Vectors/ref/System.Numerics.Vectors.cs
    startLine: 53
  assemblies:
  - System.Numerics.Vectors
  namespace: System.Numerics
  summary: "\n<p>Returns a string that represents this matrix. </p>\n"
  remarks: "\n<p>The numeric values in the returned string are formatted by using the conventions of the current culture. For example, for the en-US culture, the returned string might appear as <code>{ {M11:1.1 M12:1.2} {M21:2.1 M22:2.2} {M31:3.1 M32:3.2} }</code>. </p>\n"
  syntax:
    content: public override string ToString()
    content.vb: Public Overrides Function ToString As String
    return:
      type: System.String
      description: "\n<p>The string representation of this matrix. </p>\n"
  overridden: System.ValueType.ToString
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: System.Numerics
  isExternal: false
  name: System.Numerics
  fullName: System.Numerics
- uid: System.IEquatable{System.Numerics.Matrix3x2}
  parent: System
  definition: System.IEquatable`1
  name: IEquatable<Matrix3x2>
  fullName: System.IEquatable<System.Numerics.Matrix3x2>
  fullname.vb: System.IEquatable(Of System.Numerics.Matrix3x2)
  name.vb: IEquatable(Of Matrix3x2)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Numerics.Matrix3x2
    name: Matrix3x2
    fullName: System.Numerics.Matrix3x2
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Numerics.Matrix3x2
    name: Matrix3x2
    fullName: System.Numerics.Matrix3x2
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.IEquatable`1
  parent: System
  isExternal: false
  name: IEquatable<T>
  fullName: System.IEquatable<T>
  fullname.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    fullName: System.IEquatable
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    fullName: System.IEquatable
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System.Single
  parent: System
  isExternal: false
  name: Single
  fullName: System.Single
- uid: System.Numerics.Matrix3x2
  parent: System.Numerics
  isExternal: false
  name: Matrix3x2
  fullName: System.Numerics.Matrix3x2
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  fullName: System.Boolean
- uid: System.Numerics.Vector2
  parent: System.Numerics
  isExternal: false
  name: Vector2
  fullName: System.Numerics.Vector2
- uid: System.IEquatable{System.Numerics.Matrix3x2}.Equals(System.Numerics.Matrix3x2)
  parent: System.IEquatable{System.Numerics.Matrix3x2}
  definition: System.IEquatable`1.Equals(`0)
  name: Equals(Matrix3x2)
  fullName: System.IEquatable<System.Numerics.Matrix3x2>.Equals(System.Numerics.Matrix3x2)
  fullname.vb: System.IEquatable(Of System.Numerics.Matrix3x2).Equals(System.Numerics.Matrix3x2)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    fullName: System.IEquatable<System.Numerics.Matrix3x2>.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Numerics.Matrix3x2
    name: Matrix3x2
    fullName: System.Numerics.Matrix3x2
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    fullName: System.IEquatable(Of System.Numerics.Matrix3x2).Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Numerics.Matrix3x2
    name: Matrix3x2
    fullName: System.Numerics.Matrix3x2
  - name: )
    fullName: )
- uid: System.IEquatable`1.Equals(`0)
  parent: System.IEquatable`1
  isExternal: false
  name: Equals(T)
  fullName: System.IEquatable<T>.Equals(T)
  fullname.vb: System.IEquatable(Of T).Equals(T)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    fullName: System.IEquatable<T>.Equals
  - name: (
    fullName: (
  - name: T
    fullName: T
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    fullName: System.IEquatable(Of T).Equals
  - name: (
    fullName: (
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  name: Equals(Object)
  fullName: System.ValueType.Equals(System.Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    fullName: System.ValueType.Equals
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    fullName: System.ValueType.Equals
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.ValueType
  parent: System
  isExternal: false
  name: ValueType
  fullName: System.ValueType
- uid: System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: false
  name: GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    fullName: System.ValueType.GetHashCode
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    fullName: System.ValueType.GetHashCode
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  fullName: System.Int32
- uid: System.ValueType.ToString
  parent: System.ValueType
  isExternal: false
  name: ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    fullName: System.ValueType.ToString
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    fullName: System.ValueType.ToString
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.String
  parent: System
  isExternal: false
  name: String
  fullName: System.String
