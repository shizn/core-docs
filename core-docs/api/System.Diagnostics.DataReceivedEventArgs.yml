items:
- uid: System.Diagnostics.DataReceivedEventArgs
  commentId: T:System.Diagnostics.DataReceivedEventArgs
  id: DataReceivedEventArgs
  parent: System.Diagnostics
  children:
  - System.Diagnostics.DataReceivedEventArgs.Data
  langs:
  - csharp
  - vb
  name: DataReceivedEventArgs
  fullName: System.Diagnostics.DataReceivedEventArgs
  type: Class
  source:
    remote:
      path: src/System.Diagnostics.Process/src/System/Diagnostics/DataReceivedEventArgs.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: DataReceivedEventArgs
    path: src/System.Diagnostics.Process/src/System/Diagnostics/DataReceivedEventArgs.cs
    startLine: 8
  assemblies:
  - System.Diagnostics.Process
  namespace: System.Diagnostics
  summary: "\n<p>Provides data for the <xref href=\"System.Diagnostics.Process.OutputDataReceived\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"System.Diagnostics.Process.ErrorDataReceived\" data-throw-if-not-resolved=\"false\"></xref> events.</p>\n"
  remarks: "\n<p>To asynchronously collect the redirected <xref href=\"System.Diagnostics.Process.StandardOutput\" data-throw-if-not-resolved=\"false\"></xref> or <xref href=\"System.Diagnostics.Process.StandardError\" data-throw-if-not-resolved=\"false\"></xref> stream output of a process, you must create a method that handles the redirected stream output events. The event-handler method is called when the process writes to the redirected stream. The event delegate calls your event handler with an instance of <xref href=\"System.Diagnostics.DataReceivedEventArgs\" data-throw-if-not-resolved=\"false\"></xref>. The <xref href=\"System.Diagnostics.DataReceivedEventArgs.Data\" data-throw-if-not-resolved=\"false\"></xref> property contains the text line that the process wrote to the redirected stream.</p>\n"
  example:
  - "\n<p>The following code example illustrates how to perform asynchronous read operations on the redirected <xref href=\"System.Diagnostics.Process.StandardOutput\" data-throw-if-not-resolved=\"false\"></xref> stream of the <strong>sort</strong> command. The <strong>sort</strong> command is a console application that reads and sorts text input.</p>\n<p>The example creates an event delegate for the <code>SortOutputHandler</code> event handler and associates it with the <xref href=\"System.Diagnostics.Process.OutputDataReceived\" data-throw-if-not-resolved=\"false\"></xref> event. The event handler receives text lines from the redirected <xref href=\"System.Diagnostics.Process.StandardOutput\" data-throw-if-not-resolved=\"false\"></xref> stream, formats the text, and writes the text to the screen.</p>Process_AsyncStreams#1"
  syntax:
    content: 'public class DataReceivedEventArgs : EventArgs'
    content.vb: >-
      Public Class DataReceivedEventArgs
          Inherits EventArgs
  seealso:
  - type: System.Diagnostics.DataReceivedEventHandler
    commentId: T:System.Diagnostics.DataReceivedEventHandler
  - type: System.Diagnostics.Process.OutputDataReceived
    commentId: E:System.Diagnostics.Process.OutputDataReceived
  - type: System.Diagnostics.Process.ErrorDataReceived
    commentId: E:System.Diagnostics.Process.ErrorDataReceived
  - type: System.Diagnostics.Process
    commentId: T:System.Diagnostics.Process
  inheritance:
  - System.Object
  - System.EventArgs
  inheritedMembers:
  - System.EventArgs.Empty
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: System.Diagnostics.DataReceivedEventArgs.Data
  commentId: P:System.Diagnostics.DataReceivedEventArgs.Data
  id: Data
  parent: System.Diagnostics.DataReceivedEventArgs
  langs:
  - csharp
  - vb
  name: Data
  fullName: System.Diagnostics.DataReceivedEventArgs.Data
  type: Property
  source:
    remote:
      path: src/System.Diagnostics.Process/src/System/Diagnostics/DataReceivedEventArgs.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Data
    path: src/System.Diagnostics.Process/src/System/Diagnostics/DataReceivedEventArgs.cs
    startLine: 17
  assemblies:
  - System.Diagnostics.Process
  namespace: System.Diagnostics
  summary: "\n<p>Gets the line of characters that was written to a redirected <xref href=\"System.Diagnostics.Process\" data-throw-if-not-resolved=\"false\"></xref> output stream.</p>\n"
  remarks: "\n<p>When you redirect the <xref href=\"System.Diagnostics.Process.StandardOutput\" data-throw-if-not-resolved=\"false\"></xref> or <xref href=\"System.Diagnostics.Process.StandardError\" data-throw-if-not-resolved=\"false\"></xref> stream of a <xref href=\"System.Diagnostics.Process\" data-throw-if-not-resolved=\"false\"></xref> to your event handler, an event is raised each time the process writes a line to the redirected stream. The <xref href=\"System.Diagnostics.DataReceivedEventArgs.Data\" data-throw-if-not-resolved=\"false\"></xref> property is the line that the <xref href=\"System.Diagnostics.Process\" data-throw-if-not-resolved=\"false\"></xref> wrote to the redirected output stream. Your event handler can use the <xref href=\"System.Diagnostics.DataReceivedEventArgs.Data\" data-throw-if-not-resolved=\"false\"></xref> property to filter process output or write output to an alternate location. For example, you might create an event handler that stores all error output lines into a designated error log file.</p>\n<p>A line is defined as a sequence of characters followed by a line feed (\"\\n\") or a carriage return immediately followed by a line feed (\"\\r\\n\"). The line characters are encoded using the default system ANSI code page. The <xref href=\"System.Diagnostics.DataReceivedEventArgs.Data\" data-throw-if-not-resolved=\"false\"></xref> property does not include the terminating carriage return or line feed.</p>\n<p>When the redirected stream is closed, a null line is sent to the event handler. Ensure your event handler checks the <xref href=\"System.Diagnostics.DataReceivedEventArgs.Data\" data-throw-if-not-resolved=\"false\"></xref> property appropriately before accessing it. For example, you can use the static method <xref href=\"System.String.IsNullOrEmpty(System.String)\" data-throw-if-not-resolved=\"false\"></xref> to validate the <xref href=\"System.Diagnostics.DataReceivedEventArgs.Data\" data-throw-if-not-resolved=\"false\"></xref> property in your event handler.</p>\n"
  example:
  - "\n<p>The following code example illustrates a simple event handler associated with the <xref href=\"System.Diagnostics.Process.OutputDataReceived\" data-throw-if-not-resolved=\"false\"></xref> event. The event handler receives text lines from the redirected <xref href=\"System.Diagnostics.Process.StandardOutput\" data-throw-if-not-resolved=\"false\"></xref> stream, formats the text, and writes the text to the screen.</p>Process_AsyncStreams#4"
  syntax:
    content: public string Data { get; }
    content.vb: Public ReadOnly Property Data As String
    parameters: []
    return:
      type: System.String
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: System.Diagnostics
  isExternal: false
  name: System.Diagnostics
  fullName: System.Diagnostics
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System.EventArgs
  parent: System
  isExternal: false
  name: EventArgs
  fullName: System.EventArgs
- uid: System.EventArgs.Empty
  parent: System.EventArgs
  isExternal: true
  name: Empty
  fullName: System.EventArgs.Empty
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.String
  parent: System
  isExternal: false
  name: String
  fullName: System.String
