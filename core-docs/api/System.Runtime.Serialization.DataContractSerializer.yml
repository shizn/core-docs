items:
- uid: System.Runtime.Serialization.DataContractSerializer
  commentId: T:System.Runtime.Serialization.DataContractSerializer
  id: DataContractSerializer
  parent: System.Runtime.Serialization
  children:
  - System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type)
  - System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.Collections.Generic.IEnumerable{System.Type})
  - System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.Runtime.Serialization.DataContractSerializerSettings)
  - System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.String,System.String)
  - System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.String,System.String,System.Collections.Generic.IEnumerable{System.Type})
  - System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)
  - System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Collections.Generic.IEnumerable{System.Type})
  - System.Runtime.Serialization.DataContractSerializer.IgnoreExtensionDataObject
  - System.Runtime.Serialization.DataContractSerializer.IsStartObject(System.Xml.XmlDictionaryReader)
  - System.Runtime.Serialization.DataContractSerializer.IsStartObject(System.Xml.XmlReader)
  - System.Runtime.Serialization.DataContractSerializer.KnownTypes
  - System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph
  - System.Runtime.Serialization.DataContractSerializer.PreserveObjectReferences
  - System.Runtime.Serialization.DataContractSerializer.ReadObject(System.Xml.XmlDictionaryReader,System.Boolean)
  - System.Runtime.Serialization.DataContractSerializer.ReadObject(System.Xml.XmlReader)
  - System.Runtime.Serialization.DataContractSerializer.ReadObject(System.Xml.XmlReader,System.Boolean)
  - System.Runtime.Serialization.DataContractSerializer.SerializeReadOnlyTypes
  - System.Runtime.Serialization.DataContractSerializer.WriteEndObject(System.Xml.XmlDictionaryWriter)
  - System.Runtime.Serialization.DataContractSerializer.WriteEndObject(System.Xml.XmlWriter)
  - System.Runtime.Serialization.DataContractSerializer.WriteObject(System.Xml.XmlWriter,System.Object)
  - System.Runtime.Serialization.DataContractSerializer.WriteObjectContent(System.Xml.XmlDictionaryWriter,System.Object)
  - System.Runtime.Serialization.DataContractSerializer.WriteObjectContent(System.Xml.XmlWriter,System.Object)
  - System.Runtime.Serialization.DataContractSerializer.WriteStartObject(System.Xml.XmlDictionaryWriter,System.Object)
  - System.Runtime.Serialization.DataContractSerializer.WriteStartObject(System.Xml.XmlWriter,System.Object)
  langs:
  - csharp
  - vb
  name: DataContractSerializer
  fullName: System.Runtime.Serialization.DataContractSerializer
  type: Class
  source:
    remote:
      path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: DataContractSerializer
    path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
    startLine: 16
  assemblies:
  - System.Runtime.Serialization.Xml
  namespace: System.Runtime.Serialization
  summary: "\n<p>Serializes and deserializes an instance of a type into an XML stream or document using a supplied data contract. This class cannot be inherited. </p>\n"
  remarks: "\n<p>Use the <xref href=\"System.Runtime.Serialization.DataContractSerializer\" data-throw-if-not-resolved=\"false\"></xref> class to serialize and deserialize instances of a type into an XML stream or document. For example, you can create a type named <code>Person</code> with properties that contain essential data, such as a name and address. You can then create and manipulate an instance of the <code>Person</code> class and write all of its property values in an XML document for later retrieval, or in an XML stream for immediate transport. Most important, the <xref href=\"System.Runtime.Serialization.DataContractSerializer\" data-throw-if-not-resolved=\"false\"></xref> is used to serialize and deserialize data sent in Windows Communication Foundation (WCF) messages. Apply the <xref href=\"System.Runtime.Serialization.DataContractAttribute\" data-throw-if-not-resolved=\"false\"></xref> attribute to classes, and the <xref href=\"System.Runtime.Serialization.DataMemberAttribute\" data-throw-if-not-resolved=\"false\"></xref> attribute to class members to specify properties and fields that are serialized. </p>\n<p>For a list of types that can be serialized, see Types Supported by the Data Contract Serializer.</p>\n<p>To use the <xref href=\"System.Runtime.Serialization.DataContractSerializer\" data-throw-if-not-resolved=\"false\"></xref>, first create an instance of a class and an object appropriate to writing or reading the format; for example, an instance of the <xref href=\"System.Xml.XmlDictionaryWriter\" data-throw-if-not-resolved=\"false\"></xref>. Then call the <xref href=\"System.Runtime.Serialization.XmlObjectSerializer.WriteObject(System.Xml.XmlDictionaryWriter,System.Object)\" data-throw-if-not-resolved=\"false\"></xref> method to persist the data. To retrieve data, create an object appropriate to reading the data format (such as an <xref href=\"System.Xml.XmlDictionaryReader\" data-throw-if-not-resolved=\"false\"></xref> for an XML document) and call the <see cref=\"Overload:System.Runtime.Serialization.DataContractSerializer.ReadObject\"></see> method. </p>\n<p>For more information about using the <xref href=\"System.Runtime.Serialization.DataContractSerializer\" data-throw-if-not-resolved=\"false\"></xref>, see Serialization and Deserialization.</p>\n<p>You can set the type of a data contract serializer using the <dataContractSerializer> element in a client application configuration file.</p>\n"
  example:
  - <p>The following example code shows a type named <code>Person</code> that is serialized by the <xref href="System.Runtime.Serialization.DataContractSerializer" data-throw-if-not-resolved="false"></xref>. The <xref href="System.Runtime.Serialization.DataContractAttribute" data-throw-if-not-resolved="false"></xref> attribute is applied to the class, and the <xref href="System.Runtime.Serialization.DataMemberAttribute" data-throw-if-not-resolved="false"></xref> is applied to members to instruct the <xref href="System.Runtime.Serialization.DataContractSerializer" data-throw-if-not-resolved="false"></xref> what to serialize. </p>DataContractSerializer#0
  syntax:
    content: 'public sealed class DataContractSerializer : XmlObjectSerializer'
    content.vb: >-
      Public NotInheritable Class DataContractSerializer
          Inherits XmlObjectSerializer
  seealso:
  - type: System.Runtime.Serialization.DataMemberAttribute
    commentId: T:System.Runtime.Serialization.DataMemberAttribute
  - type: System.Runtime.Serialization.DataContractAttribute
    commentId: T:System.Runtime.Serialization.DataContractAttribute
  - type: System.Runtime.Serialization.IExtensibleDataObject
    commentId: T:System.Runtime.Serialization.IExtensibleDataObject
  - type: System.Runtime.Serialization.ExtensionDataObject
    commentId: T:System.Runtime.Serialization.ExtensionDataObject
  inheritance:
  - System.Object
  - System.Runtime.Serialization.XmlObjectSerializer
  inheritedMembers:
  - System.Runtime.Serialization.XmlObjectSerializer.ReadObject(System.IO.Stream)
  - System.Runtime.Serialization.XmlObjectSerializer.ReadObject(System.Xml.XmlDictionaryReader)
  - System.Runtime.Serialization.XmlObjectSerializer.WriteObject(System.IO.Stream,System.Object)
  - System.Runtime.Serialization.XmlObjectSerializer.WriteObject(System.Xml.XmlDictionaryWriter,System.Object)
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type)
  commentId: M:System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type)
  id: '#ctor(System.Type)'
  parent: System.Runtime.Serialization.DataContractSerializer
  langs:
  - csharp
  - vb
  name: DataContractSerializer(Type)
  fullName: System.Runtime.Serialization.DataContractSerializer.DataContractSerializer(System.Type)
  type: Constructor
  source:
    remote:
      path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
    startLine: 18
  assemblies:
  - System.Runtime.Serialization.Xml
  namespace: System.Runtime.Serialization
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Runtime.Serialization.DataContractSerializer\" data-throw-if-not-resolved=\"false\"></xref> class to serialize or deserialize an object of the specified type.</p>\n"
  example:
  - "\n<p>The following example creates an instance of the <xref href=\"System.Runtime.Serialization.DataContractSerializer\" data-throw-if-not-resolved=\"false\"></xref> that specifies the type to serialize or deserialize.</p>DataContractSerializer#8"
  syntax:
    content: public DataContractSerializer(Type type)
    content.vb: Public Sub New(type As Type)
    parameters:
    - id: type
      type: System.Type
      description: "\n<p>The type of the instances that are serialized or deserialized.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.Collections.Generic.IEnumerable{System.Type})
  commentId: M:System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.Collections.Generic.IEnumerable{System.Type})
  id: '#ctor(System.Type,System.Collections.Generic.IEnumerable{System.Type})'
  parent: System.Runtime.Serialization.DataContractSerializer
  langs:
  - csharp
  - vb
  name: DataContractSerializer(Type, IEnumerable<Type>)
  fullName: System.Runtime.Serialization.DataContractSerializer.DataContractSerializer(System.Type, System.Collections.Generic.IEnumerable<System.Type>)
  type: Constructor
  source:
    remote:
      path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
    startLine: 19
  assemblies:
  - System.Runtime.Serialization.Xml
  namespace: System.Runtime.Serialization
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Runtime.Serialization.DataContractSerializer\" data-throw-if-not-resolved=\"false\"></xref> class to serialize or deserialize an object of the specified type, and a collection of known types that may be present in the object graph.</p>\n"
  example:
  - "\n<p>The following example creates an instance of the <xref href=\"System.Runtime.Serialization.DataContractSerializer\" data-throw-if-not-resolved=\"false\"></xref> that specifies the type to serialize or deserialize and a collection of known types that can be used in the object graph.</p>DataContractSerializer#9"
  syntax:
    content: public DataContractSerializer(Type type, IEnumerable<Type> knownTypes)
    content.vb: Public Sub New(type As Type, knownTypes As IEnumerable(Of Type))
    parameters:
    - id: type
      type: System.Type
      description: "\n<p>The type of the instances that are serialized or deserialized.</p>\n"
    - id: knownTypes
      type: System.Collections.Generic.IEnumerable{System.Type}
      description: "\n<p>An <xref href=\"System.Collections.Generic.IEnumerable`1\" data-throw-if-not-resolved=\"false\"></xref>  of <xref href=\"System.Type\" data-throw-if-not-resolved=\"false\"></xref> that contains the types that may be present in the object graph.</p>\n"
  seealso:
  - type: System.Runtime.Serialization.DataContractSerializer.KnownTypes
    commentId: P:System.Runtime.Serialization.DataContractSerializer.KnownTypes
  - type: System.Runtime.Serialization.KnownTypeAttribute
    commentId: T:System.Runtime.Serialization.KnownTypeAttribute
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Runtime.Serialization.DataContractSerializer.DataContractSerializer(System.Type, System.Collections.Generic.IEnumerable(Of System.Type))
  name.vb: DataContractSerializer(Type, IEnumerable(Of Type))
- uid: System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.Runtime.Serialization.DataContractSerializerSettings)
  commentId: M:System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.Runtime.Serialization.DataContractSerializerSettings)
  id: '#ctor(System.Type,System.Runtime.Serialization.DataContractSerializerSettings)'
  parent: System.Runtime.Serialization.DataContractSerializer
  langs:
  - csharp
  - vb
  name: DataContractSerializer(Type, DataContractSerializerSettings)
  fullName: System.Runtime.Serialization.DataContractSerializer.DataContractSerializer(System.Type, System.Runtime.Serialization.DataContractSerializerSettings)
  type: Constructor
  source:
    remote:
      path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
    startLine: 20
  assemblies:
  - System.Runtime.Serialization.Xml
  namespace: System.Runtime.Serialization
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Runtime.Serialization.DataContractSerializer\" data-throw-if-not-resolved=\"false\"></xref> class to serialize or deserialize an object of the specified type and settings.</p>\n"
  syntax:
    content: public DataContractSerializer(Type type, DataContractSerializerSettings settings)
    content.vb: Public Sub New(type As Type, settings As DataContractSerializerSettings)
    parameters:
    - id: type
      type: System.Type
      description: "\n<p>The type of the instance to serialize or deserialize.</p>\n"
    - id: settings
      type: System.Runtime.Serialization.DataContractSerializerSettings
      description: "\n<p>The serializer settings.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.String,System.String)
  commentId: M:System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.String,System.String)
  id: '#ctor(System.Type,System.String,System.String)'
  parent: System.Runtime.Serialization.DataContractSerializer
  langs:
  - csharp
  - vb
  name: DataContractSerializer(Type, String, String)
  fullName: System.Runtime.Serialization.DataContractSerializer.DataContractSerializer(System.Type, System.String, System.String)
  type: Constructor
  source:
    remote:
      path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
    startLine: 21
  assemblies:
  - System.Runtime.Serialization.Xml
  namespace: System.Runtime.Serialization
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Runtime.Serialization.DataContractSerializer\" data-throw-if-not-resolved=\"false\"></xref> class to serialize or deserialize an object of the specified type using the supplied XML root element and namespace.</p>\n"
  example:
  - "\n<p>The following example creates an instance of the <xref href=\"System.Runtime.Serialization.DataContractSerializer\" data-throw-if-not-resolved=\"false\"></xref> that specifies the type to serialize or deserialize as well as the XML name and namespace to read from or write to the XML document.</p>DataContractSerializer#10"
  syntax:
    content: public DataContractSerializer(Type type, string rootName, string rootNamespace)
    content.vb: Public Sub New(type As Type, rootName As String, rootNamespace As String)
    parameters:
    - id: type
      type: System.Type
      description: "\n<p>The type of the instances that are serialized or deserialized.</p>\n"
    - id: rootName
      type: System.String
      description: "\n<p>The name of the XML element that encloses the content to serialize or deserialize.</p>\n"
    - id: rootNamespace
      type: System.String
      description: "\n<p>The namespace of the XML element that encloses the content to serialize or deserialize.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.String,System.String,System.Collections.Generic.IEnumerable{System.Type})
  commentId: M:System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.String,System.String,System.Collections.Generic.IEnumerable{System.Type})
  id: '#ctor(System.Type,System.String,System.String,System.Collections.Generic.IEnumerable{System.Type})'
  parent: System.Runtime.Serialization.DataContractSerializer
  langs:
  - csharp
  - vb
  name: DataContractSerializer(Type, String, String, IEnumerable<Type>)
  fullName: System.Runtime.Serialization.DataContractSerializer.DataContractSerializer(System.Type, System.String, System.String, System.Collections.Generic.IEnumerable<System.Type>)
  type: Constructor
  source:
    remote:
      path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
    startLine: 22
  assemblies:
  - System.Runtime.Serialization.Xml
  namespace: System.Runtime.Serialization
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Runtime.Serialization.DataContractSerializer\" data-throw-if-not-resolved=\"false\"></xref> class to serialize or deserialize an object of the specified type. This method also specifies the root XML element and namespace in two string parameters as well as a list of known types that may be present in the object graph.</p>\n"
  example:
  - "\n<p>The following example creates an instance of the <xref href=\"System.Runtime.Serialization.DataContractSerializer\" data-throw-if-not-resolved=\"false\"></xref> that specifies the type to serialize or deserialize as well as the XML name and namespace to read from or write to the XML document. The code also creates an instance of a <xref href=\"System.Collections.Generic.IEnumerable`1\" data-throw-if-not-resolved=\"false\"></xref> to contain the known types used during serialization or deserialization.</p>DataContractSerializer#12"
  syntax:
    content: public DataContractSerializer(Type type, string rootName, string rootNamespace, IEnumerable<Type> knownTypes)
    content.vb: Public Sub New(type As Type, rootName As String, rootNamespace As String, knownTypes As IEnumerable(Of Type))
    parameters:
    - id: type
      type: System.Type
      description: "\n<p>The type of the instances that are serialized or deserialized.</p>\n"
    - id: rootName
      type: System.String
      description: "\n<p>The root element name of the content.</p>\n"
    - id: rootNamespace
      type: System.String
      description: "\n<p>The namespace of the root element.</p>\n"
    - id: knownTypes
      type: System.Collections.Generic.IEnumerable{System.Type}
      description: "\n<p>An <xref href=\"System.Collections.Generic.IEnumerable`1\" data-throw-if-not-resolved=\"false\"></xref>  of <xref href=\"System.Type\" data-throw-if-not-resolved=\"false\"></xref> that contains the types that may be present in the object graph.</p>\n"
  seealso:
  - type: System.Runtime.Serialization.DataContractSerializer.KnownTypes
    commentId: P:System.Runtime.Serialization.DataContractSerializer.KnownTypes
  - type: System.Runtime.Serialization.KnownTypeAttribute
    commentId: T:System.Runtime.Serialization.KnownTypeAttribute
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Runtime.Serialization.DataContractSerializer.DataContractSerializer(System.Type, System.String, System.String, System.Collections.Generic.IEnumerable(Of System.Type))
  name.vb: DataContractSerializer(Type, String, String, IEnumerable(Of Type))
- uid: System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)
  commentId: M:System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)
  id: '#ctor(System.Type,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)'
  parent: System.Runtime.Serialization.DataContractSerializer
  langs:
  - csharp
  - vb
  name: DataContractSerializer(Type, XmlDictionaryString, XmlDictionaryString)
  fullName: System.Runtime.Serialization.DataContractSerializer.DataContractSerializer(System.Type, System.Xml.XmlDictionaryString, System.Xml.XmlDictionaryString)
  type: Constructor
  source:
    remote:
      path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
    startLine: 23
  assemblies:
  - System.Runtime.Serialization.Xml
  namespace: System.Runtime.Serialization
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Runtime.Serialization.DataContractSerializer\" data-throw-if-not-resolved=\"false\"></xref> class to serialize or deserialize an object of the specified type using the XML root element and namespace specified through the parameters of type <xref href=\"System.Xml.XmlDictionaryString\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  example:
  - "\n<p>The following example creates an instance of the <xref href=\"System.Runtime.Serialization.DataContractSerializer\" data-throw-if-not-resolved=\"false\"></xref> that specifies the type to serialize or deserialize as well as the XML name and namespace (as <xref href=\"System.Xml.XmlDictionaryString\" data-throw-if-not-resolved=\"false\"></xref> objects) to read from or write to the XML document.</p>DataContractSerializer#11"
  syntax:
    content: public DataContractSerializer(Type type, XmlDictionaryString rootName, XmlDictionaryString rootNamespace)
    content.vb: Public Sub New(type As Type, rootName As XmlDictionaryString, rootNamespace As XmlDictionaryString)
    parameters:
    - id: type
      type: System.Type
      description: "\n<p>The type of the instances that are serialized or deserialized.</p>\n"
    - id: rootName
      type: System.Xml.XmlDictionaryString
      description: "\n<p>An <xref href=\"System.Xml.XmlDictionaryString\" data-throw-if-not-resolved=\"false\"></xref> that contains the root element name of the content.</p>\n"
    - id: rootNamespace
      type: System.Xml.XmlDictionaryString
      description: "\n<p>An <xref href=\"System.Xml.XmlDictionaryString\" data-throw-if-not-resolved=\"false\"></xref> that contains the namespace of the root element.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Collections.Generic.IEnumerable{System.Type})
  commentId: M:System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Collections.Generic.IEnumerable{System.Type})
  id: '#ctor(System.Type,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Collections.Generic.IEnumerable{System.Type})'
  parent: System.Runtime.Serialization.DataContractSerializer
  langs:
  - csharp
  - vb
  name: DataContractSerializer(Type, XmlDictionaryString, XmlDictionaryString, IEnumerable<Type>)
  fullName: System.Runtime.Serialization.DataContractSerializer.DataContractSerializer(System.Type, System.Xml.XmlDictionaryString, System.Xml.XmlDictionaryString, System.Collections.Generic.IEnumerable<System.Type>)
  type: Constructor
  source:
    remote:
      path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
    startLine: 24
  assemblies:
  - System.Runtime.Serialization.Xml
  namespace: System.Runtime.Serialization
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Runtime.Serialization.DataContractSerializer\" data-throw-if-not-resolved=\"false\"></xref> class to serialize or deserialize an object of the specified type. This method also specifies the root XML element and namespace in two <xref href=\"System.Xml.XmlDictionaryString\" data-throw-if-not-resolved=\"false\"></xref> parameters as well as a list of known types that may be present in the object graph.</p>\n"
  example:
  - "\n<p>The following example creates an instance of the <xref href=\"System.Runtime.Serialization.DataContractSerializer\" data-throw-if-not-resolved=\"false\"></xref> that specifies the type to serialize or deserialize as well as the XML name and namespace (as <xref href=\"System.Xml.XmlDictionaryString\" data-throw-if-not-resolved=\"false\"></xref> objects) to read from or write to the XML document. The code also creates an instance of a <xref href=\"System.Collections.Generic.IEnumerable`1\" data-throw-if-not-resolved=\"false\"></xref> to contain the known types used during serialization or deserialization.</p>DataContractSerializer#13"
  syntax:
    content: public DataContractSerializer(Type type, XmlDictionaryString rootName, XmlDictionaryString rootNamespace, IEnumerable<Type> knownTypes)
    content.vb: Public Sub New(type As Type, rootName As XmlDictionaryString, rootNamespace As XmlDictionaryString, knownTypes As IEnumerable(Of Type))
    parameters:
    - id: type
      type: System.Type
      description: "\n<p>The type of the instances that are serialized or deserialized.</p>\n"
    - id: rootName
      type: System.Xml.XmlDictionaryString
      description: "\n<p>An <xref href=\"System.Xml.XmlDictionaryString\" data-throw-if-not-resolved=\"false\"></xref> that contains the root element name of the content.</p>\n"
    - id: rootNamespace
      type: System.Xml.XmlDictionaryString
      description: "\n<p>An <xref href=\"System.Xml.XmlDictionaryString\" data-throw-if-not-resolved=\"false\"></xref> that contains the namespace of the root element.</p>\n"
    - id: knownTypes
      type: System.Collections.Generic.IEnumerable{System.Type}
      description: "\n<p>A <xref href=\"System.Collections.Generic.IEnumerable`1\" data-throw-if-not-resolved=\"false\"></xref> of <xref href=\"System.Type\" data-throw-if-not-resolved=\"false\"></xref> that contains the known types that may be present in the object graph.</p>\n"
  seealso:
  - type: System.Runtime.Serialization.DataContractSerializer.KnownTypes
    commentId: P:System.Runtime.Serialization.DataContractSerializer.KnownTypes
  - type: System.Runtime.Serialization.KnownTypeAttribute
    commentId: T:System.Runtime.Serialization.KnownTypeAttribute
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Runtime.Serialization.DataContractSerializer.DataContractSerializer(System.Type, System.Xml.XmlDictionaryString, System.Xml.XmlDictionaryString, System.Collections.Generic.IEnumerable(Of System.Type))
  name.vb: DataContractSerializer(Type, XmlDictionaryString, XmlDictionaryString, IEnumerable(Of Type))
- uid: System.Runtime.Serialization.DataContractSerializer.IgnoreExtensionDataObject
  commentId: P:System.Runtime.Serialization.DataContractSerializer.IgnoreExtensionDataObject
  id: IgnoreExtensionDataObject
  parent: System.Runtime.Serialization.DataContractSerializer
  langs:
  - csharp
  - vb
  name: IgnoreExtensionDataObject
  fullName: System.Runtime.Serialization.DataContractSerializer.IgnoreExtensionDataObject
  type: Property
  source:
    remote:
      path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IgnoreExtensionDataObject
    path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
    startLine: 25
  assemblies:
  - System.Runtime.Serialization.Xml
  namespace: System.Runtime.Serialization
  summary: "\n<p>Gets a value that specifies whether to ignore data supplied by an extension of the class when the class is being serialized or deserialized.</p>\n"
  remarks: "\n<p>The <xref href=\"System.Runtime.Serialization.DataContractSerializer.IgnoreExtensionDataObject\" data-throw-if-not-resolved=\"false\"></xref> property is used when the class to which a <xref href=\"System.Runtime.Serialization.DataContractAttribute\" data-throw-if-not-resolved=\"false\"></xref> has been applied also implements the <xref href=\"System.Runtime.Serialization.IExtensibleDataObject\" data-throw-if-not-resolved=\"false\"></xref> interface. In this case, the data added in a future version of the contract is ignored on read and write. For more information, seeForward-Compatible Data Contracts. </p>\n"
  example:
  - 
  syntax:
    content: public bool IgnoreExtensionDataObject { get; }
    content.vb: Public ReadOnly Property IgnoreExtensionDataObject As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> to omit the extension data; otherwise, <strong>false</strong>.</p>\n"
  seealso:
  - type: System.Runtime.Serialization.DataContractSerializer.IgnoreExtensionDataObject
    commentId: P:System.Runtime.Serialization.DataContractSerializer.IgnoreExtensionDataObject
  - type: System.Runtime.Serialization.DataContractAttribute
    commentId: T:System.Runtime.Serialization.DataContractAttribute
  - type: System.Runtime.Serialization.IExtensibleDataObject
    commentId: T:System.Runtime.Serialization.IExtensibleDataObject
  - type: System.Runtime.Serialization.ExtensionDataObject
    commentId: T:System.Runtime.Serialization.ExtensionDataObject
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Runtime.Serialization.DataContractSerializer.KnownTypes
  commentId: P:System.Runtime.Serialization.DataContractSerializer.KnownTypes
  id: KnownTypes
  parent: System.Runtime.Serialization.DataContractSerializer
  langs:
  - csharp
  - vb
  name: KnownTypes
  fullName: System.Runtime.Serialization.DataContractSerializer.KnownTypes
  type: Property
  source:
    remote:
      path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: KnownTypes
    path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
    startLine: 26
  assemblies:
  - System.Runtime.Serialization.Xml
  namespace: System.Runtime.Serialization
  summary: "\n<p>Gets a collection of types that may be present in the object graph serialized using this instance of the <xref href=\"System.Runtime.Serialization.DataContractSerializer\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  remarks: "\n<p>The <xref href=\"System.Runtime.Serialization.DataContractSerializer.KnownTypes\" data-throw-if-not-resolved=\"false\"></xref> property provides the set of known types that are used for serialization and deserialization. For example, if an instance of the <xref href=\"System.Collections.Hashtable\" data-throw-if-not-resolved=\"false\"></xref> class contains instances of a <code>Person</code> class, add the <code>Person</code> type to an instance of the <xref href=\"System.Collections.Generic.List`1\" data-throw-if-not-resolved=\"false\"></xref> class and use the instance to construct an instance of the <xref href=\"System.Runtime.Serialization.DataContractSerializer\" data-throw-if-not-resolved=\"false\"></xref>. If you know of other types to add to the <xref href=\"System.Collections.Hashtable\" data-throw-if-not-resolved=\"false\"></xref>, then add those types to the collection. </p>\n"
  syntax:
    content: public ReadOnlyCollection<Type> KnownTypes { get; }
    content.vb: Public ReadOnly Property KnownTypes As ReadOnlyCollection(Of Type)
    parameters: []
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.Type}
      description: "\n<p>A <xref href=\"System.Collections.ObjectModel.ReadOnlyCollection`1\" data-throw-if-not-resolved=\"false\"></xref> that contains the expected types passed in as known types to the <xref href=\"System.Runtime.Serialization.DataContractSerializer\" data-throw-if-not-resolved=\"false\"></xref> constructor.</p>\n"
  seealso:
  - type: System.Runtime.Serialization.KnownTypeAttribute
    commentId: T:System.Runtime.Serialization.KnownTypeAttribute
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph
  commentId: P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph
  id: MaxItemsInObjectGraph
  parent: System.Runtime.Serialization.DataContractSerializer
  langs:
  - csharp
  - vb
  name: MaxItemsInObjectGraph
  fullName: System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph
  type: Property
  source:
    remote:
      path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: MaxItemsInObjectGraph
    path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
    startLine: 27
  assemblies:
  - System.Runtime.Serialization.Xml
  namespace: System.Runtime.Serialization
  summary: "\n<p>Gets the maximum number of items in an object graph to serialize or deserialize.</p>\n"
  remarks: "\n<p>This property can be set in configuration or imperatively in code. To set it in configuration, add a custom behavior to the behaviors section and add the following setting.</p>\n<pre><code><behaviors>    <behavior name=\"MyServiceBehavior\">        <dataContractSerializer maxItemsInObjectGraph=\"3\" />    </behavior></behaviors></code></pre>\n<p>To set this property imperatively in code find the operation description of the service, then get the operation behavior, finally set the property as shown in the following code.</p>\n<pre><code>OperationDescription operation = host.Description.Endpoints[0].Contract.Operations.Find(\"MyOperationName\");operation.Behaviors.Find<DataContractSerializerOperationBehavior>().MaxItemsInObjectGraph = 3;</code></pre>\n<p>The <xref href=\"System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph\" data-throw-if-not-resolved=\"false\"></xref> property specifies the maximum number of objects that the serializer serializes or deserializes in a single <see cref=\"Overload:System.Runtime.Serialization.DataContractSerializer.ReadObject\"></see> method call. (The method always reads one root object, but this object may have other objects in its data members. Those objects may have other objects, and so on.) The default is <xref href=\"System.Int32.MaxValue\" data-throw-if-not-resolved=\"false\"></xref>. Note that when serializing or deserializing arrays, every array entry counts as a separate object. Also, note that some objects may have a large memory representation and so this quota alone may not be sufficient to prevent Denial of Service attacks. For more information, seeSecurity Considerations for Data. If you need to increase this quota beyond its default value, it is important to do so both on the sending (serializing) and receiving (deserializing) sides. It applies both when reading and writing data.</p>\n"
  example:
  - 
  syntax:
    content: public int MaxItemsInObjectGraph { get; }
    content.vb: Public ReadOnly Property MaxItemsInObjectGraph As Integer
    parameters: []
    return:
      type: System.Int32
      description: "\n<p>The maximum number of items to serialize or deserialize. The default is <xref href=\"System.Int32.MaxValue\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>The number of items exceeds the maximum value.</p>\n"
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Runtime.Serialization.DataContractSerializer.PreserveObjectReferences
  commentId: P:System.Runtime.Serialization.DataContractSerializer.PreserveObjectReferences
  id: PreserveObjectReferences
  parent: System.Runtime.Serialization.DataContractSerializer
  langs:
  - csharp
  - vb
  name: PreserveObjectReferences
  fullName: System.Runtime.Serialization.DataContractSerializer.PreserveObjectReferences
  type: Property
  source:
    remote:
      path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: PreserveObjectReferences
    path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
    startLine: 28
  assemblies:
  - System.Runtime.Serialization.Xml
  namespace: System.Runtime.Serialization
  summary: "\n<p>Gets a value that specifies whether to use non-standard XML constructs to preserve object reference data. </p>\n"
  example:
  - 
  syntax:
    content: public bool PreserveObjectReferences { get; }
    content.vb: Public ReadOnly Property PreserveObjectReferences As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> to keep the references; otherwise, <strong>false</strong>.</p>\n"
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Runtime.Serialization.DataContractSerializer.SerializeReadOnlyTypes
  commentId: P:System.Runtime.Serialization.DataContractSerializer.SerializeReadOnlyTypes
  id: SerializeReadOnlyTypes
  parent: System.Runtime.Serialization.DataContractSerializer
  langs:
  - csharp
  - vb
  name: SerializeReadOnlyTypes
  fullName: System.Runtime.Serialization.DataContractSerializer.SerializeReadOnlyTypes
  type: Property
  source:
    remote:
      path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: SerializeReadOnlyTypes
    path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
    startLine: 29
  assemblies:
  - System.Runtime.Serialization.Xml
  namespace: System.Runtime.Serialization
  summary: "\n<p>Gets a value that specifies whether read-only types are serialized.</p>\n"
  syntax:
    content: public bool SerializeReadOnlyTypes { get; }
    content.vb: Public ReadOnly Property SerializeReadOnlyTypes As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if read-only types are serialized; <strong>false</strong> if all types are serialized.</p>\n"
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Runtime.Serialization.DataContractSerializer.IsStartObject(System.Xml.XmlDictionaryReader)
  commentId: M:System.Runtime.Serialization.DataContractSerializer.IsStartObject(System.Xml.XmlDictionaryReader)
  id: IsStartObject(System.Xml.XmlDictionaryReader)
  parent: System.Runtime.Serialization.DataContractSerializer
  langs:
  - csharp
  - vb
  name: IsStartObject(XmlDictionaryReader)
  fullName: System.Runtime.Serialization.DataContractSerializer.IsStartObject(System.Xml.XmlDictionaryReader)
  type: Method
  source:
    remote:
      path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IsStartObject
    path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
    startLine: 30
  assemblies:
  - System.Runtime.Serialization.Xml
  namespace: System.Runtime.Serialization
  summary: "\n<p>Determines whether the <xref href=\"System.Xml.XmlDictionaryReader\" data-throw-if-not-resolved=\"false\"></xref> is positioned on an object that can be deserialized.</p>\n"
  remarks: "\n<p>The <xref href=\"System.Runtime.Serialization.DataContractSerializer.IsStartObject(System.Xml.XmlDictionaryReader)\" data-throw-if-not-resolved=\"false\"></xref> determines whether it can read an object by checking that it is positioned on an XML element. It also examines the name and namespace of the XML element that the reader is positioned at and compares the values to the expected name and namespace. The expected name and namespace can be set with the following: the data contract name and namespace of the type passed into the constructor, or the <em>rootName</em> and <em>rootNamespace</em> values passed into the constructor (if present).</p>\n"
  example:
  - "\n<p>The following example uses the <xref href=\"System.Runtime.Serialization.DataContractSerializer.IsStartObject(System.Xml.XmlDictionaryReader)\" data-throw-if-not-resolved=\"false\"></xref> property to determine whether the start of the data has been found.</p>DataContractSerializer#6"
  syntax:
    content: public override bool IsStartObject(XmlDictionaryReader reader)
    content.vb: Public Overrides Function IsStartObject(reader As XmlDictionaryReader) As Boolean
    parameters:
    - id: reader
      type: System.Xml.XmlDictionaryReader
      description: "\n<p>An <xref href=\"System.Xml.XmlDictionaryReader\" data-throw-if-not-resolved=\"false\"></xref> used to read the XML stream.</p>\n"
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if the reader is at the start element of the stream to read; otherwise, <strong>false</strong>.</p>\n"
  overridden: System.Runtime.Serialization.XmlObjectSerializer.IsStartObject(System.Xml.XmlDictionaryReader)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Runtime.Serialization.DataContractSerializer.IsStartObject(System.Xml.XmlReader)
  commentId: M:System.Runtime.Serialization.DataContractSerializer.IsStartObject(System.Xml.XmlReader)
  id: IsStartObject(System.Xml.XmlReader)
  parent: System.Runtime.Serialization.DataContractSerializer
  langs:
  - csharp
  - vb
  name: IsStartObject(XmlReader)
  fullName: System.Runtime.Serialization.DataContractSerializer.IsStartObject(System.Xml.XmlReader)
  type: Method
  source:
    remote:
      path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IsStartObject
    path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
    startLine: 31
  assemblies:
  - System.Runtime.Serialization.Xml
  namespace: System.Runtime.Serialization
  summary: "\n<p>Determines whether the <xref href=\"System.Xml.XmlReader\" data-throw-if-not-resolved=\"false\"></xref> is positioned on an object that can be deserialized.</p>\n"
  example:
  - 
  syntax:
    content: public override bool IsStartObject(XmlReader reader)
    content.vb: Public Overrides Function IsStartObject(reader As XmlReader) As Boolean
    parameters:
    - id: reader
      type: System.Xml.XmlReader
      description: "\n<p>The <xref href=\"System.Xml.XmlReader\" data-throw-if-not-resolved=\"false\"></xref> used to read the XML stream.</p>\n"
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if the reader is at the start element of the stream to read; otherwise, <strong>false</strong>.</p>\n"
  overridden: System.Runtime.Serialization.XmlObjectSerializer.IsStartObject(System.Xml.XmlReader)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Runtime.Serialization.DataContractSerializer.ReadObject(System.Xml.XmlDictionaryReader,System.Boolean)
  commentId: M:System.Runtime.Serialization.DataContractSerializer.ReadObject(System.Xml.XmlDictionaryReader,System.Boolean)
  id: ReadObject(System.Xml.XmlDictionaryReader,System.Boolean)
  parent: System.Runtime.Serialization.DataContractSerializer
  langs:
  - csharp
  - vb
  name: ReadObject(XmlDictionaryReader, Boolean)
  fullName: System.Runtime.Serialization.DataContractSerializer.ReadObject(System.Xml.XmlDictionaryReader, System.Boolean)
  type: Method
  source:
    remote:
      path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ReadObject
    path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
    startLine: 32
  assemblies:
  - System.Runtime.Serialization.Xml
  namespace: System.Runtime.Serialization
  summary: "\n<p>Reads the XML stream with an <xref href=\"System.Xml.XmlDictionaryReader\" data-throw-if-not-resolved=\"false\"></xref> and returns the deserialized object, and also specifies whether a check is made to verify the object name before reading its value. </p>\n"
  example:
  - "\n<p>The following example reads an XML document and deserializes an instance of an object.</p>DataContractSerializer#2"
  syntax:
    content: public override object ReadObject(XmlDictionaryReader reader, bool verifyObjectName)
    content.vb: Public Overrides Function ReadObject(reader As XmlDictionaryReader, verifyObjectName As Boolean) As Object
    parameters:
    - id: reader
      type: System.Xml.XmlDictionaryReader
      description: "\n<p>The <xref href=\"System.Xml.XmlDictionaryReader\" data-throw-if-not-resolved=\"false\"></xref> used to read the XML stream.</p>\n"
    - id: verifyObjectName
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> to check whether the name of the object corresponds to the root name value supplied in the constructor; otherwise, <strong>false</strong>. </p>\n"
    return:
      type: System.Object
      description: "\n<p>The deserialized object.</p>\n"
  overridden: System.Runtime.Serialization.XmlObjectSerializer.ReadObject(System.Xml.XmlDictionaryReader,System.Boolean)
  exceptions:
  - type: System.Runtime.Serialization.SerializationException
    commentId: T:System.Runtime.Serialization.SerializationException
    description: "\n<p>The <em>verifyObjectName</em> parameter is set to <strong>true</strong>, and the element name and namespace do not correspond to the values set in the constructor. </p>\n"
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Runtime.Serialization.DataContractSerializer.ReadObject(System.Xml.XmlReader)
  commentId: M:System.Runtime.Serialization.DataContractSerializer.ReadObject(System.Xml.XmlReader)
  id: ReadObject(System.Xml.XmlReader)
  parent: System.Runtime.Serialization.DataContractSerializer
  langs:
  - csharp
  - vb
  name: ReadObject(XmlReader)
  fullName: System.Runtime.Serialization.DataContractSerializer.ReadObject(System.Xml.XmlReader)
  type: Method
  source:
    remote:
      path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ReadObject
    path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
    startLine: 33
  assemblies:
  - System.Runtime.Serialization.Xml
  namespace: System.Runtime.Serialization
  summary: "\n<p>Reads the XML stream with an <xref href=\"System.Xml.XmlReader\" data-throw-if-not-resolved=\"false\"></xref> and returns the deserialized object.</p>\n"
  example:
  - 
  syntax:
    content: public override object ReadObject(XmlReader reader)
    content.vb: Public Overrides Function ReadObject(reader As XmlReader) As Object
    parameters:
    - id: reader
      type: System.Xml.XmlReader
      description: "\n<p>The <xref href=\"System.Xml.XmlReader\" data-throw-if-not-resolved=\"false\"></xref> used to read the XML stream.</p>\n"
    return:
      type: System.Object
      description: "\n<p>The deserialized object.</p>\n"
  overridden: System.Runtime.Serialization.XmlObjectSerializer.ReadObject(System.Xml.XmlReader)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Runtime.Serialization.DataContractSerializer.ReadObject(System.Xml.XmlReader,System.Boolean)
  commentId: M:System.Runtime.Serialization.DataContractSerializer.ReadObject(System.Xml.XmlReader,System.Boolean)
  id: ReadObject(System.Xml.XmlReader,System.Boolean)
  parent: System.Runtime.Serialization.DataContractSerializer
  langs:
  - csharp
  - vb
  name: ReadObject(XmlReader, Boolean)
  fullName: System.Runtime.Serialization.DataContractSerializer.ReadObject(System.Xml.XmlReader, System.Boolean)
  type: Method
  source:
    remote:
      path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ReadObject
    path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
    startLine: 34
  assemblies:
  - System.Runtime.Serialization.Xml
  namespace: System.Runtime.Serialization
  summary: "\n<p>Reads the XML stream with an <xref href=\"System.Xml.XmlReader\" data-throw-if-not-resolved=\"false\"></xref> and returns the deserialized object, and also specifies whether a check is made to verify the object name before reading its value.</p>\n"
  example:
  - 
  syntax:
    content: public override object ReadObject(XmlReader reader, bool verifyObjectName)
    content.vb: Public Overrides Function ReadObject(reader As XmlReader, verifyObjectName As Boolean) As Object
    parameters:
    - id: reader
      type: System.Xml.XmlReader
      description: "\n<p>The <xref href=\"System.Xml.XmlReader\" data-throw-if-not-resolved=\"false\"></xref> used to read the XML stream.</p>\n"
    - id: verifyObjectName
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> to check whether the name of the object corresponds to the root name value supplied in the constructor; otherwise, <strong>false</strong>.</p>\n"
    return:
      type: System.Object
      description: "\n<p>The deserialized object.</p>\n"
  overridden: System.Runtime.Serialization.XmlObjectSerializer.ReadObject(System.Xml.XmlReader,System.Boolean)
  exceptions:
  - type: System.Runtime.Serialization.SerializationException
    commentId: T:System.Runtime.Serialization.SerializationException
    description: "\n<p>The <em>verifyObjectName</em> parameter is set to <strong>true</strong>, and the element name and namespace do not correspond to the values set in the constructor. </p>\n"
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Runtime.Serialization.DataContractSerializer.WriteEndObject(System.Xml.XmlDictionaryWriter)
  commentId: M:System.Runtime.Serialization.DataContractSerializer.WriteEndObject(System.Xml.XmlDictionaryWriter)
  id: WriteEndObject(System.Xml.XmlDictionaryWriter)
  parent: System.Runtime.Serialization.DataContractSerializer
  langs:
  - csharp
  - vb
  name: WriteEndObject(XmlDictionaryWriter)
  fullName: System.Runtime.Serialization.DataContractSerializer.WriteEndObject(System.Xml.XmlDictionaryWriter)
  type: Method
  source:
    remote:
      path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: WriteEndObject
    path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
    startLine: 35
  assemblies:
  - System.Runtime.Serialization.Xml
  namespace: System.Runtime.Serialization
  summary: "\n<p>Writes the closing XML element using an <xref href=\"System.Xml.XmlDictionaryWriter\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  example:
  - "\n<p>The following example creates an object to serialize, an instance of the <xref href=\"System.Runtime.Serialization.DataContractSerializer\" data-throw-if-not-resolved=\"false\"></xref>, and an instance of the <xref href=\"System.Xml.XmlDictionaryWriter\" data-throw-if-not-resolved=\"false\"></xref> class.  The example uses the <xref href=\"System.Runtime.Serialization.DataContractSerializer.WriteStartObject(System.Xml.XmlDictionaryWriter,System.Object)\" data-throw-if-not-resolved=\"false\"></xref>, <xref href=\"System.Runtime.Serialization.DataContractSerializer.WriteObjectContent(System.Xml.XmlDictionaryWriter,System.Object)\" data-throw-if-not-resolved=\"false\"></xref>, and <xref href=\"System.Runtime.Serialization.DataContractSerializer.WriteObjectContent(System.Xml.XmlDictionaryWriter,System.Object)\" data-throw-if-not-resolved=\"false\"></xref> methods to write the object data into the XML document. Making these calls is equivalent to making a single call of the <xref href=\"System.Runtime.Serialization.DataContractSerializer.WriteObject(System.Xml.XmlDictionaryWriter,System.Object)\" data-throw-if-not-resolved=\"false\"></xref> method. For example, a user might make the calls separately to insert additional XML attributes into the XML after calling the <see cref=\"Overload:System.Runtime.Serialization.DataContractSerializer.WriteStartObject\"></see> method.</p>DataContractSerializer#7"
  syntax:
    content: public override void WriteEndObject(XmlDictionaryWriter writer)
    content.vb: Public Overrides Sub WriteEndObject(writer As XmlDictionaryWriter)
    parameters:
    - id: writer
      type: System.Xml.XmlDictionaryWriter
      description: "\n<p>The <xref href=\"System.Xml.XmlDictionaryWriter\" data-throw-if-not-resolved=\"false\"></xref> used to write the stream.</p>\n"
  overridden: System.Runtime.Serialization.XmlObjectSerializer.WriteEndObject(System.Xml.XmlDictionaryWriter)
  exceptions:
  - type: System.Runtime.Serialization.InvalidDataContractException
    commentId: T:System.Runtime.Serialization.InvalidDataContractException
    description: "\n<p>The type being serialized does not conform to data contract rules. For example, the <xref href=\"System.Runtime.Serialization.DataContractAttribute\" data-throw-if-not-resolved=\"false\"></xref> attribute has not been applied to the type.</p>\n"
  - type: System.Runtime.Serialization.SerializationException
    commentId: T:System.Runtime.Serialization.SerializationException
    description: "\n<p>There is a problem with the instance being written.</p>\n"
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Runtime.Serialization.DataContractSerializer.WriteEndObject(System.Xml.XmlWriter)
  commentId: M:System.Runtime.Serialization.DataContractSerializer.WriteEndObject(System.Xml.XmlWriter)
  id: WriteEndObject(System.Xml.XmlWriter)
  parent: System.Runtime.Serialization.DataContractSerializer
  langs:
  - csharp
  - vb
  name: WriteEndObject(XmlWriter)
  fullName: System.Runtime.Serialization.DataContractSerializer.WriteEndObject(System.Xml.XmlWriter)
  type: Method
  source:
    remote:
      path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: WriteEndObject
    path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
    startLine: 36
  assemblies:
  - System.Runtime.Serialization.Xml
  namespace: System.Runtime.Serialization
  summary: "\n<p>Writes the closing XML element using an <xref href=\"System.Xml.XmlWriter\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  example:
  - 
  syntax:
    content: public override void WriteEndObject(XmlWriter writer)
    content.vb: Public Overrides Sub WriteEndObject(writer As XmlWriter)
    parameters:
    - id: writer
      type: System.Xml.XmlWriter
      description: "\n<p>The <xref href=\"System.Xml.XmlWriter\" data-throw-if-not-resolved=\"false\"></xref> used to write the stream.</p>\n"
  overridden: System.Runtime.Serialization.XmlObjectSerializer.WriteEndObject(System.Xml.XmlWriter)
  exceptions:
  - type: System.Runtime.Serialization.InvalidDataContractException
    commentId: T:System.Runtime.Serialization.InvalidDataContractException
    description: "\n<p>The type being serialized does not conform to data contract rules. For example, the <xref href=\"System.Runtime.Serialization.DataContractAttribute\" data-throw-if-not-resolved=\"false\"></xref> attribute has not been applied to the type.</p>\n"
  - type: System.Runtime.Serialization.SerializationException
    commentId: T:System.Runtime.Serialization.SerializationException
    description: "\n<p>There is a problem with the instance being written.</p>\n"
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Runtime.Serialization.DataContractSerializer.WriteObject(System.Xml.XmlWriter,System.Object)
  commentId: M:System.Runtime.Serialization.DataContractSerializer.WriteObject(System.Xml.XmlWriter,System.Object)
  id: WriteObject(System.Xml.XmlWriter,System.Object)
  parent: System.Runtime.Serialization.DataContractSerializer
  langs:
  - csharp
  - vb
  name: WriteObject(XmlWriter, Object)
  fullName: System.Runtime.Serialization.DataContractSerializer.WriteObject(System.Xml.XmlWriter, System.Object)
  type: Method
  source:
    remote:
      path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: WriteObject
    path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
    startLine: 37
  assemblies:
  - System.Runtime.Serialization.Xml
  namespace: System.Runtime.Serialization
  summary: "\n<p>Writes all the object data (starting XML element, content, and closing element) to an XML document or stream with an <xref href=\"System.Xml.XmlWriter\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  example:
  - 
  syntax:
    content: public override void WriteObject(XmlWriter writer, object graph)
    content.vb: Public Overrides Sub WriteObject(writer As XmlWriter, graph As Object)
    parameters:
    - id: writer
      type: System.Xml.XmlWriter
      description: "\n<p>The <xref href=\"System.Xml.XmlWriter\" data-throw-if-not-resolved=\"false\"></xref> used to write the XML document or stream.</p>\n"
    - id: graph
      type: System.Object
      description: "\n<p>The object that contains the data to write to the stream.</p>\n"
  overridden: System.Runtime.Serialization.XmlObjectSerializer.WriteObject(System.Xml.XmlWriter,System.Object)
  exceptions:
  - type: System.Runtime.Serialization.InvalidDataContractException
    commentId: T:System.Runtime.Serialization.InvalidDataContractException
    description: "\n<p>The type being serialized does not conform to data contract rules. For example, the <xref href=\"System.Runtime.Serialization.DataContractAttribute\" data-throw-if-not-resolved=\"false\"></xref> attribute has not been applied to the type.</p>\n"
  - type: System.Runtime.Serialization.SerializationException
    commentId: T:System.Runtime.Serialization.SerializationException
    description: "\n<p>There is a problem with the instance being written.</p>\n"
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Runtime.Serialization.DataContractSerializer.WriteObjectContent(System.Xml.XmlDictionaryWriter,System.Object)
  commentId: M:System.Runtime.Serialization.DataContractSerializer.WriteObjectContent(System.Xml.XmlDictionaryWriter,System.Object)
  id: WriteObjectContent(System.Xml.XmlDictionaryWriter,System.Object)
  parent: System.Runtime.Serialization.DataContractSerializer
  langs:
  - csharp
  - vb
  name: WriteObjectContent(XmlDictionaryWriter, Object)
  fullName: System.Runtime.Serialization.DataContractSerializer.WriteObjectContent(System.Xml.XmlDictionaryWriter, System.Object)
  type: Method
  source:
    remote:
      path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: WriteObjectContent
    path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
    startLine: 38
  assemblies:
  - System.Runtime.Serialization.Xml
  namespace: System.Runtime.Serialization
  summary: "\n<p>Writes the XML content using an <xref href=\"System.Xml.XmlDictionaryWriter\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  example:
  - "\n<p>The following example creates an object to serialize, an instance of the <xref href=\"System.Runtime.Serialization.DataContractSerializer\" data-throw-if-not-resolved=\"false\"></xref>, and an instance of the <xref href=\"System.Xml.XmlDictionaryWriter\" data-throw-if-not-resolved=\"false\"></xref> class.  The example uses the <xref href=\"System.Runtime.Serialization.DataContractSerializer.WriteStartObject(System.Xml.XmlDictionaryWriter,System.Object)\" data-throw-if-not-resolved=\"false\"></xref>, <xref href=\"System.Runtime.Serialization.DataContractSerializer.WriteObjectContent(System.Xml.XmlDictionaryWriter,System.Object)\" data-throw-if-not-resolved=\"false\"></xref>, and <xref href=\"System.Runtime.Serialization.DataContractSerializer.WriteObjectContent(System.Xml.XmlDictionaryWriter,System.Object)\" data-throw-if-not-resolved=\"false\"></xref> methods to write the object data into the XML document.</p>DataContractSerializer#7"
  syntax:
    content: public override void WriteObjectContent(XmlDictionaryWriter writer, object graph)
    content.vb: Public Overrides Sub WriteObjectContent(writer As XmlDictionaryWriter, graph As Object)
    parameters:
    - id: writer
      type: System.Xml.XmlDictionaryWriter
      description: "\n<p>The <xref href=\"System.Xml.XmlDictionaryWriter\" data-throw-if-not-resolved=\"false\"></xref> used to write the stream.</p>\n"
    - id: graph
      type: System.Object
      description: "\n<p>The object to write to the stream.</p>\n"
  overridden: System.Runtime.Serialization.XmlObjectSerializer.WriteObjectContent(System.Xml.XmlDictionaryWriter,System.Object)
  exceptions:
  - type: System.Runtime.Serialization.InvalidDataContractException
    commentId: T:System.Runtime.Serialization.InvalidDataContractException
    description: "\n<p>The type being serialized does not conform to data contract rules. For example, the <xref href=\"System.Runtime.Serialization.DataContractAttribute\" data-throw-if-not-resolved=\"false\"></xref> attribute has not been applied to the type.</p>\n"
  - type: System.Runtime.Serialization.SerializationException
    commentId: T:System.Runtime.Serialization.SerializationException
    description: "\n<p>There is a problem with the instance being written.</p>\n"
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Runtime.Serialization.DataContractSerializer.WriteObjectContent(System.Xml.XmlWriter,System.Object)
  commentId: M:System.Runtime.Serialization.DataContractSerializer.WriteObjectContent(System.Xml.XmlWriter,System.Object)
  id: WriteObjectContent(System.Xml.XmlWriter,System.Object)
  parent: System.Runtime.Serialization.DataContractSerializer
  langs:
  - csharp
  - vb
  name: WriteObjectContent(XmlWriter, Object)
  fullName: System.Runtime.Serialization.DataContractSerializer.WriteObjectContent(System.Xml.XmlWriter, System.Object)
  type: Method
  source:
    remote:
      path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: WriteObjectContent
    path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
    startLine: 39
  assemblies:
  - System.Runtime.Serialization.Xml
  namespace: System.Runtime.Serialization
  summary: "\n<p>Writes the XML content using an <xref href=\"System.Xml.XmlWriter\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  example:
  - 
  syntax:
    content: public override void WriteObjectContent(XmlWriter writer, object graph)
    content.vb: Public Overrides Sub WriteObjectContent(writer As XmlWriter, graph As Object)
    parameters:
    - id: writer
      type: System.Xml.XmlWriter
      description: "\n<p>The <xref href=\"System.Xml.XmlWriter\" data-throw-if-not-resolved=\"false\"></xref> used to write the stream.</p>\n"
    - id: graph
      type: System.Object
      description: "\n<p>The object to write to the stream.</p>\n"
  overridden: System.Runtime.Serialization.XmlObjectSerializer.WriteObjectContent(System.Xml.XmlWriter,System.Object)
  exceptions:
  - type: System.Runtime.Serialization.InvalidDataContractException
    commentId: T:System.Runtime.Serialization.InvalidDataContractException
    description: "\n<p>The type being serialized does not conform to data contract rules. For example, the <xref href=\"System.Runtime.Serialization.DataContractAttribute\" data-throw-if-not-resolved=\"false\"></xref> attribute has not been applied to the type.</p>\n"
  - type: System.Runtime.Serialization.SerializationException
    commentId: T:System.Runtime.Serialization.SerializationException
    description: "\n<p>There is a problem with the instance being written.</p>\n"
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Runtime.Serialization.DataContractSerializer.WriteStartObject(System.Xml.XmlDictionaryWriter,System.Object)
  commentId: M:System.Runtime.Serialization.DataContractSerializer.WriteStartObject(System.Xml.XmlDictionaryWriter,System.Object)
  id: WriteStartObject(System.Xml.XmlDictionaryWriter,System.Object)
  parent: System.Runtime.Serialization.DataContractSerializer
  langs:
  - csharp
  - vb
  name: WriteStartObject(XmlDictionaryWriter, Object)
  fullName: System.Runtime.Serialization.DataContractSerializer.WriteStartObject(System.Xml.XmlDictionaryWriter, System.Object)
  type: Method
  source:
    remote:
      path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: WriteStartObject
    path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
    startLine: 40
  assemblies:
  - System.Runtime.Serialization.Xml
  namespace: System.Runtime.Serialization
  summary: "\n<p>Writes the opening XML element using an <xref href=\"System.Xml.XmlDictionaryWriter\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  example:
  - "\n<p>The following example creates an object to serialize, an instance of the <xref href=\"System.Runtime.Serialization.DataContractSerializer\" data-throw-if-not-resolved=\"false\"></xref>, and an instance of the <xref href=\"System.Xml.XmlDictionaryWriter\" data-throw-if-not-resolved=\"false\"></xref> class.  The example uses the <xref href=\"System.Runtime.Serialization.DataContractSerializer.WriteStartObject(System.Xml.XmlDictionaryWriter,System.Object)\" data-throw-if-not-resolved=\"false\"></xref>, <xref href=\"System.Runtime.Serialization.DataContractSerializer.WriteObjectContent(System.Xml.XmlDictionaryWriter,System.Object)\" data-throw-if-not-resolved=\"false\"></xref>, and <xref href=\"System.Runtime.Serialization.DataContractSerializer.WriteObjectContent(System.Xml.XmlDictionaryWriter,System.Object)\" data-throw-if-not-resolved=\"false\"></xref> methods to write the object data into the XML document.</p>DataContractSerializer#7"
  syntax:
    content: public override void WriteStartObject(XmlDictionaryWriter writer, object graph)
    content.vb: Public Overrides Sub WriteStartObject(writer As XmlDictionaryWriter, graph As Object)
    parameters:
    - id: writer
      type: System.Xml.XmlDictionaryWriter
      description: "\n<p>The <xref href=\"System.Xml.XmlDictionaryWriter\" data-throw-if-not-resolved=\"false\"></xref> used to write the XML start element.</p>\n"
    - id: graph
      type: System.Object
      description: "\n<p>The object to write.</p>\n"
  overridden: System.Runtime.Serialization.XmlObjectSerializer.WriteStartObject(System.Xml.XmlDictionaryWriter,System.Object)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Runtime.Serialization.DataContractSerializer.WriteStartObject(System.Xml.XmlWriter,System.Object)
  commentId: M:System.Runtime.Serialization.DataContractSerializer.WriteStartObject(System.Xml.XmlWriter,System.Object)
  id: WriteStartObject(System.Xml.XmlWriter,System.Object)
  parent: System.Runtime.Serialization.DataContractSerializer
  langs:
  - csharp
  - vb
  name: WriteStartObject(XmlWriter, Object)
  fullName: System.Runtime.Serialization.DataContractSerializer.WriteStartObject(System.Xml.XmlWriter, System.Object)
  type: Method
  source:
    remote:
      path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: WriteStartObject
    path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
    startLine: 41
  assemblies:
  - System.Runtime.Serialization.Xml
  namespace: System.Runtime.Serialization
  summary: "\n<p>Writes the opening XML element using an <xref href=\"System.Xml.XmlWriter\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: public override void WriteStartObject(XmlWriter writer, object graph)
    content.vb: Public Overrides Sub WriteStartObject(writer As XmlWriter, graph As Object)
    parameters:
    - id: writer
      type: System.Xml.XmlWriter
      description: "\n<p>The <xref href=\"System.Xml.XmlWriter\" data-throw-if-not-resolved=\"false\"></xref> used to write the XML start element.</p>\n"
    - id: graph
      type: System.Object
      description: "\n<p>The object to write.</p>\n"
  overridden: System.Runtime.Serialization.XmlObjectSerializer.WriteStartObject(System.Xml.XmlWriter,System.Object)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: System.Runtime.Serialization
  isExternal: false
  name: System.Runtime.Serialization
  fullName: System.Runtime.Serialization
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System.Runtime.Serialization.XmlObjectSerializer
  parent: System.Runtime.Serialization
  isExternal: false
  name: XmlObjectSerializer
  fullName: System.Runtime.Serialization.XmlObjectSerializer
- uid: System.Runtime.Serialization.XmlObjectSerializer.ReadObject(System.IO.Stream)
  parent: System.Runtime.Serialization.XmlObjectSerializer
  isExternal: true
  name: ReadObject(Stream)
  fullName: System.Runtime.Serialization.XmlObjectSerializer.ReadObject(System.IO.Stream)
  spec.csharp:
  - uid: System.Runtime.Serialization.XmlObjectSerializer.ReadObject(System.IO.Stream)
    name: ReadObject
    fullName: System.Runtime.Serialization.XmlObjectSerializer.ReadObject
  - name: (
    fullName: (
  - uid: System.IO.Stream
    name: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Runtime.Serialization.XmlObjectSerializer.ReadObject(System.IO.Stream)
    name: ReadObject
    fullName: System.Runtime.Serialization.XmlObjectSerializer.ReadObject
  - name: (
    fullName: (
  - uid: System.IO.Stream
    name: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: )
    fullName: )
- uid: System.Runtime.Serialization.XmlObjectSerializer.ReadObject(System.Xml.XmlDictionaryReader)
  parent: System.Runtime.Serialization.XmlObjectSerializer
  isExternal: false
  name: ReadObject(XmlDictionaryReader)
  fullName: System.Runtime.Serialization.XmlObjectSerializer.ReadObject(System.Xml.XmlDictionaryReader)
  spec.csharp:
  - uid: System.Runtime.Serialization.XmlObjectSerializer.ReadObject(System.Xml.XmlDictionaryReader)
    name: ReadObject
    fullName: System.Runtime.Serialization.XmlObjectSerializer.ReadObject
  - name: (
    fullName: (
  - uid: System.Xml.XmlDictionaryReader
    name: XmlDictionaryReader
    fullName: System.Xml.XmlDictionaryReader
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Runtime.Serialization.XmlObjectSerializer.ReadObject(System.Xml.XmlDictionaryReader)
    name: ReadObject
    fullName: System.Runtime.Serialization.XmlObjectSerializer.ReadObject
  - name: (
    fullName: (
  - uid: System.Xml.XmlDictionaryReader
    name: XmlDictionaryReader
    fullName: System.Xml.XmlDictionaryReader
  - name: )
    fullName: )
- uid: System.Runtime.Serialization.XmlObjectSerializer.WriteObject(System.IO.Stream,System.Object)
  parent: System.Runtime.Serialization.XmlObjectSerializer
  isExternal: true
  name: WriteObject(Stream, Object)
  fullName: System.Runtime.Serialization.XmlObjectSerializer.WriteObject(System.IO.Stream, System.Object)
  spec.csharp:
  - uid: System.Runtime.Serialization.XmlObjectSerializer.WriteObject(System.IO.Stream,System.Object)
    name: WriteObject
    fullName: System.Runtime.Serialization.XmlObjectSerializer.WriteObject
  - name: (
    fullName: (
  - uid: System.IO.Stream
    name: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Runtime.Serialization.XmlObjectSerializer.WriteObject(System.IO.Stream,System.Object)
    name: WriteObject
    fullName: System.Runtime.Serialization.XmlObjectSerializer.WriteObject
  - name: (
    fullName: (
  - uid: System.IO.Stream
    name: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Runtime.Serialization.XmlObjectSerializer.WriteObject(System.Xml.XmlDictionaryWriter,System.Object)
  parent: System.Runtime.Serialization.XmlObjectSerializer
  isExternal: true
  name: WriteObject(XmlDictionaryWriter, Object)
  fullName: System.Runtime.Serialization.XmlObjectSerializer.WriteObject(System.Xml.XmlDictionaryWriter, System.Object)
  spec.csharp:
  - uid: System.Runtime.Serialization.XmlObjectSerializer.WriteObject(System.Xml.XmlDictionaryWriter,System.Object)
    name: WriteObject
    fullName: System.Runtime.Serialization.XmlObjectSerializer.WriteObject
  - name: (
    fullName: (
  - uid: System.Xml.XmlDictionaryWriter
    name: XmlDictionaryWriter
    fullName: System.Xml.XmlDictionaryWriter
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Runtime.Serialization.XmlObjectSerializer.WriteObject(System.Xml.XmlDictionaryWriter,System.Object)
    name: WriteObject
    fullName: System.Runtime.Serialization.XmlObjectSerializer.WriteObject
  - name: (
    fullName: (
  - uid: System.Xml.XmlDictionaryWriter
    name: XmlDictionaryWriter
    fullName: System.Xml.XmlDictionaryWriter
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  fullName: System.Type
- uid: System.Collections.Generic.IEnumerable{System.Type}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<Type>
  fullName: System.Collections.Generic.IEnumerable<System.Type>
  fullname.vb: System.Collections.Generic.IEnumerable(Of System.Type)
  name.vb: IEnumerable(Of Type)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  parent: System.Collections.Generic
  isExternal: false
  name: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  fullname.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Runtime.Serialization.DataContractSerializerSettings
  parent: System.Runtime.Serialization
  isExternal: false
  name: DataContractSerializerSettings
  fullName: System.Runtime.Serialization.DataContractSerializerSettings
- uid: System.String
  parent: System
  isExternal: false
  name: String
  fullName: System.String
- uid: System.Xml.XmlDictionaryString
  parent: System.Xml
  isExternal: false
  name: XmlDictionaryString
  fullName: System.Xml.XmlDictionaryString
- uid: System.Xml
  isExternal: false
  name: System.Xml
  fullName: System.Xml
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  fullName: System.Boolean
- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.Type}
  parent: System.Collections.ObjectModel
  definition: System.Collections.ObjectModel.ReadOnlyCollection`1
  name: ReadOnlyCollection<Type>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.Type>
  fullname.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of System.Type)
  name.vb: ReadOnlyCollection(Of Type)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    fullName: System.Collections.ObjectModel.ReadOnlyCollection
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    fullName: System.Collections.ObjectModel.ReadOnlyCollection
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: )
    fullName: )
- uid: System.Collections.ObjectModel.ReadOnlyCollection`1
  parent: System.Collections.ObjectModel
  isExternal: false
  name: ReadOnlyCollection<T>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>
  fullname.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of T)
  name.vb: ReadOnlyCollection(Of T)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    fullName: System.Collections.ObjectModel.ReadOnlyCollection
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    fullName: System.Collections.ObjectModel.ReadOnlyCollection
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.Collections.ObjectModel
  isExternal: false
  name: System.Collections.ObjectModel
  fullName: System.Collections.ObjectModel
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  fullName: System.Int32
- uid: System.Runtime.Serialization.XmlObjectSerializer.IsStartObject(System.Xml.XmlDictionaryReader)
  parent: System.Runtime.Serialization.XmlObjectSerializer
  isExternal: false
  name: IsStartObject(XmlDictionaryReader)
  fullName: System.Runtime.Serialization.XmlObjectSerializer.IsStartObject(System.Xml.XmlDictionaryReader)
  spec.csharp:
  - uid: System.Runtime.Serialization.XmlObjectSerializer.IsStartObject(System.Xml.XmlDictionaryReader)
    name: IsStartObject
    fullName: System.Runtime.Serialization.XmlObjectSerializer.IsStartObject
  - name: (
    fullName: (
  - uid: System.Xml.XmlDictionaryReader
    name: XmlDictionaryReader
    fullName: System.Xml.XmlDictionaryReader
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Runtime.Serialization.XmlObjectSerializer.IsStartObject(System.Xml.XmlDictionaryReader)
    name: IsStartObject
    fullName: System.Runtime.Serialization.XmlObjectSerializer.IsStartObject
  - name: (
    fullName: (
  - uid: System.Xml.XmlDictionaryReader
    name: XmlDictionaryReader
    fullName: System.Xml.XmlDictionaryReader
  - name: )
    fullName: )
- uid: System.Xml.XmlDictionaryReader
  parent: System.Xml
  isExternal: false
  name: XmlDictionaryReader
  fullName: System.Xml.XmlDictionaryReader
- uid: System.Runtime.Serialization.XmlObjectSerializer.IsStartObject(System.Xml.XmlReader)
  parent: System.Runtime.Serialization.XmlObjectSerializer
  isExternal: true
  name: IsStartObject(XmlReader)
  fullName: System.Runtime.Serialization.XmlObjectSerializer.IsStartObject(System.Xml.XmlReader)
  spec.csharp:
  - uid: System.Runtime.Serialization.XmlObjectSerializer.IsStartObject(System.Xml.XmlReader)
    name: IsStartObject
    fullName: System.Runtime.Serialization.XmlObjectSerializer.IsStartObject
  - name: (
    fullName: (
  - uid: System.Xml.XmlReader
    name: XmlReader
    fullName: System.Xml.XmlReader
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Runtime.Serialization.XmlObjectSerializer.IsStartObject(System.Xml.XmlReader)
    name: IsStartObject
    fullName: System.Runtime.Serialization.XmlObjectSerializer.IsStartObject
  - name: (
    fullName: (
  - uid: System.Xml.XmlReader
    name: XmlReader
    fullName: System.Xml.XmlReader
    isExternal: true
  - name: )
    fullName: )
- uid: System.Xml.XmlReader
  parent: System.Xml
  isExternal: false
  name: XmlReader
  fullName: System.Xml.XmlReader
- uid: System.Runtime.Serialization.XmlObjectSerializer.ReadObject(System.Xml.XmlDictionaryReader,System.Boolean)
  parent: System.Runtime.Serialization.XmlObjectSerializer
  isExternal: true
  name: ReadObject(XmlDictionaryReader, Boolean)
  fullName: System.Runtime.Serialization.XmlObjectSerializer.ReadObject(System.Xml.XmlDictionaryReader, System.Boolean)
  spec.csharp:
  - uid: System.Runtime.Serialization.XmlObjectSerializer.ReadObject(System.Xml.XmlDictionaryReader,System.Boolean)
    name: ReadObject
    fullName: System.Runtime.Serialization.XmlObjectSerializer.ReadObject
  - name: (
    fullName: (
  - uid: System.Xml.XmlDictionaryReader
    name: XmlDictionaryReader
    fullName: System.Xml.XmlDictionaryReader
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Runtime.Serialization.XmlObjectSerializer.ReadObject(System.Xml.XmlDictionaryReader,System.Boolean)
    name: ReadObject
    fullName: System.Runtime.Serialization.XmlObjectSerializer.ReadObject
  - name: (
    fullName: (
  - uid: System.Xml.XmlDictionaryReader
    name: XmlDictionaryReader
    fullName: System.Xml.XmlDictionaryReader
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
- uid: System.Runtime.Serialization.XmlObjectSerializer.ReadObject(System.Xml.XmlReader)
  parent: System.Runtime.Serialization.XmlObjectSerializer
  isExternal: true
  name: ReadObject(XmlReader)
  fullName: System.Runtime.Serialization.XmlObjectSerializer.ReadObject(System.Xml.XmlReader)
  spec.csharp:
  - uid: System.Runtime.Serialization.XmlObjectSerializer.ReadObject(System.Xml.XmlReader)
    name: ReadObject
    fullName: System.Runtime.Serialization.XmlObjectSerializer.ReadObject
  - name: (
    fullName: (
  - uid: System.Xml.XmlReader
    name: XmlReader
    fullName: System.Xml.XmlReader
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Runtime.Serialization.XmlObjectSerializer.ReadObject(System.Xml.XmlReader)
    name: ReadObject
    fullName: System.Runtime.Serialization.XmlObjectSerializer.ReadObject
  - name: (
    fullName: (
  - uid: System.Xml.XmlReader
    name: XmlReader
    fullName: System.Xml.XmlReader
    isExternal: true
  - name: )
    fullName: )
- uid: System.Runtime.Serialization.XmlObjectSerializer.ReadObject(System.Xml.XmlReader,System.Boolean)
  parent: System.Runtime.Serialization.XmlObjectSerializer
  isExternal: true
  name: ReadObject(XmlReader, Boolean)
  fullName: System.Runtime.Serialization.XmlObjectSerializer.ReadObject(System.Xml.XmlReader, System.Boolean)
  spec.csharp:
  - uid: System.Runtime.Serialization.XmlObjectSerializer.ReadObject(System.Xml.XmlReader,System.Boolean)
    name: ReadObject
    fullName: System.Runtime.Serialization.XmlObjectSerializer.ReadObject
  - name: (
    fullName: (
  - uid: System.Xml.XmlReader
    name: XmlReader
    fullName: System.Xml.XmlReader
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Runtime.Serialization.XmlObjectSerializer.ReadObject(System.Xml.XmlReader,System.Boolean)
    name: ReadObject
    fullName: System.Runtime.Serialization.XmlObjectSerializer.ReadObject
  - name: (
    fullName: (
  - uid: System.Xml.XmlReader
    name: XmlReader
    fullName: System.Xml.XmlReader
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
- uid: System.Runtime.Serialization.XmlObjectSerializer.WriteEndObject(System.Xml.XmlDictionaryWriter)
  parent: System.Runtime.Serialization.XmlObjectSerializer
  isExternal: false
  name: WriteEndObject(XmlDictionaryWriter)
  fullName: System.Runtime.Serialization.XmlObjectSerializer.WriteEndObject(System.Xml.XmlDictionaryWriter)
  spec.csharp:
  - uid: System.Runtime.Serialization.XmlObjectSerializer.WriteEndObject(System.Xml.XmlDictionaryWriter)
    name: WriteEndObject
    fullName: System.Runtime.Serialization.XmlObjectSerializer.WriteEndObject
  - name: (
    fullName: (
  - uid: System.Xml.XmlDictionaryWriter
    name: XmlDictionaryWriter
    fullName: System.Xml.XmlDictionaryWriter
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Runtime.Serialization.XmlObjectSerializer.WriteEndObject(System.Xml.XmlDictionaryWriter)
    name: WriteEndObject
    fullName: System.Runtime.Serialization.XmlObjectSerializer.WriteEndObject
  - name: (
    fullName: (
  - uid: System.Xml.XmlDictionaryWriter
    name: XmlDictionaryWriter
    fullName: System.Xml.XmlDictionaryWriter
  - name: )
    fullName: )
- uid: System.Xml.XmlDictionaryWriter
  parent: System.Xml
  isExternal: false
  name: XmlDictionaryWriter
  fullName: System.Xml.XmlDictionaryWriter
- uid: System.Runtime.Serialization.XmlObjectSerializer.WriteEndObject(System.Xml.XmlWriter)
  parent: System.Runtime.Serialization.XmlObjectSerializer
  isExternal: true
  name: WriteEndObject(XmlWriter)
  fullName: System.Runtime.Serialization.XmlObjectSerializer.WriteEndObject(System.Xml.XmlWriter)
  spec.csharp:
  - uid: System.Runtime.Serialization.XmlObjectSerializer.WriteEndObject(System.Xml.XmlWriter)
    name: WriteEndObject
    fullName: System.Runtime.Serialization.XmlObjectSerializer.WriteEndObject
  - name: (
    fullName: (
  - uid: System.Xml.XmlWriter
    name: XmlWriter
    fullName: System.Xml.XmlWriter
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Runtime.Serialization.XmlObjectSerializer.WriteEndObject(System.Xml.XmlWriter)
    name: WriteEndObject
    fullName: System.Runtime.Serialization.XmlObjectSerializer.WriteEndObject
  - name: (
    fullName: (
  - uid: System.Xml.XmlWriter
    name: XmlWriter
    fullName: System.Xml.XmlWriter
    isExternal: true
  - name: )
    fullName: )
- uid: System.Xml.XmlWriter
  parent: System.Xml
  isExternal: false
  name: XmlWriter
  fullName: System.Xml.XmlWriter
- uid: System.Runtime.Serialization.XmlObjectSerializer.WriteObject(System.Xml.XmlWriter,System.Object)
  parent: System.Runtime.Serialization.XmlObjectSerializer
  isExternal: true
  name: WriteObject(XmlWriter, Object)
  fullName: System.Runtime.Serialization.XmlObjectSerializer.WriteObject(System.Xml.XmlWriter, System.Object)
  spec.csharp:
  - uid: System.Runtime.Serialization.XmlObjectSerializer.WriteObject(System.Xml.XmlWriter,System.Object)
    name: WriteObject
    fullName: System.Runtime.Serialization.XmlObjectSerializer.WriteObject
  - name: (
    fullName: (
  - uid: System.Xml.XmlWriter
    name: XmlWriter
    fullName: System.Xml.XmlWriter
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Runtime.Serialization.XmlObjectSerializer.WriteObject(System.Xml.XmlWriter,System.Object)
    name: WriteObject
    fullName: System.Runtime.Serialization.XmlObjectSerializer.WriteObject
  - name: (
    fullName: (
  - uid: System.Xml.XmlWriter
    name: XmlWriter
    fullName: System.Xml.XmlWriter
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Runtime.Serialization.XmlObjectSerializer.WriteObjectContent(System.Xml.XmlDictionaryWriter,System.Object)
  parent: System.Runtime.Serialization.XmlObjectSerializer
  isExternal: true
  name: WriteObjectContent(XmlDictionaryWriter, Object)
  fullName: System.Runtime.Serialization.XmlObjectSerializer.WriteObjectContent(System.Xml.XmlDictionaryWriter, System.Object)
  spec.csharp:
  - uid: System.Runtime.Serialization.XmlObjectSerializer.WriteObjectContent(System.Xml.XmlDictionaryWriter,System.Object)
    name: WriteObjectContent
    fullName: System.Runtime.Serialization.XmlObjectSerializer.WriteObjectContent
  - name: (
    fullName: (
  - uid: System.Xml.XmlDictionaryWriter
    name: XmlDictionaryWriter
    fullName: System.Xml.XmlDictionaryWriter
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Runtime.Serialization.XmlObjectSerializer.WriteObjectContent(System.Xml.XmlDictionaryWriter,System.Object)
    name: WriteObjectContent
    fullName: System.Runtime.Serialization.XmlObjectSerializer.WriteObjectContent
  - name: (
    fullName: (
  - uid: System.Xml.XmlDictionaryWriter
    name: XmlDictionaryWriter
    fullName: System.Xml.XmlDictionaryWriter
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Runtime.Serialization.XmlObjectSerializer.WriteObjectContent(System.Xml.XmlWriter,System.Object)
  parent: System.Runtime.Serialization.XmlObjectSerializer
  isExternal: true
  name: WriteObjectContent(XmlWriter, Object)
  fullName: System.Runtime.Serialization.XmlObjectSerializer.WriteObjectContent(System.Xml.XmlWriter, System.Object)
  spec.csharp:
  - uid: System.Runtime.Serialization.XmlObjectSerializer.WriteObjectContent(System.Xml.XmlWriter,System.Object)
    name: WriteObjectContent
    fullName: System.Runtime.Serialization.XmlObjectSerializer.WriteObjectContent
  - name: (
    fullName: (
  - uid: System.Xml.XmlWriter
    name: XmlWriter
    fullName: System.Xml.XmlWriter
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Runtime.Serialization.XmlObjectSerializer.WriteObjectContent(System.Xml.XmlWriter,System.Object)
    name: WriteObjectContent
    fullName: System.Runtime.Serialization.XmlObjectSerializer.WriteObjectContent
  - name: (
    fullName: (
  - uid: System.Xml.XmlWriter
    name: XmlWriter
    fullName: System.Xml.XmlWriter
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Runtime.Serialization.XmlObjectSerializer.WriteStartObject(System.Xml.XmlDictionaryWriter,System.Object)
  parent: System.Runtime.Serialization.XmlObjectSerializer
  isExternal: true
  name: WriteStartObject(XmlDictionaryWriter, Object)
  fullName: System.Runtime.Serialization.XmlObjectSerializer.WriteStartObject(System.Xml.XmlDictionaryWriter, System.Object)
  spec.csharp:
  - uid: System.Runtime.Serialization.XmlObjectSerializer.WriteStartObject(System.Xml.XmlDictionaryWriter,System.Object)
    name: WriteStartObject
    fullName: System.Runtime.Serialization.XmlObjectSerializer.WriteStartObject
  - name: (
    fullName: (
  - uid: System.Xml.XmlDictionaryWriter
    name: XmlDictionaryWriter
    fullName: System.Xml.XmlDictionaryWriter
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Runtime.Serialization.XmlObjectSerializer.WriteStartObject(System.Xml.XmlDictionaryWriter,System.Object)
    name: WriteStartObject
    fullName: System.Runtime.Serialization.XmlObjectSerializer.WriteStartObject
  - name: (
    fullName: (
  - uid: System.Xml.XmlDictionaryWriter
    name: XmlDictionaryWriter
    fullName: System.Xml.XmlDictionaryWriter
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Runtime.Serialization.XmlObjectSerializer.WriteStartObject(System.Xml.XmlWriter,System.Object)
  parent: System.Runtime.Serialization.XmlObjectSerializer
  isExternal: true
  name: WriteStartObject(XmlWriter, Object)
  fullName: System.Runtime.Serialization.XmlObjectSerializer.WriteStartObject(System.Xml.XmlWriter, System.Object)
  spec.csharp:
  - uid: System.Runtime.Serialization.XmlObjectSerializer.WriteStartObject(System.Xml.XmlWriter,System.Object)
    name: WriteStartObject
    fullName: System.Runtime.Serialization.XmlObjectSerializer.WriteStartObject
  - name: (
    fullName: (
  - uid: System.Xml.XmlWriter
    name: XmlWriter
    fullName: System.Xml.XmlWriter
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Runtime.Serialization.XmlObjectSerializer.WriteStartObject(System.Xml.XmlWriter,System.Object)
    name: WriteStartObject
    fullName: System.Runtime.Serialization.XmlObjectSerializer.WriteStartObject
  - name: (
    fullName: (
  - uid: System.Xml.XmlWriter
    name: XmlWriter
    fullName: System.Xml.XmlWriter
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.ArgumentOutOfRangeException
  isExternal: false
  name: ArgumentOutOfRangeException
  fullName: System.ArgumentOutOfRangeException
- uid: System.Runtime.Serialization.SerializationException
  isExternal: false
  name: SerializationException
  fullName: System.Runtime.Serialization.SerializationException
- uid: System.Runtime.Serialization.InvalidDataContractException
  isExternal: false
  name: InvalidDataContractException
  fullName: System.Runtime.Serialization.InvalidDataContractException
