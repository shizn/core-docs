items:
- uid: System.Net.CookieCollection
  commentId: T:System.Net.CookieCollection
  id: CookieCollection
  parent: System.Net
  children:
  - System.Net.CookieCollection.#ctor
  - System.Net.CookieCollection.Add(System.Net.Cookie)
  - System.Net.CookieCollection.Add(System.Net.CookieCollection)
  - System.Net.CookieCollection.Count
  - System.Net.CookieCollection.GetEnumerator
  - System.Net.CookieCollection.Item(System.String)
  - System.Net.CookieCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  - System.Net.CookieCollection.System#Collections#ICollection#IsSynchronized
  - System.Net.CookieCollection.System#Collections#ICollection#SyncRoot
  langs:
  - csharp
  - vb
  name: CookieCollection
  fullName: System.Net.CookieCollection
  type: Class
  source:
    remote:
      path: src/System.Net.Primitives/ref/System.Net.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CookieCollection
    path: src/System.Net.Primitives/ref/System.Net.Primitives.cs
    startLine: 45
  assemblies:
  - System.Net.Primitives
  namespace: System.Net
  summary: "\n<p>Provides a collection container for instances of the <xref href=\"System.Net.Cookie\" data-throw-if-not-resolved=\"false\"></xref> class.</p>\n"
  remarks: "\n<p>The <xref href=\"System.Net.CookieCollection\" data-throw-if-not-resolved=\"false\"></xref> class implements an <xref href=\"System.Collections.ICollection\" data-throw-if-not-resolved=\"false\"></xref> interface to provide a general mechanism for handling collections of cookies. For example, this is useful in the case where an application is designed to store cookies for multiple servers.</p>\n"
  syntax:
    content: 'public class CookieCollection : ICollection, IEnumerable'
    content.vb: >-
      Public Class CookieCollection
          Implements ICollection, IEnumerable
  seealso:
  - type: System.Net.Cookie
    commentId: T:System.Net.Cookie
  - type: System.Net.CookieCollection
    commentId: T:System.Net.CookieCollection
  - type: System.Net.CookieContainer
    commentId: T:System.Net.CookieContainer
  - type: System.Net.CookieException
    commentId: T:System.Net.CookieException
  - type: System.Collections.ICollection
    commentId: T:System.Collections.ICollection
  inheritance:
  - System.Object
  implements:
  - System.Collections.ICollection
  - System.Collections.IEnumerable
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: System.Net.CookieCollection.#ctor
  commentId: M:System.Net.CookieCollection.#ctor
  id: '#ctor'
  parent: System.Net.CookieCollection
  langs:
  - csharp
  - vb
  name: CookieCollection()
  fullName: System.Net.CookieCollection.CookieCollection()
  type: Constructor
  source:
    remote:
      path: src/System.Net.Primitives/ref/System.Net.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Net.Primitives/ref/System.Net.Primitives.cs
    startLine: 47
  assemblies:
  - System.Net.Primitives
  namespace: System.Net
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Net.CookieCollection\" data-throw-if-not-resolved=\"false\"></xref> class.</p>\n"
  remarks: "\n<p>The following table shows initial property values for an instance of <xref href=\"System.Net.CookieCollection\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>Property </p>\n<p>Default </p>\n<table><tbody><tr><td>\n<p>\n<xref href=\"System.Net.CookieCollection.IsReadOnly\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td><td>\n<p>\n<strong>true</strong>\n</p>\n</td></tr><tr><td>\n<p>\n<xref href=\"System.Net.CookieCollection.Count\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td><td>\n<p>0 </p>\n</td></tr><tr><td>\n<p>\n<xref href=\"System.Net.CookieCollection.IsSynchronized\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td><td>\n<p>\n<strong>false</strong>\n</p>\n</td></tr></tbody></table>\n"
  syntax:
    content: public CookieCollection()
    content.vb: Public Sub New
  seealso:
  - type: System.Net.Cookie
    commentId: T:System.Net.Cookie
  - type: System.Net.CookieCollection
    commentId: T:System.Net.CookieCollection
  - type: System.Net.CookieContainer
    commentId: T:System.Net.CookieContainer
  - type: System.Net.CookieException
    commentId: T:System.Net.CookieException
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Net.CookieCollection.Count
  commentId: P:System.Net.CookieCollection.Count
  id: Count
  parent: System.Net.CookieCollection
  langs:
  - csharp
  - vb
  name: Count
  fullName: System.Net.CookieCollection.Count
  type: Property
  source:
    remote:
      path: src/System.Net.Primitives/ref/System.Net.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Count
    path: src/System.Net.Primitives/ref/System.Net.Primitives.cs
    startLine: 48
  assemblies:
  - System.Net.Primitives
  namespace: System.Net
  summary: "\n<p>Gets the number of cookies contained in a <xref href=\"System.Net.CookieCollection\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: public int Count { get; }
    content.vb: Public ReadOnly Property Count As Integer
    parameters: []
    return:
      type: System.Int32
      description: "\n<p>The number of cookies contained in a <xref href=\"System.Net.CookieCollection\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  seealso:
  - type: System.Net.Cookie
    commentId: T:System.Net.Cookie
  - type: System.Net.CookieCollection
    commentId: T:System.Net.CookieCollection
  - type: System.Net.CookieContainer
    commentId: T:System.Net.CookieContainer
  - type: System.Net.CookieException
    commentId: T:System.Net.CookieException
  implements:
  - System.Collections.ICollection.Count
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Net.CookieCollection.Item(System.String)
  commentId: P:System.Net.CookieCollection.Item(System.String)
  id: Item(System.String)
  parent: System.Net.CookieCollection
  langs:
  - csharp
  - vb
  name: Item[String]
  fullName: System.Net.CookieCollection.Item[System.String]
  type: Property
  source:
    remote:
      path: src/System.Net.Primitives/ref/System.Net.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: this[]
    path: src/System.Net.Primitives/ref/System.Net.Primitives.cs
    startLine: 49
  assemblies:
  - System.Net.Primitives
  namespace: System.Net
  summary: "\n<p>Gets the <xref href=\"System.Net.Cookie\" data-throw-if-not-resolved=\"false\"></xref> with a specific name from a <xref href=\"System.Net.CookieCollection\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  remarks: "\n<p>You can use this to iterate over the contents of a <xref href=\"System.Net.CookieCollection\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  example:
  - CookieCollection_Item_1#1
  syntax:
    content: public Cookie this[string name] { get; }
    content.vb: Public ReadOnly Property Item(name As String) As Cookie
    parameters:
    - id: name
      type: System.String
      description: "\n<p>The name of the <xref href=\"System.Net.Cookie\" data-throw-if-not-resolved=\"false\"></xref> to be found. </p>\n"
    return:
      type: System.Net.Cookie
      description: "\n<p>The <xref href=\"System.Net.Cookie\" data-throw-if-not-resolved=\"false\"></xref> with a specific name from a <xref href=\"System.Net.CookieCollection\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>name</em> is <strong>null</strong>. </p>\n"
  seealso:
  - type: System.Net.CookieCollection
    commentId: T:System.Net.CookieCollection
  - type: System.Net.CookieContainer
    commentId: T:System.Net.CookieContainer
  - type: System.Net.CookieException
    commentId: T:System.Net.CookieException
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: System.Net.CookieCollection.Item(System.String)
  name.vb: Item(String)
- uid: System.Net.CookieCollection.System#Collections#ICollection#IsSynchronized
  commentId: P:System.Net.CookieCollection.System#Collections#ICollection#IsSynchronized
  id: System#Collections#ICollection#IsSynchronized
  isEii: true
  parent: System.Net.CookieCollection
  langs:
  - csharp
  - vb
  name: ICollection.IsSynchronized
  fullName: System.Net.CookieCollection.System.Collections.ICollection.IsSynchronized
  type: Property
  source:
    remote:
      path: src/System.Net.Primitives/ref/System.Net.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: System.Collections.ICollection.IsSynchronized
    path: src/System.Net.Primitives/ref/System.Net.Primitives.cs
    startLine: 50
  assemblies:
  - System.Net.Primitives
  namespace: System.Net
  syntax:
    content: bool ICollection.IsSynchronized { get; }
    content.vb: ReadOnly WriteOnly Property System.Collections.ICollection.IsSynchronized As Boolean Implements ICollection.IsSynchronized
    parameters: []
    return:
      type: System.Boolean
  implements:
  - System.Collections.ICollection.IsSynchronized
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
  name.vb: System.Collections.ICollection.IsSynchronized
- uid: System.Net.CookieCollection.System#Collections#ICollection#SyncRoot
  commentId: P:System.Net.CookieCollection.System#Collections#ICollection#SyncRoot
  id: System#Collections#ICollection#SyncRoot
  isEii: true
  parent: System.Net.CookieCollection
  langs:
  - csharp
  - vb
  name: ICollection.SyncRoot
  fullName: System.Net.CookieCollection.System.Collections.ICollection.SyncRoot
  type: Property
  source:
    remote:
      path: src/System.Net.Primitives/ref/System.Net.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: System.Collections.ICollection.SyncRoot
    path: src/System.Net.Primitives/ref/System.Net.Primitives.cs
    startLine: 51
  assemblies:
  - System.Net.Primitives
  namespace: System.Net
  syntax:
    content: object ICollection.SyncRoot { get; }
    content.vb: ReadOnly WriteOnly Property System.Collections.ICollection.SyncRoot As Object Implements ICollection.SyncRoot
    parameters: []
    return:
      type: System.Object
  implements:
  - System.Collections.ICollection.SyncRoot
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
  name.vb: System.Collections.ICollection.SyncRoot
- uid: System.Net.CookieCollection.Add(System.Net.Cookie)
  commentId: M:System.Net.CookieCollection.Add(System.Net.Cookie)
  id: Add(System.Net.Cookie)
  parent: System.Net.CookieCollection
  langs:
  - csharp
  - vb
  name: Add(Cookie)
  fullName: System.Net.CookieCollection.Add(System.Net.Cookie)
  type: Method
  source:
    remote:
      path: src/System.Net.Primitives/ref/System.Net.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Add
    path: src/System.Net.Primitives/ref/System.Net.Primitives.cs
    startLine: 52
  assemblies:
  - System.Net.Primitives
  namespace: System.Net
  summary: "\n<p>Adds a <xref href=\"System.Net.Cookie\" data-throw-if-not-resolved=\"false\"></xref> to a <xref href=\"System.Net.CookieCollection\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: public void Add(Cookie cookie)
    content.vb: Public Sub Add(cookie As Cookie)
    parameters:
    - id: cookie
      type: System.Net.Cookie
      description: "\n<p>The <xref href=\"System.Net.Cookie\" data-throw-if-not-resolved=\"false\"></xref> to be added to a <xref href=\"System.Net.CookieCollection\" data-throw-if-not-resolved=\"false\"></xref>. </p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>cookie</em> is <strong>null</strong>. </p>\n"
  seealso:
  - type: System.Net.CookieCollection
    commentId: T:System.Net.CookieCollection
  - type: System.Net.CookieContainer
    commentId: T:System.Net.CookieContainer
  - type: System.Net.CookieException
    commentId: T:System.Net.CookieException
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Net.CookieCollection.Add(System.Net.CookieCollection)
  commentId: M:System.Net.CookieCollection.Add(System.Net.CookieCollection)
  id: Add(System.Net.CookieCollection)
  parent: System.Net.CookieCollection
  langs:
  - csharp
  - vb
  name: Add(CookieCollection)
  fullName: System.Net.CookieCollection.Add(System.Net.CookieCollection)
  type: Method
  source:
    remote:
      path: src/System.Net.Primitives/ref/System.Net.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Add
    path: src/System.Net.Primitives/ref/System.Net.Primitives.cs
    startLine: 53
  assemblies:
  - System.Net.Primitives
  namespace: System.Net
  summary: "\n<p>Adds the contents of a <xref href=\"System.Net.CookieCollection\" data-throw-if-not-resolved=\"false\"></xref> to the current instance.</p>\n"
  remarks: "\n<p>Each <xref href=\"System.Net.Cookie\" data-throw-if-not-resolved=\"false\"></xref> is read from the <xref href=\"System.Net.CookieCollection\" data-throw-if-not-resolved=\"false\"></xref><em>cookies</em> parameter and added to the current instance.</p>\n"
  syntax:
    content: public void Add(CookieCollection cookies)
    content.vb: Public Sub Add(cookies As CookieCollection)
    parameters:
    - id: cookies
      type: System.Net.CookieCollection
      description: "\n<p>The <xref href=\"System.Net.CookieCollection\" data-throw-if-not-resolved=\"false\"></xref> to be added. </p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>cookies</em> is <strong>null</strong>. </p>\n"
  seealso:
  - type: System.Net.CookieCollection
    commentId: T:System.Net.CookieCollection
  - type: System.Net.CookieContainer
    commentId: T:System.Net.CookieContainer
  - type: System.Net.CookieException
    commentId: T:System.Net.CookieException
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Net.CookieCollection.GetEnumerator
  commentId: M:System.Net.CookieCollection.GetEnumerator
  id: GetEnumerator
  parent: System.Net.CookieCollection
  langs:
  - csharp
  - vb
  name: GetEnumerator()
  fullName: System.Net.CookieCollection.GetEnumerator()
  type: Method
  source:
    remote:
      path: src/System.Net.Primitives/ref/System.Net.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetEnumerator
    path: src/System.Net.Primitives/ref/System.Net.Primitives.cs
    startLine: 54
  assemblies:
  - System.Net.Primitives
  namespace: System.Net
  summary: "\n<p>Gets an enumerator that can iterate through a <xref href=\"System.Net.CookieCollection\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  remarks: "\n<p>You should use an <xref href=\"System.Collections.IEnumerator\" data-throw-if-not-resolved=\"false\"></xref> only to read data in the collection. Enumerators cannot be used to modify the underlying collection. The enumerator does not have exclusive access to the collection.</p>\n<p>When an enumerator is created, it takes a snapshot of the current state of the collection. If changes are made to the collection, such as adding, modifying, or deleting elements, this snapshot gets out of sync and the enumerator throws an <xref href=\"System.InvalidOperationException\" data-throw-if-not-resolved=\"false\"></xref>. Two enumerators created from the same collection at the same time can produce different snapshots of the collection.</p>\n"
  syntax:
    content: public IEnumerator GetEnumerator()
    content.vb: Public Function GetEnumerator As IEnumerator
    return:
      type: System.Collections.IEnumerator
      description: "\n<p>An instance of an implementation of an <xref href=\"System.Collections.IEnumerator\" data-throw-if-not-resolved=\"false\"></xref> interface that can iterate through a <xref href=\"System.Net.CookieCollection\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  implements:
  - System.Collections.IEnumerable.GetEnumerator
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Net.CookieCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  commentId: M:System.Net.CookieCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  id: System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  isEii: true
  parent: System.Net.CookieCollection
  langs:
  - csharp
  - vb
  name: ICollection.CopyTo(Array, Int32)
  fullName: System.Net.CookieCollection.System.Collections.ICollection.CopyTo(System.Array, System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Net.Primitives/ref/System.Net.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: System.Collections.ICollection.CopyTo
    path: src/System.Net.Primitives/ref/System.Net.Primitives.cs
    startLine: 55
  assemblies:
  - System.Net.Primitives
  namespace: System.Net
  syntax:
    content: void ICollection.CopyTo(Array array, int index)
    content.vb: Sub System.Collections.ICollection.CopyTo(array As Array, index As Integer) Implements ICollection.CopyTo
    parameters:
    - id: array
      type: System.Array
    - id: index
      type: System.Int32
  implements:
  - System.Collections.ICollection.CopyTo(System.Array,System.Int32)
  name.vb: System.Collections.ICollection.CopyTo(Array, Int32)
references:
- uid: System.Net
  isExternal: false
  name: System.Net
  fullName: System.Net
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System.Collections.ICollection
  parent: System.Collections
  isExternal: false
  name: ICollection
  fullName: System.Collections.ICollection
- uid: System.Collections.IEnumerable
  parent: System.Collections
  isExternal: false
  name: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Collections
  isExternal: false
  name: System.Collections
  fullName: System.Collections
- uid: System.Collections.ICollection.Count
  parent: System.Collections.ICollection
  isExternal: false
  name: Count
  fullName: System.Collections.ICollection.Count
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  fullName: System.Int32
- uid: System.String
  parent: System
  isExternal: false
  name: String
  fullName: System.String
- uid: System.Net.Cookie
  parent: System.Net
  isExternal: false
  name: Cookie
  fullName: System.Net.Cookie
- uid: System.Collections.ICollection.IsSynchronized
  parent: System.Collections.ICollection
  isExternal: false
  name: IsSynchronized
  fullName: System.Collections.ICollection.IsSynchronized
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  fullName: System.Boolean
- uid: System.Collections.ICollection.SyncRoot
  parent: System.Collections.ICollection
  isExternal: false
  name: SyncRoot
  fullName: System.Collections.ICollection.SyncRoot
- uid: System.Net.CookieCollection
  parent: System.Net
  isExternal: false
  name: CookieCollection
  fullName: System.Net.CookieCollection
- uid: System.Collections.IEnumerable.GetEnumerator
  parent: System.Collections.IEnumerable
  isExternal: false
  name: GetEnumerator()
  fullName: System.Collections.IEnumerable.GetEnumerator()
  spec.csharp:
  - uid: System.Collections.IEnumerable.GetEnumerator
    name: GetEnumerator
    fullName: System.Collections.IEnumerable.GetEnumerator
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Collections.IEnumerable.GetEnumerator
    name: GetEnumerator
    fullName: System.Collections.IEnumerable.GetEnumerator
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: false
  name: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Collections.ICollection.CopyTo(System.Array,System.Int32)
  parent: System.Collections.ICollection
  isExternal: true
  name: CopyTo(Array, Int32)
  fullName: System.Collections.ICollection.CopyTo(System.Array, System.Int32)
  spec.csharp:
  - uid: System.Collections.ICollection.CopyTo(System.Array,System.Int32)
    name: CopyTo
    fullName: System.Collections.ICollection.CopyTo
  - name: (
    fullName: (
  - uid: System.Array
    name: Array
    fullName: System.Array
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ICollection.CopyTo(System.Array,System.Int32)
    name: CopyTo
    fullName: System.Collections.ICollection.CopyTo
  - name: (
    fullName: (
  - uid: System.Array
    name: Array
    fullName: System.Array
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
- uid: System.Array
  parent: System
  isExternal: false
  name: Array
  fullName: System.Array
- uid: System.ArgumentNullException
  isExternal: false
  name: ArgumentNullException
  fullName: System.ArgumentNullException
