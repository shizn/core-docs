items:
- uid: System.Collections.ArrayList
  commentId: T:System.Collections.ArrayList
  id: ArrayList
  parent: System.Collections
  children:
  - System.Collections.ArrayList.#ctor
  - System.Collections.ArrayList.#ctor(System.Collections.ICollection)
  - System.Collections.ArrayList.#ctor(System.Int32)
  - System.Collections.ArrayList.Adapter(System.Collections.IList)
  - System.Collections.ArrayList.Add(System.Object)
  - System.Collections.ArrayList.AddRange(System.Collections.ICollection)
  - System.Collections.ArrayList.BinarySearch(System.Int32,System.Int32,System.Object,System.Collections.IComparer)
  - System.Collections.ArrayList.BinarySearch(System.Object)
  - System.Collections.ArrayList.BinarySearch(System.Object,System.Collections.IComparer)
  - System.Collections.ArrayList.Capacity
  - System.Collections.ArrayList.Clear
  - System.Collections.ArrayList.Clone
  - System.Collections.ArrayList.Contains(System.Object)
  - System.Collections.ArrayList.CopyTo(System.Array)
  - System.Collections.ArrayList.CopyTo(System.Array,System.Int32)
  - System.Collections.ArrayList.CopyTo(System.Int32,System.Array,System.Int32,System.Int32)
  - System.Collections.ArrayList.Count
  - System.Collections.ArrayList.FixedSize(System.Collections.ArrayList)
  - System.Collections.ArrayList.FixedSize(System.Collections.IList)
  - System.Collections.ArrayList.GetEnumerator
  - System.Collections.ArrayList.GetEnumerator(System.Int32,System.Int32)
  - System.Collections.ArrayList.GetRange(System.Int32,System.Int32)
  - System.Collections.ArrayList.IndexOf(System.Object)
  - System.Collections.ArrayList.IndexOf(System.Object,System.Int32)
  - System.Collections.ArrayList.IndexOf(System.Object,System.Int32,System.Int32)
  - System.Collections.ArrayList.Insert(System.Int32,System.Object)
  - System.Collections.ArrayList.InsertRange(System.Int32,System.Collections.ICollection)
  - System.Collections.ArrayList.IsFixedSize
  - System.Collections.ArrayList.IsReadOnly
  - System.Collections.ArrayList.IsSynchronized
  - System.Collections.ArrayList.Item(System.Int32)
  - System.Collections.ArrayList.LastIndexOf(System.Object)
  - System.Collections.ArrayList.LastIndexOf(System.Object,System.Int32)
  - System.Collections.ArrayList.LastIndexOf(System.Object,System.Int32,System.Int32)
  - System.Collections.ArrayList.ReadOnly(System.Collections.ArrayList)
  - System.Collections.ArrayList.ReadOnly(System.Collections.IList)
  - System.Collections.ArrayList.Remove(System.Object)
  - System.Collections.ArrayList.RemoveAt(System.Int32)
  - System.Collections.ArrayList.RemoveRange(System.Int32,System.Int32)
  - System.Collections.ArrayList.Repeat(System.Object,System.Int32)
  - System.Collections.ArrayList.Reverse
  - System.Collections.ArrayList.Reverse(System.Int32,System.Int32)
  - System.Collections.ArrayList.SetRange(System.Int32,System.Collections.ICollection)
  - System.Collections.ArrayList.Sort
  - System.Collections.ArrayList.Sort(System.Collections.IComparer)
  - System.Collections.ArrayList.Sort(System.Int32,System.Int32,System.Collections.IComparer)
  - System.Collections.ArrayList.Synchronized(System.Collections.ArrayList)
  - System.Collections.ArrayList.Synchronized(System.Collections.IList)
  - System.Collections.ArrayList.SyncRoot
  - System.Collections.ArrayList.ToArray
  - System.Collections.ArrayList.ToArray(System.Type)
  - System.Collections.ArrayList.TrimToSize
  langs:
  - csharp
  - vb
  name: ArrayList
  fullName: System.Collections.ArrayList
  type: Class
  source:
    remote:
      path: src/System.Collections.NonGeneric/src/System/Collections/ArrayList.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ArrayList
    path: src/System.Collections.NonGeneric/src/System/Collections/ArrayList.cs
    startLine: 33
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  summary: Implements the <xref href="System.Collections.IList" data-throw-if-not-resolved="false"></xref> interface using an array whose size is dynamically increased as required.To browse the .NET Framework source code for this type, see the Reference Source.
  syntax:
    content: 'public class ArrayList : IEnumerable, IList'
    content.vb: >-
      Public Class ArrayList
          Inherits IEnumerable
          Implements IList
  inheritance:
  - System.Object
  implements:
  - System.Collections.IList
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: System.Collections.ArrayList.#ctor
  commentId: M:System.Collections.ArrayList.#ctor
  id: '#ctor'
  parent: System.Collections.ArrayList
  langs:
  - csharp
  - vb
  name: ArrayList()
  fullName: System.Collections.ArrayList.ArrayList()
  type: Constructor
  source:
    remote:
      path: src/System.Collections.NonGeneric/src/System/Collections/ArrayList.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Collections.NonGeneric/src/System/Collections/ArrayList.cs
    startLine: 57
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  summary: Initializes a new instance of the <xref href="System.Collections.ArrayList" data-throw-if-not-resolved="false"></xref> class that is empty and has the default initial capacity.
  syntax:
    content: public ArrayList()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Collections.ArrayList.#ctor(System.Collections.ICollection)
  commentId: M:System.Collections.ArrayList.#ctor(System.Collections.ICollection)
  id: '#ctor(System.Collections.ICollection)'
  parent: System.Collections.ArrayList
  langs:
  - csharp
  - vb
  name: ArrayList(ICollection)
  fullName: System.Collections.ArrayList.ArrayList(System.Collections.ICollection)
  type: Constructor
  source:
    remote:
      path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
    startLine: 13
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  summary: Initializes a new instance of the <xref href="System.Collections.ArrayList" data-throw-if-not-resolved="false"></xref> class that contains elements copied from the specified collection and that has the same initial capacity as the number of elements copied.
  syntax:
    content: public ArrayList(ICollection c)
    content.vb: Public Sub New(c As ICollection)
    parameters:
    - id: c
      type: System.Collections.ICollection
      description: 'The <xref href="System.Collections.ICollection" data-throw-if-not-resolved="false"></xref> whose elements are copied to the new list. '
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>c</em> is null. "
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Collections.ArrayList.#ctor(System.Int32)
  commentId: M:System.Collections.ArrayList.#ctor(System.Int32)
  id: '#ctor(System.Int32)'
  parent: System.Collections.ArrayList
  langs:
  - csharp
  - vb
  name: ArrayList(Int32)
  fullName: System.Collections.ArrayList.ArrayList(System.Int32)
  type: Constructor
  source:
    remote:
      path: src/System.Collections.NonGeneric/src/System/Collections/ArrayList.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Collections.NonGeneric/src/System/Collections/ArrayList.cs
    startLine: 66
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  summary: Initializes a new instance of the <xref href="System.Collections.ArrayList" data-throw-if-not-resolved="false"></xref> class that is empty and has the specified initial capacity.
  syntax:
    content: public ArrayList(int capacity)
    content.vb: Public Sub New(capacity As Integer)
    parameters:
    - id: capacity
      type: System.Int32
      description: 'The number of elements that the new list can initially store. '
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<em>capacity</em> is less than zero. "
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Collections.ArrayList.Capacity
  commentId: P:System.Collections.ArrayList.Capacity
  id: Capacity
  parent: System.Collections.ArrayList
  langs:
  - csharp
  - vb
  name: Capacity
  fullName: System.Collections.ArrayList.Capacity
  type: Property
  source:
    remote:
      path: src/System.Collections.NonGeneric/src/System/Collections/ArrayList.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Capacity
    path: src/System.Collections.NonGeneric/src/System/Collections/ArrayList.cs
    startLine: 103
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  summary: Gets or sets the number of elements that the <xref href="System.Collections.ArrayList" data-throw-if-not-resolved="false"></xref> can contain.
  syntax:
    content: public virtual int Capacity { get; set; }
    content.vb: Public Overridable Property Capacity As Integer
    parameters: []
    return:
      type: System.Int32
      description: The number of elements that the <xref href="System.Collections.ArrayList" data-throw-if-not-resolved="false"></xref> can contain.
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<xref href=\"System.Collections.ArrayList.Capacity\" data-throw-if-not-resolved=\"false\"></xref> is set to a value that is less than <xref href=\"System.Collections.ArrayList.Count\" data-throw-if-not-resolved=\"false\"></xref>."
  - type: System.OutOfMemoryException
    commentId: T:System.OutOfMemoryException
    description: There is not enough memory available on the system.
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Collections.ArrayList.Count
  commentId: P:System.Collections.ArrayList.Count
  id: Count
  parent: System.Collections.ArrayList
  langs:
  - csharp
  - vb
  name: Count
  fullName: System.Collections.ArrayList.Count
  type: Property
  source:
    remote:
      path: src/System.Collections.NonGeneric/src/System/Collections/ArrayList.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Count
    path: src/System.Collections.NonGeneric/src/System/Collections/ArrayList.cs
    startLine: 140
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  summary: Gets the number of elements actually contained in the <xref href="System.Collections.ArrayList" data-throw-if-not-resolved="false"></xref>.
  syntax:
    content: public virtual int Count { get; }
    content.vb: Public Overridable ReadOnly Property Count As Integer
    parameters: []
    return:
      type: System.Int32
      description: The number of elements actually contained in the <xref href="System.Collections.ArrayList" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: System.Collections.ArrayList.IsFixedSize
  commentId: P:System.Collections.ArrayList.IsFixedSize
  id: IsFixedSize
  parent: System.Collections.ArrayList
  langs:
  - csharp
  - vb
  name: IsFixedSize
  fullName: System.Collections.ArrayList.IsFixedSize
  type: Property
  source:
    remote:
      path: src/System.Collections.NonGeneric/src/System/Collections/ArrayList.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IsFixedSize
    path: src/System.Collections.NonGeneric/src/System/Collections/ArrayList.cs
    startLine: 149
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  summary: Gets a value indicating whether the <xref href="System.Collections.ArrayList" data-throw-if-not-resolved="false"></xref> has a fixed size.
  syntax:
    content: public virtual bool IsFixedSize { get; }
    content.vb: Public Overridable ReadOnly Property IsFixedSize As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: true if the <xref href="System.Collections.ArrayList" data-throw-if-not-resolved="false"></xref> has a fixed size; otherwise, false. The default is false.
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: System.Collections.ArrayList.IsReadOnly
  commentId: P:System.Collections.ArrayList.IsReadOnly
  id: IsReadOnly
  parent: System.Collections.ArrayList
  langs:
  - csharp
  - vb
  name: IsReadOnly
  fullName: System.Collections.ArrayList.IsReadOnly
  type: Property
  source:
    remote:
      path: src/System.Collections.NonGeneric/src/System/Collections/ArrayList.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IsReadOnly
    path: src/System.Collections.NonGeneric/src/System/Collections/ArrayList.cs
    startLine: 156
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  summary: Gets a value indicating whether the <xref href="System.Collections.ArrayList" data-throw-if-not-resolved="false"></xref> is read-only.
  syntax:
    content: public virtual bool IsReadOnly { get; }
    content.vb: Public Overridable ReadOnly Property IsReadOnly As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: true if the <xref href="System.Collections.ArrayList" data-throw-if-not-resolved="false"></xref> is read-only; otherwise, false. The default is false.
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: System.Collections.ArrayList.IsSynchronized
  commentId: P:System.Collections.ArrayList.IsSynchronized
  id: IsSynchronized
  parent: System.Collections.ArrayList
  langs:
  - csharp
  - vb
  name: IsSynchronized
  fullName: System.Collections.ArrayList.IsSynchronized
  type: Property
  source:
    remote:
      path: src/System.Collections.NonGeneric/src/System/Collections/ArrayList.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IsSynchronized
    path: src/System.Collections.NonGeneric/src/System/Collections/ArrayList.cs
    startLine: 162
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  summary: Gets a value indicating whether access to the <xref href="System.Collections.ArrayList" data-throw-if-not-resolved="false"></xref> is synchronized (thread safe).
  syntax:
    content: public virtual bool IsSynchronized { get; }
    content.vb: Public Overridable ReadOnly Property IsSynchronized As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: true if access to the <xref href="System.Collections.ArrayList" data-throw-if-not-resolved="false"></xref> is synchronized (thread safe); otherwise, false. The default is false.
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: System.Collections.ArrayList.Item(System.Int32)
  commentId: P:System.Collections.ArrayList.Item(System.Int32)
  id: Item(System.Int32)
  parent: System.Collections.ArrayList
  langs:
  - csharp
  - vb
  name: Item[Int32]
  fullName: System.Collections.ArrayList.Item[System.Int32]
  type: Property
  source:
    remote:
      path: src/System.Collections.NonGeneric/src/System/Collections/ArrayList.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: this[]
    path: src/System.Collections.NonGeneric/src/System/Collections/ArrayList.cs
    startLine: 182
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  summary: Gets or sets the element at the specified index.
  syntax:
    content: public virtual object this[int index] { get; set; }
    content.vb: Public Overridable Property Item(index As Integer) As Object
    parameters:
    - id: index
      type: System.Int32
      description: 'The zero-based index of the element to get or set. '
    return:
      type: System.Object
      description: The element at the specified index.
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<em>index</em> is less than zero.-or- <em>index</em> is equal to or greater than <xref href=\"System.Collections.ArrayList.Count\" data-throw-if-not-resolved=\"false\"></xref>. "
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: System.Collections.ArrayList.Item(System.Int32)
  name.vb: Item(Int32)
- uid: System.Collections.ArrayList.SyncRoot
  commentId: P:System.Collections.ArrayList.SyncRoot
  id: SyncRoot
  parent: System.Collections.ArrayList
  langs:
  - csharp
  - vb
  name: SyncRoot
  fullName: System.Collections.ArrayList.SyncRoot
  type: Property
  source:
    remote:
      path: src/System.Collections.NonGeneric/src/System/Collections/ArrayList.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: SyncRoot
    path: src/System.Collections.NonGeneric/src/System/Collections/ArrayList.cs
    startLine: 168
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  summary: Gets an object that can be used to synchronize access to the <xref href="System.Collections.ArrayList" data-throw-if-not-resolved="false"></xref>.
  syntax:
    content: public virtual object SyncRoot { get; }
    content.vb: Public Overridable ReadOnly Property SyncRoot As Object
    parameters: []
    return:
      type: System.Object
      description: An object that can be used to synchronize access to the <xref href="System.Collections.ArrayList" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: System.Collections.ArrayList.Adapter(System.Collections.IList)
  commentId: M:System.Collections.ArrayList.Adapter(System.Collections.IList)
  id: Adapter(System.Collections.IList)
  parent: System.Collections.ArrayList
  langs:
  - csharp
  - vb
  name: Adapter(IList)
  fullName: System.Collections.ArrayList.Adapter(System.Collections.IList)
  type: Method
  source:
    remote:
      path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Adapter
    path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
    startLine: 22
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  summary: Creates an <xref href="System.Collections.ArrayList" data-throw-if-not-resolved="false"></xref> wrapper for a specific <xref href="System.Collections.IList" data-throw-if-not-resolved="false"></xref>.
  syntax:
    content: public static ArrayList Adapter(IList list)
    content.vb: Public Shared Function Adapter(list As IList) As ArrayList
    parameters:
    - id: list
      type: System.Collections.IList
      description: The <xref href="System.Collections.IList" data-throw-if-not-resolved="false"></xref> to wrap.
    return:
      type: System.Collections.ArrayList
      description: The <xref href="System.Collections.ArrayList" data-throw-if-not-resolved="false"></xref> wrapper around the <xref href="System.Collections.IList" data-throw-if-not-resolved="false"></xref>.
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>list</em> is null."
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Collections.ArrayList.Add(System.Object)
  commentId: M:System.Collections.ArrayList.Add(System.Object)
  id: Add(System.Object)
  parent: System.Collections.ArrayList
  langs:
  - csharp
  - vb
  name: Add(Object)
  fullName: System.Collections.ArrayList.Add(System.Object)
  type: Method
  source:
    remote:
      path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Add
    path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
    startLine: 23
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  summary: Adds an object to the end of the <xref href="System.Collections.ArrayList" data-throw-if-not-resolved="false"></xref>.
  syntax:
    content: public virtual int Add(object value)
    content.vb: Public Overridable Function Add(value As Object) As Integer
    parameters:
    - id: value
      type: System.Object
      description: 'The <xref href="System.Object" data-throw-if-not-resolved="false"></xref> to be added to the end of the <xref href="System.Collections.ArrayList" data-throw-if-not-resolved="false"></xref>. The value can be null. '
    return:
      type: System.Int32
      description: The <xref href="System.Collections.ArrayList" data-throw-if-not-resolved="false"></xref> index at which the <em>value</em> has been added.
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: 'The <xref href="System.Collections.ArrayList" data-throw-if-not-resolved="false"></xref> is read-only.-or- The <xref href="System.Collections.ArrayList" data-throw-if-not-resolved="false"></xref> has a fixed size. '
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Collections.ArrayList.AddRange(System.Collections.ICollection)
  commentId: M:System.Collections.ArrayList.AddRange(System.Collections.ICollection)
  id: AddRange(System.Collections.ICollection)
  parent: System.Collections.ArrayList
  langs:
  - csharp
  - vb
  name: AddRange(ICollection)
  fullName: System.Collections.ArrayList.AddRange(System.Collections.ICollection)
  type: Method
  source:
    remote:
      path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: AddRange
    path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
    startLine: 24
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  summary: Adds the elements of an <xref href="System.Collections.ICollection" data-throw-if-not-resolved="false"></xref> to the end of the <xref href="System.Collections.ArrayList" data-throw-if-not-resolved="false"></xref>.
  syntax:
    content: public virtual void AddRange(ICollection c)
    content.vb: Public Overridable Sub AddRange(c As ICollection)
    parameters:
    - id: c
      type: System.Collections.ICollection
      description: 'The <xref href="System.Collections.ICollection" data-throw-if-not-resolved="false"></xref> whose elements should be added to the end of the <xref href="System.Collections.ArrayList" data-throw-if-not-resolved="false"></xref>. The collection itself cannot be null, but it can contain elements that are null. '
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>c</em> is null. "
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: 'The <xref href="System.Collections.ArrayList" data-throw-if-not-resolved="false"></xref> is read-only.-or- The <xref href="System.Collections.ArrayList" data-throw-if-not-resolved="false"></xref> has a fixed size. '
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Collections.ArrayList.BinarySearch(System.Int32,System.Int32,System.Object,System.Collections.IComparer)
  commentId: M:System.Collections.ArrayList.BinarySearch(System.Int32,System.Int32,System.Object,System.Collections.IComparer)
  id: BinarySearch(System.Int32,System.Int32,System.Object,System.Collections.IComparer)
  parent: System.Collections.ArrayList
  langs:
  - csharp
  - vb
  name: BinarySearch(Int32, Int32, Object, IComparer)
  fullName: System.Collections.ArrayList.BinarySearch(System.Int32, System.Int32, System.Object, System.Collections.IComparer)
  type: Method
  source:
    remote:
      path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: BinarySearch
    path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
    startLine: 25
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  summary: Searches a range of elements in the sorted <xref href="System.Collections.ArrayList" data-throw-if-not-resolved="false"></xref> for an element using the specified comparer and returns the zero-based index of the element.
  syntax:
    content: public virtual int BinarySearch(int index, int count, object value, IComparer comparer)
    content.vb: Public Overridable Function BinarySearch(index As Integer, count As Integer, value As Object, comparer As IComparer) As Integer
    parameters:
    - id: index
      type: System.Int32
      description: 'The zero-based starting index of the range to search. '
    - id: count
      type: System.Int32
      description: 'The length of the range to search. '
    - id: value
      type: System.Object
      description: 'The <xref href="System.Object" data-throw-if-not-resolved="false"></xref> to locate. The value can be null. '
    - id: comparer
      type: System.Collections.IComparer
      description: 'The <xref href="System.Collections.IComparer" data-throw-if-not-resolved="false"></xref> implementation to use when comparing elements.-or- null to use the default comparer that is the <xref href="System.IComparable" data-throw-if-not-resolved="false"></xref> implementation of each element. '
    return:
      type: System.Int32
      description: The zero-based index of <em>value</em> in the sorted <xref href="System.Collections.ArrayList" data-throw-if-not-resolved="false"></xref>, if <em>value</em> is found; otherwise, a negative number, which is the bitwise complement of the index of the next element that is larger than <em>value</em> or, if there is no larger element, the bitwise complement of <xref href="System.Collections.ArrayList.Count" data-throw-if-not-resolved="false"></xref>.
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<em>index</em> and <em>count</em> do not denote a valid range in the <xref href=\"System.Collections.ArrayList\" data-throw-if-not-resolved=\"false\"></xref>.-or- <em>comparer</em> is null and neither <em>value</em> nor the elements of <xref href=\"System.Collections.ArrayList\" data-throw-if-not-resolved=\"false\"></xref> implement the <xref href=\"System.IComparable\" data-throw-if-not-resolved=\"false\"></xref> interface. "
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "\n<em>comparer</em> is null and <em>value</em> is not of the same type as the elements of the <xref href=\"System.Collections.ArrayList\" data-throw-if-not-resolved=\"false\"></xref>. "
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<em>index</em> is less than zero.-or- <em>count</em> is less than zero. "
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Collections.ArrayList.BinarySearch(System.Object)
  commentId: M:System.Collections.ArrayList.BinarySearch(System.Object)
  id: BinarySearch(System.Object)
  parent: System.Collections.ArrayList
  langs:
  - csharp
  - vb
  name: BinarySearch(Object)
  fullName: System.Collections.ArrayList.BinarySearch(System.Object)
  type: Method
  source:
    remote:
      path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: BinarySearch
    path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
    startLine: 26
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  summary: Searches the entire sorted <xref href="System.Collections.ArrayList" data-throw-if-not-resolved="false"></xref> for an element using the default comparer and returns the zero-based index of the element.
  syntax:
    content: public virtual int BinarySearch(object value)
    content.vb: Public Overridable Function BinarySearch(value As Object) As Integer
    parameters:
    - id: value
      type: System.Object
      description: 'The <xref href="System.Object" data-throw-if-not-resolved="false"></xref> to locate. The value can be null. '
    return:
      type: System.Int32
      description: The zero-based index of <em>value</em> in the sorted <xref href="System.Collections.ArrayList" data-throw-if-not-resolved="false"></xref>, if <em>value</em> is found; otherwise, a negative number, which is the bitwise complement of the index of the next element that is larger than <em>value</em> or, if there is no larger element, the bitwise complement of <xref href="System.Collections.ArrayList.Count" data-throw-if-not-resolved="false"></xref>.
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: 'Neither <em>value</em> nor the elements of <xref href="System.Collections.ArrayList" data-throw-if-not-resolved="false"></xref> implement the <xref href="System.IComparable" data-throw-if-not-resolved="false"></xref> interface. '
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "\n<em>value</em> is not of the same type as the elements of the <xref href=\"System.Collections.ArrayList\" data-throw-if-not-resolved=\"false\"></xref>. "
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Collections.ArrayList.BinarySearch(System.Object,System.Collections.IComparer)
  commentId: M:System.Collections.ArrayList.BinarySearch(System.Object,System.Collections.IComparer)
  id: BinarySearch(System.Object,System.Collections.IComparer)
  parent: System.Collections.ArrayList
  langs:
  - csharp
  - vb
  name: BinarySearch(Object, IComparer)
  fullName: System.Collections.ArrayList.BinarySearch(System.Object, System.Collections.IComparer)
  type: Method
  source:
    remote:
      path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: BinarySearch
    path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
    startLine: 27
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  summary: Searches the entire sorted <xref href="System.Collections.ArrayList" data-throw-if-not-resolved="false"></xref> for an element using the specified comparer and returns the zero-based index of the element.
  syntax:
    content: public virtual int BinarySearch(object value, IComparer comparer)
    content.vb: Public Overridable Function BinarySearch(value As Object, comparer As IComparer) As Integer
    parameters:
    - id: value
      type: System.Object
      description: 'The <xref href="System.Object" data-throw-if-not-resolved="false"></xref> to locate. The value can be null. '
    - id: comparer
      type: System.Collections.IComparer
      description: 'The <xref href="System.Collections.IComparer" data-throw-if-not-resolved="false"></xref> implementation to use when comparing elements.-or- null to use the default comparer that is the <xref href="System.IComparable" data-throw-if-not-resolved="false"></xref> implementation of each element. '
    return:
      type: System.Int32
      description: The zero-based index of <em>value</em> in the sorted <xref href="System.Collections.ArrayList" data-throw-if-not-resolved="false"></xref>, if <em>value</em> is found; otherwise, a negative number, which is the bitwise complement of the index of the next element that is larger than <em>value</em> or, if there is no larger element, the bitwise complement of <xref href="System.Collections.ArrayList.Count" data-throw-if-not-resolved="false"></xref>.
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<em>comparer</em> is null and neither <em>value</em> nor the elements of <xref href=\"System.Collections.ArrayList\" data-throw-if-not-resolved=\"false\"></xref> implement the <xref href=\"System.IComparable\" data-throw-if-not-resolved=\"false\"></xref> interface. "
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "\n<em>comparer</em> is null and <em>value</em> is not of the same type as the elements of the <xref href=\"System.Collections.ArrayList\" data-throw-if-not-resolved=\"false\"></xref>. "
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Collections.ArrayList.Clear
  commentId: M:System.Collections.ArrayList.Clear
  id: Clear
  parent: System.Collections.ArrayList
  langs:
  - csharp
  - vb
  name: Clear()
  fullName: System.Collections.ArrayList.Clear()
  type: Method
  source:
    remote:
      path: src/System.Collections.NonGeneric/src/System/Collections/ArrayList.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Clear
    path: src/System.Collections.NonGeneric/src/System/Collections/ArrayList.cs
    startLine: 287
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  summary: Removes all elements from the <xref href="System.Collections.ArrayList" data-throw-if-not-resolved="false"></xref>.
  syntax:
    content: public virtual void Clear()
    content.vb: Public Overridable Sub Clear
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: 'The <xref href="System.Collections.ArrayList" data-throw-if-not-resolved="false"></xref> is read-only.-or- The <xref href="System.Collections.ArrayList" data-throw-if-not-resolved="false"></xref> has a fixed size. '
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Collections.ArrayList.Clone
  commentId: M:System.Collections.ArrayList.Clone
  id: Clone
  parent: System.Collections.ArrayList
  langs:
  - csharp
  - vb
  name: Clone()
  fullName: System.Collections.ArrayList.Clone()
  type: Method
  source:
    remote:
      path: src/System.Collections.NonGeneric/src/System/Collections/ArrayList.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Clone
    path: src/System.Collections.NonGeneric/src/System/Collections/ArrayList.cs
    startLine: 300
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  summary: Creates a shallow copy of the <xref href="System.Collections.ArrayList" data-throw-if-not-resolved="false"></xref>.
  syntax:
    content: public virtual object Clone()
    content.vb: Public Overridable Function Clone As Object
    return:
      type: System.Object
      description: A shallow copy of the <xref href="System.Collections.ArrayList" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Collections.ArrayList.Contains(System.Object)
  commentId: M:System.Collections.ArrayList.Contains(System.Object)
  id: Contains(System.Object)
  parent: System.Collections.ArrayList
  langs:
  - csharp
  - vb
  name: Contains(Object)
  fullName: System.Collections.ArrayList.Contains(System.Object)
  type: Method
  source:
    remote:
      path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Contains
    path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
    startLine: 30
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  summary: Determines whether an element is in the <xref href="System.Collections.ArrayList" data-throw-if-not-resolved="false"></xref>.
  syntax:
    content: public virtual bool Contains(object item)
    content.vb: Public Overridable Function Contains(item As Object) As Boolean
    parameters:
    - id: item
      type: System.Object
      description: 'The <xref href="System.Object" data-throw-if-not-resolved="false"></xref> to locate in the <xref href="System.Collections.ArrayList" data-throw-if-not-resolved="false"></xref>. The value can be null. '
    return:
      type: System.Boolean
      description: true if <em>item</em> is found in the <xref href="System.Collections.ArrayList" data-throw-if-not-resolved="false"></xref>; otherwise, false.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Collections.ArrayList.CopyTo(System.Array)
  commentId: M:System.Collections.ArrayList.CopyTo(System.Array)
  id: CopyTo(System.Array)
  parent: System.Collections.ArrayList
  langs:
  - csharp
  - vb
  name: CopyTo(Array)
  fullName: System.Collections.ArrayList.CopyTo(System.Array)
  type: Method
  source:
    remote:
      path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CopyTo
    path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
    startLine: 31
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  summary: Copies the entire <xref href="System.Collections.ArrayList" data-throw-if-not-resolved="false"></xref> to a compatible one-dimensional <xref href="System.Array" data-throw-if-not-resolved="false"></xref>, starting at the beginning of the target array.
  syntax:
    content: public virtual void CopyTo(Array array)
    content.vb: Public Overridable Sub CopyTo(array As Array)
    parameters:
    - id: array
      type: System.Array
      description: 'The one-dimensional <xref href="System.Array" data-throw-if-not-resolved="false"></xref> that is the destination of the elements copied from <xref href="System.Collections.ArrayList" data-throw-if-not-resolved="false"></xref>. The <xref href="System.Array" data-throw-if-not-resolved="false"></xref> must have zero-based indexing. '
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>array</em> is null. "
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<em>array</em> is multidimensional.-or- The number of elements in the source <xref href=\"System.Collections.ArrayList\" data-throw-if-not-resolved=\"false\"></xref> is greater than the number of elements that the destination <em>array</em> can contain. "
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: 'The type of the source <xref href="System.Collections.ArrayList" data-throw-if-not-resolved="false"></xref> cannot be cast automatically to the type of the destination <em>array</em>. '
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Collections.ArrayList.CopyTo(System.Array,System.Int32)
  commentId: M:System.Collections.ArrayList.CopyTo(System.Array,System.Int32)
  id: CopyTo(System.Array,System.Int32)
  parent: System.Collections.ArrayList
  langs:
  - csharp
  - vb
  name: CopyTo(Array, Int32)
  fullName: System.Collections.ArrayList.CopyTo(System.Array, System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CopyTo
    path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
    startLine: 32
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  summary: Copies the entire <xref href="System.Collections.ArrayList" data-throw-if-not-resolved="false"></xref> to a compatible one-dimensional <xref href="System.Array" data-throw-if-not-resolved="false"></xref>, starting at the specified index of the target array.
  syntax:
    content: public virtual void CopyTo(Array array, int arrayIndex)
    content.vb: Public Overridable Sub CopyTo(array As Array, arrayIndex As Integer)
    parameters:
    - id: array
      type: System.Array
      description: 'The one-dimensional <xref href="System.Array" data-throw-if-not-resolved="false"></xref> that is the destination of the elements copied from <xref href="System.Collections.ArrayList" data-throw-if-not-resolved="false"></xref>. The <xref href="System.Array" data-throw-if-not-resolved="false"></xref> must have zero-based indexing. '
    - id: arrayIndex
      type: System.Int32
      description: 'The zero-based index in <em>array</em> at which copying begins. '
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>array</em> is null. "
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<em>arrayIndex</em> is less than zero. "
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<em>array</em> is multidimensional.-or- The number of elements in the source <xref href=\"System.Collections.ArrayList\" data-throw-if-not-resolved=\"false\"></xref> is greater than the available space from <em>arrayIndex</em> to the end of the destination <em>array</em>. "
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: 'The type of the source <xref href="System.Collections.ArrayList" data-throw-if-not-resolved="false"></xref> cannot be cast automatically to the type of the destination <em>array</em>. '
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Collections.ArrayList.CopyTo(System.Int32,System.Array,System.Int32,System.Int32)
  commentId: M:System.Collections.ArrayList.CopyTo(System.Int32,System.Array,System.Int32,System.Int32)
  id: CopyTo(System.Int32,System.Array,System.Int32,System.Int32)
  parent: System.Collections.ArrayList
  langs:
  - csharp
  - vb
  name: CopyTo(Int32, Array, Int32, Int32)
  fullName: System.Collections.ArrayList.CopyTo(System.Int32, System.Array, System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CopyTo
    path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
    startLine: 33
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  summary: Copies a range of elements from the <xref href="System.Collections.ArrayList" data-throw-if-not-resolved="false"></xref> to a compatible one-dimensional <xref href="System.Array" data-throw-if-not-resolved="false"></xref>, starting at the specified index of the target array.
  syntax:
    content: public virtual void CopyTo(int index, Array array, int arrayIndex, int count)
    content.vb: Public Overridable Sub CopyTo(index As Integer, array As Array, arrayIndex As Integer, count As Integer)
    parameters:
    - id: index
      type: System.Int32
      description: 'The zero-based index in the source <xref href="System.Collections.ArrayList" data-throw-if-not-resolved="false"></xref> at which copying begins. '
    - id: array
      type: System.Array
      description: 'The one-dimensional <xref href="System.Array" data-throw-if-not-resolved="false"></xref> that is the destination of the elements copied from <xref href="System.Collections.ArrayList" data-throw-if-not-resolved="false"></xref>. The <xref href="System.Array" data-throw-if-not-resolved="false"></xref> must have zero-based indexing. '
    - id: arrayIndex
      type: System.Int32
      description: 'The zero-based index in <em>array</em> at which copying begins. '
    - id: count
      type: System.Int32
      description: 'The number of elements to copy. '
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>array</em> is null. "
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<em>index</em> is less than zero.-or- <em>arrayIndex</em> is less than zero.-or- <em>count</em> is less than zero. "
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<em>array</em> is multidimensional.-or- <em>index</em> is equal to or greater than the <xref href=\"System.Collections.ArrayList.Count\" data-throw-if-not-resolved=\"false\"></xref> of the source <xref href=\"System.Collections.ArrayList\" data-throw-if-not-resolved=\"false\"></xref>.-or- The number of elements from <em>index</em> to the end of the source <xref href=\"System.Collections.ArrayList\" data-throw-if-not-resolved=\"false\"></xref> is greater than the available space from <em>arrayIndex</em> to the end of the destination <em>array</em>. "
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: 'The type of the source <xref href="System.Collections.ArrayList" data-throw-if-not-resolved="false"></xref> cannot be cast automatically to the type of the destination <em>array</em>. '
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Collections.ArrayList.FixedSize(System.Collections.ArrayList)
  commentId: M:System.Collections.ArrayList.FixedSize(System.Collections.ArrayList)
  id: FixedSize(System.Collections.ArrayList)
  parent: System.Collections.ArrayList
  langs:
  - csharp
  - vb
  name: FixedSize(ArrayList)
  fullName: System.Collections.ArrayList.FixedSize(System.Collections.ArrayList)
  type: Method
  source:
    remote:
      path: src/System.Collections.NonGeneric/src/System/Collections/ArrayList.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: FixedSize
    path: src/System.Collections.NonGeneric/src/System/Collections/ArrayList.cs
    startLine: 400
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  summary: Returns an <xref href="System.Collections.ArrayList" data-throw-if-not-resolved="false"></xref> wrapper with a fixed size.
  syntax:
    content: public static ArrayList FixedSize(ArrayList list)
    content.vb: Public Shared Function FixedSize(list As ArrayList) As ArrayList
    parameters:
    - id: list
      type: System.Collections.ArrayList
      description: 'The <xref href="System.Collections.ArrayList" data-throw-if-not-resolved="false"></xref> to wrap. '
    return:
      type: System.Collections.ArrayList
      description: An <xref href="System.Collections.ArrayList" data-throw-if-not-resolved="false"></xref> wrapper with a fixed size.
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>list</em> is null. "
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Collections.ArrayList.FixedSize(System.Collections.IList)
  commentId: M:System.Collections.ArrayList.FixedSize(System.Collections.IList)
  id: FixedSize(System.Collections.IList)
  parent: System.Collections.ArrayList
  langs:
  - csharp
  - vb
  name: FixedSize(IList)
  fullName: System.Collections.ArrayList.FixedSize(System.Collections.IList)
  type: Method
  source:
    remote:
      path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: FixedSize
    path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
    startLine: 35
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  summary: Returns an <xref href="System.Collections.IList" data-throw-if-not-resolved="false"></xref> wrapper with a fixed size.
  syntax:
    content: public static IList FixedSize(IList list)
    content.vb: Public Shared Function FixedSize(list As IList) As IList
    parameters:
    - id: list
      type: System.Collections.IList
      description: 'The <xref href="System.Collections.IList" data-throw-if-not-resolved="false"></xref> to wrap. '
    return:
      type: System.Collections.IList
      description: An <xref href="System.Collections.IList" data-throw-if-not-resolved="false"></xref> wrapper with a fixed size.
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>list</em> is null. "
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Collections.ArrayList.GetEnumerator
  commentId: M:System.Collections.ArrayList.GetEnumerator
  id: GetEnumerator
  parent: System.Collections.ArrayList
  langs:
  - csharp
  - vb
  name: GetEnumerator()
  fullName: System.Collections.ArrayList.GetEnumerator()
  type: Method
  source:
    remote:
      path: src/System.Collections.NonGeneric/src/System/Collections/ArrayList.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetEnumerator
    path: src/System.Collections.NonGeneric/src/System/Collections/ArrayList.cs
    startLine: 414
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  summary: Returns an enumerator for the entire <xref href="System.Collections.ArrayList" data-throw-if-not-resolved="false"></xref>.
  syntax:
    content: public virtual IEnumerator GetEnumerator()
    content.vb: Public Overridable Function GetEnumerator As IEnumerator
    return:
      type: System.Collections.IEnumerator
      description: An <xref href="System.Collections.IEnumerator" data-throw-if-not-resolved="false"></xref> for the entire <xref href="System.Collections.ArrayList" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Collections.ArrayList.GetEnumerator(System.Int32,System.Int32)
  commentId: M:System.Collections.ArrayList.GetEnumerator(System.Int32,System.Int32)
  id: GetEnumerator(System.Int32,System.Int32)
  parent: System.Collections.ArrayList
  langs:
  - csharp
  - vb
  name: GetEnumerator(Int32, Int32)
  fullName: System.Collections.ArrayList.GetEnumerator(System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Collections.NonGeneric/src/System/Collections/ArrayList.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetEnumerator
    path: src/System.Collections.NonGeneric/src/System/Collections/ArrayList.cs
    startLine: 425
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  summary: Returns an enumerator for a range of elements in the <xref href="System.Collections.ArrayList" data-throw-if-not-resolved="false"></xref>.
  syntax:
    content: public virtual IEnumerator GetEnumerator(int index, int count)
    content.vb: Public Overridable Function GetEnumerator(index As Integer, count As Integer) As IEnumerator
    parameters:
    - id: index
      type: System.Int32
      description: 'The zero-based starting index of the <xref href="System.Collections.ArrayList" data-throw-if-not-resolved="false"></xref> section that the enumerator should refer to. '
    - id: count
      type: System.Int32
      description: 'The number of elements in the <xref href="System.Collections.ArrayList" data-throw-if-not-resolved="false"></xref> section that the enumerator should refer to. '
    return:
      type: System.Collections.IEnumerator
      description: An <xref href="System.Collections.IEnumerator" data-throw-if-not-resolved="false"></xref> for the specified range of elements in the <xref href="System.Collections.ArrayList" data-throw-if-not-resolved="false"></xref>.
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<em>index</em> is less than zero.-or- <em>count</em> is less than zero. "
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<em>index</em> and <em>count</em> do not specify a valid range in the <xref href=\"System.Collections.ArrayList\" data-throw-if-not-resolved=\"false\"></xref>. "
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Collections.ArrayList.GetRange(System.Int32,System.Int32)
  commentId: M:System.Collections.ArrayList.GetRange(System.Int32,System.Int32)
  id: GetRange(System.Int32,System.Int32)
  parent: System.Collections.ArrayList
  langs:
  - csharp
  - vb
  name: GetRange(Int32, Int32)
  fullName: System.Collections.ArrayList.GetRange(System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Collections.NonGeneric/src/System/Collections/ArrayList.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetRange
    path: src/System.Collections.NonGeneric/src/System/Collections/ArrayList.cs
    startLine: 742
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  summary: Returns an <xref href="System.Collections.ArrayList" data-throw-if-not-resolved="false"></xref> which represents a subset of the elements in the source <xref href="System.Collections.ArrayList" data-throw-if-not-resolved="false"></xref>.
  syntax:
    content: public virtual ArrayList GetRange(int index, int count)
    content.vb: Public Overridable Function GetRange(index As Integer, count As Integer) As ArrayList
    parameters:
    - id: index
      type: System.Int32
      description: 'The zero-based <xref href="System.Collections.ArrayList" data-throw-if-not-resolved="false"></xref> index at which the range starts. '
    - id: count
      type: System.Int32
      description: 'The number of elements in the range. '
    return:
      type: System.Collections.ArrayList
      description: An <xref href="System.Collections.ArrayList" data-throw-if-not-resolved="false"></xref> which represents a subset of the elements in the source <xref href="System.Collections.ArrayList" data-throw-if-not-resolved="false"></xref>.
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<em>index</em> is less than zero.-or- <em>count</em> is less than zero. "
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<em>index</em> and <em>count</em> do not denote a valid range of elements in the <xref href=\"System.Collections.ArrayList\" data-throw-if-not-resolved=\"false\"></xref>. "
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Collections.ArrayList.IndexOf(System.Object)
  commentId: M:System.Collections.ArrayList.IndexOf(System.Object)
  id: IndexOf(System.Object)
  parent: System.Collections.ArrayList
  langs:
  - csharp
  - vb
  name: IndexOf(Object)
  fullName: System.Collections.ArrayList.IndexOf(System.Object)
  type: Method
  source:
    remote:
      path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IndexOf
    path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
    startLine: 39
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  summary: Searches for the specified <xref href="System.Object" data-throw-if-not-resolved="false"></xref> and returns the zero-based index of the first occurrence within the entire <xref href="System.Collections.ArrayList" data-throw-if-not-resolved="false"></xref>.
  syntax:
    content: public virtual int IndexOf(object value)
    content.vb: Public Overridable Function IndexOf(value As Object) As Integer
    parameters:
    - id: value
      type: System.Object
      description: 'The <xref href="System.Object" data-throw-if-not-resolved="false"></xref> to locate in the <xref href="System.Collections.ArrayList" data-throw-if-not-resolved="false"></xref>. The value can be null. '
    return:
      type: System.Int32
      description: The zero-based index of the first occurrence of <em>value</em> within the entire <xref href="System.Collections.ArrayList" data-throw-if-not-resolved="false"></xref>, if found; otherwise, -1.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Collections.ArrayList.IndexOf(System.Object,System.Int32)
  commentId: M:System.Collections.ArrayList.IndexOf(System.Object,System.Int32)
  id: IndexOf(System.Object,System.Int32)
  parent: System.Collections.ArrayList
  langs:
  - csharp
  - vb
  name: IndexOf(Object, Int32)
  fullName: System.Collections.ArrayList.IndexOf(System.Object, System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IndexOf
    path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
    startLine: 40
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  summary: Searches for the specified <xref href="System.Object" data-throw-if-not-resolved="false"></xref> and returns the zero-based index of the first occurrence within the range of elements in the <xref href="System.Collections.ArrayList" data-throw-if-not-resolved="false"></xref> that extends from the specified index to the last element.
  syntax:
    content: public virtual int IndexOf(object value, int startIndex)
    content.vb: Public Overridable Function IndexOf(value As Object, startIndex As Integer) As Integer
    parameters:
    - id: value
      type: System.Object
      description: 'The <xref href="System.Object" data-throw-if-not-resolved="false"></xref> to locate in the <xref href="System.Collections.ArrayList" data-throw-if-not-resolved="false"></xref>. The value can be null. '
    - id: startIndex
      type: System.Int32
      description: The zero-based starting index of the search. 0 (zero) is valid in an empty list.
    return:
      type: System.Int32
      description: The zero-based index of the first occurrence of <em>value</em> within the range of elements in the <xref href="System.Collections.ArrayList" data-throw-if-not-resolved="false"></xref> that extends from <em>startIndex</em> to the last element, if found; otherwise, -1.
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<em>startIndex</em> is outside the range of valid indexes for the <xref href=\"System.Collections.ArrayList\" data-throw-if-not-resolved=\"false\"></xref>. "
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Collections.ArrayList.IndexOf(System.Object,System.Int32,System.Int32)
  commentId: M:System.Collections.ArrayList.IndexOf(System.Object,System.Int32,System.Int32)
  id: IndexOf(System.Object,System.Int32,System.Int32)
  parent: System.Collections.ArrayList
  langs:
  - csharp
  - vb
  name: IndexOf(Object, Int32, Int32)
  fullName: System.Collections.ArrayList.IndexOf(System.Object, System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IndexOf
    path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
    startLine: 41
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  summary: Searches for the specified <xref href="System.Object" data-throw-if-not-resolved="false"></xref> and returns the zero-based index of the first occurrence within the range of elements in the <xref href="System.Collections.ArrayList" data-throw-if-not-resolved="false"></xref> that starts at the specified index and contains the specified number of elements.
  syntax:
    content: public virtual int IndexOf(object value, int startIndex, int count)
    content.vb: Public Overridable Function IndexOf(value As Object, startIndex As Integer, count As Integer) As Integer
    parameters:
    - id: value
      type: System.Object
      description: 'The <xref href="System.Object" data-throw-if-not-resolved="false"></xref> to locate in the <xref href="System.Collections.ArrayList" data-throw-if-not-resolved="false"></xref>. The value can be null. '
    - id: startIndex
      type: System.Int32
      description: The zero-based starting index of the search. 0 (zero) is valid in an empty list.
    - id: count
      type: System.Int32
      description: 'The number of elements in the section to search. '
    return:
      type: System.Int32
      description: The zero-based index of the first occurrence of <em>value</em> within the range of elements in the <xref href="System.Collections.ArrayList" data-throw-if-not-resolved="false"></xref> that starts at <em>startIndex</em> and contains <em>count</em> number of elements, if found; otherwise, -1.
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<em>startIndex</em> is outside the range of valid indexes for the <xref href=\"System.Collections.ArrayList\" data-throw-if-not-resolved=\"false\"></xref>.-or- <em>count</em> is less than zero.-or- <em>startIndex</em> and <em>count</em> do not specify a valid section in the <xref href=\"System.Collections.ArrayList\" data-throw-if-not-resolved=\"false\"></xref>. "
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Collections.ArrayList.Insert(System.Int32,System.Object)
  commentId: M:System.Collections.ArrayList.Insert(System.Int32,System.Object)
  id: Insert(System.Int32,System.Object)
  parent: System.Collections.ArrayList
  langs:
  - csharp
  - vb
  name: Insert(Int32, Object)
  fullName: System.Collections.ArrayList.Insert(System.Int32, System.Object)
  type: Method
  source:
    remote:
      path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Insert
    path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
    startLine: 42
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  summary: Inserts an element into the <xref href="System.Collections.ArrayList" data-throw-if-not-resolved="false"></xref> at the specified index.
  syntax:
    content: public virtual void Insert(int index, object value)
    content.vb: Public Overridable Sub Insert(index As Integer, value As Object)
    parameters:
    - id: index
      type: System.Int32
      description: 'The zero-based index at which <em>value</em> should be inserted. '
    - id: value
      type: System.Object
      description: 'The <xref href="System.Object" data-throw-if-not-resolved="false"></xref> to insert. The value can be null. '
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<em>index</em> is less than zero.-or- <em>index</em> is greater than <xref href=\"System.Collections.ArrayList.Count\" data-throw-if-not-resolved=\"false\"></xref>. "
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: 'The <xref href="System.Collections.ArrayList" data-throw-if-not-resolved="false"></xref> is read-only.-or- The <xref href="System.Collections.ArrayList" data-throw-if-not-resolved="false"></xref> has a fixed size. '
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Collections.ArrayList.InsertRange(System.Int32,System.Collections.ICollection)
  commentId: M:System.Collections.ArrayList.InsertRange(System.Int32,System.Collections.ICollection)
  id: InsertRange(System.Int32,System.Collections.ICollection)
  parent: System.Collections.ArrayList
  langs:
  - csharp
  - vb
  name: InsertRange(Int32, ICollection)
  fullName: System.Collections.ArrayList.InsertRange(System.Int32, System.Collections.ICollection)
  type: Method
  source:
    remote:
      path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: InsertRange
    path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
    startLine: 43
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  summary: Inserts the elements of a collection into the <xref href="System.Collections.ArrayList" data-throw-if-not-resolved="false"></xref> at the specified index.
  syntax:
    content: public virtual void InsertRange(int index, ICollection c)
    content.vb: Public Overridable Sub InsertRange(index As Integer, c As ICollection)
    parameters:
    - id: index
      type: System.Int32
      description: 'The zero-based index at which the new elements should be inserted. '
    - id: c
      type: System.Collections.ICollection
      description: 'The <xref href="System.Collections.ICollection" data-throw-if-not-resolved="false"></xref> whose elements should be inserted into the <xref href="System.Collections.ArrayList" data-throw-if-not-resolved="false"></xref>. The collection itself cannot be null, but it can contain elements that are null. '
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>c</em> is null. "
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<em>index</em> is less than zero.-or- <em>index</em> is greater than <xref href=\"System.Collections.ArrayList.Count\" data-throw-if-not-resolved=\"false\"></xref>. "
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: 'The <xref href="System.Collections.ArrayList" data-throw-if-not-resolved="false"></xref> is read-only.-or- The <xref href="System.Collections.ArrayList" data-throw-if-not-resolved="false"></xref> has a fixed size. '
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Collections.ArrayList.LastIndexOf(System.Object)
  commentId: M:System.Collections.ArrayList.LastIndexOf(System.Object)
  id: LastIndexOf(System.Object)
  parent: System.Collections.ArrayList
  langs:
  - csharp
  - vb
  name: LastIndexOf(Object)
  fullName: System.Collections.ArrayList.LastIndexOf(System.Object)
  type: Method
  source:
    remote:
      path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: LastIndexOf
    path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
    startLine: 44
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  summary: Searches for the specified <xref href="System.Object" data-throw-if-not-resolved="false"></xref> and returns the zero-based index of the last occurrence within the entire <xref href="System.Collections.ArrayList" data-throw-if-not-resolved="false"></xref>.
  syntax:
    content: public virtual int LastIndexOf(object value)
    content.vb: Public Overridable Function LastIndexOf(value As Object) As Integer
    parameters:
    - id: value
      type: System.Object
      description: 'The <xref href="System.Object" data-throw-if-not-resolved="false"></xref> to locate in the <xref href="System.Collections.ArrayList" data-throw-if-not-resolved="false"></xref>. The value can be null. '
    return:
      type: System.Int32
      description: The zero-based index of the last occurrence of <em>value</em> within the entire the <xref href="System.Collections.ArrayList" data-throw-if-not-resolved="false"></xref>, if found; otherwise, -1.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Collections.ArrayList.LastIndexOf(System.Object,System.Int32)
  commentId: M:System.Collections.ArrayList.LastIndexOf(System.Object,System.Int32)
  id: LastIndexOf(System.Object,System.Int32)
  parent: System.Collections.ArrayList
  langs:
  - csharp
  - vb
  name: LastIndexOf(Object, Int32)
  fullName: System.Collections.ArrayList.LastIndexOf(System.Object, System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: LastIndexOf
    path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
    startLine: 45
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  summary: Searches for the specified <xref href="System.Object" data-throw-if-not-resolved="false"></xref> and returns the zero-based index of the last occurrence within the range of elements in the <xref href="System.Collections.ArrayList" data-throw-if-not-resolved="false"></xref> that extends from the first element to the specified index.
  syntax:
    content: public virtual int LastIndexOf(object value, int startIndex)
    content.vb: Public Overridable Function LastIndexOf(value As Object, startIndex As Integer) As Integer
    parameters:
    - id: value
      type: System.Object
      description: 'The <xref href="System.Object" data-throw-if-not-resolved="false"></xref> to locate in the <xref href="System.Collections.ArrayList" data-throw-if-not-resolved="false"></xref>. The value can be null. '
    - id: startIndex
      type: System.Int32
      description: 'The zero-based starting index of the backward search. '
    return:
      type: System.Int32
      description: The zero-based index of the last occurrence of <em>value</em> within the range of elements in the <xref href="System.Collections.ArrayList" data-throw-if-not-resolved="false"></xref> that extends from the first element to <em>startIndex</em>, if found; otherwise, -1.
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<em>startIndex</em> is outside the range of valid indexes for the <xref href=\"System.Collections.ArrayList\" data-throw-if-not-resolved=\"false\"></xref>. "
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Collections.ArrayList.LastIndexOf(System.Object,System.Int32,System.Int32)
  commentId: M:System.Collections.ArrayList.LastIndexOf(System.Object,System.Int32,System.Int32)
  id: LastIndexOf(System.Object,System.Int32,System.Int32)
  parent: System.Collections.ArrayList
  langs:
  - csharp
  - vb
  name: LastIndexOf(Object, Int32, Int32)
  fullName: System.Collections.ArrayList.LastIndexOf(System.Object, System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: LastIndexOf
    path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
    startLine: 46
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  summary: Searches for the specified <xref href="System.Object" data-throw-if-not-resolved="false"></xref> and returns the zero-based index of the last occurrence within the range of elements in the <xref href="System.Collections.ArrayList" data-throw-if-not-resolved="false"></xref> that contains the specified number of elements and ends at the specified index.
  syntax:
    content: public virtual int LastIndexOf(object value, int startIndex, int count)
    content.vb: Public Overridable Function LastIndexOf(value As Object, startIndex As Integer, count As Integer) As Integer
    parameters:
    - id: value
      type: System.Object
      description: 'The <xref href="System.Object" data-throw-if-not-resolved="false"></xref> to locate in the <xref href="System.Collections.ArrayList" data-throw-if-not-resolved="false"></xref>. The value can be null. '
    - id: startIndex
      type: System.Int32
      description: 'The zero-based starting index of the backward search. '
    - id: count
      type: System.Int32
      description: 'The number of elements in the section to search. '
    return:
      type: System.Int32
      description: The zero-based index of the last occurrence of <em>value</em> within the range of elements in the <xref href="System.Collections.ArrayList" data-throw-if-not-resolved="false"></xref> that contains <em>count</em> number of elements and ends at <em>startIndex</em>, if found; otherwise, -1.
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<em>startIndex</em> is outside the range of valid indexes for the <xref href=\"System.Collections.ArrayList\" data-throw-if-not-resolved=\"false\"></xref>.-or- <em>count</em> is less than zero.-or- <em>startIndex</em> and <em>count</em> do not specify a valid section in the <xref href=\"System.Collections.ArrayList\" data-throw-if-not-resolved=\"false\"></xref>. "
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Collections.ArrayList.ReadOnly(System.Collections.ArrayList)
  commentId: M:System.Collections.ArrayList.ReadOnly(System.Collections.ArrayList)
  id: ReadOnly(System.Collections.ArrayList)
  parent: System.Collections.ArrayList
  langs:
  - csharp
  - vb
  name: ReadOnly(ArrayList)
  fullName: System.Collections.ArrayList.ReadOnly(System.Collections.ArrayList)
  type: Method
  source:
    remote:
      path: src/System.Collections.NonGeneric/src/System/Collections/ArrayList.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ReadOnly
    path: src/System.Collections.NonGeneric/src/System/Collections/ArrayList.cs
    startLine: 615
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  summary: Returns a read-only <xref href="System.Collections.ArrayList" data-throw-if-not-resolved="false"></xref> wrapper.
  syntax:
    content: public static ArrayList ReadOnly(ArrayList list)
    content.vb: Public Shared Function ReadOnly(list As ArrayList) As ArrayList
    parameters:
    - id: list
      type: System.Collections.ArrayList
      description: 'The <xref href="System.Collections.ArrayList" data-throw-if-not-resolved="false"></xref> to wrap. '
    return:
      type: System.Collections.ArrayList
      description: A read-only <xref href="System.Collections.ArrayList" data-throw-if-not-resolved="false"></xref> wrapper around <em>list</em>.
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>list</em> is null. "
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Collections.ArrayList.ReadOnly(System.Collections.IList)
  commentId: M:System.Collections.ArrayList.ReadOnly(System.Collections.IList)
  id: ReadOnly(System.Collections.IList)
  parent: System.Collections.ArrayList
  langs:
  - csharp
  - vb
  name: ReadOnly(IList)
  fullName: System.Collections.ArrayList.ReadOnly(System.Collections.IList)
  type: Method
  source:
    remote:
      path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ReadOnly
    path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
    startLine: 48
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  summary: Returns a read-only <xref href="System.Collections.IList" data-throw-if-not-resolved="false"></xref> wrapper.
  syntax:
    content: public static IList ReadOnly(IList list)
    content.vb: Public Shared Function ReadOnly(list As IList) As IList
    parameters:
    - id: list
      type: System.Collections.IList
      description: 'The <xref href="System.Collections.IList" data-throw-if-not-resolved="false"></xref> to wrap. '
    return:
      type: System.Collections.IList
      description: A read-only <xref href="System.Collections.IList" data-throw-if-not-resolved="false"></xref> wrapper around <em>list</em>.
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>list</em> is null. "
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Collections.ArrayList.Remove(System.Object)
  commentId: M:System.Collections.ArrayList.Remove(System.Object)
  id: Remove(System.Object)
  parent: System.Collections.ArrayList
  langs:
  - csharp
  - vb
  name: Remove(Object)
  fullName: System.Collections.ArrayList.Remove(System.Object)
  type: Method
  source:
    remote:
      path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Remove
    path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
    startLine: 49
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  summary: Removes the first occurrence of a specific object from the <xref href="System.Collections.ArrayList" data-throw-if-not-resolved="false"></xref>.
  syntax:
    content: public virtual void Remove(object obj)
    content.vb: Public Overridable Sub Remove(obj As Object)
    parameters:
    - id: obj
      type: System.Object
      description: 'The <xref href="System.Object" data-throw-if-not-resolved="false"></xref> to remove from the <xref href="System.Collections.ArrayList" data-throw-if-not-resolved="false"></xref>. The value can be null. '
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: 'The <xref href="System.Collections.ArrayList" data-throw-if-not-resolved="false"></xref> is read-only.-or- The <xref href="System.Collections.ArrayList" data-throw-if-not-resolved="false"></xref> has a fixed size. '
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Collections.ArrayList.RemoveAt(System.Int32)
  commentId: M:System.Collections.ArrayList.RemoveAt(System.Int32)
  id: RemoveAt(System.Int32)
  parent: System.Collections.ArrayList
  langs:
  - csharp
  - vb
  name: RemoveAt(Int32)
  fullName: System.Collections.ArrayList.RemoveAt(System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Collections.NonGeneric/src/System/Collections/ArrayList.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: RemoveAt
    path: src/System.Collections.NonGeneric/src/System/Collections/ArrayList.cs
    startLine: 640
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  summary: Removes the element at the specified index of the <xref href="System.Collections.ArrayList" data-throw-if-not-resolved="false"></xref>.
  syntax:
    content: public virtual void RemoveAt(int index)
    content.vb: Public Overridable Sub RemoveAt(index As Integer)
    parameters:
    - id: index
      type: System.Int32
      description: 'The zero-based index of the element to remove. '
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<em>index</em> is less than zero.-or- <em>index</em> is equal to or greater than <xref href=\"System.Collections.ArrayList.Count\" data-throw-if-not-resolved=\"false\"></xref>. "
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: 'The <xref href="System.Collections.ArrayList" data-throw-if-not-resolved="false"></xref> is read-only.-or- The <xref href="System.Collections.ArrayList" data-throw-if-not-resolved="false"></xref> has a fixed size. '
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Collections.ArrayList.RemoveRange(System.Int32,System.Int32)
  commentId: M:System.Collections.ArrayList.RemoveRange(System.Int32,System.Int32)
  id: RemoveRange(System.Int32,System.Int32)
  parent: System.Collections.ArrayList
  langs:
  - csharp
  - vb
  name: RemoveRange(Int32, Int32)
  fullName: System.Collections.ArrayList.RemoveRange(System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Collections.NonGeneric/src/System/Collections/ArrayList.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: RemoveRange
    path: src/System.Collections.NonGeneric/src/System/Collections/ArrayList.cs
    startLine: 658
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  summary: Removes a range of elements from the <xref href="System.Collections.ArrayList" data-throw-if-not-resolved="false"></xref>.
  syntax:
    content: public virtual void RemoveRange(int index, int count)
    content.vb: Public Overridable Sub RemoveRange(index As Integer, count As Integer)
    parameters:
    - id: index
      type: System.Int32
      description: 'The zero-based starting index of the range of elements to remove. '
    - id: count
      type: System.Int32
      description: 'The number of elements to remove. '
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<em>index</em> is less than zero.-or- <em>count</em> is less than zero. "
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<em>index</em> and <em>count</em> do not denote a valid range of elements in the <xref href=\"System.Collections.ArrayList\" data-throw-if-not-resolved=\"false\"></xref>. "
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: 'The <xref href="System.Collections.ArrayList" data-throw-if-not-resolved="false"></xref> is read-only.-or- The <xref href="System.Collections.ArrayList" data-throw-if-not-resolved="false"></xref> has a fixed size. '
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Collections.ArrayList.Repeat(System.Object,System.Int32)
  commentId: M:System.Collections.ArrayList.Repeat(System.Object,System.Int32)
  id: Repeat(System.Object,System.Int32)
  parent: System.Collections.ArrayList
  langs:
  - csharp
  - vb
  name: Repeat(Object, Int32)
  fullName: System.Collections.ArrayList.Repeat(System.Object, System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Repeat
    path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
    startLine: 52
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  summary: Returns an <xref href="System.Collections.ArrayList" data-throw-if-not-resolved="false"></xref> whose elements are copies of the specified value.
  syntax:
    content: public static ArrayList Repeat(object value, int count)
    content.vb: Public Shared Function Repeat(value As Object, count As Integer) As ArrayList
    parameters:
    - id: value
      type: System.Object
      description: 'The <xref href="System.Object" data-throw-if-not-resolved="false"></xref> to copy multiple times in the new <xref href="System.Collections.ArrayList" data-throw-if-not-resolved="false"></xref>. The value can be null. '
    - id: count
      type: System.Int32
      description: 'The number of times <em>value</em> should be copied. '
    return:
      type: System.Collections.ArrayList
      description: An <xref href="System.Collections.ArrayList" data-throw-if-not-resolved="false"></xref> with <em>count</em> number of elements, all of which are copies of <em>value</em>.
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<em>count</em> is less than zero. "
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Collections.ArrayList.Reverse
  commentId: M:System.Collections.ArrayList.Reverse
  id: Reverse
  parent: System.Collections.ArrayList
  langs:
  - csharp
  - vb
  name: Reverse()
  fullName: System.Collections.ArrayList.Reverse()
  type: Method
  source:
    remote:
      path: src/System.Collections.NonGeneric/src/System/Collections/ArrayList.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Reverse
    path: src/System.Collections.NonGeneric/src/System/Collections/ArrayList.cs
    startLine: 699
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  summary: Reverses the order of the elements in the entire <xref href="System.Collections.ArrayList" data-throw-if-not-resolved="false"></xref>.
  syntax:
    content: public virtual void Reverse()
    content.vb: Public Overridable Sub Reverse
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: 'The <xref href="System.Collections.ArrayList" data-throw-if-not-resolved="false"></xref> is read-only. '
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Collections.ArrayList.Reverse(System.Int32,System.Int32)
  commentId: M:System.Collections.ArrayList.Reverse(System.Int32,System.Int32)
  id: Reverse(System.Int32,System.Int32)
  parent: System.Collections.ArrayList
  langs:
  - csharp
  - vb
  name: Reverse(Int32, Int32)
  fullName: System.Collections.ArrayList.Reverse(System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Collections.NonGeneric/src/System/Collections/ArrayList.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Reverse
    path: src/System.Collections.NonGeneric/src/System/Collections/ArrayList.cs
    startLine: 712
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  summary: Reverses the order of the elements in the specified range.
  syntax:
    content: public virtual void Reverse(int index, int count)
    content.vb: Public Overridable Sub Reverse(index As Integer, count As Integer)
    parameters:
    - id: index
      type: System.Int32
      description: 'The zero-based starting index of the range to reverse. '
    - id: count
      type: System.Int32
      description: 'The number of elements in the range to reverse. '
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<em>index</em> is less than zero.-or- <em>count</em> is less than zero. "
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<em>index</em> and <em>count</em> do not denote a valid range of elements in the <xref href=\"System.Collections.ArrayList\" data-throw-if-not-resolved=\"false\"></xref>. "
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: 'The <xref href="System.Collections.ArrayList" data-throw-if-not-resolved="false"></xref> is read-only. '
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Collections.ArrayList.SetRange(System.Int32,System.Collections.ICollection)
  commentId: M:System.Collections.ArrayList.SetRange(System.Int32,System.Collections.ICollection)
  id: SetRange(System.Int32,System.Collections.ICollection)
  parent: System.Collections.ArrayList
  langs:
  - csharp
  - vb
  name: SetRange(Int32, ICollection)
  fullName: System.Collections.ArrayList.SetRange(System.Int32, System.Collections.ICollection)
  type: Method
  source:
    remote:
      path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: SetRange
    path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
    startLine: 55
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  summary: Copies the elements of a collection over a range of elements in the <xref href="System.Collections.ArrayList" data-throw-if-not-resolved="false"></xref>.
  syntax:
    content: public virtual void SetRange(int index, ICollection c)
    content.vb: Public Overridable Sub SetRange(index As Integer, c As ICollection)
    parameters:
    - id: index
      type: System.Int32
      description: 'The zero-based <xref href="System.Collections.ArrayList" data-throw-if-not-resolved="false"></xref> index at which to start copying the elements of <em>c</em>. '
    - id: c
      type: System.Collections.ICollection
      description: 'The <xref href="System.Collections.ICollection" data-throw-if-not-resolved="false"></xref> whose elements to copy to the <xref href="System.Collections.ArrayList" data-throw-if-not-resolved="false"></xref>. The collection itself cannot be null, but it can contain elements that are null. '
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<em>index</em> is less than zero.-or- <em>index</em> plus the number of elements in <em>c</em> is greater than <xref href=\"System.Collections.ArrayList.Count\" data-throw-if-not-resolved=\"false\"></xref>. "
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>c</em> is null. "
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: 'The <xref href="System.Collections.ArrayList" data-throw-if-not-resolved="false"></xref> is read-only. '
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Collections.ArrayList.Sort
  commentId: M:System.Collections.ArrayList.Sort
  id: Sort
  parent: System.Collections.ArrayList
  langs:
  - csharp
  - vb
  name: Sort()
  fullName: System.Collections.ArrayList.Sort()
  type: Method
  source:
    remote:
      path: src/System.Collections.NonGeneric/src/System/Collections/ArrayList.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Sort
    path: src/System.Collections.NonGeneric/src/System/Collections/ArrayList.cs
    startLine: 755
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  summary: Sorts the elements in the entire <xref href="System.Collections.ArrayList" data-throw-if-not-resolved="false"></xref>.
  syntax:
    content: public virtual void Sort()
    content.vb: Public Overridable Sub Sort
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: 'The <xref href="System.Collections.ArrayList" data-throw-if-not-resolved="false"></xref> is read-only. '
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Collections.ArrayList.Sort(System.Collections.IComparer)
  commentId: M:System.Collections.ArrayList.Sort(System.Collections.IComparer)
  id: Sort(System.Collections.IComparer)
  parent: System.Collections.ArrayList
  langs:
  - csharp
  - vb
  name: Sort(IComparer)
  fullName: System.Collections.ArrayList.Sort(System.Collections.IComparer)
  type: Method
  source:
    remote:
      path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Sort
    path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
    startLine: 57
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  summary: Sorts the elements in the entire <xref href="System.Collections.ArrayList" data-throw-if-not-resolved="false"></xref> using the specified comparer.
  syntax:
    content: public virtual void Sort(IComparer comparer)
    content.vb: Public Overridable Sub Sort(comparer As IComparer)
    parameters:
    - id: comparer
      type: System.Collections.IComparer
      description: 'The <xref href="System.Collections.IComparer" data-throw-if-not-resolved="false"></xref> implementation to use when comparing elements.-or- A null reference (Nothing in Visual Basic) to use the <xref href="System.IComparable" data-throw-if-not-resolved="false"></xref> implementation of each element. '
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: 'The <xref href="System.Collections.ArrayList" data-throw-if-not-resolved="false"></xref> is read-only. '
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: An error occurred while comparing two elements.
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: null is passed for <em>comparer</em>, and the elements in the list do not implement <xref href="System.IComparable" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Collections.ArrayList.Sort(System.Int32,System.Int32,System.Collections.IComparer)
  commentId: M:System.Collections.ArrayList.Sort(System.Int32,System.Int32,System.Collections.IComparer)
  id: Sort(System.Int32,System.Int32,System.Collections.IComparer)
  parent: System.Collections.ArrayList
  langs:
  - csharp
  - vb
  name: Sort(Int32, Int32, IComparer)
  fullName: System.Collections.ArrayList.Sort(System.Int32, System.Int32, System.Collections.IComparer)
  type: Method
  source:
    remote:
      path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Sort
    path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
    startLine: 58
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  summary: Sorts the elements in a range of elements in <xref href="System.Collections.ArrayList" data-throw-if-not-resolved="false"></xref> using the specified comparer.
  syntax:
    content: public virtual void Sort(int index, int count, IComparer comparer)
    content.vb: Public Overridable Sub Sort(index As Integer, count As Integer, comparer As IComparer)
    parameters:
    - id: index
      type: System.Int32
      description: 'The zero-based starting index of the range to sort. '
    - id: count
      type: System.Int32
      description: 'The length of the range to sort. '
    - id: comparer
      type: System.Collections.IComparer
      description: 'The <xref href="System.Collections.IComparer" data-throw-if-not-resolved="false"></xref> implementation to use when comparing elements.-or- A null reference (Nothing in Visual Basic) to use the <xref href="System.IComparable" data-throw-if-not-resolved="false"></xref> implementation of each element. '
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<em>index</em> is less than zero.-or- <em>count</em> is less than zero. "
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<em>index</em> and <em>count</em> do not specify a valid range in the <xref href=\"System.Collections.ArrayList\" data-throw-if-not-resolved=\"false\"></xref>. "
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: 'The <xref href="System.Collections.ArrayList" data-throw-if-not-resolved="false"></xref> is read-only. '
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: An error occurred while comparing two elements.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Collections.ArrayList.Synchronized(System.Collections.ArrayList)
  commentId: M:System.Collections.ArrayList.Synchronized(System.Collections.ArrayList)
  id: Synchronized(System.Collections.ArrayList)
  parent: System.Collections.ArrayList
  langs:
  - csharp
  - vb
  name: Synchronized(ArrayList)
  fullName: System.Collections.ArrayList.Synchronized(System.Collections.ArrayList)
  type: Method
  source:
    remote:
      path: src/System.Collections.NonGeneric/src/System/Collections/ArrayList.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Synchronized
    path: src/System.Collections.NonGeneric/src/System/Collections/ArrayList.cs
    startLine: 802
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  summary: Returns an <xref href="System.Collections.ArrayList" data-throw-if-not-resolved="false"></xref> wrapper that is synchronized (thread safe).
  syntax:
    content: public static ArrayList Synchronized(ArrayList list)
    content.vb: Public Shared Function Synchronized(list As ArrayList) As ArrayList
    parameters:
    - id: list
      type: System.Collections.ArrayList
      description: 'The <xref href="System.Collections.ArrayList" data-throw-if-not-resolved="false"></xref> to synchronize. '
    return:
      type: System.Collections.ArrayList
      description: An <xref href="System.Collections.ArrayList" data-throw-if-not-resolved="false"></xref> wrapper that is synchronized (thread safe).
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>list</em> is null. "
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Collections.ArrayList.Synchronized(System.Collections.IList)
  commentId: M:System.Collections.ArrayList.Synchronized(System.Collections.IList)
  id: Synchronized(System.Collections.IList)
  parent: System.Collections.ArrayList
  langs:
  - csharp
  - vb
  name: Synchronized(IList)
  fullName: System.Collections.ArrayList.Synchronized(System.Collections.IList)
  type: Method
  source:
    remote:
      path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Synchronized
    path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
    startLine: 60
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  summary: Returns an <xref href="System.Collections.IList" data-throw-if-not-resolved="false"></xref> wrapper that is synchronized (thread safe).
  syntax:
    content: public static IList Synchronized(IList list)
    content.vb: Public Shared Function Synchronized(list As IList) As IList
    parameters:
    - id: list
      type: System.Collections.IList
      description: 'The <xref href="System.Collections.IList" data-throw-if-not-resolved="false"></xref> to synchronize. '
    return:
      type: System.Collections.IList
      description: An <xref href="System.Collections.IList" data-throw-if-not-resolved="false"></xref> wrapper that is synchronized (thread safe).
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>list</em> is null. "
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Collections.ArrayList.ToArray
  commentId: M:System.Collections.ArrayList.ToArray
  id: ToArray
  parent: System.Collections.ArrayList
  langs:
  - csharp
  - vb
  name: ToArray()
  fullName: System.Collections.ArrayList.ToArray()
  type: Method
  source:
    remote:
      path: src/System.Collections.NonGeneric/src/System/Collections/ArrayList.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ToArray
    path: src/System.Collections.NonGeneric/src/System/Collections/ArrayList.cs
    startLine: 813
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  summary: Copies the elements of the <xref href="System.Collections.ArrayList" data-throw-if-not-resolved="false"></xref> to a new <xref href="System.Object" data-throw-if-not-resolved="false"></xref> array.
  syntax:
    content: public virtual object[] ToArray()
    content.vb: Public Overridable Function ToArray As Object()
    return:
      type: System.Object[]
      description: An <xref href="System.Object" data-throw-if-not-resolved="false"></xref> array containing copies of the elements of the <xref href="System.Collections.ArrayList" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Collections.ArrayList.ToArray(System.Type)
  commentId: M:System.Collections.ArrayList.ToArray(System.Type)
  id: ToArray(System.Type)
  parent: System.Collections.ArrayList
  langs:
  - csharp
  - vb
  name: ToArray(Type)
  fullName: System.Collections.ArrayList.ToArray(System.Type)
  type: Method
  source:
    remote:
      path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ToArray
    path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
    startLine: 62
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  summary: Copies the elements of the <xref href="System.Collections.ArrayList" data-throw-if-not-resolved="false"></xref> to a new array of the specified element type.
  syntax:
    content: public virtual Array ToArray(Type type)
    content.vb: Public Overridable Function ToArray(type As Type) As Array
    parameters:
    - id: type
      type: System.Type
      description: The element <xref href="System.Type" data-throw-if-not-resolved="false"></xref> of the destination array to create and copy elements to.
    return:
      type: System.Array
      description: An array of the specified element type containing copies of the elements of the <xref href="System.Collections.ArrayList" data-throw-if-not-resolved="false"></xref>.
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>type</em> is null. "
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: 'The type of the source <xref href="System.Collections.ArrayList" data-throw-if-not-resolved="false"></xref> cannot be cast automatically to the specified type. '
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Collections.ArrayList.TrimToSize
  commentId: M:System.Collections.ArrayList.TrimToSize
  id: TrimToSize
  parent: System.Collections.ArrayList
  langs:
  - csharp
  - vb
  name: TrimToSize()
  fullName: System.Collections.ArrayList.TrimToSize()
  type: Method
  source:
    remote:
      path: src/System.Collections.NonGeneric/src/System/Collections/ArrayList.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: TrimToSize
    path: src/System.Collections.NonGeneric/src/System/Collections/ArrayList.cs
    startLine: 851
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  summary: Sets the capacity to the actual number of elements in the <xref href="System.Collections.ArrayList" data-throw-if-not-resolved="false"></xref>.
  syntax:
    content: public virtual void TrimToSize()
    content.vb: Public Overridable Sub TrimToSize
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: 'The <xref href="System.Collections.ArrayList" data-throw-if-not-resolved="false"></xref> is read-only.-or- The <xref href="System.Collections.ArrayList" data-throw-if-not-resolved="false"></xref> has a fixed size. '
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
references:
- uid: System.Collections
  isExternal: false
  name: System.Collections
  fullName: System.Collections
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System.Collections.IList
  parent: System.Collections
  isExternal: false
  name: IList
  fullName: System.Collections.IList
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Collections.ICollection
  parent: System.Collections
  isExternal: false
  name: ICollection
  fullName: System.Collections.ICollection
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  fullName: System.Int32
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  fullName: System.Boolean
- uid: System.Collections.ArrayList
  parent: System.Collections
  isExternal: false
  name: ArrayList
  fullName: System.Collections.ArrayList
- uid: System.Collections.IComparer
  parent: System.Collections
  isExternal: false
  name: IComparer
  fullName: System.Collections.IComparer
- uid: System.Array
  parent: System
  isExternal: false
  name: Array
  fullName: System.Array
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: false
  name: Collections.IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Object[]
  isExternal: false
  name: Object[]
  fullName: System.Object[]
  fullname.vb: System.Object()
  name.vb: Object()
  spec.csharp:
  - uid: System.Object
    name: Object
    fullName: System.Object
  - name: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Object
    name: Object
    fullName: System.Object
  - name: ()
    fullName: ()
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  fullName: System.Type
- uid: System.ArgumentNullException
  isExternal: false
  name: ArgumentNullException
  fullName: System.ArgumentNullException
- uid: System.ArgumentOutOfRangeException
  isExternal: false
  name: ArgumentOutOfRangeException
  fullName: System.ArgumentOutOfRangeException
- uid: System.OutOfMemoryException
  isExternal: false
  name: OutOfMemoryException
  fullName: System.OutOfMemoryException
- uid: System.NotSupportedException
  parent: System
  isExternal: false
  name: NotSupportedException
  fullName: System.NotSupportedException
- uid: System.ArgumentException
  parent: System
  isExternal: false
  name: ArgumentException
  fullName: System.ArgumentException
- uid: System.InvalidOperationException
  parent: System
  isExternal: false
  name: InvalidOperationException
  fullName: System.InvalidOperationException
- uid: System.InvalidCastException
  isExternal: false
  name: InvalidCastException
  fullName: System.InvalidCastException
