items:
- uid: System.Security.AccessControl.CommonObjectSecurity
  commentId: T:System.Security.AccessControl.CommonObjectSecurity
  id: CommonObjectSecurity
  parent: System.Security.AccessControl
  children:
  - System.Security.AccessControl.CommonObjectSecurity.#ctor(System.Boolean)
  - System.Security.AccessControl.CommonObjectSecurity.AddAccessRule(System.Security.AccessControl.AccessRule)
  - System.Security.AccessControl.CommonObjectSecurity.AddAuditRule(System.Security.AccessControl.AuditRule)
  - System.Security.AccessControl.CommonObjectSecurity.GetAccessRules(System.Boolean,System.Boolean,System.Type)
  - System.Security.AccessControl.CommonObjectSecurity.GetAuditRules(System.Boolean,System.Boolean,System.Type)
  - System.Security.AccessControl.CommonObjectSecurity.ModifyAccess(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)
  - System.Security.AccessControl.CommonObjectSecurity.ModifyAudit(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)
  - System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRule(System.Security.AccessControl.AccessRule)
  - System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRuleAll(System.Security.AccessControl.AccessRule)
  - System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRuleSpecific(System.Security.AccessControl.AccessRule)
  - System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRule(System.Security.AccessControl.AuditRule)
  - System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRuleAll(System.Security.AccessControl.AuditRule)
  - System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRuleSpecific(System.Security.AccessControl.AuditRule)
  - System.Security.AccessControl.CommonObjectSecurity.ResetAccessRule(System.Security.AccessControl.AccessRule)
  - System.Security.AccessControl.CommonObjectSecurity.SetAccessRule(System.Security.AccessControl.AccessRule)
  - System.Security.AccessControl.CommonObjectSecurity.SetAuditRule(System.Security.AccessControl.AuditRule)
  langs:
  - csharp
  - vb
  name: CommonObjectSecurity
  fullName: System.Security.AccessControl.CommonObjectSecurity
  type: Class
  source:
    remote:
      path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CommonObjectSecurity
    path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs
    startLine: 161
  assemblies:
  - System.Security.AccessControl
  namespace: System.Security.AccessControl
  summary: Controls access to objects without direct manipulation of access control lists (ACLs). This class is the abstract base class for the <xref href="System.Security.AccessControl.NativeObjectSecurity" data-throw-if-not-resolved="false"></xref> class.
  syntax:
    content: 'public abstract class CommonObjectSecurity : ObjectSecurity'
    content.vb: >-
      Public MustInherit Class CommonObjectSecurity
          Inherits ObjectSecurity
  inheritance:
  - System.Object
  - System.Security.AccessControl.ObjectSecurity
  inheritedMembers:
  - System.Security.AccessControl.ObjectSecurity.AccessRightType
  - System.Security.AccessControl.ObjectSecurity.AccessRulesModified
  - System.Security.AccessControl.ObjectSecurity.AccessRuleType
  - System.Security.AccessControl.ObjectSecurity.AreAccessRulesCanonical
  - System.Security.AccessControl.ObjectSecurity.AreAccessRulesProtected
  - System.Security.AccessControl.ObjectSecurity.AreAuditRulesCanonical
  - System.Security.AccessControl.ObjectSecurity.AreAuditRulesProtected
  - System.Security.AccessControl.ObjectSecurity.AuditRulesModified
  - System.Security.AccessControl.ObjectSecurity.AuditRuleType
  - System.Security.AccessControl.ObjectSecurity.GroupModified
  - System.Security.AccessControl.ObjectSecurity.IsContainer
  - System.Security.AccessControl.ObjectSecurity.IsDS
  - System.Security.AccessControl.ObjectSecurity.OwnerModified
  - System.Security.AccessControl.ObjectSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)
  - System.Security.AccessControl.ObjectSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)
  - System.Security.AccessControl.ObjectSecurity.GetGroup(System.Type)
  - System.Security.AccessControl.ObjectSecurity.GetOwner(System.Type)
  - System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorBinaryForm
  - System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorSddlForm(System.Security.AccessControl.AccessControlSections)
  - System.Security.AccessControl.ObjectSecurity.IsSddlConversionSupported
  - System.Security.AccessControl.ObjectSecurity.ModifyAccessRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)
  - System.Security.AccessControl.ObjectSecurity.ModifyAuditRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)
  - System.Security.AccessControl.ObjectSecurity.Persist(System.Boolean,System.String,System.Security.AccessControl.AccessControlSections)
  - System.Security.AccessControl.ObjectSecurity.Persist(System.Runtime.InteropServices.SafeHandle,System.Security.AccessControl.AccessControlSections)
  - System.Security.AccessControl.ObjectSecurity.Persist(System.String,System.Security.AccessControl.AccessControlSections)
  - System.Security.AccessControl.ObjectSecurity.PurgeAccessRules(System.Security.Principal.IdentityReference)
  - System.Security.AccessControl.ObjectSecurity.PurgeAuditRules(System.Security.Principal.IdentityReference)
  - System.Security.AccessControl.ObjectSecurity.ReadLock
  - System.Security.AccessControl.ObjectSecurity.ReadUnlock
  - System.Security.AccessControl.ObjectSecurity.SetAccessRuleProtection(System.Boolean,System.Boolean)
  - System.Security.AccessControl.ObjectSecurity.SetAuditRuleProtection(System.Boolean,System.Boolean)
  - System.Security.AccessControl.ObjectSecurity.SetGroup(System.Security.Principal.IdentityReference)
  - System.Security.AccessControl.ObjectSecurity.SetOwner(System.Security.Principal.IdentityReference)
  - System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm(System.Byte[])
  - System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm(System.Byte[],System.Security.AccessControl.AccessControlSections)
  - System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm(System.String)
  - System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm(System.String,System.Security.AccessControl.AccessControlSections)
  - System.Security.AccessControl.ObjectSecurity.WriteLock
  - System.Security.AccessControl.ObjectSecurity.WriteUnlock
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: System.Security.AccessControl.CommonObjectSecurity.#ctor(System.Boolean)
  commentId: M:System.Security.AccessControl.CommonObjectSecurity.#ctor(System.Boolean)
  id: '#ctor(System.Boolean)'
  parent: System.Security.AccessControl.CommonObjectSecurity
  langs:
  - csharp
  - vb
  name: CommonObjectSecurity(Boolean)
  fullName: System.Security.AccessControl.CommonObjectSecurity.CommonObjectSecurity(System.Boolean)
  type: Constructor
  source:
    remote:
      path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs
    startLine: 163
  assemblies:
  - System.Security.AccessControl
  namespace: System.Security.AccessControl
  summary: Initializes a new instance of the <xref href="System.Security.AccessControl.CommonObjectSecurity" data-throw-if-not-resolved="false"></xref> class.
  syntax:
    content: protected CommonObjectSecurity(bool isContainer)
    content.vb: Protected Sub New(isContainer As Boolean)
    parameters:
    - id: isContainer
      type: System.Boolean
      description: true if the new object is a container object.
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: System.Security.AccessControl.CommonObjectSecurity.AddAccessRule(System.Security.AccessControl.AccessRule)
  commentId: M:System.Security.AccessControl.CommonObjectSecurity.AddAccessRule(System.Security.AccessControl.AccessRule)
  id: AddAccessRule(System.Security.AccessControl.AccessRule)
  parent: System.Security.AccessControl.CommonObjectSecurity
  langs:
  - csharp
  - vb
  name: AddAccessRule(AccessRule)
  fullName: System.Security.AccessControl.CommonObjectSecurity.AddAccessRule(System.Security.AccessControl.AccessRule)
  type: Method
  source:
    remote:
      path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: AddAccessRule
    path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs
    startLine: 164
  assemblies:
  - System.Security.AccessControl
  namespace: System.Security.AccessControl
  summary: Adds the specified access rule to the Discretionary Access Control List (DACL) associated with this <xref href="System.Security.AccessControl.CommonObjectSecurity" data-throw-if-not-resolved="false"></xref> object.
  syntax:
    content: protected void AddAccessRule(AccessRule rule)
    content.vb: Protected Sub AddAccessRule(rule As AccessRule)
    parameters:
    - id: rule
      type: System.Security.AccessControl.AccessRule
      description: The access rule to add.
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: System.Security.AccessControl.CommonObjectSecurity.AddAuditRule(System.Security.AccessControl.AuditRule)
  commentId: M:System.Security.AccessControl.CommonObjectSecurity.AddAuditRule(System.Security.AccessControl.AuditRule)
  id: AddAuditRule(System.Security.AccessControl.AuditRule)
  parent: System.Security.AccessControl.CommonObjectSecurity
  langs:
  - csharp
  - vb
  name: AddAuditRule(AuditRule)
  fullName: System.Security.AccessControl.CommonObjectSecurity.AddAuditRule(System.Security.AccessControl.AuditRule)
  type: Method
  source:
    remote:
      path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: AddAuditRule
    path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs
    startLine: 165
  assemblies:
  - System.Security.AccessControl
  namespace: System.Security.AccessControl
  summary: Adds the specified audit rule to the System Access Control List (SACL) associated with this <xref href="System.Security.AccessControl.CommonObjectSecurity" data-throw-if-not-resolved="false"></xref> object.
  syntax:
    content: protected void AddAuditRule(AuditRule rule)
    content.vb: Protected Sub AddAuditRule(rule As AuditRule)
    parameters:
    - id: rule
      type: System.Security.AccessControl.AuditRule
      description: The audit rule to add.
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: System.Security.AccessControl.CommonObjectSecurity.GetAccessRules(System.Boolean,System.Boolean,System.Type)
  commentId: M:System.Security.AccessControl.CommonObjectSecurity.GetAccessRules(System.Boolean,System.Boolean,System.Type)
  id: GetAccessRules(System.Boolean,System.Boolean,System.Type)
  parent: System.Security.AccessControl.CommonObjectSecurity
  langs:
  - csharp
  - vb
  name: GetAccessRules(Boolean, Boolean, Type)
  fullName: System.Security.AccessControl.CommonObjectSecurity.GetAccessRules(System.Boolean, System.Boolean, System.Type)
  type: Method
  source:
    remote:
      path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetAccessRules
    path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs
    startLine: 166
  assemblies:
  - System.Security.AccessControl
  namespace: System.Security.AccessControl
  summary: Gets a collection of the access rules associated with the specified security identifier.
  syntax:
    content: public AuthorizationRuleCollection GetAccessRules(bool includeExplicit, bool includeInherited, Type targetType)
    content.vb: Public Function GetAccessRules(includeExplicit As Boolean, includeInherited As Boolean, targetType As Type) As AuthorizationRuleCollection
    parameters:
    - id: includeExplicit
      type: System.Boolean
      description: true to include access rules explicitly set for the object.
    - id: includeInherited
      type: System.Boolean
      description: true to include inherited access rules.
    - id: targetType
      type: System.Type
      description: Specifies whether the security identifier for which to retrieve access rules is of type T:System.Security.Principal.SecurityIdentifier or type T:System.Security.Principal.NTAccount. The value of this parameter must be a type that can be translated to  the <xref href="System.Security.Principal.SecurityIdentifier" data-throw-if-not-resolved="false"></xref> type.
    return:
      type: System.Security.AccessControl.AuthorizationRuleCollection
      description: The collection of access rules associated with the specified <xref href="System.Security.Principal.SecurityIdentifier" data-throw-if-not-resolved="false"></xref> object.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Security.AccessControl.CommonObjectSecurity.GetAuditRules(System.Boolean,System.Boolean,System.Type)
  commentId: M:System.Security.AccessControl.CommonObjectSecurity.GetAuditRules(System.Boolean,System.Boolean,System.Type)
  id: GetAuditRules(System.Boolean,System.Boolean,System.Type)
  parent: System.Security.AccessControl.CommonObjectSecurity
  langs:
  - csharp
  - vb
  name: GetAuditRules(Boolean, Boolean, Type)
  fullName: System.Security.AccessControl.CommonObjectSecurity.GetAuditRules(System.Boolean, System.Boolean, System.Type)
  type: Method
  source:
    remote:
      path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetAuditRules
    path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs
    startLine: 167
  assemblies:
  - System.Security.AccessControl
  namespace: System.Security.AccessControl
  summary: Gets a collection of the audit rules associated with the specified security identifier.
  syntax:
    content: public AuthorizationRuleCollection GetAuditRules(bool includeExplicit, bool includeInherited, Type targetType)
    content.vb: Public Function GetAuditRules(includeExplicit As Boolean, includeInherited As Boolean, targetType As Type) As AuthorizationRuleCollection
    parameters:
    - id: includeExplicit
      type: System.Boolean
      description: true to include audit rules explicitly set for the object.
    - id: includeInherited
      type: System.Boolean
      description: true to include inherited audit rules.
    - id: targetType
      type: System.Type
      description: The security identifier for which to retrieve audit rules. This must be an object that can be cast as a <xref href="System.Security.Principal.SecurityIdentifier" data-throw-if-not-resolved="false"></xref> object.
    return:
      type: System.Security.AccessControl.AuthorizationRuleCollection
      description: The collection of audit rules associated with the specified <xref href="System.Security.Principal.SecurityIdentifier" data-throw-if-not-resolved="false"></xref> object.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Security.AccessControl.CommonObjectSecurity.ModifyAccess(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)
  commentId: M:System.Security.AccessControl.CommonObjectSecurity.ModifyAccess(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)
  id: ModifyAccess(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)
  parent: System.Security.AccessControl.CommonObjectSecurity
  langs:
  - csharp
  - vb
  name: ModifyAccess(AccessControlModification, AccessRule, out Boolean)
  fullName: System.Security.AccessControl.CommonObjectSecurity.ModifyAccess(System.Security.AccessControl.AccessControlModification, System.Security.AccessControl.AccessRule, out System.Boolean)
  type: Method
  source:
    remote:
      path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ModifyAccess
    path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs
    startLine: 168
  assemblies:
  - System.Security.AccessControl
  namespace: System.Security.AccessControl
  summary: Applies the specified modification to the Discretionary Access Control List (DACL) associated with this <xref href="System.Security.AccessControl.CommonObjectSecurity" data-throw-if-not-resolved="false"></xref> object.
  syntax:
    content: protected override bool ModifyAccess(AccessControlModification modification, AccessRule rule, out bool modified)
    content.vb: Protected Overrides Function ModifyAccess(modification As AccessControlModification, rule As AccessRule, ByRef modified As Boolean) As Boolean
    parameters:
    - id: modification
      type: System.Security.AccessControl.AccessControlModification
      description: The modification to apply to the DACL.
    - id: rule
      type: System.Security.AccessControl.AccessRule
      description: The access rule to modify.
    - id: modified
      type: System.Boolean
      description: true if the DACL is successfully modified; otherwise, false.
    return:
      type: System.Boolean
      description: true if the DACL is successfully modified; otherwise, false.
  overridden: System.Security.AccessControl.ObjectSecurity.ModifyAccess(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
  fullName.vb: System.Security.AccessControl.CommonObjectSecurity.ModifyAccess(System.Security.AccessControl.AccessControlModification, System.Security.AccessControl.AccessRule, ByRef System.Boolean)
  name.vb: ModifyAccess(AccessControlModification, AccessRule, ByRef Boolean)
- uid: System.Security.AccessControl.CommonObjectSecurity.ModifyAudit(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)
  commentId: M:System.Security.AccessControl.CommonObjectSecurity.ModifyAudit(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)
  id: ModifyAudit(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)
  parent: System.Security.AccessControl.CommonObjectSecurity
  langs:
  - csharp
  - vb
  name: ModifyAudit(AccessControlModification, AuditRule, out Boolean)
  fullName: System.Security.AccessControl.CommonObjectSecurity.ModifyAudit(System.Security.AccessControl.AccessControlModification, System.Security.AccessControl.AuditRule, out System.Boolean)
  type: Method
  source:
    remote:
      path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ModifyAudit
    path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs
    startLine: 169
  assemblies:
  - System.Security.AccessControl
  namespace: System.Security.AccessControl
  summary: Applies the specified modification to the System Access Control List (SACL) associated with this <xref href="System.Security.AccessControl.CommonObjectSecurity" data-throw-if-not-resolved="false"></xref> object.
  syntax:
    content: protected override bool ModifyAudit(AccessControlModification modification, AuditRule rule, out bool modified)
    content.vb: Protected Overrides Function ModifyAudit(modification As AccessControlModification, rule As AuditRule, ByRef modified As Boolean) As Boolean
    parameters:
    - id: modification
      type: System.Security.AccessControl.AccessControlModification
      description: The modification to apply to the SACL.
    - id: rule
      type: System.Security.AccessControl.AuditRule
      description: The audit rule to modify.
    - id: modified
      type: System.Boolean
      description: true if the SACL is successfully modified; otherwise, false.
    return:
      type: System.Boolean
      description: true if the SACL is successfully modified; otherwise, false.
  overridden: System.Security.AccessControl.ObjectSecurity.ModifyAudit(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
  fullName.vb: System.Security.AccessControl.CommonObjectSecurity.ModifyAudit(System.Security.AccessControl.AccessControlModification, System.Security.AccessControl.AuditRule, ByRef System.Boolean)
  name.vb: ModifyAudit(AccessControlModification, AuditRule, ByRef Boolean)
- uid: System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRule(System.Security.AccessControl.AccessRule)
  commentId: M:System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRule(System.Security.AccessControl.AccessRule)
  id: RemoveAccessRule(System.Security.AccessControl.AccessRule)
  parent: System.Security.AccessControl.CommonObjectSecurity
  langs:
  - csharp
  - vb
  name: RemoveAccessRule(AccessRule)
  fullName: System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRule(System.Security.AccessControl.AccessRule)
  type: Method
  source:
    remote:
      path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: RemoveAccessRule
    path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs
    startLine: 170
  assemblies:
  - System.Security.AccessControl
  namespace: System.Security.AccessControl
  summary: Removes access rules that contain the same security identifier and access mask as the specified access rule from the Discretionary Access Control List (DACL) associated with this <xref href="System.Security.AccessControl.CommonObjectSecurity" data-throw-if-not-resolved="false"></xref> object.
  syntax:
    content: protected bool RemoveAccessRule(AccessRule rule)
    content.vb: Protected Function RemoveAccessRule(rule As AccessRule) As Boolean
    parameters:
    - id: rule
      type: System.Security.AccessControl.AccessRule
      description: The access rule to remove.
    return:
      type: System.Boolean
      description: true if the access rule was successfully removed; otherwise, false.
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRuleAll(System.Security.AccessControl.AccessRule)
  commentId: M:System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRuleAll(System.Security.AccessControl.AccessRule)
  id: RemoveAccessRuleAll(System.Security.AccessControl.AccessRule)
  parent: System.Security.AccessControl.CommonObjectSecurity
  langs:
  - csharp
  - vb
  name: RemoveAccessRuleAll(AccessRule)
  fullName: System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRuleAll(System.Security.AccessControl.AccessRule)
  type: Method
  source:
    remote:
      path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: RemoveAccessRuleAll
    path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs
    startLine: 171
  assemblies:
  - System.Security.AccessControl
  namespace: System.Security.AccessControl
  summary: Removes all access rules that have the same security identifier as the specified access rule from the Discretionary Access Control List (DACL) associated with this <xref href="System.Security.AccessControl.CommonObjectSecurity" data-throw-if-not-resolved="false"></xref> object.
  syntax:
    content: protected void RemoveAccessRuleAll(AccessRule rule)
    content.vb: Protected Sub RemoveAccessRuleAll(rule As AccessRule)
    parameters:
    - id: rule
      type: System.Security.AccessControl.AccessRule
      description: The access rule to remove.
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRuleSpecific(System.Security.AccessControl.AccessRule)
  commentId: M:System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRuleSpecific(System.Security.AccessControl.AccessRule)
  id: RemoveAccessRuleSpecific(System.Security.AccessControl.AccessRule)
  parent: System.Security.AccessControl.CommonObjectSecurity
  langs:
  - csharp
  - vb
  name: RemoveAccessRuleSpecific(AccessRule)
  fullName: System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRuleSpecific(System.Security.AccessControl.AccessRule)
  type: Method
  source:
    remote:
      path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: RemoveAccessRuleSpecific
    path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs
    startLine: 172
  assemblies:
  - System.Security.AccessControl
  namespace: System.Security.AccessControl
  summary: Removes all access rules that exactly match the specified access rule from the Discretionary Access Control List (DACL) associated with this <xref href="System.Security.AccessControl.CommonObjectSecurity" data-throw-if-not-resolved="false"></xref> object.
  syntax:
    content: protected void RemoveAccessRuleSpecific(AccessRule rule)
    content.vb: Protected Sub RemoveAccessRuleSpecific(rule As AccessRule)
    parameters:
    - id: rule
      type: System.Security.AccessControl.AccessRule
      description: The access rule to remove.
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRule(System.Security.AccessControl.AuditRule)
  commentId: M:System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRule(System.Security.AccessControl.AuditRule)
  id: RemoveAuditRule(System.Security.AccessControl.AuditRule)
  parent: System.Security.AccessControl.CommonObjectSecurity
  langs:
  - csharp
  - vb
  name: RemoveAuditRule(AuditRule)
  fullName: System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRule(System.Security.AccessControl.AuditRule)
  type: Method
  source:
    remote:
      path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: RemoveAuditRule
    path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs
    startLine: 173
  assemblies:
  - System.Security.AccessControl
  namespace: System.Security.AccessControl
  summary: Removes audit rules that contain the same security identifier and access mask as the specified audit rule from the System Access Control List (SACL) associated with this <xref href="System.Security.AccessControl.CommonObjectSecurity" data-throw-if-not-resolved="false"></xref> object.
  syntax:
    content: protected bool RemoveAuditRule(AuditRule rule)
    content.vb: Protected Function RemoveAuditRule(rule As AuditRule) As Boolean
    parameters:
    - id: rule
      type: System.Security.AccessControl.AuditRule
      description: The audit rule to remove.
    return:
      type: System.Boolean
      description: true if the audit rule was successfully removed; otherwise, false.
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRuleAll(System.Security.AccessControl.AuditRule)
  commentId: M:System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRuleAll(System.Security.AccessControl.AuditRule)
  id: RemoveAuditRuleAll(System.Security.AccessControl.AuditRule)
  parent: System.Security.AccessControl.CommonObjectSecurity
  langs:
  - csharp
  - vb
  name: RemoveAuditRuleAll(AuditRule)
  fullName: System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRuleAll(System.Security.AccessControl.AuditRule)
  type: Method
  source:
    remote:
      path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: RemoveAuditRuleAll
    path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs
    startLine: 174
  assemblies:
  - System.Security.AccessControl
  namespace: System.Security.AccessControl
  summary: Removes all audit rules that have the same security identifier as the specified audit rule from the System Access Control List (SACL) associated with this <xref href="System.Security.AccessControl.CommonObjectSecurity" data-throw-if-not-resolved="false"></xref> object.
  syntax:
    content: protected void RemoveAuditRuleAll(AuditRule rule)
    content.vb: Protected Sub RemoveAuditRuleAll(rule As AuditRule)
    parameters:
    - id: rule
      type: System.Security.AccessControl.AuditRule
      description: The audit rule to remove.
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRuleSpecific(System.Security.AccessControl.AuditRule)
  commentId: M:System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRuleSpecific(System.Security.AccessControl.AuditRule)
  id: RemoveAuditRuleSpecific(System.Security.AccessControl.AuditRule)
  parent: System.Security.AccessControl.CommonObjectSecurity
  langs:
  - csharp
  - vb
  name: RemoveAuditRuleSpecific(AuditRule)
  fullName: System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRuleSpecific(System.Security.AccessControl.AuditRule)
  type: Method
  source:
    remote:
      path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: RemoveAuditRuleSpecific
    path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs
    startLine: 175
  assemblies:
  - System.Security.AccessControl
  namespace: System.Security.AccessControl
  summary: Removes all audit rules that exactly match the specified audit rule from the System Access Control List (SACL) associated with this <xref href="System.Security.AccessControl.CommonObjectSecurity" data-throw-if-not-resolved="false"></xref> object.
  syntax:
    content: protected void RemoveAuditRuleSpecific(AuditRule rule)
    content.vb: Protected Sub RemoveAuditRuleSpecific(rule As AuditRule)
    parameters:
    - id: rule
      type: System.Security.AccessControl.AuditRule
      description: The audit rule to remove.
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: System.Security.AccessControl.CommonObjectSecurity.ResetAccessRule(System.Security.AccessControl.AccessRule)
  commentId: M:System.Security.AccessControl.CommonObjectSecurity.ResetAccessRule(System.Security.AccessControl.AccessRule)
  id: ResetAccessRule(System.Security.AccessControl.AccessRule)
  parent: System.Security.AccessControl.CommonObjectSecurity
  langs:
  - csharp
  - vb
  name: ResetAccessRule(AccessRule)
  fullName: System.Security.AccessControl.CommonObjectSecurity.ResetAccessRule(System.Security.AccessControl.AccessRule)
  type: Method
  source:
    remote:
      path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ResetAccessRule
    path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs
    startLine: 176
  assemblies:
  - System.Security.AccessControl
  namespace: System.Security.AccessControl
  summary: Removes all access rules in the Discretionary Access Control List (DACL) associated with this <xref href="System.Security.AccessControl.CommonObjectSecurity" data-throw-if-not-resolved="false"></xref> object and then adds the specified access rule.
  syntax:
    content: protected void ResetAccessRule(AccessRule rule)
    content.vb: Protected Sub ResetAccessRule(rule As AccessRule)
    parameters:
    - id: rule
      type: System.Security.AccessControl.AccessRule
      description: The access rule to reset.
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: System.Security.AccessControl.CommonObjectSecurity.SetAccessRule(System.Security.AccessControl.AccessRule)
  commentId: M:System.Security.AccessControl.CommonObjectSecurity.SetAccessRule(System.Security.AccessControl.AccessRule)
  id: SetAccessRule(System.Security.AccessControl.AccessRule)
  parent: System.Security.AccessControl.CommonObjectSecurity
  langs:
  - csharp
  - vb
  name: SetAccessRule(AccessRule)
  fullName: System.Security.AccessControl.CommonObjectSecurity.SetAccessRule(System.Security.AccessControl.AccessRule)
  type: Method
  source:
    remote:
      path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: SetAccessRule
    path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs
    startLine: 177
  assemblies:
  - System.Security.AccessControl
  namespace: System.Security.AccessControl
  summary: Removes all access rules that contain the same security identifier and qualifier as the specified access rule in the Discretionary Access Control List (DACL) associated with this <xref href="System.Security.AccessControl.CommonObjectSecurity" data-throw-if-not-resolved="false"></xref> object and then adds the specified access rule.
  syntax:
    content: protected void SetAccessRule(AccessRule rule)
    content.vb: Protected Sub SetAccessRule(rule As AccessRule)
    parameters:
    - id: rule
      type: System.Security.AccessControl.AccessRule
      description: The access rule to set.
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: System.Security.AccessControl.CommonObjectSecurity.SetAuditRule(System.Security.AccessControl.AuditRule)
  commentId: M:System.Security.AccessControl.CommonObjectSecurity.SetAuditRule(System.Security.AccessControl.AuditRule)
  id: SetAuditRule(System.Security.AccessControl.AuditRule)
  parent: System.Security.AccessControl.CommonObjectSecurity
  langs:
  - csharp
  - vb
  name: SetAuditRule(AuditRule)
  fullName: System.Security.AccessControl.CommonObjectSecurity.SetAuditRule(System.Security.AccessControl.AuditRule)
  type: Method
  source:
    remote:
      path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: SetAuditRule
    path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs
    startLine: 178
  assemblies:
  - System.Security.AccessControl
  namespace: System.Security.AccessControl
  summary: Removes all audit rules that contain the same security identifier and qualifier as the specified audit rule in the System Access Control List (SACL) associated with this <xref href="System.Security.AccessControl.CommonObjectSecurity" data-throw-if-not-resolved="false"></xref> object and then adds the specified audit rule.
  syntax:
    content: protected void SetAuditRule(AuditRule rule)
    content.vb: Protected Sub SetAuditRule(rule As AuditRule)
    parameters:
    - id: rule
      type: System.Security.AccessControl.AuditRule
      description: The audit rule to set.
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
references:
- uid: System.Security.AccessControl
  isExternal: false
  name: System.Security.AccessControl
  fullName: System.Security.AccessControl
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System.Security.AccessControl.ObjectSecurity
  parent: System.Security.AccessControl
  isExternal: false
  name: ObjectSecurity
  fullName: System.Security.AccessControl.ObjectSecurity
- uid: System.Security.AccessControl.ObjectSecurity.AccessRightType
  parent: System.Security.AccessControl.ObjectSecurity
  isExternal: false
  name: AccessRightType
  fullName: System.Security.AccessControl.ObjectSecurity.AccessRightType
- uid: System.Security.AccessControl.ObjectSecurity.AccessRulesModified
  parent: System.Security.AccessControl.ObjectSecurity
  isExternal: false
  name: AccessRulesModified
  fullName: System.Security.AccessControl.ObjectSecurity.AccessRulesModified
- uid: System.Security.AccessControl.ObjectSecurity.AccessRuleType
  parent: System.Security.AccessControl.ObjectSecurity
  isExternal: false
  name: AccessRuleType
  fullName: System.Security.AccessControl.ObjectSecurity.AccessRuleType
- uid: System.Security.AccessControl.ObjectSecurity.AreAccessRulesCanonical
  parent: System.Security.AccessControl.ObjectSecurity
  isExternal: false
  name: AreAccessRulesCanonical
  fullName: System.Security.AccessControl.ObjectSecurity.AreAccessRulesCanonical
- uid: System.Security.AccessControl.ObjectSecurity.AreAccessRulesProtected
  parent: System.Security.AccessControl.ObjectSecurity
  isExternal: false
  name: AreAccessRulesProtected
  fullName: System.Security.AccessControl.ObjectSecurity.AreAccessRulesProtected
- uid: System.Security.AccessControl.ObjectSecurity.AreAuditRulesCanonical
  parent: System.Security.AccessControl.ObjectSecurity
  isExternal: false
  name: AreAuditRulesCanonical
  fullName: System.Security.AccessControl.ObjectSecurity.AreAuditRulesCanonical
- uid: System.Security.AccessControl.ObjectSecurity.AreAuditRulesProtected
  parent: System.Security.AccessControl.ObjectSecurity
  isExternal: false
  name: AreAuditRulesProtected
  fullName: System.Security.AccessControl.ObjectSecurity.AreAuditRulesProtected
- uid: System.Security.AccessControl.ObjectSecurity.AuditRulesModified
  parent: System.Security.AccessControl.ObjectSecurity
  isExternal: false
  name: AuditRulesModified
  fullName: System.Security.AccessControl.ObjectSecurity.AuditRulesModified
- uid: System.Security.AccessControl.ObjectSecurity.AuditRuleType
  parent: System.Security.AccessControl.ObjectSecurity
  isExternal: false
  name: AuditRuleType
  fullName: System.Security.AccessControl.ObjectSecurity.AuditRuleType
- uid: System.Security.AccessControl.ObjectSecurity.GroupModified
  parent: System.Security.AccessControl.ObjectSecurity
  isExternal: false
  name: GroupModified
  fullName: System.Security.AccessControl.ObjectSecurity.GroupModified
- uid: System.Security.AccessControl.ObjectSecurity.IsContainer
  parent: System.Security.AccessControl.ObjectSecurity
  isExternal: false
  name: IsContainer
  fullName: System.Security.AccessControl.ObjectSecurity.IsContainer
- uid: System.Security.AccessControl.ObjectSecurity.IsDS
  parent: System.Security.AccessControl.ObjectSecurity
  isExternal: false
  name: IsDS
  fullName: System.Security.AccessControl.ObjectSecurity.IsDS
- uid: System.Security.AccessControl.ObjectSecurity.OwnerModified
  parent: System.Security.AccessControl.ObjectSecurity
  isExternal: false
  name: OwnerModified
  fullName: System.Security.AccessControl.ObjectSecurity.OwnerModified
- uid: System.Security.AccessControl.ObjectSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)
  parent: System.Security.AccessControl.ObjectSecurity
  isExternal: true
  name: AccessRuleFactory(Principal.IdentityReference, Int32, Boolean, InheritanceFlags, PropagationFlags, AccessControlType)
  fullName: System.Security.AccessControl.ObjectSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference, System.Int32, System.Boolean, System.Security.AccessControl.InheritanceFlags, System.Security.AccessControl.PropagationFlags, System.Security.AccessControl.AccessControlType)
  spec.csharp:
  - uid: System.Security.AccessControl.ObjectSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)
    name: AccessRuleFactory
    fullName: System.Security.AccessControl.ObjectSecurity.AccessRuleFactory
  - name: (
    fullName: (
  - uid: System.Security.Principal.IdentityReference
    name: Principal.IdentityReference
    fullName: System.Security.Principal.IdentityReference
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Security.AccessControl.InheritanceFlags
    name: InheritanceFlags
    fullName: System.Security.AccessControl.InheritanceFlags
  - name: ', '
    fullName: ', '
  - uid: System.Security.AccessControl.PropagationFlags
    name: PropagationFlags
    fullName: System.Security.AccessControl.PropagationFlags
  - name: ', '
    fullName: ', '
  - uid: System.Security.AccessControl.AccessControlType
    name: AccessControlType
    fullName: System.Security.AccessControl.AccessControlType
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Security.AccessControl.ObjectSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)
    name: AccessRuleFactory
    fullName: System.Security.AccessControl.ObjectSecurity.AccessRuleFactory
  - name: (
    fullName: (
  - uid: System.Security.Principal.IdentityReference
    name: Principal.IdentityReference
    fullName: System.Security.Principal.IdentityReference
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Security.AccessControl.InheritanceFlags
    name: InheritanceFlags
    fullName: System.Security.AccessControl.InheritanceFlags
  - name: ', '
    fullName: ', '
  - uid: System.Security.AccessControl.PropagationFlags
    name: PropagationFlags
    fullName: System.Security.AccessControl.PropagationFlags
  - name: ', '
    fullName: ', '
  - uid: System.Security.AccessControl.AccessControlType
    name: AccessControlType
    fullName: System.Security.AccessControl.AccessControlType
  - name: )
    fullName: )
- uid: System.Security.AccessControl.ObjectSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)
  parent: System.Security.AccessControl.ObjectSecurity
  isExternal: true
  name: AuditRuleFactory(Principal.IdentityReference, Int32, Boolean, InheritanceFlags, PropagationFlags, AuditFlags)
  fullName: System.Security.AccessControl.ObjectSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference, System.Int32, System.Boolean, System.Security.AccessControl.InheritanceFlags, System.Security.AccessControl.PropagationFlags, System.Security.AccessControl.AuditFlags)
  spec.csharp:
  - uid: System.Security.AccessControl.ObjectSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)
    name: AuditRuleFactory
    fullName: System.Security.AccessControl.ObjectSecurity.AuditRuleFactory
  - name: (
    fullName: (
  - uid: System.Security.Principal.IdentityReference
    name: Principal.IdentityReference
    fullName: System.Security.Principal.IdentityReference
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Security.AccessControl.InheritanceFlags
    name: InheritanceFlags
    fullName: System.Security.AccessControl.InheritanceFlags
  - name: ', '
    fullName: ', '
  - uid: System.Security.AccessControl.PropagationFlags
    name: PropagationFlags
    fullName: System.Security.AccessControl.PropagationFlags
  - name: ', '
    fullName: ', '
  - uid: System.Security.AccessControl.AuditFlags
    name: AuditFlags
    fullName: System.Security.AccessControl.AuditFlags
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Security.AccessControl.ObjectSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)
    name: AuditRuleFactory
    fullName: System.Security.AccessControl.ObjectSecurity.AuditRuleFactory
  - name: (
    fullName: (
  - uid: System.Security.Principal.IdentityReference
    name: Principal.IdentityReference
    fullName: System.Security.Principal.IdentityReference
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Security.AccessControl.InheritanceFlags
    name: InheritanceFlags
    fullName: System.Security.AccessControl.InheritanceFlags
  - name: ', '
    fullName: ', '
  - uid: System.Security.AccessControl.PropagationFlags
    name: PropagationFlags
    fullName: System.Security.AccessControl.PropagationFlags
  - name: ', '
    fullName: ', '
  - uid: System.Security.AccessControl.AuditFlags
    name: AuditFlags
    fullName: System.Security.AccessControl.AuditFlags
  - name: )
    fullName: )
- uid: System.Security.AccessControl.ObjectSecurity.GetGroup(System.Type)
  parent: System.Security.AccessControl.ObjectSecurity
  isExternal: true
  name: GetGroup(Type)
  fullName: System.Security.AccessControl.ObjectSecurity.GetGroup(System.Type)
  spec.csharp:
  - uid: System.Security.AccessControl.ObjectSecurity.GetGroup(System.Type)
    name: GetGroup
    fullName: System.Security.AccessControl.ObjectSecurity.GetGroup
  - name: (
    fullName: (
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Security.AccessControl.ObjectSecurity.GetGroup(System.Type)
    name: GetGroup
    fullName: System.Security.AccessControl.ObjectSecurity.GetGroup
  - name: (
    fullName: (
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: )
    fullName: )
- uid: System.Security.AccessControl.ObjectSecurity.GetOwner(System.Type)
  parent: System.Security.AccessControl.ObjectSecurity
  isExternal: true
  name: GetOwner(Type)
  fullName: System.Security.AccessControl.ObjectSecurity.GetOwner(System.Type)
  spec.csharp:
  - uid: System.Security.AccessControl.ObjectSecurity.GetOwner(System.Type)
    name: GetOwner
    fullName: System.Security.AccessControl.ObjectSecurity.GetOwner
  - name: (
    fullName: (
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Security.AccessControl.ObjectSecurity.GetOwner(System.Type)
    name: GetOwner
    fullName: System.Security.AccessControl.ObjectSecurity.GetOwner
  - name: (
    fullName: (
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: )
    fullName: )
- uid: System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorBinaryForm
  parent: System.Security.AccessControl.ObjectSecurity
  isExternal: false
  name: GetSecurityDescriptorBinaryForm()
  fullName: System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorBinaryForm()
  spec.csharp:
  - uid: System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorBinaryForm
    name: GetSecurityDescriptorBinaryForm
    fullName: System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorBinaryForm
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorBinaryForm
    name: GetSecurityDescriptorBinaryForm
    fullName: System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorBinaryForm
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorSddlForm(System.Security.AccessControl.AccessControlSections)
  parent: System.Security.AccessControl.ObjectSecurity
  isExternal: false
  name: GetSecurityDescriptorSddlForm(AccessControlSections)
  fullName: System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorSddlForm(System.Security.AccessControl.AccessControlSections)
  spec.csharp:
  - uid: System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorSddlForm(System.Security.AccessControl.AccessControlSections)
    name: GetSecurityDescriptorSddlForm
    fullName: System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorSddlForm
  - name: (
    fullName: (
  - uid: System.Security.AccessControl.AccessControlSections
    name: AccessControlSections
    fullName: System.Security.AccessControl.AccessControlSections
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorSddlForm(System.Security.AccessControl.AccessControlSections)
    name: GetSecurityDescriptorSddlForm
    fullName: System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorSddlForm
  - name: (
    fullName: (
  - uid: System.Security.AccessControl.AccessControlSections
    name: AccessControlSections
    fullName: System.Security.AccessControl.AccessControlSections
  - name: )
    fullName: )
- uid: System.Security.AccessControl.ObjectSecurity.IsSddlConversionSupported
  parent: System.Security.AccessControl.ObjectSecurity
  isExternal: false
  name: IsSddlConversionSupported()
  fullName: System.Security.AccessControl.ObjectSecurity.IsSddlConversionSupported()
  spec.csharp:
  - uid: System.Security.AccessControl.ObjectSecurity.IsSddlConversionSupported
    name: IsSddlConversionSupported
    fullName: System.Security.AccessControl.ObjectSecurity.IsSddlConversionSupported
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Security.AccessControl.ObjectSecurity.IsSddlConversionSupported
    name: IsSddlConversionSupported
    fullName: System.Security.AccessControl.ObjectSecurity.IsSddlConversionSupported
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Security.AccessControl.ObjectSecurity.ModifyAccessRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)
  parent: System.Security.AccessControl.ObjectSecurity
  isExternal: true
  name: ModifyAccessRule(AccessControlModification, AccessRule, Boolean)
  fullName: System.Security.AccessControl.ObjectSecurity.ModifyAccessRule(System.Security.AccessControl.AccessControlModification, System.Security.AccessControl.AccessRule, System.Boolean)
  spec.csharp:
  - uid: System.Security.AccessControl.ObjectSecurity.ModifyAccessRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)
    name: ModifyAccessRule
    fullName: System.Security.AccessControl.ObjectSecurity.ModifyAccessRule
  - name: (
    fullName: (
  - uid: System.Security.AccessControl.AccessControlModification
    name: AccessControlModification
    fullName: System.Security.AccessControl.AccessControlModification
  - name: ', '
    fullName: ', '
  - uid: System.Security.AccessControl.AccessRule
    name: AccessRule
    fullName: System.Security.AccessControl.AccessRule
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Security.AccessControl.ObjectSecurity.ModifyAccessRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)
    name: ModifyAccessRule
    fullName: System.Security.AccessControl.ObjectSecurity.ModifyAccessRule
  - name: (
    fullName: (
  - uid: System.Security.AccessControl.AccessControlModification
    name: AccessControlModification
    fullName: System.Security.AccessControl.AccessControlModification
  - name: ', '
    fullName: ', '
  - uid: System.Security.AccessControl.AccessRule
    name: AccessRule
    fullName: System.Security.AccessControl.AccessRule
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
- uid: System.Security.AccessControl.ObjectSecurity.ModifyAuditRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)
  parent: System.Security.AccessControl.ObjectSecurity
  isExternal: true
  name: ModifyAuditRule(AccessControlModification, AuditRule, Boolean)
  fullName: System.Security.AccessControl.ObjectSecurity.ModifyAuditRule(System.Security.AccessControl.AccessControlModification, System.Security.AccessControl.AuditRule, System.Boolean)
  spec.csharp:
  - uid: System.Security.AccessControl.ObjectSecurity.ModifyAuditRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)
    name: ModifyAuditRule
    fullName: System.Security.AccessControl.ObjectSecurity.ModifyAuditRule
  - name: (
    fullName: (
  - uid: System.Security.AccessControl.AccessControlModification
    name: AccessControlModification
    fullName: System.Security.AccessControl.AccessControlModification
  - name: ', '
    fullName: ', '
  - uid: System.Security.AccessControl.AuditRule
    name: AuditRule
    fullName: System.Security.AccessControl.AuditRule
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Security.AccessControl.ObjectSecurity.ModifyAuditRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)
    name: ModifyAuditRule
    fullName: System.Security.AccessControl.ObjectSecurity.ModifyAuditRule
  - name: (
    fullName: (
  - uid: System.Security.AccessControl.AccessControlModification
    name: AccessControlModification
    fullName: System.Security.AccessControl.AccessControlModification
  - name: ', '
    fullName: ', '
  - uid: System.Security.AccessControl.AuditRule
    name: AuditRule
    fullName: System.Security.AccessControl.AuditRule
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
- uid: System.Security.AccessControl.ObjectSecurity.Persist(System.Boolean,System.String,System.Security.AccessControl.AccessControlSections)
  parent: System.Security.AccessControl.ObjectSecurity
  isExternal: true
  name: Persist(Boolean, String, AccessControlSections)
  fullName: System.Security.AccessControl.ObjectSecurity.Persist(System.Boolean, System.String, System.Security.AccessControl.AccessControlSections)
  spec.csharp:
  - uid: System.Security.AccessControl.ObjectSecurity.Persist(System.Boolean,System.String,System.Security.AccessControl.AccessControlSections)
    name: Persist
    fullName: System.Security.AccessControl.ObjectSecurity.Persist
  - name: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Security.AccessControl.AccessControlSections
    name: AccessControlSections
    fullName: System.Security.AccessControl.AccessControlSections
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Security.AccessControl.ObjectSecurity.Persist(System.Boolean,System.String,System.Security.AccessControl.AccessControlSections)
    name: Persist
    fullName: System.Security.AccessControl.ObjectSecurity.Persist
  - name: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Security.AccessControl.AccessControlSections
    name: AccessControlSections
    fullName: System.Security.AccessControl.AccessControlSections
  - name: )
    fullName: )
- uid: System.Security.AccessControl.ObjectSecurity.Persist(System.Runtime.InteropServices.SafeHandle,System.Security.AccessControl.AccessControlSections)
  parent: System.Security.AccessControl.ObjectSecurity
  isExternal: true
  name: Persist(Runtime.InteropServices.SafeHandle, AccessControlSections)
  fullName: System.Security.AccessControl.ObjectSecurity.Persist(System.Runtime.InteropServices.SafeHandle, System.Security.AccessControl.AccessControlSections)
  spec.csharp:
  - uid: System.Security.AccessControl.ObjectSecurity.Persist(System.Runtime.InteropServices.SafeHandle,System.Security.AccessControl.AccessControlSections)
    name: Persist
    fullName: System.Security.AccessControl.ObjectSecurity.Persist
  - name: (
    fullName: (
  - uid: System.Runtime.InteropServices.SafeHandle
    name: Runtime.InteropServices.SafeHandle
    fullName: System.Runtime.InteropServices.SafeHandle
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Security.AccessControl.AccessControlSections
    name: AccessControlSections
    fullName: System.Security.AccessControl.AccessControlSections
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Security.AccessControl.ObjectSecurity.Persist(System.Runtime.InteropServices.SafeHandle,System.Security.AccessControl.AccessControlSections)
    name: Persist
    fullName: System.Security.AccessControl.ObjectSecurity.Persist
  - name: (
    fullName: (
  - uid: System.Runtime.InteropServices.SafeHandle
    name: Runtime.InteropServices.SafeHandle
    fullName: System.Runtime.InteropServices.SafeHandle
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Security.AccessControl.AccessControlSections
    name: AccessControlSections
    fullName: System.Security.AccessControl.AccessControlSections
  - name: )
    fullName: )
- uid: System.Security.AccessControl.ObjectSecurity.Persist(System.String,System.Security.AccessControl.AccessControlSections)
  parent: System.Security.AccessControl.ObjectSecurity
  isExternal: true
  name: Persist(String, AccessControlSections)
  fullName: System.Security.AccessControl.ObjectSecurity.Persist(System.String, System.Security.AccessControl.AccessControlSections)
  spec.csharp:
  - uid: System.Security.AccessControl.ObjectSecurity.Persist(System.String,System.Security.AccessControl.AccessControlSections)
    name: Persist
    fullName: System.Security.AccessControl.ObjectSecurity.Persist
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Security.AccessControl.AccessControlSections
    name: AccessControlSections
    fullName: System.Security.AccessControl.AccessControlSections
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Security.AccessControl.ObjectSecurity.Persist(System.String,System.Security.AccessControl.AccessControlSections)
    name: Persist
    fullName: System.Security.AccessControl.ObjectSecurity.Persist
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Security.AccessControl.AccessControlSections
    name: AccessControlSections
    fullName: System.Security.AccessControl.AccessControlSections
  - name: )
    fullName: )
- uid: System.Security.AccessControl.ObjectSecurity.PurgeAccessRules(System.Security.Principal.IdentityReference)
  parent: System.Security.AccessControl.ObjectSecurity
  isExternal: true
  name: PurgeAccessRules(Principal.IdentityReference)
  fullName: System.Security.AccessControl.ObjectSecurity.PurgeAccessRules(System.Security.Principal.IdentityReference)
  spec.csharp:
  - uid: System.Security.AccessControl.ObjectSecurity.PurgeAccessRules(System.Security.Principal.IdentityReference)
    name: PurgeAccessRules
    fullName: System.Security.AccessControl.ObjectSecurity.PurgeAccessRules
  - name: (
    fullName: (
  - uid: System.Security.Principal.IdentityReference
    name: Principal.IdentityReference
    fullName: System.Security.Principal.IdentityReference
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Security.AccessControl.ObjectSecurity.PurgeAccessRules(System.Security.Principal.IdentityReference)
    name: PurgeAccessRules
    fullName: System.Security.AccessControl.ObjectSecurity.PurgeAccessRules
  - name: (
    fullName: (
  - uid: System.Security.Principal.IdentityReference
    name: Principal.IdentityReference
    fullName: System.Security.Principal.IdentityReference
    isExternal: true
  - name: )
    fullName: )
- uid: System.Security.AccessControl.ObjectSecurity.PurgeAuditRules(System.Security.Principal.IdentityReference)
  parent: System.Security.AccessControl.ObjectSecurity
  isExternal: true
  name: PurgeAuditRules(Principal.IdentityReference)
  fullName: System.Security.AccessControl.ObjectSecurity.PurgeAuditRules(System.Security.Principal.IdentityReference)
  spec.csharp:
  - uid: System.Security.AccessControl.ObjectSecurity.PurgeAuditRules(System.Security.Principal.IdentityReference)
    name: PurgeAuditRules
    fullName: System.Security.AccessControl.ObjectSecurity.PurgeAuditRules
  - name: (
    fullName: (
  - uid: System.Security.Principal.IdentityReference
    name: Principal.IdentityReference
    fullName: System.Security.Principal.IdentityReference
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Security.AccessControl.ObjectSecurity.PurgeAuditRules(System.Security.Principal.IdentityReference)
    name: PurgeAuditRules
    fullName: System.Security.AccessControl.ObjectSecurity.PurgeAuditRules
  - name: (
    fullName: (
  - uid: System.Security.Principal.IdentityReference
    name: Principal.IdentityReference
    fullName: System.Security.Principal.IdentityReference
    isExternal: true
  - name: )
    fullName: )
- uid: System.Security.AccessControl.ObjectSecurity.ReadLock
  parent: System.Security.AccessControl.ObjectSecurity
  isExternal: false
  name: ReadLock()
  fullName: System.Security.AccessControl.ObjectSecurity.ReadLock()
  spec.csharp:
  - uid: System.Security.AccessControl.ObjectSecurity.ReadLock
    name: ReadLock
    fullName: System.Security.AccessControl.ObjectSecurity.ReadLock
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Security.AccessControl.ObjectSecurity.ReadLock
    name: ReadLock
    fullName: System.Security.AccessControl.ObjectSecurity.ReadLock
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Security.AccessControl.ObjectSecurity.ReadUnlock
  parent: System.Security.AccessControl.ObjectSecurity
  isExternal: false
  name: ReadUnlock()
  fullName: System.Security.AccessControl.ObjectSecurity.ReadUnlock()
  spec.csharp:
  - uid: System.Security.AccessControl.ObjectSecurity.ReadUnlock
    name: ReadUnlock
    fullName: System.Security.AccessControl.ObjectSecurity.ReadUnlock
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Security.AccessControl.ObjectSecurity.ReadUnlock
    name: ReadUnlock
    fullName: System.Security.AccessControl.ObjectSecurity.ReadUnlock
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Security.AccessControl.ObjectSecurity.SetAccessRuleProtection(System.Boolean,System.Boolean)
  parent: System.Security.AccessControl.ObjectSecurity
  isExternal: true
  name: SetAccessRuleProtection(Boolean, Boolean)
  fullName: System.Security.AccessControl.ObjectSecurity.SetAccessRuleProtection(System.Boolean, System.Boolean)
  spec.csharp:
  - uid: System.Security.AccessControl.ObjectSecurity.SetAccessRuleProtection(System.Boolean,System.Boolean)
    name: SetAccessRuleProtection
    fullName: System.Security.AccessControl.ObjectSecurity.SetAccessRuleProtection
  - name: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Security.AccessControl.ObjectSecurity.SetAccessRuleProtection(System.Boolean,System.Boolean)
    name: SetAccessRuleProtection
    fullName: System.Security.AccessControl.ObjectSecurity.SetAccessRuleProtection
  - name: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
- uid: System.Security.AccessControl.ObjectSecurity.SetAuditRuleProtection(System.Boolean,System.Boolean)
  parent: System.Security.AccessControl.ObjectSecurity
  isExternal: true
  name: SetAuditRuleProtection(Boolean, Boolean)
  fullName: System.Security.AccessControl.ObjectSecurity.SetAuditRuleProtection(System.Boolean, System.Boolean)
  spec.csharp:
  - uid: System.Security.AccessControl.ObjectSecurity.SetAuditRuleProtection(System.Boolean,System.Boolean)
    name: SetAuditRuleProtection
    fullName: System.Security.AccessControl.ObjectSecurity.SetAuditRuleProtection
  - name: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Security.AccessControl.ObjectSecurity.SetAuditRuleProtection(System.Boolean,System.Boolean)
    name: SetAuditRuleProtection
    fullName: System.Security.AccessControl.ObjectSecurity.SetAuditRuleProtection
  - name: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
- uid: System.Security.AccessControl.ObjectSecurity.SetGroup(System.Security.Principal.IdentityReference)
  parent: System.Security.AccessControl.ObjectSecurity
  isExternal: true
  name: SetGroup(Principal.IdentityReference)
  fullName: System.Security.AccessControl.ObjectSecurity.SetGroup(System.Security.Principal.IdentityReference)
  spec.csharp:
  - uid: System.Security.AccessControl.ObjectSecurity.SetGroup(System.Security.Principal.IdentityReference)
    name: SetGroup
    fullName: System.Security.AccessControl.ObjectSecurity.SetGroup
  - name: (
    fullName: (
  - uid: System.Security.Principal.IdentityReference
    name: Principal.IdentityReference
    fullName: System.Security.Principal.IdentityReference
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Security.AccessControl.ObjectSecurity.SetGroup(System.Security.Principal.IdentityReference)
    name: SetGroup
    fullName: System.Security.AccessControl.ObjectSecurity.SetGroup
  - name: (
    fullName: (
  - uid: System.Security.Principal.IdentityReference
    name: Principal.IdentityReference
    fullName: System.Security.Principal.IdentityReference
    isExternal: true
  - name: )
    fullName: )
- uid: System.Security.AccessControl.ObjectSecurity.SetOwner(System.Security.Principal.IdentityReference)
  parent: System.Security.AccessControl.ObjectSecurity
  isExternal: true
  name: SetOwner(Principal.IdentityReference)
  fullName: System.Security.AccessControl.ObjectSecurity.SetOwner(System.Security.Principal.IdentityReference)
  spec.csharp:
  - uid: System.Security.AccessControl.ObjectSecurity.SetOwner(System.Security.Principal.IdentityReference)
    name: SetOwner
    fullName: System.Security.AccessControl.ObjectSecurity.SetOwner
  - name: (
    fullName: (
  - uid: System.Security.Principal.IdentityReference
    name: Principal.IdentityReference
    fullName: System.Security.Principal.IdentityReference
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Security.AccessControl.ObjectSecurity.SetOwner(System.Security.Principal.IdentityReference)
    name: SetOwner
    fullName: System.Security.AccessControl.ObjectSecurity.SetOwner
  - name: (
    fullName: (
  - uid: System.Security.Principal.IdentityReference
    name: Principal.IdentityReference
    fullName: System.Security.Principal.IdentityReference
    isExternal: true
  - name: )
    fullName: )
- uid: System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm(System.Byte[])
  parent: System.Security.AccessControl.ObjectSecurity
  isExternal: true
  name: SetSecurityDescriptorBinaryForm(Byte[])
  fullName: System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm(System.Byte[])
  fullname.vb: System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm(System.Byte())
  name.vb: SetSecurityDescriptorBinaryForm(Byte())
  spec.csharp:
  - uid: System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm(System.Byte[])
    name: SetSecurityDescriptorBinaryForm
    fullName: System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm
  - name: (
    fullName: (
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    fullName: '[]'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm(System.Byte[])
    name: SetSecurityDescriptorBinaryForm
    fullName: System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm
  - name: (
    fullName: (
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    fullName: ()
  - name: )
    fullName: )
- uid: System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm(System.Byte[],System.Security.AccessControl.AccessControlSections)
  parent: System.Security.AccessControl.ObjectSecurity
  isExternal: true
  name: SetSecurityDescriptorBinaryForm(Byte[], AccessControlSections)
  fullName: System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm(System.Byte[], System.Security.AccessControl.AccessControlSections)
  fullname.vb: System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm(System.Byte(), System.Security.AccessControl.AccessControlSections)
  name.vb: SetSecurityDescriptorBinaryForm(Byte(), AccessControlSections)
  spec.csharp:
  - uid: System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm(System.Byte[],System.Security.AccessControl.AccessControlSections)
    name: SetSecurityDescriptorBinaryForm
    fullName: System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm
  - name: (
    fullName: (
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    fullName: '[]'
  - name: ', '
    fullName: ', '
  - uid: System.Security.AccessControl.AccessControlSections
    name: AccessControlSections
    fullName: System.Security.AccessControl.AccessControlSections
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm(System.Byte[],System.Security.AccessControl.AccessControlSections)
    name: SetSecurityDescriptorBinaryForm
    fullName: System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm
  - name: (
    fullName: (
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    fullName: ()
  - name: ', '
    fullName: ', '
  - uid: System.Security.AccessControl.AccessControlSections
    name: AccessControlSections
    fullName: System.Security.AccessControl.AccessControlSections
  - name: )
    fullName: )
- uid: System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm(System.String)
  parent: System.Security.AccessControl.ObjectSecurity
  isExternal: true
  name: SetSecurityDescriptorSddlForm(String)
  fullName: System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm(System.String)
  spec.csharp:
  - uid: System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm(System.String)
    name: SetSecurityDescriptorSddlForm
    fullName: System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm(System.String)
    name: SetSecurityDescriptorSddlForm
    fullName: System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm(System.String,System.Security.AccessControl.AccessControlSections)
  parent: System.Security.AccessControl.ObjectSecurity
  isExternal: true
  name: SetSecurityDescriptorSddlForm(String, AccessControlSections)
  fullName: System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm(System.String, System.Security.AccessControl.AccessControlSections)
  spec.csharp:
  - uid: System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm(System.String,System.Security.AccessControl.AccessControlSections)
    name: SetSecurityDescriptorSddlForm
    fullName: System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Security.AccessControl.AccessControlSections
    name: AccessControlSections
    fullName: System.Security.AccessControl.AccessControlSections
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm(System.String,System.Security.AccessControl.AccessControlSections)
    name: SetSecurityDescriptorSddlForm
    fullName: System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Security.AccessControl.AccessControlSections
    name: AccessControlSections
    fullName: System.Security.AccessControl.AccessControlSections
  - name: )
    fullName: )
- uid: System.Security.AccessControl.ObjectSecurity.WriteLock
  parent: System.Security.AccessControl.ObjectSecurity
  isExternal: false
  name: WriteLock()
  fullName: System.Security.AccessControl.ObjectSecurity.WriteLock()
  spec.csharp:
  - uid: System.Security.AccessControl.ObjectSecurity.WriteLock
    name: WriteLock
    fullName: System.Security.AccessControl.ObjectSecurity.WriteLock
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Security.AccessControl.ObjectSecurity.WriteLock
    name: WriteLock
    fullName: System.Security.AccessControl.ObjectSecurity.WriteLock
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Security.AccessControl.ObjectSecurity.WriteUnlock
  parent: System.Security.AccessControl.ObjectSecurity
  isExternal: false
  name: WriteUnlock()
  fullName: System.Security.AccessControl.ObjectSecurity.WriteUnlock()
  spec.csharp:
  - uid: System.Security.AccessControl.ObjectSecurity.WriteUnlock
    name: WriteUnlock
    fullName: System.Security.AccessControl.ObjectSecurity.WriteUnlock
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Security.AccessControl.ObjectSecurity.WriteUnlock
    name: WriteUnlock
    fullName: System.Security.AccessControl.ObjectSecurity.WriteUnlock
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  fullName: System.Boolean
- uid: System.Security.AccessControl.AccessRule
  parent: System.Security.AccessControl
  isExternal: false
  name: AccessRule
  fullName: System.Security.AccessControl.AccessRule
- uid: System.Security.AccessControl.AuditRule
  parent: System.Security.AccessControl
  isExternal: false
  name: AuditRule
  fullName: System.Security.AccessControl.AuditRule
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  fullName: System.Type
- uid: System.Security.AccessControl.AuthorizationRuleCollection
  parent: System.Security.AccessControl
  isExternal: false
  name: AuthorizationRuleCollection
  fullName: System.Security.AccessControl.AuthorizationRuleCollection
- uid: System.Security.AccessControl.ObjectSecurity.ModifyAccess(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)
  parent: System.Security.AccessControl.ObjectSecurity
  isExternal: true
  name: ModifyAccess(AccessControlModification, AccessRule, Boolean)
  fullName: System.Security.AccessControl.ObjectSecurity.ModifyAccess(System.Security.AccessControl.AccessControlModification, System.Security.AccessControl.AccessRule, System.Boolean)
  spec.csharp:
  - uid: System.Security.AccessControl.ObjectSecurity.ModifyAccess(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)
    name: ModifyAccess
    fullName: System.Security.AccessControl.ObjectSecurity.ModifyAccess
  - name: (
    fullName: (
  - uid: System.Security.AccessControl.AccessControlModification
    name: AccessControlModification
    fullName: System.Security.AccessControl.AccessControlModification
  - name: ', '
    fullName: ', '
  - uid: System.Security.AccessControl.AccessRule
    name: AccessRule
    fullName: System.Security.AccessControl.AccessRule
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Security.AccessControl.ObjectSecurity.ModifyAccess(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)
    name: ModifyAccess
    fullName: System.Security.AccessControl.ObjectSecurity.ModifyAccess
  - name: (
    fullName: (
  - uid: System.Security.AccessControl.AccessControlModification
    name: AccessControlModification
    fullName: System.Security.AccessControl.AccessControlModification
  - name: ', '
    fullName: ', '
  - uid: System.Security.AccessControl.AccessRule
    name: AccessRule
    fullName: System.Security.AccessControl.AccessRule
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
- uid: System.Security.AccessControl.AccessControlModification
  parent: System.Security.AccessControl
  isExternal: false
  name: AccessControlModification
  fullName: System.Security.AccessControl.AccessControlModification
- uid: System.Security.AccessControl.ObjectSecurity.ModifyAudit(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)
  parent: System.Security.AccessControl.ObjectSecurity
  isExternal: true
  name: ModifyAudit(AccessControlModification, AuditRule, Boolean)
  fullName: System.Security.AccessControl.ObjectSecurity.ModifyAudit(System.Security.AccessControl.AccessControlModification, System.Security.AccessControl.AuditRule, System.Boolean)
  spec.csharp:
  - uid: System.Security.AccessControl.ObjectSecurity.ModifyAudit(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)
    name: ModifyAudit
    fullName: System.Security.AccessControl.ObjectSecurity.ModifyAudit
  - name: (
    fullName: (
  - uid: System.Security.AccessControl.AccessControlModification
    name: AccessControlModification
    fullName: System.Security.AccessControl.AccessControlModification
  - name: ', '
    fullName: ', '
  - uid: System.Security.AccessControl.AuditRule
    name: AuditRule
    fullName: System.Security.AccessControl.AuditRule
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Security.AccessControl.ObjectSecurity.ModifyAudit(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)
    name: ModifyAudit
    fullName: System.Security.AccessControl.ObjectSecurity.ModifyAudit
  - name: (
    fullName: (
  - uid: System.Security.AccessControl.AccessControlModification
    name: AccessControlModification
    fullName: System.Security.AccessControl.AccessControlModification
  - name: ', '
    fullName: ', '
  - uid: System.Security.AccessControl.AuditRule
    name: AuditRule
    fullName: System.Security.AccessControl.AuditRule
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
