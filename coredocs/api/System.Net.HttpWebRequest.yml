items:
- uid: System.Net.HttpWebRequest
  commentId: T:System.Net.HttpWebRequest
  id: HttpWebRequest
  parent: System.Net
  children:
  - System.Net.HttpWebRequest.Abort
  - System.Net.HttpWebRequest.Accept
  - System.Net.HttpWebRequest.AllowReadStreamBuffering
  - System.Net.HttpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)
  - System.Net.HttpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)
  - System.Net.HttpWebRequest.ContentType
  - System.Net.HttpWebRequest.ContinueTimeout
  - System.Net.HttpWebRequest.CookieContainer
  - System.Net.HttpWebRequest.Credentials
  - System.Net.HttpWebRequest.EndGetRequestStream(System.IAsyncResult)
  - System.Net.HttpWebRequest.EndGetResponse(System.IAsyncResult)
  - System.Net.HttpWebRequest.HaveResponse
  - System.Net.HttpWebRequest.Headers
  - System.Net.HttpWebRequest.Method
  - System.Net.HttpWebRequest.RequestUri
  - System.Net.HttpWebRequest.SupportsCookieContainer
  - System.Net.HttpWebRequest.UseDefaultCredentials
  langs:
  - csharp
  - vb
  name: HttpWebRequest
  fullName: System.Net.HttpWebRequest
  type: Class
  source:
    remote:
      path: src/System.Net.Requests/src/System/Net/HttpWebRequest.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: HttpWebRequest
    path: src/System.Net.Requests/src/System/Net/HttpWebRequest.cs
    startLine: 12
  assemblies:
  - System.Net.Requests
  namespace: System.Net
  summary: Provides an HTTP-specific implementation of the <xref href="System.Net.WebRequest" data-throw-if-not-resolved="false"></xref> class.
  syntax:
    content: 'public class HttpWebRequest : WebRequest'
    content.vb: >-
      Public Class HttpWebRequest
          Inherits WebRequest
  inheritance:
  - System.Object
  - System.Net.WebRequest
  inheritedMembers:
  - System.Net.WebRequest.DefaultWebProxy
  - System.Net.WebRequest.Proxy
  - System.Net.WebRequest.Create(System.String)
  - System.Net.WebRequest.Create(System.Uri)
  - System.Net.WebRequest.CreateHttp(System.String)
  - System.Net.WebRequest.CreateHttp(System.Uri)
  - System.Net.WebRequest.GetRequestStreamAsync
  - System.Net.WebRequest.GetResponseAsync
  - System.Net.WebRequest.RegisterPrefix(System.String,System.Net.IWebRequestCreate)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: System.Net.HttpWebRequest.Accept
  commentId: P:System.Net.HttpWebRequest.Accept
  id: Accept
  parent: System.Net.HttpWebRequest
  langs:
  - csharp
  - vb
  name: Accept
  fullName: System.Net.HttpWebRequest.Accept
  type: Property
  source:
    remote:
      path: src/System.Net.Requests/src/System/Net/HttpWebRequest.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Accept
    path: src/System.Net.Requests/src/System/Net/HttpWebRequest.cs
    startLine: 60
  assemblies:
  - System.Net.Requests
  namespace: System.Net
  summary: Gets or sets the value of the Accept HTTP header.
  syntax:
    content: public string Accept { get; set; }
    content.vb: Public Property Accept As String
    parameters: []
    return:
      type: System.String
      description: The value of the Accept HTTP header. The default value is null.
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Net.HttpWebRequest.AllowReadStreamBuffering
  commentId: P:System.Net.HttpWebRequest.AllowReadStreamBuffering
  id: AllowReadStreamBuffering
  parent: System.Net.HttpWebRequest
  langs:
  - csharp
  - vb
  name: AllowReadStreamBuffering
  fullName: System.Net.HttpWebRequest.AllowReadStreamBuffering
  type: Property
  source:
    remote:
      path: src/System.Net.Requests/src/System/Net/HttpWebRequest.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: AllowReadStreamBuffering
    path: src/System.Net.Requests/src/System/Net/HttpWebRequest.cs
    startLine: 72
  assemblies:
  - System.Net.Requests
  namespace: System.Net
  summary: Gets or sets a value that indicates whether to buffer the received from the Internet resource.
  syntax:
    content: public virtual bool AllowReadStreamBuffering { get; set; }
    content.vb: Public Overridable Property AllowReadStreamBuffering As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: true to buffer the received from the Internet resource; otherwise, false.true to enable buffering of the data received from the Internet resource; false to disable buffering. The default is true.
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Net.HttpWebRequest.ContentType
  commentId: P:System.Net.HttpWebRequest.ContentType
  id: ContentType
  parent: System.Net.HttpWebRequest
  langs:
  - csharp
  - vb
  name: ContentType
  fullName: System.Net.HttpWebRequest.ContentType
  type: Property
  source:
    remote:
      path: src/System.Net.Requests/src/System/Net/HttpWebRequest.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ContentType
    path: src/System.Net.Requests/src/System/Net/HttpWebRequest.cs
    startLine: 84
  assemblies:
  - System.Net.Requests
  namespace: System.Net
  summary: Gets or sets the value of the Content-type HTTP header.
  syntax:
    content: public override string ContentType { get; set; }
    content.vb: Public Overrides Property ContentType As String
    parameters: []
    return:
      type: System.String
      description: The value of the Content-type HTTP header. The default value is null.
  overridden: System.Net.WebRequest.ContentType
  modifiers.csharp:
  - public
  - override
  - get
  - set
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Net.HttpWebRequest.ContinueTimeout
  commentId: P:System.Net.HttpWebRequest.ContinueTimeout
  id: ContinueTimeout
  parent: System.Net.HttpWebRequest
  langs:
  - csharp
  - vb
  name: ContinueTimeout
  fullName: System.Net.HttpWebRequest.ContinueTimeout
  type: Property
  source:
    remote:
      path: src/System.Net.Requests/src/System/Net/HttpWebRequest.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ContinueTimeout
    path: src/System.Net.Requests/src/System/Net/HttpWebRequest.cs
    startLine: 96
  assemblies:
  - System.Net.Requests
  namespace: System.Net
  summary: 'Gets or sets a timeout, in milliseconds, to wait until the 100-Continue is received from the server. '
  syntax:
    content: public int ContinueTimeout { get; set; }
    content.vb: Public Property ContinueTimeout As Integer
    parameters: []
    return:
      type: System.Int32
      description: 'The timeout, in milliseconds, to wait until the 100-Continue is received. '
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Net.HttpWebRequest.CookieContainer
  commentId: P:System.Net.HttpWebRequest.CookieContainer
  id: CookieContainer
  parent: System.Net.HttpWebRequest
  langs:
  - csharp
  - vb
  name: CookieContainer
  fullName: System.Net.HttpWebRequest.CookieContainer
  type: Property
  source:
    remote:
      path: src/System.Net.Requests/src/System/Net/HttpWebRequest.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CookieContainer
    path: src/System.Net.Requests/src/System/Net/HttpWebRequest.cs
    startLine: 116
  assemblies:
  - System.Net.Requests
  namespace: System.Net
  summary: Gets or sets the cookies associated with the request.
  syntax:
    content: public virtual CookieContainer CookieContainer { get; set; }
    content.vb: Public Overridable Property CookieContainer As CookieContainer
    parameters: []
    return:
      type: System.Net.CookieContainer
      description: A <xref href="System.Net.CookieContainer" data-throw-if-not-resolved="false"></xref> that contains the cookies associated with this request.
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Net.HttpWebRequest.Credentials
  commentId: P:System.Net.HttpWebRequest.Credentials
  id: Credentials
  parent: System.Net.HttpWebRequest
  langs:
  - csharp
  - vb
  name: Credentials
  fullName: System.Net.HttpWebRequest.Credentials
  type: Property
  source:
    remote:
      path: src/System.Net.Requests/src/System/Net/HttpWebRequest.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Credentials
    path: src/System.Net.Requests/src/System/Net/HttpWebRequest.cs
    startLine: 128
  assemblies:
  - System.Net.Requests
  namespace: System.Net
  summary: Gets or sets authentication information for the request.
  syntax:
    content: public override ICredentials Credentials { get; set; }
    content.vb: Public Overrides Property Credentials As ICredentials
    parameters: []
    return:
      type: System.Net.ICredentials
      description: An <xref href="System.Net.ICredentials" data-throw-if-not-resolved="false"></xref> that contains the authentication credentials associated with the request. The default is null.
  overridden: System.Net.WebRequest.Credentials
  modifiers.csharp:
  - public
  - override
  - get
  - set
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Net.HttpWebRequest.HaveResponse
  commentId: P:System.Net.HttpWebRequest.HaveResponse
  id: HaveResponse
  parent: System.Net.HttpWebRequest
  langs:
  - csharp
  - vb
  name: HaveResponse
  fullName: System.Net.HttpWebRequest.HaveResponse
  type: Property
  source:
    remote:
      path: src/System.Net.Requests/src/System/Net/HttpWebRequest.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: HaveResponse
    path: src/System.Net.Requests/src/System/Net/HttpWebRequest.cs
    startLine: 140
  assemblies:
  - System.Net.Requests
  namespace: System.Net
  summary: Gets a value that indicates whether a response has been received from an Internet resource.
  syntax:
    content: public virtual bool HaveResponse { get; }
    content.vb: Public Overridable ReadOnly Property HaveResponse As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: true if a response has been received; otherwise, false.
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: System.Net.HttpWebRequest.Headers
  commentId: P:System.Net.HttpWebRequest.Headers
  id: Headers
  parent: System.Net.HttpWebRequest
  langs:
  - csharp
  - vb
  name: Headers
  fullName: System.Net.HttpWebRequest.Headers
  type: Property
  source:
    remote:
      path: src/System.Net.Requests/src/System/Net/HttpWebRequest.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Headers
    path: src/System.Net.Requests/src/System/Net/HttpWebRequest.cs
    startLine: 148
  assemblies:
  - System.Net.Requests
  namespace: System.Net
  summary: Specifies a collection of the name/value pairs that make up the HTTP headers.
  syntax:
    content: public override WebHeaderCollection Headers { get; set; }
    content.vb: Public Overrides Property Headers As WebHeaderCollection
    parameters: []
    return:
      type: System.Net.WebHeaderCollection
      description: A <xref href="System.Net.WebHeaderCollection" data-throw-if-not-resolved="false"></xref> that contains the name/value pairs that make up the headers for the HTTP request.
  overridden: System.Net.WebRequest.Headers
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: 'The request has been started by calling the <xref href="System.Net.HttpWebRequest.GetRequestStream" data-throw-if-not-resolved="false"></xref>, <xref href="System.Net.HttpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)" data-throw-if-not-resolved="false"></xref>, <xref href="System.Net.HttpWebRequest.GetResponse" data-throw-if-not-resolved="false"></xref>, or <xref href="System.Net.HttpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)" data-throw-if-not-resolved="false"></xref> method. '
  modifiers.csharp:
  - public
  - override
  - get
  - set
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Net.HttpWebRequest.Method
  commentId: P:System.Net.HttpWebRequest.Method
  id: Method
  parent: System.Net.HttpWebRequest
  langs:
  - csharp
  - vb
  name: Method
  fullName: System.Net.HttpWebRequest.Method
  type: Property
  source:
    remote:
      path: src/System.Net.Requests/src/System/Net/HttpWebRequest.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Method
    path: src/System.Net.Requests/src/System/Net/HttpWebRequest.cs
    startLine: 178
  assemblies:
  - System.Net.Requests
  namespace: System.Net
  summary: Gets or sets the method for the request.
  syntax:
    content: public override string Method { get; set; }
    content.vb: Public Overrides Property Method As String
    parameters: []
    return:
      type: System.String
      description: The request method to use to contact the Internet resource. The default value is GET.
  overridden: System.Net.WebRequest.Method
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: 'No method is supplied.-or- The method string contains invalid characters. '
  modifiers.csharp:
  - public
  - override
  - get
  - set
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Net.HttpWebRequest.RequestUri
  commentId: P:System.Net.HttpWebRequest.RequestUri
  id: RequestUri
  parent: System.Net.HttpWebRequest
  langs:
  - csharp
  - vb
  name: RequestUri
  fullName: System.Net.HttpWebRequest.RequestUri
  type: Property
  source:
    remote:
      path: src/System.Net.Requests/src/System/Net/HttpWebRequest.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: RequestUri
    path: src/System.Net.Requests/src/System/Net/HttpWebRequest.cs
    startLine: 199
  assemblies:
  - System.Net.Requests
  namespace: System.Net
  summary: Gets the original Uniform Resource Identifier (URI) of the request.
  syntax:
    content: public override Uri RequestUri { get; }
    content.vb: Public Overrides ReadOnly Property RequestUri As Uri
    parameters: []
    return:
      type: System.Uri
      description: A <xref href="System.Uri" data-throw-if-not-resolved="false"></xref> that contains the URI of the Internet resource passed to the <xref href="System.Net.WebRequest.Create(System.String)" data-throw-if-not-resolved="false"></xref> method.
  overridden: System.Net.WebRequest.RequestUri
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: System.Net.HttpWebRequest.SupportsCookieContainer
  commentId: P:System.Net.HttpWebRequest.SupportsCookieContainer
  id: SupportsCookieContainer
  parent: System.Net.HttpWebRequest
  langs:
  - csharp
  - vb
  name: SupportsCookieContainer
  fullName: System.Net.HttpWebRequest.SupportsCookieContainer
  type: Property
  source:
    remote:
      path: src/System.Net.Requests/src/System/Net/HttpWebRequest.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: SupportsCookieContainer
    path: src/System.Net.Requests/src/System/Net/HttpWebRequest.cs
    startLine: 207
  assemblies:
  - System.Net.Requests
  namespace: System.Net
  summary: Gets a value that indicates whether the request provides support for a <xref href="System.Net.CookieContainer" data-throw-if-not-resolved="false"></xref>.
  syntax:
    content: public virtual bool SupportsCookieContainer { get; }
    content.vb: Public Overridable ReadOnly Property SupportsCookieContainer As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: 'true if the request provides support for a <xref href="System.Net.CookieContainer" data-throw-if-not-resolved="false"></xref>; otherwise, false.true if a <xref href="System.Net.CookieContainer" data-throw-if-not-resolved="false"></xref> is supported; otherwise, false. '
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: System.Net.HttpWebRequest.UseDefaultCredentials
  commentId: P:System.Net.HttpWebRequest.UseDefaultCredentials
  id: UseDefaultCredentials
  parent: System.Net.HttpWebRequest
  langs:
  - csharp
  - vb
  name: UseDefaultCredentials
  fullName: System.Net.HttpWebRequest.UseDefaultCredentials
  type: Property
  source:
    remote:
      path: src/System.Net.Requests/src/System/Net/HttpWebRequest.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: UseDefaultCredentials
    path: src/System.Net.Requests/src/System/Net/HttpWebRequest.cs
    startLine: 215
  assemblies:
  - System.Net.Requests
  namespace: System.Net
  summary: Gets or sets a <xref href="System.Boolean" data-throw-if-not-resolved="false"></xref> value that controls whether default credentials are sent with requests.
  syntax:
    content: public override bool UseDefaultCredentials { get; set; }
    content.vb: Public Overrides Property UseDefaultCredentials As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: true if the default credentials are used; otherwise false. The default value is false.
  overridden: System.Net.WebRequest.UseDefaultCredentials
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: You attempted to set this property after the request was sent.
  modifiers.csharp:
  - public
  - override
  - get
  - set
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Net.HttpWebRequest.Abort
  commentId: M:System.Net.HttpWebRequest.Abort
  id: Abort
  parent: System.Net.HttpWebRequest
  langs:
  - csharp
  - vb
  name: Abort()
  fullName: System.Net.HttpWebRequest.Abort()
  type: Method
  source:
    remote:
      path: src/System.Net.Requests/src/System/Net/HttpWebRequest.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Abort
    path: src/System.Net.Requests/src/System/Net/HttpWebRequest.cs
    startLine: 252
  assemblies:
  - System.Net.Requests
  namespace: System.Net
  summary: Cancels a request to an Internet resource.
  syntax:
    content: public override void Abort()
    content.vb: Public Overrides Sub Abort
  overridden: System.Net.WebRequest.Abort
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Net.HttpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)
  commentId: M:System.Net.HttpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)
  id: BeginGetRequestStream(System.AsyncCallback,System.Object)
  parent: System.Net.HttpWebRequest
  langs:
  - csharp
  - vb
  name: BeginGetRequestStream(AsyncCallback, Object)
  fullName: System.Net.HttpWebRequest.BeginGetRequestStream(System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: src/System.Net.Requests/ref/System.Net.Requests.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: BeginGetRequestStream
    path: src/System.Net.Requests/ref/System.Net.Requests.cs
    startLine: 26
  assemblies:
  - System.Net.Requests
  namespace: System.Net
  summary: Begins an asynchronous request for a <xref href="System.IO.Stream" data-throw-if-not-resolved="false"></xref> object to use to write data.
  syntax:
    content: public override IAsyncResult BeginGetRequestStream(AsyncCallback callback, object state)
    content.vb: Public Overrides Function BeginGetRequestStream(callback As AsyncCallback, state As Object) As IAsyncResult
    parameters:
    - id: callback
      type: System.AsyncCallback
      description: 'The <xref href="System.AsyncCallback" data-throw-if-not-resolved="false"></xref> delegate. '
    - id: state
      type: System.Object
      description: 'The state object for this request. '
    return:
      type: System.IAsyncResult
      description: An <xref href="System.IAsyncResult" data-throw-if-not-resolved="false"></xref> that references the asynchronous request.
  overridden: System.Net.WebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)
  exceptions:
  - type: System.Net.ProtocolViolationException
    commentId: T:System.Net.ProtocolViolationException
    description: 'The <xref href="System.Net.HttpWebRequest.Method" data-throw-if-not-resolved="false"></xref> property is GET or HEAD.-or- <xref href="System.Net.HttpWebRequest.KeepAlive" data-throw-if-not-resolved="false"></xref> is true, <xref href="System.Net.HttpWebRequest.AllowWriteStreamBuffering" data-throw-if-not-resolved="false"></xref> is false, <xref href="System.Net.HttpWebRequest.ContentLength" data-throw-if-not-resolved="false"></xref> is -1, <xref href="System.Net.HttpWebRequest.SendChunked" data-throw-if-not-resolved="false"></xref> is false, and <xref href="System.Net.HttpWebRequest.Method" data-throw-if-not-resolved="false"></xref> is POST or PUT. '
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: 'The stream is being used by a previous call to <xref href="System.Net.HttpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)" data-throw-if-not-resolved="false"></xref>-or- <xref href="System.Net.HttpWebRequest.TransferEncoding" data-throw-if-not-resolved="false"></xref> is set to a value and <xref href="System.Net.HttpWebRequest.SendChunked" data-throw-if-not-resolved="false"></xref> is false.-or- The thread pool is running out of threads. '
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: 'The request cache validator indicated that the response for this request can be served from the cache; however, requests that write data must not use the cache. This exception can occur if you are using a custom cache validator that is incorrectly implemented. '
  - type: System.Net.WebException
    commentId: T:System.Net.WebException
    description: "\n<xref href=\"System.Net.HttpWebRequest.Abort\" data-throw-if-not-resolved=\"false\"></xref> was previously called. "
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: In a .NET Compact Framework application, a request stream with zero content length was not obtained and closed correctly. For more information about handling zero content length requests, see Network Programming in the .NET Compact Framework.
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Net.HttpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)
  commentId: M:System.Net.HttpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)
  id: BeginGetResponse(System.AsyncCallback,System.Object)
  parent: System.Net.HttpWebRequest
  langs:
  - csharp
  - vb
  name: BeginGetResponse(AsyncCallback, Object)
  fullName: System.Net.HttpWebRequest.BeginGetResponse(System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: src/System.Net.Requests/ref/System.Net.Requests.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: BeginGetResponse
    path: src/System.Net.Requests/ref/System.Net.Requests.cs
    startLine: 27
  assemblies:
  - System.Net.Requests
  namespace: System.Net
  summary: Begins an asynchronous request to an Internet resource.
  syntax:
    content: public override IAsyncResult BeginGetResponse(AsyncCallback callback, object state)
    content.vb: Public Overrides Function BeginGetResponse(callback As AsyncCallback, state As Object) As IAsyncResult
    parameters:
    - id: callback
      type: System.AsyncCallback
      description: 'The <xref href="System.AsyncCallback" data-throw-if-not-resolved="false"></xref> delegate '
    - id: state
      type: System.Object
      description: 'The state object for this request. '
    return:
      type: System.IAsyncResult
      description: An <xref href="System.IAsyncResult" data-throw-if-not-resolved="false"></xref> that references the asynchronous request for a response.
  overridden: System.Net.WebRequest.BeginGetResponse(System.AsyncCallback,System.Object)
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: 'The stream is already in use by a previous call to <xref href="System.Net.HttpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)" data-throw-if-not-resolved="false"></xref>-or- <xref href="System.Net.HttpWebRequest.TransferEncoding" data-throw-if-not-resolved="false"></xref> is set to a value and <xref href="System.Net.HttpWebRequest.SendChunked" data-throw-if-not-resolved="false"></xref> is false.-or- The thread pool is running out of threads. '
  - type: System.Net.ProtocolViolationException
    commentId: T:System.Net.ProtocolViolationException
    description: "\n<xref href=\"System.Net.HttpWebRequest.Method\" data-throw-if-not-resolved=\"false\"></xref> is GET or HEAD, and either <xref href=\"System.Net.HttpWebRequest.ContentLength\" data-throw-if-not-resolved=\"false\"></xref> is greater than zero or <xref href=\"System.Net.HttpWebRequest.SendChunked\" data-throw-if-not-resolved=\"false\"></xref> is true.-or- <xref href=\"System.Net.HttpWebRequest.KeepAlive\" data-throw-if-not-resolved=\"false\"></xref> is true, <xref href=\"System.Net.HttpWebRequest.AllowWriteStreamBuffering\" data-throw-if-not-resolved=\"false\"></xref> is false, and either <xref href=\"System.Net.HttpWebRequest.ContentLength\" data-throw-if-not-resolved=\"false\"></xref> is -1, <xref href=\"System.Net.HttpWebRequest.SendChunked\" data-throw-if-not-resolved=\"false\"></xref> is false and <xref href=\"System.Net.HttpWebRequest.Method\" data-throw-if-not-resolved=\"false\"></xref> is POST or PUT.-or- The <xref href=\"System.Net.HttpWebRequest\" data-throw-if-not-resolved=\"false\"></xref> has an entity body but the <xref href=\"System.Net.HttpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)\" data-throw-if-not-resolved=\"false\"></xref> method is called without calling the <xref href=\"System.Net.HttpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)\" data-throw-if-not-resolved=\"false\"></xref> method. -or- The <xref href=\"System.Net.HttpWebRequest.ContentLength\" data-throw-if-not-resolved=\"false\"></xref> is greater than zero, but the application does not write all of the promised data."
  - type: System.Net.WebException
    commentId: T:System.Net.WebException
    description: "\n<xref href=\"System.Net.HttpWebRequest.Abort\" data-throw-if-not-resolved=\"false\"></xref> was previously called. "
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Net.HttpWebRequest.EndGetRequestStream(System.IAsyncResult)
  commentId: M:System.Net.HttpWebRequest.EndGetRequestStream(System.IAsyncResult)
  id: EndGetRequestStream(System.IAsyncResult)
  parent: System.Net.HttpWebRequest
  langs:
  - csharp
  - vb
  name: EndGetRequestStream(IAsyncResult)
  fullName: System.Net.HttpWebRequest.EndGetRequestStream(System.IAsyncResult)
  type: Method
  source:
    remote:
      path: src/System.Net.Requests/ref/System.Net.Requests.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: EndGetRequestStream
    path: src/System.Net.Requests/ref/System.Net.Requests.cs
    startLine: 28
  assemblies:
  - System.Net.Requests
  namespace: System.Net
  summary: Ends an asynchronous request for a <xref href="System.IO.Stream" data-throw-if-not-resolved="false"></xref> object to use to write data.
  syntax:
    content: public override IO.Stream EndGetRequestStream(IAsyncResult asyncResult)
    content.vb: Public Overrides Function EndGetRequestStream(asyncResult As IAsyncResult) As IO.Stream
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: 'The pending request for a stream. '
    return:
      type: System.IO.Stream
      description: A <xref href="System.IO.Stream" data-throw-if-not-resolved="false"></xref> to use to write request data.
  overridden: System.Net.WebRequest.EndGetRequestStream(System.IAsyncResult)
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>asyncResult</em> is null. "
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: 'The request did not complete, and no stream is available. '
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<em>asyncResult</em> was not returned by the current instance from a call to <xref href=\"System.Net.HttpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)\" data-throw-if-not-resolved=\"false\"></xref>. "
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: 'This method was called previously using <em>asyncResult</em>. '
  - type: System.Net.WebException
    commentId: T:System.Net.WebException
    description: "\n<xref href=\"System.Net.HttpWebRequest.Abort\" data-throw-if-not-resolved=\"false\"></xref> was previously called.-or- An error occurred while processing the request. "
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Net.HttpWebRequest.EndGetResponse(System.IAsyncResult)
  commentId: M:System.Net.HttpWebRequest.EndGetResponse(System.IAsyncResult)
  id: EndGetResponse(System.IAsyncResult)
  parent: System.Net.HttpWebRequest
  langs:
  - csharp
  - vb
  name: EndGetResponse(IAsyncResult)
  fullName: System.Net.HttpWebRequest.EndGetResponse(System.IAsyncResult)
  type: Method
  source:
    remote:
      path: src/System.Net.Requests/ref/System.Net.Requests.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: EndGetResponse
    path: src/System.Net.Requests/ref/System.Net.Requests.cs
    startLine: 29
  assemblies:
  - System.Net.Requests
  namespace: System.Net
  summary: Ends an asynchronous request to an Internet resource.
  syntax:
    content: public override WebResponse EndGetResponse(IAsyncResult asyncResult)
    content.vb: Public Overrides Function EndGetResponse(asyncResult As IAsyncResult) As WebResponse
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: 'The pending request for a response. '
    return:
      type: System.Net.WebResponse
      description: A <xref href="System.Net.WebResponse" data-throw-if-not-resolved="false"></xref> that contains the response from the Internet resource.
  overridden: System.Net.WebRequest.EndGetResponse(System.IAsyncResult)
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>asyncResult</em> is null. "
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: 'This method was called previously using <em>asyncResult.</em>-or- The <xref href="System.Net.HttpWebRequest.ContentLength" data-throw-if-not-resolved="false"></xref> property is greater than 0 but the data has not been written to the request stream. '
  - type: System.Net.WebException
    commentId: T:System.Net.WebException
    description: "\n<xref href=\"System.Net.HttpWebRequest.Abort\" data-throw-if-not-resolved=\"false\"></xref> was previously called.-or- An error occurred while processing the request. "
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<em>asyncResult</em> was not returned by the current instance from a call to <xref href=\"System.Net.HttpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)\" data-throw-if-not-resolved=\"false\"></xref>. "
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: System.Net
  isExternal: false
  name: System.Net
  fullName: System.Net
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System.Net.WebRequest
  parent: System.Net
  isExternal: false
  name: WebRequest
  fullName: System.Net.WebRequest
- uid: System.Net.WebRequest.DefaultWebProxy
  parent: System.Net.WebRequest
  isExternal: false
  name: DefaultWebProxy
  fullName: System.Net.WebRequest.DefaultWebProxy
- uid: System.Net.WebRequest.Proxy
  parent: System.Net.WebRequest
  isExternal: false
  name: Proxy
  fullName: System.Net.WebRequest.Proxy
- uid: System.Net.WebRequest.Create(System.String)
  parent: System.Net.WebRequest
  isExternal: true
  name: Create(String)
  fullName: System.Net.WebRequest.Create(System.String)
  spec.csharp:
  - uid: System.Net.WebRequest.Create(System.String)
    name: Create
    fullName: System.Net.WebRequest.Create
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Net.WebRequest.Create(System.String)
    name: Create
    fullName: System.Net.WebRequest.Create
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: System.Net.WebRequest.Create(System.Uri)
  parent: System.Net.WebRequest
  isExternal: true
  name: Create(Uri)
  fullName: System.Net.WebRequest.Create(System.Uri)
  spec.csharp:
  - uid: System.Net.WebRequest.Create(System.Uri)
    name: Create
    fullName: System.Net.WebRequest.Create
  - name: (
    fullName: (
  - uid: System.Uri
    name: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Net.WebRequest.Create(System.Uri)
    name: Create
    fullName: System.Net.WebRequest.Create
  - name: (
    fullName: (
  - uid: System.Uri
    name: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    fullName: )
- uid: System.Net.WebRequest.CreateHttp(System.String)
  parent: System.Net.WebRequest
  isExternal: true
  name: CreateHttp(String)
  fullName: System.Net.WebRequest.CreateHttp(System.String)
  spec.csharp:
  - uid: System.Net.WebRequest.CreateHttp(System.String)
    name: CreateHttp
    fullName: System.Net.WebRequest.CreateHttp
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Net.WebRequest.CreateHttp(System.String)
    name: CreateHttp
    fullName: System.Net.WebRequest.CreateHttp
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: System.Net.WebRequest.CreateHttp(System.Uri)
  parent: System.Net.WebRequest
  isExternal: true
  name: CreateHttp(Uri)
  fullName: System.Net.WebRequest.CreateHttp(System.Uri)
  spec.csharp:
  - uid: System.Net.WebRequest.CreateHttp(System.Uri)
    name: CreateHttp
    fullName: System.Net.WebRequest.CreateHttp
  - name: (
    fullName: (
  - uid: System.Uri
    name: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Net.WebRequest.CreateHttp(System.Uri)
    name: CreateHttp
    fullName: System.Net.WebRequest.CreateHttp
  - name: (
    fullName: (
  - uid: System.Uri
    name: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    fullName: )
- uid: System.Net.WebRequest.GetRequestStreamAsync
  parent: System.Net.WebRequest
  isExternal: false
  name: GetRequestStreamAsync()
  fullName: System.Net.WebRequest.GetRequestStreamAsync()
  spec.csharp:
  - uid: System.Net.WebRequest.GetRequestStreamAsync
    name: GetRequestStreamAsync
    fullName: System.Net.WebRequest.GetRequestStreamAsync
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Net.WebRequest.GetRequestStreamAsync
    name: GetRequestStreamAsync
    fullName: System.Net.WebRequest.GetRequestStreamAsync
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Net.WebRequest.GetResponseAsync
  parent: System.Net.WebRequest
  isExternal: false
  name: GetResponseAsync()
  fullName: System.Net.WebRequest.GetResponseAsync()
  spec.csharp:
  - uid: System.Net.WebRequest.GetResponseAsync
    name: GetResponseAsync
    fullName: System.Net.WebRequest.GetResponseAsync
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Net.WebRequest.GetResponseAsync
    name: GetResponseAsync
    fullName: System.Net.WebRequest.GetResponseAsync
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Net.WebRequest.RegisterPrefix(System.String,System.Net.IWebRequestCreate)
  parent: System.Net.WebRequest
  isExternal: true
  name: RegisterPrefix(String, IWebRequestCreate)
  fullName: System.Net.WebRequest.RegisterPrefix(System.String, System.Net.IWebRequestCreate)
  spec.csharp:
  - uid: System.Net.WebRequest.RegisterPrefix(System.String,System.Net.IWebRequestCreate)
    name: RegisterPrefix
    fullName: System.Net.WebRequest.RegisterPrefix
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Net.IWebRequestCreate
    name: IWebRequestCreate
    fullName: System.Net.IWebRequestCreate
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Net.WebRequest.RegisterPrefix(System.String,System.Net.IWebRequestCreate)
    name: RegisterPrefix
    fullName: System.Net.WebRequest.RegisterPrefix
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Net.IWebRequestCreate
    name: IWebRequestCreate
    fullName: System.Net.IWebRequestCreate
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.String
  parent: System
  isExternal: false
  name: String
  fullName: System.String
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  fullName: System.Boolean
- uid: System.Net.WebRequest.ContentType
  parent: System.Net.WebRequest
  isExternal: false
  name: ContentType
  fullName: System.Net.WebRequest.ContentType
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  fullName: System.Int32
- uid: System.Net.CookieContainer
  isExternal: false
  name: CookieContainer
  fullName: System.Net.CookieContainer
- uid: System.Net.WebRequest.Credentials
  parent: System.Net.WebRequest
  isExternal: false
  name: Credentials
  fullName: System.Net.WebRequest.Credentials
- uid: System.Net.ICredentials
  parent: System.Net
  isExternal: false
  name: ICredentials
  fullName: System.Net.ICredentials
- uid: System.Net.WebRequest.Headers
  parent: System.Net.WebRequest
  isExternal: false
  name: Headers
  fullName: System.Net.WebRequest.Headers
- uid: System.Net.WebHeaderCollection
  isExternal: false
  name: WebHeaderCollection
  fullName: System.Net.WebHeaderCollection
- uid: System.Net.WebRequest.Method
  parent: System.Net.WebRequest
  isExternal: false
  name: Method
  fullName: System.Net.WebRequest.Method
- uid: System.Net.WebRequest.RequestUri
  parent: System.Net.WebRequest
  isExternal: false
  name: RequestUri
  fullName: System.Net.WebRequest.RequestUri
- uid: System.Uri
  parent: System
  isExternal: false
  name: Uri
  fullName: System.Uri
- uid: System.Net.WebRequest.UseDefaultCredentials
  parent: System.Net.WebRequest
  isExternal: false
  name: UseDefaultCredentials
  fullName: System.Net.WebRequest.UseDefaultCredentials
- uid: System.Net.WebRequest.Abort
  parent: System.Net.WebRequest
  isExternal: false
  name: Abort()
  fullName: System.Net.WebRequest.Abort()
  spec.csharp:
  - uid: System.Net.WebRequest.Abort
    name: Abort
    fullName: System.Net.WebRequest.Abort
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Net.WebRequest.Abort
    name: Abort
    fullName: System.Net.WebRequest.Abort
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Net.WebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)
  parent: System.Net.WebRequest
  isExternal: true
  name: BeginGetRequestStream(AsyncCallback, Object)
  fullName: System.Net.WebRequest.BeginGetRequestStream(System.AsyncCallback, System.Object)
  spec.csharp:
  - uid: System.Net.WebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)
    name: BeginGetRequestStream
    fullName: System.Net.WebRequest.BeginGetRequestStream
  - name: (
    fullName: (
  - uid: System.AsyncCallback
    name: AsyncCallback
    fullName: System.AsyncCallback
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Net.WebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)
    name: BeginGetRequestStream
    fullName: System.Net.WebRequest.BeginGetRequestStream
  - name: (
    fullName: (
  - uid: System.AsyncCallback
    name: AsyncCallback
    fullName: System.AsyncCallback
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.AsyncCallback
  isExternal: false
  name: AsyncCallback
  fullName: System.AsyncCallback
- uid: System.IAsyncResult
  parent: System
  isExternal: false
  name: IAsyncResult
  fullName: System.IAsyncResult
- uid: System.Net.WebRequest.BeginGetResponse(System.AsyncCallback,System.Object)
  parent: System.Net.WebRequest
  isExternal: true
  name: BeginGetResponse(AsyncCallback, Object)
  fullName: System.Net.WebRequest.BeginGetResponse(System.AsyncCallback, System.Object)
  spec.csharp:
  - uid: System.Net.WebRequest.BeginGetResponse(System.AsyncCallback,System.Object)
    name: BeginGetResponse
    fullName: System.Net.WebRequest.BeginGetResponse
  - name: (
    fullName: (
  - uid: System.AsyncCallback
    name: AsyncCallback
    fullName: System.AsyncCallback
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Net.WebRequest.BeginGetResponse(System.AsyncCallback,System.Object)
    name: BeginGetResponse
    fullName: System.Net.WebRequest.BeginGetResponse
  - name: (
    fullName: (
  - uid: System.AsyncCallback
    name: AsyncCallback
    fullName: System.AsyncCallback
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Net.WebRequest.EndGetRequestStream(System.IAsyncResult)
  parent: System.Net.WebRequest
  isExternal: true
  name: EndGetRequestStream(IAsyncResult)
  fullName: System.Net.WebRequest.EndGetRequestStream(System.IAsyncResult)
  spec.csharp:
  - uid: System.Net.WebRequest.EndGetRequestStream(System.IAsyncResult)
    name: EndGetRequestStream
    fullName: System.Net.WebRequest.EndGetRequestStream
  - name: (
    fullName: (
  - uid: System.IAsyncResult
    name: IAsyncResult
    fullName: System.IAsyncResult
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Net.WebRequest.EndGetRequestStream(System.IAsyncResult)
    name: EndGetRequestStream
    fullName: System.Net.WebRequest.EndGetRequestStream
  - name: (
    fullName: (
  - uid: System.IAsyncResult
    name: IAsyncResult
    fullName: System.IAsyncResult
    isExternal: true
  - name: )
    fullName: )
- uid: System.IO.Stream
  parent: System.IO
  isExternal: false
  name: IO.Stream
  fullName: System.IO.Stream
- uid: System.IO
  isExternal: false
  name: System.IO
  fullName: System.IO
- uid: System.Net.WebRequest.EndGetResponse(System.IAsyncResult)
  parent: System.Net.WebRequest
  isExternal: true
  name: EndGetResponse(IAsyncResult)
  fullName: System.Net.WebRequest.EndGetResponse(System.IAsyncResult)
  spec.csharp:
  - uid: System.Net.WebRequest.EndGetResponse(System.IAsyncResult)
    name: EndGetResponse
    fullName: System.Net.WebRequest.EndGetResponse
  - name: (
    fullName: (
  - uid: System.IAsyncResult
    name: IAsyncResult
    fullName: System.IAsyncResult
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Net.WebRequest.EndGetResponse(System.IAsyncResult)
    name: EndGetResponse
    fullName: System.Net.WebRequest.EndGetResponse
  - name: (
    fullName: (
  - uid: System.IAsyncResult
    name: IAsyncResult
    fullName: System.IAsyncResult
    isExternal: true
  - name: )
    fullName: )
- uid: System.Net.WebResponse
  parent: System.Net
  isExternal: false
  name: WebResponse
  fullName: System.Net.WebResponse
- uid: System.InvalidOperationException
  parent: System
  isExternal: false
  name: InvalidOperationException
  fullName: System.InvalidOperationException
- uid: System.ArgumentException
  parent: System
  isExternal: false
  name: ArgumentException
  fullName: System.ArgumentException
- uid: System.Net.ProtocolViolationException
  isExternal: false
  name: ProtocolViolationException
  fullName: System.Net.ProtocolViolationException
- uid: System.NotSupportedException
  parent: System
  isExternal: false
  name: NotSupportedException
  fullName: System.NotSupportedException
- uid: System.Net.WebException
  isExternal: false
  name: WebException
  fullName: System.Net.WebException
- uid: System.ObjectDisposedException
  isExternal: false
  name: ObjectDisposedException
  fullName: System.ObjectDisposedException
- uid: System.ArgumentNullException
  isExternal: false
  name: ArgumentNullException
  fullName: System.ArgumentNullException
- uid: System.IO.IOException
  parent: System.IO
  isExternal: false
  name: IOException
  fullName: System.IO.IOException
