items:
- uid: System.Dynamic.DynamicMetaObjectBinder
  commentId: T:System.Dynamic.DynamicMetaObjectBinder
  id: DynamicMetaObjectBinder
  parent: System.Dynamic
  children:
  - System.Dynamic.DynamicMetaObjectBinder.#ctor
  - System.Dynamic.DynamicMetaObjectBinder.Bind(System.Dynamic.DynamicMetaObject,System.Dynamic.DynamicMetaObject[])
  - System.Dynamic.DynamicMetaObjectBinder.Bind(System.Object[],System.Collections.ObjectModel.ReadOnlyCollection{System.Linq.Expressions.ParameterExpression},System.Linq.Expressions.LabelTarget)
  - System.Dynamic.DynamicMetaObjectBinder.Defer(System.Dynamic.DynamicMetaObject,System.Dynamic.DynamicMetaObject[])
  - System.Dynamic.DynamicMetaObjectBinder.Defer(System.Dynamic.DynamicMetaObject[])
  - System.Dynamic.DynamicMetaObjectBinder.GetUpdateExpression(System.Type)
  - System.Dynamic.DynamicMetaObjectBinder.ReturnType
  langs:
  - csharp
  - vb
  name: DynamicMetaObjectBinder
  fullName: System.Dynamic.DynamicMetaObjectBinder
  type: Class
  source:
    remote:
      path: src/System.Dynamic.Runtime/src/System/Dynamic/DynamicMetaObjectBinder.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: DynamicMetaObjectBinder
    path: src/System.Dynamic.Runtime/src/System/Dynamic/DynamicMetaObjectBinder.cs
    startLine: 21
  assemblies:
  - System.Dynamic.Runtime
  namespace: System.Dynamic
  summary: The dynamic call site binder that participates in the <xref href="System.Dynamic.DynamicMetaObject" data-throw-if-not-resolved="false"></xref> binding protocol.
  syntax:
    content: 'public abstract class DynamicMetaObjectBinder : CallSiteBinder'
    content.vb: >-
      Public MustInherit Class DynamicMetaObjectBinder
          Inherits CallSiteBinder
  inheritance:
  - System.Object
  - System.Runtime.CompilerServices.CallSiteBinder
  inheritedMembers:
  - System.Runtime.CompilerServices.CallSiteBinder.UpdateLabel
  - System.Runtime.CompilerServices.CallSiteBinder.BindDelegate``1(System.Runtime.CompilerServices.CallSite{{T}},System.Object[])
  - System.Runtime.CompilerServices.CallSiteBinder.CacheTarget``1({T})
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: System.Dynamic.DynamicMetaObjectBinder.#ctor
  commentId: M:System.Dynamic.DynamicMetaObjectBinder.#ctor
  id: '#ctor'
  parent: System.Dynamic.DynamicMetaObjectBinder
  langs:
  - csharp
  - vb
  name: DynamicMetaObjectBinder()
  fullName: System.Dynamic.DynamicMetaObjectBinder.DynamicMetaObjectBinder()
  type: Constructor
  source:
    remote:
      path: src/System.Dynamic.Runtime/src/System/Dynamic/DynamicMetaObjectBinder.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Dynamic.Runtime/src/System/Dynamic/DynamicMetaObjectBinder.cs
    startLine: 28
  assemblies:
  - System.Dynamic.Runtime
  namespace: System.Dynamic
  summary: Initializes a new instance of the <xref href="System.Dynamic.DynamicMetaObjectBinder" data-throw-if-not-resolved="false"></xref> class.
  syntax:
    content: protected DynamicMetaObjectBinder()
    content.vb: Protected Sub New
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: System.Dynamic.DynamicMetaObjectBinder.ReturnType
  commentId: P:System.Dynamic.DynamicMetaObjectBinder.ReturnType
  id: ReturnType
  parent: System.Dynamic.DynamicMetaObjectBinder
  langs:
  - csharp
  - vb
  name: ReturnType
  fullName: System.Dynamic.DynamicMetaObjectBinder.ReturnType
  type: Property
  source:
    remote:
      path: src/System.Dynamic.Runtime/src/System/Dynamic/DynamicMetaObjectBinder.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ReturnType
    path: src/System.Dynamic.Runtime/src/System/Dynamic/DynamicMetaObjectBinder.cs
    startLine: 35
  assemblies:
  - System.Dynamic.Runtime
  namespace: System.Dynamic
  summary: The result type of the operation.
  syntax:
    content: public virtual Type ReturnType { get; }
    content.vb: Public Overridable ReadOnly Property ReturnType As Type
    parameters: []
    return:
      type: System.Type
      description: The <xref href="System.Type" data-throw-if-not-resolved="false"></xref> object representing the result type of the operation.
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: System.Dynamic.DynamicMetaObjectBinder.Bind(System.Dynamic.DynamicMetaObject,System.Dynamic.DynamicMetaObject[])
  commentId: M:System.Dynamic.DynamicMetaObjectBinder.Bind(System.Dynamic.DynamicMetaObject,System.Dynamic.DynamicMetaObject[])
  id: Bind(System.Dynamic.DynamicMetaObject,System.Dynamic.DynamicMetaObject[])
  parent: System.Dynamic.DynamicMetaObjectBinder
  langs:
  - csharp
  - vb
  name: Bind(DynamicMetaObject, DynamicMetaObject[])
  fullName: System.Dynamic.DynamicMetaObjectBinder.Bind(System.Dynamic.DynamicMetaObject, System.Dynamic.DynamicMetaObject[])
  type: Method
  source:
    remote:
      path: src/System.Dynamic.Runtime/src/System/Dynamic/DynamicMetaObjectBinder.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Bind
    path: src/System.Dynamic.Runtime/src/System/Dynamic/DynamicMetaObjectBinder.cs
    startLine: 172
  assemblies:
  - System.Dynamic.Runtime
  namespace: System.Dynamic
  summary: When overridden in the derived class, performs the binding of the dynamic operation.
  syntax:
    content: public abstract DynamicMetaObject Bind(DynamicMetaObject target, DynamicMetaObject[] args)
    content.vb: Public MustOverride Function Bind(target As DynamicMetaObject, args As DynamicMetaObject()) As DynamicMetaObject
    parameters:
    - id: target
      type: System.Dynamic.DynamicMetaObject
      description: The target of the dynamic operation.
    - id: args
      type: System.Dynamic.DynamicMetaObject[]
      description: An array of arguments of the dynamic operation.
    return:
      type: System.Dynamic.DynamicMetaObject
      description: The <xref href="System.Dynamic.DynamicMetaObject" data-throw-if-not-resolved="false"></xref> representing the result of the binding.
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
  fullName.vb: System.Dynamic.DynamicMetaObjectBinder.Bind(System.Dynamic.DynamicMetaObject, System.Dynamic.DynamicMetaObject())
  name.vb: Bind(DynamicMetaObject, DynamicMetaObject())
- uid: System.Dynamic.DynamicMetaObjectBinder.Bind(System.Object[],System.Collections.ObjectModel.ReadOnlyCollection{System.Linq.Expressions.ParameterExpression},System.Linq.Expressions.LabelTarget)
  commentId: M:System.Dynamic.DynamicMetaObjectBinder.Bind(System.Object[],System.Collections.ObjectModel.ReadOnlyCollection{System.Linq.Expressions.ParameterExpression},System.Linq.Expressions.LabelTarget)
  id: Bind(System.Object[],System.Collections.ObjectModel.ReadOnlyCollection{System.Linq.Expressions.ParameterExpression},System.Linq.Expressions.LabelTarget)
  parent: System.Dynamic.DynamicMetaObjectBinder
  langs:
  - csharp
  - vb
  name: Bind(Object[], Collections.ObjectModel.ReadOnlyCollection<ParameterExpression>, LabelTarget)
  fullName: System.Dynamic.DynamicMetaObjectBinder.Bind(System.Object[], System.Collections.ObjectModel.ReadOnlyCollection<System.Linq.Expressions.ParameterExpression>, System.Linq.Expressions.LabelTarget)
  type: Method
  source:
    remote:
      path: src/System.Dynamic.Runtime/ref/System.Dynamic.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Bind
    path: src/System.Dynamic.Runtime/ref/System.Dynamic.Runtime.cs
    startLine: 108
  assemblies:
  - System.Dynamic.Runtime
  namespace: System.Dynamic
  summary: Performs the runtime binding of the dynamic operation on a set of arguments.
  syntax:
    content: public override sealed Expression Bind(object[] args, Collections.ObjectModel.ReadOnlyCollection<ParameterExpression> parameters, LabelTarget returnLabel)
    content.vb: Public NotOverridable Overrides Function Bind(args As Object(), parameters As Collections.ObjectModel.ReadOnlyCollection(Of ParameterExpression), returnLabel As LabelTarget) As Expression
    parameters:
    - id: args
      type: System.Object[]
      description: An array of arguments to the dynamic operation.
    - id: parameters
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.Linq.Expressions.ParameterExpression}
      description: The array of <xref href="System.Linq.Expressions.ParameterExpression" data-throw-if-not-resolved="false"></xref> instances that represent the parameters of the call site in the binding process.
    - id: returnLabel
      type: System.Linq.Expressions.LabelTarget
      description: A LabelTarget used to return the result of the dynamic binding.
    return:
      type: System.Linq.Expressions.Expression
      description: An Expression that performs tests on the dynamic operation arguments, and performs the dynamic operation if the tests are valid. If the tests fail on subsequent occurrences of the dynamic operation, Bind will be called again to produce a new <xref href="System.Linq.Expressions.Expression" data-throw-if-not-resolved="false"></xref> for the new argument types.
  overridden: System.Runtime.CompilerServices.CallSiteBinder.Bind(System.Object[],System.Collections.ObjectModel.ReadOnlyCollection{System.Linq.Expressions.ParameterExpression},System.Linq.Expressions.LabelTarget)
  modifiers.csharp:
  - public
  - override
  - sealed
  modifiers.vb:
  - Public
  - Overrides
  - NotOverridable
  fullName.vb: System.Dynamic.DynamicMetaObjectBinder.Bind(System.Object(), System.Collections.ObjectModel.ReadOnlyCollection(Of System.Linq.Expressions.ParameterExpression), System.Linq.Expressions.LabelTarget)
  name.vb: Bind(Object(), Collections.ObjectModel.ReadOnlyCollection(Of ParameterExpression), LabelTarget)
- uid: System.Dynamic.DynamicMetaObjectBinder.Defer(System.Dynamic.DynamicMetaObject,System.Dynamic.DynamicMetaObject[])
  commentId: M:System.Dynamic.DynamicMetaObjectBinder.Defer(System.Dynamic.DynamicMetaObject,System.Dynamic.DynamicMetaObject[])
  id: Defer(System.Dynamic.DynamicMetaObject,System.Dynamic.DynamicMetaObject[])
  parent: System.Dynamic.DynamicMetaObjectBinder
  langs:
  - csharp
  - vb
  name: Defer(DynamicMetaObject, DynamicMetaObject[])
  fullName: System.Dynamic.DynamicMetaObjectBinder.Defer(System.Dynamic.DynamicMetaObject, System.Dynamic.DynamicMetaObject[])
  type: Method
  source:
    remote:
      path: src/System.Dynamic.Runtime/src/System/Dynamic/DynamicMetaObjectBinder.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Defer
    path: src/System.Dynamic.Runtime/src/System/Dynamic/DynamicMetaObjectBinder.cs
    startLine: 194
  assemblies:
  - System.Dynamic.Runtime
  namespace: System.Dynamic
  summary: Defers the binding of the operation until later time when the runtime values of all dynamic operation arguments have been computed.
  syntax:
    content: public DynamicMetaObject Defer(DynamicMetaObject target, params DynamicMetaObject[] args)
    content.vb: Public Function Defer(target As DynamicMetaObject, ParamArray args As DynamicMetaObject()) As DynamicMetaObject
    parameters:
    - id: target
      type: System.Dynamic.DynamicMetaObject
      description: The target of the dynamic operation.
    - id: args
      type: System.Dynamic.DynamicMetaObject[]
      description: An array of arguments of the dynamic operation.
    return:
      type: System.Dynamic.DynamicMetaObject
      description: The <xref href="System.Dynamic.DynamicMetaObject" data-throw-if-not-resolved="false"></xref> representing the result of the binding.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Dynamic.DynamicMetaObjectBinder.Defer(System.Dynamic.DynamicMetaObject, System.Dynamic.DynamicMetaObject())
  name.vb: Defer(DynamicMetaObject, DynamicMetaObject())
- uid: System.Dynamic.DynamicMetaObjectBinder.Defer(System.Dynamic.DynamicMetaObject[])
  commentId: M:System.Dynamic.DynamicMetaObjectBinder.Defer(System.Dynamic.DynamicMetaObject[])
  id: Defer(System.Dynamic.DynamicMetaObject[])
  parent: System.Dynamic.DynamicMetaObjectBinder
  langs:
  - csharp
  - vb
  name: Defer(DynamicMetaObject[])
  fullName: System.Dynamic.DynamicMetaObjectBinder.Defer(System.Dynamic.DynamicMetaObject[])
  type: Method
  source:
    remote:
      path: src/System.Dynamic.Runtime/src/System/Dynamic/DynamicMetaObjectBinder.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Defer
    path: src/System.Dynamic.Runtime/src/System/Dynamic/DynamicMetaObjectBinder.cs
    startLine: 216
  assemblies:
  - System.Dynamic.Runtime
  namespace: System.Dynamic
  summary: Defers the binding of the operation until later time when the runtime values of all dynamic operation arguments have been computed.
  syntax:
    content: public DynamicMetaObject Defer(params DynamicMetaObject[] args)
    content.vb: Public Function Defer(ParamArray args As DynamicMetaObject()) As DynamicMetaObject
    parameters:
    - id: args
      type: System.Dynamic.DynamicMetaObject[]
      description: An array of arguments of the dynamic operation.
    return:
      type: System.Dynamic.DynamicMetaObject
      description: The <xref href="System.Dynamic.DynamicMetaObject" data-throw-if-not-resolved="false"></xref> representing the result of the binding.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Dynamic.DynamicMetaObjectBinder.Defer(System.Dynamic.DynamicMetaObject())
  name.vb: Defer(DynamicMetaObject())
- uid: System.Dynamic.DynamicMetaObjectBinder.GetUpdateExpression(System.Type)
  commentId: M:System.Dynamic.DynamicMetaObjectBinder.GetUpdateExpression(System.Type)
  id: GetUpdateExpression(System.Type)
  parent: System.Dynamic.DynamicMetaObjectBinder
  langs:
  - csharp
  - vb
  name: GetUpdateExpression(Type)
  fullName: System.Dynamic.DynamicMetaObjectBinder.GetUpdateExpression(System.Type)
  type: Method
  source:
    remote:
      path: src/System.Dynamic.Runtime/ref/System.Dynamic.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetUpdateExpression
    path: src/System.Dynamic.Runtime/ref/System.Dynamic.Runtime.cs
    startLine: 111
  assemblies:
  - System.Dynamic.Runtime
  namespace: System.Dynamic
  summary: Gets an expression that will cause the binding to be updated. It indicates that the expression's binding is no longer valid. This is typically used when the "version" of a dynamic object has changed.
  syntax:
    content: public Expression GetUpdateExpression(Type type)
    content.vb: Public Function GetUpdateExpression(type As Type) As Expression
    parameters:
    - id: type
      type: System.Type
      description: The <xref href="System.Linq.Expressions.Expression.Type" data-throw-if-not-resolved="false"></xref> property of the resulting expression; any type is allowed.
    return:
      type: System.Linq.Expressions.Expression
      description: The update expression.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: System.Dynamic
  isExternal: false
  name: System.Dynamic
  fullName: System.Dynamic
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System.Runtime.CompilerServices.CallSiteBinder
  parent: System.Runtime.CompilerServices
  isExternal: false
  name: System.Runtime.CompilerServices.CallSiteBinder
  fullName: System.Runtime.CompilerServices.CallSiteBinder
- uid: System.Runtime.CompilerServices.CallSiteBinder.UpdateLabel
  parent: System.Runtime.CompilerServices.CallSiteBinder
  isExternal: false
  name: UpdateLabel
  fullName: System.Runtime.CompilerServices.CallSiteBinder.UpdateLabel
- uid: System.Runtime.CompilerServices.CallSiteBinder.BindDelegate``1(System.Runtime.CompilerServices.CallSite{{T}},System.Object[])
  parent: System.Runtime.CompilerServices.CallSiteBinder
  isExternal: true
  name: BindDelegate<T>(CallSite<T>, Object[])
  fullName: System.Runtime.CompilerServices.CallSiteBinder.BindDelegate<T>(System.Runtime.CompilerServices.CallSite<T>, System.Object[])
  fullname.vb: System.Runtime.CompilerServices.CallSiteBinder.BindDelegate(Of T)(System.Runtime.CompilerServices.CallSite(Of T), System.Object())
  name.vb: BindDelegate(Of T)(CallSite(Of T), Object())
  spec.csharp:
  - uid: System.Runtime.CompilerServices.CallSiteBinder.BindDelegate``1(System.Runtime.CompilerServices.CallSite{``0},System.Object[])
    name: BindDelegate<T>
    fullName: System.Runtime.CompilerServices.CallSiteBinder.BindDelegate<T>
  - name: (
    fullName: (
  - uid: System.Runtime.CompilerServices.CallSite`1
    name: CallSite
    fullName: System.Runtime.CompilerServices.CallSite
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    fullName: '[]'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Runtime.CompilerServices.CallSiteBinder.BindDelegate``1(System.Runtime.CompilerServices.CallSite{``0},System.Object[])
    name: BindDelegate(Of T)
    fullName: System.Runtime.CompilerServices.CallSiteBinder.BindDelegate(Of T)
  - name: (
    fullName: (
  - uid: System.Runtime.CompilerServices.CallSite`1
    name: CallSite
    fullName: System.Runtime.CompilerServices.CallSite
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    fullName: ()
  - name: )
    fullName: )
- uid: System.Runtime.CompilerServices.CallSiteBinder.CacheTarget``1({T})
  parent: System.Runtime.CompilerServices.CallSiteBinder
  isExternal: false
  name: CacheTarget<T>(T)
  fullName: System.Runtime.CompilerServices.CallSiteBinder.CacheTarget<T>(T)
  fullname.vb: System.Runtime.CompilerServices.CallSiteBinder.CacheTarget(Of T)(T)
  name.vb: CacheTarget(Of T)(T)
  spec.csharp:
  - uid: System.Runtime.CompilerServices.CallSiteBinder.CacheTarget``1(``0)
    name: CacheTarget<T>
    fullName: System.Runtime.CompilerServices.CallSiteBinder.CacheTarget<T>
  - name: (
    fullName: (
  - name: T
    fullName: T
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Runtime.CompilerServices.CallSiteBinder.CacheTarget``1(``0)
    name: CacheTarget(Of T)
    fullName: System.Runtime.CompilerServices.CallSiteBinder.CacheTarget(Of T)
  - name: (
    fullName: (
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Runtime.CompilerServices
  isExternal: false
  name: System.Runtime.CompilerServices
  fullName: System.Runtime.CompilerServices
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  fullName: System.Type
- uid: System.Dynamic.DynamicMetaObject
  parent: System.Dynamic
  isExternal: false
  name: DynamicMetaObject
  fullName: System.Dynamic.DynamicMetaObject
- uid: System.Dynamic.DynamicMetaObject[]
  isExternal: false
  name: DynamicMetaObject[]
  fullName: System.Dynamic.DynamicMetaObject[]
  fullname.vb: System.Dynamic.DynamicMetaObject()
  name.vb: DynamicMetaObject()
  spec.csharp:
  - uid: System.Dynamic.DynamicMetaObject
    name: DynamicMetaObject
    fullName: System.Dynamic.DynamicMetaObject
  - name: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Dynamic.DynamicMetaObject
    name: DynamicMetaObject
    fullName: System.Dynamic.DynamicMetaObject
  - name: ()
    fullName: ()
- uid: System.Runtime.CompilerServices.CallSiteBinder.Bind(System.Object[],System.Collections.ObjectModel.ReadOnlyCollection{System.Linq.Expressions.ParameterExpression},System.Linq.Expressions.LabelTarget)
  parent: System.Runtime.CompilerServices.CallSiteBinder
  isExternal: true
  name: Bind(Object[], Collections.ObjectModel.ReadOnlyCollection<ParameterExpression>, LabelTarget)
  fullName: System.Runtime.CompilerServices.CallSiteBinder.Bind(System.Object[], System.Collections.ObjectModel.ReadOnlyCollection<System.Linq.Expressions.ParameterExpression>, System.Linq.Expressions.LabelTarget)
  fullname.vb: System.Runtime.CompilerServices.CallSiteBinder.Bind(System.Object(), System.Collections.ObjectModel.ReadOnlyCollection(Of System.Linq.Expressions.ParameterExpression), System.Linq.Expressions.LabelTarget)
  name.vb: Bind(Object(), Collections.ObjectModel.ReadOnlyCollection(Of ParameterExpression), LabelTarget)
  spec.csharp:
  - uid: System.Runtime.CompilerServices.CallSiteBinder.Bind(System.Object[],System.Collections.ObjectModel.ReadOnlyCollection{System.Linq.Expressions.ParameterExpression},System.Linq.Expressions.LabelTarget)
    name: Bind
    fullName: System.Runtime.CompilerServices.CallSiteBinder.Bind
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    fullName: '[]'
  - name: ', '
    fullName: ', '
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: Collections.ObjectModel.ReadOnlyCollection
    fullName: System.Collections.ObjectModel.ReadOnlyCollection
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Linq.Expressions.ParameterExpression
    name: ParameterExpression
    fullName: System.Linq.Expressions.ParameterExpression
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.LabelTarget
    name: LabelTarget
    fullName: System.Linq.Expressions.LabelTarget
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Runtime.CompilerServices.CallSiteBinder.Bind(System.Object[],System.Collections.ObjectModel.ReadOnlyCollection{System.Linq.Expressions.ParameterExpression},System.Linq.Expressions.LabelTarget)
    name: Bind
    fullName: System.Runtime.CompilerServices.CallSiteBinder.Bind
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    fullName: ()
  - name: ', '
    fullName: ', '
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: Collections.ObjectModel.ReadOnlyCollection
    fullName: System.Collections.ObjectModel.ReadOnlyCollection
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Linq.Expressions.ParameterExpression
    name: ParameterExpression
    fullName: System.Linq.Expressions.ParameterExpression
    isExternal: true
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.LabelTarget
    name: LabelTarget
    fullName: System.Linq.Expressions.LabelTarget
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object[]
  isExternal: false
  name: Object[]
  fullName: System.Object[]
  fullname.vb: System.Object()
  name.vb: Object()
  spec.csharp:
  - uid: System.Object
    name: Object
    fullName: System.Object
  - name: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Object
    name: Object
    fullName: System.Object
  - name: ()
    fullName: ()
- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.Linq.Expressions.ParameterExpression}
  definition: System.Collections.ObjectModel.ReadOnlyCollection`1
  name: Collections.ObjectModel.ReadOnlyCollection<ParameterExpression>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.Linq.Expressions.ParameterExpression>
  fullname.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of System.Linq.Expressions.ParameterExpression)
  name.vb: Collections.ObjectModel.ReadOnlyCollection(Of ParameterExpression)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: Collections.ObjectModel.ReadOnlyCollection
    fullName: System.Collections.ObjectModel.ReadOnlyCollection
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Linq.Expressions.ParameterExpression
    name: ParameterExpression
    fullName: System.Linq.Expressions.ParameterExpression
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: Collections.ObjectModel.ReadOnlyCollection
    fullName: System.Collections.ObjectModel.ReadOnlyCollection
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Linq.Expressions.ParameterExpression
    name: ParameterExpression
    fullName: System.Linq.Expressions.ParameterExpression
  - name: )
    fullName: )
- uid: System.Linq.Expressions.LabelTarget
  parent: System.Linq.Expressions
  isExternal: false
  name: LabelTarget
  fullName: System.Linq.Expressions.LabelTarget
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Collections.ObjectModel.ReadOnlyCollection`1
  parent: System.Collections.ObjectModel
  isExternal: false
  name: Collections.ObjectModel.ReadOnlyCollection<>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<>
  fullname.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of )
  name.vb: Collections.ObjectModel.ReadOnlyCollection(Of )
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: Collections.ObjectModel.ReadOnlyCollection
    fullName: System.Collections.ObjectModel.ReadOnlyCollection
  - name: <
    fullName: <
  - {}
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: Collections.ObjectModel.ReadOnlyCollection
    fullName: System.Collections.ObjectModel.ReadOnlyCollection
  - name: '(Of '
    fullName: '(Of '
  - {}
  - name: )
    fullName: )
- uid: System.Linq.Expressions
  isExternal: false
  name: System.Linq.Expressions
  fullName: System.Linq.Expressions
- uid: System.Collections.ObjectModel
  isExternal: false
  name: System.Collections.ObjectModel
  fullName: System.Collections.ObjectModel
