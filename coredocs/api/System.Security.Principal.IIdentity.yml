items:
- uid: System.Security.Principal.IIdentity
  commentId: T:System.Security.Principal.IIdentity
  id: IIdentity
  parent: System.Security.Principal
  children:
  - System.Security.Principal.IIdentity.AuthenticationType
  - System.Security.Principal.IIdentity.IsAuthenticated
  - System.Security.Principal.IIdentity.Name
  langs:
  - csharp
  - vb
  name: IIdentity
  fullName: System.Security.Principal.IIdentity
  type: Interface
  source:
    remote:
      path: src/System.Security.Principal/src/System/Security/Principal/IIdentity.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IIdentity
    path: src/System.Security.Principal/src/System/Security/Principal/IIdentity.cs
    startLine: 12
  assemblies:
  - System.Security.Principal
  namespace: System.Security.Principal
  summary: Defines the basic functionality of an identity object.
  syntax:
    content: public interface IIdentity
    content.vb: Public Interface IIdentity
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: System.Security.Principal.IIdentity.AuthenticationType
  commentId: P:System.Security.Principal.IIdentity.AuthenticationType
  id: AuthenticationType
  parent: System.Security.Principal.IIdentity
  langs:
  - csharp
  - vb
  name: AuthenticationType
  fullName: System.Security.Principal.IIdentity.AuthenticationType
  type: Property
  source:
    remote:
      path: src/System.Security.Principal/src/System/Security/Principal/IIdentity.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: AuthenticationType
    path: src/System.Security.Principal/src/System/Security/Principal/IIdentity.cs
    startLine: 18
  assemblies:
  - System.Security.Principal
  namespace: System.Security.Principal
  summary: Gets the type of authentication used.
  syntax:
    content: string AuthenticationType { get; }
    content.vb: ReadOnly Property AuthenticationType As String
    parameters: []
    return:
      type: System.String
      description: The type of authentication used to identify the user.
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: System.Security.Principal.IIdentity.IsAuthenticated
  commentId: P:System.Security.Principal.IIdentity.IsAuthenticated
  id: IsAuthenticated
  parent: System.Security.Principal.IIdentity
  langs:
  - csharp
  - vb
  name: IsAuthenticated
  fullName: System.Security.Principal.IIdentity.IsAuthenticated
  type: Property
  source:
    remote:
      path: src/System.Security.Principal/src/System/Security/Principal/IIdentity.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IsAuthenticated
    path: src/System.Security.Principal/src/System/Security/Principal/IIdentity.cs
    startLine: 21
  assemblies:
  - System.Security.Principal
  namespace: System.Security.Principal
  summary: Gets a value that indicates whether the user has been authenticated.
  syntax:
    content: bool IsAuthenticated { get; }
    content.vb: ReadOnly Property IsAuthenticated As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: true if the user was authenticated; otherwise, false.
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: System.Security.Principal.IIdentity.Name
  commentId: P:System.Security.Principal.IIdentity.Name
  id: Name
  parent: System.Security.Principal.IIdentity
  langs:
  - csharp
  - vb
  name: Name
  fullName: System.Security.Principal.IIdentity.Name
  type: Property
  source:
    remote:
      path: src/System.Security.Principal/src/System/Security/Principal/IIdentity.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Name
    path: src/System.Security.Principal/src/System/Security/Principal/IIdentity.cs
    startLine: 15
  assemblies:
  - System.Security.Principal
  namespace: System.Security.Principal
  summary: Gets the name of the current user.
  syntax:
    content: string Name { get; }
    content.vb: ReadOnly Property Name As String
    parameters: []
    return:
      type: System.String
      description: The name of the user on whose behalf the code is running.
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
references:
- uid: System.Security.Principal
  isExternal: false
  name: System.Security.Principal
  fullName: System.Security.Principal
- uid: System.String
  parent: System
  isExternal: false
  name: String
  fullName: System.String
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  fullName: System.Boolean
