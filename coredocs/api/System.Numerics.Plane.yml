items:
- uid: System.Numerics.Plane
  commentId: T:System.Numerics.Plane
  id: Plane
  parent: System.Numerics
  children:
  - System.Numerics.Plane.#ctor(System.Numerics.Vector3,System.Single)
  - System.Numerics.Plane.#ctor(System.Numerics.Vector4)
  - System.Numerics.Plane.#ctor(System.Single,System.Single,System.Single,System.Single)
  - System.Numerics.Plane.CreateFromVertices(System.Numerics.Vector3,System.Numerics.Vector3,System.Numerics.Vector3)
  - System.Numerics.Plane.D
  - System.Numerics.Plane.Dot(System.Numerics.Plane,System.Numerics.Vector4)
  - System.Numerics.Plane.DotCoordinate(System.Numerics.Plane,System.Numerics.Vector3)
  - System.Numerics.Plane.DotNormal(System.Numerics.Plane,System.Numerics.Vector3)
  - System.Numerics.Plane.Equals(System.Numerics.Plane)
  - System.Numerics.Plane.Equals(System.Object)
  - System.Numerics.Plane.GetHashCode
  - System.Numerics.Plane.Normal
  - System.Numerics.Plane.Normalize(System.Numerics.Plane)
  - System.Numerics.Plane.op_Equality(System.Numerics.Plane,System.Numerics.Plane)
  - System.Numerics.Plane.op_Inequality(System.Numerics.Plane,System.Numerics.Plane)
  - System.Numerics.Plane.ToString
  - System.Numerics.Plane.Transform(System.Numerics.Plane,System.Numerics.Matrix4x4)
  - System.Numerics.Plane.Transform(System.Numerics.Plane,System.Numerics.Quaternion)
  langs:
  - csharp
  - vb
  name: Plane
  fullName: System.Numerics.Plane
  type: Struct
  source:
    remote:
      path: src/System.Numerics.Vectors/src/System/Numerics/Plane.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Plane
    path: src/System.Numerics.Vectors/src/System/Numerics/Plane.cs
    startLine: 12
  assemblies:
  - System.Numerics.Vectors
  namespace: System.Numerics
  summary: Represents a three-dimensional plane.
  syntax:
    content: 'public struct Plane : IEquatable<Plane>'
    content.vb: >-
      Public Structure Plane
          Implements IEquatable(Of Plane)
  implements:
  - System.IEquatable{System.Numerics.Plane}
  modifiers.csharp:
  - public
  - struct
  modifiers.vb:
  - Public
  - Structure
- uid: System.Numerics.Plane.D
  commentId: F:System.Numerics.Plane.D
  id: D
  parent: System.Numerics.Plane
  langs:
  - csharp
  - vb
  name: D
  fullName: System.Numerics.Plane.D
  type: Field
  source:
    remote:
      path: src/System.Numerics.Vectors/src/System/Numerics/Plane.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: D
    path: src/System.Numerics.Vectors/src/System/Numerics/Plane.cs
    startLine: 21
  assemblies:
  - System.Numerics.Vectors
  namespace: System.Numerics
  summary: 'The distance of the plane along its normal from the origin. '
  syntax:
    content: public float D
    content.vb: Public D As Single
    return:
      type: System.Single
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Numerics.Plane.Normal
  commentId: F:System.Numerics.Plane.Normal
  id: Normal
  parent: System.Numerics.Plane
  langs:
  - csharp
  - vb
  name: Normal
  fullName: System.Numerics.Plane.Normal
  type: Field
  source:
    remote:
      path: src/System.Numerics.Vectors/src/System/Numerics/Plane.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Normal
    path: src/System.Numerics.Vectors/src/System/Numerics/Plane.cs
    startLine: 17
  assemblies:
  - System.Numerics.Vectors
  namespace: System.Numerics
  summary: 'The normal vector of the plane. '
  syntax:
    content: public Vector3 Normal
    content.vb: Public Normal As Vector3
    return:
      type: System.Numerics.Vector3
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Numerics.Plane.#ctor(System.Numerics.Vector3,System.Single)
  commentId: M:System.Numerics.Plane.#ctor(System.Numerics.Vector3,System.Single)
  id: '#ctor(System.Numerics.Vector3,System.Single)'
  parent: System.Numerics.Plane
  langs:
  - csharp
  - vb
  name: Plane(Vector3, Single)
  fullName: System.Numerics.Plane.Plane(System.Numerics.Vector3, System.Single)
  type: Constructor
  source:
    remote:
      path: src/System.Numerics.Vectors/src/System/Numerics/Plane.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Numerics.Vectors/src/System/Numerics/Plane.cs
    startLine: 41
  assemblies:
  - System.Numerics.Vectors
  namespace: System.Numerics
  summary: 'Creates a <xref href="System.Numerics.Plane" data-throw-if-not-resolved="false"></xref> object from a specified normal and the distance along the normal from the origin. '
  syntax:
    content: public Plane(Vector3 normal, float d)
    content.vb: Public Sub New(normal As Vector3, d As Single)
    parameters:
    - id: normal
      type: System.Numerics.Vector3
      description: 'The plane''s normal vector. '
    - id: d
      type: System.Single
      description: 'The plane''s distance from the origin along its normal vector. '
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Numerics.Plane.#ctor(System.Numerics.Vector4)
  commentId: M:System.Numerics.Plane.#ctor(System.Numerics.Vector4)
  id: '#ctor(System.Numerics.Vector4)'
  parent: System.Numerics.Plane
  langs:
  - csharp
  - vb
  name: Plane(Vector4)
  fullName: System.Numerics.Plane.Plane(System.Numerics.Vector4)
  type: Constructor
  source:
    remote:
      path: src/System.Numerics.Vectors/src/System/Numerics/Plane.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Numerics.Vectors/src/System/Numerics/Plane.cs
    startLine: 52
  assemblies:
  - System.Numerics.Vectors
  namespace: System.Numerics
  summary: 'Creates a <xref href="System.Numerics.Plane" data-throw-if-not-resolved="false"></xref> object from a specified four-dimensional vector. '
  syntax:
    content: public Plane(Vector4 value)
    content.vb: Public Sub New(value As Vector4)
    parameters:
    - id: value
      type: System.Numerics.Vector4
      description: 'A vector whose first three elements describe the normal vector, and whose <xref href="System.Numerics.Vector4.W" data-throw-if-not-resolved="false"></xref> defines the distance along that normal from the origin. '
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Numerics.Plane.#ctor(System.Single,System.Single,System.Single,System.Single)
  commentId: M:System.Numerics.Plane.#ctor(System.Single,System.Single,System.Single,System.Single)
  id: '#ctor(System.Single,System.Single,System.Single,System.Single)'
  parent: System.Numerics.Plane
  langs:
  - csharp
  - vb
  name: Plane(Single, Single, Single, Single)
  fullName: System.Numerics.Plane.Plane(System.Single, System.Single, System.Single, System.Single)
  type: Constructor
  source:
    remote:
      path: src/System.Numerics.Vectors/src/System/Numerics/Plane.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Numerics.Vectors/src/System/Numerics/Plane.cs
    startLine: 30
  assemblies:
  - System.Numerics.Vectors
  namespace: System.Numerics
  summary: 'Creates a <xref href="System.Numerics.Plane" data-throw-if-not-resolved="false"></xref> object from the X, Y, and Z components of its normal, and its distance from the origin on that normal.  '
  syntax:
    content: public Plane(float x, float y, float z, float d)
    content.vb: Public Sub New(x As Single, y As Single, z As Single, d As Single)
    parameters:
    - id: x
      type: System.Single
      description: 'The X component of the normal. '
    - id: y
      type: System.Single
      description: 'The Y component of the normal. '
    - id: z
      type: System.Single
      description: 'The Z component of the normal. '
    - id: d
      type: System.Single
      description: 'The distance of the plane along its normal from the origin. '
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Numerics.Plane.CreateFromVertices(System.Numerics.Vector3,System.Numerics.Vector3,System.Numerics.Vector3)
  commentId: M:System.Numerics.Plane.CreateFromVertices(System.Numerics.Vector3,System.Numerics.Vector3,System.Numerics.Vector3)
  id: CreateFromVertices(System.Numerics.Vector3,System.Numerics.Vector3,System.Numerics.Vector3)
  parent: System.Numerics.Plane
  langs:
  - csharp
  - vb
  name: CreateFromVertices(Vector3, Vector3, Vector3)
  fullName: System.Numerics.Plane.CreateFromVertices(System.Numerics.Vector3, System.Numerics.Vector3, System.Numerics.Vector3)
  type: Method
  source:
    remote:
      path: src/System.Numerics.Vectors/src/System/Numerics/Plane.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CreateFromVertices
    path: src/System.Numerics.Vectors/src/System/Numerics/Plane.cs
    startLine: 65
  assemblies:
  - System.Numerics.Vectors
  namespace: System.Numerics
  summary: 'Creates a <xref href="System.Numerics.Plane" data-throw-if-not-resolved="false"></xref> object that contains three specified points. '
  syntax:
    content: public static Plane CreateFromVertices(Vector3 point1, Vector3 point2, Vector3 point3)
    content.vb: Public Shared Function CreateFromVertices(point1 As Vector3, point2 As Vector3, point3 As Vector3) As Plane
    parameters:
    - id: point1
      type: System.Numerics.Vector3
      description: 'The first point defining the plane. '
    - id: point2
      type: System.Numerics.Vector3
      description: 'The second point defining the plane. '
    - id: point3
      type: System.Numerics.Vector3
      description: 'The third point defining the plane. '
    return:
      type: System.Numerics.Plane
      description: 'The plane containing the three points. '
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Numerics.Plane.Dot(System.Numerics.Plane,System.Numerics.Vector4)
  commentId: M:System.Numerics.Plane.Dot(System.Numerics.Plane,System.Numerics.Vector4)
  id: Dot(System.Numerics.Plane,System.Numerics.Vector4)
  parent: System.Numerics.Plane
  langs:
  - csharp
  - vb
  name: Dot(Plane, Vector4)
  fullName: System.Numerics.Plane.Dot(System.Numerics.Plane, System.Numerics.Vector4)
  type: Method
  source:
    remote:
      path: src/System.Numerics.Vectors/src/System/Numerics/Plane.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Dot
    path: src/System.Numerics.Vectors/src/System/Numerics/Plane.cs
    startLine: 227
  assemblies:
  - System.Numerics.Vectors
  namespace: System.Numerics
  summary: 'Calculates the dot product of a plane and a 4-dimensional vector. '
  syntax:
    content: public static float Dot(Plane plane, Vector4 value)
    content.vb: Public Shared Function Dot(plane As Plane, value As Vector4) As Single
    parameters:
    - id: plane
      type: System.Numerics.Plane
      description: 'The plane. '
    - id: value
      type: System.Numerics.Vector4
      description: 'The four-dimensional vector. '
    return:
      type: System.Single
      description: 'The dot product. '
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Numerics.Plane.DotCoordinate(System.Numerics.Plane,System.Numerics.Vector3)
  commentId: M:System.Numerics.Plane.DotCoordinate(System.Numerics.Plane,System.Numerics.Vector3)
  id: DotCoordinate(System.Numerics.Plane,System.Numerics.Vector3)
  parent: System.Numerics.Plane
  langs:
  - csharp
  - vb
  name: DotCoordinate(Plane, Vector3)
  fullName: System.Numerics.Plane.DotCoordinate(System.Numerics.Plane, System.Numerics.Vector3)
  type: Method
  source:
    remote:
      path: src/System.Numerics.Vectors/src/System/Numerics/Plane.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: DotCoordinate
    path: src/System.Numerics.Vectors/src/System/Numerics/Plane.cs
    startLine: 242
  assemblies:
  - System.Numerics.Vectors
  namespace: System.Numerics
  summary: Returns the dot product of a specified three-dimensional vector and the normal vector of this plane plus the distance (<xref href="System.Numerics.Plane.D" data-throw-if-not-resolved="false"></xref>) value of the plane.
  syntax:
    content: public static float DotCoordinate(Plane plane, Vector3 value)
    content.vb: Public Shared Function DotCoordinate(plane As Plane, value As Vector3) As Single
    parameters:
    - id: plane
      type: System.Numerics.Plane
      description: 'The plane. '
    - id: value
      type: System.Numerics.Vector3
      description: 'The 3-dimensional vector. '
    return:
      type: System.Single
      description: 'The dot product. '
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Numerics.Plane.DotNormal(System.Numerics.Plane,System.Numerics.Vector3)
  commentId: M:System.Numerics.Plane.DotNormal(System.Numerics.Plane,System.Numerics.Vector3)
  id: DotNormal(System.Numerics.Plane,System.Numerics.Vector3)
  parent: System.Numerics.Plane
  langs:
  - csharp
  - vb
  name: DotNormal(Plane, Vector3)
  fullName: System.Numerics.Plane.DotNormal(System.Numerics.Plane, System.Numerics.Vector3)
  type: Method
  source:
    remote:
      path: src/System.Numerics.Vectors/src/System/Numerics/Plane.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: DotNormal
    path: src/System.Numerics.Vectors/src/System/Numerics/Plane.cs
    startLine: 264
  assemblies:
  - System.Numerics.Vectors
  namespace: System.Numerics
  summary: Returns the dot product of a specified three-dimensional vector and the <xref href="System.Numerics.Plane.Normal" data-throw-if-not-resolved="false"></xref> vector of this plane.
  syntax:
    content: public static float DotNormal(Plane plane, Vector3 value)
    content.vb: Public Shared Function DotNormal(plane As Plane, value As Vector3) As Single
    parameters:
    - id: plane
      type: System.Numerics.Plane
      description: 'The plane. '
    - id: value
      type: System.Numerics.Vector3
      description: 'The three-dimensional vector. '
    return:
      type: System.Single
      description: 'The dot product. '
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Numerics.Plane.Equals(System.Numerics.Plane)
  commentId: M:System.Numerics.Plane.Equals(System.Numerics.Plane)
  id: Equals(System.Numerics.Plane)
  parent: System.Numerics.Plane
  langs:
  - csharp
  - vb
  name: Equals(Plane)
  fullName: System.Numerics.Plane.Equals(System.Numerics.Plane)
  type: Method
  source:
    remote:
      path: src/System.Numerics.Vectors/src/System/Numerics/Plane.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Equals
    path: src/System.Numerics.Vectors/src/System/Numerics/Plane.cs
    startLine: 314
  assemblies:
  - System.Numerics.Vectors
  namespace: System.Numerics
  summary: Returns a value that indicates whether this instance and another plane object are equal.
  syntax:
    content: public bool Equals(Plane other)
    content.vb: Public Function Equals(other As Plane) As Boolean
    parameters:
    - id: other
      type: System.Numerics.Plane
      description: 'The other plane. '
    return:
      type: System.Boolean
      description: 'true if the two planes are equal; otherwise, false. '
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Numerics.Plane.Equals(System.Object)
  commentId: M:System.Numerics.Plane.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Numerics.Plane
  langs:
  - csharp
  - vb
  name: Equals(Object)
  fullName: System.Numerics.Plane.Equals(System.Object)
  type: Method
  source:
    remote:
      path: src/System.Numerics.Vectors/src/System/Numerics/Plane.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Equals
    path: src/System.Numerics.Vectors/src/System/Numerics/Plane.cs
    startLine: 335
  assemblies:
  - System.Numerics.Vectors
  namespace: System.Numerics
  summary: 'Returns a value that indicates whether this instance and a specified object are equal. '
  syntax:
    content: public override bool Equals(object obj)
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
    parameters:
    - id: obj
      type: System.Object
      description: 'The object to compare with the current instance. '
    return:
      type: System.Boolean
      description: 'true if the current instance and <em>obj</em> are equal; otherwise, false. If <em>obj</em> is null, the method returns false. '
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Numerics.Plane.GetHashCode
  commentId: M:System.Numerics.Plane.GetHashCode
  id: GetHashCode
  parent: System.Numerics.Plane
  langs:
  - csharp
  - vb
  name: GetHashCode()
  fullName: System.Numerics.Plane.GetHashCode()
  type: Method
  source:
    remote:
      path: src/System.Numerics.Vectors/src/System/Numerics/Plane.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetHashCode
    path: src/System.Numerics.Vectors/src/System/Numerics/Plane.cs
    startLine: 361
  assemblies:
  - System.Numerics.Vectors
  namespace: System.Numerics
  summary: 'Returns the hash code for this instance. '
  syntax:
    content: public override int GetHashCode()
    content.vb: Public Overrides Function GetHashCode As Integer
    return:
      type: System.Int32
      description: 'The hash code. '
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Numerics.Plane.Normalize(System.Numerics.Plane)
  commentId: M:System.Numerics.Plane.Normalize(System.Numerics.Plane)
  id: Normalize(System.Numerics.Plane)
  parent: System.Numerics.Plane
  langs:
  - csharp
  - vb
  name: Normalize(Plane)
  fullName: System.Numerics.Plane.Normalize(System.Numerics.Plane)
  type: Method
  source:
    remote:
      path: src/System.Numerics.Vectors/src/System/Numerics/Plane.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Normalize
    path: src/System.Numerics.Vectors/src/System/Numerics/Plane.cs
    startLine: 117
  assemblies:
  - System.Numerics.Vectors
  namespace: System.Numerics
  summary: 'Creates a new <xref href="System.Numerics.Plane" data-throw-if-not-resolved="false"></xref> object whose normal vector is the source plane''s normal vector normalized. '
  syntax:
    content: public static Plane Normalize(Plane value)
    content.vb: Public Shared Function Normalize(value As Plane) As Plane
    parameters:
    - id: value
      type: System.Numerics.Plane
      description: 'The source plane. '
    return:
      type: System.Numerics.Plane
      description: 'The normalized plane. '
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Numerics.Plane.op_Equality(System.Numerics.Plane,System.Numerics.Plane)
  commentId: M:System.Numerics.Plane.op_Equality(System.Numerics.Plane,System.Numerics.Plane)
  id: op_Equality(System.Numerics.Plane,System.Numerics.Plane)
  parent: System.Numerics.Plane
  langs:
  - csharp
  - vb
  name: Equality(Plane, Plane)
  fullName: System.Numerics.Plane.Equality(System.Numerics.Plane, System.Numerics.Plane)
  type: Operator
  source:
    remote:
      path: src/System.Numerics.Vectors/src/System/Numerics/Plane.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_Equality
    path: src/System.Numerics.Vectors/src/System/Numerics/Plane.cs
    startLine: 285
  assemblies:
  - System.Numerics.Vectors
  namespace: System.Numerics
  summary: 'Returns a value that indicates whether two planes are equal.  '
  syntax:
    content: public static bool operator ==(Plane value1, Plane value2)
    content.vb: Public Shared Operator =(value1 As Plane, value2 As Plane) As Boolean
    parameters:
    - id: value1
      type: System.Numerics.Plane
      description: 'The first plane to compare. '
    - id: value2
      type: System.Numerics.Plane
      description: 'The second plane to compare. '
    return:
      type: System.Boolean
      description: true if <em>value1</em> and <em>value2</em> are equal; otherwise, false.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Numerics.Plane.op_Inequality(System.Numerics.Plane,System.Numerics.Plane)
  commentId: M:System.Numerics.Plane.op_Inequality(System.Numerics.Plane,System.Numerics.Plane)
  id: op_Inequality(System.Numerics.Plane,System.Numerics.Plane)
  parent: System.Numerics.Plane
  langs:
  - csharp
  - vb
  name: Inequality(Plane, Plane)
  fullName: System.Numerics.Plane.Inequality(System.Numerics.Plane, System.Numerics.Plane)
  type: Operator
  source:
    remote:
      path: src/System.Numerics.Vectors/src/System/Numerics/Plane.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_Inequality
    path: src/System.Numerics.Vectors/src/System/Numerics/Plane.cs
    startLine: 300
  assemblies:
  - System.Numerics.Vectors
  namespace: System.Numerics
  summary: 'Returns a value that indicates whether two planes are not equal.  '
  syntax:
    content: public static bool operator !=(Plane value1, Plane value2)
    content.vb: Public Shared Operator <>(value1 As Plane, value2 As Plane) As Boolean
    parameters:
    - id: value1
      type: System.Numerics.Plane
      description: 'The first plane to compare. '
    - id: value2
      type: System.Numerics.Plane
      description: 'The second plane to compare. '
    return:
      type: System.Boolean
      description: 'true if <em>value1</em> and <em>value2</em> are not equal; otherwise, false. '
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Numerics.Plane.ToString
  commentId: M:System.Numerics.Plane.ToString
  id: ToString
  parent: System.Numerics.Plane
  langs:
  - csharp
  - vb
  name: ToString()
  fullName: System.Numerics.Plane.ToString()
  type: Method
  source:
    remote:
      path: src/System.Numerics.Vectors/src/System/Numerics/Plane.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ToString
    path: src/System.Numerics.Vectors/src/System/Numerics/Plane.cs
    startLine: 350
  assemblies:
  - System.Numerics.Vectors
  namespace: System.Numerics
  summary: 'Returns the string representation of this plane object. '
  syntax:
    content: public override string ToString()
    content.vb: Public Overrides Function ToString As String
    return:
      type: System.String
      description: 'A string that represents this <xref href="System.Numerics.Plane" data-throw-if-not-resolved="false"></xref> object. '
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Numerics.Plane.Transform(System.Numerics.Plane,System.Numerics.Matrix4x4)
  commentId: M:System.Numerics.Plane.Transform(System.Numerics.Plane,System.Numerics.Matrix4x4)
  id: Transform(System.Numerics.Plane,System.Numerics.Matrix4x4)
  parent: System.Numerics.Plane
  langs:
  - csharp
  - vb
  name: Transform(Plane, Matrix4x4)
  fullName: System.Numerics.Plane.Transform(System.Numerics.Plane, System.Numerics.Matrix4x4)
  type: Method
  source:
    remote:
      path: src/System.Numerics.Vectors/src/System/Numerics/Plane.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Transform
    path: src/System.Numerics.Vectors/src/System/Numerics/Plane.cs
    startLine: 160
  assemblies:
  - System.Numerics.Vectors
  namespace: System.Numerics
  summary: 'Transforms a normalized plane by a 4x4 matrix. '
  syntax:
    content: public static Plane Transform(Plane plane, Matrix4x4 matrix)
    content.vb: Public Shared Function Transform(plane As Plane, matrix As Matrix4x4) As Plane
    parameters:
    - id: plane
      type: System.Numerics.Plane
      description: 'The normalized plane to transform. '
    - id: matrix
      type: System.Numerics.Matrix4x4
      description: 'The transformation matrix to apply to <em>plane</em>. '
    return:
      type: System.Numerics.Plane
      description: 'The transformed plane. '
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Numerics.Plane.Transform(System.Numerics.Plane,System.Numerics.Quaternion)
  commentId: M:System.Numerics.Plane.Transform(System.Numerics.Plane,System.Numerics.Quaternion)
  id: Transform(System.Numerics.Plane,System.Numerics.Quaternion)
  parent: System.Numerics.Plane
  langs:
  - csharp
  - vb
  name: Transform(Plane, Quaternion)
  fullName: System.Numerics.Plane.Transform(System.Numerics.Plane, System.Numerics.Quaternion)
  type: Method
  source:
    remote:
      path: src/System.Numerics.Vectors/src/System/Numerics/Plane.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Transform
    path: src/System.Numerics.Vectors/src/System/Numerics/Plane.cs
    startLine: 182
  assemblies:
  - System.Numerics.Vectors
  namespace: System.Numerics
  summary: 'Transforms a normalized plane by a Quaternion rotation. '
  syntax:
    content: public static Plane Transform(Plane plane, Quaternion rotation)
    content.vb: Public Shared Function Transform(plane As Plane, rotation As Quaternion) As Plane
    parameters:
    - id: plane
      type: System.Numerics.Plane
      description: 'The normalized plane to transform. '
    - id: rotation
      type: System.Numerics.Quaternion
      description: 'The Quaternion rotation to apply to the plane. '
    return:
      type: System.Numerics.Plane
      description: 'A new plane that results from applying the Quaternion rotation. '
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: System.Numerics
  isExternal: false
  name: System.Numerics
  fullName: System.Numerics
- uid: System.IEquatable{System.Numerics.Plane}
  definition: System.IEquatable`1
  name: IEquatable<Plane>
  fullName: System.IEquatable<System.Numerics.Plane>
  fullname.vb: System.IEquatable(Of System.Numerics.Plane)
  name.vb: IEquatable(Of Plane)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Numerics.Plane
    name: Plane
    fullName: System.Numerics.Plane
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Numerics.Plane
    name: Plane
    fullName: System.Numerics.Plane
  - name: )
    fullName: )
- uid: System.IEquatable`1
  parent: System
  isExternal: false
  name: IEquatable<>
  fullName: System.IEquatable<>
  fullname.vb: System.IEquatable(Of )
  name.vb: IEquatable(Of )
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    fullName: System.IEquatable
  - name: <
    fullName: <
  - {}
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    fullName: System.IEquatable
  - name: '(Of '
    fullName: '(Of '
  - {}
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Single
  parent: System
  isExternal: false
  name: Single
  fullName: System.Single
- uid: System.Numerics.Vector3
  parent: System.Numerics
  isExternal: false
  name: Vector3
  fullName: System.Numerics.Vector3
- uid: System.Numerics.Vector4
  parent: System.Numerics
  isExternal: false
  name: Vector4
  fullName: System.Numerics.Vector4
- uid: System.Numerics.Plane
  parent: System.Numerics
  isExternal: false
  name: Plane
  fullName: System.Numerics.Plane
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  fullName: System.Boolean
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  fullName: System.Int32
- uid: System.String
  parent: System
  isExternal: false
  name: String
  fullName: System.String
- uid: System.Numerics.Matrix4x4
  parent: System.Numerics
  isExternal: false
  name: Matrix4x4
  fullName: System.Numerics.Matrix4x4
- uid: System.Numerics.Quaternion
  parent: System.Numerics
  isExternal: false
  name: Quaternion
  fullName: System.Numerics.Quaternion
