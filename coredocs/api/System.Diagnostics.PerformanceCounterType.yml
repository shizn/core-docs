items:
- uid: System.Diagnostics.PerformanceCounterType
  commentId: T:System.Diagnostics.PerformanceCounterType
  id: PerformanceCounterType
  parent: System.Diagnostics
  children:
  - System.Diagnostics.PerformanceCounterType.AverageBase
  - System.Diagnostics.PerformanceCounterType.AverageCount64
  - System.Diagnostics.PerformanceCounterType.AverageTimer32
  - System.Diagnostics.PerformanceCounterType.CounterDelta32
  - System.Diagnostics.PerformanceCounterType.CounterDelta64
  - System.Diagnostics.PerformanceCounterType.CounterMultiBase
  - System.Diagnostics.PerformanceCounterType.CounterMultiTimer
  - System.Diagnostics.PerformanceCounterType.CounterMultiTimer100Ns
  - System.Diagnostics.PerformanceCounterType.CounterMultiTimer100NsInverse
  - System.Diagnostics.PerformanceCounterType.CounterMultiTimerInverse
  - System.Diagnostics.PerformanceCounterType.CounterTimer
  - System.Diagnostics.PerformanceCounterType.CounterTimerInverse
  - System.Diagnostics.PerformanceCounterType.CountPerTimeInterval32
  - System.Diagnostics.PerformanceCounterType.CountPerTimeInterval64
  - System.Diagnostics.PerformanceCounterType.ElapsedTime
  - System.Diagnostics.PerformanceCounterType.NumberOfItems32
  - System.Diagnostics.PerformanceCounterType.NumberOfItems64
  - System.Diagnostics.PerformanceCounterType.NumberOfItemsHEX32
  - System.Diagnostics.PerformanceCounterType.NumberOfItemsHEX64
  - System.Diagnostics.PerformanceCounterType.RateOfCountsPerSecond32
  - System.Diagnostics.PerformanceCounterType.RateOfCountsPerSecond64
  - System.Diagnostics.PerformanceCounterType.RawBase
  - System.Diagnostics.PerformanceCounterType.RawFraction
  - System.Diagnostics.PerformanceCounterType.SampleBase
  - System.Diagnostics.PerformanceCounterType.SampleCounter
  - System.Diagnostics.PerformanceCounterType.SampleFraction
  - System.Diagnostics.PerformanceCounterType.Timer100Ns
  - System.Diagnostics.PerformanceCounterType.Timer100NsInverse
  langs:
  - csharp
  - vb
  name: PerformanceCounterType
  fullName: System.Diagnostics.PerformanceCounterType
  type: Enum
  source:
    remote:
      path: src/System.Diagnostics.PerformanceCounter/ref/System.Diagnostics.PerformanceCounter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: PerformanceCounterType
    path: src/System.Diagnostics.PerformanceCounter/ref/System.Diagnostics.PerformanceCounter.cs
    startLine: 71
  assemblies:
  - System.Diagnostics.PerformanceCounter
  namespace: System.Diagnostics
  summary: Specifies the formula used to calculate the <xref href="System.Diagnostics.PerformanceCounter.NextValue" data-throw-if-not-resolved="false"></xref> method for a <xref href="System.Diagnostics.PerformanceCounter" data-throw-if-not-resolved="false"></xref> instance.
  syntax:
    content: 'public enum PerformanceCounterType : int'
    content.vb: Public Enum PerformanceCounterType As Integer
  modifiers.csharp:
  - public
  - enum
  modifiers.vb:
  - Public
  - Enum
- uid: System.Diagnostics.PerformanceCounterType.AverageBase
  commentId: F:System.Diagnostics.PerformanceCounterType.AverageBase
  id: AverageBase
  parent: System.Diagnostics.PerformanceCounterType
  langs:
  - csharp
  - vb
  name: AverageBase
  fullName: System.Diagnostics.PerformanceCounterType.AverageBase
  type: Field
  source:
    remote:
      path: src/System.Diagnostics.PerformanceCounter/ref/System.Diagnostics.PerformanceCounter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: AverageBase
    path: src/System.Diagnostics.PerformanceCounter/ref/System.Diagnostics.PerformanceCounter.cs
    startLine: 73
  assemblies:
  - System.Diagnostics.PerformanceCounter
  namespace: System.Diagnostics
  summary: A base counter that is used in the calculation of time or count averages, such as AverageTimer32 and AverageCount64. Stores the denominator for calculating a counter to present "time per operation" or "count per operation".
  syntax:
    content: AverageBase = null
    content.vb: AverageBase = Nothing
    return:
      type: System.Diagnostics.PerformanceCounterType
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Diagnostics.PerformanceCounterType.AverageCount64
  commentId: F:System.Diagnostics.PerformanceCounterType.AverageCount64
  id: AverageCount64
  parent: System.Diagnostics.PerformanceCounterType
  langs:
  - csharp
  - vb
  name: AverageCount64
  fullName: System.Diagnostics.PerformanceCounterType.AverageCount64
  type: Field
  source:
    remote:
      path: src/System.Diagnostics.PerformanceCounter/ref/System.Diagnostics.PerformanceCounter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: AverageCount64
    path: src/System.Diagnostics.PerformanceCounter/ref/System.Diagnostics.PerformanceCounter.cs
    startLine: 74
  assemblies:
  - System.Diagnostics.PerformanceCounter
  namespace: System.Diagnostics
  summary: An average counter that shows how many items are processed, on average, during an operation. Counters of this type display a ratio of the items processed to the number of operations completed. The ratio is calculated by comparing the number of items processed during the last interval to the number of operations completed during the last interval.
  syntax:
    content: AverageCount64 = null
    content.vb: AverageCount64 = Nothing
    return:
      type: System.Diagnostics.PerformanceCounterType
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Diagnostics.PerformanceCounterType.AverageTimer32
  commentId: F:System.Diagnostics.PerformanceCounterType.AverageTimer32
  id: AverageTimer32
  parent: System.Diagnostics.PerformanceCounterType
  langs:
  - csharp
  - vb
  name: AverageTimer32
  fullName: System.Diagnostics.PerformanceCounterType.AverageTimer32
  type: Field
  source:
    remote:
      path: src/System.Diagnostics.PerformanceCounter/ref/System.Diagnostics.PerformanceCounter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: AverageTimer32
    path: src/System.Diagnostics.PerformanceCounter/ref/System.Diagnostics.PerformanceCounter.cs
    startLine: 75
  assemblies:
  - System.Diagnostics.PerformanceCounter
  namespace: System.Diagnostics
  summary: An average counter that measures the time it takes, on average, to complete a process or operation. Counters of this type display a ratio of the total elapsed time of the sample interval to the number of processes or operations completed during that time. This counter type measures time in ticks of the system clock.
  syntax:
    content: AverageTimer32 = null
    content.vb: AverageTimer32 = Nothing
    return:
      type: System.Diagnostics.PerformanceCounterType
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Diagnostics.PerformanceCounterType.CounterDelta32
  commentId: F:System.Diagnostics.PerformanceCounterType.CounterDelta32
  id: CounterDelta32
  parent: System.Diagnostics.PerformanceCounterType
  langs:
  - csharp
  - vb
  name: CounterDelta32
  fullName: System.Diagnostics.PerformanceCounterType.CounterDelta32
  type: Field
  source:
    remote:
      path: src/System.Diagnostics.PerformanceCounter/ref/System.Diagnostics.PerformanceCounter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CounterDelta32
    path: src/System.Diagnostics.PerformanceCounter/ref/System.Diagnostics.PerformanceCounter.cs
    startLine: 76
  assemblies:
  - System.Diagnostics.PerformanceCounter
  namespace: System.Diagnostics
  summary: A difference counter that shows the change in the measured attribute between the two most recent sample intervals.
  syntax:
    content: CounterDelta32 = null
    content.vb: CounterDelta32 = Nothing
    return:
      type: System.Diagnostics.PerformanceCounterType
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Diagnostics.PerformanceCounterType.CounterDelta64
  commentId: F:System.Diagnostics.PerformanceCounterType.CounterDelta64
  id: CounterDelta64
  parent: System.Diagnostics.PerformanceCounterType
  langs:
  - csharp
  - vb
  name: CounterDelta64
  fullName: System.Diagnostics.PerformanceCounterType.CounterDelta64
  type: Field
  source:
    remote:
      path: src/System.Diagnostics.PerformanceCounter/ref/System.Diagnostics.PerformanceCounter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CounterDelta64
    path: src/System.Diagnostics.PerformanceCounter/ref/System.Diagnostics.PerformanceCounter.cs
    startLine: 77
  assemblies:
  - System.Diagnostics.PerformanceCounter
  namespace: System.Diagnostics
  summary: A difference counter that shows the change in the measured attribute between the two most recent sample intervals. It is the same as the CounterDelta32 counter type except that is uses larger fields to accomodate larger values.
  syntax:
    content: CounterDelta64 = null
    content.vb: CounterDelta64 = Nothing
    return:
      type: System.Diagnostics.PerformanceCounterType
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Diagnostics.PerformanceCounterType.CounterMultiBase
  commentId: F:System.Diagnostics.PerformanceCounterType.CounterMultiBase
  id: CounterMultiBase
  parent: System.Diagnostics.PerformanceCounterType
  langs:
  - csharp
  - vb
  name: CounterMultiBase
  fullName: System.Diagnostics.PerformanceCounterType.CounterMultiBase
  type: Field
  source:
    remote:
      path: src/System.Diagnostics.PerformanceCounter/ref/System.Diagnostics.PerformanceCounter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CounterMultiBase
    path: src/System.Diagnostics.PerformanceCounter/ref/System.Diagnostics.PerformanceCounter.cs
    startLine: 78
  assemblies:
  - System.Diagnostics.PerformanceCounter
  namespace: System.Diagnostics
  summary: A base counter that indicates the number of items sampled. It is used as the denominator in the calculations to get an average among the items sampled when taking timings of multiple, but similar items. Used with CounterMultiTimer, CounterMultiTimerInverse, CounterMultiTimer100Ns, and CounterMultiTimer100NsInverse.
  syntax:
    content: CounterMultiBase = null
    content.vb: CounterMultiBase = Nothing
    return:
      type: System.Diagnostics.PerformanceCounterType
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Diagnostics.PerformanceCounterType.CounterMultiTimer
  commentId: F:System.Diagnostics.PerformanceCounterType.CounterMultiTimer
  id: CounterMultiTimer
  parent: System.Diagnostics.PerformanceCounterType
  langs:
  - csharp
  - vb
  name: CounterMultiTimer
  fullName: System.Diagnostics.PerformanceCounterType.CounterMultiTimer
  type: Field
  source:
    remote:
      path: src/System.Diagnostics.PerformanceCounter/ref/System.Diagnostics.PerformanceCounter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CounterMultiTimer
    path: src/System.Diagnostics.PerformanceCounter/ref/System.Diagnostics.PerformanceCounter.cs
    startLine: 79
  assemblies:
  - System.Diagnostics.PerformanceCounter
  namespace: System.Diagnostics
  summary: A percentage counter that displays the active time of one or more components as a percentage of the total time of the sample interval. Because the numerator records the active time of components operating simultaneously, the resulting percentage can exceed 100 percent.
  syntax:
    content: CounterMultiTimer = null
    content.vb: CounterMultiTimer = Nothing
    return:
      type: System.Diagnostics.PerformanceCounterType
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Diagnostics.PerformanceCounterType.CounterMultiTimer100Ns
  commentId: F:System.Diagnostics.PerformanceCounterType.CounterMultiTimer100Ns
  id: CounterMultiTimer100Ns
  parent: System.Diagnostics.PerformanceCounterType
  langs:
  - csharp
  - vb
  name: CounterMultiTimer100Ns
  fullName: System.Diagnostics.PerformanceCounterType.CounterMultiTimer100Ns
  type: Field
  source:
    remote:
      path: src/System.Diagnostics.PerformanceCounter/ref/System.Diagnostics.PerformanceCounter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CounterMultiTimer100Ns
    path: src/System.Diagnostics.PerformanceCounter/ref/System.Diagnostics.PerformanceCounter.cs
    startLine: 80
  assemblies:
  - System.Diagnostics.PerformanceCounter
  namespace: System.Diagnostics
  summary: A percentage counter that shows the active time of one or more components as a percentage of the total time of the sample interval. It measures time in 100 nanosecond (ns) units.
  syntax:
    content: CounterMultiTimer100Ns = null
    content.vb: CounterMultiTimer100Ns = Nothing
    return:
      type: System.Diagnostics.PerformanceCounterType
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Diagnostics.PerformanceCounterType.CounterMultiTimer100NsInverse
  commentId: F:System.Diagnostics.PerformanceCounterType.CounterMultiTimer100NsInverse
  id: CounterMultiTimer100NsInverse
  parent: System.Diagnostics.PerformanceCounterType
  langs:
  - csharp
  - vb
  name: CounterMultiTimer100NsInverse
  fullName: System.Diagnostics.PerformanceCounterType.CounterMultiTimer100NsInverse
  type: Field
  source:
    remote:
      path: src/System.Diagnostics.PerformanceCounter/ref/System.Diagnostics.PerformanceCounter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CounterMultiTimer100NsInverse
    path: src/System.Diagnostics.PerformanceCounter/ref/System.Diagnostics.PerformanceCounter.cs
    startLine: 81
  assemblies:
  - System.Diagnostics.PerformanceCounter
  namespace: System.Diagnostics
  summary: A percentage counter that shows the active time of one or more components as a percentage of the total time of the sample interval. Counters of this type measure time in 100 nanosecond (ns) units. They derive the active time by measuring the time that the components were not active and subtracting the result from multiplying 100 percent by the number of objects monitored.
  syntax:
    content: CounterMultiTimer100NsInverse = null
    content.vb: CounterMultiTimer100NsInverse = Nothing
    return:
      type: System.Diagnostics.PerformanceCounterType
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Diagnostics.PerformanceCounterType.CounterMultiTimerInverse
  commentId: F:System.Diagnostics.PerformanceCounterType.CounterMultiTimerInverse
  id: CounterMultiTimerInverse
  parent: System.Diagnostics.PerformanceCounterType
  langs:
  - csharp
  - vb
  name: CounterMultiTimerInverse
  fullName: System.Diagnostics.PerformanceCounterType.CounterMultiTimerInverse
  type: Field
  source:
    remote:
      path: src/System.Diagnostics.PerformanceCounter/ref/System.Diagnostics.PerformanceCounter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CounterMultiTimerInverse
    path: src/System.Diagnostics.PerformanceCounter/ref/System.Diagnostics.PerformanceCounter.cs
    startLine: 82
  assemblies:
  - System.Diagnostics.PerformanceCounter
  namespace: System.Diagnostics
  summary: A percentage counter that shows the active time of one or more components as a percentage of the total time of the sample interval. It derives the active time by measuring the time that the components were not active and subtracting the result from 100 percent by the number of objects monitored.
  syntax:
    content: CounterMultiTimerInverse = null
    content.vb: CounterMultiTimerInverse = Nothing
    return:
      type: System.Diagnostics.PerformanceCounterType
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Diagnostics.PerformanceCounterType.CounterTimer
  commentId: F:System.Diagnostics.PerformanceCounterType.CounterTimer
  id: CounterTimer
  parent: System.Diagnostics.PerformanceCounterType
  langs:
  - csharp
  - vb
  name: CounterTimer
  fullName: System.Diagnostics.PerformanceCounterType.CounterTimer
  type: Field
  source:
    remote:
      path: src/System.Diagnostics.PerformanceCounter/ref/System.Diagnostics.PerformanceCounter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CounterTimer
    path: src/System.Diagnostics.PerformanceCounter/ref/System.Diagnostics.PerformanceCounter.cs
    startLine: 83
  assemblies:
  - System.Diagnostics.PerformanceCounter
  namespace: System.Diagnostics
  summary: A percentage counter that shows the average time that a component is active as a percentage of the total sample time.
  syntax:
    content: CounterTimer = null
    content.vb: CounterTimer = Nothing
    return:
      type: System.Diagnostics.PerformanceCounterType
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Diagnostics.PerformanceCounterType.CounterTimerInverse
  commentId: F:System.Diagnostics.PerformanceCounterType.CounterTimerInverse
  id: CounterTimerInverse
  parent: System.Diagnostics.PerformanceCounterType
  langs:
  - csharp
  - vb
  name: CounterTimerInverse
  fullName: System.Diagnostics.PerformanceCounterType.CounterTimerInverse
  type: Field
  source:
    remote:
      path: src/System.Diagnostics.PerformanceCounter/ref/System.Diagnostics.PerformanceCounter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CounterTimerInverse
    path: src/System.Diagnostics.PerformanceCounter/ref/System.Diagnostics.PerformanceCounter.cs
    startLine: 84
  assemblies:
  - System.Diagnostics.PerformanceCounter
  namespace: System.Diagnostics
  summary: A percentage counter that displays the average percentage of active time observed during sample interval. The value of these counters is calculated by monitoring the percentage of time that the service was inactive and then subtracting that value from 100 percent.
  syntax:
    content: CounterTimerInverse = null
    content.vb: CounterTimerInverse = Nothing
    return:
      type: System.Diagnostics.PerformanceCounterType
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Diagnostics.PerformanceCounterType.CountPerTimeInterval32
  commentId: F:System.Diagnostics.PerformanceCounterType.CountPerTimeInterval32
  id: CountPerTimeInterval32
  parent: System.Diagnostics.PerformanceCounterType
  langs:
  - csharp
  - vb
  name: CountPerTimeInterval32
  fullName: System.Diagnostics.PerformanceCounterType.CountPerTimeInterval32
  type: Field
  source:
    remote:
      path: src/System.Diagnostics.PerformanceCounter/ref/System.Diagnostics.PerformanceCounter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CountPerTimeInterval32
    path: src/System.Diagnostics.PerformanceCounter/ref/System.Diagnostics.PerformanceCounter.cs
    startLine: 85
  assemblies:
  - System.Diagnostics.PerformanceCounter
  namespace: System.Diagnostics
  summary: An average counter designed to monitor the average length of a queue to a resource over time. It shows the difference between the queue lengths observed during the last two sample intervals divided by the duration of the interval. This type of counter is typically used to track the number of items that are queued or waiting.
  syntax:
    content: CountPerTimeInterval32 = null
    content.vb: CountPerTimeInterval32 = Nothing
    return:
      type: System.Diagnostics.PerformanceCounterType
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Diagnostics.PerformanceCounterType.CountPerTimeInterval64
  commentId: F:System.Diagnostics.PerformanceCounterType.CountPerTimeInterval64
  id: CountPerTimeInterval64
  parent: System.Diagnostics.PerformanceCounterType
  langs:
  - csharp
  - vb
  name: CountPerTimeInterval64
  fullName: System.Diagnostics.PerformanceCounterType.CountPerTimeInterval64
  type: Field
  source:
    remote:
      path: src/System.Diagnostics.PerformanceCounter/ref/System.Diagnostics.PerformanceCounter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CountPerTimeInterval64
    path: src/System.Diagnostics.PerformanceCounter/ref/System.Diagnostics.PerformanceCounter.cs
    startLine: 86
  assemblies:
  - System.Diagnostics.PerformanceCounter
  namespace: System.Diagnostics
  summary: An average counter that monitors the average length of a queue to a resource over time. Counters of this type display the difference between the queue lengths observed during the last two sample intervals, divided by the duration of the interval. This counter type is the same as CountPerTimeInterval32 except that it uses larger fields to accommodate larger values. This type of counter is typically used to track a high-volume or very large number of items that are queued or waiting.
  syntax:
    content: CountPerTimeInterval64 = null
    content.vb: CountPerTimeInterval64 = Nothing
    return:
      type: System.Diagnostics.PerformanceCounterType
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Diagnostics.PerformanceCounterType.ElapsedTime
  commentId: F:System.Diagnostics.PerformanceCounterType.ElapsedTime
  id: ElapsedTime
  parent: System.Diagnostics.PerformanceCounterType
  langs:
  - csharp
  - vb
  name: ElapsedTime
  fullName: System.Diagnostics.PerformanceCounterType.ElapsedTime
  type: Field
  source:
    remote:
      path: src/System.Diagnostics.PerformanceCounter/ref/System.Diagnostics.PerformanceCounter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ElapsedTime
    path: src/System.Diagnostics.PerformanceCounter/ref/System.Diagnostics.PerformanceCounter.cs
    startLine: 87
  assemblies:
  - System.Diagnostics.PerformanceCounter
  namespace: System.Diagnostics
  summary: A difference timer that shows the total time between when the component or process started and the time when this value is calculated.
  syntax:
    content: ElapsedTime = null
    content.vb: ElapsedTime = Nothing
    return:
      type: System.Diagnostics.PerformanceCounterType
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Diagnostics.PerformanceCounterType.NumberOfItems32
  commentId: F:System.Diagnostics.PerformanceCounterType.NumberOfItems32
  id: NumberOfItems32
  parent: System.Diagnostics.PerformanceCounterType
  langs:
  - csharp
  - vb
  name: NumberOfItems32
  fullName: System.Diagnostics.PerformanceCounterType.NumberOfItems32
  type: Field
  source:
    remote:
      path: src/System.Diagnostics.PerformanceCounter/ref/System.Diagnostics.PerformanceCounter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: NumberOfItems32
    path: src/System.Diagnostics.PerformanceCounter/ref/System.Diagnostics.PerformanceCounter.cs
    startLine: 88
  assemblies:
  - System.Diagnostics.PerformanceCounter
  namespace: System.Diagnostics
  summary: An instantaneous counter that shows the most recently observed value. Used, for example, to maintain a simple count of items or operations.
  syntax:
    content: NumberOfItems32 = null
    content.vb: NumberOfItems32 = Nothing
    return:
      type: System.Diagnostics.PerformanceCounterType
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Diagnostics.PerformanceCounterType.NumberOfItems64
  commentId: F:System.Diagnostics.PerformanceCounterType.NumberOfItems64
  id: NumberOfItems64
  parent: System.Diagnostics.PerformanceCounterType
  langs:
  - csharp
  - vb
  name: NumberOfItems64
  fullName: System.Diagnostics.PerformanceCounterType.NumberOfItems64
  type: Field
  source:
    remote:
      path: src/System.Diagnostics.PerformanceCounter/ref/System.Diagnostics.PerformanceCounter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: NumberOfItems64
    path: src/System.Diagnostics.PerformanceCounter/ref/System.Diagnostics.PerformanceCounter.cs
    startLine: 89
  assemblies:
  - System.Diagnostics.PerformanceCounter
  namespace: System.Diagnostics
  summary: An instantaneous counter that shows the most recently observed value. Used, for example, to maintain a simple count of a very large number of items or operations. It is the same as NumberOfItems32 except that it uses larger fields to accommodate larger values.
  syntax:
    content: NumberOfItems64 = null
    content.vb: NumberOfItems64 = Nothing
    return:
      type: System.Diagnostics.PerformanceCounterType
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Diagnostics.PerformanceCounterType.NumberOfItemsHEX32
  commentId: F:System.Diagnostics.PerformanceCounterType.NumberOfItemsHEX32
  id: NumberOfItemsHEX32
  parent: System.Diagnostics.PerformanceCounterType
  langs:
  - csharp
  - vb
  name: NumberOfItemsHEX32
  fullName: System.Diagnostics.PerformanceCounterType.NumberOfItemsHEX32
  type: Field
  source:
    remote:
      path: src/System.Diagnostics.PerformanceCounter/ref/System.Diagnostics.PerformanceCounter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: NumberOfItemsHEX32
    path: src/System.Diagnostics.PerformanceCounter/ref/System.Diagnostics.PerformanceCounter.cs
    startLine: 90
  assemblies:
  - System.Diagnostics.PerformanceCounter
  namespace: System.Diagnostics
  summary: An instantaneous counter that shows the most recently observed value in hexadecimal format. Used, for example, to maintain a simple count of items or operations.
  syntax:
    content: NumberOfItemsHEX32 = null
    content.vb: NumberOfItemsHEX32 = Nothing
    return:
      type: System.Diagnostics.PerformanceCounterType
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Diagnostics.PerformanceCounterType.NumberOfItemsHEX64
  commentId: F:System.Diagnostics.PerformanceCounterType.NumberOfItemsHEX64
  id: NumberOfItemsHEX64
  parent: System.Diagnostics.PerformanceCounterType
  langs:
  - csharp
  - vb
  name: NumberOfItemsHEX64
  fullName: System.Diagnostics.PerformanceCounterType.NumberOfItemsHEX64
  type: Field
  source:
    remote:
      path: src/System.Diagnostics.PerformanceCounter/ref/System.Diagnostics.PerformanceCounter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: NumberOfItemsHEX64
    path: src/System.Diagnostics.PerformanceCounter/ref/System.Diagnostics.PerformanceCounter.cs
    startLine: 91
  assemblies:
  - System.Diagnostics.PerformanceCounter
  namespace: System.Diagnostics
  summary: An instantaneous counter that shows the most recently observed value. Used, for example, to maintain a simple count of a very large number of items or operations. It is the same as NumberOfItemsHEX32 except that it uses larger fields to accommodate larger values.
  syntax:
    content: NumberOfItemsHEX64 = null
    content.vb: NumberOfItemsHEX64 = Nothing
    return:
      type: System.Diagnostics.PerformanceCounterType
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Diagnostics.PerformanceCounterType.RateOfCountsPerSecond32
  commentId: F:System.Diagnostics.PerformanceCounterType.RateOfCountsPerSecond32
  id: RateOfCountsPerSecond32
  parent: System.Diagnostics.PerformanceCounterType
  langs:
  - csharp
  - vb
  name: RateOfCountsPerSecond32
  fullName: System.Diagnostics.PerformanceCounterType.RateOfCountsPerSecond32
  type: Field
  source:
    remote:
      path: src/System.Diagnostics.PerformanceCounter/ref/System.Diagnostics.PerformanceCounter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: RateOfCountsPerSecond32
    path: src/System.Diagnostics.PerformanceCounter/ref/System.Diagnostics.PerformanceCounter.cs
    startLine: 92
  assemblies:
  - System.Diagnostics.PerformanceCounter
  namespace: System.Diagnostics
  summary: A difference counter that shows the average number of operations completed during each second of the sample interval. Counters of this type measure time in ticks of the system clock.
  syntax:
    content: RateOfCountsPerSecond32 = null
    content.vb: RateOfCountsPerSecond32 = Nothing
    return:
      type: System.Diagnostics.PerformanceCounterType
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Diagnostics.PerformanceCounterType.RateOfCountsPerSecond64
  commentId: F:System.Diagnostics.PerformanceCounterType.RateOfCountsPerSecond64
  id: RateOfCountsPerSecond64
  parent: System.Diagnostics.PerformanceCounterType
  langs:
  - csharp
  - vb
  name: RateOfCountsPerSecond64
  fullName: System.Diagnostics.PerformanceCounterType.RateOfCountsPerSecond64
  type: Field
  source:
    remote:
      path: src/System.Diagnostics.PerformanceCounter/ref/System.Diagnostics.PerformanceCounter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: RateOfCountsPerSecond64
    path: src/System.Diagnostics.PerformanceCounter/ref/System.Diagnostics.PerformanceCounter.cs
    startLine: 93
  assemblies:
  - System.Diagnostics.PerformanceCounter
  namespace: System.Diagnostics
  summary: A difference counter that shows the average number of operations completed during each second of the sample interval. Counters of this type measure time in ticks of the system clock. This counter type is the same as the RateOfCountsPerSecond32 type, but it uses larger fields to accommodate larger values to track a high-volume number of items or operations per second, such as a byte-transmission rate.
  syntax:
    content: RateOfCountsPerSecond64 = null
    content.vb: RateOfCountsPerSecond64 = Nothing
    return:
      type: System.Diagnostics.PerformanceCounterType
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Diagnostics.PerformanceCounterType.RawBase
  commentId: F:System.Diagnostics.PerformanceCounterType.RawBase
  id: RawBase
  parent: System.Diagnostics.PerformanceCounterType
  langs:
  - csharp
  - vb
  name: RawBase
  fullName: System.Diagnostics.PerformanceCounterType.RawBase
  type: Field
  source:
    remote:
      path: src/System.Diagnostics.PerformanceCounter/ref/System.Diagnostics.PerformanceCounter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: RawBase
    path: src/System.Diagnostics.PerformanceCounter/ref/System.Diagnostics.PerformanceCounter.cs
    startLine: 94
  assemblies:
  - System.Diagnostics.PerformanceCounter
  namespace: System.Diagnostics
  summary: A base counter that stores the denominator of a counter that presents a general arithmetic fraction. Check that this value is greater than zero before using it as the denominator in a RawFraction value calculation.
  syntax:
    content: RawBase = null
    content.vb: RawBase = Nothing
    return:
      type: System.Diagnostics.PerformanceCounterType
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Diagnostics.PerformanceCounterType.RawFraction
  commentId: F:System.Diagnostics.PerformanceCounterType.RawFraction
  id: RawFraction
  parent: System.Diagnostics.PerformanceCounterType
  langs:
  - csharp
  - vb
  name: RawFraction
  fullName: System.Diagnostics.PerformanceCounterType.RawFraction
  type: Field
  source:
    remote:
      path: src/System.Diagnostics.PerformanceCounter/ref/System.Diagnostics.PerformanceCounter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: RawFraction
    path: src/System.Diagnostics.PerformanceCounter/ref/System.Diagnostics.PerformanceCounter.cs
    startLine: 95
  assemblies:
  - System.Diagnostics.PerformanceCounter
  namespace: System.Diagnostics
  summary: An instantaneous percentage counter that shows the ratio of a subset to its set as a percentage. For example, it compares the number of bytes in use on a disk to the total number of bytes on the disk. Counters of this type display the current percentage only, not an average over time.
  syntax:
    content: RawFraction = null
    content.vb: RawFraction = Nothing
    return:
      type: System.Diagnostics.PerformanceCounterType
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Diagnostics.PerformanceCounterType.SampleBase
  commentId: F:System.Diagnostics.PerformanceCounterType.SampleBase
  id: SampleBase
  parent: System.Diagnostics.PerformanceCounterType
  langs:
  - csharp
  - vb
  name: SampleBase
  fullName: System.Diagnostics.PerformanceCounterType.SampleBase
  type: Field
  source:
    remote:
      path: src/System.Diagnostics.PerformanceCounter/ref/System.Diagnostics.PerformanceCounter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: SampleBase
    path: src/System.Diagnostics.PerformanceCounter/ref/System.Diagnostics.PerformanceCounter.cs
    startLine: 96
  assemblies:
  - System.Diagnostics.PerformanceCounter
  namespace: System.Diagnostics
  summary: A base counter that stores the number of sampling interrupts taken and is used as a denominator in the sampling fraction. The sampling fraction is the number of samples that were 1 (or true) for a sample interrupt. Check that this value is greater than zero before using it as the denominator in a calculation of SampleFraction.
  syntax:
    content: SampleBase = null
    content.vb: SampleBase = Nothing
    return:
      type: System.Diagnostics.PerformanceCounterType
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Diagnostics.PerformanceCounterType.SampleCounter
  commentId: F:System.Diagnostics.PerformanceCounterType.SampleCounter
  id: SampleCounter
  parent: System.Diagnostics.PerformanceCounterType
  langs:
  - csharp
  - vb
  name: SampleCounter
  fullName: System.Diagnostics.PerformanceCounterType.SampleCounter
  type: Field
  source:
    remote:
      path: src/System.Diagnostics.PerformanceCounter/ref/System.Diagnostics.PerformanceCounter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: SampleCounter
    path: src/System.Diagnostics.PerformanceCounter/ref/System.Diagnostics.PerformanceCounter.cs
    startLine: 97
  assemblies:
  - System.Diagnostics.PerformanceCounter
  namespace: System.Diagnostics
  summary: An average counter that shows the average number of operations completed in one second. When a counter of this type samples the data, each sampling interrupt returns one or zero. The counter data is the number of ones that were sampled. It measures time in units of ticks of the system performance timer.
  syntax:
    content: SampleCounter = null
    content.vb: SampleCounter = Nothing
    return:
      type: System.Diagnostics.PerformanceCounterType
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Diagnostics.PerformanceCounterType.SampleFraction
  commentId: F:System.Diagnostics.PerformanceCounterType.SampleFraction
  id: SampleFraction
  parent: System.Diagnostics.PerformanceCounterType
  langs:
  - csharp
  - vb
  name: SampleFraction
  fullName: System.Diagnostics.PerformanceCounterType.SampleFraction
  type: Field
  source:
    remote:
      path: src/System.Diagnostics.PerformanceCounter/ref/System.Diagnostics.PerformanceCounter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: SampleFraction
    path: src/System.Diagnostics.PerformanceCounter/ref/System.Diagnostics.PerformanceCounter.cs
    startLine: 98
  assemblies:
  - System.Diagnostics.PerformanceCounter
  namespace: System.Diagnostics
  summary: A percentage counter that shows the average ratio of hits to all operations during the last two sample intervals.
  syntax:
    content: SampleFraction = null
    content.vb: SampleFraction = Nothing
    return:
      type: System.Diagnostics.PerformanceCounterType
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Diagnostics.PerformanceCounterType.Timer100Ns
  commentId: F:System.Diagnostics.PerformanceCounterType.Timer100Ns
  id: Timer100Ns
  parent: System.Diagnostics.PerformanceCounterType
  langs:
  - csharp
  - vb
  name: Timer100Ns
  fullName: System.Diagnostics.PerformanceCounterType.Timer100Ns
  type: Field
  source:
    remote:
      path: src/System.Diagnostics.PerformanceCounter/ref/System.Diagnostics.PerformanceCounter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Timer100Ns
    path: src/System.Diagnostics.PerformanceCounter/ref/System.Diagnostics.PerformanceCounter.cs
    startLine: 99
  assemblies:
  - System.Diagnostics.PerformanceCounter
  namespace: System.Diagnostics
  summary: A percentage counter that shows the active time of a component as a percentage of the total elapsed time of the sample interval. It measures time in units of 100 nanoseconds (ns). Counters of this type are designed to measure the activity of one component at a time.
  syntax:
    content: Timer100Ns = null
    content.vb: Timer100Ns = Nothing
    return:
      type: System.Diagnostics.PerformanceCounterType
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Diagnostics.PerformanceCounterType.Timer100NsInverse
  commentId: F:System.Diagnostics.PerformanceCounterType.Timer100NsInverse
  id: Timer100NsInverse
  parent: System.Diagnostics.PerformanceCounterType
  langs:
  - csharp
  - vb
  name: Timer100NsInverse
  fullName: System.Diagnostics.PerformanceCounterType.Timer100NsInverse
  type: Field
  source:
    remote:
      path: src/System.Diagnostics.PerformanceCounter/ref/System.Diagnostics.PerformanceCounter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Timer100NsInverse
    path: src/System.Diagnostics.PerformanceCounter/ref/System.Diagnostics.PerformanceCounter.cs
    startLine: 100
  assemblies:
  - System.Diagnostics.PerformanceCounter
  namespace: System.Diagnostics
  summary: A percentage counter that shows the average percentage of active time observed during the sample interval.
  syntax:
    content: Timer100NsInverse = null
    content.vb: Timer100NsInverse = Nothing
    return:
      type: System.Diagnostics.PerformanceCounterType
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
references:
- uid: System.Diagnostics
  isExternal: false
  name: System.Diagnostics
  fullName: System.Diagnostics
- uid: System.Diagnostics.PerformanceCounterType
  parent: System.Diagnostics
  isExternal: false
  name: PerformanceCounterType
  fullName: System.Diagnostics.PerformanceCounterType
