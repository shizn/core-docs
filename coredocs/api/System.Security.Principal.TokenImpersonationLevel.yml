items:
- uid: System.Security.Principal.TokenImpersonationLevel
  commentId: T:System.Security.Principal.TokenImpersonationLevel
  id: TokenImpersonationLevel
  parent: System.Security.Principal
  children:
  - System.Security.Principal.TokenImpersonationLevel.Anonymous
  - System.Security.Principal.TokenImpersonationLevel.Delegation
  - System.Security.Principal.TokenImpersonationLevel.Identification
  - System.Security.Principal.TokenImpersonationLevel.Impersonation
  - System.Security.Principal.TokenImpersonationLevel.None
  langs:
  - csharp
  - vb
  name: TokenImpersonationLevel
  fullName: System.Security.Principal.TokenImpersonationLevel
  type: Enum
  source:
    remote:
      path: src/System.Security.Principal/src/System/Security/Principal/TokenImpersonationLevel.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: TokenImpersonationLevel
    path: src/System.Security.Principal/src/System/Security/Principal/TokenImpersonationLevel.cs
    startLine: 8
  assemblies:
  - System.Security.Principal
  namespace: System.Security.Principal
  summary: Defines security impersonation levels. Security impersonation levels govern the degree to which a server process can act on behalf of a client process.
  syntax:
    content: 'public enum TokenImpersonationLevel : int'
    content.vb: Public Enum TokenImpersonationLevel As Integer
  modifiers.csharp:
  - public
  - enum
  modifiers.vb:
  - Public
  - Enum
- uid: System.Security.Principal.TokenImpersonationLevel.Anonymous
  commentId: F:System.Security.Principal.TokenImpersonationLevel.Anonymous
  id: Anonymous
  parent: System.Security.Principal.TokenImpersonationLevel
  langs:
  - csharp
  - vb
  name: Anonymous
  fullName: System.Security.Principal.TokenImpersonationLevel.Anonymous
  type: Field
  source:
    remote:
      path: src/System.Security.Principal/src/System/Security/Principal/TokenImpersonationLevel.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Anonymous
    path: src/System.Security.Principal/src/System/Security/Principal/TokenImpersonationLevel.cs
    startLine: 11
  assemblies:
  - System.Security.Principal
  namespace: System.Security.Principal
  summary: The server process cannot obtain identification information about the client, and it cannot impersonate the client.
  syntax:
    content: Anonymous = null
    content.vb: Anonymous = Nothing
    return:
      type: System.Security.Principal.TokenImpersonationLevel
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Security.Principal.TokenImpersonationLevel.Delegation
  commentId: F:System.Security.Principal.TokenImpersonationLevel.Delegation
  id: Delegation
  parent: System.Security.Principal.TokenImpersonationLevel
  langs:
  - csharp
  - vb
  name: Delegation
  fullName: System.Security.Principal.TokenImpersonationLevel.Delegation
  type: Field
  source:
    remote:
      path: src/System.Security.Principal/src/System/Security/Principal/TokenImpersonationLevel.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Delegation
    path: src/System.Security.Principal/src/System/Security/Principal/TokenImpersonationLevel.cs
    startLine: 14
  assemblies:
  - System.Security.Principal
  namespace: System.Security.Principal
  summary: The server process can impersonate the client's security context on remote systems.
  syntax:
    content: Delegation = null
    content.vb: Delegation = Nothing
    return:
      type: System.Security.Principal.TokenImpersonationLevel
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Security.Principal.TokenImpersonationLevel.Identification
  commentId: F:System.Security.Principal.TokenImpersonationLevel.Identification
  id: Identification
  parent: System.Security.Principal.TokenImpersonationLevel
  langs:
  - csharp
  - vb
  name: Identification
  fullName: System.Security.Principal.TokenImpersonationLevel.Identification
  type: Field
  source:
    remote:
      path: src/System.Security.Principal/src/System/Security/Principal/TokenImpersonationLevel.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Identification
    path: src/System.Security.Principal/src/System/Security/Principal/TokenImpersonationLevel.cs
    startLine: 12
  assemblies:
  - System.Security.Principal
  namespace: System.Security.Principal
  summary: The server process can obtain information about the client, such as security identifiers and privileges, but it cannot impersonate the client. This is useful for servers that export their own objects, for example, database products that export tables and views. Using the retrieved client-security information, the server can make access-validation decisions without being able to use other services that are using the client's security context.
  syntax:
    content: Identification = null
    content.vb: Identification = Nothing
    return:
      type: System.Security.Principal.TokenImpersonationLevel
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Security.Principal.TokenImpersonationLevel.Impersonation
  commentId: F:System.Security.Principal.TokenImpersonationLevel.Impersonation
  id: Impersonation
  parent: System.Security.Principal.TokenImpersonationLevel
  langs:
  - csharp
  - vb
  name: Impersonation
  fullName: System.Security.Principal.TokenImpersonationLevel.Impersonation
  type: Field
  source:
    remote:
      path: src/System.Security.Principal/src/System/Security/Principal/TokenImpersonationLevel.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Impersonation
    path: src/System.Security.Principal/src/System/Security/Principal/TokenImpersonationLevel.cs
    startLine: 13
  assemblies:
  - System.Security.Principal
  namespace: System.Security.Principal
  summary: The server process can impersonate the client's security context on its local system. The server cannot impersonate the client on remote systems.
  syntax:
    content: Impersonation = null
    content.vb: Impersonation = Nothing
    return:
      type: System.Security.Principal.TokenImpersonationLevel
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Security.Principal.TokenImpersonationLevel.None
  commentId: F:System.Security.Principal.TokenImpersonationLevel.None
  id: None
  parent: System.Security.Principal.TokenImpersonationLevel
  langs:
  - csharp
  - vb
  name: None
  fullName: System.Security.Principal.TokenImpersonationLevel.None
  type: Field
  source:
    remote:
      path: src/System.Security.Principal/src/System/Security/Principal/TokenImpersonationLevel.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: None
    path: src/System.Security.Principal/src/System/Security/Principal/TokenImpersonationLevel.cs
    startLine: 10
  assemblies:
  - System.Security.Principal
  namespace: System.Security.Principal
  summary: An impersonation level is not assigned.
  syntax:
    content: None = null
    content.vb: None = Nothing
    return:
      type: System.Security.Principal.TokenImpersonationLevel
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
references:
- uid: System.Security.Principal
  isExternal: false
  name: System.Security.Principal
  fullName: System.Security.Principal
- uid: System.Security.Principal.TokenImpersonationLevel
  parent: System.Security.Principal
  isExternal: false
  name: Security.Principal.TokenImpersonationLevel
  fullName: System.Security.Principal.TokenImpersonationLevel
