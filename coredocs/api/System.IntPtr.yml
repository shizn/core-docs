items:
- uid: System.IntPtr
  commentId: T:System.IntPtr
  id: IntPtr
  parent: System
  children:
  - System.IntPtr.#ctor(System.Int32)
  - System.IntPtr.#ctor(System.Int64)
  - System.IntPtr.#ctor(System.Void*)
  - System.IntPtr.Add(System.IntPtr,System.Int32)
  - System.IntPtr.Equals(System.Object)
  - System.IntPtr.GetHashCode
  - System.IntPtr.op_Addition(System.IntPtr,System.Int32)
  - System.IntPtr.op_Equality(System.IntPtr,System.IntPtr)
  - System.IntPtr.op_Explicit(System.Int32)~System.IntPtr
  - System.IntPtr.op_Explicit(System.Int64)~System.IntPtr
  - System.IntPtr.op_Explicit(System.IntPtr)~System.Int32
  - System.IntPtr.op_Explicit(System.IntPtr)~System.Int64
  - System.IntPtr.op_Explicit(System.IntPtr)~System.Void*
  - System.IntPtr.op_Explicit(System.Void*)~System.IntPtr
  - System.IntPtr.op_Inequality(System.IntPtr,System.IntPtr)
  - System.IntPtr.op_Subtraction(System.IntPtr,System.Int32)
  - System.IntPtr.Size
  - System.IntPtr.Subtract(System.IntPtr,System.Int32)
  - System.IntPtr.ToInt32
  - System.IntPtr.ToInt64
  - System.IntPtr.ToPointer
  - System.IntPtr.ToString
  - System.IntPtr.ToString(System.String)
  - System.IntPtr.Zero
  langs:
  - csharp
  - vb
  name: IntPtr
  fullName: System.IntPtr
  type: Struct
  source:
    remote:
      path: src/mscorlib/src/System/IntPtr.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: IntPtr
    path: src/mscorlib/src/System/IntPtr.cs
    startLine: 24
  assemblies:
  - System.Runtime
  namespace: System
  summary: A platform-specific type that is used to represent a pointer or a handle.
  syntax:
    content: >-
      [StructLayout(LayoutKind.Sequential)]

      public struct IntPtr
    content.vb: >-
      <StructLayout(LayoutKind.Sequential)>

      Public Structure IntPtr
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.ReferenceEquals(System.Object,System.Object)
  attributes:
  - type: System.Runtime.InteropServices.StructLayoutAttribute
    ctor: System.Runtime.InteropServices.StructLayoutAttribute.#ctor(System.Runtime.InteropServices.LayoutKind)
    arguments:
    - type: System.Runtime.InteropServices.LayoutKind
      value: 0
  modifiers.csharp:
  - public
  - struct
  modifiers.vb:
  - Public
  - Structure
- uid: System.IntPtr.Zero
  commentId: F:System.IntPtr.Zero
  id: Zero
  parent: System.IntPtr
  langs:
  - csharp
  - vb
  name: Zero
  fullName: System.IntPtr.Zero
  type: Field
  source:
    remote:
      path: src/mscorlib/src/System/IntPtr.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Zero
    path: src/mscorlib/src/System/IntPtr.cs
    startLine: 31
  assemblies:
  - System.Runtime
  namespace: System
  summary: A read-only field that represents a pointer or handle that has been initialized to zero.
  syntax:
    content: public static readonly IntPtr Zero
    content.vb: Public Shared ReadOnly Zero As IntPtr
    return:
      type: System.IntPtr
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: System.IntPtr.#ctor(System.Int32)
  commentId: M:System.IntPtr.#ctor(System.Int32)
  id: '#ctor(System.Int32)'
  parent: System.IntPtr
  langs:
  - csharp
  - vb
  name: IntPtr(Int32)
  fullName: System.IntPtr.IntPtr(System.Int32)
  type: Constructor
  source:
    remote:
      path: src/mscorlib/src/System/IntPtr.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: .ctor
    path: src/mscorlib/src/System/IntPtr.cs
    startLine: 42
  assemblies:
  - System.Runtime
  namespace: System
  summary: Initializes a new instance of <xref href="System.IntPtr" data-throw-if-not-resolved="false"></xref> using the specified 32-bit pointer or handle.
  syntax:
    content: public IntPtr(int value)
    content.vb: Public Sub New(value As Integer)
    parameters:
    - id: value
      type: System.Int32
      description: 'A pointer or handle contained in a 32-bit signed integer. '
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.IntPtr.#ctor(System.Int64)
  commentId: M:System.IntPtr.#ctor(System.Int64)
  id: '#ctor(System.Int64)'
  parent: System.IntPtr
  langs:
  - csharp
  - vb
  name: IntPtr(Int64)
  fullName: System.IntPtr.IntPtr(System.Int64)
  type: Constructor
  source:
    remote:
      path: src/mscorlib/src/System/IntPtr.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: .ctor
    path: src/mscorlib/src/System/IntPtr.cs
    startLine: 54
  assemblies:
  - System.Runtime
  namespace: System
  summary: Initializes a new instance of <xref href="System.IntPtr" data-throw-if-not-resolved="false"></xref> using the specified 64-bit pointer.
  syntax:
    content: public IntPtr(long value)
    content.vb: Public Sub New(value As Long)
    parameters:
    - id: value
      type: System.Int64
      description: 'A pointer or handle contained in a 64-bit signed integer. '
  exceptions:
  - type: System.OverflowException
    commentId: T:System.OverflowException
    description: 'On a 32-bit platform, <em>value</em> is too large or too small to represent as an <xref href="System.IntPtr" data-throw-if-not-resolved="false"></xref>. '
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.IntPtr.#ctor(System.Void*)
  commentId: M:System.IntPtr.#ctor(System.Void*)
  id: '#ctor(System.Void*)'
  parent: System.IntPtr
  langs:
  - csharp
  - vb
  name: IntPtr(Void*)
  fullName: System.IntPtr.IntPtr(System.Void*)
  type: Constructor
  source:
    remote:
      path: src/mscorlib/src/System/IntPtr.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: .ctor
    path: src/mscorlib/src/System/IntPtr.cs
    startLine: 66
  assemblies:
  - System.Runtime
  namespace: System
  summary: Initializes a new instance of <xref href="System.IntPtr" data-throw-if-not-resolved="false"></xref> using the specified pointer to an unspecified type.
  syntax:
    content: >-
      [CLSCompliant(false)]

      [SecurityCritical]

      public IntPtr(void *value)
    content.vb: >-
      <CLSCompliant(False)>

      <SecurityCritical>

      Public Sub New(value As  *)
    parameters:
    - id: value
      type: System.Void*
      description: 'A pointer to an unspecified type. '
  attributes:
  - type: System.CLSCompliantAttribute
    ctor: System.CLSCompliantAttribute.#ctor(System.Boolean)
    arguments:
    - type: System.Boolean
      value: false
  - type: System.Security.SecurityCriticalAttribute
    ctor: System.Security.SecurityCriticalAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.IntPtr.Size
  commentId: P:System.IntPtr.Size
  id: Size
  parent: System.IntPtr
  langs:
  - csharp
  - vb
  name: Size
  fullName: System.IntPtr.Size
  type: Property
  source:
    remote:
      path: src/mscorlib/src/System/IntPtr.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Size
    path: src/mscorlib/src/System/IntPtr.cs
    startLine: 271
  assemblies:
  - System.Runtime
  namespace: System
  summary: Gets the size of this instance.
  syntax:
    content: public static int Size { get; }
    content.vb: Public Shared ReadOnly Property Size As Integer
    parameters: []
    return:
      type: System.Int32
      description: The size of a pointer or handle in this process, measured in bytes. The value of this property is 4 in a 32-bit process, and 8 in a 64-bit process. You can define the process type by setting the /platform switch when you compile your code with the C# and Visual Basic compilers.
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: System.IntPtr.Add(System.IntPtr,System.Int32)
  commentId: M:System.IntPtr.Add(System.IntPtr,System.Int32)
  id: Add(System.IntPtr,System.Int32)
  parent: System.IntPtr
  langs:
  - csharp
  - vb
  name: Add(IntPtr, Int32)
  fullName: System.IntPtr.Add(System.IntPtr, System.Int32)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/IntPtr.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Add
    path: src/mscorlib/src/System/IntPtr.cs
    startLine: 237
  assemblies:
  - System.Runtime
  namespace: System
  summary: Adds an offset to the value of a pointer.
  syntax:
    content: public static IntPtr Add(IntPtr pointer, int offset)
    content.vb: Public Shared Function Add(pointer As IntPtr, offset As Integer) As IntPtr
    parameters:
    - id: pointer
      type: System.IntPtr
      description: The pointer to add the offset to.
    - id: offset
      type: System.Int32
      description: The offset to add.
    return:
      type: System.IntPtr
      description: A new pointer that reflects the addition of <em>offset</em> to <em>pointer</em>.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.IntPtr.Equals(System.Object)
  commentId: M:System.IntPtr.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.IntPtr
  langs:
  - csharp
  - vb
  name: Equals(Object)
  fullName: System.IntPtr.Equals(System.Object)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/IntPtr.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Equals
    path: src/mscorlib/src/System/IntPtr.cs
    startLine: 101
  assemblies:
  - System.Runtime
  namespace: System
  summary: Returns a value indicating whether this instance is equal to a specified object.
  syntax:
    content: public override bool Equals(object obj)
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
    parameters:
    - id: obj
      type: System.Object
      description: 'An object to compare with this instance or null. '
    return:
      type: System.Boolean
      description: true if <em>obj</em> is an instance of <xref href="System.IntPtr" data-throw-if-not-resolved="false"></xref> and equals the value of this instance; otherwise, false.
  overridden: System.ValueType.Equals(System.Object)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.IntPtr.GetHashCode
  commentId: M:System.IntPtr.GetHashCode
  id: GetHashCode
  parent: System.IntPtr
  langs:
  - csharp
  - vb
  name: GetHashCode()
  fullName: System.IntPtr.GetHashCode()
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/IntPtr.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: GetHashCode
    path: src/mscorlib/src/System/IntPtr.cs
    startLine: 109
  assemblies:
  - System.Runtime
  namespace: System
  summary: Returns the hash code for this instance.
  syntax:
    content: public override int GetHashCode()
    content.vb: Public Overrides Function GetHashCode As Integer
    return:
      type: System.Int32
      description: A 32-bit signed integer hash code.
  overridden: System.ValueType.GetHashCode
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.IntPtr.op_Addition(System.IntPtr,System.Int32)
  commentId: M:System.IntPtr.op_Addition(System.IntPtr,System.Int32)
  id: op_Addition(System.IntPtr,System.Int32)
  parent: System.IntPtr
  langs:
  - csharp
  - vb
  name: Addition(IntPtr, Int32)
  fullName: System.IntPtr.Addition(System.IntPtr, System.Int32)
  type: Operator
  source:
    remote:
      path: src/mscorlib/src/System/IntPtr.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: op_Addition
    path: src/mscorlib/src/System/IntPtr.cs
    startLine: 244
  assemblies:
  - System.Runtime
  namespace: System
  summary: Adds an offset to the value of a pointer.
  syntax:
    content: public static IntPtr operator +(IntPtr pointer, int offset)
    content.vb: Public Shared Operator +(pointer As IntPtr, offset As Integer) As IntPtr
    parameters:
    - id: pointer
      type: System.IntPtr
      description: The pointer to add the offset to.
    - id: offset
      type: System.Int32
      description: The offset to add.
    return:
      type: System.IntPtr
      description: A new pointer that reflects the addition of <em>offset</em> to <em>pointer</em>.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.IntPtr.op_Equality(System.IntPtr,System.IntPtr)
  commentId: M:System.IntPtr.op_Equality(System.IntPtr,System.IntPtr)
  id: op_Equality(System.IntPtr,System.IntPtr)
  parent: System.IntPtr
  langs:
  - csharp
  - vb
  name: Equality(IntPtr, IntPtr)
  fullName: System.IntPtr.Equality(System.IntPtr, System.IntPtr)
  type: Operator
  source:
    remote:
      path: src/mscorlib/src/System/IntPtr.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: op_Equality
    path: src/mscorlib/src/System/IntPtr.cs
    startLine: 221
  assemblies:
  - System.Runtime
  namespace: System
  summary: Determines whether two specified instances of <xref href="System.IntPtr" data-throw-if-not-resolved="false"></xref> are equal.
  syntax:
    content: public static bool operator ==(IntPtr value1, IntPtr value2)
    content.vb: Public Shared Operator =(value1 As IntPtr, value2 As IntPtr) As Boolean
    parameters:
    - id: value1
      type: System.IntPtr
      description: The first pointer or handle to compare.
    - id: value2
      type: System.IntPtr
      description: The second pointer or handle to compare.
    return:
      type: System.Boolean
      description: true if <em>value1</em> equals <em>value2</em>; otherwise, false.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.IntPtr.op_Explicit(System.Int32)~System.IntPtr
  commentId: M:System.IntPtr.op_Explicit(System.Int32)~System.IntPtr
  id: op_Explicit(System.Int32)~System.IntPtr
  parent: System.IntPtr
  langs:
  - csharp
  - vb
  name: Explicit(Int32 to IntPtr)
  fullName: System.IntPtr.Explicit(System.Int32 to System.IntPtr)
  type: Operator
  source:
    remote:
      path: src/mscorlib/src/System/IntPtr.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: op_Explicit
    path: src/mscorlib/src/System/IntPtr.cs
    startLine: 168
  assemblies:
  - System.Runtime
  namespace: System
  summary: Converts the value of a 32-bit signed integer to an <xref href="System.IntPtr" data-throw-if-not-resolved="false"></xref>.
  syntax:
    content: public static explicit operator IntPtr(int value)
    content.vb: Public Shared Narrowing Operator CType(value As Integer) As IntPtr
    parameters:
    - id: value
      type: System.Int32
      description: 'A 32-bit signed integer. '
    return:
      type: System.IntPtr
      description: A new instance of <xref href="System.IntPtr" data-throw-if-not-resolved="false"></xref> initialized to <em>value</em>.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.IntPtr.Narrowing(System.Int32 to System.IntPtr)
  name.vb: Narrowing(Int32 to IntPtr)
- uid: System.IntPtr.op_Explicit(System.Int64)~System.IntPtr
  commentId: M:System.IntPtr.op_Explicit(System.Int64)~System.IntPtr
  id: op_Explicit(System.Int64)~System.IntPtr
  parent: System.IntPtr
  langs:
  - csharp
  - vb
  name: Explicit(Int64 to IntPtr)
  fullName: System.IntPtr.Explicit(System.Int64 to System.IntPtr)
  type: Operator
  source:
    remote:
      path: src/mscorlib/src/System/IntPtr.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: op_Explicit
    path: src/mscorlib/src/System/IntPtr.cs
    startLine: 175
  assemblies:
  - System.Runtime
  namespace: System
  summary: Converts the value of a 64-bit signed integer to an <xref href="System.IntPtr" data-throw-if-not-resolved="false"></xref>.
  syntax:
    content: public static explicit operator IntPtr(long value)
    content.vb: Public Shared Narrowing Operator CType(value As Long) As IntPtr
    parameters:
    - id: value
      type: System.Int64
      description: 'A 64-bit signed integer. '
    return:
      type: System.IntPtr
      description: A new instance of <xref href="System.IntPtr" data-throw-if-not-resolved="false"></xref> initialized to <em>value</em>.
  exceptions:
  - type: System.OverflowException
    commentId: T:System.OverflowException
    description: 'On a 32-bit platform, <em>value</em> is too large to represent as an <xref href="System.IntPtr" data-throw-if-not-resolved="false"></xref>. '
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.IntPtr.Narrowing(System.Int64 to System.IntPtr)
  name.vb: Narrowing(Int64 to IntPtr)
- uid: System.IntPtr.op_Explicit(System.IntPtr)~System.Int32
  commentId: M:System.IntPtr.op_Explicit(System.IntPtr)~System.Int32
  id: op_Explicit(System.IntPtr)~System.Int32
  parent: System.IntPtr
  langs:
  - csharp
  - vb
  name: Explicit(IntPtr to Int32)
  fullName: System.IntPtr.Explicit(System.IntPtr to System.Int32)
  type: Operator
  source:
    remote:
      path: src/mscorlib/src/System/IntPtr.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: op_Explicit
    path: src/mscorlib/src/System/IntPtr.cs
    startLine: 198
  assemblies:
  - System.Runtime
  namespace: System
  summary: Converts the value of the specified <xref href="System.IntPtr" data-throw-if-not-resolved="false"></xref> to a 32-bit signed integer.
  syntax:
    content: public static explicit operator int (IntPtr value)
    content.vb: Public Shared Narrowing Operator CType(value As IntPtr) As Integer
    parameters:
    - id: value
      type: System.IntPtr
      description: The pointer or handle to convert.
    return:
      type: System.Int32
      description: The contents of <em>value</em>.
  exceptions:
  - type: System.OverflowException
    commentId: T:System.OverflowException
    description: 'On a 64-bit platform, the value of <em>value</em> is too large to represent as a 32-bit signed integer. '
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.IntPtr.Narrowing(System.IntPtr to System.Int32)
  name.vb: Narrowing(IntPtr to Int32)
- uid: System.IntPtr.op_Explicit(System.IntPtr)~System.Int64
  commentId: M:System.IntPtr.op_Explicit(System.IntPtr)~System.Int64
  id: op_Explicit(System.IntPtr)~System.Int64
  parent: System.IntPtr
  langs:
  - csharp
  - vb
  name: Explicit(IntPtr to Int64)
  fullName: System.IntPtr.Explicit(System.IntPtr to System.Int64)
  type: Operator
  source:
    remote:
      path: src/mscorlib/src/System/IntPtr.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: op_Explicit
    path: src/mscorlib/src/System/IntPtr.cs
    startLine: 210
  assemblies:
  - System.Runtime
  namespace: System
  summary: Converts the value of the specified <xref href="System.IntPtr" data-throw-if-not-resolved="false"></xref> to a 64-bit signed integer.
  syntax:
    content: public static explicit operator long (IntPtr value)
    content.vb: Public Shared Narrowing Operator CType(value As IntPtr) As Long
    parameters:
    - id: value
      type: System.IntPtr
      description: The pointer or handle to convert.
    return:
      type: System.Int64
      description: The contents of <em>value</em>.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.IntPtr.Narrowing(System.IntPtr to System.Int64)
  name.vb: Narrowing(IntPtr to Int64)
- uid: System.IntPtr.op_Explicit(System.IntPtr)~System.Void*
  commentId: M:System.IntPtr.op_Explicit(System.IntPtr)~System.Void*
  id: op_Explicit(System.IntPtr)~System.Void*
  parent: System.IntPtr
  langs:
  - csharp
  - vb
  name: Explicit(IntPtr to Void*)
  fullName: System.IntPtr.Explicit(System.IntPtr to System.Void*)
  type: Operator
  source:
    remote:
      path: src/mscorlib/src/System/IntPtr.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: op_Explicit
    path: src/mscorlib/src/System/IntPtr.cs
    startLine: 190
  assemblies:
  - System.Runtime
  namespace: System
  summary: Converts the value of the specified <xref href="System.IntPtr" data-throw-if-not-resolved="false"></xref> to a pointer to an unspecified type.
  syntax:
    content: >-
      [CLSCompliant(false)]

      public static explicit operator void *(IntPtr value)
    content.vb: "<CLSCompliant(False)>\nPublic Shared Narrowing Operator CType(value As IntPtr) As "
    parameters:
    - id: value
      type: System.IntPtr
      description: 'The pointer or handle to convert. '
    return:
      type: System.Void*
      description: The contents of <em>value</em>.
  attributes:
  - type: System.CLSCompliantAttribute
    ctor: System.CLSCompliantAttribute.#ctor(System.Boolean)
    arguments:
    - type: System.Boolean
      value: false
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.IntPtr.Narrowing(System.IntPtr to System.Void*)
  name.vb: Narrowing(IntPtr to Void*)
- uid: System.IntPtr.op_Explicit(System.Void*)~System.IntPtr
  commentId: M:System.IntPtr.op_Explicit(System.Void*)~System.IntPtr
  id: op_Explicit(System.Void*)~System.IntPtr
  parent: System.IntPtr
  langs:
  - csharp
  - vb
  name: Explicit(Void* to IntPtr)
  fullName: System.IntPtr.Explicit(System.Void* to System.IntPtr)
  type: Operator
  source:
    remote:
      path: src/mscorlib/src/System/IntPtr.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: op_Explicit
    path: src/mscorlib/src/System/IntPtr.cs
    startLine: 182
  assemblies:
  - System.Runtime
  namespace: System
  summary: Converts the specified pointer to an unspecified type to an <xref href="System.IntPtr" data-throw-if-not-resolved="false"></xref>.
  syntax:
    content: >-
      [CLSCompliant(false)]

      [SecurityCritical]

      public static explicit operator IntPtr(void *value)
    content.vb: >-
      <CLSCompliant(False)>

      <SecurityCritical>

      Public Shared Narrowing Operator CType(value As  *) As IntPtr
    parameters:
    - id: value
      type: System.Void*
      description: 'A pointer to an unspecified type. '
    return:
      type: System.IntPtr
      description: A new instance of <xref href="System.IntPtr" data-throw-if-not-resolved="false"></xref> initialized to <em>value</em>.
  attributes:
  - type: System.CLSCompliantAttribute
    ctor: System.CLSCompliantAttribute.#ctor(System.Boolean)
    arguments:
    - type: System.Boolean
      value: false
  - type: System.Security.SecurityCriticalAttribute
    ctor: System.Security.SecurityCriticalAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.IntPtr.Narrowing(System.Void* to System.IntPtr)
  name.vb: Narrowing(Void* to IntPtr)
- uid: System.IntPtr.op_Inequality(System.IntPtr,System.IntPtr)
  commentId: M:System.IntPtr.op_Inequality(System.IntPtr,System.IntPtr)
  id: op_Inequality(System.IntPtr,System.IntPtr)
  parent: System.IntPtr
  langs:
  - csharp
  - vb
  name: Inequality(IntPtr, IntPtr)
  fullName: System.IntPtr.Inequality(System.IntPtr, System.IntPtr)
  type: Operator
  source:
    remote:
      path: src/mscorlib/src/System/IntPtr.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: op_Inequality
    path: src/mscorlib/src/System/IntPtr.cs
    startLine: 229
  assemblies:
  - System.Runtime
  namespace: System
  summary: Determines whether two specified instances of <xref href="System.IntPtr" data-throw-if-not-resolved="false"></xref> are not equal.
  syntax:
    content: public static bool operator !=(IntPtr value1, IntPtr value2)
    content.vb: Public Shared Operator <>(value1 As IntPtr, value2 As IntPtr) As Boolean
    parameters:
    - id: value1
      type: System.IntPtr
      description: 'The first pointer or handle to compare. '
    - id: value2
      type: System.IntPtr
      description: 'The second pointer or handle to compare. '
    return:
      type: System.Boolean
      description: true if <em>value1</em> does not equal <em>value2</em>; otherwise, false.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.IntPtr.op_Subtraction(System.IntPtr,System.Int32)
  commentId: M:System.IntPtr.op_Subtraction(System.IntPtr,System.Int32)
  id: op_Subtraction(System.IntPtr,System.Int32)
  parent: System.IntPtr
  langs:
  - csharp
  - vb
  name: Subtraction(IntPtr, Int32)
  fullName: System.IntPtr.Subtraction(System.IntPtr, System.Int32)
  type: Operator
  source:
    remote:
      path: src/mscorlib/src/System/IntPtr.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: op_Subtraction
    path: src/mscorlib/src/System/IntPtr.cs
    startLine: 261
  assemblies:
  - System.Runtime
  namespace: System
  summary: Subtracts an offset from the value of a pointer.
  syntax:
    content: public static IntPtr operator -(IntPtr pointer, int offset)
    content.vb: Public Shared Operator -(pointer As IntPtr, offset As Integer) As IntPtr
    parameters:
    - id: pointer
      type: System.IntPtr
      description: The pointer to subtract the offset from.
    - id: offset
      type: System.Int32
      description: The offset to subtract.
    return:
      type: System.IntPtr
      description: A new pointer that reflects the subtraction of <em>offset</em> from <em>pointer</em>.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.IntPtr.Subtract(System.IntPtr,System.Int32)
  commentId: M:System.IntPtr.Subtract(System.IntPtr,System.Int32)
  id: Subtract(System.IntPtr,System.Int32)
  parent: System.IntPtr
  langs:
  - csharp
  - vb
  name: Subtract(IntPtr, Int32)
  fullName: System.IntPtr.Subtract(System.IntPtr, System.Int32)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/IntPtr.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Subtract
    path: src/mscorlib/src/System/IntPtr.cs
    startLine: 255
  assemblies:
  - System.Runtime
  namespace: System
  summary: Subtracts an offset from the value of a pointer.
  syntax:
    content: public static IntPtr Subtract(IntPtr pointer, int offset)
    content.vb: Public Shared Function Subtract(pointer As IntPtr, offset As Integer) As IntPtr
    parameters:
    - id: pointer
      type: System.IntPtr
      description: The pointer to subtract the offset from.
    - id: offset
      type: System.Int32
      description: The offset to subtract.
    return:
      type: System.IntPtr
      description: A new pointer that reflects the subtraction of <em>offset</em> from <em>pointer</em>.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.IntPtr.ToInt32
  commentId: M:System.IntPtr.ToInt32
  id: ToInt32
  parent: System.IntPtr
  langs:
  - csharp
  - vb
  name: ToInt32()
  fullName: System.IntPtr.ToInt32()
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/IntPtr.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToInt32
    path: src/mscorlib/src/System/IntPtr.cs
    startLine: 123
  assemblies:
  - System.Runtime
  namespace: System
  summary: Converts the value of this instance to a 32-bit signed integer.
  syntax:
    content: public int ToInt32()
    content.vb: Public Function ToInt32 As Integer
    return:
      type: System.Int32
      description: A 32-bit signed integer equal to the value of this instance.
  exceptions:
  - type: System.OverflowException
    commentId: T:System.OverflowException
    description: 'On a 64-bit platform, the value of this instance is too large or too small to represent as a 32-bit signed integer. '
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.IntPtr.ToInt64
  commentId: M:System.IntPtr.ToInt64
  id: ToInt64
  parent: System.IntPtr
  langs:
  - csharp
  - vb
  name: ToInt64()
  fullName: System.IntPtr.ToInt64()
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/IntPtr.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToInt64
    path: src/mscorlib/src/System/IntPtr.cs
    startLine: 135
  assemblies:
  - System.Runtime
  namespace: System
  summary: Converts the value of this instance to a 64-bit signed integer.
  syntax:
    content: public long ToInt64()
    content.vb: Public Function ToInt64 As Long
    return:
      type: System.Int64
      description: A 64-bit signed integer equal to the value of this instance.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.IntPtr.ToPointer
  commentId: M:System.IntPtr.ToPointer
  id: ToPointer
  parent: System.IntPtr
  langs:
  - csharp
  - vb
  name: ToPointer()
  fullName: System.IntPtr.ToPointer()
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/IntPtr.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToPointer
    path: src/mscorlib/src/System/IntPtr.cs
    startLine: 287
  assemblies:
  - System.Runtime
  namespace: System
  summary: Converts the value of this instance to a pointer to an unspecified type.
  syntax:
    content: >-
      [CLSCompliant(false)]

      public void *ToPointer()
    content.vb: "<CLSCompliant(False)>\nPublic Function ToPointer As "
    return:
      type: System.Void*
      description: A pointer to <xref href="System.Void" data-throw-if-not-resolved="false"></xref>; that is, a pointer to memory containing data of an unspecified type.
  attributes:
  - type: System.CLSCompliantAttribute
    ctor: System.CLSCompliantAttribute.#ctor(System.Boolean)
    arguments:
    - type: System.Boolean
      value: false
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.IntPtr.ToString
  commentId: M:System.IntPtr.ToString
  id: ToString
  parent: System.IntPtr
  langs:
  - csharp
  - vb
  name: ToString()
  fullName: System.IntPtr.ToString()
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/IntPtr.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToString
    path: src/mscorlib/src/System/IntPtr.cs
    startLine: 146
  assemblies:
  - System.Runtime
  namespace: System
  summary: Converts the numeric value of the current <xref href="System.IntPtr" data-throw-if-not-resolved="false"></xref> object to its equivalent string representation.
  syntax:
    content: public override string ToString()
    content.vb: Public Overrides Function ToString As String
    return:
      type: System.String
      description: The string representation of the value of this instance.
  overridden: System.ValueType.ToString
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.IntPtr.ToString(System.String)
  commentId: M:System.IntPtr.ToString(System.String)
  id: ToString(System.String)
  parent: System.IntPtr
  langs:
  - csharp
  - vb
  name: ToString(String)
  fullName: System.IntPtr.ToString(System.String)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/IntPtr.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToString
    path: src/mscorlib/src/System/IntPtr.cs
    startLine: 155
  assemblies:
  - System.Runtime
  namespace: System
  summary: Converts the numeric value of the current <xref href="System.IntPtr" data-throw-if-not-resolved="false"></xref> object to its equivalent string representation.
  syntax:
    content: public string ToString(string format)
    content.vb: Public Function ToString(format As String) As String
    parameters:
    - id: format
      type: System.String
      description: 'A format specification that governs how the current <xref href="System.IntPtr" data-throw-if-not-resolved="false"></xref> object is converted. '
    return:
      type: System.String
      description: The string representation of the value of the current <xref href="System.IntPtr" data-throw-if-not-resolved="false"></xref> object.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: false
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
  - name: )
    fullName: )
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System.IntPtr
  parent: System
  isExternal: false
  name: IntPtr
  fullName: System.IntPtr
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  fullName: System.Int32
- uid: System.Int64
  parent: System
  isExternal: false
  name: Int64
  fullName: System.Int64
- uid: System.Void*
  isExternal: false
  name: Void*
  fullName: System.Void*
  spec.csharp:
  - uid: System.Void
    name: Void
    fullName: System.Void
  - name: '*'
    fullName: '*'
  spec.vb:
  - uid: System.Void
    name: Void
    fullName: System.Void
  - name: '*'
    fullName: '*'
- uid: System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: false
  name: Equals(Object)
  fullName: System.ValueType.Equals(System.Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    fullName: System.ValueType.Equals
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    fullName: System.ValueType.Equals
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
  - name: )
    fullName: )
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  fullName: System.Boolean
- uid: System.ValueType
  parent: System
  isExternal: false
  name: ValueType
  fullName: System.ValueType
- uid: System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: false
  name: GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    fullName: System.ValueType.GetHashCode
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    fullName: System.ValueType.GetHashCode
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.ValueType.ToString
  parent: System.ValueType
  isExternal: false
  name: ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    fullName: System.ValueType.ToString
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    fullName: System.ValueType.ToString
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.String
  parent: System
  isExternal: false
  name: String
  fullName: System.String
- uid: System.OverflowException
  isExternal: false
  name: OverflowException
  fullName: System.OverflowException
