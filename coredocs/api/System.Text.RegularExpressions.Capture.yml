items:
- uid: System.Text.RegularExpressions.Capture
  commentId: T:System.Text.RegularExpressions.Capture
  id: Capture
  parent: System.Text.RegularExpressions
  children:
  - System.Text.RegularExpressions.Capture.Index
  - System.Text.RegularExpressions.Capture.Length
  - System.Text.RegularExpressions.Capture.ToString
  - System.Text.RegularExpressions.Capture.Value
  langs:
  - csharp
  - vb
  name: Capture
  fullName: System.Text.RegularExpressions.Capture
  type: Class
  source:
    remote:
      path: src/System.Text.RegularExpressions/src/System/Text/RegularExpressions/RegexCapture.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Capture
    path: src/System.Text.RegularExpressions/src/System/Text/RegularExpressions/RegexCapture.cs
    startLine: 15
  assemblies:
  - System.Text.RegularExpressions
  namespace: System.Text.RegularExpressions
  summary: 'Represents the results from a single successful subexpression capture. '
  syntax:
    content: 'public class Capture : object'
    content.vb: >-
      Public Class Capture
          Inherits Object
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: System.Text.RegularExpressions.Capture.Index
  commentId: P:System.Text.RegularExpressions.Capture.Index
  id: Index
  parent: System.Text.RegularExpressions.Capture
  langs:
  - csharp
  - vb
  name: Index
  fullName: System.Text.RegularExpressions.Capture.Index
  type: Property
  source:
    remote:
      path: src/System.Text.RegularExpressions/src/System/Text/RegularExpressions/RegexCapture.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Index
    path: src/System.Text.RegularExpressions/src/System/Text/RegularExpressions/RegexCapture.cs
    startLine: 35
  assemblies:
  - System.Text.RegularExpressions
  namespace: System.Text.RegularExpressions
  summary: The position in the original string where the first character of the captured substring is found.
  syntax:
    content: public int Index { get; }
    content.vb: Public ReadOnly Property Index As Integer
    parameters: []
    return:
      type: System.Int32
      description: The zero-based starting position in the original string where the captured substring is found.
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Text.RegularExpressions.Capture.Length
  commentId: P:System.Text.RegularExpressions.Capture.Length
  id: Length
  parent: System.Text.RegularExpressions.Capture
  langs:
  - csharp
  - vb
  name: Length
  fullName: System.Text.RegularExpressions.Capture.Length
  type: Property
  source:
    remote:
      path: src/System.Text.RegularExpressions/src/System/Text/RegularExpressions/RegexCapture.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Length
    path: src/System.Text.RegularExpressions/src/System/Text/RegularExpressions/RegexCapture.cs
    startLine: 49
  assemblies:
  - System.Text.RegularExpressions
  namespace: System.Text.RegularExpressions
  summary: Gets the length of the captured substring.
  syntax:
    content: public int Length { get; }
    content.vb: Public ReadOnly Property Length As Integer
    parameters: []
    return:
      type: System.Int32
      description: The length of the captured substring.
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Text.RegularExpressions.Capture.Value
  commentId: P:System.Text.RegularExpressions.Capture.Value
  id: Value
  parent: System.Text.RegularExpressions.Capture
  langs:
  - csharp
  - vb
  name: Value
  fullName: System.Text.RegularExpressions.Capture.Value
  type: Property
  source:
    remote:
      path: src/System.Text.RegularExpressions/src/System/Text/RegularExpressions/RegexCapture.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Value
    path: src/System.Text.RegularExpressions/src/System/Text/RegularExpressions/RegexCapture.cs
    startLine: 60
  assemblies:
  - System.Text.RegularExpressions
  namespace: System.Text.RegularExpressions
  summary: Gets the captured substring from the input string.
  syntax:
    content: public string Value { get; }
    content.vb: Public ReadOnly Property Value As String
    parameters: []
    return:
      type: System.String
      description: The substring that is captured by the match.
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Text.RegularExpressions.Capture.ToString
  commentId: M:System.Text.RegularExpressions.Capture.ToString
  id: ToString
  parent: System.Text.RegularExpressions.Capture
  langs:
  - csharp
  - vb
  name: ToString()
  fullName: System.Text.RegularExpressions.Capture.ToString()
  type: Method
  source:
    remote:
      path: src/System.Text.RegularExpressions/src/System/Text/RegularExpressions/RegexCapture.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ToString
    path: src/System.Text.RegularExpressions/src/System/Text/RegularExpressions/RegexCapture.cs
    startLine: 74
  assemblies:
  - System.Text.RegularExpressions
  namespace: System.Text.RegularExpressions
  summary: 'Retrieves the captured substring from the input string by calling the <xref href="System.Text.RegularExpressions.Capture.Value" data-throw-if-not-resolved="false"></xref> property. '
  syntax:
    content: public override string ToString()
    content.vb: Public Overrides Function ToString As String
    return:
      type: System.String
      description: The substring that was captured by the match.
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: System.Text.RegularExpressions
  isExternal: false
  name: System.Text.RegularExpressions
  fullName: System.Text.RegularExpressions
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  fullName: System.Int32
- uid: System.String
  parent: System
  isExternal: false
  name: String
  fullName: System.String
