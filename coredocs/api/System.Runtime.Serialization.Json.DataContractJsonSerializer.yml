items:
- uid: System.Runtime.Serialization.Json.DataContractJsonSerializer
  commentId: T:System.Runtime.Serialization.Json.DataContractJsonSerializer
  id: DataContractJsonSerializer
  parent: System.Runtime.Serialization.Json
  children:
  - System.Runtime.Serialization.Json.DataContractJsonSerializer.#ctor(System.Type)
  - System.Runtime.Serialization.Json.DataContractJsonSerializer.#ctor(System.Type,System.Collections.Generic.IEnumerable{System.Type})
  - System.Runtime.Serialization.Json.DataContractJsonSerializer.#ctor(System.Type,System.Runtime.Serialization.Json.DataContractJsonSerializerSettings)
  - System.Runtime.Serialization.Json.DataContractJsonSerializer.DateTimeFormat
  - System.Runtime.Serialization.Json.DataContractJsonSerializer.EmitTypeInformation
  - System.Runtime.Serialization.Json.DataContractJsonSerializer.KnownTypes
  - System.Runtime.Serialization.Json.DataContractJsonSerializer.ReadObject(System.IO.Stream)
  - System.Runtime.Serialization.Json.DataContractJsonSerializer.SerializeReadOnlyTypes
  - System.Runtime.Serialization.Json.DataContractJsonSerializer.UseSimpleDictionaryFormat
  - System.Runtime.Serialization.Json.DataContractJsonSerializer.WriteObject(System.IO.Stream,System.Object)
  langs:
  - csharp
  - vb
  name: DataContractJsonSerializer
  fullName: System.Runtime.Serialization.Json.DataContractJsonSerializer
  type: Class
  source:
    remote:
      path: src/System.Private.DataContractSerialization/src/System/Runtime/Serialization/Json/DataContractJsonSerializer.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: DataContractJsonSerializer
    path: src/System.Private.DataContractSerialization/src/System/Runtime/Serialization/Json/DataContractJsonSerializer.cs
    startLine: 20
  assemblies:
  - System.Runtime.Serialization.Json
  namespace: System.Runtime.Serialization.Json
  summary: Serializes objects to the JavaScript Object Notation (JSON) and deserializes JSON data to objects. This class cannot be inherited.
  syntax:
    content: 'public sealed class DataContractJsonSerializer : object'
    content.vb: >-
      Public NotInheritable Class DataContractJsonSerializer
          Inherits Object
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: System.Runtime.Serialization.Json.DataContractJsonSerializer.#ctor(System.Type)
  commentId: M:System.Runtime.Serialization.Json.DataContractJsonSerializer.#ctor(System.Type)
  id: '#ctor(System.Type)'
  parent: System.Runtime.Serialization.Json.DataContractJsonSerializer
  langs:
  - csharp
  - vb
  name: DataContractJsonSerializer(Type)
  fullName: System.Runtime.Serialization.Json.DataContractJsonSerializer.DataContractJsonSerializer(System.Type)
  type: Constructor
  source:
    remote:
      path: src/System.Runtime.Serialization.Json/ref/System.Runtime.Serialization.Json.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Runtime.Serialization.Json/ref/System.Runtime.Serialization.Json.cs
    startLine: 29
  assemblies:
  - System.Runtime.Serialization.Json
  namespace: System.Runtime.Serialization.Json
  summary: Initializes a new instance of the <xref href="System.Runtime.Serialization.Json.DataContractJsonSerializer" data-throw-if-not-resolved="false"></xref> class to serialize or deserialize an object of the specified type.
  syntax:
    content: public DataContractJsonSerializer(Type type)
    content.vb: Public Sub New(type As Type)
    parameters:
    - id: type
      type: System.Type
      description: The type of the instances that is serialized or deserialized.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Runtime.Serialization.Json.DataContractJsonSerializer.#ctor(System.Type,System.Collections.Generic.IEnumerable{System.Type})
  commentId: M:System.Runtime.Serialization.Json.DataContractJsonSerializer.#ctor(System.Type,System.Collections.Generic.IEnumerable{System.Type})
  id: '#ctor(System.Type,System.Collections.Generic.IEnumerable{System.Type})'
  parent: System.Runtime.Serialization.Json.DataContractJsonSerializer
  langs:
  - csharp
  - vb
  name: DataContractJsonSerializer(Type, Collections.Generic.IEnumerable<Type>)
  fullName: System.Runtime.Serialization.Json.DataContractJsonSerializer.DataContractJsonSerializer(System.Type, System.Collections.Generic.IEnumerable<System.Type>)
  type: Constructor
  source:
    remote:
      path: src/System.Runtime.Serialization.Json/ref/System.Runtime.Serialization.Json.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Runtime.Serialization.Json/ref/System.Runtime.Serialization.Json.cs
    startLine: 30
  assemblies:
  - System.Runtime.Serialization.Json
  namespace: System.Runtime.Serialization.Json
  summary: 'Initializes a new instance of the <xref href="System.Runtime.Serialization.Json.DataContractJsonSerializer" data-throw-if-not-resolved="false"></xref> class to serialize or deserialize an object of the specified type, with a collection of known types that may be present in the object graph. '
  syntax:
    content: public DataContractJsonSerializer(Type type, Collections.Generic.IEnumerable<Type> knownTypes)
    content.vb: Public Sub New(type As Type, knownTypes As Collections.Generic.IEnumerable(Of Type))
    parameters:
    - id: type
      type: System.Type
      description: The type of the instances that are serialized or deserialized.
    - id: knownTypes
      type: System.Collections.Generic.IEnumerable{System.Type}
      description: An <xref href="System.Collections.Generic.IEnumerable`1" data-throw-if-not-resolved="false"></xref>  of <xref href="System.Type" data-throw-if-not-resolved="false"></xref> that contains the types that may be present in the object graph.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Runtime.Serialization.Json.DataContractJsonSerializer.DataContractJsonSerializer(System.Type, System.Collections.Generic.IEnumerable(Of System.Type))
  name.vb: DataContractJsonSerializer(Type, Collections.Generic.IEnumerable(Of Type))
- uid: System.Runtime.Serialization.Json.DataContractJsonSerializer.#ctor(System.Type,System.Runtime.Serialization.Json.DataContractJsonSerializerSettings)
  commentId: M:System.Runtime.Serialization.Json.DataContractJsonSerializer.#ctor(System.Type,System.Runtime.Serialization.Json.DataContractJsonSerializerSettings)
  id: '#ctor(System.Type,System.Runtime.Serialization.Json.DataContractJsonSerializerSettings)'
  parent: System.Runtime.Serialization.Json.DataContractJsonSerializer
  langs:
  - csharp
  - vb
  name: DataContractJsonSerializer(Type, DataContractJsonSerializerSettings)
  fullName: System.Runtime.Serialization.Json.DataContractJsonSerializer.DataContractJsonSerializer(System.Type, System.Runtime.Serialization.Json.DataContractJsonSerializerSettings)
  type: Constructor
  source:
    remote:
      path: src/System.Runtime.Serialization.Json/ref/System.Runtime.Serialization.Json.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Runtime.Serialization.Json/ref/System.Runtime.Serialization.Json.cs
    startLine: 31
  assemblies:
  - System.Runtime.Serialization.Json
  namespace: System.Runtime.Serialization.Json
  summary: Initializes a new instance of the <xref href="System.Runtime.Serialization.Json.DataContractJsonSerializer" data-throw-if-not-resolved="false"></xref> class to serialize or deserialize an object of the specified type and serializer settings.
  syntax:
    content: public DataContractJsonSerializer(Type type, DataContractJsonSerializerSettings settings)
    content.vb: Public Sub New(type As Type, settings As DataContractJsonSerializerSettings)
    parameters:
    - id: type
      type: System.Type
      description: The type of the instances that is serialized or deserialized.
    - id: settings
      type: System.Runtime.Serialization.Json.DataContractJsonSerializerSettings
      description: The serializer settings for the JSON serializer.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Runtime.Serialization.Json.DataContractJsonSerializer.DateTimeFormat
  commentId: P:System.Runtime.Serialization.Json.DataContractJsonSerializer.DateTimeFormat
  id: DateTimeFormat
  parent: System.Runtime.Serialization.Json.DataContractJsonSerializer
  langs:
  - csharp
  - vb
  name: DateTimeFormat
  fullName: System.Runtime.Serialization.Json.DataContractJsonSerializer.DateTimeFormat
  type: Property
  source:
    remote:
      path: src/System.Private.DataContractSerialization/src/System/Runtime/Serialization/Json/DataContractJsonSerializer.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: DateTimeFormat
    path: src/System.Private.DataContractSerialization/src/System/Runtime/Serialization/Json/DataContractJsonSerializer.cs
    startLine: 101
  assemblies:
  - System.Runtime.Serialization.Json
  namespace: System.Runtime.Serialization.Json
  summary: Gets the format of the date and time type items in object graph.
  syntax:
    content: public DateTimeFormat DateTimeFormat { get; }
    content.vb: Public ReadOnly Property DateTimeFormat As DateTimeFormat
    parameters: []
    return:
      type: System.Runtime.Serialization.DateTimeFormat
      description: The format of the date and time type items in object graph.
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Runtime.Serialization.Json.DataContractJsonSerializer.EmitTypeInformation
  commentId: P:System.Runtime.Serialization.Json.DataContractJsonSerializer.EmitTypeInformation
  id: EmitTypeInformation
  parent: System.Runtime.Serialization.Json.DataContractJsonSerializer
  langs:
  - csharp
  - vb
  name: EmitTypeInformation
  fullName: System.Runtime.Serialization.Json.DataContractJsonSerializer.EmitTypeInformation
  type: Property
  source:
    remote:
      path: src/System.Private.DataContractSerialization/src/System/Runtime/Serialization/Json/DataContractJsonSerializer.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: EmitTypeInformation
    path: src/System.Private.DataContractSerialization/src/System/Runtime/Serialization/Json/DataContractJsonSerializer.cs
    startLine: 109
  assemblies:
  - System.Runtime.Serialization.Json
  namespace: System.Runtime.Serialization.Json
  summary: Gets or sets the data contract JSON serializer settings to emit type information.
  syntax:
    content: public EmitTypeInformation EmitTypeInformation { get; }
    content.vb: Public ReadOnly Property EmitTypeInformation As EmitTypeInformation
    parameters: []
    return:
      type: System.Runtime.Serialization.EmitTypeInformation
      description: The data contract JSON serializer settings to emit type information.
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Runtime.Serialization.Json.DataContractJsonSerializer.KnownTypes
  commentId: P:System.Runtime.Serialization.Json.DataContractJsonSerializer.KnownTypes
  id: KnownTypes
  parent: System.Runtime.Serialization.Json.DataContractJsonSerializer
  langs:
  - csharp
  - vb
  name: KnownTypes
  fullName: System.Runtime.Serialization.Json.DataContractJsonSerializer.KnownTypes
  type: Property
  source:
    remote:
      path: src/System.Private.DataContractSerialization/src/System/Runtime/Serialization/Json/DataContractJsonSerializer.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: KnownTypes
    path: src/System.Private.DataContractSerialization/src/System/Runtime/Serialization/Json/DataContractJsonSerializer.cs
    startLine: 54
  assemblies:
  - System.Runtime.Serialization.Json
  namespace: System.Runtime.Serialization.Json
  summary: Gets a collection of types that may be present in the object graph serialized using this instance of the <xref href="System.Runtime.Serialization.Json.DataContractJsonSerializer" data-throw-if-not-resolved="false"></xref>.
  syntax:
    content: public Collections.ObjectModel.ReadOnlyCollection<Type> KnownTypes { get; }
    content.vb: Public ReadOnly Property KnownTypes As Collections.ObjectModel.ReadOnlyCollection(Of Type)
    parameters: []
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.Type}
      description: A <xref href="System.Collections.ObjectModel.ReadOnlyCollection`1" data-throw-if-not-resolved="false"></xref> that contains the expected types passed in as known types to the <xref href="System.Runtime.Serialization.Json.DataContractJsonSerializer" data-throw-if-not-resolved="false"></xref> constructor.
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Runtime.Serialization.Json.DataContractJsonSerializer.SerializeReadOnlyTypes
  commentId: P:System.Runtime.Serialization.Json.DataContractJsonSerializer.SerializeReadOnlyTypes
  id: SerializeReadOnlyTypes
  parent: System.Runtime.Serialization.Json.DataContractJsonSerializer
  langs:
  - csharp
  - vb
  name: SerializeReadOnlyTypes
  fullName: System.Runtime.Serialization.Json.DataContractJsonSerializer.SerializeReadOnlyTypes
  type: Property
  source:
    remote:
      path: src/System.Private.DataContractSerialization/src/System/Runtime/Serialization/Json/DataContractJsonSerializer.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: SerializeReadOnlyTypes
    path: src/System.Private.DataContractSerialization/src/System/Runtime/Serialization/Json/DataContractJsonSerializer.cs
    startLine: 117
  assemblies:
  - System.Runtime.Serialization.Json
  namespace: System.Runtime.Serialization.Json
  summary: Gets or sets a value that specifies whether to serialize read only types.
  syntax:
    content: public bool SerializeReadOnlyTypes { get; }
    content.vb: Public ReadOnly Property SerializeReadOnlyTypes As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: true to serialize read only types; otherwise false.
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Runtime.Serialization.Json.DataContractJsonSerializer.UseSimpleDictionaryFormat
  commentId: P:System.Runtime.Serialization.Json.DataContractJsonSerializer.UseSimpleDictionaryFormat
  id: UseSimpleDictionaryFormat
  parent: System.Runtime.Serialization.Json.DataContractJsonSerializer
  langs:
  - csharp
  - vb
  name: UseSimpleDictionaryFormat
  fullName: System.Runtime.Serialization.Json.DataContractJsonSerializer.UseSimpleDictionaryFormat
  type: Property
  source:
    remote:
      path: src/System.Private.DataContractSerialization/src/System/Runtime/Serialization/Json/DataContractJsonSerializer.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: UseSimpleDictionaryFormat
    path: src/System.Private.DataContractSerialization/src/System/Runtime/Serialization/Json/DataContractJsonSerializer.cs
    startLine: 126
  assemblies:
  - System.Runtime.Serialization.Json
  namespace: System.Runtime.Serialization.Json
  summary: Gets or sets a value that specifies whether to use a simple dictionary format.
  syntax:
    content: public bool UseSimpleDictionaryFormat { get; }
    content.vb: Public ReadOnly Property UseSimpleDictionaryFormat As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: true to use a simple dictionary format; otherwise, false.
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Runtime.Serialization.Json.DataContractJsonSerializer.ReadObject(System.IO.Stream)
  commentId: M:System.Runtime.Serialization.Json.DataContractJsonSerializer.ReadObject(System.IO.Stream)
  id: ReadObject(System.IO.Stream)
  parent: System.Runtime.Serialization.Json.DataContractJsonSerializer
  langs:
  - csharp
  - vb
  name: ReadObject(IO.Stream)
  fullName: System.Runtime.Serialization.Json.DataContractJsonSerializer.ReadObject(System.IO.Stream)
  type: Method
  source:
    remote:
      path: src/System.Runtime.Serialization.Json/ref/System.Runtime.Serialization.Json.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ReadObject
    path: src/System.Runtime.Serialization.Json/ref/System.Runtime.Serialization.Json.cs
    startLine: 37
  assemblies:
  - System.Runtime.Serialization.Json
  namespace: System.Runtime.Serialization.Json
  summary: Reads a document stream in the JSON (JavaScript Object Notation) format and returns the deserialized object.
  syntax:
    content: public object ReadObject(IO.Stream stream)
    content.vb: Public Function ReadObject(stream As IO.Stream) As Object
    parameters:
    - id: stream
      type: System.IO.Stream
      description: The <xref href="System.IO.Stream" data-throw-if-not-resolved="false"></xref> to be read.
    return:
      type: System.Object
      description: The deserialized object.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Runtime.Serialization.Json.DataContractJsonSerializer.WriteObject(System.IO.Stream,System.Object)
  commentId: M:System.Runtime.Serialization.Json.DataContractJsonSerializer.WriteObject(System.IO.Stream,System.Object)
  id: WriteObject(System.IO.Stream,System.Object)
  parent: System.Runtime.Serialization.Json.DataContractJsonSerializer
  langs:
  - csharp
  - vb
  name: WriteObject(IO.Stream, Object)
  fullName: System.Runtime.Serialization.Json.DataContractJsonSerializer.WriteObject(System.IO.Stream, System.Object)
  type: Method
  source:
    remote:
      path: src/System.Runtime.Serialization.Json/ref/System.Runtime.Serialization.Json.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: WriteObject
    path: src/System.Runtime.Serialization.Json/ref/System.Runtime.Serialization.Json.cs
    startLine: 38
  assemblies:
  - System.Runtime.Serialization.Json
  namespace: System.Runtime.Serialization.Json
  summary: Serializes a specified object to JavaScript Object Notation (JSON) data and writes the resulting JSON to a stream.
  syntax:
    content: public void WriteObject(IO.Stream stream, object graph)
    content.vb: Public Sub WriteObject(stream As IO.Stream, graph As Object)
    parameters:
    - id: stream
      type: System.IO.Stream
      description: The <xref href="System.IO.Stream" data-throw-if-not-resolved="false"></xref> that is written to.
    - id: graph
      type: System.Object
      description: The object that contains the data to write to the stream.
  exceptions:
  - type: System.Runtime.Serialization.InvalidDataContractException
    commentId: T:System.Runtime.Serialization.InvalidDataContractException
    description: The type being serialized does not conform to data contract rules. For example, the <xref href="System.Runtime.Serialization.DataContractAttribute" data-throw-if-not-resolved="false"></xref> attribute has not been applied to the type.
  - type: System.Runtime.Serialization.SerializationException
    commentId: T:System.Runtime.Serialization.SerializationException
    description: There is a problem with the instance being written.
  - type: System.ServiceModel.QuotaExceededException
    commentId: T:System.ServiceModel.QuotaExceededException
    description: The maximum number of objects to serialize has been exceeded. Check the <xref href="System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" data-throw-if-not-resolved="false"></xref> property.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: System.Runtime.Serialization.Json
  isExternal: false
  name: System.Runtime.Serialization.Json
  fullName: System.Runtime.Serialization.Json
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  fullName: System.Type
- uid: System.Collections.Generic.IEnumerable{System.Type}
  definition: System.Collections.Generic.IEnumerable`1
  name: System.Collections.Generic.IEnumerable<System.Type>
  fullName: System.Collections.Generic.IEnumerable<System.Type>
  fullname.vb: System.Collections.Generic.IEnumerable(Of System.Type)
  name.vb: System.Collections.Generic.IEnumerable(Of System.Type)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: System.Collections.Generic.IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Type
    name: System.Type
    fullName: System.Type
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: System.Collections.Generic.IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Type
    name: System.Type
    fullName: System.Type
    isExternal: true
  - name: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  parent: System.Collections.Generic
  isExternal: false
  name: Collections.Generic.IEnumerable<>
  fullName: System.Collections.Generic.IEnumerable<>
  fullname.vb: System.Collections.Generic.IEnumerable(Of )
  name.vb: Collections.Generic.IEnumerable(Of )
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: Collections.Generic.IEnumerable
    fullName: System.Collections.Generic.IEnumerable
  - name: <
    fullName: <
  - {}
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: Collections.Generic.IEnumerable
    fullName: System.Collections.Generic.IEnumerable
  - name: '(Of '
    fullName: '(Of '
  - {}
  - name: )
    fullName: )
- uid: System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Runtime.Serialization.Json.DataContractJsonSerializerSettings
  parent: System.Runtime.Serialization.Json
  isExternal: false
  name: DataContractJsonSerializerSettings
  fullName: System.Runtime.Serialization.Json.DataContractJsonSerializerSettings
- uid: System.Runtime.Serialization.DateTimeFormat
  parent: System.Runtime.Serialization
  isExternal: false
  name: DateTimeFormat
  fullName: System.Runtime.Serialization.DateTimeFormat
- uid: System.Runtime.Serialization
  isExternal: false
  name: System.Runtime.Serialization
  fullName: System.Runtime.Serialization
- uid: System.Runtime.Serialization.EmitTypeInformation
  parent: System.Runtime.Serialization
  isExternal: false
  name: EmitTypeInformation
  fullName: System.Runtime.Serialization.EmitTypeInformation
- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.Type}
  definition: System.Collections.ObjectModel.ReadOnlyCollection`1
  name: Collections.ObjectModel.ReadOnlyCollection<Type>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.Type>
  fullname.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of System.Type)
  name.vb: Collections.ObjectModel.ReadOnlyCollection(Of Type)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: Collections.ObjectModel.ReadOnlyCollection
    fullName: System.Collections.ObjectModel.ReadOnlyCollection
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: Collections.ObjectModel.ReadOnlyCollection
    fullName: System.Collections.ObjectModel.ReadOnlyCollection
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: )
    fullName: )
- uid: System.Collections.ObjectModel.ReadOnlyCollection`1
  parent: System.Collections.ObjectModel
  isExternal: false
  name: Collections.ObjectModel.ReadOnlyCollection<>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<>
  fullname.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of )
  name.vb: Collections.ObjectModel.ReadOnlyCollection(Of )
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: Collections.ObjectModel.ReadOnlyCollection
    fullName: System.Collections.ObjectModel.ReadOnlyCollection
  - name: <
    fullName: <
  - {}
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: Collections.ObjectModel.ReadOnlyCollection
    fullName: System.Collections.ObjectModel.ReadOnlyCollection
  - name: '(Of '
    fullName: '(Of '
  - {}
  - name: )
    fullName: )
- uid: System.Collections.ObjectModel
  isExternal: false
  name: System.Collections.ObjectModel
  fullName: System.Collections.ObjectModel
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  fullName: System.Boolean
- uid: System.IO.Stream
  parent: System.IO
  isExternal: false
  name: IO.Stream
  fullName: System.IO.Stream
- uid: System.IO
  isExternal: false
  name: System.IO
  fullName: System.IO
- uid: System.Runtime.Serialization.InvalidDataContractException
  isExternal: false
  name: InvalidDataContractException
  fullName: System.Runtime.Serialization.InvalidDataContractException
- uid: System.Runtime.Serialization.SerializationException
  isExternal: false
  name: SerializationException
  fullName: System.Runtime.Serialization.SerializationException
- uid: System.ServiceModel.QuotaExceededException
