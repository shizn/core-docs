items:
- uid: System.IO.Compression.GZipStream
  commentId: T:System.IO.Compression.GZipStream
  id: GZipStream
  parent: System.IO.Compression
  children:
  - System.IO.Compression.GZipStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionLevel)
  - System.IO.Compression.GZipStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionLevel,System.Boolean)
  - System.IO.Compression.GZipStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionMode)
  - System.IO.Compression.GZipStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionMode,System.Boolean)
  - System.IO.Compression.GZipStream.BaseStream
  - System.IO.Compression.GZipStream.CanRead
  - System.IO.Compression.GZipStream.CanSeek
  - System.IO.Compression.GZipStream.CanWrite
  - System.IO.Compression.GZipStream.Dispose(System.Boolean)
  - System.IO.Compression.GZipStream.Flush
  - System.IO.Compression.GZipStream.Length
  - System.IO.Compression.GZipStream.Position
  - System.IO.Compression.GZipStream.Read(System.Byte[],System.Int32,System.Int32)
  - System.IO.Compression.GZipStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)
  - System.IO.Compression.GZipStream.Seek(System.Int64,System.IO.SeekOrigin)
  - System.IO.Compression.GZipStream.SetLength(System.Int64)
  - System.IO.Compression.GZipStream.Write(System.Byte[],System.Int32,System.Int32)
  - System.IO.Compression.GZipStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)
  langs:
  - csharp
  - vb
  name: GZipStream
  fullName: System.IO.Compression.GZipStream
  type: Class
  source:
    remote:
      path: src/System.IO.Compression/src/System/IO/Compression/GZipStream.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GZipStream
    path: src/System.IO.Compression/src/System/IO/Compression/GZipStream.cs
    startLine: 11
  assemblies:
  - System.IO.Compression
  namespace: System.IO.Compression
  summary: Provides methods and properties used to compress and decompress streams.
  syntax:
    content: 'public class GZipStream : Stream'
    content.vb: >-
      Public Class GZipStream
          Inherits Stream
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: System.IO.Compression.GZipStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionLevel)
  commentId: M:System.IO.Compression.GZipStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionLevel)
  id: '#ctor(System.IO.Stream,System.IO.Compression.CompressionLevel)'
  parent: System.IO.Compression.GZipStream
  langs:
  - csharp
  - vb
  name: GZipStream(Stream, CompressionLevel)
  fullName: System.IO.Compression.GZipStream.GZipStream(System.IO.Stream, System.IO.Compression.CompressionLevel)
  type: Constructor
  source:
    remote:
      path: src/System.IO.Compression/ref/System.IO.Compression.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.IO.Compression/ref/System.IO.Compression.cs
    startLine: 44
  assemblies:
  - System.IO.Compression
  namespace: System.IO.Compression
  summary: Initializes a new instance of the <xref href="System.IO.Compression.GZipStream" data-throw-if-not-resolved="false"></xref> class by using the specified stream and compression level.
  syntax:
    content: public GZipStream(Stream stream, CompressionLevel compressionLevel)
    content.vb: Public Sub New(stream As Stream, compressionLevel As CompressionLevel)
    parameters:
    - id: stream
      type: System.IO.Stream
      description: The stream to write the compressed data to.
    - id: compressionLevel
      type: System.IO.Compression.CompressionLevel
      description: One of the enumeration values that indicates whether to emphasize speed or compression efficiency when compressing the stream.
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>stream</em> is null."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: The stream does not support write operations such as compression. (The <xref href="System.IO.Stream.CanWrite" data-throw-if-not-resolved="false"></xref> property on the stream object is false.)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.IO.Compression.GZipStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionLevel,System.Boolean)
  commentId: M:System.IO.Compression.GZipStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionLevel,System.Boolean)
  id: '#ctor(System.IO.Stream,System.IO.Compression.CompressionLevel,System.Boolean)'
  parent: System.IO.Compression.GZipStream
  langs:
  - csharp
  - vb
  name: GZipStream(Stream, CompressionLevel, Boolean)
  fullName: System.IO.Compression.GZipStream.GZipStream(System.IO.Stream, System.IO.Compression.CompressionLevel, System.Boolean)
  type: Constructor
  source:
    remote:
      path: src/System.IO.Compression/ref/System.IO.Compression.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.IO.Compression/ref/System.IO.Compression.cs
    startLine: 45
  assemblies:
  - System.IO.Compression
  namespace: System.IO.Compression
  summary: Initializes a new instance of the <xref href="System.IO.Compression.GZipStream" data-throw-if-not-resolved="false"></xref> class by using the specified stream and compression level, and optionally leaves the stream open.
  syntax:
    content: public GZipStream(Stream stream, CompressionLevel compressionLevel, bool leaveOpen)
    content.vb: Public Sub New(stream As Stream, compressionLevel As CompressionLevel, leaveOpen As Boolean)
    parameters:
    - id: stream
      type: System.IO.Stream
      description: The stream to write the compressed data to.
    - id: compressionLevel
      type: System.IO.Compression.CompressionLevel
      description: One of the enumeration values that indicates whether to emphasize speed or compression efficiency when compressing the stream.
    - id: leaveOpen
      type: System.Boolean
      description: true to leave the stream object open after disposing the <xref href="System.IO.Compression.GZipStream" data-throw-if-not-resolved="false"></xref> object; otherwise, false.
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>stream</em> is null."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: The stream does not support write operations such as compression. (The <xref href="System.IO.Stream.CanWrite" data-throw-if-not-resolved="false"></xref> property on the stream object is false.)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.IO.Compression.GZipStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionMode)
  commentId: M:System.IO.Compression.GZipStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionMode)
  id: '#ctor(System.IO.Stream,System.IO.Compression.CompressionMode)'
  parent: System.IO.Compression.GZipStream
  langs:
  - csharp
  - vb
  name: GZipStream(Stream, CompressionMode)
  fullName: System.IO.Compression.GZipStream.GZipStream(System.IO.Stream, System.IO.Compression.CompressionMode)
  type: Constructor
  source:
    remote:
      path: src/System.IO.Compression/ref/System.IO.Compression.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.IO.Compression/ref/System.IO.Compression.cs
    startLine: 46
  assemblies:
  - System.IO.Compression
  namespace: System.IO.Compression
  summary: Initializes a new instance of the <xref href="System.IO.Compression.GZipStream" data-throw-if-not-resolved="false"></xref> class by using the specified stream and compression mode.
  syntax:
    content: public GZipStream(Stream stream, CompressionMode mode)
    content.vb: Public Sub New(stream As Stream, mode As CompressionMode)
    parameters:
    - id: stream
      type: System.IO.Stream
      description: The stream the compressed or decompressed data is written to.
    - id: mode
      type: System.IO.Compression.CompressionMode
      description: One of the enumeration values that indicates whether to compress or decompress the stream.
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>stream</em> is null."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<em>mode</em> is not a valid <xref href=\"System.IO.Compression.CompressionMode\" data-throw-if-not-resolved=\"false\"></xref> enumeration value.-or-<xref href=\"System.IO.Compression.CompressionMode\" data-throw-if-not-resolved=\"false\"></xref> is <xref href=\"System.IO.Compression.CompressionMode.Compress\" data-throw-if-not-resolved=\"false\"></xref>  and <xref href=\"System.IO.Stream.CanWrite\" data-throw-if-not-resolved=\"false\"></xref> is false.-or-<xref href=\"System.IO.Compression.CompressionMode\" data-throw-if-not-resolved=\"false\"></xref> is <xref href=\"System.IO.Compression.CompressionMode.Decompress\" data-throw-if-not-resolved=\"false\"></xref>  and <xref href=\"System.IO.Stream.CanRead\" data-throw-if-not-resolved=\"false\"></xref> is false."
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.IO.Compression.GZipStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionMode,System.Boolean)
  commentId: M:System.IO.Compression.GZipStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionMode,System.Boolean)
  id: '#ctor(System.IO.Stream,System.IO.Compression.CompressionMode,System.Boolean)'
  parent: System.IO.Compression.GZipStream
  langs:
  - csharp
  - vb
  name: GZipStream(Stream, CompressionMode, Boolean)
  fullName: System.IO.Compression.GZipStream.GZipStream(System.IO.Stream, System.IO.Compression.CompressionMode, System.Boolean)
  type: Constructor
  source:
    remote:
      path: src/System.IO.Compression/ref/System.IO.Compression.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.IO.Compression/ref/System.IO.Compression.cs
    startLine: 47
  assemblies:
  - System.IO.Compression
  namespace: System.IO.Compression
  summary: Initializes a new instance of the <xref href="System.IO.Compression.GZipStream" data-throw-if-not-resolved="false"></xref> class by using the specified stream and compression mode, and optionally leaves the stream open.
  syntax:
    content: public GZipStream(Stream stream, CompressionMode mode, bool leaveOpen)
    content.vb: Public Sub New(stream As Stream, mode As CompressionMode, leaveOpen As Boolean)
    parameters:
    - id: stream
      type: System.IO.Stream
      description: The stream the compressed or decompressed data is written to.
    - id: mode
      type: System.IO.Compression.CompressionMode
      description: One of the enumeration values that indicates whether to compress or decompress the stream.
    - id: leaveOpen
      type: System.Boolean
      description: true to leave the stream open after disposing the <xref href="System.IO.Compression.GZipStream" data-throw-if-not-resolved="false"></xref> object; otherwise, false.
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>stream</em> is null."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<em>mode</em> is not a valid <xref href=\"System.IO.Compression.CompressionMode\" data-throw-if-not-resolved=\"false\"></xref> value.-or-<xref href=\"System.IO.Compression.CompressionMode\" data-throw-if-not-resolved=\"false\"></xref> is <xref href=\"System.IO.Compression.CompressionMode.Compress\" data-throw-if-not-resolved=\"false\"></xref>  and <xref href=\"System.IO.Stream.CanWrite\" data-throw-if-not-resolved=\"false\"></xref> is false.-or-<xref href=\"System.IO.Compression.CompressionMode\" data-throw-if-not-resolved=\"false\"></xref> is <xref href=\"System.IO.Compression.CompressionMode.Decompress\" data-throw-if-not-resolved=\"false\"></xref>  and <xref href=\"System.IO.Stream.CanRead\" data-throw-if-not-resolved=\"false\"></xref> is false."
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.IO.Compression.GZipStream.BaseStream
  commentId: P:System.IO.Compression.GZipStream.BaseStream
  id: BaseStream
  parent: System.IO.Compression.GZipStream
  langs:
  - csharp
  - vb
  name: BaseStream
  fullName: System.IO.Compression.GZipStream.BaseStream
  type: Property
  source:
    remote:
      path: src/System.IO.Compression/src/System/IO/Compression/GZipStream.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: BaseStream
    path: src/System.IO.Compression/src/System/IO/Compression/GZipStream.cs
    startLine: 146
  assemblies:
  - System.IO.Compression
  namespace: System.IO.Compression
  summary: Gets a reference to the underlying stream.
  syntax:
    content: public Stream BaseStream { get; }
    content.vb: Public ReadOnly Property BaseStream As Stream
    parameters: []
    return:
      type: System.IO.Stream
      description: A stream object that represents the underlying stream.
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: The underlying stream is closed.
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.IO.Compression.GZipStream.CanRead
  commentId: P:System.IO.Compression.GZipStream.CanRead
  id: CanRead
  parent: System.IO.Compression.GZipStream
  langs:
  - csharp
  - vb
  name: CanRead
  fullName: System.IO.Compression.GZipStream.CanRead
  type: Property
  source:
    remote:
      path: src/System.IO.Compression/src/System/IO/Compression/GZipStream.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CanRead
    path: src/System.IO.Compression/src/System/IO/Compression/GZipStream.cs
    startLine: 35
  assemblies:
  - System.IO.Compression
  namespace: System.IO.Compression
  summary: Gets a value indicating whether the stream supports reading while decompressing a file.
  syntax:
    content: public override bool CanRead { get; }
    content.vb: Public Overrides ReadOnly Property CanRead As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: true if the <xref href="System.IO.Compression.CompressionMode" data-throw-if-not-resolved="false"></xref> value is Decompress, and the underlying stream supports reading and is not closed; otherwise, false.
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: System.IO.Compression.GZipStream.CanSeek
  commentId: P:System.IO.Compression.GZipStream.CanSeek
  id: CanSeek
  parent: System.IO.Compression.GZipStream
  langs:
  - csharp
  - vb
  name: CanSeek
  fullName: System.IO.Compression.GZipStream.CanSeek
  type: Property
  source:
    remote:
      path: src/System.IO.Compression/src/System/IO/Compression/GZipStream.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CanSeek
    path: src/System.IO.Compression/src/System/IO/Compression/GZipStream.cs
    startLine: 61
  assemblies:
  - System.IO.Compression
  namespace: System.IO.Compression
  summary: Gets a value indicating whether the stream supports seeking.
  syntax:
    content: public override bool CanSeek { get; }
    content.vb: Public Overrides ReadOnly Property CanSeek As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: false in all cases.
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: System.IO.Compression.GZipStream.CanWrite
  commentId: P:System.IO.Compression.GZipStream.CanWrite
  id: CanWrite
  parent: System.IO.Compression.GZipStream
  langs:
  - csharp
  - vb
  name: CanWrite
  fullName: System.IO.Compression.GZipStream.CanWrite
  type: Property
  source:
    remote:
      path: src/System.IO.Compression/src/System/IO/Compression/GZipStream.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CanWrite
    path: src/System.IO.Compression/src/System/IO/Compression/GZipStream.cs
    startLine: 48
  assemblies:
  - System.IO.Compression
  namespace: System.IO.Compression
  summary: Gets a value indicating whether the stream supports writing.
  syntax:
    content: public override bool CanWrite { get; }
    content.vb: Public Overrides ReadOnly Property CanWrite As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: true if the <xref href="System.IO.Compression.CompressionMode" data-throw-if-not-resolved="false"></xref> value is Compress, and the underlying stream supports writing and is not closed; otherwise, false.
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: System.IO.Compression.GZipStream.Length
  commentId: P:System.IO.Compression.GZipStream.Length
  id: Length
  parent: System.IO.Compression.GZipStream
  langs:
  - csharp
  - vb
  name: Length
  fullName: System.IO.Compression.GZipStream.Length
  type: Property
  source:
    remote:
      path: src/System.IO.Compression/src/System/IO/Compression/GZipStream.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Length
    path: src/System.IO.Compression/src/System/IO/Compression/GZipStream.cs
    startLine: 74
  assemblies:
  - System.IO.Compression
  namespace: System.IO.Compression
  summary: This property is not supported and always throws a <xref href="System.NotSupportedException" data-throw-if-not-resolved="false"></xref>.
  syntax:
    content: public override long Length { get; }
    content.vb: Public Overrides ReadOnly Property Length As Long
    parameters: []
    return:
      type: System.Int64
      description: A long value.
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: This property is not supported on this stream.
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: System.IO.Compression.GZipStream.Position
  commentId: P:System.IO.Compression.GZipStream.Position
  id: Position
  parent: System.IO.Compression.GZipStream
  langs:
  - csharp
  - vb
  name: Position
  fullName: System.IO.Compression.GZipStream.Position
  type: Property
  source:
    remote:
      path: src/System.IO.Compression/src/System/IO/Compression/GZipStream.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Position
    path: src/System.IO.Compression/src/System/IO/Compression/GZipStream.cs
    startLine: 82
  assemblies:
  - System.IO.Compression
  namespace: System.IO.Compression
  summary: This property is not supported and always throws a <xref href="System.NotSupportedException" data-throw-if-not-resolved="false"></xref>.
  syntax:
    content: public override long Position { get; set; }
    content.vb: Public Overrides Property Position As Long
    parameters: []
    return:
      type: System.Int64
      description: A long value.
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: This property is not supported on this stream.
  modifiers.csharp:
  - public
  - override
  - get
  - set
  modifiers.vb:
  - Public
  - Overrides
- uid: System.IO.Compression.GZipStream.Dispose(System.Boolean)
  commentId: M:System.IO.Compression.GZipStream.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.IO.Compression.GZipStream
  langs:
  - csharp
  - vb
  name: Dispose(Boolean)
  fullName: System.IO.Compression.GZipStream.Dispose(System.Boolean)
  type: Method
  source:
    remote:
      path: src/System.IO.Compression/src/System/IO/Compression/GZipStream.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Dispose
    path: src/System.IO.Compression/src/System/IO/Compression/GZipStream.cs
    startLine: 130
  assemblies:
  - System.IO.Compression
  namespace: System.IO.Compression
  summary: Releases the unmanaged resources used by the <xref href="System.IO.Compression.GZipStream" data-throw-if-not-resolved="false"></xref> and optionally releases the managed resources.
  syntax:
    content: protected override void Dispose(bool disposing)
    content.vb: Protected Overrides Sub Dispose(disposing As Boolean)
    parameters:
    - id: disposing
      type: System.Boolean
      description: true to release both managed and unmanaged resources; false to release only unmanaged resources.
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: System.IO.Compression.GZipStream.Flush
  commentId: M:System.IO.Compression.GZipStream.Flush
  id: Flush
  parent: System.IO.Compression.GZipStream
  langs:
  - csharp
  - vb
  name: Flush()
  fullName: System.IO.Compression.GZipStream.Flush()
  type: Method
  source:
    remote:
      path: src/System.IO.Compression/src/System/IO/Compression/GZipStream.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Flush
    path: src/System.IO.Compression/src/System/IO/Compression/GZipStream.cs
    startLine: 95
  assemblies:
  - System.IO.Compression
  namespace: System.IO.Compression
  summary: The current implementation of this method has no functionality.
  syntax:
    content: public override void Flush()
    content.vb: Public Overrides Sub Flush
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: The stream is closed.
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.IO.Compression.GZipStream.Read(System.Byte[],System.Int32,System.Int32)
  commentId: M:System.IO.Compression.GZipStream.Read(System.Byte[],System.Int32,System.Int32)
  id: Read(System.Byte[],System.Int32,System.Int32)
  parent: System.IO.Compression.GZipStream
  langs:
  - csharp
  - vb
  name: Read(Byte[], Int32, Int32)
  fullName: System.IO.Compression.GZipStream.Read(System.Byte[], System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: src/System.IO.Compression/src/System/IO/Compression/GZipStream.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Read
    path: src/System.IO.Compression/src/System/IO/Compression/GZipStream.cs
    startLine: 118
  assemblies:
  - System.IO.Compression
  namespace: System.IO.Compression
  summary: Reads a number of decompressed bytes into the specified byte array.
  syntax:
    content: public override int Read(byte[] array, int offset, int count)
    content.vb: Public Overrides Function Read(array As Byte(), offset As Integer, count As Integer) As Integer
    parameters:
    - id: array
      type: System.Byte[]
      description: The array used to store decompressed bytes.
    - id: offset
      type: System.Int32
      description: The byte offset in <em>array</em> at which the read bytes will be placed.
    - id: count
      type: System.Int32
      description: The maximum number of decompressed bytes to read.
    return:
      type: System.Int32
      description: The number of bytes that were decompressed into the byte array. If the end of the stream has been reached, zero or the number of bytes read is returned.
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>array</em> is null."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: The <xref href="System.IO.Compression.CompressionMode" data-throw-if-not-resolved="false"></xref> value was Compress when the object was created.- or -The underlying stream does not support reading.
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<em>offset</em> or <em>count</em> is less than zero.-or-<em>array</em> length minus the index starting point is less than <em>count</em>."
  - type: System.IO.InvalidDataException
    commentId: T:System.IO.InvalidDataException
    description: The data is in an invalid format.
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: The stream is closed.
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: System.IO.Compression.GZipStream.Read(System.Byte(), System.Int32, System.Int32)
  name.vb: Read(Byte(), Int32, Int32)
- uid: System.IO.Compression.GZipStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)
  commentId: M:System.IO.Compression.GZipStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)
  id: ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)
  parent: System.IO.Compression.GZipStream
  langs:
  - csharp
  - vb
  name: ReadAsync(Byte[], Int32, Int32, Threading.CancellationToken)
  fullName: System.IO.Compression.GZipStream.ReadAsync(System.Byte[], System.Int32, System.Int32, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/System.IO.Compression/ref/System.IO.Compression.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ReadAsync
    path: src/System.IO.Compression/ref/System.IO.Compression.cs
    startLine: 57
  assemblies:
  - System.IO.Compression
  namespace: System.IO.Compression
  syntax:
    content: public override Threading.Tasks.Task<int> ReadAsync(byte[] array, int offset, int count, Threading.CancellationToken cancellationToken)
    content.vb: Public Overrides Function ReadAsync(array As Byte(), offset As Integer, count As Integer, cancellationToken As Threading.CancellationToken) As Threading.Tasks.Task(Of Integer)
    parameters:
    - id: array
      type: System.Byte[]
    - id: offset
      type: System.Int32
    - id: count
      type: System.Int32
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.Int32}
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: System.IO.Compression.GZipStream.ReadAsync(System.Byte(), System.Int32, System.Int32, System.Threading.CancellationToken)
  name.vb: ReadAsync(Byte(), Int32, Int32, Threading.CancellationToken)
- uid: System.IO.Compression.GZipStream.Seek(System.Int64,System.IO.SeekOrigin)
  commentId: M:System.IO.Compression.GZipStream.Seek(System.Int64,System.IO.SeekOrigin)
  id: Seek(System.Int64,System.IO.SeekOrigin)
  parent: System.IO.Compression.GZipStream
  langs:
  - csharp
  - vb
  name: Seek(Int64, SeekOrigin)
  fullName: System.IO.Compression.GZipStream.Seek(System.Int64, System.IO.SeekOrigin)
  type: Method
  source:
    remote:
      path: src/System.IO.Compression/ref/System.IO.Compression.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Seek
    path: src/System.IO.Compression/ref/System.IO.Compression.cs
    startLine: 58
  assemblies:
  - System.IO.Compression
  namespace: System.IO.Compression
  summary: This property is not supported and always throws a <xref href="System.NotSupportedException" data-throw-if-not-resolved="false"></xref>.
  syntax:
    content: public override long Seek(long offset, SeekOrigin origin)
    content.vb: Public Overrides Function Seek(offset As Long, origin As SeekOrigin) As Long
    parameters:
    - id: offset
      type: System.Int64
      description: The location in the stream.
    - id: origin
      type: System.IO.SeekOrigin
      description: One of the <xref href="System.IO.SeekOrigin" data-throw-if-not-resolved="false"></xref> values.
    return:
      type: System.Int64
      description: A long value.
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: This property is not supported on this stream.
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.IO.Compression.GZipStream.SetLength(System.Int64)
  commentId: M:System.IO.Compression.GZipStream.SetLength(System.Int64)
  id: SetLength(System.Int64)
  parent: System.IO.Compression.GZipStream
  langs:
  - csharp
  - vb
  name: SetLength(Int64)
  fullName: System.IO.Compression.GZipStream.SetLength(System.Int64)
  type: Method
  source:
    remote:
      path: src/System.IO.Compression/src/System/IO/Compression/GZipStream.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: SetLength
    path: src/System.IO.Compression/src/System/IO/Compression/GZipStream.cs
    startLine: 107
  assemblies:
  - System.IO.Compression
  namespace: System.IO.Compression
  summary: This property is not supported and always throws a <xref href="System.NotSupportedException" data-throw-if-not-resolved="false"></xref>.
  syntax:
    content: public override void SetLength(long value)
    content.vb: Public Overrides Sub SetLength(value As Long)
    parameters:
    - id: value
      type: System.Int64
      description: The length of the stream.
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: This property is not supported on this stream.
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.IO.Compression.GZipStream.Write(System.Byte[],System.Int32,System.Int32)
  commentId: M:System.IO.Compression.GZipStream.Write(System.Byte[],System.Int32,System.Int32)
  id: Write(System.Byte[],System.Int32,System.Int32)
  parent: System.IO.Compression.GZipStream
  langs:
  - csharp
  - vb
  name: Write(Byte[], Int32, Int32)
  fullName: System.IO.Compression.GZipStream.Write(System.Byte[], System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: src/System.IO.Compression/src/System/IO/Compression/GZipStream.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Write
    path: src/System.IO.Compression/src/System/IO/Compression/GZipStream.cs
    startLine: 124
  assemblies:
  - System.IO.Compression
  namespace: System.IO.Compression
  summary: Writes compressed bytes to the underlying stream from the specified byte array.
  syntax:
    content: public override void Write(byte[] array, int offset, int count)
    content.vb: Public Overrides Sub Write(array As Byte(), offset As Integer, count As Integer)
    parameters:
    - id: array
      type: System.Byte[]
      description: The buffer that contains the data to compress.
    - id: offset
      type: System.Int32
      description: The byte offset in <em>array</em> from which the bytes will be read.
    - id: count
      type: System.Int32
      description: The maximum number of bytes to write.
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: The write operation cannot be performed because the stream is closed.
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: System.IO.Compression.GZipStream.Write(System.Byte(), System.Int32, System.Int32)
  name.vb: Write(Byte(), Int32, Int32)
- uid: System.IO.Compression.GZipStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)
  commentId: M:System.IO.Compression.GZipStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)
  id: WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)
  parent: System.IO.Compression.GZipStream
  langs:
  - csharp
  - vb
  name: WriteAsync(Byte[], Int32, Int32, Threading.CancellationToken)
  fullName: System.IO.Compression.GZipStream.WriteAsync(System.Byte[], System.Int32, System.Int32, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/System.IO.Compression/ref/System.IO.Compression.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: WriteAsync
    path: src/System.IO.Compression/ref/System.IO.Compression.cs
    startLine: 61
  assemblies:
  - System.IO.Compression
  namespace: System.IO.Compression
  syntax:
    content: public override Threading.Tasks.Task WriteAsync(byte[] array, int offset, int count, Threading.CancellationToken cancellationToken)
    content.vb: Public Overrides Function WriteAsync(array As Byte(), offset As Integer, count As Integer, cancellationToken As Threading.CancellationToken) As Threading.Tasks.Task
    parameters:
    - id: array
      type: System.Byte[]
    - id: offset
      type: System.Int32
    - id: count
      type: System.Int32
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: System.IO.Compression.GZipStream.WriteAsync(System.Byte(), System.Int32, System.Int32, System.Threading.CancellationToken)
  name.vb: WriteAsync(Byte(), Int32, Int32, Threading.CancellationToken)
references:
- uid: System.IO.Compression
  isExternal: false
  name: System.IO.Compression
  fullName: System.IO.Compression
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.IO.Stream
  parent: System.IO
  isExternal: false
  name: IO.Stream
  fullName: System.IO.Stream
- uid: System.IO.Compression.CompressionLevel
  parent: System.IO.Compression
  isExternal: false
  name: CompressionLevel
  fullName: System.IO.Compression.CompressionLevel
- uid: System.IO
  isExternal: false
  name: System.IO
  fullName: System.IO
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  fullName: System.Boolean
- uid: System.IO.Compression.CompressionMode
  parent: System.IO.Compression
  isExternal: false
  name: CompressionMode
  fullName: System.IO.Compression.CompressionMode
- uid: System.Int64
  parent: System
  isExternal: false
  name: Int64
  fullName: System.Int64
- uid: System.Byte[]
  isExternal: false
  name: Byte[]
  fullName: System.Byte[]
  fullname.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
  - name: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
  - name: ()
    fullName: ()
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  fullName: System.Int32
- uid: System.Threading.CancellationToken
  parent: System.Threading
  isExternal: false
  name: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task{System.Int32}
  definition: System.Threading.Tasks.Task`1
  name: Threading.Tasks.Task<Int32>
  fullName: System.Threading.Tasks.Task<System.Int32>
  fullname.vb: System.Threading.Tasks.Task(Of System.Int32)
  name.vb: Threading.Tasks.Task(Of Int32)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Threading.Tasks.Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Threading.Tasks.Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
- uid: System.Threading
  isExternal: false
  name: System.Threading
  fullName: System.Threading
- uid: System.Threading.Tasks.Task`1
  parent: System.Threading.Tasks
  isExternal: false
  name: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  fullname.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
  - name: <
    fullName: <
  - name: TResult
    fullName: TResult
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
  - name: '(Of '
    fullName: '(Of '
  - name: TResult
    fullName: TResult
  - name: )
    fullName: )
- uid: System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: System.IO.SeekOrigin
  parent: System.IO
  isExternal: false
  name: SeekOrigin
  fullName: System.IO.SeekOrigin
- uid: System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: false
  name: Task
  fullName: System.Threading.Tasks.Task
- uid: System.ArgumentNullException
  isExternal: false
  name: ArgumentNullException
  fullName: System.ArgumentNullException
- uid: System.ArgumentException
  parent: System
  isExternal: false
  name: ArgumentException
  fullName: System.ArgumentException
- uid: System.ObjectDisposedException
  isExternal: false
  name: ObjectDisposedException
  fullName: System.ObjectDisposedException
- uid: System.NotSupportedException
  parent: System
  isExternal: false
  name: NotSupportedException
  fullName: System.NotSupportedException
- uid: System.InvalidOperationException
  parent: System
  isExternal: false
  name: InvalidOperationException
  fullName: System.InvalidOperationException
- uid: System.ArgumentOutOfRangeException
  isExternal: false
  name: ArgumentOutOfRangeException
  fullName: System.ArgumentOutOfRangeException
- uid: System.IO.InvalidDataException
  isExternal: false
  name: InvalidDataException
  fullName: System.IO.InvalidDataException
