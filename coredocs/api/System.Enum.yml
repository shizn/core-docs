items:
- uid: System.Enum
  commentId: T:System.Enum
  id: Enum
  parent: System
  children:
  - System.Enum.#ctor
  - System.Enum.CompareTo(System.Object)
  - System.Enum.Equals(System.Object)
  - System.Enum.Format(System.Type,System.Object,System.String)
  - System.Enum.GetHashCode
  - System.Enum.GetName(System.Type,System.Object)
  - System.Enum.GetNames(System.Type)
  - System.Enum.GetUnderlyingType(System.Type)
  - System.Enum.GetValues(System.Type)
  - System.Enum.HasFlag(System.Enum)
  - System.Enum.IsDefined(System.Type,System.Object)
  - System.Enum.Parse(System.Type,System.String)
  - System.Enum.Parse(System.Type,System.String,System.Boolean)
  - System.Enum.System#IConvertible#GetTypeCode
  - System.Enum.System#IConvertible#ToBoolean(System.IFormatProvider)
  - System.Enum.System#IConvertible#ToByte(System.IFormatProvider)
  - System.Enum.System#IConvertible#ToChar(System.IFormatProvider)
  - System.Enum.System#IConvertible#ToDateTime(System.IFormatProvider)
  - System.Enum.System#IConvertible#ToDecimal(System.IFormatProvider)
  - System.Enum.System#IConvertible#ToDouble(System.IFormatProvider)
  - System.Enum.System#IConvertible#ToInt16(System.IFormatProvider)
  - System.Enum.System#IConvertible#ToInt32(System.IFormatProvider)
  - System.Enum.System#IConvertible#ToInt64(System.IFormatProvider)
  - System.Enum.System#IConvertible#ToSByte(System.IFormatProvider)
  - System.Enum.System#IConvertible#ToSingle(System.IFormatProvider)
  - System.Enum.System#IConvertible#ToString(System.IFormatProvider)
  - System.Enum.System#IConvertible#ToType(System.Type,System.IFormatProvider)
  - System.Enum.System#IConvertible#ToUInt16(System.IFormatProvider)
  - System.Enum.System#IConvertible#ToUInt32(System.IFormatProvider)
  - System.Enum.System#IConvertible#ToUInt64(System.IFormatProvider)
  - System.Enum.System#IFormattable#ToString(System.String,System.IFormatProvider)
  - System.Enum.ToObject(System.Type,System.Object)
  - System.Enum.ToString
  - System.Enum.ToString(System.String)
  - System.Enum.TryParse``1(System.String,``0@)
  - System.Enum.TryParse``1(System.String,System.Boolean,``0@)
  langs:
  - csharp
  - vb
  name: Enum
  fullName: System.Enum
  type: Class
  source:
    remote:
      path: src/mscorlib/src/System/Enum.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Enum
    path: src/mscorlib/src/System/Enum.cs
    startLine: 15
  assemblies:
  - System.Runtime
  namespace: System
  summary: Provides the base class for enumerations.
  syntax:
    content: 'public abstract class Enum : ValueType, IComparable, IConvertible, IFormattable'
    content.vb: >-
      Public MustInherit Class Enum
          Inherits ValueType
          Implements IComparable, IConvertible, IFormattable
  inheritance:
  - System.Object
  - System.ValueType
  implements:
  - System.IComparable
  - System.IConvertible
  - System.IFormattable
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: System.Enum.#ctor
  commentId: M:System.Enum.#ctor
  id: '#ctor'
  parent: System.Enum
  langs:
  - csharp
  - vb
  name: Enum()
  fullName: System.Enum.Enum()
  type: Constructor
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 790
  assemblies:
  - System.Runtime
  namespace: System
  summary: 'Initializes a new instance of the <xref href="System.Enum" data-throw-if-not-resolved="false"></xref> class. '
  syntax:
    content: protected Enum()
    content.vb: Protected Sub New
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: System.Enum.CompareTo(System.Object)
  commentId: M:System.Enum.CompareTo(System.Object)
  id: CompareTo(System.Object)
  parent: System.Enum
  langs:
  - csharp
  - vb
  name: CompareTo(Object)
  fullName: System.Enum.CompareTo(System.Object)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Enum.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: CompareTo
    path: src/mscorlib/src/System/Enum.cs
    startLine: 809
  assemblies:
  - System.Runtime
  namespace: System
  summary: Compares this instance to a specified object and returns an indication of their relative values.
  syntax:
    content: public int CompareTo(object target)
    content.vb: Public Function CompareTo(target As Object) As Integer
    parameters:
    - id: target
      type: System.Object
      description: 'An object to compare, or null. '
    return:
      type: System.Int32
      description: 'A signed number that indicates the relative values of this instance and <em>target</em>.Value Meaning Less than zero The value of this instance is less than the value of <em>target</em>. Zero The value of this instance is equal to the value of <em>target</em>. Greater than zero The value of this instance is greater than the value of <em>target</em>.-or- <em>target</em> is null. '
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<em>target</em> and this instance are not the same type. "
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: 'This instance is not type <xref href="System.SByte" data-throw-if-not-resolved="false"></xref>, <xref href="System.Int16" data-throw-if-not-resolved="false"></xref>, <xref href="System.Int32" data-throw-if-not-resolved="false"></xref>, <xref href="System.Int64" data-throw-if-not-resolved="false"></xref>, <xref href="System.Byte" data-throw-if-not-resolved="false"></xref>, <xref href="System.UInt16" data-throw-if-not-resolved="false"></xref>, <xref href="System.UInt32" data-throw-if-not-resolved="false"></xref>, or <xref href="System.UInt64" data-throw-if-not-resolved="false"></xref>. '
  implements:
  - System.IComparable.CompareTo(System.Object)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Enum.Equals(System.Object)
  commentId: M:System.Enum.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Enum
  langs:
  - csharp
  - vb
  name: Equals(Object)
  fullName: System.Enum.Equals(System.Object)
  type: Method
  source:
    path: mscorlib
    isExternal: true
  assemblies:
  - System.Runtime
  namespace: System
  summary: Returns a value indicating whether this instance is equal to a specified object.
  syntax:
    content: public override bool Equals(object obj)
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
    parameters:
    - id: obj
      type: System.Object
      description: 'An object to compare with this instance, or null. '
    return:
      type: System.Boolean
      description: true if <em>obj</em> is an enumeration value of the same type and with the same underlying value as this instance; otherwise, false.
  overridden: System.ValueType.Equals(System.Object)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Enum.Format(System.Type,System.Object,System.String)
  commentId: M:System.Enum.Format(System.Type,System.Object,System.String)
  id: Format(System.Type,System.Object,System.String)
  parent: System.Enum
  langs:
  - csharp
  - vb
  name: Format(Type, Object, String)
  fullName: System.Enum.Format(System.Type, System.Object, System.String)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Enum.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Format
    path: src/mscorlib/src/System/Enum.cs
    startLine: 602
  assemblies:
  - System.Runtime
  namespace: System
  summary: Converts the specified value of a specified enumerated type to its equivalent string representation according to the specified format.
  syntax:
    content: public static string Format(Type enumType, object value, string format)
    content.vb: Public Shared Function Format(enumType As Type, value As Object, format As String) As String
    parameters:
    - id: enumType
      type: System.Type
      description: 'The enumeration type of the value to convert. '
    - id: value
      type: System.Object
      description: 'The value to convert. '
    - id: format
      type: System.String
      description: 'The output format to use. '
    return:
      type: System.String
      description: A string representation of <em>value</em>.
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: 'The <em>enumType</em>, <em>value</em>, or <em>format</em> parameter is null. '
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: 'The <em>enumType</em> parameter is not an <xref href="System.Enum" data-throw-if-not-resolved="false"></xref> type.-or- The <em>value</em> is from an enumeration that differs in type from <em>enumType</em>.-or- The type of <em>value</em> is not an underlying type of <em>enumType</em>. '
  - type: System.FormatException
    commentId: T:System.FormatException
    description: 'The <em>format</em> parameter contains an invalid value. '
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "\n<em>format</em> equals \"X\", but the enumeration type is unknown."
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Enum.GetHashCode
  commentId: M:System.Enum.GetHashCode
  id: GetHashCode
  parent: System.Enum
  langs:
  - csharp
  - vb
  name: GetHashCode()
  fullName: System.Enum.GetHashCode()
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Enum.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: GetHashCode
    path: src/mscorlib/src/System/Enum.cs
    startLine: 744
  assemblies:
  - System.Runtime
  namespace: System
  summary: Returns the hash code for the value of this instance.
  syntax:
    content: public override int GetHashCode()
    content.vb: Public Overrides Function GetHashCode As Integer
    return:
      type: System.Int32
      description: A 32-bit signed integer hash code.
  overridden: System.ValueType.GetHashCode
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Enum.GetName(System.Type,System.Object)
  commentId: M:System.Enum.GetName(System.Type,System.Object)
  id: GetName(System.Type,System.Object)
  parent: System.Enum
  langs:
  - csharp
  - vb
  name: GetName(Type, Object)
  fullName: System.Enum.GetName(System.Type, System.Object)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Enum.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: GetName
    path: src/mscorlib/src/System/Enum.cs
    startLine: 516
  assemblies:
  - System.Runtime
  namespace: System
  summary: Retrieves the name of the constant in the specified enumeration that has the specified value.
  syntax:
    content: public static string GetName(Type enumType, object value)
    content.vb: Public Shared Function GetName(enumType As Type, value As Object) As String
    parameters:
    - id: enumType
      type: System.Type
      description: 'An enumeration type. '
    - id: value
      type: System.Object
      description: 'The value of a particular enumerated constant in terms of its underlying type. '
    return:
      type: System.String
      description: A string containing the name of the enumerated constant in <em>enumType</em> whose value is <em>value</em>; or null if no such constant is found.
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>enumType</em> or <em>value</em> is null. "
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<em>enumType</em> is not an <xref href=\"System.Enum\" data-throw-if-not-resolved=\"false\"></xref>.-or- <em>value</em> is neither of type <em>enumType</em> nor does it have the same underlying type as <em>enumType</em>. "
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Enum.GetNames(System.Type)
  commentId: M:System.Enum.GetNames(System.Type)
  id: GetNames(System.Type)
  parent: System.Enum
  langs:
  - csharp
  - vb
  name: GetNames(Type)
  fullName: System.Enum.GetNames(System.Type)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Enum.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: GetNames
    path: src/mscorlib/src/System/Enum.cs
    startLine: 526
  assemblies:
  - System.Runtime
  namespace: System
  summary: Retrieves an array of the names of the constants in a specified enumeration.
  syntax:
    content: public static string[] GetNames(Type enumType)
    content.vb: Public Shared Function GetNames(enumType As Type) As String()
    parameters:
    - id: enumType
      type: System.Type
      description: 'An enumeration type. '
    return:
      type: System.String[]
      description: 'A string array of the names of the constants in <em>enumType</em>. '
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>enumType</em> is null. "
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<em>enumType</em> parameter is not an <xref href=\"System.Enum\" data-throw-if-not-resolved=\"false\"></xref>. "
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Enum.GetUnderlyingType(System.Type)
  commentId: M:System.Enum.GetUnderlyingType(System.Type)
  id: GetUnderlyingType(System.Type)
  parent: System.Enum
  langs:
  - csharp
  - vb
  name: GetUnderlyingType(Type)
  fullName: System.Enum.GetUnderlyingType(System.Type)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Enum.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: GetUnderlyingType
    path: src/mscorlib/src/System/Enum.cs
    startLine: 488
  assemblies:
  - System.Runtime
  namespace: System
  summary: Returns the underlying type of the specified enumeration.
  syntax:
    content: public static Type GetUnderlyingType(Type enumType)
    content.vb: Public Shared Function GetUnderlyingType(enumType As Type) As Type
    parameters:
    - id: enumType
      type: System.Type
      description: The enumeration whose underlying type will be retrieved.
    return:
      type: System.Type
      description: The underlying type of <em>enumType</em>.
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>enumType</em> is null. "
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<em>enumType</em> is not an <xref href=\"System.Enum\" data-throw-if-not-resolved=\"false\"></xref>. "
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Enum.GetValues(System.Type)
  commentId: M:System.Enum.GetValues(System.Type)
  id: GetValues(System.Type)
  parent: System.Enum
  langs:
  - csharp
  - vb
  name: GetValues(Type)
  fullName: System.Enum.GetValues(System.Type)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Enum.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: GetValues
    path: src/mscorlib/src/System/Enum.cs
    startLine: 499
  assemblies:
  - System.Runtime
  namespace: System
  summary: Retrieves an array of the values of the constants in a specified enumeration.
  syntax:
    content: public static Array GetValues(Type enumType)
    content.vb: Public Shared Function GetValues(enumType As Type) As Array
    parameters:
    - id: enumType
      type: System.Type
      description: 'An enumeration type. '
    return:
      type: System.Array
      description: 'An array that contains the values of the constants in <em>enumType</em>. '
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>enumType</em> is null. "
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<em>enumType</em> is not an <xref href=\"System.Enum\" data-throw-if-not-resolved=\"false\"></xref>. "
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: The method is invoked by reflection in a reflection-only context, -or-<em>enumType</em> is a type from an assembly loaded in a reflection-only context.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Enum.HasFlag(System.Enum)
  commentId: M:System.Enum.HasFlag(System.Enum)
  id: HasFlag(System.Enum)
  parent: System.Enum
  langs:
  - csharp
  - vb
  name: HasFlag(Enum)
  fullName: System.Enum.HasFlag(System.Enum)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Enum.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: HasFlag
    path: src/mscorlib/src/System/Enum.cs
    startLine: 870
  assemblies:
  - System.Runtime
  namespace: System
  summary: Determines whether one or more bit fields are set in the current instance.
  syntax:
    content: public bool HasFlag(Enum flag)
    content.vb: Public Function HasFlag(flag As  Enum) As Boolean
    parameters:
    - id: flag
      type: System.Enum
      description: An enumeration value.
    return:
      type: System.Boolean
      description: true if the bit field or bit fields that are set in <em>flag</em> are also set in the current instance; otherwise, false.
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<em>flag</em> is a different type than the current instance."
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Enum.IsDefined(System.Type,System.Object)
  commentId: M:System.Enum.IsDefined(System.Type,System.Object)
  id: IsDefined(System.Type,System.Object)
  parent: System.Enum
  langs:
  - csharp
  - vb
  name: IsDefined(Type, Object)
  fullName: System.Enum.IsDefined(System.Type, System.Object)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Enum.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: IsDefined
    path: src/mscorlib/src/System/Enum.cs
    startLine: 591
  assemblies:
  - System.Runtime
  namespace: System
  summary: Returns an indication whether a constant with a specified value exists in a specified enumeration.
  syntax:
    content: public static bool IsDefined(Type enumType, object value)
    content.vb: Public Shared Function IsDefined(enumType As Type, value As Object) As Boolean
    parameters:
    - id: enumType
      type: System.Type
      description: 'An enumeration type. '
    - id: value
      type: System.Object
      description: 'The value or name of a constant in <em>enumType</em>. '
    return:
      type: System.Boolean
      description: true if a constant in <em>enumType</em> has a value equal to <em>value</em>; otherwise, false.
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>enumType</em> or <em>value</em> is null. "
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<em>enumType</em> is not an Enum.-or- The type of <em>value</em> is an enumeration, but it is not an enumeration of type <em>enumType</em>.-or- The type of <em>value</em> is not an underlying type of <em>enumType</em>. "
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "\n<em>value</em> is not type <xref href=\"System.SByte\" data-throw-if-not-resolved=\"false\"></xref>, <xref href=\"System.Int16\" data-throw-if-not-resolved=\"false\"></xref>, <xref href=\"System.Int32\" data-throw-if-not-resolved=\"false\"></xref>, <xref href=\"System.Int64\" data-throw-if-not-resolved=\"false\"></xref>, <xref href=\"System.Byte\" data-throw-if-not-resolved=\"false\"></xref>, <xref href=\"System.UInt16\" data-throw-if-not-resolved=\"false\"></xref>, <xref href=\"System.UInt32\" data-throw-if-not-resolved=\"false\"></xref>, or <xref href=\"System.UInt64\" data-throw-if-not-resolved=\"false\"></xref>, or <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref>. "
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Enum.Parse(System.Type,System.String)
  commentId: M:System.Enum.Parse(System.Type,System.String)
  id: Parse(System.Type,System.String)
  parent: System.Enum
  langs:
  - csharp
  - vb
  name: Parse(Type, String)
  fullName: System.Enum.Parse(System.Type, System.String)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Enum.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Parse
    path: src/mscorlib/src/System/Enum.cs
    startLine: 338
  assemblies:
  - System.Runtime
  namespace: System
  summary: Converts the string representation of the name or numeric value of one or more enumerated constants to an equivalent enumerated object.
  syntax:
    content: public static object Parse(Type enumType, string value)
    content.vb: Public Shared Function Parse(enumType As Type, value As String) As Object
    parameters:
    - id: enumType
      type: System.Type
      description: 'An enumeration type. '
    - id: value
      type: System.String
      description: 'A string containing the name or value to convert. '
    return:
      type: System.Object
      description: An object of type <em>enumType</em> whose value is represented by <em>value</em>.
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>enumType</em> or <em>value</em> is null. "
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<em>enumType</em> is not an <xref href=\"System.Enum\" data-throw-if-not-resolved=\"false\"></xref>.-or- <em>value</em> is either an empty string or only contains white space.-or- <em>value</em> is a name, but not one of the named constants defined for the enumeration. "
  - type: System.OverflowException
    commentId: T:System.OverflowException
    description: "\n<em>value</em> is outside the range of the underlying type of <em>enumType</em>."
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Enum.Parse(System.Type,System.String,System.Boolean)
  commentId: M:System.Enum.Parse(System.Type,System.String,System.Boolean)
  id: Parse(System.Type,System.String,System.Boolean)
  parent: System.Enum
  langs:
  - csharp
  - vb
  name: Parse(Type, String, Boolean)
  fullName: System.Enum.Parse(System.Type, System.String, System.Boolean)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Enum.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Parse
    path: src/mscorlib/src/System/Enum.cs
    startLine: 344
  assemblies:
  - System.Runtime
  namespace: System
  summary: Converts the string representation of the name or numeric value of one or more enumerated constants to an equivalent enumerated object. A parameter specifies whether the operation is case-insensitive.
  syntax:
    content: public static object Parse(Type enumType, string value, bool ignoreCase)
    content.vb: Public Shared Function Parse(enumType As Type, value As String, ignoreCase As Boolean) As Object
    parameters:
    - id: enumType
      type: System.Type
      description: 'An enumeration type. '
    - id: value
      type: System.String
      description: 'A string containing the name or value to convert. '
    - id: ignoreCase
      type: System.Boolean
      description: 'true to ignore case; false to regard case. '
    return:
      type: System.Object
      description: An object of type <em>enumType</em> whose value is represented by <em>value</em>.
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>enumType</em> or <em>value</em> is null. "
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<em>enumType</em> is not an <xref href=\"System.Enum\" data-throw-if-not-resolved=\"false\"></xref>.-or- <em>value</em> is either an empty string (\"\") or only contains white space.-or- <em>value</em> is a name, but not one of the named constants defined for the enumeration. "
  - type: System.OverflowException
    commentId: T:System.OverflowException
    description: "\n<em>value</em> is outside the range of the underlying type of <em>enumType</em>."
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Enum.System#IConvertible#GetTypeCode
  commentId: M:System.Enum.System#IConvertible#GetTypeCode
  id: System#IConvertible#GetTypeCode
  isEii: true
  parent: System.Enum
  langs:
  - csharp
  - vb
  name: IConvertible.GetTypeCode()
  fullName: System.Enum.System.IConvertible.GetTypeCode()
  type: Method
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: System.IConvertible.GetTypeCode
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 803
  assemblies:
  - System.Runtime
  namespace: System
  syntax:
    content: TypeCode IConvertible.GetTypeCode()
    content.vb: Function System.IConvertible.GetTypeCode As TypeCode Implements IConvertible.GetTypeCode
    return:
      type: System.TypeCode
  implements:
  - System.IConvertible.GetTypeCode
  name.vb: System.IConvertible.GetTypeCode()
- uid: System.Enum.System#IConvertible#ToBoolean(System.IFormatProvider)
  commentId: M:System.Enum.System#IConvertible#ToBoolean(System.IFormatProvider)
  id: System#IConvertible#ToBoolean(System.IFormatProvider)
  isEii: true
  parent: System.Enum
  langs:
  - csharp
  - vb
  name: IConvertible.ToBoolean(IFormatProvider)
  fullName: System.Enum.System.IConvertible.ToBoolean(System.IFormatProvider)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Enum.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: System.IConvertible.ToBoolean
    path: src/mscorlib/src/System/Enum.cs
    startLine: 946
  assemblies:
  - System.Runtime
  namespace: System
  summary: Converts the current value to a Boolean value based on the underlying type.
  syntax:
    content: bool IConvertible.ToBoolean(IFormatProvider provider)
    content.vb: Function System.IConvertible.ToBoolean(provider As IFormatProvider) As Boolean Implements IConvertible.ToBoolean
    parameters:
    - id: provider
      type: System.IFormatProvider
      description: An object that supplies culture-specific formatting information.
    return:
      type: System.Boolean
      description: This member always throws an exception.
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: 'In all cases. '
  implements:
  - System.IConvertible.ToBoolean(System.IFormatProvider)
  name.vb: System.IConvertible.ToBoolean(IFormatProvider)
- uid: System.Enum.System#IConvertible#ToByte(System.IFormatProvider)
  commentId: M:System.Enum.System#IConvertible#ToByte(System.IFormatProvider)
  id: System#IConvertible#ToByte(System.IFormatProvider)
  isEii: true
  parent: System.Enum
  langs:
  - csharp
  - vb
  name: IConvertible.ToByte(IFormatProvider)
  fullName: System.Enum.System.IConvertible.ToByte(System.IFormatProvider)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Enum.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: System.IConvertible.ToByte
    path: src/mscorlib/src/System/Enum.cs
    startLine: 964
  assemblies:
  - System.Runtime
  namespace: System
  summary: Converts the current value to an 8-bit unsigned integer based on the underlying type.
  syntax:
    content: byte IConvertible.ToByte(IFormatProvider provider)
    content.vb: Function System.IConvertible.ToByte(provider As IFormatProvider) As Byte Implements IConvertible.ToByte
    parameters:
    - id: provider
      type: System.IFormatProvider
      description: An object that supplies culture-specific formatting information.
    return:
      type: System.Byte
      description: The converted value.
  implements:
  - System.IConvertible.ToByte(System.IFormatProvider)
  name.vb: System.IConvertible.ToByte(IFormatProvider)
- uid: System.Enum.System#IConvertible#ToChar(System.IFormatProvider)
  commentId: M:System.Enum.System#IConvertible#ToChar(System.IFormatProvider)
  id: System#IConvertible#ToChar(System.IFormatProvider)
  isEii: true
  parent: System.Enum
  langs:
  - csharp
  - vb
  name: IConvertible.ToChar(IFormatProvider)
  fullName: System.Enum.System.IConvertible.ToChar(System.IFormatProvider)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Enum.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: System.IConvertible.ToChar
    path: src/mscorlib/src/System/Enum.cs
    startLine: 952
  assemblies:
  - System.Runtime
  namespace: System
  summary: Converts the current value to a Unicode character based on the underlying type.
  syntax:
    content: char IConvertible.ToChar(IFormatProvider provider)
    content.vb: Function System.IConvertible.ToChar(provider As IFormatProvider) As Char Implements IConvertible.ToChar
    parameters:
    - id: provider
      type: System.IFormatProvider
      description: An object that supplies culture-specific formatting information.
    return:
      type: System.Char
      description: This member always throws an exception.
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: 'In all cases. '
  implements:
  - System.IConvertible.ToChar(System.IFormatProvider)
  name.vb: System.IConvertible.ToChar(IFormatProvider)
- uid: System.Enum.System#IConvertible#ToDateTime(System.IFormatProvider)
  commentId: M:System.Enum.System#IConvertible#ToDateTime(System.IFormatProvider)
  id: System#IConvertible#ToDateTime(System.IFormatProvider)
  isEii: true
  parent: System.Enum
  langs:
  - csharp
  - vb
  name: IConvertible.ToDateTime(IFormatProvider)
  fullName: System.Enum.System.IConvertible.ToDateTime(System.IFormatProvider)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Enum.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: System.IConvertible.ToDateTime
    path: src/mscorlib/src/System/Enum.cs
    startLine: 1024
  assemblies:
  - System.Runtime
  namespace: System
  summary: Converts the current value to a <xref href="System.DateTime" data-throw-if-not-resolved="false"></xref> based on the underlying type.
  syntax:
    content: DateTime IConvertible.ToDateTime(IFormatProvider provider)
    content.vb: Function System.IConvertible.ToDateTime(provider As IFormatProvider) As Date Implements IConvertible.ToDateTime
    parameters:
    - id: provider
      type: System.IFormatProvider
      description: An object that supplies culture-specific formatting information.
    return:
      type: System.DateTime
      description: This member always throws an exception.
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: 'In all cases. '
  implements:
  - System.IConvertible.ToDateTime(System.IFormatProvider)
  name.vb: System.IConvertible.ToDateTime(IFormatProvider)
- uid: System.Enum.System#IConvertible#ToDecimal(System.IFormatProvider)
  commentId: M:System.Enum.System#IConvertible#ToDecimal(System.IFormatProvider)
  id: System#IConvertible#ToDecimal(System.IFormatProvider)
  isEii: true
  parent: System.Enum
  langs:
  - csharp
  - vb
  name: IConvertible.ToDecimal(IFormatProvider)
  fullName: System.Enum.System.IConvertible.ToDecimal(System.IFormatProvider)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Enum.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: System.IConvertible.ToDecimal
    path: src/mscorlib/src/System/Enum.cs
    startLine: 1018
  assemblies:
  - System.Runtime
  namespace: System
  summary: Converts the current value to a <xref href="System.Decimal" data-throw-if-not-resolved="false"></xref> based on the underlying type.
  syntax:
    content: decimal IConvertible.ToDecimal(IFormatProvider provider)
    content.vb: Function System.IConvertible.ToDecimal(provider As IFormatProvider) As Decimal Implements IConvertible.ToDecimal
    parameters:
    - id: provider
      type: System.IFormatProvider
      description: An object that supplies culture-specific formatting information.
    return:
      type: System.Decimal
      description: This member always throws an exception.
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: 'In all cases. '
  implements:
  - System.IConvertible.ToDecimal(System.IFormatProvider)
  name.vb: System.IConvertible.ToDecimal(IFormatProvider)
- uid: System.Enum.System#IConvertible#ToDouble(System.IFormatProvider)
  commentId: M:System.Enum.System#IConvertible#ToDouble(System.IFormatProvider)
  id: System#IConvertible#ToDouble(System.IFormatProvider)
  isEii: true
  parent: System.Enum
  langs:
  - csharp
  - vb
  name: IConvertible.ToDouble(IFormatProvider)
  fullName: System.Enum.System.IConvertible.ToDouble(System.IFormatProvider)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Enum.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: System.IConvertible.ToDouble
    path: src/mscorlib/src/System/Enum.cs
    startLine: 1012
  assemblies:
  - System.Runtime
  namespace: System
  summary: Converts the current value to a double-precision floating point number based on the underlying type.
  syntax:
    content: double IConvertible.ToDouble(IFormatProvider provider)
    content.vb: Function System.IConvertible.ToDouble(provider As IFormatProvider) As Double Implements IConvertible.ToDouble
    parameters:
    - id: provider
      type: System.IFormatProvider
      description: An object that supplies culture-specific formatting information.
    return:
      type: System.Double
      description: This member always throws an exception.
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: 'In all cases. '
  implements:
  - System.IConvertible.ToDouble(System.IFormatProvider)
  name.vb: System.IConvertible.ToDouble(IFormatProvider)
- uid: System.Enum.System#IConvertible#ToInt16(System.IFormatProvider)
  commentId: M:System.Enum.System#IConvertible#ToInt16(System.IFormatProvider)
  id: System#IConvertible#ToInt16(System.IFormatProvider)
  isEii: true
  parent: System.Enum
  langs:
  - csharp
  - vb
  name: IConvertible.ToInt16(IFormatProvider)
  fullName: System.Enum.System.IConvertible.ToInt16(System.IFormatProvider)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Enum.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: System.IConvertible.ToInt16
    path: src/mscorlib/src/System/Enum.cs
    startLine: 970
  assemblies:
  - System.Runtime
  namespace: System
  summary: Converts the current value to a 16-bit signed integer based on the underlying type.
  syntax:
    content: short IConvertible.ToInt16(IFormatProvider provider)
    content.vb: Function System.IConvertible.ToInt16(provider As IFormatProvider) As Short Implements IConvertible.ToInt16
    parameters:
    - id: provider
      type: System.IFormatProvider
      description: An object that supplies culture-specific formatting information.
    return:
      type: System.Int16
      description: The converted value.
  implements:
  - System.IConvertible.ToInt16(System.IFormatProvider)
  name.vb: System.IConvertible.ToInt16(IFormatProvider)
- uid: System.Enum.System#IConvertible#ToInt32(System.IFormatProvider)
  commentId: M:System.Enum.System#IConvertible#ToInt32(System.IFormatProvider)
  id: System#IConvertible#ToInt32(System.IFormatProvider)
  isEii: true
  parent: System.Enum
  langs:
  - csharp
  - vb
  name: IConvertible.ToInt32(IFormatProvider)
  fullName: System.Enum.System.IConvertible.ToInt32(System.IFormatProvider)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Enum.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: System.IConvertible.ToInt32
    path: src/mscorlib/src/System/Enum.cs
    startLine: 982
  assemblies:
  - System.Runtime
  namespace: System
  summary: Converts the current value to a 32-bit signed integer based on the underlying type.
  syntax:
    content: int IConvertible.ToInt32(IFormatProvider provider)
    content.vb: Function System.IConvertible.ToInt32(provider As IFormatProvider) As Integer Implements IConvertible.ToInt32
    parameters:
    - id: provider
      type: System.IFormatProvider
      description: An object that supplies culture-specific formatting information.
    return:
      type: System.Int32
      description: The converted value.
  implements:
  - System.IConvertible.ToInt32(System.IFormatProvider)
  name.vb: System.IConvertible.ToInt32(IFormatProvider)
- uid: System.Enum.System#IConvertible#ToInt64(System.IFormatProvider)
  commentId: M:System.Enum.System#IConvertible#ToInt64(System.IFormatProvider)
  id: System#IConvertible#ToInt64(System.IFormatProvider)
  isEii: true
  parent: System.Enum
  langs:
  - csharp
  - vb
  name: IConvertible.ToInt64(IFormatProvider)
  fullName: System.Enum.System.IConvertible.ToInt64(System.IFormatProvider)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Enum.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: System.IConvertible.ToInt64
    path: src/mscorlib/src/System/Enum.cs
    startLine: 994
  assemblies:
  - System.Runtime
  namespace: System
  summary: Converts the current value to a 64-bit signed integer based on the underlying type.
  syntax:
    content: long IConvertible.ToInt64(IFormatProvider provider)
    content.vb: Function System.IConvertible.ToInt64(provider As IFormatProvider) As Long Implements IConvertible.ToInt64
    parameters:
    - id: provider
      type: System.IFormatProvider
      description: An object that supplies culture-specific formatting information.
    return:
      type: System.Int64
      description: The converted value.
  implements:
  - System.IConvertible.ToInt64(System.IFormatProvider)
  name.vb: System.IConvertible.ToInt64(IFormatProvider)
- uid: System.Enum.System#IConvertible#ToSByte(System.IFormatProvider)
  commentId: M:System.Enum.System#IConvertible#ToSByte(System.IFormatProvider)
  id: System#IConvertible#ToSByte(System.IFormatProvider)
  isEii: true
  parent: System.Enum
  langs:
  - csharp
  - vb
  name: IConvertible.ToSByte(IFormatProvider)
  fullName: System.Enum.System.IConvertible.ToSByte(System.IFormatProvider)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Enum.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: System.IConvertible.ToSByte
    path: src/mscorlib/src/System/Enum.cs
    startLine: 958
  assemblies:
  - System.Runtime
  namespace: System
  summary: Converts the current value to an 8-bit signed integer based on the underlying type.
  syntax:
    content: sbyte IConvertible.ToSByte(IFormatProvider provider)
    content.vb: Function System.IConvertible.ToSByte(provider As IFormatProvider) As SByte Implements IConvertible.ToSByte
    parameters:
    - id: provider
      type: System.IFormatProvider
      description: An object that supplies culture-specific formatting information.
    return:
      type: System.SByte
      description: The converted value.
  implements:
  - System.IConvertible.ToSByte(System.IFormatProvider)
  name.vb: System.IConvertible.ToSByte(IFormatProvider)
- uid: System.Enum.System#IConvertible#ToSingle(System.IFormatProvider)
  commentId: M:System.Enum.System#IConvertible#ToSingle(System.IFormatProvider)
  id: System#IConvertible#ToSingle(System.IFormatProvider)
  isEii: true
  parent: System.Enum
  langs:
  - csharp
  - vb
  name: IConvertible.ToSingle(IFormatProvider)
  fullName: System.Enum.System.IConvertible.ToSingle(System.IFormatProvider)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Enum.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: System.IConvertible.ToSingle
    path: src/mscorlib/src/System/Enum.cs
    startLine: 1006
  assemblies:
  - System.Runtime
  namespace: System
  summary: Converts the current value to a single-precision floating-point number based on the underlying type.
  syntax:
    content: float IConvertible.ToSingle(IFormatProvider provider)
    content.vb: Function System.IConvertible.ToSingle(provider As IFormatProvider) As Single Implements IConvertible.ToSingle
    parameters:
    - id: provider
      type: System.IFormatProvider
      description: An object that supplies culture-specific formatting information.
    return:
      type: System.Single
      description: This member always throws an exception.
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: 'In all cases. '
  implements:
  - System.IConvertible.ToSingle(System.IFormatProvider)
  name.vb: System.IConvertible.ToSingle(IFormatProvider)
- uid: System.Enum.System#IConvertible#ToString(System.IFormatProvider)
  commentId: M:System.Enum.System#IConvertible#ToString(System.IFormatProvider)
  id: System#IConvertible#ToString(System.IFormatProvider)
  isEii: true
  parent: System.Enum
  langs:
  - csharp
  - vb
  name: IConvertible.ToString(IFormatProvider)
  fullName: System.Enum.System.IConvertible.ToString(System.IFormatProvider)
  type: Method
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: System.IConvertible.ToString
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 815
  assemblies:
  - System.Runtime
  namespace: System
  syntax:
    content: >-
      [Obsolete("The provider argument is not used. Please use ToString().")]

      string IConvertible.ToString(IFormatProvider provider)
    content.vb: >-
      <Obsolete("The provider argument is not used. Please use ToString().")>

      Function System.IConvertible.ToString(provider As IFormatProvider) As String Implements IConvertible.ToString
    parameters:
    - id: provider
      type: System.IFormatProvider
    return:
      type: System.String
  implements:
  - System.IConvertible.ToString(System.IFormatProvider)
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: The provider argument is not used. Please use ToString().
  name.vb: System.IConvertible.ToString(IFormatProvider)
- uid: System.Enum.System#IConvertible#ToType(System.Type,System.IFormatProvider)
  commentId: M:System.Enum.System#IConvertible#ToType(System.Type,System.IFormatProvider)
  id: System#IConvertible#ToType(System.Type,System.IFormatProvider)
  isEii: true
  parent: System.Enum
  langs:
  - csharp
  - vb
  name: IConvertible.ToType(Type, IFormatProvider)
  fullName: System.Enum.System.IConvertible.ToType(System.Type, System.IFormatProvider)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Enum.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: System.IConvertible.ToType
    path: src/mscorlib/src/System/Enum.cs
    startLine: 1030
  assemblies:
  - System.Runtime
  namespace: System
  summary: Converts the current value to a specified type based on the underlying type.
  syntax:
    content: object IConvertible.ToType(Type type, IFormatProvider provider)
    content.vb: Function System.IConvertible.ToType(type As Type, provider As IFormatProvider) As Object Implements IConvertible.ToType
    parameters:
    - id: type
      type: System.Type
      description: 'The type to convert to. '
    - id: provider
      type: System.IFormatProvider
      description: An object that supplies culture-specific formatting information.
    return:
      type: System.Object
      description: The converted value.
  implements:
  - System.IConvertible.ToType(System.Type,System.IFormatProvider)
  name.vb: System.IConvertible.ToType(Type, IFormatProvider)
- uid: System.Enum.System#IConvertible#ToUInt16(System.IFormatProvider)
  commentId: M:System.Enum.System#IConvertible#ToUInt16(System.IFormatProvider)
  id: System#IConvertible#ToUInt16(System.IFormatProvider)
  isEii: true
  parent: System.Enum
  langs:
  - csharp
  - vb
  name: IConvertible.ToUInt16(IFormatProvider)
  fullName: System.Enum.System.IConvertible.ToUInt16(System.IFormatProvider)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Enum.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: System.IConvertible.ToUInt16
    path: src/mscorlib/src/System/Enum.cs
    startLine: 976
  assemblies:
  - System.Runtime
  namespace: System
  summary: Converts the current value to a 16-bit unsigned integer based on the underlying type.
  syntax:
    content: ushort IConvertible.ToUInt16(IFormatProvider provider)
    content.vb: Function System.IConvertible.ToUInt16(provider As IFormatProvider) As UShort Implements IConvertible.ToUInt16
    parameters:
    - id: provider
      type: System.IFormatProvider
      description: An object that supplies culture-specific formatting information.
    return:
      type: System.UInt16
      description: The converted value.
  implements:
  - System.IConvertible.ToUInt16(System.IFormatProvider)
  name.vb: System.IConvertible.ToUInt16(IFormatProvider)
- uid: System.Enum.System#IConvertible#ToUInt32(System.IFormatProvider)
  commentId: M:System.Enum.System#IConvertible#ToUInt32(System.IFormatProvider)
  id: System#IConvertible#ToUInt32(System.IFormatProvider)
  isEii: true
  parent: System.Enum
  langs:
  - csharp
  - vb
  name: IConvertible.ToUInt32(IFormatProvider)
  fullName: System.Enum.System.IConvertible.ToUInt32(System.IFormatProvider)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Enum.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: System.IConvertible.ToUInt32
    path: src/mscorlib/src/System/Enum.cs
    startLine: 988
  assemblies:
  - System.Runtime
  namespace: System
  summary: Converts the current value to a 32-bit unsigned integer based on the underlying type.
  syntax:
    content: uint IConvertible.ToUInt32(IFormatProvider provider)
    content.vb: Function System.IConvertible.ToUInt32(provider As IFormatProvider) As UInteger Implements IConvertible.ToUInt32
    parameters:
    - id: provider
      type: System.IFormatProvider
      description: An object that supplies culture-specific formatting information.
    return:
      type: System.UInt32
      description: The converted value.
  implements:
  - System.IConvertible.ToUInt32(System.IFormatProvider)
  name.vb: System.IConvertible.ToUInt32(IFormatProvider)
- uid: System.Enum.System#IConvertible#ToUInt64(System.IFormatProvider)
  commentId: M:System.Enum.System#IConvertible#ToUInt64(System.IFormatProvider)
  id: System#IConvertible#ToUInt64(System.IFormatProvider)
  isEii: true
  parent: System.Enum
  langs:
  - csharp
  - vb
  name: IConvertible.ToUInt64(IFormatProvider)
  fullName: System.Enum.System.IConvertible.ToUInt64(System.IFormatProvider)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Enum.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: System.IConvertible.ToUInt64
    path: src/mscorlib/src/System/Enum.cs
    startLine: 1000
  assemblies:
  - System.Runtime
  namespace: System
  summary: Converts the current value to a 64-bit unsigned integer based on the underlying type.
  syntax:
    content: ulong IConvertible.ToUInt64(IFormatProvider provider)
    content.vb: Function System.IConvertible.ToUInt64(provider As IFormatProvider) As ULong Implements IConvertible.ToUInt64
    parameters:
    - id: provider
      type: System.IFormatProvider
      description: An object that supplies culture-specific formatting information.
    return:
      type: System.UInt64
      description: The converted value.
  implements:
  - System.IConvertible.ToUInt64(System.IFormatProvider)
  name.vb: System.IConvertible.ToUInt64(IFormatProvider)
- uid: System.Enum.System#IFormattable#ToString(System.String,System.IFormatProvider)
  commentId: M:System.Enum.System#IFormattable#ToString(System.String,System.IFormatProvider)
  id: System#IFormattable#ToString(System.String,System.IFormatProvider)
  isEii: true
  parent: System.Enum
  langs:
  - csharp
  - vb
  name: IFormattable.ToString(String, IFormatProvider)
  fullName: System.Enum.System.IFormattable.ToString(System.String, System.IFormatProvider)
  type: Method
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: System.IFormattable.ToString
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 821
  assemblies:
  - System.Runtime
  namespace: System
  syntax:
    content: >-
      [Obsolete("The provider argument is not used. Please use ToString(String).")]

      string IFormattable.ToString(string format, IFormatProvider provider)
    content.vb: >-
      <Obsolete("The provider argument is not used. Please use ToString(String).")>

      Function System.IFormattable.ToString(format As String, provider As IFormatProvider) As String Implements IFormattable.ToString
    parameters:
    - id: format
      type: System.String
    - id: provider
      type: System.IFormatProvider
    return:
      type: System.String
  implements:
  - System.IFormattable.ToString(System.String,System.IFormatProvider)
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: The provider argument is not used. Please use ToString(String).
  name.vb: System.IFormattable.ToString(String, IFormatProvider)
- uid: System.Enum.ToObject(System.Type,System.Object)
  commentId: M:System.Enum.ToObject(System.Type,System.Object)
  id: ToObject(System.Type,System.Object)
  parent: System.Enum
  langs:
  - csharp
  - vb
  name: ToObject(Type, Object)
  fullName: System.Enum.ToObject(System.Type, System.Object)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Enum.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToObject
    path: src/mscorlib/src/System/Enum.cs
    startLine: 543
  assemblies:
  - System.Runtime
  namespace: System
  summary: Converts the specified object with an integer value to an enumeration member.
  syntax:
    content: public static object ToObject(Type enumType, object value)
    content.vb: Public Shared Function ToObject(enumType As Type, value As Object) As Object
    parameters:
    - id: enumType
      type: System.Type
      description: 'The enumeration type to return. '
    - id: value
      type: System.Object
      description: 'The value convert to an enumeration member. '
    return:
      type: System.Object
      description: An enumeration object whose value is <em>value</em>.
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>enumType</em> or <em>value</em> is null. "
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<em>enumType</em> is not an <xref href=\"System.Enum\" data-throw-if-not-resolved=\"false\"></xref>.-or- <em>value</em> is not type <xref href=\"System.SByte\" data-throw-if-not-resolved=\"false\"></xref>, <xref href=\"System.Int16\" data-throw-if-not-resolved=\"false\"></xref>, <xref href=\"System.Int32\" data-throw-if-not-resolved=\"false\"></xref>, <xref href=\"System.Int64\" data-throw-if-not-resolved=\"false\"></xref>, <xref href=\"System.Byte\" data-throw-if-not-resolved=\"false\"></xref>, <xref href=\"System.UInt16\" data-throw-if-not-resolved=\"false\"></xref>, <xref href=\"System.UInt32\" data-throw-if-not-resolved=\"false\"></xref>, or <xref href=\"System.UInt64\" data-throw-if-not-resolved=\"false\"></xref>. "
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Enum.ToString
  commentId: M:System.Enum.ToString
  id: ToString
  parent: System.Enum
  langs:
  - csharp
  - vb
  name: ToString()
  fullName: System.Enum.ToString()
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Enum.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToString
    path: src/mscorlib/src/System/Enum.cs
    startLine: 789
  assemblies:
  - System.Runtime
  namespace: System
  summary: Converts the value of this instance to its equivalent string representation.
  syntax:
    content: public override string ToString()
    content.vb: Public Overrides Function ToString As String
    return:
      type: System.String
      description: The string representation of the value of this instance.
  overridden: System.ValueType.ToString
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Enum.ToString(System.String)
  commentId: M:System.Enum.ToString(System.String)
  id: ToString(System.String)
  parent: System.Enum
  langs:
  - csharp
  - vb
  name: ToString(String)
  fullName: System.Enum.ToString(System.String)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Enum.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToString
    path: src/mscorlib/src/System/Enum.cs
    startLine: 845
  assemblies:
  - System.Runtime
  namespace: System
  summary: Converts the value of this instance to its equivalent string representation using the specified format.
  syntax:
    content: public string ToString(string format)
    content.vb: Public Function ToString(format As String) As String
    parameters:
    - id: format
      type: System.String
      description: 'A format string. '
    return:
      type: System.String
      description: The string representation of the value of this instance as specified by <em>format</em>.
  exceptions:
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "\n<em>format</em> contains an invalid specification. "
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "\n<em>format</em> equals \"X\", but the enumeration type is unknown."
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Enum.TryParse``1(System.String,``0@)
  commentId: M:System.Enum.TryParse``1(System.String,``0@)
  id: TryParse``1(System.String,``0@)
  parent: System.Enum
  langs:
  - csharp
  - vb
  name: TryParse<TEnum>(String, out TEnum)
  fullName: System.Enum.TryParse<TEnum>(System.String, out TEnum)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Enum.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: TryParse
    path: src/mscorlib/src/System/Enum.cs
    startLine: 322
  assemblies:
  - System.Runtime
  namespace: System
  summary: Converts the string representation of the name or numeric value of one or more enumerated constants to an equivalent enumerated object. The return value indicates whether the conversion succeeded.
  syntax:
    content: 'public static bool TryParse<TEnum>(string value, out TEnum result)where TEnum : struct'
    content.vb: Public Shared Function TryParse(Of TEnum As Structure)(value As String, ByRef result As TEnum) As Boolean
    parameters:
    - id: value
      type: System.String
      description: The string representation of the enumeration name or underlying value to convert.
    - id: result
      type: '{TEnum}'
      description: When this method returns, <em>result</em> contains an object of type <em>TEnum</em> whose value is represented by <em>value</em> if the parse operation succeeds. If the parse operation fails, <em>result</em> contains the default value of the underlying type of <em>TEnum</em>. Note that this value need not be a member of the <em>TEnum</em> enumeration. This parameter is passed uninitialized.
    typeParameters:
    - id: TEnum
      description: The enumeration type to which to convert <em>value</em>.
    return:
      type: System.Boolean
      description: true if the <em>value</em> parameter was converted successfully; otherwise, false.
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<em>TEnum</em> is not an enumeration type."
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Enum.TryParse(Of TEnum)(System.String, ByRef TEnum)
  name.vb: TryParse(Of TEnum)(String, ByRef TEnum)
- uid: System.Enum.TryParse``1(System.String,System.Boolean,``0@)
  commentId: M:System.Enum.TryParse``1(System.String,System.Boolean,``0@)
  id: TryParse``1(System.String,System.Boolean,``0@)
  parent: System.Enum
  langs:
  - csharp
  - vb
  name: TryParse<TEnum>(String, Boolean, out TEnum)
  fullName: System.Enum.TryParse<TEnum>(System.String, System.Boolean, out TEnum)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Enum.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: TryParse
    path: src/mscorlib/src/System/Enum.cs
    startLine: 327
  assemblies:
  - System.Runtime
  namespace: System
  summary: Converts the string representation of the name or numeric value of one or more enumerated constants to an equivalent enumerated object. A parameter specifies whether the operation is case-sensitive. The return value indicates whether the conversion succeeded.
  syntax:
    content: 'public static bool TryParse<TEnum>(string value, bool ignoreCase, out TEnum result)where TEnum : struct'
    content.vb: Public Shared Function TryParse(Of TEnum As Structure)(value As String, ignoreCase As Boolean, ByRef result As TEnum) As Boolean
    parameters:
    - id: value
      type: System.String
      description: The string representation of the enumeration name or underlying value to convert.
    - id: ignoreCase
      type: System.Boolean
      description: true to ignore case; false to consider case.
    - id: result
      type: '{TEnum}'
      description: When this method returns, <em>result</em> contains an object of type <em>TEnum</em> whose value is represented by <em>value</em> if the parse operation succeeds. If the parse operation fails, <em>result</em> contains the default value of the underlying type of <em>TEnum</em>. Note that this value need not be a member of the <em>TEnum</em> enumeration. This parameter is passed uninitialized.
    typeParameters:
    - id: TEnum
      description: The enumeration type to which to convert <em>value</em>.
    return:
      type: System.Boolean
      description: true if the <em>value</em> parameter was converted successfully; otherwise, false.
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<em>TEnum</em> is not an enumeration type."
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Enum.TryParse(Of TEnum)(System.String, System.Boolean, ByRef TEnum)
  name.vb: TryParse(Of TEnum)(String, Boolean, ByRef TEnum)
references:
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System.ValueType
  parent: System
  isExternal: false
  name: ValueType
  fullName: System.ValueType
- uid: System.IComparable
  parent: System
  isExternal: false
  name: IComparable
  fullName: System.IComparable
- uid: System.IConvertible
  parent: System
  isExternal: false
  name: IConvertible
  fullName: System.IConvertible
- uid: System.IFormattable
  parent: System
  isExternal: false
  name: IFormattable
  fullName: System.IFormattable
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: false
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: false
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
  - name: )
    fullName: )
- uid: System.IComparable.CompareTo(System.Object)
  parent: System.IComparable
  isExternal: false
  name: CompareTo(Object)
  fullName: System.IComparable.CompareTo(System.Object)
  spec.csharp:
  - uid: System.IComparable.CompareTo(System.Object)
    name: CompareTo
    fullName: System.IComparable.CompareTo
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IComparable.CompareTo(System.Object)
    name: CompareTo
    fullName: System.IComparable.CompareTo
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
  - name: )
    fullName: )
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  fullName: System.Int32
- uid: System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: false
  name: Equals(Object)
  fullName: System.ValueType.Equals(System.Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    fullName: System.ValueType.Equals
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    fullName: System.ValueType.Equals
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
  - name: )
    fullName: )
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  fullName: System.Boolean
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  fullName: System.Type
- uid: System.String
  parent: System
  isExternal: false
  name: String
  fullName: System.String
- uid: System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: false
  name: GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    fullName: System.ValueType.GetHashCode
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    fullName: System.ValueType.GetHashCode
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.String[]
  isExternal: false
  name: String[]
  fullName: System.String[]
  fullname.vb: System.String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: String
    fullName: System.String
  - name: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.String
    name: String
    fullName: System.String
  - name: ()
    fullName: ()
- uid: System.Array
  parent: System
  isExternal: false
  name: Array
  fullName: System.Array
- uid: System.Enum
  parent: System
  isExternal: false
  name: Enum
  fullName: System.Enum
- uid: System.IConvertible.GetTypeCode
  parent: System.IConvertible
  isExternal: false
  name: GetTypeCode()
  fullName: System.IConvertible.GetTypeCode()
  spec.csharp:
  - uid: System.IConvertible.GetTypeCode
    name: GetTypeCode
    fullName: System.IConvertible.GetTypeCode
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IConvertible.GetTypeCode
    name: GetTypeCode
    fullName: System.IConvertible.GetTypeCode
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.TypeCode
  parent: System
  isExternal: false
  name: TypeCode
  fullName: System.TypeCode
- uid: System.IConvertible.ToBoolean(System.IFormatProvider)
  parent: System.IConvertible
  isExternal: false
  name: ToBoolean(IFormatProvider)
  fullName: System.IConvertible.ToBoolean(System.IFormatProvider)
  spec.csharp:
  - uid: System.IConvertible.ToBoolean(System.IFormatProvider)
    name: ToBoolean
    fullName: System.IConvertible.ToBoolean
  - name: (
    fullName: (
  - uid: System.IFormatProvider
    name: IFormatProvider
    fullName: System.IFormatProvider
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IConvertible.ToBoolean(System.IFormatProvider)
    name: ToBoolean
    fullName: System.IConvertible.ToBoolean
  - name: (
    fullName: (
  - uid: System.IFormatProvider
    name: IFormatProvider
    fullName: System.IFormatProvider
  - name: )
    fullName: )
- uid: System.IFormatProvider
  parent: System
  isExternal: false
  name: IFormatProvider
  fullName: System.IFormatProvider
- uid: System.IConvertible.ToByte(System.IFormatProvider)
  parent: System.IConvertible
  isExternal: false
  name: ToByte(IFormatProvider)
  fullName: System.IConvertible.ToByte(System.IFormatProvider)
  spec.csharp:
  - uid: System.IConvertible.ToByte(System.IFormatProvider)
    name: ToByte
    fullName: System.IConvertible.ToByte
  - name: (
    fullName: (
  - uid: System.IFormatProvider
    name: IFormatProvider
    fullName: System.IFormatProvider
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IConvertible.ToByte(System.IFormatProvider)
    name: ToByte
    fullName: System.IConvertible.ToByte
  - name: (
    fullName: (
  - uid: System.IFormatProvider
    name: IFormatProvider
    fullName: System.IFormatProvider
  - name: )
    fullName: )
- uid: System.Byte
  parent: System
  isExternal: false
  name: Byte
  fullName: System.Byte
- uid: System.IConvertible.ToChar(System.IFormatProvider)
  parent: System.IConvertible
  isExternal: false
  name: ToChar(IFormatProvider)
  fullName: System.IConvertible.ToChar(System.IFormatProvider)
  spec.csharp:
  - uid: System.IConvertible.ToChar(System.IFormatProvider)
    name: ToChar
    fullName: System.IConvertible.ToChar
  - name: (
    fullName: (
  - uid: System.IFormatProvider
    name: IFormatProvider
    fullName: System.IFormatProvider
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IConvertible.ToChar(System.IFormatProvider)
    name: ToChar
    fullName: System.IConvertible.ToChar
  - name: (
    fullName: (
  - uid: System.IFormatProvider
    name: IFormatProvider
    fullName: System.IFormatProvider
  - name: )
    fullName: )
- uid: System.Char
  parent: System
  isExternal: false
  name: Char
  fullName: System.Char
- uid: System.IConvertible.ToDateTime(System.IFormatProvider)
  parent: System.IConvertible
  isExternal: false
  name: ToDateTime(IFormatProvider)
  fullName: System.IConvertible.ToDateTime(System.IFormatProvider)
  spec.csharp:
  - uid: System.IConvertible.ToDateTime(System.IFormatProvider)
    name: ToDateTime
    fullName: System.IConvertible.ToDateTime
  - name: (
    fullName: (
  - uid: System.IFormatProvider
    name: IFormatProvider
    fullName: System.IFormatProvider
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IConvertible.ToDateTime(System.IFormatProvider)
    name: ToDateTime
    fullName: System.IConvertible.ToDateTime
  - name: (
    fullName: (
  - uid: System.IFormatProvider
    name: IFormatProvider
    fullName: System.IFormatProvider
  - name: )
    fullName: )
- uid: System.DateTime
  parent: System
  isExternal: false
  name: DateTime
  fullName: System.DateTime
- uid: System.IConvertible.ToDecimal(System.IFormatProvider)
  parent: System.IConvertible
  isExternal: false
  name: ToDecimal(IFormatProvider)
  fullName: System.IConvertible.ToDecimal(System.IFormatProvider)
  spec.csharp:
  - uid: System.IConvertible.ToDecimal(System.IFormatProvider)
    name: ToDecimal
    fullName: System.IConvertible.ToDecimal
  - name: (
    fullName: (
  - uid: System.IFormatProvider
    name: IFormatProvider
    fullName: System.IFormatProvider
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IConvertible.ToDecimal(System.IFormatProvider)
    name: ToDecimal
    fullName: System.IConvertible.ToDecimal
  - name: (
    fullName: (
  - uid: System.IFormatProvider
    name: IFormatProvider
    fullName: System.IFormatProvider
  - name: )
    fullName: )
- uid: System.Decimal
  parent: System
  isExternal: false
  name: Decimal
  fullName: System.Decimal
- uid: System.IConvertible.ToDouble(System.IFormatProvider)
  parent: System.IConvertible
  isExternal: false
  name: ToDouble(IFormatProvider)
  fullName: System.IConvertible.ToDouble(System.IFormatProvider)
  spec.csharp:
  - uid: System.IConvertible.ToDouble(System.IFormatProvider)
    name: ToDouble
    fullName: System.IConvertible.ToDouble
  - name: (
    fullName: (
  - uid: System.IFormatProvider
    name: IFormatProvider
    fullName: System.IFormatProvider
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IConvertible.ToDouble(System.IFormatProvider)
    name: ToDouble
    fullName: System.IConvertible.ToDouble
  - name: (
    fullName: (
  - uid: System.IFormatProvider
    name: IFormatProvider
    fullName: System.IFormatProvider
  - name: )
    fullName: )
- uid: System.Double
  parent: System
  isExternal: false
  name: Double
  fullName: System.Double
- uid: System.IConvertible.ToInt16(System.IFormatProvider)
  parent: System.IConvertible
  isExternal: false
  name: ToInt16(IFormatProvider)
  fullName: System.IConvertible.ToInt16(System.IFormatProvider)
  spec.csharp:
  - uid: System.IConvertible.ToInt16(System.IFormatProvider)
    name: ToInt16
    fullName: System.IConvertible.ToInt16
  - name: (
    fullName: (
  - uid: System.IFormatProvider
    name: IFormatProvider
    fullName: System.IFormatProvider
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IConvertible.ToInt16(System.IFormatProvider)
    name: ToInt16
    fullName: System.IConvertible.ToInt16
  - name: (
    fullName: (
  - uid: System.IFormatProvider
    name: IFormatProvider
    fullName: System.IFormatProvider
  - name: )
    fullName: )
- uid: System.Int16
  parent: System
  isExternal: false
  name: Int16
  fullName: System.Int16
- uid: System.IConvertible.ToInt32(System.IFormatProvider)
  parent: System.IConvertible
  isExternal: false
  name: ToInt32(IFormatProvider)
  fullName: System.IConvertible.ToInt32(System.IFormatProvider)
  spec.csharp:
  - uid: System.IConvertible.ToInt32(System.IFormatProvider)
    name: ToInt32
    fullName: System.IConvertible.ToInt32
  - name: (
    fullName: (
  - uid: System.IFormatProvider
    name: IFormatProvider
    fullName: System.IFormatProvider
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IConvertible.ToInt32(System.IFormatProvider)
    name: ToInt32
    fullName: System.IConvertible.ToInt32
  - name: (
    fullName: (
  - uid: System.IFormatProvider
    name: IFormatProvider
    fullName: System.IFormatProvider
  - name: )
    fullName: )
- uid: System.IConvertible.ToInt64(System.IFormatProvider)
  parent: System.IConvertible
  isExternal: false
  name: ToInt64(IFormatProvider)
  fullName: System.IConvertible.ToInt64(System.IFormatProvider)
  spec.csharp:
  - uid: System.IConvertible.ToInt64(System.IFormatProvider)
    name: ToInt64
    fullName: System.IConvertible.ToInt64
  - name: (
    fullName: (
  - uid: System.IFormatProvider
    name: IFormatProvider
    fullName: System.IFormatProvider
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IConvertible.ToInt64(System.IFormatProvider)
    name: ToInt64
    fullName: System.IConvertible.ToInt64
  - name: (
    fullName: (
  - uid: System.IFormatProvider
    name: IFormatProvider
    fullName: System.IFormatProvider
  - name: )
    fullName: )
- uid: System.Int64
  parent: System
  isExternal: false
  name: Int64
  fullName: System.Int64
- uid: System.IConvertible.ToSByte(System.IFormatProvider)
  parent: System.IConvertible
  isExternal: false
  name: ToSByte(IFormatProvider)
  fullName: System.IConvertible.ToSByte(System.IFormatProvider)
  spec.csharp:
  - uid: System.IConvertible.ToSByte(System.IFormatProvider)
    name: ToSByte
    fullName: System.IConvertible.ToSByte
  - name: (
    fullName: (
  - uid: System.IFormatProvider
    name: IFormatProvider
    fullName: System.IFormatProvider
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IConvertible.ToSByte(System.IFormatProvider)
    name: ToSByte
    fullName: System.IConvertible.ToSByte
  - name: (
    fullName: (
  - uid: System.IFormatProvider
    name: IFormatProvider
    fullName: System.IFormatProvider
  - name: )
    fullName: )
- uid: System.SByte
  parent: System
  isExternal: false
  name: SByte
  fullName: System.SByte
- uid: System.IConvertible.ToSingle(System.IFormatProvider)
  parent: System.IConvertible
  isExternal: false
  name: ToSingle(IFormatProvider)
  fullName: System.IConvertible.ToSingle(System.IFormatProvider)
  spec.csharp:
  - uid: System.IConvertible.ToSingle(System.IFormatProvider)
    name: ToSingle
    fullName: System.IConvertible.ToSingle
  - name: (
    fullName: (
  - uid: System.IFormatProvider
    name: IFormatProvider
    fullName: System.IFormatProvider
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IConvertible.ToSingle(System.IFormatProvider)
    name: ToSingle
    fullName: System.IConvertible.ToSingle
  - name: (
    fullName: (
  - uid: System.IFormatProvider
    name: IFormatProvider
    fullName: System.IFormatProvider
  - name: )
    fullName: )
- uid: System.Single
  parent: System
  isExternal: false
  name: Single
  fullName: System.Single
- uid: System.IConvertible.ToString(System.IFormatProvider)
  parent: System.IConvertible
  isExternal: false
  name: ToString(IFormatProvider)
  fullName: System.IConvertible.ToString(System.IFormatProvider)
  spec.csharp:
  - uid: System.IConvertible.ToString(System.IFormatProvider)
    name: ToString
    fullName: System.IConvertible.ToString
  - name: (
    fullName: (
  - uid: System.IFormatProvider
    name: IFormatProvider
    fullName: System.IFormatProvider
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IConvertible.ToString(System.IFormatProvider)
    name: ToString
    fullName: System.IConvertible.ToString
  - name: (
    fullName: (
  - uid: System.IFormatProvider
    name: IFormatProvider
    fullName: System.IFormatProvider
  - name: )
    fullName: )
- uid: System.IConvertible.ToType(System.Type,System.IFormatProvider)
  parent: System.IConvertible
  isExternal: false
  name: ToType(Type, IFormatProvider)
  fullName: System.IConvertible.ToType(System.Type, System.IFormatProvider)
  spec.csharp:
  - uid: System.IConvertible.ToType(System.Type,System.IFormatProvider)
    name: ToType
    fullName: System.IConvertible.ToType
  - name: (
    fullName: (
  - uid: System.Type
    name: Type
    fullName: System.Type
  - name: ', '
    fullName: ', '
  - uid: System.IFormatProvider
    name: IFormatProvider
    fullName: System.IFormatProvider
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IConvertible.ToType(System.Type,System.IFormatProvider)
    name: ToType
    fullName: System.IConvertible.ToType
  - name: (
    fullName: (
  - uid: System.Type
    name: Type
    fullName: System.Type
  - name: ', '
    fullName: ', '
  - uid: System.IFormatProvider
    name: IFormatProvider
    fullName: System.IFormatProvider
  - name: )
    fullName: )
- uid: System.IConvertible.ToUInt16(System.IFormatProvider)
  parent: System.IConvertible
  isExternal: false
  name: ToUInt16(IFormatProvider)
  fullName: System.IConvertible.ToUInt16(System.IFormatProvider)
  spec.csharp:
  - uid: System.IConvertible.ToUInt16(System.IFormatProvider)
    name: ToUInt16
    fullName: System.IConvertible.ToUInt16
  - name: (
    fullName: (
  - uid: System.IFormatProvider
    name: IFormatProvider
    fullName: System.IFormatProvider
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IConvertible.ToUInt16(System.IFormatProvider)
    name: ToUInt16
    fullName: System.IConvertible.ToUInt16
  - name: (
    fullName: (
  - uid: System.IFormatProvider
    name: IFormatProvider
    fullName: System.IFormatProvider
  - name: )
    fullName: )
- uid: System.UInt16
  parent: System
  isExternal: false
  name: UInt16
  fullName: System.UInt16
- uid: System.IConvertible.ToUInt32(System.IFormatProvider)
  parent: System.IConvertible
  isExternal: false
  name: ToUInt32(IFormatProvider)
  fullName: System.IConvertible.ToUInt32(System.IFormatProvider)
  spec.csharp:
  - uid: System.IConvertible.ToUInt32(System.IFormatProvider)
    name: ToUInt32
    fullName: System.IConvertible.ToUInt32
  - name: (
    fullName: (
  - uid: System.IFormatProvider
    name: IFormatProvider
    fullName: System.IFormatProvider
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IConvertible.ToUInt32(System.IFormatProvider)
    name: ToUInt32
    fullName: System.IConvertible.ToUInt32
  - name: (
    fullName: (
  - uid: System.IFormatProvider
    name: IFormatProvider
    fullName: System.IFormatProvider
  - name: )
    fullName: )
- uid: System.UInt32
  parent: System
  isExternal: false
  name: UInt32
  fullName: System.UInt32
- uid: System.IConvertible.ToUInt64(System.IFormatProvider)
  parent: System.IConvertible
  isExternal: false
  name: ToUInt64(IFormatProvider)
  fullName: System.IConvertible.ToUInt64(System.IFormatProvider)
  spec.csharp:
  - uid: System.IConvertible.ToUInt64(System.IFormatProvider)
    name: ToUInt64
    fullName: System.IConvertible.ToUInt64
  - name: (
    fullName: (
  - uid: System.IFormatProvider
    name: IFormatProvider
    fullName: System.IFormatProvider
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IConvertible.ToUInt64(System.IFormatProvider)
    name: ToUInt64
    fullName: System.IConvertible.ToUInt64
  - name: (
    fullName: (
  - uid: System.IFormatProvider
    name: IFormatProvider
    fullName: System.IFormatProvider
  - name: )
    fullName: )
- uid: System.UInt64
  parent: System
  isExternal: false
  name: UInt64
  fullName: System.UInt64
- uid: System.IFormattable.ToString(System.String,System.IFormatProvider)
  parent: System.IFormattable
  isExternal: false
  name: ToString(String, IFormatProvider)
  fullName: System.IFormattable.ToString(System.String, System.IFormatProvider)
  spec.csharp:
  - uid: System.IFormattable.ToString(System.String,System.IFormatProvider)
    name: ToString
    fullName: System.IFormattable.ToString
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
  - name: ', '
    fullName: ', '
  - uid: System.IFormatProvider
    name: IFormatProvider
    fullName: System.IFormatProvider
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IFormattable.ToString(System.String,System.IFormatProvider)
    name: ToString
    fullName: System.IFormattable.ToString
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
  - name: ', '
    fullName: ', '
  - uid: System.IFormatProvider
    name: IFormatProvider
    fullName: System.IFormatProvider
  - name: )
    fullName: )
- uid: System.ValueType.ToString
  parent: System.ValueType
  isExternal: false
  name: ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    fullName: System.ValueType.ToString
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    fullName: System.ValueType.ToString
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: '{TEnum}'
  isExternal: false
  name: TEnum
  fullName: TEnum
- uid: System.ArgumentException
  parent: System
  isExternal: false
  name: ArgumentException
  fullName: System.ArgumentException
- uid: System.InvalidOperationException
  parent: System
  isExternal: false
  name: InvalidOperationException
  fullName: System.InvalidOperationException
- uid: System.ArgumentNullException
  isExternal: false
  name: ArgumentNullException
  fullName: System.ArgumentNullException
- uid: System.FormatException
  parent: System
  isExternal: false
  name: FormatException
  fullName: System.FormatException
- uid: System.OverflowException
  isExternal: false
  name: OverflowException
  fullName: System.OverflowException
- uid: System.InvalidCastException
  isExternal: false
  name: InvalidCastException
  fullName: System.InvalidCastException
