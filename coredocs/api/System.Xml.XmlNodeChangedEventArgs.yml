items:
- uid: System.Xml.XmlNodeChangedEventArgs
  commentId: T:System.Xml.XmlNodeChangedEventArgs
  id: XmlNodeChangedEventArgs
  parent: System.Xml
  children:
  - System.Xml.XmlNodeChangedEventArgs.#ctor(System.Xml.XmlNode,System.Xml.XmlNode,System.Xml.XmlNode,System.String,System.String,System.Xml.XmlNodeChangedAction)
  - System.Xml.XmlNodeChangedEventArgs.Action
  - System.Xml.XmlNodeChangedEventArgs.NewParent
  - System.Xml.XmlNodeChangedEventArgs.NewValue
  - System.Xml.XmlNodeChangedEventArgs.Node
  - System.Xml.XmlNodeChangedEventArgs.OldParent
  - System.Xml.XmlNodeChangedEventArgs.OldValue
  langs:
  - csharp
  - vb
  name: XmlNodeChangedEventArgs
  fullName: System.Xml.XmlNodeChangedEventArgs
  type: Class
  source:
    remote:
      path: src/System.Xml.XmlDocument/src/System/Xml/Dom/XmlNodeChangedEventArgs.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: XmlNodeChangedEventArgs
    path: src/System.Xml.XmlDocument/src/System/Xml/Dom/XmlNodeChangedEventArgs.cs
    startLine: 6
  assemblies:
  - System.Xml.XmlDocument
  namespace: System.Xml
  summary: Provides data for the <xref href="System.Xml.XmlDocument.NodeChanged" data-throw-if-not-resolved="false"></xref>, <xref href="System.Xml.XmlDocument.NodeChanging" data-throw-if-not-resolved="false"></xref>, <xref href="System.Xml.XmlDocument.NodeInserted" data-throw-if-not-resolved="false"></xref>, <xref href="System.Xml.XmlDocument.NodeInserting" data-throw-if-not-resolved="false"></xref>, <xref href="System.Xml.XmlDocument.NodeRemoved" data-throw-if-not-resolved="false"></xref> and <xref href="System.Xml.XmlDocument.NodeRemoving" data-throw-if-not-resolved="false"></xref> events.
  syntax:
    content: 'public class XmlNodeChangedEventArgs : EventArgs'
    content.vb: >-
      Public Class XmlNodeChangedEventArgs
          Inherits EventArgs
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: System.Xml.XmlNodeChangedEventArgs.#ctor(System.Xml.XmlNode,System.Xml.XmlNode,System.Xml.XmlNode,System.String,System.String,System.Xml.XmlNodeChangedAction)
  commentId: M:System.Xml.XmlNodeChangedEventArgs.#ctor(System.Xml.XmlNode,System.Xml.XmlNode,System.Xml.XmlNode,System.String,System.String,System.Xml.XmlNodeChangedAction)
  id: '#ctor(System.Xml.XmlNode,System.Xml.XmlNode,System.Xml.XmlNode,System.String,System.String,System.Xml.XmlNodeChangedAction)'
  parent: System.Xml.XmlNodeChangedEventArgs
  langs:
  - csharp
  - vb
  name: XmlNodeChangedEventArgs(XmlNode, XmlNode, XmlNode, String, String, XmlNodeChangedAction)
  fullName: System.Xml.XmlNodeChangedEventArgs.XmlNodeChangedEventArgs(System.Xml.XmlNode, System.Xml.XmlNode, System.Xml.XmlNode, System.String, System.String, System.Xml.XmlNodeChangedAction)
  type: Constructor
  source:
    remote:
      path: src/System.Xml.XmlDocument/src/System/Xml/Dom/XmlNodeChangedEventArgs.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Xml.XmlDocument/src/System/Xml/Dom/XmlNodeChangedEventArgs.cs
    startLine: 15
  assemblies:
  - System.Xml.XmlDocument
  namespace: System.Xml
  summary: Initializes a new instance of the <xref href="System.Xml.XmlNodeChangedEventArgs" data-throw-if-not-resolved="false"></xref> class.
  syntax:
    content: public XmlNodeChangedEventArgs(XmlNode node, XmlNode oldParent, XmlNode newParent, string oldValue, string newValue, XmlNodeChangedAction action)
    content.vb: Public Sub New(node As XmlNode, oldParent As XmlNode, newParent As XmlNode, oldValue As String, newValue As String, action As XmlNodeChangedAction)
    parameters:
    - id: node
      type: System.Xml.XmlNode
      description: The <xref href="System.Xml.XmlNode" data-throw-if-not-resolved="false"></xref> that generated the event.
    - id: oldParent
      type: System.Xml.XmlNode
      description: The old parent <xref href="System.Xml.XmlNode" data-throw-if-not-resolved="false"></xref> of the <xref href="System.Xml.XmlNode" data-throw-if-not-resolved="false"></xref> that generated the event.
    - id: newParent
      type: System.Xml.XmlNode
      description: The new parent <xref href="System.Xml.XmlNode" data-throw-if-not-resolved="false"></xref> of the <xref href="System.Xml.XmlNode" data-throw-if-not-resolved="false"></xref> that generated the event.
    - id: oldValue
      type: System.String
      description: The old value of the <xref href="System.Xml.XmlNode" data-throw-if-not-resolved="false"></xref> that generated the event.
    - id: newValue
      type: System.String
      description: The new value of the <xref href="System.Xml.XmlNode" data-throw-if-not-resolved="false"></xref> that generated the event.
    - id: action
      type: System.Xml.XmlNodeChangedAction
      description: The <xref href="System.Xml.XmlNodeChangedAction" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Xml.XmlNodeChangedEventArgs.Action
  commentId: P:System.Xml.XmlNodeChangedEventArgs.Action
  id: Action
  parent: System.Xml.XmlNodeChangedEventArgs
  langs:
  - csharp
  - vb
  name: Action
  fullName: System.Xml.XmlNodeChangedEventArgs.Action
  type: Property
  source:
    remote:
      path: src/System.Xml.XmlDocument/src/System/Xml/Dom/XmlNodeChangedEventArgs.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Action
    path: src/System.Xml.XmlDocument/src/System/Xml/Dom/XmlNodeChangedEventArgs.cs
    startLine: 25
  assemblies:
  - System.Xml.XmlDocument
  namespace: System.Xml
  summary: Gets a value indicating what type of node change event is occurring.
  syntax:
    content: public XmlNodeChangedAction Action { get; }
    content.vb: Public ReadOnly Property Action As XmlNodeChangedAction
    parameters: []
    return:
      type: System.Xml.XmlNodeChangedAction
      description: An XmlNodeChangedAction value describing the node change event.XmlNodeChangedAction Value Description Insert A node has been or will be inserted. Remove A node has been or will be removed. Change A node has been or will be changed. NoteThe Action value does not differentiate between when the event occurred (before or after). You can create separate event handlers to handle both instances.
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Xml.XmlNodeChangedEventArgs.NewParent
  commentId: P:System.Xml.XmlNodeChangedEventArgs.NewParent
  id: NewParent
  parent: System.Xml.XmlNodeChangedEventArgs
  langs:
  - csharp
  - vb
  name: NewParent
  fullName: System.Xml.XmlNodeChangedEventArgs.NewParent
  type: Property
  source:
    remote:
      path: src/System.Xml.XmlDocument/src/System/Xml/Dom/XmlNodeChangedEventArgs.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: NewParent
    path: src/System.Xml.XmlDocument/src/System/Xml/Dom/XmlNodeChangedEventArgs.cs
    startLine: 31
  assemblies:
  - System.Xml.XmlDocument
  namespace: System.Xml
  summary: Gets the value of the <xref href="System.Xml.XmlNode.ParentNode" data-throw-if-not-resolved="false"></xref> after the operation completes.
  syntax:
    content: public XmlNode NewParent { get; }
    content.vb: Public ReadOnly Property NewParent As XmlNode
    parameters: []
    return:
      type: System.Xml.XmlNode
      description: The value of the ParentNode after the operation completes. This property returns null if the node is being removed.NoteFor attribute nodes this property returns the <xref href="System.Xml.XmlAttribute.OwnerElement" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Xml.XmlNodeChangedEventArgs.NewValue
  commentId: P:System.Xml.XmlNodeChangedEventArgs.NewValue
  id: NewValue
  parent: System.Xml.XmlNodeChangedEventArgs
  langs:
  - csharp
  - vb
  name: NewValue
  fullName: System.Xml.XmlNodeChangedEventArgs.NewValue
  type: Property
  source:
    remote:
      path: src/System.Xml.XmlDocument/src/System/Xml/Dom/XmlNodeChangedEventArgs.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: NewValue
    path: src/System.Xml.XmlDocument/src/System/Xml/Dom/XmlNodeChangedEventArgs.cs
    startLine: 35
  assemblies:
  - System.Xml.XmlDocument
  namespace: System.Xml
  summary: Gets the new value of the node.
  syntax:
    content: public string NewValue { get; }
    content.vb: Public ReadOnly Property NewValue As String
    parameters: []
    return:
      type: System.String
      description: The new value of the node. This property returns null if the node is neither an attribute nor a text node, or if the node is being removed.If called in a <xref href="System.Xml.XmlDocument.NodeChanging" data-throw-if-not-resolved="false"></xref> event, NewValue returns the value of the node if the change is successful. If called in a <xref href="System.Xml.XmlDocument.NodeChanged" data-throw-if-not-resolved="false"></xref> event, NewValue returns the current value of the node.
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Xml.XmlNodeChangedEventArgs.Node
  commentId: P:System.Xml.XmlNodeChangedEventArgs.Node
  id: Node
  parent: System.Xml.XmlNodeChangedEventArgs
  langs:
  - csharp
  - vb
  name: Node
  fullName: System.Xml.XmlNodeChangedEventArgs.Node
  type: Property
  source:
    remote:
      path: src/System.Xml.XmlDocument/src/System/Xml/Dom/XmlNodeChangedEventArgs.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Node
    path: src/System.Xml.XmlDocument/src/System/Xml/Dom/XmlNodeChangedEventArgs.cs
    startLine: 27
  assemblies:
  - System.Xml.XmlDocument
  namespace: System.Xml
  summary: Gets the <xref href="System.Xml.XmlNode" data-throw-if-not-resolved="false"></xref> that is being added, removed or changed.
  syntax:
    content: public XmlNode Node { get; }
    content.vb: Public ReadOnly Property Node As XmlNode
    parameters: []
    return:
      type: System.Xml.XmlNode
      description: The XmlNode that is being added, removed or changed; this property never returns null.
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Xml.XmlNodeChangedEventArgs.OldParent
  commentId: P:System.Xml.XmlNodeChangedEventArgs.OldParent
  id: OldParent
  parent: System.Xml.XmlNodeChangedEventArgs
  langs:
  - csharp
  - vb
  name: OldParent
  fullName: System.Xml.XmlNodeChangedEventArgs.OldParent
  type: Property
  source:
    remote:
      path: src/System.Xml.XmlDocument/src/System/Xml/Dom/XmlNodeChangedEventArgs.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: OldParent
    path: src/System.Xml.XmlDocument/src/System/Xml/Dom/XmlNodeChangedEventArgs.cs
    startLine: 29
  assemblies:
  - System.Xml.XmlDocument
  namespace: System.Xml
  summary: Gets the value of the <xref href="System.Xml.XmlNode.ParentNode" data-throw-if-not-resolved="false"></xref> before the operation began.
  syntax:
    content: public XmlNode OldParent { get; }
    content.vb: Public ReadOnly Property OldParent As XmlNode
    parameters: []
    return:
      type: System.Xml.XmlNode
      description: The value of the ParentNode before the operation began. This property returns null if the node did not have a parent.NoteFor attribute nodes this property returns the <xref href="System.Xml.XmlAttribute.OwnerElement" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Xml.XmlNodeChangedEventArgs.OldValue
  commentId: P:System.Xml.XmlNodeChangedEventArgs.OldValue
  id: OldValue
  parent: System.Xml.XmlNodeChangedEventArgs
  langs:
  - csharp
  - vb
  name: OldValue
  fullName: System.Xml.XmlNodeChangedEventArgs.OldValue
  type: Property
  source:
    remote:
      path: src/System.Xml.XmlDocument/src/System/Xml/Dom/XmlNodeChangedEventArgs.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: OldValue
    path: src/System.Xml.XmlDocument/src/System/Xml/Dom/XmlNodeChangedEventArgs.cs
    startLine: 33
  assemblies:
  - System.Xml.XmlDocument
  namespace: System.Xml
  summary: Gets the original value of the node.
  syntax:
    content: public string OldValue { get; }
    content.vb: Public ReadOnly Property OldValue As String
    parameters: []
    return:
      type: System.String
      description: The original value of the node. This property returns null if the node is neither an attribute nor a text node, or if the node is being inserted.If called in a <xref href="System.Xml.XmlDocument.NodeChanging" data-throw-if-not-resolved="false"></xref> event, OldValue returns the current value of the node that will be replaced if the change is successful. If called in a <xref href="System.Xml.XmlDocument.NodeChanged" data-throw-if-not-resolved="false"></xref> event, OldValue returns the value of node prior to the change.
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: System.Xml
  isExternal: false
  name: System.Xml
  fullName: System.Xml
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Xml.XmlNode
  parent: System.Xml
  isExternal: false
  name: XmlNode
  fullName: System.Xml.XmlNode
- uid: System.String
  parent: System
  isExternal: false
  name: String
  fullName: System.String
- uid: System.Xml.XmlNodeChangedAction
  parent: System.Xml
  isExternal: false
  name: XmlNodeChangedAction
  fullName: System.Xml.XmlNodeChangedAction
