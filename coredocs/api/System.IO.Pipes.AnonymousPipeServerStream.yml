items:
- uid: System.IO.Pipes.AnonymousPipeServerStream
  commentId: T:System.IO.Pipes.AnonymousPipeServerStream
  id: AnonymousPipeServerStream
  parent: System.IO.Pipes
  children:
  - System.IO.Pipes.AnonymousPipeServerStream.#ctor
  - System.IO.Pipes.AnonymousPipeServerStream.#ctor(System.IO.Pipes.PipeDirection)
  - System.IO.Pipes.AnonymousPipeServerStream.#ctor(System.IO.Pipes.PipeDirection,Microsoft.Win32.SafeHandles.SafePipeHandle,Microsoft.Win32.SafeHandles.SafePipeHandle)
  - System.IO.Pipes.AnonymousPipeServerStream.#ctor(System.IO.Pipes.PipeDirection,System.IO.HandleInheritability)
  - System.IO.Pipes.AnonymousPipeServerStream.#ctor(System.IO.Pipes.PipeDirection,System.IO.HandleInheritability,System.Int32)
  - System.IO.Pipes.AnonymousPipeServerStream.ClientSafePipeHandle
  - System.IO.Pipes.AnonymousPipeServerStream.Dispose(System.Boolean)
  - System.IO.Pipes.AnonymousPipeServerStream.DisposeLocalCopyOfClientHandle
  - System.IO.Pipes.AnonymousPipeServerStream.Finalize
  - System.IO.Pipes.AnonymousPipeServerStream.GetClientHandleAsString
  - System.IO.Pipes.AnonymousPipeServerStream.ReadMode
  - System.IO.Pipes.AnonymousPipeServerStream.TransmissionMode
  langs:
  - csharp
  - vb
  name: AnonymousPipeServerStream
  fullName: System.IO.Pipes.AnonymousPipeServerStream
  type: Class
  source:
    remote:
      path: src/System.IO.Pipes/src/System/IO/Pipes/AnonymousPipeServerStream.Windows.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: AnonymousPipeServerStream
    path: src/System.IO.Pipes/src/System/IO/Pipes/AnonymousPipeServerStream.Windows.cs
    startLine: 14
  assemblies:
  - System.IO.Pipes
  namespace: System.IO.Pipes
  summary: Exposes a stream around an anonymous pipe, which supports both synchronous and asynchronous read and write operations.
  syntax:
    content: 'public sealed class AnonymousPipeServerStream : PipeStream'
    content.vb: >-
      Public NotInheritable Class AnonymousPipeServerStream
          Inherits PipeStream
  inheritance:
  - System.Object
  - System.IO.Pipes.PipeStream
  inheritedMembers:
  - System.IO.Pipes.PipeStream.CanRead
  - System.IO.Pipes.PipeStream.CanSeek
  - System.IO.Pipes.PipeStream.CanWrite
  - System.IO.Pipes.PipeStream.InBufferSize
  - System.IO.Pipes.PipeStream.IsAsync
  - System.IO.Pipes.PipeStream.IsConnected
  - System.IO.Pipes.PipeStream.IsMessageComplete
  - System.IO.Pipes.PipeStream.Length
  - System.IO.Pipes.PipeStream.OutBufferSize
  - System.IO.Pipes.PipeStream.Position
  - System.IO.Pipes.PipeStream.SafePipeHandle
  - System.IO.Pipes.PipeStream.Flush
  - System.IO.Pipes.PipeStream.Read(System.Byte[],System.Int32,System.Int32)
  - System.IO.Pipes.PipeStream.ReadByte
  - System.IO.Pipes.PipeStream.Seek(System.Int64,System.IO.SeekOrigin)
  - System.IO.Pipes.PipeStream.SetLength(System.Int64)
  - System.IO.Pipes.PipeStream.WaitForPipeDrain
  - System.IO.Pipes.PipeStream.Write(System.Byte[],System.Int32,System.Int32)
  - System.IO.Pipes.PipeStream.WriteByte(System.Byte)
  - System.IO.Pipes.PipeStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)
  - System.IO.Pipes.PipeStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: System.IO.Pipes.AnonymousPipeServerStream.#ctor
  commentId: M:System.IO.Pipes.AnonymousPipeServerStream.#ctor
  id: '#ctor'
  parent: System.IO.Pipes.AnonymousPipeServerStream
  langs:
  - csharp
  - vb
  name: AnonymousPipeServerStream()
  fullName: System.IO.Pipes.AnonymousPipeServerStream.AnonymousPipeServerStream()
  type: Constructor
  source:
    remote:
      path: src/System.IO.Pipes/src/System/IO/Pipes/AnonymousPipeServerStream.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.IO.Pipes/src/System/IO/Pipes/AnonymousPipeServerStream.cs
    startLine: 18
  assemblies:
  - System.IO.Pipes
  namespace: System.IO.Pipes
  summary: Initializes a new instance of the <xref href="System.IO.Pipes.AnonymousPipeServerStream" data-throw-if-not-resolved="false"></xref> class.
  syntax:
    content: public AnonymousPipeServerStream()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.IO.Pipes.AnonymousPipeServerStream.#ctor(System.IO.Pipes.PipeDirection)
  commentId: M:System.IO.Pipes.AnonymousPipeServerStream.#ctor(System.IO.Pipes.PipeDirection)
  id: '#ctor(System.IO.Pipes.PipeDirection)'
  parent: System.IO.Pipes.AnonymousPipeServerStream
  langs:
  - csharp
  - vb
  name: AnonymousPipeServerStream(PipeDirection)
  fullName: System.IO.Pipes.AnonymousPipeServerStream.AnonymousPipeServerStream(System.IO.Pipes.PipeDirection)
  type: Constructor
  source:
    remote:
      path: src/System.IO.Pipes/src/System/IO/Pipes/AnonymousPipeServerStream.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.IO.Pipes/src/System/IO/Pipes/AnonymousPipeServerStream.cs
    startLine: 24
  assemblies:
  - System.IO.Pipes
  namespace: System.IO.Pipes
  summary: Initializes a new instance of the <xref href="System.IO.Pipes.AnonymousPipeServerStream" data-throw-if-not-resolved="false"></xref> class with the specified pipe direction.
  syntax:
    content: public AnonymousPipeServerStream(PipeDirection direction)
    content.vb: Public Sub New(direction As PipeDirection)
    parameters:
    - id: direction
      type: System.IO.Pipes.PipeDirection
      description: One of the enumeration values that determines the direction of the pipe.Anonymous pipes can only be in one direction, so <em>direction</em> cannot be set to <xref href="System.IO.Pipes.PipeDirection.InOut" data-throw-if-not-resolved="false"></xref>.
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "\n<em>direction</em> is set to <xref href=\"System.IO.Pipes.PipeDirection.InOut\" data-throw-if-not-resolved=\"false\"></xref>."
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.IO.Pipes.AnonymousPipeServerStream.#ctor(System.IO.Pipes.PipeDirection,Microsoft.Win32.SafeHandles.SafePipeHandle,Microsoft.Win32.SafeHandles.SafePipeHandle)
  commentId: M:System.IO.Pipes.AnonymousPipeServerStream.#ctor(System.IO.Pipes.PipeDirection,Microsoft.Win32.SafeHandles.SafePipeHandle,Microsoft.Win32.SafeHandles.SafePipeHandle)
  id: '#ctor(System.IO.Pipes.PipeDirection,Microsoft.Win32.SafeHandles.SafePipeHandle,Microsoft.Win32.SafeHandles.SafePipeHandle)'
  parent: System.IO.Pipes.AnonymousPipeServerStream
  langs:
  - csharp
  - vb
  name: AnonymousPipeServerStream(PipeDirection, SafePipeHandle, SafePipeHandle)
  fullName: System.IO.Pipes.AnonymousPipeServerStream.AnonymousPipeServerStream(System.IO.Pipes.PipeDirection, Microsoft.Win32.SafeHandles.SafePipeHandle, Microsoft.Win32.SafeHandles.SafePipeHandle)
  type: Constructor
  source:
    remote:
      path: src/System.IO.Pipes/src/System/IO/Pipes/AnonymousPipeServerStream.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.IO.Pipes/src/System/IO/Pipes/AnonymousPipeServerStream.cs
    startLine: 37
  assemblies:
  - System.IO.Pipes
  namespace: System.IO.Pipes
  summary: Initializes a new instance of the <xref href="System.IO.Pipes.AnonymousPipeServerStream" data-throw-if-not-resolved="false"></xref> class from the specified pipe handles.
  syntax:
    content: public AnonymousPipeServerStream(PipeDirection direction, SafePipeHandle serverSafePipeHandle, SafePipeHandle clientSafePipeHandle)
    content.vb: Public Sub New(direction As PipeDirection, serverSafePipeHandle As SafePipeHandle, clientSafePipeHandle As SafePipeHandle)
    parameters:
    - id: direction
      type: System.IO.Pipes.PipeDirection
      description: One of the enumeration values that determines the direction of the pipe.Anonymous pipes can only be in one direction, so <em>direction</em> cannot be set to <xref href="System.IO.Pipes.PipeDirection.InOut" data-throw-if-not-resolved="false"></xref>.
    - id: serverSafePipeHandle
      type: Microsoft.Win32.SafeHandles.SafePipeHandle
      description: A safe handle for the pipe that this <xref href="System.IO.Pipes.AnonymousPipeServerStream" data-throw-if-not-resolved="false"></xref> object will encapsulate.
    - id: clientSafePipeHandle
      type: Microsoft.Win32.SafeHandles.SafePipeHandle
      description: A safe handle for the <xref href="System.IO.Pipes.AnonymousPipeClientStream" data-throw-if-not-resolved="false"></xref> object.
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<em>serverSafePipeHandle</em> or <em>clientSafePipeHandle</em> is an invalid handle."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>serverSafePipeHandle</em> or <em>clientSafePipeHandle</em> is null."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "\n<em>direction</em> is set to <xref href=\"System.IO.Pipes.PipeDirection.InOut\" data-throw-if-not-resolved=\"false\"></xref>."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: An I/O error, such as a disk error, has occurred.-or-The stream has been closed.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.IO.Pipes.AnonymousPipeServerStream.#ctor(System.IO.Pipes.PipeDirection,System.IO.HandleInheritability)
  commentId: M:System.IO.Pipes.AnonymousPipeServerStream.#ctor(System.IO.Pipes.PipeDirection,System.IO.HandleInheritability)
  id: '#ctor(System.IO.Pipes.PipeDirection,System.IO.HandleInheritability)'
  parent: System.IO.Pipes.AnonymousPipeServerStream
  langs:
  - csharp
  - vb
  name: AnonymousPipeServerStream(PipeDirection, HandleInheritability)
  fullName: System.IO.Pipes.AnonymousPipeServerStream.AnonymousPipeServerStream(System.IO.Pipes.PipeDirection, System.IO.HandleInheritability)
  type: Constructor
  source:
    remote:
      path: src/System.IO.Pipes/ref/System.IO.Pipes.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.IO.Pipes/ref/System.IO.Pipes.cs
    startLine: 32
  assemblies:
  - System.IO.Pipes
  namespace: System.IO.Pipes
  summary: Initializes a new instance of the <xref href="System.IO.Pipes.AnonymousPipeServerStream" data-throw-if-not-resolved="false"></xref> class with the specified pipe direction and inheritability mode.
  syntax:
    content: public AnonymousPipeServerStream(PipeDirection direction, HandleInheritability inheritability)
    content.vb: Public Sub New(direction As PipeDirection, inheritability As HandleInheritability)
    parameters:
    - id: direction
      type: System.IO.Pipes.PipeDirection
      description: One of the enumeration values that determines the direction of the pipe.Anonymous pipes can only be in one direction, so <em>direction</em> cannot be set to <xref href="System.IO.Pipes.PipeDirection.InOut" data-throw-if-not-resolved="false"></xref>.
    - id: inheritability
      type: System.IO.HandleInheritability
      description: 'One of the enumeration values that determines whether the underlying handle can be inherited by child processes. Must be set to either <xref href="System.IO.HandleInheritability.None" data-throw-if-not-resolved="false"></xref> or <xref href="System.IO.HandleInheritability.Inheritable" data-throw-if-not-resolved="false"></xref>. '
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<em>inheritability</em> is not set to either <xref href=\"System.IO.HandleInheritability.None\" data-throw-if-not-resolved=\"false\"></xref> or <xref href=\"System.IO.HandleInheritability.Inheritable\" data-throw-if-not-resolved=\"false\"></xref>."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "\n<em>direction</em> is set to <xref href=\"System.IO.Pipes.PipeDirection.InOut\" data-throw-if-not-resolved=\"false\"></xref>."
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.IO.Pipes.AnonymousPipeServerStream.#ctor(System.IO.Pipes.PipeDirection,System.IO.HandleInheritability,System.Int32)
  commentId: M:System.IO.Pipes.AnonymousPipeServerStream.#ctor(System.IO.Pipes.PipeDirection,System.IO.HandleInheritability,System.Int32)
  id: '#ctor(System.IO.Pipes.PipeDirection,System.IO.HandleInheritability,System.Int32)'
  parent: System.IO.Pipes.AnonymousPipeServerStream
  langs:
  - csharp
  - vb
  name: AnonymousPipeServerStream(PipeDirection, HandleInheritability, Int32)
  fullName: System.IO.Pipes.AnonymousPipeServerStream.AnonymousPipeServerStream(System.IO.Pipes.PipeDirection, System.IO.HandleInheritability, System.Int32)
  type: Constructor
  source:
    remote:
      path: src/System.IO.Pipes/ref/System.IO.Pipes.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.IO.Pipes/ref/System.IO.Pipes.cs
    startLine: 33
  assemblies:
  - System.IO.Pipes
  namespace: System.IO.Pipes
  summary: Initializes a new instance of the <xref href="System.IO.Pipes.AnonymousPipeServerStream" data-throw-if-not-resolved="false"></xref> class with the specified pipe direction, inheritability mode, and buffer size.
  syntax:
    content: public AnonymousPipeServerStream(PipeDirection direction, HandleInheritability inheritability, int bufferSize)
    content.vb: Public Sub New(direction As PipeDirection, inheritability As HandleInheritability, bufferSize As Integer)
    parameters:
    - id: direction
      type: System.IO.Pipes.PipeDirection
      description: One of the enumeration values that determines the direction of the pipe.Anonymous pipes can only be in one direction, so <em>direction</em> cannot be set to <xref href="System.IO.Pipes.PipeDirection.InOut" data-throw-if-not-resolved="false"></xref>.
    - id: inheritability
      type: System.IO.HandleInheritability
      description: One of the enumeration values that determines whether the underlying handle can be inherited by child processes. Must be set to either <xref href="System.IO.HandleInheritability.None" data-throw-if-not-resolved="false"></xref> or <xref href="System.IO.HandleInheritability.Inheritable" data-throw-if-not-resolved="false"></xref>.
    - id: bufferSize
      type: System.Int32
      description: 'The size of the buffer. This value must be greater than or equal to 0. '
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<em>inheritability</em> is not set to either <xref href=\"System.IO.HandleInheritability.None\" data-throw-if-not-resolved=\"false\"></xref> or <xref href=\"System.IO.HandleInheritability.Inheritable\" data-throw-if-not-resolved=\"false\"></xref>.-or-<em>bufferSize</em> is less than 0."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "\n<em>direction</em> is set to <xref href=\"System.IO.Pipes.PipeDirection.InOut\" data-throw-if-not-resolved=\"false\"></xref>."
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.IO.Pipes.AnonymousPipeServerStream.ClientSafePipeHandle
  commentId: P:System.IO.Pipes.AnonymousPipeServerStream.ClientSafePipeHandle
  id: ClientSafePipeHandle
  parent: System.IO.Pipes.AnonymousPipeServerStream
  langs:
  - csharp
  - vb
  name: ClientSafePipeHandle
  fullName: System.IO.Pipes.AnonymousPipeServerStream.ClientSafePipeHandle
  type: Property
  source:
    remote:
      path: src/System.IO.Pipes/src/System/IO/Pipes/AnonymousPipeServerStream.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ClientSafePipeHandle
    path: src/System.IO.Pipes/src/System/IO/Pipes/AnonymousPipeServerStream.cs
    startLine: 105
  assemblies:
  - System.IO.Pipes
  namespace: System.IO.Pipes
  summary: Gets the safe handle for the <xref href="System.IO.Pipes.AnonymousPipeClientStream" data-throw-if-not-resolved="false"></xref> object that is currently connected to the <xref href="System.IO.Pipes.AnonymousPipeServerStream" data-throw-if-not-resolved="false"></xref> object.
  syntax:
    content: public SafePipeHandle ClientSafePipeHandle { get; }
    content.vb: Public ReadOnly Property ClientSafePipeHandle As SafePipeHandle
    parameters: []
    return:
      type: Microsoft.Win32.SafeHandles.SafePipeHandle
      description: A handle for the <xref href="System.IO.Pipes.AnonymousPipeClientStream" data-throw-if-not-resolved="false"></xref> object that is currently connected to the <xref href="System.IO.Pipes.AnonymousPipeServerStream" data-throw-if-not-resolved="false"></xref> object.
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.IO.Pipes.AnonymousPipeServerStream.ReadMode
  commentId: P:System.IO.Pipes.AnonymousPipeServerStream.ReadMode
  id: ReadMode
  parent: System.IO.Pipes.AnonymousPipeServerStream
  langs:
  - csharp
  - vb
  name: ReadMode
  fullName: System.IO.Pipes.AnonymousPipeServerStream.ReadMode
  type: Property
  source:
    remote:
      path: src/System.IO.Pipes/src/System/IO/Pipes/AnonymousPipeServerStream.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ReadMode
    path: src/System.IO.Pipes/src/System/IO/Pipes/AnonymousPipeServerStream.cs
    startLine: 159
  assemblies:
  - System.IO.Pipes
  namespace: System.IO.Pipes
  summary: Sets the reading mode for the <xref href="System.IO.Pipes.AnonymousPipeServerStream" data-throw-if-not-resolved="false"></xref> object. For anonymous pipes, transmission mode must be <xref href="System.IO.Pipes.PipeTransmissionMode.Byte" data-throw-if-not-resolved="false"></xref>.
  syntax:
    content: public override PipeTransmissionMode ReadMode { set; }
    content.vb: Public Overrides WriteOnly Property ReadMode As PipeTransmissionMode
    parameters: []
    return:
      type: System.IO.Pipes.PipeTransmissionMode
      description: The reading mode for the <xref href="System.IO.Pipes.AnonymousPipeServerStream" data-throw-if-not-resolved="false"></xref> object.
  overridden: System.IO.Pipes.PipeStream.ReadMode
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: 'The transmission mode is not valid. For anonymous pipes, only <xref href="System.IO.Pipes.PipeTransmissionMode.Byte" data-throw-if-not-resolved="false"></xref> is supported. '
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: The property is set to <xref href="System.IO.Pipes.PipeTransmissionMode.Message" data-throw-if-not-resolved="false"></xref>, which is not supported for anonymous pipes.
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: The connection is broken or another I/O error occurs.
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: The pipe is closed.
  modifiers.csharp:
  - public
  - override
  - set
  modifiers.vb:
  - Public
  - Overrides
  - WriteOnly
- uid: System.IO.Pipes.AnonymousPipeServerStream.TransmissionMode
  commentId: P:System.IO.Pipes.AnonymousPipeServerStream.TransmissionMode
  id: TransmissionMode
  parent: System.IO.Pipes.AnonymousPipeServerStream
  langs:
  - csharp
  - vb
  name: TransmissionMode
  fullName: System.IO.Pipes.AnonymousPipeServerStream.TransmissionMode
  type: Property
  source:
    remote:
      path: src/System.IO.Pipes/src/System/IO/Pipes/AnonymousPipeServerStream.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: TransmissionMode
    path: src/System.IO.Pipes/src/System/IO/Pipes/AnonymousPipeServerStream.cs
    startLine: 153
  assemblies:
  - System.IO.Pipes
  namespace: System.IO.Pipes
  summary: Gets the pipe transmission mode that is supported by the current pipe.
  syntax:
    content: public override PipeTransmissionMode TransmissionMode { get; }
    content.vb: Public Overrides ReadOnly Property TransmissionMode As PipeTransmissionMode
    parameters: []
    return:
      type: System.IO.Pipes.PipeTransmissionMode
      description: The <xref href="System.IO.Pipes.PipeTransmissionMode" data-throw-if-not-resolved="false"></xref> that is supported by the current pipe.
  overridden: System.IO.Pipes.PipeStream.TransmissionMode
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: System.IO.Pipes.AnonymousPipeServerStream.Dispose(System.Boolean)
  commentId: M:System.IO.Pipes.AnonymousPipeServerStream.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.IO.Pipes.AnonymousPipeServerStream
  langs:
  - csharp
  - vb
  name: Dispose(Boolean)
  fullName: System.IO.Pipes.AnonymousPipeServerStream.Dispose(System.Boolean)
  type: Method
  source:
    remote:
      path: src/System.IO.Pipes/src/System/IO/Pipes/AnonymousPipeServerStream.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Dispose
    path: src/System.IO.Pipes/src/System/IO/Pipes/AnonymousPipeServerStream.cs
    startLine: 135
  assemblies:
  - System.IO.Pipes
  namespace: System.IO.Pipes
  syntax:
    content: protected override void Dispose(bool disposing)
    content.vb: Protected Overrides Sub Dispose(disposing As Boolean)
    parameters:
    - id: disposing
      type: System.Boolean
  overridden: System.IO.Pipes.PipeStream.Dispose(System.Boolean)
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: System.IO.Pipes.AnonymousPipeServerStream.DisposeLocalCopyOfClientHandle
  commentId: M:System.IO.Pipes.AnonymousPipeServerStream.DisposeLocalCopyOfClientHandle
  id: DisposeLocalCopyOfClientHandle
  parent: System.IO.Pipes.AnonymousPipeServerStream
  langs:
  - csharp
  - vb
  name: DisposeLocalCopyOfClientHandle()
  fullName: System.IO.Pipes.AnonymousPipeServerStream.DisposeLocalCopyOfClientHandle()
  type: Method
  source:
    remote:
      path: src/System.IO.Pipes/src/System/IO/Pipes/AnonymousPipeServerStream.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: DisposeLocalCopyOfClientHandle
    path: src/System.IO.Pipes/src/System/IO/Pipes/AnonymousPipeServerStream.cs
    startLine: 126
  assemblies:
  - System.IO.Pipes
  namespace: System.IO.Pipes
  summary: Closes the local copy of the <xref href="System.IO.Pipes.AnonymousPipeClientStream" data-throw-if-not-resolved="false"></xref> object's handle.
  syntax:
    content: public void DisposeLocalCopyOfClientHandle()
    content.vb: Public Sub DisposeLocalCopyOfClientHandle
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.IO.Pipes.AnonymousPipeServerStream.Finalize
  commentId: M:System.IO.Pipes.AnonymousPipeServerStream.Finalize
  id: Finalize
  parent: System.IO.Pipes.AnonymousPipeServerStream
  langs:
  - csharp
  - vb
  name: Finalize()
  fullName: System.IO.Pipes.AnonymousPipeServerStream.Finalize()
  type: Method
  source:
    remote:
      path: src/System.IO.Pipes/src/System/IO/Pipes/AnonymousPipeServerStream.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Finalize
    path: src/System.IO.Pipes/src/System/IO/Pipes/AnonymousPipeServerStream.cs
    startLine: 89
  assemblies:
  - System.IO.Pipes
  namespace: System.IO.Pipes
  summary: Releases unmanaged resources and performs other cleanup operations before the <xref href="System.IO.Pipes.AnonymousPipeServerStream" data-throw-if-not-resolved="false"></xref> instance is reclaimed by garbage collection.
  syntax:
    content: protected void Finalize()
    content.vb: Protected Sub Finalize
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: System.IO.Pipes.AnonymousPipeServerStream.GetClientHandleAsString
  commentId: M:System.IO.Pipes.AnonymousPipeServerStream.GetClientHandleAsString
  id: GetClientHandleAsString
  parent: System.IO.Pipes.AnonymousPipeServerStream
  langs:
  - csharp
  - vb
  name: GetClientHandleAsString()
  fullName: System.IO.Pipes.AnonymousPipeServerStream.GetClientHandleAsString()
  type: Method
  source:
    remote:
      path: src/System.IO.Pipes/src/System/IO/Pipes/AnonymousPipeServerStream.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetClientHandleAsString
    path: src/System.IO.Pipes/src/System/IO/Pipes/AnonymousPipeServerStream.cs
    startLine: 96
  assemblies:
  - System.IO.Pipes
  namespace: System.IO.Pipes
  summary: Gets the connected <xref href="System.IO.Pipes.AnonymousPipeClientStream" data-throw-if-not-resolved="false"></xref> object's handle as a string.
  syntax:
    content: public string GetClientHandleAsString()
    content.vb: Public Function GetClientHandleAsString As String
    return:
      type: System.String
      description: A string that represents the connected <xref href="System.IO.Pipes.AnonymousPipeClientStream" data-throw-if-not-resolved="false"></xref> object's handle.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: System.IO.Pipes
  isExternal: false
  name: System.IO.Pipes
  fullName: System.IO.Pipes
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System.IO.Pipes.PipeStream
  parent: System.IO.Pipes
  isExternal: false
  name: PipeStream
  fullName: System.IO.Pipes.PipeStream
- uid: System.IO.Pipes.PipeStream.CanRead
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: CanRead
  fullName: System.IO.Pipes.PipeStream.CanRead
- uid: System.IO.Pipes.PipeStream.CanSeek
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: CanSeek
  fullName: System.IO.Pipes.PipeStream.CanSeek
- uid: System.IO.Pipes.PipeStream.CanWrite
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: CanWrite
  fullName: System.IO.Pipes.PipeStream.CanWrite
- uid: System.IO.Pipes.PipeStream.InBufferSize
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: InBufferSize
  fullName: System.IO.Pipes.PipeStream.InBufferSize
- uid: System.IO.Pipes.PipeStream.IsAsync
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: IsAsync
  fullName: System.IO.Pipes.PipeStream.IsAsync
- uid: System.IO.Pipes.PipeStream.IsConnected
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: IsConnected
  fullName: System.IO.Pipes.PipeStream.IsConnected
- uid: System.IO.Pipes.PipeStream.IsMessageComplete
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: IsMessageComplete
  fullName: System.IO.Pipes.PipeStream.IsMessageComplete
- uid: System.IO.Pipes.PipeStream.Length
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: Length
  fullName: System.IO.Pipes.PipeStream.Length
- uid: System.IO.Pipes.PipeStream.OutBufferSize
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: OutBufferSize
  fullName: System.IO.Pipes.PipeStream.OutBufferSize
- uid: System.IO.Pipes.PipeStream.Position
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: Position
  fullName: System.IO.Pipes.PipeStream.Position
- uid: System.IO.Pipes.PipeStream.SafePipeHandle
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: SafePipeHandle
  fullName: System.IO.Pipes.PipeStream.SafePipeHandle
- uid: System.IO.Pipes.PipeStream.Flush
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: Flush()
  fullName: System.IO.Pipes.PipeStream.Flush()
  spec.csharp:
  - uid: System.IO.Pipes.PipeStream.Flush
    name: Flush
    fullName: System.IO.Pipes.PipeStream.Flush
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IO.Pipes.PipeStream.Flush
    name: Flush
    fullName: System.IO.Pipes.PipeStream.Flush
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.IO.Pipes.PipeStream.Read(System.Byte[],System.Int32,System.Int32)
  parent: System.IO.Pipes.PipeStream
  isExternal: true
  name: Read(Byte[], Int32, Int32)
  fullName: System.IO.Pipes.PipeStream.Read(System.Byte[], System.Int32, System.Int32)
  fullname.vb: System.IO.Pipes.PipeStream.Read(System.Byte(), System.Int32, System.Int32)
  name.vb: Read(Byte(), Int32, Int32)
  spec.csharp:
  - uid: System.IO.Pipes.PipeStream.Read(System.Byte[],System.Int32,System.Int32)
    name: Read
    fullName: System.IO.Pipes.PipeStream.Read
  - name: (
    fullName: (
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    fullName: '[]'
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IO.Pipes.PipeStream.Read(System.Byte[],System.Int32,System.Int32)
    name: Read
    fullName: System.IO.Pipes.PipeStream.Read
  - name: (
    fullName: (
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    fullName: ()
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
- uid: System.IO.Pipes.PipeStream.ReadByte
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: ReadByte()
  fullName: System.IO.Pipes.PipeStream.ReadByte()
  spec.csharp:
  - uid: System.IO.Pipes.PipeStream.ReadByte
    name: ReadByte
    fullName: System.IO.Pipes.PipeStream.ReadByte
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IO.Pipes.PipeStream.ReadByte
    name: ReadByte
    fullName: System.IO.Pipes.PipeStream.ReadByte
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.IO.Pipes.PipeStream.Seek(System.Int64,System.IO.SeekOrigin)
  parent: System.IO.Pipes.PipeStream
  isExternal: true
  name: Seek(Int64, SeekOrigin)
  fullName: System.IO.Pipes.PipeStream.Seek(System.Int64, System.IO.SeekOrigin)
  spec.csharp:
  - uid: System.IO.Pipes.PipeStream.Seek(System.Int64,System.IO.SeekOrigin)
    name: Seek
    fullName: System.IO.Pipes.PipeStream.Seek
  - name: (
    fullName: (
  - uid: System.Int64
    name: Int64
    fullName: System.Int64
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.IO.SeekOrigin
    name: SeekOrigin
    fullName: System.IO.SeekOrigin
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IO.Pipes.PipeStream.Seek(System.Int64,System.IO.SeekOrigin)
    name: Seek
    fullName: System.IO.Pipes.PipeStream.Seek
  - name: (
    fullName: (
  - uid: System.Int64
    name: Int64
    fullName: System.Int64
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.IO.SeekOrigin
    name: SeekOrigin
    fullName: System.IO.SeekOrigin
    isExternal: true
  - name: )
    fullName: )
- uid: System.IO.Pipes.PipeStream.SetLength(System.Int64)
  parent: System.IO.Pipes.PipeStream
  isExternal: true
  name: SetLength(Int64)
  fullName: System.IO.Pipes.PipeStream.SetLength(System.Int64)
  spec.csharp:
  - uid: System.IO.Pipes.PipeStream.SetLength(System.Int64)
    name: SetLength
    fullName: System.IO.Pipes.PipeStream.SetLength
  - name: (
    fullName: (
  - uid: System.Int64
    name: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IO.Pipes.PipeStream.SetLength(System.Int64)
    name: SetLength
    fullName: System.IO.Pipes.PipeStream.SetLength
  - name: (
    fullName: (
  - uid: System.Int64
    name: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    fullName: )
- uid: System.IO.Pipes.PipeStream.WaitForPipeDrain
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: WaitForPipeDrain()
  fullName: System.IO.Pipes.PipeStream.WaitForPipeDrain()
  spec.csharp:
  - uid: System.IO.Pipes.PipeStream.WaitForPipeDrain
    name: WaitForPipeDrain
    fullName: System.IO.Pipes.PipeStream.WaitForPipeDrain
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IO.Pipes.PipeStream.WaitForPipeDrain
    name: WaitForPipeDrain
    fullName: System.IO.Pipes.PipeStream.WaitForPipeDrain
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.IO.Pipes.PipeStream.Write(System.Byte[],System.Int32,System.Int32)
  parent: System.IO.Pipes.PipeStream
  isExternal: true
  name: Write(Byte[], Int32, Int32)
  fullName: System.IO.Pipes.PipeStream.Write(System.Byte[], System.Int32, System.Int32)
  fullname.vb: System.IO.Pipes.PipeStream.Write(System.Byte(), System.Int32, System.Int32)
  name.vb: Write(Byte(), Int32, Int32)
  spec.csharp:
  - uid: System.IO.Pipes.PipeStream.Write(System.Byte[],System.Int32,System.Int32)
    name: Write
    fullName: System.IO.Pipes.PipeStream.Write
  - name: (
    fullName: (
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    fullName: '[]'
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IO.Pipes.PipeStream.Write(System.Byte[],System.Int32,System.Int32)
    name: Write
    fullName: System.IO.Pipes.PipeStream.Write
  - name: (
    fullName: (
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    fullName: ()
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
- uid: System.IO.Pipes.PipeStream.WriteByte(System.Byte)
  parent: System.IO.Pipes.PipeStream
  isExternal: true
  name: WriteByte(Byte)
  fullName: System.IO.Pipes.PipeStream.WriteByte(System.Byte)
  spec.csharp:
  - uid: System.IO.Pipes.PipeStream.WriteByte(System.Byte)
    name: WriteByte
    fullName: System.IO.Pipes.PipeStream.WriteByte
  - name: (
    fullName: (
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IO.Pipes.PipeStream.WriteByte(System.Byte)
    name: WriteByte
    fullName: System.IO.Pipes.PipeStream.WriteByte
  - name: (
    fullName: (
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
    isExternal: true
  - name: )
    fullName: )
- uid: System.IO.Pipes.PipeStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)
  parent: System.IO.Pipes.PipeStream
  isExternal: true
  name: ReadAsync(Byte[], Int32, Int32, Threading.CancellationToken)
  fullName: System.IO.Pipes.PipeStream.ReadAsync(System.Byte[], System.Int32, System.Int32, System.Threading.CancellationToken)
  fullname.vb: System.IO.Pipes.PipeStream.ReadAsync(System.Byte(), System.Int32, System.Int32, System.Threading.CancellationToken)
  name.vb: ReadAsync(Byte(), Int32, Int32, Threading.CancellationToken)
  spec.csharp:
  - uid: System.IO.Pipes.PipeStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)
    name: ReadAsync
    fullName: System.IO.Pipes.PipeStream.ReadAsync
  - name: (
    fullName: (
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    fullName: '[]'
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: Threading.CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IO.Pipes.PipeStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)
    name: ReadAsync
    fullName: System.IO.Pipes.PipeStream.ReadAsync
  - name: (
    fullName: (
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    fullName: ()
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: Threading.CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    fullName: )
- uid: System.IO.Pipes.PipeStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)
  parent: System.IO.Pipes.PipeStream
  isExternal: true
  name: WriteAsync(Byte[], Int32, Int32, Threading.CancellationToken)
  fullName: System.IO.Pipes.PipeStream.WriteAsync(System.Byte[], System.Int32, System.Int32, System.Threading.CancellationToken)
  fullname.vb: System.IO.Pipes.PipeStream.WriteAsync(System.Byte(), System.Int32, System.Int32, System.Threading.CancellationToken)
  name.vb: WriteAsync(Byte(), Int32, Int32, Threading.CancellationToken)
  spec.csharp:
  - uid: System.IO.Pipes.PipeStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)
    name: WriteAsync
    fullName: System.IO.Pipes.PipeStream.WriteAsync
  - name: (
    fullName: (
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    fullName: '[]'
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: Threading.CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IO.Pipes.PipeStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)
    name: WriteAsync
    fullName: System.IO.Pipes.PipeStream.WriteAsync
  - name: (
    fullName: (
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    fullName: ()
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: Threading.CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.IO.Pipes.PipeDirection
  parent: System.IO.Pipes
  isExternal: false
  name: PipeDirection
  fullName: System.IO.Pipes.PipeDirection
- uid: Microsoft.Win32.SafeHandles.SafePipeHandle
  parent: Microsoft.Win32.SafeHandles
  isExternal: false
  name: SafePipeHandle
  fullName: Microsoft.Win32.SafeHandles.SafePipeHandle
- uid: Microsoft.Win32.SafeHandles
  isExternal: false
  name: Microsoft.Win32.SafeHandles
  fullName: Microsoft.Win32.SafeHandles
- uid: System.IO.HandleInheritability
  parent: System.IO
  isExternal: false
  name: HandleInheritability
  fullName: System.IO.HandleInheritability
- uid: System.IO
  isExternal: false
  name: System.IO
  fullName: System.IO
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  fullName: System.Int32
- uid: System.IO.Pipes.PipeStream.ReadMode
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: ReadMode
  fullName: System.IO.Pipes.PipeStream.ReadMode
- uid: System.IO.Pipes.PipeTransmissionMode
  parent: System.IO.Pipes
  isExternal: false
  name: PipeTransmissionMode
  fullName: System.IO.Pipes.PipeTransmissionMode
- uid: System.IO.Pipes.PipeStream.TransmissionMode
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: TransmissionMode
  fullName: System.IO.Pipes.PipeStream.TransmissionMode
- uid: System.IO.Pipes.PipeStream.Dispose(System.Boolean)
  parent: System.IO.Pipes.PipeStream
  isExternal: true
  name: Dispose(Boolean)
  fullName: System.IO.Pipes.PipeStream.Dispose(System.Boolean)
  spec.csharp:
  - uid: System.IO.Pipes.PipeStream.Dispose(System.Boolean)
    name: Dispose
    fullName: System.IO.Pipes.PipeStream.Dispose
  - name: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IO.Pipes.PipeStream.Dispose(System.Boolean)
    name: Dispose
    fullName: System.IO.Pipes.PipeStream.Dispose
  - name: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  fullName: System.Boolean
- uid: System.String
  parent: System
  isExternal: false
  name: String
  fullName: System.String
- uid: System.NotSupportedException
  parent: System
  isExternal: false
  name: NotSupportedException
  fullName: System.NotSupportedException
- uid: System.ArgumentException
  parent: System
  isExternal: false
  name: ArgumentException
  fullName: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: false
  name: ArgumentNullException
  fullName: System.ArgumentNullException
- uid: System.IO.IOException
  parent: System.IO
  isExternal: false
  name: IOException
  fullName: System.IO.IOException
- uid: System.ArgumentOutOfRangeException
  isExternal: false
  name: ArgumentOutOfRangeException
  fullName: System.ArgumentOutOfRangeException
- uid: System.ObjectDisposedException
  isExternal: false
  name: ObjectDisposedException
  fullName: System.ObjectDisposedException
