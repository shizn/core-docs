items:
- uid: System.Threading.SynchronizationLockException
  commentId: T:System.Threading.SynchronizationLockException
  id: SynchronizationLockException
  parent: System.Threading
  children:
  - System.Threading.SynchronizationLockException.#ctor
  - System.Threading.SynchronizationLockException.#ctor(System.String)
  - System.Threading.SynchronizationLockException.#ctor(System.String,System.Exception)
  langs:
  - csharp
  - vb
  name: SynchronizationLockException
  fullName: System.Threading.SynchronizationLockException
  type: Class
  source:
    remote:
      path: src/mscorlib/src/System/Threading/SynchronizationLockException.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: SynchronizationLockException
    path: src/mscorlib/src/System/Threading/SynchronizationLockException.cs
    startLine: 19
  assemblies:
  - System.Threading
  namespace: System.Threading
  summary: The exception that is thrown when a method requires the caller to own the lock on a given Monitor, and the method is invoked by a caller that does not own that lock.
  syntax:
    content: 'public class SynchronizationLockException : Exception'
    content.vb: >-
      Public Class SynchronizationLockException
          Inherits Exception
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: System.Threading.SynchronizationLockException.#ctor
  commentId: M:System.Threading.SynchronizationLockException.#ctor
  id: '#ctor'
  parent: System.Threading.SynchronizationLockException
  langs:
  - csharp
  - vb
  name: SynchronizationLockException()
  fullName: System.Threading.SynchronizationLockException.SynchronizationLockException()
  type: Constructor
  source:
    remote:
      path: src/mscorlib/src/System/Threading/SynchronizationLockException.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: .ctor
    path: src/mscorlib/src/System/Threading/SynchronizationLockException.cs
    startLine: 22
  assemblies:
  - System.Threading
  namespace: System.Threading
  summary: Initializes a new instance of the <xref href="System.Threading.SynchronizationLockException" data-throw-if-not-resolved="false"></xref> class with default properties.
  syntax:
    content: public SynchronizationLockException()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Threading.SynchronizationLockException.#ctor(System.String)
  commentId: M:System.Threading.SynchronizationLockException.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Threading.SynchronizationLockException
  langs:
  - csharp
  - vb
  name: SynchronizationLockException(String)
  fullName: System.Threading.SynchronizationLockException.SynchronizationLockException(System.String)
  type: Constructor
  source:
    remote:
      path: src/mscorlib/src/System/Threading/SynchronizationLockException.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: .ctor
    path: src/mscorlib/src/System/Threading/SynchronizationLockException.cs
    startLine: 27
  assemblies:
  - System.Threading
  namespace: System.Threading
  summary: Initializes a new instance of the <xref href="System.Threading.SynchronizationLockException" data-throw-if-not-resolved="false"></xref> class with a specified error message.
  syntax:
    content: public SynchronizationLockException(string message)
    content.vb: Public Sub New(message As String)
    parameters:
    - id: message
      type: System.String
      description: 'The error message that explains the reason for the exception. '
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Threading.SynchronizationLockException.#ctor(System.String,System.Exception)
  commentId: M:System.Threading.SynchronizationLockException.#ctor(System.String,System.Exception)
  id: '#ctor(System.String,System.Exception)'
  parent: System.Threading.SynchronizationLockException
  langs:
  - csharp
  - vb
  name: SynchronizationLockException(String, Exception)
  fullName: System.Threading.SynchronizationLockException.SynchronizationLockException(System.String, System.Exception)
  type: Constructor
  source:
    remote:
      path: src/mscorlib/src/System/Threading/SynchronizationLockException.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: .ctor
    path: src/mscorlib/src/System/Threading/SynchronizationLockException.cs
    startLine: 32
  assemblies:
  - System.Threading
  namespace: System.Threading
  summary: Initializes a new instance of the <xref href="System.Threading.SynchronizationLockException" data-throw-if-not-resolved="false"></xref> class with a specified error message and a reference to the inner exception that is the cause of this exception.
  syntax:
    content: public SynchronizationLockException(string message, Exception innerException)
    content.vb: Public Sub New(message As String, innerException As Exception)
    parameters:
    - id: message
      type: System.String
      description: 'The error message that explains the reason for the exception. '
    - id: innerException
      type: System.Exception
      description: 'The exception that is the cause of the current exception. If the <em>innerException</em> parameter is not null, the current exception is raised in a catch block that handles the inner exception. '
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: System.Threading
  isExternal: false
  name: System.Threading
  fullName: System.Threading
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.String
  parent: System
  isExternal: false
  name: String
  fullName: System.String
- uid: System.Exception
  parent: System
  isExternal: false
  name: Exception
  fullName: System.Exception
