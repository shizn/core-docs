items:
- uid: System.Diagnostics.FileVersionInfo
  commentId: T:System.Diagnostics.FileVersionInfo
  id: FileVersionInfo
  parent: System.Diagnostics
  children:
  - System.Diagnostics.FileVersionInfo.Comments
  - System.Diagnostics.FileVersionInfo.CompanyName
  - System.Diagnostics.FileVersionInfo.FileBuildPart
  - System.Diagnostics.FileVersionInfo.FileDescription
  - System.Diagnostics.FileVersionInfo.FileMajorPart
  - System.Diagnostics.FileVersionInfo.FileMinorPart
  - System.Diagnostics.FileVersionInfo.FileName
  - System.Diagnostics.FileVersionInfo.FilePrivatePart
  - System.Diagnostics.FileVersionInfo.FileVersion
  - System.Diagnostics.FileVersionInfo.GetVersionInfo(System.String)
  - System.Diagnostics.FileVersionInfo.InternalName
  - System.Diagnostics.FileVersionInfo.IsDebug
  - System.Diagnostics.FileVersionInfo.IsPatched
  - System.Diagnostics.FileVersionInfo.IsPreRelease
  - System.Diagnostics.FileVersionInfo.IsPrivateBuild
  - System.Diagnostics.FileVersionInfo.IsSpecialBuild
  - System.Diagnostics.FileVersionInfo.Language
  - System.Diagnostics.FileVersionInfo.LegalCopyright
  - System.Diagnostics.FileVersionInfo.LegalTrademarks
  - System.Diagnostics.FileVersionInfo.OriginalFilename
  - System.Diagnostics.FileVersionInfo.PrivateBuild
  - System.Diagnostics.FileVersionInfo.ProductBuildPart
  - System.Diagnostics.FileVersionInfo.ProductMajorPart
  - System.Diagnostics.FileVersionInfo.ProductMinorPart
  - System.Diagnostics.FileVersionInfo.ProductName
  - System.Diagnostics.FileVersionInfo.ProductPrivatePart
  - System.Diagnostics.FileVersionInfo.ProductVersion
  - System.Diagnostics.FileVersionInfo.SpecialBuild
  - System.Diagnostics.FileVersionInfo.ToString
  langs:
  - csharp
  - vb
  name: FileVersionInfo
  fullName: System.Diagnostics.FileVersionInfo
  type: Class
  source:
    remote:
      path: src/System.Diagnostics.FileVersionInfo/src/System/Diagnostics/FileVersionInfo.Windows.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: FileVersionInfo
    path: src/System.Diagnostics.FileVersionInfo/src/System/Diagnostics/FileVersionInfo.Windows.cs
    startLine: 10
  assemblies:
  - System.Diagnostics.FileVersionInfo
  namespace: System.Diagnostics
  summary: Provides version information for a physical file on disk.
  syntax:
    content: 'public sealed class FileVersionInfo : object'
    content.vb: >-
      Public NotInheritable Class FileVersionInfo
          Inherits Object
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: System.Diagnostics.FileVersionInfo.Comments
  commentId: P:System.Diagnostics.FileVersionInfo.Comments
  id: Comments
  parent: System.Diagnostics.FileVersionInfo
  langs:
  - csharp
  - vb
  name: Comments
  fullName: System.Diagnostics.FileVersionInfo.Comments
  type: Property
  source:
    remote:
      path: src/System.Diagnostics.FileVersionInfo/src/System/Diagnostics/FileVersionInfo.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Comments
    path: src/System.Diagnostics.FileVersionInfo/src/System/Diagnostics/FileVersionInfo.cs
    startLine: 46
  assemblies:
  - System.Diagnostics.FileVersionInfo
  namespace: System.Diagnostics
  summary: Gets the comments associated with the file.
  syntax:
    content: public string Comments { get; }
    content.vb: Public ReadOnly Property Comments As String
    parameters: []
    return:
      type: System.String
      description: The comments associated with the file or null if the file did not contain version information.
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Diagnostics.FileVersionInfo.CompanyName
  commentId: P:System.Diagnostics.FileVersionInfo.CompanyName
  id: CompanyName
  parent: System.Diagnostics.FileVersionInfo
  langs:
  - csharp
  - vb
  name: CompanyName
  fullName: System.Diagnostics.FileVersionInfo.CompanyName
  type: Property
  source:
    remote:
      path: src/System.Diagnostics.FileVersionInfo/src/System/Diagnostics/FileVersionInfo.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CompanyName
    path: src/System.Diagnostics.FileVersionInfo/src/System/Diagnostics/FileVersionInfo.cs
    startLine: 54
  assemblies:
  - System.Diagnostics.FileVersionInfo
  namespace: System.Diagnostics
  summary: Gets the name of the company that produced the file.
  syntax:
    content: public string CompanyName { get; }
    content.vb: Public ReadOnly Property CompanyName As String
    parameters: []
    return:
      type: System.String
      description: The name of the company that produced the file or null if the file did not contain version information.
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Diagnostics.FileVersionInfo.FileBuildPart
  commentId: P:System.Diagnostics.FileVersionInfo.FileBuildPart
  id: FileBuildPart
  parent: System.Diagnostics.FileVersionInfo
  langs:
  - csharp
  - vb
  name: FileBuildPart
  fullName: System.Diagnostics.FileVersionInfo.FileBuildPart
  type: Property
  source:
    remote:
      path: src/System.Diagnostics.FileVersionInfo/src/System/Diagnostics/FileVersionInfo.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: FileBuildPart
    path: src/System.Diagnostics.FileVersionInfo/src/System/Diagnostics/FileVersionInfo.cs
    startLine: 62
  assemblies:
  - System.Diagnostics.FileVersionInfo
  namespace: System.Diagnostics
  summary: Gets the build number of the file.
  syntax:
    content: public int FileBuildPart { get; }
    content.vb: Public ReadOnly Property FileBuildPart As Integer
    parameters: []
    return:
      type: System.Int32
      description: A value representing the build number of the file or null if the file did not contain version information.
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Diagnostics.FileVersionInfo.FileDescription
  commentId: P:System.Diagnostics.FileVersionInfo.FileDescription
  id: FileDescription
  parent: System.Diagnostics.FileVersionInfo
  langs:
  - csharp
  - vb
  name: FileDescription
  fullName: System.Diagnostics.FileVersionInfo.FileDescription
  type: Property
  source:
    remote:
      path: src/System.Diagnostics.FileVersionInfo/src/System/Diagnostics/FileVersionInfo.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: FileDescription
    path: src/System.Diagnostics.FileVersionInfo/src/System/Diagnostics/FileVersionInfo.cs
    startLine: 70
  assemblies:
  - System.Diagnostics.FileVersionInfo
  namespace: System.Diagnostics
  summary: Gets the description of the file.
  syntax:
    content: public string FileDescription { get; }
    content.vb: Public ReadOnly Property FileDescription As String
    parameters: []
    return:
      type: System.String
      description: The description of the file or null if the file did not contain version information.
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Diagnostics.FileVersionInfo.FileMajorPart
  commentId: P:System.Diagnostics.FileVersionInfo.FileMajorPart
  id: FileMajorPart
  parent: System.Diagnostics.FileVersionInfo
  langs:
  - csharp
  - vb
  name: FileMajorPart
  fullName: System.Diagnostics.FileVersionInfo.FileMajorPart
  type: Property
  source:
    remote:
      path: src/System.Diagnostics.FileVersionInfo/src/System/Diagnostics/FileVersionInfo.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: FileMajorPart
    path: src/System.Diagnostics.FileVersionInfo/src/System/Diagnostics/FileVersionInfo.cs
    startLine: 78
  assemblies:
  - System.Diagnostics.FileVersionInfo
  namespace: System.Diagnostics
  summary: Gets the major part of the version number.
  syntax:
    content: public int FileMajorPart { get; }
    content.vb: Public ReadOnly Property FileMajorPart As Integer
    parameters: []
    return:
      type: System.Int32
      description: A value representing the major part of the version number or 0 (zero) if the file did not contain version information.
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Diagnostics.FileVersionInfo.FileMinorPart
  commentId: P:System.Diagnostics.FileVersionInfo.FileMinorPart
  id: FileMinorPart
  parent: System.Diagnostics.FileVersionInfo
  langs:
  - csharp
  - vb
  name: FileMinorPart
  fullName: System.Diagnostics.FileVersionInfo.FileMinorPart
  type: Property
  source:
    remote:
      path: src/System.Diagnostics.FileVersionInfo/src/System/Diagnostics/FileVersionInfo.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: FileMinorPart
    path: src/System.Diagnostics.FileVersionInfo/src/System/Diagnostics/FileVersionInfo.cs
    startLine: 86
  assemblies:
  - System.Diagnostics.FileVersionInfo
  namespace: System.Diagnostics
  summary: Gets the minor part of the version number of the file.
  syntax:
    content: public int FileMinorPart { get; }
    content.vb: Public ReadOnly Property FileMinorPart As Integer
    parameters: []
    return:
      type: System.Int32
      description: A value representing the minor part of the version number of the file or 0 (zero) if the file did not contain version information.
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Diagnostics.FileVersionInfo.FileName
  commentId: P:System.Diagnostics.FileVersionInfo.FileName
  id: FileName
  parent: System.Diagnostics.FileVersionInfo
  langs:
  - csharp
  - vb
  name: FileName
  fullName: System.Diagnostics.FileVersionInfo.FileName
  type: Property
  source:
    remote:
      path: src/System.Diagnostics.FileVersionInfo/src/System/Diagnostics/FileVersionInfo.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: FileName
    path: src/System.Diagnostics.FileVersionInfo/src/System/Diagnostics/FileVersionInfo.cs
    startLine: 94
  assemblies:
  - System.Diagnostics.FileVersionInfo
  namespace: System.Diagnostics
  summary: Gets the name of the file that this instance of <xref href="System.Diagnostics.FileVersionInfo" data-throw-if-not-resolved="false"></xref> describes.
  syntax:
    content: public string FileName { get; }
    content.vb: Public ReadOnly Property FileName As String
    parameters: []
    return:
      type: System.String
      description: The name of the file described by this instance of <xref href="System.Diagnostics.FileVersionInfo" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Diagnostics.FileVersionInfo.FilePrivatePart
  commentId: P:System.Diagnostics.FileVersionInfo.FilePrivatePart
  id: FilePrivatePart
  parent: System.Diagnostics.FileVersionInfo
  langs:
  - csharp
  - vb
  name: FilePrivatePart
  fullName: System.Diagnostics.FileVersionInfo.FilePrivatePart
  type: Property
  source:
    remote:
      path: src/System.Diagnostics.FileVersionInfo/src/System/Diagnostics/FileVersionInfo.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: FilePrivatePart
    path: src/System.Diagnostics.FileVersionInfo/src/System/Diagnostics/FileVersionInfo.cs
    startLine: 102
  assemblies:
  - System.Diagnostics.FileVersionInfo
  namespace: System.Diagnostics
  summary: Gets the file private part number.
  syntax:
    content: public int FilePrivatePart { get; }
    content.vb: Public ReadOnly Property FilePrivatePart As Integer
    parameters: []
    return:
      type: System.Int32
      description: A value representing the file private part number or null if the file did not contain version information.
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Diagnostics.FileVersionInfo.FileVersion
  commentId: P:System.Diagnostics.FileVersionInfo.FileVersion
  id: FileVersion
  parent: System.Diagnostics.FileVersionInfo
  langs:
  - csharp
  - vb
  name: FileVersion
  fullName: System.Diagnostics.FileVersionInfo.FileVersion
  type: Property
  source:
    remote:
      path: src/System.Diagnostics.FileVersionInfo/src/System/Diagnostics/FileVersionInfo.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: FileVersion
    path: src/System.Diagnostics.FileVersionInfo/src/System/Diagnostics/FileVersionInfo.cs
    startLine: 110
  assemblies:
  - System.Diagnostics.FileVersionInfo
  namespace: System.Diagnostics
  summary: Gets the file version number.
  syntax:
    content: public string FileVersion { get; }
    content.vb: Public ReadOnly Property FileVersion As String
    parameters: []
    return:
      type: System.String
      description: The version number of the file or null if the file did not contain version information.
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Diagnostics.FileVersionInfo.InternalName
  commentId: P:System.Diagnostics.FileVersionInfo.InternalName
  id: InternalName
  parent: System.Diagnostics.FileVersionInfo
  langs:
  - csharp
  - vb
  name: InternalName
  fullName: System.Diagnostics.FileVersionInfo.InternalName
  type: Property
  source:
    remote:
      path: src/System.Diagnostics.FileVersionInfo/src/System/Diagnostics/FileVersionInfo.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: InternalName
    path: src/System.Diagnostics.FileVersionInfo/src/System/Diagnostics/FileVersionInfo.cs
    startLine: 118
  assemblies:
  - System.Diagnostics.FileVersionInfo
  namespace: System.Diagnostics
  summary: Gets the internal name of the file, if one exists.
  syntax:
    content: public string InternalName { get; }
    content.vb: Public ReadOnly Property InternalName As String
    parameters: []
    return:
      type: System.String
      description: The internal name of the file. If none exists, this property will contain the original name of the file without the extension.
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Diagnostics.FileVersionInfo.IsDebug
  commentId: P:System.Diagnostics.FileVersionInfo.IsDebug
  id: IsDebug
  parent: System.Diagnostics.FileVersionInfo
  langs:
  - csharp
  - vb
  name: IsDebug
  fullName: System.Diagnostics.FileVersionInfo.IsDebug
  type: Property
  source:
    remote:
      path: src/System.Diagnostics.FileVersionInfo/src/System/Diagnostics/FileVersionInfo.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IsDebug
    path: src/System.Diagnostics.FileVersionInfo/src/System/Diagnostics/FileVersionInfo.cs
    startLine: 127
  assemblies:
  - System.Diagnostics.FileVersionInfo
  namespace: System.Diagnostics
  summary: Gets a value that specifies whether the file contains debugging information or is compiled with debugging features enabled.
  syntax:
    content: public bool IsDebug { get; }
    content.vb: Public ReadOnly Property IsDebug As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: true if the file contains debugging information or is compiled with debugging features enabled; otherwise, false.
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Diagnostics.FileVersionInfo.IsPatched
  commentId: P:System.Diagnostics.FileVersionInfo.IsPatched
  id: IsPatched
  parent: System.Diagnostics.FileVersionInfo
  langs:
  - csharp
  - vb
  name: IsPatched
  fullName: System.Diagnostics.FileVersionInfo.IsPatched
  type: Property
  source:
    remote:
      path: src/System.Diagnostics.FileVersionInfo/src/System/Diagnostics/FileVersionInfo.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IsPatched
    path: src/System.Diagnostics.FileVersionInfo/src/System/Diagnostics/FileVersionInfo.cs
    startLine: 136
  assemblies:
  - System.Diagnostics.FileVersionInfo
  namespace: System.Diagnostics
  summary: Gets a value that specifies whether the file has been modified and is not identical to the original shipping file of the same version number.
  syntax:
    content: public bool IsPatched { get; }
    content.vb: Public ReadOnly Property IsPatched As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: true if the file is patched; otherwise, false.
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Diagnostics.FileVersionInfo.IsPreRelease
  commentId: P:System.Diagnostics.FileVersionInfo.IsPreRelease
  id: IsPreRelease
  parent: System.Diagnostics.FileVersionInfo
  langs:
  - csharp
  - vb
  name: IsPreRelease
  fullName: System.Diagnostics.FileVersionInfo.IsPreRelease
  type: Property
  source:
    remote:
      path: src/System.Diagnostics.FileVersionInfo/src/System/Diagnostics/FileVersionInfo.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IsPreRelease
    path: src/System.Diagnostics.FileVersionInfo/src/System/Diagnostics/FileVersionInfo.cs
    startLine: 153
  assemblies:
  - System.Diagnostics.FileVersionInfo
  namespace: System.Diagnostics
  summary: Gets a value that specifies whether the file is a development version, rather than a commercially released product.
  syntax:
    content: public bool IsPreRelease { get; }
    content.vb: Public ReadOnly Property IsPreRelease As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: true if the file is prerelease; otherwise, false.
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Diagnostics.FileVersionInfo.IsPrivateBuild
  commentId: P:System.Diagnostics.FileVersionInfo.IsPrivateBuild
  id: IsPrivateBuild
  parent: System.Diagnostics.FileVersionInfo
  langs:
  - csharp
  - vb
  name: IsPrivateBuild
  fullName: System.Diagnostics.FileVersionInfo.IsPrivateBuild
  type: Property
  source:
    remote:
      path: src/System.Diagnostics.FileVersionInfo/src/System/Diagnostics/FileVersionInfo.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IsPrivateBuild
    path: src/System.Diagnostics.FileVersionInfo/src/System/Diagnostics/FileVersionInfo.cs
    startLine: 144
  assemblies:
  - System.Diagnostics.FileVersionInfo
  namespace: System.Diagnostics
  summary: Gets a value that specifies whether the file was built using standard release procedures.
  syntax:
    content: public bool IsPrivateBuild { get; }
    content.vb: Public ReadOnly Property IsPrivateBuild As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: true if the file is a private build; false if the file was built using standard release procedures or if the file did not contain version information.
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Diagnostics.FileVersionInfo.IsSpecialBuild
  commentId: P:System.Diagnostics.FileVersionInfo.IsSpecialBuild
  id: IsSpecialBuild
  parent: System.Diagnostics.FileVersionInfo
  langs:
  - csharp
  - vb
  name: IsSpecialBuild
  fullName: System.Diagnostics.FileVersionInfo.IsSpecialBuild
  type: Property
  source:
    remote:
      path: src/System.Diagnostics.FileVersionInfo/src/System/Diagnostics/FileVersionInfo.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IsSpecialBuild
    path: src/System.Diagnostics.FileVersionInfo/src/System/Diagnostics/FileVersionInfo.cs
    startLine: 161
  assemblies:
  - System.Diagnostics.FileVersionInfo
  namespace: System.Diagnostics
  summary: Gets a value that specifies whether the file is a special build.
  syntax:
    content: public bool IsSpecialBuild { get; }
    content.vb: Public ReadOnly Property IsSpecialBuild As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: true if the file is a special build; otherwise, false.
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Diagnostics.FileVersionInfo.Language
  commentId: P:System.Diagnostics.FileVersionInfo.Language
  id: Language
  parent: System.Diagnostics.FileVersionInfo
  langs:
  - csharp
  - vb
  name: Language
  fullName: System.Diagnostics.FileVersionInfo.Language
  type: Property
  source:
    remote:
      path: src/System.Diagnostics.FileVersionInfo/src/System/Diagnostics/FileVersionInfo.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Language
    path: src/System.Diagnostics.FileVersionInfo/src/System/Diagnostics/FileVersionInfo.cs
    startLine: 169
  assemblies:
  - System.Diagnostics.FileVersionInfo
  namespace: System.Diagnostics
  summary: Gets the default language string for the version info block.
  syntax:
    content: public string Language { get; }
    content.vb: Public ReadOnly Property Language As String
    parameters: []
    return:
      type: System.String
      description: The description string for the Microsoft Language Identifier in the version resource or null if the file did not contain version information.
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Diagnostics.FileVersionInfo.LegalCopyright
  commentId: P:System.Diagnostics.FileVersionInfo.LegalCopyright
  id: LegalCopyright
  parent: System.Diagnostics.FileVersionInfo
  langs:
  - csharp
  - vb
  name: LegalCopyright
  fullName: System.Diagnostics.FileVersionInfo.LegalCopyright
  type: Property
  source:
    remote:
      path: src/System.Diagnostics.FileVersionInfo/src/System/Diagnostics/FileVersionInfo.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: LegalCopyright
    path: src/System.Diagnostics.FileVersionInfo/src/System/Diagnostics/FileVersionInfo.cs
    startLine: 177
  assemblies:
  - System.Diagnostics.FileVersionInfo
  namespace: System.Diagnostics
  summary: Gets all copyright notices that apply to the specified file.
  syntax:
    content: public string LegalCopyright { get; }
    content.vb: Public ReadOnly Property LegalCopyright As String
    parameters: []
    return:
      type: System.String
      description: The copyright notices that apply to the specified file.
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Diagnostics.FileVersionInfo.LegalTrademarks
  commentId: P:System.Diagnostics.FileVersionInfo.LegalTrademarks
  id: LegalTrademarks
  parent: System.Diagnostics.FileVersionInfo
  langs:
  - csharp
  - vb
  name: LegalTrademarks
  fullName: System.Diagnostics.FileVersionInfo.LegalTrademarks
  type: Property
  source:
    remote:
      path: src/System.Diagnostics.FileVersionInfo/src/System/Diagnostics/FileVersionInfo.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: LegalTrademarks
    path: src/System.Diagnostics.FileVersionInfo/src/System/Diagnostics/FileVersionInfo.cs
    startLine: 185
  assemblies:
  - System.Diagnostics.FileVersionInfo
  namespace: System.Diagnostics
  summary: Gets the trademarks and registered trademarks that apply to the file.
  syntax:
    content: public string LegalTrademarks { get; }
    content.vb: Public ReadOnly Property LegalTrademarks As String
    parameters: []
    return:
      type: System.String
      description: The trademarks and registered trademarks that apply to the file or null if the file did not contain version information.
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Diagnostics.FileVersionInfo.OriginalFilename
  commentId: P:System.Diagnostics.FileVersionInfo.OriginalFilename
  id: OriginalFilename
  parent: System.Diagnostics.FileVersionInfo
  langs:
  - csharp
  - vb
  name: OriginalFilename
  fullName: System.Diagnostics.FileVersionInfo.OriginalFilename
  type: Property
  source:
    remote:
      path: src/System.Diagnostics.FileVersionInfo/src/System/Diagnostics/FileVersionInfo.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: OriginalFilename
    path: src/System.Diagnostics.FileVersionInfo/src/System/Diagnostics/FileVersionInfo.cs
    startLine: 193
  assemblies:
  - System.Diagnostics.FileVersionInfo
  namespace: System.Diagnostics
  summary: Gets the name the file was created with.
  syntax:
    content: public string OriginalFilename { get; }
    content.vb: Public ReadOnly Property OriginalFilename As String
    parameters: []
    return:
      type: System.String
      description: The name the file was created with or null if the file did not contain version information.
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Diagnostics.FileVersionInfo.PrivateBuild
  commentId: P:System.Diagnostics.FileVersionInfo.PrivateBuild
  id: PrivateBuild
  parent: System.Diagnostics.FileVersionInfo
  langs:
  - csharp
  - vb
  name: PrivateBuild
  fullName: System.Diagnostics.FileVersionInfo.PrivateBuild
  type: Property
  source:
    remote:
      path: src/System.Diagnostics.FileVersionInfo/src/System/Diagnostics/FileVersionInfo.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: PrivateBuild
    path: src/System.Diagnostics.FileVersionInfo/src/System/Diagnostics/FileVersionInfo.cs
    startLine: 201
  assemblies:
  - System.Diagnostics.FileVersionInfo
  namespace: System.Diagnostics
  summary: Gets information about a private version of the file.
  syntax:
    content: public string PrivateBuild { get; }
    content.vb: Public ReadOnly Property PrivateBuild As String
    parameters: []
    return:
      type: System.String
      description: Information about a private version of the file or null if the file did not contain version information.
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Diagnostics.FileVersionInfo.ProductBuildPart
  commentId: P:System.Diagnostics.FileVersionInfo.ProductBuildPart
  id: ProductBuildPart
  parent: System.Diagnostics.FileVersionInfo
  langs:
  - csharp
  - vb
  name: ProductBuildPart
  fullName: System.Diagnostics.FileVersionInfo.ProductBuildPart
  type: Property
  source:
    remote:
      path: src/System.Diagnostics.FileVersionInfo/src/System/Diagnostics/FileVersionInfo.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ProductBuildPart
    path: src/System.Diagnostics.FileVersionInfo/src/System/Diagnostics/FileVersionInfo.cs
    startLine: 209
  assemblies:
  - System.Diagnostics.FileVersionInfo
  namespace: System.Diagnostics
  summary: Gets the build number of the product this file is associated with.
  syntax:
    content: public int ProductBuildPart { get; }
    content.vb: Public ReadOnly Property ProductBuildPart As Integer
    parameters: []
    return:
      type: System.Int32
      description: A value representing the build number of the product this file is associated with or null if the file did not contain version information.
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Diagnostics.FileVersionInfo.ProductMajorPart
  commentId: P:System.Diagnostics.FileVersionInfo.ProductMajorPart
  id: ProductMajorPart
  parent: System.Diagnostics.FileVersionInfo
  langs:
  - csharp
  - vb
  name: ProductMajorPart
  fullName: System.Diagnostics.FileVersionInfo.ProductMajorPart
  type: Property
  source:
    remote:
      path: src/System.Diagnostics.FileVersionInfo/src/System/Diagnostics/FileVersionInfo.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ProductMajorPart
    path: src/System.Diagnostics.FileVersionInfo/src/System/Diagnostics/FileVersionInfo.cs
    startLine: 217
  assemblies:
  - System.Diagnostics.FileVersionInfo
  namespace: System.Diagnostics
  summary: Gets the major part of the version number for the product this file is associated with.
  syntax:
    content: public int ProductMajorPart { get; }
    content.vb: Public ReadOnly Property ProductMajorPart As Integer
    parameters: []
    return:
      type: System.Int32
      description: A value representing the major part of the product version number or null if the file did not contain version information.
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Diagnostics.FileVersionInfo.ProductMinorPart
  commentId: P:System.Diagnostics.FileVersionInfo.ProductMinorPart
  id: ProductMinorPart
  parent: System.Diagnostics.FileVersionInfo
  langs:
  - csharp
  - vb
  name: ProductMinorPart
  fullName: System.Diagnostics.FileVersionInfo.ProductMinorPart
  type: Property
  source:
    remote:
      path: src/System.Diagnostics.FileVersionInfo/src/System/Diagnostics/FileVersionInfo.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ProductMinorPart
    path: src/System.Diagnostics.FileVersionInfo/src/System/Diagnostics/FileVersionInfo.cs
    startLine: 225
  assemblies:
  - System.Diagnostics.FileVersionInfo
  namespace: System.Diagnostics
  summary: Gets the minor part of the version number for the product the file is associated with.
  syntax:
    content: public int ProductMinorPart { get; }
    content.vb: Public ReadOnly Property ProductMinorPart As Integer
    parameters: []
    return:
      type: System.Int32
      description: A value representing the minor part of the product version number or null if the file did not contain version information.
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Diagnostics.FileVersionInfo.ProductName
  commentId: P:System.Diagnostics.FileVersionInfo.ProductName
  id: ProductName
  parent: System.Diagnostics.FileVersionInfo
  langs:
  - csharp
  - vb
  name: ProductName
  fullName: System.Diagnostics.FileVersionInfo.ProductName
  type: Property
  source:
    remote:
      path: src/System.Diagnostics.FileVersionInfo/src/System/Diagnostics/FileVersionInfo.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ProductName
    path: src/System.Diagnostics.FileVersionInfo/src/System/Diagnostics/FileVersionInfo.cs
    startLine: 233
  assemblies:
  - System.Diagnostics.FileVersionInfo
  namespace: System.Diagnostics
  summary: Gets the name of the product this file is distributed with.
  syntax:
    content: public string ProductName { get; }
    content.vb: Public ReadOnly Property ProductName As String
    parameters: []
    return:
      type: System.String
      description: The name of the product this file is distributed with or null if the file did not contain version information.
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Diagnostics.FileVersionInfo.ProductPrivatePart
  commentId: P:System.Diagnostics.FileVersionInfo.ProductPrivatePart
  id: ProductPrivatePart
  parent: System.Diagnostics.FileVersionInfo
  langs:
  - csharp
  - vb
  name: ProductPrivatePart
  fullName: System.Diagnostics.FileVersionInfo.ProductPrivatePart
  type: Property
  source:
    remote:
      path: src/System.Diagnostics.FileVersionInfo/src/System/Diagnostics/FileVersionInfo.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ProductPrivatePart
    path: src/System.Diagnostics.FileVersionInfo/src/System/Diagnostics/FileVersionInfo.cs
    startLine: 241
  assemblies:
  - System.Diagnostics.FileVersionInfo
  namespace: System.Diagnostics
  summary: Gets the private part number of the product this file is associated with.
  syntax:
    content: public int ProductPrivatePart { get; }
    content.vb: Public ReadOnly Property ProductPrivatePart As Integer
    parameters: []
    return:
      type: System.Int32
      description: A value representing the private part number of the product this file is associated with or null if the file did not contain version information.
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Diagnostics.FileVersionInfo.ProductVersion
  commentId: P:System.Diagnostics.FileVersionInfo.ProductVersion
  id: ProductVersion
  parent: System.Diagnostics.FileVersionInfo
  langs:
  - csharp
  - vb
  name: ProductVersion
  fullName: System.Diagnostics.FileVersionInfo.ProductVersion
  type: Property
  source:
    remote:
      path: src/System.Diagnostics.FileVersionInfo/src/System/Diagnostics/FileVersionInfo.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ProductVersion
    path: src/System.Diagnostics.FileVersionInfo/src/System/Diagnostics/FileVersionInfo.cs
    startLine: 249
  assemblies:
  - System.Diagnostics.FileVersionInfo
  namespace: System.Diagnostics
  summary: Gets the version of the product this file is distributed with.
  syntax:
    content: public string ProductVersion { get; }
    content.vb: Public ReadOnly Property ProductVersion As String
    parameters: []
    return:
      type: System.String
      description: The version of the product this file is distributed with or null if the file did not contain version information.
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Diagnostics.FileVersionInfo.SpecialBuild
  commentId: P:System.Diagnostics.FileVersionInfo.SpecialBuild
  id: SpecialBuild
  parent: System.Diagnostics.FileVersionInfo
  langs:
  - csharp
  - vb
  name: SpecialBuild
  fullName: System.Diagnostics.FileVersionInfo.SpecialBuild
  type: Property
  source:
    remote:
      path: src/System.Diagnostics.FileVersionInfo/src/System/Diagnostics/FileVersionInfo.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: SpecialBuild
    path: src/System.Diagnostics.FileVersionInfo/src/System/Diagnostics/FileVersionInfo.cs
    startLine: 257
  assemblies:
  - System.Diagnostics.FileVersionInfo
  namespace: System.Diagnostics
  summary: Gets the special build information for the file.
  syntax:
    content: public string SpecialBuild { get; }
    content.vb: Public ReadOnly Property SpecialBuild As String
    parameters: []
    return:
      type: System.String
      description: The special build information for the file or null if the file did not contain version information.
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Diagnostics.FileVersionInfo.GetVersionInfo(System.String)
  commentId: M:System.Diagnostics.FileVersionInfo.GetVersionInfo(System.String)
  id: GetVersionInfo(System.String)
  parent: System.Diagnostics.FileVersionInfo
  langs:
  - csharp
  - vb
  name: GetVersionInfo(String)
  fullName: System.Diagnostics.FileVersionInfo.GetVersionInfo(System.String)
  type: Method
  source:
    remote:
      path: src/System.Diagnostics.FileVersionInfo/src/System/Diagnostics/FileVersionInfo.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetVersionInfo
    path: src/System.Diagnostics.FileVersionInfo/src/System/Diagnostics/FileVersionInfo.cs
    startLine: 265
  assemblies:
  - System.Diagnostics.FileVersionInfo
  namespace: System.Diagnostics
  summary: Returns a <xref href="System.Diagnostics.FileVersionInfo" data-throw-if-not-resolved="false"></xref> representing the version information associated with the specified file.
  syntax:
    content: public static FileVersionInfo GetVersionInfo(string fileName)
    content.vb: Public Shared Function GetVersionInfo(fileName As String) As FileVersionInfo
    parameters:
    - id: fileName
      type: System.String
      description: 'The fully qualified path and name of the file to retrieve the version information for. '
    return:
      type: System.Diagnostics.FileVersionInfo
      description: A <xref href="System.Diagnostics.FileVersionInfo" data-throw-if-not-resolved="false"></xref> containing information about the file. If the file did not contain version information, the <xref href="System.Diagnostics.FileVersionInfo" data-throw-if-not-resolved="false"></xref> contains only the name of the file requested.
  exceptions:
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: 'The file specified cannot be found. '
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Diagnostics.FileVersionInfo.ToString
  commentId: M:System.Diagnostics.FileVersionInfo.ToString
  id: ToString
  parent: System.Diagnostics.FileVersionInfo
  langs:
  - csharp
  - vb
  name: ToString()
  fullName: System.Diagnostics.FileVersionInfo.ToString()
  type: Method
  source:
    remote:
      path: src/System.Diagnostics.FileVersionInfo/src/System/Diagnostics/FileVersionInfo.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ToString
    path: src/System.Diagnostics.FileVersionInfo/src/System/Diagnostics/FileVersionInfo.cs
    startLine: 280
  assemblies:
  - System.Diagnostics.FileVersionInfo
  namespace: System.Diagnostics
  summary: Returns a partial list of properties in the <xref href="System.Diagnostics.FileVersionInfo" data-throw-if-not-resolved="false"></xref> and their values.
  syntax:
    content: public override string ToString()
    content.vb: Public Overrides Function ToString As String
    return:
      type: System.String
      description: 'A list of the following properties in this class and their values: <xref href="System.Diagnostics.FileVersionInfo.FileName" data-throw-if-not-resolved="false"></xref>, <xref href="System.Diagnostics.FileVersionInfo.InternalName" data-throw-if-not-resolved="false"></xref>, <xref href="System.Diagnostics.FileVersionInfo.OriginalFilename" data-throw-if-not-resolved="false"></xref>, <xref href="System.Diagnostics.FileVersionInfo.FileVersion" data-throw-if-not-resolved="false"></xref>, <xref href="System.Diagnostics.FileVersionInfo.FileDescription" data-throw-if-not-resolved="false"></xref>, <xref href="System.Diagnostics.FileVersionInfo.ProductName" data-throw-if-not-resolved="false"></xref>, <xref href="System.Diagnostics.FileVersionInfo.ProductVersion" data-throw-if-not-resolved="false"></xref>, <xref href="System.Diagnostics.FileVersionInfo.IsDebug" data-throw-if-not-resolved="false"></xref>, <xref href="System.Diagnostics.FileVersionInfo.IsPatched" data-throw-if-not-resolved="false"></xref>, <xref href="System.Diagnostics.FileVersionInfo.IsPreRelease" data-throw-if-not-resolved="false"></xref>, <xref href="System.Diagnostics.FileVersionInfo.IsPrivateBuild" data-throw-if-not-resolved="false"></xref>, <xref href="System.Diagnostics.FileVersionInfo.IsSpecialBuild" data-throw-if-not-resolved="false"></xref>,<xref href="System.Diagnostics.FileVersionInfo.Language" data-throw-if-not-resolved="false"></xref>.If the file did not contain version information, this list will contain only the name of the requested file. Boolean values will be false, and all other entries will be null.'
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: System.Diagnostics
  isExternal: false
  name: System.Diagnostics
  fullName: System.Diagnostics
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.String
  parent: System
  isExternal: false
  name: String
  fullName: System.String
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  fullName: System.Int32
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  fullName: System.Boolean
- uid: System.Diagnostics.FileVersionInfo
  parent: System.Diagnostics
  isExternal: false
  name: FileVersionInfo
  fullName: System.Diagnostics.FileVersionInfo
- uid: System.IO.FileNotFoundException
  isExternal: false
  name: FileNotFoundException
  fullName: System.IO.FileNotFoundException
