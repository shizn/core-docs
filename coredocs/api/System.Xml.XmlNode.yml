items:
- uid: System.Xml.XmlNode
  commentId: T:System.Xml.XmlNode
  id: XmlNode
  parent: System.Xml
  children:
  - System.Xml.XmlNode.AppendChild(System.Xml.XmlNode)
  - System.Xml.XmlNode.Attributes
  - System.Xml.XmlNode.BaseURI
  - System.Xml.XmlNode.ChildNodes
  - System.Xml.XmlNode.CloneNode(System.Boolean)
  - System.Xml.XmlNode.FirstChild
  - System.Xml.XmlNode.GetEnumerator
  - System.Xml.XmlNode.GetNamespaceOfPrefix(System.String)
  - System.Xml.XmlNode.GetPrefixOfNamespace(System.String)
  - System.Xml.XmlNode.HasChildNodes
  - System.Xml.XmlNode.InnerText
  - System.Xml.XmlNode.InnerXml
  - System.Xml.XmlNode.InsertAfter(System.Xml.XmlNode,System.Xml.XmlNode)
  - System.Xml.XmlNode.InsertBefore(System.Xml.XmlNode,System.Xml.XmlNode)
  - System.Xml.XmlNode.IsReadOnly
  - System.Xml.XmlNode.Item(System.String)
  - System.Xml.XmlNode.Item(System.String,System.String)
  - System.Xml.XmlNode.LastChild
  - System.Xml.XmlNode.LocalName
  - System.Xml.XmlNode.Name
  - System.Xml.XmlNode.NamespaceURI
  - System.Xml.XmlNode.NextSibling
  - System.Xml.XmlNode.NodeType
  - System.Xml.XmlNode.Normalize
  - System.Xml.XmlNode.OuterXml
  - System.Xml.XmlNode.OwnerDocument
  - System.Xml.XmlNode.ParentNode
  - System.Xml.XmlNode.Prefix
  - System.Xml.XmlNode.PrependChild(System.Xml.XmlNode)
  - System.Xml.XmlNode.PreviousSibling
  - System.Xml.XmlNode.PreviousText
  - System.Xml.XmlNode.RemoveAll
  - System.Xml.XmlNode.RemoveChild(System.Xml.XmlNode)
  - System.Xml.XmlNode.ReplaceChild(System.Xml.XmlNode,System.Xml.XmlNode)
  - System.Xml.XmlNode.Supports(System.String,System.String)
  - System.Xml.XmlNode.Value
  - System.Xml.XmlNode.WriteContentTo(System.Xml.XmlWriter)
  - System.Xml.XmlNode.WriteTo(System.Xml.XmlWriter)
  langs:
  - csharp
  - vb
  name: XmlNode
  fullName: System.Xml.XmlNode
  type: Class
  source:
    remote:
      path: src/System.Xml.XmlDocument/src/System/Xml/Dom/XmlNode.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: XmlNode
    path: src/System.Xml.XmlDocument/src/System/Xml/Dom/XmlNode.cs
    startLine: 13
  assemblies:
  - System.Xml.XmlDocument
  namespace: System.Xml
  summary: 'Represents a single node in the XML document. '
  syntax:
    content: 'public abstract class XmlNode : Collections.IEnumerable'
    content.vb: >-
      Public MustInherit Class XmlNode
          Inherits Collections.IEnumerable
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: System.Xml.XmlNode.Attributes
  commentId: P:System.Xml.XmlNode.Attributes
  id: Attributes
  parent: System.Xml.XmlNode
  langs:
  - csharp
  - vb
  name: Attributes
  fullName: System.Xml.XmlNode.Attributes
  type: Property
  source:
    remote:
      path: src/System.Xml.XmlDocument/src/System/Xml/Dom/XmlNode.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Attributes
    path: src/System.Xml.XmlDocument/src/System/Xml/Dom/XmlNode.cs
    startLine: 100
  assemblies:
  - System.Xml.XmlDocument
  namespace: System.Xml
  summary: Gets an <xref href="System.Xml.XmlAttributeCollection" data-throw-if-not-resolved="false"></xref> containing the attributes of this node.
  syntax:
    content: public virtual XmlAttributeCollection Attributes { get; }
    content.vb: Public Overridable ReadOnly Property Attributes As XmlAttributeCollection
    parameters: []
    return:
      type: System.Xml.XmlAttributeCollection
      description: An XmlAttributeCollection containing the attributes of the node.If the node is of type XmlNodeType.Element, the attributes of the node are returned. Otherwise, this property returns null.
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: System.Xml.XmlNode.BaseURI
  commentId: P:System.Xml.XmlNode.BaseURI
  id: BaseURI
  parent: System.Xml.XmlNode
  langs:
  - csharp
  - vb
  name: BaseURI
  fullName: System.Xml.XmlNode.BaseURI
  type: Property
  source:
    remote:
      path: src/System.Xml.XmlDocument/src/System/Xml/Dom/XmlNode.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: BaseURI
    path: src/System.Xml.XmlDocument/src/System/Xml/Dom/XmlNode.cs
    startLine: 921
  assemblies:
  - System.Xml.XmlDocument
  namespace: System.Xml
  summary: Gets the base URI of the current node.
  syntax:
    content: public virtual string BaseURI { get; }
    content.vb: Public Overridable ReadOnly Property BaseURI As String
    parameters: []
    return:
      type: System.String
      description: The location from which the node was loaded or String.Empty if the node has no base URI.
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: System.Xml.XmlNode.ChildNodes
  commentId: P:System.Xml.XmlNode.ChildNodes
  id: ChildNodes
  parent: System.Xml.XmlNode
  langs:
  - csharp
  - vb
  name: ChildNodes
  fullName: System.Xml.XmlNode.ChildNodes
  type: Property
  source:
    remote:
      path: src/System.Xml.XmlDocument/src/System/Xml/Dom/XmlNode.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ChildNodes
    path: src/System.Xml.XmlDocument/src/System/Xml/Dom/XmlNode.cs
    startLine: 81
  assemblies:
  - System.Xml.XmlDocument
  namespace: System.Xml
  summary: Gets all the child nodes of the node.
  syntax:
    content: public virtual XmlNodeList ChildNodes { get; }
    content.vb: Public Overridable ReadOnly Property ChildNodes As XmlNodeList
    parameters: []
    return:
      type: System.Xml.XmlNodeList
      description: An object that contains all the child nodes of the node.If there are no child nodes, this property returns an empty <xref href="System.Xml.XmlNodeList" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: System.Xml.XmlNode.FirstChild
  commentId: P:System.Xml.XmlNode.FirstChild
  id: FirstChild
  parent: System.Xml.XmlNode
  langs:
  - csharp
  - vb
  name: FirstChild
  fullName: System.Xml.XmlNode.FirstChild
  type: Property
  source:
    remote:
      path: src/System.Xml.XmlDocument/src/System/Xml/Dom/XmlNode.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: FirstChild
    path: src/System.Xml.XmlDocument/src/System/Xml/Dom/XmlNode.cs
    startLine: 118
  assemblies:
  - System.Xml.XmlDocument
  namespace: System.Xml
  summary: Gets the first child of the node.
  syntax:
    content: public virtual XmlNode FirstChild { get; }
    content.vb: Public Overridable ReadOnly Property FirstChild As XmlNode
    parameters: []
    return:
      type: System.Xml.XmlNode
      description: The first child of the node. If there is no such node, null is returned.
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: System.Xml.XmlNode.HasChildNodes
  commentId: P:System.Xml.XmlNode.HasChildNodes
  id: HasChildNodes
  parent: System.Xml.XmlNode
  langs:
  - csharp
  - vb
  name: HasChildNodes
  fullName: System.Xml.XmlNode.HasChildNodes
  type: Property
  source:
    remote:
      path: src/System.Xml.XmlDocument/src/System/Xml/Dom/XmlNode.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: HasChildNodes
    path: src/System.Xml.XmlDocument/src/System/Xml/Dom/XmlNode.cs
    startLine: 638
  assemblies:
  - System.Xml.XmlDocument
  namespace: System.Xml
  summary: Gets a value indicating whether this node has any child nodes.
  syntax:
    content: public virtual bool HasChildNodes { get; }
    content.vb: Public Overridable ReadOnly Property HasChildNodes As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: true if the node has child nodes; otherwise, false.
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: System.Xml.XmlNode.InnerText
  commentId: P:System.Xml.XmlNode.InnerText
  id: InnerText
  parent: System.Xml.XmlNode
  langs:
  - csharp
  - vb
  name: InnerText
  fullName: System.Xml.XmlNode.InnerText
  type: Property
  source:
    remote:
      path: src/System.Xml.XmlDocument/src/System/Xml/Dom/XmlNode.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: InnerText
    path: src/System.Xml.XmlDocument/src/System/Xml/Dom/XmlNode.cs
    startLine: 834
  assemblies:
  - System.Xml.XmlDocument
  namespace: System.Xml
  summary: Gets or sets the concatenated values of the node and all its child nodes.
  syntax:
    content: public virtual string InnerText { get; set; }
    content.vb: Public Overridable Property InnerText As String
    parameters: []
    return:
      type: System.String
      description: The concatenated values of the node and all its child nodes.
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Xml.XmlNode.InnerXml
  commentId: P:System.Xml.XmlNode.InnerXml
  id: InnerXml
  parent: System.Xml.XmlNode
  langs:
  - csharp
  - vb
  name: InnerXml
  fullName: System.Xml.XmlNode.InnerXml
  type: Property
  source:
    remote:
      path: src/System.Xml.XmlDocument/src/System/Xml/Dom/XmlNode.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: InnerXml
    path: src/System.Xml.XmlDocument/src/System/Xml/Dom/XmlNode.cs
    startLine: 898
  assemblies:
  - System.Xml.XmlDocument
  namespace: System.Xml
  summary: Gets or sets the markup representing only the child nodes of this node.
  syntax:
    content: public virtual string InnerXml { get; set; }
    content.vb: Public Overridable Property InnerXml As String
    parameters: []
    return:
      type: System.String
      description: The markup of the child nodes of this node.NoteInnerXml does not return default attributes.
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: 'Setting this property on a node that cannot have child nodes. '
  - type: System.Xml.XmlException
    commentId: T:System.Xml.XmlException
    description: 'The XML specified when setting this property is not well-formed. '
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Xml.XmlNode.IsReadOnly
  commentId: P:System.Xml.XmlNode.IsReadOnly
  id: IsReadOnly
  parent: System.Xml.XmlNode
  langs:
  - csharp
  - vb
  name: IsReadOnly
  fullName: System.Xml.XmlNode.IsReadOnly
  type: Property
  source:
    remote:
      path: src/System.Xml.XmlDocument/src/System/Xml/Dom/XmlNode.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IsReadOnly
    path: src/System.Xml.XmlDocument/src/System/Xml/Dom/XmlNode.cs
    startLine: 772
  assemblies:
  - System.Xml.XmlDocument
  namespace: System.Xml
  summary: Gets a value indicating whether the node is read-only.
  syntax:
    content: public virtual bool IsReadOnly { get; }
    content.vb: Public Overridable ReadOnly Property IsReadOnly As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: true if the node is read-only; otherwise false.
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: System.Xml.XmlNode.Item(System.String)
  commentId: P:System.Xml.XmlNode.Item(System.String)
  id: Item(System.String)
  parent: System.Xml.XmlNode
  langs:
  - csharp
  - vb
  name: Item[String]
  fullName: System.Xml.XmlNode.Item[System.String]
  type: Property
  source:
    remote:
      path: src/System.Xml.XmlDocument/src/System/Xml/Dom/XmlNode.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: this[]
    path: src/System.Xml.XmlDocument/src/System/Xml/Dom/XmlNode.cs
    startLine: 1141
  assemblies:
  - System.Xml.XmlDocument
  namespace: System.Xml
  summary: Gets the first child element with the specified <xref href="System.Xml.XmlNode.Name" data-throw-if-not-resolved="false"></xref>.
  syntax:
    content: public virtual XmlElement this[string name] { get; }
    content.vb: Public Overridable ReadOnly Property Item(name As String) As XmlElement
    parameters:
    - id: name
      type: System.String
      description: 'The qualified name of the element to retrieve. '
    return:
      type: System.Xml.XmlElement
      description: The first <xref href="System.Xml.XmlElement" data-throw-if-not-resolved="false"></xref> that matches the specified name. It returns a null reference (Nothing in Visual Basic) if there is no match.
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
  fullName.vb: System.Xml.XmlNode.Item(System.String)
  name.vb: Item(String)
- uid: System.Xml.XmlNode.Item(System.String,System.String)
  commentId: P:System.Xml.XmlNode.Item(System.String,System.String)
  id: Item(System.String,System.String)
  parent: System.Xml.XmlNode
  langs:
  - csharp
  - vb
  name: Item[String, String]
  fullName: System.Xml.XmlNode.Item[System.String, System.String]
  type: Property
  source:
    remote:
      path: src/System.Xml.XmlDocument/src/System/Xml/Dom/XmlNode.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: this[]
    path: src/System.Xml.XmlDocument/src/System/Xml/Dom/XmlNode.cs
    startLine: 1156
  assemblies:
  - System.Xml.XmlDocument
  namespace: System.Xml
  summary: Gets the first child element with the specified <xref href="System.Xml.XmlNode.LocalName" data-throw-if-not-resolved="false"></xref> and <xref href="System.Xml.XmlNode.NamespaceURI" data-throw-if-not-resolved="false"></xref>.
  syntax:
    content: public virtual XmlElement this[string localname, string ns] { get; }
    content.vb: Public Overridable ReadOnly Property Item(localname As String, ns As String) As XmlElement
    parameters:
    - id: localname
      type: System.String
      description: 'The local name of the element. '
    - id: ns
      type: System.String
      description: 'The namespace URI of the element. '
    return:
      type: System.Xml.XmlElement
      description: The first <xref href="System.Xml.XmlElement" data-throw-if-not-resolved="false"></xref> with the matching <em>localname</em> and <em>ns</em>. . It returns a null reference (Nothing in Visual Basic) if there is no match.
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
  fullName.vb: System.Xml.XmlNode.Item(System.String, System.String)
  name.vb: Item(String, String)
- uid: System.Xml.XmlNode.LastChild
  commentId: P:System.Xml.XmlNode.LastChild
  id: LastChild
  parent: System.Xml.XmlNode
  langs:
  - csharp
  - vb
  name: LastChild
  fullName: System.Xml.XmlNode.LastChild
  type: Property
  source:
    remote:
      path: src/System.Xml.XmlDocument/src/System/Xml/Dom/XmlNode.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: LastChild
    path: src/System.Xml.XmlDocument/src/System/Xml/Dom/XmlNode.cs
    startLine: 131
  assemblies:
  - System.Xml.XmlDocument
  namespace: System.Xml
  summary: Gets the last child of the node.
  syntax:
    content: public virtual XmlNode LastChild { get; }
    content.vb: Public Overridable ReadOnly Property LastChild As XmlNode
    parameters: []
    return:
      type: System.Xml.XmlNode
      description: The last child of the node. If there is no such node, null is returned.
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: System.Xml.XmlNode.LocalName
  commentId: P:System.Xml.XmlNode.LocalName
  id: LocalName
  parent: System.Xml.XmlNode
  langs:
  - csharp
  - vb
  name: LocalName
  fullName: System.Xml.XmlNode.LocalName
  type: Property
  source:
    remote:
      path: src/System.Xml.XmlDocument/src/System/Xml/Dom/XmlNode.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: LocalName
    path: src/System.Xml.XmlDocument/src/System/Xml/Dom/XmlNode.cs
    startLine: 764
  assemblies:
  - System.Xml.XmlDocument
  namespace: System.Xml
  summary: Gets the local name of the node, when overridden in a derived class.
  syntax:
    content: public abstract string LocalName { get; }
    content.vb: Public MustOverride ReadOnly Property LocalName As String
    parameters: []
    return:
      type: System.String
      description: 'The name of the node with the prefix removed. For example, LocalName is book for the element <bk:book>.The name returned is dependent on the <xref href="System.Xml.XmlNode.NodeType" data-throw-if-not-resolved="false"></xref> of the node: Type Name Attribute The local name of the attribute. CDATA #cdata-section Comment #comment Document #document DocumentFragment #document-fragment DocumentType The document type name. Element The local name of the element. Entity The name of the entity. EntityReference The name of the entity referenced. Notation The notation name. ProcessingInstruction The target of the processing instruction. Text #text Whitespace #whitespace SignificantWhitespace #significant-whitespace XmlDeclaration #xml-declaration '
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
- uid: System.Xml.XmlNode.Name
  commentId: P:System.Xml.XmlNode.Name
  id: Name
  parent: System.Xml.XmlNode
  langs:
  - csharp
  - vb
  name: Name
  fullName: System.Xml.XmlNode.Name
  type: Property
  source:
    remote:
      path: src/System.Xml.XmlDocument/src/System/Xml/Dom/XmlNode.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Name
    path: src/System.Xml.XmlDocument/src/System/Xml/Dom/XmlNode.cs
    startLine: 30
  assemblies:
  - System.Xml.XmlDocument
  namespace: System.Xml
  summary: Gets the qualified name of the node, when overridden in a derived class.
  syntax:
    content: public abstract string Name { get; }
    content.vb: Public MustOverride ReadOnly Property Name As String
    parameters: []
    return:
      type: System.String
      description: 'The qualified name of the node. The name returned is dependent on the <xref href="System.Xml.XmlNode.NodeType" data-throw-if-not-resolved="false"></xref> of the node: Type Name Attribute The qualified name of the attribute. CDATA #cdata-section Comment #comment Document #document DocumentFragment #document-fragment DocumentType The document type name. Element The qualified name of the element. Entity The name of the entity. EntityReference The name of the entity referenced. Notation The notation name. ProcessingInstruction The target of the processing instruction. Text #text Whitespace #whitespace SignificantWhitespace #significant-whitespace XmlDeclaration #xml-declaration '
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
- uid: System.Xml.XmlNode.NamespaceURI
  commentId: P:System.Xml.XmlNode.NamespaceURI
  id: NamespaceURI
  parent: System.Xml.XmlNode
  langs:
  - csharp
  - vb
  name: NamespaceURI
  fullName: System.Xml.XmlNode.NamespaceURI
  type: Property
  source:
    remote:
      path: src/System.Xml.XmlDocument/src/System/Xml/Dom/XmlNode.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: NamespaceURI
    path: src/System.Xml.XmlDocument/src/System/Xml/Dom/XmlNode.cs
    startLine: 751
  assemblies:
  - System.Xml.XmlDocument
  namespace: System.Xml
  summary: Gets the namespace URI of this node.
  syntax:
    content: public virtual string NamespaceURI { get; }
    content.vb: Public Overridable ReadOnly Property NamespaceURI As String
    parameters: []
    return:
      type: System.String
      description: The namespace URI of this node. If there is no namespace URI, this property returns String.Empty.
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: System.Xml.XmlNode.NextSibling
  commentId: P:System.Xml.XmlNode.NextSibling
  id: NextSibling
  parent: System.Xml.XmlNode
  langs:
  - csharp
  - vb
  name: NextSibling
  fullName: System.Xml.XmlNode.NextSibling
  type: Property
  source:
    remote:
      path: src/System.Xml.XmlDocument/src/System/Xml/Dom/XmlNode.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: NextSibling
    path: src/System.Xml.XmlDocument/src/System/Xml/Dom/XmlNode.cs
    startLine: 93
  assemblies:
  - System.Xml.XmlDocument
  namespace: System.Xml
  summary: Gets the node immediately following this node.
  syntax:
    content: public virtual XmlNode NextSibling { get; }
    content.vb: Public Overridable ReadOnly Property NextSibling As XmlNode
    parameters: []
    return:
      type: System.Xml.XmlNode
      description: The next XmlNode. If there is no next node, null is returned.
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: System.Xml.XmlNode.NodeType
  commentId: P:System.Xml.XmlNode.NodeType
  id: NodeType
  parent: System.Xml.XmlNode
  langs:
  - csharp
  - vb
  name: NodeType
  fullName: System.Xml.XmlNode.NodeType
  type: Property
  source:
    remote:
      path: src/System.Xml.XmlDocument/src/System/Xml/Dom/XmlNode.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: NodeType
    path: src/System.Xml.XmlDocument/src/System/Xml/Dom/XmlNode.cs
    startLine: 43
  assemblies:
  - System.Xml.XmlDocument
  namespace: System.Xml
  summary: Gets the type of the current node, when overridden in a derived class.
  syntax:
    content: public abstract XmlNodeType NodeType { get; }
    content.vb: Public MustOverride ReadOnly Property NodeType As XmlNodeType
    parameters: []
    return:
      type: System.Xml.XmlNodeType
      description: One of the <xref href="System.Xml.XmlNodeType" data-throw-if-not-resolved="false"></xref> values.
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
- uid: System.Xml.XmlNode.OuterXml
  commentId: P:System.Xml.XmlNode.OuterXml
  id: OuterXml
  parent: System.Xml.XmlNode
  langs:
  - csharp
  - vb
  name: OuterXml
  fullName: System.Xml.XmlNode.OuterXml
  type: Property
  source:
    remote:
      path: src/System.Xml.XmlDocument/src/System/Xml/Dom/XmlNode.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: OuterXml
    path: src/System.Xml.XmlDocument/src/System/Xml/Dom/XmlNode.cs
    startLine: 879
  assemblies:
  - System.Xml.XmlDocument
  namespace: System.Xml
  summary: Gets the markup containing this node and all its child nodes.
  syntax:
    content: public virtual string OuterXml { get; }
    content.vb: Public Overridable ReadOnly Property OuterXml As String
    parameters: []
    return:
      type: System.String
      description: The markup containing this node and all its child nodes.NoteOuterXml does not return default attributes.
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: System.Xml.XmlNode.OwnerDocument
  commentId: P:System.Xml.XmlNode.OwnerDocument
  id: OwnerDocument
  parent: System.Xml.XmlNode
  langs:
  - csharp
  - vb
  name: OwnerDocument
  fullName: System.Xml.XmlNode.OwnerDocument
  type: Property
  source:
    remote:
      path: src/System.Xml.XmlDocument/src/System/Xml/Dom/XmlNode.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: OwnerDocument
    path: src/System.Xml.XmlDocument/src/System/Xml/Dom/XmlNode.cs
    startLine: 106
  assemblies:
  - System.Xml.XmlDocument
  namespace: System.Xml
  summary: Gets the <xref href="System.Xml.XmlDocument" data-throw-if-not-resolved="false"></xref> to which this node belongs.
  syntax:
    content: public virtual XmlDocument OwnerDocument { get; }
    content.vb: Public Overridable ReadOnly Property OwnerDocument As XmlDocument
    parameters: []
    return:
      type: System.Xml.XmlDocument
      description: The <xref href="System.Xml.XmlDocument" data-throw-if-not-resolved="false"></xref> to which this node belongs.If the node is an <xref href="System.Xml.XmlDocument" data-throw-if-not-resolved="false"></xref> (NodeType equals XmlNodeType.Document), this property returns null.
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: System.Xml.XmlNode.ParentNode
  commentId: P:System.Xml.XmlNode.ParentNode
  id: ParentNode
  parent: System.Xml.XmlNode
  langs:
  - csharp
  - vb
  name: ParentNode
  fullName: System.Xml.XmlNode.ParentNode
  type: Property
  source:
    remote:
      path: src/System.Xml.XmlDocument/src/System/Xml/Dom/XmlNode.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ParentNode
    path: src/System.Xml.XmlDocument/src/System/Xml/Dom/XmlNode.cs
    startLine: 49
  assemblies:
  - System.Xml.XmlDocument
  namespace: System.Xml
  summary: Gets the parent of this node (for nodes that can have parents).
  syntax:
    content: public virtual XmlNode ParentNode { get; }
    content.vb: Public Overridable ReadOnly Property ParentNode As XmlNode
    parameters: []
    return:
      type: System.Xml.XmlNode
      description: 'The XmlNode that is the parent of the current node. If a node has just been created and not yet added to the tree, or if it has been removed from the tree, the parent is null. For all other nodes, the value returned depends on the <xref href="System.Xml.XmlNode.NodeType" data-throw-if-not-resolved="false"></xref> of the node. The following table describes the possible return values for the ParentNode property.NodeType Return Value of ParentNode Attribute, Document, DocumentFragment, Entity, Notation Returns null; these nodes do not have parents. CDATA Returns the element or entity reference containing the CDATA section. Comment Returns the element, entity reference, document type, or document containing the comment. DocumentType Returns the document node. Element Returns the parent node of the element. If the element is the root node in the tree, the parent is the document node. EntityReference Returns the element, attribute, or entity reference containing the entity reference. ProcessingInstruction Returns the document, element, document type, or entity reference containing the processing instruction. Text Returns the parent element, attribute, or entity reference containing the text node. '
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: System.Xml.XmlNode.Prefix
  commentId: P:System.Xml.XmlNode.Prefix
  id: Prefix
  parent: System.Xml.XmlNode
  langs:
  - csharp
  - vb
  name: Prefix
  fullName: System.Xml.XmlNode.Prefix
  type: Property
  source:
    remote:
      path: src/System.Xml.XmlDocument/src/System/Xml/Dom/XmlNode.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Prefix
    path: src/System.Xml.XmlDocument/src/System/Xml/Dom/XmlNode.cs
    startLine: 757
  assemblies:
  - System.Xml.XmlDocument
  namespace: System.Xml
  summary: Gets or sets the namespace prefix of this node.
  syntax:
    content: public virtual string Prefix { get; set; }
    content.vb: Public Overridable Property Prefix As String
    parameters: []
    return:
      type: System.String
      description: The namespace prefix of this node. For example, Prefix is bk for the element <bk:book>. If there is no prefix, this property returns String.Empty.
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: 'This node is read-only. '
  - type: System.Xml.XmlException
    commentId: T:System.Xml.XmlException
    description: 'The specified prefix contains an invalid character.The specified prefix is malformed.The specified prefix is "xml" and the namespaceURI of this node is different from "http://www.w3.org/XML/1998/namespace".This node is an attribute and the specified prefix is "xmlns" and the namespaceURI of this node is different from "http://www.w3.org/2000/xmlns/ ".This node is an attribute and the qualifiedName of this node is "xmlns". '
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Xml.XmlNode.PreviousSibling
  commentId: P:System.Xml.XmlNode.PreviousSibling
  id: PreviousSibling
  parent: System.Xml.XmlNode
  langs:
  - csharp
  - vb
  name: PreviousSibling
  fullName: System.Xml.XmlNode.PreviousSibling
  type: Property
  source:
    remote:
      path: src/System.Xml.XmlDocument/src/System/Xml/Dom/XmlNode.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: PreviousSibling
    path: src/System.Xml.XmlDocument/src/System/Xml/Dom/XmlNode.cs
    startLine: 87
  assemblies:
  - System.Xml.XmlDocument
  namespace: System.Xml
  summary: Gets the node immediately preceding this node.
  syntax:
    content: public virtual XmlNode PreviousSibling { get; }
    content.vb: Public Overridable ReadOnly Property PreviousSibling As XmlNode
    parameters: []
    return:
      type: System.Xml.XmlNode
      description: The preceding XmlNode. If there is no preceding node, null is returned.
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: System.Xml.XmlNode.PreviousText
  commentId: P:System.Xml.XmlNode.PreviousText
  id: PreviousText
  parent: System.Xml.XmlNode
  langs:
  - csharp
  - vb
  name: PreviousText
  fullName: System.Xml.XmlNode.PreviousText
  type: Property
  source:
    remote:
      path: src/System.Xml.XmlDocument/src/System/Xml/Dom/XmlNode.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: PreviousText
    path: src/System.Xml.XmlDocument/src/System/Xml/Dom/XmlNode.cs
    startLine: 1302
  assemblies:
  - System.Xml.XmlDocument
  namespace: System.Xml
  summary: Gets the text node that immediately precedes this node.
  syntax:
    content: public virtual XmlNode PreviousText { get; }
    content.vb: Public Overridable ReadOnly Property PreviousText As XmlNode
    parameters: []
    return:
      type: System.Xml.XmlNode
      description: Returns <xref href="System.Xml.XmlNode" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: System.Xml.XmlNode.Value
  commentId: P:System.Xml.XmlNode.Value
  id: Value
  parent: System.Xml.XmlNode
  langs:
  - csharp
  - vb
  name: Value
  fullName: System.Xml.XmlNode.Value
  type: Property
  source:
    remote:
      path: src/System.Xml.XmlDocument/src/System/Xml/Dom/XmlNode.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Value
    path: src/System.Xml.XmlDocument/src/System/Xml/Dom/XmlNode.cs
    startLine: 36
  assemblies:
  - System.Xml.XmlDocument
  namespace: System.Xml
  summary: Gets or sets the value of the node.
  syntax:
    content: public virtual string Value { get; set; }
    content.vb: Public Overridable Property Value As String
    parameters: []
    return:
      type: System.String
      description: 'The value returned depends on the <xref href="System.Xml.XmlNode.NodeType" data-throw-if-not-resolved="false"></xref> of the node: Type Value Attribute The value of the attribute. CDATASection The content of the CDATA Section. Comment The content of the comment. Document null. DocumentFragment null. DocumentType null. Element null. You can use the <xref href="System.Xml.XmlElement.InnerText" data-throw-if-not-resolved="false"></xref> or <xref href="System.Xml.XmlElement.InnerXml" data-throw-if-not-resolved="false"></xref> properties to access the value of the element node. Entity null. EntityReference null. Notation null. ProcessingInstruction The entire content excluding the target. Text The content of the text node. SignificantWhitespace The white space characters. White space can consist of one or more space characters, carriage returns, line feeds, or tabs. Whitespace The white space characters. White space can consist of one or more space characters, carriage returns, line feeds, or tabs. XmlDeclaration The content of the declaration (that is, everything between <?xml and ?>). '
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: 'Setting the value of a node that is read-only. '
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: 'Setting the value of a node that is not supposed to have a value (for example, an Element node). '
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Xml.XmlNode.AppendChild(System.Xml.XmlNode)
  commentId: M:System.Xml.XmlNode.AppendChild(System.Xml.XmlNode)
  id: AppendChild(System.Xml.XmlNode)
  parent: System.Xml.XmlNode
  langs:
  - csharp
  - vb
  name: AppendChild(XmlNode)
  fullName: System.Xml.XmlNode.AppendChild(System.Xml.XmlNode)
  type: Method
  source:
    remote:
      path: src/System.Xml.XmlDocument/src/System/Xml/Dom/XmlNode.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: AppendChild
    path: src/System.Xml.XmlDocument/src/System/Xml/Dom/XmlNode.cs
    startLine: 504
  assemblies:
  - System.Xml.XmlDocument
  namespace: System.Xml
  summary: Adds the specified node to the end of the list of child nodes, of this node.
  syntax:
    content: public virtual XmlNode AppendChild(XmlNode newChild)
    content.vb: Public Overridable Function AppendChild(newChild As XmlNode) As XmlNode
    parameters:
    - id: newChild
      type: System.Xml.XmlNode
      description: 'The node to add. All the contents of the node to be added are moved into the specified location. '
    return:
      type: System.Xml.XmlNode
      description: The node added.
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: 'This node is of a type that does not allow child nodes of the type of the <em>newChild</em> node.The <em>newChild</em> is an ancestor of this node. '
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: 'The <em>newChild</em> was created from a different document than the one that created this node.This node is read-only. '
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Xml.XmlNode.CloneNode(System.Boolean)
  commentId: M:System.Xml.XmlNode.CloneNode(System.Boolean)
  id: CloneNode(System.Boolean)
  parent: System.Xml.XmlNode
  langs:
  - csharp
  - vb
  name: CloneNode(Boolean)
  fullName: System.Xml.XmlNode.CloneNode(System.Boolean)
  type: Method
  source:
    remote:
      path: src/System.Xml.XmlDocument/src/System/Xml/Dom/XmlNode.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CloneNode
    path: src/System.Xml.XmlDocument/src/System/Xml/Dom/XmlNode.cs
    startLine: 644
  assemblies:
  - System.Xml.XmlDocument
  namespace: System.Xml
  summary: Creates a duplicate of the node, when overridden in a derived class.
  syntax:
    content: public abstract XmlNode CloneNode(bool deep)
    content.vb: Public MustOverride Function CloneNode(deep As Boolean) As XmlNode
    parameters:
    - id: deep
      type: System.Boolean
      description: 'true to recursively clone the subtree under the specified node; false to clone only the node itself. '
    return:
      type: System.Xml.XmlNode
      description: The cloned node.
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: 'Calling this method on a node type that cannot be cloned. '
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: System.Xml.XmlNode.GetEnumerator
  commentId: M:System.Xml.XmlNode.GetEnumerator
  id: GetEnumerator
  parent: System.Xml.XmlNode
  langs:
  - csharp
  - vb
  name: GetEnumerator()
  fullName: System.Xml.XmlNode.GetEnumerator()
  type: Method
  source:
    remote:
      path: src/System.Xml.XmlDocument/src/System/Xml/Dom/XmlNode.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetEnumerator
    path: src/System.Xml.XmlDocument/src/System/Xml/Dom/XmlNode.cs
    startLine: 810
  assemblies:
  - System.Xml.XmlDocument
  namespace: System.Xml
  summary: Get an enumerator that iterates through the child nodes in the current node.
  syntax:
    content: public Collections.IEnumerator GetEnumerator()
    content.vb: Public Function GetEnumerator As Collections.IEnumerator
    return:
      type: System.Collections.IEnumerator
      description: An <xref href="System.Collections.IEnumerator" data-throw-if-not-resolved="false"></xref> object that can be used to iterate through the child nodes in the current node.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Xml.XmlNode.GetNamespaceOfPrefix(System.String)
  commentId: M:System.Xml.XmlNode.GetNamespaceOfPrefix(System.String)
  id: GetNamespaceOfPrefix(System.String)
  parent: System.Xml.XmlNode
  langs:
  - csharp
  - vb
  name: GetNamespaceOfPrefix(String)
  fullName: System.Xml.XmlNode.GetNamespaceOfPrefix(System.String)
  type: Method
  source:
    remote:
      path: src/System.Xml.XmlDocument/src/System/Xml/Dom/XmlNode.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetNamespaceOfPrefix
    path: src/System.Xml.XmlDocument/src/System/Xml/Dom/XmlNode.cs
    startLine: 977
  assemblies:
  - System.Xml.XmlDocument
  namespace: System.Xml
  summary: Looks up the closest xmlns declaration for the given prefix that is in scope for the current node and returns the namespace URI in the declaration.
  syntax:
    content: public virtual string GetNamespaceOfPrefix(string prefix)
    content.vb: Public Overridable Function GetNamespaceOfPrefix(prefix As String) As String
    parameters:
    - id: prefix
      type: System.String
      description: 'The prefix whose namespace URI you want to find. '
    return:
      type: System.String
      description: The namespace URI of the specified prefix.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Xml.XmlNode.GetPrefixOfNamespace(System.String)
  commentId: M:System.Xml.XmlNode.GetPrefixOfNamespace(System.String)
  id: GetPrefixOfNamespace(System.String)
  parent: System.Xml.XmlNode
  langs:
  - csharp
  - vb
  name: GetPrefixOfNamespace(String)
  fullName: System.Xml.XmlNode.GetPrefixOfNamespace(System.String)
  type: Method
  source:
    remote:
      path: src/System.Xml.XmlDocument/src/System/Xml/Dom/XmlNode.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetPrefixOfNamespace
    path: src/System.Xml.XmlDocument/src/System/Xml/Dom/XmlNode.cs
    startLine: 1064
  assemblies:
  - System.Xml.XmlDocument
  namespace: System.Xml
  summary: Looks up the closest xmlns declaration for the given namespace URI that is in scope for the current node and returns the prefix defined in that declaration.
  syntax:
    content: public virtual string GetPrefixOfNamespace(string namespaceURI)
    content.vb: Public Overridable Function GetPrefixOfNamespace(namespaceURI As String) As String
    parameters:
    - id: namespaceURI
      type: System.String
      description: 'The namespace URI whose prefix you want to find. '
    return:
      type: System.String
      description: The prefix for the specified namespace URI.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Xml.XmlNode.InsertAfter(System.Xml.XmlNode,System.Xml.XmlNode)
  commentId: M:System.Xml.XmlNode.InsertAfter(System.Xml.XmlNode,System.Xml.XmlNode)
  id: InsertAfter(System.Xml.XmlNode,System.Xml.XmlNode)
  parent: System.Xml.XmlNode
  langs:
  - csharp
  - vb
  name: InsertAfter(XmlNode, XmlNode)
  fullName: System.Xml.XmlNode.InsertAfter(System.Xml.XmlNode, System.Xml.XmlNode)
  type: Method
  source:
    remote:
      path: src/System.Xml.XmlDocument/src/System/Xml/Dom/XmlNode.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: InsertAfter
    path: src/System.Xml.XmlDocument/src/System/Xml/Dom/XmlNode.cs
    startLine: 285
  assemblies:
  - System.Xml.XmlDocument
  namespace: System.Xml
  summary: Inserts the specified node immediately after the specified reference node.
  syntax:
    content: public virtual XmlNode InsertAfter(XmlNode newChild, XmlNode refChild)
    content.vb: Public Overridable Function InsertAfter(newChild As XmlNode, refChild As XmlNode) As XmlNode
    parameters:
    - id: newChild
      type: System.Xml.XmlNode
      description: 'The XmlNode to insert. '
    - id: refChild
      type: System.Xml.XmlNode
      description: 'The XmlNode that is the reference node. The <em>newNode</em> is placed after the <em>refNode</em>. '
    return:
      type: System.Xml.XmlNode
      description: The node being inserted.
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: 'This node is of a type that does not allow child nodes of the type of the <em>newChild</em> node.The <em>newChild</em> is an ancestor of this node. '
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: 'The <em>newChild</em> was created from a different document than the one that created this node.The <em>refChild</em> is not a child of this node.This node is read-only. '
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Xml.XmlNode.InsertBefore(System.Xml.XmlNode,System.Xml.XmlNode)
  commentId: M:System.Xml.XmlNode.InsertBefore(System.Xml.XmlNode,System.Xml.XmlNode)
  id: InsertBefore(System.Xml.XmlNode,System.Xml.XmlNode)
  parent: System.Xml.XmlNode
  langs:
  - csharp
  - vb
  name: InsertBefore(XmlNode, XmlNode)
  fullName: System.Xml.XmlNode.InsertBefore(System.Xml.XmlNode, System.Xml.XmlNode)
  type: Method
  source:
    remote:
      path: src/System.Xml.XmlDocument/src/System/Xml/Dom/XmlNode.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: InsertBefore
    path: src/System.Xml.XmlDocument/src/System/Xml/Dom/XmlNode.cs
    startLine: 171
  assemblies:
  - System.Xml.XmlDocument
  namespace: System.Xml
  summary: Inserts the specified node immediately before the specified reference node.
  syntax:
    content: public virtual XmlNode InsertBefore(XmlNode newChild, XmlNode refChild)
    content.vb: Public Overridable Function InsertBefore(newChild As XmlNode, refChild As XmlNode) As XmlNode
    parameters:
    - id: newChild
      type: System.Xml.XmlNode
      description: 'The XmlNode to insert. '
    - id: refChild
      type: System.Xml.XmlNode
      description: 'The XmlNode that is the reference node. The <em>newChild</em> is placed before this node. '
    return:
      type: System.Xml.XmlNode
      description: The node being inserted.
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: 'The current node is of a type that does not allow child nodes of the type of the <em>newChild</em> node.The <em>newChild</em> is an ancestor of this node. '
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: 'The <em>newChild</em> was created from a different document than the one that created this node.The <em>refChild</em> is not a child of this node.This node is read-only. '
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Xml.XmlNode.Normalize
  commentId: M:System.Xml.XmlNode.Normalize
  id: Normalize
  parent: System.Xml.XmlNode
  langs:
  - csharp
  - vb
  name: Normalize()
  fullName: System.Xml.XmlNode.Normalize()
  type: Method
  source:
    remote:
      path: src/System.Xml.XmlDocument/src/System/Xml/Dom/XmlNode.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Normalize
    path: src/System.Xml.XmlDocument/src/System/Xml/Dom/XmlNode.cs
    startLine: 661
  assemblies:
  - System.Xml.XmlDocument
  namespace: System.Xml
  summary: Puts all XmlText nodes in the full depth of the sub-tree underneath this XmlNode into a "normal" form where only markup (that is, tags, comments, processing instructions, CDATA sections, and entity references) separates XmlText nodes, that is, there are no adjacent XmlText nodes.
  syntax:
    content: public virtual void Normalize()
    content.vb: Public Overridable Sub Normalize
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Xml.XmlNode.PrependChild(System.Xml.XmlNode)
  commentId: M:System.Xml.XmlNode.PrependChild(System.Xml.XmlNode)
  id: PrependChild(System.Xml.XmlNode)
  parent: System.Xml.XmlNode
  langs:
  - csharp
  - vb
  name: PrependChild(XmlNode)
  fullName: System.Xml.XmlNode.PrependChild(System.Xml.XmlNode)
  type: Method
  source:
    remote:
      path: src/System.Xml.XmlDocument/src/System/Xml/Dom/XmlNode.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: PrependChild
    path: src/System.Xml.XmlDocument/src/System/Xml/Dom/XmlNode.cs
    startLine: 498
  assemblies:
  - System.Xml.XmlDocument
  namespace: System.Xml
  summary: Adds the specified node to the beginning of the list of child nodes for this node.
  syntax:
    content: public virtual XmlNode PrependChild(XmlNode newChild)
    content.vb: Public Overridable Function PrependChild(newChild As XmlNode) As XmlNode
    parameters:
    - id: newChild
      type: System.Xml.XmlNode
      description: The node to add. All the contents of the node to be added are moved into the specified location.
    return:
      type: System.Xml.XmlNode
      description: The node added.
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: 'This node is of a type that does not allow child nodes of the type of the <em>newChild</em> node.The <em>newChild</em> is an ancestor of this node. '
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: 'The <em>newChild</em> was created from a different document than the one that created this node.This node is read-only. '
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Xml.XmlNode.RemoveAll
  commentId: M:System.Xml.XmlNode.RemoveAll
  id: RemoveAll
  parent: System.Xml.XmlNode
  langs:
  - csharp
  - vb
  name: RemoveAll()
  fullName: System.Xml.XmlNode.RemoveAll()
  type: Method
  source:
    remote:
      path: src/System.Xml.XmlDocument/src/System/Xml/Dom/XmlNode.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: RemoveAll
    path: src/System.Xml.XmlDocument/src/System/Xml/Dom/XmlNode.cs
    startLine: 951
  assemblies:
  - System.Xml.XmlDocument
  namespace: System.Xml
  summary: Removes all the child nodes and/or attributes of the current node.
  syntax:
    content: public virtual void RemoveAll()
    content.vb: Public Overridable Sub RemoveAll
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Xml.XmlNode.RemoveChild(System.Xml.XmlNode)
  commentId: M:System.Xml.XmlNode.RemoveChild(System.Xml.XmlNode)
  id: RemoveChild(System.Xml.XmlNode)
  parent: System.Xml.XmlNode
  langs:
  - csharp
  - vb
  name: RemoveChild(XmlNode)
  fullName: System.Xml.XmlNode.RemoveChild(System.Xml.XmlNode)
  type: Method
  source:
    remote:
      path: src/System.Xml.XmlDocument/src/System/Xml/Dom/XmlNode.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: RemoveChild
    path: src/System.Xml.XmlDocument/src/System/Xml/Dom/XmlNode.cs
    startLine: 412
  assemblies:
  - System.Xml.XmlDocument
  namespace: System.Xml
  summary: Removes specified child node.
  syntax:
    content: public virtual XmlNode RemoveChild(XmlNode oldChild)
    content.vb: Public Overridable Function RemoveChild(oldChild As XmlNode) As XmlNode
    parameters:
    - id: oldChild
      type: System.Xml.XmlNode
      description: 'The node being removed. '
    return:
      type: System.Xml.XmlNode
      description: The node removed.
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: 'The <em>oldChild</em> is not a child of this node. Or this node is read-only. '
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Xml.XmlNode.ReplaceChild(System.Xml.XmlNode,System.Xml.XmlNode)
  commentId: M:System.Xml.XmlNode.ReplaceChild(System.Xml.XmlNode,System.Xml.XmlNode)
  id: ReplaceChild(System.Xml.XmlNode,System.Xml.XmlNode)
  parent: System.Xml.XmlNode
  langs:
  - csharp
  - vb
  name: ReplaceChild(XmlNode, XmlNode)
  fullName: System.Xml.XmlNode.ReplaceChild(System.Xml.XmlNode, System.Xml.XmlNode)
  type: Method
  source:
    remote:
      path: src/System.Xml.XmlDocument/src/System/Xml/Dom/XmlNode.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ReplaceChild
    path: src/System.Xml.XmlDocument/src/System/Xml/Dom/XmlNode.cs
    startLine: 403
  assemblies:
  - System.Xml.XmlDocument
  namespace: System.Xml
  summary: Replaces the child node <em>oldChild</em> with <em>newChild</em> node.
  syntax:
    content: public virtual XmlNode ReplaceChild(XmlNode newChild, XmlNode oldChild)
    content.vb: Public Overridable Function ReplaceChild(newChild As XmlNode, oldChild As XmlNode) As XmlNode
    parameters:
    - id: newChild
      type: System.Xml.XmlNode
      description: 'The new node to put in the child list. '
    - id: oldChild
      type: System.Xml.XmlNode
      description: 'The node being replaced in the list. '
    return:
      type: System.Xml.XmlNode
      description: The node replaced.
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: 'This node is of a type that does not allow child nodes of the type of the <em>newChild</em> node.The <em>newChild</em> is an ancestor of this node. '
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: 'The <em>newChild</em> was created from a different document than the one that created this node.This node is read-only.The <em>oldChild</em> is not a child of this node. '
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Xml.XmlNode.Supports(System.String,System.String)
  commentId: M:System.Xml.XmlNode.Supports(System.String,System.String)
  id: Supports(System.String,System.String)
  parent: System.Xml.XmlNode
  langs:
  - csharp
  - vb
  name: Supports(String, String)
  fullName: System.Xml.XmlNode.Supports(System.String, System.String)
  type: Method
  source:
    remote:
      path: src/System.Xml.XmlDocument/src/System/Xml/Dom/XmlNode.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Supports
    path: src/System.Xml.XmlDocument/src/System/Xml/Dom/XmlNode.cs
    startLine: 740
  assemblies:
  - System.Xml.XmlDocument
  namespace: System.Xml
  summary: Tests if the DOM implementation implements a specific feature.
  syntax:
    content: public virtual bool Supports(string feature, string version)
    content.vb: Public Overridable Function Supports(feature As String, version As String) As Boolean
    parameters:
    - id: feature
      type: System.String
      description: 'The package name of the feature to test. This name is not case-sensitive. '
    - id: version
      type: System.String
      description: 'The version number of the package name to test. If the version is not specified (null), supporting any version of the feature causes the method to return true. '
    return:
      type: System.Boolean
      description: 'true if the feature is implemented in the specified version; otherwise, false. The following table describes the combinations that return true.Feature Version XML 1.0 XML 2.0 '
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Xml.XmlNode.WriteContentTo(System.Xml.XmlWriter)
  commentId: M:System.Xml.XmlNode.WriteContentTo(System.Xml.XmlWriter)
  id: WriteContentTo(System.Xml.XmlWriter)
  parent: System.Xml.XmlNode
  langs:
  - csharp
  - vb
  name: WriteContentTo(XmlWriter)
  fullName: System.Xml.XmlNode.WriteContentTo(System.Xml.XmlWriter)
  type: Method
  source:
    remote:
      path: src/System.Xml.XmlDocument/ref/System.Xml.XmlDocument.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: WriteContentTo
    path: src/System.Xml.XmlDocument/ref/System.Xml.XmlDocument.cs
    startLine: 281
  assemblies:
  - System.Xml.XmlDocument
  namespace: System.Xml
  summary: Saves all the child nodes of the node to the specified <xref href="System.Xml.XmlWriter" data-throw-if-not-resolved="false"></xref>, when overridden in a derived class.
  syntax:
    content: public abstract void WriteContentTo(XmlWriter w)
    content.vb: Public MustOverride Sub WriteContentTo(w As XmlWriter)
    parameters:
    - id: w
      type: System.Xml.XmlWriter
      description: 'The XmlWriter to which you want to save. '
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: System.Xml.XmlNode.WriteTo(System.Xml.XmlWriter)
  commentId: M:System.Xml.XmlNode.WriteTo(System.Xml.XmlWriter)
  id: WriteTo(System.Xml.XmlWriter)
  parent: System.Xml.XmlNode
  langs:
  - csharp
  - vb
  name: WriteTo(XmlWriter)
  fullName: System.Xml.XmlNode.WriteTo(System.Xml.XmlWriter)
  type: Method
  source:
    remote:
      path: src/System.Xml.XmlDocument/ref/System.Xml.XmlDocument.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: WriteTo
    path: src/System.Xml.XmlDocument/ref/System.Xml.XmlDocument.cs
    startLine: 282
  assemblies:
  - System.Xml.XmlDocument
  namespace: System.Xml
  summary: Saves the current node to the specified <xref href="System.Xml.XmlWriter" data-throw-if-not-resolved="false"></xref>, when overridden in a derived class.
  syntax:
    content: public abstract void WriteTo(XmlWriter w)
    content.vb: Public MustOverride Sub WriteTo(w As XmlWriter)
    parameters:
    - id: w
      type: System.Xml.XmlWriter
      description: 'The XmlWriter to which you want to save. '
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
references:
- uid: System.Xml
  isExternal: false
  name: System.Xml
  fullName: System.Xml
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Xml.XmlAttributeCollection
  parent: System.Xml
  isExternal: false
  name: XmlAttributeCollection
  fullName: System.Xml.XmlAttributeCollection
- uid: System.String
  parent: System
  isExternal: false
  name: String
  fullName: System.String
- uid: System.Xml.XmlNodeList
  parent: System.Xml
  isExternal: false
  name: XmlNodeList
  fullName: System.Xml.XmlNodeList
- uid: System.Xml.XmlNode
  parent: System.Xml
  isExternal: false
  name: XmlNode
  fullName: System.Xml.XmlNode
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  fullName: System.Boolean
- uid: System.Xml.XmlElement
  parent: System.Xml
  isExternal: false
  name: XmlElement
  fullName: System.Xml.XmlElement
- uid: System.Xml.XmlNodeType
  parent: System.Xml
  isExternal: false
  name: XmlNodeType
  fullName: System.Xml.XmlNodeType
- uid: System.Xml.XmlDocument
  parent: System.Xml
  isExternal: false
  name: XmlDocument
  fullName: System.Xml.XmlDocument
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: false
  name: Collections.IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Collections
  isExternal: false
  name: System.Collections
  fullName: System.Collections
- uid: System.Xml.XmlWriter
  parent: System.Xml
  isExternal: false
  name: XmlWriter
  fullName: System.Xml.XmlWriter
- uid: System.InvalidOperationException
  parent: System
  isExternal: false
  name: InvalidOperationException
  fullName: System.InvalidOperationException
- uid: System.Xml.XmlException
  isExternal: false
  name: XmlException
  fullName: System.Xml.XmlException
- uid: System.ArgumentException
  parent: System
  isExternal: false
  name: ArgumentException
  fullName: System.ArgumentException
