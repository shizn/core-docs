items:
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2
  commentId: T:System.Security.Cryptography.X509Certificates.X509Certificate2
  id: X509Certificate2
  parent: System.Security.Cryptography.X509Certificates
  children:
  - System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor
  - System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.Byte[])
  - System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.Byte[],System.String)
  - System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.Byte[],System.String,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)
  - System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.IntPtr)
  - System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.String)
  - System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.String,System.String)
  - System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.String,System.String,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)
  - System.Security.Cryptography.X509Certificates.X509Certificate2.Archived
  - System.Security.Cryptography.X509Certificates.X509Certificate2.Extensions
  - System.Security.Cryptography.X509Certificates.X509Certificate2.FriendlyName
  - System.Security.Cryptography.X509Certificates.X509Certificate2.GetCertContentType(System.Byte[])
  - System.Security.Cryptography.X509Certificates.X509Certificate2.GetCertContentType(System.String)
  - System.Security.Cryptography.X509Certificates.X509Certificate2.GetNameInfo(System.Security.Cryptography.X509Certificates.X509NameType,System.Boolean)
  - System.Security.Cryptography.X509Certificates.X509Certificate2.HasPrivateKey
  - System.Security.Cryptography.X509Certificates.X509Certificate2.IssuerName
  - System.Security.Cryptography.X509Certificates.X509Certificate2.NotAfter
  - System.Security.Cryptography.X509Certificates.X509Certificate2.NotBefore
  - System.Security.Cryptography.X509Certificates.X509Certificate2.PublicKey
  - System.Security.Cryptography.X509Certificates.X509Certificate2.RawData
  - System.Security.Cryptography.X509Certificates.X509Certificate2.SerialNumber
  - System.Security.Cryptography.X509Certificates.X509Certificate2.SignatureAlgorithm
  - System.Security.Cryptography.X509Certificates.X509Certificate2.SubjectName
  - System.Security.Cryptography.X509Certificates.X509Certificate2.Thumbprint
  - System.Security.Cryptography.X509Certificates.X509Certificate2.ToString
  - System.Security.Cryptography.X509Certificates.X509Certificate2.ToString(System.Boolean)
  - System.Security.Cryptography.X509Certificates.X509Certificate2.Version
  langs:
  - csharp
  - vb
  name: X509Certificate2
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2
  type: Class
  source:
    remote:
      path: src/System.Security.Cryptography.X509Certificates/src/System/Security/Cryptography/X509Certificates/X509Certificate2.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: X509Certificate2
    path: src/System.Security.Cryptography.X509Certificates/src/System/Security/Cryptography/X509Certificates/X509Certificate2.cs
    startLine: 16
  assemblies:
  - System.Security.Cryptography.X509Certificates
  namespace: System.Security.Cryptography.X509Certificates
  summary: 'Represents an X.509 certificate.  '
  syntax:
    content: 'public class X509Certificate2 : X509Certificate'
    content.vb: >-
      Public Class X509Certificate2
          Inherits X509Certificate
  inheritance:
  - System.Object
  - System.Security.Cryptography.X509Certificates.X509Certificate
  inheritedMembers:
  - System.Security.Cryptography.X509Certificates.X509Certificate.Handle
  - System.Security.Cryptography.X509Certificates.X509Certificate.Issuer
  - System.Security.Cryptography.X509Certificates.X509Certificate.Subject
  - System.Security.Cryptography.X509Certificates.X509Certificate.Dispose
  - System.Security.Cryptography.X509Certificates.X509Certificate.Dispose(System.Boolean)
  - System.Security.Cryptography.X509Certificates.X509Certificate.Equals(System.Object)
  - System.Security.Cryptography.X509Certificates.X509Certificate.Equals(System.Security.Cryptography.X509Certificates.X509Certificate)
  - System.Security.Cryptography.X509Certificates.X509Certificate.Export(System.Security.Cryptography.X509Certificates.X509ContentType)
  - System.Security.Cryptography.X509Certificates.X509Certificate.Export(System.Security.Cryptography.X509Certificates.X509ContentType,System.String)
  - System.Security.Cryptography.X509Certificates.X509Certificate.GetCertHash
  - System.Security.Cryptography.X509Certificates.X509Certificate.GetFormat
  - System.Security.Cryptography.X509Certificates.X509Certificate.GetHashCode
  - System.Security.Cryptography.X509Certificates.X509Certificate.GetKeyAlgorithm
  - System.Security.Cryptography.X509Certificates.X509Certificate.GetKeyAlgorithmParameters
  - System.Security.Cryptography.X509Certificates.X509Certificate.GetKeyAlgorithmParametersString
  - System.Security.Cryptography.X509Certificates.X509Certificate.GetPublicKey
  - System.Security.Cryptography.X509Certificates.X509Certificate.GetSerialNumber
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor
  commentId: M:System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor
  id: '#ctor'
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  langs:
  - csharp
  - vb
  name: X509Certificate2()
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.X509Certificate2()
  type: Constructor
  source:
    remote:
      path: src/System.Security.Cryptography.X509Certificates/src/System/Security/Cryptography/X509Certificates/X509Certificate2.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Security.Cryptography.X509Certificates/src/System/Security/Cryptography/X509Certificates/X509Certificate2.cs
    startLine: 18
  assemblies:
  - System.Security.Cryptography.X509Certificates
  namespace: System.Security.Cryptography.X509Certificates
  summary: Initializes a new instance of the <xref href="System.Security.Cryptography.X509Certificates.X509Certificate2" data-throw-if-not-resolved="false"></xref> class.
  syntax:
    content: public X509Certificate2()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.Byte[])
  commentId: M:System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.Byte[])
  id: '#ctor(System.Byte[])'
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  langs:
  - csharp
  - vb
  name: X509Certificate2(Byte[])
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.X509Certificate2(System.Byte[])
  type: Constructor
  source:
    remote:
      path: src/System.Security.Cryptography.X509Certificates/src/System/Security/Cryptography/X509Certificates/X509Certificate2.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Security.Cryptography.X509Certificates/src/System/Security/Cryptography/X509Certificates/X509Certificate2.cs
    startLine: 23
  assemblies:
  - System.Security.Cryptography.X509Certificates
  namespace: System.Security.Cryptography.X509Certificates
  summary: Initializes a new instance of the <xref href="System.Security.Cryptography.X509Certificates.X509Certificate2" data-throw-if-not-resolved="false"></xref> class using information from a byte array.
  syntax:
    content: public X509Certificate2(byte[] rawData)
    content.vb: Public Sub New(rawData As Byte())
    parameters:
    - id: rawData
      type: System.Byte[]
      description: 'A byte array containing data from an X.509 certificate. '
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: An error with the certificate occurs. For example:The certificate file does not exist.The certificate is invalid.The certificate's password is incorrect.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Security.Cryptography.X509Certificates.X509Certificate2.X509Certificate2(System.Byte())
  name.vb: X509Certificate2(Byte())
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.Byte[],System.String)
  commentId: M:System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.Byte[],System.String)
  id: '#ctor(System.Byte[],System.String)'
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  langs:
  - csharp
  - vb
  name: X509Certificate2(Byte[], String)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.X509Certificate2(System.Byte[], System.String)
  type: Constructor
  source:
    remote:
      path: src/System.Security.Cryptography.X509Certificates/src/System/Security/Cryptography/X509Certificates/X509Certificate2.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Security.Cryptography.X509Certificates/src/System/Security/Cryptography/X509Certificates/X509Certificate2.cs
    startLine: 28
  assemblies:
  - System.Security.Cryptography.X509Certificates
  namespace: System.Security.Cryptography.X509Certificates
  summary: Initializes a new instance of the <xref href="System.Security.Cryptography.X509Certificates.X509Certificate2" data-throw-if-not-resolved="false"></xref> class using a byte array and a password.
  syntax:
    content: public X509Certificate2(byte[] rawData, string password)
    content.vb: Public Sub New(rawData As Byte(), password As String)
    parameters:
    - id: rawData
      type: System.Byte[]
      description: 'A byte array containing data from an X.509 certificate. '
    - id: password
      type: System.String
      description: 'The password required to access the X.509 certificate data. '
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: An error with the certificate occurs. For example:The certificate file does not exist.The certificate is invalid.The certificate's password is incorrect.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Security.Cryptography.X509Certificates.X509Certificate2.X509Certificate2(System.Byte(), System.String)
  name.vb: X509Certificate2(Byte(), String)
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.Byte[],System.String,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)
  commentId: M:System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.Byte[],System.String,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)
  id: '#ctor(System.Byte[],System.String,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)'
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  langs:
  - csharp
  - vb
  name: X509Certificate2(Byte[], String, X509KeyStorageFlags)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.X509Certificate2(System.Byte[], System.String, System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)
  type: Constructor
  source:
    remote:
      path: src/System.Security.Cryptography.X509Certificates/src/System/Security/Cryptography/X509Certificates/X509Certificate2.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Security.Cryptography.X509Certificates/src/System/Security/Cryptography/X509Certificates/X509Certificate2.cs
    startLine: 33
  assemblies:
  - System.Security.Cryptography.X509Certificates
  namespace: System.Security.Cryptography.X509Certificates
  summary: Initializes a new instance of the <xref href="System.Security.Cryptography.X509Certificates.X509Certificate2" data-throw-if-not-resolved="false"></xref> class using a byte array, a password, and a key storage flag.
  syntax:
    content: public X509Certificate2(byte[] rawData, string password, X509KeyStorageFlags keyStorageFlags)
    content.vb: Public Sub New(rawData As Byte(), password As String, keyStorageFlags As X509KeyStorageFlags)
    parameters:
    - id: rawData
      type: System.Byte[]
      description: 'A byte array containing data from an X.509 certificate. '
    - id: password
      type: System.String
      description: 'The password required to access the X.509 certificate data. '
    - id: keyStorageFlags
      type: System.Security.Cryptography.X509Certificates.X509KeyStorageFlags
      description: 'A bitwise combination of the enumeration values that control where and how to import the certificate. '
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: An error with the certificate occurs. For example:The certificate file does not exist.The certificate is invalid.The certificate's password is incorrect.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Security.Cryptography.X509Certificates.X509Certificate2.X509Certificate2(System.Byte(), System.String, System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)
  name.vb: X509Certificate2(Byte(), String, X509KeyStorageFlags)
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.IntPtr)
  commentId: M:System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.IntPtr)
  id: '#ctor(System.IntPtr)'
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  langs:
  - csharp
  - vb
  name: X509Certificate2(IntPtr)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.X509Certificate2(System.IntPtr)
  type: Constructor
  source:
    remote:
      path: src/System.Security.Cryptography.X509Certificates/ref/4.0/System.Security.Cryptography.X509Certificates.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Security.Cryptography.X509Certificates/ref/4.0/System.Security.Cryptography.X509Certificates.cs
    startLine: 127
  assemblies:
  - System.Security.Cryptography.X509Certificates
  namespace: System.Security.Cryptography.X509Certificates
  summary: Initializes a new instance of the <xref href="System.Security.Cryptography.X509Certificates.X509Certificate2" data-throw-if-not-resolved="false"></xref> class using an unmanaged handle.
  syntax:
    content: public X509Certificate2(IntPtr handle)
    content.vb: Public Sub New(handle As IntPtr)
    parameters:
    - id: handle
      type: System.IntPtr
      description: A pointer to a certificate context in unmanaged code. The C structure is called PCCERT_CONTEXT.
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: An error with the certificate occurs. For example:The certificate file does not exist.The certificate is invalid.The certificate's password is incorrect.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.String)
  commentId: M:System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  langs:
  - csharp
  - vb
  name: X509Certificate2(String)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.X509Certificate2(System.String)
  type: Constructor
  source:
    remote:
      path: src/System.Security.Cryptography.X509Certificates/src/System/Security/Cryptography/X509Certificates/X509Certificate2.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Security.Cryptography.X509Certificates/src/System/Security/Cryptography/X509Certificates/X509Certificate2.cs
    startLine: 48
  assemblies:
  - System.Security.Cryptography.X509Certificates
  namespace: System.Security.Cryptography.X509Certificates
  summary: Initializes a new instance of the <xref href="System.Security.Cryptography.X509Certificates.X509Certificate2" data-throw-if-not-resolved="false"></xref> class using a certificate file name.
  syntax:
    content: public X509Certificate2(string fileName)
    content.vb: Public Sub New(fileName As String)
    parameters:
    - id: fileName
      type: System.String
      description: 'The name of a certificate file. '
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: An error with the certificate occurs. For example:The certificate file does not exist.The certificate is invalid.The certificate's password is incorrect.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.String,System.String)
  commentId: M:System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  langs:
  - csharp
  - vb
  name: X509Certificate2(String, String)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.X509Certificate2(System.String, System.String)
  type: Constructor
  source:
    remote:
      path: src/System.Security.Cryptography.X509Certificates/src/System/Security/Cryptography/X509Certificates/X509Certificate2.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Security.Cryptography.X509Certificates/src/System/Security/Cryptography/X509Certificates/X509Certificate2.cs
    startLine: 53
  assemblies:
  - System.Security.Cryptography.X509Certificates
  namespace: System.Security.Cryptography.X509Certificates
  summary: Initializes a new instance of the <xref href="System.Security.Cryptography.X509Certificates.X509Certificate2" data-throw-if-not-resolved="false"></xref> class using a certificate file name and a password used to access the certificate.
  syntax:
    content: public X509Certificate2(string fileName, string password)
    content.vb: Public Sub New(fileName As String, password As String)
    parameters:
    - id: fileName
      type: System.String
      description: 'The name of a certificate file. '
    - id: password
      type: System.String
      description: 'The password required to access the X.509 certificate data. '
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: An error with the certificate occurs. For example:The certificate file does not exist.The certificate is invalid.The certificate's password is incorrect.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.String,System.String,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)
  commentId: M:System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.String,System.String,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)
  id: '#ctor(System.String,System.String,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)'
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  langs:
  - csharp
  - vb
  name: X509Certificate2(String, String, X509KeyStorageFlags)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.X509Certificate2(System.String, System.String, System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)
  type: Constructor
  source:
    remote:
      path: src/System.Security.Cryptography.X509Certificates/src/System/Security/Cryptography/X509Certificates/X509Certificate2.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Security.Cryptography.X509Certificates/src/System/Security/Cryptography/X509Certificates/X509Certificate2.cs
    startLine: 58
  assemblies:
  - System.Security.Cryptography.X509Certificates
  namespace: System.Security.Cryptography.X509Certificates
  summary: Initializes a new instance of the <xref href="System.Security.Cryptography.X509Certificates.X509Certificate2" data-throw-if-not-resolved="false"></xref> class using a certificate file name, a password used to access the certificate, and a key storage flag.
  syntax:
    content: public X509Certificate2(string fileName, string password, X509KeyStorageFlags keyStorageFlags)
    content.vb: Public Sub New(fileName As String, password As String, keyStorageFlags As X509KeyStorageFlags)
    parameters:
    - id: fileName
      type: System.String
      description: 'The name of a certificate file. '
    - id: password
      type: System.String
      description: 'The password required to access the X.509 certificate data. '
    - id: keyStorageFlags
      type: System.Security.Cryptography.X509Certificates.X509KeyStorageFlags
      description: 'A bitwise combination of the enumeration values that control where and how to import the certificate. '
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: An error with the certificate occurs. For example:The certificate file does not exist.The certificate is invalid.The certificate's password is incorrect.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.Archived
  commentId: P:System.Security.Cryptography.X509Certificates.X509Certificate2.Archived
  id: Archived
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  langs:
  - csharp
  - vb
  name: Archived
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.Archived
  type: Property
  source:
    remote:
      path: src/System.Security.Cryptography.X509Certificates/src/System/Security/Cryptography/X509Certificates/X509Certificate2.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Archived
    path: src/System.Security.Cryptography.X509Certificates/src/System/Security/Cryptography/X509Certificates/X509Certificate2.cs
    startLine: 63
  assemblies:
  - System.Security.Cryptography.X509Certificates
  namespace: System.Security.Cryptography.X509Certificates
  summary: Gets or sets a value indicating that an X.509 certificate is archived.
  syntax:
    content: public bool Archived { get; set; }
    content.vb: Public Property Archived As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: true if the certificate is archived, false if the certificate is not archived.
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: 'The certificate is unreadable. '
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.Extensions
  commentId: P:System.Security.Cryptography.X509Certificates.X509Certificate2.Extensions
  id: Extensions
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  langs:
  - csharp
  - vb
  name: Extensions
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.Extensions
  type: Property
  source:
    remote:
      path: src/System.Security.Cryptography.X509Certificates/src/System/Security/Cryptography/X509Certificates/X509Certificate2.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Extensions
    path: src/System.Security.Cryptography.X509Certificates/src/System/Security/Cryptography/X509Certificates/X509Certificate2.cs
    startLine: 80
  assemblies:
  - System.Security.Cryptography.X509Certificates
  namespace: System.Security.Cryptography.X509Certificates
  summary: Gets a collection of <xref href="System.Security.Cryptography.X509Certificates.X509Extension" data-throw-if-not-resolved="false"></xref> objects.
  syntax:
    content: public X509ExtensionCollection Extensions { get; }
    content.vb: Public ReadOnly Property Extensions As X509ExtensionCollection
    parameters: []
    return:
      type: System.Security.Cryptography.X509Certificates.X509ExtensionCollection
      description: An <xref href="System.Security.Cryptography.X509Certificates.X509ExtensionCollection" data-throw-if-not-resolved="false"></xref> object.
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: 'The certificate is unreadable. '
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.FriendlyName
  commentId: P:System.Security.Cryptography.X509Certificates.X509Certificate2.FriendlyName
  id: FriendlyName
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  langs:
  - csharp
  - vb
  name: FriendlyName
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.FriendlyName
  type: Property
  source:
    remote:
      path: src/System.Security.Cryptography.X509Certificates/src/System/Security/Cryptography/X509Certificates/X509Certificate2.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: FriendlyName
    path: src/System.Security.Cryptography.X509Certificates/src/System/Security/Cryptography/X509Certificates/X509Certificate2.cs
    startLine: 109
  assemblies:
  - System.Security.Cryptography.X509Certificates
  namespace: System.Security.Cryptography.X509Certificates
  summary: Gets or sets the associated alias for a certificate.
  syntax:
    content: public string FriendlyName { get; set; }
    content.vb: Public Property FriendlyName As String
    parameters: []
    return:
      type: System.String
      description: The certificate's friendly name.
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: 'The certificate is unreadable. '
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.HasPrivateKey
  commentId: P:System.Security.Cryptography.X509Certificates.X509Certificate2.HasPrivateKey
  id: HasPrivateKey
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  langs:
  - csharp
  - vb
  name: HasPrivateKey
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.HasPrivateKey
  type: Property
  source:
    remote:
      path: src/System.Security.Cryptography.X509Certificates/src/System/Security/Cryptography/X509Certificates/X509Certificate2.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: HasPrivateKey
    path: src/System.Security.Cryptography.X509Certificates/src/System/Security/Cryptography/X509Certificates/X509Certificate2.cs
    startLine: 126
  assemblies:
  - System.Security.Cryptography.X509Certificates
  namespace: System.Security.Cryptography.X509Certificates
  summary: 'Gets a value that indicates whether an <xref href="System.Security.Cryptography.X509Certificates.X509Certificate2" data-throw-if-not-resolved="false"></xref> object contains a private key. '
  syntax:
    content: public bool HasPrivateKey { get; }
    content.vb: Public ReadOnly Property HasPrivateKey As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: 'true if the <xref href="System.Security.Cryptography.X509Certificates.X509Certificate2" data-throw-if-not-resolved="false"></xref> object contains a private key; otherwise, false. '
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: The certificate context is invalid.
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.IssuerName
  commentId: P:System.Security.Cryptography.X509Certificates.X509Certificate2.IssuerName
  id: IssuerName
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  langs:
  - csharp
  - vb
  name: IssuerName
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.IssuerName
  type: Property
  source:
    remote:
      path: src/System.Security.Cryptography.X509Certificates/src/System/Security/Cryptography/X509Certificates/X509Certificate2.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IssuerName
    path: src/System.Security.Cryptography.X509Certificates/src/System/Security/Cryptography/X509Certificates/X509Certificate2.cs
    startLine: 136
  assemblies:
  - System.Security.Cryptography.X509Certificates
  namespace: System.Security.Cryptography.X509Certificates
  summary: Gets the distinguished name of the certificate issuer.
  syntax:
    content: public X500DistinguishedName IssuerName { get; }
    content.vb: Public ReadOnly Property IssuerName As X500DistinguishedName
    parameters: []
    return:
      type: System.Security.Cryptography.X509Certificates.X500DistinguishedName
      description: An <xref href="System.Security.Cryptography.X509Certificates.X500DistinguishedName" data-throw-if-not-resolved="false"></xref> object that contains the name of the certificate issuer.
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: The certificate context is invalid.
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.NotAfter
  commentId: P:System.Security.Cryptography.X509Certificates.X509Certificate2.NotAfter
  id: NotAfter
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  langs:
  - csharp
  - vb
  name: NotAfter
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.NotAfter
  type: Property
  source:
    remote:
      path: src/System.Security.Cryptography.X509Certificates/src/System/Security/Cryptography/X509Certificates/X509Certificate2.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: NotAfter
    path: src/System.Security.Cryptography.X509Certificates/src/System/Security/Cryptography/X509Certificates/X509Certificate2.cs
    startLine: 149
  assemblies:
  - System.Security.Cryptography.X509Certificates
  namespace: System.Security.Cryptography.X509Certificates
  summary: Gets the date in local time after which a certificate is no longer valid.
  syntax:
    content: public DateTime NotAfter { get; }
    content.vb: Public ReadOnly Property NotAfter As DateTime
    parameters: []
    return:
      type: System.DateTime
      description: A <xref href="System.DateTime" data-throw-if-not-resolved="false"></xref> object that represents the expiration date for the certificate.
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: 'The certificate is unreadable. '
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.NotBefore
  commentId: P:System.Security.Cryptography.X509Certificates.X509Certificate2.NotBefore
  id: NotBefore
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  langs:
  - csharp
  - vb
  name: NotBefore
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.NotBefore
  type: Property
  source:
    remote:
      path: src/System.Security.Cryptography.X509Certificates/src/System/Security/Cryptography/X509Certificates/X509Certificate2.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: NotBefore
    path: src/System.Security.Cryptography.X509Certificates/src/System/Security/Cryptography/X509Certificates/X509Certificate2.cs
    startLine: 154
  assemblies:
  - System.Security.Cryptography.X509Certificates
  namespace: System.Security.Cryptography.X509Certificates
  summary: Gets the date in local time on which a certificate becomes valid.
  syntax:
    content: public DateTime NotBefore { get; }
    content.vb: Public ReadOnly Property NotBefore As DateTime
    parameters: []
    return:
      type: System.DateTime
      description: A <xref href="System.DateTime" data-throw-if-not-resolved="false"></xref> object that represents the effective date of the certificate.
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: 'The certificate is unreadable. '
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.PublicKey
  commentId: P:System.Security.Cryptography.X509Certificates.X509Certificate2.PublicKey
  id: PublicKey
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  langs:
  - csharp
  - vb
  name: PublicKey
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.PublicKey
  type: Property
  source:
    remote:
      path: src/System.Security.Cryptography.X509Certificates/src/System/Security/Cryptography/X509Certificates/X509Certificate2.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: PublicKey
    path: src/System.Security.Cryptography.X509Certificates/src/System/Security/Cryptography/X509Certificates/X509Certificate2.cs
    startLine: 159
  assemblies:
  - System.Security.Cryptography.X509Certificates
  namespace: System.Security.Cryptography.X509Certificates
  summary: Gets a <xref href="System.Security.Cryptography.X509Certificates.X509Certificate2.PublicKey" data-throw-if-not-resolved="false"></xref> object associated with a certificate.
  syntax:
    content: public PublicKey PublicKey { get; }
    content.vb: Public ReadOnly Property PublicKey As PublicKey
    parameters: []
    return:
      type: System.Security.Cryptography.X509Certificates.PublicKey
      description: A <xref href="System.Security.Cryptography.X509Certificates.X509Certificate2.PublicKey" data-throw-if-not-resolved="false"></xref> object.
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: 'The key value is not an RSA or DSA key, or the key is unreadable. '
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.RawData
  commentId: P:System.Security.Cryptography.X509Certificates.X509Certificate2.RawData
  id: RawData
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  langs:
  - csharp
  - vb
  name: RawData
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.RawData
  type: Property
  source:
    remote:
      path: src/System.Security.Cryptography.X509Certificates/src/System/Security/Cryptography/X509Certificates/X509Certificate2.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: RawData
    path: src/System.Security.Cryptography.X509Certificates/src/System/Security/Cryptography/X509Certificates/X509Certificate2.cs
    startLine: 178
  assemblies:
  - System.Security.Cryptography.X509Certificates
  namespace: System.Security.Cryptography.X509Certificates
  summary: Gets the raw data of a certificate.
  syntax:
    content: public byte[] RawData { get; }
    content.vb: Public ReadOnly Property RawData As Byte()
    parameters: []
    return:
      type: System.Byte[]
      description: The raw data of the certificate as a byte array.
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.SerialNumber
  commentId: P:System.Security.Cryptography.X509Certificates.X509Certificate2.SerialNumber
  id: SerialNumber
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  langs:
  - csharp
  - vb
  name: SerialNumber
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.SerialNumber
  type: Property
  source:
    remote:
      path: src/System.Security.Cryptography.X509Certificates/src/System/Security/Cryptography/X509Certificates/X509Certificate2.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: SerialNumber
    path: src/System.Security.Cryptography.X509Certificates/src/System/Security/Cryptography/X509Certificates/X509Certificate2.cs
    startLine: 193
  assemblies:
  - System.Security.Cryptography.X509Certificates
  namespace: System.Security.Cryptography.X509Certificates
  summary: Gets the serial number of a certificate.
  syntax:
    content: public string SerialNumber { get; }
    content.vb: Public ReadOnly Property SerialNumber As String
    parameters: []
    return:
      type: System.String
      description: The serial number of the certificate.
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.SignatureAlgorithm
  commentId: P:System.Security.Cryptography.X509Certificates.X509Certificate2.SignatureAlgorithm
  id: SignatureAlgorithm
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  langs:
  - csharp
  - vb
  name: SignatureAlgorithm
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.SignatureAlgorithm
  type: Property
  source:
    remote:
      path: src/System.Security.Cryptography.X509Certificates/src/System/Security/Cryptography/X509Certificates/X509Certificate2.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: SignatureAlgorithm
    path: src/System.Security.Cryptography.X509Certificates/src/System/Security/Cryptography/X509Certificates/X509Certificate2.cs
    startLine: 203
  assemblies:
  - System.Security.Cryptography.X509Certificates
  namespace: System.Security.Cryptography.X509Certificates
  summary: Gets the algorithm used to create the signature of a certificate.
  syntax:
    content: public Oid SignatureAlgorithm { get; }
    content.vb: Public ReadOnly Property SignatureAlgorithm As Oid
    parameters: []
    return:
      type: System.Security.Cryptography.Oid
      description: Returns the object identifier (<xref href="System.Security.Cryptography.Oid" data-throw-if-not-resolved="false"></xref>) of the signature algorithm.
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: 'The certificate is unreadable. '
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.SubjectName
  commentId: P:System.Security.Cryptography.X509Certificates.X509Certificate2.SubjectName
  id: SubjectName
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  langs:
  - csharp
  - vb
  name: SubjectName
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.SubjectName
  type: Property
  source:
    remote:
      path: src/System.Security.Cryptography.X509Certificates/src/System/Security/Cryptography/X509Certificates/X509Certificate2.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: SubjectName
    path: src/System.Security.Cryptography.X509Certificates/src/System/Security/Cryptography/X509Certificates/X509Certificate2.cs
    startLine: 219
  assemblies:
  - System.Security.Cryptography.X509Certificates
  namespace: System.Security.Cryptography.X509Certificates
  summary: Gets the subject distinguished name from a certificate.
  syntax:
    content: public X500DistinguishedName SubjectName { get; }
    content.vb: Public ReadOnly Property SubjectName As X500DistinguishedName
    parameters: []
    return:
      type: System.Security.Cryptography.X509Certificates.X500DistinguishedName
      description: An <xref href="System.Security.Cryptography.X509Certificates.X500DistinguishedName" data-throw-if-not-resolved="false"></xref> object that represents the name of the certificate subject.
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: The certificate context is invalid.
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.Thumbprint
  commentId: P:System.Security.Cryptography.X509Certificates.X509Certificate2.Thumbprint
  id: Thumbprint
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  langs:
  - csharp
  - vb
  name: Thumbprint
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.Thumbprint
  type: Property
  source:
    remote:
      path: src/System.Security.Cryptography.X509Certificates/src/System/Security/Cryptography/X509Certificates/X509Certificate2.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Thumbprint
    path: src/System.Security.Cryptography.X509Certificates/src/System/Security/Cryptography/X509Certificates/X509Certificate2.cs
    startLine: 232
  assemblies:
  - System.Security.Cryptography.X509Certificates
  namespace: System.Security.Cryptography.X509Certificates
  summary: Gets the thumbprint of a certificate.
  syntax:
    content: public string Thumbprint { get; }
    content.vb: Public ReadOnly Property Thumbprint As String
    parameters: []
    return:
      type: System.String
      description: The thumbprint of the certificate.
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.Version
  commentId: P:System.Security.Cryptography.X509Certificates.X509Certificate2.Version
  id: Version
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  langs:
  - csharp
  - vb
  name: Version
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.Version
  type: Property
  source:
    remote:
      path: src/System.Security.Cryptography.X509Certificates/src/System/Security/Cryptography/X509Certificates/X509Certificate2.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Version
    path: src/System.Security.Cryptography.X509Certificates/src/System/Security/Cryptography/X509Certificates/X509Certificate2.cs
    startLine: 241
  assemblies:
  - System.Security.Cryptography.X509Certificates
  namespace: System.Security.Cryptography.X509Certificates
  summary: Gets the X.509 format version of a certificate.
  syntax:
    content: public int Version { get; }
    content.vb: Public ReadOnly Property Version As Integer
    parameters: []
    return:
      type: System.Int32
      description: The certificate format.
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: 'The certificate is unreadable. '
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.GetCertContentType(System.Byte[])
  commentId: M:System.Security.Cryptography.X509Certificates.X509Certificate2.GetCertContentType(System.Byte[])
  id: GetCertContentType(System.Byte[])
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  langs:
  - csharp
  - vb
  name: GetCertContentType(Byte[])
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.GetCertContentType(System.Byte[])
  type: Method
  source:
    remote:
      path: src/System.Security.Cryptography.X509Certificates/src/System/Security/Cryptography/X509Certificates/X509Certificate2.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetCertContentType
    path: src/System.Security.Cryptography.X509Certificates/src/System/Security/Cryptography/X509Certificates/X509Certificate2.cs
    startLine: 254
  assemblies:
  - System.Security.Cryptography.X509Certificates
  namespace: System.Security.Cryptography.X509Certificates
  summary: Indicates the type of certificate contained in a byte array.
  syntax:
    content: public static X509ContentType GetCertContentType(byte[] rawData)
    content.vb: Public Shared Function GetCertContentType(rawData As Byte()) As X509ContentType
    parameters:
    - id: rawData
      type: System.Byte[]
      description: 'A byte array containing data from an X.509 certificate. '
    return:
      type: System.Security.Cryptography.X509Certificates.X509ContentType
      description: An <xref href="System.Security.Cryptography.X509Certificates.X509ContentType" data-throw-if-not-resolved="false"></xref> object.
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<em>rawData</em> has a zero length or is null. "
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Security.Cryptography.X509Certificates.X509Certificate2.GetCertContentType(System.Byte())
  name.vb: GetCertContentType(Byte())
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.GetCertContentType(System.String)
  commentId: M:System.Security.Cryptography.X509Certificates.X509Certificate2.GetCertContentType(System.String)
  id: GetCertContentType(System.String)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  langs:
  - csharp
  - vb
  name: GetCertContentType(String)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.GetCertContentType(System.String)
  type: Method
  source:
    remote:
      path: src/System.Security.Cryptography.X509Certificates/src/System/Security/Cryptography/X509Certificates/X509Certificate2.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetCertContentType
    path: src/System.Security.Cryptography.X509Certificates/src/System/Security/Cryptography/X509Certificates/X509Certificate2.cs
    startLine: 262
  assemblies:
  - System.Security.Cryptography.X509Certificates
  namespace: System.Security.Cryptography.X509Certificates
  summary: Indicates the type of certificate contained in a file.
  syntax:
    content: public static X509ContentType GetCertContentType(string fileName)
    content.vb: Public Shared Function GetCertContentType(fileName As String) As X509ContentType
    parameters:
    - id: fileName
      type: System.String
      description: 'The name of a certificate file. '
    return:
      type: System.Security.Cryptography.X509Certificates.X509ContentType
      description: An <xref href="System.Security.Cryptography.X509Certificates.X509ContentType" data-throw-if-not-resolved="false"></xref> object.
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>fileName</em> is null."
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.GetNameInfo(System.Security.Cryptography.X509Certificates.X509NameType,System.Boolean)
  commentId: M:System.Security.Cryptography.X509Certificates.X509Certificate2.GetNameInfo(System.Security.Cryptography.X509Certificates.X509NameType,System.Boolean)
  id: GetNameInfo(System.Security.Cryptography.X509Certificates.X509NameType,System.Boolean)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  langs:
  - csharp
  - vb
  name: GetNameInfo(X509NameType, Boolean)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.GetNameInfo(System.Security.Cryptography.X509Certificates.X509NameType, System.Boolean)
  type: Method
  source:
    remote:
      path: src/System.Security.Cryptography.X509Certificates/src/System/Security/Cryptography/X509Certificates/X509Certificate2.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetNameInfo
    path: src/System.Security.Cryptography.X509Certificates/src/System/Security/Cryptography/X509Certificates/X509Certificate2.cs
    startLine: 274
  assemblies:
  - System.Security.Cryptography.X509Certificates
  namespace: System.Security.Cryptography.X509Certificates
  summary: Gets the subject and issuer names from a certificate.
  syntax:
    content: public string GetNameInfo(X509NameType nameType, bool forIssuer)
    content.vb: Public Function GetNameInfo(nameType As X509NameType, forIssuer As Boolean) As String
    parameters:
    - id: nameType
      type: System.Security.Cryptography.X509Certificates.X509NameType
      description: 'The <xref href="System.Security.Cryptography.X509Certificates.X509NameType" data-throw-if-not-resolved="false"></xref> value for the subject. '
    - id: forIssuer
      type: System.Boolean
      description: 'true to include the issuer name; otherwise, false. '
    return:
      type: System.String
      description: The name of the certificate.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.ToString
  commentId: M:System.Security.Cryptography.X509Certificates.X509Certificate2.ToString
  id: ToString
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  langs:
  - csharp
  - vb
  name: ToString()
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.ToString()
  type: Method
  source:
    remote:
      path: src/System.Security.Cryptography.X509Certificates/src/System/Security/Cryptography/X509Certificates/X509Certificate2.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ToString
    path: src/System.Security.Cryptography.X509Certificates/src/System/Security/Cryptography/X509Certificates/X509Certificate2.cs
    startLine: 279
  assemblies:
  - System.Security.Cryptography.X509Certificates
  namespace: System.Security.Cryptography.X509Certificates
  summary: Displays an X.509 certificate in text format.
  syntax:
    content: public override string ToString()
    content.vb: Public Overrides Function ToString As String
    return:
      type: System.String
      description: The certificate information.
  overridden: System.Security.Cryptography.X509Certificates.X509Certificate.ToString
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.ToString(System.Boolean)
  commentId: M:System.Security.Cryptography.X509Certificates.X509Certificate2.ToString(System.Boolean)
  id: ToString(System.Boolean)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  langs:
  - csharp
  - vb
  name: ToString(Boolean)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.ToString(System.Boolean)
  type: Method
  source:
    remote:
      path: src/System.Security.Cryptography.X509Certificates/src/System/Security/Cryptography/X509Certificates/X509Certificate2.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ToString
    path: src/System.Security.Cryptography.X509Certificates/src/System/Security/Cryptography/X509Certificates/X509Certificate2.cs
    startLine: 284
  assemblies:
  - System.Security.Cryptography.X509Certificates
  namespace: System.Security.Cryptography.X509Certificates
  summary: Displays an X.509 certificate in text format.
  syntax:
    content: public override string ToString(bool verbose)
    content.vb: Public Overrides Function ToString(verbose As Boolean) As String
    parameters:
    - id: verbose
      type: System.Boolean
      description: 'true to display the public key, private key, extensions, and so forth; false to display information that is similar to the <xref href="System.Security.Cryptography.X509Certificates.X509Certificate2" data-throw-if-not-resolved="false"></xref> class, including thumbprint, serial number, subject and issuer names, and so on. '
    return:
      type: System.String
      description: The certificate information.
  overridden: System.Security.Cryptography.X509Certificates.X509Certificate.ToString(System.Boolean)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: System.Security.Cryptography.X509Certificates
  isExternal: false
  name: System.Security.Cryptography.X509Certificates
  fullName: System.Security.Cryptography.X509Certificates
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System.Security.Cryptography.X509Certificates.X509Certificate
  parent: System.Security.Cryptography.X509Certificates
  isExternal: false
  name: X509Certificate
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Handle
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: Handle
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.Handle
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Issuer
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: Issuer
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.Issuer
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Subject
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: Subject
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.Subject
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Dispose
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: Dispose()
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.Dispose()
  spec.csharp:
  - uid: System.Security.Cryptography.X509Certificates.X509Certificate.Dispose
    name: Dispose
    fullName: System.Security.Cryptography.X509Certificates.X509Certificate.Dispose
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Security.Cryptography.X509Certificates.X509Certificate.Dispose
    name: Dispose
    fullName: System.Security.Cryptography.X509Certificates.X509Certificate.Dispose
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Dispose(System.Boolean)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: true
  name: Dispose(Boolean)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.Dispose(System.Boolean)
  spec.csharp:
  - uid: System.Security.Cryptography.X509Certificates.X509Certificate.Dispose(System.Boolean)
    name: Dispose
    fullName: System.Security.Cryptography.X509Certificates.X509Certificate.Dispose
  - name: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Security.Cryptography.X509Certificates.X509Certificate.Dispose(System.Boolean)
    name: Dispose
    fullName: System.Security.Cryptography.X509Certificates.X509Certificate.Dispose
  - name: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Equals(System.Object)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: true
  name: Equals(Object)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.Equals(System.Object)
  spec.csharp:
  - uid: System.Security.Cryptography.X509Certificates.X509Certificate.Equals(System.Object)
    name: Equals
    fullName: System.Security.Cryptography.X509Certificates.X509Certificate.Equals
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Security.Cryptography.X509Certificates.X509Certificate.Equals(System.Object)
    name: Equals
    fullName: System.Security.Cryptography.X509Certificates.X509Certificate.Equals
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Equals(System.Security.Cryptography.X509Certificates.X509Certificate)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: Equals(X509Certificate)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.Equals(System.Security.Cryptography.X509Certificates.X509Certificate)
  spec.csharp:
  - uid: System.Security.Cryptography.X509Certificates.X509Certificate.Equals(System.Security.Cryptography.X509Certificates.X509Certificate)
    name: Equals
    fullName: System.Security.Cryptography.X509Certificates.X509Certificate.Equals
  - name: (
    fullName: (
  - uid: System.Security.Cryptography.X509Certificates.X509Certificate
    name: X509Certificate
    fullName: System.Security.Cryptography.X509Certificates.X509Certificate
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Security.Cryptography.X509Certificates.X509Certificate.Equals(System.Security.Cryptography.X509Certificates.X509Certificate)
    name: Equals
    fullName: System.Security.Cryptography.X509Certificates.X509Certificate.Equals
  - name: (
    fullName: (
  - uid: System.Security.Cryptography.X509Certificates.X509Certificate
    name: X509Certificate
    fullName: System.Security.Cryptography.X509Certificates.X509Certificate
  - name: )
    fullName: )
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Export(System.Security.Cryptography.X509Certificates.X509ContentType)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: Export(X509ContentType)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.Export(System.Security.Cryptography.X509Certificates.X509ContentType)
  spec.csharp:
  - uid: System.Security.Cryptography.X509Certificates.X509Certificate.Export(System.Security.Cryptography.X509Certificates.X509ContentType)
    name: Export
    fullName: System.Security.Cryptography.X509Certificates.X509Certificate.Export
  - name: (
    fullName: (
  - uid: System.Security.Cryptography.X509Certificates.X509ContentType
    name: X509ContentType
    fullName: System.Security.Cryptography.X509Certificates.X509ContentType
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Security.Cryptography.X509Certificates.X509Certificate.Export(System.Security.Cryptography.X509Certificates.X509ContentType)
    name: Export
    fullName: System.Security.Cryptography.X509Certificates.X509Certificate.Export
  - name: (
    fullName: (
  - uid: System.Security.Cryptography.X509Certificates.X509ContentType
    name: X509ContentType
    fullName: System.Security.Cryptography.X509Certificates.X509ContentType
  - name: )
    fullName: )
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Export(System.Security.Cryptography.X509Certificates.X509ContentType,System.String)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: true
  name: Export(X509ContentType, String)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.Export(System.Security.Cryptography.X509Certificates.X509ContentType, System.String)
  spec.csharp:
  - uid: System.Security.Cryptography.X509Certificates.X509Certificate.Export(System.Security.Cryptography.X509Certificates.X509ContentType,System.String)
    name: Export
    fullName: System.Security.Cryptography.X509Certificates.X509Certificate.Export
  - name: (
    fullName: (
  - uid: System.Security.Cryptography.X509Certificates.X509ContentType
    name: X509ContentType
    fullName: System.Security.Cryptography.X509Certificates.X509ContentType
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Security.Cryptography.X509Certificates.X509Certificate.Export(System.Security.Cryptography.X509Certificates.X509ContentType,System.String)
    name: Export
    fullName: System.Security.Cryptography.X509Certificates.X509Certificate.Export
  - name: (
    fullName: (
  - uid: System.Security.Cryptography.X509Certificates.X509ContentType
    name: X509ContentType
    fullName: System.Security.Cryptography.X509Certificates.X509ContentType
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetCertHash
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: GetCertHash()
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.GetCertHash()
  spec.csharp:
  - uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetCertHash
    name: GetCertHash
    fullName: System.Security.Cryptography.X509Certificates.X509Certificate.GetCertHash
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetCertHash
    name: GetCertHash
    fullName: System.Security.Cryptography.X509Certificates.X509Certificate.GetCertHash
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetFormat
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: GetFormat()
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.GetFormat()
  spec.csharp:
  - uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetFormat
    name: GetFormat
    fullName: System.Security.Cryptography.X509Certificates.X509Certificate.GetFormat
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetFormat
    name: GetFormat
    fullName: System.Security.Cryptography.X509Certificates.X509Certificate.GetFormat
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetHashCode
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: GetHashCode()
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.GetHashCode()
  spec.csharp:
  - uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetHashCode
    name: GetHashCode
    fullName: System.Security.Cryptography.X509Certificates.X509Certificate.GetHashCode
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetHashCode
    name: GetHashCode
    fullName: System.Security.Cryptography.X509Certificates.X509Certificate.GetHashCode
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetKeyAlgorithm
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: GetKeyAlgorithm()
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.GetKeyAlgorithm()
  spec.csharp:
  - uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetKeyAlgorithm
    name: GetKeyAlgorithm
    fullName: System.Security.Cryptography.X509Certificates.X509Certificate.GetKeyAlgorithm
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetKeyAlgorithm
    name: GetKeyAlgorithm
    fullName: System.Security.Cryptography.X509Certificates.X509Certificate.GetKeyAlgorithm
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetKeyAlgorithmParameters
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: GetKeyAlgorithmParameters()
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.GetKeyAlgorithmParameters()
  spec.csharp:
  - uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetKeyAlgorithmParameters
    name: GetKeyAlgorithmParameters
    fullName: System.Security.Cryptography.X509Certificates.X509Certificate.GetKeyAlgorithmParameters
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetKeyAlgorithmParameters
    name: GetKeyAlgorithmParameters
    fullName: System.Security.Cryptography.X509Certificates.X509Certificate.GetKeyAlgorithmParameters
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetKeyAlgorithmParametersString
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: GetKeyAlgorithmParametersString()
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.GetKeyAlgorithmParametersString()
  spec.csharp:
  - uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetKeyAlgorithmParametersString
    name: GetKeyAlgorithmParametersString
    fullName: System.Security.Cryptography.X509Certificates.X509Certificate.GetKeyAlgorithmParametersString
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetKeyAlgorithmParametersString
    name: GetKeyAlgorithmParametersString
    fullName: System.Security.Cryptography.X509Certificates.X509Certificate.GetKeyAlgorithmParametersString
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetPublicKey
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: GetPublicKey()
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.GetPublicKey()
  spec.csharp:
  - uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetPublicKey
    name: GetPublicKey
    fullName: System.Security.Cryptography.X509Certificates.X509Certificate.GetPublicKey
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetPublicKey
    name: GetPublicKey
    fullName: System.Security.Cryptography.X509Certificates.X509Certificate.GetPublicKey
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetSerialNumber
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: GetSerialNumber()
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.GetSerialNumber()
  spec.csharp:
  - uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetSerialNumber
    name: GetSerialNumber
    fullName: System.Security.Cryptography.X509Certificates.X509Certificate.GetSerialNumber
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetSerialNumber
    name: GetSerialNumber
    fullName: System.Security.Cryptography.X509Certificates.X509Certificate.GetSerialNumber
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Byte[]
  isExternal: false
  name: Byte[]
  fullName: System.Byte[]
  fullname.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
  - name: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
  - name: ()
    fullName: ()
- uid: System.String
  parent: System
  isExternal: false
  name: String
  fullName: System.String
- uid: System.Security.Cryptography.X509Certificates.X509KeyStorageFlags
  parent: System.Security.Cryptography.X509Certificates
  isExternal: false
  name: X509KeyStorageFlags
  fullName: System.Security.Cryptography.X509Certificates.X509KeyStorageFlags
- uid: System.IntPtr
  parent: System
  isExternal: false
  name: IntPtr
  fullName: System.IntPtr
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  fullName: System.Boolean
- uid: System.Security.Cryptography.X509Certificates.X509ExtensionCollection
  parent: System.Security.Cryptography.X509Certificates
  isExternal: false
  name: X509ExtensionCollection
  fullName: System.Security.Cryptography.X509Certificates.X509ExtensionCollection
- uid: System.Security.Cryptography.X509Certificates.X500DistinguishedName
  parent: System.Security.Cryptography.X509Certificates
  isExternal: false
  name: X500DistinguishedName
  fullName: System.Security.Cryptography.X509Certificates.X500DistinguishedName
- uid: System.DateTime
  parent: System
  isExternal: false
  name: DateTime
  fullName: System.DateTime
- uid: System.Security.Cryptography.X509Certificates.PublicKey
  parent: System.Security.Cryptography.X509Certificates
  isExternal: false
  name: PublicKey
  fullName: System.Security.Cryptography.X509Certificates.PublicKey
- uid: System.Security.Cryptography.Oid
  parent: System.Security.Cryptography
  isExternal: false
  name: Oid
  fullName: System.Security.Cryptography.Oid
- uid: System.Security.Cryptography
  isExternal: false
  name: System.Security.Cryptography
  fullName: System.Security.Cryptography
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  fullName: System.Int32
- uid: System.Security.Cryptography.X509Certificates.X509ContentType
  parent: System.Security.Cryptography.X509Certificates
  isExternal: false
  name: X509ContentType
  fullName: System.Security.Cryptography.X509Certificates.X509ContentType
- uid: System.Security.Cryptography.X509Certificates.X509NameType
  parent: System.Security.Cryptography.X509Certificates
  isExternal: false
  name: X509NameType
  fullName: System.Security.Cryptography.X509Certificates.X509NameType
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.ToString
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: ToString()
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.ToString()
  spec.csharp:
  - uid: System.Security.Cryptography.X509Certificates.X509Certificate.ToString
    name: ToString
    fullName: System.Security.Cryptography.X509Certificates.X509Certificate.ToString
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Security.Cryptography.X509Certificates.X509Certificate.ToString
    name: ToString
    fullName: System.Security.Cryptography.X509Certificates.X509Certificate.ToString
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Security.Cryptography.X509Certificates.X509Certificate.ToString(System.Boolean)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: true
  name: ToString(Boolean)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate.ToString(System.Boolean)
  spec.csharp:
  - uid: System.Security.Cryptography.X509Certificates.X509Certificate.ToString(System.Boolean)
    name: ToString
    fullName: System.Security.Cryptography.X509Certificates.X509Certificate.ToString
  - name: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Security.Cryptography.X509Certificates.X509Certificate.ToString(System.Boolean)
    name: ToString
    fullName: System.Security.Cryptography.X509Certificates.X509Certificate.ToString
  - name: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
- uid: System.Security.Cryptography.CryptographicException
  isExternal: false
  name: CryptographicException
  fullName: System.Security.Cryptography.CryptographicException
- uid: System.ArgumentException
  parent: System
  isExternal: false
  name: ArgumentException
  fullName: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: false
  name: ArgumentNullException
  fullName: System.ArgumentNullException
