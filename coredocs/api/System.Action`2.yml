items:
- uid: System.Action`2
  commentId: T:System.Action`2
  id: Action`2
  parent: System
  children: []
  langs:
  - csharp
  - vb
  name: Action<T1, T2>
  fullName: System.Action<T1, T2>
  type: Delegate
  source:
    remote:
      path: src/mscorlib/src/System/Action.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Action
    path: src/mscorlib/src/System/Action.cs
    startLine: 22
  assemblies:
  - System.Runtime
  namespace: System
  summary: Encapsulates a method that has two parameters and does not return a value.
  syntax:
    content: public delegate void Action<in T1, in T2>(T1 arg1, T2 arg2);
    content.vb: Public Delegate Sub Action(Of In T1, In T2)(arg1 As T1, arg2 As T2)
    parameters:
    - id: arg1
      type: '{T1}'
      description: The first parameter of the method that this delegate encapsulates.
    - id: arg2
      type: '{T2}'
      description: The second parameter of the method that this delegate encapsulates.
    typeParameters:
    - id: T1
      description: The type of the first parameter of the method that this delegate encapsulates.This type parameter is contravariant. That is, you can use either the type you specified or any type that is less derived. For more information about covariance and contravariance, see Covariance and Contravariance in Generics.
    - id: T2
      description: The type of the second parameter of the method that this delegate encapsulates.
  modifiers.csharp:
  - public
  - delegate
  modifiers.vb:
  - Public
  - Delegate
  fullName.vb: System.Action(Of T1, T2)
  name.vb: Action(Of T1, T2)
references:
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: '{T1}'
  isExternal: false
  name: T1
  fullName: T1
- uid: '{T2}'
  isExternal: false
  name: T2
  fullName: T2
