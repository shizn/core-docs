items:
- uid: System.Collections.Hashtable
  commentId: T:System.Collections.Hashtable
  id: Hashtable
  parent: System.Collections
  children:
  - System.Collections.Hashtable.#ctor
  - System.Collections.Hashtable.#ctor(System.Collections.IDictionary)
  - System.Collections.Hashtable.#ctor(System.Collections.IDictionary,System.Collections.IEqualityComparer)
  - System.Collections.Hashtable.#ctor(System.Collections.IDictionary,System.Single)
  - System.Collections.Hashtable.#ctor(System.Collections.IDictionary,System.Single,System.Collections.IEqualityComparer)
  - System.Collections.Hashtable.#ctor(System.Collections.IEqualityComparer)
  - System.Collections.Hashtable.#ctor(System.Int32)
  - System.Collections.Hashtable.#ctor(System.Int32,System.Collections.IEqualityComparer)
  - System.Collections.Hashtable.#ctor(System.Int32,System.Single)
  - System.Collections.Hashtable.#ctor(System.Int32,System.Single,System.Collections.IEqualityComparer)
  - System.Collections.Hashtable.Add(System.Object,System.Object)
  - System.Collections.Hashtable.Clear
  - System.Collections.Hashtable.Clone
  - System.Collections.Hashtable.Contains(System.Object)
  - System.Collections.Hashtable.ContainsKey(System.Object)
  - System.Collections.Hashtable.ContainsValue(System.Object)
  - System.Collections.Hashtable.CopyTo(System.Array,System.Int32)
  - System.Collections.Hashtable.Count
  - System.Collections.Hashtable.EqualityComparer
  - System.Collections.Hashtable.GetEnumerator
  - System.Collections.Hashtable.GetHash(System.Object)
  - System.Collections.Hashtable.IsFixedSize
  - System.Collections.Hashtable.IsReadOnly
  - System.Collections.Hashtable.IsSynchronized
  - System.Collections.Hashtable.Item(System.Object)
  - System.Collections.Hashtable.KeyEquals(System.Object,System.Object)
  - System.Collections.Hashtable.Keys
  - System.Collections.Hashtable.Remove(System.Object)
  - System.Collections.Hashtable.Synchronized(System.Collections.Hashtable)
  - System.Collections.Hashtable.SyncRoot
  - System.Collections.Hashtable.Values
  langs:
  - csharp
  - vb
  name: Hashtable
  fullName: System.Collections.Hashtable
  type: Class
  source:
    remote:
      path: src/System.Collections.NonGeneric/src/System/Collections/Hashtable.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Hashtable
    path: src/System.Collections.NonGeneric/src/System/Collections/Hashtable.cs
    startLine: 54
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  summary: Represents a collection of key/value pairs that are organized based on the hash code of the key.To browse the .NET Framework source code for this type, see the Reference Source.
  syntax:
    content: 'public class Hashtable : ICollection, IDictionary, IEnumerable'
    content.vb: >-
      Public Class Hashtable
          Inherits ICollection
          Implements IDictionary, IEnumerable
  inheritance:
  - System.Object
  implements:
  - System.Collections.IDictionary
  - System.Collections.IEnumerable
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: System.Collections.Hashtable.#ctor
  commentId: M:System.Collections.Hashtable.#ctor
  id: '#ctor'
  parent: System.Collections.Hashtable
  langs:
  - csharp
  - vb
  name: Hashtable()
  fullName: System.Collections.Hashtable.Hashtable()
  type: Constructor
  source:
    remote:
      path: src/System.Collections.NonGeneric/src/System/Collections/Hashtable.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Collections.NonGeneric/src/System/Collections/Hashtable.cs
    startLine: 159
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  summary: Initializes a new, empty instance of the <xref href="System.Collections.Hashtable" data-throw-if-not-resolved="false"></xref> class using the default initial capacity, load factor, hash code provider, and comparer.
  syntax:
    content: public Hashtable()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Collections.Hashtable.#ctor(System.Collections.IDictionary)
  commentId: M:System.Collections.Hashtable.#ctor(System.Collections.IDictionary)
  id: '#ctor(System.Collections.IDictionary)'
  parent: System.Collections.Hashtable
  langs:
  - csharp
  - vb
  name: Hashtable(IDictionary)
  fullName: System.Collections.Hashtable.Hashtable(System.Collections.IDictionary)
  type: Constructor
  source:
    remote:
      path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
    startLine: 146
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  summary: Initializes a new instance of the <xref href="System.Collections.Hashtable" data-throw-if-not-resolved="false"></xref> class by copying the elements from the specified dictionary to the new <xref href="System.Collections.Hashtable" data-throw-if-not-resolved="false"></xref> object. The new <xref href="System.Collections.Hashtable" data-throw-if-not-resolved="false"></xref> object has an initial capacity equal to the number of elements copied, and uses the default load factor, hash code provider, and comparer.
  syntax:
    content: public Hashtable(IDictionary d)
    content.vb: Public Sub New(d As IDictionary)
    parameters:
    - id: d
      type: System.Collections.IDictionary
      description: 'The <xref href="System.Collections.IDictionary" data-throw-if-not-resolved="false"></xref> object to copy to a new <xref href="System.Collections.Hashtable" data-throw-if-not-resolved="false"></xref> object. '
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>d</em> is null. "
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Collections.Hashtable.#ctor(System.Collections.IDictionary,System.Collections.IEqualityComparer)
  commentId: M:System.Collections.Hashtable.#ctor(System.Collections.IDictionary,System.Collections.IEqualityComparer)
  id: '#ctor(System.Collections.IDictionary,System.Collections.IEqualityComparer)'
  parent: System.Collections.Hashtable
  langs:
  - csharp
  - vb
  name: Hashtable(IDictionary, IEqualityComparer)
  fullName: System.Collections.Hashtable.Hashtable(System.Collections.IDictionary, System.Collections.IEqualityComparer)
  type: Constructor
  source:
    remote:
      path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
    startLine: 147
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  summary: Initializes a new instance of the <xref href="System.Collections.Hashtable" data-throw-if-not-resolved="false"></xref> class by copying the elements from the specified dictionary to a new <xref href="System.Collections.Hashtable" data-throw-if-not-resolved="false"></xref> object. The new <xref href="System.Collections.Hashtable" data-throw-if-not-resolved="false"></xref> object has an initial capacity equal to the number of elements copied, and uses the default load factor and the specified <xref href="System.Collections.IEqualityComparer" data-throw-if-not-resolved="false"></xref> object.
  syntax:
    content: public Hashtable(IDictionary d, IEqualityComparer equalityComparer)
    content.vb: Public Sub New(d As IDictionary, equalityComparer As IEqualityComparer)
    parameters:
    - id: d
      type: System.Collections.IDictionary
      description: The <xref href="System.Collections.IDictionary" data-throw-if-not-resolved="false"></xref> object to copy to a new <xref href="System.Collections.Hashtable" data-throw-if-not-resolved="false"></xref> object.
    - id: equalityComparer
      type: System.Collections.IEqualityComparer
      description: 'The <xref href="System.Collections.IEqualityComparer" data-throw-if-not-resolved="false"></xref> object that defines the hash code provider and the comparer to use with the <xref href="System.Collections.Hashtable" data-throw-if-not-resolved="false"></xref>.-or- null to use the default hash code provider and the default comparer. The default hash code provider is each key''s implementation of <xref href="System.Object.GetHashCode" data-throw-if-not-resolved="false"></xref> and the default comparer is each key''s implementation of <xref href="System.Object.Equals(System.Object)" data-throw-if-not-resolved="false"></xref>. '
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>d</em> is null. "
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Collections.Hashtable.#ctor(System.Collections.IDictionary,System.Single)
  commentId: M:System.Collections.Hashtable.#ctor(System.Collections.IDictionary,System.Single)
  id: '#ctor(System.Collections.IDictionary,System.Single)'
  parent: System.Collections.Hashtable
  langs:
  - csharp
  - vb
  name: Hashtable(IDictionary, Single)
  fullName: System.Collections.Hashtable.Hashtable(System.Collections.IDictionary, System.Single)
  type: Constructor
  source:
    remote:
      path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
    startLine: 148
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  summary: Initializes a new instance of the <xref href="System.Collections.Hashtable" data-throw-if-not-resolved="false"></xref> class by copying the elements from the specified dictionary to the new <xref href="System.Collections.Hashtable" data-throw-if-not-resolved="false"></xref> object. The new <xref href="System.Collections.Hashtable" data-throw-if-not-resolved="false"></xref> object has an initial capacity equal to the number of elements copied, and uses the specified load factor, and the default hash code provider and comparer.
  syntax:
    content: public Hashtable(IDictionary d, float loadFactor)
    content.vb: Public Sub New(d As IDictionary, loadFactor As Single)
    parameters:
    - id: d
      type: System.Collections.IDictionary
      description: The <xref href="System.Collections.IDictionary" data-throw-if-not-resolved="false"></xref> object to copy to a new <xref href="System.Collections.Hashtable" data-throw-if-not-resolved="false"></xref> object.
    - id: loadFactor
      type: System.Single
      description: A number in the range from 0.1 through 1.0 that is multiplied by the default value which provides the best performance. The result is the maximum ratio of elements to buckets.
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>d</em> is null. "
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<em>loadFactor</em> is less than 0.1.-or- <em>loadFactor</em> is greater than 1.0. "
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Collections.Hashtable.#ctor(System.Collections.IDictionary,System.Single,System.Collections.IEqualityComparer)
  commentId: M:System.Collections.Hashtable.#ctor(System.Collections.IDictionary,System.Single,System.Collections.IEqualityComparer)
  id: '#ctor(System.Collections.IDictionary,System.Single,System.Collections.IEqualityComparer)'
  parent: System.Collections.Hashtable
  langs:
  - csharp
  - vb
  name: Hashtable(IDictionary, Single, IEqualityComparer)
  fullName: System.Collections.Hashtable.Hashtable(System.Collections.IDictionary, System.Single, System.Collections.IEqualityComparer)
  type: Constructor
  source:
    remote:
      path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
    startLine: 149
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  summary: Initializes a new instance of the <xref href="System.Collections.Hashtable" data-throw-if-not-resolved="false"></xref> class by copying the elements from the specified dictionary to the new <xref href="System.Collections.Hashtable" data-throw-if-not-resolved="false"></xref> object. The new <xref href="System.Collections.Hashtable" data-throw-if-not-resolved="false"></xref> object has an initial capacity equal to the number of elements copied, and uses the specified load factor and <xref href="System.Collections.IEqualityComparer" data-throw-if-not-resolved="false"></xref> object.
  syntax:
    content: public Hashtable(IDictionary d, float loadFactor, IEqualityComparer equalityComparer)
    content.vb: Public Sub New(d As IDictionary, loadFactor As Single, equalityComparer As IEqualityComparer)
    parameters:
    - id: d
      type: System.Collections.IDictionary
      description: The <xref href="System.Collections.IDictionary" data-throw-if-not-resolved="false"></xref> object to copy to a new <xref href="System.Collections.Hashtable" data-throw-if-not-resolved="false"></xref> object.
    - id: loadFactor
      type: System.Single
      description: A number in the range from 0.1 through 1.0 that is multiplied by the default value which provides the best performance. The result is the maximum ratio of elements to buckets.
    - id: equalityComparer
      type: System.Collections.IEqualityComparer
      description: 'The <xref href="System.Collections.IEqualityComparer" data-throw-if-not-resolved="false"></xref> object that defines the hash code provider and the comparer to use with the <xref href="System.Collections.Hashtable" data-throw-if-not-resolved="false"></xref>.-or- null to use the default hash code provider and the default comparer. The default hash code provider is each key''s implementation of <xref href="System.Object.GetHashCode" data-throw-if-not-resolved="false"></xref> and the default comparer is each key''s implementation of <xref href="System.Object.Equals(System.Object)" data-throw-if-not-resolved="false"></xref>. '
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>d</em> is null. "
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<em>loadFactor</em> is less than 0.1.-or- <em>loadFactor</em> is greater than 1.0. "
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Collections.Hashtable.#ctor(System.Collections.IEqualityComparer)
  commentId: M:System.Collections.Hashtable.#ctor(System.Collections.IEqualityComparer)
  id: '#ctor(System.Collections.IEqualityComparer)'
  parent: System.Collections.Hashtable
  langs:
  - csharp
  - vb
  name: Hashtable(IEqualityComparer)
  fullName: System.Collections.Hashtable.Hashtable(System.Collections.IEqualityComparer)
  type: Constructor
  source:
    remote:
      path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
    startLine: 150
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  summary: Initializes a new, empty instance of the <xref href="System.Collections.Hashtable" data-throw-if-not-resolved="false"></xref> class using the default initial capacity and load factor, and the specified <xref href="System.Collections.IEqualityComparer" data-throw-if-not-resolved="false"></xref> object.
  syntax:
    content: public Hashtable(IEqualityComparer equalityComparer)
    content.vb: Public Sub New(equalityComparer As IEqualityComparer)
    parameters:
    - id: equalityComparer
      type: System.Collections.IEqualityComparer
      description: 'The <xref href="System.Collections.IEqualityComparer" data-throw-if-not-resolved="false"></xref> object that defines the hash code provider and the comparer to use with the <xref href="System.Collections.Hashtable" data-throw-if-not-resolved="false"></xref> object.-or- null to use the default hash code provider and the default comparer. The default hash code provider is each key''s implementation of <xref href="System.Object.GetHashCode" data-throw-if-not-resolved="false"></xref> and the default comparer is each key''s implementation of <xref href="System.Object.Equals(System.Object)" data-throw-if-not-resolved="false"></xref>. '
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Collections.Hashtable.#ctor(System.Int32)
  commentId: M:System.Collections.Hashtable.#ctor(System.Int32)
  id: '#ctor(System.Int32)'
  parent: System.Collections.Hashtable
  langs:
  - csharp
  - vb
  name: Hashtable(Int32)
  fullName: System.Collections.Hashtable.Hashtable(System.Int32)
  type: Constructor
  source:
    remote:
      path: src/System.Collections.NonGeneric/src/System/Collections/Hashtable.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Collections.NonGeneric/src/System/Collections/Hashtable.cs
    startLine: 170
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  summary: Initializes a new, empty instance of the <xref href="System.Collections.Hashtable" data-throw-if-not-resolved="false"></xref> class using the specified initial capacity, and the default load factor, hash code provider, and comparer.
  syntax:
    content: public Hashtable(int capacity)
    content.vb: Public Sub New(capacity As Integer)
    parameters:
    - id: capacity
      type: System.Int32
      description: 'The approximate number of elements that the <xref href="System.Collections.Hashtable" data-throw-if-not-resolved="false"></xref> object can initially contain. '
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<em>capacity</em> is less than zero. "
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Collections.Hashtable.#ctor(System.Int32,System.Collections.IEqualityComparer)
  commentId: M:System.Collections.Hashtable.#ctor(System.Int32,System.Collections.IEqualityComparer)
  id: '#ctor(System.Int32,System.Collections.IEqualityComparer)'
  parent: System.Collections.Hashtable
  langs:
  - csharp
  - vb
  name: Hashtable(Int32, IEqualityComparer)
  fullName: System.Collections.Hashtable.Hashtable(System.Int32, System.Collections.IEqualityComparer)
  type: Constructor
  source:
    remote:
      path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
    startLine: 152
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  summary: Initializes a new, empty instance of the <xref href="System.Collections.Hashtable" data-throw-if-not-resolved="false"></xref> class using the specified initial capacity and <xref href="System.Collections.IEqualityComparer" data-throw-if-not-resolved="false"></xref>, and the default load factor.
  syntax:
    content: public Hashtable(int capacity, IEqualityComparer equalityComparer)
    content.vb: Public Sub New(capacity As Integer, equalityComparer As IEqualityComparer)
    parameters:
    - id: capacity
      type: System.Int32
      description: 'The approximate number of elements that the <xref href="System.Collections.Hashtable" data-throw-if-not-resolved="false"></xref> object can initially contain. '
    - id: equalityComparer
      type: System.Collections.IEqualityComparer
      description: 'The <xref href="System.Collections.IEqualityComparer" data-throw-if-not-resolved="false"></xref> object that defines the hash code provider and the comparer to use with the <xref href="System.Collections.Hashtable" data-throw-if-not-resolved="false"></xref>.-or- null to use the default hash code provider and the default comparer. The default hash code provider is each key''s implementation of <xref href="System.Object.GetHashCode" data-throw-if-not-resolved="false"></xref> and the default comparer is each key''s implementation of <xref href="System.Object.Equals(System.Object)" data-throw-if-not-resolved="false"></xref>. '
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<em>capacity</em> is less than zero. "
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Collections.Hashtable.#ctor(System.Int32,System.Single)
  commentId: M:System.Collections.Hashtable.#ctor(System.Int32,System.Single)
  id: '#ctor(System.Int32,System.Single)'
  parent: System.Collections.Hashtable
  langs:
  - csharp
  - vb
  name: Hashtable(Int32, Single)
  fullName: System.Collections.Hashtable.Hashtable(System.Int32, System.Single)
  type: Constructor
  source:
    remote:
      path: src/System.Collections.NonGeneric/src/System/Collections/Hashtable.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Collections.NonGeneric/src/System/Collections/Hashtable.cs
    startLine: 185
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  summary: Initializes a new, empty instance of the <xref href="System.Collections.Hashtable" data-throw-if-not-resolved="false"></xref> class using the specified initial capacity and load factor, and the default hash code provider and comparer.
  syntax:
    content: public Hashtable(int capacity, float loadFactor)
    content.vb: Public Sub New(capacity As Integer, loadFactor As Single)
    parameters:
    - id: capacity
      type: System.Int32
      description: 'The approximate number of elements that the <xref href="System.Collections.Hashtable" data-throw-if-not-resolved="false"></xref> object can initially contain. '
    - id: loadFactor
      type: System.Single
      description: 'A number in the range from 0.1 through 1.0 that is multiplied by the default value which provides the best performance. The result is the maximum ratio of elements to buckets. '
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<em>capacity</em> is less than zero.-or- <em>loadFactor</em> is less than 0.1.-or- <em>loadFactor</em> is greater than 1.0. "
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<em>capacity</em> is causing an overflow."
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Collections.Hashtable.#ctor(System.Int32,System.Single,System.Collections.IEqualityComparer)
  commentId: M:System.Collections.Hashtable.#ctor(System.Int32,System.Single,System.Collections.IEqualityComparer)
  id: '#ctor(System.Int32,System.Single,System.Collections.IEqualityComparer)'
  parent: System.Collections.Hashtable
  langs:
  - csharp
  - vb
  name: Hashtable(Int32, Single, IEqualityComparer)
  fullName: System.Collections.Hashtable.Hashtable(System.Int32, System.Single, System.Collections.IEqualityComparer)
  type: Constructor
  source:
    remote:
      path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
    startLine: 154
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  summary: Initializes a new, empty instance of the <xref href="System.Collections.Hashtable" data-throw-if-not-resolved="false"></xref> class using the specified initial capacity, load factor, and <xref href="System.Collections.IEqualityComparer" data-throw-if-not-resolved="false"></xref> object.
  syntax:
    content: public Hashtable(int capacity, float loadFactor, IEqualityComparer equalityComparer)
    content.vb: Public Sub New(capacity As Integer, loadFactor As Single, equalityComparer As IEqualityComparer)
    parameters:
    - id: capacity
      type: System.Int32
      description: 'The approximate number of elements that the <xref href="System.Collections.Hashtable" data-throw-if-not-resolved="false"></xref> object can initially contain. '
    - id: loadFactor
      type: System.Single
      description: A number in the range from 0.1 through 1.0 that is multiplied by the default value which provides the best performance. The result is the maximum ratio of elements to buckets.
    - id: equalityComparer
      type: System.Collections.IEqualityComparer
      description: 'The <xref href="System.Collections.IEqualityComparer" data-throw-if-not-resolved="false"></xref> object that defines the hash code provider and the comparer to use with the <xref href="System.Collections.Hashtable" data-throw-if-not-resolved="false"></xref>.-or- null to use the default hash code provider and the default comparer. The default hash code provider is each key''s implementation of <xref href="System.Object.GetHashCode" data-throw-if-not-resolved="false"></xref> and the default comparer is each key''s implementation of <xref href="System.Object.Equals(System.Object)" data-throw-if-not-resolved="false"></xref>. '
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<em>capacity</em> is less than zero.-or- <em>loadFactor</em> is less than 0.1.-or- <em>loadFactor</em> is greater than 1.0. "
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Collections.Hashtable.Count
  commentId: P:System.Collections.Hashtable.Count
  id: Count
  parent: System.Collections.Hashtable
  langs:
  - csharp
  - vb
  name: Count
  fullName: System.Collections.Hashtable.Count
  type: Property
  source:
    remote:
      path: src/System.Collections.NonGeneric/src/System/Collections/Hashtable.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Count
    path: src/System.Collections.NonGeneric/src/System/Collections/Hashtable.cs
    startLine: 993
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  summary: Gets the number of key/value pairs contained in the <xref href="System.Collections.Hashtable" data-throw-if-not-resolved="false"></xref>.
  syntax:
    content: public virtual int Count { get; }
    content.vb: Public Overridable ReadOnly Property Count As Integer
    parameters: []
    return:
      type: System.Int32
      description: The number of key/value pairs contained in the <xref href="System.Collections.Hashtable" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: System.Collections.Hashtable.EqualityComparer
  commentId: P:System.Collections.Hashtable.EqualityComparer
  id: EqualityComparer
  parent: System.Collections.Hashtable
  langs:
  - csharp
  - vb
  name: EqualityComparer
  fullName: System.Collections.Hashtable.EqualityComparer
  type: Property
  source:
    remote:
      path: src/System.Collections.NonGeneric/src/System/Collections/Hashtable.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: EqualityComparer
    path: src/System.Collections.NonGeneric/src/System/Collections/Hashtable.cs
    startLine: 143
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  summary: Gets the <xref href="System.Collections.IEqualityComparer" data-throw-if-not-resolved="false"></xref> to use for the <xref href="System.Collections.Hashtable" data-throw-if-not-resolved="false"></xref>.
  syntax:
    content: protected IEqualityComparer EqualityComparer { get; }
    content.vb: Protected ReadOnly Property EqualityComparer As IEqualityComparer
    parameters: []
    return:
      type: System.Collections.IEqualityComparer
      description: The <xref href="System.Collections.IEqualityComparer" data-throw-if-not-resolved="false"></xref> to use for the <xref href="System.Collections.Hashtable" data-throw-if-not-resolved="false"></xref>.
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: 'The property is set to a value, but the hash table was created using an <xref href="System.Collections.IHashCodeProvider" data-throw-if-not-resolved="false"></xref> and an <xref href="System.Collections.IComparer" data-throw-if-not-resolved="false"></xref>. '
  modifiers.csharp:
  - protected
  - get
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: System.Collections.Hashtable.IsFixedSize
  commentId: P:System.Collections.Hashtable.IsFixedSize
  id: IsFixedSize
  parent: System.Collections.Hashtable
  langs:
  - csharp
  - vb
  name: IsFixedSize
  fullName: System.Collections.Hashtable.IsFixedSize
  type: Property
  source:
    remote:
      path: src/System.Collections.NonGeneric/src/System/Collections/Hashtable.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IsFixedSize
    path: src/System.Collections.NonGeneric/src/System/Collections/Hashtable.cs
    startLine: 685
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  summary: Gets a value indicating whether the <xref href="System.Collections.Hashtable" data-throw-if-not-resolved="false"></xref> has a fixed size.
  syntax:
    content: public virtual bool IsFixedSize { get; }
    content.vb: Public Overridable ReadOnly Property IsFixedSize As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: true if the <xref href="System.Collections.Hashtable" data-throw-if-not-resolved="false"></xref> has a fixed size; otherwise, false. The default is false.
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: System.Collections.Hashtable.IsReadOnly
  commentId: P:System.Collections.Hashtable.IsReadOnly
  id: IsReadOnly
  parent: System.Collections.Hashtable
  langs:
  - csharp
  - vb
  name: IsReadOnly
  fullName: System.Collections.Hashtable.IsReadOnly
  type: Property
  source:
    remote:
      path: src/System.Collections.NonGeneric/src/System/Collections/Hashtable.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IsReadOnly
    path: src/System.Collections.NonGeneric/src/System/Collections/Hashtable.cs
    startLine: 680
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  summary: Gets a value indicating whether the <xref href="System.Collections.Hashtable" data-throw-if-not-resolved="false"></xref> is read-only.
  syntax:
    content: public virtual bool IsReadOnly { get; }
    content.vb: Public Overridable ReadOnly Property IsReadOnly As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: true if the <xref href="System.Collections.Hashtable" data-throw-if-not-resolved="false"></xref> is read-only; otherwise, false. The default is false.
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: System.Collections.Hashtable.IsSynchronized
  commentId: P:System.Collections.Hashtable.IsSynchronized
  id: IsSynchronized
  parent: System.Collections.Hashtable
  langs:
  - csharp
  - vb
  name: IsSynchronized
  fullName: System.Collections.Hashtable.IsSynchronized
  type: Property
  source:
    remote:
      path: src/System.Collections.NonGeneric/src/System/Collections/Hashtable.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IsSynchronized
    path: src/System.Collections.NonGeneric/src/System/Collections/Hashtable.cs
    startLine: 691
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  summary: Gets a value indicating whether access to the <xref href="System.Collections.Hashtable" data-throw-if-not-resolved="false"></xref> is synchronized (thread safe).
  syntax:
    content: public virtual bool IsSynchronized { get; }
    content.vb: Public Overridable ReadOnly Property IsSynchronized As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: true if access to the <xref href="System.Collections.Hashtable" data-throw-if-not-resolved="false"></xref> is synchronized (thread safe); otherwise, false. The default is false.
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: System.Collections.Hashtable.Item(System.Object)
  commentId: P:System.Collections.Hashtable.Item(System.Object)
  id: Item(System.Object)
  parent: System.Collections.Hashtable
  langs:
  - csharp
  - vb
  name: Item[Object]
  fullName: System.Collections.Hashtable.Item[System.Object]
  type: Property
  source:
    remote:
      path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: this[]
    path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
    startLine: 160
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  summary: Gets or sets the value associated with the specified key.
  syntax:
    content: public virtual object this[object key] { get; set; }
    content.vb: Public Overridable Property Item(key As Object) As Object
    parameters:
    - id: key
      type: System.Object
      description: 'The key whose value to get or set. '
    return:
      type: System.Object
      description: The value associated with the specified key. If the specified key is not found, attempting to get it returns null, and attempting to set it creates a new element using the specified key.
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>key</em> is null. "
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: 'The property is set and the <xref href="System.Collections.Hashtable" data-throw-if-not-resolved="false"></xref> is read-only.-or- The property is set, <em>key</em> does not exist in the collection, and the <xref href="System.Collections.Hashtable" data-throw-if-not-resolved="false"></xref> has a fixed size. '
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: System.Collections.Hashtable.Item(System.Object)
  name.vb: Item(Object)
- uid: System.Collections.Hashtable.Keys
  commentId: P:System.Collections.Hashtable.Keys
  id: Keys
  parent: System.Collections.Hashtable
  langs:
  - csharp
  - vb
  name: Keys
  fullName: System.Collections.Hashtable.Keys
  type: Property
  source:
    remote:
      path: src/System.Collections.NonGeneric/src/System/Collections/Hashtable.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Keys
    path: src/System.Collections.NonGeneric/src/System/Collections/Hashtable.cs
    startLine: 725
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  summary: Gets an <xref href="System.Collections.ICollection" data-throw-if-not-resolved="false"></xref> containing the keys in the <xref href="System.Collections.Hashtable" data-throw-if-not-resolved="false"></xref>.
  syntax:
    content: public virtual ICollection Keys { get; }
    content.vb: Public Overridable ReadOnly Property Keys As ICollection
    parameters: []
    return:
      type: System.Collections.ICollection
      description: An <xref href="System.Collections.ICollection" data-throw-if-not-resolved="false"></xref> containing the keys in the <xref href="System.Collections.Hashtable" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: System.Collections.Hashtable.SyncRoot
  commentId: P:System.Collections.Hashtable.SyncRoot
  id: SyncRoot
  parent: System.Collections.Hashtable
  langs:
  - csharp
  - vb
  name: SyncRoot
  fullName: System.Collections.Hashtable.SyncRoot
  type: Property
  source:
    remote:
      path: src/System.Collections.NonGeneric/src/System/Collections/Hashtable.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: SyncRoot
    path: src/System.Collections.NonGeneric/src/System/Collections/Hashtable.cs
    startLine: 979
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  summary: Gets an object that can be used to synchronize access to the <xref href="System.Collections.Hashtable" data-throw-if-not-resolved="false"></xref>.
  syntax:
    content: public virtual object SyncRoot { get; }
    content.vb: Public Overridable ReadOnly Property SyncRoot As Object
    parameters: []
    return:
      type: System.Object
      description: An object that can be used to synchronize access to the <xref href="System.Collections.Hashtable" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: System.Collections.Hashtable.Values
  commentId: P:System.Collections.Hashtable.Values
  id: Values
  parent: System.Collections.Hashtable
  langs:
  - csharp
  - vb
  name: Values
  fullName: System.Collections.Hashtable.Values
  type: Property
  source:
    remote:
      path: src/System.Collections.NonGeneric/src/System/Collections/Hashtable.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Values
    path: src/System.Collections.NonGeneric/src/System/Collections/Hashtable.cs
    startLine: 744
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  summary: Gets an <xref href="System.Collections.ICollection" data-throw-if-not-resolved="false"></xref> containing the values in the <xref href="System.Collections.Hashtable" data-throw-if-not-resolved="false"></xref>.
  syntax:
    content: public virtual ICollection Values { get; }
    content.vb: Public Overridable ReadOnly Property Values As ICollection
    parameters: []
    return:
      type: System.Collections.ICollection
      description: An <xref href="System.Collections.ICollection" data-throw-if-not-resolved="false"></xref> containing the values in the <xref href="System.Collections.Hashtable" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: System.Collections.Hashtable.Add(System.Object,System.Object)
  commentId: M:System.Collections.Hashtable.Add(System.Object,System.Object)
  id: Add(System.Object,System.Object)
  parent: System.Collections.Hashtable
  langs:
  - csharp
  - vb
  name: Add(Object, Object)
  fullName: System.Collections.Hashtable.Add(System.Object, System.Object)
  type: Method
  source:
    remote:
      path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Add
    path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
    startLine: 164
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  summary: Adds an element with the specified key and value into the <xref href="System.Collections.Hashtable" data-throw-if-not-resolved="false"></xref>.
  syntax:
    content: public virtual void Add(object key, object value)
    content.vb: Public Overridable Sub Add(key As Object, value As Object)
    parameters:
    - id: key
      type: System.Object
      description: 'The key of the element to add. '
    - id: value
      type: System.Object
      description: 'The value of the element to add. The value can be null. '
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>key</em> is null. "
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: 'An element with the same key already exists in the <xref href="System.Collections.Hashtable" data-throw-if-not-resolved="false"></xref>. '
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: 'The <xref href="System.Collections.Hashtable" data-throw-if-not-resolved="false"></xref> is read-only.-or- The <xref href="System.Collections.Hashtable" data-throw-if-not-resolved="false"></xref> has a fixed size. '
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Collections.Hashtable.Clear
  commentId: M:System.Collections.Hashtable.Clear
  id: Clear
  parent: System.Collections.Hashtable
  langs:
  - csharp
  - vb
  name: Clear()
  fullName: System.Collections.Hashtable.Clear()
  type: Method
  source:
    remote:
      path: src/System.Collections.NonGeneric/src/System/Collections/Hashtable.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Clear
    path: src/System.Collections.NonGeneric/src/System/Collections/Hashtable.cs
    startLine: 300
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  summary: Removes all elements from the <xref href="System.Collections.Hashtable" data-throw-if-not-resolved="false"></xref>.
  syntax:
    content: public virtual void Clear()
    content.vb: Public Overridable Sub Clear
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: 'The <xref href="System.Collections.Hashtable" data-throw-if-not-resolved="false"></xref> is read-only. '
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Collections.Hashtable.Clone
  commentId: M:System.Collections.Hashtable.Clone
  id: Clone
  parent: System.Collections.Hashtable
  langs:
  - csharp
  - vb
  name: Clone()
  fullName: System.Collections.Hashtable.Clone()
  type: Method
  source:
    remote:
      path: src/System.Collections.NonGeneric/src/System/Collections/Hashtable.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Clone
    path: src/System.Collections.NonGeneric/src/System/Collections/Hashtable.cs
    startLine: 324
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  summary: Creates a shallow copy of the <xref href="System.Collections.Hashtable" data-throw-if-not-resolved="false"></xref>.
  syntax:
    content: public virtual object Clone()
    content.vb: Public Overridable Function Clone As Object
    return:
      type: System.Object
      description: A shallow copy of the <xref href="System.Collections.Hashtable" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Collections.Hashtable.Contains(System.Object)
  commentId: M:System.Collections.Hashtable.Contains(System.Object)
  id: Contains(System.Object)
  parent: System.Collections.Hashtable
  langs:
  - csharp
  - vb
  name: Contains(Object)
  fullName: System.Collections.Hashtable.Contains(System.Object)
  type: Method
  source:
    remote:
      path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Contains
    path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
    startLine: 167
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  summary: Determines whether the <xref href="System.Collections.Hashtable" data-throw-if-not-resolved="false"></xref> contains a specific key.
  syntax:
    content: public virtual bool Contains(object key)
    content.vb: Public Overridable Function Contains(key As Object) As Boolean
    parameters:
    - id: key
      type: System.Object
      description: 'The key to locate in the <xref href="System.Collections.Hashtable" data-throw-if-not-resolved="false"></xref>. '
    return:
      type: System.Boolean
      description: true if the <xref href="System.Collections.Hashtable" data-throw-if-not-resolved="false"></xref> contains an element with the specified key; otherwise, false.
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>key</em> is null. "
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Collections.Hashtable.ContainsKey(System.Object)
  commentId: M:System.Collections.Hashtable.ContainsKey(System.Object)
  id: ContainsKey(System.Object)
  parent: System.Collections.Hashtable
  langs:
  - csharp
  - vb
  name: ContainsKey(Object)
  fullName: System.Collections.Hashtable.ContainsKey(System.Object)
  type: Method
  source:
    remote:
      path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ContainsKey
    path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
    startLine: 168
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  summary: Determines whether the <xref href="System.Collections.Hashtable" data-throw-if-not-resolved="false"></xref> contains a specific key.
  syntax:
    content: public virtual bool ContainsKey(object key)
    content.vb: Public Overridable Function ContainsKey(key As Object) As Boolean
    parameters:
    - id: key
      type: System.Object
      description: 'The key to locate in the <xref href="System.Collections.Hashtable" data-throw-if-not-resolved="false"></xref>. '
    return:
      type: System.Boolean
      description: true if the <xref href="System.Collections.Hashtable" data-throw-if-not-resolved="false"></xref> contains an element with the specified key; otherwise, false.
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>key</em> is null. "
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Collections.Hashtable.ContainsValue(System.Object)
  commentId: M:System.Collections.Hashtable.ContainsValue(System.Object)
  id: ContainsValue(System.Object)
  parent: System.Collections.Hashtable
  langs:
  - csharp
  - vb
  name: ContainsValue(Object)
  fullName: System.Collections.Hashtable.ContainsValue(System.Object)
  type: Method
  source:
    remote:
      path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ContainsValue
    path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
    startLine: 169
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  summary: Determines whether the <xref href="System.Collections.Hashtable" data-throw-if-not-resolved="false"></xref> contains a specific value.
  syntax:
    content: public virtual bool ContainsValue(object value)
    content.vb: Public Overridable Function ContainsValue(value As Object) As Boolean
    parameters:
    - id: value
      type: System.Object
      description: 'The value to locate in the <xref href="System.Collections.Hashtable" data-throw-if-not-resolved="false"></xref>. The value can be null. '
    return:
      type: System.Boolean
      description: true if the <xref href="System.Collections.Hashtable" data-throw-if-not-resolved="false"></xref> contains an element with the specified <em>value</em>; otherwise, false.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Collections.Hashtable.CopyTo(System.Array,System.Int32)
  commentId: M:System.Collections.Hashtable.CopyTo(System.Array,System.Int32)
  id: CopyTo(System.Array,System.Int32)
  parent: System.Collections.Hashtable
  langs:
  - csharp
  - vb
  name: CopyTo(Array, Int32)
  fullName: System.Collections.Hashtable.CopyTo(System.Array, System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CopyTo
    path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
    startLine: 170
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  summary: Copies the <xref href="System.Collections.Hashtable" data-throw-if-not-resolved="false"></xref> elements to a one-dimensional <xref href="System.Array" data-throw-if-not-resolved="false"></xref> instance at the specified index.
  syntax:
    content: public virtual void CopyTo(Array array, int arrayIndex)
    content.vb: Public Overridable Sub CopyTo(array As Array, arrayIndex As Integer)
    parameters:
    - id: array
      type: System.Array
      description: 'The one-dimensional <xref href="System.Array" data-throw-if-not-resolved="false"></xref> that is the destination of the <xref href="System.Collections.DictionaryEntry" data-throw-if-not-resolved="false"></xref> objects copied from <xref href="System.Collections.Hashtable" data-throw-if-not-resolved="false"></xref>. The <xref href="System.Array" data-throw-if-not-resolved="false"></xref> must have zero-based indexing. '
    - id: arrayIndex
      type: System.Int32
      description: 'The zero-based index in <em>array</em> at which copying begins. '
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>array</em> is null. "
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<em>arrayIndex</em> is less than zero. "
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<em>array</em> is multidimensional.-or- The number of elements in the source <xref href=\"System.Collections.Hashtable\" data-throw-if-not-resolved=\"false\"></xref> is greater than the available space from <em>arrayIndex</em> to the end of the destination <em>array</em>. "
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: 'The type of the source <xref href="System.Collections.Hashtable" data-throw-if-not-resolved="false"></xref> cannot be cast automatically to the type of the destination <em>array</em>. '
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Collections.Hashtable.GetEnumerator
  commentId: M:System.Collections.Hashtable.GetEnumerator
  id: GetEnumerator
  parent: System.Collections.Hashtable
  langs:
  - csharp
  - vb
  name: GetEnumerator()
  fullName: System.Collections.Hashtable.GetEnumerator()
  type: Method
  source:
    remote:
      path: src/System.Collections.NonGeneric/src/System/Collections/Hashtable.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetEnumerator
    path: src/System.Collections.NonGeneric/src/System/Collections/Hashtable.cs
    startLine: 664
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  summary: Returns an <xref href="System.Collections.IDictionaryEnumerator" data-throw-if-not-resolved="false"></xref> that iterates through the <xref href="System.Collections.Hashtable" data-throw-if-not-resolved="false"></xref>.
  syntax:
    content: public virtual IDictionaryEnumerator GetEnumerator()
    content.vb: Public Overridable Function GetEnumerator As IDictionaryEnumerator
    return:
      type: System.Collections.IDictionaryEnumerator
      description: An <xref href="System.Collections.IDictionaryEnumerator" data-throw-if-not-resolved="false"></xref> for the <xref href="System.Collections.Hashtable" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Collections.Hashtable.GetHash(System.Object)
  commentId: M:System.Collections.Hashtable.GetHash(System.Object)
  id: GetHash(System.Object)
  parent: System.Collections.Hashtable
  langs:
  - csharp
  - vb
  name: GetHash(Object)
  fullName: System.Collections.Hashtable.GetHash(System.Object)
  type: Method
  source:
    remote:
      path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetHash
    path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
    startLine: 172
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  summary: Returns the hash code for the specified key.
  syntax:
    content: protected virtual int GetHash(object key)
    content.vb: Protected Overridable Function GetHash(key As Object) As Integer
    parameters:
    - id: key
      type: System.Object
      description: 'The <xref href="System.Object" data-throw-if-not-resolved="false"></xref> for which a hash code is to be returned. '
    return:
      type: System.Int32
      description: The hash code for <em>key</em>.
  exceptions:
  - type: System.NullReferenceException
    commentId: T:System.NullReferenceException
    description: "\n<em>key</em> is null. "
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: System.Collections.Hashtable.KeyEquals(System.Object,System.Object)
  commentId: M:System.Collections.Hashtable.KeyEquals(System.Object,System.Object)
  id: KeyEquals(System.Object,System.Object)
  parent: System.Collections.Hashtable
  langs:
  - csharp
  - vb
  name: KeyEquals(Object, Object)
  fullName: System.Collections.Hashtable.KeyEquals(System.Object, System.Object)
  type: Method
  source:
    remote:
      path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: KeyEquals
    path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
    startLine: 173
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  summary: Compares a specific <xref href="System.Object" data-throw-if-not-resolved="false"></xref> with a specific key in the <xref href="System.Collections.Hashtable" data-throw-if-not-resolved="false"></xref>.
  syntax:
    content: protected virtual bool KeyEquals(object item, object key)
    content.vb: Protected Overridable Function KeyEquals(item As Object, key As Object) As Boolean
    parameters:
    - id: item
      type: System.Object
      description: 'The <xref href="System.Object" data-throw-if-not-resolved="false"></xref> to compare with <em>key</em>. '
    - id: key
      type: System.Object
      description: 'The key in the <xref href="System.Collections.Hashtable" data-throw-if-not-resolved="false"></xref> to compare with <em>item</em>. '
    return:
      type: System.Boolean
      description: true if <em>item</em> and <em>key</em> are equal; otherwise, false.
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>item</em> is null.-or- <em>key</em> is null. "
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: System.Collections.Hashtable.Remove(System.Object)
  commentId: M:System.Collections.Hashtable.Remove(System.Object)
  id: Remove(System.Object)
  parent: System.Collections.Hashtable
  langs:
  - csharp
  - vb
  name: Remove(Object)
  fullName: System.Collections.Hashtable.Remove(System.Object)
  type: Method
  source:
    remote:
      path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Remove
    path: src/System.Collections.NonGeneric/ref/System.Collections.NonGeneric.cs
    startLine: 174
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  summary: Removes the element with the specified key from the <xref href="System.Collections.Hashtable" data-throw-if-not-resolved="false"></xref>.
  syntax:
    content: public virtual void Remove(object key)
    content.vb: Public Overridable Sub Remove(key As Object)
    parameters:
    - id: key
      type: System.Object
      description: 'The key of the element to remove. '
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>key</em> is null. "
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: 'The <xref href="System.Collections.Hashtable" data-throw-if-not-resolved="false"></xref> is read-only.-or- The <xref href="System.Collections.Hashtable" data-throw-if-not-resolved="false"></xref> has a fixed size. '
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Collections.Hashtable.Synchronized(System.Collections.Hashtable)
  commentId: M:System.Collections.Hashtable.Synchronized(System.Collections.Hashtable)
  id: Synchronized(System.Collections.Hashtable)
  parent: System.Collections.Hashtable
  langs:
  - csharp
  - vb
  name: Synchronized(Hashtable)
  fullName: System.Collections.Hashtable.Synchronized(System.Collections.Hashtable)
  type: Method
  source:
    remote:
      path: src/System.Collections.NonGeneric/src/System/Collections/Hashtable.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Synchronized
    path: src/System.Collections.NonGeneric/src/System/Collections/Hashtable.cs
    startLine: 1000
  assemblies:
  - System.Collections.NonGeneric
  namespace: System.Collections
  summary: Returns a synchronized (thread-safe) wrapper for the <xref href="System.Collections.Hashtable" data-throw-if-not-resolved="false"></xref>.
  syntax:
    content: public static Hashtable Synchronized(Hashtable table)
    content.vb: Public Shared Function Synchronized(table As Hashtable) As Hashtable
    parameters:
    - id: table
      type: System.Collections.Hashtable
      description: 'The <xref href="System.Collections.Hashtable" data-throw-if-not-resolved="false"></xref> to synchronize. '
    return:
      type: System.Collections.Hashtable
      description: A synchronized (thread-safe) wrapper for the <xref href="System.Collections.Hashtable" data-throw-if-not-resolved="false"></xref>.
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>table</em> is null. "
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: System.Collections
  isExternal: false
  name: System.Collections
  fullName: System.Collections
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System.Collections.IDictionary
  parent: System.Collections
  isExternal: false
  name: IDictionary
  fullName: System.Collections.IDictionary
- uid: System.Collections.IEnumerable
  parent: System.Collections
  isExternal: false
  name: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Collections.IEqualityComparer
  parent: System.Collections
  isExternal: false
  name: IEqualityComparer
  fullName: System.Collections.IEqualityComparer
- uid: System.Single
  parent: System
  isExternal: false
  name: Single
  fullName: System.Single
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  fullName: System.Int32
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  fullName: System.Boolean
- uid: System.Collections.ICollection
  parent: System.Collections
  isExternal: false
  name: ICollection
  fullName: System.Collections.ICollection
- uid: System.Array
  parent: System
  isExternal: false
  name: Array
  fullName: System.Array
- uid: System.Collections.IDictionaryEnumerator
  parent: System.Collections
  isExternal: false
  name: IDictionaryEnumerator
  fullName: System.Collections.IDictionaryEnumerator
- uid: System.Collections.Hashtable
  parent: System.Collections
  isExternal: false
  name: Collections.Hashtable
  fullName: System.Collections.Hashtable
- uid: System.ArgumentNullException
  isExternal: false
  name: ArgumentNullException
  fullName: System.ArgumentNullException
- uid: System.ArgumentOutOfRangeException
  isExternal: false
  name: ArgumentOutOfRangeException
  fullName: System.ArgumentOutOfRangeException
- uid: System.ArgumentException
  parent: System
  isExternal: false
  name: ArgumentException
  fullName: System.ArgumentException
- uid: System.NotSupportedException
  parent: System
  isExternal: false
  name: NotSupportedException
  fullName: System.NotSupportedException
- uid: System.InvalidCastException
  isExternal: false
  name: InvalidCastException
  fullName: System.InvalidCastException
- uid: System.NullReferenceException
  isExternal: false
  name: NullReferenceException
  fullName: System.NullReferenceException
