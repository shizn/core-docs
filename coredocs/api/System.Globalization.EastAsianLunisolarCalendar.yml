items:
- uid: System.Globalization.EastAsianLunisolarCalendar
  commentId: T:System.Globalization.EastAsianLunisolarCalendar
  id: EastAsianLunisolarCalendar
  parent: System.Globalization
  children:
  - System.Globalization.EastAsianLunisolarCalendar.AddMonths(System.DateTime,System.Int32)
  - System.Globalization.EastAsianLunisolarCalendar.AddYears(System.DateTime,System.Int32)
  - System.Globalization.EastAsianLunisolarCalendar.GetCelestialStem(System.Int32)
  - System.Globalization.EastAsianLunisolarCalendar.GetDayOfMonth(System.DateTime)
  - System.Globalization.EastAsianLunisolarCalendar.GetDayOfWeek(System.DateTime)
  - System.Globalization.EastAsianLunisolarCalendar.GetDayOfYear(System.DateTime)
  - System.Globalization.EastAsianLunisolarCalendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)
  - System.Globalization.EastAsianLunisolarCalendar.GetDaysInYear(System.Int32,System.Int32)
  - System.Globalization.EastAsianLunisolarCalendar.GetLeapMonth(System.Int32,System.Int32)
  - System.Globalization.EastAsianLunisolarCalendar.GetMonth(System.DateTime)
  - System.Globalization.EastAsianLunisolarCalendar.GetMonthsInYear(System.Int32,System.Int32)
  - System.Globalization.EastAsianLunisolarCalendar.GetSexagenaryYear(System.DateTime)
  - System.Globalization.EastAsianLunisolarCalendar.GetTerrestrialBranch(System.Int32)
  - System.Globalization.EastAsianLunisolarCalendar.GetYear(System.DateTime)
  - System.Globalization.EastAsianLunisolarCalendar.IsLeapDay(System.Int32,System.Int32,System.Int32,System.Int32)
  - System.Globalization.EastAsianLunisolarCalendar.IsLeapMonth(System.Int32,System.Int32,System.Int32)
  - System.Globalization.EastAsianLunisolarCalendar.IsLeapYear(System.Int32,System.Int32)
  - System.Globalization.EastAsianLunisolarCalendar.ToDateTime(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  - System.Globalization.EastAsianLunisolarCalendar.ToFourDigitYear(System.Int32)
  - System.Globalization.EastAsianLunisolarCalendar.TwoDigitYearMax
  langs:
  - csharp
  - vb
  name: EastAsianLunisolarCalendar
  fullName: System.Globalization.EastAsianLunisolarCalendar
  type: Class
  source:
    remote:
      path: src/mscorlib/src/System/Globalization/EastAsianLunisolarCalendar.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: EastAsianLunisolarCalendar
    path: src/mscorlib/src/System/Globalization/EastAsianLunisolarCalendar.cs
    startLine: 15
  assemblies:
  - System.Globalization.Calendars
  namespace: System.Globalization
  summary: Represents a calendar that divides time into months, days, years, and eras, and has dates that are based on cycles of the sun and the moon.
  syntax:
    content: 'public abstract class EastAsianLunisolarCalendar : Calendar'
    content.vb: >-
      Public MustInherit Class EastAsianLunisolarCalendar
          Inherits Calendar
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: System.Globalization.EastAsianLunisolarCalendar.TwoDigitYearMax
  commentId: P:System.Globalization.EastAsianLunisolarCalendar.TwoDigitYearMax
  id: TwoDigitYearMax
  parent: System.Globalization.EastAsianLunisolarCalendar
  langs:
  - csharp
  - vb
  name: TwoDigitYearMax
  fullName: System.Globalization.EastAsianLunisolarCalendar.TwoDigitYearMax
  type: Property
  source:
    remote:
      path: src/mscorlib/src/System/Globalization/EastAsianLunisolarCalendar.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: TwoDigitYearMax
    path: src/mscorlib/src/System/Globalization/EastAsianLunisolarCalendar.cs
    startLine: 609
  assemblies:
  - System.Globalization.Calendars
  namespace: System.Globalization
  summary: Gets or sets the last year of a 100-year range that can be represented by a 2-digit year.
  syntax:
    content: public override int TwoDigitYearMax { get; set; }
    content.vb: Public Overrides Property TwoDigitYearMax As Integer
    parameters: []
    return:
      type: System.Int32
      description: The last year of a 100-year range that can be represented by a 2-digit year.
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: The current <xref href="System.Globalization.EastAsianLunisolarCalendar" data-throw-if-not-resolved="false"></xref>  is read-only.
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: The value in a set operation is less than 99 or greater than the maximum supported year in the current calendar.
  modifiers.csharp:
  - public
  - override
  - get
  - set
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Globalization.EastAsianLunisolarCalendar.AddMonths(System.DateTime,System.Int32)
  commentId: M:System.Globalization.EastAsianLunisolarCalendar.AddMonths(System.DateTime,System.Int32)
  id: AddMonths(System.DateTime,System.Int32)
  parent: System.Globalization.EastAsianLunisolarCalendar
  langs:
  - csharp
  - vb
  name: AddMonths(DateTime, Int32)
  fullName: System.Globalization.EastAsianLunisolarCalendar.AddMonths(System.DateTime, System.Int32)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Globalization/EastAsianLunisolarCalendar.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: AddMonths
    path: src/mscorlib/src/System/Globalization/EastAsianLunisolarCalendar.cs
    startLine: 398
  assemblies:
  - System.Globalization.Calendars
  namespace: System.Globalization
  summary: Calculates the date that is the specified number of months away from the specified date.
  syntax:
    content: public override DateTime AddMonths(DateTime time, int months)
    content.vb: Public Overrides Function AddMonths(time As DateTime, months As Integer) As DateTime
    parameters:
    - id: time
      type: System.DateTime
      description: 'The <xref href="System.DateTime" data-throw-if-not-resolved="false"></xref> to which to add <em>months</em>. '
    - id: months
      type: System.Int32
      description: 'The number of months to add. '
    return:
      type: System.DateTime
      description: A new <xref href="System.DateTime" data-throw-if-not-resolved="false"></xref> that results from adding the specified number of months to the <em>time</em> parameter.
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: 'The result is outside the supported range of a <xref href="System.DateTime" data-throw-if-not-resolved="false"></xref>. '
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<em>months</em> is less than -120000 or greater than 120000. -or-<em>time</em> is less than <xref href=\"System.Globalization.Calendar.MinSupportedDateTime\" data-throw-if-not-resolved=\"false\"></xref> or greater than <xref href=\"System.Globalization.Calendar.MaxSupportedDateTime\" data-throw-if-not-resolved=\"false\"></xref>."
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Globalization.EastAsianLunisolarCalendar.AddYears(System.DateTime,System.Int32)
  commentId: M:System.Globalization.EastAsianLunisolarCalendar.AddYears(System.DateTime,System.Int32)
  id: AddYears(System.DateTime,System.Int32)
  parent: System.Globalization.EastAsianLunisolarCalendar
  langs:
  - csharp
  - vb
  name: AddYears(DateTime, Int32)
  fullName: System.Globalization.EastAsianLunisolarCalendar.AddYears(System.DateTime, System.Int32)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Globalization/EastAsianLunisolarCalendar.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: AddYears
    path: src/mscorlib/src/System/Globalization/EastAsianLunisolarCalendar.cs
    startLine: 442
  assemblies:
  - System.Globalization.Calendars
  namespace: System.Globalization
  summary: Calculates the date that is the specified number of years away from the specified date.
  syntax:
    content: public override DateTime AddYears(DateTime time, int years)
    content.vb: Public Overrides Function AddYears(time As DateTime, years As Integer) As DateTime
    parameters:
    - id: time
      type: System.DateTime
      description: 'The <xref href="System.DateTime" data-throw-if-not-resolved="false"></xref> to which to add <em>years</em>. '
    - id: years
      type: System.Int32
      description: 'The number of years to add. '
    return:
      type: System.DateTime
      description: A new <xref href="System.DateTime" data-throw-if-not-resolved="false"></xref> that results from adding the specified number of years to the <em>time</em> parameter.
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: 'The result is outside the supported range of a <xref href="System.DateTime" data-throw-if-not-resolved="false"></xref>. '
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<em>time</em> is less than <xref href=\"System.Globalization.Calendar.MinSupportedDateTime\" data-throw-if-not-resolved=\"false\"></xref> or greater than <xref href=\"System.Globalization.Calendar.MaxSupportedDateTime\" data-throw-if-not-resolved=\"false\"></xref>."
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Globalization.EastAsianLunisolarCalendar.GetCelestialStem(System.Int32)
  commentId: M:System.Globalization.EastAsianLunisolarCalendar.GetCelestialStem(System.Int32)
  id: GetCelestialStem(System.Int32)
  parent: System.Globalization.EastAsianLunisolarCalendar
  langs:
  - csharp
  - vb
  name: GetCelestialStem(Int32)
  fullName: System.Globalization.EastAsianLunisolarCalendar.GetCelestialStem(System.Int32)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Globalization/EastAsianLunisolarCalendar.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: GetCelestialStem
    path: src/mscorlib/src/System/Globalization/EastAsianLunisolarCalendar.cs
    startLine: 64
  assemblies:
  - System.Globalization.Calendars
  namespace: System.Globalization
  summary: Calculates the celestial stem of the specified year in the sexagenary (60-year) cycle.
  syntax:
    content: public int GetCelestialStem(int sexagenaryYear)
    content.vb: Public Function GetCelestialStem(sexagenaryYear As Integer) As Integer
    parameters:
    - id: sexagenaryYear
      type: System.Int32
      description: 'An integer from 1 through 60 that represents a year in the sexagenary cycle. '
    return:
      type: System.Int32
      description: A number from 1 through 10.
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<em>sexagenaryYear</em> is less than 1 or greater than 60."
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Globalization.EastAsianLunisolarCalendar.GetDayOfMonth(System.DateTime)
  commentId: M:System.Globalization.EastAsianLunisolarCalendar.GetDayOfMonth(System.DateTime)
  id: GetDayOfMonth(System.DateTime)
  parent: System.Globalization.EastAsianLunisolarCalendar
  langs:
  - csharp
  - vb
  name: GetDayOfMonth(DateTime)
  fullName: System.Globalization.EastAsianLunisolarCalendar.GetDayOfMonth(System.DateTime)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Globalization/EastAsianLunisolarCalendar.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: GetDayOfMonth
    path: src/mscorlib/src/System/Globalization/EastAsianLunisolarCalendar.cs
    startLine: 485
  assemblies:
  - System.Globalization.Calendars
  namespace: System.Globalization
  summary: Calculates the day of the month in the specified date.
  syntax:
    content: public override int GetDayOfMonth(DateTime time)
    content.vb: Public Overrides Function GetDayOfMonth(time As DateTime) As Integer
    parameters:
    - id: time
      type: System.DateTime
      description: 'The <xref href="System.DateTime" data-throw-if-not-resolved="false"></xref> to read. '
    return:
      type: System.Int32
      description: An integer from 1 through 31 that represents the day of the month specified in the <em>time</em> parameter.
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Globalization.EastAsianLunisolarCalendar.GetDayOfWeek(System.DateTime)
  commentId: M:System.Globalization.EastAsianLunisolarCalendar.GetDayOfWeek(System.DateTime)
  id: GetDayOfWeek(System.DateTime)
  parent: System.Globalization.EastAsianLunisolarCalendar
  langs:
  - csharp
  - vb
  name: GetDayOfWeek(DateTime)
  fullName: System.Globalization.EastAsianLunisolarCalendar.GetDayOfWeek(System.DateTime)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Globalization/EastAsianLunisolarCalendar.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: GetDayOfWeek
    path: src/mscorlib/src/System/Globalization/EastAsianLunisolarCalendar.cs
    startLine: 541
  assemblies:
  - System.Globalization.Calendars
  namespace: System.Globalization
  summary: Calculates the day of the week in the specified date.
  syntax:
    content: public override DayOfWeek GetDayOfWeek(DateTime time)
    content.vb: Public Overrides Function GetDayOfWeek(time As DateTime) As DayOfWeek
    parameters:
    - id: time
      type: System.DateTime
      description: 'The <xref href="System.DateTime" data-throw-if-not-resolved="false"></xref> to read. '
    return:
      type: System.DayOfWeek
      description: One of the <xref href="System.DayOfWeek" data-throw-if-not-resolved="false"></xref> values that represents the day of the week specified in the <em>time</em> parameter.
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<em>time</em> is less than <xref href=\"System.Globalization.Calendar.MinSupportedDateTime\" data-throw-if-not-resolved=\"false\"></xref> or greater than <xref href=\"System.Globalization.Calendar.MaxSupportedDateTime\" data-throw-if-not-resolved=\"false\"></xref>."
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Globalization.EastAsianLunisolarCalendar.GetDayOfYear(System.DateTime)
  commentId: M:System.Globalization.EastAsianLunisolarCalendar.GetDayOfYear(System.DateTime)
  id: GetDayOfYear(System.DateTime)
  parent: System.Globalization.EastAsianLunisolarCalendar
  langs:
  - csharp
  - vb
  name: GetDayOfYear(DateTime)
  fullName: System.Globalization.EastAsianLunisolarCalendar.GetDayOfYear(System.DateTime)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Globalization/EastAsianLunisolarCalendar.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: GetDayOfYear
    path: src/mscorlib/src/System/Globalization/EastAsianLunisolarCalendar.cs
    startLine: 468
  assemblies:
  - System.Globalization.Calendars
  namespace: System.Globalization
  summary: Calculates the day of the year in the specified date.
  syntax:
    content: public override int GetDayOfYear(DateTime time)
    content.vb: Public Overrides Function GetDayOfYear(time As DateTime) As Integer
    parameters:
    - id: time
      type: System.DateTime
      description: 'The <xref href="System.DateTime" data-throw-if-not-resolved="false"></xref> to read. '
    return:
      type: System.Int32
      description: An integer from 1 through 354 in a common year, or 1 through 384 in a leap year, that represents the day of the year specified in the <em>time</em> parameter.
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Globalization.EastAsianLunisolarCalendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)
  commentId: M:System.Globalization.EastAsianLunisolarCalendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)
  id: GetDaysInMonth(System.Int32,System.Int32,System.Int32)
  parent: System.Globalization.EastAsianLunisolarCalendar
  langs:
  - csharp
  - vb
  name: GetDaysInMonth(Int32, Int32, Int32)
  fullName: System.Globalization.EastAsianLunisolarCalendar.GetDaysInMonth(System.Int32, System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Globalization/EastAsianLunisolarCalendar.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: GetDaysInMonth
    path: src/mscorlib/src/System/Globalization/EastAsianLunisolarCalendar.cs
    startLine: 220
  assemblies:
  - System.Globalization.Calendars
  namespace: System.Globalization
  summary: Calculates the number of days in the specified month of the specified year and era.
  syntax:
    content: public override int GetDaysInMonth(int year, int month, int era)
    content.vb: Public Overrides Function GetDaysInMonth(year As Integer, month As Integer, era As Integer) As Integer
    parameters:
    - id: year
      type: System.Int32
      description: 'An integer that represents the year. '
    - id: month
      type: System.Int32
      description: 'An integer from 1 through 12 in a common year, or 1 through 13 in a leap year, that represents the month. '
    - id: era
      type: System.Int32
      description: 'An integer that represents the era. '
    return:
      type: System.Int32
      description: The number of days in the specified month of the specified year and era.
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<em>year</em>, <em>month</em>, or <em>era</em> is outside the range supported by this calendar. "
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Globalization.EastAsianLunisolarCalendar.GetDaysInYear(System.Int32,System.Int32)
  commentId: M:System.Globalization.EastAsianLunisolarCalendar.GetDaysInYear(System.Int32,System.Int32)
  id: GetDaysInYear(System.Int32,System.Int32)
  parent: System.Globalization.EastAsianLunisolarCalendar
  langs:
  - csharp
  - vb
  name: GetDaysInYear(Int32, Int32)
  fullName: System.Globalization.EastAsianLunisolarCalendar.GetDaysInYear(System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Globalization/EastAsianLunisolarCalendar.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: GetDaysInYear
    path: src/mscorlib/src/System/Globalization/EastAsianLunisolarCalendar.cs
    startLine: 497
  assemblies:
  - System.Globalization.Calendars
  namespace: System.Globalization
  summary: Calculates the number of days in the specified year and era.
  syntax:
    content: public override int GetDaysInYear(int year, int era)
    content.vb: Public Overrides Function GetDaysInYear(year As Integer, era As Integer) As Integer
    parameters:
    - id: year
      type: System.Int32
      description: 'An integer that represents the year. '
    - id: era
      type: System.Int32
      description: 'An integer that represents the era. '
    return:
      type: System.Int32
      description: The number of days in the specified year and era.
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<em>year</em> or <em>era</em> is outside the range supported by this calendar. "
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Globalization.EastAsianLunisolarCalendar.GetLeapMonth(System.Int32,System.Int32)
  commentId: M:System.Globalization.EastAsianLunisolarCalendar.GetLeapMonth(System.Int32,System.Int32)
  id: GetLeapMonth(System.Int32,System.Int32)
  parent: System.Globalization.EastAsianLunisolarCalendar
  langs:
  - csharp
  - vb
  name: GetLeapMonth(Int32, Int32)
  fullName: System.Globalization.EastAsianLunisolarCalendar.GetLeapMonth(System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Globalization/EastAsianLunisolarCalendar.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: GetLeapMonth
    path: src/mscorlib/src/System/Globalization/EastAsianLunisolarCalendar.cs
    startLine: 584
  assemblies:
  - System.Globalization.Calendars
  namespace: System.Globalization
  summary: Calculates the leap month for the specified year and era.
  syntax:
    content: public override int GetLeapMonth(int year, int era)
    content.vb: Public Overrides Function GetLeapMonth(year As Integer, era As Integer) As Integer
    parameters:
    - id: year
      type: System.Int32
      description: An integer that represents the year.
    - id: era
      type: System.Int32
      description: An integer that represents the era.
    return:
      type: System.Int32
      description: A positive integer from 1 through 13 that indicates the leap month in the specified year and era. -or-Zero if this calendar does not support a leap month, or if the <em>year</em> and <em>era</em> parameters do not specify a leap year.
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Globalization.EastAsianLunisolarCalendar.GetMonth(System.DateTime)
  commentId: M:System.Globalization.EastAsianLunisolarCalendar.GetMonth(System.DateTime)
  id: GetMonth(System.DateTime)
  parent: System.Globalization.EastAsianLunisolarCalendar
  langs:
  - csharp
  - vb
  name: GetMonth(DateTime)
  fullName: System.Globalization.EastAsianLunisolarCalendar.GetMonth(System.DateTime)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Globalization/EastAsianLunisolarCalendar.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: GetMonth
    path: src/mscorlib/src/System/Globalization/EastAsianLunisolarCalendar.cs
    startLine: 513
  assemblies:
  - System.Globalization.Calendars
  namespace: System.Globalization
  summary: Returns the month in the specified date.
  syntax:
    content: public override int GetMonth(DateTime time)
    content.vb: Public Overrides Function GetMonth(time As DateTime) As Integer
    parameters:
    - id: time
      type: System.DateTime
      description: 'The <xref href="System.DateTime" data-throw-if-not-resolved="false"></xref> to read. '
    return:
      type: System.Int32
      description: An integer from 1 to 13 that represents the month specified in the <em>time</em> parameter.
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Globalization.EastAsianLunisolarCalendar.GetMonthsInYear(System.Int32,System.Int32)
  commentId: M:System.Globalization.EastAsianLunisolarCalendar.GetMonthsInYear(System.Int32,System.Int32)
  id: GetMonthsInYear(System.Int32,System.Int32)
  parent: System.Globalization.EastAsianLunisolarCalendar
  langs:
  - csharp
  - vb
  name: GetMonthsInYear(Int32, Int32)
  fullName: System.Globalization.EastAsianLunisolarCalendar.GetMonthsInYear(System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Globalization/EastAsianLunisolarCalendar.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: GetMonthsInYear
    path: src/mscorlib/src/System/Globalization/EastAsianLunisolarCalendar.cs
    startLine: 548
  assemblies:
  - System.Globalization.Calendars
  namespace: System.Globalization
  summary: Calculates the number of months in the specified year and era.
  syntax:
    content: public override int GetMonthsInYear(int year, int era)
    content.vb: Public Overrides Function GetMonthsInYear(year As Integer, era As Integer) As Integer
    parameters:
    - id: year
      type: System.Int32
      description: 'An integer that represents the year. '
    - id: era
      type: System.Int32
      description: 'An integer that represents the era. '
    return:
      type: System.Int32
      description: The number of months in the specified year in the specified era. The return value is 12 months in a common year or 13 months in a leap year.
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<em>year</em> or <em>era</em> is outside the range supported by this calendar. "
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Globalization.EastAsianLunisolarCalendar.GetSexagenaryYear(System.DateTime)
  commentId: M:System.Globalization.EastAsianLunisolarCalendar.GetSexagenaryYear(System.DateTime)
  id: GetSexagenaryYear(System.DateTime)
  parent: System.Globalization.EastAsianLunisolarCalendar
  langs:
  - csharp
  - vb
  name: GetSexagenaryYear(DateTime)
  fullName: System.Globalization.EastAsianLunisolarCalendar.GetSexagenaryYear(System.DateTime)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Globalization/EastAsianLunisolarCalendar.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: GetSexagenaryYear
    path: src/mscorlib/src/System/Globalization/EastAsianLunisolarCalendar.cs
    startLine: 51
  assemblies:
  - System.Globalization.Calendars
  namespace: System.Globalization
  summary: Calculates the year in the sexagenary (60-year) cycle that corresponds to the specified date.
  syntax:
    content: public virtual int GetSexagenaryYear(DateTime time)
    content.vb: Public Overridable Function GetSexagenaryYear(time As DateTime) As Integer
    parameters:
    - id: time
      type: System.DateTime
      description: A <xref href="System.DateTime" data-throw-if-not-resolved="false"></xref> to read.
    return:
      type: System.Int32
      description: A number from 1 through 60 in the sexagenary cycle that corresponds to the <em>date</em> parameter.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Globalization.EastAsianLunisolarCalendar.GetTerrestrialBranch(System.Int32)
  commentId: M:System.Globalization.EastAsianLunisolarCalendar.GetTerrestrialBranch(System.Int32)
  id: GetTerrestrialBranch(System.Int32)
  parent: System.Globalization.EastAsianLunisolarCalendar
  langs:
  - csharp
  - vb
  name: GetTerrestrialBranch(Int32)
  fullName: System.Globalization.EastAsianLunisolarCalendar.GetTerrestrialBranch(System.Int32)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Globalization/EastAsianLunisolarCalendar.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: GetTerrestrialBranch
    path: src/mscorlib/src/System/Globalization/EastAsianLunisolarCalendar.cs
    startLine: 79
  assemblies:
  - System.Globalization.Calendars
  namespace: System.Globalization
  summary: Calculates the terrestrial branch of the specified year in the sexagenary (60-year) cycle.
  syntax:
    content: public int GetTerrestrialBranch(int sexagenaryYear)
    content.vb: Public Function GetTerrestrialBranch(sexagenaryYear As Integer) As Integer
    parameters:
    - id: sexagenaryYear
      type: System.Int32
      description: An integer from 1 through 60 that represents a year in the sexagenary cycle.
    return:
      type: System.Int32
      description: An integer from 1 through 12.
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<em>sexagenaryYear</em> is less than 1 or greater than 60."
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Globalization.EastAsianLunisolarCalendar.GetYear(System.DateTime)
  commentId: M:System.Globalization.EastAsianLunisolarCalendar.GetYear(System.DateTime)
  id: GetYear(System.DateTime)
  parent: System.Globalization.EastAsianLunisolarCalendar
  langs:
  - csharp
  - vb
  name: GetYear(DateTime)
  fullName: System.Globalization.EastAsianLunisolarCalendar.GetYear(System.DateTime)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Globalization/EastAsianLunisolarCalendar.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: GetYear
    path: src/mscorlib/src/System/Globalization/EastAsianLunisolarCalendar.cs
    startLine: 526
  assemblies:
  - System.Globalization.Calendars
  namespace: System.Globalization
  summary: Returns the year in the specified date.
  syntax:
    content: public override int GetYear(DateTime time)
    content.vb: Public Overrides Function GetYear(time As DateTime) As Integer
    parameters:
    - id: time
      type: System.DateTime
      description: 'The <xref href="System.DateTime" data-throw-if-not-resolved="false"></xref> to read. '
    return:
      type: System.Int32
      description: An integer that represents the year in the specified <xref href="System.DateTime" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Globalization.EastAsianLunisolarCalendar.IsLeapDay(System.Int32,System.Int32,System.Int32,System.Int32)
  commentId: M:System.Globalization.EastAsianLunisolarCalendar.IsLeapDay(System.Int32,System.Int32,System.Int32,System.Int32)
  id: IsLeapDay(System.Int32,System.Int32,System.Int32,System.Int32)
  parent: System.Globalization.EastAsianLunisolarCalendar
  langs:
  - csharp
  - vb
  name: IsLeapDay(Int32, Int32, Int32, Int32)
  fullName: System.Globalization.EastAsianLunisolarCalendar.IsLeapDay(System.Int32, System.Int32, System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Globalization/EastAsianLunisolarCalendar.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: IsLeapDay
    path: src/mscorlib/src/System/Globalization/EastAsianLunisolarCalendar.cs
    startLine: 557
  assemblies:
  - System.Globalization.Calendars
  namespace: System.Globalization
  summary: Determines whether the specified date in the specified era is a leap day.
  syntax:
    content: public override bool IsLeapDay(int year, int month, int day, int era)
    content.vb: Public Overrides Function IsLeapDay(year As Integer, month As Integer, day As Integer, era As Integer) As Boolean
    parameters:
    - id: year
      type: System.Int32
      description: 'An integer that represents the year. '
    - id: month
      type: System.Int32
      description: 'An integer from 1 through 13 that represents the month. '
    - id: day
      type: System.Int32
      description: 'An integer from 1 through 31 that represents the day. '
    - id: era
      type: System.Int32
      description: 'An integer that represents the era. '
    return:
      type: System.Boolean
      description: true if the specified day is a leap day; otherwise, false.
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<em>year</em>, <em>month</em>, <em>day</em>, or <em>era</em> is outside the range supported by this calendar. "
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Globalization.EastAsianLunisolarCalendar.IsLeapMonth(System.Int32,System.Int32,System.Int32)
  commentId: M:System.Globalization.EastAsianLunisolarCalendar.IsLeapMonth(System.Int32,System.Int32,System.Int32)
  id: IsLeapMonth(System.Int32,System.Int32,System.Int32)
  parent: System.Globalization.EastAsianLunisolarCalendar
  langs:
  - csharp
  - vb
  name: IsLeapMonth(Int32, Int32, Int32)
  fullName: System.Globalization.EastAsianLunisolarCalendar.IsLeapMonth(System.Int32, System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Globalization/EastAsianLunisolarCalendar.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: IsLeapMonth
    path: src/mscorlib/src/System/Globalization/EastAsianLunisolarCalendar.cs
    startLine: 574
  assemblies:
  - System.Globalization.Calendars
  namespace: System.Globalization
  summary: Determines whether the specified month in the specified year and era is a leap month.
  syntax:
    content: public override bool IsLeapMonth(int year, int month, int era)
    content.vb: Public Overrides Function IsLeapMonth(year As Integer, month As Integer, era As Integer) As Boolean
    parameters:
    - id: year
      type: System.Int32
      description: 'An integer that represents the year. '
    - id: month
      type: System.Int32
      description: 'An integer from 1 through 13 that represents the month. '
    - id: era
      type: System.Int32
      description: 'An integer that represents the era. '
    return:
      type: System.Boolean
      description: true if the <em>month</em> parameter is a leap month; otherwise, false.
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<em>year</em>, <em>month</em>, or <em>era</em> is outside the range supported by this calendar. "
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Globalization.EastAsianLunisolarCalendar.IsLeapYear(System.Int32,System.Int32)
  commentId: M:System.Globalization.EastAsianLunisolarCalendar.IsLeapYear(System.Int32,System.Int32)
  id: IsLeapYear(System.Int32,System.Int32)
  parent: System.Globalization.EastAsianLunisolarCalendar
  langs:
  - csharp
  - vb
  name: IsLeapYear(Int32, Int32)
  fullName: System.Globalization.EastAsianLunisolarCalendar.IsLeapYear(System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Globalization/EastAsianLunisolarCalendar.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: IsLeapYear
    path: src/mscorlib/src/System/Globalization/EastAsianLunisolarCalendar.cs
    startLine: 601
  assemblies:
  - System.Globalization.Calendars
  namespace: System.Globalization
  summary: Determines whether the specified year in the specified era is a leap year.
  syntax:
    content: public override bool IsLeapYear(int year, int era)
    content.vb: Public Overrides Function IsLeapYear(year As Integer, era As Integer) As Boolean
    parameters:
    - id: year
      type: System.Int32
      description: 'An integer that represents the year. '
    - id: era
      type: System.Int32
      description: 'An integer that represents the era. '
    return:
      type: System.Boolean
      description: true if the specified year is a leap year; otherwise, false.
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<em>year</em> or <em>era</em> is outside the range supported by this calendar. "
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Globalization.EastAsianLunisolarCalendar.ToDateTime(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  commentId: M:System.Globalization.EastAsianLunisolarCalendar.ToDateTime(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  id: ToDateTime(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  parent: System.Globalization.EastAsianLunisolarCalendar
  langs:
  - csharp
  - vb
  name: ToDateTime(Int32, Int32, Int32, Int32, Int32, Int32, Int32, Int32)
  fullName: System.Globalization.EastAsianLunisolarCalendar.ToDateTime(System.Int32, System.Int32, System.Int32, System.Int32, System.Int32, System.Int32, System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Globalization/EastAsianLunisolarCalendar.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToDateTime
    path: src/mscorlib/src/System/Globalization/EastAsianLunisolarCalendar.cs
    startLine: 232
  assemblies:
  - System.Globalization.Calendars
  namespace: System.Globalization
  summary: Returns a <xref href="System.DateTime" data-throw-if-not-resolved="false"></xref> that is set to the specified date, time, and era.
  syntax:
    content: public override DateTime ToDateTime(int year, int month, int day, int hour, int minute, int second, int millisecond, int era)
    content.vb: Public Overrides Function ToDateTime(year As Integer, month As Integer, day As Integer, hour As Integer, minute As Integer, second As Integer, millisecond As Integer, era As Integer) As DateTime
    parameters:
    - id: year
      type: System.Int32
      description: 'An integer that represents the year. '
    - id: month
      type: System.Int32
      description: 'An integer from 1 through 13 that represents the month. '
    - id: day
      type: System.Int32
      description: 'An integer from 1 through 31 that represents the day. '
    - id: hour
      type: System.Int32
      description: 'An integer from 0 through 23 that represents the hour. '
    - id: minute
      type: System.Int32
      description: 'An integer from 0 through 59 that represents the minute. '
    - id: second
      type: System.Int32
      description: 'An integer from 0 through 59 that represents the second. '
    - id: millisecond
      type: System.Int32
      description: 'An integer from 0 through 999 that represents the millisecond. '
    - id: era
      type: System.Int32
      description: 'An integer that represents the era. '
    return:
      type: System.DateTime
      description: A <xref href="System.DateTime" data-throw-if-not-resolved="false"></xref> that is set to the specified date, time, and era.
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<em>year</em>, <em>month</em>, <em>day</em>, <em>hour</em>, <em>minute</em>, <em>second</em>, <em>millisecond</em>, or <em>era</em> is outside the range supported by this calendar. "
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Globalization.EastAsianLunisolarCalendar.ToFourDigitYear(System.Int32)
  commentId: M:System.Globalization.EastAsianLunisolarCalendar.ToFourDigitYear(System.Int32)
  id: ToFourDigitYear(System.Int32)
  parent: System.Globalization.EastAsianLunisolarCalendar
  langs:
  - csharp
  - vb
  name: ToFourDigitYear(Int32)
  fullName: System.Globalization.EastAsianLunisolarCalendar.ToFourDigitYear(System.Int32)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Globalization/EastAsianLunisolarCalendar.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToFourDigitYear
    path: src/mscorlib/src/System/Globalization/EastAsianLunisolarCalendar.cs
    startLine: 630
  assemblies:
  - System.Globalization.Calendars
  namespace: System.Globalization
  summary: Converts the specified year to a four-digit year.
  syntax:
    content: public override int ToFourDigitYear(int year)
    content.vb: Public Overrides Function ToFourDigitYear(year As Integer) As Integer
    parameters:
    - id: year
      type: System.Int32
      description: 'A two-digit or four-digit integer that represents the year to convert. '
    return:
      type: System.Int32
      description: An integer that contains the four-digit representation of the <em>year</em> parameter.
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<em>year</em> is outside the range supported by this calendar. "
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: System.Globalization
  isExternal: false
  name: System.Globalization
  fullName: System.Globalization
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  fullName: System.Int32
- uid: System.DateTime
  parent: System
  isExternal: false
  name: DateTime
  fullName: System.DateTime
- uid: System.DayOfWeek
  parent: System
  isExternal: false
  name: DayOfWeek
  fullName: System.DayOfWeek
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  fullName: System.Boolean
- uid: System.InvalidOperationException
  parent: System
  isExternal: false
  name: InvalidOperationException
  fullName: System.InvalidOperationException
- uid: System.ArgumentOutOfRangeException
  isExternal: false
  name: ArgumentOutOfRangeException
  fullName: System.ArgumentOutOfRangeException
- uid: System.ArgumentException
  parent: System
  isExternal: false
  name: ArgumentException
  fullName: System.ArgumentException
