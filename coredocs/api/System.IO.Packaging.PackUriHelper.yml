items:
- uid: System.IO.Packaging.PackUriHelper
  commentId: T:System.IO.Packaging.PackUriHelper
  id: PackUriHelper
  parent: System.IO.Packaging
  children:
  - System.IO.Packaging.PackUriHelper.ComparePartUri(System.Uri,System.Uri)
  - System.IO.Packaging.PackUriHelper.CreatePartUri(System.Uri)
  - System.IO.Packaging.PackUriHelper.GetNormalizedPartUri(System.Uri)
  - System.IO.Packaging.PackUriHelper.GetRelationshipPartUri(System.Uri)
  - System.IO.Packaging.PackUriHelper.GetRelativeUri(System.Uri,System.Uri)
  - System.IO.Packaging.PackUriHelper.GetSourcePartUriFromRelationshipPartUri(System.Uri)
  - System.IO.Packaging.PackUriHelper.IsRelationshipPartUri(System.Uri)
  - System.IO.Packaging.PackUriHelper.ResolvePartUri(System.Uri,System.Uri)
  - System.IO.Packaging.PackUriHelper.UriSchemePack
  langs:
  - csharp
  - vb
  name: PackUriHelper
  fullName: System.IO.Packaging.PackUriHelper
  type: Class
  source:
    remote:
      path: src/System.IO.Packaging/src/System/IO/Packaging/PackUriHelper.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: PackUriHelper
    path: src/System.IO.Packaging/src/System/IO/Packaging/PackUriHelper.cs
    startLine: 12
  assemblies:
  - System.IO.Packaging
  namespace: System.IO.Packaging
  summary: Provides utility methods to compose and parse pack URI objects.
  syntax:
    content: 'public class PackUriHelper : object'
    content.vb: >-
      Public Class PackUriHelper
          Inherits Object
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: System.IO.Packaging.PackUriHelper.UriSchemePack
  commentId: F:System.IO.Packaging.PackUriHelper.UriSchemePack
  id: UriSchemePack
  parent: System.IO.Packaging.PackUriHelper
  langs:
  - csharp
  - vb
  name: UriSchemePack
  fullName: System.IO.Packaging.PackUriHelper.UriSchemePack
  type: Field
  source:
    remote:
      path: src/System.IO.Packaging/src/System/IO/Packaging/PackUriHelper.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: UriSchemePack
    path: src/System.IO.Packaging/src/System/IO/Packaging/PackUriHelper.cs
    startLine: 610
  assemblies:
  - System.IO.Packaging
  namespace: System.IO.Packaging
  summary: Defines the pack URI scheme name "pack".
  syntax:
    content: public static readonly string UriSchemePack
    content.vb: Public Shared ReadOnly UriSchemePack As String
    return:
      type: System.String
      description: The pack URI scheme name string "pack".
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: System.IO.Packaging.PackUriHelper.ComparePartUri(System.Uri,System.Uri)
  commentId: M:System.IO.Packaging.PackUriHelper.ComparePartUri(System.Uri,System.Uri)
  id: ComparePartUri(System.Uri,System.Uri)
  parent: System.IO.Packaging.PackUriHelper
  langs:
  - csharp
  - vb
  name: ComparePartUri(Uri, Uri)
  fullName: System.IO.Packaging.PackUriHelper.ComparePartUri(System.Uri, System.Uri)
  type: Method
  source:
    remote:
      path: src/System.IO.Packaging/ref/System.IO.Packaging.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ComparePartUri
    path: src/System.IO.Packaging/ref/System.IO.Packaging.cs
    startLine: 155
  assemblies:
  - System.IO.Packaging
  namespace: System.IO.Packaging
  summary: "Returns a value that indicates whether two package part URIs are equivalent."
  syntax:
    content: public static int ComparePartUri(Uri firstPartUri, Uri secondPartUri)
    content.vb: Public Shared Function ComparePartUri(firstPartUri As Uri, secondPartUri As Uri) As Integer
    parameters:
    - id: firstPartUri
      type: System.Uri
      description: The URI of the first <xref href="System.IO.Packaging.PackagePart" data-throw-if-not-resolved="false"></xref>.
    - id: secondPartUri
      type: System.Uri
      description: The URI of the second <xref href="System.IO.Packaging.PackagePart" data-throw-if-not-resolved="false"></xref>.
    return:
      type: System.Int32
      description: A value that indicates the relationship between <em>firstPartUri</em> and <em>secondPartUri</em>.ValueMeaningLess than 0<em>firstPartUri</em> is less than <em>secondPartUri</em>.0<em>firstPartUri</em> is equivalent to <em>secondPartUri</em>.Greater than 0<em>firstPartUri</em> is greater than <em>secondPartUri</em>.
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<em>firstPartUri</em> or <em>secondPartUri</em> is not a valid part URI syntax."
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.IO.Packaging.PackUriHelper.CreatePartUri(System.Uri)
  commentId: M:System.IO.Packaging.PackUriHelper.CreatePartUri(System.Uri)
  id: CreatePartUri(System.Uri)
  parent: System.IO.Packaging.PackUriHelper
  langs:
  - csharp
  - vb
  name: CreatePartUri(Uri)
  fullName: System.IO.Packaging.PackUriHelper.CreatePartUri(System.Uri)
  type: Method
  source:
    remote:
      path: src/System.IO.Packaging/ref/System.IO.Packaging.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CreatePartUri
    path: src/System.IO.Packaging/ref/System.IO.Packaging.cs
    startLine: 156
  assemblies:
  - System.IO.Packaging
  namespace: System.IO.Packaging
  summary: 'Creates a formatted <xref href="System.IO.Packaging.PackagePart" data-throw-if-not-resolved="false"></xref> URI. '
  syntax:
    content: public static Uri CreatePartUri(Uri partUri)
    content.vb: Public Shared Function CreatePartUri(partUri As Uri) As Uri
    parameters:
    - id: partUri
      type: System.Uri
      description: The URI of the <xref href="System.IO.Packaging.PackagePart" data-throw-if-not-resolved="false"></xref> within the package.
    return:
      type: System.Uri
      description: A formatted <xref href="System.IO.Packaging.PackagePart" data-throw-if-not-resolved="false"></xref> URI.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.IO.Packaging.PackUriHelper.GetNormalizedPartUri(System.Uri)
  commentId: M:System.IO.Packaging.PackUriHelper.GetNormalizedPartUri(System.Uri)
  id: GetNormalizedPartUri(System.Uri)
  parent: System.IO.Packaging.PackUriHelper
  langs:
  - csharp
  - vb
  name: GetNormalizedPartUri(Uri)
  fullName: System.IO.Packaging.PackUriHelper.GetNormalizedPartUri(System.Uri)
  type: Method
  source:
    remote:
      path: src/System.IO.Packaging/ref/System.IO.Packaging.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetNormalizedPartUri
    path: src/System.IO.Packaging/ref/System.IO.Packaging.cs
    startLine: 157
  assemblies:
  - System.IO.Packaging
  namespace: System.IO.Packaging
  summary: 'Returns the normalized form of a specified <xref href="System.IO.Packaging.PackagePart" data-throw-if-not-resolved="false"></xref> URI. '
  syntax:
    content: public static Uri GetNormalizedPartUri(Uri partUri)
    content.vb: Public Shared Function GetNormalizedPartUri(partUri As Uri) As Uri
    parameters:
    - id: partUri
      type: System.Uri
      description: The <xref href="System.IO.Packaging.PackagePart" data-throw-if-not-resolved="false"></xref> URI to normalize.
    return:
      type: System.Uri
      description: The normalized form of the given <em>partUri</em>.
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>partUri</em> is null."
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.IO.Packaging.PackUriHelper.GetRelationshipPartUri(System.Uri)
  commentId: M:System.IO.Packaging.PackUriHelper.GetRelationshipPartUri(System.Uri)
  id: GetRelationshipPartUri(System.Uri)
  parent: System.IO.Packaging.PackUriHelper
  langs:
  - csharp
  - vb
  name: GetRelationshipPartUri(Uri)
  fullName: System.IO.Packaging.PackUriHelper.GetRelationshipPartUri(System.Uri)
  type: Method
  source:
    remote:
      path: src/System.IO.Packaging/ref/System.IO.Packaging.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetRelationshipPartUri
    path: src/System.IO.Packaging/ref/System.IO.Packaging.cs
    startLine: 158
  assemblies:
  - System.IO.Packaging
  namespace: System.IO.Packaging
  summary: "Returns the URI of the relationship part associated with a specified <xref href=\"System.IO.Packaging.PackagePart\" data-throw-if-not-resolved=\"false\"></xref>."
  syntax:
    content: public static Uri GetRelationshipPartUri(Uri partUri)
    content.vb: Public Shared Function GetRelationshipPartUri(partUri As Uri) As Uri
    parameters:
    - id: partUri
      type: System.Uri
      description: The <xref href="System.IO.Packaging.PackagePart.Uri" data-throw-if-not-resolved="false"></xref> of the <xref href="System.IO.Packaging.PackagePart" data-throw-if-not-resolved="false"></xref> to return the URI for the associated <xref href="System.IO.Packaging.PackageRelationship" data-throw-if-not-resolved="false"></xref>.
    return:
      type: System.Uri
      description: The URI of the <xref href="System.IO.Packaging.PackageRelationship" data-throw-if-not-resolved="false"></xref> part associated with the <xref href="System.IO.Packaging.PackagePart" data-throw-if-not-resolved="false"></xref> identified by <em>partUri</em>.
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>partUri</em> is null."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<em>partUri</em> syntax is not valid for a package part URI.-or-<em>partUri</em> is an absolute URI.-or-<em>partUri</em> references a relationship part."
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.IO.Packaging.PackUriHelper.GetRelativeUri(System.Uri,System.Uri)
  commentId: M:System.IO.Packaging.PackUriHelper.GetRelativeUri(System.Uri,System.Uri)
  id: GetRelativeUri(System.Uri,System.Uri)
  parent: System.IO.Packaging.PackUriHelper
  langs:
  - csharp
  - vb
  name: GetRelativeUri(Uri, Uri)
  fullName: System.IO.Packaging.PackUriHelper.GetRelativeUri(System.Uri, System.Uri)
  type: Method
  source:
    remote:
      path: src/System.IO.Packaging/ref/System.IO.Packaging.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetRelativeUri
    path: src/System.IO.Packaging/ref/System.IO.Packaging.cs
    startLine: 159
  assemblies:
  - System.IO.Packaging
  namespace: System.IO.Packaging
  summary: "Returns the relative URI between two specified <xref href=\"System.IO.Packaging.PackagePart\" data-throw-if-not-resolved=\"false\"></xref> URIs."
  syntax:
    content: public static Uri GetRelativeUri(Uri sourcePartUri, Uri targetPartUri)
    content.vb: Public Shared Function GetRelativeUri(sourcePartUri As Uri, targetPartUri As Uri) As Uri
    parameters:
    - id: sourcePartUri
      type: System.Uri
      description: The URI of the source part.
    - id: targetPartUri
      type: System.Uri
      description: The URI of the target part.
    return:
      type: System.Uri
      description: The relative URI from <em>sourcePartUri</em> to <em>targetPartUri</em>.
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>sourcePartUri</em> or <em>targetPartUri</em> is null."
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.IO.Packaging.PackUriHelper.GetSourcePartUriFromRelationshipPartUri(System.Uri)
  commentId: M:System.IO.Packaging.PackUriHelper.GetSourcePartUriFromRelationshipPartUri(System.Uri)
  id: GetSourcePartUriFromRelationshipPartUri(System.Uri)
  parent: System.IO.Packaging.PackUriHelper
  langs:
  - csharp
  - vb
  name: GetSourcePartUriFromRelationshipPartUri(Uri)
  fullName: System.IO.Packaging.PackUriHelper.GetSourcePartUriFromRelationshipPartUri(System.Uri)
  type: Method
  source:
    remote:
      path: src/System.IO.Packaging/ref/System.IO.Packaging.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetSourcePartUriFromRelationshipPartUri
    path: src/System.IO.Packaging/ref/System.IO.Packaging.cs
    startLine: 160
  assemblies:
  - System.IO.Packaging
  namespace: System.IO.Packaging
  summary: Returns the <xref href="System.IO.Packaging.PackageRelationship.SourceUri" data-throw-if-not-resolved="false"></xref> from the <xref href="System.IO.Packaging.PackageRelationship" data-throw-if-not-resolved="false"></xref> with a specified URI.
  syntax:
    content: public static Uri GetSourcePartUriFromRelationshipPartUri(Uri relationshipPartUri)
    content.vb: Public Shared Function GetSourcePartUriFromRelationshipPartUri(relationshipPartUri As Uri) As Uri
    parameters:
    - id: relationshipPartUri
      type: System.Uri
      description: The URI of the relationship part to return the <xref href="System.IO.Packaging.PackageRelationship.SourceUri" data-throw-if-not-resolved="false"></xref> from.
    return:
      type: System.Uri
      description: The <xref href="System.IO.Packaging.PackageRelationship.SourceUri" data-throw-if-not-resolved="false"></xref> of the <xref href="System.IO.Packaging.PackagePart" data-throw-if-not-resolved="false"></xref> from the relationship with the specified <em>relationshipPartUri</em>.
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>relationshipPartUri</em> is null."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<em>relationshipPartUri</em> is an absolute URI.-or-<em>relationshipPartUri</em> syntax is not valid for a <xref href=\"System.IO.Packaging.PackagePart\" data-throw-if-not-resolved=\"false\"></xref>.-or-<em>relationshipPartUri</em> does not reference a relationship part.-or-The <xref href=\"System.IO.Packaging.PackageRelationship.SourceUri\" data-throw-if-not-resolved=\"false\"></xref> of the relationship part references another relationship part (not valid, see Remarks)."
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.IO.Packaging.PackUriHelper.IsRelationshipPartUri(System.Uri)
  commentId: M:System.IO.Packaging.PackUriHelper.IsRelationshipPartUri(System.Uri)
  id: IsRelationshipPartUri(System.Uri)
  parent: System.IO.Packaging.PackUriHelper
  langs:
  - csharp
  - vb
  name: IsRelationshipPartUri(Uri)
  fullName: System.IO.Packaging.PackUriHelper.IsRelationshipPartUri(System.Uri)
  type: Method
  source:
    remote:
      path: src/System.IO.Packaging/ref/System.IO.Packaging.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IsRelationshipPartUri
    path: src/System.IO.Packaging/ref/System.IO.Packaging.cs
    startLine: 161
  assemblies:
  - System.IO.Packaging
  namespace: System.IO.Packaging
  summary: Returns a value that indicates whether a specified URI is the URI of a <xref href="System.IO.Packaging.PackageRelationship" data-throw-if-not-resolved="false"></xref> part.
  syntax:
    content: public static bool IsRelationshipPartUri(Uri partUri)
    content.vb: Public Shared Function IsRelationshipPartUri(partUri As Uri) As Boolean
    parameters:
    - id: partUri
      type: System.Uri
      description: The URI to check for a <xref href="System.IO.Packaging.PackageRelationship" data-throw-if-not-resolved="false"></xref> part.
    return:
      type: System.Boolean
      description: true if <em>partUri</em> identifies a <xref href="System.IO.Packaging.PackageRelationship" data-throw-if-not-resolved="false"></xref> part; otherwise, false.
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>partUri</em> is null."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<em>partUri</em> is an absolute URI.-or-<em>partUri</em> is an invalid <xref href=\"System.IO.Packaging.PackagePart\" data-throw-if-not-resolved=\"false\"></xref> syntax."
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.IO.Packaging.PackUriHelper.ResolvePartUri(System.Uri,System.Uri)
  commentId: M:System.IO.Packaging.PackUriHelper.ResolvePartUri(System.Uri,System.Uri)
  id: ResolvePartUri(System.Uri,System.Uri)
  parent: System.IO.Packaging.PackUriHelper
  langs:
  - csharp
  - vb
  name: ResolvePartUri(Uri, Uri)
  fullName: System.IO.Packaging.PackUriHelper.ResolvePartUri(System.Uri, System.Uri)
  type: Method
  source:
    remote:
      path: src/System.IO.Packaging/ref/System.IO.Packaging.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ResolvePartUri
    path: src/System.IO.Packaging/ref/System.IO.Packaging.cs
    startLine: 162
  assemblies:
  - System.IO.Packaging
  namespace: System.IO.Packaging
  summary: Returns a part URI given a source part URI and a URI with a relative path to a target part.
  syntax:
    content: public static Uri ResolvePartUri(Uri sourcePartUri, Uri targetUri)
    content.vb: Public Shared Function ResolvePartUri(sourcePartUri As Uri, targetUri As Uri) As Uri
    parameters:
    - id: sourcePartUri
      type: System.Uri
      description: The URI of the source part, or "/" to designate the <xref href="System.IO.Packaging.Package" data-throw-if-not-resolved="false"></xref> root.
    - id: targetUri
      type: System.Uri
      description: The relative URI to the target part.
    return:
      type: System.Uri
      description: The URI of the target part resolved between the specified <em>SourcePartUri</em> and the <em>targetUri</em> parameters.
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>sourcePartUri</em> or <em>targetUri</em> is null."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<em>sourcePartUri</em> is not a valid part URI.-or-<em>targetUri</em> is not a valid relative URI."
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: System.IO.Packaging
  isExternal: false
  name: System.IO.Packaging
  fullName: System.IO.Packaging
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.String
  parent: System
  isExternal: false
  name: String
  fullName: System.String
- uid: System.Uri
  parent: System
  isExternal: false
  name: Uri
  fullName: System.Uri
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  fullName: System.Int32
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  fullName: System.Boolean
- uid: System.ArgumentException
  parent: System
  isExternal: false
  name: ArgumentException
  fullName: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: false
  name: ArgumentNullException
  fullName: System.ArgumentNullException
