items:
- uid: System.Security.Cryptography.X509Certificates.OpenFlags
  commentId: T:System.Security.Cryptography.X509Certificates.OpenFlags
  id: OpenFlags
  parent: System.Security.Cryptography.X509Certificates
  children:
  - System.Security.Cryptography.X509Certificates.OpenFlags.IncludeArchived
  - System.Security.Cryptography.X509Certificates.OpenFlags.MaxAllowed
  - System.Security.Cryptography.X509Certificates.OpenFlags.OpenExistingOnly
  - System.Security.Cryptography.X509Certificates.OpenFlags.ReadOnly
  - System.Security.Cryptography.X509Certificates.OpenFlags.ReadWrite
  langs:
  - csharp
  - vb
  name: OpenFlags
  fullName: System.Security.Cryptography.X509Certificates.OpenFlags
  type: Enum
  source:
    remote:
      path: src/System.Security.Cryptography.X509Certificates/src/System/Security/Cryptography/X509Certificates/OpenFlags.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: OpenFlags
    path: src/System.Security.Cryptography.X509Certificates/src/System/Security/Cryptography/X509Certificates/OpenFlags.cs
    startLine: 12
  assemblies:
  - System.Security.Cryptography.X509Certificates
  namespace: System.Security.Cryptography.X509Certificates
  summary: Specifies the way to open the X.509 certificate store.
  syntax:
    content: 'public enum OpenFlags : int'
    content.vb: Public Enum OpenFlags As Integer
  modifiers.csharp:
  - public
  - enum
  modifiers.vb:
  - Public
  - Enum
- uid: System.Security.Cryptography.X509Certificates.OpenFlags.IncludeArchived
  commentId: F:System.Security.Cryptography.X509Certificates.OpenFlags.IncludeArchived
  id: IncludeArchived
  parent: System.Security.Cryptography.X509Certificates.OpenFlags
  langs:
  - csharp
  - vb
  name: IncludeArchived
  fullName: System.Security.Cryptography.X509Certificates.OpenFlags.IncludeArchived
  type: Field
  source:
    remote:
      path: src/System.Security.Cryptography.X509Certificates/src/System/Security/Cryptography/X509Certificates/OpenFlags.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IncludeArchived
    path: src/System.Security.Cryptography.X509Certificates/src/System/Security/Cryptography/X509Certificates/OpenFlags.cs
    startLine: 19
  assemblies:
  - System.Security.Cryptography.X509Certificates
  namespace: System.Security.Cryptography.X509Certificates
  summary: Open the X.509 certificate store and include archived certificates.
  syntax:
    content: IncludeArchived = null
    content.vb: IncludeArchived = Nothing
    return:
      type: System.Security.Cryptography.X509Certificates.OpenFlags
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Security.Cryptography.X509Certificates.OpenFlags.MaxAllowed
  commentId: F:System.Security.Cryptography.X509Certificates.OpenFlags.MaxAllowed
  id: MaxAllowed
  parent: System.Security.Cryptography.X509Certificates.OpenFlags
  langs:
  - csharp
  - vb
  name: MaxAllowed
  fullName: System.Security.Cryptography.X509Certificates.OpenFlags.MaxAllowed
  type: Field
  source:
    remote:
      path: src/System.Security.Cryptography.X509Certificates/src/System/Security/Cryptography/X509Certificates/OpenFlags.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: MaxAllowed
    path: src/System.Security.Cryptography.X509Certificates/src/System/Security/Cryptography/X509Certificates/OpenFlags.cs
    startLine: 17
  assemblies:
  - System.Security.Cryptography.X509Certificates
  namespace: System.Security.Cryptography.X509Certificates
  summary: Open the X.509 certificate store for the highest access allowed.
  syntax:
    content: MaxAllowed = null
    content.vb: MaxAllowed = Nothing
    return:
      type: System.Security.Cryptography.X509Certificates.OpenFlags
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Security.Cryptography.X509Certificates.OpenFlags.OpenExistingOnly
  commentId: F:System.Security.Cryptography.X509Certificates.OpenFlags.OpenExistingOnly
  id: OpenExistingOnly
  parent: System.Security.Cryptography.X509Certificates.OpenFlags
  langs:
  - csharp
  - vb
  name: OpenExistingOnly
  fullName: System.Security.Cryptography.X509Certificates.OpenFlags.OpenExistingOnly
  type: Field
  source:
    remote:
      path: src/System.Security.Cryptography.X509Certificates/src/System/Security/Cryptography/X509Certificates/OpenFlags.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: OpenExistingOnly
    path: src/System.Security.Cryptography.X509Certificates/src/System/Security/Cryptography/X509Certificates/OpenFlags.cs
    startLine: 18
  assemblies:
  - System.Security.Cryptography.X509Certificates
  namespace: System.Security.Cryptography.X509Certificates
  summary: Opens only existing stores; if no store exists, the <xref href="System.Security.Cryptography.X509Certificates.X509Store.Open(System.Security.Cryptography.X509Certificates.OpenFlags)" data-throw-if-not-resolved="false"></xref> method will not create a new store.
  syntax:
    content: OpenExistingOnly = null
    content.vb: OpenExistingOnly = Nothing
    return:
      type: System.Security.Cryptography.X509Certificates.OpenFlags
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Security.Cryptography.X509Certificates.OpenFlags.ReadOnly
  commentId: F:System.Security.Cryptography.X509Certificates.OpenFlags.ReadOnly
  id: ReadOnly
  parent: System.Security.Cryptography.X509Certificates.OpenFlags
  langs:
  - csharp
  - vb
  name: ReadOnly
  fullName: System.Security.Cryptography.X509Certificates.OpenFlags.ReadOnly
  type: Field
  source:
    remote:
      path: src/System.Security.Cryptography.X509Certificates/src/System/Security/Cryptography/X509Certificates/OpenFlags.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ReadOnly
    path: src/System.Security.Cryptography.X509Certificates/src/System/Security/Cryptography/X509Certificates/OpenFlags.cs
    startLine: 15
  assemblies:
  - System.Security.Cryptography.X509Certificates
  namespace: System.Security.Cryptography.X509Certificates
  summary: Open the X.509 certificate store for reading only.
  syntax:
    content: ReadOnly = null
    content.vb: ReadOnly = Nothing
    return:
      type: System.Security.Cryptography.X509Certificates.OpenFlags
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Security.Cryptography.X509Certificates.OpenFlags.ReadWrite
  commentId: F:System.Security.Cryptography.X509Certificates.OpenFlags.ReadWrite
  id: ReadWrite
  parent: System.Security.Cryptography.X509Certificates.OpenFlags
  langs:
  - csharp
  - vb
  name: ReadWrite
  fullName: System.Security.Cryptography.X509Certificates.OpenFlags.ReadWrite
  type: Field
  source:
    remote:
      path: src/System.Security.Cryptography.X509Certificates/src/System/Security/Cryptography/X509Certificates/OpenFlags.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ReadWrite
    path: src/System.Security.Cryptography.X509Certificates/src/System/Security/Cryptography/X509Certificates/OpenFlags.cs
    startLine: 16
  assemblies:
  - System.Security.Cryptography.X509Certificates
  namespace: System.Security.Cryptography.X509Certificates
  summary: Open the X.509 certificate store for both reading and writing.
  syntax:
    content: ReadWrite = null
    content.vb: ReadWrite = Nothing
    return:
      type: System.Security.Cryptography.X509Certificates.OpenFlags
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
references:
- uid: System.Security.Cryptography.X509Certificates
  isExternal: false
  name: System.Security.Cryptography.X509Certificates
  fullName: System.Security.Cryptography.X509Certificates
- uid: System.Security.Cryptography.X509Certificates.OpenFlags
  parent: System.Security.Cryptography.X509Certificates
  isExternal: false
  name: OpenFlags
  fullName: System.Security.Cryptography.X509Certificates.OpenFlags
