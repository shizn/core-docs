items:
- uid: System.Runtime.InteropServices.WindowsRuntime.AsyncInfo
  commentId: T:System.Runtime.InteropServices.WindowsRuntime.AsyncInfo
  id: AsyncInfo
  parent: System.Runtime.InteropServices.WindowsRuntime
  children:
  - System.Runtime.InteropServices.WindowsRuntime.AsyncInfo.Run(System.Func{System.Threading.CancellationToken,System.Threading.Tasks.Task})
  - System.Runtime.InteropServices.WindowsRuntime.AsyncInfo.Run``1(System.Func{System.Threading.CancellationToken,System.IProgress{``0},System.Threading.Tasks.Task})
  - System.Runtime.InteropServices.WindowsRuntime.AsyncInfo.Run``1(System.Func{System.Threading.CancellationToken,System.Threading.Tasks.Task{``0}})
  - System.Runtime.InteropServices.WindowsRuntime.AsyncInfo.Run``2(System.Func{System.Threading.CancellationToken,System.IProgress{``1},System.Threading.Tasks.Task{``0}})
  langs:
  - csharp
  - vb
  name: AsyncInfo
  fullName: System.Runtime.InteropServices.WindowsRuntime.AsyncInfo
  type: Class
  source:
    remote:
      path: src/System.Runtime.WindowsRuntime/src/System/Runtime/InteropServices/WindowsRuntime/AsyncInfo.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: AsyncInfo
    path: src/System.Runtime.WindowsRuntime/src/System/Runtime/InteropServices/WindowsRuntime/AsyncInfo.cs
    startLine: 19
  assemblies:
  - System.Runtime.WindowsRuntime
  namespace: System.Runtime.InteropServices.WindowsRuntime
  syntax:
    content: 'public class AsyncInfo : object'
    content.vb: >-
      Public Class AsyncInfo
          Inherits Object
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: System.Runtime.InteropServices.WindowsRuntime.AsyncInfo.Run(System.Func{System.Threading.CancellationToken,System.Threading.Tasks.Task})
  commentId: M:System.Runtime.InteropServices.WindowsRuntime.AsyncInfo.Run(System.Func{System.Threading.CancellationToken,System.Threading.Tasks.Task})
  id: Run(System.Func{System.Threading.CancellationToken,System.Threading.Tasks.Task})
  parent: System.Runtime.InteropServices.WindowsRuntime.AsyncInfo
  langs:
  - csharp
  - vb
  name: Run(Func<Threading.CancellationToken, Threading.Tasks.Task>)
  fullName: System.Runtime.InteropServices.WindowsRuntime.AsyncInfo.Run(System.Func<System.Threading.CancellationToken, System.Threading.Tasks.Task>)
  type: Method
  source:
    remote:
      path: src/System.Runtime.WindowsRuntime/ref/System.Runtime.WindowsRuntime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Run
    path: src/System.Runtime.WindowsRuntime/ref/System.Runtime.WindowsRuntime.cs
    startLine: 81
  assemblies:
  - System.Runtime.WindowsRuntime
  namespace: System.Runtime.InteropServices.WindowsRuntime
  syntax:
    content: public static IAsyncAction Run(Func<Threading.CancellationToken, Threading.Tasks.Task> taskProvider)
    content.vb: Public Shared Function Run(taskProvider As Func(Of Threading.CancellationToken, Threading.Tasks.Task)) As IAsyncAction
    parameters:
    - id: taskProvider
      type: System.Func{System.Threading.CancellationToken,System.Threading.Tasks.Task}
    return:
      type: Windows.Foundation.IAsyncAction
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Runtime.InteropServices.WindowsRuntime.AsyncInfo.Run(System.Func(Of System.Threading.CancellationToken, System.Threading.Tasks.Task))
  name.vb: Run(Func(Of Threading.CancellationToken, Threading.Tasks.Task))
- uid: System.Runtime.InteropServices.WindowsRuntime.AsyncInfo.Run``1(System.Func{System.Threading.CancellationToken,System.IProgress{``0},System.Threading.Tasks.Task})
  commentId: M:System.Runtime.InteropServices.WindowsRuntime.AsyncInfo.Run``1(System.Func{System.Threading.CancellationToken,System.IProgress{``0},System.Threading.Tasks.Task})
  id: Run``1(System.Func{System.Threading.CancellationToken,System.IProgress{``0},System.Threading.Tasks.Task})
  parent: System.Runtime.InteropServices.WindowsRuntime.AsyncInfo
  langs:
  - csharp
  - vb
  name: Run<TProgress>(Func<Threading.CancellationToken, IProgress<TProgress>, Threading.Tasks.Task>)
  fullName: System.Runtime.InteropServices.WindowsRuntime.AsyncInfo.Run<TProgress>(System.Func<System.Threading.CancellationToken, System.IProgress<TProgress>, System.Threading.Tasks.Task>)
  type: Method
  source:
    remote:
      path: src/System.Runtime.WindowsRuntime/ref/System.Runtime.WindowsRuntime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Run
    path: src/System.Runtime.WindowsRuntime/ref/System.Runtime.WindowsRuntime.cs
    startLine: 82
  assemblies:
  - System.Runtime.WindowsRuntime
  namespace: System.Runtime.InteropServices.WindowsRuntime
  syntax:
    content: public static IAsyncActionWithProgress<TProgress> Run<TProgress>(Func<Threading.CancellationToken, IProgress<TProgress>, Threading.Tasks.Task> taskProvider)
    content.vb: Public Shared Function Run(Of TProgress)(taskProvider As Func(Of Threading.CancellationToken, IProgress(Of TProgress), Threading.Tasks.Task)) As IAsyncActionWithProgress(Of TProgress)
    parameters:
    - id: taskProvider
      type: System.Func{System.Threading.CancellationToken,System.IProgress{{TProgress}},System.Threading.Tasks.Task}
    typeParameters:
    - id: TProgress
    return:
      type: Windows.Foundation.IAsyncActionWithProgress{{TProgress}}
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Runtime.InteropServices.WindowsRuntime.AsyncInfo.Run(Of TProgress)(System.Func(Of System.Threading.CancellationToken, System.IProgress(Of TProgress), System.Threading.Tasks.Task))
  name.vb: Run(Of TProgress)(Func(Of Threading.CancellationToken, IProgress(Of TProgress), Threading.Tasks.Task))
- uid: System.Runtime.InteropServices.WindowsRuntime.AsyncInfo.Run``1(System.Func{System.Threading.CancellationToken,System.Threading.Tasks.Task{``0}})
  commentId: M:System.Runtime.InteropServices.WindowsRuntime.AsyncInfo.Run``1(System.Func{System.Threading.CancellationToken,System.Threading.Tasks.Task{``0}})
  id: Run``1(System.Func{System.Threading.CancellationToken,System.Threading.Tasks.Task{``0}})
  parent: System.Runtime.InteropServices.WindowsRuntime.AsyncInfo
  langs:
  - csharp
  - vb
  name: Run<TResult>(Func<Threading.CancellationToken, Threading.Tasks.Task<TResult>>)
  fullName: System.Runtime.InteropServices.WindowsRuntime.AsyncInfo.Run<TResult>(System.Func<System.Threading.CancellationToken, System.Threading.Tasks.Task<TResult>>)
  type: Method
  source:
    remote:
      path: src/System.Runtime.WindowsRuntime/ref/System.Runtime.WindowsRuntime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Run
    path: src/System.Runtime.WindowsRuntime/ref/System.Runtime.WindowsRuntime.cs
    startLine: 83
  assemblies:
  - System.Runtime.WindowsRuntime
  namespace: System.Runtime.InteropServices.WindowsRuntime
  syntax:
    content: public static IAsyncOperation<TResult> Run<TResult>(Func<Threading.CancellationToken, Threading.Tasks.Task<TResult>> taskProvider)
    content.vb: Public Shared Function Run(Of TResult)(taskProvider As Func(Of Threading.CancellationToken, Threading.Tasks.Task(Of TResult))) As IAsyncOperation(Of TResult)
    parameters:
    - id: taskProvider
      type: System.Func{System.Threading.CancellationToken,System.Threading.Tasks.Task{{TResult}}}
    typeParameters:
    - id: TResult
    return:
      type: Windows.Foundation.IAsyncOperation{{TResult}}
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Runtime.InteropServices.WindowsRuntime.AsyncInfo.Run(Of TResult)(System.Func(Of System.Threading.CancellationToken, System.Threading.Tasks.Task(Of TResult)))
  name.vb: Run(Of TResult)(Func(Of Threading.CancellationToken, Threading.Tasks.Task(Of TResult)))
- uid: System.Runtime.InteropServices.WindowsRuntime.AsyncInfo.Run``2(System.Func{System.Threading.CancellationToken,System.IProgress{``1},System.Threading.Tasks.Task{``0}})
  commentId: M:System.Runtime.InteropServices.WindowsRuntime.AsyncInfo.Run``2(System.Func{System.Threading.CancellationToken,System.IProgress{``1},System.Threading.Tasks.Task{``0}})
  id: Run``2(System.Func{System.Threading.CancellationToken,System.IProgress{``1},System.Threading.Tasks.Task{``0}})
  parent: System.Runtime.InteropServices.WindowsRuntime.AsyncInfo
  langs:
  - csharp
  - vb
  name: Run<TResult, TProgress>(Func<Threading.CancellationToken, IProgress<TProgress>, Threading.Tasks.Task<TResult>>)
  fullName: System.Runtime.InteropServices.WindowsRuntime.AsyncInfo.Run<TResult, TProgress>(System.Func<System.Threading.CancellationToken, System.IProgress<TProgress>, System.Threading.Tasks.Task<TResult>>)
  type: Method
  source:
    remote:
      path: src/System.Runtime.WindowsRuntime/ref/System.Runtime.WindowsRuntime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Run
    path: src/System.Runtime.WindowsRuntime/ref/System.Runtime.WindowsRuntime.cs
    startLine: 84
  assemblies:
  - System.Runtime.WindowsRuntime
  namespace: System.Runtime.InteropServices.WindowsRuntime
  syntax:
    content: public static IAsyncOperationWithProgress<TResult, TProgress> Run<TResult, TProgress>(Func<Threading.CancellationToken, IProgress<TProgress>, Threading.Tasks.Task<TResult>> taskProvider)
    content.vb: Public Shared Function Run(Of TResult, TProgress)(taskProvider As Func(Of Threading.CancellationToken, IProgress(Of TProgress), Threading.Tasks.Task(Of TResult))) As IAsyncOperationWithProgress(Of TResult, TProgress)
    parameters:
    - id: taskProvider
      type: System.Func{System.Threading.CancellationToken,System.IProgress{{TProgress}},System.Threading.Tasks.Task{{TResult}}}
    typeParameters:
    - id: TResult
    - id: TProgress
    return:
      type: Windows.Foundation.IAsyncOperationWithProgress{{TResult},{TProgress}}
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Runtime.InteropServices.WindowsRuntime.AsyncInfo.Run(Of TResult, TProgress)(System.Func(Of System.Threading.CancellationToken, System.IProgress(Of TProgress), System.Threading.Tasks.Task(Of TResult)))
  name.vb: Run(Of TResult, TProgress)(Func(Of Threading.CancellationToken, IProgress(Of TProgress), Threading.Tasks.Task(Of TResult)))
references:
- uid: System.Runtime.InteropServices.WindowsRuntime
  isExternal: false
  name: System.Runtime.InteropServices.WindowsRuntime
  fullName: System.Runtime.InteropServices.WindowsRuntime
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Func{System.Threading.CancellationToken,System.Threading.Tasks.Task}
  definition: System.Func`2
  name: Func<Threading.CancellationToken, Threading.Tasks.Task>
  fullName: System.Func<System.Threading.CancellationToken, System.Threading.Tasks.Task>
  fullname.vb: System.Func(Of System.Threading.CancellationToken, System.Threading.Tasks.Task)
  name.vb: Func(Of Threading.CancellationToken, Threading.Tasks.Task)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Threading.CancellationToken
    name: Threading.CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task
    name: Threading.Tasks.Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Threading.CancellationToken
    name: Threading.CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task
    name: Threading.Tasks.Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: )
    fullName: )
- uid: Windows.Foundation.IAsyncAction
  isExternal: true
  name: IAsyncAction
  fullName: Windows.Foundation.IAsyncAction
- uid: System.Func`2
  isExternal: false
  name: Func<, >
  fullName: System.Func<, >
  fullname.vb: System.Func(Of , )
  name.vb: Func(Of , )
  spec.csharp:
  - uid: System.Func`2
    name: Func
    fullName: System.Func
  - name: <
    fullName: <
  - {}
  - name: ', '
    fullName: ', '
  - {}
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    fullName: System.Func
  - name: '(Of '
    fullName: '(Of '
  - {}
  - name: ', '
    fullName: ', '
  - {}
  - name: )
    fullName: )
- uid: System.Func{System.Threading.CancellationToken,System.IProgress{{TProgress}},System.Threading.Tasks.Task}
  definition: System.Func`3
  name: Func<Threading.CancellationToken, IProgress<TProgress>, Threading.Tasks.Task>
  fullName: System.Func<System.Threading.CancellationToken, System.IProgress<TProgress>, System.Threading.Tasks.Task>
  fullname.vb: System.Func(Of System.Threading.CancellationToken, System.IProgress(Of TProgress), System.Threading.Tasks.Task)
  name.vb: Func(Of Threading.CancellationToken, IProgress(Of TProgress), Threading.Tasks.Task)
  spec.csharp:
  - uid: System.Func`3
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Threading.CancellationToken
    name: Threading.CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.IProgress`1
    name: IProgress
    fullName: System.IProgress
    isExternal: true
  - name: <
    fullName: <
  - name: TProgress
    fullName: TProgress
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task
    name: Threading.Tasks.Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`3
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Threading.CancellationToken
    name: Threading.CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.IProgress`1
    name: IProgress
    fullName: System.IProgress
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TProgress
    fullName: TProgress
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task
    name: Threading.Tasks.Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: )
    fullName: )
- uid: Windows.Foundation.IAsyncActionWithProgress{{TProgress}}
  definition: Windows.Foundation.IAsyncActionWithProgress`1
  name: IAsyncActionWithProgress<TProgress>
  fullName: Windows.Foundation.IAsyncActionWithProgress<TProgress>
  fullname.vb: Windows.Foundation.IAsyncActionWithProgress(Of TProgress)
  name.vb: IAsyncActionWithProgress(Of TProgress)
  spec.csharp:
  - uid: Windows.Foundation.IAsyncActionWithProgress`1
    name: IAsyncActionWithProgress
    fullName: Windows.Foundation.IAsyncActionWithProgress
    isExternal: true
  - name: <
    fullName: <
  - name: TProgress
    fullName: TProgress
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Windows.Foundation.IAsyncActionWithProgress`1
    name: IAsyncActionWithProgress
    fullName: Windows.Foundation.IAsyncActionWithProgress
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TProgress
    fullName: TProgress
  - name: )
    fullName: )
- uid: System.Func`3
  isExternal: false
  name: Func<, , >
  fullName: System.Func<, , >
  fullname.vb: System.Func(Of , , )
  name.vb: Func(Of , , )
  spec.csharp:
  - uid: System.Func`3
    name: Func
    fullName: System.Func
  - name: <
    fullName: <
  - {}
  - name: ', '
    fullName: ', '
  - {}
  - name: ', '
    fullName: ', '
  - {}
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`3
    name: Func
    fullName: System.Func
  - name: '(Of '
    fullName: '(Of '
  - {}
  - name: ', '
    fullName: ', '
  - {}
  - name: ', '
    fullName: ', '
  - {}
  - name: )
    fullName: )
- uid: Windows.Foundation.IAsyncActionWithProgress`1
  isExternal: true
  name: IAsyncActionWithProgress<>
  fullName: Windows.Foundation.IAsyncActionWithProgress<>
  fullname.vb: Windows.Foundation.IAsyncActionWithProgress(Of )
  name.vb: IAsyncActionWithProgress(Of )
  spec.csharp:
  - uid: Windows.Foundation.IAsyncActionWithProgress`1
    name: IAsyncActionWithProgress
    fullName: Windows.Foundation.IAsyncActionWithProgress
    isExternal: true
  - name: <
    fullName: <
  - {}
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Windows.Foundation.IAsyncActionWithProgress`1
    name: IAsyncActionWithProgress
    fullName: Windows.Foundation.IAsyncActionWithProgress
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - {}
  - name: )
    fullName: )
- uid: System.Func{System.Threading.CancellationToken,System.Threading.Tasks.Task{{TResult}}}
  definition: System.Func`2
  name: Func<Threading.CancellationToken, Threading.Tasks.Task<TResult>>
  fullName: System.Func<System.Threading.CancellationToken, System.Threading.Tasks.Task<TResult>>
  fullname.vb: System.Func(Of System.Threading.CancellationToken, System.Threading.Tasks.Task(Of TResult))
  name.vb: Func(Of Threading.CancellationToken, Threading.Tasks.Task(Of TResult))
  spec.csharp:
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Threading.CancellationToken
    name: Threading.CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task`1
    name: Threading.Tasks.Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    fullName: <
  - name: TResult
    fullName: TResult
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Threading.CancellationToken
    name: Threading.CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task`1
    name: Threading.Tasks.Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TResult
    fullName: TResult
  - name: )
    fullName: )
  - name: )
    fullName: )
- uid: Windows.Foundation.IAsyncOperation{{TResult}}
  definition: Windows.Foundation.IAsyncOperation`1
  name: IAsyncOperation<TResult>
  fullName: Windows.Foundation.IAsyncOperation<TResult>
  fullname.vb: Windows.Foundation.IAsyncOperation(Of TResult)
  name.vb: IAsyncOperation(Of TResult)
  spec.csharp:
  - uid: Windows.Foundation.IAsyncOperation`1
    name: IAsyncOperation
    fullName: Windows.Foundation.IAsyncOperation
    isExternal: true
  - name: <
    fullName: <
  - name: TResult
    fullName: TResult
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Windows.Foundation.IAsyncOperation`1
    name: IAsyncOperation
    fullName: Windows.Foundation.IAsyncOperation
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TResult
    fullName: TResult
  - name: )
    fullName: )
- uid: Windows.Foundation.IAsyncOperation`1
  isExternal: true
  name: IAsyncOperation<>
  fullName: Windows.Foundation.IAsyncOperation<>
  fullname.vb: Windows.Foundation.IAsyncOperation(Of )
  name.vb: IAsyncOperation(Of )
  spec.csharp:
  - uid: Windows.Foundation.IAsyncOperation`1
    name: IAsyncOperation
    fullName: Windows.Foundation.IAsyncOperation
    isExternal: true
  - name: <
    fullName: <
  - {}
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Windows.Foundation.IAsyncOperation`1
    name: IAsyncOperation
    fullName: Windows.Foundation.IAsyncOperation
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - {}
  - name: )
    fullName: )
- uid: System.Func{System.Threading.CancellationToken,System.IProgress{{TProgress}},System.Threading.Tasks.Task{{TResult}}}
  definition: System.Func`3
  name: Func<Threading.CancellationToken, IProgress<TProgress>, Threading.Tasks.Task<TResult>>
  fullName: System.Func<System.Threading.CancellationToken, System.IProgress<TProgress>, System.Threading.Tasks.Task<TResult>>
  fullname.vb: System.Func(Of System.Threading.CancellationToken, System.IProgress(Of TProgress), System.Threading.Tasks.Task(Of TResult))
  name.vb: Func(Of Threading.CancellationToken, IProgress(Of TProgress), Threading.Tasks.Task(Of TResult))
  spec.csharp:
  - uid: System.Func`3
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Threading.CancellationToken
    name: Threading.CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.IProgress`1
    name: IProgress
    fullName: System.IProgress
    isExternal: true
  - name: <
    fullName: <
  - name: TProgress
    fullName: TProgress
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task`1
    name: Threading.Tasks.Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    fullName: <
  - name: TResult
    fullName: TResult
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`3
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Threading.CancellationToken
    name: Threading.CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.IProgress`1
    name: IProgress
    fullName: System.IProgress
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TProgress
    fullName: TProgress
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task`1
    name: Threading.Tasks.Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TResult
    fullName: TResult
  - name: )
    fullName: )
  - name: )
    fullName: )
- uid: Windows.Foundation.IAsyncOperationWithProgress{{TResult},{TProgress}}
  definition: Windows.Foundation.IAsyncOperationWithProgress`2
  name: IAsyncOperationWithProgress<TResult, TProgress>
  fullName: Windows.Foundation.IAsyncOperationWithProgress<TResult, TProgress>
  fullname.vb: Windows.Foundation.IAsyncOperationWithProgress(Of TResult, TProgress)
  name.vb: IAsyncOperationWithProgress(Of TResult, TProgress)
  spec.csharp:
  - uid: Windows.Foundation.IAsyncOperationWithProgress`2
    name: IAsyncOperationWithProgress
    fullName: Windows.Foundation.IAsyncOperationWithProgress
    isExternal: true
  - name: <
    fullName: <
  - name: TResult
    fullName: TResult
  - name: ', '
    fullName: ', '
  - name: TProgress
    fullName: TProgress
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Windows.Foundation.IAsyncOperationWithProgress`2
    name: IAsyncOperationWithProgress
    fullName: Windows.Foundation.IAsyncOperationWithProgress
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TResult
    fullName: TResult
  - name: ', '
    fullName: ', '
  - name: TProgress
    fullName: TProgress
  - name: )
    fullName: )
- uid: Windows.Foundation.IAsyncOperationWithProgress`2
  isExternal: true
  name: IAsyncOperationWithProgress<, >
  fullName: Windows.Foundation.IAsyncOperationWithProgress<, >
  fullname.vb: Windows.Foundation.IAsyncOperationWithProgress(Of , )
  name.vb: IAsyncOperationWithProgress(Of , )
  spec.csharp:
  - uid: Windows.Foundation.IAsyncOperationWithProgress`2
    name: IAsyncOperationWithProgress
    fullName: Windows.Foundation.IAsyncOperationWithProgress
    isExternal: true
  - name: <
    fullName: <
  - {}
  - name: ', '
    fullName: ', '
  - {}
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Windows.Foundation.IAsyncOperationWithProgress`2
    name: IAsyncOperationWithProgress
    fullName: Windows.Foundation.IAsyncOperationWithProgress
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - {}
  - name: ', '
    fullName: ', '
  - {}
  - name: )
    fullName: )
