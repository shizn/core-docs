items:
- uid: System.Runtime.InteropServices.ComTypes.IEnumVARIANT
  commentId: T:System.Runtime.InteropServices.ComTypes.IEnumVARIANT
  id: IEnumVARIANT
  parent: System.Runtime.InteropServices.ComTypes
  children:
  - System.Runtime.InteropServices.ComTypes.IEnumVARIANT.Clone
  - System.Runtime.InteropServices.ComTypes.IEnumVARIANT.Next(System.Int32,System.Object[],System.IntPtr)
  - System.Runtime.InteropServices.ComTypes.IEnumVARIANT.Reset
  - System.Runtime.InteropServices.ComTypes.IEnumVARIANT.Skip(System.Int32)
  langs:
  - csharp
  - vb
  name: IEnumVARIANT
  fullName: System.Runtime.InteropServices.ComTypes.IEnumVARIANT
  type: Interface
  source:
    remote:
      path: src/mscorlib/src/System/Runtime/InteropServices/ComTypes/IEnumVARIANT.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: IEnumVARIANT
    path: src/mscorlib/src/System/Runtime/InteropServices/ComTypes/IEnumVARIANT.cs
    startLine: 17
  assemblies:
  - System.Runtime.InteropServices
  namespace: System.Runtime.InteropServices.ComTypes
  summary: Manages the definition of the IEnumVARIANT interface.
  syntax:
    content: public interface IEnumVARIANT
    content.vb: Public Interface IEnumVARIANT
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: System.Runtime.InteropServices.ComTypes.IEnumVARIANT.Clone
  commentId: M:System.Runtime.InteropServices.ComTypes.IEnumVARIANT.Clone
  id: Clone
  parent: System.Runtime.InteropServices.ComTypes.IEnumVARIANT
  langs:
  - csharp
  - vb
  name: Clone()
  fullName: System.Runtime.InteropServices.ComTypes.IEnumVARIANT.Clone()
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Runtime/InteropServices/ComTypes/IEnumVARIANT.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Clone
    path: src/mscorlib/src/System/Runtime/InteropServices/ComTypes/IEnumVARIANT.cs
    startLine: 31
  assemblies:
  - System.Runtime.InteropServices
  namespace: System.Runtime.InteropServices.ComTypes
  summary: Creates a new enumerator that contains the same enumeration state as the current one.
  syntax:
    content: IEnumVARIANT Clone()
    content.vb: Function Clone As IEnumVARIANT
    return:
      type: System.Runtime.InteropServices.ComTypes.IEnumVARIANT
      description: An <xref href="System.Runtime.InteropServices.ComTypes.IEnumVARIANT" data-throw-if-not-resolved="false"></xref>  reference to the newly created enumerator.
- uid: System.Runtime.InteropServices.ComTypes.IEnumVARIANT.Next(System.Int32,System.Object[],System.IntPtr)
  commentId: M:System.Runtime.InteropServices.ComTypes.IEnumVARIANT.Next(System.Int32,System.Object[],System.IntPtr)
  id: Next(System.Int32,System.Object[],System.IntPtr)
  parent: System.Runtime.InteropServices.ComTypes.IEnumVARIANT
  langs:
  - csharp
  - vb
  name: Next(Int32, Object[], IntPtr)
  fullName: System.Runtime.InteropServices.ComTypes.IEnumVARIANT.Next(System.Int32, System.Object[], System.IntPtr)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Runtime/InteropServices/ComTypes/IEnumVARIANT.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Next
    path: src/mscorlib/src/System/Runtime/InteropServices/ComTypes/IEnumVARIANT.cs
    startLine: 22
  assemblies:
  - System.Runtime.InteropServices
  namespace: System.Runtime.InteropServices.ComTypes
  summary: Retrieves a specified number of items in the enumeration sequence.
  syntax:
    content: int Next(int celt, object[] rgVar, IntPtr pceltFetched)
    content.vb: Function Next(celt As Integer, rgVar As Object(), pceltFetched As IntPtr) As Integer
    parameters:
    - id: celt
      type: System.Int32
      description: 'The number of elements to return in <em>rgelt</em>. '
    - id: rgVar
      type: System.Object[]
      description: When this method returns, contains a reference to the enumerated elements. This parameter is passed uninitialized.
    - id: pceltFetched
      type: System.IntPtr
      description: 'When this method returns, contains a reference to the actual number of elements enumerated in <em>rgelt</em>. '
    return:
      type: System.Int32
      description: S_OK if the <em>pceltFetched</em> parameter equals the <em>celt</em> parameter; otherwise, S_FALSE.
  fullName.vb: System.Runtime.InteropServices.ComTypes.IEnumVARIANT.Next(System.Int32, System.Object(), System.IntPtr)
  name.vb: Next(Int32, Object(), IntPtr)
- uid: System.Runtime.InteropServices.ComTypes.IEnumVARIANT.Reset
  commentId: M:System.Runtime.InteropServices.ComTypes.IEnumVARIANT.Reset
  id: Reset
  parent: System.Runtime.InteropServices.ComTypes.IEnumVARIANT
  langs:
  - csharp
  - vb
  name: Reset()
  fullName: System.Runtime.InteropServices.ComTypes.IEnumVARIANT.Reset()
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Runtime/InteropServices/ComTypes/IEnumVARIANT.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Reset
    path: src/mscorlib/src/System/Runtime/InteropServices/ComTypes/IEnumVARIANT.cs
    startLine: 28
  assemblies:
  - System.Runtime.InteropServices
  namespace: System.Runtime.InteropServices.ComTypes
  summary: Resets the enumeration sequence to the beginning.
  syntax:
    content: int Reset()
    content.vb: Function Reset As Integer
    return:
      type: System.Int32
      description: An HRESULT with the value S_OK.
- uid: System.Runtime.InteropServices.ComTypes.IEnumVARIANT.Skip(System.Int32)
  commentId: M:System.Runtime.InteropServices.ComTypes.IEnumVARIANT.Skip(System.Int32)
  id: Skip(System.Int32)
  parent: System.Runtime.InteropServices.ComTypes.IEnumVARIANT
  langs:
  - csharp
  - vb
  name: Skip(Int32)
  fullName: System.Runtime.InteropServices.ComTypes.IEnumVARIANT.Skip(System.Int32)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Runtime/InteropServices/ComTypes/IEnumVARIANT.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Skip
    path: src/mscorlib/src/System/Runtime/InteropServices/ComTypes/IEnumVARIANT.cs
    startLine: 25
  assemblies:
  - System.Runtime.InteropServices
  namespace: System.Runtime.InteropServices.ComTypes
  summary: Skips a specified number of items in the enumeration sequence.
  syntax:
    content: int Skip(int celt)
    content.vb: Function Skip(celt As Integer) As Integer
    parameters:
    - id: celt
      type: System.Int32
      description: 'The number of elements to skip in the enumeration. '
    return:
      type: System.Int32
      description: S_OK if the number of elements skipped equals <em>celt</em> parameter; otherwise, S_FALSE.
references:
- uid: System.Runtime.InteropServices.ComTypes
  isExternal: false
  name: System.Runtime.InteropServices.ComTypes
  fullName: System.Runtime.InteropServices.ComTypes
- uid: System.Runtime.InteropServices.ComTypes.IEnumVARIANT
  parent: System.Runtime.InteropServices.ComTypes
  isExternal: false
  name: IEnumVARIANT
  fullName: System.Runtime.InteropServices.ComTypes.IEnumVARIANT
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  fullName: System.Int32
- uid: System.Object[]
  isExternal: false
  name: Object[]
  fullName: System.Object[]
  fullname.vb: System.Object()
  name.vb: Object()
  spec.csharp:
  - uid: System.Object
    name: Object
    fullName: System.Object
  - name: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Object
    name: Object
    fullName: System.Object
  - name: ()
    fullName: ()
- uid: System.IntPtr
  parent: System
  isExternal: false
  name: IntPtr
  fullName: System.IntPtr
- uid: System
  isExternal: false
  name: System
  fullName: System
