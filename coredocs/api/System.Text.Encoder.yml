items:
- uid: System.Text.Encoder
  commentId: T:System.Text.Encoder
  id: Encoder
  parent: System.Text
  children:
  - System.Text.Encoder.#ctor
  - System.Text.Encoder.Convert(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32,System.Int32,System.Boolean,System.Int32@,System.Int32@,System.Boolean@)
  - System.Text.Encoder.Fallback
  - System.Text.Encoder.FallbackBuffer
  - System.Text.Encoder.GetByteCount(System.Char[],System.Int32,System.Int32,System.Boolean)
  - System.Text.Encoder.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32,System.Boolean)
  - System.Text.Encoder.Reset
  langs:
  - csharp
  - vb
  name: Encoder
  fullName: System.Text.Encoder
  type: Class
  source:
    remote:
      path: src/mscorlib/src/System/Text/Encoder.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Encoder
    path: src/mscorlib/src/System/Text/Encoder.cs
    startLine: 21
  assemblies:
  - System.Text.Encoding
  namespace: System.Text
  summary: Converts a set of characters into a sequence of bytes.
  syntax:
    content: 'public abstract class Encoder : object'
    content.vb: >-
      Public MustInherit Class Encoder
          Inherits Object
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: System.Text.Encoder.#ctor
  commentId: M:System.Text.Encoder.#ctor
  id: '#ctor'
  parent: System.Text.Encoder
  langs:
  - csharp
  - vb
  name: Encoder()
  fullName: System.Text.Encoder.Encoder()
  type: Constructor
  source:
    remote:
      path: src/mscorlib/src/System/Text/Encoder.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: .ctor
    path: src/mscorlib/src/System/Text/Encoder.cs
    startLine: 35
  assemblies:
  - System.Text.Encoding
  namespace: System.Text
  summary: Initializes a new instance of the <xref href="System.Text.Encoder" data-throw-if-not-resolved="false"></xref> class.
  syntax:
    content: protected Encoder()
    content.vb: Protected Sub New
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: System.Text.Encoder.Fallback
  commentId: P:System.Text.Encoder.Fallback
  id: Fallback
  parent: System.Text.Encoder
  langs:
  - csharp
  - vb
  name: Fallback
  fullName: System.Text.Encoder.Fallback
  type: Property
  source:
    remote:
      path: src/mscorlib/src/System/Text/Encoder.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Fallback
    path: src/mscorlib/src/System/Text/Encoder.cs
    startLine: 40
  assemblies:
  - System.Text.Encoding
  namespace: System.Text
  summary: Gets or sets a <xref href="System.Text.EncoderFallback" data-throw-if-not-resolved="false"></xref> object for the current <xref href="System.Text.Encoder" data-throw-if-not-resolved="false"></xref> object.
  syntax:
    content: public EncoderFallback Fallback { get; set; }
    content.vb: Public Property Fallback As EncoderFallback
    parameters: []
    return:
      type: System.Text.EncoderFallback
      description: A <xref href="System.Text.EncoderFallback" data-throw-if-not-resolved="false"></xref> object.
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The value in a set operation is null (Nothing).
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: 'A new value cannot be assigned in a set operation because the current <xref href="System.Text.EncoderFallbackBuffer" data-throw-if-not-resolved="false"></xref> object contains data that has not been encoded yet. '
  - type: System.Text.EncoderFallbackException
    commentId: T:System.Text.EncoderFallbackException
    description: A fallback occurred (see Character Encoding in the .NET Framework for fuller explanation)-and-<xref href="System.Text.Encoder.Fallback" data-throw-if-not-resolved="false"></xref> is set to <xref href="System.Text.EncoderExceptionFallback" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Text.Encoder.FallbackBuffer
  commentId: P:System.Text.Encoder.FallbackBuffer
  id: FallbackBuffer
  parent: System.Text.Encoder
  langs:
  - csharp
  - vb
  name: FallbackBuffer
  fullName: System.Text.Encoder.FallbackBuffer
  type: Property
  source:
    remote:
      path: src/mscorlib/src/System/Text/Encoder.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: FallbackBuffer
    path: src/mscorlib/src/System/Text/Encoder.cs
    startLine: 66
  assemblies:
  - System.Text.Encoding
  namespace: System.Text
  summary: Gets the <xref href="System.Text.EncoderFallbackBuffer" data-throw-if-not-resolved="false"></xref> object associated with the current <xref href="System.Text.Encoder" data-throw-if-not-resolved="false"></xref> object.
  syntax:
    content: public EncoderFallbackBuffer FallbackBuffer { get; }
    content.vb: Public ReadOnly Property FallbackBuffer As EncoderFallbackBuffer
    parameters: []
    return:
      type: System.Text.EncoderFallbackBuffer
      description: A <xref href="System.Text.EncoderFallbackBuffer" data-throw-if-not-resolved="false"></xref> object.
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Text.Encoder.Convert(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32,System.Int32,System.Boolean,System.Int32@,System.Int32@,System.Boolean@)
  commentId: M:System.Text.Encoder.Convert(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32,System.Int32,System.Boolean,System.Int32@,System.Int32@,System.Boolean@)
  id: Convert(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32,System.Int32,System.Boolean,System.Int32@,System.Int32@,System.Boolean@)
  parent: System.Text.Encoder
  langs:
  - csharp
  - vb
  name: Convert(Char[], Int32, Int32, Byte[], Int32, Int32, Boolean, out Int32, out Int32, out Boolean)
  fullName: System.Text.Encoder.Convert(System.Char[], System.Int32, System.Int32, System.Byte[], System.Int32, System.Int32, System.Boolean, out System.Int32, out System.Int32, out System.Boolean)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Text/Encoder.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Convert
    path: src/mscorlib/src/System/Text/Encoder.cs
    startLine: 243
  assemblies:
  - System.Text.Encoding
  namespace: System.Text
  summary: Converts an array of Unicode characters to an encoded byte sequence and stores the result in an array of bytes.
  syntax:
    content: public virtual void Convert(char[] chars, int charIndex, int charCount, byte[] bytes, int byteIndex, int byteCount, bool flush, out int charsUsed, out int bytesUsed, out bool completed)
    content.vb: Public Overridable Sub Convert(chars As Char(), charIndex As Integer, charCount As Integer, bytes As Byte(), byteIndex As Integer, byteCount As Integer, flush As Boolean, ByRef charsUsed As Integer, ByRef bytesUsed As Integer, ByRef completed As Boolean)
    parameters:
    - id: chars
      type: System.Char[]
      description: An array of characters to convert.
    - id: charIndex
      type: System.Int32
      description: The first element of <em>chars</em> to convert.
    - id: charCount
      type: System.Int32
      description: The number of elements of <em>chars</em> to convert.
    - id: bytes
      type: System.Byte[]
      description: An array where the converted bytes are stored.
    - id: byteIndex
      type: System.Int32
      description: The first element of <em>bytes</em> in which data is stored.
    - id: byteCount
      type: System.Int32
      description: The maximum number of elements of <em>bytes</em> to use in the conversion.
    - id: flush
      type: System.Boolean
      description: true to indicate no further data is to be converted; otherwise, false.
    - id: charsUsed
      type: System.Int32
      description: When this method returns, contains the number of characters from <em>chars</em> that were used in the conversion. This parameter is passed uninitialized.
    - id: bytesUsed
      type: System.Int32
      description: When this method returns, contains the number of bytes that were produced by the conversion. This parameter is passed uninitialized.
    - id: completed
      type: System.Boolean
      description: When this method returns, contains true if all the characters specified by <em>charCount</em> were converted; otherwise, false. This parameter is passed uninitialized.
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>chars</em> or <em>bytes</em> is null (Nothing)."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<em>charIndex</em>, <em>charCount</em>, <em>byteIndex</em>, or <em>byteCount</em> is less than zero.-or-The length of <em>chars</em> - <em>charIndex</em> is less than <em>charCount</em>.-or-The length of <em>bytes</em> - <em>byteIndex</em> is less than <em>byteCount</em>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: The output buffer is too small to contain any of the converted input. The output buffer should be greater than or equal to the size indicated by the <see cref="Overload:System.Text.Encoder.GetByteCount"></see> method.
  - type: System.Text.EncoderFallbackException
    commentId: T:System.Text.EncoderFallbackException
    description: A fallback occurred (see Character Encoding in the .NET Framework for fuller explanation)-and-<xref href="System.Text.Encoder.Fallback" data-throw-if-not-resolved="false"></xref> is set to <xref href="System.Text.EncoderExceptionFallback" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: System.Text.Encoder.Convert(System.Char(), System.Int32, System.Int32, System.Byte(), System.Int32, System.Int32, System.Boolean, ByRef System.Int32, ByRef System.Int32, ByRef System.Boolean)
  name.vb: Convert(Char(), Int32, Int32, Byte(), Int32, Int32, Boolean, ByRef Int32, ByRef Int32, ByRef Boolean)
- uid: System.Text.Encoder.GetByteCount(System.Char[],System.Int32,System.Int32,System.Boolean)
  commentId: M:System.Text.Encoder.GetByteCount(System.Char[],System.Int32,System.Int32,System.Boolean)
  id: GetByteCount(System.Char[],System.Int32,System.Int32,System.Boolean)
  parent: System.Text.Encoder
  langs:
  - csharp
  - vb
  name: GetByteCount(Char[], Int32, Int32, Boolean)
  fullName: System.Text.Encoder.GetByteCount(System.Char[], System.Int32, System.Int32, System.Boolean)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Text/Encoder.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: GetByteCount
    path: src/mscorlib/src/System/Text/Encoder.cs
    startLine: 117
  assemblies:
  - System.Text.Encoding
  namespace: System.Text
  summary: When overridden in a derived class, calculates the number of bytes produced by encoding a set of characters from the specified character array. A parameter indicates whether to clear the internal state of the encoder after the calculation.
  syntax:
    content: public abstract int GetByteCount(char[] chars, int index, int count, bool flush)
    content.vb: Public MustOverride Function GetByteCount(chars As Char(), index As Integer, count As Integer, flush As Boolean) As Integer
    parameters:
    - id: chars
      type: System.Char[]
      description: 'The character array containing the set of characters to encode. '
    - id: index
      type: System.Int32
      description: 'The index of the first character to encode. '
    - id: count
      type: System.Int32
      description: 'The number of characters to encode. '
    - id: flush
      type: System.Boolean
      description: 'true to simulate clearing the internal state of the encoder after the calculation; otherwise, false. '
    return:
      type: System.Int32
      description: The number of bytes produced by encoding the specified characters and any characters in the internal buffer.
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>chars</em> is null. "
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<em>index</em> or <em>count</em> is less than zero.-or- <em>index</em> and <em>count</em> do not denote a valid range in <em>chars</em>. "
  - type: System.Text.EncoderFallbackException
    commentId: T:System.Text.EncoderFallbackException
    description: A fallback occurred (see Character Encoding in the .NET Framework for fuller explanation)-and-<xref href="System.Text.Encoder.Fallback" data-throw-if-not-resolved="false"></xref> is set to <xref href="System.Text.EncoderExceptionFallback" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
  fullName.vb: System.Text.Encoder.GetByteCount(System.Char(), System.Int32, System.Int32, System.Boolean)
  name.vb: GetByteCount(Char(), Int32, Int32, Boolean)
- uid: System.Text.Encoder.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32,System.Boolean)
  commentId: M:System.Text.Encoder.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32,System.Boolean)
  id: GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32,System.Boolean)
  parent: System.Text.Encoder
  langs:
  - csharp
  - vb
  name: GetBytes(Char[], Int32, Int32, Byte[], Int32, Boolean)
  fullName: System.Text.Encoder.GetBytes(System.Char[], System.Int32, System.Int32, System.Byte[], System.Int32, System.Boolean)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Text/Encoder.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: GetBytes
    path: src/mscorlib/src/System/Text/Encoder.cs
    startLine: 165
  assemblies:
  - System.Text.Encoding
  namespace: System.Text
  summary: When overridden in a derived class, encodes a set of characters from the specified character array and any characters in the internal buffer into the specified byte array. A parameter indicates whether to clear the internal state of the encoder after the conversion.
  syntax:
    content: public abstract int GetBytes(char[] chars, int charIndex, int charCount, byte[] bytes, int byteIndex, bool flush)
    content.vb: Public MustOverride Function GetBytes(chars As Char(), charIndex As Integer, charCount As Integer, bytes As Byte(), byteIndex As Integer, flush As Boolean) As Integer
    parameters:
    - id: chars
      type: System.Char[]
      description: 'The character array containing the set of characters to encode. '
    - id: charIndex
      type: System.Int32
      description: 'The index of the first character to encode. '
    - id: charCount
      type: System.Int32
      description: 'The number of characters to encode. '
    - id: bytes
      type: System.Byte[]
      description: 'The byte array to contain the resulting sequence of bytes. '
    - id: byteIndex
      type: System.Int32
      description: 'The index at which to start writing the resulting sequence of bytes. '
    - id: flush
      type: System.Boolean
      description: 'true to clear the internal state of the encoder after the conversion; otherwise, false. '
    return:
      type: System.Int32
      description: The actual number of bytes written into <em>bytes</em>.
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>chars</em> is null (Nothing).-or- <em>bytes</em> is null (Nothing). "
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<em>charIndex</em> or <em>charCount</em> or <em>byteIndex</em> is less than zero.-or- <em>charIndex</em> and <em>charCount</em> do not denote a valid range in <em>chars</em>.-or- <em>byteIndex</em> is not a valid index in <em>bytes</em>. "
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<em>bytes</em> does not have enough capacity from <em>byteIndex</em> to the end of the array to accommodate the resulting bytes. "
  - type: System.Text.EncoderFallbackException
    commentId: T:System.Text.EncoderFallbackException
    description: A fallback occurred (see Character Encoding in the .NET Framework for fuller explanation)-and-<xref href="System.Text.Encoder.Fallback" data-throw-if-not-resolved="false"></xref> is set to <xref href="System.Text.EncoderExceptionFallback" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
  fullName.vb: System.Text.Encoder.GetBytes(System.Char(), System.Int32, System.Int32, System.Byte(), System.Int32, System.Boolean)
  name.vb: GetBytes(Char(), Int32, Int32, Byte(), Int32, Boolean)
- uid: System.Text.Encoder.Reset
  commentId: M:System.Text.Encoder.Reset
  id: Reset
  parent: System.Text.Encoder
  langs:
  - csharp
  - vb
  name: Reset()
  fullName: System.Text.Encoder.Reset()
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Text/Encoder.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Reset
    path: src/mscorlib/src/System/Text/Encoder.cs
    startLine: 100
  assemblies:
  - System.Text.Encoding
  namespace: System.Text
  summary: When overridden in a derived class, sets the encoder back to its initial state.
  syntax:
    content: public virtual void Reset()
    content.vb: Public Overridable Sub Reset
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
references:
- uid: System.Text
  isExternal: false
  name: System.Text
  fullName: System.Text
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Text.EncoderFallback
  parent: System.Text
  isExternal: false
  name: EncoderFallback
  fullName: System.Text.EncoderFallback
- uid: System.Text.EncoderFallbackBuffer
  parent: System.Text
  isExternal: false
  name: EncoderFallbackBuffer
  fullName: System.Text.EncoderFallbackBuffer
- uid: System.Char[]
  isExternal: false
  name: Char[]
  fullName: System.Char[]
  fullname.vb: System.Char()
  name.vb: Char()
  spec.csharp:
  - uid: System.Char
    name: Char
    fullName: System.Char
  - name: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Char
    name: Char
    fullName: System.Char
  - name: ()
    fullName: ()
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  fullName: System.Int32
- uid: System.Byte[]
  isExternal: false
  name: Byte[]
  fullName: System.Byte[]
  fullname.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
  - name: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
  - name: ()
    fullName: ()
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  fullName: System.Boolean
- uid: System.ArgumentNullException
  isExternal: false
  name: ArgumentNullException
  fullName: System.ArgumentNullException
- uid: System.ArgumentException
  parent: System
  isExternal: false
  name: ArgumentException
  fullName: System.ArgumentException
- uid: System.Text.EncoderFallbackException
  isExternal: false
  name: EncoderFallbackException
  fullName: System.Text.EncoderFallbackException
- uid: System.ArgumentOutOfRangeException
  isExternal: false
  name: ArgumentOutOfRangeException
  fullName: System.ArgumentOutOfRangeException
