items:
- uid: System.Data.SqlTypes.SqlByte
  commentId: T:System.Data.SqlTypes.SqlByte
  id: SqlByte
  parent: System.Data.SqlTypes
  children:
  - System.Data.SqlTypes.SqlByte.#ctor(System.Byte)
  - System.Data.SqlTypes.SqlByte.Add(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  - System.Data.SqlTypes.SqlByte.BitwiseAnd(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  - System.Data.SqlTypes.SqlByte.BitwiseOr(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  - System.Data.SqlTypes.SqlByte.CompareTo(System.Data.SqlTypes.SqlByte)
  - System.Data.SqlTypes.SqlByte.CompareTo(System.Object)
  - System.Data.SqlTypes.SqlByte.Divide(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  - System.Data.SqlTypes.SqlByte.Equals(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  - System.Data.SqlTypes.SqlByte.Equals(System.Object)
  - System.Data.SqlTypes.SqlByte.GetHashCode
  - System.Data.SqlTypes.SqlByte.GreaterThan(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  - System.Data.SqlTypes.SqlByte.GreaterThanOrEqual(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  - System.Data.SqlTypes.SqlByte.IsNull
  - System.Data.SqlTypes.SqlByte.LessThan(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  - System.Data.SqlTypes.SqlByte.LessThanOrEqual(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  - System.Data.SqlTypes.SqlByte.MaxValue
  - System.Data.SqlTypes.SqlByte.MinValue
  - System.Data.SqlTypes.SqlByte.Mod(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  - System.Data.SqlTypes.SqlByte.Modulus(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  - System.Data.SqlTypes.SqlByte.Multiply(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  - System.Data.SqlTypes.SqlByte.NotEquals(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  - System.Data.SqlTypes.SqlByte.Null
  - System.Data.SqlTypes.SqlByte.OnesComplement(System.Data.SqlTypes.SqlByte)
  - System.Data.SqlTypes.SqlByte.op_Addition(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  - System.Data.SqlTypes.SqlByte.op_BitwiseAnd(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  - System.Data.SqlTypes.SqlByte.op_BitwiseOr(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  - System.Data.SqlTypes.SqlByte.op_Division(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  - System.Data.SqlTypes.SqlByte.op_Equality(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  - System.Data.SqlTypes.SqlByte.op_ExclusiveOr(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  - System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlBoolean)~System.Data.SqlTypes.SqlByte
  - System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlByte)~System.Byte
  - System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlDecimal)~System.Data.SqlTypes.SqlByte
  - System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlDouble)~System.Data.SqlTypes.SqlByte
  - System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlInt16)~System.Data.SqlTypes.SqlByte
  - System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlInt32)~System.Data.SqlTypes.SqlByte
  - System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlInt64)~System.Data.SqlTypes.SqlByte
  - System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlMoney)~System.Data.SqlTypes.SqlByte
  - System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlSingle)~System.Data.SqlTypes.SqlByte
  - System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlString)~System.Data.SqlTypes.SqlByte
  - System.Data.SqlTypes.SqlByte.op_GreaterThan(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  - System.Data.SqlTypes.SqlByte.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  - System.Data.SqlTypes.SqlByte.op_Implicit(System.Byte)~System.Data.SqlTypes.SqlByte
  - System.Data.SqlTypes.SqlByte.op_Inequality(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  - System.Data.SqlTypes.SqlByte.op_LessThan(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  - System.Data.SqlTypes.SqlByte.op_LessThanOrEqual(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  - System.Data.SqlTypes.SqlByte.op_Modulus(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  - System.Data.SqlTypes.SqlByte.op_Multiply(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  - System.Data.SqlTypes.SqlByte.op_OnesComplement(System.Data.SqlTypes.SqlByte)
  - System.Data.SqlTypes.SqlByte.op_Subtraction(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  - System.Data.SqlTypes.SqlByte.Parse(System.String)
  - System.Data.SqlTypes.SqlByte.Subtract(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  - System.Data.SqlTypes.SqlByte.ToSqlBoolean
  - System.Data.SqlTypes.SqlByte.ToSqlDecimal
  - System.Data.SqlTypes.SqlByte.ToSqlDouble
  - System.Data.SqlTypes.SqlByte.ToSqlInt16
  - System.Data.SqlTypes.SqlByte.ToSqlInt32
  - System.Data.SqlTypes.SqlByte.ToSqlInt64
  - System.Data.SqlTypes.SqlByte.ToSqlMoney
  - System.Data.SqlTypes.SqlByte.ToSqlSingle
  - System.Data.SqlTypes.SqlByte.ToSqlString
  - System.Data.SqlTypes.SqlByte.ToString
  - System.Data.SqlTypes.SqlByte.Value
  - System.Data.SqlTypes.SqlByte.Xor(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  - System.Data.SqlTypes.SqlByte.Zero
  langs:
  - csharp
  - vb
  name: SqlByte
  fullName: System.Data.SqlTypes.SqlByte
  type: Struct
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLByte.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: SqlByte
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLByte.cs
    startLine: 21
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: 'Represents an 8-bit unsigned integer, in the range of 0 through 255, to be stored in or retrieved from a database. '
  syntax:
    content: 'public struct SqlByte : INullable, IComparable'
    content.vb: >-
      Public Structure SqlByte
          Implements INullable, IComparable
  implements:
  - System.Data.SqlTypes.INullable
  - System.IComparable
  modifiers.csharp:
  - public
  - struct
  modifiers.vb:
  - Public
  - Structure
- uid: System.Data.SqlTypes.SqlByte.MaxValue
  commentId: F:System.Data.SqlTypes.SqlByte.MaxValue
  id: MaxValue
  parent: System.Data.SqlTypes.SqlByte
  langs:
  - csharp
  - vb
  name: MaxValue
  fullName: System.Data.SqlTypes.SqlByte.MaxValue
  type: Field
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLByte.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: MaxValue
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLByte.cs
    startLine: 617
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: A constant representing the largest possible value of a <xref href="System.Data.SqlTypes.SqlByte" data-throw-if-not-resolved="false"></xref>.
  syntax:
    content: public static readonly SqlByte MaxValue
    content.vb: Public Shared ReadOnly MaxValue As SqlByte
    return:
      type: System.Data.SqlTypes.SqlByte
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: System.Data.SqlTypes.SqlByte.MinValue
  commentId: F:System.Data.SqlTypes.SqlByte.MinValue
  id: MinValue
  parent: System.Data.SqlTypes.SqlByte
  langs:
  - csharp
  - vb
  name: MinValue
  fullName: System.Data.SqlTypes.SqlByte.MinValue
  type: Field
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLByte.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: MinValue
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLByte.cs
    startLine: 613
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: A constant representing the smallest possible value of a <xref href="System.Data.SqlTypes.SqlByte" data-throw-if-not-resolved="false"></xref>.
  syntax:
    content: public static readonly SqlByte MinValue
    content.vb: Public Shared ReadOnly MinValue As SqlByte
    return:
      type: System.Data.SqlTypes.SqlByte
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: System.Data.SqlTypes.SqlByte.Null
  commentId: F:System.Data.SqlTypes.SqlByte.Null
  parent: System.Data.SqlTypes.SqlByte
  langs:
  - csharp
  - vb
  fullName: System.Data.SqlTypes.SqlByte.Null
  type: Field
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLByte.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLByte.cs
    startLine: 605
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: Represents a <xref href="System.DBNull" data-throw-if-not-resolved="false"></xref> that can be assigned to this instance of the <xref href="System.Data.SqlTypes.SqlByte" data-throw-if-not-resolved="false"></xref> structure.
  syntax:
    content: public static readonly SqlByte Null
    content.vb: Public Shared ReadOnly Null As SqlByte
    return:
      type: System.Data.SqlTypes.SqlByte
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: System.Data.SqlTypes.SqlByte.Zero
  commentId: F:System.Data.SqlTypes.SqlByte.Zero
  id: Zero
  parent: System.Data.SqlTypes.SqlByte
  langs:
  - csharp
  - vb
  name: Zero
  fullName: System.Data.SqlTypes.SqlByte.Zero
  type: Field
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLByte.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Zero
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLByte.cs
    startLine: 609
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: Represents a zero value that can be assigned to the <xref href="System.Data.SqlTypes.SqlByte.Value" data-throw-if-not-resolved="false"></xref> property of an instance of the <xref href="System.Data.SqlTypes.SqlByte" data-throw-if-not-resolved="false"></xref> structure.
  syntax:
    content: public static readonly SqlByte Zero
    content.vb: Public Shared ReadOnly Zero As SqlByte
    return:
      type: System.Data.SqlTypes.SqlByte
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: System.Data.SqlTypes.SqlByte.#ctor(System.Byte)
  commentId: M:System.Data.SqlTypes.SqlByte.#ctor(System.Byte)
  id: '#ctor(System.Byte)'
  parent: System.Data.SqlTypes.SqlByte
  langs:
  - csharp
  - vb
  name: SqlByte(Byte)
  fullName: System.Data.SqlTypes.SqlByte.SqlByte(System.Byte)
  type: Constructor
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLByte.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLByte.cs
    startLine: 40
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: Initializes a new instance of the <xref href="System.Data.SqlTypes.SqlByte" data-throw-if-not-resolved="false"></xref> structure using the specified byte value.
  syntax:
    content: public SqlByte(byte value)
    content.vb: Public Sub New(value As Byte)
    parameters:
    - id: value
      type: System.Byte
      description: 'A byte value to be stored in the <xref href="System.Data.SqlTypes.SqlByte.Value" data-throw-if-not-resolved="false"></xref> property of the new <xref href="System.Data.SqlTypes.SqlByte" data-throw-if-not-resolved="false"></xref> structure. '
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Data.SqlTypes.SqlByte.IsNull
  commentId: P:System.Data.SqlTypes.SqlByte.IsNull
  id: IsNull
  parent: System.Data.SqlTypes.SqlByte
  langs:
  - csharp
  - vb
  name: IsNull
  fullName: System.Data.SqlTypes.SqlByte.IsNull
  type: Property
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLByte.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IsNull
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLByte.cs
    startLine: 50
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: Gets a Boolean value that indicates whether this <xref href="System.Data.SqlTypes.SqlByte" data-throw-if-not-resolved="false"></xref> structure is null.
  syntax:
    content: public bool IsNull { get; }
    content.vb: Public ReadOnly Property IsNull As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: true if null. Otherwise, false.
  implements:
  - System.Data.SqlTypes.INullable.IsNull
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Data.SqlTypes.SqlByte.Value
  commentId: P:System.Data.SqlTypes.SqlByte.Value
  id: Value
  parent: System.Data.SqlTypes.SqlByte
  langs:
  - csharp
  - vb
  name: Value
  fullName: System.Data.SqlTypes.SqlByte.Value
  type: Property
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLByte.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Value
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLByte.cs
    startLine: 59
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: 'Gets the value of the <xref href="System.Data.SqlTypes.SqlByte" data-throw-if-not-resolved="false"></xref> structure. This property is read-only '
  syntax:
    content: public byte Value { get; }
    content.vb: Public ReadOnly Property Value As Byte
    parameters: []
    return:
      type: System.Byte
      description: The value of the <xref href="System.Data.SqlTypes.SqlByte" data-throw-if-not-resolved="false"></xref> structure.
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Data.SqlTypes.SqlByte.Add(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  commentId: M:System.Data.SqlTypes.SqlByte.Add(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  id: Add(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  parent: System.Data.SqlTypes.SqlByte
  langs:
  - csharp
  - vb
  name: Add(SqlByte, SqlByte)
  fullName: System.Data.SqlTypes.SqlByte.Add(System.Data.SqlTypes.SqlByte, System.Data.SqlTypes.SqlByte)
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLByte.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Add
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLByte.cs
    startLine: 401
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: Computes the sum of the two specified <xref href="System.Data.SqlTypes.SqlByte" data-throw-if-not-resolved="false"></xref> structures.
  syntax:
    content: public static SqlByte Add(SqlByte x, SqlByte y)
    content.vb: Public Shared Function Add(x As SqlByte, y As SqlByte) As SqlByte
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlByte
      description: 'A <xref href="System.Data.SqlTypes.SqlByte" data-throw-if-not-resolved="false"></xref> structure. '
    - id: y
      type: System.Data.SqlTypes.SqlByte
      description: 'A <xref href="System.Data.SqlTypes.SqlByte" data-throw-if-not-resolved="false"></xref> structure. '
    return:
      type: System.Data.SqlTypes.SqlByte
      description: A <xref href="System.Data.SqlTypes.SqlByte" data-throw-if-not-resolved="false"></xref> structure whose Value property contains the results of the addition.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Data.SqlTypes.SqlByte.BitwiseAnd(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  commentId: M:System.Data.SqlTypes.SqlByte.BitwiseAnd(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  id: BitwiseAnd(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  parent: System.Data.SqlTypes.SqlByte
  langs:
  - csharp
  - vb
  name: BitwiseAnd(SqlByte, SqlByte)
  fullName: System.Data.SqlTypes.SqlByte.BitwiseAnd(System.Data.SqlTypes.SqlByte, System.Data.SqlTypes.SqlByte)
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLByte.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: BitwiseAnd
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLByte.cs
    startLine: 436
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: Computes the bitwise AND of its <xref href="System.Data.SqlTypes.SqlByte" data-throw-if-not-resolved="false"></xref> operands.
  syntax:
    content: public static SqlByte BitwiseAnd(SqlByte x, SqlByte y)
    content.vb: Public Shared Function BitwiseAnd(x As SqlByte, y As SqlByte) As SqlByte
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlByte
      description: 'A <xref href="System.Data.SqlTypes.SqlByte" data-throw-if-not-resolved="false"></xref> structure. '
    - id: y
      type: System.Data.SqlTypes.SqlByte
      description: 'A <xref href="System.Data.SqlTypes.SqlByte" data-throw-if-not-resolved="false"></xref> structure. '
    return:
      type: System.Data.SqlTypes.SqlByte
      description: The results of the bitwise AND operation.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Data.SqlTypes.SqlByte.BitwiseOr(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  commentId: M:System.Data.SqlTypes.SqlByte.BitwiseOr(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  id: BitwiseOr(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  parent: System.Data.SqlTypes.SqlByte
  langs:
  - csharp
  - vb
  name: BitwiseOr(SqlByte, SqlByte)
  fullName: System.Data.SqlTypes.SqlByte.BitwiseOr(System.Data.SqlTypes.SqlByte, System.Data.SqlTypes.SqlByte)
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLByte.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: BitwiseOr
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLByte.cs
    startLine: 442
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: Computes the bitwise OR of its two <xref href="System.Data.SqlTypes.SqlByte" data-throw-if-not-resolved="false"></xref> operands.
  syntax:
    content: public static SqlByte BitwiseOr(SqlByte x, SqlByte y)
    content.vb: Public Shared Function BitwiseOr(x As SqlByte, y As SqlByte) As SqlByte
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlByte
      description: 'A <xref href="System.Data.SqlTypes.SqlByte" data-throw-if-not-resolved="false"></xref> structure. '
    - id: y
      type: System.Data.SqlTypes.SqlByte
      description: 'A <xref href="System.Data.SqlTypes.SqlByte" data-throw-if-not-resolved="false"></xref> structure. '
    return:
      type: System.Data.SqlTypes.SqlByte
      description: The results of the bitwise OR operation.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Data.SqlTypes.SqlByte.CompareTo(System.Data.SqlTypes.SqlByte)
  commentId: M:System.Data.SqlTypes.SqlByte.CompareTo(System.Data.SqlTypes.SqlByte)
  id: CompareTo(System.Data.SqlTypes.SqlByte)
  parent: System.Data.SqlTypes.SqlByte
  langs:
  - csharp
  - vb
  name: CompareTo(SqlByte)
  fullName: System.Data.SqlTypes.SqlByte.CompareTo(System.Data.SqlTypes.SqlByte)
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLByte.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CompareTo
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLByte.cs
    startLine: 559
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: Compares this instance to the supplied <xref href="System.Data.SqlTypes.SqlByte" data-throw-if-not-resolved="false"></xref> object and returns an indication of their relative values.
  syntax:
    content: public int CompareTo(SqlByte value)
    content.vb: Public Function CompareTo(value As SqlByte) As Integer
    parameters:
    - id: value
      type: System.Data.SqlTypes.SqlByte
      description: The <xref href="System.Data.SqlTypes.SqlByte" data-throw-if-not-resolved="false"></xref> object to be compared.
    return:
      type: System.Int32
      description: 'A signed number that indicates the relative values of the instance and the object.Return Value Condition Less than zero This instance is less than the object. Zero This instance is the same as the object. Greater than zero This instance is greater than the object -or- The object is a null reference (Nothing in Visual Basic) '
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Data.SqlTypes.SqlByte.CompareTo(System.Object)
  commentId: M:System.Data.SqlTypes.SqlByte.CompareTo(System.Object)
  id: CompareTo(System.Object)
  parent: System.Data.SqlTypes.SqlByte
  langs:
  - csharp
  - vb
  name: CompareTo(Object)
  fullName: System.Data.SqlTypes.SqlByte.CompareTo(System.Object)
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/ref/System.Data.SqlClient.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CompareTo
    path: src/System.Data.SqlClient/ref/System.Data.SqlClient.cs
    startLine: 713
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: Compares this instance to the supplied <xref href="System.Object" data-throw-if-not-resolved="false"></xref> and returns an indication of their relative values.
  syntax:
    content: public int CompareTo(object value)
    content.vb: Public Function CompareTo(value As Object) As Integer
    parameters:
    - id: value
      type: System.Object
      description: The <xref href="System.Object" data-throw-if-not-resolved="false"></xref> to be compared.
    return:
      type: System.Int32
      description: 'A signed number that indicates the relative values of the instance and the object.Return Value Condition Less than zero This instance is less than the object. Zero This instance is the same as the object. Greater than zero This instance is greater than the object -or- The object is a null reference (Nothing in Visual Basic) '
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Data.SqlTypes.SqlByte.Divide(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  commentId: M:System.Data.SqlTypes.SqlByte.Divide(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  id: Divide(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  parent: System.Data.SqlTypes.SqlByte
  langs:
  - csharp
  - vb
  name: Divide(SqlByte, SqlByte)
  fullName: System.Data.SqlTypes.SqlByte.Divide(System.Data.SqlTypes.SqlByte, System.Data.SqlTypes.SqlByte)
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLByte.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Divide
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLByte.cs
    startLine: 419
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: Divides its first <xref href="System.Data.SqlTypes.SqlByte" data-throw-if-not-resolved="false"></xref> operand by its second.
  syntax:
    content: public static SqlByte Divide(SqlByte x, SqlByte y)
    content.vb: Public Shared Function Divide(x As SqlByte, y As SqlByte) As SqlByte
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlByte
      description: 'A <xref href="System.Data.SqlTypes.SqlByte" data-throw-if-not-resolved="false"></xref> structure. '
    - id: y
      type: System.Data.SqlTypes.SqlByte
      description: 'A <xref href="System.Data.SqlTypes.SqlByte" data-throw-if-not-resolved="false"></xref> structure. '
    return:
      type: System.Data.SqlTypes.SqlByte
      description: A new <xref href="System.Data.SqlTypes.SqlByte" data-throw-if-not-resolved="false"></xref> structure whose <xref href="System.Data.SqlTypes.SqlByte.Value" data-throw-if-not-resolved="false"></xref> property contains the results of the division.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Data.SqlTypes.SqlByte.Equals(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  commentId: M:System.Data.SqlTypes.SqlByte.Equals(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  id: Equals(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  parent: System.Data.SqlTypes.SqlByte
  langs:
  - csharp
  - vb
  name: Equals(SqlByte, SqlByte)
  fullName: System.Data.SqlTypes.SqlByte.Equals(System.Data.SqlTypes.SqlByte, System.Data.SqlTypes.SqlByte)
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLByte.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Equals
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLByte.cs
    startLine: 454
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: Performs a logical comparison of two <xref href="System.Data.SqlTypes.SqlByte" data-throw-if-not-resolved="false"></xref> structures to determine whether they are equal.
  syntax:
    content: public static SqlBoolean Equals(SqlByte x, SqlByte y)
    content.vb: Public Shared Function Equals(x As SqlByte, y As SqlByte) As SqlBoolean
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlByte
      description: 'A <xref href="System.Data.SqlTypes.SqlByte" data-throw-if-not-resolved="false"></xref> structure. '
    - id: y
      type: System.Data.SqlTypes.SqlByte
      description: 'A <xref href="System.Data.SqlTypes.SqlByte" data-throw-if-not-resolved="false"></xref> structure. '
    return:
      type: System.Data.SqlTypes.SqlBoolean
      description: true if the two values are equal. Otherwise, false. If either instance is null, then the SqlByte will be null.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Data.SqlTypes.SqlByte.Equals(System.Object)
  commentId: M:System.Data.SqlTypes.SqlByte.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Data.SqlTypes.SqlByte
  langs:
  - csharp
  - vb
  name: Equals(Object)
  fullName: System.Data.SqlTypes.SqlByte.Equals(System.Object)
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/ref/System.Data.SqlClient.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Equals
    path: src/System.Data.SqlClient/ref/System.Data.SqlClient.cs
    startLine: 716
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: Compares the supplied <xref href="System.Object" data-throw-if-not-resolved="false"></xref> parameter to the <xref href="System.Data.SqlTypes.SqlByte.Value" data-throw-if-not-resolved="false"></xref> property of the <xref href="System.Data.SqlTypes.SqlByte" data-throw-if-not-resolved="false"></xref> object.
  syntax:
    content: public override bool Equals(object value)
    content.vb: Public Overrides Function Equals(value As Object) As Boolean
    parameters:
    - id: value
      type: System.Object
      description: 'The <xref href="System.Object" data-throw-if-not-resolved="false"></xref> to be compared. '
    return:
      type: System.Boolean
      description: true if object is an instance of <xref href="System.Data.SqlTypes.SqlByte" data-throw-if-not-resolved="false"></xref> and the two are equal; otherwise false.
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Data.SqlTypes.SqlByte.GetHashCode
  commentId: M:System.Data.SqlTypes.SqlByte.GetHashCode
  id: GetHashCode
  parent: System.Data.SqlTypes.SqlByte
  langs:
  - csharp
  - vb
  name: GetHashCode()
  fullName: System.Data.SqlTypes.SqlByte.GetHashCode()
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLByte.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetHashCode
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLByte.cs
    startLine: 596
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: Returns the hash code for this instance.
  syntax:
    content: public override int GetHashCode()
    content.vb: Public Overrides Function GetHashCode As Integer
    return:
      type: System.Int32
      description: A 32-bit signed integer hash code.
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Data.SqlTypes.SqlByte.GreaterThan(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  commentId: M:System.Data.SqlTypes.SqlByte.GreaterThan(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  id: GreaterThan(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  parent: System.Data.SqlTypes.SqlByte
  langs:
  - csharp
  - vb
  name: GreaterThan(SqlByte, SqlByte)
  fullName: System.Data.SqlTypes.SqlByte.GreaterThan(System.Data.SqlTypes.SqlByte, System.Data.SqlTypes.SqlByte)
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLByte.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GreaterThan
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLByte.cs
    startLine: 472
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: Compares two instances of <xref href="System.Data.SqlTypes.SqlByte" data-throw-if-not-resolved="false"></xref> to determine whether the first is greater than the second.
  syntax:
    content: public static SqlBoolean GreaterThan(SqlByte x, SqlByte y)
    content.vb: Public Shared Function GreaterThan(x As SqlByte, y As SqlByte) As SqlBoolean
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlByte
      description: 'A <xref href="System.Data.SqlTypes.SqlByte" data-throw-if-not-resolved="false"></xref> structure. '
    - id: y
      type: System.Data.SqlTypes.SqlByte
      description: 'A <xref href="System.Data.SqlTypes.SqlByte" data-throw-if-not-resolved="false"></xref> structure. '
    return:
      type: System.Data.SqlTypes.SqlBoolean
      description: A <xref href="System.Data.SqlTypes.SqlBoolean" data-throw-if-not-resolved="false"></xref> that is <xref href="System.Data.SqlTypes.SqlBoolean.True" data-throw-if-not-resolved="false"></xref> if the first instance is greater than the second instance. Otherwise, <xref href="System.Data.SqlTypes.SqlBoolean.False" data-throw-if-not-resolved="false"></xref>. If either instance of <xref href="System.Data.SqlTypes.SqlByte" data-throw-if-not-resolved="false"></xref> is null, the <xref href="System.Data.SqlTypes.SqlBoolean.Value" data-throw-if-not-resolved="false"></xref> of the <xref href="System.Data.SqlTypes.SqlBoolean" data-throw-if-not-resolved="false"></xref> will be <xref href="System.Data.SqlTypes.SqlBoolean.Null" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Data.SqlTypes.SqlByte.GreaterThanOrEqual(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  commentId: M:System.Data.SqlTypes.SqlByte.GreaterThanOrEqual(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  id: GreaterThanOrEqual(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  parent: System.Data.SqlTypes.SqlByte
  langs:
  - csharp
  - vb
  name: GreaterThanOrEqual(SqlByte, SqlByte)
  fullName: System.Data.SqlTypes.SqlByte.GreaterThanOrEqual(System.Data.SqlTypes.SqlByte, System.Data.SqlTypes.SqlByte)
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLByte.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GreaterThanOrEqual
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLByte.cs
    startLine: 484
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: Compares two <xref href="System.Data.SqlTypes.SqlByte" data-throw-if-not-resolved="false"></xref> structures to determine whether the first is greater than or equal to the second.
  syntax:
    content: public static SqlBoolean GreaterThanOrEqual(SqlByte x, SqlByte y)
    content.vb: Public Shared Function GreaterThanOrEqual(x As SqlByte, y As SqlByte) As SqlBoolean
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlByte
      description: 'A <xref href="System.Data.SqlTypes.SqlByte" data-throw-if-not-resolved="false"></xref> structure. '
    - id: y
      type: System.Data.SqlTypes.SqlByte
      description: 'A <xref href="System.Data.SqlTypes.SqlByte" data-throw-if-not-resolved="false"></xref> structure. '
    return:
      type: System.Data.SqlTypes.SqlBoolean
      description: A <xref href="System.Data.SqlTypes.SqlBoolean" data-throw-if-not-resolved="false"></xref> that is <xref href="System.Data.SqlTypes.SqlBoolean.True" data-throw-if-not-resolved="false"></xref> if the first instance is greater than or equal to the second instance. Otherwise, <xref href="System.Data.SqlTypes.SqlBoolean.False" data-throw-if-not-resolved="false"></xref>. If either instance of <xref href="System.Data.SqlTypes.SqlByte" data-throw-if-not-resolved="false"></xref> is null, the <xref href="System.Data.SqlTypes.SqlBoolean.Value" data-throw-if-not-resolved="false"></xref> of the <xref href="System.Data.SqlTypes.SqlBoolean" data-throw-if-not-resolved="false"></xref> will be <xref href="System.Data.SqlTypes.SqlBoolean.Null" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Data.SqlTypes.SqlByte.LessThan(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  commentId: M:System.Data.SqlTypes.SqlByte.LessThan(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  id: LessThan(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  parent: System.Data.SqlTypes.SqlByte
  langs:
  - csharp
  - vb
  name: LessThan(SqlByte, SqlByte)
  fullName: System.Data.SqlTypes.SqlByte.LessThan(System.Data.SqlTypes.SqlByte, System.Data.SqlTypes.SqlByte)
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLByte.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: LessThan
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLByte.cs
    startLine: 466
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: Compares two instances of <xref href="System.Data.SqlTypes.SqlByte" data-throw-if-not-resolved="false"></xref> to determine whether the first is less than the second.
  syntax:
    content: public static SqlBoolean LessThan(SqlByte x, SqlByte y)
    content.vb: Public Shared Function LessThan(x As SqlByte, y As SqlByte) As SqlBoolean
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlByte
      description: 'A <xref href="System.Data.SqlTypes.SqlByte" data-throw-if-not-resolved="false"></xref> structure. '
    - id: y
      type: System.Data.SqlTypes.SqlByte
      description: 'A <xref href="System.Data.SqlTypes.SqlByte" data-throw-if-not-resolved="false"></xref> structure. '
    return:
      type: System.Data.SqlTypes.SqlBoolean
      description: A <xref href="System.Data.SqlTypes.SqlBoolean" data-throw-if-not-resolved="false"></xref> that is <xref href="System.Data.SqlTypes.SqlBoolean.True" data-throw-if-not-resolved="false"></xref> if the first instance is less than the second instance. Otherwise, <xref href="System.Data.SqlTypes.SqlBoolean.False" data-throw-if-not-resolved="false"></xref>. If either instance of <xref href="System.Data.SqlTypes.SqlByte" data-throw-if-not-resolved="false"></xref> is null, the <xref href="System.Data.SqlTypes.SqlBoolean.Value" data-throw-if-not-resolved="false"></xref> of the <xref href="System.Data.SqlTypes.SqlBoolean" data-throw-if-not-resolved="false"></xref> will be <xref href="System.Data.SqlTypes.SqlBoolean.Null" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Data.SqlTypes.SqlByte.LessThanOrEqual(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  commentId: M:System.Data.SqlTypes.SqlByte.LessThanOrEqual(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  id: LessThanOrEqual(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  parent: System.Data.SqlTypes.SqlByte
  langs:
  - csharp
  - vb
  name: LessThanOrEqual(SqlByte, SqlByte)
  fullName: System.Data.SqlTypes.SqlByte.LessThanOrEqual(System.Data.SqlTypes.SqlByte, System.Data.SqlTypes.SqlByte)
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLByte.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: LessThanOrEqual
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLByte.cs
    startLine: 478
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: Compares two instances of <xref href="System.Data.SqlTypes.SqlByte" data-throw-if-not-resolved="false"></xref> to determine whether the first is less than or equal to the second.
  syntax:
    content: public static SqlBoolean LessThanOrEqual(SqlByte x, SqlByte y)
    content.vb: Public Shared Function LessThanOrEqual(x As SqlByte, y As SqlByte) As SqlBoolean
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlByte
      description: 'A <xref href="System.Data.SqlTypes.SqlByte" data-throw-if-not-resolved="false"></xref> structure. '
    - id: y
      type: System.Data.SqlTypes.SqlByte
      description: 'A <xref href="System.Data.SqlTypes.SqlByte" data-throw-if-not-resolved="false"></xref> structure. '
    return:
      type: System.Data.SqlTypes.SqlBoolean
      description: A <xref href="System.Data.SqlTypes.SqlBoolean" data-throw-if-not-resolved="false"></xref> that is <xref href="System.Data.SqlTypes.SqlBoolean.True" data-throw-if-not-resolved="false"></xref> if the first instance is less than or equal to the second instance. Otherwise, <xref href="System.Data.SqlTypes.SqlBoolean.False" data-throw-if-not-resolved="false"></xref>. If either instance of <xref href="System.Data.SqlTypes.SqlByte" data-throw-if-not-resolved="false"></xref> is null, the <xref href="System.Data.SqlTypes.SqlBoolean.Value" data-throw-if-not-resolved="false"></xref> of the <xref href="System.Data.SqlTypes.SqlBoolean" data-throw-if-not-resolved="false"></xref> will be <xref href="System.Data.SqlTypes.SqlBoolean.Null" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Data.SqlTypes.SqlByte.Mod(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  commentId: M:System.Data.SqlTypes.SqlByte.Mod(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  id: Mod(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  parent: System.Data.SqlTypes.SqlByte
  langs:
  - csharp
  - vb
  name: Mod(SqlByte, SqlByte)
  fullName: System.Data.SqlTypes.SqlByte.Mod(System.Data.SqlTypes.SqlByte, System.Data.SqlTypes.SqlByte)
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLByte.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Mod
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLByte.cs
    startLine: 425
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: Computes the remainder after dividing its first <xref href="System.Data.SqlTypes.SqlByte" data-throw-if-not-resolved="false"></xref> operand by its second.
  syntax:
    content: public static SqlByte Mod(SqlByte x, SqlByte y)
    content.vb: Public Shared Function Mod(x As SqlByte, y As SqlByte) As SqlByte
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlByte
      description: 'A <xref href="System.Data.SqlTypes.SqlByte" data-throw-if-not-resolved="false"></xref> structure. '
    - id: y
      type: System.Data.SqlTypes.SqlByte
      description: 'A <xref href="System.Data.SqlTypes.SqlByte" data-throw-if-not-resolved="false"></xref> structure. '
    return:
      type: System.Data.SqlTypes.SqlByte
      description: A <xref href="System.Data.SqlTypes.SqlByte" data-throw-if-not-resolved="false"></xref> structure whose <xref href="System.Data.SqlTypes.SqlByte.Value" data-throw-if-not-resolved="false"></xref> contains the remainder.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Data.SqlTypes.SqlByte.Modulus(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  commentId: M:System.Data.SqlTypes.SqlByte.Modulus(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  id: Modulus(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  parent: System.Data.SqlTypes.SqlByte
  langs:
  - csharp
  - vb
  name: Modulus(SqlByte, SqlByte)
  fullName: System.Data.SqlTypes.SqlByte.Modulus(System.Data.SqlTypes.SqlByte, System.Data.SqlTypes.SqlByte)
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLByte.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Modulus
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLByte.cs
    startLine: 430
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: Divides two <xref href="System.Data.SqlTypes.SqlByte" data-throw-if-not-resolved="false"></xref> values and returns the remainder.
  syntax:
    content: public static SqlByte Modulus(SqlByte x, SqlByte y)
    content.vb: Public Shared Function Modulus(x As SqlByte, y As SqlByte) As SqlByte
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlByte
      description: A <xref href="System.Data.SqlTypes.SqlByte" data-throw-if-not-resolved="false"></xref>.
    - id: y
      type: System.Data.SqlTypes.SqlByte
      description: A <xref href="System.Data.SqlTypes.SqlByte" data-throw-if-not-resolved="false"></xref>.
    return:
      type: System.Data.SqlTypes.SqlByte
      description: The remainder left after division is performed on <em>x</em> and <em>y</em>.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Data.SqlTypes.SqlByte.Multiply(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  commentId: M:System.Data.SqlTypes.SqlByte.Multiply(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  id: Multiply(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  parent: System.Data.SqlTypes.SqlByte
  langs:
  - csharp
  - vb
  name: Multiply(SqlByte, SqlByte)
  fullName: System.Data.SqlTypes.SqlByte.Multiply(System.Data.SqlTypes.SqlByte, System.Data.SqlTypes.SqlByte)
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLByte.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Multiply
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLByte.cs
    startLine: 413
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: Computes the product of the two <xref href="System.Data.SqlTypes.SqlByte" data-throw-if-not-resolved="false"></xref> operands.
  syntax:
    content: public static SqlByte Multiply(SqlByte x, SqlByte y)
    content.vb: Public Shared Function Multiply(x As SqlByte, y As SqlByte) As SqlByte
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlByte
      description: 'A <xref href="System.Data.SqlTypes.SqlByte" data-throw-if-not-resolved="false"></xref> structure. '
    - id: y
      type: System.Data.SqlTypes.SqlByte
      description: 'A <xref href="System.Data.SqlTypes.SqlByte" data-throw-if-not-resolved="false"></xref> structure. '
    return:
      type: System.Data.SqlTypes.SqlByte
      description: A new <xref href="System.Data.SqlTypes.SqlByte" data-throw-if-not-resolved="false"></xref> structure whose <xref href="System.Data.SqlTypes.SqlByte.Value" data-throw-if-not-resolved="false"></xref> property contains the product of the multiplication.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Data.SqlTypes.SqlByte.NotEquals(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  commentId: M:System.Data.SqlTypes.SqlByte.NotEquals(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  id: NotEquals(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  parent: System.Data.SqlTypes.SqlByte
  langs:
  - csharp
  - vb
  name: NotEquals(SqlByte, SqlByte)
  fullName: System.Data.SqlTypes.SqlByte.NotEquals(System.Data.SqlTypes.SqlByte, System.Data.SqlTypes.SqlByte)
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLByte.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: NotEquals
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLByte.cs
    startLine: 460
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: Compares two instances of <xref href="System.Data.SqlTypes.SqlByte" data-throw-if-not-resolved="false"></xref> to determine whether they are not equal.
  syntax:
    content: public static SqlBoolean NotEquals(SqlByte x, SqlByte y)
    content.vb: Public Shared Function NotEquals(x As SqlByte, y As SqlByte) As SqlBoolean
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlByte
      description: 'A <xref href="System.Data.SqlTypes.SqlByte" data-throw-if-not-resolved="false"></xref> structure. '
    - id: y
      type: System.Data.SqlTypes.SqlByte
      description: 'A <xref href="System.Data.SqlTypes.SqlByte" data-throw-if-not-resolved="false"></xref> structure. '
    return:
      type: System.Data.SqlTypes.SqlBoolean
      description: A <xref href="System.Data.SqlTypes.SqlBoolean" data-throw-if-not-resolved="false"></xref> that is <xref href="System.Data.SqlTypes.SqlBoolean.True" data-throw-if-not-resolved="false"></xref> if the two instances are not equal or <xref href="System.Data.SqlTypes.SqlBoolean.False" data-throw-if-not-resolved="false"></xref> if the two instances are equal. If either instance of <xref href="System.Data.SqlTypes.SqlByte" data-throw-if-not-resolved="false"></xref> is null, the <xref href="System.Data.SqlTypes.SqlBoolean.Value" data-throw-if-not-resolved="false"></xref> of the <xref href="System.Data.SqlTypes.SqlBoolean" data-throw-if-not-resolved="false"></xref> will be <xref href="System.Data.SqlTypes.SqlBoolean.Null" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Data.SqlTypes.SqlByte.OnesComplement(System.Data.SqlTypes.SqlByte)
  commentId: M:System.Data.SqlTypes.SqlByte.OnesComplement(System.Data.SqlTypes.SqlByte)
  id: OnesComplement(System.Data.SqlTypes.SqlByte)
  parent: System.Data.SqlTypes.SqlByte
  langs:
  - csharp
  - vb
  name: OnesComplement(SqlByte)
  fullName: System.Data.SqlTypes.SqlByte.OnesComplement(System.Data.SqlTypes.SqlByte)
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLByte.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: OnesComplement
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLByte.cs
    startLine: 395
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: The ones complement operator performs a bitwise one's complement operation on its <xref href="System.Data.SqlTypes.SqlByte" data-throw-if-not-resolved="false"></xref> operand.
  syntax:
    content: public static SqlByte OnesComplement(SqlByte x)
    content.vb: Public Shared Function OnesComplement(x As SqlByte) As SqlByte
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlByte
      description: 'A <xref href="System.Data.SqlTypes.SqlByte" data-throw-if-not-resolved="false"></xref> structure. '
    return:
      type: System.Data.SqlTypes.SqlByte
      description: A <xref href="System.Data.SqlTypes.SqlByte" data-throw-if-not-resolved="false"></xref> structure whose <xref href="System.Data.SqlTypes.SqlByte.Value" data-throw-if-not-resolved="false"></xref> property contains the ones complement of the <xref href="System.Data.SqlTypes.SqlByte" data-throw-if-not-resolved="false"></xref> parameter.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Data.SqlTypes.SqlByte.op_Addition(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  commentId: M:System.Data.SqlTypes.SqlByte.op_Addition(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  id: op_Addition(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  parent: System.Data.SqlTypes.SqlByte
  langs:
  - csharp
  - vb
  name: Addition(SqlByte, SqlByte)
  fullName: System.Data.SqlTypes.SqlByte.Addition(System.Data.SqlTypes.SqlByte, System.Data.SqlTypes.SqlByte)
  type: Operator
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLByte.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_Addition
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLByte.cs
    startLine: 123
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: Computes the sum of the two specified <xref href="System.Data.SqlTypes.SqlByte" data-throw-if-not-resolved="false"></xref> structures.
  syntax:
    content: public static SqlByte operator +(SqlByte x, SqlByte y)
    content.vb: Public Shared Operator +(x As SqlByte, y As SqlByte) As SqlByte
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlByte
      description: 'A <xref href="System.Data.SqlTypes.SqlByte" data-throw-if-not-resolved="false"></xref> structure. '
    - id: y
      type: System.Data.SqlTypes.SqlByte
      description: 'A <xref href="System.Data.SqlTypes.SqlByte" data-throw-if-not-resolved="false"></xref> structure. '
    return:
      type: System.Data.SqlTypes.SqlByte
      description: A <xref href="System.Data.SqlTypes.SqlByte" data-throw-if-not-resolved="false"></xref> whose <xref href="System.Data.SqlTypes.SqlByte.Value" data-throw-if-not-resolved="false"></xref> property contains the sum of the two operands.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Data.SqlTypes.SqlByte.op_BitwiseAnd(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  commentId: M:System.Data.SqlTypes.SqlByte.op_BitwiseAnd(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  id: op_BitwiseAnd(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  parent: System.Data.SqlTypes.SqlByte
  langs:
  - csharp
  - vb
  name: BitwiseAnd(SqlByte, SqlByte)
  fullName: System.Data.SqlTypes.SqlByte.BitwiseAnd(System.Data.SqlTypes.SqlByte, System.Data.SqlTypes.SqlByte)
  type: Operator
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLByte.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_BitwiseAnd
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLByte.cs
    startLine: 201
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: Computes the bitwise AND of its <xref href="System.Data.SqlTypes.SqlByte" data-throw-if-not-resolved="false"></xref> operands.
  syntax:
    content: public static SqlByte operator &(SqlByte x, SqlByte y)
    content.vb: Public Shared Operator And(x As SqlByte, y As SqlByte) As SqlByte
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlByte
      description: 'A <xref href="System.Data.SqlTypes.SqlByte" data-throw-if-not-resolved="false"></xref> structure. '
    - id: y
      type: System.Data.SqlTypes.SqlByte
      description: 'A <xref href="System.Data.SqlTypes.SqlByte" data-throw-if-not-resolved="false"></xref> structure. '
    return:
      type: System.Data.SqlTypes.SqlByte
      description: The results of the bitwise AND operation.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Data.SqlTypes.SqlByte.op_BitwiseOr(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  commentId: M:System.Data.SqlTypes.SqlByte.op_BitwiseOr(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  id: op_BitwiseOr(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  parent: System.Data.SqlTypes.SqlByte
  langs:
  - csharp
  - vb
  name: BitwiseOr(SqlByte, SqlByte)
  fullName: System.Data.SqlTypes.SqlByte.BitwiseOr(System.Data.SqlTypes.SqlByte, System.Data.SqlTypes.SqlByte)
  type: Operator
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLByte.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_BitwiseOr
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLByte.cs
    startLine: 209
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: Computes the bitwise OR of its two <xref href="System.Data.SqlTypes.SqlByte" data-throw-if-not-resolved="false"></xref> operands.
  syntax:
    content: public static SqlByte operator |(SqlByte x, SqlByte y)
    content.vb: Public Shared Operator Or(x As SqlByte, y As SqlByte) As SqlByte
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlByte
      description: 'A <xref href="System.Data.SqlTypes.SqlByte" data-throw-if-not-resolved="false"></xref> structure. '
    - id: y
      type: System.Data.SqlTypes.SqlByte
      description: 'A <xref href="System.Data.SqlTypes.SqlByte" data-throw-if-not-resolved="false"></xref> structure. '
    return:
      type: System.Data.SqlTypes.SqlByte
      description: The results of the bitwise OR operation.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Data.SqlTypes.SqlByte.op_Division(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  commentId: M:System.Data.SqlTypes.SqlByte.op_Division(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  id: op_Division(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  parent: System.Data.SqlTypes.SqlByte
  langs:
  - csharp
  - vb
  name: Division(SqlByte, SqlByte)
  fullName: System.Data.SqlTypes.SqlByte.Division(System.Data.SqlTypes.SqlByte, System.Data.SqlTypes.SqlByte)
  type: Operator
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLByte.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_Division
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLByte.cs
    startLine: 168
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: Divides its first <xref href="System.Data.SqlTypes.SqlByte" data-throw-if-not-resolved="false"></xref> operand by its second.
  syntax:
    content: public static SqlByte operator /(SqlByte x, SqlByte y)
    content.vb: Public Shared Operator /(x As SqlByte, y As SqlByte) As SqlByte
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlByte
      description: 'A <xref href="System.Data.SqlTypes.SqlByte" data-throw-if-not-resolved="false"></xref> structure. '
    - id: y
      type: System.Data.SqlTypes.SqlByte
      description: 'A <xref href="System.Data.SqlTypes.SqlByte" data-throw-if-not-resolved="false"></xref> structure. '
    return:
      type: System.Data.SqlTypes.SqlByte
      description: A new <xref href="System.Data.SqlTypes.SqlByte" data-throw-if-not-resolved="false"></xref> structure whose <xref href="System.Data.SqlTypes.SqlByte.Value" data-throw-if-not-resolved="false"></xref> property contains the results of the division.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Data.SqlTypes.SqlByte.op_Equality(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  commentId: M:System.Data.SqlTypes.SqlByte.op_Equality(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  id: op_Equality(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  parent: System.Data.SqlTypes.SqlByte
  langs:
  - csharp
  - vb
  name: Equality(SqlByte, SqlByte)
  fullName: System.Data.SqlTypes.SqlByte.Equality(System.Data.SqlTypes.SqlByte, System.Data.SqlTypes.SqlByte)
  type: Operator
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLByte.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_Equality
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLByte.cs
    startLine: 345
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: Performs a logical comparison of two <xref href="System.Data.SqlTypes.SqlByte" data-throw-if-not-resolved="false"></xref> structures to determine whether they are equal.
  syntax:
    content: public static SqlBoolean operator ==(SqlByte x, SqlByte y)
    content.vb: Public Shared Operator =(x As SqlByte, y As SqlByte) As SqlBoolean
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlByte
      description: 'A <xref href="System.Data.SqlTypes.SqlByte" data-throw-if-not-resolved="false"></xref> structure. '
    - id: y
      type: System.Data.SqlTypes.SqlByte
      description: 'A <xref href="System.Data.SqlTypes.SqlByte" data-throw-if-not-resolved="false"></xref> structure. '
    return:
      type: System.Data.SqlTypes.SqlBoolean
      description: A <xref href="System.Data.SqlTypes.SqlBoolean" data-throw-if-not-resolved="false"></xref> that is <xref href="System.Data.SqlTypes.SqlBoolean.True" data-throw-if-not-resolved="false"></xref> if the two instances are equal or <xref href="System.Data.SqlTypes.SqlBoolean.False" data-throw-if-not-resolved="false"></xref> if the two instances are not equal. If either instance of <xref href="System.Data.SqlTypes.SqlByte" data-throw-if-not-resolved="false"></xref> is null, the <xref href="System.Data.SqlTypes.SqlBoolean.Value" data-throw-if-not-resolved="false"></xref> of the <xref href="System.Data.SqlTypes.SqlBoolean" data-throw-if-not-resolved="false"></xref> will be <xref href="System.Data.SqlTypes.SqlBoolean.Null" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Data.SqlTypes.SqlByte.op_ExclusiveOr(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  commentId: M:System.Data.SqlTypes.SqlByte.op_ExclusiveOr(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  id: op_ExclusiveOr(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  parent: System.Data.SqlTypes.SqlByte
  langs:
  - csharp
  - vb
  name: ExclusiveOr(SqlByte, SqlByte)
  fullName: System.Data.SqlTypes.SqlByte.ExclusiveOr(System.Data.SqlTypes.SqlByte, System.Data.SqlTypes.SqlByte)
  type: Operator
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLByte.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_ExclusiveOr
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLByte.cs
    startLine: 217
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: Performs a bitwise exclusive-OR operation on the supplied parameters.
  syntax:
    content: public static SqlByte operator ^(SqlByte x, SqlByte y)
    content.vb: Public Shared Operator Xor(x As SqlByte, y As SqlByte) As SqlByte
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlByte
      description: 'A <xref href="System.Data.SqlTypes.SqlByte" data-throw-if-not-resolved="false"></xref> structure. '
    - id: y
      type: System.Data.SqlTypes.SqlByte
      description: 'A <xref href="System.Data.SqlTypes.SqlByte" data-throw-if-not-resolved="false"></xref> structure. '
    return:
      type: System.Data.SqlTypes.SqlByte
      description: The results of the bitwise XOR operation.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlBoolean)~System.Data.SqlTypes.SqlByte
  commentId: M:System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlBoolean)~System.Data.SqlTypes.SqlByte
  id: op_Explicit(System.Data.SqlTypes.SqlBoolean)~System.Data.SqlTypes.SqlByte
  parent: System.Data.SqlTypes.SqlByte
  langs:
  - csharp
  - vb
  name: Explicit(SqlBoolean to SqlByte)
  fullName: System.Data.SqlTypes.SqlByte.Explicit(System.Data.SqlTypes.SqlBoolean to System.Data.SqlTypes.SqlByte)
  type: Operator
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLByte.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_Explicit
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLByte.cs
    startLine: 230
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: Converts the <xref href="System.Data.SqlTypes.SqlBoolean" data-throw-if-not-resolved="false"></xref> parameter to a <xref href="System.Data.SqlTypes.SqlByte" data-throw-if-not-resolved="false"></xref>.
  syntax:
    content: public static explicit operator SqlByte(SqlBoolean x)
    content.vb: Public Shared Narrowing Operator CType(x As SqlBoolean) As SqlByte
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlBoolean
      description: 'The <xref href="System.Data.SqlTypes.SqlBoolean" data-throw-if-not-resolved="false"></xref> parameter to be converted to a <xref href="System.Data.SqlTypes.SqlByte" data-throw-if-not-resolved="false"></xref>. '
    return:
      type: System.Data.SqlTypes.SqlByte
      description: A <xref href="System.Data.SqlTypes.SqlByte" data-throw-if-not-resolved="false"></xref> whose <xref href="System.Data.SqlTypes.SqlByte.Value" data-throw-if-not-resolved="false"></xref> property equals the <xref href="System.Data.SqlTypes.SqlBoolean.ByteValue" data-throw-if-not-resolved="false"></xref> of the supplied <xref href="System.Data.SqlTypes.SqlBoolean" data-throw-if-not-resolved="false"></xref> parameter.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Data.SqlTypes.SqlByte.Narrowing(System.Data.SqlTypes.SqlBoolean to System.Data.SqlTypes.SqlByte)
  name.vb: Narrowing(SqlBoolean to SqlByte)
- uid: System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlByte)~System.Byte
  commentId: M:System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlByte)~System.Byte
  id: op_Explicit(System.Data.SqlTypes.SqlByte)~System.Byte
  parent: System.Data.SqlTypes.SqlByte
  langs:
  - csharp
  - vb
  name: Explicit(SqlByte to Byte)
  fullName: System.Data.SqlTypes.SqlByte.Explicit(System.Data.SqlTypes.SqlByte to System.Byte)
  type: Operator
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLByte.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_Explicit
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLByte.cs
    startLine: 83
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: Converts the supplied <xref href="System.Data.SqlTypes.SqlByte" data-throw-if-not-resolved="false"></xref> structure to a byte.
  syntax:
    content: public static explicit operator byte (SqlByte x)
    content.vb: Public Shared Narrowing Operator CType(x As SqlByte) As Byte
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlByte
      description: 'The <xref href="System.Data.SqlTypes.SqlByte" data-throw-if-not-resolved="false"></xref> structure to be converted to a byte. '
    return:
      type: System.Byte
      description: A byte whose value equals the <xref href="System.Data.SqlTypes.SqlByte.Value" data-throw-if-not-resolved="false"></xref> property of the <xref href="System.Data.SqlTypes.SqlByte" data-throw-if-not-resolved="false"></xref> parameter.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Data.SqlTypes.SqlByte.Narrowing(System.Data.SqlTypes.SqlByte to System.Byte)
  name.vb: Narrowing(SqlByte to Byte)
- uid: System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlDecimal)~System.Data.SqlTypes.SqlByte
  commentId: M:System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlDecimal)~System.Data.SqlTypes.SqlByte
  id: op_Explicit(System.Data.SqlTypes.SqlDecimal)~System.Data.SqlTypes.SqlByte
  parent: System.Data.SqlTypes.SqlByte
  langs:
  - csharp
  - vb
  name: Explicit(SqlDecimal to SqlByte)
  fullName: System.Data.SqlTypes.SqlByte.Explicit(System.Data.SqlTypes.SqlDecimal to System.Data.SqlTypes.SqlByte)
  type: Operator
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLByte.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_Explicit
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLByte.cs
    startLine: 326
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: Converts the supplied <xref href="System.Data.SqlTypes.SqlDecimal" data-throw-if-not-resolved="false"></xref> to <xref href="System.Data.SqlTypes.SqlByte" data-throw-if-not-resolved="false"></xref>.
  syntax:
    content: public static explicit operator SqlByte(SqlDecimal x)
    content.vb: Public Shared Narrowing Operator CType(x As SqlDecimal) As SqlByte
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlDecimal
      description: 'A <xref href="System.Data.SqlTypes.SqlDecimal" data-throw-if-not-resolved="false"></xref> structure. '
    return:
      type: System.Data.SqlTypes.SqlByte
      description: A <xref href="System.Data.SqlTypes.SqlByte" data-throw-if-not-resolved="false"></xref> structure whose <xref href="System.Data.SqlTypes.SqlByte.Value" data-throw-if-not-resolved="false"></xref> property is equal to the <xref href="System.Data.SqlTypes.SqlDecimal.Value" data-throw-if-not-resolved="false"></xref> of the <xref href="System.Data.SqlTypes.SqlDecimal" data-throw-if-not-resolved="false"></xref> parameter.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Data.SqlTypes.SqlByte.Narrowing(System.Data.SqlTypes.SqlDecimal to System.Data.SqlTypes.SqlByte)
  name.vb: Narrowing(SqlDecimal to SqlByte)
- uid: System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlDouble)~System.Data.SqlTypes.SqlByte
  commentId: M:System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlDouble)~System.Data.SqlTypes.SqlByte
  id: op_Explicit(System.Data.SqlTypes.SqlDouble)~System.Data.SqlTypes.SqlByte
  parent: System.Data.SqlTypes.SqlByte
  langs:
  - csharp
  - vb
  name: Explicit(SqlDouble to SqlByte)
  fullName: System.Data.SqlTypes.SqlByte.Explicit(System.Data.SqlTypes.SqlDouble to System.Data.SqlTypes.SqlByte)
  type: Operator
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLByte.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_Explicit
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLByte.cs
    startLine: 311
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: Converts the supplied <xref href="System.Data.SqlTypes.SqlDouble" data-throw-if-not-resolved="false"></xref> to <xref href="System.Data.SqlTypes.SqlByte" data-throw-if-not-resolved="false"></xref>.
  syntax:
    content: public static explicit operator SqlByte(SqlDouble x)
    content.vb: Public Shared Narrowing Operator CType(x As SqlDouble) As SqlByte
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlDouble
      description: 'A <xref href="System.Data.SqlTypes.SqlDouble" data-throw-if-not-resolved="false"></xref> structure. '
    return:
      type: System.Data.SqlTypes.SqlByte
      description: A <xref href="System.Data.SqlTypes.SqlByte" data-throw-if-not-resolved="false"></xref> structure whose <xref href="System.Data.SqlTypes.SqlByte.Value" data-throw-if-not-resolved="false"></xref> property is equal to the <xref href="System.Data.SqlTypes.SqlDouble.Value" data-throw-if-not-resolved="false"></xref> of the <xref href="System.Data.SqlTypes.SqlDouble" data-throw-if-not-resolved="false"></xref> parameter.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Data.SqlTypes.SqlByte.Narrowing(System.Data.SqlTypes.SqlDouble to System.Data.SqlTypes.SqlByte)
  name.vb: Narrowing(SqlDouble to SqlByte)
- uid: System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlInt16)~System.Data.SqlTypes.SqlByte
  commentId: M:System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlInt16)~System.Data.SqlTypes.SqlByte
  id: op_Explicit(System.Data.SqlTypes.SqlInt16)~System.Data.SqlTypes.SqlByte
  parent: System.Data.SqlTypes.SqlByte
  langs:
  - csharp
  - vb
  name: Explicit(SqlInt16 to SqlByte)
  fullName: System.Data.SqlTypes.SqlByte.Explicit(System.Data.SqlTypes.SqlInt16 to System.Data.SqlTypes.SqlByte)
  type: Operator
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLByte.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_Explicit
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLByte.cs
    startLine: 251
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: Converts the <xref href="System.Data.SqlTypes.SqlInt16" data-throw-if-not-resolved="false"></xref> parameter to a <xref href="System.Data.SqlTypes.SqlByte" data-throw-if-not-resolved="false"></xref>.
  syntax:
    content: public static explicit operator SqlByte(SqlInt16 x)
    content.vb: Public Shared Narrowing Operator CType(x As SqlInt16) As SqlByte
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlInt16
      description: 'A <xref href="System.Data.SqlTypes.SqlInt16" data-throw-if-not-resolved="false"></xref> structure. '
    return:
      type: System.Data.SqlTypes.SqlByte
      description: A <xref href="System.Data.SqlTypes.SqlByte" data-throw-if-not-resolved="false"></xref> structure whose <xref href="System.Data.SqlTypes.SqlByte.Value" data-throw-if-not-resolved="false"></xref> property is equal to the <xref href="System.Data.SqlTypes.SqlInt16.Value" data-throw-if-not-resolved="false"></xref> of the <xref href="System.Data.SqlTypes.SqlInt16" data-throw-if-not-resolved="false"></xref> parameter.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Data.SqlTypes.SqlByte.Narrowing(System.Data.SqlTypes.SqlInt16 to System.Data.SqlTypes.SqlByte)
  name.vb: Narrowing(SqlInt16 to SqlByte)
- uid: System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlInt32)~System.Data.SqlTypes.SqlByte
  commentId: M:System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlInt32)~System.Data.SqlTypes.SqlByte
  id: op_Explicit(System.Data.SqlTypes.SqlInt32)~System.Data.SqlTypes.SqlByte
  parent: System.Data.SqlTypes.SqlByte
  langs:
  - csharp
  - vb
  name: Explicit(SqlInt32 to SqlByte)
  fullName: System.Data.SqlTypes.SqlByte.Explicit(System.Data.SqlTypes.SqlInt32 to System.Data.SqlTypes.SqlByte)
  type: Operator
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLByte.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_Explicit
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLByte.cs
    startLine: 266
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: Converts the supplied <xref href="System.Data.SqlTypes.SqlInt32" data-throw-if-not-resolved="false"></xref> to <xref href="System.Data.SqlTypes.SqlByte" data-throw-if-not-resolved="false"></xref>.
  syntax:
    content: public static explicit operator SqlByte(SqlInt32 x)
    content.vb: Public Shared Narrowing Operator CType(x As SqlInt32) As SqlByte
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlInt32
      description: 'A <xref href="System.Data.SqlTypes.SqlInt32" data-throw-if-not-resolved="false"></xref> structure. '
    return:
      type: System.Data.SqlTypes.SqlByte
      description: A <xref href="System.Data.SqlTypes.SqlByte" data-throw-if-not-resolved="false"></xref> structure whose <xref href="System.Data.SqlTypes.SqlByte.Value" data-throw-if-not-resolved="false"></xref> property is equal to the <xref href="System.Data.SqlTypes.SqlInt32.Value" data-throw-if-not-resolved="false"></xref> of the <xref href="System.Data.SqlTypes.SqlInt32" data-throw-if-not-resolved="false"></xref> parameter.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Data.SqlTypes.SqlByte.Narrowing(System.Data.SqlTypes.SqlInt32 to System.Data.SqlTypes.SqlByte)
  name.vb: Narrowing(SqlInt32 to SqlByte)
- uid: System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlInt64)~System.Data.SqlTypes.SqlByte
  commentId: M:System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlInt64)~System.Data.SqlTypes.SqlByte
  id: op_Explicit(System.Data.SqlTypes.SqlInt64)~System.Data.SqlTypes.SqlByte
  parent: System.Data.SqlTypes.SqlByte
  langs:
  - csharp
  - vb
  name: Explicit(SqlInt64 to SqlByte)
  fullName: System.Data.SqlTypes.SqlByte.Explicit(System.Data.SqlTypes.SqlInt64 to System.Data.SqlTypes.SqlByte)
  type: Operator
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLByte.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_Explicit
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLByte.cs
    startLine: 281
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: Converts the supplied <xref href="System.Data.SqlTypes.SqlInt64" data-throw-if-not-resolved="false"></xref> to <xref href="System.Data.SqlTypes.SqlByte" data-throw-if-not-resolved="false"></xref>.
  syntax:
    content: public static explicit operator SqlByte(SqlInt64 x)
    content.vb: Public Shared Narrowing Operator CType(x As SqlInt64) As SqlByte
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlInt64
      description: 'A <xref href="System.Data.SqlTypes.SqlInt64" data-throw-if-not-resolved="false"></xref> structure. '
    return:
      type: System.Data.SqlTypes.SqlByte
      description: A <xref href="System.Data.SqlTypes.SqlByte" data-throw-if-not-resolved="false"></xref> structure whose <xref href="System.Data.SqlTypes.SqlByte.Value" data-throw-if-not-resolved="false"></xref> property is equal to the <xref href="System.Data.SqlTypes.SqlInt64.Value" data-throw-if-not-resolved="false"></xref> of the SqlInt64 parameter.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Data.SqlTypes.SqlByte.Narrowing(System.Data.SqlTypes.SqlInt64 to System.Data.SqlTypes.SqlByte)
  name.vb: Narrowing(SqlInt64 to SqlByte)
- uid: System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlMoney)~System.Data.SqlTypes.SqlByte
  commentId: M:System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlMoney)~System.Data.SqlTypes.SqlByte
  id: op_Explicit(System.Data.SqlTypes.SqlMoney)~System.Data.SqlTypes.SqlByte
  parent: System.Data.SqlTypes.SqlByte
  langs:
  - csharp
  - vb
  name: Explicit(SqlMoney to SqlByte)
  fullName: System.Data.SqlTypes.SqlByte.Explicit(System.Data.SqlTypes.SqlMoney to System.Data.SqlTypes.SqlByte)
  type: Operator
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLByte.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_Explicit
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLByte.cs
    startLine: 242
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: Converts the <xref href="System.Data.SqlTypes.SqlMoney" data-throw-if-not-resolved="false"></xref> parameter to a <xref href="System.Data.SqlTypes.SqlByte" data-throw-if-not-resolved="false"></xref>.
  syntax:
    content: public static explicit operator SqlByte(SqlMoney x)
    content.vb: Public Shared Narrowing Operator CType(x As SqlMoney) As SqlByte
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlMoney
      description: 'A SqlMoney structure. '
    return:
      type: System.Data.SqlTypes.SqlByte
      description: A <xref href="System.Data.SqlTypes.SqlByte" data-throw-if-not-resolved="false"></xref> structure whose <xref href="System.Data.SqlTypes.SqlByte.Value" data-throw-if-not-resolved="false"></xref> property is equal to the <xref href="System.Data.SqlTypes.SqlMoney.Value" data-throw-if-not-resolved="false"></xref> of the <xref href="System.Data.SqlTypes.SqlMoney" data-throw-if-not-resolved="false"></xref> parameter.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Data.SqlTypes.SqlByte.Narrowing(System.Data.SqlTypes.SqlMoney to System.Data.SqlTypes.SqlByte)
  name.vb: Narrowing(SqlMoney to SqlByte)
- uid: System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlSingle)~System.Data.SqlTypes.SqlByte
  commentId: M:System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlSingle)~System.Data.SqlTypes.SqlByte
  id: op_Explicit(System.Data.SqlTypes.SqlSingle)~System.Data.SqlTypes.SqlByte
  parent: System.Data.SqlTypes.SqlByte
  langs:
  - csharp
  - vb
  name: Explicit(SqlSingle to SqlByte)
  fullName: System.Data.SqlTypes.SqlByte.Explicit(System.Data.SqlTypes.SqlSingle to System.Data.SqlTypes.SqlByte)
  type: Operator
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLByte.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_Explicit
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLByte.cs
    startLine: 296
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: Converts the supplied <xref href="System.Data.SqlTypes.SqlSingle" data-throw-if-not-resolved="false"></xref> structure to <xref href="System.Data.SqlTypes.SqlByte" data-throw-if-not-resolved="false"></xref>.
  syntax:
    content: public static explicit operator SqlByte(SqlSingle x)
    content.vb: Public Shared Narrowing Operator CType(x As SqlSingle) As SqlByte
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlSingle
      description: 'A <xref href="System.Data.SqlTypes.SqlSingle" data-throw-if-not-resolved="false"></xref> structure. '
    return:
      type: System.Data.SqlTypes.SqlByte
      description: A <xref href="System.Data.SqlTypes.SqlByte" data-throw-if-not-resolved="false"></xref> structure whose <xref href="System.Data.SqlTypes.SqlByte.Value" data-throw-if-not-resolved="false"></xref> property is equal to the <xref href="System.Data.SqlTypes.SqlSingle.Value" data-throw-if-not-resolved="false"></xref> of the <xref href="System.Data.SqlTypes.SqlSingle" data-throw-if-not-resolved="false"></xref> parameter.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Data.SqlTypes.SqlByte.Narrowing(System.Data.SqlTypes.SqlSingle to System.Data.SqlTypes.SqlByte)
  name.vb: Narrowing(SqlSingle to SqlByte)
- uid: System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlString)~System.Data.SqlTypes.SqlByte
  commentId: M:System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlString)~System.Data.SqlTypes.SqlByte
  id: op_Explicit(System.Data.SqlTypes.SqlString)~System.Data.SqlTypes.SqlByte
  parent: System.Data.SqlTypes.SqlByte
  langs:
  - csharp
  - vb
  name: Explicit(SqlString to SqlByte)
  fullName: System.Data.SqlTypes.SqlByte.Explicit(System.Data.SqlTypes.SqlString to System.Data.SqlTypes.SqlByte)
  type: Operator
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLByte.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_Explicit
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLByte.cs
    startLine: 336
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: Converts the supplied <xref href="System.Data.SqlTypes.SqlString" data-throw-if-not-resolved="false"></xref> to <xref href="System.Data.SqlTypes.SqlByte" data-throw-if-not-resolved="false"></xref>.
  syntax:
    content: public static explicit operator SqlByte(SqlString x)
    content.vb: Public Shared Narrowing Operator CType(x As SqlString) As SqlByte
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlString
      description: 'An instance of the SqlString class. '
    return:
      type: System.Data.SqlTypes.SqlByte
      description: A <xref href="System.Data.SqlTypes.SqlByte" data-throw-if-not-resolved="false"></xref> structure whose <xref href="System.Data.SqlTypes.SqlByte.Value" data-throw-if-not-resolved="false"></xref> property is equal to the numeric value represented by the <xref href="System.Data.SqlTypes.SqlString" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Data.SqlTypes.SqlByte.Narrowing(System.Data.SqlTypes.SqlString to System.Data.SqlTypes.SqlByte)
  name.vb: Narrowing(SqlString to SqlByte)
- uid: System.Data.SqlTypes.SqlByte.op_GreaterThan(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  commentId: M:System.Data.SqlTypes.SqlByte.op_GreaterThan(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  id: op_GreaterThan(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  parent: System.Data.SqlTypes.SqlByte
  langs:
  - csharp
  - vb
  name: GreaterThan(SqlByte, SqlByte)
  fullName: System.Data.SqlTypes.SqlByte.GreaterThan(System.Data.SqlTypes.SqlByte, System.Data.SqlTypes.SqlByte)
  type: Operator
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLByte.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_GreaterThan
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLByte.cs
    startLine: 369
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: Compares two instances of <xref href="System.Data.SqlTypes.SqlByte" data-throw-if-not-resolved="false"></xref> to determine whether the first is greater than the second.
  syntax:
    content: public static SqlBoolean operator>(SqlByte x, SqlByte y)
    content.vb: Public Shared Operator>(x As SqlByte, y As SqlByte) As SqlBoolean
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlByte
      description: 'A <xref href="System.Data.SqlTypes.SqlByte" data-throw-if-not-resolved="false"></xref> structure. '
    - id: y
      type: System.Data.SqlTypes.SqlByte
      description: 'A <xref href="System.Data.SqlTypes.SqlByte" data-throw-if-not-resolved="false"></xref> structure. '
    return:
      type: System.Data.SqlTypes.SqlBoolean
      description: A <xref href="System.Data.SqlTypes.SqlBoolean" data-throw-if-not-resolved="false"></xref> that is <xref href="System.Data.SqlTypes.SqlBoolean.True" data-throw-if-not-resolved="false"></xref> if the first instance is greater than the second instance. Otherwise, <xref href="System.Data.SqlTypes.SqlBoolean.False" data-throw-if-not-resolved="false"></xref>. If either instance of <xref href="System.Data.SqlTypes.SqlByte" data-throw-if-not-resolved="false"></xref> is null, the <xref href="System.Data.SqlTypes.SqlBoolean.Value" data-throw-if-not-resolved="false"></xref> of the <xref href="System.Data.SqlTypes.SqlBoolean" data-throw-if-not-resolved="false"></xref> will be <xref href="System.Data.SqlTypes.SqlBoolean.Null" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Data.SqlTypes.SqlByte.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  commentId: M:System.Data.SqlTypes.SqlByte.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  id: op_GreaterThanOrEqual(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  parent: System.Data.SqlTypes.SqlByte
  langs:
  - csharp
  - vb
  name: GreaterThanOrEqual(SqlByte, SqlByte)
  fullName: System.Data.SqlTypes.SqlByte.GreaterThanOrEqual(System.Data.SqlTypes.SqlByte, System.Data.SqlTypes.SqlByte)
  type: Operator
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLByte.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_GreaterThanOrEqual
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLByte.cs
    startLine: 385
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: Compares two instances of <xref href="System.Data.SqlTypes.SqlByte" data-throw-if-not-resolved="false"></xref> to determine whether the first is greater than or equal to the second.
  syntax:
    content: public static SqlBoolean operator >=(SqlByte x, SqlByte y)
    content.vb: Public Shared Operator >=(x As SqlByte, y As SqlByte) As SqlBoolean
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlByte
      description: 'A <xref href="System.Data.SqlTypes.SqlByte" data-throw-if-not-resolved="false"></xref> structure. '
    - id: y
      type: System.Data.SqlTypes.SqlByte
      description: 'A <xref href="System.Data.SqlTypes.SqlByte" data-throw-if-not-resolved="false"></xref> structure. '
    return:
      type: System.Data.SqlTypes.SqlBoolean
      description: A <xref href="System.Data.SqlTypes.SqlBoolean" data-throw-if-not-resolved="false"></xref> that is <xref href="System.Data.SqlTypes.SqlBoolean.True" data-throw-if-not-resolved="false"></xref> if the first instance is greater than or equal to the second instance. Otherwise, <xref href="System.Data.SqlTypes.SqlBoolean.False" data-throw-if-not-resolved="false"></xref>. If either instance of <xref href="System.Data.SqlTypes.SqlByte" data-throw-if-not-resolved="false"></xref> is null, the <xref href="System.Data.SqlTypes.SqlBoolean.Value" data-throw-if-not-resolved="false"></xref> of the SqlBoolean will be <xref href="System.Data.SqlTypes.SqlBoolean.Null" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Data.SqlTypes.SqlByte.op_Implicit(System.Byte)~System.Data.SqlTypes.SqlByte
  commentId: M:System.Data.SqlTypes.SqlByte.op_Implicit(System.Byte)~System.Data.SqlTypes.SqlByte
  id: op_Implicit(System.Byte)~System.Data.SqlTypes.SqlByte
  parent: System.Data.SqlTypes.SqlByte
  langs:
  - csharp
  - vb
  name: Implicit(Byte to SqlByte)
  fullName: System.Data.SqlTypes.SqlByte.Implicit(System.Byte to System.Data.SqlTypes.SqlByte)
  type: Operator
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLByte.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_Implicit
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLByte.cs
    startLine: 74
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: Converts the supplied byte value to a <xref href="System.Data.SqlTypes.SqlByte" data-throw-if-not-resolved="false"></xref>.
  syntax:
    content: public static implicit operator SqlByte(byte x)
    content.vb: Public Shared Widening Operator CType(x As Byte) As SqlByte
    parameters:
    - id: x
      type: System.Byte
      description: 'A byte value to be converted to <xref href="System.Data.SqlTypes.SqlByte" data-throw-if-not-resolved="false"></xref>. '
    return:
      type: System.Data.SqlTypes.SqlByte
      description: A <xref href="System.Data.SqlTypes.SqlByte" data-throw-if-not-resolved="false"></xref> structure whose <xref href="System.Data.SqlTypes.SqlByte.Value" data-throw-if-not-resolved="false"></xref> property is equal to the supplied parameter.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Data.SqlTypes.SqlByte.Widening(System.Byte to System.Data.SqlTypes.SqlByte)
  name.vb: Widening(Byte to SqlByte)
- uid: System.Data.SqlTypes.SqlByte.op_Inequality(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  commentId: M:System.Data.SqlTypes.SqlByte.op_Inequality(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  id: op_Inequality(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  parent: System.Data.SqlTypes.SqlByte
  langs:
  - csharp
  - vb
  name: Inequality(SqlByte, SqlByte)
  fullName: System.Data.SqlTypes.SqlByte.Inequality(System.Data.SqlTypes.SqlByte, System.Data.SqlTypes.SqlByte)
  type: Operator
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLByte.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_Inequality
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLByte.cs
    startLine: 353
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: Compares two instances of <xref href="System.Data.SqlTypes.SqlByte" data-throw-if-not-resolved="false"></xref> to determine whether they are not equal.
  syntax:
    content: public static SqlBoolean operator !=(SqlByte x, SqlByte y)
    content.vb: Public Shared Operator <>(x As SqlByte, y As SqlByte) As SqlBoolean
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlByte
      description: 'A <xref href="System.Data.SqlTypes.SqlByte" data-throw-if-not-resolved="false"></xref> structure. '
    - id: y
      type: System.Data.SqlTypes.SqlByte
      description: 'A <xref href="System.Data.SqlTypes.SqlByte" data-throw-if-not-resolved="false"></xref> structure. '
    return:
      type: System.Data.SqlTypes.SqlBoolean
      description: A <xref href="System.Data.SqlTypes.SqlBoolean" data-throw-if-not-resolved="false"></xref> that is <xref href="System.Data.SqlTypes.SqlBoolean.True" data-throw-if-not-resolved="false"></xref> if the two instances are not equal or <xref href="System.Data.SqlTypes.SqlBoolean.False" data-throw-if-not-resolved="false"></xref> if the two instances are equal. If either instance of <xref href="System.Data.SqlTypes.SqlByte" data-throw-if-not-resolved="false"></xref> is null, the <xref href="System.Data.SqlTypes.SqlBoolean.Value" data-throw-if-not-resolved="false"></xref> of the <xref href="System.Data.SqlTypes.SqlBoolean" data-throw-if-not-resolved="false"></xref> will be <xref href="System.Data.SqlTypes.SqlBoolean.Null" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Data.SqlTypes.SqlByte.op_LessThan(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  commentId: M:System.Data.SqlTypes.SqlByte.op_LessThan(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  id: op_LessThan(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  parent: System.Data.SqlTypes.SqlByte
  langs:
  - csharp
  - vb
  name: LessThan(SqlByte, SqlByte)
  fullName: System.Data.SqlTypes.SqlByte.LessThan(System.Data.SqlTypes.SqlByte, System.Data.SqlTypes.SqlByte)
  type: Operator
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLByte.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_LessThan
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLByte.cs
    startLine: 361
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: Compares two instances of <xref href="System.Data.SqlTypes.SqlByte" data-throw-if-not-resolved="false"></xref> to determine whether the first is less than the second.
  syntax:
    content: public static SqlBoolean operator <(SqlByte x, SqlByte y)
    content.vb: Public Shared Operator <(x As SqlByte, y As SqlByte) As SqlBoolean
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlByte
      description: 'A <xref href="System.Data.SqlTypes.SqlByte" data-throw-if-not-resolved="false"></xref> structure. '
    - id: y
      type: System.Data.SqlTypes.SqlByte
      description: 'A <xref href="System.Data.SqlTypes.SqlByte" data-throw-if-not-resolved="false"></xref> structure. '
    return:
      type: System.Data.SqlTypes.SqlBoolean
      description: A <xref href="System.Data.SqlTypes.SqlBoolean" data-throw-if-not-resolved="false"></xref> that is <xref href="System.Data.SqlTypes.SqlBoolean.True" data-throw-if-not-resolved="false"></xref> if the first instance is less than the second instance. Otherwise, <xref href="System.Data.SqlTypes.SqlBoolean.False" data-throw-if-not-resolved="false"></xref>. If either instance of <xref href="System.Data.SqlTypes.SqlByte" data-throw-if-not-resolved="false"></xref> is null, the <xref href="System.Data.SqlTypes.SqlBoolean.Value" data-throw-if-not-resolved="false"></xref> of the <xref href="System.Data.SqlTypes.SqlBoolean" data-throw-if-not-resolved="false"></xref> will be <xref href="System.Data.SqlTypes.SqlBoolean.Null" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Data.SqlTypes.SqlByte.op_LessThanOrEqual(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  commentId: M:System.Data.SqlTypes.SqlByte.op_LessThanOrEqual(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  id: op_LessThanOrEqual(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  parent: System.Data.SqlTypes.SqlByte
  langs:
  - csharp
  - vb
  name: LessThanOrEqual(SqlByte, SqlByte)
  fullName: System.Data.SqlTypes.SqlByte.LessThanOrEqual(System.Data.SqlTypes.SqlByte, System.Data.SqlTypes.SqlByte)
  type: Operator
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLByte.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_LessThanOrEqual
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLByte.cs
    startLine: 377
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: Compares two instances of <xref href="System.Data.SqlTypes.SqlByte" data-throw-if-not-resolved="false"></xref> to determine whether the first is less than or equal to the second.
  syntax:
    content: public static SqlBoolean operator <=(SqlByte x, SqlByte y)
    content.vb: Public Shared Operator <=(x As SqlByte, y As SqlByte) As SqlBoolean
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlByte
      description: 'A <xref href="System.Data.SqlTypes.SqlByte" data-throw-if-not-resolved="false"></xref> structure. '
    - id: y
      type: System.Data.SqlTypes.SqlByte
      description: 'A <xref href="System.Data.SqlTypes.SqlByte" data-throw-if-not-resolved="false"></xref> structure. '
    return:
      type: System.Data.SqlTypes.SqlBoolean
      description: A <xref href="System.Data.SqlTypes.SqlBoolean" data-throw-if-not-resolved="false"></xref> that is <xref href="System.Data.SqlTypes.SqlBoolean.True" data-throw-if-not-resolved="false"></xref> if the first instance is less than or equal to the second instance. Otherwise, <xref href="System.Data.SqlTypes.SqlBoolean.False" data-throw-if-not-resolved="false"></xref>. If either instance of <xref href="System.Data.SqlTypes.SqlByte" data-throw-if-not-resolved="false"></xref> is null, the <xref href="System.Data.SqlTypes.SqlBoolean.Value" data-throw-if-not-resolved="false"></xref> of the <xref href="System.Data.SqlTypes.SqlBoolean" data-throw-if-not-resolved="false"></xref> will be <xref href="System.Data.SqlTypes.SqlBoolean.Null" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Data.SqlTypes.SqlByte.op_Modulus(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  commentId: M:System.Data.SqlTypes.SqlByte.op_Modulus(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  id: op_Modulus(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  parent: System.Data.SqlTypes.SqlByte
  langs:
  - csharp
  - vb
  name: Modulus(SqlByte, SqlByte)
  fullName: System.Data.SqlTypes.SqlByte.Modulus(System.Data.SqlTypes.SqlByte, System.Data.SqlTypes.SqlByte)
  type: Operator
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLByte.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_Modulus
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLByte.cs
    startLine: 184
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: Computes the remainder after dividing its first <xref href="System.Data.SqlTypes.SqlByte" data-throw-if-not-resolved="false"></xref> operand by its second.
  syntax:
    content: public static SqlByte operator %(SqlByte x, SqlByte y)
    content.vb: Public Shared Operator Mod(x As SqlByte, y As SqlByte) As SqlByte
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlByte
      description: 'A <xref href="System.Data.SqlTypes.SqlByte" data-throw-if-not-resolved="false"></xref> structure. '
    - id: y
      type: System.Data.SqlTypes.SqlByte
      description: 'A <xref href="System.Data.SqlTypes.SqlByte" data-throw-if-not-resolved="false"></xref> structure. '
    return:
      type: System.Data.SqlTypes.SqlByte
      description: A <xref href="System.Data.SqlTypes.SqlByte" data-throw-if-not-resolved="false"></xref> structure whose <xref href="System.Data.SqlTypes.SqlByte.Value" data-throw-if-not-resolved="false"></xref> contains the remainder.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Data.SqlTypes.SqlByte.op_Multiply(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  commentId: M:System.Data.SqlTypes.SqlByte.op_Multiply(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  id: op_Multiply(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  parent: System.Data.SqlTypes.SqlByte
  langs:
  - csharp
  - vb
  name: Multiply(SqlByte, SqlByte)
  fullName: System.Data.SqlTypes.SqlByte.Multiply(System.Data.SqlTypes.SqlByte, System.Data.SqlTypes.SqlByte)
  type: Operator
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLByte.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_Multiply
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLByte.cs
    startLine: 153
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: Computes the product of the two <xref href="System.Data.SqlTypes.SqlByte" data-throw-if-not-resolved="false"></xref> operands.
  syntax:
    content: public static SqlByte operator *(SqlByte x, SqlByte y)
    content.vb: Public Shared Operator *(x As SqlByte, y As SqlByte) As SqlByte
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlByte
      description: 'A <xref href="System.Data.SqlTypes.SqlByte" data-throw-if-not-resolved="false"></xref> structure. '
    - id: y
      type: System.Data.SqlTypes.SqlByte
      description: 'A <xref href="System.Data.SqlTypes.SqlByte" data-throw-if-not-resolved="false"></xref> structure. '
    return:
      type: System.Data.SqlTypes.SqlByte
      description: A new <xref href="System.Data.SqlTypes.SqlByte" data-throw-if-not-resolved="false"></xref> structure whose <xref href="System.Data.SqlTypes.SqlByte.Value" data-throw-if-not-resolved="false"></xref> property contains the product of the multiplication.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Data.SqlTypes.SqlByte.op_OnesComplement(System.Data.SqlTypes.SqlByte)
  commentId: M:System.Data.SqlTypes.SqlByte.op_OnesComplement(System.Data.SqlTypes.SqlByte)
  id: op_OnesComplement(System.Data.SqlTypes.SqlByte)
  parent: System.Data.SqlTypes.SqlByte
  langs:
  - csharp
  - vb
  name: OnesComplement(SqlByte)
  fullName: System.Data.SqlTypes.SqlByte.OnesComplement(System.Data.SqlTypes.SqlByte)
  type: Operator
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLByte.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_OnesComplement
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLByte.cs
    startLine: 111
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: The ones complement operator performs a bitwise one's complement operation on its <xref href="System.Data.SqlTypes.SqlByte" data-throw-if-not-resolved="false"></xref> operand.
  syntax:
    content: public static SqlByte operator ~(SqlByte x)
    content.vb: Public Shared Operator Not(x As SqlByte) As SqlByte
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlByte
      description: 'A <xref href="System.Data.SqlTypes.SqlByte" data-throw-if-not-resolved="false"></xref> structure. '
    return:
      type: System.Data.SqlTypes.SqlByte
      description: A <xref href="System.Data.SqlTypes.SqlByte" data-throw-if-not-resolved="false"></xref> structure whose <xref href="System.Data.SqlTypes.SqlByte.Value" data-throw-if-not-resolved="false"></xref> property contains the ones complement of the <xref href="System.Data.SqlTypes.SqlByte" data-throw-if-not-resolved="false"></xref> parameter.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Data.SqlTypes.SqlByte.op_Subtraction(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  commentId: M:System.Data.SqlTypes.SqlByte.op_Subtraction(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  id: op_Subtraction(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  parent: System.Data.SqlTypes.SqlByte
  langs:
  - csharp
  - vb
  name: Subtraction(SqlByte, SqlByte)
  fullName: System.Data.SqlTypes.SqlByte.Subtraction(System.Data.SqlTypes.SqlByte, System.Data.SqlTypes.SqlByte)
  type: Operator
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLByte.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_Subtraction
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLByte.cs
    startLine: 138
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: Subtracts the second <xref href="System.Data.SqlTypes.SqlByte" data-throw-if-not-resolved="false"></xref> operand from the first.
  syntax:
    content: public static SqlByte operator -(SqlByte x, SqlByte y)
    content.vb: Public Shared Operator -(x As SqlByte, y As SqlByte) As SqlByte
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlByte
      description: 'A <xref href="System.Data.SqlTypes.SqlByte" data-throw-if-not-resolved="false"></xref> structure. '
    - id: y
      type: System.Data.SqlTypes.SqlByte
      description: 'A <xref href="System.Data.SqlTypes.SqlByte" data-throw-if-not-resolved="false"></xref> structure. '
    return:
      type: System.Data.SqlTypes.SqlByte
      description: The results of subtracting the second <xref href="System.Data.SqlTypes.SqlByte" data-throw-if-not-resolved="false"></xref> operand from the first.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Data.SqlTypes.SqlByte.Parse(System.String)
  commentId: M:System.Data.SqlTypes.SqlByte.Parse(System.String)
  id: Parse(System.String)
  parent: System.Data.SqlTypes.SqlByte
  langs:
  - csharp
  - vb
  name: Parse(String)
  fullName: System.Data.SqlTypes.SqlByte.Parse(System.String)
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/ref/System.Data.SqlClient.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Parse
    path: src/System.Data.SqlClient/ref/System.Data.SqlClient.cs
    startLine: 753
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: Converts the <xref href="System.String" data-throw-if-not-resolved="false"></xref> representation of a number to its 8-bit unsigned integer equivalent.
  syntax:
    content: public static SqlByte Parse(string s)
    content.vb: Public Shared Function Parse(s As String) As SqlByte
    parameters:
    - id: s
      type: System.String
      description: 'The String to be parsed. '
    return:
      type: System.Data.SqlTypes.SqlByte
      description: A <xref href="System.Data.SqlTypes.SqlByte" data-throw-if-not-resolved="false"></xref> structure that contains the 8-bit number represented by the String parameter.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Data.SqlTypes.SqlByte.Subtract(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  commentId: M:System.Data.SqlTypes.SqlByte.Subtract(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  id: Subtract(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  parent: System.Data.SqlTypes.SqlByte
  langs:
  - csharp
  - vb
  name: Subtract(SqlByte, SqlByte)
  fullName: System.Data.SqlTypes.SqlByte.Subtract(System.Data.SqlTypes.SqlByte, System.Data.SqlTypes.SqlByte)
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLByte.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Subtract
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLByte.cs
    startLine: 407
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: Subtracts the second <xref href="System.Data.SqlTypes.SqlByte" data-throw-if-not-resolved="false"></xref> operand from the first.
  syntax:
    content: public static SqlByte Subtract(SqlByte x, SqlByte y)
    content.vb: Public Shared Function Subtract(x As SqlByte, y As SqlByte) As SqlByte
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlByte
      description: 'A <xref href="System.Data.SqlTypes.SqlByte" data-throw-if-not-resolved="false"></xref> structure. '
    - id: y
      type: System.Data.SqlTypes.SqlByte
      description: 'A <xref href="System.Data.SqlTypes.SqlByte" data-throw-if-not-resolved="false"></xref> structure. '
    return:
      type: System.Data.SqlTypes.SqlByte
      description: The results of subtracting the second <xref href="System.Data.SqlTypes.SqlByte" data-throw-if-not-resolved="false"></xref> operand from the first.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Data.SqlTypes.SqlByte.ToSqlBoolean
  commentId: M:System.Data.SqlTypes.SqlByte.ToSqlBoolean
  id: ToSqlBoolean
  parent: System.Data.SqlTypes.SqlByte
  langs:
  - csharp
  - vb
  name: ToSqlBoolean()
  fullName: System.Data.SqlTypes.SqlByte.ToSqlBoolean()
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLByte.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ToSqlBoolean
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLByte.cs
    startLine: 491
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: Converts this <xref href="System.Data.SqlTypes.SqlByte" data-throw-if-not-resolved="false"></xref> structure to <xref href="System.Data.SqlTypes.SqlBoolean" data-throw-if-not-resolved="false"></xref>.
  syntax:
    content: public SqlBoolean ToSqlBoolean()
    content.vb: Public Function ToSqlBoolean As SqlBoolean
    return:
      type: System.Data.SqlTypes.SqlBoolean
      description: true if the <xref href="System.Data.SqlTypes.SqlByte.Value" data-throw-if-not-resolved="false"></xref> is non-zero; false if zero; otherwise Null.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Data.SqlTypes.SqlByte.ToSqlDecimal
  commentId: M:System.Data.SqlTypes.SqlByte.ToSqlDecimal
  id: ToSqlDecimal
  parent: System.Data.SqlTypes.SqlByte
  langs:
  - csharp
  - vb
  name: ToSqlDecimal()
  fullName: System.Data.SqlTypes.SqlByte.ToSqlDecimal()
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLByte.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ToSqlDecimal
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLByte.cs
    startLine: 521
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: Converts this <xref href="System.Data.SqlTypes.SqlByte" data-throw-if-not-resolved="false"></xref> structure to <xref href="System.Data.SqlTypes.SqlDecimal" data-throw-if-not-resolved="false"></xref>.
  syntax:
    content: public SqlDecimal ToSqlDecimal()
    content.vb: Public Function ToSqlDecimal As SqlDecimal
    return:
      type: System.Data.SqlTypes.SqlDecimal
      description: A SqlDecimal structure whose <xref href="System.Data.SqlTypes.SqlDecimal.Value" data-throw-if-not-resolved="false"></xref> equals the <xref href="System.Data.SqlTypes.SqlByte.Value" data-throw-if-not-resolved="false"></xref> of this <xref href="System.Data.SqlTypes.SqlByte" data-throw-if-not-resolved="false"></xref> structure.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Data.SqlTypes.SqlByte.ToSqlDouble
  commentId: M:System.Data.SqlTypes.SqlByte.ToSqlDouble
  id: ToSqlDouble
  parent: System.Data.SqlTypes.SqlByte
  langs:
  - csharp
  - vb
  name: ToSqlDouble()
  fullName: System.Data.SqlTypes.SqlByte.ToSqlDouble()
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLByte.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ToSqlDouble
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLByte.cs
    startLine: 496
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: Converts this <xref href="System.Data.SqlTypes.SqlByte" data-throw-if-not-resolved="false"></xref> structure to <xref href="System.Data.SqlTypes.SqlDouble" data-throw-if-not-resolved="false"></xref>.
  syntax:
    content: public SqlDouble ToSqlDouble()
    content.vb: Public Function ToSqlDouble As SqlDouble
    return:
      type: System.Data.SqlTypes.SqlDouble
      description: A SqlDouble structure with the same value as this <xref href="System.Data.SqlTypes.SqlByte" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Data.SqlTypes.SqlByte.ToSqlInt16
  commentId: M:System.Data.SqlTypes.SqlByte.ToSqlInt16
  id: ToSqlInt16
  parent: System.Data.SqlTypes.SqlByte
  langs:
  - csharp
  - vb
  name: ToSqlInt16()
  fullName: System.Data.SqlTypes.SqlByte.ToSqlInt16()
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLByte.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ToSqlInt16
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLByte.cs
    startLine: 501
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: Converts this <xref href="System.Data.SqlTypes.SqlByte" data-throw-if-not-resolved="false"></xref> structure to <xref href="System.Data.SqlTypes.SqlInt16" data-throw-if-not-resolved="false"></xref>.
  syntax:
    content: public SqlInt16 ToSqlInt16()
    content.vb: Public Function ToSqlInt16 As SqlInt16
    return:
      type: System.Data.SqlTypes.SqlInt16
      description: A SqlInt16 structure with the same value as this <xref href="System.Data.SqlTypes.SqlByte" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Data.SqlTypes.SqlByte.ToSqlInt32
  commentId: M:System.Data.SqlTypes.SqlByte.ToSqlInt32
  id: ToSqlInt32
  parent: System.Data.SqlTypes.SqlByte
  langs:
  - csharp
  - vb
  name: ToSqlInt32()
  fullName: System.Data.SqlTypes.SqlByte.ToSqlInt32()
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLByte.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ToSqlInt32
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLByte.cs
    startLine: 506
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: Converts this <xref href="System.Data.SqlTypes.SqlByte" data-throw-if-not-resolved="false"></xref> to <xref href="System.Data.SqlTypes.SqlInt32" data-throw-if-not-resolved="false"></xref>.
  syntax:
    content: public SqlInt32 ToSqlInt32()
    content.vb: Public Function ToSqlInt32 As SqlInt32
    return:
      type: System.Data.SqlTypes.SqlInt32
      description: A SqlInt32 structure with the same value as this <xref href="System.Data.SqlTypes.SqlByte" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Data.SqlTypes.SqlByte.ToSqlInt64
  commentId: M:System.Data.SqlTypes.SqlByte.ToSqlInt64
  id: ToSqlInt64
  parent: System.Data.SqlTypes.SqlByte
  langs:
  - csharp
  - vb
  name: ToSqlInt64()
  fullName: System.Data.SqlTypes.SqlByte.ToSqlInt64()
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLByte.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ToSqlInt64
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLByte.cs
    startLine: 511
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: Converts this <xref href="System.Data.SqlTypes.SqlByte" data-throw-if-not-resolved="false"></xref> structure to <xref href="System.Data.SqlTypes.SqlInt64" data-throw-if-not-resolved="false"></xref>.
  syntax:
    content: public SqlInt64 ToSqlInt64()
    content.vb: Public Function ToSqlInt64 As SqlInt64
    return:
      type: System.Data.SqlTypes.SqlInt64
      description: A SqlInt64 structure who <xref href="System.Data.SqlTypes.SqlInt64.Value" data-throw-if-not-resolved="false"></xref> equals the <xref href="System.Data.SqlTypes.SqlByte.Value" data-throw-if-not-resolved="false"></xref> of this <xref href="System.Data.SqlTypes.SqlByte" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Data.SqlTypes.SqlByte.ToSqlMoney
  commentId: M:System.Data.SqlTypes.SqlByte.ToSqlMoney
  id: ToSqlMoney
  parent: System.Data.SqlTypes.SqlByte
  langs:
  - csharp
  - vb
  name: ToSqlMoney()
  fullName: System.Data.SqlTypes.SqlByte.ToSqlMoney()
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLByte.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ToSqlMoney
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLByte.cs
    startLine: 516
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: Converts this <xref href="System.Data.SqlTypes.SqlByte" data-throw-if-not-resolved="false"></xref> structure to <xref href="System.Data.SqlTypes.SqlMoney" data-throw-if-not-resolved="false"></xref>.
  syntax:
    content: public SqlMoney ToSqlMoney()
    content.vb: Public Function ToSqlMoney As SqlMoney
    return:
      type: System.Data.SqlTypes.SqlMoney
      description: A SqlMoney structure whose <xref href="System.Data.SqlTypes.SqlMoney.Value" data-throw-if-not-resolved="false"></xref> equals the <xref href="System.Data.SqlTypes.SqlByte.Value" data-throw-if-not-resolved="false"></xref> of this <xref href="System.Data.SqlTypes.SqlByte" data-throw-if-not-resolved="false"></xref> structure.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Data.SqlTypes.SqlByte.ToSqlSingle
  commentId: M:System.Data.SqlTypes.SqlByte.ToSqlSingle
  id: ToSqlSingle
  parent: System.Data.SqlTypes.SqlByte
  langs:
  - csharp
  - vb
  name: ToSqlSingle()
  fullName: System.Data.SqlTypes.SqlByte.ToSqlSingle()
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLByte.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ToSqlSingle
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLByte.cs
    startLine: 526
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: Converts this <xref href="System.Data.SqlTypes.SqlByte" data-throw-if-not-resolved="false"></xref> structure to <xref href="System.Data.SqlTypes.SqlSingle" data-throw-if-not-resolved="false"></xref>.
  syntax:
    content: public SqlSingle ToSqlSingle()
    content.vb: Public Function ToSqlSingle As SqlSingle
    return:
      type: System.Data.SqlTypes.SqlSingle
      description: A SqlSingle structure that has the same <xref href="System.Data.SqlTypes.SqlSingle.Value" data-throw-if-not-resolved="false"></xref> as this <xref href="System.Data.SqlTypes.SqlByte" data-throw-if-not-resolved="false"></xref> structure.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Data.SqlTypes.SqlByte.ToSqlString
  commentId: M:System.Data.SqlTypes.SqlByte.ToSqlString
  id: ToSqlString
  parent: System.Data.SqlTypes.SqlByte
  langs:
  - csharp
  - vb
  name: ToSqlString()
  fullName: System.Data.SqlTypes.SqlByte.ToSqlString()
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLByte.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ToSqlString
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLByte.cs
    startLine: 531
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: Converts this instance of <xref href="System.Data.SqlTypes.SqlByte" data-throw-if-not-resolved="false"></xref> to <xref href="System.Data.SqlTypes.SqlString" data-throw-if-not-resolved="false"></xref>.
  syntax:
    content: public SqlString ToSqlString()
    content.vb: Public Function ToSqlString As SqlString
    return:
      type: System.Data.SqlTypes.SqlString
      description: A SqlString that contains the string representation of the <xref href="System.Data.SqlTypes.SqlByte" data-throw-if-not-resolved="false"></xref> structure's <xref href="System.Data.SqlTypes.SqlByte.Value" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Data.SqlTypes.SqlByte.ToString
  commentId: M:System.Data.SqlTypes.SqlByte.ToString
  id: ToString
  parent: System.Data.SqlTypes.SqlByte
  langs:
  - csharp
  - vb
  name: ToString()
  fullName: System.Data.SqlTypes.SqlByte.ToString()
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLByte.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ToString
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLByte.cs
    startLine: 91
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: Converts this <xref href="System.Data.SqlTypes.SqlByte" data-throw-if-not-resolved="false"></xref> structure to a <xref href="System.String" data-throw-if-not-resolved="false"></xref>.
  syntax:
    content: public override string ToString()
    content.vb: Public Overrides Function ToString As String
    return:
      type: System.String
      description: A string that contains the <xref href="System.Data.SqlTypes.SqlByte.Value" data-throw-if-not-resolved="false"></xref> of the <xref href="System.Data.SqlTypes.SqlByte" data-throw-if-not-resolved="false"></xref>. If the Value is null, the String will be a null string.
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Data.SqlTypes.SqlByte.Xor(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  commentId: M:System.Data.SqlTypes.SqlByte.Xor(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  id: Xor(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)
  parent: System.Data.SqlTypes.SqlByte
  langs:
  - csharp
  - vb
  name: Xor(SqlByte, SqlByte)
  fullName: System.Data.SqlTypes.SqlByte.Xor(System.Data.SqlTypes.SqlByte, System.Data.SqlTypes.SqlByte)
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLByte.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Xor
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLByte.cs
    startLine: 448
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: Performs a bitwise exclusive-OR operation on the supplied parameters.
  syntax:
    content: public static SqlByte Xor(SqlByte x, SqlByte y)
    content.vb: Public Shared Function Xor(x As SqlByte, y As SqlByte) As SqlByte
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlByte
      description: 'A <xref href="System.Data.SqlTypes.SqlByte" data-throw-if-not-resolved="false"></xref> structure. '
    - id: y
      type: System.Data.SqlTypes.SqlByte
      description: 'A <xref href="System.Data.SqlTypes.SqlByte" data-throw-if-not-resolved="false"></xref> structure. '
    return:
      type: System.Data.SqlTypes.SqlByte
      description: The results of the XOR operation.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: System.Data.SqlTypes
  isExternal: false
  name: System.Data.SqlTypes
  fullName: System.Data.SqlTypes
- uid: System.Data.SqlTypes.INullable
  parent: System.Data.SqlTypes
  isExternal: false
  name: INullable
  fullName: System.Data.SqlTypes.INullable
- uid: System.IComparable
  parent: System
  isExternal: false
  name: IComparable
  fullName: System.IComparable
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Data.SqlTypes.SqlByte
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlByte
  fullName: System.Data.SqlTypes.SqlByte
- uid: System.Byte
  parent: System
  isExternal: false
  name: Byte
  fullName: System.Byte
- uid: System.Data.SqlTypes.INullable.IsNull
  parent: System.Data.SqlTypes.INullable
  isExternal: false
  name: IsNull
  fullName: System.Data.SqlTypes.INullable.IsNull
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  fullName: System.Boolean
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  fullName: System.Int32
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System.Data.SqlTypes.SqlBoolean
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlBoolean
  fullName: System.Data.SqlTypes.SqlBoolean
- uid: System.Data.SqlTypes.SqlDecimal
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlDecimal
  fullName: System.Data.SqlTypes.SqlDecimal
- uid: System.Data.SqlTypes.SqlDouble
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlDouble
  fullName: System.Data.SqlTypes.SqlDouble
- uid: System.Data.SqlTypes.SqlInt16
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlInt16
  fullName: System.Data.SqlTypes.SqlInt16
- uid: System.Data.SqlTypes.SqlInt32
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlInt32
  fullName: System.Data.SqlTypes.SqlInt32
- uid: System.Data.SqlTypes.SqlInt64
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlInt64
  fullName: System.Data.SqlTypes.SqlInt64
- uid: System.Data.SqlTypes.SqlMoney
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlMoney
  fullName: System.Data.SqlTypes.SqlMoney
- uid: System.Data.SqlTypes.SqlSingle
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlSingle
  fullName: System.Data.SqlTypes.SqlSingle
- uid: System.Data.SqlTypes.SqlString
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlString
  fullName: System.Data.SqlTypes.SqlString
- uid: System.String
  parent: System
  isExternal: false
  name: String
  fullName: System.String
