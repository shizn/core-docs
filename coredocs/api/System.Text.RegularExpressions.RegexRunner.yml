items:
- uid: System.Text.RegularExpressions.RegexRunner
  commentId: T:System.Text.RegularExpressions.RegexRunner
  id: RegexRunner
  parent: System.Text.RegularExpressions
  children:
  - System.Text.RegularExpressions.RegexRunner.#ctor
  - System.Text.RegularExpressions.RegexRunner.Capture(System.Int32,System.Int32,System.Int32)
  - System.Text.RegularExpressions.RegexRunner.CharInClass(System.Char,System.String)
  - System.Text.RegularExpressions.RegexRunner.CharInSet(System.Char,System.String,System.String)
  - System.Text.RegularExpressions.RegexRunner.CheckTimeout
  - System.Text.RegularExpressions.RegexRunner.Crawl(System.Int32)
  - System.Text.RegularExpressions.RegexRunner.Crawlpos
  - System.Text.RegularExpressions.RegexRunner.DoubleCrawl
  - System.Text.RegularExpressions.RegexRunner.DoubleStack
  - System.Text.RegularExpressions.RegexRunner.DoubleTrack
  - System.Text.RegularExpressions.RegexRunner.EnsureStorage
  - System.Text.RegularExpressions.RegexRunner.FindFirstChar
  - System.Text.RegularExpressions.RegexRunner.Go
  - System.Text.RegularExpressions.RegexRunner.InitTrackCount
  - System.Text.RegularExpressions.RegexRunner.IsBoundary(System.Int32,System.Int32,System.Int32)
  - System.Text.RegularExpressions.RegexRunner.IsECMABoundary(System.Int32,System.Int32,System.Int32)
  - System.Text.RegularExpressions.RegexRunner.IsMatched(System.Int32)
  - System.Text.RegularExpressions.RegexRunner.MatchIndex(System.Int32)
  - System.Text.RegularExpressions.RegexRunner.MatchLength(System.Int32)
  - System.Text.RegularExpressions.RegexRunner.Popcrawl
  - System.Text.RegularExpressions.RegexRunner.runcrawl
  - System.Text.RegularExpressions.RegexRunner.runcrawlpos
  - System.Text.RegularExpressions.RegexRunner.runmatch
  - System.Text.RegularExpressions.RegexRunner.runregex
  - System.Text.RegularExpressions.RegexRunner.runstack
  - System.Text.RegularExpressions.RegexRunner.runstackpos
  - System.Text.RegularExpressions.RegexRunner.runtext
  - System.Text.RegularExpressions.RegexRunner.runtextbeg
  - System.Text.RegularExpressions.RegexRunner.runtextend
  - System.Text.RegularExpressions.RegexRunner.runtextpos
  - System.Text.RegularExpressions.RegexRunner.runtextstart
  - System.Text.RegularExpressions.RegexRunner.runtrack
  - System.Text.RegularExpressions.RegexRunner.runtrackcount
  - System.Text.RegularExpressions.RegexRunner.runtrackpos
  - System.Text.RegularExpressions.RegexRunner.Scan(System.Text.RegularExpressions.Regex,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean)
  - System.Text.RegularExpressions.RegexRunner.Scan(System.Text.RegularExpressions.Regex,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean,System.TimeSpan)
  - System.Text.RegularExpressions.RegexRunner.TransferCapture(System.Int32,System.Int32,System.Int32,System.Int32)
  - System.Text.RegularExpressions.RegexRunner.Uncapture
  langs:
  - csharp
  - vb
  name: RegexRunner
  fullName: System.Text.RegularExpressions.RegexRunner
  type: Class
  source:
    remote:
      path: src/System.Text.RegularExpressions/src/System/Text/RegularExpressions/RegexRunner.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: RegexRunner
    path: src/System.Text.RegularExpressions/src/System/Text/RegularExpressions/RegexRunner.cs
    startLine: 21
  assemblies:
  - System.Text.RegularExpressions
  namespace: System.Text.RegularExpressions
  summary: The <xref href="System.Text.RegularExpressions.RegexRunner" data-throw-if-not-resolved="false"></xref> class is the base class for compiled regular expressions.
  syntax:
    content: 'public abstract class RegexRunner : object'
    content.vb: >-
      Public MustInherit Class RegexRunner
          Inherits Object
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: System.Text.RegularExpressions.RegexRunner.runcrawl
  commentId: F:System.Text.RegularExpressions.RegexRunner.runcrawl
  id: runcrawl
  parent: System.Text.RegularExpressions.RegexRunner
  langs:
  - csharp
  - vb
  name: runcrawl
  fullName: System.Text.RegularExpressions.RegexRunner.runcrawl
  type: Field
  source:
    remote:
      path: src/System.Text.RegularExpressions/src/System/Text/RegularExpressions/RegexRunner.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: runcrawl
    path: src/System.Text.RegularExpressions/src/System/Text/RegularExpressions/RegexRunner.cs
    startLine: 51
  assemblies:
  - System.Text.RegularExpressions
  namespace: System.Text.RegularExpressions
  summary: 'Used by a <xref href="System.Text.RegularExpressions.Regex" data-throw-if-not-resolved="false"></xref> object generated by the <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly"></see> method. '
  syntax:
    content: protected int[] runcrawl
    content.vb: Protected runcrawl As Integer()
    return:
      type: System.Int32[]
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: System.Text.RegularExpressions.RegexRunner.runcrawlpos
  commentId: F:System.Text.RegularExpressions.RegexRunner.runcrawlpos
  id: runcrawlpos
  parent: System.Text.RegularExpressions.RegexRunner
  langs:
  - csharp
  - vb
  name: runcrawlpos
  fullName: System.Text.RegularExpressions.RegexRunner.runcrawlpos
  type: Field
  source:
    remote:
      path: src/System.Text.RegularExpressions/src/System/Text/RegularExpressions/RegexRunner.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: runcrawlpos
    path: src/System.Text.RegularExpressions/src/System/Text/RegularExpressions/RegexRunner.cs
    startLine: 52
  assemblies:
  - System.Text.RegularExpressions
  namespace: System.Text.RegularExpressions
  summary: 'Used by a <xref href="System.Text.RegularExpressions.Regex" data-throw-if-not-resolved="false"></xref> object generated by the <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly"></see> method. '
  syntax:
    content: protected int runcrawlpos
    content.vb: Protected runcrawlpos As Integer
    return:
      type: System.Int32
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: System.Text.RegularExpressions.RegexRunner.runmatch
  commentId: F:System.Text.RegularExpressions.RegexRunner.runmatch
  id: runmatch
  parent: System.Text.RegularExpressions.RegexRunner
  langs:
  - csharp
  - vb
  name: runmatch
  fullName: System.Text.RegularExpressions.RegexRunner.runmatch
  type: Field
  source:
    remote:
      path: src/System.Text.RegularExpressions/src/System/Text/RegularExpressions/RegexRunner.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: runmatch
    path: src/System.Text.RegularExpressions/src/System/Text/RegularExpressions/RegexRunner.cs
    startLine: 57
  assemblies:
  - System.Text.RegularExpressions
  namespace: System.Text.RegularExpressions
  summary: 'Used by a <xref href="System.Text.RegularExpressions.Regex" data-throw-if-not-resolved="false"></xref> object generated by the <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly"></see> method. '
  syntax:
    content: protected Match runmatch
    content.vb: Protected runmatch As Match
    return:
      type: System.Text.RegularExpressions.Match
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: System.Text.RegularExpressions.RegexRunner.runregex
  commentId: F:System.Text.RegularExpressions.RegexRunner.runregex
  id: runregex
  parent: System.Text.RegularExpressions.RegexRunner
  langs:
  - csharp
  - vb
  name: runregex
  fullName: System.Text.RegularExpressions.RegexRunner.runregex
  type: Field
  source:
    remote:
      path: src/System.Text.RegularExpressions/src/System/Text/RegularExpressions/RegexRunner.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: runregex
    path: src/System.Text.RegularExpressions/src/System/Text/RegularExpressions/RegexRunner.cs
    startLine: 58
  assemblies:
  - System.Text.RegularExpressions
  namespace: System.Text.RegularExpressions
  summary: 'Used by a <xref href="System.Text.RegularExpressions.Regex" data-throw-if-not-resolved="false"></xref> object generated by the <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly"></see> method. '
  syntax:
    content: protected Regex runregex
    content.vb: Protected runregex As Regex
    return:
      type: System.Text.RegularExpressions.Regex
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: System.Text.RegularExpressions.RegexRunner.runstack
  commentId: F:System.Text.RegularExpressions.RegexRunner.runstack
  id: runstack
  parent: System.Text.RegularExpressions.RegexRunner
  langs:
  - csharp
  - vb
  name: runstack
  fullName: System.Text.RegularExpressions.RegexRunner.runstack
  type: Field
  source:
    remote:
      path: src/System.Text.RegularExpressions/src/System/Text/RegularExpressions/RegexRunner.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: runstack
    path: src/System.Text.RegularExpressions/src/System/Text/RegularExpressions/RegexRunner.cs
    startLine: 43
  assemblies:
  - System.Text.RegularExpressions
  namespace: System.Text.RegularExpressions
  summary: 'Used by a <xref href="System.Text.RegularExpressions.Regex" data-throw-if-not-resolved="false"></xref> object generated by the <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly"></see> method. '
  syntax:
    content: protected int[] runstack
    content.vb: Protected runstack As Integer()
    return:
      type: System.Int32[]
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: System.Text.RegularExpressions.RegexRunner.runstackpos
  commentId: F:System.Text.RegularExpressions.RegexRunner.runstackpos
  id: runstackpos
  parent: System.Text.RegularExpressions.RegexRunner
  langs:
  - csharp
  - vb
  name: runstackpos
  fullName: System.Text.RegularExpressions.RegexRunner.runstackpos
  type: Field
  source:
    remote:
      path: src/System.Text.RegularExpressions/src/System/Text/RegularExpressions/RegexRunner.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: runstackpos
    path: src/System.Text.RegularExpressions/src/System/Text/RegularExpressions/RegexRunner.cs
    startLine: 44
  assemblies:
  - System.Text.RegularExpressions
  namespace: System.Text.RegularExpressions
  summary: 'Used by a <xref href="System.Text.RegularExpressions.Regex" data-throw-if-not-resolved="false"></xref> object generated by the <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly"></see> method. '
  syntax:
    content: protected int runstackpos
    content.vb: Protected runstackpos As Integer
    return:
      type: System.Int32
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: System.Text.RegularExpressions.RegexRunner.runtext
  commentId: F:System.Text.RegularExpressions.RegexRunner.runtext
  id: runtext
  parent: System.Text.RegularExpressions.RegexRunner
  langs:
  - csharp
  - vb
  name: runtext
  fullName: System.Text.RegularExpressions.RegexRunner.runtext
  type: Field
  source:
    remote:
      path: src/System.Text.RegularExpressions/src/System/Text/RegularExpressions/RegexRunner.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: runtext
    path: src/System.Text.RegularExpressions/src/System/Text/RegularExpressions/RegexRunner.cs
    startLine: 27
  assemblies:
  - System.Text.RegularExpressions
  namespace: System.Text.RegularExpressions
  summary: 'Used by a <xref href="System.Text.RegularExpressions.Regex" data-throw-if-not-resolved="false"></xref> object generated by the <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly"></see> method. '
  syntax:
    content: protected string runtext
    content.vb: Protected runtext As String
    return:
      type: System.String
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: System.Text.RegularExpressions.RegexRunner.runtextbeg
  commentId: F:System.Text.RegularExpressions.RegexRunner.runtextbeg
  id: runtextbeg
  parent: System.Text.RegularExpressions.RegexRunner
  langs:
  - csharp
  - vb
  name: runtextbeg
  fullName: System.Text.RegularExpressions.RegexRunner.runtextbeg
  type: Field
  source:
    remote:
      path: src/System.Text.RegularExpressions/src/System/Text/RegularExpressions/RegexRunner.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: runtextbeg
    path: src/System.Text.RegularExpressions/src/System/Text/RegularExpressions/RegexRunner.cs
    startLine: 23
  assemblies:
  - System.Text.RegularExpressions
  namespace: System.Text.RegularExpressions
  summary: 'Used by a <xref href="System.Text.RegularExpressions.Regex" data-throw-if-not-resolved="false"></xref> object generated by the <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly"></see> method. '
  syntax:
    content: protected int runtextbeg
    content.vb: Protected runtextbeg As Integer
    return:
      type: System.Int32
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: System.Text.RegularExpressions.RegexRunner.runtextend
  commentId: F:System.Text.RegularExpressions.RegexRunner.runtextend
  id: runtextend
  parent: System.Text.RegularExpressions.RegexRunner
  langs:
  - csharp
  - vb
  name: runtextend
  fullName: System.Text.RegularExpressions.RegexRunner.runtextend
  type: Field
  source:
    remote:
      path: src/System.Text.RegularExpressions/src/System/Text/RegularExpressions/RegexRunner.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: runtextend
    path: src/System.Text.RegularExpressions/src/System/Text/RegularExpressions/RegexRunner.cs
    startLine: 24
  assemblies:
  - System.Text.RegularExpressions
  namespace: System.Text.RegularExpressions
  summary: 'Used by a <xref href="System.Text.RegularExpressions.Regex" data-throw-if-not-resolved="false"></xref> object generated by the <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly"></see> method. '
  syntax:
    content: protected int runtextend
    content.vb: Protected runtextend As Integer
    return:
      type: System.Int32
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: System.Text.RegularExpressions.RegexRunner.runtextpos
  commentId: F:System.Text.RegularExpressions.RegexRunner.runtextpos
  id: runtextpos
  parent: System.Text.RegularExpressions.RegexRunner
  langs:
  - csharp
  - vb
  name: runtextpos
  fullName: System.Text.RegularExpressions.RegexRunner.runtextpos
  type: Field
  source:
    remote:
      path: src/System.Text.RegularExpressions/src/System/Text/RegularExpressions/RegexRunner.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: runtextpos
    path: src/System.Text.RegularExpressions/src/System/Text/RegularExpressions/RegexRunner.cs
    startLine: 28
  assemblies:
  - System.Text.RegularExpressions
  namespace: System.Text.RegularExpressions
  summary: 'Used by a <xref href="System.Text.RegularExpressions.Regex" data-throw-if-not-resolved="false"></xref> object generated by the <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly"></see> method. '
  syntax:
    content: protected int runtextpos
    content.vb: Protected runtextpos As Integer
    return:
      type: System.Int32
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: System.Text.RegularExpressions.RegexRunner.runtextstart
  commentId: F:System.Text.RegularExpressions.RegexRunner.runtextstart
  id: runtextstart
  parent: System.Text.RegularExpressions.RegexRunner
  langs:
  - csharp
  - vb
  name: runtextstart
  fullName: System.Text.RegularExpressions.RegexRunner.runtextstart
  type: Field
  source:
    remote:
      path: src/System.Text.RegularExpressions/src/System/Text/RegularExpressions/RegexRunner.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: runtextstart
    path: src/System.Text.RegularExpressions/src/System/Text/RegularExpressions/RegexRunner.cs
    startLine: 25
  assemblies:
  - System.Text.RegularExpressions
  namespace: System.Text.RegularExpressions
  summary: 'Used by a <xref href="System.Text.RegularExpressions.Regex" data-throw-if-not-resolved="false"></xref> object generated by the <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly"></see> method. '
  syntax:
    content: protected int runtextstart
    content.vb: Protected runtextstart As Integer
    return:
      type: System.Int32
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: System.Text.RegularExpressions.RegexRunner.runtrack
  commentId: F:System.Text.RegularExpressions.RegexRunner.runtrack
  id: runtrack
  parent: System.Text.RegularExpressions.RegexRunner
  langs:
  - csharp
  - vb
  name: runtrack
  fullName: System.Text.RegularExpressions.RegexRunner.runtrack
  type: Field
  source:
    remote:
      path: src/System.Text.RegularExpressions/src/System/Text/RegularExpressions/RegexRunner.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: runtrack
    path: src/System.Text.RegularExpressions/src/System/Text/RegularExpressions/RegexRunner.cs
    startLine: 30
  assemblies:
  - System.Text.RegularExpressions
  namespace: System.Text.RegularExpressions
  summary: 'Used by a <xref href="System.Text.RegularExpressions.Regex" data-throw-if-not-resolved="false"></xref> object generated by the <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly"></see> method. '
  syntax:
    content: protected int[] runtrack
    content.vb: Protected runtrack As Integer()
    return:
      type: System.Int32[]
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: System.Text.RegularExpressions.RegexRunner.runtrackcount
  commentId: F:System.Text.RegularExpressions.RegexRunner.runtrackcount
  id: runtrackcount
  parent: System.Text.RegularExpressions.RegexRunner
  langs:
  - csharp
  - vb
  name: runtrackcount
  fullName: System.Text.RegularExpressions.RegexRunner.runtrackcount
  type: Field
  source:
    remote:
      path: src/System.Text.RegularExpressions/src/System/Text/RegularExpressions/RegexRunner.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: runtrackcount
    path: src/System.Text.RegularExpressions/src/System/Text/RegularExpressions/RegexRunner.cs
    startLine: 55
  assemblies:
  - System.Text.RegularExpressions
  namespace: System.Text.RegularExpressions
  summary: 'Used by a <xref href="System.Text.RegularExpressions.Regex" data-throw-if-not-resolved="false"></xref> object generated by the <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly"></see> method. '
  syntax:
    content: protected int runtrackcount
    content.vb: Protected runtrackcount As Integer
    return:
      type: System.Int32
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: System.Text.RegularExpressions.RegexRunner.runtrackpos
  commentId: F:System.Text.RegularExpressions.RegexRunner.runtrackpos
  id: runtrackpos
  parent: System.Text.RegularExpressions.RegexRunner
  langs:
  - csharp
  - vb
  name: runtrackpos
  fullName: System.Text.RegularExpressions.RegexRunner.runtrackpos
  type: Field
  source:
    remote:
      path: src/System.Text.RegularExpressions/src/System/Text/RegularExpressions/RegexRunner.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: runtrackpos
    path: src/System.Text.RegularExpressions/src/System/Text/RegularExpressions/RegexRunner.cs
    startLine: 31
  assemblies:
  - System.Text.RegularExpressions
  namespace: System.Text.RegularExpressions
  summary: 'Used by a <xref href="System.Text.RegularExpressions.Regex" data-throw-if-not-resolved="false"></xref> object generated by the <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly"></see> method. '
  syntax:
    content: protected int runtrackpos
    content.vb: Protected runtrackpos As Integer
    return:
      type: System.Int32
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: System.Text.RegularExpressions.RegexRunner.#ctor
  commentId: M:System.Text.RegularExpressions.RegexRunner.#ctor
  id: '#ctor'
  parent: System.Text.RegularExpressions.RegexRunner
  langs:
  - csharp
  - vb
  name: RegexRunner()
  fullName: System.Text.RegularExpressions.RegexRunner.RegexRunner()
  type: Constructor
  source:
    remote:
      path: src/System.Text.RegularExpressions/src/System/Text/RegularExpressions/RegexRunner.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Text.RegularExpressions/src/System/Text/RegularExpressions/RegexRunner.cs
    startLine: 72
  assemblies:
  - System.Text.RegularExpressions
  namespace: System.Text.RegularExpressions
  summary: 'Initializes a new instance of the <xref href="System.Text.RegularExpressions.RegexRunner" data-throw-if-not-resolved="false"></xref> class. '
  syntax:
    content: protected RegexRunner()
    content.vb: Protected Sub New
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: System.Text.RegularExpressions.RegexRunner.Capture(System.Int32,System.Int32,System.Int32)
  commentId: M:System.Text.RegularExpressions.RegexRunner.Capture(System.Int32,System.Int32,System.Int32)
  id: Capture(System.Int32,System.Int32,System.Int32)
  parent: System.Text.RegularExpressions.RegexRunner
  langs:
  - csharp
  - vb
  name: Capture(Int32, Int32, Int32)
  fullName: System.Text.RegularExpressions.RegexRunner.Capture(System.Int32, System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Text.RegularExpressions/src/System/Text/RegularExpressions/RegexRunner.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Capture
    path: src/System.Text.RegularExpressions/src/System/Text/RegularExpressions/RegexRunner.cs
    startLine: 456
  assemblies:
  - System.Text.RegularExpressions
  namespace: System.Text.RegularExpressions
  summary: 'Used by a <xref href="System.Text.RegularExpressions.Regex" data-throw-if-not-resolved="false"></xref> object generated by the <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly"></see> method. '
  syntax:
    content: protected void Capture(int capnum, int start, int end)
    content.vb: Protected Sub Capture(capnum As Integer, start As Integer, end As Integer)
    parameters:
    - id: capnum
      type: System.Int32
    - id: start
      type: System.Int32
    - id: end
      type: System.Int32
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: System.Text.RegularExpressions.RegexRunner.CharInClass(System.Char,System.String)
  commentId: M:System.Text.RegularExpressions.RegexRunner.CharInClass(System.Char,System.String)
  id: CharInClass(System.Char,System.String)
  parent: System.Text.RegularExpressions.RegexRunner
  langs:
  - csharp
  - vb
  name: CharInClass(Char, String)
  fullName: System.Text.RegularExpressions.RegexRunner.CharInClass(System.Char, System.String)
  type: Method
  source:
    remote:
      path: src/System.Text.RegularExpressions/ref/System.Text.RegularExpressions.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CharInClass
    path: src/System.Text.RegularExpressions/ref/System.Text.RegularExpressions.cs
    startLine: 175
  assemblies:
  - System.Text.RegularExpressions
  namespace: System.Text.RegularExpressions
  summary: Used by a <xref href="System.Text.RegularExpressions.Regex" data-throw-if-not-resolved="false"></xref> object generated by the <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly"></see> method. Determines whether a character is in a character class.
  syntax:
    content: protected static bool CharInClass(char ch, string charClass)
    content.vb: Protected Shared Function CharInClass(ch As Char, charClass As String) As Boolean
    parameters:
    - id: ch
      type: System.Char
      description: A character to test.
    - id: charClass
      type: System.String
      description: The internal name of a character class.
    return:
      type: System.Boolean
      description: true if the <em>ch</em> parameter is in the character class specified by the <em>charClass</em> parameter.
  modifiers.csharp:
  - protected
  - static
  modifiers.vb:
  - Protected
  - Shared
- uid: System.Text.RegularExpressions.RegexRunner.CharInSet(System.Char,System.String,System.String)
  commentId: M:System.Text.RegularExpressions.RegexRunner.CharInSet(System.Char,System.String,System.String)
  id: CharInSet(System.Char,System.String,System.String)
  parent: System.Text.RegularExpressions.RegexRunner
  langs:
  - csharp
  - vb
  name: CharInSet(Char, String, String)
  fullName: System.Text.RegularExpressions.RegexRunner.CharInSet(System.Char, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/System.Text.RegularExpressions/ref/System.Text.RegularExpressions.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CharInSet
    path: src/System.Text.RegularExpressions/ref/System.Text.RegularExpressions.cs
    startLine: 176
  assemblies:
  - System.Text.RegularExpressions
  namespace: System.Text.RegularExpressions
  summary: 'Used by a <xref href="System.Text.RegularExpressions.Regex" data-throw-if-not-resolved="false"></xref> object generated by the <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly"></see> method. '
  syntax:
    content: protected static bool CharInSet(char ch, string set, string category)
    content.vb: Protected Shared Function CharInSet(ch As Char, set As String, category As String) As Boolean
    parameters:
    - id: ch
      type: System.Char
    - id: set
      type: System.String
    - id: category
      type: System.String
    return:
      type: System.Boolean
      description: Returns <xref href="System.Boolean" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - protected
  - static
  modifiers.vb:
  - Protected
  - Shared
- uid: System.Text.RegularExpressions.RegexRunner.CheckTimeout
  commentId: M:System.Text.RegularExpressions.RegexRunner.CheckTimeout
  id: CheckTimeout
  parent: System.Text.RegularExpressions.RegexRunner
  langs:
  - csharp
  - vb
  name: CheckTimeout()
  fullName: System.Text.RegularExpressions.RegexRunner.CheckTimeout()
  type: Method
  source:
    remote:
      path: src/System.Text.RegularExpressions/src/System/Text/RegularExpressions/RegexRunner.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CheckTimeout
    path: src/System.Text.RegularExpressions/src/System/Text/RegularExpressions/RegexRunner.cs
    startLine: 203
  assemblies:
  - System.Text.RegularExpressions
  namespace: System.Text.RegularExpressions
  summary: Used by a <xref href="System.Text.RegularExpressions.Regex" data-throw-if-not-resolved="false"></xref> object generated by the <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly"></see> method.
  syntax:
    content: protected void CheckTimeout()
    content.vb: Protected Sub CheckTimeout
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: System.Text.RegularExpressions.RegexRunner.Crawl(System.Int32)
  commentId: M:System.Text.RegularExpressions.RegexRunner.Crawl(System.Int32)
  id: Crawl(System.Int32)
  parent: System.Text.RegularExpressions.RegexRunner
  langs:
  - csharp
  - vb
  name: Crawl(Int32)
  fullName: System.Text.RegularExpressions.RegexRunner.Crawl(System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Text.RegularExpressions/src/System/Text/RegularExpressions/RegexRunner.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Crawl
    path: src/System.Text.RegularExpressions/src/System/Text/RegularExpressions/RegexRunner.cs
    startLine: 427
  assemblies:
  - System.Text.RegularExpressions
  namespace: System.Text.RegularExpressions
  summary: 'Used by a <xref href="System.Text.RegularExpressions.Regex" data-throw-if-not-resolved="false"></xref> object generated by the <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly"></see> method. '
  syntax:
    content: protected void Crawl(int i)
    content.vb: Protected Sub Crawl(i As Integer)
    parameters:
    - id: i
      type: System.Int32
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: System.Text.RegularExpressions.RegexRunner.Crawlpos
  commentId: M:System.Text.RegularExpressions.RegexRunner.Crawlpos
  id: Crawlpos
  parent: System.Text.RegularExpressions.RegexRunner
  langs:
  - csharp
  - vb
  name: Crawlpos()
  fullName: System.Text.RegularExpressions.RegexRunner.Crawlpos()
  type: Method
  source:
    remote:
      path: src/System.Text.RegularExpressions/src/System/Text/RegularExpressions/RegexRunner.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Crawlpos
    path: src/System.Text.RegularExpressions/src/System/Text/RegularExpressions/RegexRunner.cs
    startLine: 446
  assemblies:
  - System.Text.RegularExpressions
  namespace: System.Text.RegularExpressions
  summary: 'Used by a <xref href="System.Text.RegularExpressions.Regex" data-throw-if-not-resolved="false"></xref> object generated by the <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly"></see> method. '
  syntax:
    content: protected int Crawlpos()
    content.vb: Protected Function Crawlpos As Integer
    return:
      type: System.Int32
      description: Returns <xref href="System.Int32" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: System.Text.RegularExpressions.RegexRunner.DoubleCrawl
  commentId: M:System.Text.RegularExpressions.RegexRunner.DoubleCrawl
  id: DoubleCrawl
  parent: System.Text.RegularExpressions.RegexRunner
  langs:
  - csharp
  - vb
  name: DoubleCrawl()
  fullName: System.Text.RegularExpressions.RegexRunner.DoubleCrawl()
  type: Method
  source:
    remote:
      path: src/System.Text.RegularExpressions/src/System/Text/RegularExpressions/RegexRunner.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: DoubleCrawl
    path: src/System.Text.RegularExpressions/src/System/Text/RegularExpressions/RegexRunner.cs
    startLine: 413
  assemblies:
  - System.Text.RegularExpressions
  namespace: System.Text.RegularExpressions
  summary: 'Used by a <xref href="System.Text.RegularExpressions.Regex" data-throw-if-not-resolved="false"></xref> object generated by the <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly"></see> method. '
  syntax:
    content: protected void DoubleCrawl()
    content.vb: Protected Sub DoubleCrawl
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: System.Text.RegularExpressions.RegexRunner.DoubleStack
  commentId: M:System.Text.RegularExpressions.RegexRunner.DoubleStack
  id: DoubleStack
  parent: System.Text.RegularExpressions.RegexRunner
  langs:
  - csharp
  - vb
  name: DoubleStack()
  fullName: System.Text.RegularExpressions.RegexRunner.DoubleStack()
  type: Method
  source:
    remote:
      path: src/System.Text.RegularExpressions/src/System/Text/RegularExpressions/RegexRunner.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: DoubleStack
    path: src/System.Text.RegularExpressions/src/System/Text/RegularExpressions/RegexRunner.cs
    startLine: 399
  assemblies:
  - System.Text.RegularExpressions
  namespace: System.Text.RegularExpressions
  summary: 'Used by a <xref href="System.Text.RegularExpressions.Regex" data-throw-if-not-resolved="false"></xref> object generated by the <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly"></see> method. '
  syntax:
    content: protected void DoubleStack()
    content.vb: Protected Sub DoubleStack
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: System.Text.RegularExpressions.RegexRunner.DoubleTrack
  commentId: M:System.Text.RegularExpressions.RegexRunner.DoubleTrack
  id: DoubleTrack
  parent: System.Text.RegularExpressions.RegexRunner
  langs:
  - csharp
  - vb
  name: DoubleTrack()
  fullName: System.Text.RegularExpressions.RegexRunner.DoubleTrack()
  type: Method
  source:
    remote:
      path: src/System.Text.RegularExpressions/src/System/Text/RegularExpressions/RegexRunner.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: DoubleTrack
    path: src/System.Text.RegularExpressions/src/System/Text/RegularExpressions/RegexRunner.cs
    startLine: 384
  assemblies:
  - System.Text.RegularExpressions
  namespace: System.Text.RegularExpressions
  summary: 'Used by a <xref href="System.Text.RegularExpressions.Regex" data-throw-if-not-resolved="false"></xref> object generated by the <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly"></see> method. '
  syntax:
    content: protected void DoubleTrack()
    content.vb: Protected Sub DoubleTrack
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: System.Text.RegularExpressions.RegexRunner.EnsureStorage
  commentId: M:System.Text.RegularExpressions.RegexRunner.EnsureStorage
  id: EnsureStorage
  parent: System.Text.RegularExpressions.RegexRunner
  langs:
  - csharp
  - vb
  name: EnsureStorage()
  fullName: System.Text.RegularExpressions.RegexRunner.EnsureStorage()
  type: Method
  source:
    remote:
      path: src/System.Text.RegularExpressions/src/System/Text/RegularExpressions/RegexRunner.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: EnsureStorage
    path: src/System.Text.RegularExpressions/src/System/Text/RegularExpressions/RegexRunner.cs
    startLine: 344
  assemblies:
  - System.Text.RegularExpressions
  namespace: System.Text.RegularExpressions
  summary: 'Used by a <xref href="System.Text.RegularExpressions.Regex" data-throw-if-not-resolved="false"></xref> object generated by the <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly"></see> method. '
  syntax:
    content: protected void EnsureStorage()
    content.vb: Protected Sub EnsureStorage
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: System.Text.RegularExpressions.RegexRunner.FindFirstChar
  commentId: M:System.Text.RegularExpressions.RegexRunner.FindFirstChar
  id: FindFirstChar
  parent: System.Text.RegularExpressions.RegexRunner
  langs:
  - csharp
  - vb
  name: FindFirstChar()
  fullName: System.Text.RegularExpressions.RegexRunner.FindFirstChar()
  type: Method
  source:
    remote:
      path: src/System.Text.RegularExpressions/src/System/Text/RegularExpressions/RegexRunner.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: FindFirstChar
    path: src/System.Text.RegularExpressions/src/System/Text/RegularExpressions/RegexRunner.cs
    startLine: 257
  assemblies:
  - System.Text.RegularExpressions
  namespace: System.Text.RegularExpressions
  summary: 'Used by a <xref href="System.Text.RegularExpressions.Regex" data-throw-if-not-resolved="false"></xref> object generated by the <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly"></see> method. '
  syntax:
    content: protected abstract bool FindFirstChar()
    content.vb: Protected MustOverride Function FindFirstChar As Boolean
    return:
      type: System.Boolean
      description: Returns <xref href="System.Boolean" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - protected
  - abstract
  modifiers.vb:
  - Protected
  - MustOverride
- uid: System.Text.RegularExpressions.RegexRunner.Go
  commentId: M:System.Text.RegularExpressions.RegexRunner.Go
  id: Go
  parent: System.Text.RegularExpressions.RegexRunner
  langs:
  - csharp
  - vb
  name: Go()
  fullName: System.Text.RegularExpressions.RegexRunner.Go()
  type: Method
  source:
    remote:
      path: src/System.Text.RegularExpressions/src/System/Text/RegularExpressions/RegexRunner.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Go
    path: src/System.Text.RegularExpressions/src/System/Text/RegularExpressions/RegexRunner.cs
    startLine: 250
  assemblies:
  - System.Text.RegularExpressions
  namespace: System.Text.RegularExpressions
  summary: 'Used by a <xref href="System.Text.RegularExpressions.Regex" data-throw-if-not-resolved="false"></xref> object generated by the <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly"></see> method. '
  syntax:
    content: protected abstract void Go()
    content.vb: Protected MustOverride Sub Go
  modifiers.csharp:
  - protected
  - abstract
  modifiers.vb:
  - Protected
  - MustOverride
- uid: System.Text.RegularExpressions.RegexRunner.InitTrackCount
  commentId: M:System.Text.RegularExpressions.RegexRunner.InitTrackCount
  id: InitTrackCount
  parent: System.Text.RegularExpressions.RegexRunner
  langs:
  - csharp
  - vb
  name: InitTrackCount()
  fullName: System.Text.RegularExpressions.RegexRunner.InitTrackCount()
  type: Method
  source:
    remote:
      path: src/System.Text.RegularExpressions/src/System/Text/RegularExpressions/RegexRunner.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: InitTrackCount
    path: src/System.Text.RegularExpressions/src/System/Text/RegularExpressions/RegexRunner.cs
    startLine: 264
  assemblies:
  - System.Text.RegularExpressions
  namespace: System.Text.RegularExpressions
  summary: 'Used by a <xref href="System.Text.RegularExpressions.Regex" data-throw-if-not-resolved="false"></xref> object generated by the <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly"></see> method. '
  syntax:
    content: protected abstract void InitTrackCount()
    content.vb: Protected MustOverride Sub InitTrackCount
  modifiers.csharp:
  - protected
  - abstract
  modifiers.vb:
  - Protected
  - MustOverride
- uid: System.Text.RegularExpressions.RegexRunner.IsBoundary(System.Int32,System.Int32,System.Int32)
  commentId: M:System.Text.RegularExpressions.RegexRunner.IsBoundary(System.Int32,System.Int32,System.Int32)
  id: IsBoundary(System.Int32,System.Int32,System.Int32)
  parent: System.Text.RegularExpressions.RegexRunner
  langs:
  - csharp
  - vb
  name: IsBoundary(Int32, Int32, Int32)
  fullName: System.Text.RegularExpressions.RegexRunner.IsBoundary(System.Int32, System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Text.RegularExpressions/src/System/Text/RegularExpressions/RegexRunner.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IsBoundary
    path: src/System.Text.RegularExpressions/src/System/Text/RegularExpressions/RegexRunner.cs
    startLine: 357
  assemblies:
  - System.Text.RegularExpressions
  namespace: System.Text.RegularExpressions
  summary: 'Used by a <xref href="System.Text.RegularExpressions.Regex" data-throw-if-not-resolved="false"></xref> object generated by the <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly"></see> method. '
  syntax:
    content: protected bool IsBoundary(int index, int startpos, int endpos)
    content.vb: Protected Function IsBoundary(index As Integer, startpos As Integer, endpos As Integer) As Boolean
    parameters:
    - id: index
      type: System.Int32
    - id: startpos
      type: System.Int32
    - id: endpos
      type: System.Int32
    return:
      type: System.Boolean
      description: Returns <xref href="System.Boolean" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: System.Text.RegularExpressions.RegexRunner.IsECMABoundary(System.Int32,System.Int32,System.Int32)
  commentId: M:System.Text.RegularExpressions.RegexRunner.IsECMABoundary(System.Int32,System.Int32,System.Int32)
  id: IsECMABoundary(System.Int32,System.Int32,System.Int32)
  parent: System.Text.RegularExpressions.RegexRunner
  langs:
  - csharp
  - vb
  name: IsECMABoundary(Int32, Int32, Int32)
  fullName: System.Text.RegularExpressions.RegexRunner.IsECMABoundary(System.Int32, System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Text.RegularExpressions/src/System/Text/RegularExpressions/RegexRunner.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IsECMABoundary
    path: src/System.Text.RegularExpressions/src/System/Text/RegularExpressions/RegexRunner.cs
    startLine: 363
  assemblies:
  - System.Text.RegularExpressions
  namespace: System.Text.RegularExpressions
  summary: 'Used by a <xref href="System.Text.RegularExpressions.Regex" data-throw-if-not-resolved="false"></xref> object generated by the <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly"></see> method. '
  syntax:
    content: protected bool IsECMABoundary(int index, int startpos, int endpos)
    content.vb: Protected Function IsECMABoundary(index As Integer, startpos As Integer, endpos As Integer) As Boolean
    parameters:
    - id: index
      type: System.Int32
    - id: startpos
      type: System.Int32
    - id: endpos
      type: System.Int32
    return:
      type: System.Boolean
      description: Returns <xref href="System.Boolean" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: System.Text.RegularExpressions.RegexRunner.IsMatched(System.Int32)
  commentId: M:System.Text.RegularExpressions.RegexRunner.IsMatched(System.Int32)
  id: IsMatched(System.Int32)
  parent: System.Text.RegularExpressions.RegexRunner
  langs:
  - csharp
  - vb
  name: IsMatched(Int32)
  fullName: System.Text.RegularExpressions.RegexRunner.IsMatched(System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Text.RegularExpressions/src/System/Text/RegularExpressions/RegexRunner.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IsMatched
    path: src/System.Text.RegularExpressions/src/System/Text/RegularExpressions/RegexRunner.cs
    startLine: 536
  assemblies:
  - System.Text.RegularExpressions
  namespace: System.Text.RegularExpressions
  summary: 'Used by a <xref href="System.Text.RegularExpressions.Regex" data-throw-if-not-resolved="false"></xref> object generated by the <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly"></see> method. '
  syntax:
    content: protected bool IsMatched(int cap)
    content.vb: Protected Function IsMatched(cap As Integer) As Boolean
    parameters:
    - id: cap
      type: System.Int32
    return:
      type: System.Boolean
      description: Returns <xref href="System.Boolean" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: System.Text.RegularExpressions.RegexRunner.MatchIndex(System.Int32)
  commentId: M:System.Text.RegularExpressions.RegexRunner.MatchIndex(System.Int32)
  id: MatchIndex(System.Int32)
  parent: System.Text.RegularExpressions.RegexRunner
  langs:
  - csharp
  - vb
  name: MatchIndex(Int32)
  fullName: System.Text.RegularExpressions.RegexRunner.MatchIndex(System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Text.RegularExpressions/src/System/Text/RegularExpressions/RegexRunner.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: MatchIndex
    path: src/System.Text.RegularExpressions/src/System/Text/RegularExpressions/RegexRunner.cs
    startLine: 544
  assemblies:
  - System.Text.RegularExpressions
  namespace: System.Text.RegularExpressions
  summary: 'Used by a <xref href="System.Text.RegularExpressions.Regex" data-throw-if-not-resolved="false"></xref> object generated by the <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly"></see> method. '
  syntax:
    content: protected int MatchIndex(int cap)
    content.vb: Protected Function MatchIndex(cap As Integer) As Integer
    parameters:
    - id: cap
      type: System.Int32
    return:
      type: System.Int32
      description: Returns <xref href="System.Int32" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: System.Text.RegularExpressions.RegexRunner.MatchLength(System.Int32)
  commentId: M:System.Text.RegularExpressions.RegexRunner.MatchLength(System.Int32)
  id: MatchLength(System.Int32)
  parent: System.Text.RegularExpressions.RegexRunner
  langs:
  - csharp
  - vb
  name: MatchLength(Int32)
  fullName: System.Text.RegularExpressions.RegexRunner.MatchLength(System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Text.RegularExpressions/src/System/Text/RegularExpressions/RegexRunner.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: MatchLength
    path: src/System.Text.RegularExpressions/src/System/Text/RegularExpressions/RegexRunner.cs
    startLine: 552
  assemblies:
  - System.Text.RegularExpressions
  namespace: System.Text.RegularExpressions
  summary: 'Used by a <xref href="System.Text.RegularExpressions.Regex" data-throw-if-not-resolved="false"></xref> object generated by the <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly"></see> method. '
  syntax:
    content: protected int MatchLength(int cap)
    content.vb: Protected Function MatchLength(cap As Integer) As Integer
    parameters:
    - id: cap
      type: System.Int32
    return:
      type: System.Int32
      description: Returns <xref href="System.Int32" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: System.Text.RegularExpressions.RegexRunner.Popcrawl
  commentId: M:System.Text.RegularExpressions.RegexRunner.Popcrawl
  id: Popcrawl
  parent: System.Text.RegularExpressions.RegexRunner
  langs:
  - csharp
  - vb
  name: Popcrawl()
  fullName: System.Text.RegularExpressions.RegexRunner.Popcrawl()
  type: Method
  source:
    remote:
      path: src/System.Text.RegularExpressions/src/System/Text/RegularExpressions/RegexRunner.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Popcrawl
    path: src/System.Text.RegularExpressions/src/System/Text/RegularExpressions/RegexRunner.cs
    startLine: 438
  assemblies:
  - System.Text.RegularExpressions
  namespace: System.Text.RegularExpressions
  summary: 'Used by a <xref href="System.Text.RegularExpressions.Regex" data-throw-if-not-resolved="false"></xref> object generated by the <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly"></see> method. '
  syntax:
    content: protected int Popcrawl()
    content.vb: Protected Function Popcrawl As Integer
    return:
      type: System.Int32
      description: Returns <xref href="System.Int32" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: System.Text.RegularExpressions.RegexRunner.Scan(System.Text.RegularExpressions.Regex,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean)
  commentId: M:System.Text.RegularExpressions.RegexRunner.Scan(System.Text.RegularExpressions.Regex,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean)
  id: Scan(System.Text.RegularExpressions.Regex,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean)
  parent: System.Text.RegularExpressions.RegexRunner
  langs:
  - csharp
  - vb
  name: Scan(Regex, String, Int32, Int32, Int32, Int32, Boolean)
  fullName: System.Text.RegularExpressions.RegexRunner.Scan(System.Text.RegularExpressions.Regex, System.String, System.Int32, System.Int32, System.Int32, System.Int32, System.Boolean)
  type: Method
  source:
    remote:
      path: src/System.Text.RegularExpressions/ref/System.Text.RegularExpressions.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Scan
    path: src/System.Text.RegularExpressions/ref/System.Text.RegularExpressions.cs
    startLine: 193
  assemblies:
  - System.Text.RegularExpressions
  namespace: System.Text.RegularExpressions
  syntax:
    content: protected Match Scan(Regex regex, string text, int textbeg, int textend, int textstart, int prevlen, bool quick)
    content.vb: Protected Function Scan(regex As Regex, text As String, textbeg As Integer, textend As Integer, textstart As Integer, prevlen As Integer, quick As Boolean) As Match
    parameters:
    - id: regex
      type: System.Text.RegularExpressions.Regex
    - id: text
      type: System.String
    - id: textbeg
      type: System.Int32
    - id: textend
      type: System.Int32
    - id: textstart
      type: System.Int32
    - id: prevlen
      type: System.Int32
    - id: quick
      type: System.Boolean
    return:
      type: System.Text.RegularExpressions.Match
      description: Returns <xref href="System.Text.RegularExpressions.Match" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: System.Text.RegularExpressions.RegexRunner.Scan(System.Text.RegularExpressions.Regex,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean,System.TimeSpan)
  commentId: M:System.Text.RegularExpressions.RegexRunner.Scan(System.Text.RegularExpressions.Regex,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean,System.TimeSpan)
  id: Scan(System.Text.RegularExpressions.Regex,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean,System.TimeSpan)
  parent: System.Text.RegularExpressions.RegexRunner
  langs:
  - csharp
  - vb
  name: Scan(Regex, String, Int32, Int32, Int32, Int32, Boolean, TimeSpan)
  fullName: System.Text.RegularExpressions.RegexRunner.Scan(System.Text.RegularExpressions.Regex, System.String, System.Int32, System.Int32, System.Int32, System.Int32, System.Boolean, System.TimeSpan)
  type: Method
  source:
    remote:
      path: src/System.Text.RegularExpressions/ref/System.Text.RegularExpressions.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Scan
    path: src/System.Text.RegularExpressions/ref/System.Text.RegularExpressions.cs
    startLine: 194
  assemblies:
  - System.Text.RegularExpressions
  namespace: System.Text.RegularExpressions
  summary: Used by a <xref href="System.Text.RegularExpressions.Regex" data-throw-if-not-resolved="false"></xref> object generated by the <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly"></see> method.
  syntax:
    content: protected Match Scan(Regex regex, string text, int textbeg, int textend, int textstart, int prevlen, bool quick, TimeSpan timeout)
    content.vb: Protected Function Scan(regex As Regex, text As String, textbeg As Integer, textend As Integer, textstart As Integer, prevlen As Integer, quick As Boolean, timeout As TimeSpan) As Match
    parameters:
    - id: regex
      type: System.Text.RegularExpressions.Regex
    - id: text
      type: System.String
    - id: textbeg
      type: System.Int32
    - id: textend
      type: System.Int32
    - id: textstart
      type: System.Int32
    - id: prevlen
      type: System.Int32
    - id: quick
      type: System.Boolean
    - id: timeout
      type: System.TimeSpan
    return:
      type: System.Text.RegularExpressions.Match
      description: Returns <xref href="System.Text.RegularExpressions.Match" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: System.Text.RegularExpressions.RegexRunner.TransferCapture(System.Int32,System.Int32,System.Int32,System.Int32)
  commentId: M:System.Text.RegularExpressions.RegexRunner.TransferCapture(System.Int32,System.Int32,System.Int32,System.Int32)
  id: TransferCapture(System.Int32,System.Int32,System.Int32,System.Int32)
  parent: System.Text.RegularExpressions.RegexRunner
  langs:
  - csharp
  - vb
  name: TransferCapture(Int32, Int32, Int32, Int32)
  fullName: System.Text.RegularExpressions.RegexRunner.TransferCapture(System.Int32, System.Int32, System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Text.RegularExpressions/src/System/Text/RegularExpressions/RegexRunner.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: TransferCapture
    path: src/System.Text.RegularExpressions/src/System/Text/RegularExpressions/RegexRunner.cs
    startLine: 476
  assemblies:
  - System.Text.RegularExpressions
  namespace: System.Text.RegularExpressions
  summary: 'Used by a <xref href="System.Text.RegularExpressions.Regex" data-throw-if-not-resolved="false"></xref> object generated by the <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly"></see> method. '
  syntax:
    content: protected void TransferCapture(int capnum, int uncapnum, int start, int end)
    content.vb: Protected Sub TransferCapture(capnum As Integer, uncapnum As Integer, start As Integer, end As Integer)
    parameters:
    - id: capnum
      type: System.Int32
    - id: uncapnum
      type: System.Int32
    - id: start
      type: System.Int32
    - id: end
      type: System.Int32
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: System.Text.RegularExpressions.RegexRunner.Uncapture
  commentId: M:System.Text.RegularExpressions.RegexRunner.Uncapture
  id: Uncapture
  parent: System.Text.RegularExpressions.RegexRunner
  langs:
  - csharp
  - vb
  name: Uncapture()
  fullName: System.Text.RegularExpressions.RegexRunner.Uncapture()
  type: Method
  source:
    remote:
      path: src/System.Text.RegularExpressions/src/System/Text/RegularExpressions/RegexRunner.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Uncapture
    path: src/System.Text.RegularExpressions/src/System/Text/RegularExpressions/RegexRunner.cs
    startLine: 527
  assemblies:
  - System.Text.RegularExpressions
  namespace: System.Text.RegularExpressions
  summary: Used by a <xref href="System.Text.RegularExpressions.Regex" data-throw-if-not-resolved="false"></xref> object generated by the <see cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly"></see> method.
  syntax:
    content: protected void Uncapture()
    content.vb: Protected Sub Uncapture
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
references:
- uid: System.Text.RegularExpressions
  isExternal: false
  name: System.Text.RegularExpressions
  fullName: System.Text.RegularExpressions
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Int32[]
  isExternal: false
  name: Int32[]
  fullName: System.Int32[]
  fullname.vb: System.Int32()
  name.vb: Int32()
  spec.csharp:
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
  - name: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
  - name: ()
    fullName: ()
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  fullName: System.Int32
- uid: System.Text.RegularExpressions.Match
  parent: System.Text.RegularExpressions
  isExternal: false
  name: Match
  fullName: System.Text.RegularExpressions.Match
- uid: System.Text.RegularExpressions.Regex
  parent: System.Text.RegularExpressions
  isExternal: false
  name: Regex
  fullName: System.Text.RegularExpressions.Regex
- uid: System.String
  parent: System
  isExternal: false
  name: String
  fullName: System.String
- uid: System.Char
  parent: System
  isExternal: false
  name: Char
  fullName: System.Char
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  fullName: System.Boolean
- uid: System.TimeSpan
  parent: System
  isExternal: false
  name: TimeSpan
  fullName: System.TimeSpan
