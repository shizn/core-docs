items:
- uid: System.Text.Encoding
  commentId: T:System.Text.Encoding
  id: Encoding
  parent: System.Text
  children:
  - System.Text.Encoding.#ctor
  - System.Text.Encoding.#ctor(System.Int32)
  - System.Text.Encoding.#ctor(System.Int32,System.Text.EncoderFallback,System.Text.DecoderFallback)
  - System.Text.Encoding.ASCII
  - System.Text.Encoding.BigEndianUnicode
  - System.Text.Encoding.Clone
  - System.Text.Encoding.CodePage
  - System.Text.Encoding.Convert(System.Text.Encoding,System.Text.Encoding,System.Byte[])
  - System.Text.Encoding.Convert(System.Text.Encoding,System.Text.Encoding,System.Byte[],System.Int32,System.Int32)
  - System.Text.Encoding.DecoderFallback
  - System.Text.Encoding.EncoderFallback
  - System.Text.Encoding.EncodingName
  - System.Text.Encoding.Equals(System.Object)
  - System.Text.Encoding.GetByteCount(System.Char*,System.Int32)
  - System.Text.Encoding.GetByteCount(System.Char[])
  - System.Text.Encoding.GetByteCount(System.Char[],System.Int32,System.Int32)
  - System.Text.Encoding.GetByteCount(System.String)
  - System.Text.Encoding.GetBytes(System.Char*,System.Int32,System.Byte*,System.Int32)
  - System.Text.Encoding.GetBytes(System.Char[])
  - System.Text.Encoding.GetBytes(System.Char[],System.Int32,System.Int32)
  - System.Text.Encoding.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32)
  - System.Text.Encoding.GetBytes(System.String)
  - System.Text.Encoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)
  - System.Text.Encoding.GetCharCount(System.Byte*,System.Int32)
  - System.Text.Encoding.GetCharCount(System.Byte[])
  - System.Text.Encoding.GetCharCount(System.Byte[],System.Int32,System.Int32)
  - System.Text.Encoding.GetChars(System.Byte*,System.Int32,System.Char*,System.Int32)
  - System.Text.Encoding.GetChars(System.Byte[])
  - System.Text.Encoding.GetChars(System.Byte[],System.Int32,System.Int32)
  - System.Text.Encoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)
  - System.Text.Encoding.GetDecoder
  - System.Text.Encoding.GetEncoder
  - System.Text.Encoding.GetEncoding(System.Int32)
  - System.Text.Encoding.GetEncoding(System.Int32,System.Text.EncoderFallback,System.Text.DecoderFallback)
  - System.Text.Encoding.GetEncoding(System.String)
  - System.Text.Encoding.GetEncoding(System.String,System.Text.EncoderFallback,System.Text.DecoderFallback)
  - System.Text.Encoding.GetHashCode
  - System.Text.Encoding.GetMaxByteCount(System.Int32)
  - System.Text.Encoding.GetMaxCharCount(System.Int32)
  - System.Text.Encoding.GetPreamble
  - System.Text.Encoding.GetString(System.Byte*,System.Int32)
  - System.Text.Encoding.GetString(System.Byte[])
  - System.Text.Encoding.GetString(System.Byte[],System.Int32,System.Int32)
  - System.Text.Encoding.IsSingleByte
  - System.Text.Encoding.RegisterProvider(System.Text.EncodingProvider)
  - System.Text.Encoding.Unicode
  - System.Text.Encoding.UTF32
  - System.Text.Encoding.UTF7
  - System.Text.Encoding.UTF8
  - System.Text.Encoding.WebName
  langs:
  - csharp
  - vb
  name: Encoding
  fullName: System.Text.Encoding
  type: Class
  source:
    remote:
      path: src/mscorlib/src/System/Text/Encoding.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Encoding
    path: src/mscorlib/src/System/Text/Encoding.cs
    startLine: 84
  assemblies:
  - System.Text.Encoding
  namespace: System.Text
  summary: Represents a character encoding.To browse the .NET Framework source code for this type, see the Reference Source.
  syntax:
    content: 'public abstract class Encoding : object'
    content.vb: >-
      Public MustInherit Class Encoding
          Inherits Object
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: System.Text.Encoding.#ctor
  commentId: M:System.Text.Encoding.#ctor
  id: '#ctor'
  parent: System.Text.Encoding
  langs:
  - csharp
  - vb
  name: Encoding()
  fullName: System.Text.Encoding.Encoding()
  type: Constructor
  source:
    remote:
      path: src/mscorlib/src/System/Text/Encoding.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: .ctor
    path: src/mscorlib/src/System/Text/Encoding.cs
    startLine: 190
  assemblies:
  - System.Text.Encoding
  namespace: System.Text
  summary: Initializes a new instance of the <xref href="System.Text.Encoding" data-throw-if-not-resolved="false"></xref> class.
  syntax:
    content: protected Encoding()
    content.vb: Protected Sub New
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: System.Text.Encoding.#ctor(System.Int32)
  commentId: M:System.Text.Encoding.#ctor(System.Int32)
  id: '#ctor(System.Int32)'
  parent: System.Text.Encoding
  langs:
  - csharp
  - vb
  name: Encoding(Int32)
  fullName: System.Text.Encoding.Encoding(System.Int32)
  type: Constructor
  source:
    remote:
      path: src/mscorlib/src/System/Text/Encoding.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: .ctor
    path: src/mscorlib/src/System/Text/Encoding.cs
    startLine: 195
  assemblies:
  - System.Text.Encoding
  namespace: System.Text
  summary: Initializes a new instance of the <xref href="System.Text.Encoding" data-throw-if-not-resolved="false"></xref> class that corresponds to the specified code page.
  syntax:
    content: protected Encoding(int codePage)
    content.vb: Protected Sub New(codePage As Integer)
    parameters:
    - id: codePage
      type: System.Int32
      description: 'The code page identifier of the preferred encoding.-or- 0, to use the default encoding. '
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<em>codePage</em> is less than zero. "
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: System.Text.Encoding.#ctor(System.Int32,System.Text.EncoderFallback,System.Text.DecoderFallback)
  commentId: M:System.Text.Encoding.#ctor(System.Int32,System.Text.EncoderFallback,System.Text.DecoderFallback)
  id: '#ctor(System.Int32,System.Text.EncoderFallback,System.Text.DecoderFallback)'
  parent: System.Text.Encoding
  langs:
  - csharp
  - vb
  name: Encoding(Int32, EncoderFallback, DecoderFallback)
  fullName: System.Text.Encoding.Encoding(System.Int32, System.Text.EncoderFallback, System.Text.DecoderFallback)
  type: Constructor
  source:
    remote:
      path: src/mscorlib/src/System/Text/Encoding.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: .ctor
    path: src/mscorlib/src/System/Text/Encoding.cs
    startLine: 214
  assemblies:
  - System.Text.Encoding
  namespace: System.Text
  summary: 'Initializes a new instance of the <xref href="System.Text.Encoding" data-throw-if-not-resolved="false"></xref> class that corresponds to the specified code page with the specified encoder and decoder fallback strategies. '
  syntax:
    content: protected Encoding(int codePage, EncoderFallback encoderFallback, DecoderFallback decoderFallback)
    content.vb: Protected Sub New(codePage As Integer, encoderFallback As EncoderFallback, decoderFallback As DecoderFallback)
    parameters:
    - id: codePage
      type: System.Int32
      description: 'The encoding code page identifier. '
    - id: encoderFallback
      type: System.Text.EncoderFallback
      description: 'An object that provides an error-handling procedure when a character cannot be encoded with the current encoding. '
    - id: decoderFallback
      type: System.Text.DecoderFallback
      description: 'An object that provides an error-handling procedure when a byte sequence cannot be decoded with the current encoding. '
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<em>codePage</em> is less than zero. "
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: System.Text.Encoding.ASCII
  commentId: P:System.Text.Encoding.ASCII
  id: ASCII
  parent: System.Text.Encoding
  langs:
  - csharp
  - vb
  name: ASCII
  fullName: System.Text.Encoding.ASCII
  type: Property
  source:
    remote:
      path: src/mscorlib/src/System/Text/Encoding.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ASCII
    path: src/mscorlib/src/System/Text/Encoding.cs
    startLine: 897
  assemblies:
  - System.Text.Encoding
  namespace: System.Text
  summary: Gets an encoding for the ASCII (7-bit) character set.
  syntax:
    content: public static Encoding ASCII { get; }
    content.vb: Public Shared ReadOnly Property ASCII As Encoding
    parameters: []
    return:
      type: System.Text.Encoding
      description: An  encoding for the ASCII (7-bit) character set.
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: System.Text.Encoding.BigEndianUnicode
  commentId: P:System.Text.Encoding.BigEndianUnicode
  id: BigEndianUnicode
  parent: System.Text.Encoding
  langs:
  - csharp
  - vb
  name: BigEndianUnicode
  fullName: System.Text.Encoding.BigEndianUnicode
  type: Property
  source:
    remote:
      path: src/mscorlib/src/System/Text/Encoding.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: BigEndianUnicode
    path: src/mscorlib/src/System/Text/Encoding.cs
    startLine: 1497
  assemblies:
  - System.Text.Encoding
  namespace: System.Text
  summary: Gets an encoding for the UTF-16 format that uses the big endian byte order.
  syntax:
    content: public static Encoding BigEndianUnicode { get; }
    content.vb: Public Shared ReadOnly Property BigEndianUnicode As Encoding
    parameters: []
    return:
      type: System.Text.Encoding
      description: An encoding object for the UTF-16 format that uses the big endian byte order.
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: System.Text.Encoding.CodePage
  commentId: P:System.Text.Encoding.CodePage
  id: CodePage
  parent: System.Text.Encoding
  langs:
  - csharp
  - vb
  name: CodePage
  fullName: System.Text.Encoding.CodePage
  type: Property
  source:
    remote:
      path: src/mscorlib/src/System/Text/Encoding.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: CodePage
    path: src/mscorlib/src/System/Text/Encoding.cs
    startLine: 1320
  assemblies:
  - System.Text.Encoding
  namespace: System.Text
  summary: When overridden in a derived class, gets the code page identifier of the current <xref href="System.Text.Encoding" data-throw-if-not-resolved="false"></xref>.
  syntax:
    content: public virtual int CodePage { get; }
    content.vb: Public Overridable ReadOnly Property CodePage As Integer
    parameters: []
    return:
      type: System.Int32
      description: The code page identifier of the current <xref href="System.Text.Encoding" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: System.Text.Encoding.DecoderFallback
  commentId: P:System.Text.Encoding.DecoderFallback
  id: DecoderFallback
  parent: System.Text.Encoding
  langs:
  - csharp
  - vb
  name: DecoderFallback
  fullName: System.Text.Encoding.DecoderFallback
  type: Property
  source:
    remote:
      path: src/mscorlib/src/System/Text/Encoding.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: DecoderFallback
    path: src/mscorlib/src/System/Text/Encoding.cs
    startLine: 850
  assemblies:
  - System.Text.Encoding
  namespace: System.Text
  summary: Gets or sets the <xref href="System.Text.DecoderFallback" data-throw-if-not-resolved="false"></xref> object for the current <xref href="System.Text.Encoding" data-throw-if-not-resolved="false"></xref> object.
  syntax:
    content: public DecoderFallback DecoderFallback { get; }
    content.vb: Public ReadOnly Property DecoderFallback As DecoderFallback
    parameters: []
    return:
      type: System.Text.DecoderFallback
      description: 'The decoder fallback object for the current <xref href="System.Text.Encoding" data-throw-if-not-resolved="false"></xref> object. '
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The value in a set operation is null.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: A value cannot be assigned in a set operation because the current <xref href="System.Text.Encoding" data-throw-if-not-resolved="false"></xref> object is read-only.
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Text.Encoding.EncoderFallback
  commentId: P:System.Text.Encoding.EncoderFallback
  id: EncoderFallback
  parent: System.Text.Encoding
  langs:
  - csharp
  - vb
  name: EncoderFallback
  fullName: System.Text.Encoding.EncoderFallback
  type: Property
  source:
    remote:
      path: src/mscorlib/src/System/Text/Encoding.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: EncoderFallback
    path: src/mscorlib/src/System/Text/Encoding.cs
    startLine: 828
  assemblies:
  - System.Text.Encoding
  namespace: System.Text
  summary: Gets or sets the <xref href="System.Text.EncoderFallback" data-throw-if-not-resolved="false"></xref> object for the current <xref href="System.Text.Encoding" data-throw-if-not-resolved="false"></xref> object.
  syntax:
    content: public EncoderFallback EncoderFallback { get; }
    content.vb: Public ReadOnly Property EncoderFallback As EncoderFallback
    parameters: []
    return:
      type: System.Text.EncoderFallback
      description: 'The encoder fallback object for the current <xref href="System.Text.Encoding" data-throw-if-not-resolved="false"></xref> object. '
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The value in a set operation is null.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: A value cannot be assigned in a set operation because the current <xref href="System.Text.Encoding" data-throw-if-not-resolved="false"></xref> object is read-only.
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Text.Encoding.EncodingName
  commentId: P:System.Text.Encoding.EncodingName
  id: EncodingName
  parent: System.Text.Encoding
  langs:
  - csharp
  - vb
  name: EncodingName
  fullName: System.Text.Encoding.EncodingName
  type: Property
  source:
    remote:
      path: src/mscorlib/src/System/Text/Encoding.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: EncodingName
    path: src/mscorlib/src/System/Text/Encoding.cs
    startLine: 720
  assemblies:
  - System.Text.Encoding
  namespace: System.Text
  summary: When overridden in a derived class, gets the human-readable description of the current encoding.
  syntax:
    content: public virtual string EncodingName { get; }
    content.vb: Public Overridable ReadOnly Property EncodingName As String
    parameters: []
    return:
      type: System.String
      description: The human-readable description of the current <xref href="System.Text.Encoding" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: System.Text.Encoding.IsSingleByte
  commentId: P:System.Text.Encoding.IsSingleByte
  id: IsSingleByte
  parent: System.Text.Encoding
  langs:
  - csharp
  - vb
  name: IsSingleByte
  fullName: System.Text.Encoding.IsSingleByte
  type: Property
  source:
    remote:
      path: src/mscorlib/src/System/Text/Encoding.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: IsSingleByte
    path: src/mscorlib/src/System/Text/Encoding.cs
    startLine: 818
  assemblies:
  - System.Text.Encoding
  namespace: System.Text
  summary: When overridden in a derived class, gets a value indicating whether the current encoding uses single-byte code points.
  syntax:
    content: public virtual bool IsSingleByte { get; }
    content.vb: Public Overridable ReadOnly Property IsSingleByte As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: true if the current <xref href="System.Text.Encoding" data-throw-if-not-resolved="false"></xref> uses single-byte code points; otherwise, false.
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: System.Text.Encoding.Unicode
  commentId: P:System.Text.Encoding.Unicode
  id: Unicode
  parent: System.Text.Encoding
  langs:
  - csharp
  - vb
  name: Unicode
  fullName: System.Text.Encoding.Unicode
  type: Property
  source:
    remote:
      path: src/mscorlib/src/System/Text/Encoding.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Unicode
    path: src/mscorlib/src/System/Text/Encoding.cs
    startLine: 1483
  assemblies:
  - System.Text.Encoding
  namespace: System.Text
  summary: Gets an encoding for the UTF-16 format using the little endian byte order.
  syntax:
    content: public static Encoding Unicode { get; }
    content.vb: Public Shared ReadOnly Property Unicode As Encoding
    parameters: []
    return:
      type: System.Text.Encoding
      description: An encoding for the UTF-16 format using the little endian byte order.
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: System.Text.Encoding.UTF32
  commentId: P:System.Text.Encoding.UTF32
  id: UTF32
  parent: System.Text.Encoding
  langs:
  - csharp
  - vb
  name: UTF32
  fullName: System.Text.Encoding.UTF32
  type: Property
  source:
    remote:
      path: src/mscorlib/src/System/Text/Encoding.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: UTF32
    path: src/mscorlib/src/System/Text/Encoding.cs
    startLine: 1528
  assemblies:
  - System.Text.Encoding
  namespace: System.Text
  summary: Gets an encoding for the UTF-32 format using the little endian byte order.
  syntax:
    content: public static Encoding UTF32 { get; }
    content.vb: Public Shared ReadOnly Property UTF32 As Encoding
    parameters: []
    return:
      type: System.Text.Encoding
      description: An  encoding object for the UTF-32 format using the little endian byte order.
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: System.Text.Encoding.UTF7
  commentId: P:System.Text.Encoding.UTF7
  id: UTF7
  parent: System.Text.Encoding
  langs:
  - csharp
  - vb
  name: UTF7
  fullName: System.Text.Encoding.UTF7
  type: Property
  source:
    remote:
      path: src/mscorlib/src/System/Text/Encoding.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: UTF7
    path: src/mscorlib/src/System/Text/Encoding.cs
    startLine: 1507
  assemblies:
  - System.Text.Encoding
  namespace: System.Text
  summary: Gets an encoding for the UTF-7 format.
  syntax:
    content: public static Encoding UTF7 { get; }
    content.vb: Public Shared ReadOnly Property UTF7 As Encoding
    parameters: []
    return:
      type: System.Text.Encoding
      description: An encoding for the UTF-7 format.
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: System.Text.Encoding.UTF8
  commentId: P:System.Text.Encoding.UTF8
  id: UTF8
  parent: System.Text.Encoding
  langs:
  - csharp
  - vb
  name: UTF8
  fullName: System.Text.Encoding.UTF8
  type: Property
  source:
    remote:
      path: src/mscorlib/src/System/Text/Encoding.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: UTF8
    path: src/mscorlib/src/System/Text/Encoding.cs
    startLine: 1518
  assemblies:
  - System.Text.Encoding
  namespace: System.Text
  summary: Gets an encoding for the UTF-8 format.
  syntax:
    content: public static Encoding UTF8 { get; }
    content.vb: Public Shared ReadOnly Property UTF8 As Encoding
    parameters: []
    return:
      type: System.Text.Encoding
      description: An encoding for the UTF-8 format.
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: System.Text.Encoding.WebName
  commentId: P:System.Text.Encoding.WebName
  id: WebName
  parent: System.Text.Encoding
  langs:
  - csharp
  - vb
  name: WebName
  fullName: System.Text.Encoding.WebName
  type: Property
  source:
    remote:
      path: src/mscorlib/src/System/Text/Encoding.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: WebName
    path: src/mscorlib/src/System/Text/Encoding.cs
    startLine: 745
  assemblies:
  - System.Text.Encoding
  namespace: System.Text
  summary: When overridden in a derived class, gets the name registered with the Internet Assigned Numbers Authority (IANA) for the current encoding.
  syntax:
    content: public virtual string WebName { get; }
    content.vb: Public Overridable ReadOnly Property WebName As String
    parameters: []
    return:
      type: System.String
      description: The IANA name for the current <xref href="System.Text.Encoding" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: System.Text.Encoding.Clone
  commentId: M:System.Text.Encoding.Clone
  id: Clone
  parent: System.Text.Encoding
  langs:
  - csharp
  - vb
  name: Clone()
  fullName: System.Text.Encoding.Clone()
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Text/Encoding.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Clone
    path: src/mscorlib/src/System/Text/Encoding.cs
    startLine: 872
  assemblies:
  - System.Text.Encoding
  namespace: System.Text
  summary: When overridden in a derived class, creates a shallow copy of the current <xref href="System.Text.Encoding" data-throw-if-not-resolved="false"></xref> object.
  syntax:
    content: public virtual object Clone()
    content.vb: Public Overridable Function Clone As Object
    return:
      type: System.Object
      description: A copy of the current <xref href="System.Text.Encoding" data-throw-if-not-resolved="false"></xref> object.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Text.Encoding.Convert(System.Text.Encoding,System.Text.Encoding,System.Byte[])
  commentId: M:System.Text.Encoding.Convert(System.Text.Encoding,System.Text.Encoding,System.Byte[])
  id: Convert(System.Text.Encoding,System.Text.Encoding,System.Byte[])
  parent: System.Text.Encoding
  langs:
  - csharp
  - vb
  name: Convert(Encoding, Encoding, Byte[])
  fullName: System.Text.Encoding.Convert(System.Text.Encoding, System.Text.Encoding, System.Byte[])
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Text/Encoding.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Convert
    path: src/mscorlib/src/System/Text/Encoding.cs
    startLine: 351
  assemblies:
  - System.Text.Encoding
  namespace: System.Text
  summary: Converts an entire byte array from one encoding to another.
  syntax:
    content: public static byte[] Convert(Encoding srcEncoding, Encoding dstEncoding, byte[] bytes)
    content.vb: Public Shared Function Convert(srcEncoding As Encoding, dstEncoding As Encoding, bytes As Byte()) As Byte()
    parameters:
    - id: srcEncoding
      type: System.Text.Encoding
      description: 'The encoding format of <em>bytes</em>. '
    - id: dstEncoding
      type: System.Text.Encoding
      description: 'The target encoding format. '
    - id: bytes
      type: System.Byte[]
      description: 'The bytes to convert. '
    return:
      type: System.Byte[]
      description: An array of type <xref href="System.Byte" data-throw-if-not-resolved="false"></xref> containing the results of converting <em>bytes</em> from <em>srcEncoding</em> to <em>dstEncoding</em>.
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>srcEncoding</em> is null.-or- <em>dstEncoding</em> is null.-or- <em>bytes</em> is null. "
  - type: System.Text.DecoderFallbackException
    commentId: T:System.Text.DecoderFallbackException
    description: A fallback occurred (see Character Encoding in the .NET Framework for complete explanation)-and-srcEncoding.<xref href="System.Text.Encoding.DecoderFallback" data-throw-if-not-resolved="false"></xref> is set to <xref href="System.Text.DecoderExceptionFallback" data-throw-if-not-resolved="false"></xref>.
  - type: System.Text.EncoderFallbackException
    commentId: T:System.Text.EncoderFallbackException
    description: A fallback occurred (see Character Encoding in the .NET Framework for complete explanation)-and-dstEncoding.<xref href="System.Text.Encoding.EncoderFallback" data-throw-if-not-resolved="false"></xref> is set to <xref href="System.Text.EncoderExceptionFallback" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Text.Encoding.Convert(System.Text.Encoding, System.Text.Encoding, System.Byte())
  name.vb: Convert(Encoding, Encoding, Byte())
- uid: System.Text.Encoding.Convert(System.Text.Encoding,System.Text.Encoding,System.Byte[],System.Int32,System.Int32)
  commentId: M:System.Text.Encoding.Convert(System.Text.Encoding,System.Text.Encoding,System.Byte[],System.Int32,System.Int32)
  id: Convert(System.Text.Encoding,System.Text.Encoding,System.Byte[],System.Int32,System.Int32)
  parent: System.Text.Encoding
  langs:
  - csharp
  - vb
  name: Convert(Encoding, Encoding, Byte[], Int32, Int32)
  fullName: System.Text.Encoding.Convert(System.Text.Encoding, System.Text.Encoding, System.Byte[], System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Text/Encoding.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Convert
    path: src/mscorlib/src/System/Text/Encoding.cs
    startLine: 366
  assemblies:
  - System.Text.Encoding
  namespace: System.Text
  summary: Converts a range of bytes in a byte array from one encoding to another.
  syntax:
    content: public static byte[] Convert(Encoding srcEncoding, Encoding dstEncoding, byte[] bytes, int index, int count)
    content.vb: Public Shared Function Convert(srcEncoding As Encoding, dstEncoding As Encoding, bytes As Byte(), index As Integer, count As Integer) As Byte()
    parameters:
    - id: srcEncoding
      type: System.Text.Encoding
      description: 'The encoding of the source array, <em>bytes</em>. '
    - id: dstEncoding
      type: System.Text.Encoding
      description: 'The encoding of the output array. '
    - id: bytes
      type: System.Byte[]
      description: 'The array of bytes to convert. '
    - id: index
      type: System.Int32
      description: 'The index of the first element of <em>bytes</em> to convert. '
    - id: count
      type: System.Int32
      description: 'The number of bytes to convert. '
    return:
      type: System.Byte[]
      description: An array of type <xref href="System.Byte" data-throw-if-not-resolved="false"></xref> containing the result of converting a range of bytes in <em>bytes</em> from <em>srcEncoding</em> to <em>dstEncoding</em>.
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>srcEncoding</em> is null.-or- <em>dstEncoding</em> is null.-or- <em>bytes</em> is null. "
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<em>index</em> and <em>count</em> do not specify a valid range in the byte array. "
  - type: System.Text.DecoderFallbackException
    commentId: T:System.Text.DecoderFallbackException
    description: A fallback occurred (see Character Encoding in the .NET Framework for complete explanation)-and-srcEncoding.<xref href="System.Text.Encoding.DecoderFallback" data-throw-if-not-resolved="false"></xref> is set to <xref href="System.Text.DecoderExceptionFallback" data-throw-if-not-resolved="false"></xref>.
  - type: System.Text.EncoderFallbackException
    commentId: T:System.Text.EncoderFallbackException
    description: A fallback occurred (see Character Encoding in the .NET Framework for complete explanation)-and-dstEncoding.<xref href="System.Text.Encoding.EncoderFallback" data-throw-if-not-resolved="false"></xref> is set to <xref href="System.Text.EncoderExceptionFallback" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Text.Encoding.Convert(System.Text.Encoding, System.Text.Encoding, System.Byte(), System.Int32, System.Int32)
  name.vb: Convert(Encoding, Encoding, Byte(), Int32, Int32)
- uid: System.Text.Encoding.Equals(System.Object)
  commentId: M:System.Text.Encoding.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Text.Encoding
  langs:
  - csharp
  - vb
  name: Equals(Object)
  fullName: System.Text.Encoding.Equals(System.Object)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Text/Encoding.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Equals
    path: src/mscorlib/src/System/Text/Encoding.cs
    startLine: 1535
  assemblies:
  - System.Text.Encoding
  namespace: System.Text
  summary: Determines whether the specified <xref href="System.Object" data-throw-if-not-resolved="false"></xref> is equal to the current instance.
  syntax:
    content: public override bool Equals(object value)
    content.vb: Public Overrides Function Equals(value As Object) As Boolean
    parameters:
    - id: value
      type: System.Object
      description: 'The <xref href="System.Object" data-throw-if-not-resolved="false"></xref> to compare with the current instance. '
    return:
      type: System.Boolean
      description: 'true if <em>value</em> is an instance of <xref href="System.Text.Encoding" data-throw-if-not-resolved="false"></xref> and is equal to the current instance; otherwise, false. '
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Text.Encoding.GetByteCount(System.Char*,System.Int32)
  commentId: M:System.Text.Encoding.GetByteCount(System.Char*,System.Int32)
  id: GetByteCount(System.Char*,System.Int32)
  parent: System.Text.Encoding
  langs:
  - csharp
  - vb
  name: GetByteCount(Char*, Int32)
  fullName: System.Text.Encoding.GetByteCount(System.Char*, System.Int32)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Text/Encoding.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: GetByteCount
    path: src/mscorlib/src/System/Text/Encoding.cs
    startLine: 957
  assemblies:
  - System.Text.Encoding
  namespace: System.Text
  summary: When overridden in a derived class, calculates the number of bytes produced by encoding a set of characters starting at the specified character pointer.
  syntax:
    content: public virtual int GetByteCount(char *chars, int count)
    content.vb: Public Overridable Function GetByteCount(chars As Char *, count As Integer) As Integer
    parameters:
    - id: chars
      type: System.Char*
      description: 'A pointer to the first character to encode. '
    - id: count
      type: System.Int32
      description: 'The number of characters to encode. '
    return:
      type: System.Int32
      description: The number of bytes produced by encoding the specified characters.
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>chars</em> is null. "
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<em>count</em> is less than zero. "
  - type: System.Text.EncoderFallbackException
    commentId: T:System.Text.EncoderFallbackException
    description: A fallback occurred (see Character Encoding in the .NET Framework for complete explanation)-and-<xref href="System.Text.Encoding.EncoderFallback" data-throw-if-not-resolved="false"></xref> is set to <xref href="System.Text.EncoderExceptionFallback" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Text.Encoding.GetByteCount(System.Char[])
  commentId: M:System.Text.Encoding.GetByteCount(System.Char[])
  id: GetByteCount(System.Char[])
  parent: System.Text.Encoding
  langs:
  - csharp
  - vb
  name: GetByteCount(Char[])
  fullName: System.Text.Encoding.GetByteCount(System.Char[])
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Text/Encoding.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: GetByteCount
    path: src/mscorlib/src/System/Text/Encoding.cs
    startLine: 922
  assemblies:
  - System.Text.Encoding
  namespace: System.Text
  summary: When overridden in a derived class, calculates the number of bytes produced by encoding all the characters in the specified character array.
  syntax:
    content: public virtual int GetByteCount(char[] chars)
    content.vb: Public Overridable Function GetByteCount(chars As Char()) As Integer
    parameters:
    - id: chars
      type: System.Char[]
      description: 'The character array containing the characters to encode. '
    return:
      type: System.Int32
      description: The number of bytes produced by encoding all the characters in the specified character array.
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>chars</em> is null. "
  - type: System.Text.EncoderFallbackException
    commentId: T:System.Text.EncoderFallbackException
    description: A fallback occurred (see Character Encoding in the .NET Framework for complete explanation)-and-<xref href="System.Text.Encoding.EncoderFallback" data-throw-if-not-resolved="false"></xref> is set to <xref href="System.Text.EncoderExceptionFallback" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: System.Text.Encoding.GetByteCount(System.Char())
  name.vb: GetByteCount(Char())
- uid: System.Text.Encoding.GetByteCount(System.Char[],System.Int32,System.Int32)
  commentId: M:System.Text.Encoding.GetByteCount(System.Char[],System.Int32,System.Int32)
  id: GetByteCount(System.Char[],System.Int32,System.Int32)
  parent: System.Text.Encoding
  langs:
  - csharp
  - vb
  name: GetByteCount(Char[], Int32, Int32)
  fullName: System.Text.Encoding.GetByteCount(System.Char[], System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Text/Encoding.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: GetByteCount
    path: src/mscorlib/src/System/Text/Encoding.cs
    startLine: 950
  assemblies:
  - System.Text.Encoding
  namespace: System.Text
  summary: When overridden in a derived class, calculates the number of bytes produced by encoding a set of characters from the specified character array.
  syntax:
    content: public abstract int GetByteCount(char[] chars, int index, int count)
    content.vb: Public MustOverride Function GetByteCount(chars As Char(), index As Integer, count As Integer) As Integer
    parameters:
    - id: chars
      type: System.Char[]
      description: 'The character array containing the set of characters to encode. '
    - id: index
      type: System.Int32
      description: 'The index of the first character to encode. '
    - id: count
      type: System.Int32
      description: 'The number of characters to encode. '
    return:
      type: System.Int32
      description: The number of bytes produced by encoding the specified characters.
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>chars</em> is null. "
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<em>index</em> or <em>count</em> is less than zero.-or- <em>index</em> and <em>count</em> do not denote a valid range in <em>chars</em>. "
  - type: System.Text.EncoderFallbackException
    commentId: T:System.Text.EncoderFallbackException
    description: A fallback occurred (see Character Encoding in the .NET Framework for complete explanation)-and-<xref href="System.Text.Encoding.EncoderFallback" data-throw-if-not-resolved="false"></xref> is set to <xref href="System.Text.EncoderExceptionFallback" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
  fullName.vb: System.Text.Encoding.GetByteCount(System.Char(), System.Int32, System.Int32)
  name.vb: GetByteCount(Char(), Int32, Int32)
- uid: System.Text.Encoding.GetByteCount(System.String)
  commentId: M:System.Text.Encoding.GetByteCount(System.String)
  id: GetByteCount(System.String)
  parent: System.Text.Encoding
  langs:
  - csharp
  - vb
  name: GetByteCount(String)
  fullName: System.Text.Encoding.GetByteCount(System.String)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Text/Encoding.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: GetByteCount
    path: src/mscorlib/src/System/Text/Encoding.cs
    startLine: 935
  assemblies:
  - System.Text.Encoding
  namespace: System.Text
  summary: When overridden in a derived class, calculates the number of bytes produced by encoding the characters in the specified string.
  syntax:
    content: public virtual int GetByteCount(string s)
    content.vb: Public Overridable Function GetByteCount(s As String) As Integer
    parameters:
    - id: s
      type: System.String
      description: 'The string containing the set of characters to encode. '
    return:
      type: System.Int32
      description: The number of bytes produced by encoding the specified characters.
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>s</em> is null. "
  - type: System.Text.EncoderFallbackException
    commentId: T:System.Text.EncoderFallbackException
    description: A fallback occurred (see Character Encoding in the .NET Framework for complete explanation)-and-<xref href="System.Text.Encoding.EncoderFallback" data-throw-if-not-resolved="false"></xref> is set to <xref href="System.Text.EncoderExceptionFallback" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Text.Encoding.GetBytes(System.Char*,System.Int32,System.Byte*,System.Int32)
  commentId: M:System.Text.Encoding.GetBytes(System.Char*,System.Int32,System.Byte*,System.Int32)
  id: GetBytes(System.Char*,System.Int32,System.Byte*,System.Int32)
  parent: System.Text.Encoding
  langs:
  - csharp
  - vb
  name: GetBytes(Char*, Int32, Byte*, Int32)
  fullName: System.Text.Encoding.GetBytes(System.Char*, System.Int32, System.Byte*, System.Int32)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Text/Encoding.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: GetBytes
    path: src/mscorlib/src/System/Text/Encoding.cs
    startLine: 1084
  assemblies:
  - System.Text.Encoding
  namespace: System.Text
  summary: When overridden in a derived class, encodes a set of characters starting at the specified character pointer into a sequence of bytes that are stored starting at the specified byte pointer.
  syntax:
    content: public virtual int GetBytes(char *chars, int charCount, byte *bytes, int byteCount)
    content.vb: Public Overridable Function GetBytes(chars As Char *, charCount As Integer, bytes As Byte *, byteCount As Integer) As Integer
    parameters:
    - id: chars
      type: System.Char*
      description: 'A pointer to the first character to encode. '
    - id: charCount
      type: System.Int32
      description: 'The number of characters to encode. '
    - id: bytes
      type: System.Byte*
      description: 'A pointer to the location at which to start writing the resulting sequence of bytes. '
    - id: byteCount
      type: System.Int32
      description: 'The maximum number of bytes to write. '
    return:
      type: System.Int32
      description: The actual number of bytes written at the location indicated by the <em>bytes</em> parameter.
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>chars</em> is null.-or- <em>bytes</em> is null. "
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<em>charCount</em> or <em>byteCount</em> is less than zero. "
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<em>byteCount</em> is less than the resulting number of bytes. "
  - type: System.Text.EncoderFallbackException
    commentId: T:System.Text.EncoderFallbackException
    description: A fallback occurred (see Character Encoding in the .NET Framework for complete explanation)-and-<xref href="System.Text.Encoding.EncoderFallback" data-throw-if-not-resolved="false"></xref> is set to <xref href="System.Text.EncoderExceptionFallback" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Text.Encoding.GetBytes(System.Char[])
  commentId: M:System.Text.Encoding.GetBytes(System.Char[])
  id: GetBytes(System.Char[])
  parent: System.Text.Encoding
  langs:
  - csharp
  - vb
  name: GetBytes(Char[])
  fullName: System.Text.Encoding.GetBytes(System.Char[])
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Text/Encoding.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: GetBytes
    path: src/mscorlib/src/System/Text/Encoding.cs
    startLine: 996
  assemblies:
  - System.Text.Encoding
  namespace: System.Text
  summary: When overridden in a derived class, encodes all the characters in the specified character array into a sequence of bytes.
  syntax:
    content: public virtual byte[] GetBytes(char[] chars)
    content.vb: Public Overridable Function GetBytes(chars As Char()) As Byte()
    parameters:
    - id: chars
      type: System.Char[]
      description: 'The character array containing the characters to encode. '
    return:
      type: System.Byte[]
      description: A byte array containing the results of encoding the specified set of characters.
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>chars</em> is null. "
  - type: System.Text.EncoderFallbackException
    commentId: T:System.Text.EncoderFallbackException
    description: A fallback occurred (see Character Encoding in the .NET Framework for complete explanation)-and-<xref href="System.Text.Encoding.EncoderFallback" data-throw-if-not-resolved="false"></xref> is set to <xref href="System.Text.EncoderExceptionFallback" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: System.Text.Encoding.GetBytes(System.Char())
  name.vb: GetBytes(Char())
- uid: System.Text.Encoding.GetBytes(System.Char[],System.Int32,System.Int32)
  commentId: M:System.Text.Encoding.GetBytes(System.Char[],System.Int32,System.Int32)
  id: GetBytes(System.Char[],System.Int32,System.Int32)
  parent: System.Text.Encoding
  langs:
  - csharp
  - vb
  name: GetBytes(Char[], Int32, Int32)
  fullName: System.Text.Encoding.GetBytes(System.Char[], System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Text/Encoding.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: GetBytes
    path: src/mscorlib/src/System/Text/Encoding.cs
    startLine: 1011
  assemblies:
  - System.Text.Encoding
  namespace: System.Text
  summary: When overridden in a derived class, encodes a set of characters from the specified character array into a sequence of bytes.
  syntax:
    content: public virtual byte[] GetBytes(char[] chars, int index, int count)
    content.vb: Public Overridable Function GetBytes(chars As Char(), index As Integer, count As Integer) As Byte()
    parameters:
    - id: chars
      type: System.Char[]
      description: 'The character array containing the set of characters to encode. '
    - id: index
      type: System.Int32
      description: 'The index of the first character to encode. '
    - id: count
      type: System.Int32
      description: 'The number of characters to encode. '
    return:
      type: System.Byte[]
      description: A byte array containing the results of encoding the specified set of characters.
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>chars</em> is null. "
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<em>index</em> or <em>count</em> is less than zero.-or- <em>index</em> and <em>count</em> do not denote a valid range in <em>chars</em>. "
  - type: System.Text.EncoderFallbackException
    commentId: T:System.Text.EncoderFallbackException
    description: A fallback occurred (see Character Encoding in the .NET Framework for complete explanation)-and-<xref href="System.Text.Encoding.EncoderFallback" data-throw-if-not-resolved="false"></xref> is set to <xref href="System.Text.EncoderExceptionFallback" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: System.Text.Encoding.GetBytes(System.Char(), System.Int32, System.Int32)
  name.vb: GetBytes(Char(), Int32, Int32)
- uid: System.Text.Encoding.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32)
  commentId: M:System.Text.Encoding.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32)
  id: GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32)
  parent: System.Text.Encoding
  langs:
  - csharp
  - vb
  name: GetBytes(Char[], Int32, Int32, Byte[], Int32)
  fullName: System.Text.Encoding.GetBytes(System.Char[], System.Int32, System.Int32, System.Byte[], System.Int32)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Text/Encoding.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: GetBytes
    path: src/mscorlib/src/System/Text/Encoding.cs
    startLine: 1028
  assemblies:
  - System.Text.Encoding
  namespace: System.Text
  summary: When overridden in a derived class, encodes a set of characters from the specified character array into the specified byte array.
  syntax:
    content: public abstract int GetBytes(char[] chars, int charIndex, int charCount, byte[] bytes, int byteIndex)
    content.vb: Public MustOverride Function GetBytes(chars As Char(), charIndex As Integer, charCount As Integer, bytes As Byte(), byteIndex As Integer) As Integer
    parameters:
    - id: chars
      type: System.Char[]
      description: 'The character array containing the set of characters to encode. '
    - id: charIndex
      type: System.Int32
      description: 'The index of the first character to encode. '
    - id: charCount
      type: System.Int32
      description: 'The number of characters to encode. '
    - id: bytes
      type: System.Byte[]
      description: 'The byte array to contain the resulting sequence of bytes. '
    - id: byteIndex
      type: System.Int32
      description: 'The index at which to start writing the resulting sequence of bytes. '
    return:
      type: System.Int32
      description: The actual number of bytes written into <em>bytes</em>.
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>chars</em> is null.-or- <em>bytes</em> is null. "
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<em>charIndex</em> or <em>charCount</em> or <em>byteIndex</em> is less than zero.-or- <em>charIndex</em> and <em>charCount</em> do not denote a valid range in <em>chars</em>.-or- <em>byteIndex</em> is not a valid index in <em>bytes</em>. "
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<em>bytes</em> does not have enough capacity from <em>byteIndex</em> to the end of the array to accommodate the resulting bytes. "
  - type: System.Text.EncoderFallbackException
    commentId: T:System.Text.EncoderFallbackException
    description: A fallback occurred (see Character Encoding in the .NET Framework for complete explanation)-and-<xref href="System.Text.Encoding.EncoderFallback" data-throw-if-not-resolved="false"></xref> is set to <xref href="System.Text.EncoderExceptionFallback" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
  fullName.vb: System.Text.Encoding.GetBytes(System.Char(), System.Int32, System.Int32, System.Byte(), System.Int32)
  name.vb: GetBytes(Char(), Int32, Int32, Byte(), Int32)
- uid: System.Text.Encoding.GetBytes(System.String)
  commentId: M:System.Text.Encoding.GetBytes(System.String)
  id: GetBytes(System.String)
  parent: System.Text.Encoding
  langs:
  - csharp
  - vb
  name: GetBytes(String)
  fullName: System.Text.Encoding.GetBytes(System.String)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Text/Encoding.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: GetBytes
    path: src/mscorlib/src/System/Text/Encoding.cs
    startLine: 1034
  assemblies:
  - System.Text.Encoding
  namespace: System.Text
  summary: When overridden in a derived class, encodes all the characters in the specified string into a sequence of bytes.
  syntax:
    content: public virtual byte[] GetBytes(string s)
    content.vb: Public Overridable Function GetBytes(s As String) As Byte()
    parameters:
    - id: s
      type: System.String
      description: 'The string containing the characters to encode. '
    return:
      type: System.Byte[]
      description: A byte array containing the results of encoding the specified set of characters.
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>s</em> is null. "
  - type: System.Text.EncoderFallbackException
    commentId: T:System.Text.EncoderFallbackException
    description: A fallback occurred (see Character Encoding in the .NET Framework for complete explanation)-and-<xref href="System.Text.Encoding.EncoderFallback" data-throw-if-not-resolved="false"></xref> is set to <xref href="System.Text.EncoderExceptionFallback" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Text.Encoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)
  commentId: M:System.Text.Encoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)
  id: GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)
  parent: System.Text.Encoding
  langs:
  - csharp
  - vb
  name: GetBytes(String, Int32, Int32, Byte[], Int32)
  fullName: System.Text.Encoding.GetBytes(System.String, System.Int32, System.Int32, System.Byte[], System.Int32)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Text/Encoding.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: GetBytes
    path: src/mscorlib/src/System/Text/Encoding.cs
    startLine: 1049
  assemblies:
  - System.Text.Encoding
  namespace: System.Text
  summary: When overridden in a derived class, encodes a set of characters from the specified string into the specified byte array.
  syntax:
    content: public virtual int GetBytes(string s, int charIndex, int charCount, byte[] bytes, int byteIndex)
    content.vb: Public Overridable Function GetBytes(s As String, charIndex As Integer, charCount As Integer, bytes As Byte(), byteIndex As Integer) As Integer
    parameters:
    - id: s
      type: System.String
      description: 'The string containing the set of characters to encode. '
    - id: charIndex
      type: System.Int32
      description: 'The index of the first character to encode. '
    - id: charCount
      type: System.Int32
      description: 'The number of characters to encode. '
    - id: bytes
      type: System.Byte[]
      description: 'The byte array to contain the resulting sequence of bytes. '
    - id: byteIndex
      type: System.Int32
      description: 'The index at which to start writing the resulting sequence of bytes. '
    return:
      type: System.Int32
      description: The actual number of bytes written into <em>bytes</em>.
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>s</em> is null.-or- <em>bytes</em> is null. "
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<em>charIndex</em> or <em>charCount</em> or <em>byteIndex</em> is less than zero.-or- <em>charIndex</em> and <em>charCount</em> do not denote a valid range in <em>chars</em>.-or- <em>byteIndex</em> is not a valid index in <em>bytes</em>. "
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<em>bytes</em> does not have enough capacity from <em>byteIndex</em> to the end of the array to accommodate the resulting bytes. "
  - type: System.Text.EncoderFallbackException
    commentId: T:System.Text.EncoderFallbackException
    description: A fallback occurred (see Character Encoding in the .NET Framework for complete explanation)-and-<xref href="System.Text.Encoding.EncoderFallback" data-throw-if-not-resolved="false"></xref> is set to <xref href="System.Text.EncoderExceptionFallback" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: System.Text.Encoding.GetBytes(System.String, System.Int32, System.Int32, System.Byte(), System.Int32)
  name.vb: GetBytes(String, Int32, Int32, Byte(), Int32)
- uid: System.Text.Encoding.GetCharCount(System.Byte*,System.Int32)
  commentId: M:System.Text.Encoding.GetCharCount(System.Byte*,System.Int32)
  id: GetCharCount(System.Byte*,System.Int32)
  parent: System.Text.Encoding
  langs:
  - csharp
  - vb
  name: GetCharCount(Byte*, Int32)
  fullName: System.Text.Encoding.GetCharCount(System.Byte*, System.Int32)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Text/Encoding.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: GetCharCount
    path: src/mscorlib/src/System/Text/Encoding.cs
    startLine: 1153
  assemblies:
  - System.Text.Encoding
  namespace: System.Text
  summary: When overridden in a derived class, calculates the number of characters produced by decoding a sequence of bytes starting at the specified byte pointer.
  syntax:
    content: public virtual int GetCharCount(byte *bytes, int count)
    content.vb: Public Overridable Function GetCharCount(bytes As Byte *, count As Integer) As Integer
    parameters:
    - id: bytes
      type: System.Byte*
      description: 'A pointer to the first byte to decode. '
    - id: count
      type: System.Int32
      description: 'The number of bytes to decode. '
    return:
      type: System.Int32
      description: The number of characters produced by decoding the specified sequence of bytes.
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>bytes</em> is null. "
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<em>count</em> is less than zero. "
  - type: System.Text.DecoderFallbackException
    commentId: T:System.Text.DecoderFallbackException
    description: A fallback occurred (see Character Encoding in the .NET Framework for complete explanation)-and-<xref href="System.Text.Encoding.DecoderFallback" data-throw-if-not-resolved="false"></xref> is set to <xref href="System.Text.DecoderExceptionFallback" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Text.Encoding.GetCharCount(System.Byte[])
  commentId: M:System.Text.Encoding.GetCharCount(System.Byte[])
  id: GetCharCount(System.Byte[])
  parent: System.Text.Encoding
  langs:
  - csharp
  - vb
  name: GetCharCount(Byte[])
  fullName: System.Text.Encoding.GetCharCount(System.Byte[])
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Text/Encoding.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: GetCharCount
    path: src/mscorlib/src/System/Text/Encoding.cs
    startLine: 1133
  assemblies:
  - System.Text.Encoding
  namespace: System.Text
  summary: When overridden in a derived class, calculates the number of characters produced by decoding all the bytes in the specified byte array.
  syntax:
    content: public virtual int GetCharCount(byte[] bytes)
    content.vb: Public Overridable Function GetCharCount(bytes As Byte()) As Integer
    parameters:
    - id: bytes
      type: System.Byte[]
      description: 'The byte array containing the sequence of bytes to decode. '
    return:
      type: System.Int32
      description: The number of characters produced by decoding the specified sequence of bytes.
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>bytes</em> is null. "
  - type: System.Text.DecoderFallbackException
    commentId: T:System.Text.DecoderFallbackException
    description: A fallback occurred (see Character Encoding in the .NET Framework for complete explanation)-and-<xref href="System.Text.Encoding.DecoderFallback" data-throw-if-not-resolved="false"></xref> is set to <xref href="System.Text.DecoderExceptionFallback" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: System.Text.Encoding.GetCharCount(System.Byte())
  name.vb: GetCharCount(Byte())
- uid: System.Text.Encoding.GetCharCount(System.Byte[],System.Int32,System.Int32)
  commentId: M:System.Text.Encoding.GetCharCount(System.Byte[],System.Int32,System.Int32)
  id: GetCharCount(System.Byte[],System.Int32,System.Int32)
  parent: System.Text.Encoding
  langs:
  - csharp
  - vb
  name: GetCharCount(Byte[], Int32, Int32)
  fullName: System.Text.Encoding.GetCharCount(System.Byte[], System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Text/Encoding.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: GetCharCount
    path: src/mscorlib/src/System/Text/Encoding.cs
    startLine: 1148
  assemblies:
  - System.Text.Encoding
  namespace: System.Text
  summary: When overridden in a derived class, calculates the number of characters produced by decoding a sequence of bytes from the specified byte array.
  syntax:
    content: public abstract int GetCharCount(byte[] bytes, int index, int count)
    content.vb: Public MustOverride Function GetCharCount(bytes As Byte(), index As Integer, count As Integer) As Integer
    parameters:
    - id: bytes
      type: System.Byte[]
      description: 'The byte array containing the sequence of bytes to decode. '
    - id: index
      type: System.Int32
      description: 'The index of the first byte to decode. '
    - id: count
      type: System.Int32
      description: 'The number of bytes to decode. '
    return:
      type: System.Int32
      description: The number of characters produced by decoding the specified sequence of bytes.
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>bytes</em> is null. "
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<em>index</em> or <em>count</em> is less than zero.-or- <em>index</em> and <em>count</em> do not denote a valid range in <em>bytes</em>. "
  - type: System.Text.DecoderFallbackException
    commentId: T:System.Text.DecoderFallbackException
    description: A fallback occurred (see Character Encoding in the .NET Framework for complete explanation)-and-<xref href="System.Text.Encoding.DecoderFallback" data-throw-if-not-resolved="false"></xref> is set to <xref href="System.Text.DecoderExceptionFallback" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
  fullName.vb: System.Text.Encoding.GetCharCount(System.Byte(), System.Int32, System.Int32)
  name.vb: GetCharCount(Byte(), Int32, Int32)
- uid: System.Text.Encoding.GetChars(System.Byte*,System.Int32,System.Char*,System.Int32)
  commentId: M:System.Text.Encoding.GetChars(System.Byte*,System.Int32,System.Char*,System.Int32)
  id: GetChars(System.Byte*,System.Int32,System.Char*,System.Int32)
  parent: System.Text.Encoding
  langs:
  - csharp
  - vb
  name: GetChars(Byte*, Int32, Char*, Int32)
  fullName: System.Text.Encoding.GetChars(System.Byte*, System.Int32, System.Char*, System.Int32)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Text/Encoding.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: GetChars
    path: src/mscorlib/src/System/Text/Encoding.cs
    startLine: 1243
  assemblies:
  - System.Text.Encoding
  namespace: System.Text
  summary: When overridden in a derived class, decodes a sequence of bytes starting at the specified byte pointer into a set of characters that are stored starting at the specified character pointer.
  syntax:
    content: public virtual int GetChars(byte *bytes, int byteCount, char *chars, int charCount)
    content.vb: Public Overridable Function GetChars(bytes As Byte *, byteCount As Integer, chars As Char *, charCount As Integer) As Integer
    parameters:
    - id: bytes
      type: System.Byte*
      description: 'A pointer to the first byte to decode. '
    - id: byteCount
      type: System.Int32
      description: 'The number of bytes to decode. '
    - id: chars
      type: System.Char*
      description: 'A pointer to the location at which to start writing the resulting set of characters. '
    - id: charCount
      type: System.Int32
      description: 'The maximum number of characters to write. '
    return:
      type: System.Int32
      description: The actual number of characters written at the location indicated by the <em>chars</em> parameter.
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>bytes</em> is null.-or- <em>chars</em> is null. "
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<em>byteCount</em> or <em>charCount</em> is less than zero. "
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<em>charCount</em> is less than the resulting number of characters. "
  - type: System.Text.DecoderFallbackException
    commentId: T:System.Text.DecoderFallbackException
    description: A fallback occurred (see Character Encoding in the .NET Framework for complete explanation)-and-<xref href="System.Text.Encoding.DecoderFallback" data-throw-if-not-resolved="false"></xref> is set to <xref href="System.Text.DecoderExceptionFallback" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Text.Encoding.GetChars(System.Byte[])
  commentId: M:System.Text.Encoding.GetChars(System.Byte[])
  id: GetChars(System.Byte[])
  parent: System.Text.Encoding
  langs:
  - csharp
  - vb
  name: GetChars(Byte[])
  fullName: System.Text.Encoding.GetChars(System.Byte[])
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Text/Encoding.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: GetChars
    path: src/mscorlib/src/System/Text/Encoding.cs
    startLine: 1189
  assemblies:
  - System.Text.Encoding
  namespace: System.Text
  summary: When overridden in a derived class, decodes all the bytes in the specified byte array into a set of characters.
  syntax:
    content: public virtual char[] GetChars(byte[] bytes)
    content.vb: Public Overridable Function GetChars(bytes As Byte()) As Char()
    parameters:
    - id: bytes
      type: System.Byte[]
      description: 'The byte array containing the sequence of bytes to decode. '
    return:
      type: System.Char[]
      description: A character array containing the results of decoding the specified sequence of bytes.
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>bytes</em> is null. "
  - type: System.Text.DecoderFallbackException
    commentId: T:System.Text.DecoderFallbackException
    description: A fallback occurred (see Character Encoding in the .NET Framework for complete explanation)-and-<xref href="System.Text.Encoding.DecoderFallback" data-throw-if-not-resolved="false"></xref> is set to <xref href="System.Text.DecoderExceptionFallback" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: System.Text.Encoding.GetChars(System.Byte())
  name.vb: GetChars(Byte())
- uid: System.Text.Encoding.GetChars(System.Byte[],System.Int32,System.Int32)
  commentId: M:System.Text.Encoding.GetChars(System.Byte[],System.Int32,System.Int32)
  id: GetChars(System.Byte[],System.Int32,System.Int32)
  parent: System.Text.Encoding
  langs:
  - csharp
  - vb
  name: GetChars(Byte[], Int32, Int32)
  fullName: System.Text.Encoding.GetChars(System.Byte[], System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Text/Encoding.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: GetChars
    path: src/mscorlib/src/System/Text/Encoding.cs
    startLine: 1204
  assemblies:
  - System.Text.Encoding
  namespace: System.Text
  summary: When overridden in a derived class, decodes a sequence of bytes from the specified byte array into a set of characters.
  syntax:
    content: public virtual char[] GetChars(byte[] bytes, int index, int count)
    content.vb: Public Overridable Function GetChars(bytes As Byte(), index As Integer, count As Integer) As Char()
    parameters:
    - id: bytes
      type: System.Byte[]
      description: 'The byte array containing the sequence of bytes to decode. '
    - id: index
      type: System.Int32
      description: 'The index of the first byte to decode. '
    - id: count
      type: System.Int32
      description: 'The number of bytes to decode. '
    return:
      type: System.Char[]
      description: A character array containing the results of decoding the specified sequence of bytes.
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>bytes</em> is null. "
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<em>index</em> or <em>count</em> is less than zero.-or- <em>index</em> and <em>count</em> do not denote a valid range in <em>bytes</em>. "
  - type: System.Text.DecoderFallbackException
    commentId: T:System.Text.DecoderFallbackException
    description: A fallback occurred (see Character Encoding in the .NET Framework for complete explanation)-and-<xref href="System.Text.Encoding.DecoderFallback" data-throw-if-not-resolved="false"></xref> is set to <xref href="System.Text.DecoderExceptionFallback" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: System.Text.Encoding.GetChars(System.Byte(), System.Int32, System.Int32)
  name.vb: GetChars(Byte(), Int32, Int32)
- uid: System.Text.Encoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)
  commentId: M:System.Text.Encoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)
  id: GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)
  parent: System.Text.Encoding
  langs:
  - csharp
  - vb
  name: GetChars(Byte[], Int32, Int32, Char[], Int32)
  fullName: System.Text.Encoding.GetChars(System.Byte[], System.Int32, System.Int32, System.Char[], System.Int32)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Text/Encoding.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: GetChars
    path: src/mscorlib/src/System/Text/Encoding.cs
    startLine: 1222
  assemblies:
  - System.Text.Encoding
  namespace: System.Text
  summary: When overridden in a derived class, decodes a sequence of bytes from the specified byte array into the specified character array.
  syntax:
    content: public abstract int GetChars(byte[] bytes, int byteIndex, int byteCount, char[] chars, int charIndex)
    content.vb: Public MustOverride Function GetChars(bytes As Byte(), byteIndex As Integer, byteCount As Integer, chars As Char(), charIndex As Integer) As Integer
    parameters:
    - id: bytes
      type: System.Byte[]
      description: 'The byte array containing the sequence of bytes to decode. '
    - id: byteIndex
      type: System.Int32
      description: 'The index of the first byte to decode. '
    - id: byteCount
      type: System.Int32
      description: 'The number of bytes to decode. '
    - id: chars
      type: System.Char[]
      description: 'The character array to contain the resulting set of characters. '
    - id: charIndex
      type: System.Int32
      description: 'The index at which to start writing the resulting set of characters. '
    return:
      type: System.Int32
      description: The actual number of characters written into <em>chars</em>.
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>bytes</em> is null.-or- <em>chars</em> is null. "
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<em>byteIndex</em> or <em>byteCount</em> or <em>charIndex</em> is less than zero.-or- <em>byteindex</em> and <em>byteCount</em> do not denote a valid range in <em>bytes</em>.-or- <em>charIndex</em> is not a valid index in <em>chars</em>. "
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<em>chars</em> does not have enough capacity from <em>charIndex</em> to the end of the array to accommodate the resulting characters. "
  - type: System.Text.DecoderFallbackException
    commentId: T:System.Text.DecoderFallbackException
    description: A fallback occurred (see Character Encoding in the .NET Framework for complete explanation)-and-<xref href="System.Text.Encoding.DecoderFallback" data-throw-if-not-resolved="false"></xref> is set to <xref href="System.Text.DecoderExceptionFallback" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
  fullName.vb: System.Text.Encoding.GetChars(System.Byte(), System.Int32, System.Int32, System.Char(), System.Int32)
  name.vb: GetChars(Byte(), Int32, Int32, Char(), Int32)
- uid: System.Text.Encoding.GetDecoder
  commentId: M:System.Text.Encoding.GetDecoder
  id: GetDecoder
  parent: System.Text.Encoding
  langs:
  - csharp
  - vb
  name: GetDecoder()
  fullName: System.Text.Encoding.GetDecoder()
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Text/Encoding.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: GetDecoder
    path: src/mscorlib/src/System/Text/Encoding.cs
    startLine: 1363
  assemblies:
  - System.Text.Encoding
  namespace: System.Text
  summary: When overridden in a derived class, obtains a decoder that converts an encoded sequence of bytes into a sequence of characters.
  syntax:
    content: public virtual Decoder GetDecoder()
    content.vb: Public Overridable Function GetDecoder As Decoder
    return:
      type: System.Text.Decoder
      description: A <xref href="System.Text.Decoder" data-throw-if-not-resolved="false"></xref> that converts an encoded sequence of bytes into a sequence of characters.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Text.Encoding.GetEncoder
  commentId: M:System.Text.Encoding.GetEncoder
  id: GetEncoder
  parent: System.Text.Encoding
  langs:
  - csharp
  - vb
  name: GetEncoder()
  fullName: System.Text.Encoding.GetEncoder()
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Text/Encoding.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: GetEncoder
    path: src/mscorlib/src/System/Text/Encoding.cs
    startLine: 1421
  assemblies:
  - System.Text.Encoding
  namespace: System.Text
  summary: When overridden in a derived class, obtains an encoder that converts a sequence of Unicode characters into an encoded sequence of bytes.
  syntax:
    content: public virtual Encoder GetEncoder()
    content.vb: Public Overridable Function GetEncoder As Encoder
    return:
      type: System.Text.Encoder
      description: A <xref href="System.Text.Encoder" data-throw-if-not-resolved="false"></xref> that converts a sequence of Unicode characters into an encoded sequence of bytes.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Text.Encoding.GetEncoding(System.Int32)
  commentId: M:System.Text.Encoding.GetEncoding(System.Int32)
  id: GetEncoding(System.Int32)
  parent: System.Text.Encoding
  langs:
  - csharp
  - vb
  name: GetEncoding(Int32)
  fullName: System.Text.Encoding.GetEncoding(System.Int32)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Text/Encoding.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: GetEncoding
    path: src/mscorlib/src/System/Text/Encoding.cs
    startLine: 403
  assemblies:
  - System.Text.Encoding
  namespace: System.Text
  summary: Returns the encoding associated with the specified code page identifier.
  syntax:
    content: public static Encoding GetEncoding(int codepage)
    content.vb: Public Shared Function GetEncoding(codepage As Integer) As Encoding
    parameters:
    - id: codepage
      type: System.Int32
      description: 'The code page identifier of the preferred encoding. Possible values are listed in the Code Page column of the table that appears in the <xref href="System.Text.Encoding" data-throw-if-not-resolved="false"></xref> class topic.-or- 0 (zero), to use the default encoding. '
    return:
      type: System.Text.Encoding
      description: The encoding that is associated with the specified code page.
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<em>codepage</em> is less than zero or greater than 65535. "
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<em>codepage</em> is not supported by the underlying platform. "
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "\n<em>codepage</em> is not supported by the underlying platform. "
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Text.Encoding.GetEncoding(System.Int32,System.Text.EncoderFallback,System.Text.DecoderFallback)
  commentId: M:System.Text.Encoding.GetEncoding(System.Int32,System.Text.EncoderFallback,System.Text.DecoderFallback)
  id: GetEncoding(System.Int32,System.Text.EncoderFallback,System.Text.DecoderFallback)
  parent: System.Text.Encoding
  langs:
  - csharp
  - vb
  name: GetEncoding(Int32, EncoderFallback, DecoderFallback)
  fullName: System.Text.Encoding.GetEncoding(System.Int32, System.Text.EncoderFallback, System.Text.DecoderFallback)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Text/Encoding.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: GetEncoding
    path: src/mscorlib/src/System/Text/Encoding.cs
    startLine: 534
  assemblies:
  - System.Text.Encoding
  namespace: System.Text
  summary: Returns the encoding associated with the specified code page identifier. Parameters specify an error handler for characters that cannot be encoded and byte sequences that cannot be decoded.
  syntax:
    content: public static Encoding GetEncoding(int codepage, EncoderFallback encoderFallback, DecoderFallback decoderFallback)
    content.vb: Public Shared Function GetEncoding(codepage As Integer, encoderFallback As EncoderFallback, decoderFallback As DecoderFallback) As Encoding
    parameters:
    - id: codepage
      type: System.Int32
      description: 'The code page identifier of the preferred encoding. Possible values are listed in the Code Page column of the table that appears in the <xref href="System.Text.Encoding" data-throw-if-not-resolved="false"></xref> class topic.-or- 0 (zero), to use the default encoding. '
    - id: encoderFallback
      type: System.Text.EncoderFallback
      description: 'An object that provides an error-handling procedure when a character cannot be encoded with the current encoding. '
    - id: decoderFallback
      type: System.Text.DecoderFallback
      description: 'An object that provides an error-handling procedure when a byte sequence cannot be decoded with the current encoding. '
    return:
      type: System.Text.Encoding
      description: The encoding that is associated with the specified code page.
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<em>codepage</em> is less than zero or greater than 65535. "
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<em>codepage</em> is not supported by the underlying platform. "
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "\n<em>codepage</em> is not supported by the underlying platform. "
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Text.Encoding.GetEncoding(System.String)
  commentId: M:System.Text.Encoding.GetEncoding(System.String)
  id: GetEncoding(System.String)
  parent: System.Text.Encoding
  langs:
  - csharp
  - vb
  name: GetEncoding(String)
  fullName: System.Text.Encoding.GetEncoding(System.String)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Text/Encoding.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: GetEncoding
    path: src/mscorlib/src/System/Text/Encoding.cs
    startLine: 646
  assemblies:
  - System.Text.Encoding
  namespace: System.Text
  summary: Returns the encoding associated with the specified code page name.
  syntax:
    content: public static Encoding GetEncoding(string name)
    content.vb: Public Shared Function GetEncoding(name As String) As Encoding
    parameters:
    - id: name
      type: System.String
      description: The code page name of the preferred encoding. Any value returned by the <xref href="System.Text.Encoding.WebName" data-throw-if-not-resolved="false"></xref> property is valid. Possible values are listed in the Name column of the table that appears in the <xref href="System.Text.Encoding" data-throw-if-not-resolved="false"></xref> class topic.
    return:
      type: System.Text.Encoding
      description: The encoding  associated with the specified code page.
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<em>name</em> is not a valid code page name.-or- The code page indicated by <em>name</em> is not supported by the underlying platform. "
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Text.Encoding.GetEncoding(System.String,System.Text.EncoderFallback,System.Text.DecoderFallback)
  commentId: M:System.Text.Encoding.GetEncoding(System.String,System.Text.EncoderFallback,System.Text.DecoderFallback)
  id: GetEncoding(System.String,System.Text.EncoderFallback,System.Text.DecoderFallback)
  parent: System.Text.Encoding
  langs:
  - csharp
  - vb
  name: GetEncoding(String, EncoderFallback, DecoderFallback)
  fullName: System.Text.Encoding.GetEncoding(System.String, System.Text.EncoderFallback, System.Text.DecoderFallback)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Text/Encoding.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: GetEncoding
    path: src/mscorlib/src/System/Text/Encoding.cs
    startLine: 664
  assemblies:
  - System.Text.Encoding
  namespace: System.Text
  summary: Returns the encoding associated with the specified code page name. Parameters specify an error handler for characters that cannot be encoded and byte sequences that cannot be decoded.
  syntax:
    content: public static Encoding GetEncoding(string name, EncoderFallback encoderFallback, DecoderFallback decoderFallback)
    content.vb: Public Shared Function GetEncoding(name As String, encoderFallback As EncoderFallback, decoderFallback As DecoderFallback) As Encoding
    parameters:
    - id: name
      type: System.String
      description: The code page name of the preferred encoding. Any value returned by the <xref href="System.Text.Encoding.WebName" data-throw-if-not-resolved="false"></xref> property is valid. Possible values are listed in the Name column of the table that appears in the <xref href="System.Text.Encoding" data-throw-if-not-resolved="false"></xref> class topic.
    - id: encoderFallback
      type: System.Text.EncoderFallback
      description: 'An object that provides an error-handling procedure when a character cannot be encoded with the current encoding. '
    - id: decoderFallback
      type: System.Text.DecoderFallback
      description: 'An object that provides an error-handling procedure when a byte sequence cannot be decoded with the current encoding. '
    return:
      type: System.Text.Encoding
      description: The encoding that is associated with the specified code page.
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<em>name</em> is not a valid code page name.-or- The code page indicated by <em>name</em> is not supported by the underlying platform. "
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Text.Encoding.GetHashCode
  commentId: M:System.Text.Encoding.GetHashCode
  id: GetHashCode
  parent: System.Text.Encoding
  langs:
  - csharp
  - vb
  name: GetHashCode()
  fullName: System.Text.Encoding.GetHashCode()
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Text/Encoding.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: GetHashCode
    path: src/mscorlib/src/System/Text/Encoding.cs
    startLine: 1545
  assemblies:
  - System.Text.Encoding
  namespace: System.Text
  summary: Returns the hash code for the current instance.
  syntax:
    content: public override int GetHashCode()
    content.vb: Public Overrides Function GetHashCode As Integer
    return:
      type: System.Int32
      description: The hash code for the current instance.
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Text.Encoding.GetMaxByteCount(System.Int32)
  commentId: M:System.Text.Encoding.GetMaxByteCount(System.Int32)
  id: GetMaxByteCount(System.Int32)
  parent: System.Text.Encoding
  langs:
  - csharp
  - vb
  name: GetMaxByteCount(Int32)
  fullName: System.Text.Encoding.GetMaxByteCount(System.Int32)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Text/Encoding.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: GetMaxByteCount
    path: src/mscorlib/src/System/Text/Encoding.cs
    startLine: 1437
  assemblies:
  - System.Text.Encoding
  namespace: System.Text
  summary: When overridden in a derived class, calculates the maximum number of bytes produced by encoding the specified number of characters.
  syntax:
    content: public abstract int GetMaxByteCount(int charCount)
    content.vb: Public MustOverride Function GetMaxByteCount(charCount As Integer) As Integer
    parameters:
    - id: charCount
      type: System.Int32
      description: 'The number of characters to encode. '
    return:
      type: System.Int32
      description: The maximum number of bytes produced by encoding the specified number of characters.
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<em>charCount</em> is less than zero. "
  - type: System.Text.EncoderFallbackException
    commentId: T:System.Text.EncoderFallbackException
    description: A fallback occurred (see Character Encoding in the .NET Framework for complete explanation)-and-<xref href="System.Text.Encoding.EncoderFallback" data-throw-if-not-resolved="false"></xref> is set to <xref href="System.Text.EncoderExceptionFallback" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: System.Text.Encoding.GetMaxCharCount(System.Int32)
  commentId: M:System.Text.Encoding.GetMaxCharCount(System.Int32)
  id: GetMaxCharCount(System.Int32)
  parent: System.Text.Encoding
  langs:
  - csharp
  - vb
  name: GetMaxCharCount(Int32)
  fullName: System.Text.Encoding.GetMaxCharCount(System.Int32)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Text/Encoding.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: GetMaxCharCount
    path: src/mscorlib/src/System/Text/Encoding.cs
    startLine: 1448
  assemblies:
  - System.Text.Encoding
  namespace: System.Text
  summary: When overridden in a derived class, calculates the maximum number of characters produced by decoding the specified number of bytes.
  syntax:
    content: public abstract int GetMaxCharCount(int byteCount)
    content.vb: Public MustOverride Function GetMaxCharCount(byteCount As Integer) As Integer
    parameters:
    - id: byteCount
      type: System.Int32
      description: 'The number of bytes to decode. '
    return:
      type: System.Int32
      description: The maximum number of characters produced by decoding the specified number of bytes.
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<em>byteCount</em> is less than zero. "
  - type: System.Text.DecoderFallbackException
    commentId: T:System.Text.DecoderFallbackException
    description: A fallback occurred (see Character Encoding in the .NET Framework for complete explanation)-and-<xref href="System.Text.Encoding.DecoderFallback" data-throw-if-not-resolved="false"></xref> is set to <xref href="System.Text.DecoderExceptionFallback" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: System.Text.Encoding.GetPreamble
  commentId: M:System.Text.Encoding.GetPreamble
  id: GetPreamble
  parent: System.Text.Encoding
  langs:
  - csharp
  - vb
  name: GetPreamble()
  fullName: System.Text.Encoding.GetPreamble()
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Text/Encoding.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: GetPreamble
    path: src/mscorlib/src/System/Text/Encoding.cs
    startLine: 688
  assemblies:
  - System.Text.Encoding
  namespace: System.Text
  summary: When overridden in a derived class, returns a sequence of bytes that specifies the encoding used.
  syntax:
    content: public virtual byte[] GetPreamble()
    content.vb: Public Overridable Function GetPreamble As Byte()
    return:
      type: System.Byte[]
      description: A byte array containing a sequence of bytes that specifies the encoding used.-or- A byte array of length zero, if a preamble is not required.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Text.Encoding.GetString(System.Byte*,System.Int32)
  commentId: M:System.Text.Encoding.GetString(System.Byte*,System.Int32)
  id: GetString(System.Byte*,System.Int32)
  parent: System.Text.Encoding
  langs:
  - csharp
  - vb
  name: GetString(Byte*, Int32)
  fullName: System.Text.Encoding.GetString(System.Byte*, System.Int32)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Text/Encoding.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: GetString
    path: src/mscorlib/src/System/Text/Encoding.cs
    startLine: 1300
  assemblies:
  - System.Text.Encoding
  namespace: System.Text
  summary: 'When overridden in a derived class, decodes a specified number of bytes starting at a specified address into a string. '
  syntax:
    content: public string GetString(byte *bytes, int byteCount)
    content.vb: Public Function GetString(bytes As Byte *, byteCount As Integer) As String
    parameters:
    - id: bytes
      type: System.Byte*
      description: 'A pointer to a byte array. '
    - id: byteCount
      type: System.Int32
      description: 'The number of bytes to decode. '
    return:
      type: System.String
      description: 'A string that contains the results of decoding the specified sequence of bytes. '
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>bytes</em> is a null pointer. "
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<em>byteCount</em> is less than zero. "
  - type: System.Text.DecoderFallbackException
    commentId: T:System.Text.DecoderFallbackException
    description: 'A   fallback occurred (see Character Encoding in the .NET Framework for a complete explanation)-and-<xref href="System.Text.Encoding.DecoderFallback" data-throw-if-not-resolved="false"></xref> is set to <xref href="System.Text.DecoderExceptionFallback" data-throw-if-not-resolved="false"></xref>. '
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Text.Encoding.GetString(System.Byte[])
  commentId: M:System.Text.Encoding.GetString(System.Byte[])
  id: GetString(System.Byte[])
  parent: System.Text.Encoding
  langs:
  - csharp
  - vb
  name: GetString(Byte[])
  fullName: System.Text.Encoding.GetString(System.Byte[])
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Text/Encoding.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: GetString
    path: src/mscorlib/src/System/Text/Encoding.cs
    startLine: 1454
  assemblies:
  - System.Text.Encoding
  namespace: System.Text
  summary: When overridden in a derived class, decodes all the bytes in the specified byte array into a string.
  syntax:
    content: public virtual string GetString(byte[] bytes)
    content.vb: Public Overridable Function GetString(bytes As Byte()) As String
    parameters:
    - id: bytes
      type: System.Byte[]
      description: 'The byte array containing the sequence of bytes to decode. '
    return:
      type: System.String
      description: A string that contains the results of decoding the specified sequence of bytes.
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: The byte array contains invalid Unicode code points.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>bytes</em> is null. "
  - type: System.Text.DecoderFallbackException
    commentId: T:System.Text.DecoderFallbackException
    description: A fallback occurred (see Character Encoding in the .NET Framework for complete explanation)-and-<xref href="System.Text.Encoding.DecoderFallback" data-throw-if-not-resolved="false"></xref> is set to <xref href="System.Text.DecoderExceptionFallback" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: System.Text.Encoding.GetString(System.Byte())
  name.vb: GetString(Byte())
- uid: System.Text.Encoding.GetString(System.Byte[],System.Int32,System.Int32)
  commentId: M:System.Text.Encoding.GetString(System.Byte[],System.Int32,System.Int32)
  id: GetString(System.Byte[],System.Int32,System.Int32)
  parent: System.Text.Encoding
  langs:
  - csharp
  - vb
  name: GetString(Byte[], Int32, Int32)
  fullName: System.Text.Encoding.GetString(System.Byte[], System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Text/Encoding.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: GetString
    path: src/mscorlib/src/System/Text/Encoding.cs
    startLine: 1470
  assemblies:
  - System.Text.Encoding
  namespace: System.Text
  summary: When overridden in a derived class, decodes a sequence of bytes from the specified byte array into a string.
  syntax:
    content: public virtual string GetString(byte[] bytes, int index, int count)
    content.vb: Public Overridable Function GetString(bytes As Byte(), index As Integer, count As Integer) As String
    parameters:
    - id: bytes
      type: System.Byte[]
      description: 'The byte array containing the sequence of bytes to decode. '
    - id: index
      type: System.Int32
      description: 'The index of the first byte to decode. '
    - id: count
      type: System.Int32
      description: 'The number of bytes to decode. '
    return:
      type: System.String
      description: A string that contains the results of decoding the specified sequence of bytes.
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: The byte array contains invalid Unicode code points.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>bytes</em> is null. "
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<em>index</em> or <em>count</em> is less than zero.-or- <em>index</em> and <em>count</em> do not denote a valid range in <em>bytes</em>. "
  - type: System.Text.DecoderFallbackException
    commentId: T:System.Text.DecoderFallbackException
    description: A fallback occurred (see Character Encoding in the .NET Framework for complete explanation)-and-<xref href="System.Text.Encoding.DecoderFallback" data-throw-if-not-resolved="false"></xref> is set to <xref href="System.Text.DecoderExceptionFallback" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: System.Text.Encoding.GetString(System.Byte(), System.Int32, System.Int32)
  name.vb: GetString(Byte(), Int32, Int32)
- uid: System.Text.Encoding.RegisterProvider(System.Text.EncodingProvider)
  commentId: M:System.Text.Encoding.RegisterProvider(System.Text.EncodingProvider)
  id: RegisterProvider(System.Text.EncodingProvider)
  parent: System.Text.Encoding
  langs:
  - csharp
  - vb
  name: RegisterProvider(EncodingProvider)
  fullName: System.Text.Encoding.RegisterProvider(System.Text.EncodingProvider)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Text/Encoding.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: RegisterProvider
    path: src/mscorlib/src/System/Text/Encoding.cs
    startLine: 397
  assemblies:
  - System.Text.Encoding
  namespace: System.Text
  summary: 'Registers an encoding provider. '
  syntax:
    content: public static void RegisterProvider(EncodingProvider provider)
    content.vb: Public Shared Sub RegisterProvider(provider As EncodingProvider)
    parameters:
    - id: provider
      type: System.Text.EncodingProvider
      description: 'A subclass of <xref href="System.Text.EncodingProvider" data-throw-if-not-resolved="false"></xref> that provides access to additional character encodings. '
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>provider</em> is null. "
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: System.Text
  isExternal: false
  name: System.Text
  fullName: System.Text
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  fullName: System.Int32
- uid: System.Text.EncoderFallback
  parent: System.Text
  isExternal: false
  name: EncoderFallback
  fullName: System.Text.EncoderFallback
- uid: System.Text.DecoderFallback
  parent: System.Text
  isExternal: false
  name: DecoderFallback
  fullName: System.Text.DecoderFallback
- uid: System.Text.Encoding
  parent: System.Text
  isExternal: false
  name: Text.Encoding
  fullName: System.Text.Encoding
- uid: System.String
  parent: System
  isExternal: false
  name: String
  fullName: System.String
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  fullName: System.Boolean
- uid: System.Byte[]
  isExternal: false
  name: Byte[]
  fullName: System.Byte[]
  fullname.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
  - name: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
  - name: ()
    fullName: ()
- uid: System.Char*
  isExternal: false
  name: Char*
  fullName: System.Char*
  spec.csharp:
  - uid: System.Char
    name: Char
    fullName: System.Char
  - name: '*'
    fullName: '*'
  spec.vb:
  - uid: System.Char
    name: Char
    fullName: System.Char
  - name: '*'
    fullName: '*'
- uid: System.Char[]
  isExternal: false
  name: Char[]
  fullName: System.Char[]
  fullname.vb: System.Char()
  name.vb: Char()
  spec.csharp:
  - uid: System.Char
    name: Char
    fullName: System.Char
  - name: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Char
    name: Char
    fullName: System.Char
  - name: ()
    fullName: ()
- uid: System.Byte*
  isExternal: true
  name: Byte*
  fullName: System.Byte*
  spec.csharp:
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
    isExternal: true
  - name: '*'
    fullName: '*'
  spec.vb:
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
    isExternal: true
  - name: '*'
    fullName: '*'
- uid: System.Text.Decoder
  parent: System.Text
  isExternal: false
  name: Decoder
  fullName: System.Text.Decoder
- uid: System.Text.Encoder
  parent: System.Text
  isExternal: false
  name: Encoder
  fullName: System.Text.Encoder
- uid: System.Text.EncodingProvider
  parent: System.Text
  isExternal: false
  name: EncodingProvider
  fullName: System.Text.EncodingProvider
- uid: System.ArgumentOutOfRangeException
  isExternal: false
  name: ArgumentOutOfRangeException
  fullName: System.ArgumentOutOfRangeException
- uid: System.ArgumentNullException
  isExternal: false
  name: ArgumentNullException
  fullName: System.ArgumentNullException
- uid: System.InvalidOperationException
  parent: System
  isExternal: false
  name: InvalidOperationException
  fullName: System.InvalidOperationException
- uid: System.Text.DecoderFallbackException
  isExternal: false
  name: DecoderFallbackException
  fullName: System.Text.DecoderFallbackException
- uid: System.Text.EncoderFallbackException
  isExternal: false
  name: EncoderFallbackException
  fullName: System.Text.EncoderFallbackException
- uid: System.ArgumentException
  parent: System
  isExternal: false
  name: ArgumentException
  fullName: System.ArgumentException
- uid: System.NotSupportedException
  parent: System
  isExternal: false
  name: NotSupportedException
  fullName: System.NotSupportedException
