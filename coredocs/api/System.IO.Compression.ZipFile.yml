items:
- uid: System.IO.Compression.ZipFile
  commentId: T:System.IO.Compression.ZipFile
  id: ZipFile
  parent: System.IO.Compression
  children:
  - System.IO.Compression.ZipFile.CreateFromDirectory(System.String,System.String)
  - System.IO.Compression.ZipFile.CreateFromDirectory(System.String,System.String,System.IO.Compression.CompressionLevel,System.Boolean)
  - System.IO.Compression.ZipFile.CreateFromDirectory(System.String,System.String,System.IO.Compression.CompressionLevel,System.Boolean,System.Text.Encoding)
  - System.IO.Compression.ZipFile.ExtractToDirectory(System.String,System.String)
  - System.IO.Compression.ZipFile.ExtractToDirectory(System.String,System.String,System.Text.Encoding)
  - System.IO.Compression.ZipFile.Open(System.String,System.IO.Compression.ZipArchiveMode)
  - System.IO.Compression.ZipFile.Open(System.String,System.IO.Compression.ZipArchiveMode,System.Text.Encoding)
  - System.IO.Compression.ZipFile.OpenRead(System.String)
  langs:
  - csharp
  - vb
  name: ZipFile
  fullName: System.IO.Compression.ZipFile
  type: Class
  source:
    remote:
      path: src/System.IO.Compression.ZipFile/src/System/IO/Compression/ZipFile.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ZipFile
    path: src/System.IO.Compression.ZipFile/src/System/IO/Compression/ZipFile.cs
    startLine: 11
  assemblies:
  - System.IO.Compression.ZipFile
  namespace: System.IO.Compression
  summary: 'Provides static methods for creating, extracting, and opening zip archives. '
  syntax:
    content: 'public class ZipFile : object'
    content.vb: >-
      Public Class ZipFile
          Inherits Object
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: System.IO.Compression.ZipFile.CreateFromDirectory(System.String,System.String)
  commentId: M:System.IO.Compression.ZipFile.CreateFromDirectory(System.String,System.String)
  id: CreateFromDirectory(System.String,System.String)
  parent: System.IO.Compression.ZipFile
  langs:
  - csharp
  - vb
  name: CreateFromDirectory(String, String)
  fullName: System.IO.Compression.ZipFile.CreateFromDirectory(System.String, System.String)
  type: Method
  source:
    remote:
      path: src/System.IO.Compression.ZipFile/ref/System.IO.Compression.ZipFile.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CreateFromDirectory
    path: src/System.IO.Compression.ZipFile/ref/System.IO.Compression.ZipFile.cs
    startLine: 12
  assemblies:
  - System.IO.Compression.ZipFile
  namespace: System.IO.Compression
  summary: Creates a zip archive that contains the files and directories from the specified directory.
  syntax:
    content: public static void CreateFromDirectory(string sourceDirectoryName, string destinationArchiveFileName)
    content.vb: Public Shared Sub CreateFromDirectory(sourceDirectoryName As String, destinationArchiveFileName As String)
    parameters:
    - id: sourceDirectoryName
      type: System.String
      description: The path to the directory to be archived, specified as a relative or absolute path. A relative path is interpreted as relative to the current working directory.
    - id: destinationArchiveFileName
      type: System.String
      description: The path of the archive to be created, specified as a relative or absolute path. A relative path is interpreted as relative to the current working directory.
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<em>sourceDirectoryName</em> or <em>destinationArchiveFileName</em> is <xref href=\"System.String.Empty\" data-throw-if-not-resolved=\"false\"></xref>, contains only white space, or contains at least one invalid character."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>sourceDirectoryName</em> or <em>destinationArchiveFileName</em> is null."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: In <em>sourceDirectoryName</em> or <em>destinationArchiveFileName</em>, the specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must not exceed 248 characters, and file names must not exceed 260 characters.
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "\n<em>sourceDirectoryName</em> is invalid or does not exist (for example, it is on an unmapped drive)."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "\n<em>destinationArchiveFileName</em> already exists.-or-A file in the specified directory could not be opened."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "\n<em>destinationArchiveFileName</em> specifies a directory.-or-The caller does not have the required permission to access the directory specified in <em>sourceDirectoryName</em> or the file specified in <em>destinationArchiveFileName</em>."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "\n<em>sourceDirectoryName</em> or <em>destinationArchiveFileName</em> contains an invalid format.-or-The zip archive does not support writing."
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.IO.Compression.ZipFile.CreateFromDirectory(System.String,System.String,System.IO.Compression.CompressionLevel,System.Boolean)
  commentId: M:System.IO.Compression.ZipFile.CreateFromDirectory(System.String,System.String,System.IO.Compression.CompressionLevel,System.Boolean)
  id: CreateFromDirectory(System.String,System.String,System.IO.Compression.CompressionLevel,System.Boolean)
  parent: System.IO.Compression.ZipFile
  langs:
  - csharp
  - vb
  name: CreateFromDirectory(String, String, CompressionLevel, Boolean)
  fullName: System.IO.Compression.ZipFile.CreateFromDirectory(System.String, System.String, System.IO.Compression.CompressionLevel, System.Boolean)
  type: Method
  source:
    remote:
      path: src/System.IO.Compression.ZipFile/ref/System.IO.Compression.ZipFile.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CreateFromDirectory
    path: src/System.IO.Compression.ZipFile/ref/System.IO.Compression.ZipFile.cs
    startLine: 13
  assemblies:
  - System.IO.Compression.ZipFile
  namespace: System.IO.Compression
  summary: Creates a zip archive that contains the files and directories from the specified directory, uses the specified compression level, and optionally includes the base directory.
  syntax:
    content: public static void CreateFromDirectory(string sourceDirectoryName, string destinationArchiveFileName, CompressionLevel compressionLevel, bool includeBaseDirectory)
    content.vb: Public Shared Sub CreateFromDirectory(sourceDirectoryName As String, destinationArchiveFileName As String, compressionLevel As CompressionLevel, includeBaseDirectory As Boolean)
    parameters:
    - id: sourceDirectoryName
      type: System.String
      description: The path to the directory to be archived, specified as a relative or absolute path. A relative path is interpreted as relative to the current working directory.
    - id: destinationArchiveFileName
      type: System.String
      description: The path of the archive to be created, specified as a relative or absolute path. A relative path is interpreted as relative to the current working directory.
    - id: compressionLevel
      type: System.IO.Compression.CompressionLevel
      description: One of the enumeration values that indicates whether to emphasize speed or compression effectiveness when creating the entry.
    - id: includeBaseDirectory
      type: System.Boolean
      description: true to include the directory name from <em>sourceDirectoryName</em> at the root of the archive; false to include only the contents of the directory.
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<em>sourceDirectoryName</em> or <em>destinationArchiveFileName</em> is <xref href=\"System.String.Empty\" data-throw-if-not-resolved=\"false\"></xref>, contains only white space, or contains at least one invalid character."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>sourceDirectoryName</em> or <em>destinationArchiveFileName</em> is null."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: In <em>sourceDirectoryName</em> or <em>destinationArchiveFileName</em>, the specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must not exceed 248 characters, and file names must not exceed 260 characters.
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "\n<em>sourceDirectoryName</em> is invalid or does not exist (for example, it is on an unmapped drive)."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "\n<em>destinationArchiveFileName</em> already exists.-or-A file in the specified directory could not be opened."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "\n<em>destinationArchiveFileName</em> specifies a directory.-or-The caller does not have the required permission to access the directory specified in <em>sourceDirectoryName</em> or the file specified in <em>destinationArchiveFileName</em>."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "\n<em>sourceDirectoryName</em> or <em>destinationArchiveFileName</em> contains an invalid format.-or-The zip archive does not support writing."
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.IO.Compression.ZipFile.CreateFromDirectory(System.String,System.String,System.IO.Compression.CompressionLevel,System.Boolean,System.Text.Encoding)
  commentId: M:System.IO.Compression.ZipFile.CreateFromDirectory(System.String,System.String,System.IO.Compression.CompressionLevel,System.Boolean,System.Text.Encoding)
  id: CreateFromDirectory(System.String,System.String,System.IO.Compression.CompressionLevel,System.Boolean,System.Text.Encoding)
  parent: System.IO.Compression.ZipFile
  langs:
  - csharp
  - vb
  name: CreateFromDirectory(String, String, CompressionLevel, Boolean, Text.Encoding)
  fullName: System.IO.Compression.ZipFile.CreateFromDirectory(System.String, System.String, System.IO.Compression.CompressionLevel, System.Boolean, System.Text.Encoding)
  type: Method
  source:
    remote:
      path: src/System.IO.Compression.ZipFile/ref/System.IO.Compression.ZipFile.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CreateFromDirectory
    path: src/System.IO.Compression.ZipFile/ref/System.IO.Compression.ZipFile.cs
    startLine: 14
  assemblies:
  - System.IO.Compression.ZipFile
  namespace: System.IO.Compression
  summary: Creates a zip archive that contains the files and directories from the specified directory, uses the specified compression level and character encoding for entry names, and optionally includes the base directory.
  syntax:
    content: public static void CreateFromDirectory(string sourceDirectoryName, string destinationArchiveFileName, CompressionLevel compressionLevel, bool includeBaseDirectory, Text.Encoding entryNameEncoding)
    content.vb: Public Shared Sub CreateFromDirectory(sourceDirectoryName As String, destinationArchiveFileName As String, compressionLevel As CompressionLevel, includeBaseDirectory As Boolean, entryNameEncoding As Text.Encoding)
    parameters:
    - id: sourceDirectoryName
      type: System.String
      description: The path to the directory to be archived, specified as a relative or absolute path. A relative path is interpreted as relative to the current working directory.
    - id: destinationArchiveFileName
      type: System.String
      description: The path of the archive to be created, specified as a relative or absolute path. A relative path is interpreted as relative to the current working directory.
    - id: compressionLevel
      type: System.IO.Compression.CompressionLevel
      description: One of the enumeration values that indicates whether to emphasize speed or compression effectiveness when creating the entry.
    - id: includeBaseDirectory
      type: System.Boolean
      description: true to include the directory name from <em>sourceDirectoryName</em> at the root of the archive; false to include only the contents of the directory.
    - id: entryNameEncoding
      type: System.Text.Encoding
      description: The encoding to use when reading or writing entry names in this archive. Specify a value for this parameter only when an encoding is required for interoperability with zip archive tools and libraries that do not support UTF-8 encoding for entry names.
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<em>sourceDirectoryName</em> or <em>destinationArchiveFileName</em> is <xref href=\"System.String.Empty\" data-throw-if-not-resolved=\"false\"></xref>, contains only white space, or contains at least one invalid character.-or-<em>entryNameEncoding</em> is set to a Unicode encoding other than UTF-8."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>sourceDirectoryName</em> or <em>destinationArchiveFileName</em> is null."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: In <em>sourceDirectoryName</em> or <em>destinationArchiveFileName</em>, the specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must not exceed 248 characters, and file names must not exceed 260 characters.
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "\n<em>sourceDirectoryName</em> is invalid or does not exist (for example, it is on an unmapped drive)."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "\n<em>destinationArchiveFileName</em> already exists.-or-A file in the specified directory could not be opened."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "\n<em>destinationArchiveFileName</em> specifies a directory.-or-The caller does not have the required permission to access the directory specified in <em>sourceDirectoryName</em> or the file specified in <em>destinationArchiveFileName</em>."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "\n<em>sourceDirectoryName</em> or <em>destinationArchiveFileName</em> contains an invalid format.-or-The zip archive does not support writing."
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.IO.Compression.ZipFile.ExtractToDirectory(System.String,System.String)
  commentId: M:System.IO.Compression.ZipFile.ExtractToDirectory(System.String,System.String)
  id: ExtractToDirectory(System.String,System.String)
  parent: System.IO.Compression.ZipFile
  langs:
  - csharp
  - vb
  name: ExtractToDirectory(String, String)
  fullName: System.IO.Compression.ZipFile.ExtractToDirectory(System.String, System.String)
  type: Method
  source:
    remote:
      path: src/System.IO.Compression.ZipFile/ref/System.IO.Compression.ZipFile.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ExtractToDirectory
    path: src/System.IO.Compression.ZipFile/ref/System.IO.Compression.ZipFile.cs
    startLine: 15
  assemblies:
  - System.IO.Compression.ZipFile
  namespace: System.IO.Compression
  summary: Extracts all the files in the specified zip archive to a directory on the file system.
  syntax:
    content: public static void ExtractToDirectory(string sourceArchiveFileName, string destinationDirectoryName)
    content.vb: Public Shared Sub ExtractToDirectory(sourceArchiveFileName As String, destinationDirectoryName As String)
    parameters:
    - id: sourceArchiveFileName
      type: System.String
      description: The path to the archive that is to be extracted.
    - id: destinationDirectoryName
      type: System.String
      description: The path to the directory in which to place the extracted files, specified as a relative or absolute path. A relative path is interpreted as relative to the current working directory.
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<em>destinationDirectoryName</em> or <em>sourceArchiveFileName</em> is <xref href=\"System.String.Empty\" data-throw-if-not-resolved=\"false\"></xref>, contains only white space, or contains at least one invalid character."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>destinationDirectoryName</em> or <em>sourceArchiveFileName</em> is null."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: The specified path in <em>destinationDirectoryName</em> or <em>sourceArchiveFileName</em> exceeds the system-defined maximum length. For example, on Windows-based platforms, paths must not exceed 248 characters, and file names must not exceed 260 characters.
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: The specified path is invalid (for example, it is on an unmapped drive).
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: The directory specified by <em>destinationDirectoryName</em> already exists.-or-The name of an entry in the archive is <xref href="System.String.Empty" data-throw-if-not-resolved="false"></xref>, contains only white space, or contains at least one invalid character.-or-Extracting an archive entry would create a file that is outside the directory specified by <em>destinationDirectoryName</em>. (For example, this might happen if the entry name contains parent directory accessors.) -or-An archive entry to extract has the same name as an entry that has already been extracted from the same archive.
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: The caller does not have the required permission to access the archive or the destination directory.
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "\n<em>destinationDirectoryName</em> or <em>sourceArchiveFileName</em> contains an invalid format."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "\n<em>sourceArchiveFileName</em> was not found."
  - type: System.IO.InvalidDataException
    commentId: T:System.IO.InvalidDataException
    description: The archive specified by <em>sourceArchiveFileName</em> is not a valid zip archive.-or-An archive entry was not found or was corrupt.-or-An archive entry was compressed by using a compression method that is not supported.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.IO.Compression.ZipFile.ExtractToDirectory(System.String,System.String,System.Text.Encoding)
  commentId: M:System.IO.Compression.ZipFile.ExtractToDirectory(System.String,System.String,System.Text.Encoding)
  id: ExtractToDirectory(System.String,System.String,System.Text.Encoding)
  parent: System.IO.Compression.ZipFile
  langs:
  - csharp
  - vb
  name: ExtractToDirectory(String, String, Text.Encoding)
  fullName: System.IO.Compression.ZipFile.ExtractToDirectory(System.String, System.String, System.Text.Encoding)
  type: Method
  source:
    remote:
      path: src/System.IO.Compression.ZipFile/ref/System.IO.Compression.ZipFile.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ExtractToDirectory
    path: src/System.IO.Compression.ZipFile/ref/System.IO.Compression.ZipFile.cs
    startLine: 16
  assemblies:
  - System.IO.Compression.ZipFile
  namespace: System.IO.Compression
  summary: Extracts all the files in the specified zip archive to a directory on the file system and uses the specified character encoding for entry names.
  syntax:
    content: public static void ExtractToDirectory(string sourceArchiveFileName, string destinationDirectoryName, Text.Encoding entryNameEncoding)
    content.vb: Public Shared Sub ExtractToDirectory(sourceArchiveFileName As String, destinationDirectoryName As String, entryNameEncoding As Text.Encoding)
    parameters:
    - id: sourceArchiveFileName
      type: System.String
      description: The path to the archive that is to be extracted.
    - id: destinationDirectoryName
      type: System.String
      description: The path to the directory in which to place the extracted files, specified as a relative or absolute path. A relative path is interpreted as relative to the current working directory.
    - id: entryNameEncoding
      type: System.Text.Encoding
      description: The encoding to use when reading or writing entry names in this archive. Specify a value for this parameter only when an encoding is required for interoperability with zip archive tools and libraries that do not support UTF-8 encoding for entry names.
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<em>destinationDirectoryName</em> or <em>sourceArchiveFileName</em> is <xref href=\"System.String.Empty\" data-throw-if-not-resolved=\"false\"></xref>, contains only white space, or contains at least one invalid character.-or-<em>entryNameEncoding</em> is set to a Unicode encoding other than UTF-8."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>destinationDirectoryName</em> or <em>sourceArchiveFileName</em> is null."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: The specified path in <em>destinationDirectoryName</em> or <em>sourceArchiveFileName</em> exceeds the system-defined maximum length. For example, on Windows-based platforms, paths must not exceed 248 characters, and file names must not exceed 260 characters.
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: The specified path is invalid (for example, it is on an unmapped drive).
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: The directory specified by <em>destinationDirectoryName</em> already exists.-or-The name of an entry in the archive is <xref href="System.String.Empty" data-throw-if-not-resolved="false"></xref>, contains only white space, or contains at least one invalid character.-or-Extracting an archive entry would create a file that is outside the directory specified by <em>destinationDirectoryName</em>. (For example, this might happen if the entry name contains parent directory accessors.) -or-An archive entry to extract has the same name as an entry that has already been extracted from the same archive.
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: The caller does not have the required permission to access the archive or the destination directory.
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "\n<em>destinationDirectoryName</em> or <em>sourceArchiveFileName</em> contains an invalid format."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "\n<em>sourceArchiveFileName</em> was not found."
  - type: System.IO.InvalidDataException
    commentId: T:System.IO.InvalidDataException
    description: The archive specified by <em>sourceArchiveFileName</em> is not a valid zip archive.-or-An archive entry was not found or was corrupt.-or-An archive entry was compressed by using a compression method that is not supported.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.IO.Compression.ZipFile.Open(System.String,System.IO.Compression.ZipArchiveMode)
  commentId: M:System.IO.Compression.ZipFile.Open(System.String,System.IO.Compression.ZipArchiveMode)
  id: Open(System.String,System.IO.Compression.ZipArchiveMode)
  parent: System.IO.Compression.ZipFile
  langs:
  - csharp
  - vb
  name: Open(String, ZipArchiveMode)
  fullName: System.IO.Compression.ZipFile.Open(System.String, System.IO.Compression.ZipArchiveMode)
  type: Method
  source:
    remote:
      path: src/System.IO.Compression.ZipFile/ref/System.IO.Compression.ZipFile.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Open
    path: src/System.IO.Compression.ZipFile/ref/System.IO.Compression.ZipFile.cs
    startLine: 17
  assemblies:
  - System.IO.Compression.ZipFile
  namespace: System.IO.Compression
  summary: Opens a zip archive at the specified path and in the specified mode.
  syntax:
    content: public static ZipArchive Open(string archiveFileName, ZipArchiveMode mode)
    content.vb: Public Shared Function Open(archiveFileName As String, mode As ZipArchiveMode) As ZipArchive
    parameters:
    - id: archiveFileName
      type: System.String
      description: The path to the archive to open, specified as a relative or absolute path. A relative path is interpreted as relative to the current working directory.
    - id: mode
      type: System.IO.Compression.ZipArchiveMode
      description: One of the enumeration values that specifies the actions which are allowed on the entries in the opened archive.
    return:
      type: System.IO.Compression.ZipArchive
      description: The opened zip archive.
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<em>archiveFileName</em> is <xref href=\"System.String.Empty\" data-throw-if-not-resolved=\"false\"></xref>, contains only white space, or contains at least one invalid character."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>archiveFileName</em> is null."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: In <em>archiveFileName</em>, the specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must not exceed 248 characters, and file names must not exceed 260 characters.
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "\n<em>archiveFileName</em> is invalid or does not exist (for example, it is on an unmapped drive)."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "\n<em>archiveFileName</em> could not be opened.-or-<em>mode</em> is set to <xref href=\"System.IO.Compression.ZipArchiveMode.Create\" data-throw-if-not-resolved=\"false\"></xref>, but the file specified in <em>archiveFileName</em> already exists."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "\n<em>archiveFileName</em> specifies a directory.-or-The caller does not have the required permission to access the file specified in <em>archiveFileName</em>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<em>mode</em> specifies an invalid value."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "\n<em>mode</em> is set to <xref href=\"System.IO.Compression.ZipArchiveMode.Read\" data-throw-if-not-resolved=\"false\"></xref>, but the file specified in <em>archiveFileName</em> is not found."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "\n<em>archiveFileName</em> contains an invalid format."
  - type: System.IO.InvalidDataException
    commentId: T:System.IO.InvalidDataException
    description: "\n<em>archiveFileName</em> could not be interpreted as a zip archive.-or-<em>mode</em> is <xref href=\"System.IO.Compression.ZipArchiveMode.Update\" data-throw-if-not-resolved=\"false\"></xref>, but an entry is missing or corrupt and cannot be read.-or-<em>mode</em> is <xref href=\"System.IO.Compression.ZipArchiveMode.Update\" data-throw-if-not-resolved=\"false\"></xref>, but an entry is too large to fit into memory."
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.IO.Compression.ZipFile.Open(System.String,System.IO.Compression.ZipArchiveMode,System.Text.Encoding)
  commentId: M:System.IO.Compression.ZipFile.Open(System.String,System.IO.Compression.ZipArchiveMode,System.Text.Encoding)
  id: Open(System.String,System.IO.Compression.ZipArchiveMode,System.Text.Encoding)
  parent: System.IO.Compression.ZipFile
  langs:
  - csharp
  - vb
  name: Open(String, ZipArchiveMode, Text.Encoding)
  fullName: System.IO.Compression.ZipFile.Open(System.String, System.IO.Compression.ZipArchiveMode, System.Text.Encoding)
  type: Method
  source:
    remote:
      path: src/System.IO.Compression.ZipFile/ref/System.IO.Compression.ZipFile.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Open
    path: src/System.IO.Compression.ZipFile/ref/System.IO.Compression.ZipFile.cs
    startLine: 18
  assemblies:
  - System.IO.Compression.ZipFile
  namespace: System.IO.Compression
  summary: Opens a zip archive at the specified path, in the specified mode, and by using the specified character encoding for entry names.
  syntax:
    content: public static ZipArchive Open(string archiveFileName, ZipArchiveMode mode, Text.Encoding entryNameEncoding)
    content.vb: Public Shared Function Open(archiveFileName As String, mode As ZipArchiveMode, entryNameEncoding As Text.Encoding) As ZipArchive
    parameters:
    - id: archiveFileName
      type: System.String
      description: The path to the archive to open, specified as a relative or absolute path. A relative path is interpreted as relative to the current working directory.
    - id: mode
      type: System.IO.Compression.ZipArchiveMode
      description: One of the enumeration values that specifies the actions that are allowed on the entries in the opened archive.
    - id: entryNameEncoding
      type: System.Text.Encoding
      description: The encoding to use when reading or writing entry names in this archive. Specify a value for this parameter only when an encoding is required for interoperability with zip archive tools and libraries that do not support UTF-8 encoding for entry names.
    return:
      type: System.IO.Compression.ZipArchive
      description: The opened zip archive.
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<em>archiveFileName</em> is <xref href=\"System.String.Empty\" data-throw-if-not-resolved=\"false\"></xref>, contains only white space, or contains at least one invalid character.-or-<em>entryNameEncoding</em> is set to a Unicode encoding other than UTF-8."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>archiveFileName</em> is null."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: In <em>archiveFileName</em>, the specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must not exceed 248 characters, and file names must not exceed 260 characters.
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "\n<em>archiveFileName</em> is invalid or does not exist (for example, it is on an unmapped drive)."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "\n<em>archiveFileName</em> could not be opened.-or-<em>mode</em> is set to <xref href=\"System.IO.Compression.ZipArchiveMode.Create\" data-throw-if-not-resolved=\"false\"></xref>, but the file specified in <em>archiveFileName</em> already exists."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "\n<em>archiveFileName</em> specifies a directory.-or-The caller does not have the required permission to access the file specified in <em>archiveFileName</em>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<em>mode</em> specifies an invalid value."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "\n<em>mode</em> is set to <xref href=\"System.IO.Compression.ZipArchiveMode.Read\" data-throw-if-not-resolved=\"false\"></xref>, but the file specified in <em>archiveFileName</em> is not found."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "\n<em>archiveFileName</em> contains an invalid format."
  - type: System.IO.InvalidDataException
    commentId: T:System.IO.InvalidDataException
    description: "\n<em>archiveFileName</em> could not be interpreted as a zip archive.-or-<em>mode</em> is <xref href=\"System.IO.Compression.ZipArchiveMode.Update\" data-throw-if-not-resolved=\"false\"></xref>, but an entry is missing or corrupt and cannot be read.-or-<em>mode</em> is <xref href=\"System.IO.Compression.ZipArchiveMode.Update\" data-throw-if-not-resolved=\"false\"></xref>, but an entry is too large to fit into memory."
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.IO.Compression.ZipFile.OpenRead(System.String)
  commentId: M:System.IO.Compression.ZipFile.OpenRead(System.String)
  id: OpenRead(System.String)
  parent: System.IO.Compression.ZipFile
  langs:
  - csharp
  - vb
  name: OpenRead(String)
  fullName: System.IO.Compression.ZipFile.OpenRead(System.String)
  type: Method
  source:
    remote:
      path: src/System.IO.Compression.ZipFile/ref/System.IO.Compression.ZipFile.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: OpenRead
    path: src/System.IO.Compression.ZipFile/ref/System.IO.Compression.ZipFile.cs
    startLine: 19
  assemblies:
  - System.IO.Compression.ZipFile
  namespace: System.IO.Compression
  summary: Opens a zip archive for reading at the specified path.
  syntax:
    content: public static ZipArchive OpenRead(string archiveFileName)
    content.vb: Public Shared Function OpenRead(archiveFileName As String) As ZipArchive
    parameters:
    - id: archiveFileName
      type: System.String
      description: The path to the archive to open, specified as a relative or absolute path. A relative path is interpreted as relative to the current working directory.
    return:
      type: System.IO.Compression.ZipArchive
      description: The opened zip archive.
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<em>archiveFileName</em> is <xref href=\"System.String.Empty\" data-throw-if-not-resolved=\"false\"></xref>, contains only white space, or contains at least one invalid character."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>archiveFileName</em> is null."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: In <em>archiveFileName</em>, the specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must not exceed 248 characters, and file names must not exceed 260 characters.
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "\n<em>archiveFileName</em> is invalid or does not exist (for example, it is on an unmapped drive)."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "\n<em>archiveFileName</em> could not be opened."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "\n<em>archiveFileName</em> specifies a directory.-or-The caller does not have the required permission to access the file specified in <em>archiveFileName</em>."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: The file specified in <em>archiveFileName</em> is not found.
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "\n<em>archiveFileName</em> contains an invalid format."
  - type: System.IO.InvalidDataException
    commentId: T:System.IO.InvalidDataException
    description: "\n<em>archiveFileName</em> could not be interpreted as a zip archive."
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: System.IO.Compression
  isExternal: false
  name: System.IO.Compression
  fullName: System.IO.Compression
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.String
  parent: System
  isExternal: false
  name: String
  fullName: System.String
- uid: System.IO.Compression.CompressionLevel
  parent: System.IO.Compression
  isExternal: false
  name: CompressionLevel
  fullName: System.IO.Compression.CompressionLevel
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  fullName: System.Boolean
- uid: System.Text.Encoding
  parent: System.Text
  isExternal: false
  name: Text.Encoding
  fullName: System.Text.Encoding
- uid: System.Text
  isExternal: false
  name: System.Text
  fullName: System.Text
- uid: System.IO.Compression.ZipArchiveMode
  parent: System.IO.Compression
  isExternal: false
  name: ZipArchiveMode
  fullName: System.IO.Compression.ZipArchiveMode
- uid: System.IO.Compression.ZipArchive
  parent: System.IO.Compression
  isExternal: false
  name: ZipArchive
  fullName: System.IO.Compression.ZipArchive
- uid: System.ArgumentException
  parent: System
  isExternal: false
  name: ArgumentException
  fullName: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: false
  name: ArgumentNullException
  fullName: System.ArgumentNullException
- uid: System.IO.PathTooLongException
  isExternal: false
  name: PathTooLongException
  fullName: System.IO.PathTooLongException
- uid: System.IO.DirectoryNotFoundException
  isExternal: false
  name: DirectoryNotFoundException
  fullName: System.IO.DirectoryNotFoundException
- uid: System.IO.IOException
  parent: System.IO
  isExternal: false
  name: IOException
  fullName: System.IO.IOException
- uid: System.UnauthorizedAccessException
  isExternal: false
  name: UnauthorizedAccessException
  fullName: System.UnauthorizedAccessException
- uid: System.NotSupportedException
  parent: System
  isExternal: false
  name: NotSupportedException
  fullName: System.NotSupportedException
- uid: System.IO.FileNotFoundException
  isExternal: false
  name: FileNotFoundException
  fullName: System.IO.FileNotFoundException
- uid: System.IO.InvalidDataException
  isExternal: false
  name: InvalidDataException
  fullName: System.IO.InvalidDataException
- uid: System.ArgumentOutOfRangeException
  isExternal: false
  name: ArgumentOutOfRangeException
  fullName: System.ArgumentOutOfRangeException
