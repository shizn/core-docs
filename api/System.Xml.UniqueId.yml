items:
- uid: System.Xml.UniqueId
  commentId: T:System.Xml.UniqueId
  id: UniqueId
  parent: System.Xml
  children:
  - System.Xml.UniqueId.#ctor
  - System.Xml.UniqueId.#ctor(System.Byte[])
  - System.Xml.UniqueId.#ctor(System.Byte[],System.Int32)
  - System.Xml.UniqueId.#ctor(System.Char[],System.Int32,System.Int32)
  - System.Xml.UniqueId.#ctor(System.Guid)
  - System.Xml.UniqueId.#ctor(System.String)
  - System.Xml.UniqueId.CharArrayLength
  - System.Xml.UniqueId.Equals(System.Object)
  - System.Xml.UniqueId.GetHashCode
  - System.Xml.UniqueId.IsGuid
  - System.Xml.UniqueId.op_Equality(System.Xml.UniqueId,System.Xml.UniqueId)
  - System.Xml.UniqueId.op_Inequality(System.Xml.UniqueId,System.Xml.UniqueId)
  - System.Xml.UniqueId.ToCharArray(System.Char[],System.Int32)
  - System.Xml.UniqueId.ToString
  - System.Xml.UniqueId.TryGetGuid(System.Byte[],System.Int32)
  - System.Xml.UniqueId.TryGetGuid(System.Guid@)
  langs:
  - csharp
  - vb
  name: UniqueId
  fullName: System.Xml.UniqueId
  type: Class
  source:
    remote:
      path: src/System.Private.DataContractSerialization/src/System/Xml/UniqueId.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: UniqueId
    path: src/System.Private.DataContractSerialization/src/System/Xml/UniqueId.cs
    startLine: 13
  assemblies:
  - System.Runtime.Serialization.Xml
  namespace: System.Xml
  summary: A unique identifier optimized for Guids.
  syntax:
    content: 'public class UniqueId : object'
    content.vb: >-
      Public Class UniqueId
          Inherits Object
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: System.Xml.UniqueId.#ctor
  commentId: M:System.Xml.UniqueId.#ctor
  id: '#ctor'
  parent: System.Xml.UniqueId
  langs:
  - csharp
  - vb
  name: UniqueId()
  fullName: System.Xml.UniqueId.UniqueId()
  type: Constructor
  source:
    remote:
      path: src/System.Private.DataContractSerialization/src/System/Xml/UniqueId.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Private.DataContractSerialization/src/System/Xml/UniqueId.cs
    startLine: 64
  assemblies:
  - System.Runtime.Serialization.Xml
  namespace: System.Xml
  summary: Creates a new instance of this class with a new, unique Guid.
  syntax:
    content: public UniqueId()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Xml.UniqueId.#ctor(System.Byte[])
  commentId: M:System.Xml.UniqueId.#ctor(System.Byte[])
  id: '#ctor(System.Byte[])'
  parent: System.Xml.UniqueId
  langs:
  - csharp
  - vb
  name: UniqueId(Byte[])
  fullName: System.Xml.UniqueId.UniqueId(System.Byte[])
  type: Constructor
  source:
    remote:
      path: src/System.Private.DataContractSerialization/src/System/Xml/UniqueId.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Private.DataContractSerialization/src/System/Xml/UniqueId.cs
    startLine: 72
  assemblies:
  - System.Runtime.Serialization.Xml
  namespace: System.Xml
  summary: Creates a new instance of this class using a byte array that represents a <xref href="System.Guid" data-throw-if-not-resolved="false"></xref>.
  syntax:
    content: public UniqueId(byte[] guid)
    content.vb: Public Sub New(guid As Byte())
    parameters:
    - id: guid
      type: System.Byte[]
      description: A byte array that represents a <xref href="System.Guid" data-throw-if-not-resolved="false"></xref>.
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>guid</em> is null."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<em>guid</em> provides less than 16 valid bytes."
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Xml.UniqueId.UniqueId(System.Byte())
  name.vb: UniqueId(Byte())
- uid: System.Xml.UniqueId.#ctor(System.Byte[],System.Int32)
  commentId: M:System.Xml.UniqueId.#ctor(System.Byte[],System.Int32)
  id: '#ctor(System.Byte[],System.Int32)'
  parent: System.Xml.UniqueId
  langs:
  - csharp
  - vb
  name: UniqueId(Byte[], Int32)
  fullName: System.Xml.UniqueId.UniqueId(System.Byte[], System.Int32)
  type: Constructor
  source:
    remote:
      path: src/System.Private.DataContractSerialization/src/System/Xml/UniqueId.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Private.DataContractSerialization/src/System/Xml/UniqueId.cs
    startLine: 80
  assemblies:
  - System.Runtime.Serialization.Xml
  namespace: System.Xml
  summary: Creates a new instance of this class starting from an offset within a byte array that represents a <xref href="System.Guid" data-throw-if-not-resolved="false"></xref>.
  syntax:
    content: public UniqueId(byte[] guid, int offset)
    content.vb: Public Sub New(guid As Byte(), offset As Integer)
    parameters:
    - id: guid
      type: System.Byte[]
      description: A byte array that represents a <xref href="System.Guid" data-throw-if-not-resolved="false"></xref>.
    - id: offset
      type: System.Int32
      description: Offset position within the byte array that represents a <xref href="System.Guid" data-throw-if-not-resolved="false"></xref>.
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>guid</em> is null."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<em>offset</em> less than zero or greater than the length of the array."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<em>guid </em>and<em> offset</em> provide less than 16 valid bytes."
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Xml.UniqueId.UniqueId(System.Byte(), System.Int32)
  name.vb: UniqueId(Byte(), Int32)
- uid: System.Xml.UniqueId.#ctor(System.Char[],System.Int32,System.Int32)
  commentId: M:System.Xml.UniqueId.#ctor(System.Char[],System.Int32,System.Int32)
  id: '#ctor(System.Char[],System.Int32,System.Int32)'
  parent: System.Xml.UniqueId
  langs:
  - csharp
  - vb
  name: UniqueId(Char[], Int32, Int32)
  fullName: System.Xml.UniqueId.UniqueId(System.Char[], System.Int32, System.Int32)
  type: Constructor
  source:
    remote:
      path: src/System.Private.DataContractSerialization/src/System/Xml/UniqueId.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Private.DataContractSerialization/src/System/Xml/UniqueId.cs
    startLine: 120
  assemblies:
  - System.Runtime.Serialization.Xml
  namespace: System.Xml
  summary: Creates a new instance of this class starting from an offset within a char using a specified number of entries.
  syntax:
    content: public UniqueId(char[] chars, int offset, int count)
    content.vb: Public Sub New(chars As Char(), offset As Integer, count As Integer)
    parameters:
    - id: chars
      type: System.Char[]
      description: A char array that represents a <xref href="System.Guid" data-throw-if-not-resolved="false"></xref>.
    - id: offset
      type: System.Int32
      description: Offset position within the char array that represents a <xref href="System.Guid" data-throw-if-not-resolved="false"></xref>.
    - id: count
      type: System.Int32
      description: Number of array entries to use, starting from <em>offset</em>.
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>chars</em> is null."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<em>offset</em> less than zero or greater than the length of the array."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<em>count</em> less than zero or greater than the length of the array minus <em>offset</em>."
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "\n<em>count</em> equals zero."
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Xml.UniqueId.UniqueId(System.Char(), System.Int32, System.Int32)
  name.vb: UniqueId(Char(), Int32, Int32)
- uid: System.Xml.UniqueId.#ctor(System.Guid)
  commentId: M:System.Xml.UniqueId.#ctor(System.Guid)
  id: '#ctor(System.Guid)'
  parent: System.Xml.UniqueId
  langs:
  - csharp
  - vb
  name: UniqueId(Guid)
  fullName: System.Xml.UniqueId.UniqueId(System.Guid)
  type: Constructor
  source:
    remote:
      path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
    startLine: 95
  assemblies:
  - System.Runtime.Serialization.Xml
  namespace: System.Xml
  summary: Creates a new instance of this class using a <xref href="System.Guid" data-throw-if-not-resolved="false"></xref>.
  syntax:
    content: public UniqueId(Guid guid)
    content.vb: Public Sub New(guid As Guid)
    parameters:
    - id: guid
      type: System.Guid
      description: A <xref href="System.Guid" data-throw-if-not-resolved="false"></xref>.
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>guid</em> is null."
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Xml.UniqueId.#ctor(System.String)
  commentId: M:System.Xml.UniqueId.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Xml.UniqueId
  langs:
  - csharp
  - vb
  name: UniqueId(String)
  fullName: System.Xml.UniqueId.UniqueId(System.String)
  type: Constructor
  source:
    remote:
      path: src/System.Private.DataContractSerialization/src/System/Xml/UniqueId.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Private.DataContractSerialization/src/System/Xml/UniqueId.cs
    startLine: 102
  assemblies:
  - System.Runtime.Serialization.Xml
  namespace: System.Xml
  summary: Creates a new instance of this class using a string.
  syntax:
    content: public UniqueId(string value)
    content.vb: Public Sub New(value As String)
    parameters:
    - id: value
      type: System.String
      description: A string used to generate the <xref href="System.Xml.UniqueId" data-throw-if-not-resolved="false"></xref>.
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>value</em> is null."
  - type: System.FormatException
    commentId: T:System.FormatException
    description: Length of<em> value</em> is zero.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Xml.UniqueId.CharArrayLength
  commentId: P:System.Xml.UniqueId.CharArrayLength
  id: CharArrayLength
  parent: System.Xml.UniqueId
  langs:
  - csharp
  - vb
  name: CharArrayLength
  fullName: System.Xml.UniqueId.CharArrayLength
  type: Property
  source:
    remote:
      path: src/System.Private.DataContractSerialization/src/System/Xml/UniqueId.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CharArrayLength
    path: src/System.Private.DataContractSerialization/src/System/Xml/UniqueId.cs
    startLine: 146
  assemblies:
  - System.Runtime.Serialization.Xml
  namespace: System.Xml
  summary: Gets the length of the string representation of the <xref href="System.Xml.UniqueId" data-throw-if-not-resolved="false"></xref>.
  syntax:
    content: public int CharArrayLength { get; }
    content.vb: Public ReadOnly Property CharArrayLength As Integer
    parameters: []
    return:
      type: System.Int32
      description: The length of the string representation of the <xref href="System.Xml.UniqueId" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Xml.UniqueId.IsGuid
  commentId: P:System.Xml.UniqueId.IsGuid
  id: IsGuid
  parent: System.Xml.UniqueId
  langs:
  - csharp
  - vb
  name: IsGuid
  fullName: System.Xml.UniqueId.IsGuid
  type: Property
  source:
    remote:
      path: src/System.Private.DataContractSerialization/src/System/Xml/UniqueId.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IsGuid
    path: src/System.Private.DataContractSerialization/src/System/Xml/UniqueId.cs
    startLine: 186
  assemblies:
  - System.Runtime.Serialization.Xml
  namespace: System.Xml
  summary: Indicates whether the <xref href="System.Xml.UniqueId" data-throw-if-not-resolved="false"></xref> is a <xref href="System.Guid" data-throw-if-not-resolved="false"></xref>.
  syntax:
    content: public bool IsGuid { get; }
    content.vb: Public ReadOnly Property IsGuid As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: true if the <xref href="System.Xml.UniqueId" data-throw-if-not-resolved="false"></xref> is a <xref href="System.Guid" data-throw-if-not-resolved="false"></xref>; otherwise false.
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Xml.UniqueId.Equals(System.Object)
  commentId: M:System.Xml.UniqueId.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Xml.UniqueId
  langs:
  - csharp
  - vb
  name: Equals(Object)
  fullName: System.Xml.UniqueId.Equals(System.Object)
  type: Method
  source:
    remote:
      path: src/System.Private.DataContractSerialization/src/System/Xml/UniqueId.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Equals
    path: src/System.Private.DataContractSerialization/src/System/Xml/UniqueId.cs
    startLine: 412
  assemblies:
  - System.Runtime.Serialization.Xml
  namespace: System.Xml
  summary: Tests whether an object equals this <xref href="System.Xml.UniqueId" data-throw-if-not-resolved="false"></xref>.
  syntax:
    content: public override bool Equals(object obj)
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
    parameters:
    - id: obj
      type: System.Object
      description: The object to compare.
    return:
      type: System.Boolean
      description: true if the object equals this <xref href="System.Xml.UniqueId" data-throw-if-not-resolved="false"></xref>; otherwise false.
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Xml.UniqueId.GetHashCode
  commentId: M:System.Xml.UniqueId.GetHashCode
  id: GetHashCode
  parent: System.Xml.UniqueId
  langs:
  - csharp
  - vb
  name: GetHashCode()
  fullName: System.Xml.UniqueId.GetHashCode()
  type: Method
  source:
    remote:
      path: src/System.Private.DataContractSerialization/src/System/Xml/UniqueId.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetHashCode
    path: src/System.Private.DataContractSerialization/src/System/Xml/UniqueId.cs
    startLine: 417
  assemblies:
  - System.Runtime.Serialization.Xml
  namespace: System.Xml
  summary: Creates a hash-code representation of this <xref href="System.Xml.UniqueId" data-throw-if-not-resolved="false"></xref>.
  syntax:
    content: public override int GetHashCode()
    content.vb: Public Overrides Function GetHashCode As Integer
    return:
      type: System.Int32
      description: An integer hash-code representation of this <xref href="System.Xml.UniqueId" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Xml.UniqueId.op_Equality(System.Xml.UniqueId,System.Xml.UniqueId)
  commentId: M:System.Xml.UniqueId.op_Equality(System.Xml.UniqueId,System.Xml.UniqueId)
  id: op_Equality(System.Xml.UniqueId,System.Xml.UniqueId)
  parent: System.Xml.UniqueId
  langs:
  - csharp
  - vb
  name: Equality(UniqueId, UniqueId)
  fullName: System.Xml.UniqueId.Equality(System.Xml.UniqueId, System.Xml.UniqueId)
  type: Operator
  source:
    remote:
      path: src/System.Private.DataContractSerialization/src/System/Xml/UniqueId.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_Equality
    path: src/System.Private.DataContractSerialization/src/System/Xml/UniqueId.cs
    startLine: 390
  assemblies:
  - System.Runtime.Serialization.Xml
  namespace: System.Xml
  summary: Overrides the equality operator to test for equality of two <xref href="System.Xml.UniqueId" data-throw-if-not-resolved="false"></xref>s.
  syntax:
    content: public static bool operator ==(UniqueId id1, UniqueId id2)
    content.vb: Public Shared Operator =(id1 As UniqueId, id2 As UniqueId) As Boolean
    parameters:
    - id: id1
      type: System.Xml.UniqueId
      description: The first <xref href="System.Xml.UniqueId" data-throw-if-not-resolved="false"></xref>.
    - id: id2
      type: System.Xml.UniqueId
      description: The second <xref href="System.Xml.UniqueId" data-throw-if-not-resolved="false"></xref>.
    return:
      type: System.Boolean
      description: true if the two <xref href="System.Xml.UniqueId" data-throw-if-not-resolved="false"></xref>s are equal, or are both null; false if they are not equal, or if only one of them is null.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Xml.UniqueId.op_Inequality(System.Xml.UniqueId,System.Xml.UniqueId)
  commentId: M:System.Xml.UniqueId.op_Inequality(System.Xml.UniqueId,System.Xml.UniqueId)
  id: op_Inequality(System.Xml.UniqueId,System.Xml.UniqueId)
  parent: System.Xml.UniqueId
  langs:
  - csharp
  - vb
  name: Inequality(UniqueId, UniqueId)
  fullName: System.Xml.UniqueId.Inequality(System.Xml.UniqueId, System.Xml.UniqueId)
  type: Operator
  source:
    remote:
      path: src/System.Private.DataContractSerialization/src/System/Xml/UniqueId.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_Inequality
    path: src/System.Private.DataContractSerialization/src/System/Xml/UniqueId.cs
    startLine: 407
  assemblies:
  - System.Runtime.Serialization.Xml
  namespace: System.Xml
  summary: Overrides the equality operator to test for inequality of two <xref href="System.Xml.UniqueId" data-throw-if-not-resolved="false"></xref>s.
  syntax:
    content: public static bool operator !=(UniqueId id1, UniqueId id2)
    content.vb: Public Shared Operator <>(id1 As UniqueId, id2 As UniqueId) As Boolean
    parameters:
    - id: id1
      type: System.Xml.UniqueId
      description: The first <xref href="System.Xml.UniqueId" data-throw-if-not-resolved="false"></xref>.
    - id: id2
      type: System.Xml.UniqueId
      description: The second <xref href="System.Xml.UniqueId" data-throw-if-not-resolved="false"></xref>.
    return:
      type: System.Boolean
      description: true if the overridden equality operator returns false; otherwise false.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Xml.UniqueId.ToCharArray(System.Char[],System.Int32)
  commentId: M:System.Xml.UniqueId.ToCharArray(System.Char[],System.Int32)
  id: ToCharArray(System.Char[],System.Int32)
  parent: System.Xml.UniqueId
  langs:
  - csharp
  - vb
  name: ToCharArray(Char[], Int32)
  fullName: System.Xml.UniqueId.ToCharArray(System.Char[], System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Private.DataContractSerialization/src/System/Xml/UniqueId.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ToCharArray
    path: src/System.Private.DataContractSerialization/src/System/Xml/UniqueId.cs
    startLine: 261
  assemblies:
  - System.Runtime.Serialization.Xml
  namespace: System.Xml
  summary: Puts the <xref href="System.Xml.UniqueId" data-throw-if-not-resolved="false"></xref> value into a char array.
  syntax:
    content: public int ToCharArray(char[] chars, int offset)
    content.vb: Public Function ToCharArray(chars As Char(), offset As Integer) As Integer
    parameters:
    - id: chars
      type: System.Char[]
      description: The char array.
    - id: offset
      type: System.Int32
      description: Position in the char array to start inserting the <xref href="System.Xml.UniqueId" data-throw-if-not-resolved="false"></xref> value.
    return:
      type: System.Int32
      description: Number of entries in the char array filled by the <xref href="System.Xml.UniqueId" data-throw-if-not-resolved="false"></xref> value.
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>chars</em> is null."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<em>offset</em> less than zero or greater than the length of the array."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<em>guid </em>and<em> offset</em> provide less than 16 valid bytes."
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Xml.UniqueId.ToCharArray(System.Char(), System.Int32)
  name.vb: ToCharArray(Char(), Int32)
- uid: System.Xml.UniqueId.ToString
  commentId: M:System.Xml.UniqueId.ToString
  id: ToString
  parent: System.Xml.UniqueId
  langs:
  - csharp
  - vb
  name: ToString()
  fullName: System.Xml.UniqueId.ToString()
  type: Method
  source:
    remote:
      path: src/System.Private.DataContractSerialization/src/System/Xml/UniqueId.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ToString
    path: src/System.Private.DataContractSerialization/src/System/Xml/UniqueId.cs
    startLine: 377
  assemblies:
  - System.Runtime.Serialization.Xml
  namespace: System.Xml
  summary: Displays the <xref href="System.Xml.UniqueId" data-throw-if-not-resolved="false"></xref> value in string format.
  syntax:
    content: public override string ToString()
    content.vb: Public Overrides Function ToString As String
    return:
      type: System.String
      description: A string representation of the <xref href="System.Xml.UniqueId" data-throw-if-not-resolved="false"></xref> value.
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Xml.UniqueId.TryGetGuid(System.Byte[],System.Int32)
  commentId: M:System.Xml.UniqueId.TryGetGuid(System.Byte[],System.Int32)
  id: TryGetGuid(System.Byte[],System.Int32)
  parent: System.Xml.UniqueId
  langs:
  - csharp
  - vb
  name: TryGetGuid(Byte[], Int32)
  fullName: System.Xml.UniqueId.TryGetGuid(System.Byte[], System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Private.DataContractSerialization/src/System/Xml/UniqueId.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: TryGetGuid
    path: src/System.Private.DataContractSerialization/src/System/Xml/UniqueId.cs
    startLine: 347
  assemblies:
  - System.Runtime.Serialization.Xml
  namespace: System.Xml
  summary: Tries to get the value of the <xref href="System.Xml.UniqueId" data-throw-if-not-resolved="false"></xref> as a <xref href="System.Guid" data-throw-if-not-resolved="false"></xref> and store it in the given byte array at the specified offest.
  syntax:
    content: public bool TryGetGuid(byte[] buffer, int offset)
    content.vb: Public Function TryGetGuid(buffer As Byte(), offset As Integer) As Boolean
    parameters:
    - id: buffer
      type: System.Byte[]
      description: byte array that will contain the <xref href="System.Guid" data-throw-if-not-resolved="false"></xref>.
    - id: offset
      type: System.Int32
      description: Position in the byte array to start inserting the <xref href="System.Guid" data-throw-if-not-resolved="false"></xref> value.
    return:
      type: System.Boolean
      description: true if the value stored in this instance of <xref href="System.Xml.UniqueId" data-throw-if-not-resolved="false"></xref> is a <xref href="System.Guid" data-throw-if-not-resolved="false"></xref>; otherwise false.
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>buffer</em> is null."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<em>offset</em> less than zero or greater than the length of the array."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<em>buffer </em>and<em> offset</em> provide less than 16 valid bytes."
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Xml.UniqueId.TryGetGuid(System.Byte(), System.Int32)
  name.vb: TryGetGuid(Byte(), Int32)
- uid: System.Xml.UniqueId.TryGetGuid(System.Guid@)
  commentId: M:System.Xml.UniqueId.TryGetGuid(System.Guid@)
  id: TryGetGuid(System.Guid@)
  parent: System.Xml.UniqueId
  langs:
  - csharp
  - vb
  name: TryGetGuid(out Guid)
  fullName: System.Xml.UniqueId.TryGetGuid(out System.Guid)
  type: Method
  source:
    remote:
      path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: TryGetGuid
    path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
    startLine: 106
  assemblies:
  - System.Runtime.Serialization.Xml
  namespace: System.Xml
  summary: Tries to get the value of the <xref href="System.Xml.UniqueId" data-throw-if-not-resolved="false"></xref> as a <xref href="System.Guid" data-throw-if-not-resolved="false"></xref>.
  syntax:
    content: public bool TryGetGuid(out Guid guid)
    content.vb: Public Function TryGetGuid(ByRef guid As Guid) As Boolean
    parameters:
    - id: guid
      type: System.Guid
      description: The <xref href="System.Guid" data-throw-if-not-resolved="false"></xref> if successful; otherwise <xref href="System.Guid.Empty" data-throw-if-not-resolved="false"></xref>.
    return:
      type: System.Boolean
      description: true if the UniqueId represents a <xref href="System.Guid" data-throw-if-not-resolved="false"></xref>; otherwise false.
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>buffer</em> is null."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<em>buffer </em>and<em> offset</em> provide less than 16 valid bytes."
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Xml.UniqueId.TryGetGuid(ByRef System.Guid)
  name.vb: TryGetGuid(ByRef Guid)
references:
- uid: System.Xml
  isExternal: false
  name: System.Xml
  fullName: System.Xml
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Byte[]
  isExternal: false
  name: Byte[]
  fullName: System.Byte[]
  fullname.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
  - name: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
  - name: ()
    fullName: ()
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  fullName: System.Int32
- uid: System.Char[]
  isExternal: false
  name: Char[]
  fullName: System.Char[]
  fullname.vb: System.Char()
  name.vb: Char()
  spec.csharp:
  - uid: System.Char
    name: Char
    fullName: System.Char
  - name: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Char
    name: Char
    fullName: System.Char
  - name: ()
    fullName: ()
- uid: System.Guid
  parent: System
  isExternal: false
  name: Guid
  fullName: System.Guid
- uid: System.String
  parent: System
  isExternal: false
  name: String
  fullName: System.String
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  fullName: System.Boolean
- uid: System.Xml.UniqueId
  parent: System.Xml
  isExternal: false
  name: UniqueId
  fullName: System.Xml.UniqueId
- uid: System.ArgumentNullException
  isExternal: false
  name: ArgumentNullException
  fullName: System.ArgumentNullException
- uid: System.ArgumentException
  parent: System
  isExternal: false
  name: ArgumentException
  fullName: System.ArgumentException
- uid: System.ArgumentOutOfRangeException
  isExternal: false
  name: ArgumentOutOfRangeException
  fullName: System.ArgumentOutOfRangeException
- uid: System.FormatException
  parent: System
  isExternal: false
  name: FormatException
  fullName: System.FormatException
