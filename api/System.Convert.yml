items:
- uid: System.Convert
  commentId: T:System.Convert
  id: Convert
  parent: System
  children:
  - System.Convert.ChangeType(System.Object,System.Type)
  - System.Convert.ChangeType(System.Object,System.Type,System.IFormatProvider)
  - System.Convert.ChangeType(System.Object,System.TypeCode,System.IFormatProvider)
  - System.Convert.FromBase64CharArray(System.Char[],System.Int32,System.Int32)
  - System.Convert.FromBase64String(System.String)
  - System.Convert.GetTypeCode(System.Object)
  - System.Convert.ToBase64CharArray(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)
  - System.Convert.ToBase64String(System.Byte[])
  - System.Convert.ToBase64String(System.Byte[],System.Int32,System.Int32)
  - System.Convert.ToBoolean(System.Boolean)
  - System.Convert.ToBoolean(System.Byte)
  - System.Convert.ToBoolean(System.Decimal)
  - System.Convert.ToBoolean(System.Double)
  - System.Convert.ToBoolean(System.Int16)
  - System.Convert.ToBoolean(System.Int32)
  - System.Convert.ToBoolean(System.Int64)
  - System.Convert.ToBoolean(System.Object)
  - System.Convert.ToBoolean(System.Object,System.IFormatProvider)
  - System.Convert.ToBoolean(System.SByte)
  - System.Convert.ToBoolean(System.Single)
  - System.Convert.ToBoolean(System.String)
  - System.Convert.ToBoolean(System.String,System.IFormatProvider)
  - System.Convert.ToBoolean(System.UInt16)
  - System.Convert.ToBoolean(System.UInt32)
  - System.Convert.ToBoolean(System.UInt64)
  - System.Convert.ToByte(System.Boolean)
  - System.Convert.ToByte(System.Byte)
  - System.Convert.ToByte(System.Char)
  - System.Convert.ToByte(System.Decimal)
  - System.Convert.ToByte(System.Double)
  - System.Convert.ToByte(System.Int16)
  - System.Convert.ToByte(System.Int32)
  - System.Convert.ToByte(System.Int64)
  - System.Convert.ToByte(System.Object)
  - System.Convert.ToByte(System.Object,System.IFormatProvider)
  - System.Convert.ToByte(System.SByte)
  - System.Convert.ToByte(System.Single)
  - System.Convert.ToByte(System.String)
  - System.Convert.ToByte(System.String,System.IFormatProvider)
  - System.Convert.ToByte(System.String,System.Int32)
  - System.Convert.ToByte(System.UInt16)
  - System.Convert.ToByte(System.UInt32)
  - System.Convert.ToByte(System.UInt64)
  - System.Convert.ToChar(System.Byte)
  - System.Convert.ToChar(System.Int16)
  - System.Convert.ToChar(System.Int32)
  - System.Convert.ToChar(System.Int64)
  - System.Convert.ToChar(System.Object)
  - System.Convert.ToChar(System.Object,System.IFormatProvider)
  - System.Convert.ToChar(System.SByte)
  - System.Convert.ToChar(System.String)
  - System.Convert.ToChar(System.String,System.IFormatProvider)
  - System.Convert.ToChar(System.UInt16)
  - System.Convert.ToChar(System.UInt32)
  - System.Convert.ToChar(System.UInt64)
  - System.Convert.ToDateTime(System.Object)
  - System.Convert.ToDateTime(System.Object,System.IFormatProvider)
  - System.Convert.ToDateTime(System.String)
  - System.Convert.ToDateTime(System.String,System.IFormatProvider)
  - System.Convert.ToDecimal(System.Boolean)
  - System.Convert.ToDecimal(System.Byte)
  - System.Convert.ToDecimal(System.Decimal)
  - System.Convert.ToDecimal(System.Double)
  - System.Convert.ToDecimal(System.Int16)
  - System.Convert.ToDecimal(System.Int32)
  - System.Convert.ToDecimal(System.Int64)
  - System.Convert.ToDecimal(System.Object)
  - System.Convert.ToDecimal(System.Object,System.IFormatProvider)
  - System.Convert.ToDecimal(System.SByte)
  - System.Convert.ToDecimal(System.Single)
  - System.Convert.ToDecimal(System.String)
  - System.Convert.ToDecimal(System.String,System.IFormatProvider)
  - System.Convert.ToDecimal(System.UInt16)
  - System.Convert.ToDecimal(System.UInt32)
  - System.Convert.ToDecimal(System.UInt64)
  - System.Convert.ToDouble(System.Boolean)
  - System.Convert.ToDouble(System.Byte)
  - System.Convert.ToDouble(System.Decimal)
  - System.Convert.ToDouble(System.Double)
  - System.Convert.ToDouble(System.Int16)
  - System.Convert.ToDouble(System.Int32)
  - System.Convert.ToDouble(System.Int64)
  - System.Convert.ToDouble(System.Object)
  - System.Convert.ToDouble(System.Object,System.IFormatProvider)
  - System.Convert.ToDouble(System.SByte)
  - System.Convert.ToDouble(System.Single)
  - System.Convert.ToDouble(System.String)
  - System.Convert.ToDouble(System.String,System.IFormatProvider)
  - System.Convert.ToDouble(System.UInt16)
  - System.Convert.ToDouble(System.UInt32)
  - System.Convert.ToDouble(System.UInt64)
  - System.Convert.ToInt16(System.Boolean)
  - System.Convert.ToInt16(System.Byte)
  - System.Convert.ToInt16(System.Char)
  - System.Convert.ToInt16(System.Decimal)
  - System.Convert.ToInt16(System.Double)
  - System.Convert.ToInt16(System.Int16)
  - System.Convert.ToInt16(System.Int32)
  - System.Convert.ToInt16(System.Int64)
  - System.Convert.ToInt16(System.Object)
  - System.Convert.ToInt16(System.Object,System.IFormatProvider)
  - System.Convert.ToInt16(System.SByte)
  - System.Convert.ToInt16(System.Single)
  - System.Convert.ToInt16(System.String)
  - System.Convert.ToInt16(System.String,System.IFormatProvider)
  - System.Convert.ToInt16(System.String,System.Int32)
  - System.Convert.ToInt16(System.UInt16)
  - System.Convert.ToInt16(System.UInt32)
  - System.Convert.ToInt16(System.UInt64)
  - System.Convert.ToInt32(System.Boolean)
  - System.Convert.ToInt32(System.Byte)
  - System.Convert.ToInt32(System.Char)
  - System.Convert.ToInt32(System.Decimal)
  - System.Convert.ToInt32(System.Double)
  - System.Convert.ToInt32(System.Int16)
  - System.Convert.ToInt32(System.Int32)
  - System.Convert.ToInt32(System.Int64)
  - System.Convert.ToInt32(System.Object)
  - System.Convert.ToInt32(System.Object,System.IFormatProvider)
  - System.Convert.ToInt32(System.SByte)
  - System.Convert.ToInt32(System.Single)
  - System.Convert.ToInt32(System.String)
  - System.Convert.ToInt32(System.String,System.IFormatProvider)
  - System.Convert.ToInt32(System.String,System.Int32)
  - System.Convert.ToInt32(System.UInt16)
  - System.Convert.ToInt32(System.UInt32)
  - System.Convert.ToInt32(System.UInt64)
  - System.Convert.ToInt64(System.Boolean)
  - System.Convert.ToInt64(System.Byte)
  - System.Convert.ToInt64(System.Char)
  - System.Convert.ToInt64(System.Decimal)
  - System.Convert.ToInt64(System.Double)
  - System.Convert.ToInt64(System.Int16)
  - System.Convert.ToInt64(System.Int32)
  - System.Convert.ToInt64(System.Int64)
  - System.Convert.ToInt64(System.Object)
  - System.Convert.ToInt64(System.Object,System.IFormatProvider)
  - System.Convert.ToInt64(System.SByte)
  - System.Convert.ToInt64(System.Single)
  - System.Convert.ToInt64(System.String)
  - System.Convert.ToInt64(System.String,System.IFormatProvider)
  - System.Convert.ToInt64(System.String,System.Int32)
  - System.Convert.ToInt64(System.UInt16)
  - System.Convert.ToInt64(System.UInt32)
  - System.Convert.ToInt64(System.UInt64)
  - System.Convert.ToSByte(System.Boolean)
  - System.Convert.ToSByte(System.Byte)
  - System.Convert.ToSByte(System.Char)
  - System.Convert.ToSByte(System.Decimal)
  - System.Convert.ToSByte(System.Double)
  - System.Convert.ToSByte(System.Int16)
  - System.Convert.ToSByte(System.Int32)
  - System.Convert.ToSByte(System.Int64)
  - System.Convert.ToSByte(System.Object)
  - System.Convert.ToSByte(System.Object,System.IFormatProvider)
  - System.Convert.ToSByte(System.SByte)
  - System.Convert.ToSByte(System.Single)
  - System.Convert.ToSByte(System.String)
  - System.Convert.ToSByte(System.String,System.IFormatProvider)
  - System.Convert.ToSByte(System.String,System.Int32)
  - System.Convert.ToSByte(System.UInt16)
  - System.Convert.ToSByte(System.UInt32)
  - System.Convert.ToSByte(System.UInt64)
  - System.Convert.ToSingle(System.Boolean)
  - System.Convert.ToSingle(System.Byte)
  - System.Convert.ToSingle(System.Decimal)
  - System.Convert.ToSingle(System.Double)
  - System.Convert.ToSingle(System.Int16)
  - System.Convert.ToSingle(System.Int32)
  - System.Convert.ToSingle(System.Int64)
  - System.Convert.ToSingle(System.Object)
  - System.Convert.ToSingle(System.Object,System.IFormatProvider)
  - System.Convert.ToSingle(System.SByte)
  - System.Convert.ToSingle(System.Single)
  - System.Convert.ToSingle(System.String)
  - System.Convert.ToSingle(System.String,System.IFormatProvider)
  - System.Convert.ToSingle(System.UInt16)
  - System.Convert.ToSingle(System.UInt32)
  - System.Convert.ToSingle(System.UInt64)
  - System.Convert.ToString(System.Boolean)
  - System.Convert.ToString(System.Boolean,System.IFormatProvider)
  - System.Convert.ToString(System.Byte)
  - System.Convert.ToString(System.Byte,System.IFormatProvider)
  - System.Convert.ToString(System.Byte,System.Int32)
  - System.Convert.ToString(System.Char)
  - System.Convert.ToString(System.Char,System.IFormatProvider)
  - System.Convert.ToString(System.DateTime)
  - System.Convert.ToString(System.DateTime,System.IFormatProvider)
  - System.Convert.ToString(System.Decimal)
  - System.Convert.ToString(System.Decimal,System.IFormatProvider)
  - System.Convert.ToString(System.Double)
  - System.Convert.ToString(System.Double,System.IFormatProvider)
  - System.Convert.ToString(System.Int16)
  - System.Convert.ToString(System.Int16,System.IFormatProvider)
  - System.Convert.ToString(System.Int16,System.Int32)
  - System.Convert.ToString(System.Int32)
  - System.Convert.ToString(System.Int32,System.IFormatProvider)
  - System.Convert.ToString(System.Int32,System.Int32)
  - System.Convert.ToString(System.Int64)
  - System.Convert.ToString(System.Int64,System.IFormatProvider)
  - System.Convert.ToString(System.Int64,System.Int32)
  - System.Convert.ToString(System.Object)
  - System.Convert.ToString(System.Object,System.IFormatProvider)
  - System.Convert.ToString(System.SByte)
  - System.Convert.ToString(System.SByte,System.IFormatProvider)
  - System.Convert.ToString(System.Single)
  - System.Convert.ToString(System.Single,System.IFormatProvider)
  - System.Convert.ToString(System.UInt16)
  - System.Convert.ToString(System.UInt16,System.IFormatProvider)
  - System.Convert.ToString(System.UInt32)
  - System.Convert.ToString(System.UInt32,System.IFormatProvider)
  - System.Convert.ToString(System.UInt64)
  - System.Convert.ToString(System.UInt64,System.IFormatProvider)
  - System.Convert.ToUInt16(System.Boolean)
  - System.Convert.ToUInt16(System.Byte)
  - System.Convert.ToUInt16(System.Char)
  - System.Convert.ToUInt16(System.Decimal)
  - System.Convert.ToUInt16(System.Double)
  - System.Convert.ToUInt16(System.Int16)
  - System.Convert.ToUInt16(System.Int32)
  - System.Convert.ToUInt16(System.Int64)
  - System.Convert.ToUInt16(System.Object)
  - System.Convert.ToUInt16(System.Object,System.IFormatProvider)
  - System.Convert.ToUInt16(System.SByte)
  - System.Convert.ToUInt16(System.Single)
  - System.Convert.ToUInt16(System.String)
  - System.Convert.ToUInt16(System.String,System.IFormatProvider)
  - System.Convert.ToUInt16(System.String,System.Int32)
  - System.Convert.ToUInt16(System.UInt16)
  - System.Convert.ToUInt16(System.UInt32)
  - System.Convert.ToUInt16(System.UInt64)
  - System.Convert.ToUInt32(System.Boolean)
  - System.Convert.ToUInt32(System.Byte)
  - System.Convert.ToUInt32(System.Char)
  - System.Convert.ToUInt32(System.Decimal)
  - System.Convert.ToUInt32(System.Double)
  - System.Convert.ToUInt32(System.Int16)
  - System.Convert.ToUInt32(System.Int32)
  - System.Convert.ToUInt32(System.Int64)
  - System.Convert.ToUInt32(System.Object)
  - System.Convert.ToUInt32(System.Object,System.IFormatProvider)
  - System.Convert.ToUInt32(System.SByte)
  - System.Convert.ToUInt32(System.Single)
  - System.Convert.ToUInt32(System.String)
  - System.Convert.ToUInt32(System.String,System.IFormatProvider)
  - System.Convert.ToUInt32(System.String,System.Int32)
  - System.Convert.ToUInt32(System.UInt16)
  - System.Convert.ToUInt32(System.UInt32)
  - System.Convert.ToUInt32(System.UInt64)
  - System.Convert.ToUInt64(System.Boolean)
  - System.Convert.ToUInt64(System.Byte)
  - System.Convert.ToUInt64(System.Char)
  - System.Convert.ToUInt64(System.Decimal)
  - System.Convert.ToUInt64(System.Double)
  - System.Convert.ToUInt64(System.Int16)
  - System.Convert.ToUInt64(System.Int32)
  - System.Convert.ToUInt64(System.Int64)
  - System.Convert.ToUInt64(System.Object)
  - System.Convert.ToUInt64(System.Object,System.IFormatProvider)
  - System.Convert.ToUInt64(System.SByte)
  - System.Convert.ToUInt64(System.Single)
  - System.Convert.ToUInt64(System.String)
  - System.Convert.ToUInt64(System.String,System.IFormatProvider)
  - System.Convert.ToUInt64(System.String,System.Int32)
  - System.Convert.ToUInt64(System.UInt16)
  - System.Convert.ToUInt64(System.UInt32)
  - System.Convert.ToUInt64(System.UInt64)
  langs:
  - csharp
  - vb
  name: Convert
  fullName: System.Convert
  type: Class
  source:
    remote:
      path: src/mscorlib/src/System/Convert.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Convert
    path: src/mscorlib/src/System/Convert.cs
    startLine: 107
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  summary: Converts a base data type to another base data type.
  syntax:
    content: 'public class Convert : object'
    content.vb: >-
      Public Class Convert
          Inherits Object
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: System.Convert.ChangeType(System.Object,System.Type)
  commentId: M:System.Convert.ChangeType(System.Object,System.Type)
  id: ChangeType(System.Object,System.Type)
  parent: System.Convert
  langs:
  - csharp
  - vb
  name: ChangeType(Object, Type)
  fullName: System.Convert.ChangeType(System.Object, System.Type)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Convert.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ChangeType
    path: src/mscorlib/src/System/Convert.cs
    startLine: 318
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  summary: Returns an object of the specified type and whose value is equivalent to the specified object.
  syntax:
    content: public static object ChangeType(object value, Type conversionType)
    content.vb: Public Shared Function ChangeType(value As Object, conversionType As Type) As Object
    parameters:
    - id: value
      type: System.Object
      description: 'An object that implements the <xref href="System.IConvertible" data-throw-if-not-resolved="false"></xref> interface. '
    - id: conversionType
      type: System.Type
      description: 'The type of object to return. '
    return:
      type: System.Object
      description: 'An object whose type is <em>conversionType</em> and whose value is equivalent to <em>value</em>.-or-A null reference (Nothing in Visual Basic), if <em>value</em> is null and <em>conversionType</em> is not a value type. '
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: This conversion is not supported.  -or-<em>value</em> is null and <em>conversionType</em> is a value type.-or-<em>value</em> does not implement the <xref href="System.IConvertible" data-throw-if-not-resolved="false"></xref> interface.
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "\n<em>value</em> is not in a format recognized by <em>conversionType</em>."
  - type: System.OverflowException
    commentId: T:System.OverflowException
    description: "\n<em>value</em> represents a number that is out of the range of <em>conversionType</em>."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>conversionType</em> is null."
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Convert.ChangeType(System.Object,System.Type,System.IFormatProvider)
  commentId: M:System.Convert.ChangeType(System.Object,System.Type,System.IFormatProvider)
  id: ChangeType(System.Object,System.Type,System.IFormatProvider)
  parent: System.Convert
  langs:
  - csharp
  - vb
  name: ChangeType(Object, Type, IFormatProvider)
  fullName: System.Convert.ChangeType(System.Object, System.Type, System.IFormatProvider)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Convert.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ChangeType
    path: src/mscorlib/src/System/Convert.cs
    startLine: 322
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  summary: Returns an object of the specified type whose value is equivalent to the specified object. A parameter supplies culture-specific formatting information.
  syntax:
    content: public static object ChangeType(object value, Type conversionType, IFormatProvider provider)
    content.vb: Public Shared Function ChangeType(value As Object, conversionType As Type, provider As IFormatProvider) As Object
    parameters:
    - id: value
      type: System.Object
      description: 'An object that implements the <xref href="System.IConvertible" data-throw-if-not-resolved="false"></xref> interface. '
    - id: conversionType
      type: System.Type
      description: 'The type of object to return. '
    - id: provider
      type: System.IFormatProvider
      description: 'An object that supplies culture-specific formatting information. '
    return:
      type: System.Object
      description: An object whose type is <em>conversionType</em> and whose value is equivalent to <em>value</em>.-or- <em>value</em>, if the <xref href="System.Type" data-throw-if-not-resolved="false"></xref> of <em>value</em> and <em>conversionType</em> are equal.-or- A null reference (Nothing in Visual Basic), if <em>value</em> is null and <em>conversionType</em> is not a value type.
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: This conversion is not supported. -or-<em>value</em> is null and <em>conversionType</em> is a value type.-or-<em>value</em> does not implement the <xref href="System.IConvertible" data-throw-if-not-resolved="false"></xref> interface.
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "\n<em>value</em> is not in a format for <em>conversionType</em> recognized by <em>provider</em>."
  - type: System.OverflowException
    commentId: T:System.OverflowException
    description: "\n<em>value</em> represents a number that is out of the range of <em>conversionType</em>."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>conversionType</em> is null."
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Convert.ChangeType(System.Object,System.TypeCode,System.IFormatProvider)
  commentId: M:System.Convert.ChangeType(System.Object,System.TypeCode,System.IFormatProvider)
  id: ChangeType(System.Object,System.TypeCode,System.IFormatProvider)
  parent: System.Convert
  langs:
  - csharp
  - vb
  name: ChangeType(Object, TypeCode, IFormatProvider)
  fullName: System.Convert.ChangeType(System.Object, System.TypeCode, System.IFormatProvider)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Convert.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ChangeType
    path: src/mscorlib/src/System/Convert.cs
    startLine: 203
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  summary: Returns an object of the specified type whose value is equivalent to the specified object. A parameter supplies culture-specific formatting information.
  syntax:
    content: public static object ChangeType(object value, TypeCode typeCode, IFormatProvider provider)
    content.vb: Public Shared Function ChangeType(value As Object, typeCode As TypeCode, provider As IFormatProvider) As Object
    parameters:
    - id: value
      type: System.Object
      description: 'An object that implements the <xref href="System.IConvertible" data-throw-if-not-resolved="false"></xref> interface. '
    - id: typeCode
      type: System.TypeCode
      description: 'The type of object to return. '
    - id: provider
      type: System.IFormatProvider
      description: 'An object that supplies culture-specific formatting information. '
    return:
      type: System.Object
      description: An object whose underlying type is <em>typeCode</em> and whose value is equivalent to <em>value</em>.-or- A null reference (Nothing in Visual Basic), if <em>value</em> is null and <em>typeCode</em> is <xref href="System.TypeCode.Empty" data-throw-if-not-resolved="false"></xref>, <xref href="System.TypeCode.String" data-throw-if-not-resolved="false"></xref>, or <xref href="System.TypeCode.Object" data-throw-if-not-resolved="false"></xref>.
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: This conversion is not supported.  -or-<em>value</em> is null and <em>typeCode</em> specifies a value type.-or-<em>value</em> does not implement the <xref href="System.IConvertible" data-throw-if-not-resolved="false"></xref> interface.
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "\n<em>value</em> is not in a format for the <em>typeCode</em> type recognized by <em>provider</em>."
  - type: System.OverflowException
    commentId: T:System.OverflowException
    description: "\n<em>value</em> represents a number that is out of the range of the <em>typeCode</em> type."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<em>typeCode</em> is invalid. "
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Convert.FromBase64CharArray(System.Char[],System.Int32,System.Int32)
  commentId: M:System.Convert.FromBase64CharArray(System.Char[],System.Int32,System.Int32)
  id: FromBase64CharArray(System.Char[],System.Int32,System.Int32)
  parent: System.Convert
  langs:
  - csharp
  - vb
  name: FromBase64CharArray(Char[], Int32, Int32)
  fullName: System.Convert.FromBase64CharArray(System.Char[], System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Convert.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: FromBase64CharArray
    path: src/mscorlib/src/System/Convert.cs
    startLine: 2394
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  summary: Converts a subset of a Unicode character array, which encodes binary data as base-64 digits, to an equivalent 8-bit unsigned integer array. Parameters specify the subset in the input array and the number of elements to convert.
  syntax:
    content: public static byte[] FromBase64CharArray(char[] inArray, int offset, int length)
    content.vb: Public Shared Function FromBase64CharArray(inArray As Char(), offset As Integer, length As Integer) As Byte()
    parameters:
    - id: inArray
      type: System.Char[]
      description: 'A Unicode character array. '
    - id: offset
      type: System.Int32
      description: 'A position within <em>inArray</em>. '
    - id: length
      type: System.Int32
      description: 'The number of elements in <em>inArray</em> to convert. '
    return:
      type: System.Byte[]
      description: An array of 8-bit unsigned integers equivalent to <em>length</em> elements at position <em>offset</em> in <em>inArray</em>.
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>inArray</em> is null. "
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<em>offset</em> or <em>length</em> is less than 0.-or- <em>offset</em> plus <em>length</em> indicates a position not within <em>inArray</em>. "
  - type: System.FormatException
    commentId: T:System.FormatException
    description: 'The length of <em>inArray</em>, ignoring white-space characters, is not zero or a multiple of 4. -or-The format of <em>inArray</em> is invalid. <em>inArray</em> contains a non-base-64 character, more than two padding characters, or a non-white-space character among the padding characters. '
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Convert.FromBase64CharArray(System.Char(), System.Int32, System.Int32)
  name.vb: FromBase64CharArray(Char(), Int32, Int32)
- uid: System.Convert.FromBase64String(System.String)
  commentId: M:System.Convert.FromBase64String(System.String)
  id: FromBase64String(System.String)
  parent: System.Convert
  langs:
  - csharp
  - vb
  name: FromBase64String(String)
  fullName: System.Convert.FromBase64String(System.String)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Convert.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: FromBase64String
    path: src/mscorlib/src/System/Convert.cs
    startLine: 2368
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  summary: Converts the specified string, which encodes binary data as base-64 digits, to an equivalent 8-bit unsigned integer array.
  syntax:
    content: public static byte[] FromBase64String(string s)
    content.vb: Public Shared Function FromBase64String(s As String) As Byte()
    parameters:
    - id: s
      type: System.String
      description: 'The string to convert. '
    return:
      type: System.Byte[]
      description: An array of 8-bit unsigned integers that is equivalent to <em>s</em>.
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>s</em> is null. "
  - type: System.FormatException
    commentId: T:System.FormatException
    description: The length of <em>s</em>, ignoring white-space characters, is not zero or a multiple of 4. -or-The format of <em>s</em> is invalid. <em>s</em> contains a non-base-64 character, more than two padding characters, or a non-white space-character among the padding characters.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Convert.GetTypeCode(System.Object)
  commentId: M:System.Convert.GetTypeCode(System.Object)
  id: GetTypeCode(System.Object)
  parent: System.Convert
  langs:
  - csharp
  - vb
  name: GetTypeCode(Object)
  fullName: System.Convert.GetTypeCode(System.Object)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Convert.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: GetTypeCode
    path: src/mscorlib/src/System/Convert.cs
    startLine: 167
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  summary: Returns the <xref href="System.TypeCode" data-throw-if-not-resolved="false"></xref> for the specified object.
  syntax:
    content: public static TypeCode GetTypeCode(object value)
    content.vb: Public Shared Function GetTypeCode(value As Object) As TypeCode
    parameters:
    - id: value
      type: System.Object
      description: 'An object that implements the <xref href="System.IConvertible" data-throw-if-not-resolved="false"></xref> interface. '
    return:
      type: System.TypeCode
      description: The <xref href="System.TypeCode" data-throw-if-not-resolved="false"></xref> for <em>value</em>, or <xref href="System.TypeCode.Empty" data-throw-if-not-resolved="false"></xref> if <em>value</em> is null.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Convert.ToBase64CharArray(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)
  commentId: M:System.Convert.ToBase64CharArray(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)
  id: ToBase64CharArray(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)
  parent: System.Convert
  langs:
  - csharp
  - vb
  name: ToBase64CharArray(Byte[], Int32, Int32, Char[], Int32)
  fullName: System.Convert.ToBase64CharArray(System.Byte[], System.Int32, System.Int32, System.Char[], System.Int32)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Convert.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToBase64CharArray
    path: src/mscorlib/src/System/Convert.cs
    startLine: 2217
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  summary: Converts a subset of an 8-bit unsigned integer array to an equivalent subset of a Unicode character array encoded with base-64 digits. Parameters specify the subsets as offsets in the input and output arrays, and the number of elements in the input array to convert.
  syntax:
    content: public static int ToBase64CharArray(byte[] inArray, int offsetIn, int length, char[] outArray, int offsetOut)
    content.vb: Public Shared Function ToBase64CharArray(inArray As Byte(), offsetIn As Integer, length As Integer, outArray As Char(), offsetOut As Integer) As Integer
    parameters:
    - id: inArray
      type: System.Byte[]
      description: 'An input array of 8-bit unsigned integers. '
    - id: offsetIn
      type: System.Int32
      description: 'A position within <em>inArray</em>. '
    - id: length
      type: System.Int32
      description: 'The number of elements of <em>inArray</em> to convert. '
    - id: outArray
      type: System.Char[]
      description: 'An output array of Unicode characters. '
    - id: offsetOut
      type: System.Int32
      description: 'A position within <em>outArray</em>. '
    return:
      type: System.Int32
      description: A 32-bit signed integer containing the number of bytes in <em>outArray</em>.
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>inArray</em> or <em>outArray</em> is null. "
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<em>offsetIn</em>, <em>offsetOut</em>, or <em>length</em> is negative.-or- <em>offsetIn</em> plus <em>length</em> is greater than the length of <em>inArray</em>.-or- <em>offsetOut</em> plus the number of elements to return is greater than the length of <em>outArray</em>. "
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Convert.ToBase64CharArray(System.Byte(), System.Int32, System.Int32, System.Char(), System.Int32)
  name.vb: ToBase64CharArray(Byte(), Int32, Int32, Char(), Int32)
- uid: System.Convert.ToBase64String(System.Byte[])
  commentId: M:System.Convert.ToBase64String(System.Byte[])
  id: ToBase64String(System.Byte[])
  parent: System.Convert
  langs:
  - csharp
  - vb
  name: ToBase64String(Byte[])
  fullName: System.Convert.ToBase64String(System.Byte[])
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Convert.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToBase64String
    path: src/mscorlib/src/System/Convert.cs
    startLine: 2155
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  summary: Converts an array of 8-bit unsigned integers to its equivalent string representation that is encoded with base-64 digits.
  syntax:
    content: public static string ToBase64String(byte[] inArray)
    content.vb: Public Shared Function ToBase64String(inArray As Byte()) As String
    parameters:
    - id: inArray
      type: System.Byte[]
      description: 'An array of 8-bit unsigned integers. '
    return:
      type: System.String
      description: The string representation, in base 64, of the contents of <em>inArray</em>.
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>inArray</em> is null. "
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Convert.ToBase64String(System.Byte())
  name.vb: ToBase64String(Byte())
- uid: System.Convert.ToBase64String(System.Byte[],System.Int32,System.Int32)
  commentId: M:System.Convert.ToBase64String(System.Byte[],System.Int32,System.Int32)
  id: ToBase64String(System.Byte[],System.Int32,System.Int32)
  parent: System.Convert
  langs:
  - csharp
  - vb
  name: ToBase64String(Byte[], Int32, Int32)
  fullName: System.Convert.ToBase64String(System.Byte[], System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Convert.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToBase64String
    path: src/mscorlib/src/System/Convert.cs
    startLine: 2174
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  summary: Converts a subset of an array of 8-bit unsigned integers to its equivalent string representation that is encoded with base-64 digits. Parameters specify the subset as an offset in the input array, and the number of elements in the array to convert.
  syntax:
    content: public static string ToBase64String(byte[] inArray, int offset, int length)
    content.vb: Public Shared Function ToBase64String(inArray As Byte(), offset As Integer, length As Integer) As String
    parameters:
    - id: inArray
      type: System.Byte[]
      description: 'An array of 8-bit unsigned integers. '
    - id: offset
      type: System.Int32
      description: 'An offset in <em>inArray</em>. '
    - id: length
      type: System.Int32
      description: 'The number of elements of <em>inArray</em> to convert. '
    return:
      type: System.String
      description: The string representation in base 64 of <em>length</em> elements of <em>inArray</em>, starting at position <em>offset</em>.
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>inArray</em> is null. "
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<em>offset</em> or <em>length</em> is negative.-or- <em>offset</em> plus <em>length</em> is greater than the length of <em>inArray</em>. "
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Convert.ToBase64String(System.Byte(), System.Int32, System.Int32)
  name.vb: ToBase64String(Byte(), Int32, Int32)
- uid: System.Convert.ToBoolean(System.Boolean)
  commentId: M:System.Convert.ToBoolean(System.Boolean)
  id: ToBoolean(System.Boolean)
  parent: System.Convert
  langs:
  - csharp
  - vb
  name: ToBoolean(Boolean)
  fullName: System.Convert.ToBoolean(System.Boolean)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Convert.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToBoolean
    path: src/mscorlib/src/System/Convert.cs
    startLine: 418
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  summary: Returns the specified Boolean value; no actual conversion is performed.
  syntax:
    content: public static bool ToBoolean(bool value)
    content.vb: Public Shared Function ToBoolean(value As Boolean) As Boolean
    parameters:
    - id: value
      type: System.Boolean
      description: 'The Boolean value to return. '
    return:
      type: System.Boolean
      description: "\n<em>value</em> is returned unchanged."
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Convert.ToBoolean(System.Byte)
  commentId: M:System.Convert.ToBoolean(System.Byte)
  id: ToBoolean(System.Byte)
  parent: System.Convert
  langs:
  - csharp
  - vb
  name: ToBoolean(Byte)
  fullName: System.Convert.ToBoolean(System.Byte)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Convert.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToBoolean
    path: src/mscorlib/src/System/Convert.cs
    startLine: 433
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  summary: Converts the value of the specified 8-bit unsigned integer to an equivalent Boolean value.
  syntax:
    content: public static bool ToBoolean(byte value)
    content.vb: Public Shared Function ToBoolean(value As Byte) As Boolean
    parameters:
    - id: value
      type: System.Byte
      description: 'The 8-bit unsigned integer to convert. '
    return:
      type: System.Boolean
      description: true if <em>value</em> is not zero; otherwise, false.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Convert.ToBoolean(System.Decimal)
  commentId: M:System.Convert.ToBoolean(System.Decimal)
  id: ToBoolean(System.Decimal)
  parent: System.Convert
  langs:
  - csharp
  - vb
  name: ToBoolean(Decimal)
  fullName: System.Convert.ToBoolean(System.Decimal)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Convert.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToBoolean
    path: src/mscorlib/src/System/Convert.cs
    startLine: 487
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  summary: Converts the value of the specified decimal number to an equivalent Boolean value.
  syntax:
    content: public static bool ToBoolean(decimal value)
    content.vb: Public Shared Function ToBoolean(value As Decimal) As Boolean
    parameters:
    - id: value
      type: System.Decimal
      description: 'The number to convert. '
    return:
      type: System.Boolean
      description: true if <em>value</em> is not zero; otherwise, false.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Convert.ToBoolean(System.Double)
  commentId: M:System.Convert.ToBoolean(System.Double)
  id: ToBoolean(System.Double)
  parent: System.Convert
  langs:
  - csharp
  - vb
  name: ToBoolean(Double)
  fullName: System.Convert.ToBoolean(System.Double)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Convert.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToBoolean
    path: src/mscorlib/src/System/Convert.cs
    startLine: 482
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  summary: Converts the value of the specified double-precision floating-point number to an equivalent Boolean value.
  syntax:
    content: public static bool ToBoolean(double value)
    content.vb: Public Shared Function ToBoolean(value As Double) As Boolean
    parameters:
    - id: value
      type: System.Double
      description: 'The double-precision floating-point number to convert. '
    return:
      type: System.Boolean
      description: true if <em>value</em> is not zero; otherwise, false.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Convert.ToBoolean(System.Int16)
  commentId: M:System.Convert.ToBoolean(System.Int16)
  id: ToBoolean(System.Int16)
  parent: System.Convert
  langs:
  - csharp
  - vb
  name: ToBoolean(Int16)
  fullName: System.Convert.ToBoolean(System.Int16)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Convert.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToBoolean
    path: src/mscorlib/src/System/Convert.cs
    startLine: 438
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  summary: Converts the value of the specified 16-bit signed integer to an equivalent Boolean value.
  syntax:
    content: public static bool ToBoolean(short value)
    content.vb: Public Shared Function ToBoolean(value As Short) As Boolean
    parameters:
    - id: value
      type: System.Int16
      description: 'The 16-bit signed integer to convert. '
    return:
      type: System.Boolean
      description: true if <em>value</em> is not zero; otherwise, false.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Convert.ToBoolean(System.Int32)
  commentId: M:System.Convert.ToBoolean(System.Int32)
  id: ToBoolean(System.Int32)
  parent: System.Convert
  langs:
  - csharp
  - vb
  name: ToBoolean(Int32)
  fullName: System.Convert.ToBoolean(System.Int32)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Convert.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToBoolean
    path: src/mscorlib/src/System/Convert.cs
    startLine: 447
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  summary: Converts the value of the specified 32-bit signed integer to an equivalent Boolean value.
  syntax:
    content: public static bool ToBoolean(int value)
    content.vb: Public Shared Function ToBoolean(value As Integer) As Boolean
    parameters:
    - id: value
      type: System.Int32
      description: 'The 32-bit signed integer to convert. '
    return:
      type: System.Boolean
      description: true if <em>value</em> is not zero; otherwise, false.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Convert.ToBoolean(System.Int64)
  commentId: M:System.Convert.ToBoolean(System.Int64)
  id: ToBoolean(System.Int64)
  parent: System.Convert
  langs:
  - csharp
  - vb
  name: ToBoolean(Int64)
  fullName: System.Convert.ToBoolean(System.Int64)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Convert.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToBoolean
    path: src/mscorlib/src/System/Convert.cs
    startLine: 456
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  summary: Converts the value of the specified 64-bit signed integer to an equivalent Boolean value.
  syntax:
    content: public static bool ToBoolean(long value)
    content.vb: Public Shared Function ToBoolean(value As Long) As Boolean
    parameters:
    - id: value
      type: System.Int64
      description: 'The 64-bit signed integer to convert. '
    return:
      type: System.Boolean
      description: true if <em>value</em> is not zero; otherwise, false.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Convert.ToBoolean(System.Object)
  commentId: M:System.Convert.ToBoolean(System.Object)
  id: ToBoolean(System.Object)
  parent: System.Convert
  langs:
  - csharp
  - vb
  name: ToBoolean(Object)
  fullName: System.Convert.ToBoolean(System.Object)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Convert.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToBoolean
    path: src/mscorlib/src/System/Convert.cs
    startLine: 409
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  summary: Converts the value of a specified object to an equivalent Boolean value.
  syntax:
    content: public static bool ToBoolean(object value)
    content.vb: Public Shared Function ToBoolean(value As Object) As Boolean
    parameters:
    - id: value
      type: System.Object
      description: 'An object that implements the <xref href="System.IConvertible" data-throw-if-not-resolved="false"></xref> interface, or null. '
    return:
      type: System.Boolean
      description: 'true or false, which reflects the value returned by invoking the <xref href="System.IConvertible.ToBoolean(System.IFormatProvider)" data-throw-if-not-resolved="false"></xref> method for the underlying type of <em>value</em>. If <em>value</em> is null, the method returns false. '
  exceptions:
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "\n<em>value</em> is a string that does not equal <xref href=\"System.Boolean.TrueString\" data-throw-if-not-resolved=\"false\"></xref> or <xref href=\"System.Boolean.FalseString\" data-throw-if-not-resolved=\"false\"></xref>."
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "\n<em>value</em> does not implement the <xref href=\"System.IConvertible\" data-throw-if-not-resolved=\"false\"></xref> interface.-or-The conversion of <em>value</em> to a <xref href=\"System.Boolean\" data-throw-if-not-resolved=\"false\"></xref> is not supported."
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Convert.ToBoolean(System.Object,System.IFormatProvider)
  commentId: M:System.Convert.ToBoolean(System.Object,System.IFormatProvider)
  id: ToBoolean(System.Object,System.IFormatProvider)
  parent: System.Convert
  langs:
  - csharp
  - vb
  name: ToBoolean(Object, IFormatProvider)
  fullName: System.Convert.ToBoolean(System.Object, System.IFormatProvider)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Convert.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToBoolean
    path: src/mscorlib/src/System/Convert.cs
    startLine: 413
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  summary: Converts the value of the specified object to an equivalent Boolean value, using the specified culture-specific formatting information.
  syntax:
    content: public static bool ToBoolean(object value, IFormatProvider provider)
    content.vb: Public Shared Function ToBoolean(value As Object, provider As IFormatProvider) As Boolean
    parameters:
    - id: value
      type: System.Object
      description: 'An object that implements the <xref href="System.IConvertible" data-throw-if-not-resolved="false"></xref> interface, or null. '
    - id: provider
      type: System.IFormatProvider
      description: 'An object that supplies culture-specific formatting information. '
    return:
      type: System.Boolean
      description: true or false, which reflects the value returned by invoking the <xref href="System.IConvertible.ToBoolean(System.IFormatProvider)" data-throw-if-not-resolved="false"></xref> method for the underlying type of <em>value</em>. If <em>value</em> is null, the method returns false.
  exceptions:
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "\n<em>value</em> is a string that does not equal <xref href=\"System.Boolean.TrueString\" data-throw-if-not-resolved=\"false\"></xref> or <xref href=\"System.Boolean.FalseString\" data-throw-if-not-resolved=\"false\"></xref>."
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "\n<em>value</em> does not implement the <xref href=\"System.IConvertible\" data-throw-if-not-resolved=\"false\"></xref> interface.-or-The conversion of <em>value</em> to a <xref href=\"System.Boolean\" data-throw-if-not-resolved=\"false\"></xref> is not supported. "
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Convert.ToBoolean(System.SByte)
  commentId: M:System.Convert.ToBoolean(System.SByte)
  id: ToBoolean(System.SByte)
  parent: System.Convert
  langs:
  - csharp
  - vb
  name: ToBoolean(SByte)
  fullName: System.Convert.ToBoolean(System.SByte)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Convert.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToBoolean
    path: src/mscorlib/src/System/Convert.cs
    startLine: 422
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  summary: Converts the value of the specified 8-bit signed integer to an equivalent Boolean value.
  syntax:
    content: public static bool ToBoolean(sbyte value)
    content.vb: Public Shared Function ToBoolean(value As SByte) As Boolean
    parameters:
    - id: value
      type: System.SByte
      description: 'The 8-bit signed integer to convert. '
    return:
      type: System.Boolean
      description: true if <em>value</em> is not zero; otherwise, false.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Convert.ToBoolean(System.Single)
  commentId: M:System.Convert.ToBoolean(System.Single)
  id: ToBoolean(System.Single)
  parent: System.Convert
  langs:
  - csharp
  - vb
  name: ToBoolean(Single)
  fullName: System.Convert.ToBoolean(System.Single)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Convert.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToBoolean
    path: src/mscorlib/src/System/Convert.cs
    startLine: 477
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  summary: Converts the value of the specified single-precision floating-point number to an equivalent Boolean value.
  syntax:
    content: public static bool ToBoolean(float value)
    content.vb: Public Shared Function ToBoolean(value As Single) As Boolean
    parameters:
    - id: value
      type: System.Single
      description: 'The single-precision floating-point number to convert. '
    return:
      type: System.Boolean
      description: true if <em>value</em> is not zero; otherwise, false.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Convert.ToBoolean(System.String)
  commentId: M:System.Convert.ToBoolean(System.String)
  id: ToBoolean(System.String)
  parent: System.Convert
  langs:
  - csharp
  - vb
  name: ToBoolean(String)
  fullName: System.Convert.ToBoolean(System.String)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Convert.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToBoolean
    path: src/mscorlib/src/System/Convert.cs
    startLine: 465
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  summary: Converts the specified string representation of a logical value to its Boolean equivalent.
  syntax:
    content: public static bool ToBoolean(string value)
    content.vb: Public Shared Function ToBoolean(value As String) As Boolean
    parameters:
    - id: value
      type: System.String
      description: 'A string that contains the value of either <xref href="System.Boolean.TrueString" data-throw-if-not-resolved="false"></xref> or <xref href="System.Boolean.FalseString" data-throw-if-not-resolved="false"></xref>. '
    return:
      type: System.Boolean
      description: true if <em>value</em> equals <xref href="System.Boolean.TrueString" data-throw-if-not-resolved="false"></xref>, or false if <em>value</em> equals <xref href="System.Boolean.FalseString" data-throw-if-not-resolved="false"></xref> or null.
  exceptions:
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "\n<em>value</em> is not equal to <xref href=\"System.Boolean.TrueString\" data-throw-if-not-resolved=\"false\"></xref> or <xref href=\"System.Boolean.FalseString\" data-throw-if-not-resolved=\"false\"></xref>. "
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Convert.ToBoolean(System.String,System.IFormatProvider)
  commentId: M:System.Convert.ToBoolean(System.String,System.IFormatProvider)
  id: ToBoolean(System.String,System.IFormatProvider)
  parent: System.Convert
  langs:
  - csharp
  - vb
  name: ToBoolean(String, IFormatProvider)
  fullName: System.Convert.ToBoolean(System.String, System.IFormatProvider)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Convert.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToBoolean
    path: src/mscorlib/src/System/Convert.cs
    startLine: 471
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  summary: Converts the specified string representation of a logical value to its Boolean equivalent, using the specified culture-specific formatting information.
  syntax:
    content: public static bool ToBoolean(string value, IFormatProvider provider)
    content.vb: Public Shared Function ToBoolean(value As String, provider As IFormatProvider) As Boolean
    parameters:
    - id: value
      type: System.String
      description: 'A string that contains the value of either <xref href="System.Boolean.TrueString" data-throw-if-not-resolved="false"></xref> or <xref href="System.Boolean.FalseString" data-throw-if-not-resolved="false"></xref>. '
    - id: provider
      type: System.IFormatProvider
      description: An object that supplies culture-specific formatting information. This parameter is ignored.
    return:
      type: System.Boolean
      description: true if <em>value</em> equals <xref href="System.Boolean.TrueString" data-throw-if-not-resolved="false"></xref>, or false if <em>value</em> equals <xref href="System.Boolean.FalseString" data-throw-if-not-resolved="false"></xref> or null.
  exceptions:
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "\n<em>value</em> is not equal to <xref href=\"System.Boolean.TrueString\" data-throw-if-not-resolved=\"false\"></xref> or <xref href=\"System.Boolean.FalseString\" data-throw-if-not-resolved=\"false\"></xref>. "
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Convert.ToBoolean(System.UInt16)
  commentId: M:System.Convert.ToBoolean(System.UInt16)
  id: ToBoolean(System.UInt16)
  parent: System.Convert
  langs:
  - csharp
  - vb
  name: ToBoolean(UInt16)
  fullName: System.Convert.ToBoolean(System.UInt16)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Convert.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToBoolean
    path: src/mscorlib/src/System/Convert.cs
    startLine: 442
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  summary: Converts the value of the specified 16-bit unsigned integer to an equivalent Boolean value.
  syntax:
    content: public static bool ToBoolean(ushort value)
    content.vb: Public Shared Function ToBoolean(value As UShort) As Boolean
    parameters:
    - id: value
      type: System.UInt16
      description: 'The 16-bit unsigned integer to convert. '
    return:
      type: System.Boolean
      description: true if <em>value</em> is not zero; otherwise, false.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Convert.ToBoolean(System.UInt32)
  commentId: M:System.Convert.ToBoolean(System.UInt32)
  id: ToBoolean(System.UInt32)
  parent: System.Convert
  langs:
  - csharp
  - vb
  name: ToBoolean(UInt32)
  fullName: System.Convert.ToBoolean(System.UInt32)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Convert.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToBoolean
    path: src/mscorlib/src/System/Convert.cs
    startLine: 451
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  summary: Converts the value of the specified 32-bit unsigned integer to an equivalent Boolean value.
  syntax:
    content: public static bool ToBoolean(uint value)
    content.vb: Public Shared Function ToBoolean(value As UInteger) As Boolean
    parameters:
    - id: value
      type: System.UInt32
      description: 'The 32-bit unsigned integer to convert. '
    return:
      type: System.Boolean
      description: true if <em>value</em> is not zero; otherwise, false.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Convert.ToBoolean(System.UInt64)
  commentId: M:System.Convert.ToBoolean(System.UInt64)
  id: ToBoolean(System.UInt64)
  parent: System.Convert
  langs:
  - csharp
  - vb
  name: ToBoolean(UInt64)
  fullName: System.Convert.ToBoolean(System.UInt64)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Convert.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToBoolean
    path: src/mscorlib/src/System/Convert.cs
    startLine: 460
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  summary: Converts the value of the specified 64-bit unsigned integer to an equivalent Boolean value.
  syntax:
    content: public static bool ToBoolean(ulong value)
    content.vb: Public Shared Function ToBoolean(value As ULong) As Boolean
    parameters:
    - id: value
      type: System.UInt64
      description: 'The 64-bit unsigned integer to convert. '
    return:
      type: System.Boolean
      description: true if <em>value</em> is not zero; otherwise, false.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Convert.ToByte(System.Boolean)
  commentId: M:System.Convert.ToByte(System.Boolean)
  id: ToByte(System.Boolean)
  parent: System.Convert
  langs:
  - csharp
  - vb
  name: ToByte(Boolean)
  fullName: System.Convert.ToByte(System.Boolean)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Convert.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToByte
    path: src/mscorlib/src/System/Convert.cs
    startLine: 740
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  summary: Converts the specified Boolean value to the equivalent 8-bit unsigned integer.
  syntax:
    content: public static byte ToByte(bool value)
    content.vb: Public Shared Function ToByte(value As Boolean) As Byte
    parameters:
    - id: value
      type: System.Boolean
      description: 'The Boolean value to convert. '
    return:
      type: System.Byte
      description: The number 1 if <em>value</em> is true; otherwise, 0.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Convert.ToByte(System.Byte)
  commentId: M:System.Convert.ToByte(System.Byte)
  id: ToByte(System.Byte)
  parent: System.Convert
  langs:
  - csharp
  - vb
  name: ToByte(Byte)
  fullName: System.Convert.ToByte(System.Byte)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Convert.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToByte
    path: src/mscorlib/src/System/Convert.cs
    startLine: 744
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  summary: Returns the specified 8-bit unsigned integer; no actual conversion is performed.
  syntax:
    content: public static byte ToByte(byte value)
    content.vb: Public Shared Function ToByte(value As Byte) As Byte
    parameters:
    - id: value
      type: System.Byte
      description: 'The 8-bit unsigned integer to return. '
    return:
      type: System.Byte
      description: "\n<em>value</em> is returned unchanged."
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Convert.ToByte(System.Char)
  commentId: M:System.Convert.ToByte(System.Char)
  id: ToByte(System.Char)
  parent: System.Convert
  langs:
  - csharp
  - vb
  name: ToByte(Char)
  fullName: System.Convert.ToByte(System.Char)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Convert.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToByte
    path: src/mscorlib/src/System/Convert.cs
    startLine: 748
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  summary: Converts the value of the specified Unicode character to the equivalent 8-bit unsigned integer.
  syntax:
    content: public static byte ToByte(char value)
    content.vb: Public Shared Function ToByte(value As Char) As Byte
    parameters:
    - id: value
      type: System.Char
      description: 'The Unicode character to convert. '
    return:
      type: System.Byte
      description: An 8-bit unsigned integer that is equivalent to <em>value</em>.
  exceptions:
  - type: System.OverflowException
    commentId: T:System.OverflowException
    description: "\n<em>value</em> represents a number that is greater than <xref href=\"System.Byte.MaxValue\" data-throw-if-not-resolved=\"false\"></xref>. "
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Convert.ToByte(System.Decimal)
  commentId: M:System.Convert.ToByte(System.Decimal)
  id: ToByte(System.Decimal)
  parent: System.Convert
  langs:
  - csharp
  - vb
  name: ToByte(Decimal)
  fullName: System.Convert.ToByte(System.Decimal)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Convert.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToByte
    path: src/mscorlib/src/System/Convert.cs
    startLine: 808
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  summary: Converts the value of the specified decimal number to an equivalent 8-bit unsigned integer.
  syntax:
    content: public static byte ToByte(decimal value)
    content.vb: Public Shared Function ToByte(value As Decimal) As Byte
    parameters:
    - id: value
      type: System.Decimal
      description: 'The number to convert. '
    return:
      type: System.Byte
      description: "\n<em>value</em>, rounded to the nearest 8-bit unsigned integer. If <em>value</em> is halfway between two whole numbers, the even number is returned; that is, 4.5 is converted to 4, and 5.5 is converted to 6."
  exceptions:
  - type: System.OverflowException
    commentId: T:System.OverflowException
    description: "\n<em>value</em> is greater than <xref href=\"System.Byte.MaxValue\" data-throw-if-not-resolved=\"false\"></xref> or less than <xref href=\"System.Byte.MinValue\" data-throw-if-not-resolved=\"false\"></xref>. "
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Convert.ToByte(System.Double)
  commentId: M:System.Convert.ToByte(System.Double)
  id: ToByte(System.Double)
  parent: System.Convert
  langs:
  - csharp
  - vb
  name: ToByte(Double)
  fullName: System.Convert.ToByte(System.Double)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Convert.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToByte
    path: src/mscorlib/src/System/Convert.cs
    startLine: 804
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  summary: Converts the value of the specified double-precision floating-point number to an equivalent 8-bit unsigned integer.
  syntax:
    content: public static byte ToByte(double value)
    content.vb: Public Shared Function ToByte(value As Double) As Byte
    parameters:
    - id: value
      type: System.Double
      description: 'The double-precision floating-point number to convert. '
    return:
      type: System.Byte
      description: "\n<em>value</em>, rounded to the nearest 8-bit unsigned integer. If <em>value</em> is halfway between two whole numbers, the even number is returned; that is, 4.5 is converted to 4, and 5.5 is converted to 6."
  exceptions:
  - type: System.OverflowException
    commentId: T:System.OverflowException
    description: "\n<em>value</em> is greater than <xref href=\"System.Byte.MaxValue\" data-throw-if-not-resolved=\"false\"></xref> or less than <xref href=\"System.Byte.MinValue\" data-throw-if-not-resolved=\"false\"></xref>. "
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Convert.ToByte(System.Int16)
  commentId: M:System.Convert.ToByte(System.Int16)
  id: ToByte(System.Int16)
  parent: System.Convert
  langs:
  - csharp
  - vb
  name: ToByte(Int16)
  fullName: System.Convert.ToByte(System.Int16)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Convert.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToByte
    path: src/mscorlib/src/System/Convert.cs
    startLine: 761
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  summary: Converts the value of the specified 16-bit signed integer to an equivalent 8-bit unsigned integer.
  syntax:
    content: public static byte ToByte(short value)
    content.vb: Public Shared Function ToByte(value As Short) As Byte
    parameters:
    - id: value
      type: System.Int16
      description: 'The 16-bit signed integer to convert. '
    return:
      type: System.Byte
      description: An 8-bit unsigned integer that is equivalent to <em>value</em>.
  exceptions:
  - type: System.OverflowException
    commentId: T:System.OverflowException
    description: "\n<em>value</em> is less than <xref href=\"System.Byte.MinValue\" data-throw-if-not-resolved=\"false\"></xref> or greater than <xref href=\"System.Byte.MaxValue\" data-throw-if-not-resolved=\"false\"></xref>. "
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Convert.ToByte(System.Int32)
  commentId: M:System.Convert.ToByte(System.Int32)
  id: ToByte(System.Int32)
  parent: System.Convert
  langs:
  - csharp
  - vb
  name: ToByte(Int32)
  fullName: System.Convert.ToByte(System.Int32)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Convert.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToByte
    path: src/mscorlib/src/System/Convert.cs
    startLine: 774
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  summary: Converts the value of the specified 32-bit signed integer to an equivalent 8-bit unsigned integer.
  syntax:
    content: public static byte ToByte(int value)
    content.vb: Public Shared Function ToByte(value As Integer) As Byte
    parameters:
    - id: value
      type: System.Int32
      description: 'The 32-bit signed integer to convert. '
    return:
      type: System.Byte
      description: An 8-bit unsigned integer that is equivalent to <em>value</em>.
  exceptions:
  - type: System.OverflowException
    commentId: T:System.OverflowException
    description: "\n<em>value</em> is less than <xref href=\"System.Byte.MinValue\" data-throw-if-not-resolved=\"false\"></xref> or greater than <xref href=\"System.Byte.MaxValue\" data-throw-if-not-resolved=\"false\"></xref>. "
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Convert.ToByte(System.Int64)
  commentId: M:System.Convert.ToByte(System.Int64)
  id: ToByte(System.Int64)
  parent: System.Convert
  langs:
  - csharp
  - vb
  name: ToByte(Int64)
  fullName: System.Convert.ToByte(System.Int64)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Convert.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToByte
    path: src/mscorlib/src/System/Convert.cs
    startLine: 787
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  summary: Converts the value of the specified 64-bit signed integer to an equivalent 8-bit unsigned integer.
  syntax:
    content: public static byte ToByte(long value)
    content.vb: Public Shared Function ToByte(value As Long) As Byte
    parameters:
    - id: value
      type: System.Int64
      description: 'The 64-bit signed integer to convert. '
    return:
      type: System.Byte
      description: An 8-bit unsigned integer that is equivalent to <em>value</em>.
  exceptions:
  - type: System.OverflowException
    commentId: T:System.OverflowException
    description: "\n<em>value</em> is less than <xref href=\"System.Byte.MinValue\" data-throw-if-not-resolved=\"false\"></xref> or greater than <xref href=\"System.Byte.MaxValue\" data-throw-if-not-resolved=\"false\"></xref>. "
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Convert.ToByte(System.Object)
  commentId: M:System.Convert.ToByte(System.Object)
  id: ToByte(System.Object)
  parent: System.Convert
  langs:
  - csharp
  - vb
  name: ToByte(Object)
  fullName: System.Convert.ToByte(System.Object)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Convert.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToByte
    path: src/mscorlib/src/System/Convert.cs
    startLine: 732
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  summary: Converts the value of the specified object to an 8-bit unsigned integer.
  syntax:
    content: public static byte ToByte(object value)
    content.vb: Public Shared Function ToByte(value As Object) As Byte
    parameters:
    - id: value
      type: System.Object
      description: 'An object that implements the <xref href="System.IConvertible" data-throw-if-not-resolved="false"></xref> interface, or null. '
    return:
      type: System.Byte
      description: An 8-bit unsigned integer that is equivalent to <em>value</em>, or zero if <em>value</em> is null.
  exceptions:
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "\n<em>value</em> is not in the property format for a <xref href=\"System.Byte\" data-throw-if-not-resolved=\"false\"></xref> value."
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "\n<em>value</em> does not implement <xref href=\"System.IConvertible\" data-throw-if-not-resolved=\"false\"></xref>. -or-Conversion from <em>value</em> to the <xref href=\"System.Byte\" data-throw-if-not-resolved=\"false\"></xref> type is not supported."
  - type: System.OverflowException
    commentId: T:System.OverflowException
    description: "\n<em>value</em> represents a number that is less than <xref href=\"System.Byte.MinValue\" data-throw-if-not-resolved=\"false\"></xref> or greater than <xref href=\"System.Byte.MaxValue\" data-throw-if-not-resolved=\"false\"></xref>."
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Convert.ToByte(System.Object,System.IFormatProvider)
  commentId: M:System.Convert.ToByte(System.Object,System.IFormatProvider)
  id: ToByte(System.Object,System.IFormatProvider)
  parent: System.Convert
  langs:
  - csharp
  - vb
  name: ToByte(Object, IFormatProvider)
  fullName: System.Convert.ToByte(System.Object, System.IFormatProvider)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Convert.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToByte
    path: src/mscorlib/src/System/Convert.cs
    startLine: 736
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  summary: Converts the value of the specified object to an 8-bit unsigned integer, using the specified culture-specific formatting information.
  syntax:
    content: public static byte ToByte(object value, IFormatProvider provider)
    content.vb: Public Shared Function ToByte(value As Object, provider As IFormatProvider) As Byte
    parameters:
    - id: value
      type: System.Object
      description: 'An object that implements the <xref href="System.IConvertible" data-throw-if-not-resolved="false"></xref> interface. '
    - id: provider
      type: System.IFormatProvider
      description: 'An object that supplies culture-specific formatting information. '
    return:
      type: System.Byte
      description: An 8-bit unsigned integer that is equivalent to <em>value</em>, or zero if <em>value</em> is null.
  exceptions:
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "\n<em>value</em> is not in the property format for a <xref href=\"System.Byte\" data-throw-if-not-resolved=\"false\"></xref> value."
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "\n<em>value</em> does not implement <xref href=\"System.IConvertible\" data-throw-if-not-resolved=\"false\"></xref>. -or-Conversion from <em>value</em> to the <xref href=\"System.Byte\" data-throw-if-not-resolved=\"false\"></xref> type is not supported."
  - type: System.OverflowException
    commentId: T:System.OverflowException
    description: "\n<em>value</em> represents a number that is less than <xref href=\"System.Byte.MinValue\" data-throw-if-not-resolved=\"false\"></xref> or greater than <xref href=\"System.Byte.MaxValue\" data-throw-if-not-resolved=\"false\"></xref>."
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Convert.ToByte(System.SByte)
  commentId: M:System.Convert.ToByte(System.SByte)
  id: ToByte(System.SByte)
  parent: System.Convert
  langs:
  - csharp
  - vb
  name: ToByte(SByte)
  fullName: System.Convert.ToByte(System.SByte)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Convert.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToByte
    path: src/mscorlib/src/System/Convert.cs
    startLine: 754
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  summary: Converts the value of the specified 8-bit signed integer to an equivalent 8-bit unsigned integer.
  syntax:
    content: public static byte ToByte(sbyte value)
    content.vb: Public Shared Function ToByte(value As SByte) As Byte
    parameters:
    - id: value
      type: System.SByte
      description: 'The 8-bit signed integer to be converted. '
    return:
      type: System.Byte
      description: An 8-bit unsigned integer that is equivalent to <em>value</em>.
  exceptions:
  - type: System.OverflowException
    commentId: T:System.OverflowException
    description: "\n<em>value</em> is less than <xref href=\"System.Byte.MinValue\" data-throw-if-not-resolved=\"false\"></xref>. "
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Convert.ToByte(System.Single)
  commentId: M:System.Convert.ToByte(System.Single)
  id: ToByte(System.Single)
  parent: System.Convert
  langs:
  - csharp
  - vb
  name: ToByte(Single)
  fullName: System.Convert.ToByte(System.Single)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Convert.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToByte
    path: src/mscorlib/src/System/Convert.cs
    startLine: 800
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  summary: Converts the value of the specified single-precision floating-point number to an equivalent 8-bit unsigned integer.
  syntax:
    content: public static byte ToByte(float value)
    content.vb: Public Shared Function ToByte(value As Single) As Byte
    parameters:
    - id: value
      type: System.Single
      description: 'A single-precision floating-point number. '
    return:
      type: System.Byte
      description: "\n<em>value</em>, rounded to the nearest 8-bit unsigned integer. If <em>value</em> is halfway between two whole numbers, the even number is returned; that is, 4.5 is converted to 4, and 5.5 is converted to 6."
  exceptions:
  - type: System.OverflowException
    commentId: T:System.OverflowException
    description: "\n<em>value</em> is greater than <xref href=\"System.Byte.MaxValue\" data-throw-if-not-resolved=\"false\"></xref> or less than <xref href=\"System.Byte.MinValue\" data-throw-if-not-resolved=\"false\"></xref>. "
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Convert.ToByte(System.String)
  commentId: M:System.Convert.ToByte(System.String)
  id: ToByte(System.String)
  parent: System.Convert
  langs:
  - csharp
  - vb
  name: ToByte(String)
  fullName: System.Convert.ToByte(System.String)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Convert.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToByte
    path: src/mscorlib/src/System/Convert.cs
    startLine: 812
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  summary: Converts the specified string representation of a number to an equivalent 8-bit unsigned integer.
  syntax:
    content: public static byte ToByte(string value)
    content.vb: Public Shared Function ToByte(value As String) As Byte
    parameters:
    - id: value
      type: System.String
      description: 'A string that contains the number to convert. '
    return:
      type: System.Byte
      description: An 8-bit unsigned integer that is equivalent to <em>value</em>, or zero if <em>value</em> is null.
  exceptions:
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "\n<em>value</em> does not consist of an optional sign followed by a sequence of digits (0 through 9). "
  - type: System.OverflowException
    commentId: T:System.OverflowException
    description: "\n<em>value</em> represents a number that is less than <xref href=\"System.Byte.MinValue\" data-throw-if-not-resolved=\"false\"></xref> or greater than <xref href=\"System.Byte.MaxValue\" data-throw-if-not-resolved=\"false\"></xref>. "
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Convert.ToByte(System.String,System.IFormatProvider)
  commentId: M:System.Convert.ToByte(System.String,System.IFormatProvider)
  id: ToByte(System.String,System.IFormatProvider)
  parent: System.Convert
  langs:
  - csharp
  - vb
  name: ToByte(String, IFormatProvider)
  fullName: System.Convert.ToByte(System.String, System.IFormatProvider)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Convert.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToByte
    path: src/mscorlib/src/System/Convert.cs
    startLine: 818
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  summary: Converts the specified string representation of a number to an equivalent 8-bit unsigned integer, using specified culture-specific formatting information.
  syntax:
    content: public static byte ToByte(string value, IFormatProvider provider)
    content.vb: Public Shared Function ToByte(value As String, provider As IFormatProvider) As Byte
    parameters:
    - id: value
      type: System.String
      description: 'A string that contains the number to convert. '
    - id: provider
      type: System.IFormatProvider
      description: 'An object that supplies culture-specific formatting information. '
    return:
      type: System.Byte
      description: An 8-bit unsigned integer that is equivalent to <em>value</em>, or zero if <em>value</em> is null.
  exceptions:
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "\n<em>value</em> does not consist of an optional sign followed by a sequence of digits (0 through 9). "
  - type: System.OverflowException
    commentId: T:System.OverflowException
    description: "\n<em>value</em> represents a number that is less than <xref href=\"System.Byte.MinValue\" data-throw-if-not-resolved=\"false\"></xref> or greater than <xref href=\"System.Byte.MaxValue\" data-throw-if-not-resolved=\"false\"></xref>. "
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Convert.ToByte(System.String,System.Int32)
  commentId: M:System.Convert.ToByte(System.String,System.Int32)
  id: ToByte(System.String,System.Int32)
  parent: System.Convert
  langs:
  - csharp
  - vb
  name: ToByte(String, Int32)
  fullName: System.Convert.ToByte(System.String, System.Int32)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Convert.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToByte
    path: src/mscorlib/src/System/Convert.cs
    startLine: 2001
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  summary: Converts the string representation of a number in a specified base to an equivalent 8-bit unsigned integer.
  syntax:
    content: public static byte ToByte(string value, int fromBase)
    content.vb: Public Shared Function ToByte(value As String, fromBase As Integer) As Byte
    parameters:
    - id: value
      type: System.String
      description: 'A string that contains the number to convert. '
    - id: fromBase
      type: System.Int32
      description: 'The base of the number in <em>value</em>, which must be 2, 8, 10, or 16. '
    return:
      type: System.Byte
      description: An 8-bit unsigned integer that is equivalent to the number in <em>value</em>, or 0 (zero) if <em>value</em> is null.
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<em>fromBase</em> is not 2, 8, 10, or 16. -or-<em>value</em>, which represents a non-base 10 unsigned number, is prefixed with a negative sign. "
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<em>value</em> is <xref href=\"System.String.Empty\" data-throw-if-not-resolved=\"false\"></xref>. "
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "\n<em>value</em> contains a character that is not a valid digit in the base specified by <em>fromBase</em>. The exception message indicates that there are no digits to convert if the first character in <em>value</em> is invalid; otherwise, the message indicates that <em>value</em> contains invalid trailing characters."
  - type: System.OverflowException
    commentId: T:System.OverflowException
    description: "\n<em>value</em>, which represents a base 10 unsigned number, is prefixed with a negative sign.-or-<em>value</em> represents a number that is less than <xref href=\"System.Byte.MinValue\" data-throw-if-not-resolved=\"false\"></xref> or greater than <xref href=\"System.Byte.MaxValue\" data-throw-if-not-resolved=\"false\"></xref>."
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Convert.ToByte(System.UInt16)
  commentId: M:System.Convert.ToByte(System.UInt16)
  id: ToByte(System.UInt16)
  parent: System.Convert
  langs:
  - csharp
  - vb
  name: ToByte(UInt16)
  fullName: System.Convert.ToByte(System.UInt16)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Convert.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToByte
    path: src/mscorlib/src/System/Convert.cs
    startLine: 767
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  summary: Converts the value of the specified 16-bit unsigned integer to an equivalent 8-bit unsigned integer.
  syntax:
    content: public static byte ToByte(ushort value)
    content.vb: Public Shared Function ToByte(value As UShort) As Byte
    parameters:
    - id: value
      type: System.UInt16
      description: 'The 16-bit unsigned integer to convert. '
    return:
      type: System.Byte
      description: An 8-bit unsigned integer that is equivalent to <em>value</em>.
  exceptions:
  - type: System.OverflowException
    commentId: T:System.OverflowException
    description: "\n<em>value</em> is greater than <xref href=\"System.Byte.MaxValue\" data-throw-if-not-resolved=\"false\"></xref>. "
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Convert.ToByte(System.UInt32)
  commentId: M:System.Convert.ToByte(System.UInt32)
  id: ToByte(System.UInt32)
  parent: System.Convert
  langs:
  - csharp
  - vb
  name: ToByte(UInt32)
  fullName: System.Convert.ToByte(System.UInt32)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Convert.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToByte
    path: src/mscorlib/src/System/Convert.cs
    startLine: 780
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  summary: Converts the value of the specified 32-bit unsigned integer to an equivalent 8-bit unsigned integer.
  syntax:
    content: public static byte ToByte(uint value)
    content.vb: Public Shared Function ToByte(value As UInteger) As Byte
    parameters:
    - id: value
      type: System.UInt32
      description: 'The 32-bit unsigned integer to convert. '
    return:
      type: System.Byte
      description: An 8-bit unsigned integer that is equivalent to <em>value</em>.
  exceptions:
  - type: System.OverflowException
    commentId: T:System.OverflowException
    description: "\n<em>value</em> is greater than <xref href=\"System.Byte.MaxValue\" data-throw-if-not-resolved=\"false\"></xref>. "
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Convert.ToByte(System.UInt64)
  commentId: M:System.Convert.ToByte(System.UInt64)
  id: ToByte(System.UInt64)
  parent: System.Convert
  langs:
  - csharp
  - vb
  name: ToByte(UInt64)
  fullName: System.Convert.ToByte(System.UInt64)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Convert.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToByte
    path: src/mscorlib/src/System/Convert.cs
    startLine: 793
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  summary: Converts the value of the specified 64-bit unsigned integer to an equivalent 8-bit unsigned integer.
  syntax:
    content: public static byte ToByte(ulong value)
    content.vb: Public Shared Function ToByte(value As ULong) As Byte
    parameters:
    - id: value
      type: System.UInt64
      description: 'The 64-bit unsigned integer to convert. '
    return:
      type: System.Byte
      description: An 8-bit unsigned integer that is equivalent to <em>value</em>.
  exceptions:
  - type: System.OverflowException
    commentId: T:System.OverflowException
    description: "\n<em>value</em> is greater than <xref href=\"System.Byte.MaxValue\" data-throw-if-not-resolved=\"false\"></xref>. "
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Convert.ToChar(System.Byte)
  commentId: M:System.Convert.ToChar(System.Byte)
  id: ToChar(System.Byte)
  parent: System.Convert
  langs:
  - csharp
  - vb
  name: ToChar(Byte)
  fullName: System.Convert.ToChar(System.Byte)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Convert.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToChar
    path: src/mscorlib/src/System/Convert.cs
    startLine: 526
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  summary: Converts the value of the specified 8-bit unsigned integer to its equivalent Unicode character.
  syntax:
    content: public static char ToChar(byte value)
    content.vb: Public Shared Function ToChar(value As Byte) As Char
    parameters:
    - id: value
      type: System.Byte
      description: 'The 8-bit unsigned integer to convert. '
    return:
      type: System.Char
      description: A Unicode character that is equivalent to <em>value</em>.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Convert.ToChar(System.Int16)
  commentId: M:System.Convert.ToChar(System.Int16)
  id: ToChar(System.Int16)
  parent: System.Convert
  langs:
  - csharp
  - vb
  name: ToChar(Int16)
  fullName: System.Convert.ToChar(System.Int16)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Convert.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToChar
    path: src/mscorlib/src/System/Convert.cs
    startLine: 530
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  summary: Converts the value of the specified 16-bit signed integer to its equivalent Unicode character.
  syntax:
    content: public static char ToChar(short value)
    content.vb: Public Shared Function ToChar(value As Short) As Char
    parameters:
    - id: value
      type: System.Int16
      description: 'The 16-bit signed integer to convert. '
    return:
      type: System.Char
      description: A Unicode character that is equivalent to <em>value</em>.
  exceptions:
  - type: System.OverflowException
    commentId: T:System.OverflowException
    description: "\n<em>value</em> is less than <xref href=\"System.Char.MinValue\" data-throw-if-not-resolved=\"false\"></xref>. "
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Convert.ToChar(System.Int32)
  commentId: M:System.Convert.ToChar(System.Int32)
  id: ToChar(System.Int32)
  parent: System.Convert
  langs:
  - csharp
  - vb
  name: ToChar(Int32)
  fullName: System.Convert.ToChar(System.Int32)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Convert.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToChar
    path: src/mscorlib/src/System/Convert.cs
    startLine: 541
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  summary: Converts the value of the specified 32-bit signed integer to its equivalent Unicode character.
  syntax:
    content: public static char ToChar(int value)
    content.vb: Public Shared Function ToChar(value As Integer) As Char
    parameters:
    - id: value
      type: System.Int32
      description: 'The 32-bit signed integer to convert. '
    return:
      type: System.Char
      description: A Unicode character that is equivalent to <em>value</em>.
  exceptions:
  - type: System.OverflowException
    commentId: T:System.OverflowException
    description: "\n<em>value</em> is less than <xref href=\"System.Char.MinValue\" data-throw-if-not-resolved=\"false\"></xref> or greater than <xref href=\"System.Char.MaxValue\" data-throw-if-not-resolved=\"false\"></xref>. "
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Convert.ToChar(System.Int64)
  commentId: M:System.Convert.ToChar(System.Int64)
  id: ToChar(System.Int64)
  parent: System.Convert
  langs:
  - csharp
  - vb
  name: ToChar(Int64)
  fullName: System.Convert.ToChar(System.Int64)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Convert.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToChar
    path: src/mscorlib/src/System/Convert.cs
    startLine: 554
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  summary: Converts the value of the specified 64-bit signed integer to its equivalent Unicode character.
  syntax:
    content: public static char ToChar(long value)
    content.vb: Public Shared Function ToChar(value As Long) As Char
    parameters:
    - id: value
      type: System.Int64
      description: 'The 64-bit signed integer to convert. '
    return:
      type: System.Char
      description: A Unicode character that is equivalent to <em>value</em>.
  exceptions:
  - type: System.OverflowException
    commentId: T:System.OverflowException
    description: "\n<em>value</em> is less than <xref href=\"System.Char.MinValue\" data-throw-if-not-resolved=\"false\"></xref> or greater than <xref href=\"System.Char.MaxValue\" data-throw-if-not-resolved=\"false\"></xref>. "
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Convert.ToChar(System.Object)
  commentId: M:System.Convert.ToChar(System.Object)
  id: ToChar(System.Object)
  parent: System.Convert
  langs:
  - csharp
  - vb
  name: ToChar(Object)
  fullName: System.Convert.ToChar(System.Object)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Convert.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToChar
    path: src/mscorlib/src/System/Convert.cs
    startLine: 503
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  summary: Converts the value of the specified object to a Unicode character.
  syntax:
    content: public static char ToChar(object value)
    content.vb: Public Shared Function ToChar(value As Object) As Char
    parameters:
    - id: value
      type: System.Object
      description: 'An object that implements the <xref href="System.IConvertible" data-throw-if-not-resolved="false"></xref> interface. '
    return:
      type: System.Char
      description: A Unicode character that is equivalent to value, or <xref href="System.Char.MinValue" data-throw-if-not-resolved="false"></xref> if <em>value</em> is null.
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>value</em> is a null string."
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "\n<em>value</em> does not implement the <xref href=\"System.IConvertible\" data-throw-if-not-resolved=\"false\"></xref> interface.-or-The conversion of <em>value</em> to a <xref href=\"System.Char\" data-throw-if-not-resolved=\"false\"></xref> is not supported. "
  - type: System.OverflowException
    commentId: T:System.OverflowException
    description: "\n<em>value</em> is less than <xref href=\"System.Char.MinValue\" data-throw-if-not-resolved=\"false\"></xref> or greater than <xref href=\"System.Char.MaxValue\" data-throw-if-not-resolved=\"false\"></xref>."
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Convert.ToChar(System.Object,System.IFormatProvider)
  commentId: M:System.Convert.ToChar(System.Object,System.IFormatProvider)
  id: ToChar(System.Object,System.IFormatProvider)
  parent: System.Convert
  langs:
  - csharp
  - vb
  name: ToChar(Object, IFormatProvider)
  fullName: System.Convert.ToChar(System.Object, System.IFormatProvider)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Convert.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToChar
    path: src/mscorlib/src/System/Convert.cs
    startLine: 507
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  summary: Converts the value of the specified object to its equivalent Unicode character, using the specified culture-specific formatting information.
  syntax:
    content: public static char ToChar(object value, IFormatProvider provider)
    content.vb: Public Shared Function ToChar(value As Object, provider As IFormatProvider) As Char
    parameters:
    - id: value
      type: System.Object
      description: 'An object that implements the <xref href="System.IConvertible" data-throw-if-not-resolved="false"></xref> interface. '
    - id: provider
      type: System.IFormatProvider
      description: 'An object that supplies culture-specific formatting information. '
    return:
      type: System.Char
      description: A Unicode character that is equivalent to <em>value</em>, or <xref href="System.Char.MinValue" data-throw-if-not-resolved="false"></xref> if <em>value</em> is null.
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>value</em> is a null string."
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "\n<em>value</em> does not implement the <xref href=\"System.IConvertible\" data-throw-if-not-resolved=\"false\"></xref> interface. -or-The conversion of <em>value</em> to a <xref href=\"System.Char\" data-throw-if-not-resolved=\"false\"></xref> is not supported."
  - type: System.OverflowException
    commentId: T:System.OverflowException
    description: "\n<em>value</em> is less than <xref href=\"System.Char.MinValue\" data-throw-if-not-resolved=\"false\"></xref> or greater than <xref href=\"System.Char.MaxValue\" data-throw-if-not-resolved=\"false\"></xref>."
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Convert.ToChar(System.SByte)
  commentId: M:System.Convert.ToChar(System.SByte)
  id: ToChar(System.SByte)
  parent: System.Convert
  langs:
  - csharp
  - vb
  name: ToChar(SByte)
  fullName: System.Convert.ToChar(System.SByte)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Convert.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToChar
    path: src/mscorlib/src/System/Convert.cs
    startLine: 519
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  summary: Converts the value of the specified 8-bit signed integer to its equivalent Unicode character.
  syntax:
    content: public static char ToChar(sbyte value)
    content.vb: Public Shared Function ToChar(value As SByte) As Char
    parameters:
    - id: value
      type: System.SByte
      description: 'The 8-bit signed integer to convert. '
    return:
      type: System.Char
      description: A Unicode character that is equivalent to <em>value</em>.
  exceptions:
  - type: System.OverflowException
    commentId: T:System.OverflowException
    description: "\n<em>value</em> is less than <xref href=\"System.Char.MinValue\" data-throw-if-not-resolved=\"false\"></xref>. "
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Convert.ToChar(System.String)
  commentId: M:System.Convert.ToChar(System.String)
  id: ToChar(System.String)
  parent: System.Convert
  langs:
  - csharp
  - vb
  name: ToChar(String)
  fullName: System.Convert.ToChar(System.String)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Convert.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToChar
    path: src/mscorlib/src/System/Convert.cs
    startLine: 571
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  summary: Converts the first character of a specified string to a Unicode character.
  syntax:
    content: public static char ToChar(string value)
    content.vb: Public Shared Function ToChar(value As String) As Char
    parameters:
    - id: value
      type: System.String
      description: 'A string of length 1. '
    return:
      type: System.Char
      description: A Unicode character that is equivalent to the first and only character in <em>value</em>.
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>value</em> is null. "
  - type: System.FormatException
    commentId: T:System.FormatException
    description: 'The length of <em>value</em> is not 1. '
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Convert.ToChar(System.String,System.IFormatProvider)
  commentId: M:System.Convert.ToChar(System.String,System.IFormatProvider)
  id: ToChar(System.String,System.IFormatProvider)
  parent: System.Convert
  langs:
  - csharp
  - vb
  name: ToChar(String, IFormatProvider)
  fullName: System.Convert.ToChar(System.String, System.IFormatProvider)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Convert.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToChar
    path: src/mscorlib/src/System/Convert.cs
    startLine: 575
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  summary: Converts the first character of a specified string to a Unicode character, using specified culture-specific formatting information.
  syntax:
    content: public static char ToChar(string value, IFormatProvider provider)
    content.vb: Public Shared Function ToChar(value As String, provider As IFormatProvider) As Char
    parameters:
    - id: value
      type: System.String
      description: 'A string of length 1 or null. '
    - id: provider
      type: System.IFormatProvider
      description: An object that supplies culture-specific formatting information. This parameter is ignored.
    return:
      type: System.Char
      description: A Unicode character that is equivalent to the first and only character in <em>value</em>.
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>value</em> is null. "
  - type: System.FormatException
    commentId: T:System.FormatException
    description: 'The length of <em>value</em> is not 1. '
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Convert.ToChar(System.UInt16)
  commentId: M:System.Convert.ToChar(System.UInt16)
  id: ToChar(System.UInt16)
  parent: System.Convert
  langs:
  - csharp
  - vb
  name: ToChar(UInt16)
  fullName: System.Convert.ToChar(System.UInt16)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Convert.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToChar
    path: src/mscorlib/src/System/Convert.cs
    startLine: 536
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  summary: Converts the value of the specified 16-bit unsigned integer to its equivalent Unicode character.
  syntax:
    content: public static char ToChar(ushort value)
    content.vb: Public Shared Function ToChar(value As UShort) As Char
    parameters:
    - id: value
      type: System.UInt16
      description: 'The 16-bit unsigned integer to convert. '
    return:
      type: System.Char
      description: A Unicode character that is equivalent to <em>value</em>.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Convert.ToChar(System.UInt32)
  commentId: M:System.Convert.ToChar(System.UInt32)
  id: ToChar(System.UInt32)
  parent: System.Convert
  langs:
  - csharp
  - vb
  name: ToChar(UInt32)
  fullName: System.Convert.ToChar(System.UInt32)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Convert.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToChar
    path: src/mscorlib/src/System/Convert.cs
    startLine: 547
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  summary: Converts the value of the specified 32-bit unsigned integer to its equivalent Unicode character.
  syntax:
    content: public static char ToChar(uint value)
    content.vb: Public Shared Function ToChar(value As UInteger) As Char
    parameters:
    - id: value
      type: System.UInt32
      description: 'The 32-bit unsigned integer to convert. '
    return:
      type: System.Char
      description: A Unicode character that is equivalent to <em>value</em>.
  exceptions:
  - type: System.OverflowException
    commentId: T:System.OverflowException
    description: "\n<em>value</em> is greater than <xref href=\"System.Char.MaxValue\" data-throw-if-not-resolved=\"false\"></xref>. "
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Convert.ToChar(System.UInt64)
  commentId: M:System.Convert.ToChar(System.UInt64)
  id: ToChar(System.UInt64)
  parent: System.Convert
  langs:
  - csharp
  - vb
  name: ToChar(UInt64)
  fullName: System.Convert.ToChar(System.UInt64)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Convert.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToChar
    path: src/mscorlib/src/System/Convert.cs
    startLine: 560
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  summary: Converts the value of the specified 64-bit unsigned integer to its equivalent Unicode character.
  syntax:
    content: public static char ToChar(ulong value)
    content.vb: Public Shared Function ToChar(value As ULong) As Char
    parameters:
    - id: value
      type: System.UInt64
      description: 'The 64-bit unsigned integer to convert. '
    return:
      type: System.Char
      description: A Unicode character that is equivalent to <em>value</em>.
  exceptions:
  - type: System.OverflowException
    commentId: T:System.OverflowException
    description: "\n<em>value</em> is greater than <xref href=\"System.Char.MaxValue\" data-throw-if-not-resolved=\"false\"></xref>. "
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Convert.ToDateTime(System.Object)
  commentId: M:System.Convert.ToDateTime(System.Object)
  id: ToDateTime(System.Object)
  parent: System.Convert
  langs:
  - csharp
  - vb
  name: ToDateTime(Object)
  fullName: System.Convert.ToDateTime(System.Object)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Convert.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToDateTime
    path: src/mscorlib/src/System/Convert.cs
    startLine: 1740
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  summary: Converts the value of the specified object to a <xref href="System.DateTime" data-throw-if-not-resolved="false"></xref> object.
  syntax:
    content: public static DateTime ToDateTime(object value)
    content.vb: Public Shared Function ToDateTime(value As Object) As DateTime
    parameters:
    - id: value
      type: System.Object
      description: 'An object that implements the <xref href="System.IConvertible" data-throw-if-not-resolved="false"></xref> interface, or null. '
    return:
      type: System.DateTime
      description: The date and time equivalent of the value of <em>value</em>, or a date and time equivalent of <xref href="System.DateTime.MinValue" data-throw-if-not-resolved="false"></xref> if <em>value</em> is null.
  exceptions:
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "\n<em>value</em> is not a valid date and time value."
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "\n<em>value</em> does not implement the <xref href=\"System.IConvertible\" data-throw-if-not-resolved=\"false\"></xref> interface. -or-The conversion is not supported."
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Convert.ToDateTime(System.Object,System.IFormatProvider)
  commentId: M:System.Convert.ToDateTime(System.Object,System.IFormatProvider)
  id: ToDateTime(System.Object,System.IFormatProvider)
  parent: System.Convert
  langs:
  - csharp
  - vb
  name: ToDateTime(Object, IFormatProvider)
  fullName: System.Convert.ToDateTime(System.Object, System.IFormatProvider)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Convert.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToDateTime
    path: src/mscorlib/src/System/Convert.cs
    startLine: 1744
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  summary: Converts the value of the specified object to a <xref href="System.DateTime" data-throw-if-not-resolved="false"></xref> object, using the specified culture-specific formatting information.
  syntax:
    content: public static DateTime ToDateTime(object value, IFormatProvider provider)
    content.vb: Public Shared Function ToDateTime(value As Object, provider As IFormatProvider) As DateTime
    parameters:
    - id: value
      type: System.Object
      description: 'An object that implements the <xref href="System.IConvertible" data-throw-if-not-resolved="false"></xref> interface. '
    - id: provider
      type: System.IFormatProvider
      description: 'An object that supplies culture-specific formatting information. '
    return:
      type: System.DateTime
      description: The date and time equivalent of the value of <em>value</em>, or the date and time equivalent of <xref href="System.DateTime.MinValue" data-throw-if-not-resolved="false"></xref> if <em>value</em> is null.
  exceptions:
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "\n<em>value</em> is not a valid date and time value."
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "\n<em>value</em> does not implement the <xref href=\"System.IConvertible\" data-throw-if-not-resolved=\"false\"></xref> interface. -or-The conversion is not supported."
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Convert.ToDateTime(System.String)
  commentId: M:System.Convert.ToDateTime(System.String)
  id: ToDateTime(System.String)
  parent: System.Convert
  langs:
  - csharp
  - vb
  name: ToDateTime(String)
  fullName: System.Convert.ToDateTime(System.String)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Convert.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToDateTime
    path: src/mscorlib/src/System/Convert.cs
    startLine: 1748
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  summary: Converts the specified string representation of a date and time to an equivalent date and time value.
  syntax:
    content: public static DateTime ToDateTime(string value)
    content.vb: Public Shared Function ToDateTime(value As String) As DateTime
    parameters:
    - id: value
      type: System.String
      description: The string representation of a date and time.
    return:
      type: System.DateTime
      description: The date and time equivalent of the value of <em>value</em>, or the date and time equivalent of <xref href="System.DateTime.MinValue" data-throw-if-not-resolved="false"></xref> if <em>value</em> is null.
  exceptions:
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "\n<em>value</em> is not a properly formatted date and time string. "
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Convert.ToDateTime(System.String,System.IFormatProvider)
  commentId: M:System.Convert.ToDateTime(System.String,System.IFormatProvider)
  id: ToDateTime(System.String,System.IFormatProvider)
  parent: System.Convert
  langs:
  - csharp
  - vb
  name: ToDateTime(String, IFormatProvider)
  fullName: System.Convert.ToDateTime(System.String, System.IFormatProvider)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Convert.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToDateTime
    path: src/mscorlib/src/System/Convert.cs
    startLine: 1754
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  summary: Converts the specified string representation of a number to an equivalent date and time, using the specified culture-specific formatting information.
  syntax:
    content: public static DateTime ToDateTime(string value, IFormatProvider provider)
    content.vb: Public Shared Function ToDateTime(value As String, provider As IFormatProvider) As DateTime
    parameters:
    - id: value
      type: System.String
      description: 'A string that contains a date and time to convert. '
    - id: provider
      type: System.IFormatProvider
      description: 'An object that supplies culture-specific formatting information. '
    return:
      type: System.DateTime
      description: The date and time equivalent of the value of <em>value</em>, or the date and time equivalent of <xref href="System.DateTime.MinValue" data-throw-if-not-resolved="false"></xref> if <em>value</em> is null.
  exceptions:
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "\n<em>value</em> is not a properly formatted date and time string. "
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Convert.ToDecimal(System.Boolean)
  commentId: M:System.Convert.ToDecimal(System.Boolean)
  id: ToDecimal(System.Boolean)
  parent: System.Convert
  langs:
  - csharp
  - vb
  name: ToDecimal(Boolean)
  fullName: System.Convert.ToDecimal(System.Boolean)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Convert.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToDecimal
    path: src/mscorlib/src/System/Convert.cs
    startLine: 1722
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  summary: Converts the specified Boolean value to the equivalent decimal number.
  syntax:
    content: public static decimal ToDecimal(bool value)
    content.vb: Public Shared Function ToDecimal(value As Boolean) As Decimal
    parameters:
    - id: value
      type: System.Boolean
      description: 'The Boolean value to convert. '
    return:
      type: System.Decimal
      description: The number 1 if <em>value</em> is true; otherwise, 0.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Convert.ToDecimal(System.Byte)
  commentId: M:System.Convert.ToDecimal(System.Byte)
  id: ToDecimal(System.Byte)
  parent: System.Convert
  langs:
  - csharp
  - vb
  name: ToDecimal(Byte)
  fullName: System.Convert.ToDecimal(System.Byte)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Convert.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToDecimal
    path: src/mscorlib/src/System/Convert.cs
    startLine: 1663
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  summary: Converts the value of the specified 8-bit unsigned integer to the equivalent decimal number.
  syntax:
    content: public static decimal ToDecimal(byte value)
    content.vb: Public Shared Function ToDecimal(value As Byte) As Decimal
    parameters:
    - id: value
      type: System.Byte
      description: 'The 8-bit unsigned integer to convert. '
    return:
      type: System.Decimal
      description: The decimal number that is equivalent to <em>value</em>.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Convert.ToDecimal(System.Decimal)
  commentId: M:System.Convert.ToDecimal(System.Decimal)
  id: ToDecimal(System.Decimal)
  parent: System.Convert
  langs:
  - csharp
  - vb
  name: ToDecimal(Decimal)
  fullName: System.Convert.ToDecimal(System.Decimal)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Convert.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToDecimal
    path: src/mscorlib/src/System/Convert.cs
    startLine: 1718
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  summary: Returns the specified decimal number; no actual conversion is performed.
  syntax:
    content: public static decimal ToDecimal(decimal value)
    content.vb: Public Shared Function ToDecimal(value As Decimal) As Decimal
    parameters:
    - id: value
      type: System.Decimal
      description: 'A decimal number. '
    return:
      type: System.Decimal
      description: "\n<em>value</em> is returned unchanged."
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Convert.ToDecimal(System.Double)
  commentId: M:System.Convert.ToDecimal(System.Double)
  id: ToDecimal(System.Double)
  parent: System.Convert
  langs:
  - csharp
  - vb
  name: ToDecimal(Double)
  fullName: System.Convert.ToDecimal(System.Double)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Convert.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToDecimal
    path: src/mscorlib/src/System/Convert.cs
    startLine: 1702
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  summary: Converts the value of the specified double-precision floating-point number to an equivalent decimal number.
  syntax:
    content: public static decimal ToDecimal(double value)
    content.vb: Public Shared Function ToDecimal(value As Double) As Decimal
    parameters:
    - id: value
      type: System.Double
      description: 'The double-precision floating-point number to convert. '
    return:
      type: System.Decimal
      description: 'A decimal number that is equivalent to <em>value</em>. '
  exceptions:
  - type: System.OverflowException
    commentId: T:System.OverflowException
    description: "\n<em>value</em> is greater than <xref href=\"System.Decimal.MaxValue\" data-throw-if-not-resolved=\"false\"></xref> or less than <xref href=\"System.Decimal.MinValue\" data-throw-if-not-resolved=\"false\"></xref>. "
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Convert.ToDecimal(System.Int16)
  commentId: M:System.Convert.ToDecimal(System.Int16)
  id: ToDecimal(System.Int16)
  parent: System.Convert
  langs:
  - csharp
  - vb
  name: ToDecimal(Int16)
  fullName: System.Convert.ToDecimal(System.Int16)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Convert.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToDecimal
    path: src/mscorlib/src/System/Convert.cs
    startLine: 1671
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  summary: Converts the value of the specified 16-bit signed integer to an equivalent decimal number.
  syntax:
    content: public static decimal ToDecimal(short value)
    content.vb: Public Shared Function ToDecimal(value As Short) As Decimal
    parameters:
    - id: value
      type: System.Int16
      description: 'The 16-bit signed integer to convert. '
    return:
      type: System.Decimal
      description: A decimal number that is equivalent to <em>value</em>.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Convert.ToDecimal(System.Int32)
  commentId: M:System.Convert.ToDecimal(System.Int32)
  id: ToDecimal(System.Int32)
  parent: System.Convert
  langs:
  - csharp
  - vb
  name: ToDecimal(Int32)
  fullName: System.Convert.ToDecimal(System.Int32)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Convert.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToDecimal
    path: src/mscorlib/src/System/Convert.cs
    startLine: 1680
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  summary: Converts the value of the specified 32-bit signed integer to an equivalent decimal number.
  syntax:
    content: public static decimal ToDecimal(int value)
    content.vb: Public Shared Function ToDecimal(value As Integer) As Decimal
    parameters:
    - id: value
      type: System.Int32
      description: 'The 32-bit signed integer to convert. '
    return:
      type: System.Decimal
      description: A decimal number that is equivalent to <em>value</em>.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Convert.ToDecimal(System.Int64)
  commentId: M:System.Convert.ToDecimal(System.Int64)
  id: ToDecimal(System.Int64)
  parent: System.Convert
  langs:
  - csharp
  - vb
  name: ToDecimal(Int64)
  fullName: System.Convert.ToDecimal(System.Int64)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Convert.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToDecimal
    path: src/mscorlib/src/System/Convert.cs
    startLine: 1689
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  summary: Converts the value of the specified 64-bit signed integer to an equivalent decimal number.
  syntax:
    content: public static decimal ToDecimal(long value)
    content.vb: Public Shared Function ToDecimal(value As Long) As Decimal
    parameters:
    - id: value
      type: System.Int64
      description: 'The 64-bit signed integer to convert. '
    return:
      type: System.Decimal
      description: A decimal number that is equivalent to <em>value</em>.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Convert.ToDecimal(System.Object)
  commentId: M:System.Convert.ToDecimal(System.Object)
  id: ToDecimal(System.Object)
  parent: System.Convert
  langs:
  - csharp
  - vb
  name: ToDecimal(Object)
  fullName: System.Convert.ToDecimal(System.Object)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Convert.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToDecimal
    path: src/mscorlib/src/System/Convert.cs
    startLine: 1650
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  summary: Converts the value of the specified object to an equivalent decimal number.
  syntax:
    content: public static decimal ToDecimal(object value)
    content.vb: Public Shared Function ToDecimal(value As Object) As Decimal
    parameters:
    - id: value
      type: System.Object
      description: 'An object that implements the <xref href="System.IConvertible" data-throw-if-not-resolved="false"></xref> interface, or null. '
    return:
      type: System.Decimal
      description: A decimal number that is equivalent to <em>value</em>, or 0 (zero) if <em>value</em> is null.
  exceptions:
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "\n<em>value</em> is not in an appropriate format for a <xref href=\"System.Decimal\" data-throw-if-not-resolved=\"false\"></xref> type."
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "\n<em>value</em> does not implement the <xref href=\"System.IConvertible\" data-throw-if-not-resolved=\"false\"></xref> interface. -or-The conversion is not supported."
  - type: System.OverflowException
    commentId: T:System.OverflowException
    description: "\n<em>value</em> represents a number that is less than <xref href=\"System.Decimal.MinValue\" data-throw-if-not-resolved=\"false\"></xref> or greater than <xref href=\"System.Decimal.MaxValue\" data-throw-if-not-resolved=\"false\"></xref>."
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Convert.ToDecimal(System.Object,System.IFormatProvider)
  commentId: M:System.Convert.ToDecimal(System.Object,System.IFormatProvider)
  id: ToDecimal(System.Object,System.IFormatProvider)
  parent: System.Convert
  langs:
  - csharp
  - vb
  name: ToDecimal(Object, IFormatProvider)
  fullName: System.Convert.ToDecimal(System.Object, System.IFormatProvider)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Convert.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToDecimal
    path: src/mscorlib/src/System/Convert.cs
    startLine: 1654
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  summary: Converts the value of the specified object to an equivalent decimal number, using the specified culture-specific formatting information.
  syntax:
    content: public static decimal ToDecimal(object value, IFormatProvider provider)
    content.vb: Public Shared Function ToDecimal(value As Object, provider As IFormatProvider) As Decimal
    parameters:
    - id: value
      type: System.Object
      description: 'An object that implements the <xref href="System.IConvertible" data-throw-if-not-resolved="false"></xref> interface. '
    - id: provider
      type: System.IFormatProvider
      description: 'An object that supplies culture-specific formatting information. '
    return:
      type: System.Decimal
      description: A decimal number that is equivalent to <em>value</em>, or 0 (zero) if <em>value</em> is null.
  exceptions:
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "\n<em>value</em> is not in an appropriate format for a <xref href=\"System.Decimal\" data-throw-if-not-resolved=\"false\"></xref> type."
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "\n<em>value</em> does not implement the <xref href=\"System.IConvertible\" data-throw-if-not-resolved=\"false\"></xref> interface.-or-The conversion is not supported. "
  - type: System.OverflowException
    commentId: T:System.OverflowException
    description: "\n<em>value</em> represents a number that is less than <xref href=\"System.Decimal.MinValue\" data-throw-if-not-resolved=\"false\"></xref> or greater than <xref href=\"System.Decimal.MaxValue\" data-throw-if-not-resolved=\"false\"></xref>."
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Convert.ToDecimal(System.SByte)
  commentId: M:System.Convert.ToDecimal(System.SByte)
  id: ToDecimal(System.SByte)
  parent: System.Convert
  langs:
  - csharp
  - vb
  name: ToDecimal(SByte)
  fullName: System.Convert.ToDecimal(System.SByte)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Convert.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToDecimal
    path: src/mscorlib/src/System/Convert.cs
    startLine: 1658
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  summary: Converts the value of the specified 8-bit signed integer to the equivalent decimal number.
  syntax:
    content: public static decimal ToDecimal(sbyte value)
    content.vb: Public Shared Function ToDecimal(value As SByte) As Decimal
    parameters:
    - id: value
      type: System.SByte
      description: 'The 8-bit signed integer to convert. '
    return:
      type: System.Decimal
      description: A decimal number that is equivalent to <em>value</em>.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Convert.ToDecimal(System.Single)
  commentId: M:System.Convert.ToDecimal(System.Single)
  id: ToDecimal(System.Single)
  parent: System.Convert
  langs:
  - csharp
  - vb
  name: ToDecimal(Single)
  fullName: System.Convert.ToDecimal(System.Single)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Convert.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToDecimal
    path: src/mscorlib/src/System/Convert.cs
    startLine: 1698
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  summary: Converts the value of the specified single-precision floating-point number to the equivalent decimal number.
  syntax:
    content: public static decimal ToDecimal(float value)
    content.vb: Public Shared Function ToDecimal(value As Single) As Decimal
    parameters:
    - id: value
      type: System.Single
      description: 'The single-precision floating-point number to convert. '
    return:
      type: System.Decimal
      description: 'A decimal number that is equivalent to <em>value</em>. '
  exceptions:
  - type: System.OverflowException
    commentId: T:System.OverflowException
    description: "\n<em>value</em> is greater than <xref href=\"System.Decimal.MaxValue\" data-throw-if-not-resolved=\"false\"></xref> or less than <xref href=\"System.Decimal.MinValue\" data-throw-if-not-resolved=\"false\"></xref>."
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Convert.ToDecimal(System.String)
  commentId: M:System.Convert.ToDecimal(System.String)
  id: ToDecimal(System.String)
  parent: System.Convert
  langs:
  - csharp
  - vb
  name: ToDecimal(String)
  fullName: System.Convert.ToDecimal(System.String)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Convert.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToDecimal
    path: src/mscorlib/src/System/Convert.cs
    startLine: 1706
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  summary: Converts the specified string representation of a number to an equivalent decimal number.
  syntax:
    content: public static decimal ToDecimal(string value)
    content.vb: Public Shared Function ToDecimal(value As String) As Decimal
    parameters:
    - id: value
      type: System.String
      description: 'A string that contains a number to convert. '
    return:
      type: System.Decimal
      description: A decimal number that is equivalent to the number in <em>value</em>, or 0 (zero) if <em>value</em> is null.
  exceptions:
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "\n<em>value</em> is not a number in a valid format."
  - type: System.OverflowException
    commentId: T:System.OverflowException
    description: "\n<em>value</em> represents a number that is less than <xref href=\"System.Decimal.MinValue\" data-throw-if-not-resolved=\"false\"></xref> or greater than <xref href=\"System.Decimal.MaxValue\" data-throw-if-not-resolved=\"false\"></xref>. "
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Convert.ToDecimal(System.String,System.IFormatProvider)
  commentId: M:System.Convert.ToDecimal(System.String,System.IFormatProvider)
  id: ToDecimal(System.String,System.IFormatProvider)
  parent: System.Convert
  langs:
  - csharp
  - vb
  name: ToDecimal(String, IFormatProvider)
  fullName: System.Convert.ToDecimal(System.String, System.IFormatProvider)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Convert.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToDecimal
    path: src/mscorlib/src/System/Convert.cs
    startLine: 1712
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  summary: Converts the specified string representation of a number to an equivalent decimal number, using the specified culture-specific formatting information.
  syntax:
    content: public static decimal ToDecimal(string value, IFormatProvider provider)
    content.vb: Public Shared Function ToDecimal(value As String, provider As IFormatProvider) As Decimal
    parameters:
    - id: value
      type: System.String
      description: 'A string that contains a number to convert. '
    - id: provider
      type: System.IFormatProvider
      description: 'An object that supplies culture-specific formatting information. '
    return:
      type: System.Decimal
      description: A decimal number that is equivalent to the number in <em>value</em>, or 0 (zero) if <em>value</em> is null.
  exceptions:
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "\n<em>value</em> is not a number in a valid format."
  - type: System.OverflowException
    commentId: T:System.OverflowException
    description: "\n<em>value</em> represents a number that is less than <xref href=\"System.Decimal.MinValue\" data-throw-if-not-resolved=\"false\"></xref> or greater than <xref href=\"System.Decimal.MaxValue\" data-throw-if-not-resolved=\"false\"></xref>. "
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Convert.ToDecimal(System.UInt16)
  commentId: M:System.Convert.ToDecimal(System.UInt16)
  id: ToDecimal(System.UInt16)
  parent: System.Convert
  langs:
  - csharp
  - vb
  name: ToDecimal(UInt16)
  fullName: System.Convert.ToDecimal(System.UInt16)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Convert.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToDecimal
    path: src/mscorlib/src/System/Convert.cs
    startLine: 1675
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  summary: Converts the value of the specified 16-bit unsigned integer to an equivalent decimal number.
  syntax:
    content: public static decimal ToDecimal(ushort value)
    content.vb: Public Shared Function ToDecimal(value As UShort) As Decimal
    parameters:
    - id: value
      type: System.UInt16
      description: 'The 16-bit unsigned integer to convert. '
    return:
      type: System.Decimal
      description: The decimal number that is equivalent to <em>value</em>.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Convert.ToDecimal(System.UInt32)
  commentId: M:System.Convert.ToDecimal(System.UInt32)
  id: ToDecimal(System.UInt32)
  parent: System.Convert
  langs:
  - csharp
  - vb
  name: ToDecimal(UInt32)
  fullName: System.Convert.ToDecimal(System.UInt32)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Convert.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToDecimal
    path: src/mscorlib/src/System/Convert.cs
    startLine: 1684
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  summary: Converts the value of the specified 32-bit unsigned integer to an equivalent decimal number.
  syntax:
    content: public static decimal ToDecimal(uint value)
    content.vb: Public Shared Function ToDecimal(value As UInteger) As Decimal
    parameters:
    - id: value
      type: System.UInt32
      description: 'The 32-bit unsigned integer to convert. '
    return:
      type: System.Decimal
      description: A decimal number that is equivalent to <em>value</em>.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Convert.ToDecimal(System.UInt64)
  commentId: M:System.Convert.ToDecimal(System.UInt64)
  id: ToDecimal(System.UInt64)
  parent: System.Convert
  langs:
  - csharp
  - vb
  name: ToDecimal(UInt64)
  fullName: System.Convert.ToDecimal(System.UInt64)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Convert.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToDecimal
    path: src/mscorlib/src/System/Convert.cs
    startLine: 1693
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  summary: Converts the value of the specified 64-bit unsigned integer to an equivalent decimal number.
  syntax:
    content: public static decimal ToDecimal(ulong value)
    content.vb: Public Shared Function ToDecimal(value As ULong) As Decimal
    parameters:
    - id: value
      type: System.UInt64
      description: 'The 64-bit unsigned integer to convert. '
    return:
      type: System.Decimal
      description: A decimal number that is equivalent to <em>value</em>.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Convert.ToDouble(System.Boolean)
  commentId: M:System.Convert.ToDouble(System.Boolean)
  id: ToDouble(System.Boolean)
  parent: System.Convert
  langs:
  - csharp
  - vb
  name: ToDouble(Boolean)
  fullName: System.Convert.ToDouble(System.Boolean)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Convert.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToDouble
    path: src/mscorlib/src/System/Convert.cs
    startLine: 1636
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  summary: Converts the specified Boolean value to the equivalent double-precision floating-point number.
  syntax:
    content: public static double ToDouble(bool value)
    content.vb: Public Shared Function ToDouble(value As Boolean) As Double
    parameters:
    - id: value
      type: System.Boolean
      description: 'The Boolean value to convert. '
    return:
      type: System.Double
      description: The number 1 if <em>value</em> is true; otherwise, 0.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Convert.ToDouble(System.Byte)
  commentId: M:System.Convert.ToDouble(System.Byte)
  id: ToDouble(System.Byte)
  parent: System.Convert
  langs:
  - csharp
  - vb
  name: ToDouble(Byte)
  fullName: System.Convert.ToDouble(System.Byte)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Convert.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToDouble
    path: src/mscorlib/src/System/Convert.cs
    startLine: 1577
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  summary: Converts the value of the specified 8-bit unsigned integer to the equivalent double-precision floating-point number.
  syntax:
    content: public static double ToDouble(byte value)
    content.vb: Public Shared Function ToDouble(value As Byte) As Double
    parameters:
    - id: value
      type: System.Byte
      description: 'The 8-bit unsigned integer to convert. '
    return:
      type: System.Double
      description: The double-precision floating-point number that is equivalent to <em>value</em>.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Convert.ToDouble(System.Decimal)
  commentId: M:System.Convert.ToDouble(System.Decimal)
  id: ToDouble(System.Decimal)
  parent: System.Convert
  langs:
  - csharp
  - vb
  name: ToDouble(Decimal)
  fullName: System.Convert.ToDouble(System.Decimal)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Convert.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToDouble
    path: src/mscorlib/src/System/Convert.cs
    startLine: 1620
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  summary: Converts the value of the specified decimal number to an equivalent double-precision floating-point number.
  syntax:
    content: public static double ToDouble(decimal value)
    content.vb: Public Shared Function ToDouble(value As Decimal) As Double
    parameters:
    - id: value
      type: System.Decimal
      description: 'The decimal number to convert. '
    return:
      type: System.Double
      description: A double-precision floating-point number that is equivalent to <em>value</em>.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Convert.ToDouble(System.Double)
  commentId: M:System.Convert.ToDouble(System.Double)
  id: ToDouble(System.Double)
  parent: System.Convert
  langs:
  - csharp
  - vb
  name: ToDouble(Double)
  fullName: System.Convert.ToDouble(System.Double)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Convert.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToDouble
    path: src/mscorlib/src/System/Convert.cs
    startLine: 1616
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  summary: Returns the specified double-precision floating-point number; no actual conversion is performed.
  syntax:
    content: public static double ToDouble(double value)
    content.vb: Public Shared Function ToDouble(value As Double) As Double
    parameters:
    - id: value
      type: System.Double
      description: 'The double-precision floating-point number to return. '
    return:
      type: System.Double
      description: "\n<em>value</em> is returned unchanged."
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Convert.ToDouble(System.Int16)
  commentId: M:System.Convert.ToDouble(System.Int16)
  id: ToDouble(System.Int16)
  parent: System.Convert
  langs:
  - csharp
  - vb
  name: ToDouble(Int16)
  fullName: System.Convert.ToDouble(System.Int16)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Convert.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToDouble
    path: src/mscorlib/src/System/Convert.cs
    startLine: 1581
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  summary: Converts the value of the specified 16-bit signed integer to an equivalent double-precision floating-point number.
  syntax:
    content: public static double ToDouble(short value)
    content.vb: Public Shared Function ToDouble(value As Short) As Double
    parameters:
    - id: value
      type: System.Int16
      description: 'The 16-bit signed integer to convert. '
    return:
      type: System.Double
      description: A double-precision floating-point number equivalent to <em>value</em>.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Convert.ToDouble(System.Int32)
  commentId: M:System.Convert.ToDouble(System.Int32)
  id: ToDouble(System.Int32)
  parent: System.Convert
  langs:
  - csharp
  - vb
  name: ToDouble(Int32)
  fullName: System.Convert.ToDouble(System.Int32)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Convert.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToDouble
    path: src/mscorlib/src/System/Convert.cs
    startLine: 1594
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  summary: Converts the value of the specified 32-bit signed integer to an equivalent double-precision floating-point number.
  syntax:
    content: public static double ToDouble(int value)
    content.vb: Public Shared Function ToDouble(value As Integer) As Double
    parameters:
    - id: value
      type: System.Int32
      description: 'The 32-bit signed integer to convert. '
    return:
      type: System.Double
      description: A double-precision floating-point number that is equivalent to <em>value</em>.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Convert.ToDouble(System.Int64)
  commentId: M:System.Convert.ToDouble(System.Int64)
  id: ToDouble(System.Int64)
  parent: System.Convert
  langs:
  - csharp
  - vb
  name: ToDouble(Int64)
  fullName: System.Convert.ToDouble(System.Int64)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Convert.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToDouble
    path: src/mscorlib/src/System/Convert.cs
    startLine: 1603
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  summary: Converts the value of the specified 64-bit signed integer to an equivalent double-precision floating-point number.
  syntax:
    content: public static double ToDouble(long value)
    content.vb: Public Shared Function ToDouble(value As Long) As Double
    parameters:
    - id: value
      type: System.Int64
      description: 'The 64-bit signed integer to convert. '
    return:
      type: System.Double
      description: A double-precision floating-point number that is equivalent to <em>value</em>.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Convert.ToDouble(System.Object)
  commentId: M:System.Convert.ToDouble(System.Object)
  id: ToDouble(System.Object)
  parent: System.Convert
  langs:
  - csharp
  - vb
  name: ToDouble(Object)
  fullName: System.Convert.ToDouble(System.Object)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Convert.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToDouble
    path: src/mscorlib/src/System/Convert.cs
    startLine: 1563
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  summary: Converts the value of the specified object to a double-precision floating-point number.
  syntax:
    content: public static double ToDouble(object value)
    content.vb: Public Shared Function ToDouble(value As Object) As Double
    parameters:
    - id: value
      type: System.Object
      description: 'An object that implements the <xref href="System.IConvertible" data-throw-if-not-resolved="false"></xref> interface, or null. '
    return:
      type: System.Double
      description: A double-precision floating-point number that is equivalent to <em>value</em>, or zero if <em>value</em> is null.
  exceptions:
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "\n<em>value</em> is not in an appropriate format for a <xref href=\"System.Double\" data-throw-if-not-resolved=\"false\"></xref> type."
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "\n<em>value</em> does not implement the <xref href=\"System.IConvertible\" data-throw-if-not-resolved=\"false\"></xref> interface. -or-The conversion is not supported."
  - type: System.OverflowException
    commentId: T:System.OverflowException
    description: "\n<em>value</em> represents a number that is less than <xref href=\"System.Double.MinValue\" data-throw-if-not-resolved=\"false\"></xref> or greater than <xref href=\"System.Double.MaxValue\" data-throw-if-not-resolved=\"false\"></xref>. "
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Convert.ToDouble(System.Object,System.IFormatProvider)
  commentId: M:System.Convert.ToDouble(System.Object,System.IFormatProvider)
  id: ToDouble(System.Object,System.IFormatProvider)
  parent: System.Convert
  langs:
  - csharp
  - vb
  name: ToDouble(Object, IFormatProvider)
  fullName: System.Convert.ToDouble(System.Object, System.IFormatProvider)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Convert.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToDouble
    path: src/mscorlib/src/System/Convert.cs
    startLine: 1567
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  summary: Converts the value of the specified object to an double-precision floating-point number, using the specified culture-specific formatting information.
  syntax:
    content: public static double ToDouble(object value, IFormatProvider provider)
    content.vb: Public Shared Function ToDouble(value As Object, provider As IFormatProvider) As Double
    parameters:
    - id: value
      type: System.Object
      description: 'An object that implements the <xref href="System.IConvertible" data-throw-if-not-resolved="false"></xref> interface. '
    - id: provider
      type: System.IFormatProvider
      description: 'An object that supplies culture-specific formatting information. '
    return:
      type: System.Double
      description: A double-precision floating-point number that is equivalent to <em>value</em>, or zero if <em>value</em> is null.
  exceptions:
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "\n<em>value</em> is not in an appropriate format for a <xref href=\"System.Double\" data-throw-if-not-resolved=\"false\"></xref> type."
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "\n<em>value</em> does not implement the <xref href=\"System.IConvertible\" data-throw-if-not-resolved=\"false\"></xref> interface. "
  - type: System.OverflowException
    commentId: T:System.OverflowException
    description: "\n<em>value</em> represents a number that is less than <xref href=\"System.Double.MinValue\" data-throw-if-not-resolved=\"false\"></xref> or greater than <xref href=\"System.Double.MaxValue\" data-throw-if-not-resolved=\"false\"></xref>. "
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Convert.ToDouble(System.SByte)
  commentId: M:System.Convert.ToDouble(System.SByte)
  id: ToDouble(System.SByte)
  parent: System.Convert
  langs:
  - csharp
  - vb
  name: ToDouble(SByte)
  fullName: System.Convert.ToDouble(System.SByte)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Convert.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToDouble
    path: src/mscorlib/src/System/Convert.cs
    startLine: 1572
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  summary: Converts the value of the specified 8-bit signed integer to the equivalent double-precision floating-point number.
  syntax:
    content: public static double ToDouble(sbyte value)
    content.vb: Public Shared Function ToDouble(value As SByte) As Double
    parameters:
    - id: value
      type: System.SByte
      description: 'The 8-bit signed integer to convert. '
    return:
      type: System.Double
      description: The 8-bit signed integer that is equivalent to <em>value</em>.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Convert.ToDouble(System.Single)
  commentId: M:System.Convert.ToDouble(System.Single)
  id: ToDouble(System.Single)
  parent: System.Convert
  langs:
  - csharp
  - vb
  name: ToDouble(Single)
  fullName: System.Convert.ToDouble(System.Single)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Convert.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToDouble
    path: src/mscorlib/src/System/Convert.cs
    startLine: 1612
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  summary: Converts the value of the specified single-precision floating-point number to an equivalent double-precision floating-point number.
  syntax:
    content: public static double ToDouble(float value)
    content.vb: Public Shared Function ToDouble(value As Single) As Double
    parameters:
    - id: value
      type: System.Single
      description: 'The single-precision floating-point number. '
    return:
      type: System.Double
      description: A double-precision floating-point number that is equivalent to <em>value</em>.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Convert.ToDouble(System.String)
  commentId: M:System.Convert.ToDouble(System.String)
  id: ToDouble(System.String)
  parent: System.Convert
  langs:
  - csharp
  - vb
  name: ToDouble(String)
  fullName: System.Convert.ToDouble(System.String)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Convert.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToDouble
    path: src/mscorlib/src/System/Convert.cs
    startLine: 1624
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  summary: Converts the specified string representation of a number to an equivalent double-precision floating-point number.
  syntax:
    content: public static double ToDouble(string value)
    content.vb: Public Shared Function ToDouble(value As String) As Double
    parameters:
    - id: value
      type: System.String
      description: 'A string that contains the number to convert. '
    return:
      type: System.Double
      description: A double-precision floating-point number that is equivalent to the number in <em>value</em>, or 0 (zero) if <em>value</em> is null.
  exceptions:
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "\n<em>value</em> is not a number in a valid format."
  - type: System.OverflowException
    commentId: T:System.OverflowException
    description: "\n<em>value</em> represents a number that is less than <xref href=\"System.Double.MinValue\" data-throw-if-not-resolved=\"false\"></xref> or greater than <xref href=\"System.Double.MaxValue\" data-throw-if-not-resolved=\"false\"></xref>. "
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Convert.ToDouble(System.String,System.IFormatProvider)
  commentId: M:System.Convert.ToDouble(System.String,System.IFormatProvider)
  id: ToDouble(System.String,System.IFormatProvider)
  parent: System.Convert
  langs:
  - csharp
  - vb
  name: ToDouble(String, IFormatProvider)
  fullName: System.Convert.ToDouble(System.String, System.IFormatProvider)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Convert.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToDouble
    path: src/mscorlib/src/System/Convert.cs
    startLine: 1630
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  summary: Converts the specified string representation of a number to an equivalent double-precision floating-point number, using the specified culture-specific formatting information.
  syntax:
    content: public static double ToDouble(string value, IFormatProvider provider)
    content.vb: Public Shared Function ToDouble(value As String, provider As IFormatProvider) As Double
    parameters:
    - id: value
      type: System.String
      description: 'A string that contains the number to convert. '
    - id: provider
      type: System.IFormatProvider
      description: 'An object that supplies culture-specific formatting information. '
    return:
      type: System.Double
      description: A double-precision floating-point number that is equivalent to the number in <em>value</em>, or 0 (zero) if <em>value</em> is null.
  exceptions:
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "\n<em>value</em> is not a number in a valid format."
  - type: System.OverflowException
    commentId: T:System.OverflowException
    description: "\n<em>value</em> represents a number that is less than <xref href=\"System.Double.MinValue\" data-throw-if-not-resolved=\"false\"></xref> or greater than <xref href=\"System.Double.MaxValue\" data-throw-if-not-resolved=\"false\"></xref>. "
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Convert.ToDouble(System.UInt16)
  commentId: M:System.Convert.ToDouble(System.UInt16)
  id: ToDouble(System.UInt16)
  parent: System.Convert
  langs:
  - csharp
  - vb
  name: ToDouble(UInt16)
  fullName: System.Convert.ToDouble(System.UInt16)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Convert.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToDouble
    path: src/mscorlib/src/System/Convert.cs
    startLine: 1589
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  summary: Converts the value of the specified 16-bit unsigned integer to the equivalent double-precision floating-point number.
  syntax:
    content: public static double ToDouble(ushort value)
    content.vb: Public Shared Function ToDouble(value As UShort) As Double
    parameters:
    - id: value
      type: System.UInt16
      description: 'The 16-bit unsigned integer to convert. '
    return:
      type: System.Double
      description: A double-precision floating-point number that is equivalent to <em>value</em>.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Convert.ToDouble(System.UInt32)
  commentId: M:System.Convert.ToDouble(System.UInt32)
  id: ToDouble(System.UInt32)
  parent: System.Convert
  langs:
  - csharp
  - vb
  name: ToDouble(UInt32)
  fullName: System.Convert.ToDouble(System.UInt32)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Convert.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToDouble
    path: src/mscorlib/src/System/Convert.cs
    startLine: 1598
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  summary: Converts the value of the specified 32-bit unsigned integer to an equivalent double-precision floating-point number.
  syntax:
    content: public static double ToDouble(uint value)
    content.vb: Public Shared Function ToDouble(value As UInteger) As Double
    parameters:
    - id: value
      type: System.UInt32
      description: 'The 32-bit unsigned integer to convert. '
    return:
      type: System.Double
      description: A double-precision floating-point number that is equivalent to <em>value</em>.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Convert.ToDouble(System.UInt64)
  commentId: M:System.Convert.ToDouble(System.UInt64)
  id: ToDouble(System.UInt64)
  parent: System.Convert
  langs:
  - csharp
  - vb
  name: ToDouble(UInt64)
  fullName: System.Convert.ToDouble(System.UInt64)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Convert.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToDouble
    path: src/mscorlib/src/System/Convert.cs
    startLine: 1607
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  summary: Converts the value of the specified 64-bit unsigned integer to an equivalent double-precision floating-point number.
  syntax:
    content: public static double ToDouble(ulong value)
    content.vb: Public Shared Function ToDouble(value As ULong) As Double
    parameters:
    - id: value
      type: System.UInt64
      description: 'The 64-bit unsigned integer to convert. '
    return:
      type: System.Double
      description: A double-precision floating-point number that is equivalent to <em>value</em>.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Convert.ToInt16(System.Boolean)
  commentId: M:System.Convert.ToInt16(System.Boolean)
  id: ToInt16(System.Boolean)
  parent: System.Convert
  langs:
  - csharp
  - vb
  name: ToInt16(Boolean)
  fullName: System.Convert.ToInt16(System.Boolean)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Convert.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToInt16
    path: src/mscorlib/src/System/Convert.cs
    startLine: 843
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  summary: Converts the specified Boolean value to the equivalent 16-bit signed integer.
  syntax:
    content: public static short ToInt16(bool value)
    content.vb: Public Shared Function ToInt16(value As Boolean) As Short
    parameters:
    - id: value
      type: System.Boolean
      description: 'The Boolean value to convert. '
    return:
      type: System.Int16
      description: The number 1 if <em>value</em> is true; otherwise, 0.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Convert.ToInt16(System.Byte)
  commentId: M:System.Convert.ToInt16(System.Byte)
  id: ToInt16(System.Byte)
  parent: System.Convert
  langs:
  - csharp
  - vb
  name: ToInt16(Byte)
  fullName: System.Convert.ToInt16(System.Byte)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Convert.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToInt16
    path: src/mscorlib/src/System/Convert.cs
    startLine: 858
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  summary: Converts the value of the specified 8-bit unsigned integer to the equivalent 16-bit signed integer.
  syntax:
    content: public static short ToInt16(byte value)
    content.vb: Public Shared Function ToInt16(value As Byte) As Short
    parameters:
    - id: value
      type: System.Byte
      description: 'The 8-bit unsigned integer to convert. '
    return:
      type: System.Int16
      description: A 16-bit signed integer that is equivalent to <em>value</em>.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Convert.ToInt16(System.Char)
  commentId: M:System.Convert.ToInt16(System.Char)
  id: ToInt16(System.Char)
  parent: System.Convert
  langs:
  - csharp
  - vb
  name: ToInt16(Char)
  fullName: System.Convert.ToInt16(System.Char)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Convert.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToInt16
    path: src/mscorlib/src/System/Convert.cs
    startLine: 847
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  summary: Converts the value of the specified Unicode character to the equivalent 16-bit signed integer.
  syntax:
    content: public static short ToInt16(char value)
    content.vb: Public Shared Function ToInt16(value As Char) As Short
    parameters:
    - id: value
      type: System.Char
      description: 'The Unicode character to convert. '
    return:
      type: System.Int16
      description: 'A 16-bit signed integer that is equivalent to <em>value</em>. '
  exceptions:
  - type: System.OverflowException
    commentId: T:System.OverflowException
    description: "\n<em>value</em> is greater than <xref href=\"System.Int16.MaxValue\" data-throw-if-not-resolved=\"false\"></xref>. "
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Convert.ToInt16(System.Decimal)
  commentId: M:System.Convert.ToInt16(System.Decimal)
  id: ToInt16(System.Decimal)
  parent: System.Convert
  langs:
  - csharp
  - vb
  name: ToInt16(Decimal)
  fullName: System.Convert.ToInt16(System.Decimal)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Convert.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToInt16
    path: src/mscorlib/src/System/Convert.cs
    startLine: 907
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  summary: Converts the value of the specified decimal number to an equivalent 16-bit signed integer.
  syntax:
    content: public static short ToInt16(decimal value)
    content.vb: Public Shared Function ToInt16(value As Decimal) As Short
    parameters:
    - id: value
      type: System.Decimal
      description: 'The decimal number to convert. '
    return:
      type: System.Int16
      description: "\n<em>value</em>, rounded to the nearest 16-bit signed integer. If <em>value</em> is halfway between two whole numbers, the even number is returned; that is, 4.5 is converted to 4, and 5.5 is converted to 6."
  exceptions:
  - type: System.OverflowException
    commentId: T:System.OverflowException
    description: "\n<em>value</em> is greater than <xref href=\"System.Int16.MaxValue\" data-throw-if-not-resolved=\"false\"></xref> or less than <xref href=\"System.Int16.MinValue\" data-throw-if-not-resolved=\"false\"></xref>. "
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Convert.ToInt16(System.Double)
  commentId: M:System.Convert.ToInt16(System.Double)
  id: ToInt16(System.Double)
  parent: System.Convert
  langs:
  - csharp
  - vb
  name: ToInt16(Double)
  fullName: System.Convert.ToInt16(System.Double)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Convert.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToInt16
    path: src/mscorlib/src/System/Convert.cs
    startLine: 903
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  summary: Converts the value of the specified double-precision floating-point number to an equivalent 16-bit signed integer.
  syntax:
    content: public static short ToInt16(double value)
    content.vb: Public Shared Function ToInt16(value As Double) As Short
    parameters:
    - id: value
      type: System.Double
      description: 'The double-precision floating-point number to convert. '
    return:
      type: System.Int16
      description: "\n<em>value</em>, rounded to the nearest 16-bit signed integer. If <em>value</em> is halfway between two whole numbers, the even number is returned; that is, 4.5 is converted to 4, and 5.5 is converted to 6."
  exceptions:
  - type: System.OverflowException
    commentId: T:System.OverflowException
    description: "\n<em>value</em> is greater than <xref href=\"System.Int16.MaxValue\" data-throw-if-not-resolved=\"false\"></xref> or less than <xref href=\"System.Int16.MinValue\" data-throw-if-not-resolved=\"false\"></xref>. "
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Convert.ToInt16(System.Int16)
  commentId: M:System.Convert.ToInt16(System.Int16)
  id: ToInt16(System.Int16)
  parent: System.Convert
  langs:
  - csharp
  - vb
  name: ToInt16(Int16)
  fullName: System.Convert.ToInt16(System.Int16)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Convert.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToInt16
    path: src/mscorlib/src/System/Convert.cs
    startLine: 882
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  summary: Returns the specified 16-bit signed integer; no actual conversion is performed.
  syntax:
    content: public static short ToInt16(short value)
    content.vb: Public Shared Function ToInt16(value As Short) As Short
    parameters:
    - id: value
      type: System.Int16
      description: 'The 16-bit signed integer to return. '
    return:
      type: System.Int16
      description: "\n<em>value</em> is returned unchanged."
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Convert.ToInt16(System.Int32)
  commentId: M:System.Convert.ToInt16(System.Int32)
  id: ToInt16(System.Int32)
  parent: System.Convert
  langs:
  - csharp
  - vb
  name: ToInt16(Int32)
  fullName: System.Convert.ToInt16(System.Int32)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Convert.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToInt16
    path: src/mscorlib/src/System/Convert.cs
    startLine: 869
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  summary: Converts the value of the specified 32-bit signed integer to an equivalent 16-bit signed integer.
  syntax:
    content: public static short ToInt16(int value)
    content.vb: Public Shared Function ToInt16(value As Integer) As Short
    parameters:
    - id: value
      type: System.Int32
      description: 'The 32-bit signed integer to convert. '
    return:
      type: System.Int16
      description: The 16-bit signed integer equivalent of <em>value</em>.
  exceptions:
  - type: System.OverflowException
    commentId: T:System.OverflowException
    description: "\n<em>value</em> is greater than <xref href=\"System.Int16.MaxValue\" data-throw-if-not-resolved=\"false\"></xref> or less than <xref href=\"System.Int16.MinValue\" data-throw-if-not-resolved=\"false\"></xref>. "
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Convert.ToInt16(System.Int64)
  commentId: M:System.Convert.ToInt16(System.Int64)
  id: ToInt16(System.Int64)
  parent: System.Convert
  langs:
  - csharp
  - vb
  name: ToInt16(Int64)
  fullName: System.Convert.ToInt16(System.Int64)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Convert.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToInt16
    path: src/mscorlib/src/System/Convert.cs
    startLine: 886
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  summary: Converts the value of the specified 64-bit signed integer to an equivalent 16-bit signed integer.
  syntax:
    content: public static short ToInt16(long value)
    content.vb: Public Shared Function ToInt16(value As Long) As Short
    parameters:
    - id: value
      type: System.Int64
      description: 'The 64-bit signed integer to convert. '
    return:
      type: System.Int16
      description: A 16-bit signed integer that is equivalent to <em>value</em>.
  exceptions:
  - type: System.OverflowException
    commentId: T:System.OverflowException
    description: "\n<em>value</em> is greater than <xref href=\"System.Int16.MaxValue\" data-throw-if-not-resolved=\"false\"></xref> or less than <xref href=\"System.Int16.MinValue\" data-throw-if-not-resolved=\"false\"></xref>. "
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Convert.ToInt16(System.Object)
  commentId: M:System.Convert.ToInt16(System.Object)
  id: ToInt16(System.Object)
  parent: System.Convert
  langs:
  - csharp
  - vb
  name: ToInt16(Object)
  fullName: System.Convert.ToInt16(System.Object)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Convert.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToInt16
    path: src/mscorlib/src/System/Convert.cs
    startLine: 835
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  summary: Converts the value of the specified object to a 16-bit signed integer.
  syntax:
    content: public static short ToInt16(object value)
    content.vb: Public Shared Function ToInt16(value As Object) As Short
    parameters:
    - id: value
      type: System.Object
      description: 'An object that implements the <xref href="System.IConvertible" data-throw-if-not-resolved="false"></xref> interface, or null. '
    return:
      type: System.Int16
      description: A 16-bit signed integer that is equivalent to <em>value</em>, or zero if <em>value</em> is null.
  exceptions:
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "\n<em>value</em> is not in an appropriate format for an <xref href=\"System.Int16\" data-throw-if-not-resolved=\"false\"></xref> type."
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "\n<em>value</em> does not implement the <xref href=\"System.IConvertible\" data-throw-if-not-resolved=\"false\"></xref> interface. -or-The conversion is not supported."
  - type: System.OverflowException
    commentId: T:System.OverflowException
    description: "\n<em>value</em> represents a number that is less than <xref href=\"System.Int16.MinValue\" data-throw-if-not-resolved=\"false\"></xref> or greater than <xref href=\"System.Int16.MaxValue\" data-throw-if-not-resolved=\"false\"></xref>."
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Convert.ToInt16(System.Object,System.IFormatProvider)
  commentId: M:System.Convert.ToInt16(System.Object,System.IFormatProvider)
  id: ToInt16(System.Object,System.IFormatProvider)
  parent: System.Convert
  langs:
  - csharp
  - vb
  name: ToInt16(Object, IFormatProvider)
  fullName: System.Convert.ToInt16(System.Object, System.IFormatProvider)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Convert.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToInt16
    path: src/mscorlib/src/System/Convert.cs
    startLine: 839
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  summary: Converts the value of the specified object to a 16-bit signed integer, using the specified culture-specific formatting information.
  syntax:
    content: public static short ToInt16(object value, IFormatProvider provider)
    content.vb: Public Shared Function ToInt16(value As Object, provider As IFormatProvider) As Short
    parameters:
    - id: value
      type: System.Object
      description: 'An object that implements the <xref href="System.IConvertible" data-throw-if-not-resolved="false"></xref> interface. '
    - id: provider
      type: System.IFormatProvider
      description: 'An object that supplies culture-specific formatting information. '
    return:
      type: System.Int16
      description: A 16-bit signed integer that is equivalent to <em>value</em>, or zero if <em>value</em> is null.
  exceptions:
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "\n<em>value</em> is not in an appropriate format for an <xref href=\"System.Int16\" data-throw-if-not-resolved=\"false\"></xref> type."
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "\n<em>value</em> does not implement <xref href=\"System.IConvertible\" data-throw-if-not-resolved=\"false\"></xref>. "
  - type: System.OverflowException
    commentId: T:System.OverflowException
    description: "\n<em>value</em> represents a number that is less than <xref href=\"System.Int16.MinValue\" data-throw-if-not-resolved=\"false\"></xref> or greater than <xref href=\"System.Int16.MaxValue\" data-throw-if-not-resolved=\"false\"></xref>."
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Convert.ToInt16(System.SByte)
  commentId: M:System.Convert.ToInt16(System.SByte)
  id: ToInt16(System.SByte)
  parent: System.Convert
  langs:
  - csharp
  - vb
  name: ToInt16(SByte)
  fullName: System.Convert.ToInt16(System.SByte)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Convert.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToInt16
    path: src/mscorlib/src/System/Convert.cs
    startLine: 853
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  summary: Converts the value of the specified 8-bit signed integer to the equivalent 16-bit signed integer.
  syntax:
    content: public static short ToInt16(sbyte value)
    content.vb: Public Shared Function ToInt16(value As SByte) As Short
    parameters:
    - id: value
      type: System.SByte
      description: 'The 8-bit signed integer to convert. '
    return:
      type: System.Int16
      description: A 8-bit signed integer that is equivalent to <em>value</em>.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Convert.ToInt16(System.Single)
  commentId: M:System.Convert.ToInt16(System.Single)
  id: ToInt16(System.Single)
  parent: System.Convert
  langs:
  - csharp
  - vb
  name: ToInt16(Single)
  fullName: System.Convert.ToInt16(System.Single)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Convert.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToInt16
    path: src/mscorlib/src/System/Convert.cs
    startLine: 899
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  summary: Converts the value of the specified single-precision floating-point number to an equivalent 16-bit signed integer.
  syntax:
    content: public static short ToInt16(float value)
    content.vb: Public Shared Function ToInt16(value As Single) As Short
    parameters:
    - id: value
      type: System.Single
      description: 'The single-precision floating-point number to convert. '
    return:
      type: System.Int16
      description: "\n<em>value</em>, rounded to the nearest 16-bit signed integer. If <em>value</em> is halfway between two whole numbers, the even number is returned; that is, 4.5 is converted to 4, and 5.5 is converted to 6."
  exceptions:
  - type: System.OverflowException
    commentId: T:System.OverflowException
    description: "\n<em>value</em> is greater than <xref href=\"System.Int16.MaxValue\" data-throw-if-not-resolved=\"false\"></xref> or less than <xref href=\"System.Int16.MinValue\" data-throw-if-not-resolved=\"false\"></xref>. "
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Convert.ToInt16(System.String)
  commentId: M:System.Convert.ToInt16(System.String)
  id: ToInt16(System.String)
  parent: System.Convert
  langs:
  - csharp
  - vb
  name: ToInt16(String)
  fullName: System.Convert.ToInt16(System.String)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Convert.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToInt16
    path: src/mscorlib/src/System/Convert.cs
    startLine: 911
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  summary: Converts the specified string representation of a number to an equivalent 16-bit signed integer.
  syntax:
    content: public static short ToInt16(string value)
    content.vb: Public Shared Function ToInt16(value As String) As Short
    parameters:
    - id: value
      type: System.String
      description: 'A string that contains the number to convert. '
    return:
      type: System.Int16
      description: A 16-bit signed integer that is equivalent to the number in <em>value</em>, or 0 (zero) if <em>value</em> is null.
  exceptions:
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "\n<em>value</em> does not consist of an optional sign followed by a sequence of digits (0 through 9). "
  - type: System.OverflowException
    commentId: T:System.OverflowException
    description: "\n<em>value</em> represents a number that is less than <xref href=\"System.Int16.MinValue\" data-throw-if-not-resolved=\"false\"></xref> or greater than <xref href=\"System.Int16.MaxValue\" data-throw-if-not-resolved=\"false\"></xref>. "
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Convert.ToInt16(System.String,System.IFormatProvider)
  commentId: M:System.Convert.ToInt16(System.String,System.IFormatProvider)
  id: ToInt16(System.String,System.IFormatProvider)
  parent: System.Convert
  langs:
  - csharp
  - vb
  name: ToInt16(String, IFormatProvider)
  fullName: System.Convert.ToInt16(System.String, System.IFormatProvider)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Convert.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToInt16
    path: src/mscorlib/src/System/Convert.cs
    startLine: 917
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  summary: Converts the specified string representation of a number to an equivalent 16-bit signed integer, using the specified culture-specific formatting information.
  syntax:
    content: public static short ToInt16(string value, IFormatProvider provider)
    content.vb: Public Shared Function ToInt16(value As String, provider As IFormatProvider) As Short
    parameters:
    - id: value
      type: System.String
      description: 'A string that contains the number to convert. '
    - id: provider
      type: System.IFormatProvider
      description: 'An object that supplies culture-specific formatting information. '
    return:
      type: System.Int16
      description: A 16-bit signed integer that is equivalent to the number in <em>value</em>, or 0 (zero) if <em>value</em> is null.
  exceptions:
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "\n<em>value</em> does not consist of an optional sign followed by a sequence of digits (0 through 9). "
  - type: System.OverflowException
    commentId: T:System.OverflowException
    description: "\n<em>value</em> represents a number that is less than <xref href=\"System.Int16.MinValue\" data-throw-if-not-resolved=\"false\"></xref> or greater than <xref href=\"System.Int16.MaxValue\" data-throw-if-not-resolved=\"false\"></xref>. "
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Convert.ToInt16(System.String,System.Int32)
  commentId: M:System.Convert.ToInt16(System.String,System.Int32)
  id: ToInt16(System.String,System.Int32)
  parent: System.Convert
  langs:
  - csharp
  - vb
  name: ToInt16(String, Int32)
  fullName: System.Convert.ToInt16(System.String, System.Int32)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Convert.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToInt16
    path: src/mscorlib/src/System/Convert.cs
    startLine: 2035
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  summary: Converts the string representation of a number in a specified base to an equivalent 16-bit signed integer.
  syntax:
    content: public static short ToInt16(string value, int fromBase)
    content.vb: Public Shared Function ToInt16(value As String, fromBase As Integer) As Short
    parameters:
    - id: value
      type: System.String
      description: 'A string that contains the number to convert. '
    - id: fromBase
      type: System.Int32
      description: 'The base of the number in <em>value</em>, which must be 2, 8, 10, or 16. '
    return:
      type: System.Int16
      description: A 16-bit signed integer that is equivalent to the number in <em>value</em>, or 0 (zero) if <em>value</em> is null.
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<em>fromBase</em> is not 2, 8, 10, or 16. -or-<em>value</em>, which represents a non-base 10 signed number, is prefixed with a negative sign. "
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<em>value</em> is <xref href=\"System.String.Empty\" data-throw-if-not-resolved=\"false\"></xref>. "
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "\n<em>value</em> contains a character that is not a valid digit in the base specified by <em>fromBase</em>. The exception message indicates that there are no digits to convert if the first character in <em>value</em> is invalid; otherwise, the message indicates that <em>value</em> contains invalid trailing characters."
  - type: System.OverflowException
    commentId: T:System.OverflowException
    description: "\n<em>value</em>, which represents a non-base 10 signed number, is prefixed with a negative sign.-or-<em>value</em> represents a number that is less than <xref href=\"System.Int16.MinValue\" data-throw-if-not-resolved=\"false\"></xref> or greater than <xref href=\"System.Int16.MaxValue\" data-throw-if-not-resolved=\"false\"></xref>."
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Convert.ToInt16(System.UInt16)
  commentId: M:System.Convert.ToInt16(System.UInt16)
  id: ToInt16(System.UInt16)
  parent: System.Convert
  langs:
  - csharp
  - vb
  name: ToInt16(UInt16)
  fullName: System.Convert.ToInt16(System.UInt16)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Convert.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToInt16
    path: src/mscorlib/src/System/Convert.cs
    startLine: 862
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  summary: Converts the value of the specified 16-bit unsigned integer to the equivalent 16-bit signed integer.
  syntax:
    content: public static short ToInt16(ushort value)
    content.vb: Public Shared Function ToInt16(value As UShort) As Short
    parameters:
    - id: value
      type: System.UInt16
      description: 'The 16-bit unsigned integer to convert. '
    return:
      type: System.Int16
      description: A 16-bit signed integer that is equivalent to <em>value</em>.
  exceptions:
  - type: System.OverflowException
    commentId: T:System.OverflowException
    description: "\n<em>value</em> is greater than <xref href=\"System.Int16.MaxValue\" data-throw-if-not-resolved=\"false\"></xref>. "
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Convert.ToInt16(System.UInt32)
  commentId: M:System.Convert.ToInt16(System.UInt32)
  id: ToInt16(System.UInt32)
  parent: System.Convert
  langs:
  - csharp
  - vb
  name: ToInt16(UInt32)
  fullName: System.Convert.ToInt16(System.UInt32)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Convert.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToInt16
    path: src/mscorlib/src/System/Convert.cs
    startLine: 875
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  summary: Converts the value of the specified 32-bit unsigned integer to an equivalent 16-bit signed integer.
  syntax:
    content: public static short ToInt16(uint value)
    content.vb: Public Shared Function ToInt16(value As UInteger) As Short
    parameters:
    - id: value
      type: System.UInt32
      description: 'The 32-bit unsigned integer to convert. '
    return:
      type: System.Int16
      description: A 16-bit signed integer that is equivalent to <em>value</em>.
  exceptions:
  - type: System.OverflowException
    commentId: T:System.OverflowException
    description: "\n<em>value</em> is greater than <xref href=\"System.Int16.MaxValue\" data-throw-if-not-resolved=\"false\"></xref>. "
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Convert.ToInt16(System.UInt64)
  commentId: M:System.Convert.ToInt16(System.UInt64)
  id: ToInt16(System.UInt64)
  parent: System.Convert
  langs:
  - csharp
  - vb
  name: ToInt16(UInt64)
  fullName: System.Convert.ToInt16(System.UInt64)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Convert.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToInt16
    path: src/mscorlib/src/System/Convert.cs
    startLine: 892
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  summary: Converts the value of the specified 64-bit unsigned integer to an equivalent 16-bit signed integer.
  syntax:
    content: public static short ToInt16(ulong value)
    content.vb: Public Shared Function ToInt16(value As ULong) As Short
    parameters:
    - id: value
      type: System.UInt64
      description: 'The 64-bit unsigned integer to convert. '
    return:
      type: System.Int16
      description: A 16-bit signed integer that is equivalent to <em>value</em>.
  exceptions:
  - type: System.OverflowException
    commentId: T:System.OverflowException
    description: "\n<em>value</em> is greater than <xref href=\"System.Int16.MaxValue\" data-throw-if-not-resolved=\"false\"></xref>. "
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Convert.ToInt32(System.Boolean)
  commentId: M:System.Convert.ToInt32(System.Boolean)
  id: ToInt32(System.Boolean)
  parent: System.Convert
  langs:
  - csharp
  - vb
  name: ToInt32(Boolean)
  fullName: System.Convert.ToInt32(System.Boolean)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Convert.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToInt32
    path: src/mscorlib/src/System/Convert.cs
    startLine: 1057
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  summary: Converts the specified Boolean value to the equivalent 32-bit signed integer.
  syntax:
    content: public static int ToInt32(bool value)
    content.vb: Public Shared Function ToInt32(value As Boolean) As Integer
    parameters:
    - id: value
      type: System.Boolean
      description: 'The Boolean value to convert. '
    return:
      type: System.Int32
      description: The number 1 if <em>value</em> is true; otherwise, 0.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Convert.ToInt32(System.Byte)
  commentId: M:System.Convert.ToInt32(System.Byte)
  id: ToInt32(System.Byte)
  parent: System.Convert
  langs:
  - csharp
  - vb
  name: ToInt32(Byte)
  fullName: System.Convert.ToInt32(System.Byte)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Convert.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToInt32
    path: src/mscorlib/src/System/Convert.cs
    startLine: 1070
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  summary: Converts the value of the specified 8-bit unsigned integer to the equivalent 32-bit signed integer.
  syntax:
    content: public static int ToInt32(byte value)
    content.vb: Public Shared Function ToInt32(value As Byte) As Integer
    parameters:
    - id: value
      type: System.Byte
      description: 'The 8-bit unsigned integer to convert. '
    return:
      type: System.Int32
      description: A 32-bit signed integer that is equivalent to <em>value</em>.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Convert.ToInt32(System.Char)
  commentId: M:System.Convert.ToInt32(System.Char)
  id: ToInt32(System.Char)
  parent: System.Convert
  langs:
  - csharp
  - vb
  name: ToInt32(Char)
  fullName: System.Convert.ToInt32(System.Char)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Convert.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToInt32
    path: src/mscorlib/src/System/Convert.cs
    startLine: 1061
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  summary: Converts the value of the specified Unicode character to the equivalent 32-bit signed integer.
  syntax:
    content: public static int ToInt32(char value)
    content.vb: Public Shared Function ToInt32(value As Char) As Integer
    parameters:
    - id: value
      type: System.Char
      description: 'The Unicode character to convert. '
    return:
      type: System.Int32
      description: A 32-bit signed integer that is equivalent to <em>value</em>.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Convert.ToInt32(System.Decimal)
  commentId: M:System.Convert.ToInt32(System.Decimal)
  id: ToInt32(System.Decimal)
  parent: System.Convert
  langs:
  - csharp
  - vb
  name: ToInt32(Decimal)
  fullName: System.Convert.ToInt32(System.Decimal)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Convert.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToInt32
    path: src/mscorlib/src/System/Convert.cs
    startLine: 1131
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  summary: Converts the value of the specified decimal number to an equivalent 32-bit signed integer.
  syntax:
    content: public static int ToInt32(decimal value)
    content.vb: Public Shared Function ToInt32(value As Decimal) As Integer
    parameters:
    - id: value
      type: System.Decimal
      description: 'The decimal number to convert. '
    return:
      type: System.Int32
      description: "\n<em>value</em>, rounded to the nearest 32-bit signed integer. If <em>value</em> is halfway between two whole numbers, the even number is returned; that is, 4.5 is converted to 4, and 5.5 is converted to 6."
  exceptions:
  - type: System.OverflowException
    commentId: T:System.OverflowException
    description: "\n<em>value</em> is greater than <xref href=\"System.Int32.MaxValue\" data-throw-if-not-resolved=\"false\"></xref> or less than <xref href=\"System.Int32.MinValue\" data-throw-if-not-resolved=\"false\"></xref>. "
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Convert.ToInt32(System.Double)
  commentId: M:System.Convert.ToInt32(System.Double)
  id: ToInt32(System.Double)
  parent: System.Convert
  langs:
  - csharp
  - vb
  name: ToInt32(Double)
  fullName: System.Convert.ToInt32(System.Double)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Convert.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToInt32
    path: src/mscorlib/src/System/Convert.cs
    startLine: 1111
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  summary: Converts the value of the specified double-precision floating-point number to an equivalent 32-bit signed integer.
  syntax:
    content: public static int ToInt32(double value)
    content.vb: Public Shared Function ToInt32(value As Double) As Integer
    parameters:
    - id: value
      type: System.Double
      description: 'The double-precision floating-point number to convert. '
    return:
      type: System.Int32
      description: "\n<em>value</em>, rounded to the nearest 32-bit signed integer. If <em>value</em> is halfway between two whole numbers, the even number is returned; that is, 4.5 is converted to 4, and 5.5 is converted to 6."
  exceptions:
  - type: System.OverflowException
    commentId: T:System.OverflowException
    description: "\n<em>value</em> is greater than <xref href=\"System.Int32.MaxValue\" data-throw-if-not-resolved=\"false\"></xref> or less than <xref href=\"System.Int32.MinValue\" data-throw-if-not-resolved=\"false\"></xref>. "
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Convert.ToInt32(System.Int16)
  commentId: M:System.Convert.ToInt32(System.Int16)
  id: ToInt32(System.Int16)
  parent: System.Convert
  langs:
  - csharp
  - vb
  name: ToInt32(Int16)
  fullName: System.Convert.ToInt32(System.Int16)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Convert.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToInt32
    path: src/mscorlib/src/System/Convert.cs
    startLine: 1074
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  summary: Converts the value of the specified 16-bit signed integer to an equivalent 32-bit signed integer.
  syntax:
    content: public static int ToInt32(short value)
    content.vb: Public Shared Function ToInt32(value As Short) As Integer
    parameters:
    - id: value
      type: System.Int16
      description: 'The 16-bit signed integer to convert. '
    return:
      type: System.Int32
      description: A 32-bit signed integer that is equivalent to <em>value</em>.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Convert.ToInt32(System.Int32)
  commentId: M:System.Convert.ToInt32(System.Int32)
  id: ToInt32(System.Int32)
  parent: System.Convert
  langs:
  - csharp
  - vb
  name: ToInt32(Int32)
  fullName: System.Convert.ToInt32(System.Int32)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Convert.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToInt32
    path: src/mscorlib/src/System/Convert.cs
    startLine: 1090
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  summary: Returns the specified 32-bit signed integer; no actual conversion is performed.
  syntax:
    content: public static int ToInt32(int value)
    content.vb: Public Shared Function ToInt32(value As Integer) As Integer
    parameters:
    - id: value
      type: System.Int32
      description: 'The 32-bit signed integer to return. '
    return:
      type: System.Int32
      description: "\n<em>value</em> is returned unchanged."
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Convert.ToInt32(System.Int64)
  commentId: M:System.Convert.ToInt32(System.Int64)
  id: ToInt32(System.Int64)
  parent: System.Convert
  langs:
  - csharp
  - vb
  name: ToInt32(Int64)
  fullName: System.Convert.ToInt32(System.Int64)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Convert.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToInt32
    path: src/mscorlib/src/System/Convert.cs
    startLine: 1094
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  summary: Converts the value of the specified 64-bit signed integer to an equivalent 32-bit signed integer.
  syntax:
    content: public static int ToInt32(long value)
    content.vb: Public Shared Function ToInt32(value As Long) As Integer
    parameters:
    - id: value
      type: System.Int64
      description: 'The 64-bit signed integer to convert. '
    return:
      type: System.Int32
      description: A 32-bit signed integer that is equivalent to <em>value</em>.
  exceptions:
  - type: System.OverflowException
    commentId: T:System.OverflowException
    description: "\n<em>value</em> is greater than <xref href=\"System.Int32.MaxValue\" data-throw-if-not-resolved=\"false\"></xref> or less than <xref href=\"System.Int32.MinValue\" data-throw-if-not-resolved=\"false\"></xref>. "
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Convert.ToInt32(System.Object)
  commentId: M:System.Convert.ToInt32(System.Object)
  id: ToInt32(System.Object)
  parent: System.Convert
  langs:
  - csharp
  - vb
  name: ToInt32(Object)
  fullName: System.Convert.ToInt32(System.Object)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Convert.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToInt32
    path: src/mscorlib/src/System/Convert.cs
    startLine: 1048
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  summary: Converts the value of the specified object to a 32-bit signed integer.
  syntax:
    content: public static int ToInt32(object value)
    content.vb: Public Shared Function ToInt32(value As Object) As Integer
    parameters:
    - id: value
      type: System.Object
      description: 'An object that implements the <xref href="System.IConvertible" data-throw-if-not-resolved="false"></xref> interface, or null. '
    return:
      type: System.Int32
      description: A 32-bit signed integer equivalent to <em>value</em>, or zero if <em>value</em> is null.
  exceptions:
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "\n<em>value</em> is not in an appropriate format."
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "\n<em>value</em> does not implement the  <xref href=\"System.IConvertible\" data-throw-if-not-resolved=\"false\"></xref> interface. -or-The conversion is not supported."
  - type: System.OverflowException
    commentId: T:System.OverflowException
    description: "\n<em>value</em> represents a number that is less than <xref href=\"System.Int32.MinValue\" data-throw-if-not-resolved=\"false\"></xref> or greater than <xref href=\"System.Int32.MaxValue\" data-throw-if-not-resolved=\"false\"></xref>."
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Convert.ToInt32(System.Object,System.IFormatProvider)
  commentId: M:System.Convert.ToInt32(System.Object,System.IFormatProvider)
  id: ToInt32(System.Object,System.IFormatProvider)
  parent: System.Convert
  langs:
  - csharp
  - vb
  name: ToInt32(Object, IFormatProvider)
  fullName: System.Convert.ToInt32(System.Object, System.IFormatProvider)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Convert.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToInt32
    path: src/mscorlib/src/System/Convert.cs
    startLine: 1052
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  summary: Converts the value of the specified object to a 32-bit signed integer, using the specified culture-specific formatting information.
  syntax:
    content: public static int ToInt32(object value, IFormatProvider provider)
    content.vb: Public Shared Function ToInt32(value As Object, provider As IFormatProvider) As Integer
    parameters:
    - id: value
      type: System.Object
      description: 'An object that implements the <xref href="System.IConvertible" data-throw-if-not-resolved="false"></xref> interface. '
    - id: provider
      type: System.IFormatProvider
      description: 'An object that supplies culture-specific formatting information. '
    return:
      type: System.Int32
      description: A 32-bit signed integer that is equivalent to <em>value</em>, or zero if <em>value</em> is null.
  exceptions:
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "\n<em>value</em> is not in an appropriate format."
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "\n<em>value</em> does not implement <xref href=\"System.IConvertible\" data-throw-if-not-resolved=\"false\"></xref>. "
  - type: System.OverflowException
    commentId: T:System.OverflowException
    description: "\n<em>value</em> represents a number that is less than <xref href=\"System.Int32.MinValue\" data-throw-if-not-resolved=\"false\"></xref> or greater than <xref href=\"System.Int32.MaxValue\" data-throw-if-not-resolved=\"false\"></xref>."
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Convert.ToInt32(System.SByte)
  commentId: M:System.Convert.ToInt32(System.SByte)
  id: ToInt32(System.SByte)
  parent: System.Convert
  langs:
  - csharp
  - vb
  name: ToInt32(SByte)
  fullName: System.Convert.ToInt32(System.SByte)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Convert.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToInt32
    path: src/mscorlib/src/System/Convert.cs
    startLine: 1065
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  summary: Converts the value of the specified 8-bit signed integer to the equivalent 32-bit signed integer.
  syntax:
    content: public static int ToInt32(sbyte value)
    content.vb: Public Shared Function ToInt32(value As SByte) As Integer
    parameters:
    - id: value
      type: System.SByte
      description: 'The 8-bit signed integer to convert. '
    return:
      type: System.Int32
      description: A 8-bit signed integer that is equivalent to <em>value</em>.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Convert.ToInt32(System.Single)
  commentId: M:System.Convert.ToInt32(System.Single)
  id: ToInt32(System.Single)
  parent: System.Convert
  langs:
  - csharp
  - vb
  name: ToInt32(Single)
  fullName: System.Convert.ToInt32(System.Single)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Convert.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToInt32
    path: src/mscorlib/src/System/Convert.cs
    startLine: 1107
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  summary: Converts the value of the specified single-precision floating-point number to an equivalent 32-bit signed integer.
  syntax:
    content: public static int ToInt32(float value)
    content.vb: Public Shared Function ToInt32(value As Single) As Integer
    parameters:
    - id: value
      type: System.Single
      description: 'The single-precision floating-point number to convert. '
    return:
      type: System.Int32
      description: "\n<em>value</em>, rounded to the nearest 32-bit signed integer. If <em>value</em> is halfway between two whole numbers, the even number is returned; that is, 4.5 is converted to 4, and 5.5 is converted to 6."
  exceptions:
  - type: System.OverflowException
    commentId: T:System.OverflowException
    description: "\n<em>value</em> is greater than <xref href=\"System.Int32.MaxValue\" data-throw-if-not-resolved=\"false\"></xref> or less than <xref href=\"System.Int32.MinValue\" data-throw-if-not-resolved=\"false\"></xref>. "
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Convert.ToInt32(System.String)
  commentId: M:System.Convert.ToInt32(System.String)
  id: ToInt32(System.String)
  parent: System.Convert
  langs:
  - csharp
  - vb
  name: ToInt32(String)
  fullName: System.Convert.ToInt32(System.String)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Convert.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToInt32
    path: src/mscorlib/src/System/Convert.cs
    startLine: 1136
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  summary: Converts the specified string representation of a number to an equivalent 32-bit signed integer.
  syntax:
    content: public static int ToInt32(string value)
    content.vb: Public Shared Function ToInt32(value As String) As Integer
    parameters:
    - id: value
      type: System.String
      description: 'A string that contains the number to convert. '
    return:
      type: System.Int32
      description: A 32-bit signed integer that is equivalent to the number in <em>value</em>, or 0 (zero) if <em>value</em> is null.
  exceptions:
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "\n<em>value</em> does not consist of an optional sign followed by a sequence of digits (0 through 9). "
  - type: System.OverflowException
    commentId: T:System.OverflowException
    description: "\n<em>value</em> represents a number that is less than <xref href=\"System.Int32.MinValue\" data-throw-if-not-resolved=\"false\"></xref> or greater than <xref href=\"System.Int32.MaxValue\" data-throw-if-not-resolved=\"false\"></xref>. "
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Convert.ToInt32(System.String,System.IFormatProvider)
  commentId: M:System.Convert.ToInt32(System.String,System.IFormatProvider)
  id: ToInt32(System.String,System.IFormatProvider)
  parent: System.Convert
  langs:
  - csharp
  - vb
  name: ToInt32(String, IFormatProvider)
  fullName: System.Convert.ToInt32(System.String, System.IFormatProvider)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Convert.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToInt32
    path: src/mscorlib/src/System/Convert.cs
    startLine: 1142
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  summary: Converts the specified string representation of a number to an equivalent 32-bit signed integer, using the specified culture-specific formatting information.
  syntax:
    content: public static int ToInt32(string value, IFormatProvider provider)
    content.vb: Public Shared Function ToInt32(value As String, provider As IFormatProvider) As Integer
    parameters:
    - id: value
      type: System.String
      description: 'A string that contains the number to convert. '
    - id: provider
      type: System.IFormatProvider
      description: 'An object that supplies culture-specific formatting information. '
    return:
      type: System.Int32
      description: A 32-bit signed integer that is equivalent to the number in <em>value</em>, or 0 (zero) if <em>value</em> is null.
  exceptions:
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "\n<em>value</em> does not consist of an optional sign followed by a sequence of digits (0 through 9). "
  - type: System.OverflowException
    commentId: T:System.OverflowException
    description: "\n<em>value</em> represents a number that is less than <xref href=\"System.Int32.MinValue\" data-throw-if-not-resolved=\"false\"></xref> or greater than <xref href=\"System.Int32.MaxValue\" data-throw-if-not-resolved=\"false\"></xref>. "
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Convert.ToInt32(System.String,System.Int32)
  commentId: M:System.Convert.ToInt32(System.String,System.Int32)
  id: ToInt32(System.String,System.Int32)
  parent: System.Convert
  langs:
  - csharp
  - vb
  name: ToInt32(String, Int32)
  fullName: System.Convert.ToInt32(System.String, System.Int32)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Convert.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToInt32
    path: src/mscorlib/src/System/Convert.cs
    startLine: 2069
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  summary: Converts the string representation of a number in a specified base to an equivalent 32-bit signed integer.
  syntax:
    content: public static int ToInt32(string value, int fromBase)
    content.vb: Public Shared Function ToInt32(value As String, fromBase As Integer) As Integer
    parameters:
    - id: value
      type: System.String
      description: 'A string that contains the number to convert. '
    - id: fromBase
      type: System.Int32
      description: 'The base of the number in <em>value</em>, which must be 2, 8, 10, or 16. '
    return:
      type: System.Int32
      description: A 32-bit signed integer that is equivalent to the number in <em>value</em>, or 0 (zero) if <em>value</em> is null.
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<em>fromBase</em> is not 2, 8, 10, or 16. -or-<em>value</em>, which represents a non-base 10 signed number, is prefixed with a negative sign. "
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<em>value</em> is <xref href=\"System.String.Empty\" data-throw-if-not-resolved=\"false\"></xref>. "
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "\n<em>value</em> contains a character that is not a valid digit in the base specified by <em>fromBase</em>. The exception message indicates that there are no digits to convert if the first character in <em>value</em> is invalid; otherwise, the message indicates that <em>value</em> contains invalid trailing characters."
  - type: System.OverflowException
    commentId: T:System.OverflowException
    description: "\n<em>value</em>, which represents a non-base 10 signed number, is prefixed with a negative sign.-or-<em>value</em> represents a number that is less than <xref href=\"System.Int32.MinValue\" data-throw-if-not-resolved=\"false\"></xref> or greater than <xref href=\"System.Int32.MaxValue\" data-throw-if-not-resolved=\"false\"></xref>."
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Convert.ToInt32(System.UInt16)
  commentId: M:System.Convert.ToInt32(System.UInt16)
  id: ToInt32(System.UInt16)
  parent: System.Convert
  langs:
  - csharp
  - vb
  name: ToInt32(UInt16)
  fullName: System.Convert.ToInt32(System.UInt16)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Convert.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToInt32
    path: src/mscorlib/src/System/Convert.cs
    startLine: 1078
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  summary: Converts the value of the specified 16-bit unsigned integer to the equivalent 32-bit signed integer.
  syntax:
    content: public static int ToInt32(ushort value)
    content.vb: Public Shared Function ToInt32(value As UShort) As Integer
    parameters:
    - id: value
      type: System.UInt16
      description: 'The 16-bit unsigned integer to convert. '
    return:
      type: System.Int32
      description: A 32-bit signed integer that is equivalent to <em>value</em>.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Convert.ToInt32(System.UInt32)
  commentId: M:System.Convert.ToInt32(System.UInt32)
  id: ToInt32(System.UInt32)
  parent: System.Convert
  langs:
  - csharp
  - vb
  name: ToInt32(UInt32)
  fullName: System.Convert.ToInt32(System.UInt32)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Convert.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToInt32
    path: src/mscorlib/src/System/Convert.cs
    startLine: 1083
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  summary: Converts the value of the specified 32-bit unsigned integer to an equivalent 32-bit signed integer.
  syntax:
    content: public static int ToInt32(uint value)
    content.vb: Public Shared Function ToInt32(value As UInteger) As Integer
    parameters:
    - id: value
      type: System.UInt32
      description: 'The 32-bit unsigned integer to convert. '
    return:
      type: System.Int32
      description: A 32-bit signed integer that is equivalent to <em>value</em>.
  exceptions:
  - type: System.OverflowException
    commentId: T:System.OverflowException
    description: "\n<em>value</em> is greater than <xref href=\"System.Int32.MaxValue\" data-throw-if-not-resolved=\"false\"></xref>. "
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Convert.ToInt32(System.UInt64)
  commentId: M:System.Convert.ToInt32(System.UInt64)
  id: ToInt32(System.UInt64)
  parent: System.Convert
  langs:
  - csharp
  - vb
  name: ToInt32(UInt64)
  fullName: System.Convert.ToInt32(System.UInt64)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Convert.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToInt32
    path: src/mscorlib/src/System/Convert.cs
    startLine: 1100
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  summary: Converts the value of the specified 64-bit unsigned integer to an equivalent 32-bit signed integer.
  syntax:
    content: public static int ToInt32(ulong value)
    content.vb: Public Shared Function ToInt32(value As ULong) As Integer
    parameters:
    - id: value
      type: System.UInt64
      description: 'The 64-bit unsigned integer to convert. '
    return:
      type: System.Int32
      description: A 32-bit signed integer that is equivalent to <em>value</em>.
  exceptions:
  - type: System.OverflowException
    commentId: T:System.OverflowException
    description: "\n<em>value</em> is greater than <xref href=\"System.Int32.MaxValue\" data-throw-if-not-resolved=\"false\"></xref>. "
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Convert.ToInt64(System.Boolean)
  commentId: M:System.Convert.ToInt64(System.Boolean)
  id: ToInt64(System.Boolean)
  parent: System.Convert
  langs:
  - csharp
  - vb
  name: ToInt64(Boolean)
  fullName: System.Convert.ToInt64(System.Boolean)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Convert.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToInt64
    path: src/mscorlib/src/System/Convert.cs
    startLine: 1285
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  summary: Converts the specified Boolean value to the equivalent 64-bit signed integer.
  syntax:
    content: public static long ToInt64(bool value)
    content.vb: Public Shared Function ToInt64(value As Boolean) As Long
    parameters:
    - id: value
      type: System.Boolean
      description: 'The Boolean value to convert. '
    return:
      type: System.Int64
      description: The number 1 if <em>value</em> is true; otherwise, 0.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Convert.ToInt64(System.Byte)
  commentId: M:System.Convert.ToInt64(System.Byte)
  id: ToInt64(System.Byte)
  parent: System.Convert
  langs:
  - csharp
  - vb
  name: ToInt64(Byte)
  fullName: System.Convert.ToInt64(System.Byte)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Convert.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToInt64
    path: src/mscorlib/src/System/Convert.cs
    startLine: 1298
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  summary: Converts the value of the specified 8-bit unsigned integer to the equivalent 64-bit signed integer.
  syntax:
    content: public static long ToInt64(byte value)
    content.vb: Public Shared Function ToInt64(value As Byte) As Long
    parameters:
    - id: value
      type: System.Byte
      description: 'The 8-bit unsigned integer to convert. '
    return:
      type: System.Int64
      description: A 64-bit signed integer that is equivalent to <em>value</em>.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Convert.ToInt64(System.Char)
  commentId: M:System.Convert.ToInt64(System.Char)
  id: ToInt64(System.Char)
  parent: System.Convert
  langs:
  - csharp
  - vb
  name: ToInt64(Char)
  fullName: System.Convert.ToInt64(System.Char)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Convert.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToInt64
    path: src/mscorlib/src/System/Convert.cs
    startLine: 1289
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  summary: Converts the value of the specified Unicode character to the equivalent 64-bit signed integer.
  syntax:
    content: public static long ToInt64(char value)
    content.vb: Public Shared Function ToInt64(value As Char) As Long
    parameters:
    - id: value
      type: System.Char
      description: 'The Unicode character to convert. '
    return:
      type: System.Int64
      description: A 64-bit signed integer that is equivalent to <em>value</em>.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Convert.ToInt64(System.Decimal)
  commentId: M:System.Convert.ToInt64(System.Decimal)
  id: ToInt64(System.Decimal)
  parent: System.Convert
  langs:
  - csharp
  - vb
  name: ToInt64(Decimal)
  fullName: System.Convert.ToInt64(System.Decimal)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Convert.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToInt64
    path: src/mscorlib/src/System/Convert.cs
    startLine: 1340
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  summary: Converts the value of the specified decimal number to an equivalent 64-bit signed integer.
  syntax:
    content: public static long ToInt64(decimal value)
    content.vb: Public Shared Function ToInt64(value As Decimal) As Long
    parameters:
    - id: value
      type: System.Decimal
      description: 'The decimal number to convert. '
    return:
      type: System.Int64
      description: "\n<em>value</em>, rounded to the nearest 64-bit signed integer. If <em>value</em> is halfway between two whole numbers, the even number is returned; that is, 4.5 is converted to 4, and 5.5 is converted to 6."
  exceptions:
  - type: System.OverflowException
    commentId: T:System.OverflowException
    description: "\n<em>value</em> is greater than <xref href=\"System.Int64.MaxValue\" data-throw-if-not-resolved=\"false\"></xref> or less than <xref href=\"System.Int64.MinValue\" data-throw-if-not-resolved=\"false\"></xref>. "
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Convert.ToInt64(System.Double)
  commentId: M:System.Convert.ToInt64(System.Double)
  id: ToInt64(System.Double)
  parent: System.Convert
  langs:
  - csharp
  - vb
  name: ToInt64(Double)
  fullName: System.Convert.ToInt64(System.Double)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Convert.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToInt64
    path: src/mscorlib/src/System/Convert.cs
    startLine: 1336
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  summary: Converts the value of the specified double-precision floating-point number to an equivalent 64-bit signed integer.
  syntax:
    content: public static long ToInt64(double value)
    content.vb: Public Shared Function ToInt64(value As Double) As Long
    parameters:
    - id: value
      type: System.Double
      description: 'The double-precision floating-point number to convert. '
    return:
      type: System.Int64
      description: "\n<em>value</em>, rounded to the nearest 64-bit signed integer. If <em>value</em> is halfway between two whole numbers, the even number is returned; that is, 4.5 is converted to 4, and 5.5 is converted to 6."
  exceptions:
  - type: System.OverflowException
    commentId: T:System.OverflowException
    description: "\n<em>value</em> is greater than <xref href=\"System.Int64.MaxValue\" data-throw-if-not-resolved=\"false\"></xref> or less than <xref href=\"System.Int64.MinValue\" data-throw-if-not-resolved=\"false\"></xref>. "
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Convert.ToInt64(System.Int16)
  commentId: M:System.Convert.ToInt64(System.Int16)
  id: ToInt64(System.Int16)
  parent: System.Convert
  langs:
  - csharp
  - vb
  name: ToInt64(Int16)
  fullName: System.Convert.ToInt64(System.Int16)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Convert.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToInt64
    path: src/mscorlib/src/System/Convert.cs
    startLine: 1302
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  summary: Converts the value of the specified 16-bit signed integer to an equivalent 64-bit signed integer.
  syntax:
    content: public static long ToInt64(short value)
    content.vb: Public Shared Function ToInt64(value As Short) As Long
    parameters:
    - id: value
      type: System.Int16
      description: 'The 16-bit signed integer to convert. '
    return:
      type: System.Int64
      description: A 64-bit signed integer that is equivalent to <em>value</em>.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Convert.ToInt64(System.Int32)
  commentId: M:System.Convert.ToInt64(System.Int32)
  id: ToInt64(System.Int32)
  parent: System.Convert
  langs:
  - csharp
  - vb
  name: ToInt64(Int32)
  fullName: System.Convert.ToInt64(System.Int32)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Convert.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToInt64
    path: src/mscorlib/src/System/Convert.cs
    startLine: 1311
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  summary: Converts the value of the specified 32-bit signed integer to an equivalent 64-bit signed integer.
  syntax:
    content: public static long ToInt64(int value)
    content.vb: Public Shared Function ToInt64(value As Integer) As Long
    parameters:
    - id: value
      type: System.Int32
      description: 'The 32-bit signed integer to convert. '
    return:
      type: System.Int64
      description: A 64-bit signed integer that is equivalent to <em>value</em>.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Convert.ToInt64(System.Int64)
  commentId: M:System.Convert.ToInt64(System.Int64)
  id: ToInt64(System.Int64)
  parent: System.Convert
  langs:
  - csharp
  - vb
  name: ToInt64(Int64)
  fullName: System.Convert.ToInt64(System.Int64)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Convert.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToInt64
    path: src/mscorlib/src/System/Convert.cs
    startLine: 1327
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  summary: Returns the specified 64-bit signed integer; no actual conversion is performed.
  syntax:
    content: public static long ToInt64(long value)
    content.vb: Public Shared Function ToInt64(value As Long) As Long
    parameters:
    - id: value
      type: System.Int64
      description: 'A 64-bit signed integer. '
    return:
      type: System.Int64
      description: "\n<em>value</em> is returned unchanged."
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Convert.ToInt64(System.Object)
  commentId: M:System.Convert.ToInt64(System.Object)
  id: ToInt64(System.Object)
  parent: System.Convert
  langs:
  - csharp
  - vb
  name: ToInt64(Object)
  fullName: System.Convert.ToInt64(System.Object)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Convert.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToInt64
    path: src/mscorlib/src/System/Convert.cs
    startLine: 1276
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  summary: Converts the value of the specified object to a 64-bit signed integer.
  syntax:
    content: public static long ToInt64(object value)
    content.vb: Public Shared Function ToInt64(value As Object) As Long
    parameters:
    - id: value
      type: System.Object
      description: 'An object that implements the <xref href="System.IConvertible" data-throw-if-not-resolved="false"></xref> interface, or null. '
    return:
      type: System.Int64
      description: A 64-bit signed integer that is equivalent to <em>value</em>, or zero if <em>value</em> is null.
  exceptions:
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "\n<em>value</em> is not in an appropriate format."
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "\n<em>value</em> does not implement the <xref href=\"System.IConvertible\" data-throw-if-not-resolved=\"false\"></xref> interface. -or-The conversion is not supported."
  - type: System.OverflowException
    commentId: T:System.OverflowException
    description: "\n<em>value</em> represents a number that is less than <xref href=\"System.Int64.MinValue\" data-throw-if-not-resolved=\"false\"></xref> or greater than <xref href=\"System.Int64.MaxValue\" data-throw-if-not-resolved=\"false\"></xref>."
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Convert.ToInt64(System.Object,System.IFormatProvider)
  commentId: M:System.Convert.ToInt64(System.Object,System.IFormatProvider)
  id: ToInt64(System.Object,System.IFormatProvider)
  parent: System.Convert
  langs:
  - csharp
  - vb
  name: ToInt64(Object, IFormatProvider)
  fullName: System.Convert.ToInt64(System.Object, System.IFormatProvider)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Convert.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToInt64
    path: src/mscorlib/src/System/Convert.cs
    startLine: 1280
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  summary: Converts the value of the specified object to a 64-bit signed integer, using the specified culture-specific formatting information.
  syntax:
    content: public static long ToInt64(object value, IFormatProvider provider)
    content.vb: Public Shared Function ToInt64(value As Object, provider As IFormatProvider) As Long
    parameters:
    - id: value
      type: System.Object
      description: 'An object that implements the <xref href="System.IConvertible" data-throw-if-not-resolved="false"></xref> interface. '
    - id: provider
      type: System.IFormatProvider
      description: 'An object that supplies culture-specific formatting information. '
    return:
      type: System.Int64
      description: A 64-bit signed integer that is equivalent to <em>value</em>, or zero if <em>value</em> is null.
  exceptions:
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "\n<em>value</em> is not in an appropriate format."
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "\n<em>value</em> does not implement the <xref href=\"System.IConvertible\" data-throw-if-not-resolved=\"false\"></xref> interface.-or-The conversion is not supported. "
  - type: System.OverflowException
    commentId: T:System.OverflowException
    description: "\n<em>value</em> represents a number that is less than <xref href=\"System.Int64.MinValue\" data-throw-if-not-resolved=\"false\"></xref> or greater than <xref href=\"System.Int64.MaxValue\" data-throw-if-not-resolved=\"false\"></xref>."
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Convert.ToInt64(System.SByte)
  commentId: M:System.Convert.ToInt64(System.SByte)
  id: ToInt64(System.SByte)
  parent: System.Convert
  langs:
  - csharp
  - vb
  name: ToInt64(SByte)
  fullName: System.Convert.ToInt64(System.SByte)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Convert.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToInt64
    path: src/mscorlib/src/System/Convert.cs
    startLine: 1293
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  summary: Converts the value of the specified 8-bit signed integer to the equivalent 64-bit signed integer.
  syntax:
    content: public static long ToInt64(sbyte value)
    content.vb: Public Shared Function ToInt64(value As SByte) As Long
    parameters:
    - id: value
      type: System.SByte
      description: 'The 8-bit signed integer to convert. '
    return:
      type: System.Int64
      description: A 64-bit signed integer that is equivalent to <em>value</em>.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Convert.ToInt64(System.Single)
  commentId: M:System.Convert.ToInt64(System.Single)
  id: ToInt64(System.Single)
  parent: System.Convert
  langs:
  - csharp
  - vb
  name: ToInt64(Single)
  fullName: System.Convert.ToInt64(System.Single)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Convert.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToInt64
    path: src/mscorlib/src/System/Convert.cs
    startLine: 1332
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  summary: Converts the value of the specified single-precision floating-point number to an equivalent 64-bit signed integer.
  syntax:
    content: public static long ToInt64(float value)
    content.vb: Public Shared Function ToInt64(value As Single) As Long
    parameters:
    - id: value
      type: System.Single
      description: 'The single-precision floating-point number to convert. '
    return:
      type: System.Int64
      description: "\n<em>value</em>, rounded to the nearest 64-bit signed integer. If <em>value</em> is halfway between two whole numbers, the even number is returned; that is, 4.5 is converted to 4, and 5.5 is converted to 6."
  exceptions:
  - type: System.OverflowException
    commentId: T:System.OverflowException
    description: "\n<em>value</em> is greater than <xref href=\"System.Int64.MaxValue\" data-throw-if-not-resolved=\"false\"></xref> or less than <xref href=\"System.Int64.MinValue\" data-throw-if-not-resolved=\"false\"></xref>. "
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Convert.ToInt64(System.String)
  commentId: M:System.Convert.ToInt64(System.String)
  id: ToInt64(System.String)
  parent: System.Convert
  langs:
  - csharp
  - vb
  name: ToInt64(String)
  fullName: System.Convert.ToInt64(System.String)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Convert.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToInt64
    path: src/mscorlib/src/System/Convert.cs
    startLine: 1344
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  summary: Converts the specified string representation of a number to an equivalent 64-bit signed integer.
  syntax:
    content: public static long ToInt64(string value)
    content.vb: Public Shared Function ToInt64(value As String) As Long
    parameters:
    - id: value
      type: System.String
      description: 'A string that contains a number to convert. '
    return:
      type: System.Int64
      description: A 64-bit signed integer that is equivalent to the number in <em>value</em>, or 0 (zero) if <em>value</em> is null.
  exceptions:
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "\n<em>value</em> does not consist of an optional sign followed by a sequence of digits (0 through 9). "
  - type: System.OverflowException
    commentId: T:System.OverflowException
    description: "\n<em>value</em> represents a number that is less than <xref href=\"System.Int64.MinValue\" data-throw-if-not-resolved=\"false\"></xref> or greater than <xref href=\"System.Int64.MaxValue\" data-throw-if-not-resolved=\"false\"></xref>. "
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Convert.ToInt64(System.String,System.IFormatProvider)
  commentId: M:System.Convert.ToInt64(System.String,System.IFormatProvider)
  id: ToInt64(System.String,System.IFormatProvider)
  parent: System.Convert
  langs:
  - csharp
  - vb
  name: ToInt64(String, IFormatProvider)
  fullName: System.Convert.ToInt64(System.String, System.IFormatProvider)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Convert.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToInt64
    path: src/mscorlib/src/System/Convert.cs
    startLine: 1350
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  summary: Converts the specified string representation of a number to an equivalent 64-bit signed integer, using the specified culture-specific formatting information.
  syntax:
    content: public static long ToInt64(string value, IFormatProvider provider)
    content.vb: Public Shared Function ToInt64(value As String, provider As IFormatProvider) As Long
    parameters:
    - id: value
      type: System.String
      description: 'A string that contains the number to convert. '
    - id: provider
      type: System.IFormatProvider
      description: 'An object that supplies culture-specific formatting information. '
    return:
      type: System.Int64
      description: A 64-bit signed integer that is equivalent to the number in <em>value</em>, or 0 (zero) if <em>value</em> is null.
  exceptions:
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "\n<em>value</em> does not consist of an optional sign followed by a sequence of digits (0 through 9). "
  - type: System.OverflowException
    commentId: T:System.OverflowException
    description: "\n<em>value</em> represents a number that is less than <xref href=\"System.Int64.MinValue\" data-throw-if-not-resolved=\"false\"></xref> or greater than <xref href=\"System.Int64.MaxValue\" data-throw-if-not-resolved=\"false\"></xref>. "
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Convert.ToInt64(System.String,System.Int32)
  commentId: M:System.Convert.ToInt64(System.String,System.Int32)
  id: ToInt64(System.String,System.Int32)
  parent: System.Convert
  langs:
  - csharp
  - vb
  name: ToInt64(String, Int32)
  fullName: System.Convert.ToInt64(System.String, System.Int32)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Convert.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToInt64
    path: src/mscorlib/src/System/Convert.cs
    startLine: 2094
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  summary: Converts the string representation of a number in a specified base to an equivalent 64-bit signed integer.
  syntax:
    content: public static long ToInt64(string value, int fromBase)
    content.vb: Public Shared Function ToInt64(value As String, fromBase As Integer) As Long
    parameters:
    - id: value
      type: System.String
      description: 'A string that contains the number to convert. '
    - id: fromBase
      type: System.Int32
      description: 'The base of the number in <em>value</em>, which must be 2, 8, 10, or 16. '
    return:
      type: System.Int64
      description: A 64-bit signed integer that is equivalent to the number in <em>value</em>, or 0 (zero) if <em>value</em> is null.
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<em>fromBase</em> is not 2, 8, 10, or 16. -or-<em>value</em>, which represents a non-base 10 signed number, is prefixed with a negative sign. "
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<em>value</em> is <xref href=\"System.String.Empty\" data-throw-if-not-resolved=\"false\"></xref>. "
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "\n<em>value</em> contains a character that is not a valid digit in the base specified by <em>fromBase</em>. The exception message indicates that there are no digits to convert if the first character in <em>value</em> is invalid; otherwise, the message indicates that <em>value</em> contains invalid trailing characters."
  - type: System.OverflowException
    commentId: T:System.OverflowException
    description: "\n<em>value</em>, which represents a non-base 10 signed number, is prefixed with a negative sign.-or-<em>value</em> represents a number that is less than <xref href=\"System.Int64.MinValue\" data-throw-if-not-resolved=\"false\"></xref> or greater than <xref href=\"System.Int64.MaxValue\" data-throw-if-not-resolved=\"false\"></xref>."
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Convert.ToInt64(System.UInt16)
  commentId: M:System.Convert.ToInt64(System.UInt16)
  id: ToInt64(System.UInt16)
  parent: System.Convert
  langs:
  - csharp
  - vb
  name: ToInt64(UInt16)
  fullName: System.Convert.ToInt64(System.UInt16)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Convert.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToInt64
    path: src/mscorlib/src/System/Convert.cs
    startLine: 1306
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  summary: Converts the value of the specified 16-bit unsigned integer to the equivalent 64-bit signed integer.
  syntax:
    content: public static long ToInt64(ushort value)
    content.vb: Public Shared Function ToInt64(value As UShort) As Long
    parameters:
    - id: value
      type: System.UInt16
      description: 'The 16-bit unsigned integer to convert. '
    return:
      type: System.Int64
      description: A 64-bit signed integer that is equivalent to <em>value</em>.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Convert.ToInt64(System.UInt32)
  commentId: M:System.Convert.ToInt64(System.UInt32)
  id: ToInt64(System.UInt32)
  parent: System.Convert
  langs:
  - csharp
  - vb
  name: ToInt64(UInt32)
  fullName: System.Convert.ToInt64(System.UInt32)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Convert.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToInt64
    path: src/mscorlib/src/System/Convert.cs
    startLine: 1315
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  summary: Converts the value of the specified 32-bit unsigned integer to an equivalent 64-bit signed integer.
  syntax:
    content: public static long ToInt64(uint value)
    content.vb: Public Shared Function ToInt64(value As UInteger) As Long
    parameters:
    - id: value
      type: System.UInt32
      description: 'The 32-bit unsigned integer to convert. '
    return:
      type: System.Int64
      description: A 64-bit signed integer that is equivalent to <em>value</em>.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Convert.ToInt64(System.UInt64)
  commentId: M:System.Convert.ToInt64(System.UInt64)
  id: ToInt64(System.UInt64)
  parent: System.Convert
  langs:
  - csharp
  - vb
  name: ToInt64(UInt64)
  fullName: System.Convert.ToInt64(System.UInt64)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Convert.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToInt64
    path: src/mscorlib/src/System/Convert.cs
    startLine: 1320
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  summary: Converts the value of the specified 64-bit unsigned integer to an equivalent 64-bit signed integer.
  syntax:
    content: public static long ToInt64(ulong value)
    content.vb: Public Shared Function ToInt64(value As ULong) As Long
    parameters:
    - id: value
      type: System.UInt64
      description: 'The 64-bit unsigned integer to convert. '
    return:
      type: System.Int64
      description: A 64-bit signed integer that is equivalent to <em>value</em>.
  exceptions:
  - type: System.OverflowException
    commentId: T:System.OverflowException
    description: "\n<em>value</em> is greater than <xref href=\"System.Int64.MaxValue\" data-throw-if-not-resolved=\"false\"></xref>. "
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Convert.ToSByte(System.Boolean)
  commentId: M:System.Convert.ToSByte(System.Boolean)
  id: ToSByte(System.Boolean)
  parent: System.Convert
  langs:
  - csharp
  - vb
  name: ToSByte(Boolean)
  fullName: System.Convert.ToSByte(System.Boolean)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Convert.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToSByte
    path: src/mscorlib/src/System/Convert.cs
    startLine: 628
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  summary: Converts the specified Boolean value to the equivalent 8-bit signed integer.
  syntax:
    content: public static sbyte ToSByte(bool value)
    content.vb: Public Shared Function ToSByte(value As Boolean) As SByte
    parameters:
    - id: value
      type: System.Boolean
      description: 'The Boolean value to convert. '
    return:
      type: System.SByte
      description: The number 1 if <em>value</em> is true; otherwise, 0.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Convert.ToSByte(System.Byte)
  commentId: M:System.Convert.ToSByte(System.Byte)
  id: ToSByte(System.Byte)
  parent: System.Convert
  langs:
  - csharp
  - vb
  name: ToSByte(Byte)
  fullName: System.Convert.ToSByte(System.Byte)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Convert.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToSByte
    path: src/mscorlib/src/System/Convert.cs
    startLine: 645
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  summary: Converts the value of the specified 8-bit unsigned integer to the equivalent 8-bit signed integer.
  syntax:
    content: public static sbyte ToSByte(byte value)
    content.vb: Public Shared Function ToSByte(value As Byte) As SByte
    parameters:
    - id: value
      type: System.Byte
      description: 'The 8-bit unsigned integer to convert. '
    return:
      type: System.SByte
      description: An 8-bit signed integer that is equivalent to <em>value</em>.
  exceptions:
  - type: System.OverflowException
    commentId: T:System.OverflowException
    description: "\n<em>value</em> is greater than <xref href=\"System.SByte.MaxValue\" data-throw-if-not-resolved=\"false\"></xref>. "
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Convert.ToSByte(System.Char)
  commentId: M:System.Convert.ToSByte(System.Char)
  id: ToSByte(System.Char)
  parent: System.Convert
  langs:
  - csharp
  - vb
  name: ToSByte(Char)
  fullName: System.Convert.ToSByte(System.Char)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Convert.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToSByte
    path: src/mscorlib/src/System/Convert.cs
    startLine: 638
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  summary: Converts the value of the specified Unicode character to the equivalent 8-bit signed integer.
  syntax:
    content: public static sbyte ToSByte(char value)
    content.vb: Public Shared Function ToSByte(value As Char) As SByte
    parameters:
    - id: value
      type: System.Char
      description: 'The Unicode character to convert. '
    return:
      type: System.SByte
      description: An 8-bit signed integer that is equivalent to <em>value</em>.
  exceptions:
  - type: System.OverflowException
    commentId: T:System.OverflowException
    description: "\n<em>value</em> is greater than <xref href=\"System.SByte.MaxValue\" data-throw-if-not-resolved=\"false\"></xref>. "
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Convert.ToSByte(System.Decimal)
  commentId: M:System.Convert.ToSByte(System.Decimal)
  id: ToSByte(System.Decimal)
  parent: System.Convert
  langs:
  - csharp
  - vb
  name: ToSByte(Decimal)
  fullName: System.Convert.ToSByte(System.Decimal)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Convert.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToSByte
    path: src/mscorlib/src/System/Convert.cs
    startLine: 704
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  summary: Converts the value of the specified decimal number to an equivalent 8-bit signed integer.
  syntax:
    content: public static sbyte ToSByte(decimal value)
    content.vb: Public Shared Function ToSByte(value As Decimal) As SByte
    parameters:
    - id: value
      type: System.Decimal
      description: 'The decimal number to convert. '
    return:
      type: System.SByte
      description: "\n<em>value</em>, rounded to the nearest 8-bit signed integer. If <em>value</em> is halfway between two whole numbers, the even number is returned; that is, 4.5 is converted to 4, and 5.5 is converted to 6."
  exceptions:
  - type: System.OverflowException
    commentId: T:System.OverflowException
    description: "\n<em>value</em> is greater than <xref href=\"System.SByte.MaxValue\" data-throw-if-not-resolved=\"false\"></xref> or less than <xref href=\"System.SByte.MinValue\" data-throw-if-not-resolved=\"false\"></xref>. "
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Convert.ToSByte(System.Double)
  commentId: M:System.Convert.ToSByte(System.Double)
  id: ToSByte(System.Double)
  parent: System.Convert
  langs:
  - csharp
  - vb
  name: ToSByte(Double)
  fullName: System.Convert.ToSByte(System.Double)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Convert.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToSByte
    path: src/mscorlib/src/System/Convert.cs
    startLine: 699
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  summary: Converts the value of the specified double-precision floating-point number to an equivalent 8-bit signed integer.
  syntax:
    content: public static sbyte ToSByte(double value)
    content.vb: Public Shared Function ToSByte(value As Double) As SByte
    parameters:
    - id: value
      type: System.Double
      description: 'The double-precision floating-point number to convert. '
    return:
      type: System.SByte
      description: "\n<em>value</em>, rounded to the nearest 8-bit signed integer. If <em>value</em> is halfway between two whole numbers, the even number is returned; that is, 4.5 is converted to 4, and 5.5 is converted to 6."
  exceptions:
  - type: System.OverflowException
    commentId: T:System.OverflowException
    description: "\n<em>value</em> is greater than <xref href=\"System.SByte.MaxValue\" data-throw-if-not-resolved=\"false\"></xref> or less than <xref href=\"System.SByte.MinValue\" data-throw-if-not-resolved=\"false\"></xref>. "
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Convert.ToSByte(System.Int16)
  commentId: M:System.Convert.ToSByte(System.Int16)
  id: ToSByte(System.Int16)
  parent: System.Convert
  langs:
  - csharp
  - vb
  name: ToSByte(Int16)
  fullName: System.Convert.ToSByte(System.Int16)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Convert.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToSByte
    path: src/mscorlib/src/System/Convert.cs
    startLine: 652
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  summary: Converts the value of the specified 16-bit signed integer to the equivalent 8-bit signed integer.
  syntax:
    content: public static sbyte ToSByte(short value)
    content.vb: Public Shared Function ToSByte(value As Short) As SByte
    parameters:
    - id: value
      type: System.Int16
      description: 'The 16-bit signed integer to convert. '
    return:
      type: System.SByte
      description: An 8-bit signed integer that is equivalent to <em>value</em>.
  exceptions:
  - type: System.OverflowException
    commentId: T:System.OverflowException
    description: "\n<em>value</em> is greater than <xref href=\"System.SByte.MaxValue\" data-throw-if-not-resolved=\"false\"></xref> or less than <xref href=\"System.SByte.MinValue\" data-throw-if-not-resolved=\"false\"></xref>. "
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Convert.ToSByte(System.Int32)
  commentId: M:System.Convert.ToSByte(System.Int32)
  id: ToSByte(System.Int32)
  parent: System.Convert
  langs:
  - csharp
  - vb
  name: ToSByte(Int32)
  fullName: System.Convert.ToSByte(System.Int32)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Convert.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToSByte
    path: src/mscorlib/src/System/Convert.cs
    startLine: 666
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  summary: Converts the value of the specified 32-bit signed integer to an equivalent 8-bit signed integer.
  syntax:
    content: public static sbyte ToSByte(int value)
    content.vb: Public Shared Function ToSByte(value As Integer) As SByte
    parameters:
    - id: value
      type: System.Int32
      description: 'The 32-bit signed integer to convert. '
    return:
      type: System.SByte
      description: An 8-bit signed integer that is equivalent to <em>value</em>.
  exceptions:
  - type: System.OverflowException
    commentId: T:System.OverflowException
    description: "\n<em>value</em> is greater than <xref href=\"System.SByte.MaxValue\" data-throw-if-not-resolved=\"false\"></xref> or less than <xref href=\"System.SByte.MinValue\" data-throw-if-not-resolved=\"false\"></xref>. "
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Convert.ToSByte(System.Int64)
  commentId: M:System.Convert.ToSByte(System.Int64)
  id: ToSByte(System.Int64)
  parent: System.Convert
  langs:
  - csharp
  - vb
  name: ToSByte(Int64)
  fullName: System.Convert.ToSByte(System.Int64)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Convert.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToSByte
    path: src/mscorlib/src/System/Convert.cs
    startLine: 680
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  summary: Converts the value of the specified 64-bit signed integer to an equivalent 8-bit signed integer.
  syntax:
    content: public static sbyte ToSByte(long value)
    content.vb: Public Shared Function ToSByte(value As Long) As SByte
    parameters:
    - id: value
      type: System.Int64
      description: 'The 64-bit signed integer to convert. '
    return:
      type: System.SByte
      description: An 8-bit signed integer that is equivalent to <em>value</em>.
  exceptions:
  - type: System.OverflowException
    commentId: T:System.OverflowException
    description: "\n<em>value</em> is greater than <xref href=\"System.SByte.MaxValue\" data-throw-if-not-resolved=\"false\"></xref> or less than <xref href=\"System.SByte.MinValue\" data-throw-if-not-resolved=\"false\"></xref>. "
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Convert.ToSByte(System.Object)
  commentId: M:System.Convert.ToSByte(System.Object)
  id: ToSByte(System.Object)
  parent: System.Convert
  langs:
  - csharp
  - vb
  name: ToSByte(Object)
  fullName: System.Convert.ToSByte(System.Object)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Convert.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToSByte
    path: src/mscorlib/src/System/Convert.cs
    startLine: 618
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  summary: Converts the value of the specified object to an 8-bit signed integer.
  syntax:
    content: public static sbyte ToSByte(object value)
    content.vb: Public Shared Function ToSByte(value As Object) As SByte
    parameters:
    - id: value
      type: System.Object
      description: 'An object that implements the <xref href="System.IConvertible" data-throw-if-not-resolved="false"></xref> interface, or null. '
    return:
      type: System.SByte
      description: An 8-bit signed integer that is equivalent to <em>value</em>, or zero if <em>value</em> is null.
  exceptions:
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "\n<em>value</em> is not in an appropriate format. "
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "\n<em>value</em> does not implement the <xref href=\"System.IConvertible\" data-throw-if-not-resolved=\"false\"></xref> interface. -or-The conversion is not supported."
  - type: System.OverflowException
    commentId: T:System.OverflowException
    description: "\n<em>value</em> represents a number that is less than <xref href=\"System.SByte.MinValue\" data-throw-if-not-resolved=\"false\"></xref> or greater than <xref href=\"System.SByte.MaxValue\" data-throw-if-not-resolved=\"false\"></xref>."
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Convert.ToSByte(System.Object,System.IFormatProvider)
  commentId: M:System.Convert.ToSByte(System.Object,System.IFormatProvider)
  id: ToSByte(System.Object,System.IFormatProvider)
  parent: System.Convert
  langs:
  - csharp
  - vb
  name: ToSByte(Object, IFormatProvider)
  fullName: System.Convert.ToSByte(System.Object, System.IFormatProvider)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Convert.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToSByte
    path: src/mscorlib/src/System/Convert.cs
    startLine: 623
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  summary: Converts the value of the specified object to an 8-bit signed integer, using the specified culture-specific formatting information.
  syntax:
    content: public static sbyte ToSByte(object value, IFormatProvider provider)
    content.vb: Public Shared Function ToSByte(value As Object, provider As IFormatProvider) As SByte
    parameters:
    - id: value
      type: System.Object
      description: 'An object that implements the <xref href="System.IConvertible" data-throw-if-not-resolved="false"></xref> interface. '
    - id: provider
      type: System.IFormatProvider
      description: 'An object that supplies culture-specific formatting information. '
    return:
      type: System.SByte
      description: An 8-bit signed integer that is equivalent to <em>value</em>, or zero if <em>value</em> is null.
  exceptions:
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "\n<em>value</em> is not in an appropriate format. "
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "\n<em>value</em> does not implement the <xref href=\"System.IConvertible\" data-throw-if-not-resolved=\"false\"></xref> interface. -or-The conversion is not supported."
  - type: System.OverflowException
    commentId: T:System.OverflowException
    description: "\n<em>value</em> represents a number that is less than <xref href=\"System.SByte.MinValue\" data-throw-if-not-resolved=\"false\"></xref> or greater than <xref href=\"System.SByte.MaxValue\" data-throw-if-not-resolved=\"false\"></xref>."
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Convert.ToSByte(System.SByte)
  commentId: M:System.Convert.ToSByte(System.SByte)
  id: ToSByte(System.SByte)
  parent: System.Convert
  langs:
  - csharp
  - vb
  name: ToSByte(SByte)
  fullName: System.Convert.ToSByte(System.SByte)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Convert.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToSByte
    path: src/mscorlib/src/System/Convert.cs
    startLine: 633
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  summary: Returns the specified 8-bit signed integer; no actual conversion is performed.
  syntax:
    content: public static sbyte ToSByte(sbyte value)
    content.vb: Public Shared Function ToSByte(value As SByte) As SByte
    parameters:
    - id: value
      type: System.SByte
      description: 'The 8-bit signed integer to return. '
    return:
      type: System.SByte
      description: "\n<em>value</em> is returned unchanged."
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Convert.ToSByte(System.Single)
  commentId: M:System.Convert.ToSByte(System.Single)
  id: ToSByte(System.Single)
  parent: System.Convert
  langs:
  - csharp
  - vb
  name: ToSByte(Single)
  fullName: System.Convert.ToSByte(System.Single)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Convert.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToSByte
    path: src/mscorlib/src/System/Convert.cs
    startLine: 694
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  summary: Converts the value of the specified single-precision floating-point number to an equivalent 8-bit signed integer.
  syntax:
    content: public static sbyte ToSByte(float value)
    content.vb: Public Shared Function ToSByte(value As Single) As SByte
    parameters:
    - id: value
      type: System.Single
      description: 'The single-precision floating-point number to convert. '
    return:
      type: System.SByte
      description: "\n<em>value</em>, rounded to the nearest 8-bit signed integer. If <em>value</em> is halfway between two whole numbers, the even number is returned; that is, 4.5 is converted to 4, and 5.5 is converted to 6."
  exceptions:
  - type: System.OverflowException
    commentId: T:System.OverflowException
    description: "\n<em>value</em> is greater than <xref href=\"System.SByte.MaxValue\" data-throw-if-not-resolved=\"false\"></xref> or less than <xref href=\"System.SByte.MinValue\" data-throw-if-not-resolved=\"false\"></xref>. "
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Convert.ToSByte(System.String)
  commentId: M:System.Convert.ToSByte(System.String)
  id: ToSByte(System.String)
  parent: System.Convert
  langs:
  - csharp
  - vb
  name: ToSByte(String)
  fullName: System.Convert.ToSByte(System.String)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Convert.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToSByte
    path: src/mscorlib/src/System/Convert.cs
    startLine: 709
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  summary: Converts the specified string representation of a number to an equivalent 8-bit signed integer.
  syntax:
    content: public static sbyte ToSByte(string value)
    content.vb: Public Shared Function ToSByte(value As String) As SByte
    parameters:
    - id: value
      type: System.String
      description: 'A string that contains the number to convert. '
    return:
      type: System.SByte
      description: An 8-bit signed integer that is equivalent to the number in <em>value</em>, or 0 (zero) if value is null.
  exceptions:
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "\n<em>value</em> does not consist of an optional sign followed by a sequence of digits (0 through 9). "
  - type: System.OverflowException
    commentId: T:System.OverflowException
    description: "\n<em>value</em> represents a number that is less than <xref href=\"System.SByte.MinValue\" data-throw-if-not-resolved=\"false\"></xref> or greater than <xref href=\"System.SByte.MaxValue\" data-throw-if-not-resolved=\"false\"></xref>. "
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Convert.ToSByte(System.String,System.IFormatProvider)
  commentId: M:System.Convert.ToSByte(System.String,System.IFormatProvider)
  id: ToSByte(System.String,System.IFormatProvider)
  parent: System.Convert
  langs:
  - csharp
  - vb
  name: ToSByte(String, IFormatProvider)
  fullName: System.Convert.ToSByte(System.String, System.IFormatProvider)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Convert.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToSByte
    path: src/mscorlib/src/System/Convert.cs
    startLine: 716
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  summary: Converts the specified string representation of a number to an equivalent 8-bit signed integer, using the specified culture-specific formatting information.
  syntax:
    content: public static sbyte ToSByte(string value, IFormatProvider provider)
    content.vb: Public Shared Function ToSByte(value As String, provider As IFormatProvider) As SByte
    parameters:
    - id: value
      type: System.String
      description: 'A string that contains the number to convert. '
    - id: provider
      type: System.IFormatProvider
      description: 'An object that supplies culture-specific formatting information. '
    return:
      type: System.SByte
      description: An 8-bit signed integer that is equivalent to <em>value</em>.
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>value</em> is null. "
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "\n<em>value</em> does not consist of an optional sign followed by a sequence of digits (0 through 9). "
  - type: System.OverflowException
    commentId: T:System.OverflowException
    description: "\n<em>value</em> represents a number that is less than <xref href=\"System.SByte.MinValue\" data-throw-if-not-resolved=\"false\"></xref> or greater than <xref href=\"System.SByte.MaxValue\" data-throw-if-not-resolved=\"false\"></xref>. "
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Convert.ToSByte(System.String,System.Int32)
  commentId: M:System.Convert.ToSByte(System.String,System.Int32)
  id: ToSByte(System.String,System.Int32)
  parent: System.Convert
  langs:
  - csharp
  - vb
  name: ToSByte(String, Int32)
  fullName: System.Convert.ToSByte(System.String, System.Int32)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Convert.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToSByte
    path: src/mscorlib/src/System/Convert.cs
    startLine: 2016
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  summary: Converts the string representation of a number in a specified base to an equivalent 8-bit signed integer.
  syntax:
    content: public static sbyte ToSByte(string value, int fromBase)
    content.vb: Public Shared Function ToSByte(value As String, fromBase As Integer) As SByte
    parameters:
    - id: value
      type: System.String
      description: 'A string that contains the number to convert. '
    - id: fromBase
      type: System.Int32
      description: 'The base of the number in <em>value</em>, which must be 2, 8, 10, or 16. '
    return:
      type: System.SByte
      description: An 8-bit signed integer that is equivalent to the number in <em>value</em>, or 0 (zero) if <em>value</em> is null.
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<em>fromBase</em> is not 2, 8, 10, or 16. -or-<em>value</em>, which represents a non-base 10 signed number, is prefixed with a negative sign. "
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<em>value</em> is <xref href=\"System.String.Empty\" data-throw-if-not-resolved=\"false\"></xref>. "
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "\n<em>value</em> contains a character that is not a valid digit in the base specified by <em>fromBase</em>. The exception message indicates that there are no digits to convert if the first character in <em>value</em> is invalid; otherwise, the message indicates that <em>value</em> contains invalid trailing characters."
  - type: System.OverflowException
    commentId: T:System.OverflowException
    description: "\n<em>value</em>, which represents a non-base 10 signed number, is prefixed with a negative sign.-or-<em>value</em> represents a number that is less than <xref href=\"System.SByte.MinValue\" data-throw-if-not-resolved=\"false\"></xref> or greater than <xref href=\"System.SByte.MaxValue\" data-throw-if-not-resolved=\"false\"></xref>."
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Convert.ToSByte(System.UInt16)
  commentId: M:System.Convert.ToSByte(System.UInt16)
  id: ToSByte(System.UInt16)
  parent: System.Convert
  langs:
  - csharp
  - vb
  name: ToSByte(UInt16)
  fullName: System.Convert.ToSByte(System.UInt16)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Convert.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToSByte
    path: src/mscorlib/src/System/Convert.cs
    startLine: 659
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  summary: Converts the value of the specified 16-bit unsigned integer to the equivalent 8-bit signed integer.
  syntax:
    content: public static sbyte ToSByte(ushort value)
    content.vb: Public Shared Function ToSByte(value As UShort) As SByte
    parameters:
    - id: value
      type: System.UInt16
      description: 'The 16-bit unsigned integer to convert. '
    return:
      type: System.SByte
      description: An 8-bit signed integer that is equivalent to <em>value</em>.
  exceptions:
  - type: System.OverflowException
    commentId: T:System.OverflowException
    description: "\n<em>value</em> is greater than <xref href=\"System.SByte.MaxValue\" data-throw-if-not-resolved=\"false\"></xref>. "
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Convert.ToSByte(System.UInt32)
  commentId: M:System.Convert.ToSByte(System.UInt32)
  id: ToSByte(System.UInt32)
  parent: System.Convert
  langs:
  - csharp
  - vb
  name: ToSByte(UInt32)
  fullName: System.Convert.ToSByte(System.UInt32)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Convert.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToSByte
    path: src/mscorlib/src/System/Convert.cs
    startLine: 673
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  summary: Converts the value of the specified 32-bit unsigned integer to an equivalent 8-bit signed integer.
  syntax:
    content: public static sbyte ToSByte(uint value)
    content.vb: Public Shared Function ToSByte(value As UInteger) As SByte
    parameters:
    - id: value
      type: System.UInt32
      description: 'The 32-bit unsigned integer to convert. '
    return:
      type: System.SByte
      description: An 8-bit signed integer that is equivalent to <em>value</em>.
  exceptions:
  - type: System.OverflowException
    commentId: T:System.OverflowException
    description: "\n<em>value</em> is greater than <xref href=\"System.SByte.MaxValue\" data-throw-if-not-resolved=\"false\"></xref> or less than <xref href=\"System.SByte.MinValue\" data-throw-if-not-resolved=\"false\"></xref>. "
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Convert.ToSByte(System.UInt64)
  commentId: M:System.Convert.ToSByte(System.UInt64)
  id: ToSByte(System.UInt64)
  parent: System.Convert
  langs:
  - csharp
  - vb
  name: ToSByte(UInt64)
  fullName: System.Convert.ToSByte(System.UInt64)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Convert.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToSByte
    path: src/mscorlib/src/System/Convert.cs
    startLine: 687
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  summary: Converts the value of the specified 64-bit unsigned integer to an equivalent 8-bit signed integer.
  syntax:
    content: public static sbyte ToSByte(ulong value)
    content.vb: Public Shared Function ToSByte(value As ULong) As SByte
    parameters:
    - id: value
      type: System.UInt64
      description: 'The 64-bit unsigned integer to convert. '
    return:
      type: System.SByte
      description: An 8-bit signed integer that is equivalent to <em>value</em>.
  exceptions:
  - type: System.OverflowException
    commentId: T:System.OverflowException
    description: "\n<em>value</em> is greater than <xref href=\"System.SByte.MaxValue\" data-throw-if-not-resolved=\"false\"></xref> or less than <xref href=\"System.SByte.MinValue\" data-throw-if-not-resolved=\"false\"></xref>. "
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Convert.ToSingle(System.Boolean)
  commentId: M:System.Convert.ToSingle(System.Boolean)
  id: ToSingle(System.Boolean)
  parent: System.Convert
  langs:
  - csharp
  - vb
  name: ToSingle(Boolean)
  fullName: System.Convert.ToSingle(System.Boolean)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Convert.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToSingle
    path: src/mscorlib/src/System/Convert.cs
    startLine: 1548
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  summary: Converts the specified Boolean value to the equivalent single-precision floating-point number.
  syntax:
    content: public static float ToSingle(bool value)
    content.vb: Public Shared Function ToSingle(value As Boolean) As Single
    parameters:
    - id: value
      type: System.Boolean
      description: 'The Boolean value to convert. '
    return:
      type: System.Single
      description: The number 1 if <em>value</em> is true; otherwise, 0.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Convert.ToSingle(System.Byte)
  commentId: M:System.Convert.ToSingle(System.Byte)
  id: ToSingle(System.Byte)
  parent: System.Convert
  langs:
  - csharp
  - vb
  name: ToSingle(Byte)
  fullName: System.Convert.ToSingle(System.Byte)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Convert.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToSingle
    path: src/mscorlib/src/System/Convert.cs
    startLine: 1488
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  summary: Converts the value of the specified 8-bit unsigned integer to the equivalent single-precision floating-point number.
  syntax:
    content: public static float ToSingle(byte value)
    content.vb: Public Shared Function ToSingle(value As Byte) As Single
    parameters:
    - id: value
      type: System.Byte
      description: 'The 8-bit unsigned integer to convert. '
    return:
      type: System.Single
      description: A single-precision floating-point number that is equivalent to <em>value</em>.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Convert.ToSingle(System.Decimal)
  commentId: M:System.Convert.ToSingle(System.Decimal)
  id: ToSingle(System.Decimal)
  parent: System.Convert
  langs:
  - csharp
  - vb
  name: ToSingle(Decimal)
  fullName: System.Convert.ToSingle(System.Decimal)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Convert.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToSingle
    path: src/mscorlib/src/System/Convert.cs
    startLine: 1531
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  summary: Converts the value of the specified decimal number to an equivalent single-precision floating-point number.
  syntax:
    content: public static float ToSingle(decimal value)
    content.vb: Public Shared Function ToSingle(value As Decimal) As Single
    parameters:
    - id: value
      type: System.Decimal
      description: 'The decimal number to convert. '
    return:
      type: System.Single
      description: A single-precision floating-point number that is equivalent to <em>value</em>.<em>value</em> is rounded using rounding to nearest. For example, when rounded to two decimals, the value 2.345 becomes 2.34 and the value 2.355 becomes 2.36.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Convert.ToSingle(System.Double)
  commentId: M:System.Convert.ToSingle(System.Double)
  id: ToSingle(System.Double)
  parent: System.Convert
  langs:
  - csharp
  - vb
  name: ToSingle(Double)
  fullName: System.Convert.ToSingle(System.Double)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Convert.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToSingle
    path: src/mscorlib/src/System/Convert.cs
    startLine: 1527
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  summary: Converts the value of the specified double-precision floating-point number to an equivalent single-precision floating-point number.
  syntax:
    content: public static float ToSingle(double value)
    content.vb: Public Shared Function ToSingle(value As Double) As Single
    parameters:
    - id: value
      type: System.Double
      description: 'The double-precision floating-point number to convert. '
    return:
      type: System.Single
      description: A single-precision floating-point number that is equivalent to <em>value</em>.<em>value</em> is rounded using rounding to nearest. For example, when rounded to two decimals, the value 2.345 becomes 2.34 and the value 2.355 becomes 2.36.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Convert.ToSingle(System.Int16)
  commentId: M:System.Convert.ToSingle(System.Int16)
  id: ToSingle(System.Int16)
  parent: System.Convert
  langs:
  - csharp
  - vb
  name: ToSingle(Int16)
  fullName: System.Convert.ToSingle(System.Int16)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Convert.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToSingle
    path: src/mscorlib/src/System/Convert.cs
    startLine: 1496
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  summary: Converts the value of the specified 16-bit signed integer to an equivalent single-precision floating-point number.
  syntax:
    content: public static float ToSingle(short value)
    content.vb: Public Shared Function ToSingle(value As Short) As Single
    parameters:
    - id: value
      type: System.Int16
      description: 'The 16-bit signed integer to convert. '
    return:
      type: System.Single
      description: A single-precision floating-point number that is equivalent to <em>value</em>.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Convert.ToSingle(System.Int32)
  commentId: M:System.Convert.ToSingle(System.Int32)
  id: ToSingle(System.Int32)
  parent: System.Convert
  langs:
  - csharp
  - vb
  name: ToSingle(Int32)
  fullName: System.Convert.ToSingle(System.Int32)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Convert.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToSingle
    path: src/mscorlib/src/System/Convert.cs
    startLine: 1505
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  summary: Converts the value of the specified 32-bit signed integer to an equivalent single-precision floating-point number.
  syntax:
    content: public static float ToSingle(int value)
    content.vb: Public Shared Function ToSingle(value As Integer) As Single
    parameters:
    - id: value
      type: System.Int32
      description: 'The 32-bit signed integer to convert. '
    return:
      type: System.Single
      description: A single-precision floating-point number that is equivalent to <em>value</em>.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Convert.ToSingle(System.Int64)
  commentId: M:System.Convert.ToSingle(System.Int64)
  id: ToSingle(System.Int64)
  parent: System.Convert
  langs:
  - csharp
  - vb
  name: ToSingle(Int64)
  fullName: System.Convert.ToSingle(System.Int64)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Convert.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToSingle
    path: src/mscorlib/src/System/Convert.cs
    startLine: 1514
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  summary: Converts the value of the specified 64-bit signed integer to an equivalent single-precision floating-point number.
  syntax:
    content: public static float ToSingle(long value)
    content.vb: Public Shared Function ToSingle(value As Long) As Single
    parameters:
    - id: value
      type: System.Int64
      description: 'The 64-bit signed integer to convert. '
    return:
      type: System.Single
      description: A single-precision floating-point number that is equivalent to <em>value</em>.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Convert.ToSingle(System.Object)
  commentId: M:System.Convert.ToSingle(System.Object)
  id: ToSingle(System.Object)
  parent: System.Convert
  langs:
  - csharp
  - vb
  name: ToSingle(Object)
  fullName: System.Convert.ToSingle(System.Object)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Convert.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToSingle
    path: src/mscorlib/src/System/Convert.cs
    startLine: 1475
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  summary: Converts the value of the specified object to a single-precision floating-point number.
  syntax:
    content: public static float ToSingle(object value)
    content.vb: Public Shared Function ToSingle(value As Object) As Single
    parameters:
    - id: value
      type: System.Object
      description: 'An object that implements the <xref href="System.IConvertible" data-throw-if-not-resolved="false"></xref> interface, or null. '
    return:
      type: System.Single
      description: A single-precision floating-point number that is equivalent to <em>value</em>, or zero if <em>value</em> is null.
  exceptions:
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "\n<em>value</em> is not in an appropriate format."
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "\n<em>value</em> does not implement the <xref href=\"System.IConvertible\" data-throw-if-not-resolved=\"false\"></xref> interface. -or-The conversion is not supported."
  - type: System.OverflowException
    commentId: T:System.OverflowException
    description: "\n<em>value</em> represents a number that is less than <xref href=\"System.Single.MinValue\" data-throw-if-not-resolved=\"false\"></xref> or greater than <xref href=\"System.Single.MaxValue\" data-throw-if-not-resolved=\"false\"></xref>."
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Convert.ToSingle(System.Object,System.IFormatProvider)
  commentId: M:System.Convert.ToSingle(System.Object,System.IFormatProvider)
  id: ToSingle(System.Object,System.IFormatProvider)
  parent: System.Convert
  langs:
  - csharp
  - vb
  name: ToSingle(Object, IFormatProvider)
  fullName: System.Convert.ToSingle(System.Object, System.IFormatProvider)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Convert.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToSingle
    path: src/mscorlib/src/System/Convert.cs
    startLine: 1479
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  summary: Converts the value of the specified object to an single-precision floating-point number, using the specified culture-specific formatting information.
  syntax:
    content: public static float ToSingle(object value, IFormatProvider provider)
    content.vb: Public Shared Function ToSingle(value As Object, provider As IFormatProvider) As Single
    parameters:
    - id: value
      type: System.Object
      description: 'An object that implements the <xref href="System.IConvertible" data-throw-if-not-resolved="false"></xref> interface. '
    - id: provider
      type: System.IFormatProvider
      description: 'An object that supplies culture-specific formatting information. '
    return:
      type: System.Single
      description: A single-precision floating-point number that is equivalent to <em>value</em>, or zero if <em>value</em> is null.
  exceptions:
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "\n<em>value</em> is not in an appropriate format."
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "\n<em>value</em> does not implement <xref href=\"System.IConvertible\" data-throw-if-not-resolved=\"false\"></xref>. "
  - type: System.OverflowException
    commentId: T:System.OverflowException
    description: "\n<em>value</em> represents a number that is less than <xref href=\"System.Single.MinValue\" data-throw-if-not-resolved=\"false\"></xref> or greater than <xref href=\"System.Single.MaxValue\" data-throw-if-not-resolved=\"false\"></xref>."
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Convert.ToSingle(System.SByte)
  commentId: M:System.Convert.ToSingle(System.SByte)
  id: ToSingle(System.SByte)
  parent: System.Convert
  langs:
  - csharp
  - vb
  name: ToSingle(SByte)
  fullName: System.Convert.ToSingle(System.SByte)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Convert.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToSingle
    path: src/mscorlib/src/System/Convert.cs
    startLine: 1483
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  summary: Converts the value of the specified 8-bit signed integer to the equivalent single-precision floating-point number.
  syntax:
    content: public static float ToSingle(sbyte value)
    content.vb: Public Shared Function ToSingle(value As SByte) As Single
    parameters:
    - id: value
      type: System.SByte
      description: 'The 8-bit signed integer to convert. '
    return:
      type: System.Single
      description: An 8-bit signed integer that is equivalent to <em>value</em>.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Convert.ToSingle(System.Single)
  commentId: M:System.Convert.ToSingle(System.Single)
  id: ToSingle(System.Single)
  parent: System.Convert
  langs:
  - csharp
  - vb
  name: ToSingle(Single)
  fullName: System.Convert.ToSingle(System.Single)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Convert.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToSingle
    path: src/mscorlib/src/System/Convert.cs
    startLine: 1523
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  summary: Returns the specified single-precision floating-point number; no actual conversion is performed.
  syntax:
    content: public static float ToSingle(float value)
    content.vb: Public Shared Function ToSingle(value As Single) As Single
    parameters:
    - id: value
      type: System.Single
      description: 'The single-precision floating-point number to return. '
    return:
      type: System.Single
      description: "\n<em>value</em> is returned unchanged."
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Convert.ToSingle(System.String)
  commentId: M:System.Convert.ToSingle(System.String)
  id: ToSingle(System.String)
  parent: System.Convert
  langs:
  - csharp
  - vb
  name: ToSingle(String)
  fullName: System.Convert.ToSingle(System.String)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Convert.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToSingle
    path: src/mscorlib/src/System/Convert.cs
    startLine: 1535
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  summary: Converts the specified string representation of a number to an equivalent single-precision floating-point number.
  syntax:
    content: public static float ToSingle(string value)
    content.vb: Public Shared Function ToSingle(value As String) As Single
    parameters:
    - id: value
      type: System.String
      description: 'A string that contains the number to convert. '
    return:
      type: System.Single
      description: A single-precision floating-point number that is equivalent to the number in <em>value</em>, or 0 (zero) if <em>value</em> is null.
  exceptions:
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "\n<em>value</em> is not a number in a valid format."
  - type: System.OverflowException
    commentId: T:System.OverflowException
    description: "\n<em>value</em> represents a number that is less than <xref href=\"System.Single.MinValue\" data-throw-if-not-resolved=\"false\"></xref> or greater than <xref href=\"System.Single.MaxValue\" data-throw-if-not-resolved=\"false\"></xref>. "
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Convert.ToSingle(System.String,System.IFormatProvider)
  commentId: M:System.Convert.ToSingle(System.String,System.IFormatProvider)
  id: ToSingle(System.String,System.IFormatProvider)
  parent: System.Convert
  langs:
  - csharp
  - vb
  name: ToSingle(String, IFormatProvider)
  fullName: System.Convert.ToSingle(System.String, System.IFormatProvider)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Convert.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToSingle
    path: src/mscorlib/src/System/Convert.cs
    startLine: 1541
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  summary: Converts the specified string representation of a number to an equivalent single-precision floating-point number, using the specified culture-specific formatting information.
  syntax:
    content: public static float ToSingle(string value, IFormatProvider provider)
    content.vb: Public Shared Function ToSingle(value As String, provider As IFormatProvider) As Single
    parameters:
    - id: value
      type: System.String
      description: 'A string that contains the number to convert. '
    - id: provider
      type: System.IFormatProvider
      description: 'An object that supplies culture-specific formatting information. '
    return:
      type: System.Single
      description: A single-precision floating-point number that is equivalent to the number in <em>value</em>, or 0 (zero) if <em>value</em> is null.
  exceptions:
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "\n<em>value</em> is not a number in a valid format."
  - type: System.OverflowException
    commentId: T:System.OverflowException
    description: "\n<em>value</em> represents a number that is less than <xref href=\"System.Single.MinValue\" data-throw-if-not-resolved=\"false\"></xref> or greater than <xref href=\"System.Single.MaxValue\" data-throw-if-not-resolved=\"false\"></xref>. "
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Convert.ToSingle(System.UInt16)
  commentId: M:System.Convert.ToSingle(System.UInt16)
  id: ToSingle(System.UInt16)
  parent: System.Convert
  langs:
  - csharp
  - vb
  name: ToSingle(UInt16)
  fullName: System.Convert.ToSingle(System.UInt16)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Convert.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToSingle
    path: src/mscorlib/src/System/Convert.cs
    startLine: 1500
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  summary: Converts the value of the specified 16-bit unsigned integer to the equivalent single-precision floating-point number.
  syntax:
    content: public static float ToSingle(ushort value)
    content.vb: Public Shared Function ToSingle(value As UShort) As Single
    parameters:
    - id: value
      type: System.UInt16
      description: 'The 16-bit unsigned integer to convert. '
    return:
      type: System.Single
      description: A single-precision floating-point number that is equivalent to <em>value</em>.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Convert.ToSingle(System.UInt32)
  commentId: M:System.Convert.ToSingle(System.UInt32)
  id: ToSingle(System.UInt32)
  parent: System.Convert
  langs:
  - csharp
  - vb
  name: ToSingle(UInt32)
  fullName: System.Convert.ToSingle(System.UInt32)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Convert.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToSingle
    path: src/mscorlib/src/System/Convert.cs
    startLine: 1509
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  summary: Converts the value of the specified 32-bit unsigned integer to an equivalent single-precision floating-point number.
  syntax:
    content: public static float ToSingle(uint value)
    content.vb: Public Shared Function ToSingle(value As UInteger) As Single
    parameters:
    - id: value
      type: System.UInt32
      description: 'The 32-bit unsigned integer to convert. '
    return:
      type: System.Single
      description: A single-precision floating-point number that is equivalent to <em>value</em>.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Convert.ToSingle(System.UInt64)
  commentId: M:System.Convert.ToSingle(System.UInt64)
  id: ToSingle(System.UInt64)
  parent: System.Convert
  langs:
  - csharp
  - vb
  name: ToSingle(UInt64)
  fullName: System.Convert.ToSingle(System.UInt64)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Convert.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToSingle
    path: src/mscorlib/src/System/Convert.cs
    startLine: 1518
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  summary: Converts the value of the specified 64-bit unsigned integer to an equivalent single-precision floating-point number.
  syntax:
    content: public static float ToSingle(ulong value)
    content.vb: Public Shared Function ToSingle(value As ULong) As Single
    parameters:
    - id: value
      type: System.UInt64
      description: 'The 64-bit unsigned integer to convert. '
    return:
      type: System.Single
      description: A single-precision floating-point number that is equivalent to <em>value</em>.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Convert.ToString(System.Boolean)
  commentId: M:System.Convert.ToString(System.Boolean)
  id: ToString(System.Boolean)
  parent: System.Convert
  langs:
  - csharp
  - vb
  name: ToString(Boolean)
  fullName: System.Convert.ToString(System.Boolean)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Convert.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToString
    path: src/mscorlib/src/System/Convert.cs
    startLine: 1835
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  summary: Converts the specified Boolean value to its equivalent string representation.
  syntax:
    content: public static string ToString(bool value)
    content.vb: Public Shared Function ToString(value As Boolean) As String
    parameters:
    - id: value
      type: System.Boolean
      description: 'The Boolean value to convert. '
    return:
      type: System.String
      description: The string representation of <em>value</em>.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Convert.ToString(System.Boolean,System.IFormatProvider)
  commentId: M:System.Convert.ToString(System.Boolean,System.IFormatProvider)
  id: ToString(System.Boolean,System.IFormatProvider)
  parent: System.Convert
  langs:
  - csharp
  - vb
  name: ToString(Boolean, IFormatProvider)
  fullName: System.Convert.ToString(System.Boolean, System.IFormatProvider)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Convert.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToString
    path: src/mscorlib/src/System/Convert.cs
    startLine: 1840
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  summary: Converts the specified Boolean value to its equivalent string representation.
  syntax:
    content: public static string ToString(bool value, IFormatProvider provider)
    content.vb: Public Shared Function ToString(value As Boolean, provider As IFormatProvider) As String
    parameters:
    - id: value
      type: System.Boolean
      description: 'The Boolean value to convert. '
    - id: provider
      type: System.IFormatProvider
      description: An instance of an object. This parameter is ignored.
    return:
      type: System.String
      description: The string representation of <em>value</em>.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Convert.ToString(System.Byte)
  commentId: M:System.Convert.ToString(System.Byte)
  id: ToString(System.Byte)
  parent: System.Convert
  langs:
  - csharp
  - vb
  name: ToString(Byte)
  fullName: System.Convert.ToString(System.Byte)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Convert.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToString
    path: src/mscorlib/src/System/Convert.cs
    startLine: 1867
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  summary: Converts the value of the specified 8-bit unsigned integer to its equivalent string representation.
  syntax:
    content: public static string ToString(byte value)
    content.vb: Public Shared Function ToString(value As Byte) As String
    parameters:
    - id: value
      type: System.Byte
      description: 'The 8-bit unsigned integer to convert. '
    return:
      type: System.String
      description: The string representation of <em>value</em>.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Convert.ToString(System.Byte,System.IFormatProvider)
  commentId: M:System.Convert.ToString(System.Byte,System.IFormatProvider)
  id: ToString(System.Byte,System.IFormatProvider)
  parent: System.Convert
  langs:
  - csharp
  - vb
  name: ToString(Byte, IFormatProvider)
  fullName: System.Convert.ToString(System.Byte, System.IFormatProvider)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Convert.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToString
    path: src/mscorlib/src/System/Convert.cs
    startLine: 1872
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  summary: Converts the value of the specified 8-bit unsigned integer to its equivalent string representation, using the specified culture-specific formatting information.
  syntax:
    content: public static string ToString(byte value, IFormatProvider provider)
    content.vb: Public Shared Function ToString(value As Byte, provider As IFormatProvider) As String
    parameters:
    - id: value
      type: System.Byte
      description: 'The 8-bit unsigned integer to convert. '
    - id: provider
      type: System.IFormatProvider
      description: 'An object that supplies culture-specific formatting information. '
    return:
      type: System.String
      description: The string representation of <em>value</em>.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Convert.ToString(System.Byte,System.Int32)
  commentId: M:System.Convert.ToString(System.Byte,System.Int32)
  id: ToString(System.Byte,System.Int32)
  parent: System.Convert
  langs:
  - csharp
  - vb
  name: ToString(Byte, Int32)
  fullName: System.Convert.ToString(System.Byte, System.Int32)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Convert.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToString
    path: src/mscorlib/src/System/Convert.cs
    startLine: 2116
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  summary: Converts the value of an 8-bit unsigned integer to its equivalent string representation in a specified base.
  syntax:
    content: public static string ToString(byte value, int toBase)
    content.vb: Public Shared Function ToString(value As Byte, toBase As Integer) As String
    parameters:
    - id: value
      type: System.Byte
      description: 'The 8-bit unsigned integer to convert. '
    - id: toBase
      type: System.Int32
      description: 'The base of the return value, which must be 2, 8, 10, or 16. '
    return:
      type: System.String
      description: The string representation of <em>value</em> in base <em>toBase</em>.
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<em>toBase</em> is not 2, 8, 10, or 16. "
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Convert.ToString(System.Char)
  commentId: M:System.Convert.ToString(System.Char)
  id: ToString(System.Char)
  parent: System.Convert
  langs:
  - csharp
  - vb
  name: ToString(Char)
  fullName: System.Convert.ToString(System.Char)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Convert.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToString
    path: src/mscorlib/src/System/Convert.cs
    startLine: 1845
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  summary: Converts the value of the specified Unicode character to its equivalent string representation.
  syntax:
    content: public static string ToString(char value)
    content.vb: Public Shared Function ToString(value As Char) As String
    parameters:
    - id: value
      type: System.Char
      description: 'The Unicode character to convert. '
    return:
      type: System.String
      description: The string representation of <em>value</em>.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Convert.ToString(System.Char,System.IFormatProvider)
  commentId: M:System.Convert.ToString(System.Char,System.IFormatProvider)
  id: ToString(System.Char,System.IFormatProvider)
  parent: System.Convert
  langs:
  - csharp
  - vb
  name: ToString(Char, IFormatProvider)
  fullName: System.Convert.ToString(System.Char, System.IFormatProvider)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Convert.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToString
    path: src/mscorlib/src/System/Convert.cs
    startLine: 1850
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  summary: Converts the value of the specified Unicode character to its equivalent string representation, using the specified culture-specific formatting information.
  syntax:
    content: public static string ToString(char value, IFormatProvider provider)
    content.vb: Public Shared Function ToString(value As Char, provider As IFormatProvider) As String
    parameters:
    - id: value
      type: System.Char
      description: 'The Unicode character to convert. '
    - id: provider
      type: System.IFormatProvider
      description: 'An object that supplies culture-specific formatting information. This parameter is ignored. '
    return:
      type: System.String
      description: The string representation of <em>value</em>.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Convert.ToString(System.DateTime)
  commentId: M:System.Convert.ToString(System.DateTime)
  id: ToString(System.DateTime)
  parent: System.Convert
  langs:
  - csharp
  - vb
  name: ToString(DateTime)
  fullName: System.Convert.ToString(System.DateTime)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Convert.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToString
    path: src/mscorlib/src/System/Convert.cs
    startLine: 1973
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  summary: Converts the value of the specified <xref href="System.DateTime" data-throw-if-not-resolved="false"></xref> to its equivalent string representation.
  syntax:
    content: public static string ToString(DateTime value)
    content.vb: Public Shared Function ToString(value As DateTime) As String
    parameters:
    - id: value
      type: System.DateTime
      description: 'The date and time value to convert. '
    return:
      type: System.String
      description: The string representation of <em>value</em>.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Convert.ToString(System.DateTime,System.IFormatProvider)
  commentId: M:System.Convert.ToString(System.DateTime,System.IFormatProvider)
  id: ToString(System.DateTime,System.IFormatProvider)
  parent: System.Convert
  langs:
  - csharp
  - vb
  name: ToString(DateTime, IFormatProvider)
  fullName: System.Convert.ToString(System.DateTime, System.IFormatProvider)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Convert.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToString
    path: src/mscorlib/src/System/Convert.cs
    startLine: 1978
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  summary: Converts the value of the specified <xref href="System.DateTime" data-throw-if-not-resolved="false"></xref> to its equivalent string representation, using the specified culture-specific formatting information.
  syntax:
    content: public static string ToString(DateTime value, IFormatProvider provider)
    content.vb: Public Shared Function ToString(value As DateTime, provider As IFormatProvider) As String
    parameters:
    - id: value
      type: System.DateTime
      description: 'The date and time value to convert. '
    - id: provider
      type: System.IFormatProvider
      description: 'An object that supplies culture-specific formatting information. '
    return:
      type: System.String
      description: The string representation of <em>value</em>.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Convert.ToString(System.Decimal)
  commentId: M:System.Convert.ToString(System.Decimal)
  id: ToString(System.Decimal)
  parent: System.Convert
  langs:
  - csharp
  - vb
  name: ToString(Decimal)
  fullName: System.Convert.ToString(System.Decimal)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Convert.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToString
    path: src/mscorlib/src/System/Convert.cs
    startLine: 1963
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  summary: Converts the value of the specified decimal number to its equivalent string representation.
  syntax:
    content: public static string ToString(decimal value)
    content.vb: Public Shared Function ToString(value As Decimal) As String
    parameters:
    - id: value
      type: System.Decimal
      description: 'The decimal number to convert. '
    return:
      type: System.String
      description: The string representation of <em>value</em>.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Convert.ToString(System.Decimal,System.IFormatProvider)
  commentId: M:System.Convert.ToString(System.Decimal,System.IFormatProvider)
  id: ToString(System.Decimal,System.IFormatProvider)
  parent: System.Convert
  langs:
  - csharp
  - vb
  name: ToString(Decimal, IFormatProvider)
  fullName: System.Convert.ToString(System.Decimal, System.IFormatProvider)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Convert.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToString
    path: src/mscorlib/src/System/Convert.cs
    startLine: 1968
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  summary: Converts the value of the specified decimal number to its equivalent string representation, using the specified culture-specific formatting information.
  syntax:
    content: public static string ToString(decimal value, IFormatProvider provider)
    content.vb: Public Shared Function ToString(value As Decimal, provider As IFormatProvider) As String
    parameters:
    - id: value
      type: System.Decimal
      description: 'The decimal number to convert. '
    - id: provider
      type: System.IFormatProvider
      description: 'An object that supplies culture-specific formatting information. '
    return:
      type: System.String
      description: The string representation of <em>value</em>.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Convert.ToString(System.Double)
  commentId: M:System.Convert.ToString(System.Double)
  id: ToString(System.Double)
  parent: System.Convert
  langs:
  - csharp
  - vb
  name: ToString(Double)
  fullName: System.Convert.ToString(System.Double)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Convert.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToString
    path: src/mscorlib/src/System/Convert.cs
    startLine: 1953
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  summary: Converts the value of the specified double-precision floating-point number to its equivalent string representation.
  syntax:
    content: public static string ToString(double value)
    content.vb: Public Shared Function ToString(value As Double) As String
    parameters:
    - id: value
      type: System.Double
      description: 'The double-precision floating-point number to convert. '
    return:
      type: System.String
      description: The string representation of <em>value</em>.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Convert.ToString(System.Double,System.IFormatProvider)
  commentId: M:System.Convert.ToString(System.Double,System.IFormatProvider)
  id: ToString(System.Double,System.IFormatProvider)
  parent: System.Convert
  langs:
  - csharp
  - vb
  name: ToString(Double, IFormatProvider)
  fullName: System.Convert.ToString(System.Double, System.IFormatProvider)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Convert.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToString
    path: src/mscorlib/src/System/Convert.cs
    startLine: 1958
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  summary: Converts the value of the specified double-precision floating-point number to its equivalent string representation.
  syntax:
    content: public static string ToString(double value, IFormatProvider provider)
    content.vb: Public Shared Function ToString(value As Double, provider As IFormatProvider) As String
    parameters:
    - id: value
      type: System.Double
      description: 'The double-precision floating-point number to convert. '
    - id: provider
      type: System.IFormatProvider
      description: 'An object that supplies culture-specific formatting information. '
    return:
      type: System.String
      description: The string representation of <em>value</em>.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Convert.ToString(System.Int16)
  commentId: M:System.Convert.ToString(System.Int16)
  id: ToString(System.Int16)
  parent: System.Convert
  langs:
  - csharp
  - vb
  name: ToString(Int16)
  fullName: System.Convert.ToString(System.Int16)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Convert.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToString
    path: src/mscorlib/src/System/Convert.cs
    startLine: 1877
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  summary: Converts the value of the specified 16-bit signed integer to its equivalent string representation.
  syntax:
    content: public static string ToString(short value)
    content.vb: Public Shared Function ToString(value As Short) As String
    parameters:
    - id: value
      type: System.Int16
      description: 'The 16-bit signed integer to convert. '
    return:
      type: System.String
      description: The string representation of <em>value</em>.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Convert.ToString(System.Int16,System.IFormatProvider)
  commentId: M:System.Convert.ToString(System.Int16,System.IFormatProvider)
  id: ToString(System.Int16,System.IFormatProvider)
  parent: System.Convert
  langs:
  - csharp
  - vb
  name: ToString(Int16, IFormatProvider)
  fullName: System.Convert.ToString(System.Int16, System.IFormatProvider)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Convert.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToString
    path: src/mscorlib/src/System/Convert.cs
    startLine: 1882
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  summary: Converts the value of the specified 16-bit signed integer to its equivalent string representation, using the specified culture-specific formatting information.
  syntax:
    content: public static string ToString(short value, IFormatProvider provider)
    content.vb: Public Shared Function ToString(value As Short, provider As IFormatProvider) As String
    parameters:
    - id: value
      type: System.Int16
      description: 'The 16-bit signed integer to convert. '
    - id: provider
      type: System.IFormatProvider
      description: 'An object that supplies culture-specific formatting information. '
    return:
      type: System.String
      description: The string representation of <em>value</em>.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Convert.ToString(System.Int16,System.Int32)
  commentId: M:System.Convert.ToString(System.Int16,System.Int32)
  id: ToString(System.Int16,System.Int32)
  parent: System.Convert
  langs:
  - csharp
  - vb
  name: ToString(Int16, Int32)
  fullName: System.Convert.ToString(System.Int16, System.Int32)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Convert.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToString
    path: src/mscorlib/src/System/Convert.cs
    startLine: 2126
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  summary: Converts the value of a 16-bit signed integer to its equivalent string representation in a specified base.
  syntax:
    content: public static string ToString(short value, int toBase)
    content.vb: Public Shared Function ToString(value As Short, toBase As Integer) As String
    parameters:
    - id: value
      type: System.Int16
      description: 'The 16-bit signed integer to convert. '
    - id: toBase
      type: System.Int32
      description: 'The base of the return value, which must be 2, 8, 10, or 16. '
    return:
      type: System.String
      description: The string representation of <em>value</em> in base <em>toBase</em>.
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<em>toBase</em> is not 2, 8, 10, or 16. "
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Convert.ToString(System.Int32)
  commentId: M:System.Convert.ToString(System.Int32)
  id: ToString(System.Int32)
  parent: System.Convert
  langs:
  - csharp
  - vb
  name: ToString(Int32)
  fullName: System.Convert.ToString(System.Int32)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Convert.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToString
    path: src/mscorlib/src/System/Convert.cs
    startLine: 1899
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  summary: Converts the value of the specified 32-bit signed integer to its equivalent string representation.
  syntax:
    content: public static string ToString(int value)
    content.vb: Public Shared Function ToString(value As Integer) As String
    parameters:
    - id: value
      type: System.Int32
      description: 'The 32-bit signed integer to convert. '
    return:
      type: System.String
      description: The string representation of <em>value</em>.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Convert.ToString(System.Int32,System.IFormatProvider)
  commentId: M:System.Convert.ToString(System.Int32,System.IFormatProvider)
  id: ToString(System.Int32,System.IFormatProvider)
  parent: System.Convert
  langs:
  - csharp
  - vb
  name: ToString(Int32, IFormatProvider)
  fullName: System.Convert.ToString(System.Int32, System.IFormatProvider)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Convert.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToString
    path: src/mscorlib/src/System/Convert.cs
    startLine: 1904
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  summary: Converts the value of the specified 32-bit signed integer to its equivalent string representation, using the specified culture-specific formatting information.
  syntax:
    content: public static string ToString(int value, IFormatProvider provider)
    content.vb: Public Shared Function ToString(value As Integer, provider As IFormatProvider) As String
    parameters:
    - id: value
      type: System.Int32
      description: 'The 32-bit signed integer to convert. '
    - id: provider
      type: System.IFormatProvider
      description: 'An object that supplies culture-specific formatting information. '
    return:
      type: System.String
      description: The string representation of <em>value</em>.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Convert.ToString(System.Int32,System.Int32)
  commentId: M:System.Convert.ToString(System.Int32,System.Int32)
  id: ToString(System.Int32,System.Int32)
  parent: System.Convert
  langs:
  - csharp
  - vb
  name: ToString(Int32, Int32)
  fullName: System.Convert.ToString(System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Convert.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToString
    path: src/mscorlib/src/System/Convert.cs
    startLine: 2136
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  summary: Converts the value of a 32-bit signed integer to its equivalent string representation in a specified base.
  syntax:
    content: public static string ToString(int value, int toBase)
    content.vb: Public Shared Function ToString(value As Integer, toBase As Integer) As String
    parameters:
    - id: value
      type: System.Int32
      description: 'The 32-bit signed integer to convert. '
    - id: toBase
      type: System.Int32
      description: 'The base of the return value, which must be 2, 8, 10, or 16. '
    return:
      type: System.String
      description: The string representation of <em>value</em> in base <em>toBase</em>.
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<em>toBase</em> is not 2, 8, 10, or 16. "
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Convert.ToString(System.Int64)
  commentId: M:System.Convert.ToString(System.Int64)
  id: ToString(System.Int64)
  parent: System.Convert
  langs:
  - csharp
  - vb
  name: ToString(Int64)
  fullName: System.Convert.ToString(System.Int64)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Convert.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToString
    path: src/mscorlib/src/System/Convert.cs
    startLine: 1921
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  summary: Converts the value of the specified 64-bit signed integer to its equivalent string representation.
  syntax:
    content: public static string ToString(long value)
    content.vb: Public Shared Function ToString(value As Long) As String
    parameters:
    - id: value
      type: System.Int64
      description: 'The 64-bit signed integer to convert. '
    return:
      type: System.String
      description: The string representation of <em>value</em>.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Convert.ToString(System.Int64,System.IFormatProvider)
  commentId: M:System.Convert.ToString(System.Int64,System.IFormatProvider)
  id: ToString(System.Int64,System.IFormatProvider)
  parent: System.Convert
  langs:
  - csharp
  - vb
  name: ToString(Int64, IFormatProvider)
  fullName: System.Convert.ToString(System.Int64, System.IFormatProvider)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Convert.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToString
    path: src/mscorlib/src/System/Convert.cs
    startLine: 1926
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  summary: Converts the value of the specified 64-bit signed integer to its equivalent string representation, using the specified culture-specific formatting information.
  syntax:
    content: public static string ToString(long value, IFormatProvider provider)
    content.vb: Public Shared Function ToString(value As Long, provider As IFormatProvider) As String
    parameters:
    - id: value
      type: System.Int64
      description: 'The 64-bit signed integer to convert. '
    - id: provider
      type: System.IFormatProvider
      description: 'An object that supplies culture-specific formatting information. '
    return:
      type: System.String
      description: The string representation of <em>value</em>.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Convert.ToString(System.Int64,System.Int32)
  commentId: M:System.Convert.ToString(System.Int64,System.Int32)
  id: ToString(System.Int64,System.Int32)
  parent: System.Convert
  langs:
  - csharp
  - vb
  name: ToString(Int64, Int32)
  fullName: System.Convert.ToString(System.Int64, System.Int32)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Convert.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToString
    path: src/mscorlib/src/System/Convert.cs
    startLine: 2146
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  summary: Converts the value of a 64-bit signed integer to its equivalent string representation in a specified base.
  syntax:
    content: public static string ToString(long value, int toBase)
    content.vb: Public Shared Function ToString(value As Long, toBase As Integer) As String
    parameters:
    - id: value
      type: System.Int64
      description: 'The 64-bit signed integer to convert. '
    - id: toBase
      type: System.Int32
      description: 'The base of the return value, which must be 2, 8, 10, or 16. '
    return:
      type: System.String
      description: The string representation of <em>value</em> in base <em>toBase</em>.
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<em>toBase</em> is not 2, 8, 10, or 16. "
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Convert.ToString(System.Object)
  commentId: M:System.Convert.ToString(System.Object)
  id: ToString(System.Object)
  parent: System.Convert
  langs:
  - csharp
  - vb
  name: ToString(Object)
  fullName: System.Convert.ToString(System.Object)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Convert.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToString
    path: src/mscorlib/src/System/Convert.cs
    startLine: 1821
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  summary: Converts the value of the specified object to its equivalent string representation.
  syntax:
    content: public static string ToString(object value)
    content.vb: Public Shared Function ToString(value As Object) As String
    parameters:
    - id: value
      type: System.Object
      description: 'An object that supplies the value to convert, or null. '
    return:
      type: System.String
      description: The string representation of <em>value</em>, or <xref href="System.String.Empty" data-throw-if-not-resolved="false"></xref> if <em>value</em> is an object whose value is null. If <em>value</em> is null, the method returns null.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Convert.ToString(System.Object,System.IFormatProvider)
  commentId: M:System.Convert.ToString(System.Object,System.IFormatProvider)
  id: ToString(System.Object,System.IFormatProvider)
  parent: System.Convert
  langs:
  - csharp
  - vb
  name: ToString(Object, IFormatProvider)
  fullName: System.Convert.ToString(System.Object, System.IFormatProvider)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Convert.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToString
    path: src/mscorlib/src/System/Convert.cs
    startLine: 1825
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  summary: Converts the value of the specified object to its equivalent string representation using the specified culture-specific formatting information.
  syntax:
    content: public static string ToString(object value, IFormatProvider provider)
    content.vb: Public Shared Function ToString(value As Object, provider As IFormatProvider) As String
    parameters:
    - id: value
      type: System.Object
      description: 'An object that supplies the value to convert, or null. '
    - id: provider
      type: System.IFormatProvider
      description: 'An object that supplies culture-specific formatting information. '
    return:
      type: System.String
      description: 'The string representation of <em>value</em>, or <xref href="System.String.Empty" data-throw-if-not-resolved="false"></xref> if <em>value</em> is an object whose value is null. If <em>value</em> is null, the method returns null. '
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Convert.ToString(System.SByte)
  commentId: M:System.Convert.ToString(System.SByte)
  id: ToString(System.SByte)
  parent: System.Convert
  langs:
  - csharp
  - vb
  name: ToString(SByte)
  fullName: System.Convert.ToString(System.SByte)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Convert.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToString
    path: src/mscorlib/src/System/Convert.cs
    startLine: 1855
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  summary: Converts the value of the specified 8-bit signed integer to its equivalent string representation.
  syntax:
    content: public static string ToString(sbyte value)
    content.vb: Public Shared Function ToString(value As SByte) As String
    parameters:
    - id: value
      type: System.SByte
      description: 'The 8-bit signed integer to convert. '
    return:
      type: System.String
      description: The string representation of <em>value</em>.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Convert.ToString(System.SByte,System.IFormatProvider)
  commentId: M:System.Convert.ToString(System.SByte,System.IFormatProvider)
  id: ToString(System.SByte,System.IFormatProvider)
  parent: System.Convert
  langs:
  - csharp
  - vb
  name: ToString(SByte, IFormatProvider)
  fullName: System.Convert.ToString(System.SByte, System.IFormatProvider)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Convert.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToString
    path: src/mscorlib/src/System/Convert.cs
    startLine: 1861
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  summary: Converts the value of the specified 8-bit signed integer to its equivalent string representation, using the specified culture-specific formatting information.
  syntax:
    content: public static string ToString(sbyte value, IFormatProvider provider)
    content.vb: Public Shared Function ToString(value As SByte, provider As IFormatProvider) As String
    parameters:
    - id: value
      type: System.SByte
      description: 'The 8-bit signed integer to convert. '
    - id: provider
      type: System.IFormatProvider
      description: 'An object that supplies culture-specific formatting information. '
    return:
      type: System.String
      description: The string representation of <em>value</em>.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Convert.ToString(System.Single)
  commentId: M:System.Convert.ToString(System.Single)
  id: ToString(System.Single)
  parent: System.Convert
  langs:
  - csharp
  - vb
  name: ToString(Single)
  fullName: System.Convert.ToString(System.Single)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Convert.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToString
    path: src/mscorlib/src/System/Convert.cs
    startLine: 1943
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  summary: Converts the value of the specified single-precision floating-point number to its equivalent string representation.
  syntax:
    content: public static string ToString(float value)
    content.vb: Public Shared Function ToString(value As Single) As String
    parameters:
    - id: value
      type: System.Single
      description: 'The single-precision floating-point number to convert. '
    return:
      type: System.String
      description: The string representation of <em>value</em>.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Convert.ToString(System.Single,System.IFormatProvider)
  commentId: M:System.Convert.ToString(System.Single,System.IFormatProvider)
  id: ToString(System.Single,System.IFormatProvider)
  parent: System.Convert
  langs:
  - csharp
  - vb
  name: ToString(Single, IFormatProvider)
  fullName: System.Convert.ToString(System.Single, System.IFormatProvider)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Convert.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToString
    path: src/mscorlib/src/System/Convert.cs
    startLine: 1948
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  summary: Converts the value of the specified single-precision floating-point number to its equivalent string representation, using the specified culture-specific formatting information.
  syntax:
    content: public static string ToString(float value, IFormatProvider provider)
    content.vb: Public Shared Function ToString(value As Single, provider As IFormatProvider) As String
    parameters:
    - id: value
      type: System.Single
      description: 'The single-precision floating-point number to convert. '
    - id: provider
      type: System.IFormatProvider
      description: 'An object that supplies culture-specific formatting information. '
    return:
      type: System.String
      description: The string representation of <em>value</em>.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Convert.ToString(System.UInt16)
  commentId: M:System.Convert.ToString(System.UInt16)
  id: ToString(System.UInt16)
  parent: System.Convert
  langs:
  - csharp
  - vb
  name: ToString(UInt16)
  fullName: System.Convert.ToString(System.UInt16)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Convert.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToString
    path: src/mscorlib/src/System/Convert.cs
    startLine: 1887
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  summary: Converts the value of the specified 16-bit unsigned integer to its equivalent string representation.
  syntax:
    content: public static string ToString(ushort value)
    content.vb: Public Shared Function ToString(value As UShort) As String
    parameters:
    - id: value
      type: System.UInt16
      description: 'The 16-bit unsigned integer to convert. '
    return:
      type: System.String
      description: The string representation of <em>value</em>.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Convert.ToString(System.UInt16,System.IFormatProvider)
  commentId: M:System.Convert.ToString(System.UInt16,System.IFormatProvider)
  id: ToString(System.UInt16,System.IFormatProvider)
  parent: System.Convert
  langs:
  - csharp
  - vb
  name: ToString(UInt16, IFormatProvider)
  fullName: System.Convert.ToString(System.UInt16, System.IFormatProvider)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Convert.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToString
    path: src/mscorlib/src/System/Convert.cs
    startLine: 1893
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  summary: Converts the value of the specified 16-bit unsigned integer to its equivalent string representation, using the specified culture-specific formatting information.
  syntax:
    content: public static string ToString(ushort value, IFormatProvider provider)
    content.vb: Public Shared Function ToString(value As UShort, provider As IFormatProvider) As String
    parameters:
    - id: value
      type: System.UInt16
      description: 'The 16-bit unsigned integer to convert. '
    - id: provider
      type: System.IFormatProvider
      description: 'An object that supplies culture-specific formatting information. '
    return:
      type: System.String
      description: The string representation of <em>value</em>.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Convert.ToString(System.UInt32)
  commentId: M:System.Convert.ToString(System.UInt32)
  id: ToString(System.UInt32)
  parent: System.Convert
  langs:
  - csharp
  - vb
  name: ToString(UInt32)
  fullName: System.Convert.ToString(System.UInt32)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Convert.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToString
    path: src/mscorlib/src/System/Convert.cs
    startLine: 1909
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  summary: Converts the value of the specified 32-bit unsigned integer to its equivalent string representation.
  syntax:
    content: public static string ToString(uint value)
    content.vb: Public Shared Function ToString(value As UInteger) As String
    parameters:
    - id: value
      type: System.UInt32
      description: 'The 32-bit unsigned integer to convert. '
    return:
      type: System.String
      description: The string representation of <em>value</em>.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Convert.ToString(System.UInt32,System.IFormatProvider)
  commentId: M:System.Convert.ToString(System.UInt32,System.IFormatProvider)
  id: ToString(System.UInt32,System.IFormatProvider)
  parent: System.Convert
  langs:
  - csharp
  - vb
  name: ToString(UInt32, IFormatProvider)
  fullName: System.Convert.ToString(System.UInt32, System.IFormatProvider)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Convert.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToString
    path: src/mscorlib/src/System/Convert.cs
    startLine: 1915
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  summary: Converts the value of the specified 32-bit unsigned integer to its equivalent string representation, using the specified culture-specific formatting information.
  syntax:
    content: public static string ToString(uint value, IFormatProvider provider)
    content.vb: Public Shared Function ToString(value As UInteger, provider As IFormatProvider) As String
    parameters:
    - id: value
      type: System.UInt32
      description: 'The 32-bit unsigned integer to convert. '
    - id: provider
      type: System.IFormatProvider
      description: 'An object that supplies culture-specific formatting information. '
    return:
      type: System.String
      description: The string representation of <em>value</em>.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Convert.ToString(System.UInt64)
  commentId: M:System.Convert.ToString(System.UInt64)
  id: ToString(System.UInt64)
  parent: System.Convert
  langs:
  - csharp
  - vb
  name: ToString(UInt64)
  fullName: System.Convert.ToString(System.UInt64)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Convert.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToString
    path: src/mscorlib/src/System/Convert.cs
    startLine: 1931
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  summary: Converts the value of the specified 64-bit unsigned integer to its equivalent string representation.
  syntax:
    content: public static string ToString(ulong value)
    content.vb: Public Shared Function ToString(value As ULong) As String
    parameters:
    - id: value
      type: System.UInt64
      description: 'The 64-bit unsigned integer to convert. '
    return:
      type: System.String
      description: The string representation of <em>value</em>.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Convert.ToString(System.UInt64,System.IFormatProvider)
  commentId: M:System.Convert.ToString(System.UInt64,System.IFormatProvider)
  id: ToString(System.UInt64,System.IFormatProvider)
  parent: System.Convert
  langs:
  - csharp
  - vb
  name: ToString(UInt64, IFormatProvider)
  fullName: System.Convert.ToString(System.UInt64, System.IFormatProvider)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Convert.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToString
    path: src/mscorlib/src/System/Convert.cs
    startLine: 1937
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  summary: Converts the value of the specified 64-bit unsigned integer to its equivalent string representation, using the specified culture-specific formatting information.
  syntax:
    content: public static string ToString(ulong value, IFormatProvider provider)
    content.vb: Public Shared Function ToString(value As ULong, provider As IFormatProvider) As String
    parameters:
    - id: value
      type: System.UInt64
      description: 'The 64-bit unsigned integer to convert. '
    - id: provider
      type: System.IFormatProvider
      description: 'An object that supplies culture-specific formatting information. '
    return:
      type: System.String
      description: The string representation of <em>value</em>.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Convert.ToUInt16(System.Boolean)
  commentId: M:System.Convert.ToUInt16(System.Boolean)
  id: ToUInt16(System.Boolean)
  parent: System.Convert
  langs:
  - csharp
  - vb
  name: ToUInt16(Boolean)
  fullName: System.Convert.ToUInt16(System.Boolean)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Convert.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToUInt16
    path: src/mscorlib/src/System/Convert.cs
    startLine: 945
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  summary: Converts the specified Boolean value to the equivalent 16-bit unsigned integer.
  syntax:
    content: public static ushort ToUInt16(bool value)
    content.vb: Public Shared Function ToUInt16(value As Boolean) As UShort
    parameters:
    - id: value
      type: System.Boolean
      description: 'The Boolean value to convert. '
    return:
      type: System.UInt16
      description: The number 1 if <em>value</em> is true; otherwise, 0.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Convert.ToUInt16(System.Byte)
  commentId: M:System.Convert.ToUInt16(System.Byte)
  id: ToUInt16(System.Byte)
  parent: System.Convert
  langs:
  - csharp
  - vb
  name: ToUInt16(Byte)
  fullName: System.Convert.ToUInt16(System.Byte)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Convert.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToUInt16
    path: src/mscorlib/src/System/Convert.cs
    startLine: 962
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  summary: Converts the value of the specified 8-bit unsigned integer to the equivalent 16-bit unsigned integer.
  syntax:
    content: public static ushort ToUInt16(byte value)
    content.vb: Public Shared Function ToUInt16(value As Byte) As UShort
    parameters:
    - id: value
      type: System.Byte
      description: 'The 8-bit unsigned integer to convert. '
    return:
      type: System.UInt16
      description: A 16-bit unsigned integer that is equivalent to <em>value</em>.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Convert.ToUInt16(System.Char)
  commentId: M:System.Convert.ToUInt16(System.Char)
  id: ToUInt16(System.Char)
  parent: System.Convert
  langs:
  - csharp
  - vb
  name: ToUInt16(Char)
  fullName: System.Convert.ToUInt16(System.Char)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Convert.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToUInt16
    path: src/mscorlib/src/System/Convert.cs
    startLine: 950
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  summary: Converts the value of the specified Unicode character to the equivalent 16-bit unsigned integer.
  syntax:
    content: public static ushort ToUInt16(char value)
    content.vb: Public Shared Function ToUInt16(value As Char) As UShort
    parameters:
    - id: value
      type: System.Char
      description: 'The Unicode character to convert. '
    return:
      type: System.UInt16
      description: The 16-bit unsigned integer equivalent to <em>value</em>.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Convert.ToUInt16(System.Decimal)
  commentId: M:System.Convert.ToUInt16(System.Decimal)
  id: ToUInt16(System.Decimal)
  parent: System.Convert
  langs:
  - csharp
  - vb
  name: ToUInt16(Decimal)
  fullName: System.Convert.ToUInt16(System.Decimal)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Convert.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToUInt16
    path: src/mscorlib/src/System/Convert.cs
    startLine: 1018
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  summary: Converts the value of the specified decimal number to an equivalent 16-bit unsigned integer.
  syntax:
    content: public static ushort ToUInt16(decimal value)
    content.vb: Public Shared Function ToUInt16(value As Decimal) As UShort
    parameters:
    - id: value
      type: System.Decimal
      description: 'The decimal number to convert. '
    return:
      type: System.UInt16
      description: "\n<em>value</em>, rounded to the nearest 16-bit unsigned integer. If <em>value</em> is halfway between two whole numbers, the even number is returned; that is, 4.5 is converted to 4, and 5.5 is converted to 6."
  exceptions:
  - type: System.OverflowException
    commentId: T:System.OverflowException
    description: "\n<em>value</em> is less than zero or greater than <xref href=\"System.UInt16.MaxValue\" data-throw-if-not-resolved=\"false\"></xref>. "
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Convert.ToUInt16(System.Double)
  commentId: M:System.Convert.ToUInt16(System.Double)
  id: ToUInt16(System.Double)
  parent: System.Convert
  langs:
  - csharp
  - vb
  name: ToUInt16(Double)
  fullName: System.Convert.ToUInt16(System.Double)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Convert.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToUInt16
    path: src/mscorlib/src/System/Convert.cs
    startLine: 1013
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  summary: Converts the value of the specified double-precision floating-point number to an equivalent 16-bit unsigned integer.
  syntax:
    content: public static ushort ToUInt16(double value)
    content.vb: Public Shared Function ToUInt16(value As Double) As UShort
    parameters:
    - id: value
      type: System.Double
      description: 'The double-precision floating-point number to convert. '
    return:
      type: System.UInt16
      description: "\n<em>value</em>, rounded to the nearest 16-bit unsigned integer. If <em>value</em> is halfway between two whole numbers, the even number is returned; that is, 4.5 is converted to 4, and 5.5 is converted to 6."
  exceptions:
  - type: System.OverflowException
    commentId: T:System.OverflowException
    description: "\n<em>value</em> is less than zero or greater than <xref href=\"System.UInt16.MaxValue\" data-throw-if-not-resolved=\"false\"></xref>. "
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Convert.ToUInt16(System.Int16)
  commentId: M:System.Convert.ToUInt16(System.Int16)
  id: ToUInt16(System.Int16)
  parent: System.Convert
  langs:
  - csharp
  - vb
  name: ToUInt16(Int16)
  fullName: System.Convert.ToUInt16(System.Int16)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Convert.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToUInt16
    path: src/mscorlib/src/System/Convert.cs
    startLine: 967
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  summary: Converts the value of the specified 16-bit signed integer to the equivalent 16-bit unsigned integer.
  syntax:
    content: public static ushort ToUInt16(short value)
    content.vb: Public Shared Function ToUInt16(value As Short) As UShort
    parameters:
    - id: value
      type: System.Int16
      description: 'The 16-bit signed integer to convert. '
    return:
      type: System.UInt16
      description: A 16-bit unsigned integer that is equivalent to <em>value</em>.
  exceptions:
  - type: System.OverflowException
    commentId: T:System.OverflowException
    description: "\n<em>value</em> is less than zero. "
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Convert.ToUInt16(System.Int32)
  commentId: M:System.Convert.ToUInt16(System.Int32)
  id: ToUInt16(System.Int32)
  parent: System.Convert
  langs:
  - csharp
  - vb
  name: ToUInt16(Int32)
  fullName: System.Convert.ToUInt16(System.Int32)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Convert.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToUInt16
    path: src/mscorlib/src/System/Convert.cs
    startLine: 974
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  summary: Converts the value of the specified 32-bit signed integer to an equivalent 16-bit unsigned integer.
  syntax:
    content: public static ushort ToUInt16(int value)
    content.vb: Public Shared Function ToUInt16(value As Integer) As UShort
    parameters:
    - id: value
      type: System.Int32
      description: 'The 32-bit signed integer to convert. '
    return:
      type: System.UInt16
      description: A 16-bit unsigned integer that is equivalent to <em>value</em>.
  exceptions:
  - type: System.OverflowException
    commentId: T:System.OverflowException
    description: "\n<em>value</em> is less than zero or greater than <xref href=\"System.UInt16.MaxValue\" data-throw-if-not-resolved=\"false\"></xref>. "
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Convert.ToUInt16(System.Int64)
  commentId: M:System.Convert.ToUInt16(System.Int64)
  id: ToUInt16(System.Int64)
  parent: System.Convert
  langs:
  - csharp
  - vb
  name: ToUInt16(Int64)
  fullName: System.Convert.ToUInt16(System.Int64)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Convert.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToUInt16
    path: src/mscorlib/src/System/Convert.cs
    startLine: 994
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  summary: Converts the value of the specified 64-bit signed integer to an equivalent 16-bit unsigned integer.
  syntax:
    content: public static ushort ToUInt16(long value)
    content.vb: Public Shared Function ToUInt16(value As Long) As UShort
    parameters:
    - id: value
      type: System.Int64
      description: 'The 64-bit signed integer to convert. '
    return:
      type: System.UInt16
      description: A 16-bit unsigned integer that is equivalent to <em>value</em>.
  exceptions:
  - type: System.OverflowException
    commentId: T:System.OverflowException
    description: "\n<em>value</em> is less than zero or greater than <xref href=\"System.UInt16.MaxValue\" data-throw-if-not-resolved=\"false\"></xref>. "
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Convert.ToUInt16(System.Object)
  commentId: M:System.Convert.ToUInt16(System.Object)
  id: ToUInt16(System.Object)
  parent: System.Convert
  langs:
  - csharp
  - vb
  name: ToUInt16(Object)
  fullName: System.Convert.ToUInt16(System.Object)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Convert.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToUInt16
    path: src/mscorlib/src/System/Convert.cs
    startLine: 934
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  summary: Converts the value of the specified object to a 16-bit unsigned integer.
  syntax:
    content: public static ushort ToUInt16(object value)
    content.vb: Public Shared Function ToUInt16(value As Object) As UShort
    parameters:
    - id: value
      type: System.Object
      description: 'An object that implements the <xref href="System.IConvertible" data-throw-if-not-resolved="false"></xref> interface, or null. '
    return:
      type: System.UInt16
      description: A 16-bit unsigned integer that is equivalent to <em>value</em>, or zero if <em>value</em> is null.
  exceptions:
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "\n<em>value</em> is not in an appropriate format."
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "\n<em>value</em> does not implement the  <xref href=\"System.IConvertible\" data-throw-if-not-resolved=\"false\"></xref> interface. -or-The conversion is not supported."
  - type: System.OverflowException
    commentId: T:System.OverflowException
    description: "\n<em>value</em> represents a number that is less than <xref href=\"System.UInt16.MinValue\" data-throw-if-not-resolved=\"false\"></xref> or greater than <xref href=\"System.UInt16.MaxValue\" data-throw-if-not-resolved=\"false\"></xref>."
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Convert.ToUInt16(System.Object,System.IFormatProvider)
  commentId: M:System.Convert.ToUInt16(System.Object,System.IFormatProvider)
  id: ToUInt16(System.Object,System.IFormatProvider)
  parent: System.Convert
  langs:
  - csharp
  - vb
  name: ToUInt16(Object, IFormatProvider)
  fullName: System.Convert.ToUInt16(System.Object, System.IFormatProvider)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Convert.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToUInt16
    path: src/mscorlib/src/System/Convert.cs
    startLine: 939
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  summary: Converts the value of the specified object to a 16-bit unsigned integer, using the specified culture-specific formatting information.
  syntax:
    content: public static ushort ToUInt16(object value, IFormatProvider provider)
    content.vb: Public Shared Function ToUInt16(value As Object, provider As IFormatProvider) As UShort
    parameters:
    - id: value
      type: System.Object
      description: 'An object that implements the <xref href="System.IConvertible" data-throw-if-not-resolved="false"></xref> interface. '
    - id: provider
      type: System.IFormatProvider
      description: 'An object that supplies culture-specific formatting information. '
    return:
      type: System.UInt16
      description: A 16-bit unsigned integer that is equivalent to <em>value</em>, or zero if <em>value</em> is null.
  exceptions:
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "\n<em>value</em> is not in an appropriate format."
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "\n<em>value</em> does not implement the  <xref href=\"System.IConvertible\" data-throw-if-not-resolved=\"false\"></xref> interface. -or-The conversion is not supported."
  - type: System.OverflowException
    commentId: T:System.OverflowException
    description: "\n<em>value</em> represents a number that is less than <xref href=\"System.UInt16.MinValue\" data-throw-if-not-resolved=\"false\"></xref> or greater than <xref href=\"System.UInt16.MaxValue\" data-throw-if-not-resolved=\"false\"></xref>."
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Convert.ToUInt16(System.SByte)
  commentId: M:System.Convert.ToUInt16(System.SByte)
  id: ToUInt16(System.SByte)
  parent: System.Convert
  langs:
  - csharp
  - vb
  name: ToUInt16(SByte)
  fullName: System.Convert.ToUInt16(System.SByte)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Convert.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToUInt16
    path: src/mscorlib/src/System/Convert.cs
    startLine: 955
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  summary: Converts the value of the specified 8-bit signed integer to the equivalent 16-bit unsigned integer.
  syntax:
    content: public static ushort ToUInt16(sbyte value)
    content.vb: Public Shared Function ToUInt16(value As SByte) As UShort
    parameters:
    - id: value
      type: System.SByte
      description: 'The 8-bit signed integer to convert. '
    return:
      type: System.UInt16
      description: A 16-bit unsigned integer that is equivalent to <em>value</em>.
  exceptions:
  - type: System.OverflowException
    commentId: T:System.OverflowException
    description: "\n<em>value</em> is less than zero. "
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Convert.ToUInt16(System.Single)
  commentId: M:System.Convert.ToUInt16(System.Single)
  id: ToUInt16(System.Single)
  parent: System.Convert
  langs:
  - csharp
  - vb
  name: ToUInt16(Single)
  fullName: System.Convert.ToUInt16(System.Single)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Convert.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToUInt16
    path: src/mscorlib/src/System/Convert.cs
    startLine: 1008
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  summary: Converts the value of the specified single-precision floating-point number to an equivalent 16-bit unsigned integer.
  syntax:
    content: public static ushort ToUInt16(float value)
    content.vb: Public Shared Function ToUInt16(value As Single) As UShort
    parameters:
    - id: value
      type: System.Single
      description: 'The single-precision floating-point number to convert. '
    return:
      type: System.UInt16
      description: "\n<em>value</em>, rounded to the nearest 16-bit unsigned integer. If <em>value</em> is halfway between two whole numbers, the even number is returned; that is, 4.5 is converted to 4, and 5.5 is converted to 6."
  exceptions:
  - type: System.OverflowException
    commentId: T:System.OverflowException
    description: "\n<em>value</em> is less than zero or greater than <xref href=\"System.UInt16.MaxValue\" data-throw-if-not-resolved=\"false\"></xref>. "
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Convert.ToUInt16(System.String)
  commentId: M:System.Convert.ToUInt16(System.String)
  id: ToUInt16(System.String)
  parent: System.Convert
  langs:
  - csharp
  - vb
  name: ToUInt16(String)
  fullName: System.Convert.ToUInt16(System.String)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Convert.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToUInt16
    path: src/mscorlib/src/System/Convert.cs
    startLine: 1023
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  summary: Converts the specified string representation of a number to an equivalent 16-bit unsigned integer.
  syntax:
    content: public static ushort ToUInt16(string value)
    content.vb: Public Shared Function ToUInt16(value As String) As UShort
    parameters:
    - id: value
      type: System.String
      description: 'A string that contains the number to convert. '
    return:
      type: System.UInt16
      description: A 16-bit unsigned integer that is equivalent to the number in <em>value</em>, or 0 (zero) if <em>value</em> is null.
  exceptions:
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "\n<em>value</em> does not consist of an optional sign followed by a sequence of digits (0 through 9). "
  - type: System.OverflowException
    commentId: T:System.OverflowException
    description: "\n<em>value</em> represents a number that is less than <xref href=\"System.UInt16.MinValue\" data-throw-if-not-resolved=\"false\"></xref> or greater than <xref href=\"System.UInt16.MaxValue\" data-throw-if-not-resolved=\"false\"></xref>. "
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Convert.ToUInt16(System.String,System.IFormatProvider)
  commentId: M:System.Convert.ToUInt16(System.String,System.IFormatProvider)
  id: ToUInt16(System.String,System.IFormatProvider)
  parent: System.Convert
  langs:
  - csharp
  - vb
  name: ToUInt16(String, IFormatProvider)
  fullName: System.Convert.ToUInt16(System.String, System.IFormatProvider)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Convert.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToUInt16
    path: src/mscorlib/src/System/Convert.cs
    startLine: 1030
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  summary: Converts the specified string representation of a number to an equivalent 16-bit unsigned integer, using the specified culture-specific formatting information.
  syntax:
    content: public static ushort ToUInt16(string value, IFormatProvider provider)
    content.vb: Public Shared Function ToUInt16(value As String, provider As IFormatProvider) As UShort
    parameters:
    - id: value
      type: System.String
      description: 'A string that contains the number to convert. '
    - id: provider
      type: System.IFormatProvider
      description: 'An object that supplies culture-specific formatting information. '
    return:
      type: System.UInt16
      description: A 16-bit unsigned integer that is equivalent to the number in <em>value</em>, or 0 (zero) if <em>value</em> is null.
  exceptions:
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "\n<em>value</em> does not consist of an optional sign followed by a sequence of digits (0 through 9). "
  - type: System.OverflowException
    commentId: T:System.OverflowException
    description: "\n<em>value</em> represents a number that is less than <xref href=\"System.UInt16.MinValue\" data-throw-if-not-resolved=\"false\"></xref> or greater than <xref href=\"System.UInt16.MaxValue\" data-throw-if-not-resolved=\"false\"></xref>. "
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Convert.ToUInt16(System.String,System.Int32)
  commentId: M:System.Convert.ToUInt16(System.String,System.Int32)
  id: ToUInt16(System.String,System.Int32)
  parent: System.Convert
  langs:
  - csharp
  - vb
  name: ToUInt16(String, Int32)
  fullName: System.Convert.ToUInt16(System.String, System.Int32)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Convert.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToUInt16
    path: src/mscorlib/src/System/Convert.cs
    startLine: 2053
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  summary: Converts the string representation of a number in a specified base to an equivalent 16-bit unsigned integer.
  syntax:
    content: public static ushort ToUInt16(string value, int fromBase)
    content.vb: Public Shared Function ToUInt16(value As String, fromBase As Integer) As UShort
    parameters:
    - id: value
      type: System.String
      description: 'A string that contains the number to convert. '
    - id: fromBase
      type: System.Int32
      description: 'The base of the number in <em>value</em>, which must be 2, 8, 10, or 16. '
    return:
      type: System.UInt16
      description: A 16-bit unsigned integer that is equivalent to the number in <em>value</em>, or 0 (zero) if <em>value</em> is null.
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<em>fromBase</em> is not 2, 8, 10, or 16. -or-<em>value</em>, which represents a non-base 10 unsigned number, is prefixed with a negative sign. "
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<em>value</em> is <xref href=\"System.String.Empty\" data-throw-if-not-resolved=\"false\"></xref>. "
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "\n<em>value</em> contains a character that is not a valid digit in the base specified by <em>fromBase</em>. The exception message indicates that there are no digits to convert if the first character in <em>value</em> is invalid; otherwise, the message indicates that <em>value</em> contains invalid trailing characters."
  - type: System.OverflowException
    commentId: T:System.OverflowException
    description: "\n<em>value</em>, which represents a non-base 10 unsigned number, is prefixed with a negative sign.-or-<em>value</em> represents a number that is less than <xref href=\"System.UInt16.MinValue\" data-throw-if-not-resolved=\"false\"></xref> or greater than <xref href=\"System.UInt16.MaxValue\" data-throw-if-not-resolved=\"false\"></xref>."
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Convert.ToUInt16(System.UInt16)
  commentId: M:System.Convert.ToUInt16(System.UInt16)
  id: ToUInt16(System.UInt16)
  parent: System.Convert
  langs:
  - csharp
  - vb
  name: ToUInt16(UInt16)
  fullName: System.Convert.ToUInt16(System.UInt16)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Convert.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToUInt16
    path: src/mscorlib/src/System/Convert.cs
    startLine: 981
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  summary: Returns the specified 16-bit unsigned integer; no actual conversion is performed.
  syntax:
    content: public static ushort ToUInt16(ushort value)
    content.vb: Public Shared Function ToUInt16(value As UShort) As UShort
    parameters:
    - id: value
      type: System.UInt16
      description: 'The 16-bit unsigned integer to return. '
    return:
      type: System.UInt16
      description: "\n<em>value</em> is returned unchanged."
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Convert.ToUInt16(System.UInt32)
  commentId: M:System.Convert.ToUInt16(System.UInt32)
  id: ToUInt16(System.UInt32)
  parent: System.Convert
  langs:
  - csharp
  - vb
  name: ToUInt16(UInt32)
  fullName: System.Convert.ToUInt16(System.UInt32)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Convert.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToUInt16
    path: src/mscorlib/src/System/Convert.cs
    startLine: 986
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  summary: Converts the value of the specified 32-bit unsigned integer to an equivalent 16-bit unsigned integer.
  syntax:
    content: public static ushort ToUInt16(uint value)
    content.vb: Public Shared Function ToUInt16(value As UInteger) As UShort
    parameters:
    - id: value
      type: System.UInt32
      description: 'The 32-bit unsigned integer to convert. '
    return:
      type: System.UInt16
      description: A 16-bit unsigned integer that is equivalent to <em>value</em>.
  exceptions:
  - type: System.OverflowException
    commentId: T:System.OverflowException
    description: "\n<em>value</em> is greater than <xref href=\"System.UInt16.MaxValue\" data-throw-if-not-resolved=\"false\"></xref>. "
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Convert.ToUInt16(System.UInt64)
  commentId: M:System.Convert.ToUInt16(System.UInt64)
  id: ToUInt16(System.UInt64)
  parent: System.Convert
  langs:
  - csharp
  - vb
  name: ToUInt16(UInt64)
  fullName: System.Convert.ToUInt16(System.UInt64)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Convert.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToUInt16
    path: src/mscorlib/src/System/Convert.cs
    startLine: 1001
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  summary: Converts the value of the specified 64-bit unsigned integer to an equivalent 16-bit unsigned integer.
  syntax:
    content: public static ushort ToUInt16(ulong value)
    content.vb: Public Shared Function ToUInt16(value As ULong) As UShort
    parameters:
    - id: value
      type: System.UInt64
      description: 'The 64-bit unsigned integer to convert. '
    return:
      type: System.UInt16
      description: A 16-bit unsigned integer that is equivalent to <em>value</em>.
  exceptions:
  - type: System.OverflowException
    commentId: T:System.OverflowException
    description: "\n<em>value</em> is greater than <xref href=\"System.UInt16.MaxValue\" data-throw-if-not-resolved=\"false\"></xref>. "
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Convert.ToUInt32(System.Boolean)
  commentId: M:System.Convert.ToUInt32(System.Boolean)
  id: ToUInt32(System.Boolean)
  parent: System.Convert
  langs:
  - csharp
  - vb
  name: ToUInt32(Boolean)
  fullName: System.Convert.ToUInt32(System.Boolean)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Convert.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToUInt32
    path: src/mscorlib/src/System/Convert.cs
    startLine: 1170
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  summary: Converts the specified Boolean value to the equivalent 32-bit unsigned integer.
  syntax:
    content: public static uint ToUInt32(bool value)
    content.vb: Public Shared Function ToUInt32(value As Boolean) As UInteger
    parameters:
    - id: value
      type: System.Boolean
      description: 'The Boolean value to convert. '
    return:
      type: System.UInt32
      description: The number 1 if <em>value</em> is true; otherwise, 0.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Convert.ToUInt32(System.Byte)
  commentId: M:System.Convert.ToUInt32(System.Byte)
  id: ToUInt32(System.Byte)
  parent: System.Convert
  langs:
  - csharp
  - vb
  name: ToUInt32(Byte)
  fullName: System.Convert.ToUInt32(System.Byte)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Convert.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToUInt32
    path: src/mscorlib/src/System/Convert.cs
    startLine: 1187
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  summary: Converts the value of the specified 8-bit unsigned integer to the equivalent 32-bit unsigned integer.
  syntax:
    content: public static uint ToUInt32(byte value)
    content.vb: Public Shared Function ToUInt32(value As Byte) As UInteger
    parameters:
    - id: value
      type: System.Byte
      description: 'The 8-bit unsigned integer to convert. '
    return:
      type: System.UInt32
      description: A 32-bit unsigned integer that is equivalent to <em>value</em>.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Convert.ToUInt32(System.Char)
  commentId: M:System.Convert.ToUInt32(System.Char)
  id: ToUInt32(System.Char)
  parent: System.Convert
  langs:
  - csharp
  - vb
  name: ToUInt32(Char)
  fullName: System.Convert.ToUInt32(System.Char)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Convert.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToUInt32
    path: src/mscorlib/src/System/Convert.cs
    startLine: 1175
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  summary: Converts the value of the specified Unicode character to the equivalent 32-bit unsigned integer.
  syntax:
    content: public static uint ToUInt32(char value)
    content.vb: Public Shared Function ToUInt32(value As Char) As UInteger
    parameters:
    - id: value
      type: System.Char
      description: 'The Unicode character to convert. '
    return:
      type: System.UInt32
      description: A 32-bit unsigned integer that is equivalent to <em>value</em>.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Convert.ToUInt32(System.Decimal)
  commentId: M:System.Convert.ToUInt32(System.Decimal)
  id: ToUInt32(System.Decimal)
  parent: System.Convert
  langs:
  - csharp
  - vb
  name: ToUInt32(Decimal)
  fullName: System.Convert.ToUInt32(System.Decimal)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Convert.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToUInt32
    path: src/mscorlib/src/System/Convert.cs
    startLine: 1246
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  summary: Converts the value of the specified decimal number to an equivalent 32-bit unsigned integer.
  syntax:
    content: public static uint ToUInt32(decimal value)
    content.vb: Public Shared Function ToUInt32(value As Decimal) As UInteger
    parameters:
    - id: value
      type: System.Decimal
      description: 'The decimal number to convert. '
    return:
      type: System.UInt32
      description: "\n<em>value</em>, rounded to the nearest 32-bit unsigned integer. If <em>value</em> is halfway between two whole numbers, the even number is returned; that is, 4.5 is converted to 4, and 5.5 is converted to 6."
  exceptions:
  - type: System.OverflowException
    commentId: T:System.OverflowException
    description: "\n<em>value</em> is less than zero or greater than <xref href=\"System.UInt32.MaxValue\" data-throw-if-not-resolved=\"false\"></xref>. "
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Convert.ToUInt32(System.Double)
  commentId: M:System.Convert.ToUInt32(System.Double)
  id: ToUInt32(System.Double)
  parent: System.Convert
  langs:
  - csharp
  - vb
  name: ToUInt32(Double)
  fullName: System.Convert.ToUInt32(System.Double)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Convert.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToUInt32
    path: src/mscorlib/src/System/Convert.cs
    startLine: 1235
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  summary: Converts the value of the specified double-precision floating-point number to an equivalent 32-bit unsigned integer.
  syntax:
    content: public static uint ToUInt32(double value)
    content.vb: Public Shared Function ToUInt32(value As Double) As UInteger
    parameters:
    - id: value
      type: System.Double
      description: 'The double-precision floating-point number to convert. '
    return:
      type: System.UInt32
      description: "\n<em>value</em>, rounded to the nearest 32-bit unsigned integer. If <em>value</em> is halfway between two whole numbers, the even number is returned; that is, 4.5 is converted to 4, and 5.5 is converted to 6."
  exceptions:
  - type: System.OverflowException
    commentId: T:System.OverflowException
    description: "\n<em>value</em> is less than zero or greater than <xref href=\"System.UInt32.MaxValue\" data-throw-if-not-resolved=\"false\"></xref>. "
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Convert.ToUInt32(System.Int16)
  commentId: M:System.Convert.ToUInt32(System.Int16)
  id: ToUInt32(System.Int16)
  parent: System.Convert
  langs:
  - csharp
  - vb
  name: ToUInt32(Int16)
  fullName: System.Convert.ToUInt32(System.Int16)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Convert.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToUInt32
    path: src/mscorlib/src/System/Convert.cs
    startLine: 1192
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  summary: Converts the value of the specified 16-bit signed integer to the equivalent 32-bit unsigned integer.
  syntax:
    content: public static uint ToUInt32(short value)
    content.vb: Public Shared Function ToUInt32(value As Short) As UInteger
    parameters:
    - id: value
      type: System.Int16
      description: 'The 16-bit signed integer to convert. '
    return:
      type: System.UInt32
      description: A 32-bit unsigned integer that is equivalent to <em>value</em>.
  exceptions:
  - type: System.OverflowException
    commentId: T:System.OverflowException
    description: "\n<em>value</em> is less than zero. "
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Convert.ToUInt32(System.Int32)
  commentId: M:System.Convert.ToUInt32(System.Int32)
  id: ToUInt32(System.Int32)
  parent: System.Convert
  langs:
  - csharp
  - vb
  name: ToUInt32(Int32)
  fullName: System.Convert.ToUInt32(System.Int32)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Convert.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToUInt32
    path: src/mscorlib/src/System/Convert.cs
    startLine: 1204
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  summary: Converts the value of the specified 32-bit signed integer to an equivalent 32-bit unsigned integer.
  syntax:
    content: public static uint ToUInt32(int value)
    content.vb: Public Shared Function ToUInt32(value As Integer) As UInteger
    parameters:
    - id: value
      type: System.Int32
      description: 'The 32-bit signed integer to convert. '
    return:
      type: System.UInt32
      description: A 32-bit unsigned integer that is equivalent to <em>value</em>.
  exceptions:
  - type: System.OverflowException
    commentId: T:System.OverflowException
    description: "\n<em>value</em> is less than zero. "
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Convert.ToUInt32(System.Int64)
  commentId: M:System.Convert.ToUInt32(System.Int64)
  id: ToUInt32(System.Int64)
  parent: System.Convert
  langs:
  - csharp
  - vb
  name: ToUInt32(Int64)
  fullName: System.Convert.ToUInt32(System.Int64)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Convert.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToUInt32
    path: src/mscorlib/src/System/Convert.cs
    startLine: 1216
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  summary: Converts the value of the specified 64-bit signed integer to an equivalent 32-bit unsigned integer.
  syntax:
    content: public static uint ToUInt32(long value)
    content.vb: Public Shared Function ToUInt32(value As Long) As UInteger
    parameters:
    - id: value
      type: System.Int64
      description: 'The 64-bit signed integer to convert. '
    return:
      type: System.UInt32
      description: A 32-bit unsigned integer that is equivalent to <em>value</em>.
  exceptions:
  - type: System.OverflowException
    commentId: T:System.OverflowException
    description: "\n<em>value</em> is less than zero or greater than <xref href=\"System.UInt32.MaxValue\" data-throw-if-not-resolved=\"false\"></xref>. "
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Convert.ToUInt32(System.Object)
  commentId: M:System.Convert.ToUInt32(System.Object)
  id: ToUInt32(System.Object)
  parent: System.Convert
  langs:
  - csharp
  - vb
  name: ToUInt32(Object)
  fullName: System.Convert.ToUInt32(System.Object)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Convert.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToUInt32
    path: src/mscorlib/src/System/Convert.cs
    startLine: 1159
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  summary: Converts the value of the specified object to a 32-bit unsigned integer.
  syntax:
    content: public static uint ToUInt32(object value)
    content.vb: Public Shared Function ToUInt32(value As Object) As UInteger
    parameters:
    - id: value
      type: System.Object
      description: 'An object that implements the <xref href="System.IConvertible" data-throw-if-not-resolved="false"></xref> interface, or null. '
    return:
      type: System.UInt32
      description: A 32-bit unsigned integer that is equivalent to <em>value</em>, or 0 (zero) if <em>value</em> is null.
  exceptions:
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "\n<em>value</em> is not in an appropriate format."
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "\n<em>value</em> does not implement the <xref href=\"System.IConvertible\" data-throw-if-not-resolved=\"false\"></xref> interface. -or-The conversion is not supported."
  - type: System.OverflowException
    commentId: T:System.OverflowException
    description: "\n<em>value</em> represents a number that is less than <xref href=\"System.UInt32.MinValue\" data-throw-if-not-resolved=\"false\"></xref> or greater than <xref href=\"System.UInt32.MaxValue\" data-throw-if-not-resolved=\"false\"></xref>."
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Convert.ToUInt32(System.Object,System.IFormatProvider)
  commentId: M:System.Convert.ToUInt32(System.Object,System.IFormatProvider)
  id: ToUInt32(System.Object,System.IFormatProvider)
  parent: System.Convert
  langs:
  - csharp
  - vb
  name: ToUInt32(Object, IFormatProvider)
  fullName: System.Convert.ToUInt32(System.Object, System.IFormatProvider)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Convert.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToUInt32
    path: src/mscorlib/src/System/Convert.cs
    startLine: 1164
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  summary: Converts the value of the specified object to a 32-bit unsigned integer, using the specified culture-specific formatting information.
  syntax:
    content: public static uint ToUInt32(object value, IFormatProvider provider)
    content.vb: Public Shared Function ToUInt32(value As Object, provider As IFormatProvider) As UInteger
    parameters:
    - id: value
      type: System.Object
      description: 'An object that implements the <xref href="System.IConvertible" data-throw-if-not-resolved="false"></xref> interface. '
    - id: provider
      type: System.IFormatProvider
      description: 'An object that supplies culture-specific formatting information. '
    return:
      type: System.UInt32
      description: A 32-bit unsigned integer that is equivalent to <em>value</em>, or zero if <em>value</em> is null.
  exceptions:
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "\n<em>value</em> is not in an appropriate format."
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "\n<em>value</em> does not implement the <xref href=\"System.IConvertible\" data-throw-if-not-resolved=\"false\"></xref> interface. -or-The conversion is not supported."
  - type: System.OverflowException
    commentId: T:System.OverflowException
    description: "\n<em>value</em> represents a number that is less than <xref href=\"System.UInt32.MinValue\" data-throw-if-not-resolved=\"false\"></xref> or greater than <xref href=\"System.UInt32.MaxValue\" data-throw-if-not-resolved=\"false\"></xref>."
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Convert.ToUInt32(System.SByte)
  commentId: M:System.Convert.ToUInt32(System.SByte)
  id: ToUInt32(System.SByte)
  parent: System.Convert
  langs:
  - csharp
  - vb
  name: ToUInt32(SByte)
  fullName: System.Convert.ToUInt32(System.SByte)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Convert.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToUInt32
    path: src/mscorlib/src/System/Convert.cs
    startLine: 1180
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  summary: Converts the value of the specified 8-bit signed integer to the equivalent 32-bit unsigned integer.
  syntax:
    content: public static uint ToUInt32(sbyte value)
    content.vb: Public Shared Function ToUInt32(value As SByte) As UInteger
    parameters:
    - id: value
      type: System.SByte
      description: 'The 8-bit signed integer to convert. '
    return:
      type: System.UInt32
      description: A 32-bit unsigned integer that is equivalent to <em>value</em>.
  exceptions:
  - type: System.OverflowException
    commentId: T:System.OverflowException
    description: "\n<em>value</em> is less than zero. "
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Convert.ToUInt32(System.Single)
  commentId: M:System.Convert.ToUInt32(System.Single)
  id: ToUInt32(System.Single)
  parent: System.Convert
  langs:
  - csharp
  - vb
  name: ToUInt32(Single)
  fullName: System.Convert.ToUInt32(System.Single)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Convert.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToUInt32
    path: src/mscorlib/src/System/Convert.cs
    startLine: 1230
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  summary: Converts the value of the specified single-precision floating-point number to an equivalent 32-bit unsigned integer.
  syntax:
    content: public static uint ToUInt32(float value)
    content.vb: Public Shared Function ToUInt32(value As Single) As UInteger
    parameters:
    - id: value
      type: System.Single
      description: 'The single-precision floating-point number to convert. '
    return:
      type: System.UInt32
      description: "\n<em>value</em>, rounded to the nearest 32-bit unsigned integer. If <em>value</em> is halfway between two whole numbers, the even number is returned; that is, 4.5 is converted to 4, and 5.5 is converted to 6."
  exceptions:
  - type: System.OverflowException
    commentId: T:System.OverflowException
    description: "\n<em>value</em> is less than zero or greater than <xref href=\"System.UInt32.MaxValue\" data-throw-if-not-resolved=\"false\"></xref>. "
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Convert.ToUInt32(System.String)
  commentId: M:System.Convert.ToUInt32(System.String)
  id: ToUInt32(System.String)
  parent: System.Convert
  langs:
  - csharp
  - vb
  name: ToUInt32(String)
  fullName: System.Convert.ToUInt32(System.String)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Convert.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToUInt32
    path: src/mscorlib/src/System/Convert.cs
    startLine: 1251
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  summary: Converts the specified string representation of a number to an equivalent 32-bit unsigned integer.
  syntax:
    content: public static uint ToUInt32(string value)
    content.vb: Public Shared Function ToUInt32(value As String) As UInteger
    parameters:
    - id: value
      type: System.String
      description: 'A string that contains the number to convert. '
    return:
      type: System.UInt32
      description: A 32-bit unsigned integer that is equivalent to the number in <em>value</em>, or 0 (zero) if <em>value</em> is null.
  exceptions:
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "\n<em>value</em> does not consist of an optional sign followed by a sequence of digits (0 through 9). "
  - type: System.OverflowException
    commentId: T:System.OverflowException
    description: "\n<em>value</em> represents a number that is less than <xref href=\"System.UInt32.MinValue\" data-throw-if-not-resolved=\"false\"></xref> or greater than <xref href=\"System.UInt32.MaxValue\" data-throw-if-not-resolved=\"false\"></xref>. "
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Convert.ToUInt32(System.String,System.IFormatProvider)
  commentId: M:System.Convert.ToUInt32(System.String,System.IFormatProvider)
  id: ToUInt32(System.String,System.IFormatProvider)
  parent: System.Convert
  langs:
  - csharp
  - vb
  name: ToUInt32(String, IFormatProvider)
  fullName: System.Convert.ToUInt32(System.String, System.IFormatProvider)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Convert.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToUInt32
    path: src/mscorlib/src/System/Convert.cs
    startLine: 1258
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  summary: Converts the specified string representation of a number to an equivalent 32-bit unsigned integer, using the specified culture-specific formatting information.
  syntax:
    content: public static uint ToUInt32(string value, IFormatProvider provider)
    content.vb: Public Shared Function ToUInt32(value As String, provider As IFormatProvider) As UInteger
    parameters:
    - id: value
      type: System.String
      description: 'A string that contains the number to convert. '
    - id: provider
      type: System.IFormatProvider
      description: 'An object that supplies culture-specific formatting information. '
    return:
      type: System.UInt32
      description: A 32-bit unsigned integer that is equivalent to the number in <em>value</em>, or 0 (zero) if <em>value</em> is null.
  exceptions:
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "\n<em>value</em> does not consist of an optional sign followed by a sequence of digits (0 through 9). "
  - type: System.OverflowException
    commentId: T:System.OverflowException
    description: "\n<em>value</em> represents a number that is less than <xref href=\"System.UInt32.MinValue\" data-throw-if-not-resolved=\"false\"></xref> or greater than <xref href=\"System.UInt32.MaxValue\" data-throw-if-not-resolved=\"false\"></xref>. "
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Convert.ToUInt32(System.String,System.Int32)
  commentId: M:System.Convert.ToUInt32(System.String,System.Int32)
  id: ToUInt32(System.String,System.Int32)
  parent: System.Convert
  langs:
  - csharp
  - vb
  name: ToUInt32(String, Int32)
  fullName: System.Convert.ToUInt32(System.String, System.Int32)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Convert.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToUInt32
    path: src/mscorlib/src/System/Convert.cs
    startLine: 2081
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  summary: Converts the string representation of a number in a specified base to an equivalent 32-bit unsigned integer.
  syntax:
    content: public static uint ToUInt32(string value, int fromBase)
    content.vb: Public Shared Function ToUInt32(value As String, fromBase As Integer) As UInteger
    parameters:
    - id: value
      type: System.String
      description: 'A string that contains the number to convert. '
    - id: fromBase
      type: System.Int32
      description: 'The base of the number in <em>value</em>, which must be 2, 8, 10, or 16. '
    return:
      type: System.UInt32
      description: A 32-bit unsigned integer that is equivalent to the number in <em>value</em>, or 0 (zero) if <em>value</em> is null.
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<em>fromBase</em> is not 2, 8, 10, or 16. -or-<em>value</em>, which represents a non-base 10 unsigned number, is prefixed with a negative sign. "
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<em>value</em> is <xref href=\"System.String.Empty\" data-throw-if-not-resolved=\"false\"></xref>. "
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "\n<em>value</em> contains a character that is not a valid digit in the base specified by <em>fromBase</em>. The exception message indicates that there are no digits to convert if the first character in <em>value</em> is invalid; otherwise, the message indicates that <em>value</em> contains invalid trailing characters."
  - type: System.OverflowException
    commentId: T:System.OverflowException
    description: "\n<em>value</em>, which represents a non-base 10 unsigned number, is prefixed with a negative sign.-or-<em>value</em> represents a number that is less than <xref href=\"System.UInt32.MinValue\" data-throw-if-not-resolved=\"false\"></xref> or greater than <xref href=\"System.UInt32.MaxValue\" data-throw-if-not-resolved=\"false\"></xref>."
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Convert.ToUInt32(System.UInt16)
  commentId: M:System.Convert.ToUInt32(System.UInt16)
  id: ToUInt32(System.UInt16)
  parent: System.Convert
  langs:
  - csharp
  - vb
  name: ToUInt32(UInt16)
  fullName: System.Convert.ToUInt32(System.UInt16)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Convert.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToUInt32
    path: src/mscorlib/src/System/Convert.cs
    startLine: 1199
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  summary: Converts the value of the specified 16-bit unsigned integer to the equivalent 32-bit unsigned integer.
  syntax:
    content: public static uint ToUInt32(ushort value)
    content.vb: Public Shared Function ToUInt32(value As UShort) As UInteger
    parameters:
    - id: value
      type: System.UInt16
      description: 'The 16-bit unsigned integer to convert. '
    return:
      type: System.UInt32
      description: A 32-bit unsigned integer that is equivalent to <em>value</em>.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Convert.ToUInt32(System.UInt32)
  commentId: M:System.Convert.ToUInt32(System.UInt32)
  id: ToUInt32(System.UInt32)
  parent: System.Convert
  langs:
  - csharp
  - vb
  name: ToUInt32(UInt32)
  fullName: System.Convert.ToUInt32(System.UInt32)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Convert.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToUInt32
    path: src/mscorlib/src/System/Convert.cs
    startLine: 1211
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  summary: Returns the specified 32-bit unsigned integer; no actual conversion is performed.
  syntax:
    content: public static uint ToUInt32(uint value)
    content.vb: Public Shared Function ToUInt32(value As UInteger) As UInteger
    parameters:
    - id: value
      type: System.UInt32
      description: 'The 32-bit unsigned integer to return. '
    return:
      type: System.UInt32
      description: "\n<em>value</em> is returned unchanged."
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Convert.ToUInt32(System.UInt64)
  commentId: M:System.Convert.ToUInt32(System.UInt64)
  id: ToUInt32(System.UInt64)
  parent: System.Convert
  langs:
  - csharp
  - vb
  name: ToUInt32(UInt64)
  fullName: System.Convert.ToUInt32(System.UInt64)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Convert.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToUInt32
    path: src/mscorlib/src/System/Convert.cs
    startLine: 1223
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  summary: Converts the value of the specified 64-bit unsigned integer to an equivalent 32-bit unsigned integer.
  syntax:
    content: public static uint ToUInt32(ulong value)
    content.vb: Public Shared Function ToUInt32(value As ULong) As UInteger
    parameters:
    - id: value
      type: System.UInt64
      description: 'The 64-bit unsigned integer to convert. '
    return:
      type: System.UInt32
      description: A 32-bit unsigned integer that is equivalent to <em>value</em>.
  exceptions:
  - type: System.OverflowException
    commentId: T:System.OverflowException
    description: "\n<em>value</em> is greater than <xref href=\"System.UInt32.MaxValue\" data-throw-if-not-resolved=\"false\"></xref>. "
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Convert.ToUInt64(System.Boolean)
  commentId: M:System.Convert.ToUInt64(System.Boolean)
  id: ToUInt64(System.Boolean)
  parent: System.Convert
  langs:
  - csharp
  - vb
  name: ToUInt64(Boolean)
  fullName: System.Convert.ToUInt64(System.Boolean)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Convert.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToUInt64
    path: src/mscorlib/src/System/Convert.cs
    startLine: 1376
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  summary: Converts the specified Boolean value to the equivalent 64-bit unsigned integer.
  syntax:
    content: public static ulong ToUInt64(bool value)
    content.vb: Public Shared Function ToUInt64(value As Boolean) As ULong
    parameters:
    - id: value
      type: System.Boolean
      description: 'The Boolean value to convert. '
    return:
      type: System.UInt64
      description: The number 1 if <em>value</em> is true; otherwise, 0.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Convert.ToUInt64(System.Byte)
  commentId: M:System.Convert.ToUInt64(System.Byte)
  id: ToUInt64(System.Byte)
  parent: System.Convert
  langs:
  - csharp
  - vb
  name: ToUInt64(Byte)
  fullName: System.Convert.ToUInt64(System.Byte)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Convert.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToUInt64
    path: src/mscorlib/src/System/Convert.cs
    startLine: 1394
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  summary: Converts the value of the specified 8-bit unsigned integer to the equivalent 64-bit unsigned integer.
  syntax:
    content: public static ulong ToUInt64(byte value)
    content.vb: Public Shared Function ToUInt64(value As Byte) As ULong
    parameters:
    - id: value
      type: System.Byte
      description: 'The 8-bit unsigned integer to convert. '
    return:
      type: System.UInt64
      description: A 64-bit signed integer that is equivalent to <em>value</em>.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Convert.ToUInt64(System.Char)
  commentId: M:System.Convert.ToUInt64(System.Char)
  id: ToUInt64(System.Char)
  parent: System.Convert
  langs:
  - csharp
  - vb
  name: ToUInt64(Char)
  fullName: System.Convert.ToUInt64(System.Char)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Convert.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToUInt64
    path: src/mscorlib/src/System/Convert.cs
    startLine: 1381
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  summary: Converts the value of the specified Unicode character to the equivalent 64-bit unsigned integer.
  syntax:
    content: public static ulong ToUInt64(char value)
    content.vb: Public Shared Function ToUInt64(value As Char) As ULong
    parameters:
    - id: value
      type: System.Char
      description: 'The Unicode character to convert. '
    return:
      type: System.UInt64
      description: A 64-bit unsigned integer that is equivalent to <em>value</em>.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Convert.ToUInt64(System.Decimal)
  commentId: M:System.Convert.ToUInt64(System.Decimal)
  id: ToUInt64(System.Decimal)
  parent: System.Convert
  langs:
  - csharp
  - vb
  name: ToUInt64(Decimal)
  fullName: System.Convert.ToUInt64(System.Decimal)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Convert.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToUInt64
    path: src/mscorlib/src/System/Convert.cs
    startLine: 1445
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  summary: Converts the value of the specified decimal number to an equivalent 64-bit unsigned integer.
  syntax:
    content: public static ulong ToUInt64(decimal value)
    content.vb: Public Shared Function ToUInt64(value As Decimal) As ULong
    parameters:
    - id: value
      type: System.Decimal
      description: 'The decimal number to convert. '
    return:
      type: System.UInt64
      description: "\n<em>value</em>, rounded to the nearest 64-bit unsigned integer. If <em>value</em> is halfway between two whole numbers, the even number is returned; that is, 4.5 is converted to 4, and 5.5 is converted to 6."
  exceptions:
  - type: System.OverflowException
    commentId: T:System.OverflowException
    description: "\n<em>value</em> is less than zero or greater than <xref href=\"System.UInt64.MaxValue\" data-throw-if-not-resolved=\"false\"></xref>. "
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Convert.ToUInt64(System.Double)
  commentId: M:System.Convert.ToUInt64(System.Double)
  id: ToUInt64(System.Double)
  parent: System.Convert
  langs:
  - csharp
  - vb
  name: ToUInt64(Double)
  fullName: System.Convert.ToUInt64(System.Double)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Convert.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToUInt64
    path: src/mscorlib/src/System/Convert.cs
    startLine: 1440
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  summary: Converts the value of the specified double-precision floating-point number to an equivalent 64-bit unsigned integer.
  syntax:
    content: public static ulong ToUInt64(double value)
    content.vb: Public Shared Function ToUInt64(value As Double) As ULong
    parameters:
    - id: value
      type: System.Double
      description: 'The double-precision floating-point number to convert. '
    return:
      type: System.UInt64
      description: "\n<em>value</em>, rounded to the nearest 64-bit unsigned integer. If <em>value</em> is halfway between two whole numbers, the even number is returned; that is, 4.5 is converted to 4, and 5.5 is converted to 6."
  exceptions:
  - type: System.OverflowException
    commentId: T:System.OverflowException
    description: "\n<em>value</em> is less than zero or greater than <xref href=\"System.UInt64.MaxValue\" data-throw-if-not-resolved=\"false\"></xref>. "
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Convert.ToUInt64(System.Int16)
  commentId: M:System.Convert.ToUInt64(System.Int16)
  id: ToUInt64(System.Int16)
  parent: System.Convert
  langs:
  - csharp
  - vb
  name: ToUInt64(Int16)
  fullName: System.Convert.ToUInt64(System.Int16)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Convert.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToUInt64
    path: src/mscorlib/src/System/Convert.cs
    startLine: 1399
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  summary: Converts the value of the specified 16-bit signed integer to the equivalent 64-bit unsigned integer.
  syntax:
    content: public static ulong ToUInt64(short value)
    content.vb: Public Shared Function ToUInt64(value As Short) As ULong
    parameters:
    - id: value
      type: System.Int16
      description: 'The 16-bit signed integer to convert. '
    return:
      type: System.UInt64
      description: A 64-bit unsigned integer that is equivalent to <em>value</em>.
  exceptions:
  - type: System.OverflowException
    commentId: T:System.OverflowException
    description: "\n<em>value</em> is less than zero. "
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Convert.ToUInt64(System.Int32)
  commentId: M:System.Convert.ToUInt64(System.Int32)
  id: ToUInt64(System.Int32)
  parent: System.Convert
  langs:
  - csharp
  - vb
  name: ToUInt64(Int32)
  fullName: System.Convert.ToUInt64(System.Int32)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Convert.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToUInt64
    path: src/mscorlib/src/System/Convert.cs
    startLine: 1411
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  summary: Converts the value of the specified 32-bit signed integer to an equivalent 64-bit unsigned integer.
  syntax:
    content: public static ulong ToUInt64(int value)
    content.vb: Public Shared Function ToUInt64(value As Integer) As ULong
    parameters:
    - id: value
      type: System.Int32
      description: 'The 32-bit signed integer to convert. '
    return:
      type: System.UInt64
      description: A 64-bit unsigned integer that is equivalent to <em>value</em>.
  exceptions:
  - type: System.OverflowException
    commentId: T:System.OverflowException
    description: "\n<em>value</em> is less than zero. "
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Convert.ToUInt64(System.Int64)
  commentId: M:System.Convert.ToUInt64(System.Int64)
  id: ToUInt64(System.Int64)
  parent: System.Convert
  langs:
  - csharp
  - vb
  name: ToUInt64(Int64)
  fullName: System.Convert.ToUInt64(System.Int64)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Convert.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToUInt64
    path: src/mscorlib/src/System/Convert.cs
    startLine: 1423
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  summary: Converts the value of the specified 64-bit signed integer to an equivalent 64-bit unsigned integer.
  syntax:
    content: public static ulong ToUInt64(long value)
    content.vb: Public Shared Function ToUInt64(value As Long) As ULong
    parameters:
    - id: value
      type: System.Int64
      description: 'The 64-bit signed integer to convert. '
    return:
      type: System.UInt64
      description: A 64-bit unsigned integer that is equivalent to <em>value</em>.
  exceptions:
  - type: System.OverflowException
    commentId: T:System.OverflowException
    description: "\n<em>value</em> is less than zero. "
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Convert.ToUInt64(System.Object)
  commentId: M:System.Convert.ToUInt64(System.Object)
  id: ToUInt64(System.Object)
  parent: System.Convert
  langs:
  - csharp
  - vb
  name: ToUInt64(Object)
  fullName: System.Convert.ToUInt64(System.Object)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Convert.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToUInt64
    path: src/mscorlib/src/System/Convert.cs
    startLine: 1366
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  summary: Converts the value of the specified object to a 64-bit unsigned integer.
  syntax:
    content: public static ulong ToUInt64(object value)
    content.vb: Public Shared Function ToUInt64(value As Object) As ULong
    parameters:
    - id: value
      type: System.Object
      description: 'An object that implements the <xref href="System.IConvertible" data-throw-if-not-resolved="false"></xref> interface, or null. '
    return:
      type: System.UInt64
      description: A 64-bit unsigned integer that is equivalent to <em>value</em>, or zero if <em>value</em> is null.
  exceptions:
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "\n<em>value</em> is not in an appropriate format."
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "\n<em>value</em> does not implement the <xref href=\"System.IConvertible\" data-throw-if-not-resolved=\"false\"></xref> interface. -or-The conversion is not supported."
  - type: System.OverflowException
    commentId: T:System.OverflowException
    description: "\n<em>value</em> represents a number that is less than <xref href=\"System.UInt64.MinValue\" data-throw-if-not-resolved=\"false\"></xref> or greater than <xref href=\"System.UInt64.MaxValue\" data-throw-if-not-resolved=\"false\"></xref>."
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Convert.ToUInt64(System.Object,System.IFormatProvider)
  commentId: M:System.Convert.ToUInt64(System.Object,System.IFormatProvider)
  id: ToUInt64(System.Object,System.IFormatProvider)
  parent: System.Convert
  langs:
  - csharp
  - vb
  name: ToUInt64(Object, IFormatProvider)
  fullName: System.Convert.ToUInt64(System.Object, System.IFormatProvider)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Convert.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToUInt64
    path: src/mscorlib/src/System/Convert.cs
    startLine: 1371
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  summary: Converts the value of the specified object to a 64-bit unsigned integer, using the specified culture-specific formatting information.
  syntax:
    content: public static ulong ToUInt64(object value, IFormatProvider provider)
    content.vb: Public Shared Function ToUInt64(value As Object, provider As IFormatProvider) As ULong
    parameters:
    - id: value
      type: System.Object
      description: 'An object that implements the <xref href="System.IConvertible" data-throw-if-not-resolved="false"></xref> interface. '
    - id: provider
      type: System.IFormatProvider
      description: 'An object that supplies culture-specific formatting information. '
    return:
      type: System.UInt64
      description: A 64-bit unsigned integer that is equivalent to <em>value</em>, or zero if <em>value</em> is null.
  exceptions:
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "\n<em>value</em> is not in an appropriate format."
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "\n<em>value</em> does not implement the <xref href=\"System.IConvertible\" data-throw-if-not-resolved=\"false\"></xref> interface. -or-The conversion is not supported."
  - type: System.OverflowException
    commentId: T:System.OverflowException
    description: "\n<em>value</em> represents a number that is less than <xref href=\"System.UInt64.MinValue\" data-throw-if-not-resolved=\"false\"></xref> or greater than <xref href=\"System.UInt64.MaxValue\" data-throw-if-not-resolved=\"false\"></xref>."
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Convert.ToUInt64(System.SByte)
  commentId: M:System.Convert.ToUInt64(System.SByte)
  id: ToUInt64(System.SByte)
  parent: System.Convert
  langs:
  - csharp
  - vb
  name: ToUInt64(SByte)
  fullName: System.Convert.ToUInt64(System.SByte)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Convert.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToUInt64
    path: src/mscorlib/src/System/Convert.cs
    startLine: 1387
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  summary: Converts the value of the specified 8-bit signed integer to the equivalent 64-bit unsigned integer.
  syntax:
    content: public static ulong ToUInt64(sbyte value)
    content.vb: Public Shared Function ToUInt64(value As SByte) As ULong
    parameters:
    - id: value
      type: System.SByte
      description: 'The 8-bit signed integer to convert. '
    return:
      type: System.UInt64
      description: A 64-bit unsigned integer that is equivalent to <em>value</em>.
  exceptions:
  - type: System.OverflowException
    commentId: T:System.OverflowException
    description: "\n<em>value</em> is less than zero. "
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Convert.ToUInt64(System.Single)
  commentId: M:System.Convert.ToUInt64(System.Single)
  id: ToUInt64(System.Single)
  parent: System.Convert
  langs:
  - csharp
  - vb
  name: ToUInt64(Single)
  fullName: System.Convert.ToUInt64(System.Single)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Convert.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToUInt64
    path: src/mscorlib/src/System/Convert.cs
    startLine: 1435
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  summary: Converts the value of the specified single-precision floating-point number to an equivalent 64-bit unsigned integer.
  syntax:
    content: public static ulong ToUInt64(float value)
    content.vb: Public Shared Function ToUInt64(value As Single) As ULong
    parameters:
    - id: value
      type: System.Single
      description: 'The single-precision floating-point number to convert. '
    return:
      type: System.UInt64
      description: "\n<em>value</em>, rounded to the nearest 64-bit unsigned integer. If <em>value</em> is halfway between two whole numbers, the even number is returned; that is, 4.5 is converted to 4, and 5.5 is converted to 6."
  exceptions:
  - type: System.OverflowException
    commentId: T:System.OverflowException
    description: "\n<em>value</em> is less than zero or greater than <xref href=\"System.UInt64.MaxValue\" data-throw-if-not-resolved=\"false\"></xref>. "
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Convert.ToUInt64(System.String)
  commentId: M:System.Convert.ToUInt64(System.String)
  id: ToUInt64(System.String)
  parent: System.Convert
  langs:
  - csharp
  - vb
  name: ToUInt64(String)
  fullName: System.Convert.ToUInt64(System.String)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Convert.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToUInt64
    path: src/mscorlib/src/System/Convert.cs
    startLine: 1450
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  summary: Converts the specified string representation of a number to an equivalent 64-bit unsigned integer.
  syntax:
    content: public static ulong ToUInt64(string value)
    content.vb: Public Shared Function ToUInt64(value As String) As ULong
    parameters:
    - id: value
      type: System.String
      description: 'A string that contains the number to convert. '
    return:
      type: System.UInt64
      description: A 64-bit signed integer that is equivalent to the number in <em>value</em>, or 0 (zero) if <em>value</em> is null.
  exceptions:
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "\n<em>value</em> does not consist of an optional sign followed by a sequence of digits (0 through 9). "
  - type: System.OverflowException
    commentId: T:System.OverflowException
    description: "\n<em>value</em> represents a number that is less than <xref href=\"System.UInt64.MinValue\" data-throw-if-not-resolved=\"false\"></xref> or greater than <xref href=\"System.UInt64.MaxValue\" data-throw-if-not-resolved=\"false\"></xref>. "
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Convert.ToUInt64(System.String,System.IFormatProvider)
  commentId: M:System.Convert.ToUInt64(System.String,System.IFormatProvider)
  id: ToUInt64(System.String,System.IFormatProvider)
  parent: System.Convert
  langs:
  - csharp
  - vb
  name: ToUInt64(String, IFormatProvider)
  fullName: System.Convert.ToUInt64(System.String, System.IFormatProvider)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Convert.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToUInt64
    path: src/mscorlib/src/System/Convert.cs
    startLine: 1457
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  summary: Converts the specified string representation of a number to an equivalent 64-bit unsigned integer, using the specified culture-specific formatting information.
  syntax:
    content: public static ulong ToUInt64(string value, IFormatProvider provider)
    content.vb: Public Shared Function ToUInt64(value As String, provider As IFormatProvider) As ULong
    parameters:
    - id: value
      type: System.String
      description: 'A string that contains the number to convert. '
    - id: provider
      type: System.IFormatProvider
      description: 'An object that supplies culture-specific formatting information. '
    return:
      type: System.UInt64
      description: A 64-bit unsigned integer that is equivalent to the number in <em>value</em>, or 0 (zero) if <em>value</em> is null.
  exceptions:
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "\n<em>value</em> does not consist of an optional sign followed by a sequence of digits (0 through 9). "
  - type: System.OverflowException
    commentId: T:System.OverflowException
    description: "\n<em>value</em> represents a number that is less than <xref href=\"System.UInt64.MinValue\" data-throw-if-not-resolved=\"false\"></xref> or greater than <xref href=\"System.UInt64.MaxValue\" data-throw-if-not-resolved=\"false\"></xref>. "
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Convert.ToUInt64(System.String,System.Int32)
  commentId: M:System.Convert.ToUInt64(System.String,System.Int32)
  id: ToUInt64(System.String,System.Int32)
  parent: System.Convert
  langs:
  - csharp
  - vb
  name: ToUInt64(String, Int32)
  fullName: System.Convert.ToUInt64(System.String, System.Int32)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Convert.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToUInt64
    path: src/mscorlib/src/System/Convert.cs
    startLine: 2106
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  summary: Converts the string representation of a number in a specified base to an equivalent 64-bit unsigned integer.
  syntax:
    content: public static ulong ToUInt64(string value, int fromBase)
    content.vb: Public Shared Function ToUInt64(value As String, fromBase As Integer) As ULong
    parameters:
    - id: value
      type: System.String
      description: 'A string that contains the number to convert. '
    - id: fromBase
      type: System.Int32
      description: 'The base of the number in <em>value</em>, which must be 2, 8, 10, or 16. '
    return:
      type: System.UInt64
      description: A 64-bit unsigned integer that is equivalent to the number in <em>value</em>, or 0 (zero) if <em>value</em> is null.
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<em>fromBase</em> is not 2, 8, 10, or 16. -or-<em>value</em>, which represents a non-base 10 unsigned number, is prefixed with a negative sign. "
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<em>value</em> is <xref href=\"System.String.Empty\" data-throw-if-not-resolved=\"false\"></xref>. "
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "\n<em>value</em> contains a character that is not a valid digit in the base specified by <em>fromBase</em>. The exception message indicates that there are no digits to convert if the first character in <em>value</em> is invalid; otherwise, the message indicates that <em>value</em> contains invalid trailing characters."
  - type: System.OverflowException
    commentId: T:System.OverflowException
    description: "\n<em>value</em>, which represents a non-base 10 unsigned number, is prefixed with a negative sign.-or-<em>value</em> represents a number that is less than <xref href=\"System.UInt64.MinValue\" data-throw-if-not-resolved=\"false\"></xref> or greater than <xref href=\"System.UInt64.MaxValue\" data-throw-if-not-resolved=\"false\"></xref>."
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Convert.ToUInt64(System.UInt16)
  commentId: M:System.Convert.ToUInt64(System.UInt16)
  id: ToUInt64(System.UInt16)
  parent: System.Convert
  langs:
  - csharp
  - vb
  name: ToUInt64(UInt16)
  fullName: System.Convert.ToUInt64(System.UInt16)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Convert.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToUInt64
    path: src/mscorlib/src/System/Convert.cs
    startLine: 1406
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  summary: Converts the value of the specified 16-bit unsigned integer to the equivalent 64-bit unsigned integer.
  syntax:
    content: public static ulong ToUInt64(ushort value)
    content.vb: Public Shared Function ToUInt64(value As UShort) As ULong
    parameters:
    - id: value
      type: System.UInt16
      description: 'The 16-bit unsigned integer to convert. '
    return:
      type: System.UInt64
      description: A 64-bit unsigned integer that is equivalent to <em>value</em>.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Convert.ToUInt64(System.UInt32)
  commentId: M:System.Convert.ToUInt64(System.UInt32)
  id: ToUInt64(System.UInt32)
  parent: System.Convert
  langs:
  - csharp
  - vb
  name: ToUInt64(UInt32)
  fullName: System.Convert.ToUInt64(System.UInt32)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Convert.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToUInt64
    path: src/mscorlib/src/System/Convert.cs
    startLine: 1418
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  summary: Converts the value of the specified 32-bit unsigned integer to an equivalent 64-bit unsigned integer.
  syntax:
    content: public static ulong ToUInt64(uint value)
    content.vb: Public Shared Function ToUInt64(value As UInteger) As ULong
    parameters:
    - id: value
      type: System.UInt32
      description: 'The 32-bit unsigned integer to convert. '
    return:
      type: System.UInt64
      description: A 64-bit unsigned integer that is equivalent to <em>value</em>.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Convert.ToUInt64(System.UInt64)
  commentId: M:System.Convert.ToUInt64(System.UInt64)
  id: ToUInt64(System.UInt64)
  parent: System.Convert
  langs:
  - csharp
  - vb
  name: ToUInt64(UInt64)
  fullName: System.Convert.ToUInt64(System.UInt64)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Convert.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToUInt64
    path: src/mscorlib/src/System/Convert.cs
    startLine: 1430
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  summary: Returns the specified 64-bit unsigned integer; no actual conversion is performed.
  syntax:
    content: public static ulong ToUInt64(ulong value)
    content.vb: Public Shared Function ToUInt64(value As ULong) As ULong
    parameters:
    - id: value
      type: System.UInt64
      description: 'The 64-bit unsigned integer to return. '
    return:
      type: System.UInt64
      description: "\n<em>value</em> is returned unchanged."
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  fullName: System.Type
- uid: System.IFormatProvider
  parent: System
  isExternal: false
  name: IFormatProvider
  fullName: System.IFormatProvider
- uid: System.TypeCode
  parent: System
  isExternal: false
  name: TypeCode
  fullName: System.TypeCode
- uid: System.Char[]
  isExternal: false
  name: Char[]
  fullName: System.Char[]
  fullname.vb: System.Char()
  name.vb: Char()
  spec.csharp:
  - uid: System.Char
    name: Char
    fullName: System.Char
  - name: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Char
    name: Char
    fullName: System.Char
  - name: ()
    fullName: ()
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  fullName: System.Int32
- uid: System.Byte[]
  isExternal: false
  name: Byte[]
  fullName: System.Byte[]
  fullname.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
  - name: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
  - name: ()
    fullName: ()
- uid: System.String
  parent: System
  isExternal: false
  name: String
  fullName: System.String
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  fullName: System.Boolean
- uid: System.Byte
  parent: System
  isExternal: false
  name: Byte
  fullName: System.Byte
- uid: System.Decimal
  parent: System
  isExternal: false
  name: Decimal
  fullName: System.Decimal
- uid: System.Double
  parent: System
  isExternal: false
  name: Double
  fullName: System.Double
- uid: System.Int16
  parent: System
  isExternal: false
  name: Int16
  fullName: System.Int16
- uid: System.Int64
  parent: System
  isExternal: false
  name: Int64
  fullName: System.Int64
- uid: System.SByte
  parent: System
  isExternal: false
  name: SByte
  fullName: System.SByte
- uid: System.Single
  parent: System
  isExternal: false
  name: Single
  fullName: System.Single
- uid: System.UInt16
  parent: System
  isExternal: false
  name: UInt16
  fullName: System.UInt16
- uid: System.UInt32
  parent: System
  isExternal: false
  name: UInt32
  fullName: System.UInt32
- uid: System.UInt64
  parent: System
  isExternal: false
  name: UInt64
  fullName: System.UInt64
- uid: System.Char
  parent: System
  isExternal: false
  name: Char
  fullName: System.Char
- uid: System.DateTime
  parent: System
  isExternal: false
  name: DateTime
  fullName: System.DateTime
- uid: System.InvalidCastException
  isExternal: false
  name: InvalidCastException
  fullName: System.InvalidCastException
- uid: System.FormatException
  parent: System
  isExternal: false
  name: FormatException
  fullName: System.FormatException
- uid: System.OverflowException
  isExternal: false
  name: OverflowException
  fullName: System.OverflowException
- uid: System.ArgumentNullException
  isExternal: false
  name: ArgumentNullException
  fullName: System.ArgumentNullException
- uid: System.ArgumentException
  parent: System
  isExternal: false
  name: ArgumentException
  fullName: System.ArgumentException
- uid: System.ArgumentOutOfRangeException
  isExternal: false
  name: ArgumentOutOfRangeException
  fullName: System.ArgumentOutOfRangeException
